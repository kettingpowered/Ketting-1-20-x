a com/mojang/math/Axis
	a XN
	b XP
	c YN
	d YP
	e ZN
	f ZP
aag$b net/minecraft/network/protocol/game/ServerboundInteractPacket$ActionType
	a INTERACT
	b ATTACK
	c INTERACT_AT
	d reader
	e $VALUES
	a ()[Laag$b; $values
aag$c net/minecraft/network/protocol/game/ServerboundInteractPacket$Handler
	a ()V onAttack
	a (Lnet/minecraft/world/EnumHand;)V onInteraction
	a (Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/Vec3D;)V onInteraction
aag$d net/minecraft/network/protocol/game/ServerboundInteractPacket$InteractionAction
	a hand
	a ()Laag$b; getType
	a (Laag$c;)V dispatch
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
aag$e net/minecraft/network/protocol/game/ServerboundInteractPacket$InteractionAtLocationAction
	a hand
	b location
	a ()Laag$b; getType
	a (Laag$c;)V dispatch
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
aak$d net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$StatusOnly
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	b (Lnet/minecraft/network/PacketDataSerializer;)Laak$d; read
acg$a net/minecraft/network/protocol/status/ServerStatus$Favicon
	a WIDTH
	b HEIGHT
	c CODEC
	d iconBytes
	e PREFIX
	a ()[B iconBytes
acm$a net/minecraft/network/syncher/EntityDataSerializer$ForValueType
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
aco$b net/minecraft/network/syncher/SynchedEntityData$DataValue
	a id
	b serializer
	c value
	a ()I id
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketDataSerializer;I)Laco$b; read
	a (Lnet/minecraft/network/PacketDataSerializer;ILnet/minecraft/network/syncher/DataWatcherSerializer;)Laco$b; read
	a (Lnet/minecraft/network/syncher/DataWatcherObject;Ljava/lang/Object;)Laco$b; create
	b ()Lnet/minecraft/network/syncher/DataWatcherSerializer; serializer
	c ()Ljava/lang/Object; value
acy$a net/minecraft/resources/RegistryDataLoader$Loader
acy$b net/minecraft/resources/RegistryDataLoader$RegistryData
	a key
	b elementCodec
	a ()Lnet/minecraft/resources/ResourceKey; key
	a (Lcom/mojang/serialization/Lifecycle;Ljava/util/Map;)Lcom/mojang/datafixers/util/Pair; create
	b ()Lcom/mojang/serialization/Codec; elementCodec
adb$a net/minecraft/resources/RegistryOps$RegistryInfo
	a owner
	b getter
	c elementsLifecycle
	a ()Lnet/minecraft/core/HolderOwner; owner
	b ()Lnet/minecraft/core/HolderGetter; getter
	c ()Lcom/mojang/serialization/Lifecycle; elementsLifecycle
adb$b net/minecraft/resources/RegistryOps$RegistryInfoLookup
	a (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; lookup
adc$a net/minecraft/resources/ResourceKey$InternKey
	a registry
	b location
	a ()Lnet/minecraft/resources/MinecraftKey; registry
	b ()Lnet/minecraft/resources/MinecraftKey; location
add$a net/minecraft/resources/ResourceLocation$Dummy
add$b net/minecraft/resources/ResourceLocation$Serializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/resources/MinecraftKey; deserialize
	a (Lnet/minecraft/resources/MinecraftKey;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
adg net/minecraft/server/ChainedJsonException
	a entries
	b message
	a (Ljava/lang/Exception;)Ladg; forException
	a (Ljava/lang/String;)V prependJsonKey
	b (Ljava/lang/String;)V setFilenameAndFlush
adg$a net/minecraft/server/ChainedJsonException$Entry
	a filename
	b jsonKeys
	a ()Ljava/lang/String; getFilename
	a (Ljava/lang/String;)V addJsonKey
	b ()Ljava/lang/String; getJsonKeys
adr$a net/minecraft/server/ServerFunctionManager$ExecutionContext
	b depth
	c tracer
	d commandQueue
	e nestedCalls
	a (Ljava/lang/String;)V reportError
	a (Lnet/minecraft/commands/CustomFunction;Lnet/minecraft/commands/CommandListenerWrapper;)V delayFunctionCall
	b (Lnet/minecraft/commands/CustomFunction;Lnet/minecraft/commands/CommandListenerWrapper;)I runTopCommand
adr$b net/minecraft/server/ServerFunctionManager$QueuedCommand
	a sender
	b depth
	c entry
	a (Lnet/minecraft/server/CustomFunctionData;Ljava/util/Deque;ILadr$c;)V execute
adr$c net/minecraft/server/ServerFunctionManager$TraceCallbacks
	a (ILjava/lang/String;)V onCommand
	a (ILjava/lang/String;I)V onReturn
	a (ILnet/minecraft/resources/MinecraftKey;I)V onCall
	b (ILjava/lang/String;)V onError
adw$a net/minecraft/server/WorldLoader$DataLoadContext
	a resources
	b dataConfiguration
	c datapackWorldgen
	d datapackDimensions
	a ()Lnet/minecraft/server/packs/resources/IResourceManager; resources
	b ()Lnet/minecraft/world/level/WorldDataConfiguration; dataConfiguration
	c ()Lnet/minecraft/core/IRegistryCustom$Dimension; datapackWorldgen
	d ()Lnet/minecraft/core/IRegistryCustom$Dimension; datapackDimensions
adw$b net/minecraft/server/WorldLoader$DataLoadOutput
	a cookie
	b finalDimensions
	a ()Ljava/lang/Object; cookie
	b ()Lnet/minecraft/core/IRegistryCustom$Dimension; finalDimensions
adw$c net/minecraft/server/WorldLoader$InitConfig
	a packConfig
	b commandSelection
	c functionCompilationLevel
	a ()Ladw$d; packConfig
	b ()Lnet/minecraft/commands/CommandDispatcher$ServerType; commandSelection
	c ()I functionCompilationLevel
adw$d net/minecraft/server/WorldLoader$PackConfig
	a packRepository
	b initialDataConfig
	c safeMode
	d initMode
	a ()Lcom/mojang/datafixers/util/Pair; createResourceManager
	b ()Lnet/minecraft/server/packs/repository/ResourcePackRepository; packRepository
	c ()Lnet/minecraft/world/level/WorldDataConfiguration; initialDataConfig
	d ()Z safeMode
	e ()Z initMode
adw$e net/minecraft/server/WorldLoader$ResultFactory
adw$f net/minecraft/server/WorldLoader$WorldDataSupplier
ady$a net/minecraft/server/advancements/AdvancementVisibilityEvaluator$Output
ady$b net/minecraft/server/advancements/AdvancementVisibilityEvaluator$VisibilityRule
	a SHOW
	b HIDE
	c NO_CHANGE
	d $VALUES
	a ()[Lady$b; $values
aed net/minecraft/server/chase/ChaseClient
	a LOGGER
	b RECONNECT_INTERVAL_SECONDS
	c serverHost
	d serverPort
	e server
	f wantsToRun
	g socket
	h thread
	a ()V start
	a (Ljava/lang/String;)V handleMessage
	a (Ljava/util/Scanner;)V handleTeleport
	b ()V stop
	b (Ljava/lang/String;)V executeCommand
	b (Ljava/util/Scanner;)Ljava/util/Optional; parseTarget
	c ()V run
aed$a net/minecraft/server/chase/ChaseClient$TeleportTarget
	a level
	b pos
	c rot
	a ()Lnet/minecraft/resources/ResourceKey; level
	b ()Lnet/minecraft/world/phys/Vec3D; pos
	c ()Lnet/minecraft/world/phys/Vec2F; rot
aee net/minecraft/server/chase/ChaseServer
	a LOGGER
	b serverBindAddress
	c serverPort
	d playerList
	e broadcastIntervalMs
	f wantsToRun
	g serverSocket
	h clientSockets
	a ()V start
	b ()V stop
	c ()V runSender
	d ()V runAcceptor
	e ()Laee$a; getPlayerPosition
aee$a net/minecraft/server/chase/ChaseServer$PlayerPosition
	a dimensionName
	b x
	c y
	d z
	e yRot
	f xRot
	a ()Ljava/lang/String; dimensionName
	b ()D x
	c ()D y
	d ()D z
	e ()F yRot
	f ()F xRot
	g ()Ljava/lang/String; format
aem net/minecraft/server/commands/ChaseCommand
	a DIMENSION_NAMES
	b DEFAULT_CONNECT_HOST
	c DEFAULT_BIND_ADDRESS
	d DEFAULT_PORT
	e BROADCAST_INTERVAL_MS
	f chaseServer
	g chaseClient
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;)I stop
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/lang/String;I)I lead
	b (Lnet/minecraft/commands/CommandListenerWrapper;)Z alreadyRunning
	b (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/lang/String;I)I follow
aeo$b net/minecraft/server/commands/CloneCommands$CommandFunction
aeo$c net/minecraft/server/commands/CloneCommands$DimensionAndPosition
	a dimension
	b position
	a ()Lnet/minecraft/server/level/WorldServer; dimension
	b ()Lnet/minecraft/core/BlockPosition; position
aeq$a net/minecraft/server/commands/DataPackCommand$Inserter
aes$a net/minecraft/server/commands/DebugCommand$Tracer
	b INDENT_OFFSET
	c output
	d lastIndent
	e waitingForResult
	M_ ()Z shouldInformAdmins
	a (I)V indentAndSave
	a (ILjava/lang/String;)V onCommand
	a (ILjava/lang/String;I)V onReturn
	a (ILnet/minecraft/resources/MinecraftKey;I)V onCall
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V sendSystemMessage
	b (I)V printIndent
	b (ILjava/lang/String;)V onError
	d_ ()Z acceptsSuccess
	e ()V newLine
	e_ ()Z alwaysAccepts
	j_ ()Z acceptsFailure
aet net/minecraft/server/commands/DebugMobSpawningCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/entity/EnumCreatureType;Lnet/minecraft/core/BlockPosition;)I spawnMobs
aeu net/minecraft/server/commands/DebugPathCommand
	a ERROR_NOT_MOB
	b ERROR_NO_PATH
	c ERROR_NOT_COMPLETE
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/core/BlockPosition;)I fillBlocks
af$a net/minecraft/advancements/AdvancementList$Listener
	a ()V onAdvancementsCleared
	a (Lnet/minecraft/advancements/Advancement;)V onAddAdvancementRoot
	b (Lnet/minecraft/advancements/Advancement;)V onRemoveAdvancementRoot
	c (Lnet/minecraft/advancements/Advancement;)V onAddAdvancementTask
	d (Lnet/minecraft/advancements/Advancement;)V onRemoveAdvancementTask
afa$a net/minecraft/server/commands/ExecuteCommand$CommandNumericPredicate
afa$b net/minecraft/server/commands/ExecuteCommand$CommandPredicate
afq$a net/minecraft/server/commands/LootCommand$Callback
afq$b net/minecraft/server/commands/LootCommand$DropConsumer
afq$c net/minecraft/server/commands/LootCommand$TailProvider
ag$a net/minecraft/advancements/AdvancementProgress$Serializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/advancements/AdvancementProgress; deserialize
	a (Lnet/minecraft/advancements/AdvancementProgress;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
aga net/minecraft/server/commands/RaidCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;)I glow
	a (Lnet/minecraft/commands/CommandListenerWrapper;I)I setBadOmenLevel
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/network/chat/IChatBaseComponent;)I playSound
	a (Lnet/minecraft/server/level/EntityPlayer;)Lnet/minecraft/world/entity/raid/Raid; getRaid
	b (Lnet/minecraft/commands/CommandListenerWrapper;)I spawnLeader
	b (Lnet/minecraft/commands/CommandListenerWrapper;I)I start
	c (Lnet/minecraft/commands/CommandListenerWrapper;)I stop
	d (Lnet/minecraft/commands/CommandListenerWrapper;)I check
agd net/minecraft/server/commands/ResetChunksCommand
	a LOGGER
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;IZ)I resetChunks
ags$a net/minecraft/server/commands/SpreadPlayersCommand$Position
	a x
	b z
	a ()V normalize
	a (DDDD)Z clamp
	a (Lags$a;)D dist
	a (Lnet/minecraft/util/RandomSource;DDDD)V randomize
	a (Lnet/minecraft/world/level/IBlockAccess;I)I getSpawnY
	b ()D getLength
	b (Lags$a;)V moveAway
	b (Lnet/minecraft/world/level/IBlockAccess;I)Z isSafe
agz$a net/minecraft/server/commands/TeleportCommand$LookAt
	a position
	b entity
	c anchor
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/entity/Entity;)V perform
ah$a net/minecraft/advancements/AdvancementRewards$Builder
	a experience
	b loot
	c recipes
	d function
	a ()Lnet/minecraft/advancements/AdvancementRewards; build
	a (I)Lah$a; experience
	a (Lnet/minecraft/resources/MinecraftKey;)Lah$a; loot
	b (I)Lah$a; addExperience
	b (Lnet/minecraft/resources/MinecraftKey;)Lah$a; addLootTable
	c (Lnet/minecraft/resources/MinecraftKey;)Lah$a; recipe
	d (Lnet/minecraft/resources/MinecraftKey;)Lah$a; addRecipe
	e (Lnet/minecraft/resources/MinecraftKey;)Lah$a; function
	f (Lnet/minecraft/resources/MinecraftKey;)Lah$a; runs
ahe net/minecraft/server/commands/WardenSpawnTrackerCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;)I resetTracker
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;I)I setWarningLevel
ahk$a net/minecraft/server/commands/data/DataCommands$DataManipulator
ahk$b net/minecraft/server/commands/data/DataCommands$DataManipulatorDecorator
ahk$c net/minecraft/server/commands/data/DataCommands$DataProvider
	a (Lcom/mojang/brigadier/builder/ArgumentBuilder;Ljava/util/function/Function;)Lcom/mojang/brigadier/builder/ArgumentBuilder; wrap
	a (Lcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/server/commands/data/CommandDataAccessor; access
aia net/minecraft/server/level/BlockDestructionProgress
	a id
	b pos
	c progress
	d updatedRenderTick
	a ()I getId
	a (I)V setProgress
	a (Laia;)I compareTo
	b ()Lnet/minecraft/core/BlockPosition; getPos
	b (I)V updateTick
	c ()I getProgress
	d ()I getUpdatedRenderTick
aib$b net/minecraft/server/level/ChunkHolder$ChunkSaveDebug
	a thread
	b future
	c source
aib$d net/minecraft/server/level/ChunkHolder$LevelChangeListener
aib$e net/minecraft/server/level/ChunkHolder$PlayerProvider
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Z)Ljava/util/List; getPlayers
aic$a net/minecraft/server/level/ChunkMap$DistanceManager
	a (J)Z isChunkToRemove
	a (JILnet/minecraft/server/level/PlayerChunk;I)Lnet/minecraft/server/level/PlayerChunk; updateChunkScheduling
	b (J)Lnet/minecraft/server/level/PlayerChunk; getChunk
aie$a net/minecraft/server/level/ChunkTaskPriorityQueueSorter$Message
	a task
	b pos
	c level
aie$b net/minecraft/server/level/ChunkTaskPriorityQueueSorter$Release
	a task
	b pos
	c clearQueue
aii$a net/minecraft/server/level/DistanceManager$ChunkTicketTracker
	a (I)I runDistanceUpdates
	a (JI)V setLevel
	b (J)I getLevelFromSource
	c (J)I getLevel
aii$b net/minecraft/server/level/DistanceManager$FixedPlayerDistanceChunkTracker
	a chunks
	b maxDistance
	a ()V runAllUpdates
	a (JI)V setLevel
	a (JII)V onLevelChange
	a (Ljava/lang/String;)V dumpChunks
	b (J)I getLevelFromSource
	c (J)I getLevel
	d (J)Z havePlayer
aii$c net/minecraft/server/level/DistanceManager$PlayerTicketTracker
	e viewDistance
	f queueLevels
	g toUpdate
	a ()V runAllUpdates
	a (I)V updateViewDistance
	a (JII)V onLevelChange
	a (JIZZ)V onLevelChange
	c (I)Z haveTicketFor
ain$a net/minecraft/server/level/ServerChunkCache$ChunkAndHolder
	a chunk
	b holder
	a ()Lnet/minecraft/world/level/chunk/Chunk; chunk
	b ()Lnet/minecraft/server/level/PlayerChunk; holder
ain$b net/minecraft/server/level/ServerChunkCache$MainThreadExecutor
	at ()Z scheduleExecutables
	au ()Ljava/lang/Thread; getRunningThread
	d (Ljava/lang/Runnable;)V doRunTask
	e (Ljava/lang/Runnable;)Z shouldRun
	f (Ljava/lang/Runnable;)Ljava/lang/Runnable; wrapRunnable
	x ()Z pollTask
aip$a net/minecraft/server/level/ServerLevel$EntityCallbacks
	a (Ljava/lang/Object;)V onSectionChange
	a (Lnet/minecraft/world/entity/Entity;)V onCreated
	b (Ljava/lang/Object;)V onTrackingEnd
	b (Lnet/minecraft/world/entity/Entity;)V onDestroyed
	c (Ljava/lang/Object;)V onTrackingStart
	c (Lnet/minecraft/world/entity/Entity;)V onTickingStart
	d (Ljava/lang/Object;)V onTickingEnd
	d (Lnet/minecraft/world/entity/Entity;)V onTickingEnd
	e (Ljava/lang/Object;)V onTickingStart
	e (Lnet/minecraft/world/entity/Entity;)V onTrackingStart
	f (Ljava/lang/Object;)V onDestroyed
	f (Lnet/minecraft/world/entity/Entity;)V onTrackingEnd
	g (Ljava/lang/Object;)V onCreated
	g (Lnet/minecraft/world/entity/Entity;)V onSectionChange
ajb net/minecraft/server/level/progress/ProcessorChunkProgressListener
	a delegate
	b mailbox
	a ()V start
	a (Lnet/minecraft/server/level/progress/WorldLoadListener;Ljava/util/concurrent/Executor;)Lajb; createStarted
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;)V updateSpawnPos
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/world/level/chunk/ChunkStatus;)V onStatusChange
	b ()V stop
ajc net/minecraft/server/level/progress/StoringChunkProgressListener
	a delegate
	b statuses
	c spawnPos
	d fullDiameter
	e radius
	f diameter
	g started
	a ()V start
	a (II)Lnet/minecraft/world/level/chunk/ChunkStatus; getStatus
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;)V updateSpawnPos
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/world/level/chunk/ChunkStatus;)V onStatusChange
	b ()V stop
	c ()I getFullDiameter
	d ()I getDiameter
	e ()I getProgress
aji$a net/minecraft/server/network/ServerGamePacketListenerImpl$EntityInteraction
ajo$a net/minecraft/server/network/TextFilterClient$IgnoreStrategy
	a NEVER_IGNORE
	b IGNORE_FULLY_FILTERED
ajo$b net/minecraft/server/network/TextFilterClient$JoinOrLeaveEncoder
ajo$c net/minecraft/server/network/TextFilterClient$MessageEncoder
ajo$d net/minecraft/server/network/TextFilterClient$PlayerContext
	c profile
	d streamExecutor
	a ()V join
	a (Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; processStreamMessage
	a (Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; processMessageBundle
	b ()V leave
ajo$e net/minecraft/server/network/TextFilterClient$RequestFailedException
ajv$a net/minecraft/server/packs/PackResources$ResourceOutput
ake$a net/minecraft/server/packs/linkfs/LinkFileSystem$Builder
	a root
	a (Ljava/lang/String;)Ljava/nio/file/FileSystem; build
	a (Ljava/util/List;Ljava/lang/String;Ljava/nio/file/Path;)Lake$a; put
	a (Ljava/util/List;Ljava/nio/file/Path;)Lake$a; put
ake$b net/minecraft/server/packs/linkfs/LinkFileSystem$DirectoryEntry
	a children
	b files
	a ()Ljava/util/Map; children
	b ()Ljava/util/Map; files
akf$a net/minecraft/server/packs/linkfs/PathContents$DirectoryContents
	c children
	a ()Ljava/util/Map; children
akf$b net/minecraft/server/packs/linkfs/PathContents$FileContents
	c contents
	a ()Ljava/nio/file/Path; contents
akq$a net/minecraft/server/packs/repository/Pack$Info
	a description
	b format
	c requestedFeatures
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; description
	a (Lnet/minecraft/server/packs/EnumResourcePackType;)Lnet/minecraft/server/packs/repository/EnumResourcePackVersion; compatibility
	b ()I format
	c ()Lnet/minecraft/world/flag/FeatureFlagSet; requestedFeatures
akq$c net/minecraft/server/packs/repository/Pack$ResourcesSupplier
aky$b net/minecraft/server/packs/resources/FallbackResourceManager$EntryStack
	a fileLocation
	b metadataLocation
	c fileSources
	d metaSources
	a ()Lnet/minecraft/resources/MinecraftKey; fileLocation
	b ()Lnet/minecraft/resources/MinecraftKey; metadataLocation
	c ()Ljava/util/List; fileSources
	d ()Ljava/util/Map; metaSources
aky$c net/minecraft/server/packs/resources/FallbackResourceManager$LeakedResourceWarningInputStream
	a message
	b closed
aky$d net/minecraft/server/packs/resources/FallbackResourceManager$PackEntry
	a name
	b resources
	c filter
	a ()Ljava/lang/String; name
	a (Ljava/util/Collection;)V filterAll
	a (Lnet/minecraft/resources/MinecraftKey;)Z isFiltered
	b ()Lnet/minecraft/server/packs/IResourcePack; resources
	c ()Ljava/util/function/Predicate; filter
aky$e net/minecraft/server/packs/resources/FallbackResourceManager$ResourceWithSource
	a source
	b resource
	a ()Lnet/minecraft/server/packs/IResourcePack; source
	b ()Lnet/minecraft/server/packs/resources/IoSupplier; resource
al$a net/minecraft/advancements/CriterionTrigger$Listener
	a trigger
	b advancement
	c criterion
	a ()Lnet/minecraft/advancements/CriterionInstance; getTriggerInstance
	a (Lnet/minecraft/server/AdvancementDataPlayer;)V run
alb$a net/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier
	a (Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture; wait
alc$a net/minecraft/server/packs/resources/ProfiledReloadInstance$State
	a name
	b preparationResult
	c reloadResult
	d preparationNanos
	e reloadNanos
ale net/minecraft/server/packs/resources/ReloadableResourceManager
	a LOGGER
	b resources
	c listeners
	d type
	a ()Ljava/util/Set; getNamespaces
	a (Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;Ljava/util/List;)Lnet/minecraft/server/packs/resources/IReloadable; createReload
	a (Lnet/minecraft/resources/MinecraftKey;)Ljava/util/List; getResourceStack
	a (Lnet/minecraft/server/packs/resources/IReloadListener;)V registerReloadListener
	b ()Ljava/util/stream/Stream; listPacks
	b (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map; listResources
	c (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map; listResourceStacks
ali net/minecraft/server/packs/resources/ResourceManagerReloadListener
	a (Lalb$a;Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;Lnet/minecraft/util/profiling/GameProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; reload
	a (Lnet/minecraft/server/packs/resources/IResourceManager;)V onResourceManagerReload
aln$a net/minecraft/server/packs/resources/SimpleReloadInstance$StateFactory
amv$a net/minecraft/stats/RecipeBookSettings$TypeSettings
	a open
	b filtering
	a ()Lamv$a; copy
ank net/minecraft/tags/FlatLevelGeneratorPresetTags
	a VISIBLE
	a (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; create
ans net/minecraft/tags/TagBuilder
	a entries
	a ()Lans; create
	a (Lnet/minecraft/resources/MinecraftKey;)Lans; addElement
	a (Lnet/minecraft/tags/TagEntry;)Lans; add
	b ()Ljava/util/List; build
	b (Lnet/minecraft/resources/MinecraftKey;)Lans; addOptionalElement
	c (Lnet/minecraft/resources/MinecraftKey;)Lans; addTag
	d (Lnet/minecraft/resources/MinecraftKey;)Lans; addOptionalTag
ant$a net/minecraft/tags/TagEntry$Lookup
	a (Lnet/minecraft/resources/MinecraftKey;)Ljava/lang/Object; element
	b (Lnet/minecraft/resources/MinecraftKey;)Ljava/util/Collection; tag
anw$a net/minecraft/tags/TagLoader$EntryWithSource
	a entry
	b source
	a ()Lnet/minecraft/tags/TagEntry; entry
	b ()Ljava/lang/String; source
anx$a net/minecraft/tags/TagManager$LoadResult
	a key
	b tags
	a ()Lnet/minecraft/resources/ResourceKey; key
	b ()Ljava/util/Map; tags
any$a net/minecraft/tags/TagNetworkSerialization$NetworkPayload
	a tags
	a ()Z isEmpty
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	b (Lnet/minecraft/network/PacketDataSerializer;)Lany$a; read
any$b net/minecraft/tags/TagNetworkSerialization$TagOutput
anz net/minecraft/tags/WorldPresetTags
	a NORMAL
	b EXTENDED
	a (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; create
aob$a net/minecraft/util/AbortableIterationConsumer$Continuation
	a CONTINUE
	b ABORT
	c $VALUES
	a ()Z shouldAbort
	b ()[Laob$a; $values
aoe$a net/minecraft/util/ByIdMap$OutOfBoundsStrategy
	a ZERO
	b WRAP
	c CLAMP
	d $VALUES
	a ()[Laoe$a; $values
aog net/minecraft/util/CommonColors
	a WHITE
	b BLACK
	c RED
aoh net/minecraft/util/CommonLinks
	a GDPR
	b EULA
	c ATTRIBUTION
	d LICENSES
	e BUY_MINECRAFT_JAVA
	f ACCOUNT_SETTINGS
	g SNAPSHOT_FEEDBACK
	h RELEASE_FEEDBACK
	i SNAPSHOT_BUGS_FEEDBACK
	j ACCESSIBILITY_HELP
	k REPORTING_HELP
	l SUSPENSION_HELP
	m BLOCKING_HELP
	n START_REALMS_TRIAL
	o BUY_REALMS
	p REALMS_TERMS
	q REALMS_CONTENT_CREATION
	r REALMS_UPDATE_MOJANG_ACCOUNT
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; extendRealms
	a (Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String; extendRealms
aoj$a net/minecraft/util/Crypt$ByteArrayToKeyFunction
aoj$b net/minecraft/util/Crypt$SaltSignaturePair
	a EMPTY
	b salt
	c signature
	a ()Z isValid
	a (Lnet/minecraft/network/PacketDataSerializer;Laoj$b;)V write
	b ()[B saltAsBytes
	c ()J salt
	d ()[B signature
aoj$c net/minecraft/util/Crypt$SaltSupplier
	a secureRandom
	a ()J getLong
aol$a net/minecraft/util/CsvOutput$Builder
	a headers
	a (Ljava/io/Writer;)Lnet/minecraft/util/CSVWriter; build
	a (Ljava/lang/String;)Laol$a; addColumn
aom net/minecraft/util/CubicSampler
	a GAUSSIAN_SAMPLE_RADIUS
	b GAUSSIAN_SAMPLE_BREADTH
	c GAUSSIAN_SAMPLE_KERNEL
	a (Lnet/minecraft/world/phys/Vec3D;Laom$a;)Lnet/minecraft/world/phys/Vec3D; gaussianSampleVec3
aom$a net/minecraft/util/CubicSampler$Vec3Fetcher
aon$b net/minecraft/util/CubicSpline$Builder
	a coordinate
	b valueTransformer
	c locations
	d values
	e derivatives
	a ()Lnet/minecraft/util/CubicSpline; build
	a (FF)Laon$b; addPoint
	a (FFF)Laon$b; addPoint
	a (FLnet/minecraft/util/CubicSpline;)Laon$b; addPoint
	a (FLnet/minecraft/util/CubicSpline;F)Laon$b; addPoint
aon$c net/minecraft/util/CubicSpline$Constant
	b value
	a ()Ljava/lang/String; parityString
	a (Laon$d;)Lnet/minecraft/util/CubicSpline; mapAll
	a (Ljava/lang/Object;)F apply
	b ()F minValue
	c ()F maxValue
	d ()F value
aon$d net/minecraft/util/CubicSpline$CoordinateVisitor
aon$e net/minecraft/util/CubicSpline$Multipoint
	b coordinate
	c locations
	d values
	e derivatives
	f minValue
	g maxValue
	a ()Ljava/lang/String; parityString
	a (F[FF[FI)F linearExtend
	a (Laon$d;)Lnet/minecraft/util/CubicSpline; mapAll
	a (Ljava/lang/Object;)F apply
	a (Lnet/minecraft/util/ToFloatFunction;[FLjava/util/List;[F)Laon$e; create
	a ([F)Ljava/lang/String; toString
	a ([FF)I findIntervalStart
	a ([FLjava/util/List;[F)V validateSizes
	b ()F minValue
	c ()F maxValue
	d ()Lnet/minecraft/util/ToFloatFunction; coordinate
	e ()[F locations
	f ()Ljava/util/List; values
	g ()[F derivatives
aor$b net/minecraft/util/ExtraCodecs$EitherCodec
	a first
	b second
	a (Lcom/mojang/datafixers/util/Either;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; encode
aor$c net/minecraft/util/ExtraCodecs$LazyInitializedCodec
	a delegate
	a ()Ljava/util/function/Supplier; delegate
aor$d net/minecraft/util/ExtraCodecs$TagOrElementLocation
	a id
	b tag
	a ()Lnet/minecraft/resources/MinecraftKey; id
	b ()Z tag
	c ()Ljava/lang/String; decoratedId
aor$e net/minecraft/util/ExtraCodecs$XorCodec
	a first
	b second
	a (Lcom/mojang/datafixers/util/Either;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; encode
aot$a net/minecraft/util/FastColor$ABGR32
	a (I)I alpha
	a (II)I color
	a (IIII)I color
	b (I)I red
	c (I)I green
	d (I)I blue
	e (I)I transparent
	f (I)I opaque
aot$b net/minecraft/util/FastColor$ARGB32
	a (FII)I lerp
	a (I)I alpha
	a (II)I multiply
	a (IIII)I color
	b (I)I red
	c (I)I green
	d (I)I blue
api$a net/minecraft/util/ModCheck$Confidence
	a PROBABLY_NOT
	b VERY_LIKELY
	c DEFINITELY
	d description
	e shouldReportAsModified
	f $VALUES
	a ()[Lapi$a; $values
apk$a net/minecraft/util/NativeModuleLister$NativeModuleInfo
	a name
	b version
apk$b net/minecraft/util/NativeModuleLister$NativeModuleVersion
	a description
	b version
	c company
apr$a net/minecraft/util/SignatureUpdater$Output
apu$a net/minecraft/util/SimpleBitStorage$InitializationException
apw net/minecraft/util/SmoothDouble
	a targetValue
	b remainingValue
	c lastAmount
	a ()V reset
	a (DD)D getNewDeltaValue
apx$a net/minecraft/util/SortedArraySet$ArrayIterator
	b index
	c last
apy$a net/minecraft/util/SpawnUtil$Strategy
	a LEGACY_IRON_GOLEM
	b ON_TOP_OF_COLLIDER
aqa$a net/minecraft/util/StringRepresentable$EnumCodec
	a codec
	b resolver
	a (Ljava/lang/Enum;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; encode
	a (Ljava/lang/String;)Ljava/lang/Enum; byName
	a (Ljava/lang/String;Ljava/lang/Enum;)Ljava/lang/Enum; byName
aqc$a net/minecraft/util/TaskChainer$DelayedTask
aqe$a net/minecraft/util/TimeSource$NanoTimeSource
arx$a net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$DataLayer
	a SIZE
	b NIBBLE_SIZE
	c data
	a (I)Z isFirst
	a (III)I get
	b (I)I getPosition
arx$c net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Section
	a y
	b palette
	c listTag
	d section
	e hasData
	f toFix
	g update
	h seen
	i buffer
	a ()Lcom/mojang/serialization/Dynamic; write
	a (I)Lcom/mojang/serialization/Dynamic; getBlock
	a (II)V addFix
	a (ILcom/mojang/serialization/Dynamic;)V setBlock
	b (I)I upgrade
arx$d net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$UpgradeChunk
	a sides
	b sections
	c level
	d x
	e z
	f blockEntities
	a ()Lcom/mojang/serialization/Dynamic; write
	a (I)Lcom/mojang/serialization/Dynamic; getBlock
	a (ILcom/mojang/serialization/Dynamic;)V setBlock
	a (ILnet/minecraft/util/datafix/fixes/ChunkConverterPalette$Direction;)I relative
	b (I)Lcom/mojang/serialization/Dynamic; getBlockEntity
	c (I)Lcom/mojang/serialization/Dynamic; removeBlockEntity
	d (I)Larx$c; getSection
ary$a net/minecraft/util/datafix/fixes/ChunkProtoTickListFix$PoorMansPalettedContainer
	a SIZE_BITS
	b palette
	c data
	d bits
	e mask
	f valuesPerLong
	a ()Ljava/util/List; palette
	a (III)Lcom/mojang/serialization/Dynamic; get
	b ()[J data
	b (III)I getIndex
as$a net/minecraft/advancements/critereon/BeeNestDestroyedTrigger$TriggerInstance
	a block
	b item
	c numBees
	a (Lnet/minecraft/advancements/critereon/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
	a (Lnet/minecraft/world/level/block/Block;Lbz$a;Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange;)Las$a; destroyedBeeNest
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/item/ItemStack;I)Z matches
at$a net/minecraft/advancements/critereon/BlockPredicate$Builder
	a blocks
	b tag
	c properties
	d nbt
	a ()Lat$a; block
	a (Ljava/lang/Iterable;)Lat$a; of
	a (Lnet/minecraft/advancements/critereon/CriterionTriggerProperties;)Lat$a; setProperties
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lat$a; hasNbt
	a (Lnet/minecraft/tags/TagKey;)Lat$a; of
	a ([Lnet/minecraft/world/level/block/Block;)Lat$a; of
	b ()Lnet/minecraft/advancements/critereon/CriterionConditionBlock; build
au$a net/minecraft/advancements/critereon/BredAnimalsTrigger$TriggerInstance
	a parent
	b partner
	c child
	a (Lbn$a;)Lau$a; bredAnimals
	a (Lnet/minecraft/advancements/critereon/CriterionConditionEntity;Lnet/minecraft/advancements/critereon/CriterionConditionEntity;Lnet/minecraft/advancements/critereon/CriterionConditionEntity;)Lau$a; bredAnimals
	a (Lnet/minecraft/advancements/critereon/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;Lnet/minecraft/world/level/storage/loot/LootTableInfo;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Z matches
	c ()Lau$a; bredAnimals
aus$a net/minecraft/util/datafix/fixes/LeavesFix$LeavesSection
	h PERSISTENT
	i DECAYABLE
	j DISTANCE
	k leaveIds
	l logIds
	m stateToIdMap
	a ()Z skippable
	a (I)Z isLog
	a (III)V setDistance
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;ZI)Lcom/mojang/serialization/Dynamic; makeLeafTag
	b (I)Z isLeaf
	d (I)I getDistance
aus$b net/minecraft/util/datafix/fixes/LeavesFix$Section
	a BLOCK_STATES_TAG
	b NAME_TAG
	c PROPERTIES_TAG
	d paletteFinder
	e palette
	f index
	g storage
	h blockStateType
	a ()Z skippable
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; write
	a (Lcom/mojang/serialization/Dynamic;)V readStorage
	a (Ljava/lang/String;ZI)I getStateId
	b ()Z isSkippable
	c ()I getIndex
	c (I)I getBlock
av$a net/minecraft/advancements/critereon/BrewedPotionTrigger$TriggerInstance
	a potion
	a (Lnet/minecraft/advancements/critereon/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
	a (Lnet/minecraft/world/item/alchemy/PotionRegistry;)Z matches
	c ()Lav$a; brewedPotion
aw$a net/minecraft/advancements/critereon/ChangeDimensionTrigger$TriggerInstance
	a from
	b to
	a (Lnet/minecraft/advancements/critereon/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
	a (Lnet/minecraft/resources/ResourceKey;)Law$a; changedDimensionTo
	a (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;)Law$a; changedDimension
	b (Lnet/minecraft/resources/ResourceKey;)Law$a; changedDimensionFrom
	b (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;)Z matches
	c ()Law$a; changedDimension
awp$a net/minecraft/util/datafix/fixes/StructuresBecomeConfiguredFix$Conversion
	a biomeMapping
	b fallback
	a ()Ljava/util/Map; biomeMapping
	a (Ljava/lang/String;)Lawp$a; trivial
	a (Ljava/util/Map;)Ljava/util/Map; unpack
	a (Ljava/util/Map;Ljava/lang/String;)Lawp$a; biomeMapped
	b ()Ljava/lang/String; fallback
awr$a net/minecraft/util/datafix/fixes/TrappedChestBlockEntityFix$TrappedChestSection
	h chestIds
	a ()Z skippable
	a (I)Z isTrappedChest
ax$a net/minecraft/advancements/critereon/ChanneledLightningTrigger$TriggerInstance
	a victims
	a (Ljava/util/Collection;)Z matches
	a (Lnet/minecraft/advancements/critereon/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
	a ([Lnet/minecraft/advancements/critereon/CriterionConditionEntity;)Lax$a; channeledLightning
axa$a net/minecraft/util/datafix/fixes/WorldGenSettingsFix$StructureFeatureConfiguration
	a CODEC
	b spacing
	c separation
	d salt
	a (Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; serialize
ay$a net/minecraft/advancements/critereon/ConstructBeaconTrigger$TriggerInstance
	a level
	a (I)Z matches
	a (Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange;)Lay$a; constructedBeacon
	a (Lnet/minecraft/advancements/critereon/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
	c ()Lay$a; constructedBeacon
az$a net/minecraft/advancements/critereon/ConsumeItemTrigger$TriggerInstance
	a item
	a (Lnet/minecraft/advancements/critereon/CriterionConditionItem;)Laz$a; usedItem
	a (Lnet/minecraft/advancements/critereon/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
	a (Lnet/minecraft/world/item/ItemStack;)Z matches
	a (Lnet/minecraft/world/level/IMaterial;)Laz$a; usedItem
	c ()Laz$a; usedItem
b com/mojang/math/Constants
	a PI
	b RAD_TO_DEG
	c DEG_TO_RAD
	d EPSILON
ba$a net/minecraft/advancements/critereon/CuredZombieVillagerTrigger$TriggerInstance
	a zombie
	b villager
	a (Lnet/minecraft/advancements/critereon/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Z matches
	c ()Lba$a; curedZombieVillager
baa net/minecraft/util/eventlog/EventLogDirectory
	a LOGGER
	b COMPRESS_BUFFER_SIZE
	c COMPRESSED_EXTENSION
	d root
	e extension
	a ()Lbaa$d; listFiles
	a (Ljava/nio/channels/ReadableByteChannel;Ljava/nio/file/Path;)V writeCompressed
	a (Ljava/nio/file/Path;)Lbaa$b; parseFile
	a (Ljava/nio/file/Path;Ljava/lang/String;)Lbaa; open
	a (Ljava/nio/file/Path;Ljava/nio/file/Path;)V tryCompress
	a (Ljava/time/LocalDate;)Lbaa$e; createNewFile
baa$a net/minecraft/util/eventlog/EventLogDirectory$CompressedFile
	a path
	b id
	a ()Ljava/io/Reader; openReader
	b ()Lbaa$a; compress
	c ()Ljava/nio/file/Path; path
	d ()Lbaa$c; id
baa$b net/minecraft/util/eventlog/EventLogDirectory$File
	a ()Ljava/io/Reader; openReader
	b ()Lbaa$a; compress
	c ()Ljava/nio/file/Path; path
	d ()Lbaa$c; id
baa$c net/minecraft/util/eventlog/EventLogDirectory$FileId
	a date
	b index
	c DATE_FORMATTER
	a ()Ljava/time/LocalDate; date
	a (Ljava/lang/String;)Lbaa$c; parse
	b ()I index
	b (Ljava/lang/String;)Ljava/lang/String; toFileName
baa$d net/minecraft/util/eventlog/EventLogDirectory$FileList
	a files
	a ()Lbaa$d; compressAll
	a (Ljava/time/LocalDate;I)Lbaa$d; prune
	b ()Ljava/util/stream/Stream; stream
	c ()Ljava/util/Set; ids
baa$e net/minecraft/util/eventlog/EventLogDirectory$RawFile
	a path
	b id
	a ()Ljava/io/Reader; openReader
	b ()Lbaa$a; compress
	c ()Ljava/nio/file/Path; path
	d ()Lbaa$c; id
	e ()Ljava/nio/channels/FileChannel; openChannel
bab net/minecraft/util/eventlog/JsonEventLog
	a GSON
	b codec
	c channel
	d referenceCount
	a ()Lbac; openReader
	a (Lcom/mojang/serialization/Codec;Ljava/nio/file/Path;)Lbab; open
	a (Ljava/lang/Object;)V write
	b ()V releaseReference
bac net/minecraft/util/eventlog/JsonEventLogReader
	a ()Ljava/lang/Object; next
	a (Lcom/mojang/serialization/Codec;Ljava/io/Reader;)Lbac; create
bae$a net/minecraft/util/monitoring/jmx/MinecraftServerStatistics$AttributeDescription
	a name
	b getter
	c description
	d type
	a ()Ljavax/management/MBeanAttributeInfo; asMBeanAttributeInfo
bah$a net/minecraft/util/profiling/ActiveProfiler$PathEntry
	a maxDuration
	b minDuration
	c accumulatedDuration
	d count
	e counters
	a ()J getDuration
	b ()J getMaxDuration
	c ()J getCount
	d ()Lit/unimi/dsi/fastutil/objects/Object2LongMap; getCounters
bak$a net/minecraft/util/profiling/FilledProfileResults$CounterCollector
	a selfValue
	b totalValue
	c children
	a (Ljava/util/Iterator;J)V addValue
bau$a net/minecraft/util/profiling/jfr/JvmProfiler$NoOpProfiler
	a noOpCommit
	b LOGGER
	a (F)V onServerTick
	a (IILjava/net/SocketAddress;I)V onPacketReceived
	a (Lnet/minecraft/util/profiling/jfr/Environment;)Z start
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/resources/ResourceKey;Ljava/lang/String;)Lnet/minecraft/util/profiling/jfr/callback/ProfiledDuration; onChunkGenerate
	b ()Ljava/nio/file/Path; stop
	b (IILjava/net/SocketAddress;I)V onPacketSent
	c ()Z isRunning
	d ()Z isAvailable
	e ()Lnet/minecraft/util/profiling/jfr/callback/ProfiledDuration; onWorldLoadedStarted
baz$a net/minecraft/util/profiling/jfr/event/PacketEvent$Fields
	a REMOTE_ADDRESS
	b PROTOCOL_ID
	c PACKET_ID
	d BYTES
bb$a net/minecraft/advancements/critereon/DamagePredicate$Builder
	a dealtDamage
	b takenDamage
	c sourceEntity
	d blocked
	e type
	a ()Lbb$a; damageInstance
	a (Lbc$a;)Lbb$a; type
	a (Ljava/lang/Boolean;)Lbb$a; blocked
	a (Lnet/minecraft/advancements/critereon/CriterionConditionDamageSource;)Lbb$a; type
	a (Lnet/minecraft/advancements/critereon/CriterionConditionEntity;)Lbb$a; sourceEntity
	a (Lnet/minecraft/advancements/critereon/CriterionConditionValue$DoubleRange;)Lbb$a; dealtDamage
	b ()Lnet/minecraft/advancements/critereon/CriterionConditionDamage; build
	b (Lnet/minecraft/advancements/critereon/CriterionConditionValue$DoubleRange;)Lbb$a; takenDamage
bbc$a net/minecraft/util/profiling/jfr/parse/JfrStatsParser$MutableCountAndSize
	a count
	b totalSize
	a ()Lbbl$a; toCountAndSize
	a (I)V increment
bbj$a net/minecraft/util/profiling/jfr/stats/FileIOStat$Summary
	a totalBytes
	b bytesPerSecond
	c counts
	d countsPerSecond
	e timeSpentInIO
	f topTenContributorsByTotalBytes
	a ()J totalBytes
	b ()D bytesPerSecond
	c ()J counts
	d ()D countsPerSecond
	e ()Ljava/time/Duration; timeSpentInIO
	f ()Ljava/util/List; topTenContributorsByTotalBytes
bbk$a net/minecraft/util/profiling/jfr/stats/GcHeapStat$Summary
	a duration
	b gcTotalDuration
	c totalGCs
	d allocationRateBytesPerSecond
	a ()F gcOverHead
	b ()Ljava/time/Duration; duration
	c ()Ljava/time/Duration; gcTotalDuration
	d ()I totalGCs
	e ()D allocationRateBytesPerSecond
bbk$b net/minecraft/util/profiling/jfr/stats/GcHeapStat$Timing
	a BEFORE_GC
	b AFTER_GC
	c $VALUES
	a ()[Lbbk$b; $values
bbl$a net/minecraft/util/profiling/jfr/stats/NetworkPacketSummary$PacketCountAndSize
	a totalCount
	b totalSize
	c SIZE_THEN_COUNT
	a ()J totalCount
	a (Lbbl$a;)Lbbl$a; add
	b ()J totalSize
bbl$b net/minecraft/util/profiling/jfr/stats/NetworkPacketSummary$PacketIdentification
	a direction
	b protocolId
	c packetId
	d PACKET_NAME_BY_ID
	a ()Ljava/lang/String; packetName
	a (Ljdk/jfr/consumer/RecordedEvent;)Lbbl$b; from
	b ()Lnet/minecraft/network/protocol/EnumProtocolDirection; direction
	c ()I protocolId
	d ()I packetId
bbm$a net/minecraft/util/profiling/jfr/stats/ThreadAllocationStat$Summary
	a allocationsPerSecondByThread
	a ()Ljava/util/Map; allocationsPerSecondByThread
bbo net/minecraft/util/profiling/jfr/stats/TimeStamped
	a ()Ljava/time/Instant; getTimestamp
bbt$a net/minecraft/util/profiling/metrics/MetricSampler$MetricSamplerBuilder
	a name
	b category
	c sampler
	d context
	e beforeTick
	f thresholdTest
	a ()Lnet/minecraft/util/profiling/metrics/MetricSampler; build
	a (Lbbt$c;)Lbbt$a; withThresholdAlert
	a (Ljava/util/function/Consumer;)Lbbt$a; withBeforeTick
bbt$b net/minecraft/util/profiling/metrics/MetricSampler$SamplerResult
	a recording
	b firstTick
	c lastTick
	a ()I getFirstTick
	a (I)D valueAtTick
	b ()I getLastTick
bbt$c net/minecraft/util/profiling/metrics/MetricSampler$ThresholdTest
bbt$d net/minecraft/util/profiling/metrics/MetricSampler$ValueIncreasedByPercentage
	a percentageIncreaseThreshold
	b previousValue
bbu$a net/minecraft/util/profiling/metrics/MetricsRegistry$AggregatedMetricSampler
	b delegates
	a (Ljava/util/List;)Lbbt$c; thresholdTest
	b (Ljava/util/List;)V beforeTick
	c (Ljava/util/List;)D averageValueFromDelegates
bc$a net/minecraft/advancements/critereon/DamageSourcePredicate$Builder
	a tags
	b directEntity
	c sourceEntity
	a ()Lbc$a; damageType
	a (Lbn$a;)Lbc$a; direct
	a (Lnet/minecraft/advancements/critereon/CriterionConditionEntity;)Lbc$a; direct
	a (Lnet/minecraft/advancements/critereon/TagPredicate;)Lbc$a; tag
	b ()Lnet/minecraft/advancements/critereon/CriterionConditionDamageSource; build
	b (Lbn$a;)Lbc$a; source
	b (Lnet/minecraft/advancements/critereon/CriterionConditionEntity;)Lbc$a; source
bcc$a net/minecraft/util/profiling/metrics/profiling/ServerMetricsSamplersProvider$CpuStats
	a nrOfCpus
	b systemInfo
	c processor
	d previousCpuLoadTick
	e currentLoad
	f lastPollMs
	a (I)D loadForCpu
bci$a net/minecraft/util/random/SimpleWeightedRandomList$Builder
	a result
	a ()Lnet/minecraft/util/random/SimpleWeightedRandomList; build
	a (Ljava/lang/Object;I)Lbci$a; add
bck$a net/minecraft/util/random/WeightedEntry$IntrusiveBase
	a weight
	a ()Lnet/minecraft/util/random/Weight; getWeight
bck$b net/minecraft/util/random/WeightedEntry$Wrapper
	a data
	b weight
	a ()Lnet/minecraft/util/random/Weight; getWeight
	a (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; codec
	b ()Ljava/lang/Object; getData
bcp net/minecraft/util/thread/NamedThreadFactory
	a LOGGER
	b group
	c threadNumber
	d namePrefix
bct$a net/minecraft/util/thread/StrictQueue$FixedPriorityQueue
	a queues
	b size
	a ()Ljava/lang/Object; pop
	a (Lbct$b;)Z push
	a (Ljava/lang/Object;)Z push
	b ()Z isEmpty
	c ()I size
	d ()Ljava/lang/Runnable; pop
bct$b net/minecraft/util/thread/StrictQueue$IntRunnable
	a priority
	b task
	a ()I getPriority
bct$c net/minecraft/util/thread/StrictQueue$QueueStrictQueue
	a queue
	a ()Ljava/lang/Object; pop
	a (Ljava/lang/Object;)Z push
	b ()Z isEmpty
	c ()I size
bdf net/minecraft/util/valueproviders/MultipliedFloats
	a values
	a (Lnet/minecraft/util/RandomSource;)F sample
bey$a net/minecraft/world/effect/MobEffectInstance$FactorData
	a CODEC
	b paddingDuration
	c factorStart
	d factorTarget
	e factorCurrent
	f ticksActive
	g factorPreviousFrame
	h hadEffectLastTick
	a (Lnet/minecraft/world/effect/MobEffect;)V tick
	a (Lnet/minecraft/world/entity/EntityLiving;F)F getFactor
bf$a net/minecraft/advancements/critereon/DistanceTrigger$TriggerInstance
	a startPosition
	b distance
	a (Lbn$a;Lnet/minecraft/advancements/critereon/CriterionConditionDistance;)Lbf$a; rideEntityInLava
	a (Lbn$a;Lnet/minecraft/advancements/critereon/CriterionConditionDistance;Lnet/minecraft/advancements/critereon/CriterionConditionLocation;)Lbf$a; fallFromHeight
	a (Lnet/minecraft/advancements/critereon/CriterionConditionDistance;)Lbf$a; travelledThroughNether
	a (Lnet/minecraft/advancements/critereon/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/phys/Vec3D;)Z matches
bfc$a net/minecraft/world/entity/AgeableMob$AgeableMobGroupData
	a groupSize
	b shouldSpawnBaby
	c babySpawnChance
	a ()I getGroupSize
	b ()V increaseGroupSizeByOne
	c ()Z isShouldSpawnBaby
	d ()F getBabySpawnChance
bfj net/minecraft/world/entity/EntityEvent
	A PERMISSION_LEVEL_OWNERS
	B ATTACK_BLOCKED
	C SHIELD_DISABLED
	D FISHING_ROD_REEL_IN
	E ARMORSTAND_WOBBLE
	F STOP_OFFER_FLOWER
	G TALISMAN_ACTIVATE
	H DOLPHIN_LOOKING_FOR_TREASURE
	I RAVAGER_STUNNED
	J TRUSTING_FAILED
	K TRUSTING_SUCCEEDED
	L VILLAGER_SWEAT
	M BAD_OMEN_TRIGGERED
	N FOX_EAT
	O TELEPORT
	P MAINHAND_BREAK
	Q OFFHAND_BREAK
	R HEAD_BREAK
	S CHEST_BREAK
	T LEGS_BREAK
	U FEET_BREAK
	V HONEY_SLIDE
	W HONEY_JUMP
	X SWAP_HANDS
	Y CANCEL_SHAKE_WETNESS
	Z START_RAM
	a JUMP
	aa END_RAM
	ab POOF
	ac TENDRILS_SHIVER
	ad SONIC_CHARGE
	ae SNIFFER_DIGGING_SOUND
	b DEATH
	c START_ATTACKING
	d STOP_ATTACKING
	e TAMING_FAILED
	f TAMING_SUCCEEDED
	g SHAKE_WETNESS
	h USE_ITEM_COMPLETE
	i EAT_GRASS
	j OFFER_FLOWER
	k LOVE_HEARTS
	l VILLAGER_ANGRY
	m VILLAGER_HAPPY
	n WITCH_HAT_MAGIC
	o ZOMBIE_CONVERTING
	p FIREWORKS_EXPLODE
	q IN_LOVE_HEARTS
	r SQUID_ANIM_SYNCH
	s SILVERFISH_MERGE_ANIM
	t GUARDIAN_ATTACK_SOUND
	u REDUCED_DEBUG_INFO
	v FULL_DEBUG_INFO
	w PERMISSION_LEVEL_ALL
	x PERMISSION_LEVEL_MODERATORS
	y PERMISSION_LEVEL_GAMEMASTERS
	z PERMISSION_LEVEL_ADMINS
bfl$b net/minecraft/world/entity/EntityType$EntityFactory
bfx$a net/minecraft/world/entity/LivingEntity$Fallsounds
	a small
	b big
	a ()Lnet/minecraft/sounds/SoundEffect; small
	b ()Lnet/minecraft/sounds/SoundEffect; big
bg$a net/minecraft/advancements/critereon/EffectsChangedTrigger$TriggerInstance
	a effects
	b source
	a (Lnet/minecraft/advancements/critereon/CriterionConditionEntity;)Lbg$a; gotEffectsFrom
	a (Lnet/minecraft/advancements/critereon/CriterionConditionMobEffect;)Lbg$a; hasEffects
	a (Lnet/minecraft/advancements/critereon/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Z matches
bgs$a net/minecraft/world/entity/SpawnPlacements$Data
	a heightMap
	b placement
	c predicate
bgs$b net/minecraft/world/entity/SpawnPlacements$SpawnPredicate
bgy$a net/minecraft/world/entity/ai/Brain$MemoryValue
	a type
	b value
	a (Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/RecordBuilder;)V serialize
	a (Lnet/minecraft/world/entity/ai/BehaviorController;)V setMemoryInternal
	a (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/util/Optional;)Lbgy$a; createUnchecked
bgy$b net/minecraft/world/entity/ai/Brain$Provider
	a memoryTypes
	b sensorTypes
	c codec
	a (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/BehaviorController; makeBrain
bh$a net/minecraft/advancements/critereon/EnchantedItemTrigger$TriggerInstance
	a item
	b levels
	a (Lnet/minecraft/advancements/critereon/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
	a (Lnet/minecraft/world/item/ItemStack;I)Z matches
	c ()Lbh$a; enchantedItem
bhi$a net/minecraft/world/entity/ai/behavior/AcquirePoi$JitteredLinearRetry
	a MIN_INTERVAL_INCREASE
	b MAX_INTERVAL_INCREASE
	c MAX_RETRY_PATHFINDING_INTERVAL
	d random
	e previousAttemptTimestamp
	f nextScheduledAttemptTimestamp
	g currentDelay
	a (J)V markAttempt
	b (J)Z isStillValid
	c (J)Z shouldRetry
bis$a net/minecraft/world/entity/ai/behavior/LongJumpToRandomPos$PossibleJump
	a jumpTarget
	b ()Lnet/minecraft/core/BlockPosition; getJumpTarget
bj$a net/minecraft/advancements/critereon/EnterBlockTrigger$TriggerInstance
	a block
	b state
	a (Lnet/minecraft/advancements/critereon/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
	a (Lnet/minecraft/world/level/block/Block;)Lbj$a; entersBlock
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z matches
bjd$a net/minecraft/world/entity/ai/behavior/PrepareRamNearestTarget$RamCandidate
	a startPosition
	b targetPosition
	c target
	a ()Lnet/minecraft/core/BlockPosition; getStartPosition
	b ()Lnet/minecraft/core/BlockPosition; getTargetPosition
	c ()Lnet/minecraft/world/entity/EntityLiving; getTarget
bjo$a net/minecraft/world/entity/ai/behavior/SetEntityLookTargetSometimes$Ticker
	a interval
	b ticksUntilNextStart
	a (Lnet/minecraft/util/RandomSource;)Z tickDownAndCheck
bjx$a net/minecraft/world/entity/ai/behavior/ShufflingList$WeightedEntry
	a data
	b weight
	c randWeight
	a ()Ljava/lang/Object; getData
	a (F)V setRandom
	a (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; codec
	b ()I getWeight
	c ()D getRandWeight
bk$a net/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder
	a head
	b chest
	c legs
	d feet
	e mainhand
	f offhand
	a ()Lbk$a; equipment
	a (Lnet/minecraft/advancements/critereon/CriterionConditionItem;)Lbk$a; head
	b ()Lnet/minecraft/advancements/critereon/CriterionConditionEntityEquipment; build
	b (Lnet/minecraft/advancements/critereon/CriterionConditionItem;)Lbk$a; chest
	c (Lnet/minecraft/advancements/critereon/CriterionConditionItem;)Lbk$a; legs
	d (Lnet/minecraft/advancements/critereon/CriterionConditionItem;)Lbk$a; feet
	e (Lnet/minecraft/advancements/critereon/CriterionConditionItem;)Lbk$a; mainhand
	f (Lnet/minecraft/advancements/critereon/CriterionConditionItem;)Lbk$a; offhand
bl$a net/minecraft/advancements/critereon/EntityFlagsPredicate$Builder
	a isOnFire
	b isCrouching
	c isSprinting
	d isSwimming
	e isBaby
	a ()Lbl$a; flags
	a (Ljava/lang/Boolean;)Lbl$a; setOnFire
	b ()Lnet/minecraft/advancements/critereon/CriterionConditionEntityFlags; build
	b (Ljava/lang/Boolean;)Lbl$a; setCrouching
	c (Ljava/lang/Boolean;)Lbl$a; setSprinting
	d (Ljava/lang/Boolean;)Lbl$a; setSwimming
	e (Ljava/lang/Boolean;)Lbl$a; setIsBaby
blb$a net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$Constant
blb$b net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$Instance
	a (Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;)Lnet/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder; ap2
	a (Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;)Lnet/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder; ap3
	a (Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;)Lnet/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder; ap4
	a (Ljava/lang/Object;)Lnet/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder; point
	a (Ljava/util/function/Function;Lcom/mojang/datafixers/kinds/App;)Lnet/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder; map
	a (Ljava/util/function/Supplier;Ljava/lang/Object;)Lnet/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder; point
	a (Lnet/minecraft/world/entity/ai/behavior/declarative/MemoryAccessor;)Ljava/util/Optional; tryGet
	a (Lnet/minecraft/world/entity/ai/behavior/declarative/Trigger;)Lnet/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder; ifTriggered
	a (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Lnet/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder; registered
	b (Lnet/minecraft/world/entity/ai/behavior/declarative/MemoryAccessor;)Ljava/lang/Object; get
	b (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Lnet/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder; present
	c (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Lnet/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder; absent
blb$b$a net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$Instance$Mu
blb$c net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$Mu
blb$d net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$PureMemory
blb$e net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$TriggerWithResult
	a ()Ljava/lang/String; debugString
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Ljava/lang/Object; tryTrigger
blb$f net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$TriggerWrapper
bld$a net/minecraft/world/entity/ai/behavior/declarative/MemoryCondition$Absent
	a memory
	a ()Lnet/minecraft/world/entity/ai/memory/MemoryModuleType; memory
	a (Lnet/minecraft/world/entity/ai/BehaviorController;Ljava/util/Optional;)Lnet/minecraft/world/entity/ai/behavior/declarative/MemoryAccessor; createAccessor
	b ()Lnet/minecraft/world/entity/ai/memory/MemoryStatus; condition
bld$b net/minecraft/world/entity/ai/behavior/declarative/MemoryCondition$Present
	a memory
	a ()Lnet/minecraft/world/entity/ai/memory/MemoryModuleType; memory
	a (Lnet/minecraft/world/entity/ai/BehaviorController;Ljava/util/Optional;)Lnet/minecraft/world/entity/ai/behavior/declarative/MemoryAccessor; createAccessor
	b ()Lnet/minecraft/world/entity/ai/memory/MemoryStatus; condition
bld$c net/minecraft/world/entity/ai/behavior/declarative/MemoryCondition$Registered
	a memory
	a ()Lnet/minecraft/world/entity/ai/memory/MemoryModuleType; memory
	a (Lnet/minecraft/world/entity/ai/BehaviorController;Ljava/util/Optional;)Lnet/minecraft/world/entity/ai/behavior/declarative/MemoryAccessor; createAccessor
	b ()Lnet/minecraft/world/entity/ai/memory/MemoryStatus; condition
bm$a net/minecraft/advancements/critereon/EntityHurtPlayerTrigger$TriggerInstance
	a damage
	a (Lbb$a;)Lbm$a; entityHurtPlayer
	a (Lnet/minecraft/advancements/critereon/CriterionConditionDamage;)Lbm$a; entityHurtPlayer
	a (Lnet/minecraft/advancements/critereon/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/damagesource/DamageSource;FFZ)Z matches
	c ()Lbm$a; entityHurtPlayer
bn$a net/minecraft/advancements/critereon/EntityPredicate$Builder
	a entityType
	b distanceToPlayer
	c location
	d steppingOnLocation
	e effects
	f nbt
	g flags
	h equipment
	i subPredicate
	j vehicle
	k passenger
	l targetedEntity
	m team
	a ()Lbn$a; entity
	a (Ljava/lang/String;)Lbn$a; team
	a (Lnet/minecraft/advancements/critereon/CriterionConditionDistance;)Lbn$a; distance
	a (Lnet/minecraft/advancements/critereon/CriterionConditionEntity;)Lbn$a; vehicle
	a (Lnet/minecraft/advancements/critereon/CriterionConditionEntityEquipment;)Lbn$a; equipment
	a (Lnet/minecraft/advancements/critereon/CriterionConditionEntityFlags;)Lbn$a; flags
	a (Lnet/minecraft/advancements/critereon/CriterionConditionEntityType;)Lbn$a; entityType
	a (Lnet/minecraft/advancements/critereon/CriterionConditionLocation;)Lbn$a; located
	a (Lnet/minecraft/advancements/critereon/CriterionConditionMobEffect;)Lbn$a; effects
	a (Lnet/minecraft/advancements/critereon/CriterionConditionNBT;)Lbn$a; nbt
	a (Lnet/minecraft/advancements/critereon/EntitySubPredicate;)Lbn$a; subPredicate
	a (Lnet/minecraft/tags/TagKey;)Lbn$a; of
	a (Lnet/minecraft/world/entity/EntityTypes;)Lbn$a; of
	b ()Lnet/minecraft/advancements/critereon/CriterionConditionEntity; build
	b (Lnet/minecraft/advancements/critereon/CriterionConditionEntity;)Lbn$a; passenger
	b (Lnet/minecraft/advancements/critereon/CriterionConditionLocation;)Lbn$a; steppingOn
	c (Lnet/minecraft/advancements/critereon/CriterionConditionEntity;)Lbn$a; targetedEntity
bn$b net/minecraft/advancements/critereon/EntityPredicate$Composite
	a ANY
	b conditions
	c compositePredicates
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lbn$b; fromJson
	a (Ljava/lang/String;Lnet/minecraft/advancements/critereon/LootDeserializationContext;Lcom/google/gson/JsonElement;)Lbn$b; fromElement
	a (Lnet/minecraft/advancements/critereon/CriterionConditionEntity;)Lbn$b; wrap
	a (Lnet/minecraft/advancements/critereon/LootSerializationContext;)Lcom/google/gson/JsonElement; toJson
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Z matches
	a ([Lbn$b;Lnet/minecraft/advancements/critereon/LootSerializationContext;)Lcom/google/gson/JsonElement; toJson
	a ([Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lbn$b; create
	b (Lcom/google/gson/JsonObject;Ljava/lang/String;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)[Lbn$b; fromJsonArray
bo$a net/minecraft/advancements/critereon/EntitySubPredicate$Type
bo$b net/minecraft/advancements/critereon/EntitySubPredicate$Types
	a ANY
	b LIGHTNING
	c FISHING_HOOK
	d PLAYER
	e SLIME
	f CAT
	g FROG
	h AXOLOTL
	i BOAT
	j FOX
	k MOOSHROOM
	l PAINTING
	m RABBIT
	n HORSE
	o LLAMA
	p VILLAGER
	q PARROT
	r TROPICAL_FISH
	s TYPES
bov$a net/minecraft/world/entity/ai/gossip/GossipContainer$EntityGossips
	a entries
	a ()V decay
	a (Ljava/util/UUID;)Ljava/util/stream/Stream; unpack
	a (Ljava/util/function/Predicate;)I weightedValue
	a (Lnet/minecraft/world/entity/ai/gossip/ReputationType;)V makeSureValueIsntTooLowOrTooHigh
	b ()Z isEmpty
	b (Lnet/minecraft/world/entity/ai/gossip/ReputationType;)V remove
bov$b net/minecraft/world/entity/ai/gossip/GossipContainer$GossipEntry
	a CODEC
	b LIST_CODEC
	c target
	d type
	e value
	a ()I weightedValue
	b ()Ljava/util/UUID; target
	c ()Lnet/minecraft/world/entity/ai/gossip/ReputationType; type
	d ()I value
bp$a net/minecraft/advancements/critereon/EntityTypePredicate$TagPredicate
	b tag
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lnet/minecraft/world/entity/EntityTypes;)Z matches
bp$b net/minecraft/advancements/critereon/EntityTypePredicate$TypePredicate
	b type
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lnet/minecraft/world/entity/EntityTypes;)Z matches
bqx$a net/minecraft/world/entity/ai/village/poi/PoiManager$DistanceTracker
	b levels
	a ()V runAllUpdates
	a (JI)V setLevel
	b (J)I getLevelFromSource
	c (J)I getLevel
br$a net/minecraft/advancements/critereon/FilledBucketTrigger$TriggerInstance
	a item
	a (Lnet/minecraft/advancements/critereon/CriterionConditionItem;)Lbr$a; filledBucket
	a (Lnet/minecraft/advancements/critereon/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
	a (Lnet/minecraft/world/item/ItemStack;)Z matches
brg$a net/minecraft/world/entity/animal/AbstractFish$FishMoveControl
	l fish
	a ()V tick
brg$b net/minecraft/world/entity/animal/AbstractFish$FishSwimGoal
	i fish
	a ()Z canUse
bri$a net/minecraft/world/entity/animal/AbstractSchoolingFish$SchoolSpawnGroupData
	a leader
brk$a net/minecraft/world/entity/animal/Bee$BaseBeeGoal
	a ()Z canUse
	b ()Z canContinueToUse
	h ()Z canBeeUse
	i ()Z canBeeContinueToUse
brk$b net/minecraft/world/entity/animal/Bee$BeeAttackGoal
	a ()Z canUse
	b ()Z canContinueToUse
brk$c net/minecraft/world/entity/animal/Bee$BeeBecomeAngryTargetGoal
	a ()Z canUse
	b ()Z canContinueToUse
	i ()Z beeCanTarget
brk$d net/minecraft/world/entity/animal/Bee$BeeEnterHiveGoal
	c ()V start
	h ()Z canBeeUse
	i ()Z canBeeContinueToUse
brk$e net/minecraft/world/entity/animal/Bee$BeeGoToHiveGoal
	b MAX_TRAVELLING_TICKS
	d travellingTicks
	e MAX_BLACKLISTED_TARGETS
	f blacklistedTargets
	g lastPath
	h TICKS_BEFORE_HIVE_DROP
	i ticksStuck
	a ()Z canUse
	a (Lnet/minecraft/core/BlockPosition;)Z pathfindDirectlyTowards
	b ()Z canContinueToUse
	b (Lnet/minecraft/core/BlockPosition;)Z isTargetBlacklisted
	c ()V start
	c (Lnet/minecraft/core/BlockPosition;)V blacklistTarget
	d ()V stop
	d (Lnet/minecraft/core/BlockPosition;)Z hasReachedTarget
	e ()V tick
	h ()Z canBeeUse
	i ()Z canBeeContinueToUse
	k ()V clearBlacklist
	l ()V dropAndBlacklistHive
	m ()V dropHive
brk$f net/minecraft/world/entity/animal/Bee$BeeGoToKnownFlowerGoal
	c MAX_TRAVELLING_TICKS
	d travellingTicks
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	h ()Z canBeeUse
	i ()Z canBeeContinueToUse
	k ()Z wantsToGoToKnownFlower
brk$g net/minecraft/world/entity/animal/Bee$BeeGrowCropGoal
	b GROW_CHANCE
	e ()V tick
	h ()Z canBeeUse
	i ()Z canBeeContinueToUse
brk$h net/minecraft/world/entity/animal/Bee$BeeHurtByOtherGoal
	a (Lnet/minecraft/world/entity/EntityInsentient;Lnet/minecraft/world/entity/EntityLiving;)V alertOther
	b ()Z canContinueToUse
brk$i net/minecraft/world/entity/animal/Bee$BeeLocateHiveGoal
	c ()V start
	h ()Z canBeeUse
	i ()Z canBeeContinueToUse
	k ()Ljava/util/List; findNearbyHivesWithSpace
brk$j net/minecraft/world/entity/animal/Bee$BeeLookControl
	a ()V tick
	c ()Z resetXRotOnTick
brk$k net/minecraft/world/entity/animal/Bee$BeePollinateGoal
	c MIN_POLLINATION_TICKS
	d MIN_FIND_FLOWER_RETRY_COOLDOWN
	e MAX_FIND_FLOWER_RETRY_COOLDOWN
	f VALID_POLLINATION_BLOCKS
	g ARRIVAL_THRESHOLD
	h POSITION_CHANGE_CHANCE
	i SPEED_MODIFIER
	j HOVER_HEIGHT_WITHIN_FLOWER
	k HOVER_POS_OFFSET
	l successfulPollinatingTicks
	m lastSoundPlayedTick
	n pollinating
	o hoverPos
	p pollinatingTicks
	q MAX_POLLINATING_TICKS
	J_ ()Z requiresUpdateEveryTick
	a (Ljava/util/function/Predicate;D)Ljava/util/Optional; findNearestBlock
	c ()V start
	d ()V stop
	e ()V tick
	h ()Z canBeeUse
	i ()Z canBeeContinueToUse
	k ()Z hasPollinatedLongEnough
	l ()Z isPollinating
	m ()V stopPollinating
	n ()V setWantedPos
	o ()F getOffset
	p ()Ljava/util/Optional; findNearbyFlower
brk$l net/minecraft/world/entity/animal/Bee$BeeWanderGoal
	b WANDER_THRESHOLD
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	h ()Lnet/minecraft/world/phys/Vec3D; findPos
brm$a net/minecraft/world/entity/animal/Cat$CatAvoidEntityGoal
	i cat
	a ()Z canUse
	b ()Z canContinueToUse
brm$b net/minecraft/world/entity/animal/Cat$CatRelaxOnOwnerGoal
	a cat
	b ownerPlayer
	c goalPos
	d onBedTicks
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	h ()Z spaceIsOccupied
	i ()V giveMorningGift
brr$a net/minecraft/world/entity/animal/Dolphin$DolphinSwimToTreasureGoal
	a dolphin
	b stuck
	I_ ()Z isInterruptable
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
brr$b net/minecraft/world/entity/animal/Dolphin$DolphinSwimWithPlayerGoal
	a dolphin
	b speedModifier
	c player
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
brr$c net/minecraft/world/entity/animal/Dolphin$PlayWithItemsGoal
	b cooldown
	a ()Z canUse
	a (Lnet/minecraft/world/item/ItemStack;)V drop
	c ()V start
	d ()V stop
	e ()V tick
brt$a net/minecraft/world/entity/animal/Fox$DefendTrustedTargetGoal
	j trustedLastHurtBy
	k trustedLastHurt
	l timestamp
	a ()Z canUse
	c ()V start
brt$b net/minecraft/world/entity/animal/Fox$FaceplantGoal
	a countdown
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
brt$c net/minecraft/world/entity/animal/Fox$FoxAlertableEntitiesSelector
	a (Lnet/minecraft/world/entity/EntityLiving;)Z test
brt$d net/minecraft/world/entity/animal/Fox$FoxBehaviorGoal
	b alertableTargeting
	h ()Z hasShelter
	i ()Z alertable
brt$e net/minecraft/world/entity/animal/Fox$FoxBreedGoal
	c ()V start
	g ()V breed
brt$f net/minecraft/world/entity/animal/Fox$FoxEatBerriesGoal
	g ticksWaited
	i WAIT_TICKS
	a ()Z canUse
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z isValidTarget
	a (Lnet/minecraft/world/level/block/state/IBlockData;)V pickGlowBerry
	b (Lnet/minecraft/world/level/block/state/IBlockData;)V pickSweetBerries
	c ()V start
	e ()V tick
	i ()D acceptedDistance
	l ()Z shouldRecalculatePath
	o ()V onReachedTarget
brt$g net/minecraft/world/entity/animal/Fox$FoxFloatGoal
	a ()Z canUse
	c ()V start
brt$h net/minecraft/world/entity/animal/Fox$FoxFollowParentGoal
	e fox
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
brt$i net/minecraft/world/entity/animal/Fox$FoxGroupData
	a type
brt$j net/minecraft/world/entity/animal/Fox$FoxLookAtPlayerGoal
	a ()Z canUse
	b ()Z canContinueToUse
brt$k net/minecraft/world/entity/animal/Fox$FoxLookControl
	a ()V tick
	c ()Z resetXRotOnTick
brt$l net/minecraft/world/entity/animal/Fox$FoxMeleeAttackGoal
	a ()Z canUse
	a (Lnet/minecraft/world/entity/EntityLiving;D)V checkAndPerformAttack
	c ()V start
brt$m net/minecraft/world/entity/animal/Fox$FoxMoveControl
	a ()V tick
brt$n net/minecraft/world/entity/animal/Fox$FoxPanicGoal
	h ()Z shouldPanic
brt$o net/minecraft/world/entity/animal/Fox$FoxPounceGoal
	I_ ()Z isInterruptable
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
brt$p net/minecraft/world/entity/animal/Fox$FoxSearchForItemsGoal
	a ()Z canUse
	c ()V start
	e ()V tick
brt$q net/minecraft/world/entity/animal/Fox$FoxStrollThroughVillageGoal
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	h ()Z canFoxMove
brt$r net/minecraft/world/entity/animal/Fox$PerchAndSearchGoal
	c relX
	d relZ
	e lookTime
	f looksRemaining
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	k ()V resetLook
brt$s net/minecraft/world/entity/animal/Fox$SeekShelterGoal
	c interval
	a ()Z canUse
	c ()V start
brt$t net/minecraft/world/entity/animal/Fox$SleepGoal
	c WAIT_TIME_BEFORE_SLEEP
	d countdown
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	k ()Z canSleep
brt$u net/minecraft/world/entity/animal/Fox$StalkPreyGoal
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
brx$a net/minecraft/world/entity/animal/Ocelot$OcelotAvoidEntityGoal
	i ocelot
	a ()Z canUse
	b ()Z canContinueToUse
brx$b net/minecraft/world/entity/animal/Ocelot$OcelotTemptGoal
	c ocelot
	h ()Z canScare
bry$b net/minecraft/world/entity/animal/Panda$PandaAttackGoal
	b panda
	a ()Z canUse
bry$c net/minecraft/world/entity/animal/Panda$PandaAvoidGoal
	i panda
	a ()Z canUse
bry$d net/minecraft/world/entity/animal/Panda$PandaBreedGoal
	d panda
	e unhappyCooldown
	a ()Z canUse
	h ()Z canFindBamboo
bry$e net/minecraft/world/entity/animal/Panda$PandaHurtByTargetGoal
	a panda
	a (Lnet/minecraft/world/entity/EntityInsentient;Lnet/minecraft/world/entity/EntityLiving;)V alertOther
	b ()Z canContinueToUse
bry$f net/minecraft/world/entity/animal/Panda$PandaLieOnBackGoal
	a panda
	b cooldown
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
bry$g net/minecraft/world/entity/animal/Panda$PandaLookAtPlayerGoal
	h panda
	a ()Z canUse
	a (Lnet/minecraft/world/entity/EntityLiving;)V setTarget
	b ()Z canContinueToUse
	e ()V tick
bry$h net/minecraft/world/entity/animal/Panda$PandaMoveControl
	l panda
	a ()V tick
bry$i net/minecraft/world/entity/animal/Panda$PandaPanicGoal
	h panda
	b ()Z canContinueToUse
	h ()Z shouldPanic
bry$j net/minecraft/world/entity/animal/Panda$PandaRollGoal
	a panda
	I_ ()Z isInterruptable
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
bry$k net/minecraft/world/entity/animal/Panda$PandaSitGoal
	b cooldown
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
bry$l net/minecraft/world/entity/animal/Panda$PandaSneezeGoal
	a panda
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
brz$a net/minecraft/world/entity/animal/Parrot$ParrotWanderGoal
	h ()Lnet/minecraft/world/phys/Vec3D; getPosition
	k ()Lnet/minecraft/world/phys/Vec3D; getTreePos
bsb$a net/minecraft/world/entity/animal/PolarBear$PolarBearAttackPlayersGoal
	a ()Z canUse
	l ()D getFollowDistance
bsb$b net/minecraft/world/entity/animal/PolarBear$PolarBearHurtByTargetGoal
	a (Lnet/minecraft/world/entity/EntityInsentient;Lnet/minecraft/world/entity/EntityLiving;)V alertOther
	c ()V start
bsb$c net/minecraft/world/entity/animal/PolarBear$PolarBearMeleeAttackGoal
	a (Lnet/minecraft/world/entity/EntityLiving;)D getAttackReachSqr
	a (Lnet/minecraft/world/entity/EntityLiving;D)V checkAndPerformAttack
	d ()V stop
bsb$d net/minecraft/world/entity/animal/PolarBear$PolarBearPanicGoal
	h ()Z shouldPanic
bsc$a net/minecraft/world/entity/animal/Pufferfish$PufferfishPuffGoal
	a fish
	a ()Z canUse
	c ()V start
	d ()V stop
bsi$a net/minecraft/world/entity/animal/Squid$SquidFleeGoal
	b SQUID_FLEE_SPEED
	c SQUID_FLEE_MIN_DISTANCE
	d SQUID_FLEE_MAX_DISTANCE
	e fleeTicks
	J_ ()Z requiresUpdateEveryTick
	a ()Z canUse
	c ()V start
	e ()V tick
bsj$c net/minecraft/world/entity/animal/TropicalFish$TropicalFishGroupData
	b variant
bsj$d net/minecraft/world/entity/animal/TropicalFish$Variant
	a pattern
	b baseColor
	c patternColor
	a ()I getPackedId
	b ()Lnet/minecraft/world/entity/animal/EntityTropicalFish$Variant; pattern
	c ()Lnet/minecraft/world/item/EnumColor; baseColor
	d ()Lnet/minecraft/world/item/EnumColor; patternColor
bsk$a net/minecraft/world/entity/animal/Turtle$TurtleBreedGoal
	d turtle
	a ()Z canUse
	g ()V breed
bsk$b net/minecraft/world/entity/animal/Turtle$TurtleGoHomeGoal
	a turtle
	b speedModifier
	c stuck
	d closeToHomeTryTicks
	e GIVE_UP_TICKS
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
bsk$c net/minecraft/world/entity/animal/Turtle$TurtleGoToWaterGoal
	g GIVE_UP_TICKS
	h turtle
	a ()Z canUse
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z isValidTarget
	b ()Z canContinueToUse
	l ()Z shouldRecalculatePath
bsk$d net/minecraft/world/entity/animal/Turtle$TurtleLayEggGoal
	g turtle
	a ()Z canUse
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z isValidTarget
	b ()Z canContinueToUse
	e ()V tick
bsk$e net/minecraft/world/entity/animal/Turtle$TurtleMoveControl
	l turtle
	a ()V tick
	g ()V updateSpeed
bsk$f net/minecraft/world/entity/animal/Turtle$TurtlePanicGoal
	a ()Z canUse
bsk$g net/minecraft/world/entity/animal/Turtle$TurtlePathNavigation
	a (Lnet/minecraft/core/BlockPosition;)Z isStableDestination
bsk$h net/minecraft/world/entity/animal/Turtle$TurtleRandomStrollGoal
	i turtle
	a ()Z canUse
bsk$i net/minecraft/world/entity/animal/Turtle$TurtleTravelGoal
	a turtle
	b speedModifier
	c stuck
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
bsm$a net/minecraft/world/entity/animal/Wolf$WolfAvoidEntityGoal
	j wolf
	a ()Z canUse
	a (Lnet/minecraft/world/entity/animal/horse/EntityLlama;)Z avoidLlama
	c ()V start
	e ()V tick
bsm$b net/minecraft/world/entity/animal/Wolf$WolfPanicGoal
	h ()Z shouldPanic
bsn$a net/minecraft/world/entity/animal/allay/Allay$AllayVibrationListenerConfig
	a ()Lnet/minecraft/tags/TagKey; getListenableEvents
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/gameevent/GameEventListener;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/gameevent/GameEvent;Ldga$a;)Z shouldListen
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/gameevent/GameEventListener;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;F)V onSignalReceive
bsn$b net/minecraft/world/entity/animal/allay/Allay$JukeboxListener
	b listenerSource
	c listenerRadius
	a ()Lnet/minecraft/world/level/gameevent/PositionSource; getListenerSource
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/gameevent/GameEvent;Ldga$a;Lnet/minecraft/world/phys/Vec3D;)Z handleGameEvent
	b ()I getListenerRadius
bsq$a net/minecraft/world/entity/animal/axolotl/Axolotl$AxolotlGroupData
	a types
	a (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/entity/animal/axolotl/Axolotl$Variant; getVariant
bsq$b net/minecraft/world/entity/animal/axolotl/Axolotl$AxolotlLookControl
	a ()V tick
bsq$c net/minecraft/world/entity/animal/axolotl/Axolotl$AxolotlMoveControl
	l axolotl
	a ()V tick
bsv$a net/minecraft/world/entity/animal/camel/Camel$CamelBodyRotationControl
	a ()V clientTick
bsv$b net/minecraft/world/entity/animal/camel/Camel$CamelMoveControl
	a ()V tick
bsw$a net/minecraft/world/entity/animal/camel/CamelAi$CamelPanic
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityCreature;J)V start
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
bsw$b net/minecraft/world/entity/animal/camel/CamelAi$RandomSitting
	c minimalPoseTicks
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/camel/Camel;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/camel/Camel;J)V start
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
bsy$a net/minecraft/world/entity/animal/frog/Frog$FrogLookControl
	c ()Z resetXRotOnTick
bsy$b net/minecraft/world/entity/animal/frog/Frog$FrogNodeEvaluator
	m belowPos
	a ()Lnet/minecraft/world/level/pathfinder/PathPoint; getStart
	a (Lnet/minecraft/world/level/IBlockAccess;III)Lnet/minecraft/world/level/pathfinder/PathType; getBlockPathType
bsy$c net/minecraft/world/entity/animal/frog/Frog$FrogPathNavigation
	a (I)Lnet/minecraft/world/level/pathfinder/Pathfinder; createPathFinder
	b (Lnet/minecraft/world/level/pathfinder/PathType;)Z canCutCorner
bt$a net/minecraft/advancements/critereon/FishingRodHookedTrigger$TriggerInstance
	a rod
	b entity
	c item
	a (Lnet/minecraft/advancements/critereon/CriterionConditionItem;Lnet/minecraft/advancements/critereon/CriterionConditionEntity;Lnet/minecraft/advancements/critereon/CriterionConditionItem;)Lbt$a; fishedItem
	a (Lnet/minecraft/advancements/critereon/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootTableInfo;Ljava/util/Collection;)Z matches
bta$a net/minecraft/world/entity/animal/frog/ShootTongue$State
	a MOVE_TO_TARGET
	b CATCH_ANIMATION
	c EAT_ANIMATION
	d DONE
	e $VALUES
	a ()[Lbta$a; $values
btk$a net/minecraft/world/entity/animal/horse/Horse$HorseGroupData
	a variant
btl$a net/minecraft/world/entity/animal/horse/Llama$LlamaAttackWolfGoal
	l ()D getFollowDistance
btl$b net/minecraft/world/entity/animal/horse/Llama$LlamaGroupData
	a variant
btl$c net/minecraft/world/entity/animal/horse/Llama$LlamaHurtByTargetGoal
	b ()Z canContinueToUse
btq$a net/minecraft/world/entity/animal/horse/TraderLlama$TraderLlamaDefendWanderingTraderGoal
	a llama
	b ownerLastHurtBy
	c timestamp
	a ()Z canUse
	c ()V start
btv$a net/minecraft/world/entity/animal/sniffer/Sniffer$State
	a IDLING
	b FEELING_HAPPY
	c SCENTING
	d SNIFFING
	e SEARCHING
	f DIGGING
	g RISING
	h $VALUES
	a ()[Lbtv$a; $values
btw$a net/minecraft/world/entity/animal/sniffer/SnifferAi$Digging
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)Z canStillUse
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)V start
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)V stop
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
btw$b net/minecraft/world/entity/animal/sniffer/SnifferAi$FeelingHappy
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)Z canStillUse
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)V start
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)V stop
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
btw$c net/minecraft/world/entity/animal/sniffer/SnifferAi$FinishedDigging
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)Z canStillUse
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)V start
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)V stop
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
btw$d net/minecraft/world/entity/animal/sniffer/SnifferAi$Scenting
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)Z canStillUse
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)V start
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)V stop
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
btw$e net/minecraft/world/entity/animal/sniffer/SnifferAi$Searching
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)Z canStillUse
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)V start
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)V stop
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
btw$f net/minecraft/world/entity/animal/sniffer/SnifferAi$Sniffing
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)Z canStillUse
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)V start
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)V stop
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
bu$a net/minecraft/advancements/critereon/FluidPredicate$Builder
	a fluid
	b fluids
	c properties
	a ()Lbu$a; fluid
	a (Lnet/minecraft/advancements/critereon/CriterionTriggerProperties;)Lbu$a; setProperties
	a (Lnet/minecraft/tags/TagKey;)Lbu$a; of
	a (Lnet/minecraft/world/level/material/FluidType;)Lbu$a; of
	b ()Lnet/minecraft/advancements/critereon/CriterionConditionFluid; build
but$a net/minecraft/world/entity/boss/wither/WitherBoss$WitherDoNothingGoal
	a ()Z canUse
bv$a net/minecraft/advancements/critereon/ImpossibleTrigger$TriggerInstance
	a ()Lnet/minecraft/resources/MinecraftKey; getCriterion
	a (Lnet/minecraft/advancements/critereon/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
bvi$a net/minecraft/world/entity/monster/AbstractIllager$IllagerArmPose
	a CROSSED
	b ATTACKING
	c SPELLCASTING
	d BOW_AND_ARROW
	e CROSSBOW_HOLD
	f CROSSBOW_CHARGE
	g CELEBRATING
	h NEUTRAL
	i $VALUES
	a ()[Lbvi$a; $values
bvi$b net/minecraft/world/entity/monster/AbstractIllager$RaiderOpenDoorGoal
	a ()Z canUse
bvo$a net/minecraft/world/entity/monster/Drowned$DrownedAttackGoal
	b drowned
	a ()Z canUse
	b ()Z canContinueToUse
bvo$b net/minecraft/world/entity/monster/Drowned$DrownedGoToBeachGoal
	g drowned
	a ()Z canUse
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z isValidTarget
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
bvo$c net/minecraft/world/entity/monster/Drowned$DrownedGoToWaterGoal
	a mob
	b wantedX
	c wantedY
	d wantedZ
	e speedModifier
	f level
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	h ()Lnet/minecraft/world/phys/Vec3D; getWaterPos
bvo$d net/minecraft/world/entity/monster/Drowned$DrownedMoveControl
	l drowned
	a ()V tick
bvo$e net/minecraft/world/entity/monster/Drowned$DrownedSwimUpGoal
	a drowned
	b speedModifier
	c seaLevel
	d stuck
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
bvo$f net/minecraft/world/entity/monster/Drowned$DrownedTridentAttackGoal
	a drowned
	a ()Z canUse
	c ()V start
	d ()V stop
bvq$a net/minecraft/world/entity/monster/EnderMan$EndermanFreezeWhenLookedAt
	a enderman
	b target
	a ()Z canUse
	c ()V start
	e ()V tick
bvt$a net/minecraft/world/entity/monster/Evoker$EvokerAttackSpellGoal
	a (DDDDFI)V createSpellEntity
	h ()I getCastingTime
	i ()I getCastingInterval
	k ()V performSpellCasting
	l ()Lnet/minecraft/sounds/SoundEffect; getSpellPrepareSound
	m ()Lnet/minecraft/world/entity/monster/EntityIllagerWizard$Spell; getSpell
bvt$b net/minecraft/world/entity/monster/Evoker$EvokerCastingSpellGoal
	e ()V tick
bvt$c net/minecraft/world/entity/monster/Evoker$EvokerSummonSpellGoal
	e vexCountTargeting
	a ()Z canUse
	h ()I getCastingTime
	i ()I getCastingInterval
	k ()V performSpellCasting
	l ()Lnet/minecraft/sounds/SoundEffect; getSpellPrepareSound
	m ()Lnet/minecraft/world/entity/monster/EntityIllagerWizard$Spell; getSpell
bvt$d net/minecraft/world/entity/monster/Evoker$EvokerWololoSpellGoal
	e wololoTargeting
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	h ()I getCastingTime
	i ()I getCastingInterval
	k ()V performSpellCasting
	l ()Lnet/minecraft/sounds/SoundEffect; getSpellPrepareSound
	m ()Lnet/minecraft/world/entity/monster/EntityIllagerWizard$Spell; getSpell
	n ()I getCastWarmupTime
bvy$a net/minecraft/world/entity/monster/Illusioner$IllusionerBlindnessSpellGoal
	e lastTargetId
	a ()Z canUse
	c ()V start
	h ()I getCastingTime
	i ()I getCastingInterval
	k ()V performSpellCasting
	l ()Lnet/minecraft/sounds/SoundEffect; getSpellPrepareSound
	m ()Lnet/minecraft/world/entity/monster/EntityIllagerWizard$Spell; getSpell
bvy$b net/minecraft/world/entity/monster/Illusioner$IllusionerMirrorSpellGoal
	a ()Z canUse
	h ()I getCastingTime
	i ()I getCastingInterval
	k ()V performSpellCasting
	l ()Lnet/minecraft/sounds/SoundEffect; getSpellPrepareSound
	m ()Lnet/minecraft/world/entity/monster/EntityIllagerWizard$Spell; getSpell
bw$a net/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance
	a slotsOccupied
	b slotsFull
	c slotsEmpty
	d predicates
	a (Lnet/minecraft/advancements/critereon/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
	a (Lnet/minecraft/world/entity/player/PlayerInventory;Lnet/minecraft/world/item/ItemStack;III)Z matches
	a ([Lnet/minecraft/advancements/critereon/CriterionConditionItem;)Lbw$a; hasItems
	a ([Lnet/minecraft/world/level/IMaterial;)Lbw$a; hasItems
bwb$a net/minecraft/world/entity/monster/PatrollingMonster$LongDistancePatrolGoal
	a NAVIGATION_FAILED_COOLDOWN
	b mob
	c speedModifier
	d leaderSpeedModifier
	e cooldownUntil
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
	h ()Ljava/util/List; findPatrolCompanions
	i ()Z moveRandomly
bwc$b net/minecraft/world/entity/monster/Phantom$PhantomAttackPlayerTargetGoal
	b attackTargeting
	c nextScanTick
	a ()Z canUse
	b ()Z canContinueToUse
bwc$c net/minecraft/world/entity/monster/Phantom$PhantomAttackStrategyGoal
	b nextSweepTick
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
	h ()V setAnchorAboveTarget
bwc$d net/minecraft/world/entity/monster/Phantom$PhantomBodyRotationControl
	a ()V clientTick
bwc$e net/minecraft/world/entity/monster/Phantom$PhantomCircleAroundAnchorGoal
	c angle
	d distance
	e height
	f clockwise
	a ()Z canUse
	c ()V start
	e ()V tick
	i ()V selectNext
bwc$f net/minecraft/world/entity/monster/Phantom$PhantomLookControl
	a ()V tick
bwc$g net/minecraft/world/entity/monster/Phantom$PhantomMoveControl
	m speed
	a ()V tick
bwc$h net/minecraft/world/entity/monster/Phantom$PhantomMoveTargetGoal
	h ()Z touchingTarget
bwc$i net/minecraft/world/entity/monster/Phantom$PhantomSweepAttackGoal
	c CAT_SEARCH_TICK_DELAY
	d isScaredOfCat
	e catSearchTick
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
bwf$a net/minecraft/world/entity/monster/Ravager$RavagerMeleeAttackGoal
	a (Lnet/minecraft/world/entity/EntityLiving;)D getAttackReachSqr
bwg$a net/minecraft/world/entity/monster/Shulker$ShulkerAttackGoal
	b attackTime
	J_ ()Z requiresUpdateEveryTick
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
bwg$b net/minecraft/world/entity/monster/Shulker$ShulkerBodyRotationControl
	a ()V clientTick
bwg$c net/minecraft/world/entity/monster/Shulker$ShulkerDefenseAttackGoal
	a ()Z canUse
	a (D)Lnet/minecraft/world/phys/AxisAlignedBB; getTargetSearchArea
bwg$d net/minecraft/world/entity/monster/Shulker$ShulkerLookControl
	b ()V clampHeadRotationToBody
	h ()Ljava/util/Optional; getXRotD
	i ()Ljava/util/Optional; getYRotD
bwg$e net/minecraft/world/entity/monster/Shulker$ShulkerNearestAttackGoal
	a ()Z canUse
	a (D)Lnet/minecraft/world/phys/AxisAlignedBB; getTargetSearchArea
bwg$f net/minecraft/world/entity/monster/Shulker$ShulkerPeekGoal
	b peekTime
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
bwk$b net/minecraft/world/entity/monster/SpellcasterIllager$SpellcasterCastingSpellGoal
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
bwn$a net/minecraft/world/entity/monster/Strider$StriderGoToLavaGoal
	g strider
	a ()Z canUse
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z isValidTarget
	b ()Z canContinueToUse
	k ()Lnet/minecraft/core/BlockPosition; getMoveToTarget
	l ()Z shouldRecalculatePath
bwn$b net/minecraft/world/entity/monster/Strider$StriderPathNavigation
	a (I)Lnet/minecraft/world/level/pathfinder/Pathfinder; createPathFinder
	a (Lnet/minecraft/core/BlockPosition;)Z isStableDestination
	a (Lnet/minecraft/world/level/pathfinder/PathType;)Z hasValidPathType
bwo$a net/minecraft/world/entity/monster/Vex$VexChargeAttackGoal
	J_ ()Z requiresUpdateEveryTick
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
bwo$b net/minecraft/world/entity/monster/Vex$VexCopyOwnerTargetGoal
	b copyOwnerTargeting
	a ()Z canUse
	c ()V start
bwo$c net/minecraft/world/entity/monster/Vex$VexMoveControl
	a ()V tick
bwo$d net/minecraft/world/entity/monster/Vex$VexRandomMoveGoal
	a ()Z canUse
	b ()Z canContinueToUse
	e ()V tick
bwp$a net/minecraft/world/entity/monster/Vindicator$VindicatorBreakDoorGoal
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
bwp$b net/minecraft/world/entity/monster/Vindicator$VindicatorJohnnyAttackGoal
	a ()Z canUse
	c ()V start
bwp$c net/minecraft/world/entity/monster/Vindicator$VindicatorMeleeAttackGoal
	a (Lnet/minecraft/world/entity/EntityLiving;)D getAttackReachSqr
bwt$a net/minecraft/world/entity/monster/Zombie$ZombieAttackTurtleEggGoal
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)V playDestroyProgressSound
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V playBreakSound
	i ()D acceptedDistance
bx$a net/minecraft/advancements/critereon/ItemDurabilityTrigger$TriggerInstance
	a item
	b durability
	c delta
	a (Lbn$b;Lnet/minecraft/advancements/critereon/CriterionConditionItem;Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange;)Lbx$a; changedDurability
	a (Lnet/minecraft/advancements/critereon/CriterionConditionItem;Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange;)Lbx$a; changedDurability
	a (Lnet/minecraft/advancements/critereon/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
	a (Lnet/minecraft/world/item/ItemStack;I)Z matches
bxp$a net/minecraft/world/entity/monster/warden/AngerManagement$Sorter
	a angerManagement
	a ()Lnet/minecraft/world/entity/monster/warden/AngerManagement; angerManagement
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)I compare
by$a net/minecraft/advancements/critereon/ItemInteractWithBlockTrigger$TriggerInstance
	a location
	b item
	a (Lcg$a;Lbz$a;)Lby$a; itemUsedOnBlock
	a (Lnet/minecraft/advancements/critereon/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/item/ItemStack;)Z matches
	b (Lcg$a;Lbz$a;)Lby$a; allayDropItemOnBlock
byd$a net/minecraft/world/entity/npc/VillagerTrades$DyedArmorForEmeralds
	a item
	b value
	c maxUses
	d villagerXp
	a (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/ItemDye; getRandomDye
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/trading/MerchantRecipe; getOffer
byd$b net/minecraft/world/entity/npc/VillagerTrades$EmeraldForItems
	a item
	b cost
	c maxUses
	d villagerXp
	e priceMultiplier
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/trading/MerchantRecipe; getOffer
byd$c net/minecraft/world/entity/npc/VillagerTrades$EmeraldsForVillagerTypeItem
	a trades
	b cost
	c maxUses
	d villagerXp
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/trading/MerchantRecipe; getOffer
byd$d net/minecraft/world/entity/npc/VillagerTrades$EnchantBookForEmeralds
	a villagerXp
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/trading/MerchantRecipe; getOffer
byd$e net/minecraft/world/entity/npc/VillagerTrades$EnchantedItemForEmeralds
	a itemStack
	b baseEmeraldCost
	c maxUses
	d villagerXp
	e priceMultiplier
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/trading/MerchantRecipe; getOffer
byd$g net/minecraft/world/entity/npc/VillagerTrades$ItemsAndEmeraldsToItems
	a fromItem
	b fromCount
	c emeraldCost
	d toItem
	e toCount
	f maxUses
	g villagerXp
	h priceMultiplier
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/trading/MerchantRecipe; getOffer
byd$h net/minecraft/world/entity/npc/VillagerTrades$ItemsForEmeralds
	a itemStack
	b emeraldCost
	c numberOfItems
	d maxUses
	e villagerXp
	f priceMultiplier
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/trading/MerchantRecipe; getOffer
byd$i net/minecraft/world/entity/npc/VillagerTrades$SuspiciousStewForEmerald
	a effect
	b duration
	c xp
	d priceMultiplier
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/trading/MerchantRecipe; getOffer
byd$j net/minecraft/world/entity/npc/VillagerTrades$TippedArrowForItemsAndEmeralds
	a toItem
	b toCount
	c emeraldCost
	d maxUses
	e villagerXp
	f fromItem
	g fromCount
	h priceMultiplier
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/trading/MerchantRecipe; getOffer
byd$k net/minecraft/world/entity/npc/VillagerTrades$TreasureMapForEmeralds
	a emeraldCost
	b destination
	c displayName
	d destinationType
	e maxUses
	f villagerXp
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/trading/MerchantRecipe; getOffer
byf$a net/minecraft/world/entity/npc/WanderingTrader$WanderToPositionGoal
	a trader
	b stopDistance
	c speedModifier
	a ()Z canUse
	a (Lnet/minecraft/core/BlockPosition;D)Z isTooFarAway
	d ()V stop
	e ()V tick
byo net/minecraft/world/entity/player/ProfileKeyPair
	a CODEC
	b privateKey
	c publicKey
	d refreshedAfter
	a ()Z dueRefresh
	b ()Ljava/security/PrivateKey; privateKey
	c ()Lnet/minecraft/world/entity/player/ProfilePublicKey; publicKey
	d ()Ljava/time/Instant; refreshedAfter
byp$a net/minecraft/world/entity/player/ProfilePublicKey$Data
	a CODEC
	b expiresAt
	c key
	d keySignature
	e MAX_KEY_SIGNATURE_SIZE
	a ()Z hasExpired
	a (Ljava/time/Duration;)Z hasExpired
	a (Ljava/util/UUID;)[B signedPayload
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/util/SignatureValidator;Ljava/util/UUID;)Z validateSignature
	b ()Ljava/time/Instant; expiresAt
	c ()Ljava/security/PublicKey; key
	d ()[B keySignature
byp$b net/minecraft/world/entity/player/ProfilePublicKey$ValidationException
byq$a net/minecraft/world/entity/player/StackedContents$RecipePicker
	b recipe
	c ingredients
	d ingredientCount
	e items
	f itemCount
	g data
	h path
	a ()[I getUniqueAvailableIngredientItems
	a (I)Z dfs
	a (ILit/unimi/dsi/fastutil/ints/IntList;)Z tryPick
	a (ZI)V visit
	a (ZII)Z hasConnection
	b ()I getMinIngredientCount
	b (I)Z isSatisfied
	b (ILit/unimi/dsi/fastutil/ints/IntList;)I tryPickAll
	b (ZI)Z hasVisited
	b (ZII)Z hasResidual
	c (I)V setSatisfied
	c (ZI)I getVisitedIndex
	c (ZII)V toggleResidual
	d (I)I getSatisfiedIndex
	d (ZII)I getIndex
bz$a net/minecraft/advancements/critereon/ItemPredicate$Builder
	a enchantments
	b storedEnchantments
	c items
	d tag
	e count
	f durability
	g potion
	h nbt
	a ()Lbz$a; item
	a (Lnet/minecraft/advancements/critereon/CriterionConditionEnchantments;)Lbz$a; hasEnchantment
	a (Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange;)Lbz$a; withCount
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lbz$a; hasNbt
	a (Lnet/minecraft/tags/TagKey;)Lbz$a; of
	a (Lnet/minecraft/world/item/alchemy/PotionRegistry;)Lbz$a; isPotion
	a ([Lnet/minecraft/world/level/IMaterial;)Lbz$a; of
	b ()Lnet/minecraft/advancements/critereon/CriterionConditionItem; build
	b (Lnet/minecraft/advancements/critereon/CriterionConditionEnchantments;)Lbz$a; hasStoredEnchantment
	b (Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange;)Lbz$a; hasDurability
bzu$a net/minecraft/world/entity/raid/Raider$HoldGroundAttackGoal
	a shoutTargeting
	c mob
	d hostileRadiusSqr
	J_ ()Z requiresUpdateEveryTick
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
bzu$b net/minecraft/world/entity/raid/Raider$ObtainRaidLeaderBannerGoal
	b mob
	a ()Z canUse
	e ()V tick
bzu$c net/minecraft/world/entity/raid/Raider$RaiderCelebration
	b mob
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
bzu$d net/minecraft/world/entity/raid/Raider$RaiderMoveThroughVillageGoal
	a raider
	b speedModifier
	c poiPos
	d visited
	e distanceToPoi
	f stuck
	a ()Z canUse
	a (Lnet/minecraft/core/BlockPosition;)Z hasNotVisited
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	h ()Z isValidRaid
	i ()Z hasSuitablePoi
	k ()V updateVisited
c com/mojang/math/Divisor
	a denominator
	b quotient
	c mod
	d returnedParts
	e remainder
	a (II)Ljava/lang/Iterable; asIterable
ca$a net/minecraft/advancements/critereon/KilledByCrossbowTrigger$TriggerInstance
	a victims
	b uniqueEntityTypes
	a (Ljava/util/Collection;I)Z matches
	a (Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange;)Lca$a; crossbowKilled
	a (Lnet/minecraft/advancements/critereon/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
	a ([Lbn$a;)Lca$a; crossbowKilled
caa$a net/minecraft/world/entity/schedule/ScheduleBuilder$ActivityTransition
	a time
	b activity
	a ()I getTime
	b ()Lnet/minecraft/world/entity/schedule/Activity; getActivity
cal$a net/minecraft/world/entity/vehicle/MinecartCommandBlock$MinecartCommandBase
	e ()Lnet/minecraft/server/level/WorldServer; getLevel
	f ()V onUpdated
	g ()Lnet/minecraft/world/phys/Vec3D; getPosition
	h ()Lnet/minecraft/world/entity/vehicle/EntityMinecartCommandBlock; getMinecart
	i ()Lnet/minecraft/commands/CommandListenerWrapper; createCommandSourceStack
cat$a net/minecraft/world/flag/FeatureFlagRegistry$Builder
	a universe
	b id
	c flags
	a ()Lnet/minecraft/world/flag/FeatureFlagRegistry; build
	a (Ljava/lang/String;)Lnet/minecraft/world/flag/FeatureFlag; createVanilla
	a (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/world/flag/FeatureFlag; create
cay net/minecraft/world/food/FoodConstants
	a MAX_FOOD
	b MAX_SATURATION
	c START_SATURATION
	d SATURATION_FLOOR
	e EXHAUSTION_DROP
	f HEALTH_TICK_COUNT
	g HEALTH_TICK_COUNT_SATURATED
	h HEAL_LEVEL
	i SPRINT_LEVEL
	j STARVE_LEVEL
	k FOOD_SATURATION_POOR
	l FOOD_SATURATION_LOW
	m FOOD_SATURATION_NORMAL
	n FOOD_SATURATION_GOOD
	o FOOD_SATURATION_MAX
	p FOOD_SATURATION_SUPERNATURAL
	q EXHAUSTION_HEAL
	r EXHAUSTION_JUMP
	s EXHAUSTION_SPRINT_JUMP
	t EXHAUSTION_MINE
	u EXHAUSTION_ATTACK
	v EXHAUSTION_WALK
	w EXHAUSTION_CROUCH
	x EXHAUSTION_SPRINT
	y EXHAUSTION_SWIM
cb$a net/minecraft/advancements/critereon/KilledTrigger$TriggerInstance
	a entityPredicate
	b killingBlow
	a (Lbn$a;)Lcb$a; playerKilledEntity
	a (Lbn$a;Lbc$a;)Lcb$a; playerKilledEntity
	a (Lbn$a;Lnet/minecraft/advancements/critereon/CriterionConditionDamageSource;)Lcb$a; playerKilledEntity
	a (Lnet/minecraft/advancements/critereon/CriterionConditionEntity;)Lcb$a; playerKilledEntity
	a (Lnet/minecraft/advancements/critereon/CriterionConditionEntity;Lbc$a;)Lcb$a; playerKilledEntity
	a (Lnet/minecraft/advancements/critereon/CriterionConditionEntity;Lnet/minecraft/advancements/critereon/CriterionConditionDamageSource;)Lcb$a; playerKilledEntity
	a (Lnet/minecraft/advancements/critereon/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/level/storage/loot/LootTableInfo;Lnet/minecraft/world/damagesource/DamageSource;)Z matches
	b (Lbn$a;)Lcb$a; entityKilledPlayer
	b (Lbn$a;Lbc$a;)Lcb$a; entityKilledPlayer
	b (Lbn$a;Lnet/minecraft/advancements/critereon/CriterionConditionDamageSource;)Lcb$a; entityKilledPlayer
	b (Lnet/minecraft/advancements/critereon/CriterionConditionEntity;)Lcb$a; entityKilledPlayer
	b (Lnet/minecraft/advancements/critereon/CriterionConditionEntity;Lbc$a;)Lcb$a; entityKilledPlayer
	b (Lnet/minecraft/advancements/critereon/CriterionConditionEntity;Lnet/minecraft/advancements/critereon/CriterionConditionDamageSource;)Lcb$a; entityKilledPlayer
	c ()Lcb$a; playerKilledEntity
	d ()Lcb$a; playerKilledEntityNearSculkCatalyst
	e ()Lcb$a; entityKilledPlayer
cba$a net/minecraft/world/food/FoodProperties$Builder
	a nutrition
	b saturationModifier
	c isMeat
	d canAlwaysEat
	e fastFood
	f effects
	a ()Lcba$a; meat
	a (F)Lcba$a; saturationMod
	a (I)Lcba$a; nutrition
	a (Lnet/minecraft/world/effect/MobEffect;F)Lcba$a; effect
	b ()Lcba$a; alwaysEat
	c ()Lcba$a; fast
	d ()Lnet/minecraft/world/food/FoodInfo; build
cbi$a net/minecraft/world/inventory/BrewingStandMenu$FuelSlot
	a ()I getMaxStackSize
	a (Lnet/minecraft/world/item/ItemStack;)Z mayPlace
	b (Lnet/minecraft/world/item/ItemStack;)Z mayPlaceItem
cc$a net/minecraft/advancements/critereon/LevitationTrigger$TriggerInstance
	a distance
	b duration
	a (Lnet/minecraft/advancements/critereon/CriterionConditionDistance;)Lcc$a; levitated
	a (Lnet/minecraft/advancements/critereon/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/phys/Vec3D;I)Z matches
cce$a net/minecraft/world/inventory/ItemCombinerMenuSlotDefinition$Builder
	a slots
	b resultSlot
	a ()Lnet/minecraft/world/inventory/ItemCombinerMenuSlotDefinition; build
	a (III)Lcce$a; withResultSlot
	a (IIILjava/util/function/Predicate;)Lcce$a; withSlot
cce$b net/minecraft/world/inventory/ItemCombinerMenuSlotDefinition$SlotDefinition
	a slotIndex
	b x
	c y
	d mayPlace
	e EMPTY
	a ()I slotIndex
	b ()I x
	c ()I y
	d ()Ljava/util/function/Predicate; mayPlace
cd$a net/minecraft/advancements/critereon/LightPredicate$Builder
	a composite
	a ()Lcd$a; light
	a (Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange;)Lcd$a; setComposite
	b ()Lnet/minecraft/advancements/critereon/CriterionConditionLight; build
cdh$a net/minecraft/world/item/ArmorItem$Type
	a HELMET
	b CHESTPLATE
	c LEGGINGS
	d BOOTS
	e slot
	f name
	g $VALUES
	a ()Lnet/minecraft/world/entity/EnumItemSlot; getSlot
	b ()Ljava/lang/String; getName
	c ()[Lcdh$a; $values
cdx$a net/minecraft/world/item/BrushItem$DustParticlesDelta
	a xd
	b yd
	c zd
	d ALONG_SIDE_DELTA
	e OUT_FROM_SIDE_DELTA
	a ()D xd
	a (Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/core/EnumDirection;)Lcdx$a; fromDirection
	b ()D yd
	c ()D zd
ced net/minecraft/world/item/CreativeModeTab
	a displayName
	b backgroundSuffix
	c canScroll
	d showTitle
	e alignedRight
	f row
	g column
	h type
	i iconItemStack
	j displayItems
	k displayItemsSearchTab
	l searchTreeBuilder
	m iconGenerator
	n displayItemsGenerator
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getDisplayName
	a (Lced$d;)V buildContents
	a (Lced$f;I)Lced$a; builder
	a (Ljava/util/function/Consumer;)V setSearchTreeBuilder
	a (Lnet/minecraft/world/item/ItemStack;)Z contains
	b ()Lnet/minecraft/world/item/ItemStack; getIconItem
	c ()Ljava/lang/String; getBackgroundSuffix
	d ()Z showTitle
	e ()Z canScroll
	f ()I column
	g ()Lced$f; row
	h ()Z hasAnyItems
	i ()Z shouldDisplay
	j ()Z isAlignedRight
	k ()Lced$h; getType
	l ()Ljava/util/Collection; getDisplayItems
	m ()Ljava/util/Collection; getSearchTabDisplayItems
	n ()V rebuildSearchTree
ced$a net/minecraft/world/item/CreativeModeTab$Builder
	a EMPTY_GENERATOR
	b row
	c column
	d displayName
	e iconGenerator
	f displayItemsGenerator
	g canScroll
	h showTitle
	i alignedRight
	j type
	k backgroundSuffix
	a ()Lced$a; alignedRight
	a (Lced$b;)Lced$a; displayItems
	a (Lced$h;)Lced$a; type
	a (Ljava/lang/String;)Lced$a; backgroundSuffix
	a (Ljava/util/function/Supplier;)Lced$a; icon
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)Lced$a; title
	b ()Lced$a; hideTitle
	c ()Lced$a; noScrollBar
	d ()Lced; build
ced$b net/minecraft/world/item/CreativeModeTab$DisplayItemsGenerator
ced$c net/minecraft/world/item/CreativeModeTab$ItemDisplayBuilder
	a tabContents
	b searchTabContents
	c tab
	d featureFlagSet
	a (Lnet/minecraft/world/item/ItemStack;Lced$g;)V accept
ced$d net/minecraft/world/item/CreativeModeTab$ItemDisplayParameters
	a enabledFeatures
	b hasPermissions
	c holders
	a ()Lnet/minecraft/world/flag/FeatureFlagSet; enabledFeatures
	a (Lnet/minecraft/world/flag/FeatureFlagSet;ZLhf$b;)Z needsUpdate
	b ()Z hasPermissions
	c ()Lhf$b; holders
ced$e net/minecraft/world/item/CreativeModeTab$Output
	a (Ljava/util/Collection;)V acceptAll
	a (Ljava/util/Collection;Lced$g;)V acceptAll
	a (Lnet/minecraft/world/item/ItemStack;)V accept
	a (Lnet/minecraft/world/item/ItemStack;Lced$g;)V accept
	a (Lnet/minecraft/world/level/IMaterial;)V accept
	a (Lnet/minecraft/world/level/IMaterial;Lced$g;)V accept
ced$f net/minecraft/world/item/CreativeModeTab$Row
	a TOP
	b BOTTOM
	c $VALUES
	a ()[Lced$f; $values
ced$g net/minecraft/world/item/CreativeModeTab$TabVisibility
	a PARENT_AND_SEARCH_TABS
	b PARENT_TAB_ONLY
	c SEARCH_TAB_ONLY
	d $VALUES
	a ()[Lced$g; $values
ced$h net/minecraft/world/item/CreativeModeTab$Type
	a CATEGORY
	b INVENTORY
	c HOTBAR
	d SEARCH
	e $VALUES
	a ()[Lced$h; $values
cee net/minecraft/world/item/CreativeModeTabs
	a BUILDING_BLOCKS
	b COLORED_BLOCKS
	c NATURAL_BLOCKS
	d FUNCTIONAL_BLOCKS
	e REDSTONE_BLOCKS
	f HOTBAR
	g SEARCH
	h TOOLS_AND_UTILITIES
	i COMBAT
	j FOOD_AND_DRINKS
	k INGREDIENTS
	l SPAWN_EGGS
	m OP_BLOCKS
	n INVENTORY
	o TABS
	p PAINTING_COMPARATOR
	q CACHED_PARAMETERS
	a ()Lced; getDefaultTab
	a (Lced$d;)V buildAllTabContents
	a (Lced$e;Lced$g;)V generateSuspiciousStews
	a (Lced$e;Lhf$c;Ljava/util/function/Predicate;Lced$g;)V generatePresetPaintings
	a (Lced$e;Lnet/minecraft/core/HolderLookup;Ljava/util/Set;Lced$g;)V generateEnchantmentBookTypesOnlyMaxLevel
	a (Lced$e;Lnet/minecraft/core/HolderLookup;Lnet/minecraft/world/item/Item;Lced$g;)V generatePotionEffectTypes
	a (Lced$e;Lnet/minecraft/core/HolderLookup;Lnet/minecraft/world/item/Item;Lnet/minecraft/tags/TagKey;Lced$g;)V generateInstrumentTypes
	a (Lnet/minecraft/world/flag/FeatureFlagSet;ZLhf$b;)Z tryRebuildTabContents
	a ([Lced;)Ljava/util/List; checkTabs
	b ()Ljava/util/List; tabs
	b (Lced$e;Lced$g;)V generateFireworksAllDurations
	b (Lced$e;Lnet/minecraft/core/HolderLookup;Ljava/util/Set;Lced$g;)V generateEnchantmentBookTypesAllLevels
	c ()Ljava/util/List; allTabs
	d ()Lced; searchTab
cf$a net/minecraft/advancements/critereon/LightningStrikeTrigger$TriggerInstance
	a lightning
	b bystander
	a (Lnet/minecraft/advancements/critereon/CriterionConditionEntity;Lnet/minecraft/advancements/critereon/CriterionConditionEntity;)Lcf$a; lighthingStrike
	a (Lnet/minecraft/advancements/critereon/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;Ljava/util/List;)Z matches
cfw net/minecraft/world/item/ItemStackLinkedSet
	a TYPE_AND_TAG
	a ()Ljava/util/Set; createTypeAndTagSet
	a (Lnet/minecraft/world/item/ItemStack;)I hashStackAndTag
cg$a net/minecraft/advancements/critereon/LocationPredicate$Builder
	a x
	b y
	c z
	d biome
	e structure
	f dimension
	g smokey
	h light
	i block
	j fluid
	a ()Lcg$a; location
	a (Ljava/lang/Boolean;)Lcg$a; setSmokey
	a (Lnet/minecraft/advancements/critereon/CriterionConditionBlock;)Lcg$a; setBlock
	a (Lnet/minecraft/advancements/critereon/CriterionConditionFluid;)Lcg$a; setFluid
	a (Lnet/minecraft/advancements/critereon/CriterionConditionLight;)Lcg$a; setLight
	a (Lnet/minecraft/advancements/critereon/CriterionConditionValue$DoubleRange;)Lcg$a; setX
	a (Lnet/minecraft/resources/ResourceKey;)Lcg$a; setBiome
	b ()Lnet/minecraft/advancements/critereon/CriterionConditionLocation; build
	b (Lnet/minecraft/advancements/critereon/CriterionConditionValue$DoubleRange;)Lcg$a; setY
	b (Lnet/minecraft/resources/ResourceKey;)Lcg$a; setStructure
	c (Lnet/minecraft/advancements/critereon/CriterionConditionValue$DoubleRange;)Lcg$a; setZ
	c (Lnet/minecraft/resources/ResourceKey;)Lcg$a; setDimension
ch$a net/minecraft/advancements/critereon/LootTableTrigger$TriggerInstance
	a lootTable
	a (Lnet/minecraft/advancements/critereon/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
	a (Lnet/minecraft/resources/MinecraftKey;)Lch$a; lootTableUsed
	b (Lnet/minecraft/resources/MinecraftKey;)Z matches
chl$a net/minecraft/world/item/TooltipFlag$Default
	c advanced
	d creative
	a ()Z isAdvanced
	b ()Z isCreative
	c ()Lchl$a; asCreative
	d ()Z advanced
	e ()Z creative
ci$a net/minecraft/advancements/critereon/MinMaxBounds$BoundsFactory
ci$b net/minecraft/advancements/critereon/MinMaxBounds$BoundsFromReaderFactory
ciu$b net/minecraft/world/item/crafting/Ingredient$TagValue
	a tag
	a ()Ljava/util/Collection; getItems
	b ()Lcom/google/gson/JsonObject; serialize
civ$a net/minecraft/world/item/crafting/LegacyUpgradeRecipe$Serializer
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/world/item/crafting/IRecipe;)V toNetwork
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/world/item/crafting/LegacyUpgradeRecipe;)V toNetwork
	a (Lnet/minecraft/resources/MinecraftKey;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/LegacyUpgradeRecipe; fromJson
	a (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/world/item/crafting/LegacyUpgradeRecipe; fromNetwork
	b (Lnet/minecraft/resources/MinecraftKey;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/IRecipe; fromJson
	b (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/world/item/crafting/IRecipe; fromNetwork
ciz$a net/minecraft/world/item/crafting/RecipeManager$CachedCheck
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/world/level/World;)Ljava/util/Optional; getRecipeFor
cj$a net/minecraft/advancements/critereon/MobEffectsPredicate$MobEffectInstancePredicate
	a amplifier
	b duration
	c ambient
	d visible
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonObject;)Lcj$a; fromJson
	a (Lnet/minecraft/world/effect/MobEffect;)Z matches
cjd$a net/minecraft/world/item/crafting/ShapedRecipe$Serializer
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/world/item/crafting/IRecipe;)V toNetwork
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/world/item/crafting/ShapedRecipes;)V toNetwork
	a (Lnet/minecraft/resources/MinecraftKey;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/ShapedRecipes; fromJson
	a (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/world/item/crafting/ShapedRecipes; fromNetwork
	b (Lnet/minecraft/resources/MinecraftKey;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/IRecipe; fromJson
	b (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/world/item/crafting/IRecipe; fromNetwork
cje$a net/minecraft/world/item/crafting/ShapelessRecipe$Serializer
	a (Lcom/google/gson/JsonArray;)Lnet/minecraft/core/NonNullList; itemsFromJson
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/world/item/crafting/IRecipe;)V toNetwork
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/world/item/crafting/ShapelessRecipes;)V toNetwork
	a (Lnet/minecraft/resources/MinecraftKey;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/ShapelessRecipes; fromJson
	a (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/world/item/crafting/ShapelessRecipes; fromNetwork
	b (Lnet/minecraft/resources/MinecraftKey;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/IRecipe; fromJson
	b (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/world/item/crafting/IRecipe; fromNetwork
cjh$a net/minecraft/world/item/crafting/SimpleCookingSerializer$CookieBaker
cji$a net/minecraft/world/item/crafting/SimpleCraftingRecipeSerializer$Factory
cjj$a net/minecraft/world/item/crafting/SingleItemRecipe$Serializer
	y factory
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/world/item/crafting/IRecipe;)V toNetwork
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/world/item/crafting/RecipeSingleItem;)V toNetwork
	a (Lnet/minecraft/resources/MinecraftKey;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/RecipeSingleItem; fromJson
	a (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/world/item/crafting/RecipeSingleItem; fromNetwork
	b (Lnet/minecraft/resources/MinecraftKey;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/IRecipe; fromJson
	b (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/world/item/crafting/IRecipe; fromNetwork
cjj$a$a net/minecraft/world/item/crafting/SingleItemRecipe$Serializer$SingleItemMaker
cjm$a net/minecraft/world/item/crafting/SmithingTransformRecipe$Serializer
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/world/item/crafting/IRecipe;)V toNetwork
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/world/item/crafting/SmithingTransformRecipe;)V toNetwork
	a (Lnet/minecraft/resources/MinecraftKey;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/SmithingTransformRecipe; fromJson
	a (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/world/item/crafting/SmithingTransformRecipe; fromNetwork
	b (Lnet/minecraft/resources/MinecraftKey;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/IRecipe; fromJson
	b (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/world/item/crafting/IRecipe; fromNetwork
cjn$a net/minecraft/world/item/crafting/SmithingTrimRecipe$Serializer
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/world/item/crafting/IRecipe;)V toNetwork
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/world/item/crafting/SmithingTrimRecipe;)V toNetwork
	a (Lnet/minecraft/resources/MinecraftKey;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/SmithingTrimRecipe; fromJson
	a (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/world/item/crafting/SmithingTrimRecipe; fromNetwork
	b (Lnet/minecraft/resources/MinecraftKey;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/IRecipe; fromJson
	b (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/world/item/crafting/IRecipe; fromNetwork
cke$a net/minecraft/world/item/enchantment/EnchantmentHelper$EnchantmentVisitor
cl$a net/minecraft/advancements/critereon/PickedUpItemTrigger$TriggerInstance
	a item
	b entity
	a (Lbn$b;Lnet/minecraft/advancements/critereon/CriterionConditionItem;Lbn$b;)Lcl$a; thrownItemPickedUpByEntity
	a (Lnet/minecraft/advancements/critereon/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Z matches
	b (Lbn$b;Lnet/minecraft/advancements/critereon/CriterionConditionItem;Lbn$b;)Lcl$a; thrownItemPickedUpByPlayer
clr$c net/minecraft/world/level/ClipContext$ShapeGetter
cm$a net/minecraft/advancements/critereon/PlacedBlockTrigger$TriggerInstance
	a block
	b state
	c location
	d item
	a (Lnet/minecraft/advancements/critereon/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
	a (Lnet/minecraft/world/level/block/Block;)Lcm$a; placedBlock
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/item/ItemStack;)Z matches
cme$h net/minecraft/world/level/GameRules$VisitorCaller
cmi$a net/minecraft/world/level/Level$ExplosionInteraction
	a NONE
	b BLOCK
	c MOB
	d TNT
	e $VALUES
	a ()[Lcmi$a; $values
cms$a net/minecraft/world/level/LocalMobCapCalculator$MobCounts
	a counts
	a (Lnet/minecraft/world/entity/EnumCreatureType;)V add
	b (Lnet/minecraft/world/entity/EnumCreatureType;)Z canSpawn
cmt$a net/minecraft/world/level/NaturalSpawner$AfterSpawnCallback
cmt$b net/minecraft/world/level/NaturalSpawner$ChunkGetter
cmt$c net/minecraft/world/level/NaturalSpawner$SpawnPredicate
cmt$d net/minecraft/world/level/NaturalSpawner$SpawnState
	a spawnableChunkCount
	b mobCategoryCounts
	c spawnPotential
	d unmodifiableMobCategoryCounts
	e localMobCapCalculator
	f lastCheckedPos
	g lastCheckedType
	h lastCharge
	a ()I getSpawnableChunkCount
	a (Lnet/minecraft/world/entity/EntityInsentient;Lnet/minecraft/world/level/chunk/IChunkAccess;)V afterSpawn
	a (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/chunk/IChunkAccess;)Z canSpawn
	a (Lnet/minecraft/world/entity/EnumCreatureType;Lnet/minecraft/world/level/ChunkCoordIntPair;)Z canSpawnForCategory
	b ()Lit/unimi/dsi/fastutil/objects/Object2IntMap; getMobCategoryCounts
cmw$a net/minecraft/world/level/PotentialCalculator$PointCharge
	a pos
	b charge
	a (Lnet/minecraft/core/BlockPosition;)D getPotentialChange
cmy$a net/minecraft/world/level/SpawnData$CustomSpawnRules
	a CODEC
	b blockLightLimit
	c skyLightLimit
	d LIGHT_RANGE
	a ()Lnet/minecraft/util/InclusiveRange; blockLightLimit
	a (Lnet/minecraft/util/InclusiveRange;)Lcom/mojang/serialization/DataResult; checkLightBoundaries
	b ()Lnet/minecraft/util/InclusiveRange; skyLightLimit
cn$a net/minecraft/advancements/critereon/PlayerHurtEntityTrigger$TriggerInstance
	a damage
	b entity
	a (Lbb$a;)Lcn$a; playerHurtEntity
	a (Lbb$a;Lnet/minecraft/advancements/critereon/CriterionConditionEntity;)Lcn$a; playerHurtEntity
	a (Lnet/minecraft/advancements/critereon/CriterionConditionDamage;)Lcn$a; playerHurtEntity
	a (Lnet/minecraft/advancements/critereon/CriterionConditionDamage;Lnet/minecraft/advancements/critereon/CriterionConditionEntity;)Lcn$a; playerHurtEntity
	a (Lnet/minecraft/advancements/critereon/CriterionConditionEntity;)Lcn$a; playerHurtEntity
	a (Lnet/minecraft/advancements/critereon/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/level/storage/loot/LootTableInfo;Lnet/minecraft/world/damagesource/DamageSource;FFZ)Z matches
	c ()Lcn$a; playerHurtEntity
cnf$a net/minecraft/world/level/biome/Biome$BiomeBuilder
	a hasPrecipitation
	b temperature
	c temperatureModifier
	d downfall
	e specialEffects
	f mobSpawnSettings
	g generationSettings
	a ()Lnet/minecraft/world/level/biome/BiomeBase; build
	a (F)Lcnf$a; temperature
	a (Lnet/minecraft/world/level/biome/BiomeBase$TemperatureModifier;)Lcnf$a; temperatureAdjustment
	a (Lnet/minecraft/world/level/biome/BiomeFog;)Lcnf$a; specialEffects
	a (Lnet/minecraft/world/level/biome/BiomeSettingsGeneration;)Lcnf$a; generationSettings
	a (Lnet/minecraft/world/level/biome/BiomeSettingsMobs;)Lcnf$a; mobSpawnSettings
	a (Z)Lcnf$a; hasPrecipitation
	b (F)Lcnf$a; downfall
cng$a net/minecraft/world/level/biome/BiomeGenerationSettings$Builder
	a placedFeatures
	b worldCarvers
	a (Lnet/minecraft/world/level/levelgen/WorldGenStage$Decoration;Lnet/minecraft/resources/ResourceKey;)Lcng$a; addFeature
	a (Lnet/minecraft/world/level/levelgen/WorldGenStage$Features;Lnet/minecraft/resources/ResourceKey;)Lcng$a; addCarver
cng$b net/minecraft/world/level/biome/BiomeGenerationSettings$PlainBuilder
	a carvers
	b features
	a ()Lnet/minecraft/world/level/biome/BiomeSettingsGeneration; build
	a (I)V addFeatureStepsUpTo
	a (ILnet/minecraft/core/Holder;)Lcng$b; addFeature
	a (Lnet/minecraft/world/level/levelgen/WorldGenStage$Decoration;Lnet/minecraft/core/Holder;)Lcng$b; addFeature
	a (Lnet/minecraft/world/level/levelgen/WorldGenStage$Features;Lnet/minecraft/core/Holder;)Lcng$b; addCarver
cnl$a net/minecraft/world/level/biome/BiomeSpecialEffects$Builder
	a fogColor
	b waterColor
	c waterFogColor
	d skyColor
	e foliageColorOverride
	f grassColorOverride
	g grassColorModifier
	h ambientParticle
	i ambientLoopSoundEvent
	j ambientMoodSettings
	k ambientAdditionsSettings
	l backgroundMusic
	a ()Lnet/minecraft/world/level/biome/BiomeFog; build
	a (I)Lcnl$a; fogColor
	a (Lnet/minecraft/core/Holder;)Lcnl$a; ambientLoopSound
	a (Lnet/minecraft/sounds/Music;)Lcnl$a; backgroundMusic
	a (Lnet/minecraft/world/level/biome/BiomeFog$GrassColor;)Lcnl$a; grassColorModifier
	a (Lnet/minecraft/world/level/biome/BiomeParticles;)Lcnl$a; ambientParticle
	a (Lnet/minecraft/world/level/biome/CaveSound;)Lcnl$a; ambientAdditionsSound
	a (Lnet/minecraft/world/level/biome/CaveSoundSettings;)Lcnl$a; ambientMoodSound
	b (I)Lcnl$a; waterColor
	c (I)Lcnl$a; waterFogColor
	d (I)Lcnl$a; skyColor
	e (I)Lcnl$a; foliageColorOverride
	f (I)Lcnl$a; grassColorOverride
cno$a net/minecraft/world/level/biome/Climate$DistanceMetric
cno$b net/minecraft/world/level/biome/Climate$Parameter
	a CODEC
	b min
	c max
	a ()J min
	a (F)Lcno$b; point
	a (FF)Lcno$b; span
	a (J)J distance
	a (Lcno$b;)J distance
	a (Lcno$b;Lcno$b;)Lcno$b; span
	b ()J max
	b (Lcno$b;)Lcno$b; span
cno$c net/minecraft/world/level/biome/Climate$ParameterList
	a values
	b index
	a ()Ljava/util/List; values
	a (Lcno$h;)Ljava/lang/Object; findValue
	a (Lcno$h;Lcno$a;)Ljava/lang/Object; findValueIndex
	a (Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/Codec; codec
	b (Lcno$h;)Ljava/lang/Object; findValueBruteForce
	c (Lcno$h;)Ljava/lang/Object; findValueIndex
cno$d net/minecraft/world/level/biome/Climate$ParameterPoint
	a CODEC
	b temperature
	c humidity
	d continentalness
	e erosion
	f depth
	g weirdness
	h offset
	a ()Ljava/util/List; parameterSpace
	a (Lcno$h;)J fitness
	b ()Lcno$b; temperature
	c ()Lcno$b; humidity
	d ()Lcno$b; continentalness
	e ()Lcno$b; erosion
	f ()Lcno$b; depth
	g ()Lcno$b; weirdness
	h ()J offset
cno$e net/minecraft/world/level/biome/Climate$RTree
	a CHILDREN_PER_NODE
	b root
	c lastResult
	a (ILjava/util/List;)Lcno$e$b; build
	a (IZ)Ljava/util/Comparator; comparator
	a (Lcno$h;Lcno$a;)Ljava/lang/Object; search
	a (Ljava/util/List;)Lcno$e; create
	a (Ljava/util/List;IIZ)V sort
	a ([Lcno$b;)J cost
	b (Ljava/util/List;)Ljava/util/List; bucketize
	c (Ljava/util/List;)Ljava/util/List; buildParameterSpace
cno$e$a net/minecraft/world/level/biome/Climate$RTree$Leaf
	b value
	a ([JLcno$e$a;Lcno$a;)Lcno$e$a; search
cno$e$b net/minecraft/world/level/biome/Climate$RTree$Node
	a parameterSpace
	a ([J)J distance
	a ([JLcno$e$a;Lcno$a;)Lcno$e$a; search
cno$e$c net/minecraft/world/level/biome/Climate$RTree$SubTree
	b children
	a ([JLcno$e$a;Lcno$a;)Lcno$e$a; search
cno$g net/minecraft/world/level/biome/Climate$SpawnFinder
	a result
	a (Ljava/util/List;Lnet/minecraft/world/level/biome/Climate$Sampler;FF)V radialSearch
	a (Ljava/util/List;Lnet/minecraft/world/level/biome/Climate$Sampler;II)Lcno$g$a; getSpawnPositionAndFitness
cno$g$a net/minecraft/world/level/biome/Climate$SpawnFinder$Result
	a location
	b fitness
	a ()Lnet/minecraft/core/BlockPosition; location
	b ()J fitness
cno$h net/minecraft/world/level/biome/Climate$TargetPoint
	a temperature
	b humidity
	c continentalness
	d erosion
	e depth
	f weirdness
	a ()[J toParameterArray
	b ()J temperature
	c ()J humidity
	d ()J continentalness
	e ()J erosion
	f ()J depth
	g ()J weirdness
cnp$b net/minecraft/world/level/biome/FeatureSorter$StepFeatureData
	a features
	b indexMapping
	a ()Ljava/util/List; features
	b ()Ljava/util/function/ToIntFunction; indexMapping
cnr$a net/minecraft/world/level/biome/MobSpawnSettings$Builder
	a spawners
	b mobSpawnCosts
	c creatureGenerationProbability
	a ()Lnet/minecraft/world/level/biome/BiomeSettingsMobs; build
	a (F)Lcnr$a; creatureGenerationProbability
	a (Lnet/minecraft/world/entity/EntityTypes;DD)Lcnr$a; addMobCharge
	a (Lnet/minecraft/world/entity/EnumCreatureType;Lcnr$c;)Lcnr$a; addSpawn
cnr$b net/minecraft/world/level/biome/MobSpawnSettings$MobSpawnCost
	a CODEC
	b energyBudget
	c charge
	a ()D energyBudget
	b ()D charge
cnr$c net/minecraft/world/level/biome/MobSpawnSettings$SpawnerData
	a CODEC
	b type
	c minCount
	d maxCount
cnt$a net/minecraft/world/level/biome/MultiNoiseBiomeSourceParameterList$Preset
	a NETHER
	b OVERWORLD
	c OVERWORLD_UPDATE_1_20
	d CODEC
	e id
	f provider
	g BY_NAME
	a ()Ljava/util/stream/Stream; usedBiomes
	a (Ljava/util/function/Function;Lcnv$a;)Lcno$c; generateOverworldBiomes
	b ()Lnet/minecraft/resources/MinecraftKey; id
	c ()Lcnt$a$a; provider
cnt$a$a net/minecraft/world/level/biome/MultiNoiseBiomeSourceParameterList$Preset$SourceProvider
cnv$a net/minecraft/world/level/biome/OverworldBiomeBuilder$Modifier
	a NONE
	b UPDATE_1_20
	c $VALUES
	a ()[Lcnv$a; $values
co$a net/minecraft/advancements/critereon/PlayerInteractTrigger$TriggerInstance
	a item
	b entity
	a (Lbn$b;Lbz$a;Lbn$b;)Lco$a; itemUsedOnEntity
	a (Lbz$a;Lbn$b;)Lco$a; itemUsedOnEntity
	a (Lnet/minecraft/advancements/critereon/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Z matches
com/mojang/blaze3d/platform/GlStateManager$a com/mojang/blaze3d/platform/GlStateManager$BlendState
	a mode
	b srcRgb
	c dstRgb
	d srcAlpha
	e dstAlpha
com/mojang/blaze3d/platform/GlStateManager$b com/mojang/blaze3d/platform/GlStateManager$BooleanState
	a state
	b enabled
	a ()V disable
	a (Z)V setEnabled
	b ()V enable
com/mojang/blaze3d/platform/GlStateManager$c com/mojang/blaze3d/platform/GlStateManager$ColorLogicState
	a enable
	b op
com/mojang/blaze3d/platform/GlStateManager$d com/mojang/blaze3d/platform/GlStateManager$ColorMask
	a red
	b green
	c blue
	d alpha
com/mojang/blaze3d/platform/GlStateManager$e com/mojang/blaze3d/platform/GlStateManager$CullState
	a enable
	b mode
com/mojang/blaze3d/platform/GlStateManager$f com/mojang/blaze3d/platform/GlStateManager$DepthState
	a mode
	b mask
	c func
com/mojang/blaze3d/platform/GlStateManager$g com/mojang/blaze3d/platform/GlStateManager$LogicOp
	a AND
	b AND_INVERTED
	c AND_REVERSE
	d CLEAR
	e COPY
	f COPY_INVERTED
	g EQUIV
	h INVERT
	i NAND
	j NOOP
	k NOR
	l OR
	m OR_INVERTED
	n OR_REVERSE
	o SET
	p XOR
	q value
	r $VALUES
	a ()[Lcom/mojang/blaze3d/platform/GlStateManager$g; $values
com/mojang/blaze3d/platform/GlStateManager$h com/mojang/blaze3d/platform/GlStateManager$PolygonOffsetState
	a fill
	b line
	c factor
	d units
com/mojang/blaze3d/platform/GlStateManager$i com/mojang/blaze3d/platform/GlStateManager$ScissorState
	a mode
com/mojang/blaze3d/platform/GlStateManager$j com/mojang/blaze3d/platform/GlStateManager$StencilFunc
	a func
	b ref
	c mask
com/mojang/blaze3d/platform/GlStateManager$k com/mojang/blaze3d/platform/GlStateManager$StencilState
	a func
	b mask
	c fail
	d zfail
	e zpass
com/mojang/blaze3d/platform/GlStateManager$l com/mojang/blaze3d/platform/GlStateManager$TextureState
	a binding
com/mojang/blaze3d/platform/GlStateManager$m com/mojang/blaze3d/platform/GlStateManager$Viewport
	a INSTANCE
	b x
	c y
	d width
	e height
	f $VALUES
	a ()I x
	b ()I y
	c ()I width
	d ()I height
	e ()[Lcom/mojang/blaze3d/platform/GlStateManager$m; $values
com/mojang/blaze3d/systems/RenderSystem$a com/mojang/blaze3d/systems/RenderSystem$AutoStorageIndexBuffer
	a vertexStride
	b indexStride
	c generator
	d name
	e type
	f indexCount
	a ()Lehj$a; type
	a (I)Z hasStorage
	a (Ljava/nio/ByteBuffer;)Lit/unimi/dsi/fastutil/ints/IntConsumer; intConsumer
	b (I)V bind
	c (I)V ensureStorage
com/mojang/blaze3d/systems/RenderSystem$a$a com/mojang/blaze3d/systems/RenderSystem$AutoStorageIndexBuffer$IndexGenerator
com/mojang/math/PointGroupO com/mojang/math/OctahedralGroup
	A INVERT_Y
	B INVERT_Z
	C ROT_60_REF_NNN
	D ROT_60_REF_NNP
	E ROT_60_REF_NPN
	F ROT_60_REF_NPP
	G ROT_60_REF_PNN
	H ROT_60_REF_PNP
	I ROT_60_REF_PPN
	J ROT_60_REF_PPP
	K SWAP_XY
	L SWAP_YZ
	M SWAP_XZ
	N SWAP_NEG_XY
	O SWAP_NEG_YZ
	P SWAP_NEG_XZ
	Q ROT_90_REF_X_NEG
	R ROT_90_REF_X_POS
	S ROT_90_REF_Y_NEG
	T ROT_90_REF_Y_POS
	U ROT_90_REF_Z_NEG
	V ROT_90_REF_Z_POS
	X transformation
	Y name
	Z rotatedDirections
	a IDENTITY
	aa invertX
	ab invertY
	ac invertZ
	ad permutation
	ae cayleyTable
	af inverseTable
	ag $VALUES
	b ROT_180_FACE_XY
	c ROT_180_FACE_XZ
	d ROT_180_FACE_YZ
	e ROT_120_NNN
	f ROT_120_NNP
	g ROT_120_NPN
	h ROT_120_NPP
	i ROT_120_PNN
	j ROT_120_PNP
	k ROT_120_PPN
	l ROT_120_PPP
	m ROT_180_EDGE_XY_NEG
	n ROT_180_EDGE_XY_POS
	o ROT_180_EDGE_XZ_NEG
	p ROT_180_EDGE_XZ_POS
	q ROT_180_EDGE_YZ_NEG
	r ROT_180_EDGE_YZ_POS
	s ROT_90_X_NEG
	t ROT_90_X_POS
	u ROT_90_Y_NEG
	v ROT_90_Y_POS
	w ROT_90_Z_NEG
	x ROT_90_Z_POS
	y INVERSION
	z INVERT_X
	a ()Lcom/mojang/math/PointGroupO; inverse
	a (Lcom/mojang/math/PointGroupO;)Lcom/mojang/math/PointGroupO; compose
	a (Lnet/minecraft/core/BlockPropertyJigsawOrientation;)Lnet/minecraft/core/BlockPropertyJigsawOrientation; rotate
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;)Z inverts
	a (Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/core/EnumDirection; rotate
	b ()Lorg/joml/Matrix3f; transformation
	c ()Ljava/lang/String; getSerializedName
	d ()Lit/unimi/dsi/fastutil/booleans/BooleanList; packInversions
	e ()[Lcom/mojang/math/PointGroupO; $values
com/mojang/math/PointGroupS com/mojang/math/SymmetricGroup3
	a P123
	b P213
	c P132
	d P231
	e P312
	f P321
	g permutation
	h transformation
	i ORDER
	j cayleyTable
	k $VALUES
	a ()Lorg/joml/Matrix3f; transformation
	a (I)I permutation
	a (Lcom/mojang/math/PointGroupS;)Lcom/mojang/math/PointGroupS; compose
	b ()[Lcom/mojang/math/PointGroupS; $values
cp$a net/minecraft/advancements/critereon/PlayerPredicate$AdvancementCriterionsPredicate
	a criterions
	a ()Lcom/google/gson/JsonElement; toJson
	a (Lnet/minecraft/advancements/AdvancementProgress;)Z test
cp$b net/minecraft/advancements/critereon/PlayerPredicate$AdvancementDonePredicate
	a state
	a ()Lcom/google/gson/JsonElement; toJson
	a (Lnet/minecraft/advancements/AdvancementProgress;)Z test
cp$c net/minecraft/advancements/critereon/PlayerPredicate$AdvancementPredicate
	a ()Lcom/google/gson/JsonElement; toJson
cp$d net/minecraft/advancements/critereon/PlayerPredicate$Builder
	a level
	b gameType
	c stats
	d recipes
	e advancements
	f lookingAt
	a ()Lcp$d; player
	a (Lnet/minecraft/advancements/critereon/CriterionConditionEntity;)Lcp$d; setLookingAt
	a (Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange;)Lcp$d; setLevel
	a (Lnet/minecraft/resources/MinecraftKey;Ljava/util/Map;)Lcp$d; checkAdvancementCriterions
	a (Lnet/minecraft/resources/MinecraftKey;Z)Lcp$d; addRecipe
	a (Lnet/minecraft/stats/Statistic;Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange;)Lcp$d; addStat
	a (Lnet/minecraft/world/level/EnumGamemode;)Lcp$d; setGameType
	b ()Lnet/minecraft/advancements/critereon/CriterionConditionPlayer; build
	b (Lnet/minecraft/resources/MinecraftKey;Z)Lcp$d; checkAdvancementDone
cpi$a net/minecraft/world/level/block/Block$BlockStatePairKey
	a first
	b second
	c direction
cq$a net/minecraft/advancements/critereon/PlayerTrigger$TriggerInstance
	a (Lnet/minecraft/advancements/critereon/CriterionConditionEntity;)Lcq$a; located
	a (Lnet/minecraft/advancements/critereon/CriterionConditionLocation;)Lcq$a; located
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/Item;)Lcq$a; walkOnBlockWithEquipment
	c ()Lcq$a; sleptInBed
	d ()Lcq$a; raidWon
	e ()Lcq$a; avoidVibration
	f ()Lcq$a; tick
cr$a net/minecraft/advancements/critereon/RecipeUnlockedTrigger$TriggerInstance
	a recipe
	a (Lnet/minecraft/advancements/critereon/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
	a (Lnet/minecraft/world/item/crafting/IRecipe;)Z matches
ct$a net/minecraft/advancements/critereon/ShotCrossbowTrigger$TriggerInstance
	a item
	a (Lnet/minecraft/advancements/critereon/CriterionConditionItem;)Lct$a; shotCrossbow
	a (Lnet/minecraft/advancements/critereon/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
	a (Lnet/minecraft/world/item/ItemStack;)Z matches
	a (Lnet/minecraft/world/level/IMaterial;)Lct$a; shotCrossbow
cto net/minecraft/world/level/block/LevelEvent
	A SOUND_CHORUS_GROW
	B SOUND_CHORUS_DEATH
	C SOUND_BREWING_STAND_BREW
	D SOUND_END_PORTAL_SPAWN
	E SOUND_PHANTOM_BITE
	F SOUND_ZOMBIE_TO_DROWNED
	G SOUND_HUSK_TO_ZOMBIE
	H SOUND_GRINDSTONE_USED
	I SOUND_PAGE_TURN
	J SOUND_SMITHING_TABLE_USED
	K SOUND_POINTED_DRIPSTONE_LAND
	L SOUND_DRIP_LAVA_INTO_CAULDRON
	M SOUND_DRIP_WATER_INTO_CAULDRON
	N SOUND_SKELETON_TO_STRAY
	O COMPOSTER_FILL
	P LAVA_FIZZ
	Q REDSTONE_TORCH_BURNOUT
	R END_PORTAL_FRAME_FILL
	S DRIPSTONE_DRIP
	T PARTICLES_AND_SOUND_PLANT_GROWTH
	U PARTICLES_SHOOT
	V PARTICLES_DESTROY_BLOCK
	W PARTICLES_SPELL_POTION_SPLASH
	X PARTICLES_EYE_OF_ENDER_DEATH
	Y PARTICLES_MOBBLOCK_SPAWN
	Z PARTICLES_PLANT_GROWTH
	a SOUND_DISPENSER_DISPENSE
	aa PARTICLES_DRAGON_FIREBALL_SPLASH
	ab PARTICLES_INSTANT_POTION_SPLASH
	ac PARTICLES_DRAGON_BLOCK_BREAK
	ad PARTICLES_WATER_EVAPORATING
	ae ANIMATION_END_GATEWAY_SPAWN
	af ANIMATION_DRAGON_SUMMON_ROAR
	ag PARTICLES_ELECTRIC_SPARK
	ah PARTICLES_AND_SOUND_WAX_ON
	ai PARTICLES_WAX_OFF
	aj PARTICLES_SCRAPE
	ak PARTICLES_SCULK_CHARGE
	al PARTICLES_SCULK_SHRIEK
	am PARTICLES_AND_SOUND_BRUSH_BLOCK_COMPLETE
	b SOUND_DISPENSER_FAIL
	c SOUND_DISPENSER_PROJECTILE_LAUNCH
	d SOUND_ENDER_EYE_LAUNCH
	e SOUND_FIREWORK_SHOOT
	f SOUND_EXTINGUISH_FIRE
	g SOUND_PLAY_JUKEBOX_SONG
	h SOUND_STOP_JUKEBOX_SONG
	i SOUND_GHAST_WARNING
	j SOUND_GHAST_FIREBALL
	k SOUND_DRAGON_FIREBALL
	l SOUND_BLAZE_FIREBALL
	m SOUND_ZOMBIE_WOODEN_DOOR
	n SOUND_ZOMBIE_IRON_DOOR
	o SOUND_ZOMBIE_DOOR_CRASH
	p SOUND_WITHER_BLOCK_BREAK
	q SOUND_WITHER_BOSS_SPAWN
	r SOUND_WITHER_BOSS_SHOOT
	s SOUND_BAT_LIFTOFF
	t SOUND_ZOMBIE_INFECTED
	u SOUND_ZOMBIE_CONVERTED
	v SOUND_DRAGON_DEATH
	w SOUND_ANVIL_BROKEN
	x SOUND_ANVIL_USED
	y SOUND_ANVIL_LAND
	z SOUND_PORTAL_TRAVEL
cue$a net/minecraft/world/level/block/MultifaceSpreader$DefaultSpreaderConfig
	a block
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lcue$c;)Z canSpreadInto
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;)Z stateCanBeReplaced
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
cue$b net/minecraft/world/level/block/MultifaceSpreader$SpreadConfig
	a ()[Lcue$e; getSpreadTypes
	a (Lnet/minecraft/world/level/GeneratorAccess;Lcue$c;Lnet/minecraft/world/level/block/state/IBlockData;Z)Z placeBlock
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lcue$c;)Z canSpreadInto
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z isOtherBlockValidAsSource
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;)Z hasFace
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;)Z canSpreadFrom
cue$c net/minecraft/world/level/block/MultifaceSpreader$SpreadPos
	a pos
	b face
	a ()Lnet/minecraft/core/BlockPosition; pos
	b ()Lnet/minecraft/core/EnumDirection; face
cue$d net/minecraft/world/level/block/MultifaceSpreader$SpreadPredicate
cue$e net/minecraft/world/level/block/MultifaceSpreader$SpreadType
	a SAME_POSITION
	b SAME_PLANE
	c WRAP_AROUND
	d $VALUES
	a ()[Lcue$e; $values
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/core/EnumDirection;)Lcue$c; getSpreadPos
cuu$a net/minecraft/world/level/block/PointedDripstoneBlock$FluidInfo
	a pos
	b fluid
	c sourceState
	a ()Lnet/minecraft/core/BlockPosition; pos
	b ()Lnet/minecraft/world/level/material/FluidType; fluid
	c ()Lnet/minecraft/world/level/block/state/IBlockData; sourceState
cv$a net/minecraft/advancements/critereon/SlideDownBlockTrigger$TriggerInstance
	a block
	b state
	a (Lnet/minecraft/advancements/critereon/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
	a (Lnet/minecraft/world/level/block/Block;)Lcv$a; slidesDownBlock
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z matches
cvz$a net/minecraft/world/level/block/SculkSpreader$ChargeCursor
	a MAX_CURSOR_DECAY_DELAY
	b CODEC
	c NON_CORNER_NEIGHBOURS
	d pos
	e charge
	f updateDelay
	g decayDelay
	h facings
	i DIRECTION_SET
	a ()Lnet/minecraft/core/BlockPosition; getPos
	a (Lcvz$a;)V mergeWith
	a (Lnet/minecraft/util/RandomSource;)Ljava/util/List; getRandomizedNonCornerNeighbourOffsets
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Z isMovementUnobstructed
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Z isUnobstructed
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/core/BlockPosition; getValidMovementPos
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/block/SculkSpreader;Z)V update
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Z)Z shouldUpdate
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/SculkBehaviour; getBlockBehaviour
	b ()I getCharge
	c ()I getDecayDelay
	d ()Ljava/util/Set; getFacingData
cwa$a net/minecraft/world/level/block/SculkVeinBlock$SculkVeinSpreaderConfig
	c spreadTypes
	a ()[Lcue$e; getSpreadTypes
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;)Z stateCanBeReplaced
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z isOtherBlockValidAsSource
cwg$a net/minecraft/world/level/block/SkullBlock$Type
cx$a net/minecraft/advancements/critereon/StartRidingTrigger$TriggerInstance
	a (Lbn$a;)Lcx$a; playerStartsRiding
cy$a net/minecraft/advancements/critereon/StatePropertiesPredicate$Builder
	a matchers
	a ()Lcy$a; properties
	a (Lnet/minecraft/world/level/block/state/properties/IBlockState;I)Lcy$a; hasProperty
	a (Lnet/minecraft/world/level/block/state/properties/IBlockState;Ljava/lang/Comparable;)Lcy$a; hasProperty
	a (Lnet/minecraft/world/level/block/state/properties/IBlockState;Ljava/lang/String;)Lcy$a; hasProperty
	a (Lnet/minecraft/world/level/block/state/properties/IBlockState;Z)Lcy$a; hasProperty
	b ()Lnet/minecraft/advancements/critereon/CriterionTriggerProperties; build
cy$b net/minecraft/advancements/critereon/StatePropertiesPredicate$ExactPropertyMatcher
	a value
	a ()Lcom/google/gson/JsonElement; toJson
	a (Lnet/minecraft/world/level/block/state/IBlockDataHolder;Lnet/minecraft/world/level/block/state/properties/IBlockState;)Z match
cy$c net/minecraft/advancements/critereon/StatePropertiesPredicate$PropertyMatcher
	a name
	a ()Lcom/google/gson/JsonElement; toJson
	a (Lnet/minecraft/world/level/block/state/BlockStateList;Ljava/util/function/Consumer;)V checkState
	a (Lnet/minecraft/world/level/block/state/BlockStateList;Lnet/minecraft/world/level/block/state/IBlockDataHolder;)Z match
	a (Lnet/minecraft/world/level/block/state/IBlockDataHolder;Lnet/minecraft/world/level/block/state/properties/IBlockState;)Z match
	b ()Ljava/lang/String; getName
cy$d net/minecraft/advancements/critereon/StatePropertiesPredicate$RangedPropertyMatcher
	a minValue
	b maxValue
	a ()Lcom/google/gson/JsonElement; toJson
	a (Lnet/minecraft/world/level/block/state/IBlockDataHolder;Lnet/minecraft/world/level/block/state/properties/IBlockState;)Z match
cyg$a net/minecraft/world/level/block/WeatheringCopper$WeatherState
	a UNAFFECTED
	b EXPOSED
	c WEATHERED
	d OXIDIZED
	e $VALUES
	a ()[Lcyg$a; $values
cyv$a net/minecraft/world/level/block/entity/BannerPattern$Builder
	a patterns
	a ()Lnet/minecraft/nbt/NBTTagList; toListTag
	a (Lcom/mojang/datafixers/util/Pair;)Lcyv$a; addPattern
	a (Lnet/minecraft/core/Holder;Lnet/minecraft/world/item/EnumColor;)Lcyv$a; addPattern
	a (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/item/EnumColor;)Lcyv$a; addPattern
cz$a net/minecraft/advancements/critereon/SummonedEntityTrigger$TriggerInstance
	a entity
	a (Lbn$a;)Lcz$a; summonedEntity
	a (Lnet/minecraft/advancements/critereon/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Z matches
czc$a net/minecraft/world/level/block/entity/BellBlockEntity$ResonationEndAction
czg$a net/minecraft/world/level/block/entity/BlockEntityType$BlockEntitySupplier
czg$b net/minecraft/world/level/block/entity/BlockEntityType$Builder
	a factory
	b validBlocks
	a (Lcom/mojang/datafixers/types/Type;)Lnet/minecraft/world/level/block/entity/TileEntityTypes; build
	a (Lczg$a;[Lnet/minecraft/world/level/block/Block;)Lczg$b; of
d com/mojang/math/FieldsAreNonnullByDefault
db$a net/minecraft/advancements/critereon/TameAnimalTrigger$TriggerInstance
	a entity
	a (Lnet/minecraft/advancements/critereon/CriterionConditionEntity;)Ldb$a; tamedAnimal
	a (Lnet/minecraft/advancements/critereon/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Z matches
	c ()Ldb$a; tamedAnimal
dbp$b net/minecraft/world/level/block/state/BlockBehaviour$OffsetFunction
dbp$e net/minecraft/world/level/block/state/BlockBehaviour$StateArgumentPredicate
dbp$f net/minecraft/world/level/block/state/BlockBehaviour$StatePredicate
dbr$a net/minecraft/world/level/block/state/StateDefinition$Builder
	a owner
	b properties
	a (Ljava/util/function/Function;Ldbr$b;)Lnet/minecraft/world/level/block/state/BlockStateList; create
	a (Lnet/minecraft/world/level/block/state/properties/IBlockState;)V validateProperty
	a ([Lnet/minecraft/world/level/block/state/properties/IBlockState;)Ldbr$a; add
dbr$b net/minecraft/world/level/block/state/StateDefinition$Factory
dc$a net/minecraft/advancements/critereon/TargetBlockTrigger$TriggerInstance
	a signalStrength
	b projectile
	a (Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange;Lbn$b;)Ldc$a; targetHit
	a (Lnet/minecraft/advancements/critereon/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;Lnet/minecraft/world/phys/Vec3D;I)Z matches
dcs$a net/minecraft/world/level/block/state/properties/NoteBlockInstrument$Type
	a BASE_BLOCK
	b MOB_HEAD
	c CUSTOM
	d $VALUES
	a ()[Ldcs$a; $values
dcu$a net/minecraft/world/level/block/state/properties/Property$Value
	a property
	b value
	a ()Lnet/minecraft/world/level/block/state/properties/IBlockState; property
	b ()Ljava/lang/Comparable; value
dd$a net/minecraft/advancements/critereon/TradeTrigger$TriggerInstance
	a villager
	b item
	a (Lbn$a;)Ldd$a; tradedWithVillager
	a (Lnet/minecraft/advancements/critereon/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;Lnet/minecraft/world/item/ItemStack;)Z matches
	c ()Ldd$a; tradedWithVillager
ddg$a net/minecraft/world/level/border/BorderChangeListener$DelegateBorderChangeListener
	a worldBorder
	a (Lnet/minecraft/world/level/border/WorldBorder;D)V onBorderSizeSet
	a (Lnet/minecraft/world/level/border/WorldBorder;DD)V onBorderCenterSet
	a (Lnet/minecraft/world/level/border/WorldBorder;DDJ)V onBorderSizeLerping
	a (Lnet/minecraft/world/level/border/WorldBorder;I)V onBorderSetWarningTime
	b (Lnet/minecraft/world/level/border/WorldBorder;D)V onBorderSetDamagePerBlock
	b (Lnet/minecraft/world/level/border/WorldBorder;I)V onBorderSetWarningBlocks
	c (Lnet/minecraft/world/level/border/WorldBorder;D)V onBorderSetDamageSafeZOne
ddi$a net/minecraft/world/level/border/WorldBorder$BorderExtent
	a ()D getMinX
	b ()D getMaxX
	c ()D getMinZ
	d ()D getMaxZ
	e ()D getSize
	f ()D getLerpSpeed
	g ()J getLerpRemainingTime
	h ()D getLerpTarget
	i ()Lnet/minecraft/world/level/border/BorderStatus; getStatus
	j ()V onAbsoluteMaxSizeChange
	k ()V onCenterChange
	l ()Lddi$a; update
	m ()Lnet/minecraft/world/phys/shapes/VoxelShape; getCollisionShape
ddi$b net/minecraft/world/level/border/WorldBorder$MovingBorderExtent
	b from
	c to
	d lerpEnd
	e lerpBegin
	f lerpDuration
	a ()D getMinX
	b ()D getMaxX
	c ()D getMinZ
	d ()D getMaxZ
	e ()D getSize
	f ()D getLerpSpeed
	g ()J getLerpRemainingTime
	h ()D getLerpTarget
	i ()Lnet/minecraft/world/level/border/BorderStatus; getStatus
	j ()V onAbsoluteMaxSizeChange
	k ()V onCenterChange
	l ()Lddi$a; update
	m ()Lnet/minecraft/world/phys/shapes/VoxelShape; getCollisionShape
ddi$c net/minecraft/world/level/border/WorldBorder$Settings
	a centerX
	b centerZ
	c damagePerBlock
	d safeZone
	e warningBlocks
	f warningTime
	g size
	h sizeLerpTime
	i sizeLerpTarget
	a ()D getCenterX
	a (Lcom/mojang/serialization/DynamicLike;Lddi$c;)Lddi$c; read
	a (Lnet/minecraft/nbt/NBTTagCompound;)V write
	b ()D getCenterZ
	c ()D getDamagePerBlock
	d ()D getSafeZone
	e ()I getWarningBlocks
	f ()I getWarningTime
	g ()D getSize
	h ()J getSizeLerpTime
	i ()D getSizeLerpTarget
ddi$d net/minecraft/world/level/border/WorldBorder$StaticBorderExtent
	b size
	c minX
	d minZ
	e maxX
	f maxZ
	g shape
	a ()D getMinX
	b ()D getMaxX
	c ()D getMinZ
	d ()D getMaxZ
	e ()D getSize
	f ()D getLerpSpeed
	g ()J getLerpRemainingTime
	h ()D getLerpTarget
	i ()Lnet/minecraft/world/level/border/BorderStatus; getStatus
	j ()V onAbsoluteMaxSizeChange
	k ()V onCenterChange
	l ()Lddi$a; update
	m ()Lnet/minecraft/world/phys/shapes/VoxelShape; getCollisionShape
	n ()V updateBox
ddm$a net/minecraft/world/level/chunk/CarvingMask$Mask
ddn$a net/minecraft/world/level/chunk/ChunkAccess$TicksToSave
	a blocks
	b fluids
	a ()Lnet/minecraft/world/ticks/SerializableTickContainer; blocks
	b ()Lnet/minecraft/world/ticks/SerializableTickContainer; fluids
dds$b net/minecraft/world/level/chunk/ChunkStatus$GenerationTask
dds$c net/minecraft/world/level/chunk/ChunkStatus$LoadingTask
dds$d net/minecraft/world/level/chunk/ChunkStatus$SimpleGenerationTask
ddy$a net/minecraft/world/level/chunk/LevelChunk$BoundTickingBlockEntity
	b blockEntity
	c ticker
	d loggedInvalidBlockState
	a ()V tick
	b ()Z isRemoved
	c ()Lnet/minecraft/core/BlockPosition; getPos
	d ()Ljava/lang/String; getType
ddy$c net/minecraft/world/level/chunk/LevelChunk$PostLoadProcessor
ddy$d net/minecraft/world/level/chunk/LevelChunk$RebindableTickingBlockEntityWrapper
	b ticker
	a ()V tick
	a (Lnet/minecraft/world/level/block/entity/TickingBlockEntity;)V rebind
	b ()Z isRemoved
	c ()Lnet/minecraft/core/BlockPosition; getPos
	d ()Ljava/lang/String; getType
de$a net/minecraft/advancements/critereon/UsedEnderEyeTrigger$TriggerInstance
	a level
	a (D)Z matches
ded$a net/minecraft/world/level/chunk/Palette$Factory
def$a net/minecraft/world/level/chunk/PalettedContainer$Configuration
	a factory
	b bits
	a ()Lded$a; factory
	a (Lnet/minecraft/core/Registry;Lnet/minecraft/world/level/chunk/DataPaletteExpandable;I)Ldef$c; createData
	b ()I bits
def$b net/minecraft/world/level/chunk/PalettedContainer$CountConsumer
def$c net/minecraft/world/level/chunk/PalettedContainer$Data
	a configuration
	b storage
	c palette
	a ()I getSerializedSize
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/world/level/chunk/DataPalette;Lnet/minecraft/util/DataBits;)V copyFrom
	b ()Ldef$c; copy
	c ()Ldef$a; configuration
	d ()Lnet/minecraft/util/DataBits; storage
	e ()Lnet/minecraft/world/level/chunk/DataPalette; palette
def$d net/minecraft/world/level/chunk/PalettedContainer$Strategy
	a SINGLE_VALUE_PALETTE_FACTORY
	b LINEAR_PALETTE_FACTORY
	c HASHMAP_PALETTE_FACTORY
	d SECTION_STATES
	e SECTION_BIOMES
	f GLOBAL_PALETTE_FACTORY
	g sizeBits
	a ()I size
	a (III)I getIndex
	a (Lnet/minecraft/core/Registry;I)Ldef$a; getConfiguration
	b (Lnet/minecraft/core/Registry;I)I calculateBitsForSerialization
deg$a net/minecraft/world/level/chunk/PalettedContainerRO$PackedData
	a paletteEntries
	b storage
	a ()Ljava/util/List; paletteEntries
	b ()Ljava/util/Optional; storage
deg$b net/minecraft/world/level/chunk/PalettedContainerRO$Unpacker
dek$a net/minecraft/world/level/chunk/UpgradeData$BlockFixer
	a (Lnet/minecraft/world/level/GeneratorAccess;)V processChunk
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
deq$a net/minecraft/world/level/chunk/storage/IOWorker$PendingStore
	a data
	b result
des$b net/minecraft/world/level/chunk/storage/RegionFile$CommitOp
deu$a net/minecraft/world/level/chunk/storage/RegionFileVersion$StreamWrapper
dey net/minecraft/world/level/dimension/DimensionDefaults
	a OVERWORLD_MIN_Y
	b OVERWORLD_LEVEL_HEIGHT
	c OVERWORLD_GENERATION_HEIGHT
	d OVERWORLD_LOGICAL_HEIGHT
	e NETHER_MIN_Y
	f NETHER_LEVEL_HEIGHT
	g NETHER_GENERATION_HEIGHT
	h NETHER_LOGICAL_HEIGHT
	i END_MIN_Y
	j END_LEVEL_HEIGHT
	k END_GENERATION_HEIGHT
	l END_LOGICAL_HEIGHT
dez$a net/minecraft/world/level/dimension/DimensionType$MonsterSettings
	a CODEC
	b piglinSafe
	c hasRaids
	d monsterSpawnLightTest
	e monsterSpawnBlockLightLimit
	a ()Z piglinSafe
	b ()Z hasRaids
	c ()Lnet/minecraft/util/valueproviders/IntProvider; monsterSpawnLightTest
	d ()I monsterSpawnBlockLightLimit
df$a net/minecraft/advancements/critereon/UsedTotemTrigger$TriggerInstance
	a item
	a (Lnet/minecraft/advancements/critereon/CriterionConditionItem;)Ldf$a; usedTotem
	a (Lnet/minecraft/advancements/critereon/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
	a (Lnet/minecraft/world/item/ItemStack;)Z matches
	a (Lnet/minecraft/world/level/IMaterial;)Ldf$a; usedTotem
dfs$a net/minecraft/world/level/entity/PersistentEntitySectionManager$Callback
	c entity
	d currentSectionKey
	e currentSection
	a ()V onMove
	a (Lnet/minecraft/world/entity/Entity$RemovalReason;)V onRemove
	a (Lnet/minecraft/world/level/entity/Visibility;Lnet/minecraft/world/level/entity/Visibility;)V updateStatus
dfs$b net/minecraft/world/level/entity/PersistentEntitySectionManager$ChunkLoadStatus
	a FRESH
	b PENDING
	c LOADED
	d $VALUES
	a ()[Ldfs$b; $values
dft net/minecraft/world/level/entity/TransientEntitySectionManager
	a LOGGER
	b callbacks
	c entityStorage
	d sectionStorage
	e tickingChunks
	f entityGetter
	a ()Lnet/minecraft/world/level/entity/LevelEntityGetter; getEntityGetter
	a (JLnet/minecraft/world/level/entity/EntitySection;)V removeSectionIfEmpty
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;)V startTicking
	a (Lnet/minecraft/world/level/entity/EntityAccess;)V addEntity
	b ()I count
	b (Lnet/minecraft/world/level/ChunkCoordIntPair;)V stopTicking
	c ()Ljava/lang/String; gatherStats
dft$a net/minecraft/world/level/entity/TransientEntitySectionManager$Callback
	c entity
	d currentSectionKey
	e currentSection
	a ()V onMove
	a (Lnet/minecraft/world/entity/Entity$RemovalReason;)V onRemove
dfw$a net/minecraft/world/level/gameevent/BlockPositionSource$Type
	a ()Lcom/mojang/serialization/Codec; codec
	a (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/world/level/gameevent/BlockPositionSource; read
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/world/level/gameevent/BlockPositionSource;)V write
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/world/level/gameevent/PositionSource;)V write
	b (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/world/level/gameevent/PositionSource; read
dfy$a net/minecraft/world/level/gameevent/EntityPositionSource$Type
	a ()Lcom/mojang/serialization/Codec; codec
	a (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/world/level/gameevent/EntityPositionSource; read
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/world/level/gameevent/EntityPositionSource;)V write
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/world/level/gameevent/PositionSource;)V write
	b (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/world/level/gameevent/PositionSource; read
dg$a net/minecraft/advancements/critereon/UsingItemTrigger$TriggerInstance
	a item
	a (Lbn$a;Lbz$a;)Ldg$a; lookingAt
	a (Lnet/minecraft/advancements/critereon/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
	a (Lnet/minecraft/world/item/ItemStack;)Z matches
dga$a net/minecraft/world/level/gameevent/GameEvent$Context
	a sourceEntity
	b affectedState
	a ()Lnet/minecraft/world/entity/Entity; sourceEntity
	a (Lnet/minecraft/world/entity/Entity;)Ldga$a; of
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/block/state/IBlockData;)Ldga$a; of
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Ldga$a; of
	b ()Lnet/minecraft/world/level/block/state/IBlockData; affectedState
dga$b net/minecraft/world/level/gameevent/GameEvent$ListenerInfo
	a gameEvent
	b source
	c context
	d recipient
	e distanceToRecipient
	a ()Lnet/minecraft/world/level/gameevent/GameEvent; gameEvent
	a (Ldga$b;)I compareTo
	b ()Lnet/minecraft/world/phys/Vec3D; source
	c ()Ldga$a; context
	d ()Lnet/minecraft/world/level/gameevent/GameEventListener; recipient
dgc$a net/minecraft/world/level/gameevent/GameEventListener$DeliveryMode
	a UNSPECIFIED
	b BY_DISTANCE
	c $VALUES
	a ()[Ldgc$a; $values
dgd$a net/minecraft/world/level/gameevent/GameEventListenerRegistry$ListenerVisitor
dgi$a net/minecraft/world/level/gameevent/vibrations/VibrationListener$VibrationListenerConfig
	a ()Lnet/minecraft/tags/TagKey; getListenableEvents
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/gameevent/GameEventListener;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/gameevent/GameEvent;Ldga$a;)Z shouldListen
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/gameevent/GameEventListener;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;F)V onSignalReceive
	a (Lnet/minecraft/world/level/gameevent/GameEvent;Ldga$a;)Z isValidVibration
	f ()V onSignalSchedule
	w ()Z canTriggerAvoidVibration
dgl$a net/minecraft/world/level/levelgen/Aquifer$FluidPicker
dgl$b net/minecraft/world/level/levelgen/Aquifer$FluidStatus
	a fluidLevel
	b fluidType
	a (I)Lnet/minecraft/world/level/block/state/IBlockData; at
dgl$c net/minecraft/world/level/levelgen/Aquifer$NoiseBasedAquifer
	A gridSizeX
	B gridSizeZ
	C SURFACE_SAMPLING_OFFSETS_IN_CHUNKS
	a X_RANGE
	b Y_RANGE
	c Z_RANGE
	d X_SEPARATION
	e Y_SEPARATION
	f Z_SEPARATION
	g X_SPACING
	h Y_SPACING
	i Z_SPACING
	j MAX_REASONABLE_DISTANCE_TO_AQUIFER_CENTER
	k FLOWING_UPDATE_SIMULARITY
	l noiseChunk
	m barrierNoise
	n fluidLevelFloodednessNoise
	o fluidLevelSpreadNoise
	p lavaNoise
	q positionalRandomFactory
	r aquiferCache
	s aquiferLocationCache
	t globalFluidPicker
	u erosion
	v depth
	w shouldScheduleFluidUpdate
	x minGridX
	y minGridY
	z minGridZ
	a ()Z shouldScheduleFluidUpdate
	a (I)I gridX
	a (II)D similarity
	a (III)I getIndex
	a (IIII)I computeRandomizedFluidSurfaceLevel
	a (IIILdgl$b;I)Lnet/minecraft/world/level/block/state/IBlockData; computeFluidType
	a (IIILdgl$b;IZ)I computeSurfaceLevel
	a (J)Ldgl$b; getAquiferStatus
	a (Ldgs$b;D)Lnet/minecraft/world/level/block/state/IBlockData; computeSubstance
	a (Ldgs$b;Lorg/apache/commons/lang3/mutable/MutableDouble;Ldgl$b;Ldgl$b;)D calculatePressure
	b (I)I gridY
	b (III)Ldgl$b; computeFluid
	c (I)I gridZ
dgm$a net/minecraft/world/level/levelgen/Beardifier$Rigid
	a box
	b terrainAdjustment
	c groundLevelDelta
	a ()Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; box
	b ()Lnet/minecraft/world/level/levelgen/structure/TerrainAdjustment; terrainAdjustment
	c ()I groundLevelDelta
dgp$a net/minecraft/world/level/levelgen/Column$Line
	a INSTANCE
	b ()Ljava/util/OptionalInt; getCeiling
	c ()Ljava/util/OptionalInt; getFloor
	d ()Ljava/util/OptionalInt; getHeight
dgp$b net/minecraft/world/level/levelgen/Column$Range
	a floor
	b ceiling
	b ()Ljava/util/OptionalInt; getCeiling
	c ()Ljava/util/OptionalInt; getFloor
	d ()Ljava/util/OptionalInt; getHeight
	e ()I ceiling
	f ()I floor
	g ()I height
dgp$c net/minecraft/world/level/levelgen/Column$Ray
	a edge
	b pointingUp
	b ()Ljava/util/OptionalInt; getCeiling
	c ()Ljava/util/OptionalInt; getFloor
	d ()Ljava/util/OptionalInt; getHeight
dgr net/minecraft/world/level/levelgen/Density
	a SURFACE
	b UNRECOVERABLY_DENSE
	c UNRECOVERABLY_THIN
dgs$a net/minecraft/world/level/levelgen/DensityFunction$ContextProvider
	a (I)Ldgs$b; forIndex
	a ([DLnet/minecraft/world/level/levelgen/DensityFunction;)V fillAllDirectly
dgs$b net/minecraft/world/level/levelgen/DensityFunction$FunctionContext
	a ()I blockX
	b ()I blockY
	c ()I blockZ
	d ()Lnet/minecraft/world/level/levelgen/blending/Blender; getBlender
dgs$c net/minecraft/world/level/levelgen/DensityFunction$NoiseHolder
	a CODEC
	b noiseData
	c noise
	a ()D maxValue
	a (DDD)D getValue
	b ()Lnet/minecraft/core/Holder; noiseData
	c ()Lnet/minecraft/world/level/levelgen/synth/NoiseGeneratorNormal; noise
dgs$d net/minecraft/world/level/levelgen/DensityFunction$SimpleFunction
	a (Ldgs$f;)Lnet/minecraft/world/level/levelgen/DensityFunction; mapAll
	a ([DLdgs$a;)V fillArray
dgs$e net/minecraft/world/level/levelgen/DensityFunction$SinglePointContext
	a blockX
	b blockY
	c blockZ
	a ()I blockX
	b ()I blockY
	c ()I blockZ
dgs$f net/minecraft/world/level/levelgen/DensityFunction$Visitor
	a (Ldgs$c;)Ldgs$c; visitNoise
dgt$a net/minecraft/world/level/levelgen/DensityFunctions$Ap2
	e type
	f argument1
	g argument2
	h minValue
	i maxValue
	a ()D minValue
	a (Ldgs$b;)D compute
	a (Ldgs$f;)Lnet/minecraft/world/level/levelgen/DensityFunction; mapAll
	a ([DLdgs$a;)V fillArray
	b ()D maxValue
	j ()Ldgt$y$a; type
	k ()Lnet/minecraft/world/level/levelgen/DensityFunction; argument1
	l ()Lnet/minecraft/world/level/levelgen/DensityFunction; argument2
dgt$aa net/minecraft/world/level/levelgen/DensityFunctions$YClampedGradient
	a CODEC
	e fromY
	f toY
	g fromValue
	h toValue
	i DATA_CODEC
	a ()D minValue
	a (Ldgs$b;)D compute
	b ()D maxValue
	c ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	j ()I fromY
	k ()I toY
	l ()D fromValue
	m ()D toValue
dgt$b net/minecraft/world/level/levelgen/DensityFunctions$BeardifierMarker
	a INSTANCE
	f $VALUES
	a ()D minValue
	a (Ldgs$b;)D compute
	a ([DLdgs$a;)V fillArray
	b ()D maxValue
	j ()[Ldgt$b; $values
dgt$c net/minecraft/world/level/levelgen/DensityFunctions$BeardifierOrMarker
	e CODEC
	c ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
dgt$d net/minecraft/world/level/levelgen/DensityFunctions$BlendAlpha
	a INSTANCE
	e CODEC
	f $VALUES
	a ()D minValue
	a (Ldgs$b;)D compute
	a ([DLdgs$a;)V fillArray
	b ()D maxValue
	c ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	j ()[Ldgt$d; $values
dgt$e net/minecraft/world/level/levelgen/DensityFunctions$BlendDensity
	a input
	e CODEC
	a ()D minValue
	a (Ldgs$b;D)D transform
	a (Ldgs$f;)Lnet/minecraft/world/level/levelgen/DensityFunction; mapAll
	b ()D maxValue
	c ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	j ()Lnet/minecraft/world/level/levelgen/DensityFunction; input
dgt$f net/minecraft/world/level/levelgen/DensityFunctions$BlendOffset
	a INSTANCE
	e CODEC
	f $VALUES
	a ()D minValue
	a (Ldgs$b;)D compute
	a ([DLdgs$a;)V fillArray
	b ()D maxValue
	c ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	j ()[Ldgt$f; $values
dgt$g net/minecraft/world/level/levelgen/DensityFunctions$Clamp
	a CODEC
	e input
	f minValue
	g maxValue
	h DATA_CODEC
	a ()D minValue
	a (D)D transform
	a (Ldgs$f;)Lnet/minecraft/world/level/levelgen/DensityFunction; mapAll
	au_ ()Lnet/minecraft/world/level/levelgen/DensityFunction; input
	b ()D maxValue
	c ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
dgt$h net/minecraft/world/level/levelgen/DensityFunctions$Constant
	a value
	e CODEC
	f ZERO
	a ()D minValue
	a (Ldgs$b;)D compute
	a ([DLdgs$a;)V fillArray
	b ()D maxValue
	c ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	j ()D value
dgt$i net/minecraft/world/level/levelgen/DensityFunctions$EndIslandDensityFunction
	a CODEC
	e ISLAND_THRESHOLD
	f islandNoise
	a ()D minValue
	a (Ldgs$b;)D compute
	a (Lnet/minecraft/world/level/levelgen/synth/NoiseGenerator3Handler;II)F getHeightValue
	b ()D maxValue
	c ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
dgt$j net/minecraft/world/level/levelgen/DensityFunctions$HolderHolder
	a function
	a ()D minValue
	a (Ldgs$b;)D compute
	a (Ldgs$f;)Lnet/minecraft/world/level/levelgen/DensityFunction; mapAll
	a ([DLdgs$a;)V fillArray
	b ()D maxValue
	c ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	j ()Lnet/minecraft/core/Holder; function
dgt$k net/minecraft/world/level/levelgen/DensityFunctions$Mapped
	a type
	e input
	f minValue
	g maxValue
	a ()D minValue
	a (D)D transform
	a (Ldgs$f;)Lnet/minecraft/world/level/levelgen/DensityFunction; mapAll
	a (Ldgt$k$a;D)D transform
	a (Ldgt$k$a;Lnet/minecraft/world/level/levelgen/DensityFunction;)Ldgt$k; create
	au_ ()Lnet/minecraft/world/level/levelgen/DensityFunction; input
	b ()D maxValue
	b (Ldgs$f;)Ldgt$k; mapAll
	c ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	k ()Ldgt$k$a; type
dgt$k$a net/minecraft/world/level/levelgen/DensityFunctions$Mapped$Type
	a ABS
	b SQUARE
	c CUBE
	d HALF_NEGATIVE
	e QUARTER_NEGATIVE
	f SQUEEZE
	g name
	h codec
	i $VALUES
	a ()[Ldgt$k$a; $values
	c ()Ljava/lang/String; getSerializedName
dgt$l net/minecraft/world/level/levelgen/DensityFunctions$Marker
	a type
	e wrapped
	a ()D minValue
	a (Ldgs$b;)D compute
	a ([DLdgs$a;)V fillArray
	b ()D maxValue
	j ()Ldgt$l$a; type
	k ()Lnet/minecraft/world/level/levelgen/DensityFunction; wrapped
dgt$l$a net/minecraft/world/level/levelgen/DensityFunctions$Marker$Type
	a Interpolated
	b FlatCache
	c Cache2D
	d CacheOnce
	e CacheAllInCell
	f name
	g codec
	h $VALUES
	a ()[Ldgt$l$a; $values
	c ()Ljava/lang/String; getSerializedName
dgt$m net/minecraft/world/level/levelgen/DensityFunctions$MarkerOrMarked
	a (Ldgs$f;)Lnet/minecraft/world/level/levelgen/DensityFunction; mapAll
	c ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	j ()Ldgt$l$a; type
	k ()Lnet/minecraft/world/level/levelgen/DensityFunction; wrapped
dgt$n net/minecraft/world/level/levelgen/DensityFunctions$MulOrAdd
	e specificType
	f input
	g minValue
	h maxValue
	i argument
	a ()D minValue
	a (D)D transform
	a (Ldgs$f;)Lnet/minecraft/world/level/levelgen/DensityFunction; mapAll
	au_ ()Lnet/minecraft/world/level/levelgen/DensityFunction; input
	b ()D maxValue
	j ()Ldgt$y$a; type
	k ()Lnet/minecraft/world/level/levelgen/DensityFunction; argument1
	l ()Lnet/minecraft/world/level/levelgen/DensityFunction; argument2
	m ()Ldgt$n$a; specificType
	n ()D argument
dgt$n$a net/minecraft/world/level/levelgen/DensityFunctions$MulOrAdd$Type
	a MUL
	b ADD
	c $VALUES
	a ()[Ldgt$n$a; $values
dgt$o net/minecraft/world/level/levelgen/DensityFunctions$Noise
	a DATA_CODEC
	e CODEC
	f noise
	g xzScale
	h yScale
	a ()D minValue
	a (Ldgs$b;)D compute
	a (Ldgs$f;)Lnet/minecraft/world/level/levelgen/DensityFunction; mapAll
	a ([DLdgs$a;)V fillArray
	b ()D maxValue
	c ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	j ()Ldgs$c; noise
	k ()D xzScale
	l ()D yScale
dgt$p net/minecraft/world/level/levelgen/DensityFunctions$PureTransformer
	a (D)D transform
	a (Ldgs$b;)D compute
	a ([DLdgs$a;)V fillArray
	au_ ()Lnet/minecraft/world/level/levelgen/DensityFunction; input
dgt$q net/minecraft/world/level/levelgen/DensityFunctions$RangeChoice
	a DATA_CODEC
	e CODEC
	f input
	g minInclusive
	h maxExclusive
	i whenInRange
	j whenOutOfRange
	a ()D minValue
	a (Ldgs$b;)D compute
	a (Ldgs$f;)Lnet/minecraft/world/level/levelgen/DensityFunction; mapAll
	a ([DLdgs$a;)V fillArray
	b ()D maxValue
	c ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	j ()Lnet/minecraft/world/level/levelgen/DensityFunction; input
	k ()D minInclusive
	l ()D maxExclusive
	m ()Lnet/minecraft/world/level/levelgen/DensityFunction; whenInRange
	n ()Lnet/minecraft/world/level/levelgen/DensityFunction; whenOutOfRange
dgt$r net/minecraft/world/level/levelgen/DensityFunctions$Shift
	a offsetNoise
	e CODEC
	a (Ldgs$b;)D compute
	a (Ldgs$f;)Lnet/minecraft/world/level/levelgen/DensityFunction; mapAll
	c ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	j ()Ldgs$c; offsetNoise
dgt$s net/minecraft/world/level/levelgen/DensityFunctions$ShiftA
	a offsetNoise
	e CODEC
	a (Ldgs$b;)D compute
	a (Ldgs$f;)Lnet/minecraft/world/level/levelgen/DensityFunction; mapAll
	c ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	j ()Ldgs$c; offsetNoise
dgt$t net/minecraft/world/level/levelgen/DensityFunctions$ShiftB
	a offsetNoise
	e CODEC
	a (Ldgs$b;)D compute
	a (Ldgs$f;)Lnet/minecraft/world/level/levelgen/DensityFunction; mapAll
	c ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	j ()Ldgs$c; offsetNoise
dgt$u net/minecraft/world/level/levelgen/DensityFunctions$ShiftNoise
	a ()D minValue
	a (DDD)D compute
	a ([DLdgs$a;)V fillArray
	b ()D maxValue
	j ()Ldgs$c; offsetNoise
dgt$v net/minecraft/world/level/levelgen/DensityFunctions$ShiftedNoise
	a CODEC
	e shiftX
	f shiftY
	g shiftZ
	h xzScale
	i yScale
	j noise
	k DATA_CODEC
	a ()D minValue
	a (Ldgs$b;)D compute
	a (Ldgs$f;)Lnet/minecraft/world/level/levelgen/DensityFunction; mapAll
	a ([DLdgs$a;)V fillArray
	b ()D maxValue
	c ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	j ()Lnet/minecraft/world/level/levelgen/DensityFunction; shiftX
	k ()Lnet/minecraft/world/level/levelgen/DensityFunction; shiftY
	l ()Lnet/minecraft/world/level/levelgen/DensityFunction; shiftZ
	m ()D xzScale
	n ()D yScale
	o ()Ldgs$c; noise
dgt$w net/minecraft/world/level/levelgen/DensityFunctions$Spline
	a CODEC
	e spline
	f SPLINE_CODEC
	g DATA_CODEC
	a ()D minValue
	a (Ldgs$b;)D compute
	a (Ldgs$f;)Lnet/minecraft/world/level/levelgen/DensityFunction; mapAll
	a ([DLdgs$a;)V fillArray
	b ()D maxValue
	c ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	j ()Lnet/minecraft/util/CubicSpline; spline
dgt$w$a net/minecraft/world/level/levelgen/DensityFunctions$Spline$Coordinate
	b CODEC
	c function
	a ()Lnet/minecraft/core/Holder; function
	a (Ldgs$f;)Ldgt$w$a; mapAll
	a (Ldgt$w$b;)F apply
	a (Ljava/lang/Object;)F apply
	b ()F minValue
	c ()F maxValue
dgt$w$b net/minecraft/world/level/levelgen/DensityFunctions$Spline$Point
	a context
	a ()Ldgs$b; context
dgt$x net/minecraft/world/level/levelgen/DensityFunctions$TransformerWithContext
	a (Ldgs$b;)D compute
	a (Ldgs$b;D)D transform
	a ([DLdgs$a;)V fillArray
	j ()Lnet/minecraft/world/level/levelgen/DensityFunction; input
dgt$y net/minecraft/world/level/levelgen/DensityFunctions$TwoArgumentSimpleFunction
	a LOGGER
	a (Ldgt$y$a;Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;)Ldgt$y; create
	c ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	j ()Ldgt$y$a; type
	k ()Lnet/minecraft/world/level/levelgen/DensityFunction; argument1
	l ()Lnet/minecraft/world/level/levelgen/DensityFunction; argument2
dgt$y$a net/minecraft/world/level/levelgen/DensityFunctions$TwoArgumentSimpleFunction$Type
	a ADD
	b MUL
	c MIN
	d MAX
	e codec
	f name
	g $VALUES
	a ()[Ldgt$y$a; $values
	c ()Ljava/lang/String; getSerializedName
dgt$z net/minecraft/world/level/levelgen/DensityFunctions$WeirdScaledSampler
	a CODEC
	e input
	f noise
	g rarityValueMapper
	h DATA_CODEC
	a ()D minValue
	a (Ldgs$b;D)D transform
	a (Ldgs$f;)Lnet/minecraft/world/level/levelgen/DensityFunction; mapAll
	b ()D maxValue
	c ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	j ()Lnet/minecraft/world/level/levelgen/DensityFunction; input
	k ()Ldgs$c; noise
	l ()Ldgt$z$a; rarityValueMapper
dgt$z$a net/minecraft/world/level/levelgen/DensityFunctions$WeirdScaledSampler$RarityValueMapper
	a TYPE1
	b TYPE2
	c CODEC
	d name
	e mapper
	f maxRarity
	g $VALUES
	a ()[Ldgt$z$a; $values
	c ()Ljava/lang/String; getSerializedName
dha$a net/minecraft/world/level/levelgen/LegacyRandomSource$LegacyPositionalRandomFactory
	a seed
	a (III)Lnet/minecraft/util/RandomSource; at
	a (Ljava/lang/String;)Lnet/minecraft/util/RandomSource; fromHashOf
	a (Ljava/lang/StringBuilder;)V parityConfigString
dhd$a net/minecraft/world/level/levelgen/NoiseChunk$BlendAlpha
	a ()D minValue
	a (Ldgs$b;)D compute
	a (Ldgs$f;)Lnet/minecraft/world/level/levelgen/DensityFunction; mapAll
	a ([DLdgs$a;)V fillArray
	b ()D maxValue
	c ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	k ()Lnet/minecraft/world/level/levelgen/DensityFunction; wrapped
dhd$b net/minecraft/world/level/levelgen/NoiseChunk$BlendOffset
	a ()D minValue
	a (Ldgs$b;)D compute
	a (Ldgs$f;)Lnet/minecraft/world/level/levelgen/DensityFunction; mapAll
	a ([DLdgs$a;)V fillArray
	b ()D maxValue
	c ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	k ()Lnet/minecraft/world/level/levelgen/DensityFunction; wrapped
dhd$c net/minecraft/world/level/levelgen/NoiseChunk$BlockStateFiller
dhd$d net/minecraft/world/level/levelgen/NoiseChunk$Cache2D
	a function
	e lastPos2D
	f lastValue
	a (Ldgs$b;)D compute
	a ([DLdgs$a;)V fillArray
	j ()Ldgt$l$a; type
	k ()Lnet/minecraft/world/level/levelgen/DensityFunction; wrapped
dhd$e net/minecraft/world/level/levelgen/NoiseChunk$CacheAllInCell
	e noiseFiller
	f values
	a (Ldgs$b;)D compute
	a ([DLdgs$a;)V fillArray
	j ()Ldgt$l$a; type
	k ()Lnet/minecraft/world/level/levelgen/DensityFunction; wrapped
dhd$f net/minecraft/world/level/levelgen/NoiseChunk$CacheOnce
	e function
	f lastCounter
	g lastArrayCounter
	h lastValue
	i lastArray
	a (Ldgs$b;)D compute
	a ([DLdgs$a;)V fillArray
	j ()Ldgt$l$a; type
	k ()Lnet/minecraft/world/level/levelgen/DensityFunction; wrapped
dhd$g net/minecraft/world/level/levelgen/NoiseChunk$FlatCache
	e noiseFiller
	f values
	a (Ldgs$b;)D compute
	a ([DLdgs$a;)V fillArray
	j ()Ldgt$l$a; type
	k ()Lnet/minecraft/world/level/levelgen/DensityFunction; wrapped
dhd$h net/minecraft/world/level/levelgen/NoiseChunk$NoiseChunkDensityFunction
	a ()D minValue
	b ()D maxValue
	k ()Lnet/minecraft/world/level/levelgen/DensityFunction; wrapped
dhd$i net/minecraft/world/level/levelgen/NoiseChunk$NoiseInterpolator
	e slice0
	f slice1
	g noiseFiller
	h noise000
	i noise001
	j noise100
	k noise101
	l noise010
	m noise011
	n noise110
	o noise111
	p valueXZ00
	q valueXZ10
	r valueXZ01
	s valueXZ11
	t valueZ0
	u valueZ1
	v value
	a (D)V updateForY
	a (II)[[D allocateSlice
	a (Ldgs$b;)D compute
	a ([DLdgs$a;)V fillArray
	b (D)V updateForX
	b (II)V selectCellYZ
	c (D)V updateForZ
	j ()Ldgt$l$a; type
	k ()Lnet/minecraft/world/level/levelgen/DensityFunction; wrapped
	l ()V swapSlices
dhg$a net/minecraft/world/level/levelgen/NoiseRouterData$QuantizedSpaghettiRarity
	a (D)D getSphaghettiRarity2D
	b (D)D getSpaghettiRarity3D
dhj$a net/minecraft/world/level/levelgen/OreVeinifier$VeinType
	a COPPER
	b IRON
	c minY
	d maxY
	e ore
	f rawOreBlock
	g filler
	h $VALUES
	a ()[Ldhj$a; $values
dho$a net/minecraft/world/level/levelgen/RandomSupport$Seed128bit
	a seedLo
	b seedHi
	a ()J seedLo
	b ()J seedHi
dhq$a net/minecraft/world/level/levelgen/SurfaceRules$AbovePreliminarySurface
	a INSTANCE
	c CODEC
	d $VALUES
	a ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	a (Ldhq$g;)Ldhq$e; apply
	b ()[Ldhq$a; $values
dhq$aa net/minecraft/world/level/levelgen/SurfaceRules$YConditionSource
	a anchor
	c surfaceDepthMultiplier
	d addStoneDepth
	e CODEC
	a ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	a (Ldhq$g;)Ldhq$e; apply
	b ()Lnet/minecraft/world/level/levelgen/VerticalAnchor; anchor
	c ()I surfaceDepthMultiplier
	d ()Z addStoneDepth
dhq$b net/minecraft/world/level/levelgen/SurfaceRules$Bandlands
	a INSTANCE
	c CODEC
	d $VALUES
	a ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	a (Ldhq$g;)Ldhq$u; apply
	b ()[Ldhq$b; $values
dhq$c net/minecraft/world/level/levelgen/SurfaceRules$BiomeConditionSource
	a CODEC
	c biomes
	d biomeNameTest
	a ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	a (Ldhq$g;)Ldhq$e; apply
dhq$d net/minecraft/world/level/levelgen/SurfaceRules$BlockRuleSource
	a resultState
	c rule
	d CODEC
	a ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	a (Ldhq$g;)Ldhq$u; apply
	b ()Lnet/minecraft/world/level/block/state/IBlockData; resultState
	c ()Ldhq$r; rule
dhq$e net/minecraft/world/level/levelgen/SurfaceRules$Condition
	b ()Z test
dhq$f net/minecraft/world/level/levelgen/SurfaceRules$ConditionSource
	b CODEC
	a ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	a (Lnet/minecraft/core/IRegistry;)Lcom/mojang/serialization/Codec; bootstrap
dhq$g net/minecraft/world/level/levelgen/SurfaceRules$Context
	A biome
	B blockY
	C waterHeight
	D stoneDepthBelow
	E stoneDepthAbove
	a HOW_FAR_BELOW_PRELIMINARY_SURFACE_LEVEL_TO_BUILD_SURFACE
	b SURFACE_CELL_BITS
	c SURFACE_CELL_SIZE
	d SURFACE_CELL_MASK
	e system
	f temperature
	g steep
	h hole
	i abovePreliminarySurface
	j randomState
	k chunk
	l noiseChunk
	m biomeGetter
	n context
	o lastPreliminarySurfaceCellOrigin
	p preliminarySurfaceCache
	q lastUpdateXZ
	r blockX
	s blockZ
	t surfaceDepth
	u lastSurfaceDepth2Update
	v surfaceSecondary
	w lastMinSurfaceLevelUpdate
	x minSurfaceLevel
	y lastUpdateY
	z pos
	a ()D getSurfaceSecondary
	a (I)I blockCoordToSurfaceCell
	a (II)V updateXZ
	a (IIIIII)V updateY
	b ()I getMinSurfaceLevel
	b (I)I surfaceCellToBlockCoord
dhq$g$a net/minecraft/world/level/levelgen/SurfaceRules$Context$AbovePreliminarySurfaceCondition
	b ()Z test
dhq$g$b net/minecraft/world/level/levelgen/SurfaceRules$Context$HoleCondition
	a ()Z compute
dhq$g$c net/minecraft/world/level/levelgen/SurfaceRules$Context$SteepMaterialCondition
	a ()Z compute
dhq$g$d net/minecraft/world/level/levelgen/SurfaceRules$Context$TemperatureHelperCondition
	a ()Z compute
dhq$h net/minecraft/world/level/levelgen/SurfaceRules$Hole
	a INSTANCE
	c CODEC
	d $VALUES
	a ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	a (Ldhq$g;)Ldhq$e; apply
	b ()[Ldhq$h; $values
dhq$i net/minecraft/world/level/levelgen/SurfaceRules$LazyCondition
	a lastUpdate
	c context
	d result
	a ()Z compute
	b ()Z test
	c ()J getContextLastUpdate
dhq$j net/minecraft/world/level/levelgen/SurfaceRules$LazyXZCondition
	c ()J getContextLastUpdate
dhq$k net/minecraft/world/level/levelgen/SurfaceRules$LazyYCondition
	c ()J getContextLastUpdate
dhq$l net/minecraft/world/level/levelgen/SurfaceRules$NoiseThresholdConditionSource
	a noise
	c minThreshold
	d maxThreshold
	e CODEC
	a ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	a (Ldhq$g;)Ldhq$e; apply
	b ()Lnet/minecraft/resources/ResourceKey; noise
	c ()D minThreshold
	d ()D maxThreshold
dhq$m net/minecraft/world/level/levelgen/SurfaceRules$NotCondition
	a target
	a ()Ldhq$e; target
	b ()Z test
dhq$n net/minecraft/world/level/levelgen/SurfaceRules$NotConditionSource
	a target
	c CODEC
	a ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	a (Ldhq$g;)Ldhq$e; apply
	b ()Ldhq$f; target
dhq$o net/minecraft/world/level/levelgen/SurfaceRules$RuleSource
	b CODEC
	a ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	a (Lnet/minecraft/core/IRegistry;)Lcom/mojang/serialization/Codec; bootstrap
dhq$p net/minecraft/world/level/levelgen/SurfaceRules$SequenceRule
	a rules
	a ()Ljava/util/List; rules
dhq$q net/minecraft/world/level/levelgen/SurfaceRules$SequenceRuleSource
	a sequence
	c CODEC
	a ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	a (Ldhq$g;)Ldhq$u; apply
	b ()Ljava/util/List; sequence
dhq$r net/minecraft/world/level/levelgen/SurfaceRules$StateRule
	a state
	a ()Lnet/minecraft/world/level/block/state/IBlockData; state
dhq$s net/minecraft/world/level/levelgen/SurfaceRules$Steep
	a INSTANCE
	c CODEC
	d $VALUES
	a ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	a (Ldhq$g;)Ldhq$e; apply
	b ()[Ldhq$s; $values
dhq$t net/minecraft/world/level/levelgen/SurfaceRules$StoneDepthCheck
	a offset
	c addSurfaceDepth
	d secondaryDepthRange
	e surfaceType
	f CODEC
	a ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	a (Ldhq$g;)Ldhq$e; apply
	b ()I offset
	c ()Z addSurfaceDepth
	d ()I secondaryDepthRange
	e ()Lnet/minecraft/world/level/levelgen/placement/CaveSurface; surfaceType
dhq$u net/minecraft/world/level/levelgen/SurfaceRules$SurfaceRule
dhq$v net/minecraft/world/level/levelgen/SurfaceRules$Temperature
	a INSTANCE
	c CODEC
	d $VALUES
	a ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	a (Ldhq$g;)Ldhq$e; apply
	b ()[Ldhq$v; $values
dhq$w net/minecraft/world/level/levelgen/SurfaceRules$TestRule
	a condition
	b followup
	a ()Ldhq$e; condition
	b ()Ldhq$u; followup
dhq$x net/minecraft/world/level/levelgen/SurfaceRules$TestRuleSource
	a ifTrue
	c thenRun
	d CODEC
	a ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	a (Ldhq$g;)Ldhq$u; apply
	b ()Ldhq$f; ifTrue
	c ()Ldhq$o; thenRun
dhq$y net/minecraft/world/level/levelgen/SurfaceRules$VerticalGradientConditionSource
	a randomName
	c trueAtAndBelow
	d falseAtAndAbove
	e CODEC
	a ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	a (Ldhq$g;)Ldhq$e; apply
	b ()Lnet/minecraft/resources/MinecraftKey; randomName
	c ()Lnet/minecraft/world/level/levelgen/VerticalAnchor; trueAtAndBelow
	d ()Lnet/minecraft/world/level/levelgen/VerticalAnchor; falseAtAndAbove
dhq$z net/minecraft/world/level/levelgen/SurfaceRules$WaterConditionSource
	a offset
	c surfaceDepthMultiplier
	d addStoneDepth
	e CODEC
	a ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	a (Ldhq$g;)Ldhq$e; apply
	b ()I offset
	c ()I surfaceDepthMultiplier
	d ()Z addStoneDepth
dht$a net/minecraft/world/level/levelgen/VerticalAnchor$AboveBottom
	d CODEC
	e offset
	a (Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I resolveY
	c ()I offset
dht$b net/minecraft/world/level/levelgen/VerticalAnchor$Absolute
	d CODEC
	e y
	a (Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I resolveY
	c ()I y
dht$c net/minecraft/world/level/levelgen/VerticalAnchor$BelowTop
	d CODEC
	e offset
	a (Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I resolveY
	c ()I offset
dhu$b net/minecraft/world/level/levelgen/WorldDimensions$Complete
	a dimensions
	b specialWorldProperty
	a ()Lcom/mojang/serialization/Lifecycle; lifecycle
	b ()Lnet/minecraft/core/IRegistryCustom$Dimension; dimensionsRegistryAccess
	c ()Lnet/minecraft/core/IRegistry; dimensions
	d ()Ldyi$a; specialWorldProperty
dhy$a net/minecraft/world/level/levelgen/WorldgenRandom$Algorithm
	a LEGACY
	b XOROSHIRO
	c constructor
	d $VALUES
	a ()[Ldhy$a; $values
	a (J)Lnet/minecraft/util/RandomSource; newInstance
dia$a net/minecraft/world/level/levelgen/XoroshiroRandomSource$XoroshiroPositionalRandomFactory
	a MD5_128
	b seedLo
	c seedHi
	a (III)Lnet/minecraft/util/RandomSource; at
	a (Ljava/lang/String;)Lnet/minecraft/util/RandomSource; fromHashOf
	a (Ljava/lang/StringBuilder;)V parityConfigString
dib$a net/minecraft/world/level/levelgen/blending/Blender$BlendingOutput
	a alpha
	b blendingOffset
	a ()D alpha
	b ()D blendingOffset
dib$b net/minecraft/world/level/levelgen/blending/Blender$CellValueGetter
dib$c net/minecraft/world/level/levelgen/blending/Blender$DistanceGetter
dic$a net/minecraft/world/level/levelgen/blending/BlendingData$BiomeConsumer
dic$b net/minecraft/world/level/levelgen/blending/BlendingData$DensityConsumer
dic$c net/minecraft/world/level/levelgen/blending/BlendingData$HeightConsumer
div$a net/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration$CanyonShapeConfiguration
	a CODEC
	b distanceFactor
	c thickness
	d widthSmoothness
	e horizontalRadiusFactor
	f verticalRadiusDefaultFactor
	g verticalRadiusCenterFactor
dje$a net/minecraft/world/level/levelgen/carver/WorldCarver$CarveSkipChecker
dke net/minecraft/world/level/levelgen/feature/FeatureCountTracker
	a LOGGER
	b data
	a ()V clearCounts
	a (Lnet/minecraft/server/level/WorldServer;)V chunkDecorated
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/levelgen/feature/WorldGenFeatureConfigured;Ljava/util/Optional;)V featurePlaced
	b ()V logCounts
dke$a net/minecraft/world/level/levelgen/feature/FeatureCountTracker$FeatureData
	a feature
	b topFeature
	a ()Lnet/minecraft/world/level/levelgen/feature/WorldGenFeatureConfigured; feature
	b ()Ljava/util/Optional; topFeature
dke$b net/minecraft/world/level/levelgen/feature/FeatureCountTracker$LevelData
	a featureData
	b chunksWithFeatures
	a ()Lit/unimi/dsi/fastutil/objects/Object2IntMap; featureData
	b ()Lorg/apache/commons/lang3/mutable/MutableInt; chunksWithFeatures
dks$a net/minecraft/world/level/levelgen/feature/LakeFeature$Configuration
	a CODEC
	b fluid
	c barrier
	a ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProvider; fluid
	b ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProvider; barrier
dkt$a net/minecraft/world/level/levelgen/feature/LargeDripstoneFeature$LargeDripstone
	a root
	b pointingUp
	c radius
	d bluntness
	e scale
	a ()I getHeight
	a (F)I getHeightAtRadius
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Ldkt$b;)Z moveBackUntilBaseIsInsideStoneAndShrinkRadiusIfNecessary
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/util/RandomSource;Ldkt$b;)V placeBlocks
	a (Lnet/minecraft/world/level/levelgen/feature/configurations/LargeDripstoneConfiguration;)Z isSuitableForWind
	b ()I getMinY
	c ()I getMaxY
dkt$b net/minecraft/world/level/levelgen/feature/LargeDripstoneFeature$WindOffsetter
	a originY
	b windSpeed
	a ()Ldkt$b; noWind
	a (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/core/BlockPosition; offset
dl$a net/minecraft/commands/CommandBuildContext$Configurable
	a (Ldl$b;)V missingTagAccessPolicy
dl$b net/minecraft/commands/CommandBuildContext$MissingTagAccessPolicy
	a CREATE_NEW
	b FAIL
	c $VALUES
	a ()[Ldl$b; $values
dln$b net/minecraft/world/level/levelgen/feature/SpikeFeature$SpikeCacheLoader
	a (Ljava/lang/Long;)Ljava/util/List; load
dly$a net/minecraft/world/level/levelgen/feature/configurations/BlockColumnConfiguration$Layer
	a CODEC
	b height
	c state
	a ()Lnet/minecraft/util/valueproviders/IntProvider; height
	b ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProvider; state
dm$a net/minecraft/commands/CommandFunction$CacheableFunction
	a NONE
	b id
	c resolved
	d function
	a ()Lnet/minecraft/resources/MinecraftKey; getId
	a (Lnet/minecraft/server/CustomFunctionData;)Ljava/util/Optional; get
dm$b net/minecraft/commands/CommandFunction$CommandEntry
	a parse
	a (Lnet/minecraft/server/CustomFunctionData;Lnet/minecraft/commands/CommandListenerWrapper;)I execute
dm$c net/minecraft/commands/CommandFunction$Entry
dm$d net/minecraft/commands/CommandFunction$FunctionEntry
	a function
dmp$a net/minecraft/world/level/levelgen/feature/configurations/OreConfiguration$TargetBlockState
	a CODEC
	b target
	c state
dnd$a net/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder
	a trunkProvider
	b foliageProvider
	c trunkPlacer
	d foliagePlacer
	e rootPlacer
	f dirtProvider
	g minimumSize
	h decorators
	i ignoreVines
	j forceDirt
	a ()Ldnd$a; ignoreVines
	a (Ljava/util/List;)Ldnd$a; decorators
	a (Lnet/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProvider;)Ldnd$a; dirt
	b ()Ldnd$a; forceDirt
	c ()Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration; build
dnt$a net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment
	a pos
	b radiusOffset
	c doubleTrunk
	a ()Lnet/minecraft/core/BlockPosition; pos
	b ()I radiusOffset
	c ()Z doubleTrunk
dnt$b net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageSetter
	a (Lnet/minecraft/core/BlockPosition;)Z isSet
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V set
doq$a net/minecraft/world/level/levelgen/feature/stateproviders/RuleBasedBlockStateProvider$Rule
	a CODEC
	b ifTrue
	c then
	a ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; ifTrue
	b ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProvider; then
doz$a net/minecraft/world/level/levelgen/feature/treedecorators/TreeDecorator$Context
	a level
	b decorationSetter
	c random
	d logs
	e leaves
	f roots
	a ()Lnet/minecraft/world/level/VirtualLevelReadable; level
	a (Lnet/minecraft/core/BlockPosition;)Z isAir
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V setBlock
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/properties/BlockStateBoolean;)V placeVine
	b ()Lnet/minecraft/util/RandomSource; random
	c ()Lit/unimi/dsi/fastutil/objects/ObjectArrayList; logs
	d ()Lit/unimi/dsi/fastutil/objects/ObjectArrayList; leaves
	e ()Lit/unimi/dsi/fastutil/objects/ObjectArrayList; roots
dp$a net/minecraft/commands/CommandSigningContext$SignedArguments
	b arguments
	a ()Ljava/util/Map; arguments
	a (Ljava/lang/String;)Lnet/minecraft/network/chat/PlayerChatMessage; getArgument
dpg$a net/minecraft/world/level/levelgen/feature/trunkplacers/FancyTrunkPlacer$FoliageCoords
	a attachment
	b branchBase
	a ()I getBranchBase
dpr$a net/minecraft/world/level/levelgen/flat/FlatLevelGeneratorPresets$Bootstrap
	a context
	a ()V run
	a (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/resources/ResourceKey;Ljava/util/Set;ZZ[Lnet/minecraft/world/level/levelgen/flat/WorldGenFlatLayerInfo;)V register
dqe net/minecraft/world/level/levelgen/material/WorldGenMaterialRule
	a (Lnet/minecraft/world/level/levelgen/NoiseChunk;III)Lnet/minecraft/world/level/block/state/IBlockData; apply
drf$a net/minecraft/world/level/levelgen/presets/WorldPresets$Bootstrap
	a context
	b noiseSettings
	c biomes
	d placedFeatures
	e structureSets
	f multiNoiseBiomeSourceParameterLists
	g overworldDimensionType
	h netherStem
	i endStem
	a ()V bootstrap
	a (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/level/dimension/WorldDimension;)V registerCustomOverworldPreset
	a (Lnet/minecraft/world/level/biome/WorldChunkManager;)V registerOverworlds
	a (Lnet/minecraft/world/level/biome/WorldChunkManager;Lnet/minecraft/core/Holder;)Lnet/minecraft/world/level/dimension/WorldDimension; makeNoiseBasedOverworld
	a (Lnet/minecraft/world/level/chunk/ChunkGenerator;)Lnet/minecraft/world/level/dimension/WorldDimension; makeOverworld
	a (Lnet/minecraft/world/level/dimension/WorldDimension;)Lnet/minecraft/world/level/levelgen/presets/WorldPreset; createPresetWithCustomOverworld
drm net/minecraft/world/level/levelgen/structure/PostPlacementProcessor
	a NONE
dro$a net/minecraft/world/level/levelgen/structure/SinglePieceStructure$PieceConstructor
drp$a net/minecraft/world/level/levelgen/structure/Structure$GenerationContext
	a registryAccess
	b chunkGenerator
	c biomeSource
	d randomState
	e structureTemplateManager
	f random
	g seed
	h chunkPos
	i heightAccessor
	j validBiome
	a ()Lnet/minecraft/core/IRegistryCustom; registryAccess
	a (JLnet/minecraft/world/level/ChunkCoordIntPair;)Lnet/minecraft/world/level/levelgen/SeededRandom; makeRandom
	b ()Lnet/minecraft/world/level/chunk/ChunkGenerator; chunkGenerator
	c ()Lnet/minecraft/world/level/biome/WorldChunkManager; biomeSource
	d ()Lnet/minecraft/world/level/levelgen/RandomState; randomState
	e ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager; structureTemplateManager
	f ()Lnet/minecraft/world/level/levelgen/SeededRandom; random
	g ()J seed
	h ()Lnet/minecraft/world/level/ChunkCoordIntPair; chunkPos
	i ()Lnet/minecraft/world/level/LevelHeightAccessor; heightAccessor
	j ()Ljava/util/function/Predicate; validBiome
drp$b net/minecraft/world/level/levelgen/structure/Structure$GenerationStub
	a position
	b generator
	a ()Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder; getPiecesBuilder
	b ()Lnet/minecraft/core/BlockPosition; position
	c ()Lcom/mojang/datafixers/util/Either; generator
drp$c net/minecraft/world/level/levelgen/structure/Structure$StructureSettings
	a CODEC
	b biomes
	c spawnOverrides
	d step
	e terrainAdaptation
	a ()Lnet/minecraft/core/HolderSet; biomes
	b ()Ljava/util/Map; spawnOverrides
	c ()Lnet/minecraft/world/level/levelgen/WorldGenStage$Decoration; step
	d ()Lnet/minecraft/world/level/levelgen/structure/TerrainAdjustment; terrainAdaptation
drv$a net/minecraft/world/level/levelgen/structure/StructureSet$StructureSelectionEntry
	a CODEC
	b structure
	c weight
	a ()Lnet/minecraft/core/Holder; structure
	b ()I weight
drw$a net/minecraft/world/level/levelgen/structure/StructureSpawnOverride$BoundingBoxType
	a PIECE
	b STRUCTURE
	c CODEC
	d id
	e $VALUES
	a ()[Ldrw$a; $values
	c ()Ljava/lang/String; getSerializedName
ds$b net/minecraft/commands/Commands$ParseFunction
dsc net/minecraft/world/level/levelgen/structure/pieces/PieceGenerator
dsc$a net/minecraft/world/level/levelgen/structure/pieces/PieceGenerator$Context
	a config
	b chunkGenerator
	c structureTemplateManager
	d chunkPos
	e heightAccessor
	f random
	g seed
	a ()Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureConfiguration; config
	b ()Lnet/minecraft/world/level/chunk/ChunkGenerator; chunkGenerator
	c ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager; structureTemplateManager
	d ()Lnet/minecraft/world/level/ChunkCoordIntPair; chunkPos
	e ()Lnet/minecraft/world/level/LevelHeightAccessor; heightAccessor
	f ()Lnet/minecraft/world/level/levelgen/SeededRandom; random
	g ()J seed
dsd net/minecraft/world/level/levelgen/structure/pieces/PieceGeneratorSupplier
dsd$a net/minecraft/world/level/levelgen/structure/pieces/PieceGeneratorSupplier$Context
	a chunkGenerator
	b biomeSource
	c randomState
	d seed
	e chunkPos
	f config
	g heightAccessor
	h validBiome
	i structureTemplateManager
	j registryAccess
	a ()Lnet/minecraft/world/level/chunk/ChunkGenerator; chunkGenerator
	a (Lnet/minecraft/world/level/levelgen/HeightMap$Type;)Z validBiomeOnTop
	b ()Lnet/minecraft/world/level/biome/WorldChunkManager; biomeSource
	c ()Lnet/minecraft/world/level/levelgen/RandomState; randomState
	d ()J seed
	e ()Lnet/minecraft/world/level/ChunkCoordIntPair; chunkPos
	f ()Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureConfiguration; config
	g ()Lnet/minecraft/world/level/LevelHeightAccessor; heightAccessor
	h ()Ljava/util/function/Predicate; validBiome
	i ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager; structureTemplateManager
	j ()Lnet/minecraft/core/IRegistryCustom; registryAccess
dsg$a net/minecraft/world/level/levelgen/structure/pieces/StructurePieceType$ContextlessType
dsg$b net/minecraft/world/level/levelgen/structure/pieces/StructurePieceType$StructureTemplateType
dsm$a net/minecraft/world/level/levelgen/structure/placement/StructurePlacement$ExclusionZone
	a CODEC
	b otherSet
	c chunkCount
	a ()Lnet/minecraft/core/Holder; otherSet
	a (Lnet/minecraft/world/level/chunk/ChunkGeneratorStructureState;II)Z isPlacementForbidden
	b ()I chunkCount
dsm$b net/minecraft/world/level/levelgen/structure/placement/StructurePlacement$FrequencyReducer
dsm$c net/minecraft/world/level/levelgen/structure/placement/StructurePlacement$FrequencyReductionMethod
	a DEFAULT
	b LEGACY_TYPE_1
	c LEGACY_TYPE_2
	d LEGACY_TYPE_3
	e CODEC
	f name
	g reducer
	h $VALUES
	a ()[Ldsm$c; $values
	a (JIIIF)Z shouldGenerate
	c ()Ljava/lang/String; getSerializedName
dss$a net/minecraft/world/level/levelgen/structure/pools/JigsawPlacement$PieceState
	a piece
	b free
	c depth
dss$b net/minecraft/world/level/levelgen/structure/pools/JigsawPlacement$Placer
	a pools
	b maxDepth
	c chunkGenerator
	d structureTemplateManager
	e pieces
	f random
	g placing
	a (Lnet/minecraft/world/level/levelgen/structure/WorldGenFeaturePillagerOutpostPoolPiece;Lorg/apache/commons/lang3/mutable/MutableObject;IZLnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;)V tryPlacingChildren
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo;)Lnet/minecraft/resources/ResourceKey; readPoolName
dt$a net/minecraft/commands/SharedSuggestionProvider$ElementSuggestionType
	a TAGS
	b ELEMENTS
	c ALL
	d $VALUES
	a ()Z shouldSuggestTags
	b ()Z shouldSuggestElements
	c ()[Ldt$a; $values
dt$b net/minecraft/commands/SharedSuggestionProvider$TextCoordinates
	a DEFAULT_LOCAL
	b DEFAULT_GLOBAL
	c x
	d y
	e z
dta$a net/minecraft/world/level/levelgen/structure/structures/BuriedTreasurePieces$BuriedTreasurePiece
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/level/block/state/IBlockData;)Z isLiquid
dte$a net/minecraft/world/level/levelgen/structure/structures/EndCityPieces$EndCityPiece
	a (Ljava/lang/String;)Lnet/minecraft/resources/MinecraftKey; makeResourceLocation
	a (Ljava/lang/String;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)V handleDataMarker
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	a (ZLnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo; makeSettings
	b ()Lnet/minecraft/resources/MinecraftKey; makeTemplateLocation
dte$b net/minecraft/world/level/levelgen/structure/structures/EndCityPieces$SectionGenerator
	a ()V init
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;ILdte$a;Lnet/minecraft/core/BlockPosition;Ljava/util/List;Lnet/minecraft/util/RandomSource;)Z generate
dtg$a net/minecraft/world/level/levelgen/structure/structures/IglooPieces$IglooPiece
	a (Ljava/lang/String;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)V handleDataMarker
	a (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/core/BlockPosition;I)Lnet/minecraft/core/BlockPosition; makePosition
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo; makeSettings
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
dtj$a net/minecraft/world/level/levelgen/structure/structures/JungleTemplePiece$MossStoneSelector
	a (Lnet/minecraft/util/RandomSource;IIIZ)V next
dtl$a net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$MineShaftCorridor
	b hasRails
	c spiderCorridor
	d hasPlacedSpider
	h numSections
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;II)V fillColumnBetween
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;III)V placeDoubleLowerOrUpperSupport
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;IIII)Z hasSturdyNeighbours
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;IIIIILnet/minecraft/util/RandomSource;)V placeSupport
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/util/RandomSource;FIII)V maybePlaceCobWeb
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/resources/MinecraftKey;)Z createChest
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z canPlaceColumnOnTopOf
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V addChildren
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/EnumDirection;)Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; findCorridorSize
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/block/state/IBlockData;IIILnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)V fillColumnDown
	b (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z canHangChainBelow
	c (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/block/state/IBlockData;IIILnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)V fillPillarDownOrChainUp
dtl$b net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$MineShaftCrossing
	b direction
	c isTwoFloored
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;IIII)V placeSupportPillar
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V addChildren
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/EnumDirection;)Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; findCrossing
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
dtl$c net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$MineShaftPiece
	a type
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)Z isInInvalidLocation
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/block/state/IBlockData;III)V setPlanksBlock
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;IIII)Z isSupportingBox
	a (Lnet/minecraft/world/level/IWorldReader;IIILnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)Z canBeReplaced
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
dtl$d net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$MineShaftRoom
	b childEntranceBoxes
	a (III)V move
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V addChildren
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
dtl$e net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$MineShaftStairs
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V addChildren
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/EnumDirection;)Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; findStairs
dtm$a net/minecraft/world/level/levelgen/structure/structures/MineshaftStructure$Type
	a NORMAL
	b MESA
	c CODEC
	d BY_ID
	e name
	f woodState
	g planksState
	h fenceState
	i $VALUES
	a ()Ljava/lang/String; getName
	a (I)Ldtm$a; byId
	b ()Lnet/minecraft/world/level/block/state/IBlockData; getWoodState
	c ()Ljava/lang/String; getSerializedName
	d ()Lnet/minecraft/world/level/block/state/IBlockData; getPlanksState
	e ()Lnet/minecraft/world/level/block/state/IBlockData; getFenceState
	f ()[Ldtm$a; $values
dtn$a net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$BridgeCrossing
	a WIDTH
	b HEIGHT
	c DEPTH
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V addChildren
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIILnet/minecraft/core/EnumDirection;I)Ldtn$a; createPiece
dtn$b net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$BridgeEndFiller
	a WIDTH
	b HEIGHT
	c DEPTH
	d selfSeed
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/EnumDirection;I)Ldtn$b; createPiece
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
dtn$c net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$BridgeStraight
	a WIDTH
	b HEIGHT
	c DEPTH
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V addChildren
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/EnumDirection;I)Ldtn$c; createPiece
dtn$d net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleCorridorStairsPiece
	a WIDTH
	b HEIGHT
	c DEPTH
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V addChildren
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIILnet/minecraft/core/EnumDirection;I)Ldtn$d; createPiece
dtn$e net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleCorridorTBalconyPiece
	a WIDTH
	b HEIGHT
	c DEPTH
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V addChildren
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIILnet/minecraft/core/EnumDirection;I)Ldtn$e; createPiece
dtn$f net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleEntrance
	a WIDTH
	b HEIGHT
	c DEPTH
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V addChildren
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/EnumDirection;I)Ldtn$f; createPiece
dtn$g net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleSmallCorridorCrossingPiece
	a WIDTH
	b HEIGHT
	c DEPTH
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V addChildren
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIILnet/minecraft/core/EnumDirection;I)Ldtn$g; createPiece
dtn$h net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleSmallCorridorLeftTurnPiece
	a WIDTH
	b HEIGHT
	c DEPTH
	d isNeedingChest
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V addChildren
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/EnumDirection;I)Ldtn$h; createPiece
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
dtn$i net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleSmallCorridorPiece
	a WIDTH
	b HEIGHT
	c DEPTH
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V addChildren
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIILnet/minecraft/core/EnumDirection;I)Ldtn$i; createPiece
dtn$j net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleSmallCorridorRightTurnPiece
	a WIDTH
	b HEIGHT
	c DEPTH
	d isNeedingChest
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V addChildren
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/EnumDirection;I)Ldtn$j; createPiece
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
dtn$k net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleStalkRoom
	a WIDTH
	b HEIGHT
	c DEPTH
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V addChildren
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIILnet/minecraft/core/EnumDirection;I)Ldtn$k; createPiece
dtn$l net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$MonsterThrone
	a WIDTH
	b HEIGHT
	c DEPTH
	d hasPlacedSpawner
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIIILnet/minecraft/core/EnumDirection;)Ldtn$l; createPiece
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
dtn$m net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$NetherBridgePiece
	a (Ldtn$q;Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/EnumDirection;I)Ldtn$m; generatePiece
	a (Ldtn$q;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/EnumDirection;IZ)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; generateAndAddPiece
	a (Ldtn$q;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIZ)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; generateChildForward
	a (Ljava/util/List;)I updatePieceWeight
	a (Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)Z isOkBox
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Ldtn$q;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIZ)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; generateChildLeft
	c (Ldtn$q;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIZ)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; generateChildRight
dtn$n net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$PieceWeight
	a pieceClass
	b weight
	c placeCount
	d maxPlaceCount
	e allowInRow
	a ()Z isValid
	a (I)Z doPlace
dtn$o net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$RoomCrossing
	a WIDTH
	b HEIGHT
	c DEPTH
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V addChildren
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIILnet/minecraft/core/EnumDirection;I)Ldtn$o; createPiece
dtn$p net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$StairsRoom
	a WIDTH
	b HEIGHT
	c DEPTH
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V addChildren
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIIILnet/minecraft/core/EnumDirection;)Ldtn$p; createPiece
dtn$q net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$StartPiece
	a previousPiece
	b availableBridgePieces
	c availableCastlePieces
	d pendingChildren
dtp$a net/minecraft/world/level/levelgen/structure/structures/NetherFossilPieces$NetherFossilPiece
	a (Ljava/lang/String;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)V handleDataMarker
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo; makeSettings
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
dtr$a net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitDoubleXRoom
	a (Ldtr$v;)Z fits
	a (Lnet/minecraft/core/EnumDirection;Ldtr$v;Lnet/minecraft/util/RandomSource;)Ldtr$r; create
dtr$b net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitDoubleXYRoom
	a (Ldtr$v;)Z fits
	a (Lnet/minecraft/core/EnumDirection;Ldtr$v;Lnet/minecraft/util/RandomSource;)Ldtr$r; create
dtr$c net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitDoubleYRoom
	a (Ldtr$v;)Z fits
	a (Lnet/minecraft/core/EnumDirection;Ldtr$v;Lnet/minecraft/util/RandomSource;)Ldtr$r; create
dtr$d net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitDoubleYZRoom
	a (Ldtr$v;)Z fits
	a (Lnet/minecraft/core/EnumDirection;Ldtr$v;Lnet/minecraft/util/RandomSource;)Ldtr$r; create
dtr$e net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitDoubleZRoom
	a (Ldtr$v;)Z fits
	a (Lnet/minecraft/core/EnumDirection;Ldtr$v;Lnet/minecraft/util/RandomSource;)Ldtr$r; create
dtr$f net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitSimpleRoom
	a (Ldtr$v;)Z fits
	a (Lnet/minecraft/core/EnumDirection;Ldtr$v;Lnet/minecraft/util/RandomSource;)Ldtr$r; create
dtr$g net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitSimpleTopRoom
	a (Ldtr$v;)Z fits
	a (Lnet/minecraft/core/EnumDirection;Ldtr$v;Lnet/minecraft/util/RandomSource;)Ldtr$r; create
dtr$h net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$MonumentBuilding
	C WIDTH
	D HEIGHT
	E DEPTH
	F TOP_POSITION
	G sourceRoom
	H coreRoom
	I childPieces
	a BIOME_RANGE_CHECK
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)V generateEntranceArchs
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (ZILnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)V generateWing
	b (Lnet/minecraft/util/RandomSource;)Ljava/util/List; generateRoomGraph
	b (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)V generateEntranceWall
	c (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)V generateRoofPiece
	d (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)V generateLowerWall
	e (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)V generateMiddleWall
	f (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)V generateUpperWall
dtr$i net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$MonumentRoomFitter
	a (Ldtr$v;)Z fits
	a (Lnet/minecraft/core/EnumDirection;Ldtr$v;Lnet/minecraft/util/RandomSource;)Ldtr$r; create
dtr$j net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentCoreRoom
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
dtr$k net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentDoubleXRoom
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
dtr$l net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentDoubleXYRoom
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
dtr$m net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentDoubleYRoom
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
dtr$n net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentDoubleYZRoom
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
dtr$o net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentDoubleZRoom
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
dtr$p net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentEntryRoom
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
dtr$q net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentPenthouse
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
dtr$r net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentPiece
	A PENTHOUSE_INDEX
	B roomDefinition
	b BASE_GRAY
	c BASE_LIGHT
	d BASE_BLACK
	h DOT_DECO_DATA
	i LAMP_BLOCK
	j DO_FILL
	k FILL_BLOCK
	l FILL_KEEP
	m GRIDROOM_WIDTH
	n GRIDROOM_DEPTH
	o GRIDROOM_HEIGHT
	p GRID_WIDTH
	q GRID_DEPTH
	r GRID_HEIGHT
	s GRID_FLOOR_COUNT
	t GRID_SIZE
	u GRIDROOM_SOURCE_INDEX
	v GRIDROOM_TOP_CONNECT_INDEX
	w GRIDROOM_LEFTWING_CONNECT_INDEX
	x GRIDROOM_RIGHTWING_CONNECT_INDEX
	y LEFTWING_INDEX
	z RIGHTWING_INDEX
	a (Lnet/minecraft/core/EnumDirection;Ldtr$v;III)Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; makeBoundingBox
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;III)V spawnElder
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;IIIIIILnet/minecraft/world/level/block/state/IBlockData;)V generateBoxOnFillOnly
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;IIZ)V generateDefaultFloor
	a (Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;IIII)Z chunkIntersects
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;IIIIII)V generateWaterBox
	c (III)I getRoomIndex
dtr$s net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentSimpleRoom
	a mainDesign
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
dtr$t net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentSimpleTopRoom
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
dtr$u net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentWingRoom
	a mainDesign
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
dtr$v net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition
	a index
	b connections
	c hasOpening
	d claimed
	e isSource
	f scanIndex
	a ()V updateOpenings
	a (I)Z findSource
	a (Lnet/minecraft/core/EnumDirection;Ldtr$v;)V setConnection
	b ()Z isSpecial
	c ()I countOpenings
dtt$a net/minecraft/world/level/levelgen/structure/structures/OceanRuinPieces$OceanRuinPiece
	h biomeType
	i integrity
	j isLarge
	a (Ljava/lang/String;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)V handleDataMarker
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)I getHeight
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo; makeSettings
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
dtu$a net/minecraft/world/level/levelgen/structure/structures/OceanRuinStructure$Type
	a WARM
	b COLD
	c CODEC
	d name
	e $VALUES
	a ()Ljava/lang/String; getName
	b ()[Ldtu$a; $values
	c ()Ljava/lang/String; getSerializedName
dtv$a net/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece$Properties
	a CODEC
	b cold
	c mossiness
	d airPocket
	e overgrown
	f vines
	g replaceWithBlackstone
dtv$b net/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece$VerticalPlacement
	a ON_LAND_SURFACE
	b PARTLY_BURIED
	c ON_OCEAN_FLOOR
	d IN_MOUNTAIN
	e UNDERGROUND
	f IN_NETHER
	g CODEC
	h name
	i $VALUES
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Ldtv$b; byName
	b ()[Ldtv$b; $values
	c ()Ljava/lang/String; getSerializedName
dtw$a net/minecraft/world/level/levelgen/structure/structures/RuinedPortalStructure$Setup
	a CODEC
	b placement
	c airPocketProbability
	d mossiness
	e overgrown
	f vines
	g canBeCold
	h replaceWithBlackstone
	i weight
	a ()Ldtv$b; placement
	b ()F airPocketProbability
	c ()F mossiness
	d ()Z overgrown
	e ()Z vines
	f ()Z canBeCold
	g ()Z replaceWithBlackstone
	h ()F weight
dtx$a net/minecraft/world/level/levelgen/structure/structures/ShipwreckPieces$ShipwreckPiece
	h isBeached
	a (Ljava/lang/String;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)V handleDataMarker
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo; makeSettings
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
dtz$a net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$ChestCorridor
	a WIDTH
	b HEIGHT
	c DEPTH
	d hasPlacedChest
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V addChildren
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/EnumDirection;I)Ldtz$a; createPiece
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
dtz$b net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$FillerCorridor
	a steps
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/EnumDirection;)Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; findPieceBox
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
dtz$c net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$FiveCrossing
	a WIDTH
	b HEIGHT
	c DEPTH
	d leftLow
	i leftHigh
	j rightLow
	k rightHigh
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V addChildren
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/EnumDirection;I)Ldtz$c; createPiece
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
dtz$d net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$LeftTurn
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V addChildren
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/EnumDirection;I)Ldtz$d; createPiece
dtz$e net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$Library
	a WIDTH
	b HEIGHT
	c TALL_HEIGHT
	d DEPTH
	i isTall
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/EnumDirection;I)Ldtz$e; createPiece
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
dtz$f net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$PieceWeight
	a pieceClass
	b weight
	c placeCount
	d maxPlaceCount
	a ()Z isValid
	a (I)Z doPlace
dtz$g net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$PortalRoom
	a WIDTH
	b HEIGHT
	c DEPTH
	d hasPlacedSpawner
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V addChildren
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIILnet/minecraft/core/EnumDirection;I)Ldtz$g; createPiece
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
dtz$h net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$PrisonHall
	a WIDTH
	b HEIGHT
	c DEPTH
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V addChildren
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/EnumDirection;I)Ldtz$h; createPiece
dtz$i net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$RightTurn
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V addChildren
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/EnumDirection;I)Ldtz$i; createPiece
dtz$j net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$RoomCrossing
	a WIDTH
	b HEIGHT
	c DEPTH
	d type
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V addChildren
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/EnumDirection;I)Ldtz$j; createPiece
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
dtz$k net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$SmoothStoneSelector
	a (Lnet/minecraft/util/RandomSource;IIIZ)V next
dtz$l net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StairsDown
	a WIDTH
	b HEIGHT
	c DEPTH
	d isSource
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V addChildren
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/EnumDirection;I)Ldtz$l; createPiece
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
dtz$m net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StartPiece
	a previousPiece
	b portalRoomPiece
	c pendingChildren
	h ()Lnet/minecraft/core/BlockPosition; getLocatorPosition
dtz$n net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$Straight
	a WIDTH
	b HEIGHT
	c DEPTH
	d leftChild
	i rightChild
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V addChildren
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/EnumDirection;I)Ldtz$n; createPiece
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
dtz$o net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StraightStairsDown
	a WIDTH
	b HEIGHT
	c DEPTH
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V addChildren
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/EnumDirection;I)Ldtz$o; createPiece
dtz$p net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StrongholdPiece
	h entryDoor
	a (Ldtz$m;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;II)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; generateSmallDoorChildForward
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Ldtz$p$a;III)V generateSmallDoor
	a (Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)Z isOkBox
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Ldtz$m;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;II)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; generateSmallDoorChildLeft
	b (Lnet/minecraft/util/RandomSource;)Ldtz$p$a; randomSmallDoor
	c (Ldtz$m;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;II)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; generateSmallDoorChildRight
dtz$p$a net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StrongholdPiece$SmallDoorType
	a OPENING
	b WOOD_DOOR
	c GRATES
	d IRON_DOOR
	e $VALUES
	a ()[Ldtz$p$a; $values
dtz$q net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$Turn
	a WIDTH
	b HEIGHT
	c DEPTH
du$a net/minecraft/commands/arguments/AngleArgument$SingleAngle
	a angle
	b isRelative
	a (Lnet/minecraft/commands/CommandListenerWrapper;)F getAngle
dud$a net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$FirstFloorRoomCollection
	a (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; get1x1
	a (Lnet/minecraft/util/RandomSource;Z)Ljava/lang/String; get1x2SideEntrance
	b (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; get1x1Secret
	b (Lnet/minecraft/util/RandomSource;Z)Ljava/lang/String; get1x2FrontEntrance
	c (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; get1x2Secret
	d (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; get2x2
	e (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; get2x2Secret
dud$b net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$FloorRoomCollection
	a (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; get1x1
	a (Lnet/minecraft/util/RandomSource;Z)Ljava/lang/String; get1x2SideEntrance
	b (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; get1x1Secret
	b (Lnet/minecraft/util/RandomSource;Z)Ljava/lang/String; get1x2FrontEntrance
	c (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; get1x2Secret
	d (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; get2x2
	e (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; get2x2Secret
dud$c net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$MansionGrid
	a DEFAULT_SIZE
	b CLEAR
	c CORRIDOR
	d ROOM
	e START_ROOM
	f TEST_ROOM
	g BLOCKED
	h ROOM_1x1
	i ROOM_1x2
	j ROOM_2x2
	k ROOM_ORIGIN_FLAG
	l ROOM_DOOR_FLAG
	m ROOM_STAIRS_FLAG
	n ROOM_CORRIDOR_FLAG
	o ROOM_TYPE_MASK
	p ROOM_ID_MASK
	q random
	r baseGrid
	s thirdFloorGrid
	t floorRooms
	u entranceX
	v entranceY
	a ()V print
	a (Ldud$g;)Z cleanEdges
	a (Ldud$g;II)Z isHouse
	a (Ldud$g;IIII)Z isRoomId
	a (Ldud$g;IILnet/minecraft/core/EnumDirection;I)V recursiveCorridor
	a (Ldud$g;Ldud$g;)V identifyRooms
	b ()V setupThirdFloor
	b (Ldud$g;IIII)Lnet/minecraft/core/EnumDirection; get1x2RoomDirection
dud$d net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$MansionPiecePlacer
	a structureTemplateManager
	b random
	c startX
	d startY
	a (Ljava/util/List;Ldud$e;)V entrance
	a (Ljava/util/List;Ldud$e;Ldud$g;Lnet/minecraft/core/EnumDirection;IIII)V traverseOuterWalls
	a (Ljava/util/List;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Ldud$b;)V addRoom2x2Secret
	a (Ljava/util/List;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Ldud$g;Ldud$g;)V createRoof
	a (Ljava/util/List;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/core/EnumDirection;Ldud$b;)V addRoom1x1
	a (Ljava/util/List;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/core/EnumDirection;Ldud$b;)V addRoom2x2
	a (Ljava/util/List;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/core/EnumDirection;Ldud$b;Z)V addRoom1x2
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Ljava/util/List;Ldud$c;)V createMansion
	b (Ljava/util/List;Ldud$e;)V traverseWallPiece
	c (Ljava/util/List;Ldud$e;)V traverseTurn
	d (Ljava/util/List;Ldud$e;)V traverseInnerTurn
dud$e net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$PlacementData
	a rotation
	b position
	c wallType
dud$f net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$SecondFloorRoomCollection
	a (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; get1x1
	a (Lnet/minecraft/util/RandomSource;Z)Ljava/lang/String; get1x2SideEntrance
	b (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; get1x1Secret
	b (Lnet/minecraft/util/RandomSource;Z)Ljava/lang/String; get1x2FrontEntrance
	c (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; get1x2Secret
	d (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; get2x2
	e (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; get2x2Secret
dud$g net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$SimpleGrid
	a grid
	b width
	c height
	d valueIfOutside
	a (II)I get
	a (III)V set
	a (IIII)V setif
	a (IIIII)V set
	b (III)Z edgesTo
dud$h net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$ThirdFloorRoomCollection
dud$i net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$WoodlandMansionPiece
	a (Ljava/lang/String;)Lnet/minecraft/resources/MinecraftKey; makeLocation
	a (Ljava/lang/String;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)V handleDataMarker
	a (Lnet/minecraft/world/level/block/EnumBlockMirror;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo; makeSettings
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b ()Lnet/minecraft/resources/MinecraftKey; makeTemplateLocation
dv$a net/minecraft/commands/arguments/ArgumentSignatures$Entry
	a name
	b signature
	a ()Ljava/lang/String; name
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	b ()Lnet/minecraft/network/chat/MessageSignature; signature
dv$b net/minecraft/commands/arguments/ArgumentSignatures$Signer
dvh$a net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$Palette
	a blocks
	b cache
	a ()Ljava/util/List; blocks
	a (Lnet/minecraft/world/level/block/Block;)Ljava/util/List; blocks
dvh$b net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$SimplePalette
	a DEFAULT_BLOCK_STATE
	b ids
	c lastId
	a (I)Lnet/minecraft/world/level/block/state/IBlockData; stateFor
	a (Lnet/minecraft/world/level/block/state/IBlockData;)I idFor
	a (Lnet/minecraft/world/level/block/state/IBlockData;I)V addMapping
dvi$a net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager$InputStreamOpener
dvi$b net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager$Source
	a loader
	b lister
	a ()Ljava/util/function/Function; loader
	b ()Ljava/util/function/Supplier; lister
dvo$a net/minecraft/world/level/levelgen/synth/NormalNoise$NoiseParameters
	a DIRECT_CODEC
	b CODEC
	c firstOctave
	d amplitudes
	a ()I firstOctave
	b ()Lit/unimi/dsi/fastutil/doubles/DoubleList; amplitudes
dvu$a net/minecraft/world/level/lighting/BlockLightSectionStorage$BlockDataLayerStorageMap
	a ()Ldvu$a; copy
	b ()Lnet/minecraft/world/level/lighting/LightEngineStorageArray; copy
dwd$a net/minecraft/world/level/lighting/SkyLightSectionStorage$SkyDataLayerStorageMap
	b currentLowestY
	c topSections
	a ()Ldwd$a; copy
	b ()Lnet/minecraft/world/level/lighting/LightEngineStorageArray; copy
dwe net/minecraft/world/level/lighting/SpatialLongSet
	a map
dwe$a net/minecraft/world/level/lighting/SpatialLongSet$InternalMap
	a X_BITS
	b Z_BITS
	c Y_BITS
	d Y_OFFSET
	e Z_OFFSET
	g X_OFFSET
	h OUTER_MASK
	i lastPos
	j lastOuterKey
	k minSize
	a ()J removeFirstBit
	a (IJ)Z replaceBit
	a (J)J getOuterKey
	a (JI)J getFullKey
	b (IJ)Z removeFromEntry
	b (J)I getInnerKey
	c (J)Z addBit
	d (J)Z removeBit
	e (J)Z removeFromNullEntry
dwl net/minecraft/world/level/material/FogType
	a LAVA
	b WATER
	c POWDER_SNOW
	d NONE
	e $VALUES
	a ()[Ldwl; $values
dwm$a net/minecraft/world/level/material/LavaFluid$Flowing
	a (Ldbr$a;)V createFluidStateDefinition
	c (Lnet/minecraft/world/level/material/Fluid;)Z isSource
	d (Lnet/minecraft/world/level/material/Fluid;)I getAmount
dwm$b net/minecraft/world/level/material/LavaFluid$Source
	c (Lnet/minecraft/world/level/material/Fluid;)Z isSource
	d (Lnet/minecraft/world/level/material/Fluid;)I getAmount
dwn$a net/minecraft/world/level/material/Material$Builder
	a pushReaction
	b blocksMotion
	c flammable
	d liquid
	e replaceable
	f solid
	g color
	h solidBlocking
	a ()Ldwn$a; liquid
	b ()Ldwn$a; nonSolid
	c ()Ldwn$a; noCollider
	d ()Ldwn$a; flammable
	e ()Ldwn$a; replaceable
	f ()Ldwn$a; destroyOnPush
	g ()Ldwn$a; notPushable
	h ()Lnet/minecraft/world/level/material/Material; build
	i ()Ldwn$a; notSolidBlocking
dwo$a net/minecraft/world/level/material/MaterialColor$Brightness
	a LOW
	b NORMAL
	c HIGH
	d LOWEST
	e id
	f modifier
	g VALUES
	h $VALUES
	a ()[Ldwo$a; $values
	a (I)Ldwo$a; byId
	b (I)Ldwo$a; byIdUnsafe
dwq$a net/minecraft/world/level/material/WaterFluid$Flowing
	a (Ldbr$a;)V createFluidStateDefinition
	c (Lnet/minecraft/world/level/material/Fluid;)Z isSource
	d (Lnet/minecraft/world/level/material/Fluid;)I getAmount
dwq$b net/minecraft/world/level/material/WaterFluid$Source
	c (Lnet/minecraft/world/level/material/Fluid;)Z isSource
	d (Lnet/minecraft/world/level/material/Fluid;)I getAmount
dxk$a net/minecraft/world/level/redstone/CollectingNeighborUpdater$FullNeighborUpdate
	a state
	b pos
	c block
	d neighborPos
	e movedByPiston
	a ()Lnet/minecraft/world/level/block/state/IBlockData; state
	a (Lnet/minecraft/world/level/World;)Z runNext
	b ()Lnet/minecraft/core/BlockPosition; pos
	c ()Lnet/minecraft/world/level/block/Block; block
	d ()Lnet/minecraft/core/BlockPosition; neighborPos
	e ()Z movedByPiston
dxk$b net/minecraft/world/level/redstone/CollectingNeighborUpdater$MultiNeighborUpdate
	a sourcePos
	b sourceBlock
	c skipDirection
	d idx
	a (Lnet/minecraft/world/level/World;)Z runNext
dxk$c net/minecraft/world/level/redstone/CollectingNeighborUpdater$NeighborUpdates
	a (Lnet/minecraft/world/level/World;)Z runNext
dxk$d net/minecraft/world/level/redstone/CollectingNeighborUpdater$ShapeUpdate
	a direction
	b state
	c pos
	d neighborPos
	e updateFlags
	a ()Lnet/minecraft/core/EnumDirection; direction
	a (Lnet/minecraft/world/level/World;)Z runNext
	b ()Lnet/minecraft/world/level/block/state/IBlockData; state
	c ()Lnet/minecraft/core/BlockPosition; pos
	d ()Lnet/minecraft/core/BlockPosition; neighborPos
	e ()I updateFlags
dxk$e net/minecraft/world/level/redstone/CollectingNeighborUpdater$SimpleNeighborUpdate
	a pos
	b block
	c neighborPos
	a ()Lnet/minecraft/core/BlockPosition; pos
	a (Lnet/minecraft/world/level/World;)Z runNext
	b ()Lnet/minecraft/world/level/block/Block; block
	c ()Lnet/minecraft/core/BlockPosition; neighborPos
dxl net/minecraft/world/level/redstone/InstantNeighborUpdater
	b level
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;)V neighborChanged
	a (Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;II)V shapeUpdate
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;Z)V neighborChanged
dxn net/minecraft/world/level/redstone/Redstone
	a SIGNAL_MIN
	b SIGNAL_MAX
	c SIGNAL_NONE
dxu$b net/minecraft/world/level/saveddata/maps/MapItemSavedData$MapPatch
	a startX
	b startY
	c width
	d height
	e mapColors
	a (Lnet/minecraft/world/level/saveddata/maps/WorldMap;)V applyToMap
dxx$a net/minecraft/world/level/storage/CommandStorage$Container
	a TAG_CONTENTS
	b storage
	a (Ljava/lang/String;)Lnet/minecraft/nbt/NBTTagCompound; get
	a (Ljava/lang/String;Lnet/minecraft/nbt/NBTTagCompound;)V put
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; save
	b (Ljava/lang/String;)Ljava/util/stream/Stream; getKeys
	b (Lnet/minecraft/nbt/NBTTagCompound;)Ldxx$a; load
dye$a net/minecraft/world/level/storage/LevelStorageSource$LevelCandidates
	a levels
	a ()Z isEmpty
	b ()Ljava/util/List; levels
dye$b net/minecraft/world/level/storage/LevelStorageSource$LevelDirectory
	a path
	a ()Ljava/lang/String; directoryName
	a (Ljava/time/LocalDateTime;)Ljava/nio/file/Path; corruptedDataFile
	a (Lnet/minecraft/world/level/storage/SavedFile;)Ljava/nio/file/Path; resourcePath
	b ()Ljava/nio/file/Path; dataFile
	c ()Ljava/nio/file/Path; oldDataFile
	d ()Ljava/nio/file/Path; iconFile
	e ()Ljava/nio/file/Path; lockFile
	f ()Ljava/nio/file/Path; path
dyf$a net/minecraft/world/level/storage/LevelSummary$BackupStatus
	a NONE
	b DOWNGRADE
	c UPGRADE_TO_SNAPSHOT
	d shouldBackup
	e severe
	f translationKey
	g $VALUES
	a ()Z shouldBackup
	b ()Z isSevere
	c ()Ljava/lang/String; getTranslationKey
	d ()[Ldyf$a; $values
dyi$a net/minecraft/world/level/storage/PrimaryLevelData$SpecialWorldProperty
	a NONE
	b FLAT
	c DEBUG
	d $VALUES
	a ()[Ldyi$a; $values
dyo$a net/minecraft/world/level/storage/loot/GsonAdapterFactory$Builder
	a registry
	b elementName
	c typeKey
	d typeGetter
	e inlineType
	f defaultType
	a ()Ljava/lang/Object; build
	a (Lnet/minecraft/world/level/storage/loot/LootSerializerType;)Ldyo$a; withDefaultType
	a (Lnet/minecraft/world/level/storage/loot/LootSerializerType;Ldyo$b;)Ldyo$a; withInlineSerializer
dyo$b net/minecraft/world/level/storage/loot/GsonAdapterFactory$InlineSerializer
	a (Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
dyo$c net/minecraft/world/level/storage/loot/GsonAdapterFactory$JsonAdapter
	a registry
	b elementName
	c typeKey
	d typeGetter
	e defaultType
	f inlineType
dyp$a net/minecraft/world/level/storage/loot/IntRange$IntChecker
dyp$b net/minecraft/world/level/storage/loot/IntRange$IntLimiter
dyp$c net/minecraft/world/level/storage/loot/IntRange$Serializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/IntRange; deserialize
	a (Lnet/minecraft/world/level/storage/loot/IntRange;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
dyq$a net/minecraft/world/level/storage/loot/ItemModifierManager$FunctionSequence
	a functions
	b compositeFunction
	a ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; getType
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/world/item/ItemStack; apply
dyr$b net/minecraft/world/level/storage/loot/LootContext$DynamicDrop
dyr$c$a net/minecraft/world/level/storage/loot/LootContext$EntityTarget$Serializer
	a (Lcom/google/gson/stream/JsonReader;)Lnet/minecraft/world/level/storage/loot/LootTableInfo$EntityTarget; read
	a (Lcom/google/gson/stream/JsonWriter;Lnet/minecraft/world/level/storage/loot/LootTableInfo$EntityTarget;)V write
dyt$a net/minecraft/world/level/storage/loot/LootPool$Builder
	a entries
	b conditions
	c functions
	d rolls
	e bonusRolls
	a ()Ldyt$a; unwrap
	a (Ldzj$a;)Ldyt$a; add
	a (Leac$a;)Ldyt$a; apply
	a (Lebl$a;)Ldyt$a; when
	a (Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Ldyt$a; setRolls
	b ()Lnet/minecraft/world/level/storage/loot/LootSelector; build
	b (Leac$a;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionUser; apply
	b (Lebl$a;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionUser; when
	b (Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Ldyt$a; setBonusRolls
	c ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionUser; unwrap
	d ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionUser; unwrap
dyt$b net/minecraft/world/level/storage/loot/LootPool$Serializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/LootSelector; deserialize
	a (Lnet/minecraft/world/level/storage/loot/LootSelector;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
dyu$a net/minecraft/world/level/storage/loot/LootTable$Builder
	a pools
	b functions
	c paramSet
	a ()Ldyu$a; unwrap
	a (Ldyt$a;)Ldyu$a; withPool
	a (Leac$a;)Ldyu$a; apply
	a (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParameterSet;)Ldyu$a; setParamSet
	b ()Lnet/minecraft/world/level/storage/loot/LootTable; build
	b (Leac$a;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionUser; apply
	c ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionUser; unwrap
dyu$b net/minecraft/world/level/storage/loot/LootTable$Serializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/LootTable; deserialize
	a (Lnet/minecraft/world/level/storage/loot/LootTable;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
dyw$a net/minecraft/world/level/storage/loot/PredicateManager$CompositePredicate
	a terms
	b composedPredicate
	a ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; getType
	a (Lnet/minecraft/world/level/storage/loot/LootCollector;)V validate
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Z test
dza$a net/minecraft/world/level/storage/loot/entries/AlternativesEntry$Builder
	a entries
	a ()Ldza$a; getThis
	a (Ldzj$a;)Ldza$a; otherwise
	av_ ()Ldzj$a; getThis
	b ()Lnet/minecraft/world/level/storage/loot/entries/LootEntryAbstract; build
dzc$a net/minecraft/world/level/storage/loot/entries/CompositeEntryBase$CompositeEntryConstructor
dzd$a net/minecraft/world/level/storage/loot/entries/DynamicLoot$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/LootSelectorDynamic; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootEntryAbstract;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootSelectorDynamic;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootSelectorEntry;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/LootSelectorEntry; deserialize
dze$a net/minecraft/world/level/storage/loot/entries/EmptyLootItem$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/LootSelectorEmpty; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/LootSelectorEntry; deserialize
dzf$a net/minecraft/world/level/storage/loot/entries/EntryGroup$Builder
	a entries
	a ()Ldzf$a; getThis
	av_ ()Ldzj$a; getThis
	b ()Lnet/minecraft/world/level/storage/loot/entries/LootEntryAbstract; build
	b (Ldzj$a;)Ldzf$a; append
dzg$a net/minecraft/world/level/storage/loot/entries/LootItem$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/LootItem; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootEntryAbstract;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootItem;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootSelectorEntry;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/LootSelectorEntry; deserialize
dzj$a net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder
	a conditions
	a (Ldzj$a;)Ldza$a; otherwise
	a (Lebl$a;)Ldzj$a; when
	av_ ()Ldzj$a; getThis
	b ()Lnet/minecraft/world/level/storage/loot/entries/LootEntryAbstract; build
	b (Ldzj$a;)Ldzf$a; append
	b (Lebl$a;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionUser; when
	c (Ldzj$a;)Ldzn$a; then
	d ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionUser; unwrap
	e ()Ldzj$a; unwrap
	f ()[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition; getConditions
dzl$a net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder
	a weight
	b quality
	c functions
	a ()[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; getFunctions
	a (I)Ldzl$a; setWeight
	a (Leac$a;)Ldzl$a; apply
	b (I)Ldzl$a; setQuality
	b (Leac$a;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionUser; apply
	c ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionUser; unwrap
dzl$b net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$DummyBuilder
	c constructor
	av_ ()Ldzj$a; getThis
	b ()Lnet/minecraft/world/level/storage/loot/entries/LootEntryAbstract; build
	g ()Ldzl$b; getThis
dzl$c net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$EntryBase
	a (F)I getWeight
dzl$d net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$EntryConstructor
dzl$e net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/entries/LootSelectorEntry; deserializeCustom
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootEntryAbstract;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootSelectorEntry;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/LootSelectorEntry; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/entries/LootEntryAbstract; deserializeCustom
dzm$a net/minecraft/world/level/storage/loot/entries/LootTableReference$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/LootSelectorLootTable; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootEntryAbstract;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootSelectorEntry;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootSelectorLootTable;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/LootSelectorEntry; deserialize
dzn$a net/minecraft/world/level/storage/loot/entries/SequentialEntry$Builder
	a entries
	a ()Ldzn$a; getThis
	av_ ()Ldzj$a; getThis
	b ()Lnet/minecraft/world/level/storage/loot/entries/LootEntryAbstract; build
	c (Ldzj$a;)Ldzn$a; then
dzo$a net/minecraft/world/level/storage/loot/entries/TagEntry$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/LootSelectorTag; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootEntryAbstract;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootSelectorEntry;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootSelectorTag;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/LootSelectorEntry; deserialize
dzq$a net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$BinomialWithBonusCount
	a TYPE
	b extraRounds
	c probability
	a ()Lnet/minecraft/resources/MinecraftKey; getType
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldzq$b; deserialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V serializeParams
	a (Lnet/minecraft/util/RandomSource;II)I calculateNewCount
dzq$b net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$Formula
	a ()Lnet/minecraft/resources/MinecraftKey; getType
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V serializeParams
	a (Lnet/minecraft/util/RandomSource;II)I calculateNewCount
dzq$c net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$FormulaDeserializer
dzq$d net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$OreDrops
	a TYPE
	a ()Lnet/minecraft/resources/MinecraftKey; getType
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldzq$b; deserialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V serializeParams
	a (Lnet/minecraft/util/RandomSource;II)I calculateNewCount
dzq$e net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionApplyBonus; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionApplyBonus;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionConditional; deserialize
dzq$f net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$UniformBonusCount
	a TYPE
	b bonusMultiplier
	a ()Lnet/minecraft/resources/MinecraftKey; getType
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ldzq$b; deserialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V serializeParams
	a (Lnet/minecraft/util/RandomSource;II)I calculateNewCount
dzr$a net/minecraft/world/level/storage/loot/functions/ApplyExplosionDecay$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionExplosionDecay; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionConditional; deserialize
dzs$a net/minecraft/world/level/storage/loot/functions/CopyBlockState$Builder
	a block
	b properties
	a ()Ldzs$a; getThis
	a (Lnet/minecraft/world/level/block/state/properties/IBlockState;)Ldzs$a; copy
	b ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; build
	c ()Leab$a; getThis
dzs$b net/minecraft/world/level/storage/loot/functions/CopyBlockState$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionCopyState; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionCopyState;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionConditional; deserialize
dzt$b net/minecraft/world/level/storage/loot/functions/CopyNameFunction$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionCopyName; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionCopyName;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionConditional; deserialize
dzu$a net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Builder
	a source
	b ops
	a ()Ldzu$a; getThis
	a (Ljava/lang/String;Ljava/lang/String;)Ldzu$a; copy
	a (Ljava/lang/String;Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionCopyNBT$Action;)Ldzu$a; copy
	b ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; build
	c ()Leab$a; getThis
dzu$b net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$CopyOperation
	a sourcePathText
	b sourcePath
	c targetPathText
	d targetPath
	e op
	a ()Lcom/google/gson/JsonObject; toJson
	a (Lcom/google/gson/JsonObject;)Ldzu$b; fromJson
	a (Ljava/util/function/Supplier;Lnet/minecraft/nbt/NBTBase;)V apply
dzu$d net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionCopyNBT; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionCopyNBT;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionConditional; deserialize
dzv$a net/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction$Builder
	a enchantments
	a ()Ldzv$a; getThis
	a (Lnet/minecraft/world/item/enchantment/Enchantment;)Ldzv$a; withEnchantment
	b ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; build
	c ()Leab$a; getThis
dzv$b net/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionEnchant; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionEnchant;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionConditional; deserialize
dzw$a net/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction$Builder
	a levels
	b treasure
	a ()Ldzw$a; getThis
	b ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; build
	c ()Leab$a; getThis
	e ()Ldzw$a; allowTreasure
dzw$b net/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootEnchantLevel; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootEnchantLevel;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionConditional; deserialize
dzx$a net/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder
	a destination
	b mapDecoration
	c zoom
	d searchRadius
	e skipKnownStructures
	a ()Ldzx$a; getThis
	a (B)Ldzx$a; setZoom
	a (I)Ldzx$a; setSearchRadius
	a (Lnet/minecraft/tags/TagKey;)Ldzx$a; setDestination
	a (Lnet/minecraft/world/level/saveddata/maps/MapIcon$Type;)Ldzx$a; setMapDecoration
	a (Z)Ldzx$a; setSkipKnownStructures
	b ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; build
	c ()Leab$a; getThis
dzx$b net/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Serializer
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/tags/TagKey; readStructure
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionExplorationMap; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionExplorationMap;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionConditional; deserialize
dzy$a net/minecraft/world/level/storage/loot/functions/FillPlayerHead$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionFillPlayerHead; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionFillPlayerHead;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionConditional; deserialize
eaa$a net/minecraft/world/level/storage/loot/functions/LimitCount$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionLimitCount; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionLimitCount;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionConditional; deserialize
eab$a net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder
	a conditions
	a (Lebl$a;)Leab$a; when
	b (Lebl$a;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionUser; when
	c ()Leab$a; getThis
	d ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionUser; unwrap
	f ()Leab$a; unwrap
	g ()[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition; getConditions
eab$b net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$DummyBuilder
	a constructor
	a ()Leab$b; getThis
	b ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; build
	c ()Leab$a; getThis
eab$c net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionConditional; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionConditional; deserialize
eac$a net/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder
	b ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; build
eaf$a net/minecraft/world/level/storage/loot/functions/LootingEnchantFunction$Builder
	a count
	b limit
	a ()Leaf$a; getThis
	a (I)Leaf$a; setLimit
	b ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; build
	c ()Leab$a; getThis
eaf$b net/minecraft/world/level/storage/loot/functions/LootingEnchantFunction$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootEnchantFunction; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootEnchantFunction;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionConditional; deserialize
eag$a net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Builder
	a modifiers
	a ()Leag$a; getThis
	a (Leag$c;)Leag$a; withModifier
	b ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; build
	c ()Leab$a; getThis
eag$b net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Modifier
	a name
	b attribute
	c operation
	d amount
	e id
	f slots
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Leag$b; deserialize
	a (Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonObject; serialize
	a (Ljava/lang/String;)Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation; operationFromString
	a (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation;)Ljava/lang/String; operationToString
eag$c net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$ModifierBuilder
	a name
	b attribute
	c operation
	d amount
	e id
	f slots
	a ()Leag$b; build
	a (Ljava/util/UUID;)Leag$c; withUuid
	a (Lnet/minecraft/world/entity/EnumItemSlot;)Leag$c; forSlot
eag$d net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionSetAttribute; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionSetAttribute;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionConditional; deserialize
eah$a net/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction$Builder
	a patterns
	b append
	a ()Leah$a; getThis
	a (Lnet/minecraft/core/Holder;Lnet/minecraft/world/item/EnumColor;)Leah$a; addPattern
	a (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/item/EnumColor;)Leah$a; addPattern
	b ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; build
	c ()Leab$a; getThis
eah$b net/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionConditional; deserialize
eai$a net/minecraft/world/level/storage/loot/functions/SetContainerContents$Builder
	a entries
	b type
	a ()Leai$a; getThis
	a (Ldzj$a;)Leai$a; withEntry
	b ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; build
	c ()Leab$a; getThis
eai$b net/minecraft/world/level/storage/loot/functions/SetContainerContents$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionSetContents; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionSetContents;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionConditional; deserialize
eaj$a net/minecraft/world/level/storage/loot/functions/SetContainerLootTable$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionSetTable; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionSetTable;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionConditional; deserialize
eak$a net/minecraft/world/level/storage/loot/functions/SetEnchantmentsFunction$Builder
	a enchantments
	b add
	a ()Leak$a; getThis
	a (Lnet/minecraft/world/item/enchantment/Enchantment;Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Leak$a; withEnchantment
	b ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; build
	c ()Leab$a; getThis
eak$b net/minecraft/world/level/storage/loot/functions/SetEnchantmentsFunction$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetEnchantmentsFunction; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetEnchantmentsFunction;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionConditional; deserialize
eal$a net/minecraft/world/level/storage/loot/functions/SetInstrumentFunction$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetInstrumentFunction; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetInstrumentFunction;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionConditional; deserialize
eam$a net/minecraft/world/level/storage/loot/functions/SetItemCountFunction$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionSetCount; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionSetCount;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionConditional; deserialize
ean$a net/minecraft/world/level/storage/loot/functions/SetItemDamageFunction$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionSetDamage; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionSetDamage;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionConditional; deserialize
eao$a net/minecraft/world/level/storage/loot/functions/SetLoreFunction$Builder
	a replace
	b resolutionContext
	c lore
	a ()Leao$a; getThis
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)Leao$a; addLine
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo$EntityTarget;)Leao$a; setResolutionContext
	a (Z)Leao$a; setReplace
	b ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; build
	c ()Leab$a; getThis
eao$b net/minecraft/world/level/storage/loot/functions/SetLoreFunction$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionSetLore; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionSetLore;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionConditional; deserialize
eap$a net/minecraft/world/level/storage/loot/functions/SetNameFunction$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionSetName; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionSetName;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionConditional; deserialize
eaq$a net/minecraft/world/level/storage/loot/functions/SetNbtFunction$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionSetTag; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionSetTag;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionConditional; deserialize
ear$a net/minecraft/world/level/storage/loot/functions/SetPotionFunction$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetPotionFunction; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetPotionFunction;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionConditional; deserialize
eas$a net/minecraft/world/level/storage/loot/functions/SetStewEffectFunction$Builder
	a effectDurationMap
	a ()Leas$a; getThis
	a (Lnet/minecraft/world/effect/MobEffectList;Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Leas$a; withEffect
	b ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; build
	c ()Leab$a; getThis
eas$b net/minecraft/world/level/storage/loot/functions/SetStewEffectFunction$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionSetStewEffect; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionSetStewEffect;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionConditional; deserialize
eat$a net/minecraft/world/level/storage/loot/functions/SmeltItemFunction$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionSmelt; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionConditional; deserialize
ebb$a net/minecraft/world/level/storage/loot/predicates/AlternativeLootItemCondition$Builder
	a terms
ebb$b net/minecraft/world/level/storage/loot/predicates/AlternativeLootItemCondition$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionAlternative;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionAlternative; deserialize
ebc$a net/minecraft/world/level/storage/loot/predicates/BonusLevelTableCondition$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionTableBonus;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionTableBonus; deserialize
ebd$a net/minecraft/world/level/storage/loot/predicates/ConditionReference$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionReference;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionReference; deserialize
ebf$a net/minecraft/world/level/storage/loot/predicates/DamageSourceCondition$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionDamageSourceProperties;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionDamageSourceProperties; deserialize
ebg$a net/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition$Builder
	a scores
	b entityTarget
	a (Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/IntRange;)Lebg$a; withScore
ebg$b net/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionEntityScore;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionEntityScore; deserialize
ebh$a net/minecraft/world/level/storage/loot/predicates/ExplosionCondition$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionSurvivesExplosion;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionSurvivesExplosion; deserialize
ebi$a net/minecraft/world/level/storage/loot/predicates/InvertedLootItemCondition$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionInverted;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionInverted; deserialize
ebj$a net/minecraft/world/level/storage/loot/predicates/LocationCheck$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionLocationCheck;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionLocationCheck; deserialize
ebk$a net/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition$Builder
	a block
	b properties
	a (Lcy$a;)Lebk$a; setProperties
ebk$b net/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionBlockStateProperty;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionBlockStateProperty; deserialize
ebl$a net/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder
ebo$a net/minecraft/world/level/storage/loot/predicates/LootItemEntityPropertyCondition$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionEntityProperty;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionEntityProperty; deserialize
ebp$a net/minecraft/world/level/storage/loot/predicates/LootItemKilledByPlayerCondition$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionKilledByPlayer;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionKilledByPlayer; deserialize
ebq$a net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceCondition$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionRandomChance;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionRandomChance; deserialize
ebr$a net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceWithLootingCondition$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionRandomChanceWithLooting;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionRandomChanceWithLooting; deserialize
ebs$a net/minecraft/world/level/storage/loot/predicates/MatchTool$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionMatchTool;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionMatchTool; deserialize
ebt$a net/minecraft/world/level/storage/loot/predicates/TimeCheck$Builder
	a period
	b value
	a ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionTimeCheck; build
	a (J)Lebt$a; setPeriod
ebt$b net/minecraft/world/level/storage/loot/predicates/TimeCheck$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionTimeCheck;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionTimeCheck; deserialize
ebu$a net/minecraft/world/level/storage/loot/predicates/ValueCheckCondition$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/ValueCheckCondition;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/ValueCheckCondition; deserialize
ebv$a net/minecraft/world/level/storage/loot/predicates/WeatherCheck$Builder
	a isRaining
	b isThundering
	a ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionWeatherCheck; build
	a (Ljava/lang/Boolean;)Lebv$a; setRaining
	b (Ljava/lang/Boolean;)Lebv$a; setThundering
ebv$b net/minecraft/world/level/storage/loot/predicates/WeatherCheck$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionWeatherCheck;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionWeatherCheck; deserialize
ebx$a net/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider$Getter
	a ()Ljava/lang/String; getId
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/nbt/NBTBase; get
	b ()Ljava/util/Set; getReferencedContextParams
ebx$b net/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider$InlineSerializer
	a (Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
	a (Lnet/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
	b (Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider; deserialize
ebx$c net/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider; deserialize
ecb$a net/minecraft/world/level/storage/loot/providers/nbt/StorageNbtProvider$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/providers/nbt/StorageNbtProvider;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/providers/nbt/StorageNbtProvider; deserialize
ecd$a net/minecraft/world/level/storage/loot/providers/number/BinomialDistributionGenerator$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/providers/number/BinomialDistributionGenerator;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/providers/number/BinomialDistributionGenerator; deserialize
ece$a net/minecraft/world/level/storage/loot/providers/number/ConstantValue$InlineSerializer
	a (Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
	a (Lnet/minecraft/world/level/storage/loot/providers/number/ConstantValue;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
	b (Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/providers/number/ConstantValue; deserialize
ece$b net/minecraft/world/level/storage/loot/providers/number/ConstantValue$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/providers/number/ConstantValue;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/providers/number/ConstantValue; deserialize
eci$a net/minecraft/world/level/storage/loot/providers/number/ScoreboardValue$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/providers/number/ScoreboardValue;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/providers/number/ScoreboardValue; deserialize
ecj$a net/minecraft/world/level/storage/loot/providers/number/UniformGenerator$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/providers/number/UniformGenerator;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/providers/number/UniformGenerator; deserialize
ecl$a net/minecraft/world/level/storage/loot/providers/score/ContextScoreboardNameProvider$InlineSerializer
	a (Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
	a (Lnet/minecraft/world/level/storage/loot/providers/score/ContextScoreboardNameProvider;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
	b (Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/providers/score/ContextScoreboardNameProvider; deserialize
ecl$b net/minecraft/world/level/storage/loot/providers/score/ContextScoreboardNameProvider$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/providers/score/ContextScoreboardNameProvider;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/providers/score/ContextScoreboardNameProvider; deserialize
ecm$a net/minecraft/world/level/storage/loot/providers/score/FixedScoreboardNameProvider$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/providers/score/FixedScoreboardNameProvider;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/providers/score/FixedScoreboardNameProvider; deserialize
ecs$a net/minecraft/world/level/timers/FunctionCallback$Serializer
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/level/timers/CustomFunctionCallback; deserialize
	a (Lnet/minecraft/nbt/NBTTagCompound;Lnet/minecraft/world/level/timers/CustomFunctionCallback;)V serialize
	a (Lnet/minecraft/nbt/NBTTagCompound;Lnet/minecraft/world/level/timers/CustomFunctionCallbackTimer;)V serialize
	b (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/level/timers/CustomFunctionCallbackTimer; deserialize
ect$a net/minecraft/world/level/timers/FunctionTagCallback$Serializer
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/level/timers/CustomFunctionCallbackTag; deserialize
	a (Lnet/minecraft/nbt/NBTTagCompound;Lnet/minecraft/world/level/timers/CustomFunctionCallbackTag;)V serialize
	a (Lnet/minecraft/nbt/NBTTagCompound;Lnet/minecraft/world/level/timers/CustomFunctionCallbackTimer;)V serialize
	b (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/level/timers/CustomFunctionCallbackTimer; deserialize
ecu$a net/minecraft/world/level/timers/TimerCallback$Serializer
	a id
	b cls
	a ()Lnet/minecraft/resources/MinecraftKey; getId
	a (Lnet/minecraft/nbt/NBTTagCompound;Lnet/minecraft/world/level/timers/CustomFunctionCallbackTimer;)V serialize
	b ()Ljava/lang/Class; getCls
	b (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/level/timers/CustomFunctionCallbackTimer; deserialize
ecw$a net/minecraft/world/level/timers/TimerQueue$Event
	a triggerTime
	b sequentialId
	c id
	d callback
ed$a net/minecraft/commands/arguments/GameProfileArgument$Result
ed$b net/minecraft/commands/arguments/GameProfileArgument$SelectorResult
	a selector
edn$a net/minecraft/world/phys/shapes/DiscreteVoxelShape$IntFaceConsumer
edn$b net/minecraft/world/phys/shapes/DiscreteVoxelShape$IntLineConsumer
edq$a net/minecraft/world/phys/shapes/IndexMerger$IndexConsumer
edu$a net/minecraft/world/phys/shapes/Shapes$DoubleLineConsumer
eem$a net/minecraft/world/ticks/LevelTicks$PosAndContainerConsumer
eew com/mojang/blaze3d/Blaze3D
	a ()V youJustLostTheGame
	a (Lefq;F)V process
	b ()D getTime
	b (Lefq;F)V render
eex com/mojang/blaze3d/DontObfuscate
eey com/mojang/blaze3d/FieldsAreNonnullByDefault
eez com/mojang/blaze3d/MethodsReturnNonnullByDefault
ef$a net/minecraft/commands/arguments/MessageArgument$Message
	a text
	b parts
	a ()Ljava/lang/String; getText
	a (Lcom/mojang/brigadier/StringReader;Z)Lef$a; parseText
	a (Lnet/minecraft/commands/CommandListenerWrapper;)Lnet/minecraft/network/chat/IChatBaseComponent; resolveComponent
	a (Lnet/minecraft/commands/CommandListenerWrapper;Z)Lnet/minecraft/network/chat/IChatBaseComponent; toComponent
	b ()[Lef$b; getParts
ef$b net/minecraft/commands/arguments/MessageArgument$Part
	a start
	b end
	c selector
	a ()I getStart
	a (Lnet/minecraft/commands/CommandListenerWrapper;)Lnet/minecraft/network/chat/IChatBaseComponent; toComponent
	b ()I getEnd
	c ()Lnet/minecraft/commands/arguments/selector/EntitySelector; getSelector
efa com/mojang/blaze3d/audio/Channel
	a BUFFER_DURATION_SECONDS
	b LOGGER
	c QUEUED_BUFFER_COUNT
	d source
	e initialized
	f streamingBufferSize
	g stream
	a ()Lefa; create
	a (F)V setPitch
	a (I)V pumpBuffers
	a (Leff;)V attachStaticBuffer
	a (Lfxb;)V attachBufferStream
	a (Ljavax/sound/sampled/AudioFormat;I)I calculateBufferSize
	a (Lnet/minecraft/world/phys/Vec3D;)V setSelfPosition
	a (Z)V setLooping
	b ()V destroy
	b (F)V setVolume
	b (Z)V setRelative
	c ()V play
	c (F)V linearAttenuation
	d ()V pause
	e ()V unpause
	f ()V stop
	g ()Z playing
	h ()Z stopped
	i ()V disableAttenuation
	j ()V updateStream
	k ()I getState
	l ()I removeProcessedBuffers
efb com/mojang/blaze3d/audio/Library
	a LOGGER
	b NO_DEVICE
	c DEFAULT_CHANNEL_COUNT
	d currentDevice
	e context
	f supportsDisconnections
	g defaultDeviceName
	h EMPTY
	i staticChannels
	j streamingChannels
	k listener
	a ()Ljava/lang/String; getDefaultDeviceName
	a (Lefa;)V releaseChannel
	a (Lefb$c;)Lefa; acquireChannel
	a (Ljava/lang/String;)J openDeviceOrFallback
	a (Ljava/lang/String;Z)V init
	a (Z)V setHrtf
	b ()Ljava/lang/String; getCurrentDeviceName
	b (Ljava/lang/String;)Ljava/util/OptionalLong; tryOpenDevice
	c ()Z hasDefaultDeviceChanged
	d ()V cleanup
	e ()Lefc; getListener
	f ()Ljava/lang/String; getDebugString
	g ()Ljava/util/List; getAvailableSoundDevices
	h ()Z isCurrentDeviceDisconnected
	i ()I getChannelCount
efb$a com/mojang/blaze3d/audio/Library$ChannelPool
	a ()Lefa; acquire
	a (Lefa;)Z release
	b ()V cleanup
	c ()I getMaxCount
	d ()I getUsedCount
efb$b com/mojang/blaze3d/audio/Library$CountingChannelPool
	a limit
	b activeChannels
	a ()Lefa; acquire
	a (Lefa;)Z release
	b ()V cleanup
	c ()I getMaxCount
	d ()I getUsedCount
efb$c com/mojang/blaze3d/audio/Library$Pool
	a STATIC
	b STREAMING
	c $VALUES
	a ()[Lefb$c; $values
efc com/mojang/blaze3d/audio/Listener
	a gain
	b position
	a ()Lnet/minecraft/world/phys/Vec3D; getListenerPosition
	a (F)V setGain
	a (Lnet/minecraft/world/phys/Vec3D;)V setListenerPosition
	a (Lorg/joml/Vector3f;Lorg/joml/Vector3f;)V setListenerOrientation
	b ()F getGain
	c ()V reset
efd com/mojang/blaze3d/audio/OggAudioStream
	a EXPECTED_MAX_FRAME_SIZE
	b handle
	c audioFormat
	d input
	e buffer
	a ()Ljavax/sound/sampled/AudioFormat; getFormat
	a (I)Ljava/nio/ByteBuffer; read
	a (Lefd$a;)Z readFrame
	a (Ljava/nio/FloatBuffer;Lefd$a;)V convertMono
	a (Ljava/nio/FloatBuffer;Ljava/nio/FloatBuffer;Lefd$a;)V convertStereo
	b ()Ljava/nio/ByteBuffer; readAll
	c ()Z refillFromStream
	d ()V forwardBuffer
efd$a com/mojang/blaze3d/audio/OggAudioStream$OutputConcat
	a buffers
	b bufferSize
	c byteCount
	d currentBuffer
	a ()Ljava/nio/ByteBuffer; get
	a (F)V put
	b ()V createNewBuffer
efe com/mojang/blaze3d/audio/OpenAlUtil
	a LOGGER
	a (I)Ljava/lang/String; alErrorToString
	a (JLjava/lang/String;)Z checkALCError
	a (Ljava/lang/String;)Z checkALError
	a (Ljavax/sound/sampled/AudioFormat;)I audioFormatToOpenAl
	b (I)Ljava/lang/String; alcErrorToString
eff com/mojang/blaze3d/audio/SoundBuffer
	a data
	b format
	c hasAlBuffer
	d alBuffer
	a ()Ljava/util/OptionalInt; getAlBuffer
	b ()V discardAlBuffer
	c ()Ljava/util/OptionalInt; releaseAlBuffer
efh com/mojang/blaze3d/font/GlyphInfo
	a ()F getBoldOffset
	a (Z)F getAdvance
	b ()F getShadowOffset
efh$a com/mojang/blaze3d/font/GlyphInfo$SpaceGlyphInfo
efi com/mojang/blaze3d/font/GlyphProvider
	a ()Lit/unimi/dsi/fastutil/ints/IntSet; getSupportedGlyphs
	a (I)Lefh; getGlyph
efj com/mojang/blaze3d/font/SheetGlyphInfo
	a ()I getPixelWidth
	a (II)V upload
	b ()I getPixelHeight
	c ()Z isColored
	d ()F getOversample
	e ()F getLeft
	f ()F getRight
	g ()F getUp
	h ()F getDown
	i ()F getBearingX
	j ()F getBearingY
efk com/mojang/blaze3d/font/SpaceProvider
	a glyphs
	a ()Lit/unimi/dsi/fastutil/ints/IntSet; getSupportedGlyphs
	a (I)Lefh; getGlyph
	a (Lcom/google/gson/JsonObject;)Leqn; builderFromJson
efl com/mojang/blaze3d/font/TrueTypeGlyphProvider
	a fontMemory
	b font
	c oversample
	d skip
	e shiftX
	f shiftY
	g pointScale
	h ascent
	a ()Lit/unimi/dsi/fastutil/ints/IntSet; getSupportedGlyphs
	a (I)Lefh; getGlyph
efl$a com/mojang/blaze3d/font/TrueTypeGlyphProvider$Glyph
	b width
	c height
	d bearingX
	e bearingY
	f advance
	g index
efo com/mojang/blaze3d/pipeline/MainTarget
	a DEFAULT_WIDTH
	b DEFAULT_HEIGHT
	l DEFAULT_DIMENSIONS
	a (Lefo$b;)Z allocateColorAttachment
	b (II)V createFrameBuffer
	b (Lefo$b;)Z allocateDepthAttachment
	c (II)Lefo$b; allocateAttachments
efo$a com/mojang/blaze3d/pipeline/MainTarget$AttachmentState
	a NONE
	b COLOR
	c DEPTH
	d COLOR_DEPTH
	e VALUES
	f $VALUES
	a ()[Lefo$a; $values
	a (Lefo$a;)Lefo$a; with
efo$b com/mojang/blaze3d/pipeline/MainTarget$Dimension
	a width
	b height
	a (II)Ljava/util/List; listWithFallback
efp com/mojang/blaze3d/pipeline/RenderCall
efq com/mojang/blaze3d/pipeline/RenderPipeline
	a renderCalls
	b isRecording
	c recordingBuffer
	d isProcessing
	e processedBuffer
	f renderingBuffer
	a ()Z canBeginRecording
	a (Lefp;)V recordRenderCall
	b ()Z beginRecording
	c ()V endRecording
	d ()Z canBeginProcessing
	e ()Z beginProcessing
	f ()V processRecordedQueue
	g ()V endProcessing
	h ()Ljava/util/concurrent/ConcurrentLinkedQueue; startRendering
	i ()Ljava/util/concurrent/ConcurrentLinkedQueue; getRecordingQueue
	j ()Ljava/util/concurrent/ConcurrentLinkedQueue; getProcessedQueue
efr com/mojang/blaze3d/pipeline/RenderTarget
	a RED_CHANNEL
	b GREEN_CHANNEL
	c width
	d height
	e viewWidth
	f viewHeight
	g useDepth
	h frameBufferId
	i colorTextureId
	j depthBufferId
	k filterMode
	l BLUE_CHANNEL
	m ALPHA_CHANNEL
	n clearChannels
	a ()V destroyBuffers
	a (FFFF)V setClearColor
	a (I)V setFilterMode
	a (II)V blitToScreen
	a (IIZ)V resize
	a (Lefr;)V copyDepthFrom
	a (Z)V bindWrite
	b ()V checkStatus
	b (IIZ)V createBuffers
	b (Z)V clear
	c ()V bindRead
	c (IIZ)V blitToScreen
	c (Z)V _bindWrite
	d ()V unbindRead
	d (IIZ)V _resize
	e ()V unbindWrite
	e (IIZ)V _blitToScreen
	f ()I getColorTextureId
	g ()I getDepthTextureId
efs com/mojang/blaze3d/pipeline/TextureTarget
efu com/mojang/blaze3d/platform/ClipboardManager
	a FORMAT_UNAVAILABLE
	b clipboardScratchBuffer
	a (JLjava/lang/String;)V setClipboard
	a (JLjava/nio/ByteBuffer;[B)V pushClipboard
	a (JLorg/lwjgl/glfw/GLFWErrorCallbackI;)Ljava/lang/String; getClipboard
efv com/mojang/blaze3d/platform/DebugMemoryUntracker
	a UNTRACK
	a (J)V untrack
	a (Lorg/lwjgl/system/Pointer;)V untrack
efw com/mojang/blaze3d/platform/DisplayData
	a width
	b height
	c fullscreenWidth
	d fullscreenHeight
	e isFullscreen
efx com/mojang/blaze3d/platform/GlDebug
	a LOGGER
	b CIRCULAR_LOG_SIZE
	c MESSAGE_BUFFER
	d lastEntry
	e DEBUG_LEVELS
	f DEBUG_LEVELS_ARB
	g debugEnabled
	a ()Ljava/util/List; getLastOpenGlDebugMessages
	a (I)Ljava/lang/String; sourceToString
	a (IIIIIJJ)V printDebugLog
	a (IZ)V enableDebugCallback
	b ()Z isDebugEnabled
	b (I)Ljava/lang/String; typeToString
	c (I)Ljava/lang/String; severityToString
	d (I)Ljava/lang/String; printUnknownToken
efx$a com/mojang/blaze3d/platform/GlDebug$LogEntry
	a id
	b source
	c type
	d severity
	e message
	f count
	a (IIIILjava/lang/String;)Z isSame
efy com/mojang/blaze3d/platform/GlUtil
	a ()Ljava/lang/String; getVendor
	a (I)Ljava/nio/ByteBuffer; allocateMemory
	a (Ljava/nio/Buffer;)V freeMemory
	b ()Ljava/lang/String; getCpuInfo
	c ()Ljava/lang/String; getRenderer
	d ()Ljava/lang/String; getOpenGLVersion
efz com/mojang/blaze3d/platform/InputConstants
	A KEY_Q
	B KEY_R
	C KEY_S
	D KEY_T
	E KEY_U
	F KEY_V
	G KEY_W
	H KEY_X
	I KEY_Y
	J KEY_Z
	K KEY_F1
	L KEY_F2
	M KEY_F3
	N KEY_F4
	O KEY_F5
	P KEY_F6
	Q KEY_F7
	R KEY_F8
	S KEY_F9
	T KEY_F10
	U KEY_F11
	V KEY_F12
	W KEY_F13
	X KEY_F14
	Y KEY_F15
	Z KEY_F16
	a KEY_0
	aA KEY_UP
	aB KEY_ADD
	aC KEY_APOSTROPHE
	aD KEY_BACKSLASH
	aE KEY_COMMA
	aF KEY_EQUALS
	aG KEY_GRAVE
	aH KEY_LBRACKET
	aI KEY_MINUS
	aJ KEY_MULTIPLY
	aK KEY_PERIOD
	aL KEY_RBRACKET
	aM KEY_SEMICOLON
	aN KEY_SLASH
	aO KEY_SPACE
	aP KEY_TAB
	aQ KEY_LALT
	aR KEY_LCONTROL
	aS KEY_LSHIFT
	aT KEY_LWIN
	aU KEY_RALT
	aV KEY_RCONTROL
	aW KEY_RSHIFT
	aX KEY_RWIN
	aY KEY_RETURN
	aZ KEY_ESCAPE
	aa KEY_F17
	ab KEY_F18
	ac KEY_F19
	ad KEY_F20
	ae KEY_F21
	af KEY_F22
	ag KEY_F23
	ah KEY_F24
	ai KEY_F25
	aj KEY_NUMLOCK
	ak KEY_NUMPAD0
	al KEY_NUMPAD1
	am KEY_NUMPAD2
	an KEY_NUMPAD3
	ao KEY_NUMPAD4
	ap KEY_NUMPAD5
	aq KEY_NUMPAD6
	ar KEY_NUMPAD7
	as KEY_NUMPAD8
	at KEY_NUMPAD9
	au KEY_NUMPADCOMMA
	av KEY_NUMPADENTER
	aw KEY_NUMPADEQUALS
	ax KEY_DOWN
	ay KEY_LEFT
	az KEY_RIGHT
	b KEY_1
	ba KEY_BACKSPACE
	bb KEY_DELETE
	bc KEY_END
	bd KEY_HOME
	be KEY_INSERT
	bf KEY_PAGEDOWN
	bg KEY_PAGEUP
	bh KEY_CAPSLOCK
	bi KEY_PAUSE
	bj KEY_SCROLLLOCK
	bk KEY_PRINTSCREEN
	bl PRESS
	bm RELEASE
	bn REPEAT
	bo MOUSE_BUTTON_LEFT
	bp MOUSE_BUTTON_MIDDLE
	bq MOUSE_BUTTON_RIGHT
	br MOD_CONTROL
	bs CURSOR
	bt CURSOR_DISABLED
	bu CURSOR_NORMAL
	bv UNKNOWN
	bw GLFW_RAW_MOUSE_MOTION_SUPPORTED
	bx GLFW_RAW_MOUSE_MOTION
	c KEY_2
	d KEY_3
	e KEY_4
	f KEY_5
	g KEY_6
	h KEY_7
	i KEY_8
	j KEY_9
	k KEY_A
	l KEY_B
	m KEY_C
	n KEY_D
	o KEY_E
	p KEY_F
	q KEY_G
	r KEY_H
	s KEY_I
	t KEY_J
	u KEY_K
	v KEY_L
	w KEY_M
	x KEY_N
	y KEY_O
	z KEY_P
	a ()Z isRawMouseInputSupported
	a (II)Lefz$a; getKey
	a (JI)Z isKeyDown
	a (JIDD)V grabOrReleaseMouse
	a (JLorg/lwjgl/glfw/GLFWCursorPosCallbackI;Lorg/lwjgl/glfw/GLFWMouseButtonCallbackI;Lorg/lwjgl/glfw/GLFWScrollCallbackI;Lorg/lwjgl/glfw/GLFWDropCallbackI;)V setupMouseCallbacks
	a (JLorg/lwjgl/glfw/GLFWKeyCallbackI;Lorg/lwjgl/glfw/GLFWCharModsCallbackI;)V setupKeyboardCallbacks
	a (JZ)V updateRawMouseInput
	a (Ljava/lang/String;)Lefz$a; getKey
efz$a com/mojang/blaze3d/platform/InputConstants$Key
	a name
	b type
	c value
	d displayName
	e NAME_MAP
	a ()Lefz$b; getType
	b ()I getValue
	c ()Ljava/lang/String; getName
	d ()Lnet/minecraft/network/chat/IChatBaseComponent; getDisplayName
	e ()Ljava/util/OptionalInt; getNumericKeyValue
efz$b com/mojang/blaze3d/platform/InputConstants$Type
	a KEYSYM
	b SCANCODE
	c MOUSE
	d map
	e defaultPrefix
	f displayTextSupplier
	g $VALUES
	a ()[Lefz$b; $values
	a (I)Lefz$a; getOrCreate
	a (Lefz$b;Ljava/lang/String;I)V addKey
eg$a net/minecraft/commands/arguments/NbtPathArgument$AllElementsNode
	a INSTANCE
	a ()Lnet/minecraft/nbt/NBTBase; createPreferredParentTag
	a (Lnet/minecraft/nbt/NBTBase;)I removeTag
	a (Lnet/minecraft/nbt/NBTBase;Ljava/util/List;)V getTag
	a (Lnet/minecraft/nbt/NBTBase;Ljava/util/function/Supplier;)I setTag
	a (Lnet/minecraft/nbt/NBTBase;Ljava/util/function/Supplier;Ljava/util/List;)V getOrCreateTag
eg$b net/minecraft/commands/arguments/NbtPathArgument$CompoundChildNode
	a name
	a ()Lnet/minecraft/nbt/NBTBase; createPreferredParentTag
	a (Lnet/minecraft/nbt/NBTBase;)I removeTag
	a (Lnet/minecraft/nbt/NBTBase;Ljava/util/List;)V getTag
	a (Lnet/minecraft/nbt/NBTBase;Ljava/util/function/Supplier;)I setTag
	a (Lnet/minecraft/nbt/NBTBase;Ljava/util/function/Supplier;Ljava/util/List;)V getOrCreateTag
eg$c net/minecraft/commands/arguments/NbtPathArgument$IndexedElementNode
	a index
	a ()Lnet/minecraft/nbt/NBTBase; createPreferredParentTag
	a (Lnet/minecraft/nbt/NBTBase;)I removeTag
	a (Lnet/minecraft/nbt/NBTBase;Ljava/util/List;)V getTag
	a (Lnet/minecraft/nbt/NBTBase;Ljava/util/function/Supplier;)I setTag
	a (Lnet/minecraft/nbt/NBTBase;Ljava/util/function/Supplier;Ljava/util/List;)V getOrCreateTag
eg$d net/minecraft/commands/arguments/NbtPathArgument$MatchElementNode
	a pattern
	b predicate
	a ()Lnet/minecraft/nbt/NBTBase; createPreferredParentTag
	a (Lnet/minecraft/nbt/NBTBase;)I removeTag
	a (Lnet/minecraft/nbt/NBTBase;Ljava/util/List;)V getTag
	a (Lnet/minecraft/nbt/NBTBase;Ljava/util/function/Supplier;)I setTag
	a (Lnet/minecraft/nbt/NBTBase;Ljava/util/function/Supplier;Ljava/util/List;)V getOrCreateTag
eg$e net/minecraft/commands/arguments/NbtPathArgument$MatchObjectNode
	a name
	b pattern
	c predicate
	a ()Lnet/minecraft/nbt/NBTBase; createPreferredParentTag
	a (Lnet/minecraft/nbt/NBTBase;)I removeTag
	a (Lnet/minecraft/nbt/NBTBase;Ljava/util/List;)V getTag
	a (Lnet/minecraft/nbt/NBTBase;Ljava/util/function/Supplier;)I setTag
	a (Lnet/minecraft/nbt/NBTBase;Ljava/util/function/Supplier;Ljava/util/List;)V getOrCreateTag
eg$f net/minecraft/commands/arguments/NbtPathArgument$MatchRootObjectNode
	a predicate
	a ()Lnet/minecraft/nbt/NBTBase; createPreferredParentTag
	a (Lnet/minecraft/nbt/NBTBase;)I removeTag
	a (Lnet/minecraft/nbt/NBTBase;Ljava/util/List;)V getTag
	a (Lnet/minecraft/nbt/NBTBase;Ljava/util/function/Supplier;)I setTag
	a (Lnet/minecraft/nbt/NBTBase;Ljava/util/function/Supplier;Ljava/util/List;)V getOrCreateTag
eg$g net/minecraft/commands/arguments/NbtPathArgument$NbtPath
	a original
	b nodeToOriginalPosition
	c nodes
	a ()I estimatePathDepth
	a (ILnet/minecraft/nbt/NBTTagCompound;Ljava/util/List;)I insert
	a (Leg$h;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; createNotFoundException
	a (Ljava/util/List;Ljava/util/function/Function;)I apply
	a (Lnet/minecraft/nbt/NBTBase;)Ljava/util/List; get
	a (Lnet/minecraft/nbt/NBTBase;I)Z isTooDeep
	a (Lnet/minecraft/nbt/NBTBase;Ljava/util/function/Supplier;)Ljava/util/List; getOrCreate
	a (Lnet/minecraft/nbt/NBTBase;Lnet/minecraft/nbt/NBTBase;)I set
	b (Lnet/minecraft/nbt/NBTBase;)I countMatching
	c (Lnet/minecraft/nbt/NBTBase;)I remove
	d (Lnet/minecraft/nbt/NBTBase;)Ljava/util/List; getOrCreateParents
eg$h net/minecraft/commands/arguments/NbtPathArgument$Node
	a ()Lnet/minecraft/nbt/NBTBase; createPreferredParentTag
	a (Ljava/util/List;)Ljava/util/List; get
	a (Ljava/util/List;Ljava/util/function/BiConsumer;)Ljava/util/List; collect
	a (Ljava/util/List;Ljava/util/function/Supplier;)Ljava/util/List; getOrCreate
	a (Lnet/minecraft/nbt/NBTBase;)I removeTag
	a (Lnet/minecraft/nbt/NBTBase;Ljava/util/List;)V getTag
	a (Lnet/minecraft/nbt/NBTBase;Ljava/util/function/Supplier;)I setTag
	a (Lnet/minecraft/nbt/NBTBase;Ljava/util/function/Supplier;Ljava/util/List;)V getOrCreateTag
ega com/mojang/blaze3d/platform/Lighting
	a DIFFUSE_LIGHT_0
	b DIFFUSE_LIGHT_1
	c NETHER_DIFFUSE_LIGHT_0
	d NETHER_DIFFUSE_LIGHT_1
	e INVENTORY_DIFFUSE_LIGHT_0
	f INVENTORY_DIFFUSE_LIGHT_1
	a ()V setupForFlatItems
	a (Lorg/joml/Matrix4f;)V setupNetherLevel
	b ()V setupFor3DItems
	b (Lorg/joml/Matrix4f;)V setupLevel
	c ()V setupForEntityInInventory
egb com/mojang/blaze3d/platform/MacosUtil
	a NS_FULL_SCREEN_WINDOW_MASK
	a (J)V toggleFullscreen
	a (Lca/weblite/objc/NSObject;)Z isInKioskMode
	a (Lnet/minecraft/server/packs/resources/IoSupplier;)V loadIcon
	b (J)Ljava/util/Optional; getNsWindow
	b (Lca/weblite/objc/NSObject;)V toggleFullscreen
egc com/mojang/blaze3d/platform/MemoryTracker
	a ALLOCATOR
	a (I)Ljava/nio/ByteBuffer; create
	a (Ljava/nio/ByteBuffer;I)Ljava/nio/ByteBuffer; resize
egd com/mojang/blaze3d/platform/Monitor
	a monitor
	b videoModes
	c currentMode
	d x
	e y
	a ()V refreshVideoModes
	a (I)Legh; getMode
	a (Legh;)I getVideoModeIndex
	a (Ljava/util/Optional;)Legh; getPreferredVidMode
	b ()Legh; getCurrentMode
	c ()I getX
	d ()I getY
	e ()I getModeCount
	f ()J getMonitor
ege com/mojang/blaze3d/platform/MonitorCreator
egf com/mojang/blaze3d/platform/NativeImage
	a LOGGER
	b OPEN_OPTIONS
	c format
	d width
	e height
	f useStbFree
	g pixels
	h size
	a ()I getWidth
	a (F)V downloadDepthBuffer
	a (II)I getPixelRGBA
	a (IIB)V setPixelLuminance
	a (III)V setPixelRGBA
	a (IIIII)V fillRect
	a (IIIIIIIZZ)V upload
	a (IIIIIIIZZZZ)V upload
	a (IIIIIIZZ)V copyRect
	a (IIIILegf;)V resizeSubRectTo
	a (IIIZ)V upload
	a (IZ)V downloadTexture
	a (Legf$a;Ljava/io/InputStream;)Legf; read
	a (Legf$a;Ljava/nio/ByteBuffer;)Legf; read
	a (Legf;)V copyFrom
	a (Legf;IIIIIIZZ)V copyRect
	a (Ljava/io/File;)V writeToFile
	a (Ljava/io/InputStream;)Legf; read
	a (Ljava/nio/ByteBuffer;)Legf; read
	a (Ljava/nio/channels/WritableByteChannel;)Z writeToChannel
	a (Ljava/nio/file/Path;)V writeToFile
	a (Ljava/util/function/IntUnaryOperator;)Legf; mappedCopy
	a (Lorg/lwjgl/stb/STBTTFontinfo;IIIFFFFII)V copyFromFont
	a (ZZ)V setFilter
	a ([B)Legf; read
	b ()I getHeight
	b (II)B getRedOrLuminance
	b (III)V blendPixel
	b (IIIIIIIZZZZ)V _upload
	c ()Legf$a; format
	c (II)B getGreenOrLuminance
	d ()[I getPixelsRGBA
	d (II)B getBlueOrLuminance
	e ()[I makePixelArray
	e (II)B getLuminanceOrAlpha
	f ()V drawPixels
	f (II)Z isOutsideBounds
	g ()[B asByteArray
	h ()V flipY
	i ()V untrack
	j ()V checkAllocated
egf$a com/mojang/blaze3d/platform/NativeImage$Format
	a RGBA
	b RGB
	c LUMINANCE_ALPHA
	d LUMINANCE
	e components
	f glFormat
	g hasRed
	h hasGreen
	i hasBlue
	j hasLuminance
	k hasAlpha
	l redOffset
	m greenOffset
	n blueOffset
	o luminanceOffset
	p alphaOffset
	q supportedByStb
	r $VALUES
	a ()I components
	a (I)Legf$a; getStbFormat
	b ()V setPackPixelStoreState
	c ()V setUnpackPixelStoreState
	d ()I glFormat
	e ()Z hasRed
	f ()Z hasGreen
	g ()Z hasBlue
	h ()Z hasLuminance
	i ()Z hasAlpha
	j ()I redOffset
	k ()I greenOffset
	l ()I blueOffset
	m ()I luminanceOffset
	n ()I alphaOffset
	o ()Z hasLuminanceOrRed
	p ()Z hasLuminanceOrGreen
	q ()Z hasLuminanceOrBlue
	r ()Z hasLuminanceOrAlpha
	s ()I luminanceOrRedOffset
	t ()I luminanceOrGreenOffset
	u ()I luminanceOrBlueOffset
	v ()I luminanceOrAlphaOffset
	w ()Z supportedByStb
	x ()[Legf$a; $values
egf$b com/mojang/blaze3d/platform/NativeImage$InternalGlFormat
	a RGBA
	b RGB
	c RG
	d RED
	e glFormat
	f $VALUES
	a ()I glFormat
	b ()[Legf$b; $values
egf$c com/mojang/blaze3d/platform/NativeImage$WriteCallback
	a output
	b exception
	a ()V throwIfException
egg com/mojang/blaze3d/platform/ScreenManager
	a LOGGER
	b monitors
	c monitorCreator
	a ()V shutdown
	a (III)I clamp
	a (J)Legd; getMonitor
	a (JI)V onMonitorChange
	a (Legi;)Legd; findBestMonitor
egh com/mojang/blaze3d/platform/VideoMode
	a width
	b height
	c redBits
	d greenBits
	e blueBits
	f refreshRate
	g PATTERN
	a ()I getWidth
	a (Ljava/lang/String;)Ljava/util/Optional; read
	b ()I getHeight
	c ()I getRedBits
	d ()I getGreenBits
	e ()I getBlueBits
	f ()I getRefreshRate
	g ()Ljava/lang/String; write
egi com/mojang/blaze3d/platform/Window
	a LOGGER
	b defaultErrorCallback
	c eventHandler
	d screenManager
	e window
	f windowedX
	g windowedY
	h windowedWidth
	i windowedHeight
	j preferredFullscreenVideoMode
	k fullscreen
	l actuallyFullscreen
	m x
	n y
	o width
	p height
	q framebufferWidth
	r framebufferHeight
	s guiScaledWidth
	t guiScaledHeight
	u guiScale
	v errorSection
	w dirty
	x framerateLimit
	y vsync
	a ()I getRefreshRate
	a (D)V setGuiScale
	a (I)V setFramerateLimit
	a (II)V setWindowed
	a (IJ)V defaultErrorCallback
	a (IZ)I calculateScale
	a (JII)V onMove
	a (JZ)V onFocus
	a (Ljava/lang/String;)V setErrorSection
	a (Ljava/util/Optional;)V setPreferredFullscreenVideoMode
	a (Ljava/util/function/BiConsumer;)V checkGlfwError
	a (Lnet/minecraft/server/packs/resources/IoSupplier;Ljava/nio/IntBuffer;Ljava/nio/IntBuffer;Ljava/nio/IntBuffer;)Ljava/nio/ByteBuffer; readIconPixels
	a (Lnet/minecraft/server/packs/resources/IoSupplier;Lnet/minecraft/server/packs/resources/IoSupplier;)V setIcon
	a (Z)V updateVsync
	b ()Z shouldClose
	b (I)V setWidth
	b (IJ)V bootCrash
	b (JII)V onFramebufferResize
	b (JZ)V onEnter
	b (Ljava/lang/String;)V setTitle
	b (Z)V updateRawMouseInput
	c ()V setDefaultErrorCallback
	c (I)V setHeight
	c (JII)V onResize
	c (Z)V updateFullscreen
	d ()I getFramerateLimit
	e ()V updateDisplay
	f ()Ljava/util/Optional; getPreferredFullscreenVideoMode
	g ()V changeFullscreenVideoMode
	h ()V toggleFullScreen
	i ()J getWindow
	j ()Z isFullscreen
	k ()I getWidth
	l ()I getHeight
	m ()I getScreenWidth
	n ()I getScreenHeight
	o ()I getGuiScaledWidth
	p ()I getGuiScaledHeight
	q ()I getX
	r ()I getY
	s ()D getGuiScale
	t ()Legd; findBestMonitor
	u ()V setBootErrorCallback
	v ()V refreshFramebufferSize
	w ()V setMode
egi$a com/mojang/blaze3d/platform/Window$WindowInitFailed
egj com/mojang/blaze3d/platform/WindowEventHandler
	a ()V resizeDisplay
	a (Z)V setWindowActive
	b ()V cursorEntered
egl com/mojang/blaze3d/preprocessor/GlslPreprocessor
	a C_COMMENT
	b LINE_COMMENT
	c REGEX_MOJ_IMPORT
	d REGEX_VERSION
	e REGEX_ENDS_WITH_WHITESPACE
	a (Ljava/lang/String;)Ljava/util/List; process
	a (Ljava/lang/String;I)Ljava/lang/String; setVersion
	a (Ljava/lang/String;Legl$a;)Ljava/lang/String; processVersions
	a (Ljava/lang/String;Legl$a;Ljava/lang/String;)Ljava/util/List; processImports
	a (Ljava/lang/String;Ljava/util/regex/Matcher;)Z isDirectiveEnabled
	a (Ljava/lang/String;Ljava/util/regex/Matcher;I)Z isDirectiveDisabled
	a (ZLjava/lang/String;)Ljava/lang/String; applyImport
egl$a com/mojang/blaze3d/preprocessor/GlslPreprocessor$Context
	a glslVersion
	b sourceId
egn com/mojang/blaze3d/shaders/AbstractUniform
	a (F)V set
	a (FF)V set
	a (FFF)V set
	a (FFFF)V set
	a (FFFFFF)V setMat2x3
	a (FFFFFFFF)V setMat2x4
	a (FFFFFFFFF)V setMat3x3
	a (FFFFFFFFFFFF)V setMat3x4
	a (FFFFFFFFFFFFFFFF)V setMat4x4
	a (I)V set
	a (II)V set
	a (III)V set
	a (IIII)V setSafe
	a (Lorg/joml/Matrix3f;)V set
	a (Lorg/joml/Matrix4f;)V set
	a (Lorg/joml/Vector3f;)V set
	a (Lorg/joml/Vector4f;)V set
	a ([F)V set
	b (FFFF)V setSafe
	b (FFFFFF)V setMat3x2
	b (FFFFFFFF)V setMat4x2
	b (FFFFFFFFFFFF)V setMat4x3
	b (IIII)V set
	c (FFFF)V setMat2x2
ego com/mojang/blaze3d/shaders/BlendMode
	a lastApplied
	b srcColorFactor
	c srcAlphaFactor
	d dstColorFactor
	e dstAlphaFactor
	f blendFunc
	g separateBlend
	h opaque
	a ()V apply
	a (Ljava/lang/String;)I stringToBlendFunc
	b ()Z isOpaque
	b (Ljava/lang/String;)I stringToBlendFactor
egp com/mojang/blaze3d/shaders/Effect
egq com/mojang/blaze3d/shaders/EffectProgram
	a PREPROCESSOR
	b references
	a ()V close
	a (Legp;)V attachToEffect
	a (Legs$a;Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Legq; compileShader
egr com/mojang/blaze3d/shaders/FogShape
	a SPHERE
	b CYLINDER
	c index
	d $VALUES
	a ()I getIndex
	b ()[Legr; $values
egs com/mojang/blaze3d/shaders/Program
	a MAX_LOG_LENGTH
	b type
	c name
	d id
	a ()V close
	a (Legs$a;Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Legl;)Legs; compileShader
	a (Legu;)V attachToShader
	b ()Ljava/lang/String; getName
	b (Legs$a;Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Legl;)I compileShaderInternal
	c ()I getId
egs$a com/mojang/blaze3d/shaders/Program$Type
	a VERTEX
	b FRAGMENT
	c name
	d extension
	e glType
	f programs
	g $VALUES
	a ()Ljava/lang/String; getName
	b ()Ljava/lang/String; getExtension
	c ()Ljava/util/Map; getPrograms
	d ()I getGlType
	e ()[Legs$a; $values
egt com/mojang/blaze3d/shaders/ProgramManager
	a LOGGER
	a ()I createProgram
	a (I)V glUseProgram
	a (Legu;)V releaseProgram
	b (Legu;)V linkShader
egu com/mojang/blaze3d/shaders/Shader
	a ()I getId
	b ()V markDirty
	c ()Legs; getVertexProgram
	d ()Legs; getFragmentProgram
	e ()V attachToProgram
egv com/mojang/blaze3d/shaders/Uniform
	a UT_INT1
	b UT_INT2
	c UT_INT3
	d UT_INT4
	e UT_FLOAT1
	f UT_FLOAT2
	g UT_FLOAT3
	h UT_FLOAT4
	i UT_MAT2
	j UT_MAT3
	k UT_MAT4
	l LOGGER
	m TRANSPOSE_MATRICIES
	n location
	o count
	p type
	q intValues
	r floatValues
	s name
	t dirty
	u parent
	a ()Ljava/lang/String; getName
	a (F)V set
	a (FF)V set
	a (FFF)V set
	a (FFFF)V set
	a (FFFFFF)V setMat2x3
	a (FFFFFFFF)V setMat2x4
	a (FFFFFFFFF)V setMat3x3
	a (FFFFFFFFFFFF)V setMat3x4
	a (FFFFFFFFFFFFFFFF)V setMat4x4
	a (I)V set
	a (IF)V set
	a (II)V set
	a (III)V set
	a (IIII)V setSafe
	a (IILjava/lang/CharSequence;)V glBindAttribLocation
	a (ILjava/lang/CharSequence;)I glGetUniformLocation
	a (Ljava/lang/String;)I getTypeFromString
	a (Lorg/joml/Matrix3f;)V set
	a (Lorg/joml/Matrix4f;)V set
	a (Lorg/joml/Vector3f;)V set
	a (Lorg/joml/Vector4f;)V set
	a ([F)V set
	b ()V upload
	b (FFFF)V setSafe
	b (FFFFFF)V setMat3x2
	b (FFFFFFFF)V setMat4x2
	b (FFFFFFFFFFFF)V setMat4x3
	b (I)V setLocation
	b (II)V uploadInteger
	b (IIII)V set
	b (ILjava/lang/CharSequence;)I glGetAttribLocation
	c ()I getLocation
	c (FFFF)V setMat2x2
	d ()I getCount
	e ()I getType
	f ()Ljava/nio/IntBuffer; getIntBuffer
	g ()Ljava/nio/FloatBuffer; getFloatBuffer
	h ()V markDirty
	i ()V uploadAsInteger
	j ()V uploadAsFloat
	k ()V uploadAsMatrix
egx com/mojang/blaze3d/systems/TimerQuery
	a nextQueryName
	a ()Ljava/util/Optional; getInstance
	b ()V beginProfile
	c ()Legx$a; endProfile
egx$a com/mojang/blaze3d/systems/TimerQuery$FrameProfile
	a NO_RESULT
	b CANCELLED_RESULT
	c queryName
	d result
	a ()V cancel
	b ()Z isDone
	c ()J get
egx$b com/mojang/blaze3d/systems/TimerQuery$TimerQueryLazyLoader
	a INSTANCE
	a ()Legx; instantiate
egz com/mojang/blaze3d/vertex/BufferBuilder
	f GROWTH_SIZE
	g LOGGER
	h buffer
	i renderedBufferCount
	j renderedBufferPointer
	k nextElementByte
	l vertices
	m currentElement
	n elementIndex
	o format
	p mode
	q fastFormat
	r fullFormat
	s building
	t sortingPoints
	u sortX
	v sortY
	w sortZ
	x indexOnly
	a ()Legz$c; getSortState
	a (FFF)V setQuadSortOrigin
	a (FFFFFFFFFIIFFF)V vertex
	a (IB)V putByte
	a (IF)V putFloat
	a (IIII)Lehi; color
	a (ILehj$a;)Lit/unimi/dsi/fastutil/ints/IntConsumer; intConsumer
	a (IS)V putShort
	a (Legz$c;)V restoreSortState
	a (Lehj$a;)V putSortedQuadIndices
	a (Lehj$b;Lehj;)V begin
	a (Lehj;)V switchFormat
	b ()Z isCurrentBatchEmpty
	c ()Legz$b; endOrDiscardIfEmpty
	c (II)Ljava/nio/ByteBuffer; bufferSlice
	d ()Legz$b; end
	d (I)V ensureCapacity
	e ()V endVertex
	e (I)I roundUp
	f ()V nextElement
	g ()V clear
	h ()V discard
	i ()Lehk; currentElement
	j ()Z building
	l ()V ensureVertexCapacity
	m ()[Lorg/joml/Vector3f; makeQuadSortingPoints
	n ()V ensureDrawing
	o ()Legz$b; storeRenderedBuffer
	p ()V reset
	q ()V releaseRenderedBuffer
egz$a com/mojang/blaze3d/vertex/BufferBuilder$DrawState
	a format
	b vertexCount
	c indexCount
	d mode
	e indexType
	f indexOnly
	g sequentialIndex
	a ()I vertexBufferSize
	b ()I vertexBufferStart
	c ()I vertexBufferEnd
	d ()I indexBufferStart
	e ()I indexBufferEnd
	f ()I bufferSize
	g ()Lehj; format
	h ()I vertexCount
	i ()I indexCount
	j ()Lehj$b; mode
	k ()Lehj$a; indexType
	l ()Z indexOnly
	m ()Z sequentialIndex
	n ()I indexBufferSize
egz$b com/mojang/blaze3d/vertex/BufferBuilder$RenderedBuffer
	b pointer
	c drawState
	d released
	a ()Ljava/nio/ByteBuffer; vertexBuffer
	b ()Ljava/nio/ByteBuffer; indexBuffer
	c ()Legz$a; drawState
	d ()Z isEmpty
	e ()V release
egz$c com/mojang/blaze3d/vertex/BufferBuilder$SortState
	a mode
	b vertices
	c sortingPoints
	d sortX
	e sortY
	f sortZ
eha com/mojang/blaze3d/vertex/BufferUploader
	a lastImmediateBuffer
	a ()V reset
	a (Legz$b;)V drawWithShader
	a (Lehh;)V bindImmediateBuffer
	a (Lehj;)Lehh; bindImmediateBuffer
	b ()V invalidate
	b (Legz$b;)V draw
	c (Legz$b;)V _drawWithShader
	d (Legz$b;)Lehh; upload
ehb com/mojang/blaze3d/vertex/BufferVertexConsumer
	a (DDD)Lehi; vertex
	a (F)B normalIntValue
	a (FF)Lehi; uv
	a (IB)V putByte
	a (IF)V putFloat
	a (II)Lehi; overlayCoords
	a (IIII)Lehi; color
	a (IS)V putShort
	a (SSI)Lehi; uvShort
	b (FFF)Lehi; normal
	b (II)Lehi; uv2
	f ()V nextElement
	i ()Lehk; currentElement
ehc com/mojang/blaze3d/vertex/DefaultVertexFormat
	a ELEMENT_POSITION
	b ELEMENT_COLOR
	c ELEMENT_UV0
	d ELEMENT_UV1
	e ELEMENT_UV2
	f ELEMENT_NORMAL
	g ELEMENT_PADDING
	h ELEMENT_UV
	i BLIT_SCREEN
	j BLOCK
	k NEW_ENTITY
	l PARTICLE
	m POSITION
	n POSITION_COLOR
	o POSITION_COLOR_NORMAL
	p POSITION_COLOR_LIGHTMAP
	q POSITION_TEX
	r POSITION_COLOR_TEX
	s POSITION_TEX_COLOR
	t POSITION_COLOR_TEX_LIGHTMAP
	u POSITION_TEX_LIGHTMAP_COLOR
	v POSITION_TEX_COLOR_NORMAL
ehd com/mojang/blaze3d/vertex/DefaultedVertexConsumer
	a defaultColorSet
	b defaultR
	c defaultG
	d defaultB
	e defaultA
	b (IIII)V defaultColor
	k ()V unsetDefaultColor
ehe com/mojang/blaze3d/vertex/PoseStack
	a poseStack
	a ()V pushPose
	a (DDD)V translate
	a (FFF)V translate
	a (Lorg/joml/Matrix4f;)V mulPoseMatrix
	a (Lorg/joml/Quaternionf;)V mulPose
	a (Lorg/joml/Quaternionf;FFF)V rotateAround
	b ()V popPose
	b (FFF)V scale
	c ()Lehe$a; last
	d ()Z clear
	e ()V setIdentity
ehe$a com/mojang/blaze3d/vertex/PoseStack$Pose
	a pose
	b normal
	a ()Lorg/joml/Matrix4f; pose
	b ()Lorg/joml/Matrix3f; normal
ehf com/mojang/blaze3d/vertex/SheetedDecalTextureGenerator
	f delegate
	g cameraInversePose
	h normalInversePose
	i textureScale
	j x
	k y
	l z
	m overlayU
	n overlayV
	o lightCoords
	p nx
	q ny
	r nz
	a ()V resetState
	a (DDD)Lehi; vertex
	a (FF)Lehi; uv
	a (II)Lehi; overlayCoords
	a (IIII)Lehi; color
	b (FFF)Lehi; normal
	b (II)Lehi; uv2
	e ()V endVertex
ehg com/mojang/blaze3d/vertex/Tesselator
	a MAX_MEMORY_USE
	b MAX_FLOATS
	c builder
	d INSTANCE
	a ()Lehg; getInstance
	b ()V end
	c ()Legz; getBuilder
ehh com/mojang/blaze3d/vertex/VertexBuffer
	a vertexBufferId
	b indexBufferId
	c arrayObjectId
	d format
	e sequentialIndices
	f indexType
	g indexCount
	h mode
	a ()V bind
	a (Legz$a;Ljava/nio/ByteBuffer;)Lehj; uploadVertexBuffer
	a (Legz$b;)V upload
	a (Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;Lfir;)V drawWithShader
	b ()V unbind
	b (Legz$a;Ljava/nio/ByteBuffer;)Lcom/mojang/blaze3d/systems/RenderSystem$a; uploadIndexBuffer
	b (Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;Lfir;)V _drawWithShader
	c ()V draw
	d ()Lehj; getFormat
	e ()Z isInvalid
	f ()Lehj$a; getIndexType
ehi com/mojang/blaze3d/vertex/VertexConsumer
	a (DDD)Lehi; vertex
	a (FF)Lehi; uv
	a (FFFF)Lehi; color
	a (FFFFFFFFFIIFFF)V vertex
	a (I)Lehi; color
	a (II)Lehi; overlayCoords
	a (IIII)Lehi; color
	a (Lehe$a;Lfja;FFFII)V putBulkData
	a (Lehe$a;Lfja;[FFFF[IIZ)V putBulkData
	a (Lorg/joml/Matrix3f;FFF)Lehi; normal
	a (Lorg/joml/Matrix4f;FFF)Lehi; vertex
	b (FFF)Lehi; normal
	b (I)Lehi; uv2
	b (II)Lehi; uv2
	b (IIII)V defaultColor
	c (I)Lehi; overlayCoords
	e ()V endVertex
	k ()V unsetDefaultColor
ehj com/mojang/blaze3d/vertex/VertexFormat
	a elements
	b elementMapping
	c offsets
	d vertexSize
	e immediateDrawVertexBuffer
	a ()I getIntegerSize
	b ()I getVertexSize
	c ()Lcom/google/common/collect/ImmutableList; getElements
	d ()Lcom/google/common/collect/ImmutableList; getElementAttributeNames
	e ()V setupBufferState
	f ()V clearBufferState
	g ()Lehh; getImmediateDrawVertexBuffer
	h ()V _setupBufferState
	i ()V _clearBufferState
ehj$a com/mojang/blaze3d/vertex/VertexFormat$IndexType
	a BYTE
	b SHORT
	c INT
	d asGLType
	e bytes
	f $VALUES
	a ()[Lehj$a; $values
	a (I)Lehj$a; least
ehj$b com/mojang/blaze3d/vertex/VertexFormat$Mode
	a LINES
	b LINE_STRIP
	c DEBUG_LINES
	d DEBUG_LINE_STRIP
	e TRIANGLES
	f TRIANGLE_STRIP
	g TRIANGLE_FAN
	h QUADS
	i asGLMode
	j primitiveLength
	k primitiveStride
	l connectedPrimitives
	m $VALUES
	a ()[Lehj$b; $values
	a (I)I indexCount
ehk com/mojang/blaze3d/vertex/VertexFormatElement
	a type
	b usage
	c index
	d count
	e byteSize
	a ()Lehk$a; getType
	a (I)V clearBufferState
	a (IJI)V setupBufferState
	a (ILehk$b;)Z supportsUsage
	b ()Lehk$b; getUsage
	c ()I getCount
	d ()I getIndex
	e ()I getByteSize
	f ()Z isPosition
ehk$a com/mojang/blaze3d/vertex/VertexFormatElement$Type
	a FLOAT
	b UBYTE
	c BYTE
	d USHORT
	e SHORT
	f UINT
	g INT
	h size
	i name
	j glType
	k $VALUES
	a ()I getSize
	b ()Ljava/lang/String; getName
	c ()I getGlType
	d ()[Lehk$a; $values
ehk$b com/mojang/blaze3d/vertex/VertexFormatElement$Usage
	a POSITION
	b NORMAL
	c COLOR
	d UV
	e PADDING
	f GENERIC
	g name
	h setupState
	i clearState
	j $VALUES
	a ()Ljava/lang/String; getName
	a (II)V clearBufferState
	a (IIIJII)V setupBufferState
	b ()[Lehk$b; $values
ehk$b$a com/mojang/blaze3d/vertex/VertexFormatElement$Usage$ClearState
ehk$b$b com/mojang/blaze3d/vertex/VertexFormatElement$Usage$SetupState
ehl com/mojang/blaze3d/vertex/VertexMultiConsumer
	a ()Lehi; create
	a (Lehi;)Lehi; create
	a (Lehi;Lehi;)Lehi; create
	a ([Lehi;)Lehi; create
ehl$a com/mojang/blaze3d/vertex/VertexMultiConsumer$Double
	a first
	b second
	a (DDD)Lehi; vertex
	a (FF)Lehi; uv
	a (FFFFFFFFFIIFFF)V vertex
	a (II)Lehi; overlayCoords
	a (IIII)Lehi; color
	b (FFF)Lehi; normal
	b (II)Lehi; uv2
	b (IIII)V defaultColor
	e ()V endVertex
	k ()V unsetDefaultColor
ehl$b com/mojang/blaze3d/vertex/VertexMultiConsumer$Multiple
	a delegates
	a (DDD)Lehi; vertex
	a (FF)Lehi; uv
	a (FFFFFFFFFIIFFF)V vertex
	a (II)Lehi; overlayCoords
	a (IIII)Lehi; color
	a (Ljava/util/function/Consumer;)V forEach
	b (FFF)Lehi; normal
	b (II)Lehi; uv2
	b (IIII)V defaultColor
	e ()V endVertex
	k ()V unsetDefaultColor
ehn com/mojang/realmsclient/KeyCombo
	a chars
	b matchIndex
	c onCompletion
	a ()V reset
	a (C)Z keyPressed
eho com/mojang/realmsclient/RealmsMainScreen
	J EXPIRED_ICON_LOCATION
	K EXPIRES_SOON_ICON_LOCATION
	L INVITATION_ICONS_LOCATION
	M INVITE_ICON_LOCATION
	N WORLDICON_LOCATION
	O LOGO_LOCATION
	P NEWS_LOCATION
	Q POPUP_LOCATION
	R DARKEN_LOCATION
	S CROSS_ICON_LOCATION
	T TRIAL_ICON_LOCATION
	U INFO_ICON_LOCATION
	V NO_PENDING_INVITES_TEXT
	W PENDING_INVITES_TEXT
	X TRIAL_MESSAGE_LINES
	Y SERVER_UNITIALIZED_TEXT
	Z SUBSCRIPTION_EXPIRED_TEXT
	a LOGGER
	aA checkedParentalConsent
	aB checkedClientCompatability
	aC realmsGenericErrorScreen
	aD regionsPinged
	aE inviteNarrationLimiter
	aF dontSetConnectedToRealms
	aG lastScreen
	aH realmSelectionList
	aI realmsSelectionListAdded
	aJ playButton
	aK backButton
	aL renewButton
	aM configureButton
	aN leaveButton
	aO realmsServers
	aP numberOfPendingInvites
	aQ animTick
	aR hasFetchedServers
	aS popupOpenedByUser
	aT justClosedPopup
	aU trialsAvailable
	aV createdTrial
	aW showingPopup
	aX hasUnreadNews
	aY newsLink
	aZ carouselIndex
	aa SUBSCRIPTION_RENEW_TEXT
	ab TRIAL_EXPIRED_TEXT
	ac SELECT_MINIGAME_PREFIX
	ad POPUP_TEXT
	ae PLAY_TEXT
	af LEAVE_SERVER_TEXT
	ag CONFIGURE_SERVER_TEXT
	ah SERVER_EXPIRED_TOOLTIP
	ai SERVER_EXPIRES_SOON_TOOLTIP
	aj SERVER_EXPIRES_IN_DAY_TOOLTIP
	ak SERVER_OPEN_TOOLTIP
	al SERVER_CLOSED_TOOLTIP
	am NEWS_TOOLTIP
	an UNITIALIZED_WORLD_NARRATION
	ao TRIAL_TEXT
	ap BUTTON_WIDTH
	aq BUTTON_TOP_ROW_WIDTH
	ar BUTTON_BOTTOM_ROW_WIDTH
	as FOOTER_HEIGHT
	at teaserImages
	au dataSubscription
	av serverList
	aw handledSeenNotifications
	ax overrideConfigure
	ay lastScrollYPosition
	az hasParentalConsent
	b ON_ICON_LOCATION
	ba carouselTick
	bb hasSwitchedCarouselImage
	bc keyCombos
	bd lastClickTime
	be connectLock
	bf formattedPopup
	bg notifications
	bh showPopupButton
	bi pendingInvitesButton
	bj newsButton
	bk createTrialButton
	bl buyARealmButton
	bm closeButton
	c OFF_ICON_LOCATION
	B ()Z shouldShowMessageInList
	C ()Z hasParentalConsent
	D ()Z shouldShowPopupButton
	E ()V refreshRealmsSelectionList
	F ()V refreshFetcher
	G ()V pingRegions
	H ()Ljava/util/List; getOwnedNonExpiredWorldIds
	I ()V checkClientCompatability
	J ()V checkParentalConsent
	K ()V switchToStage
	L ()V switchToLocal
	M ()V switchToProd
	N ()V saveListScrollPosition
	O ()Leik; getSelectedServer
	P ()V onClosePopup
	Q ()I popupX0
	R ()I popupY0
	a ()Z shouldShowPopup
	a (CI)Z charTyped
	a (DD)Z isOutsidePopup
	a (DDI)Z mouseClicked
	a (III)Z keyPressed
	a (Lehe;II)V drawRealmsLogo
	a (Lehe;IIF)V render
	a (Lehe;IIIIZZ)V drawInvitationPendingIcon
	a (Lehe;IIZIIZZ)V renderNews
	a (Leho$h;Leij;)V addEntriesForNotification
	a (Leho$i;Ljava/util/function/Consumer;)V callRealmsClient
	a (Leik;)V updateButtonStates
	a (Leik;Letd;)V play
	a (Lejk;)Lekr$c; initDataFetcher
	a (Leoc;)V pendingButtonPress
	a (Ljava/util/UUID;)V dismissNotification
	a (Lnet/minecraft/server/packs/resources/IResourceManager;)V updateTeaserImages
	a (Z)V setCreatedTrial
	a (ZLeik;)V leaveServer
	b ()V init
	b (Leik;)Z shouldPlayButtonBeActive
	c ()V addTopButtons
	c (DD)Z inPendingInvitationArea
	c (Lehe;)V drawPopup
	c (Lehe;IIII)V drawExpired
	c (Lehe;IIIII)V drawExpiring
	c (Leik;)Z shouldRenewButtonBeActive
	d ()V addMiddleButtons
	d (Lehe;)V renderLocal
	d (Lehe;IIII)V drawOpen
	d (Leik;)Z shouldConfigureButtonBeActive
	e ()V addFooterButtons
	e (Lehe;)V renderStage
	e (Lehe;IIII)V drawClose
	e (Leik;)Z shouldLeaveButtonBeActive
	f ()V tick
	f (Leik;)V onRenew
	g ()V resetScreen
	g (Leik;)V configureClicked
	h ()Leho; newScreen
	h (Leik;)V leaveClicked
	i (Leik;)V removeServer
	j (Leik;)Z isSelfOwnedServer
	k (Leik;)Z isSelfOwnedNonExpiredServer
eho$a com/mojang/realmsclient/RealmsMainScreen$ButtonEntry
	c button
	d xPos
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarration
	a (DDI)Z mouseClicked
	a (III)Z keyPressed
	a (Lehe;IIIIIIIZF)V render
eho$b com/mojang/realmsclient/RealmsMainScreen$CloseButton
eho$c com/mojang/realmsclient/RealmsMainScreen$CrossButton
	b (Lehe;IIF)V renderWidget
eho$d com/mojang/realmsclient/RealmsMainScreen$Entry
	b ()Leik; getServer
eho$e com/mojang/realmsclient/RealmsMainScreen$NewsButton
	b (Lehe;IIF)V renderWidget
eho$f com/mojang/realmsclient/RealmsMainScreen$NotificationMessageEntry
	c SIDE_MARGINS
	d ITEM_HEIGHT
	e OUTLINE_COLOR
	f text
	h children
	i dismissButton
	j textWidget
	k gridLayout
	l textFrame
	m lastEntryWidth
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarration
	a (DDI)Z mouseClicked
	a (I)V updateEntryWidth
	a (III)Z keyPressed
	a (Lehe;IIIIIIIZF)V render
	b (I)V refreshLayout
	b (Lehe;IIIIIIIZF)V renderBack
eho$g com/mojang/realmsclient/RealmsMainScreen$PendingInvitesButton
	a ()V tick
	b (Lehe;IIF)V renderWidget
eho$h com/mojang/realmsclient/RealmsMainScreen$RealmSelectionList
	a ()I getMaxPosition
	a (DDI)Z mouseClicked
	a (IIDDII)V itemClicked
	a (III)Z keyPressed
	a (Leho$d;)V setSelected
	a (Lenw$a;)V setSelected
	b ()I getRowWidth
eho$i com/mojang/realmsclient/RealmsMainScreen$RealmsCall
eho$j com/mojang/realmsclient/RealmsMainScreen$ServerEntry
	c SKIN_HEAD_LARGE_WIDTH
	d serverData
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarration
	a (DDI)Z mouseClicked
	a (Lehe;IIIIIIIZF)V render
	a (Leik;Lehe;IIII)V renderMcoServerItem
	a (Leik;Lehe;IIIIII)V renderStatusLights
	b ()Leik; getServer
	b (Leik;Lehe;IIII)V renderLegacy
eho$k com/mojang/realmsclient/RealmsMainScreen$TrialEntry
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarration
	a (DDI)Z mouseClicked
	a (Lehe;IIIII)V renderTrialItem
	a (Lehe;IIIIIIIZF)V render
ehp com/mojang/realmsclient/Unit
	a B
	b KB
	c MB
	d GB
	e BASE_UNIT
	f $VALUES
	a ()[Lehp; $values
	a (J)Lehp; getLargest
	a (JLehp;)D convertTo
	b (J)Ljava/lang/String; humanReadable
	b (JLehp;)Ljava/lang/String; humanReadable
ehq com/mojang/realmsclient/client/FileDownload
	a LOGGER
	b cancelled
	c finished
	d error
	e extracting
	f tempFile
	g resourcePackPath
	h request
	i currentThread
	j requestConfig
	k INVALID_FILE_NAMES
	a ()V cancel
	a (Leja;Ljava/lang/String;Lejx$a;Lnet/minecraft/world/level/storage/Convertable;)V download
	a (Ljava/io/File;)V deletePlayerTag
	a (Ljava/lang/String;)J contentLength
	a (Ljava/lang/String;Ljava/io/File;Lnet/minecraft/world/level/storage/Convertable;)V untarGzipArchive
	b ()Z isFinished
	b (Ljava/lang/String;)Ljava/lang/String; findAvailableFolderName
	c ()Z isError
	d ()Z isExtracting
ehq$a com/mojang/realmsclient/client/FileDownload$DownloadCountingOutputStream
	a listener
	a (Ljava/awt/event/ActionListener;)V setListener
ehq$b com/mojang/realmsclient/client/FileDownload$ProgressListener
	b worldName
	c tempFile
	d levelStorageSource
	e downloadStatus
ehq$c com/mojang/realmsclient/client/FileDownload$ResourcePackProgressListener
	b tempFile
	c downloadStatus
	d worldDownload
ehr com/mojang/realmsclient/client/FileUpload
	a LOGGER
	b MAX_RETRIES
	c UPLOAD_PATH
	d file
	e worldId
	f slotId
	g uploadInfo
	h sessionId
	i username
	j clientVersion
	k uploadStatus
	l cancelled
	m uploadTask
	n requestConfig
	a ()V cancel
	a (I)Lekp; requestUpload
	a (JI)Z shouldRetry
	a (Ljava/util/function/Consumer;)V upload
	a (Lorg/apache/http/HttpResponse;)J getRetryDelaySeconds
	a (Lorg/apache/http/HttpResponse;Lekp$a;)V handleResponse
	a (Lorg/apache/http/client/methods/HttpPost;)V setupRequest
	a (Lorg/apache/http/client/methods/HttpPost;Lorg/apache/http/impl/client/CloseableHttpClient;)V cleanup
	b ()Z isFinished
	b (JI)Lekp; retryUploadAfter
ehr$a com/mojang/realmsclient/client/FileUpload$CustomInputStreamEntity
	a length
	b content
	c uploadStatus
ehs com/mojang/realmsclient/client/Ping
	a ()Ljava/util/List; pingAllRegions
	a (Ljava/lang/String;)I ping
	a ([Lehs$a;)Ljava/util/List; ping
	b ()J now
ehs$a com/mojang/realmsclient/client/Ping$Region
	a US_EAST_1
	b US_WEST_2
	c US_WEST_1
	d EU_WEST_1
	e AP_SOUTHEAST_1
	f AP_SOUTHEAST_2
	g AP_NORTHEAST_1
	h SA_EAST_1
	i name
	j endpoint
	k $VALUES
	a ()[Lehs$a; $values
eht com/mojang/realmsclient/client/RealmsClient
	A PATH_WORLD_UNINVITE
	B PATH_PENDING_INVITES_COUNT
	C PATH_PENDING_INVITES
	D PATH_ACCEPT_INVITE
	E PATH_REJECT_INVITE
	F PATH_UNINVITE_MYSELF
	G PATH_WORLD_UPDATE
	H PATH_SLOT
	I PATH_WORLD_OPEN
	J PATH_WORLD_CLOSE
	K PATH_WORLD_RESET
	L PATH_DELETE_WORLD
	M PATH_WORLD_BACKUPS
	N PATH_WORLD_DOWNLOAD
	O PATH_WORLD_UPLOAD
	P PATH_CLIENT_COMPATIBLE
	Q PATH_TOS_AGREED
	R PATH_NEWS
	S PATH_MARK_NOTIFICATIONS_SEEN
	T PATH_DISMISS_NOTIFICATIONS
	U PATH_STAGE_AVAILABLE
	V GSON
	a currentEnvironment
	b initialized
	c LOGGER
	d sessionId
	e username
	f minecraft
	g WORLDS_RESOURCE_PATH
	h INVITES_RESOURCE_PATH
	i MCO_RESOURCE_PATH
	j SUBSCRIPTION_RESOURCE
	k ACTIVITIES_RESOURCE
	l OPS_RESOURCE
	m REGIONS_RESOURCE
	n TRIALS_RESOURCE
	o NOTIFICATIONS_RESOURCE
	p PATH_INITIALIZE
	q PATH_GET_ACTIVTIES
	r PATH_GET_LIVESTATS
	s PATH_GET_SUBSCRIPTION
	t PATH_OP
	u PATH_PUT_INTO_MINIGAMES_MODE
	v PATH_AVAILABLE
	w PATH_TEMPLATES
	x PATH_WORLD_JOIN
	y PATH_WORLD_GET
	z PATH_WORLD_INVITES
	a ()Leht; create
	a (I)Ljava/lang/String; getHttpCodeDescription
	a (IILeik$c;)Lejc; fetchWorldTemplates
	a (J)Leik; getOwnWorld
	a (JI)Z switchSlot
	a (JILeir;)V updateSlot
	a (JLelc;)Ljava/lang/Boolean; resetWorldWithSeed
	a (JLjava/lang/String;)V uninvite
	a (JLjava/lang/String;Ljava/lang/String;)V initializeWorld
	a (Lehw;)Ljava/lang/String; execute
	a (Leid;)Z isBlocked
	a (Leif;)V sendPingResults
	a (Lemh;)Leht; create
	a (Ljava/lang/String;)V acceptInvitation
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; url
	a (Ljava/util/List;)V notificationsSeen
	b ()V switchToStage
	b (J)Leiw; getActivity
	b (JI)Leja; requestDownloadInfo
	b (JLjava/lang/String;)Leik; invite
	b (JLjava/lang/String;Ljava/lang/String;)V update
	b (Ljava/lang/String;)V rejectInvitation
	b (Ljava/util/List;)V notificationsDismiss
	c ()V switchToProd
	c (J)Leil; join
	c (JLjava/lang/String;)V restoreWorld
	c (Ljava/lang/String;)Ljava/lang/String; url
	c (Ljava/util/List;)Lcom/google/gson/JsonArray; uuidListToJsonArray
	d ()V switchToLocal
	d (J)V uninviteMyselfFrom
	d (JLjava/lang/String;)Ljava/lang/Boolean; putIntoMinigameMode
	e ()Leim; listWorlds
	e (J)Leia; backupsFor
	e (JLjava/lang/String;)Leic; op
	f ()Ljava/util/List; getNotifications
	f (J)Ljava/lang/Boolean; open
	f (JLjava/lang/String;)Leic; deop
	g ()Leip; getLiveStats
	g (J)Ljava/lang/Boolean; close
	g (JLjava/lang/String;)Ljava/lang/Boolean; resetWorldWithTemplate
	h ()Ljava/lang/Boolean; mcoEnabled
	h (J)Leix; subscriptionFor
	h (JLjava/lang/String;)Leiy; requestUploadInfo
	i ()Ljava/lang/Boolean; stageAvailable
	i (J)V deleteWorld
	j ()Leht$a; clientCompatible
	k ()I pendingInvitesCount
	l ()Leie; pendingInvites
	m ()V agreeToTos
	n ()Leii; getNews
	o ()Ljava/lang/Boolean; trialAvailable
eht$a com/mojang/realmsclient/client/RealmsClient$CompatibleVersionResponse
	a COMPATIBLE
	b OUTDATED
	c OTHER
	d $VALUES
	a ()[Leht$a; $values
eht$b com/mojang/realmsclient/client/RealmsClient$Environment
	a PRODUCTION
	b STAGE
	c LOCAL
	d baseUrl
	e protocol
	f $VALUES
	a ()[Leht$b; $values
ehu com/mojang/realmsclient/client/RealmsClientConfig
	a proxy
	a ()Ljava/net/Proxy; getProxy
	a (Ljava/net/Proxy;)V setProxy
ehv com/mojang/realmsclient/client/RealmsError
	a LOGGER
	b errorMessage
	c errorCode
	a ()Ljava/lang/String; getErrorMessage
	a (Ljava/lang/String;)Lehv; parse
	b ()I getErrorCode
ehw com/mojang/realmsclient/client/Request
	a connection
	b url
	c connected
	d DEFAULT_READ_TIMEOUT
	e DEFAULT_CONNECT_TIMEOUT
	a ()I getRetryAfterHeader
	a (Ljava/io/InputStream;)Ljava/lang/String; read
	a (Ljava/lang/String;)Lehw; get
	a (Ljava/lang/String;II)Lehw; get
	a (Ljava/lang/String;Ljava/lang/String;)V cookie
	a (Ljava/lang/String;Ljava/lang/String;II)Lehw; post
	a (Ljava/net/HttpURLConnection;)I getRetryAfterHeader
	a (Ljava/net/HttpURLConnection;Ljava/lang/String;)Ljava/lang/String; getHeader
	a (Ljava/net/HttpURLConnection;Ljava/lang/String;Ljava/lang/String;)V cookie
	b ()I responseCode
	b (Ljava/lang/String;)Lehw; delete
	b (Ljava/lang/String;Ljava/lang/String;)Lehw; header
	b (Ljava/lang/String;Ljava/lang/String;II)Lehw; put
	c ()Ljava/lang/String; text
	c (Ljava/lang/String;)Ljava/lang/String; getHeader
	c (Ljava/lang/String;Ljava/lang/String;)Lehw; post
	d ()Lehw; connect
	d (Ljava/lang/String;Ljava/lang/String;)Lehw; put
	e ()Lehw; doConnect
	f ()V dispose
ehw$a com/mojang/realmsclient/client/Request$Delete
	e ()Lehw; doConnect
	f ()Lehw$a; doConnect
ehw$b com/mojang/realmsclient/client/Request$Get
	e ()Lehw; doConnect
	f ()Lehw$b; doConnect
ehw$c com/mojang/realmsclient/client/Request$Post
	c content
	e ()Lehw; doConnect
	f ()Lehw$c; doConnect
ehw$d com/mojang/realmsclient/client/Request$Put
	c content
	e ()Lehw; doConnect
	f ()Lehw$d; doConnect
ehx com/mojang/realmsclient/client/UploadStatus
	a bytesWritten
	b totalBytes
ehz com/mojang/realmsclient/dto/Backup
	a backupId
	b lastModifiedDate
	c size
	d metadata
	e changeList
	f LOGGER
	g uploadedVersion
	a ()Z isUploadedVersion
	a (Lcom/google/gson/JsonElement;)Lehz; parse
	a (Ljava/lang/String;)Ljava/lang/String; format
	a (Z)V setUploadedVersion
eia com/mojang/realmsclient/dto/BackupList
	a backups
	b LOGGER
	a (Ljava/lang/String;)Leia; parse
eib com/mojang/realmsclient/dto/GuardedSerializer
	a gson
	a (Lcom/google/gson/JsonElement;)Ljava/lang/String; toJson
	a (Leit;)Ljava/lang/String; toJson
	a (Ljava/lang/String;Ljava/lang/Class;)Leit; fromJson
eic com/mojang/realmsclient/dto/Ops
	a ops
	a (Ljava/lang/String;)Leic; parse
eid com/mojang/realmsclient/dto/PendingInvite
	a invitationId
	b worldName
	c worldOwnerName
	d worldOwnerUuid
	e date
	f LOGGER
	a (Lcom/google/gson/JsonObject;)Leid; parse
eie com/mojang/realmsclient/dto/PendingInvitesList
	a pendingInvites
	b LOGGER
	a (Ljava/lang/String;)Leie; parse
eif com/mojang/realmsclient/dto/PingResult
	a pingResults
	b worldIds
eig com/mojang/realmsclient/dto/PlayerInfo
	a name
	b uuid
	c operator
	d accepted
	e online
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)V setName
	a (Z)V setOperator
	b ()Ljava/lang/String; getUuid
	b (Ljava/lang/String;)V setUuid
	b (Z)V setAccepted
	c ()Z isOperator
	c (Z)V setOnline
	d ()Z getAccepted
	e ()Z getOnline
eih com/mojang/realmsclient/dto/RealmsDescriptionDto
	a name
	b description
eii com/mojang/realmsclient/dto/RealmsNews
	a newsLink
	b LOGGER
	a (Ljava/lang/String;)Leii; parse
eij com/mojang/realmsclient/dto/RealmsNotification
	a LOGGER
	b NOTIFICATION_UUID
	c DISMISSABLE
	d SEEN
	e TYPE
	f VISIT_URL
	g uuid
	h dismissable
	i seen
	j type
	a ()Z seen
	a (Lcom/google/gson/JsonObject;)Leij; parse
	a (Ljava/lang/String;)Ljava/util/List; parseList
	b ()Z dismissable
	c ()Ljava/util/UUID; uuid
eij$a com/mojang/realmsclient/dto/RealmsNotification$VisitUrl
	a URL
	b BUTTON_TEXT
	c MESSAGE
	d url
	e buttonText
	f message
	a (Leij;Lcom/google/gson/JsonObject;)Leij$a; parse
	a (Letd;)Leoc; buildOpenLinkButton
	d ()Lnet/minecraft/network/chat/IChatBaseComponent; getMessage
eik com/mojang/realmsclient/dto/RealmsServer
	a id
	b remoteSubscriptionId
	c name
	d motd
	e state
	f owner
	g ownerUUID
	h players
	i slots
	j expired
	k expiredTrial
	l daysLeft
	m worldType
	n activeSlot
	o minigameName
	p minigameId
	q minigameImage
	r serverPing
	s LOGGER
	a ()Ljava/lang/String; getDescription
	a (I)Ljava/lang/String; getWorldName
	a (Lcom/google/gson/JsonArray;)Ljava/util/List; parseInvited
	a (Lcom/google/gson/JsonObject;)Leik; parse
	a (Leik;)V sortInvited
	a (Leio;)V updateServerPing
	a (Ljava/lang/String;)V setName
	a (Ljava/util/Map;)Ljava/util/Map; cloneSlots
	b ()Ljava/lang/String; getName
	b (Lcom/google/gson/JsonArray;)Ljava/util/Map; parseSlots
	b (Ljava/lang/String;)V setDescription
	c ()Ljava/lang/String; getMinigameName
	c (Ljava/lang/String;)Leik; parse
	d ()Leik; clone
	d (Ljava/lang/String;)Lfdq; toServerData
	e ()Ljava/util/Map; createEmptySlots
	e (Ljava/lang/String;)Leik$b; getState
	f (Ljava/lang/String;)Leik$c; getWorldType
eik$a com/mojang/realmsclient/dto/RealmsServer$McoServerComparator
	a refOwner
	a (Leik;Leik;)I compare
eik$b com/mojang/realmsclient/dto/RealmsServer$State
	a CLOSED
	b OPEN
	c UNINITIALIZED
	d $VALUES
	a ()[Leik$b; $values
eik$c com/mojang/realmsclient/dto/RealmsServer$WorldType
	a NORMAL
	b MINIGAME
	c ADVENTUREMAP
	d EXPERIENCE
	e INSPIRATION
	f $VALUES
	a ()[Leik$c; $values
eil com/mojang/realmsclient/dto/RealmsServerAddress
	a address
	b resourcePackUrl
	c resourcePackHash
	d LOGGER
	a (Ljava/lang/String;)Leil; parse
eim com/mojang/realmsclient/dto/RealmsServerList
	a servers
	b LOGGER
	a (Ljava/lang/String;)Leim; parse
ein com/mojang/realmsclient/dto/RealmsServerPing
	a nrOfPlayers
	b playerList
eio com/mojang/realmsclient/dto/RealmsServerPlayerList
	a serverId
	b players
	c LOGGER
	d JSON_PARSER
	a (Lcom/google/gson/JsonArray;)Ljava/util/List; parsePlayers
	a (Lcom/google/gson/JsonObject;)Leio; parse
eip com/mojang/realmsclient/dto/RealmsServerPlayerLists
	a servers
	b LOGGER
	a (Ljava/lang/String;)Leip; parse
eiq com/mojang/realmsclient/dto/RealmsText
	a TRANSLATION_KEY
	b ARGS
	c translationKey
	d args
	a (Lcom/google/gson/JsonObject;)Leiq; parse
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)Lnet/minecraft/network/chat/IChatBaseComponent; createComponent
eir com/mojang/realmsclient/dto/RealmsWorldOptions
	a pvp
	b spawnAnimals
	c spawnMonsters
	d spawnNPCs
	e spawnProtection
	f commandBlocks
	g forceGameMode
	h difficulty
	i gameMode
	j templateId
	k templateImage
	l empty
	m slotName
	n DEFAULT_FORCE_GAME_MODE
	o DEFAULT_PVP
	p DEFAULT_SPAWN_ANIMALS
	q DEFAULT_SPAWN_MONSTERS
	r DEFAULT_SPAWN_NPCS
	s DEFAULT_SPAWN_PROTECTION
	t DEFAULT_COMMAND_BLOCKS
	u DEFAULT_DIFFICULTY
	v DEFAULT_GAME_MODE
	w DEFAULT_SLOT_NAME
	x DEFAULT_TEMPLATE_ID
	y DEFAULT_TEMPLATE_IMAGE
	a ()Leir; createDefaults
	a (I)Ljava/lang/String; getSlotName
	a (Lcom/google/gson/JsonObject;)Leir; parse
	a (Z)V setEmpty
	b ()Leir; createEmptyDefaults
	b (I)Ljava/lang/String; getDefaultSlotName
	c ()Ljava/lang/String; toJson
	d ()Leir; clone
eis com/mojang/realmsclient/dto/RealmsWorldResetDto
	a seed
	b worldTemplateId
	c levelType
	d generateStructures
eit com/mojang/realmsclient/dto/ReflectionBasedSerialization
eiu com/mojang/realmsclient/dto/RegionPingResult
	a regionName
	b ping
	a ()I ping
eiv com/mojang/realmsclient/dto/ServerActivity
	a profileUuid
	b joinTime
	c leaveTime
	a (Lcom/google/gson/JsonObject;)Leiv; parse
eiw com/mojang/realmsclient/dto/ServerActivityList
	a periodInMillis
	b serverActivities
	a (Ljava/lang/String;)Leiw; parse
eix com/mojang/realmsclient/dto/Subscription
	a startDate
	b daysLeft
	c type
	d LOGGER
	a (Ljava/lang/String;)Leix; parse
	b (Ljava/lang/String;)Leix$a; typeFrom
eix$a com/mojang/realmsclient/dto/Subscription$SubscriptionType
	a NORMAL
	b RECURRING
	c $VALUES
	a ()[Leix$a; $values
eiy com/mojang/realmsclient/dto/UploadInfo
	a LOGGER
	b DEFAULT_SCHEMA
	c DEFAULT_PORT
	d URI_SCHEMA_PATTERN
	e worldClosed
	f token
	g uploadEndpoint
	a ()Ljava/lang/String; getToken
	a (II)I selectPortOrDefault
	a (Ljava/lang/String;)Leiy; parse
	a (Ljava/lang/String;I)Ljava/net/URI; assembleUri
	a (Ljava/lang/String;Ljava/util/regex/Matcher;)Ljava/lang/String; ensureEndpointSchema
	b ()Ljava/net/URI; getUploadEndpoint
	b (Ljava/lang/String;)Ljava/lang/String; createRequest
	c ()Z isWorldClosed
eiz com/mojang/realmsclient/dto/ValueObject
	a (Ljava/lang/reflect/Field;)Ljava/lang/String; getName
	b (Ljava/lang/reflect/Field;)Z isStatic
eja com/mojang/realmsclient/dto/WorldDownload
	a downloadLink
	b resourcePackUrl
	c resourcePackHash
	d LOGGER
	a (Ljava/lang/String;)Leja; parse
ejb com/mojang/realmsclient/dto/WorldTemplate
	a id
	b name
	c version
	d author
	e link
	f image
	g trailer
	h recommendedPlayers
	i type
	j LOGGER
	a (Lcom/google/gson/JsonObject;)Lejb; parse
ejb$a com/mojang/realmsclient/dto/WorldTemplate$WorldTemplateType
	a WORLD_TEMPLATE
	b MINIGAME
	c ADVENTUREMAP
	d EXPERIENCE
	e INSPIRATION
	f $VALUES
	a ()[Lejb$a; $values
ejc com/mojang/realmsclient/dto/WorldTemplatePaginatedList
	a templates
	b page
	c size
	d total
	e LOGGER
	a ()Z isLastPage
	a (Ljava/lang/String;)Lejc; parse
eje com/mojang/realmsclient/exception/RealmsDefaultUncaughtExceptionHandler
	a logger
ejf com/mojang/realmsclient/exception/RealmsHttpException
ejg com/mojang/realmsclient/exception/RealmsServiceException
	a httpResultCode
	b rawResponse
	c realmsError
	a (I)I realmsErrorCodeOrDefault
ejh com/mojang/realmsclient/exception/RetryCallException
	d DEFAULT_DELAY
	e delaySeconds
ejj com/mojang/realmsclient/gui/ErrorCallback
	a (Ljava/lang/String;)V error
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V error
ejk com/mojang/realmsclient/gui/RealmsDataFetcher
	a dataFetcher
	b notificationsTask
	c serverListUpdateTask
	d liveStatsTask
	e pendingInvitesTask
	f trialAvailabilityTask
	g newsTask
	h newsManager
ejl com/mojang/realmsclient/gui/RealmsNewsManager
	a newsLocalStorage
	b hasUnreadNews
	c newsLink
	a ()Z hasUnreadNews
	a (Leii;)V updateUnreadNews
	b ()Ljava/lang/String; newsLink
	b (Leii;)Lekx$a; updateNewsStorage
ejm com/mojang/realmsclient/gui/RealmsServerList
	a minecraft
	b removedServers
	c servers
	a (Leik;)Ljava/util/List; removeItem
	a (Ljava/util/List;)Ljava/util/List; updateServersList
ejn com/mojang/realmsclient/gui/RealmsWorldSlotButton
	E SLOT_ACTIVE_TOOLTIP
	F SWITCH_TO_MINIGAME_SLOT_TOOLTIP
	G SWITCH_TO_WORLD_SLOT_TOOLTIP
	H serverDataProvider
	I toolTipSetter
	J slotIndex
	K state
	a SLOT_FRAME_LOCATION
	b EMPTY_SLOT_LOCATION
	c CHECK_MARK_LOCATION
	d DEFAULT_WORLD_SLOT_1
	e DEFAULT_WORLD_SLOT_2
	f DEFAULT_WORLD_SLOT_3
	a ()Lejn$b; getState
	a (Lehe;II)V renderCheckMark
	a (Lehe;IIIIZLjava/lang/String;IJLjava/lang/String;ZZLejn$a;Lnet/minecraft/network/chat/IChatBaseComponent;)V drawSlotFrame
	a (Leik;Ljava/lang/String;ZZLejn$a;)Lcom/mojang/datafixers/util/Pair; getTooltipAndNarration
	a (Leik;ZZ)Lejn$a; getAction
	b ()V tick
	b (Lehe;IIF)V renderWidget
ejn$a com/mojang/realmsclient/gui/RealmsWorldSlotButton$Action
	a NOTHING
	b SWITCH_SLOT
	c JOIN
	d $VALUES
	a ()[Lejn$a; $values
ejn$b com/mojang/realmsclient/gui/RealmsWorldSlotButton$State
	a empty
	b minigame
	c action
	d isCurrentlyActiveSlot
	e slotName
	f imageId
	g image
	h actionPrompt
ejo com/mojang/realmsclient/gui/RowButton
	a width
	b height
	c xOffset
	d yOffset
	a ()I getRight
	a (I)V onClick
	a (Lehe;IIII)V drawForRowAt
	a (Lehe;IIZ)V draw
	a (Lehe;Ljava/util/List;Lfys;IIII)V drawButtonsInRow
	a (Lfys;Leov$a;Ljava/util/List;IDD)V rowButtonMouseClicked
	b ()I getBottom
ejq com/mojang/realmsclient/gui/screens/RealmsBackupInfoScreen
	J backupInfoList
	a TEXT_UNKNOWN
	b lastScreen
	c backup
	a (III)Z keyPressed
	a (Lehe;IIF)V render
	a (Ljava/lang/String;)Lnet/minecraft/network/chat/IChatBaseComponent; gameDifficultyMetadata
	a (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/network/chat/IChatBaseComponent; checkForSpecificMetadata
	b ()V init
	b (Ljava/lang/String;)Lnet/minecraft/network/chat/IChatBaseComponent; gameModeMetadata
	f ()V tick
ejq$a com/mojang/realmsclient/gui/screens/RealmsBackupInfoScreen$BackupInfoList
ejq$b com/mojang/realmsclient/gui/screens/RealmsBackupInfoScreen$BackupInfoListEntry
	b key
	c value
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarration
	a (Lehe;IIIIIIIZF)V render
ejr com/mojang/realmsclient/gui/screens/RealmsBackupScreen
	J RESTORE_TOOLTIP
	K HAS_CHANGES_TOOLTIP
	L TITLE
	M NO_BACKUPS_LABEL
	N lastScrollPosition
	O lastScreen
	P backups
	Q toolTip
	R backupObjectSelectionList
	S selectedBackup
	T slotId
	U downloadButton
	V restoreButton
	W changesButton
	X noBackups
	Y serverData
	Z UPLOADED_KEY
	a LOGGER
	b PLUS_ICON_LOCATION
	c RESTORE_ICON_LOCATION
	B ()V generateChangeList
	C ()V updateButtonStates
	D ()Z shouldChangesButtonBeVisible
	E ()Z shouldRestoreButtonBeVisible
	F ()V downloadClicked
	G ()V downloadWorldData
	H ()V restore
	a (I)V restoreClicked
	a (III)Z keyPressed
	a (Lehe;IIF)V render
	a (Lehe;Lnet/minecraft/network/chat/IChatBaseComponent;II)V renderMousehoverTooltip
	a (Lehz;Ljava/lang/String;)V addToChangeList
	b ()V init
ejr$a com/mojang/realmsclient/gui/screens/RealmsBackupScreen$BackupObjectSelectionList
	a ()I getMaxPosition
	a (DDI)Z mouseClicked
	a (I)V selectItem
	a (IIDDII)V itemClicked
	a (Lehe;)V renderBackground
	a (Lehz;)V addEntry
	a (Lejr$b;)V setSelected
	a (Lenw$a;)V setSelected
	b ()I getRowWidth
	b (I)V selectInviteListItem
	c ()I getScrollbarPosition
ejr$b com/mojang/realmsclient/gui/screens/RealmsBackupScreen$Entry
	b backup
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarration
	a (Lehe;IIII)V drawRestore
	a (Lehe;IIIIIIIZF)V render
	a (Lehe;Lehz;IIII)V renderBackupItem
	a (Ljava/util/Date;)Ljava/lang/String; getMediumDatePresentation
	b (Lehe;IIII)V drawInfo
ejs com/mojang/realmsclient/gui/screens/RealmsBrokenWorldScreen
	J mainScreen
	K serverData
	L serverId
	M message
	N leftX
	O rightX
	P slotsThatHasBeenDownloaded
	Q animTick
	a LOGGER
	b DEFAULT_BUTTON_WIDTH
	c lastScreen
	B ()V addButtons
	C ()V backButtonClicked
	D ()Z isMinigame
	a (I)I getFramePositionX
	a (III)Z keyPressed
	a (J)V fetchServerData
	a (Lehe;IIF)V render
	a (Lehe;IIIIZLjava/lang/String;IJLjava/lang/String;Z)V drawSlotFrame
	aw_ ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarrationMessage
	b ()V init
	b (I)V downloadWorld
	c ()V doSwitchOrReset
	f ()V tick
ejt com/mojang/realmsclient/gui/screens/RealmsClientOutdatedScreen
	J lastScreen
	a INCOMPATIBLE_TITLE
	b INCOMPATIBLE_MESSAGES_SNAPSHOT
	c INCOMPATIBLE_MESSAGES
	B ()[Lnet/minecraft/network/chat/IChatBaseComponent; getMessages
	a (III)Z keyPressed
	a (Lehe;IIF)V render
	b ()V init
eju com/mojang/realmsclient/gui/screens/RealmsConfigureWorldScreen
	J EXPIRED_ICON_LOCATION
	K EXPIRES_SOON_ICON_LOCATION
	L WORLD_LIST_TITLE
	M TITLE
	N MINIGAME_PREFIX
	O SERVER_EXPIRED_TOOLTIP
	P SERVER_EXPIRING_SOON_TOOLTIP
	Q SERVER_EXPIRING_IN_DAY_TOOLTIP
	R SERVER_OPEN_TOOLTIP
	S SERVER_CLOSED_TOOLTIP
	T DEFAULT_BUTTON_WIDTH
	U DEFAULT_BUTTON_OFFSET
	V toolTip
	W lastScreen
	X serverData
	Y serverId
	Z leftX
	a LOGGER
	aa rightX
	ab playersButton
	ac settingsButton
	ad subscriptionButton
	ae optionsButton
	af backupButton
	ag resetWorldButton
	ah switchMinigameButton
	ai stateChanged
	aj animTick
	ak clicks
	al slotButtonList
	b ON_ICON_LOCATION
	c OFF_ICON_LOCATION
	B ()V backButtonClicked
	C ()V disableButtons
	D ()V switchToMinigame
	E ()Z isMinigame
	F ()V hideRegularButtons
	G ()V hideMinigameButtons
	a (I)Lejn; addSlotButton
	a (II)I centerButton
	a (III)Z keyPressed
	a (ILeik;)V switchToFullSlot
	a (J)V fetchServerData
	a (Lehe;IIF)V render
	a (Lehe;Lnet/minecraft/network/chat/IChatBaseComponent;II)V renderMousehoverTooltip
	a (Leik;)V joinRealm
	a (Leir;)V saveSlotSettings
	a (Lejb;)V templateSelectionCallback
	a (Leoc;)V hide
	a (Letd;)V closeTheWorld
	a (Ljava/lang/String;Ljava/lang/String;)V saveSettings
	a (ZLetd;)V openTheWorld
	b ()V init
	b (I)I leftButton
	b (ILeik;)V switchToEmptySlot
	b (Leoc;)V show
	c ()V stateChanged
	c (I)I frame
	c (Lehe;IIII)V drawServerStatus
	c (Lehe;IIIII)V drawExpiring
	d ()Leju; getNewScreen
	d (Lehe;IIII)V drawExpired
	e (Lehe;IIII)V drawOpen
	f ()V tick
	f (Lehe;IIII)V drawClose
ejv com/mojang/realmsclient/gui/screens/RealmsConfirmScreen
	a callback
	b title1
	c title2
	a (Lehe;IIF)V render
	b ()V init
ejw com/mojang/realmsclient/gui/screens/RealmsCreateRealmScreen
	J lastScreen
	K nameBox
	L descriptionBox
	M createButton
	a NAME_LABEL
	b DESCRIPTION_LABEL
	c server
	B ()V createWorld
	C ()Z valid
	a (CI)Z charTyped
	a (III)Z keyPressed
	a (Lehe;IIF)V render
	b ()V init
	f ()V tick
ejx com/mojang/realmsclient/gui/screens/RealmsDownloadLatestWorldScreen
	J BAR_TOP
	K BAR_BOTTOM
	L BAR_BORDER
	M lastScreen
	N worldDownload
	O downloadTitle
	P narrationRateLimiter
	Q cancelButton
	R worldName
	S downloadStatus
	T errorMessage
	U status
	V progress
	W cancelled
	X showDots
	Y finished
	Z extracting
	a LOGGER
	aa previousWrittenBytes
	ab previousTimeSnapshot
	ac bytesPersSecond
	ad animTick
	ae DOTS
	af dotIndex
	ag checked
	ah callback
	b DOWNLOAD_LOCK
	c BAR_WIDTH
	B ()V checkDownloadSize
	C ()Lnet/minecraft/network/chat/IChatBaseComponent; createProgressNarrationMessage
	D ()V backButtonClicked
	E ()V downloadSave
	F ()V downloadCancelled
	a (III)Z keyPressed
	a (Lehe;IIF)V render
	a (Lehe;J)V drawDownloadSpeed0
	a (Ljava/lang/String;)J getContentLength
	b ()V init
	c (Lehe;)V drawDots
	d (Lehe;)V drawProgressBar
	e (Lehe;)V drawDownloadSpeed
	f ()V tick
ejx$a com/mojang/realmsclient/gui/screens/RealmsDownloadLatestWorldScreen$DownloadStatus
	a bytesWritten
	b totalBytes
ejy com/mojang/realmsclient/gui/screens/RealmsGenericErrorScreen
	a nextScreen
	b lines
	c line2Split
	a (Lehe;IIF)V render
	a (Lejg;)Lcom/mojang/datafixers/util/Pair; errorMessage
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)Lcom/mojang/datafixers/util/Pair; errorMessage
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Lnet/minecraft/network/chat/IChatBaseComponent;)Lcom/mojang/datafixers/util/Pair; errorMessage
	aw_ ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarrationMessage
	b ()V init
ejz com/mojang/realmsclient/gui/screens/RealmsInviteScreen
	J profileName
	K serverData
	L configureScreen
	M lastScreen
	N errorMsg
	a LOGGER
	b NAME_LABEL
	c NO_SUCH_PLAYER_ERROR_TEXT
	B ()V onInvite
	a (III)Z keyPressed
	a (Lehe;IIF)V render
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V showError
	b ()V init
	f ()V tick
ek$a net/minecraft/commands/arguments/OperationArgument$Operation
ek$b net/minecraft/commands/arguments/OperationArgument$SimpleOperation
eka com/mojang/realmsclient/gui/screens/RealmsLongConfirmationScreen
	J line3
	K yesNoQuestion
	a callback
	b type
	c line2
	a (III)Z keyPressed
	a (Lehe;IIF)V render
	aw_ ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarrationMessage
	b ()V init
eka$a com/mojang/realmsclient/gui/screens/RealmsLongConfirmationScreen$Type
	a Warning
	b Info
	c colorCode
	d text
	e $VALUES
	a ()[Leka$a; $values
ekb com/mojang/realmsclient/gui/screens/RealmsLongRunningMcoTaskScreen
	J lastScreen
	K title
	L errorMessage
	M aborted
	N animTicks
	O task
	P buttonLength
	Q cancelOrBackButton
	a SYMBOLS
	b REPEATED_NARRATOR
	c LOGGER
	B ()V cancelOrBackButtonClicked
	a (III)Z keyPressed
	a (Lehe;IIF)V render
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V error
	b ()V init
	b (Lnet/minecraft/network/chat/IChatBaseComponent;)V setTitle
	c ()Z aborted
	f ()V tick
ekc com/mojang/realmsclient/gui/screens/RealmsNotificationsScreen
	J UNSEEN_NOTIFICATION_ICON_LOCATION
	K realmsDataSubscription
	L currentConfiguration
	M numberOfPendingInvites
	N checkedMcoAvailability
	O trialAvailable
	P validClient
	Q hasUnreadNews
	R hasUnseenNotifications
	S showAll
	T onlyNotifications
	a INVITE_ICON_LOCATION
	b TRIAL_ICON_LOCATION
	c NEWS_ICON_LOCATION
	B ()Lekc$a; getConfiguration
	C ()Z getRealmsNotificationsEnabled
	D ()Z inTitleScreen
	E ()V checkIfMcoEnabled
	a (Lehe;II)V drawIcons
	a (Lehe;IIF)V render
	a (Lejk;Lekr$c;)V addNewsAndInvitesSubscriptions
	aA_ ()V added
	b ()V init
	b (Lejk;Lekr$c;)V addNotificationsSubscriptions
	f ()V tick
ekc$a com/mojang/realmsclient/gui/screens/RealmsNotificationsScreen$DataFetcherConfiguration
	a ()Z showOldNotifications
	a (Lejk;)Lekr$c; initDataFetcher
ekd com/mojang/realmsclient/gui/screens/RealmsParentalConsentScreen
	a MESSAGE
	b nextScreen
	c messageLines
	a (Lehe;IIF)V render
	aw_ ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarrationMessage
	b ()V init
eke com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen
	J NO_PENDING_INVITES_TEXT
	K ACCEPT_INVITE_TOOLTIP
	L REJECT_INVITE_TOOLTIP
	M lastScreen
	N toolTip
	O loaded
	P pendingInvitationSelectionList
	Q selectedInvite
	R acceptButton
	S rejectButton
	a LOGGER
	b ACCEPT_ICON_LOCATION
	c REJECT_ICON_LOCATION
	B ()V updateButtonStates
	a (I)V updateList
	a (III)Z keyPressed
	a (Lehe;IIF)V render
	a (Lehe;Lnet/minecraft/network/chat/IChatBaseComponent;II)V renderMousehoverTooltip
	b ()V init
	b (I)V reject
	c (I)V accept
	i (I)Z shouldAcceptAndRejectButtonBeVisible
eke$a com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$Entry
	b TEXT_LEFT
	c pendingInvite
	d rowButtons
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarration
	a (DDI)Z mouseClicked
	a (Lehe;IIIIIIIZF)V render
	a (Lehe;Leid;IIII)V renderPendingInvitationItem
eke$a$a com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$Entry$AcceptRowButton
	a (I)V onClick
	a (Lehe;IIZ)V draw
eke$a$b com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$Entry$RejectRowButton
	a (I)V onClick
	a (Lehe;IIZ)V draw
eke$b com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$PendingInvitationSelectionList
	a ()I getMaxPosition
	a (I)V selectItem
	a (Lehe;)V renderBackground
	a (Leke$a;)V setSelected
	a (Lenw$a;)V setSelected
	b ()I getRowWidth
	b (I)V removeAtIndex
	c (I)V selectInviteListItem
ekf com/mojang/realmsclient/gui/screens/RealmsPlayerScreen
	J CROSS_ICON_LOCATION
	K OPTIONS_BACKGROUND
	L NORMAL_USER_TOOLTIP
	M OP_TOOLTIP
	N REMOVE_ENTRY_TOOLTIP
	O INVITED_LABEL
	P toolTip
	Q lastScreen
	R serverData
	S invitedObjectSelectionList
	T column1X
	U columnWidth
	V column2X
	W removeButton
	X opdeopButton
	Y selectedInvitedIndex
	Z selectedInvited
	a LOGGER
	aa player
	ab stateChanged
	ac hoveredUserAction
	b OP_ICON_LOCATION
	c USER_ICON_LOCATION
	B ()V updateButtonStates
	C ()V backButtonClicked
	a (III)Z keyPressed
	a (Lehe;IIF)V render
	a (Lehe;Lnet/minecraft/network/chat/IChatBaseComponent;II)V renderMousehoverTooltip
	a (Leic;)V updateOps
	b ()V init
	c (Lehe;IIII)V drawRemoveIcon
	d (Lehe;IIII)V drawOpped
	e (Lehe;IIII)V drawNormal
	i (I)Z shouldRemoveAndOpdeopButtonBeVisible
	j (I)V op
	k (I)V deop
	l (I)V uninvite
	m (I)V deleteFromInvitedList
ekf$a com/mojang/realmsclient/gui/screens/RealmsPlayerScreen$Entry
	b playerInfo
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarration
	a (Lehe;IIIIIIIZF)V render
	a (Lehe;Leig;IIII)V renderInvitedItem
ekf$b com/mojang/realmsclient/gui/screens/RealmsPlayerScreen$InvitedObjectSelectionList
	a ()I getMaxPosition
	a (DDI)Z mouseClicked
	a (I)V selectItem
	a (IIDDII)V itemClicked
	a (Lehe;)V renderBackground
	a (Leig;)V addEntry
	a (Lekf$a;)V setSelected
	a (Lenw$a;)V setSelected
	b ()I getRowWidth
	b (I)V selectInviteListItem
	c ()I getScrollbarPosition
ekf$c com/mojang/realmsclient/gui/screens/RealmsPlayerScreen$UserAction
	a TOGGLE_OP
	b REMOVE
	c NONE
	d $VALUES
	a ()[Lekf$c; $values
ekg com/mojang/realmsclient/gui/screens/RealmsResetNormalWorldScreen
	J levelType
	K generateStructures
	L buttonTitle
	a SEED_LABEL
	b callback
	c seedEdit
	a (Lehe;IIF)V render
	ay_ ()V onClose
	b ()V init
	f ()V tick
ekh com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen
	J serverData
	K subtitle
	L buttonTitle
	M subtitleColor
	N SLOT_FRAME_LOCATION
	O UPLOAD_LOCATION
	P ADVENTURE_MAP_LOCATION
	Q SURVIVAL_SPAWN_LOCATION
	R NEW_WORLD_LOCATION
	S EXPERIENCE_LOCATION
	T INSPIRATION_LOCATION
	U templates
	V adventuremaps
	W experiences
	X inspirations
	Y resetTitle
	Z resetWorldRunnable
	a slot
	aa callback
	b LOGGER
	c lastScreen
	a (I)V setSlot
	a (III)Z keyPressed
	a (Lehe;IIF)V render
	a (Lehe;IILnet/minecraft/network/chat/IChatBaseComponent;Lnet/minecraft/resources/MinecraftKey;ZZ)V drawFrame
	a (Lejb;)V templateSelectionCallback
	a (Lelc;)V generationSelectionCallback
	a (Leli;)V startTask
	a (Ljava/lang/Runnable;)V switchSlot
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V setResetTitle
	aw_ ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarrationMessage
	b ()V init
	b (I)I frame
	b (Ljava/lang/Runnable;)V resetWorld
ekh$a com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen$FrameButton
	b image
	b (Lehe;IIF)V renderWidget
eki com/mojang/realmsclient/gui/screens/RealmsSelectFileToUploadScreen
	J CHEATS_TEXT
	K DATE_FORMAT
	L lastScreen
	M worldId
	N slotId
	O uploadButton
	P levelList
	Q selectedWorld
	R worldSelectionList
	S callback
	a LOGGER
	b WORLD_TEXT
	c HARDCORE_TEXT
	B ()V loadLevelList
	C ()V upload
	a (III)Z keyPressed
	a (Lehe;IIF)V render
	a (Lnet/minecraft/world/level/storage/WorldInfo;)Lnet/minecraft/network/chat/IChatBaseComponent; gameModeName
	aw_ ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarrationMessage
	b ()V init
	b (Lnet/minecraft/world/level/storage/WorldInfo;)Ljava/lang/String; formatLastPlayed
eki$a com/mojang/realmsclient/gui/screens/RealmsSelectFileToUploadScreen$Entry
	b levelSummary
	c name
	d id
	e info
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarration
	a (DDI)Z mouseClicked
	a (Lehe;III)V renderItem
	a (Lehe;IIIIIIIZF)V render
eki$b com/mojang/realmsclient/gui/screens/RealmsSelectFileToUploadScreen$WorldSelectionList
	a ()I getMaxPosition
	a (Lehe;)V renderBackground
	a (Leki$a;)V setSelected
	a (Lenw$a;)V setSelected
	a (Lnet/minecraft/world/level/storage/WorldInfo;)V addEntry
ekj com/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen
	J SLOT_FRAME_LOCATION
	K PUBLISHER_LINK_TOOLTIP
	L TRAILER_LINK_TOOLTIP
	M callback
	N worldTemplateObjectSelectionList
	O selectedTemplate
	P selectButton
	Q trailerButton
	R publisherButton
	S toolTip
	T currentLink
	U worldType
	V clicks
	W warning
	X warningURL
	Y displayWarning
	Z hoverWarning
	a LOGGER
	aa noTemplatesMessage
	b LINK_ICON
	c TRAILER_ICON
	B ()V updateButtonStates
	C ()Z shouldSelectButtonBeActive
	D ()Z shouldPublisherBeVisible
	E ()Lejb; getSelectedTemplate
	F ()Z shouldTrailerBeVisible
	G ()V selectTemplate
	H ()Z hasValidTemplate
	I ()V onTrailer
	J ()V onPublish
	a (DDI)Z mouseClicked
	a (Lehe;IIF)V render
	a (Lehe;IILjava/util/List;)V renderMultilineMessage
	a (Lehe;Lnet/minecraft/network/chat/IChatBaseComponent;II)V renderMousehoverTooltip
	a (Lejc;)V fetchTemplatesAsync
	a (Lejc;Leht;)Lcom/mojang/datafixers/util/Either; fetchTemplates
	a ([Lnet/minecraft/network/chat/IChatBaseComponent;)V setWarning
	aw_ ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarrationMessage
	ay_ ()V onClose
	b ()V init
	f ()V tick
ekj$a com/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen$Entry
	b template
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarration
	a (Lehe;IIIIIIIZF)V render
	a (Lehe;IIIILejb;)V drawImage
	a (Lehe;IIIILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V drawIcons
	a (Lehe;Lejb;IIII)V renderWorldTemplateItem
ekj$b com/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen$WorldTemplateObjectSelectionList
	a ()I getMaxPosition
	a (DDI)Z mouseClicked
	a (Lehe;)V renderBackground
	a (Lejb;)V addEntry
	a (Lekj$a;)V setSelected
	a (Lenw$a;)V setSelected
	b ()I getRowWidth
	b (I)Lejb; get
	d ()Z isEmpty
	e ()Ljava/util/List; getTemplates
ekk com/mojang/realmsclient/gui/screens/RealmsSettingsScreen
	J configureWorldScreen
	K serverData
	L doneButton
	M descEdit
	N nameEdit
	a COMPONENT_WIDTH
	b NAME_LABEL
	c DESCRIPTION_LABEL
	a (III)Z keyPressed
	a (Lehe;IIF)V render
	b ()V init
	e ()V save
	f ()V tick
ekl com/mojang/realmsclient/gui/screens/RealmsSlotOptionsScreen
	J DEFAULT_DIFFICULTY
	K DEFAULT_GAME_MODE
	L NAME_LABEL
	M SPAWN_PROTECTION_TEXT
	N SPAWN_WARNING_TITLE
	O nameEdit
	P column1X
	Q columnWidth
	R options
	S worldType
	T difficulty
	U gameMode
	V defaultSlotName
	W worldName
	X pvp
	Y spawnNPCs
	Z spawnAnimals
	a DIFFICULTIES
	aa spawnMonsters
	ab spawnProtection
	ac commandBlocks
	ad forceGameMode
	ae spawnProtectionButton
	b GAME_MODES
	c parent
	B ()V saveSettings
	a (III)Z keyPressed
	a (Lehe;IIF)V render
	a (Ljava/lang/String;)V setWorldName
	a (Ljava/util/List;II)Ljava/lang/Object; findByIndex
	a (Ljava/util/List;Ljava/lang/Object;I)I findIndex
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Ljava/util/function/Consumer;)Leoj$b; confirmDangerousOption
	aw_ ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarrationMessage
	b ()V init
	f ()V tick
ekl$a com/mojang/realmsclient/gui/screens/RealmsSlotOptionsScreen$SettingsSlider
	l minValue
	m maxValue
	a ()V applyValue
	a (DD)V onClick
	b ()V updateMessage
	b (DD)V onRelease
ekm com/mojang/realmsclient/gui/screens/RealmsSubscriptionInfoScreen
	J TIME_LEFT_LABEL
	K DAYS_LEFT_LABEL
	L SUBSCRIPTION_EXPIRED_TEXT
	M SUBSCRIPTION_LESS_THAN_A_DAY_TEXT
	N MONTH_SUFFIX
	O MONTHS_SUFFIX
	P DAY_SUFFIX
	Q DAYS_SUFFIX
	R UNKNOWN
	S RECURRING_INFO
	T lastScreen
	U serverData
	V mainScreen
	W daysLeft
	X startDate
	Y type
	a LOGGER
	b SUBSCRIPTION_TITLE
	c SUBSCRIPTION_START_LABEL
	a (I)Lnet/minecraft/network/chat/IChatBaseComponent; daysLeftPresentation
	a (III)Z keyPressed
	a (J)V getSubscription
	a (Lehe;IIF)V render
	aw_ ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarrationMessage
	b ()V init
	b (J)Lnet/minecraft/network/chat/IChatBaseComponent; localPresentation
	c (Z)V deleteRealm
ekn com/mojang/realmsclient/gui/screens/RealmsTermsScreen
	J TERMS_LINK_TEXT
	K lastScreen
	L mainScreen
	M realmsServer
	N onLink
	a LOGGER
	b TITLE
	c TERMS_STATIC_TEXT
	B ()V agreedToTos
	a (DDI)Z mouseClicked
	a (III)Z keyPressed
	a (Lehe;IIF)V render
	aw_ ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarrationMessage
	b ()V init
eko com/mojang/realmsclient/gui/screens/RealmsUploadScreen
	J BAR_TOP
	K BAR_BOTTOM
	L BAR_BORDER
	M DOTS
	N VERIFYING_TEXT
	O lastScreen
	P selectedLevel
	Q worldId
	R slotId
	S uploadStatus
	T narrationRateLimiter
	U errorMessage
	V status
	W progress
	X cancelled
	Y uploadFinished
	Z showDots
	a LOGGER
	aa uploadStarted
	ab backButton
	ac cancelButton
	ad tickCount
	ae previousWrittenBytes
	af previousTimeSnapshot
	ag bytesPersSecond
	ah callback
	b UPLOAD_LOCK
	c BAR_WIDTH
	B ()V onBack
	C ()V onCancel
	D ()Lnet/minecraft/network/chat/IChatBaseComponent; createProgressNarrationMessage
	E ()V upload
	F ()V uploadCancelled
	a (III)Z keyPressed
	a (Lehe;IIF)V render
	a (Lehe;J)V drawUploadSpeed0
	a (Ljava/io/File;)Z verify
	a (Lorg/apache/commons/compress/archivers/tar/TarArchiveOutputStream;Ljava/lang/String;Ljava/lang/String;Z)V addFileToTarGz
	a ([Lnet/minecraft/network/chat/IChatBaseComponent;)V setErrorMessage
	b ()V init
	b (Ljava/io/File;)Ljava/io/File; tarGzipArchive
	c (Lehe;)V drawDots
	d (Lehe;)V drawProgressBar
	e (Lehe;)V drawUploadSpeed
	f ()V tick
ekp com/mojang/realmsclient/gui/screens/UploadResult
	a statusCode
	b errorMessage
ekp$a com/mojang/realmsclient/gui/screens/UploadResult$Builder
	a statusCode
	b errorMessage
	a ()Lekp; build
	a (I)Lekp$a; withStatusCode
	a (Ljava/lang/String;)Lekp$a; withErrorMessage
ekr com/mojang/realmsclient/gui/task/DataFetcher
	a LOGGER
	b executor
	c resolution
	d timeSource
	a ()Lekr$c; createSubscription
	a (Ljava/lang/String;Ljava/util/concurrent/Callable;Ljava/time/Duration;Leks;)Lekr$e; createTask
ekr$a com/mojang/realmsclient/gui/task/DataFetcher$ComputationResult
	a value
	b time
	a ()Lcom/mojang/datafixers/util/Either; value
	b ()J time
ekr$b com/mojang/realmsclient/gui/task/DataFetcher$SubscribedTask
	b task
	c output
	d lastCheckTime
	a ()V runCallbackIfNeeded
	a (J)V update
	b ()V runCallback
	c ()V reset
ekr$c com/mojang/realmsclient/gui/task/DataFetcher$Subscription
	b subscriptions
	a ()V forceUpdate
	a (Lekr$e;Ljava/util/function/Consumer;)V subscribe
	b ()V tick
	c ()V reset
ekr$d com/mojang/realmsclient/gui/task/DataFetcher$SuccessfulComputationResult
	a value
	b time
	a ()Ljava/lang/Object; value
	b ()J time
ekr$e com/mojang/realmsclient/gui/task/DataFetcher$Task
	b id
	c updater
	d period
	e repeatStrategy
	f pendingTask
	g lastResult
	h nextUpdate
	a ()V reset
	a (J)V updateIfNeeded
eks com/mojang/realmsclient/gui/task/RepeatedDelayStrategy
	a CONSTANT
	a ()J delayCyclesAfterSuccess
	a (I)Leks; exponentialBackoff
	b ()J delayCyclesAfterFailure
ekv com/mojang/realmsclient/util/JsonUtils
	a (Ljava/lang/String;Lcom/google/gson/JsonObject;)Ljava/lang/String; getRequiredString
	a (Ljava/lang/String;Lcom/google/gson/JsonObject;I)I getIntOr
	a (Ljava/lang/String;Lcom/google/gson/JsonObject;J)J getLongOr
	a (Ljava/lang/String;Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/String; getStringOr
	a (Ljava/lang/String;Lcom/google/gson/JsonObject;Ljava/util/UUID;)Ljava/util/UUID; getUuidOr
	a (Ljava/lang/String;Lcom/google/gson/JsonObject;Ljava/util/function/Function;)Ljava/lang/Object; getRequired
	a (Ljava/lang/String;Lcom/google/gson/JsonObject;Z)Z getBooleanOr
	b (Ljava/lang/String;Lcom/google/gson/JsonObject;)Ljava/util/Date; getDateOr
ekw com/mojang/realmsclient/util/LevelType
	a DEFAULT
	b FLAT
	c LARGE_BIOMES
	d AMPLIFIED
	e index
	f name
	g $VALUES
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getName
	b ()I getDtoIndex
	c ()[Lekw; $values
ekx com/mojang/realmsclient/util/RealmsPersistence
	a FILE_NAME
	b GSON
	c LOGGER
	a ()Lekx$a; read
	a (Lekx$a;)V save
	b ()Lekx$a; readFile
	b (Lekx$a;)V writeFile
	c ()Ljava/io/File; getPathToData
ekx$a com/mojang/realmsclient/util/RealmsPersistence$RealmsPersistenceData
	a newsLink
	b hasUnreadNews
eky com/mojang/realmsclient/util/RealmsTextureManager
	a TEXTURES
	b LOGGER
	c TEMPLATE_ICON_LOCATION
	a (Ljava/lang/String;)Legf; loadImage
	a (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/resources/MinecraftKey; worldTemplate
	b (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/resources/MinecraftKey; getTexture
eky$a com/mojang/realmsclient/util/RealmsTextureManager$RealmsTexture
	a image
	b textureId
	a ()Ljava/lang/String; image
	b ()Lnet/minecraft/resources/MinecraftKey; textureId
ekz com/mojang/realmsclient/util/RealmsUtil
	a SESSION_SERVICE
	b GAME_PROFILE_CACHE
	c MINUTES
	d HOURS
	e DAYS
	a (J)Ljava/lang/String; convertToAgePresentation
	a (Lehe;IIILjava/lang/String;)V renderPlayerFace
	a (Ljava/lang/String;)Ljava/lang/String; uuidToName
	a (Ljava/util/Date;)Ljava/lang/String; convertToAgePresentationFromInstant
	b (Ljava/lang/String;)Lcom/mojang/authlib/GameProfile; getGameProfile
ela com/mojang/realmsclient/util/TextRenderingUtils
	a (Ljava/lang/String;)Ljava/util/List; lineBreak
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/util/List; split
	a (Ljava/lang/String;Ljava/util/List;)Ljava/util/List; decompose
	a (Ljava/lang/String;[Lela$b;)Ljava/util/List; decompose
	a (Ljava/util/List;Ljava/util/List;)Ljava/util/List; insertLinks
ela$a com/mojang/realmsclient/util/TextRenderingUtils$Line
	a segments
ela$b com/mojang/realmsclient/util/TextRenderingUtils$LineSegment
	a fullText
	b linkTitle
	c linkUrl
	a ()Ljava/lang/String; renderedText
	a (Ljava/lang/String;)Lela$b; text
	a (Ljava/lang/String;Ljava/lang/String;)Lela$b; link
	b ()Z isLink
	c ()Ljava/lang/String; getLinkUrl
elb com/mojang/realmsclient/util/UploadTokenCache
	a TOKEN_CACHE
	a (J)Ljava/lang/String; get
	a (JLjava/lang/String;)V put
	b (J)V invalidate
elc com/mojang/realmsclient/util/WorldGenerationInfo
	a seed
	b levelType
	c generateStructures
	a ()Ljava/lang/String; getSeed
	b ()Lekw; getLevelType
	c ()Z shouldGenerateStructures
ele com/mojang/realmsclient/util/task/CloseServerTask
	c LOGGER
	d serverData
	e configureScreen
elf com/mojang/realmsclient/util/task/ConnectTask
	c realmsConnect
	d server
	e address
	a ()V abortTask
	b ()V tick
elg com/mojang/realmsclient/util/task/DownloadTask
	c LOGGER
	d worldId
	e slot
	f lastScreen
	g downloadName
elh com/mojang/realmsclient/util/task/GetServerDetailsTask
	c LOGGER
	d server
	e lastScreen
	f mainScreen
	g connectLock
	a (Leil;)Lekb; connectScreen
	a (Leil;Ljava/util/function/Function;)Leka; resourcePackDownloadConfirmationScreen
	b (Leil;)Ljava/util/concurrent/CompletableFuture; scheduleResourcePackDownload
	e ()Leil; fetchServerAddress
eli com/mojang/realmsclient/util/task/LongRunningTask
	a NUMBER_OF_RETRIES
	b longRunningMcoTaskScreen
	c LOGGER
	a ()V abortTask
	a (J)V pause
	a (Lekb;)V setScreen
	a (Letd;)V setScreen
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V error
	b ()V tick
	b (Lnet/minecraft/network/chat/IChatBaseComponent;)V setTitle
	c ()Z aborted
	d ()V init
elj com/mojang/realmsclient/util/task/OpenServerTask
	c LOGGER
	d serverData
	e returnScreen
	f join
	g mainScreen
	h minecraft
elk com/mojang/realmsclient/util/task/ResettingGeneratedWorldTask
	c generationInfo
	a (Leht;J)V sendResetRequest
ell com/mojang/realmsclient/util/task/ResettingTemplateWorldTask
	c template
	a (Leht;J)V sendResetRequest
elm com/mojang/realmsclient/util/task/ResettingWorldTask
	c LOGGER
	d serverId
	e title
	f callback
	a (Leht;J)V sendResetRequest
eln com/mojang/realmsclient/util/task/RestoreTask
	c LOGGER
	d backup
	e worldId
	f lastScreen
elo com/mojang/realmsclient/util/task/SwitchMinigameTask
	c LOGGER
	d worldId
	e worldTemplate
	f lastScreen
elp com/mojang/realmsclient/util/task/SwitchSlotTask
	c LOGGER
	d worldId
	e slot
	f callback
elq com/mojang/realmsclient/util/task/WorldCreationTask
	c LOGGER
	d name
	e motd
	f worldId
	g lastScreen
els net/minecraft/client/AttackIndicatorStatus
	a OFF
	b CROSSHAIR
	c HOTBAR
	d BY_ID
	e id
	f key
	g $VALUES
	a ()I getId
	a (I)Lels; byId
	b ()Ljava/lang/String; getKey
	d ()[Lels; $values
elt net/minecraft/client/Camera
	a FOG_DISTANCE_SCALE
	b initialized
	c level
	d entity
	e position
	f blockPosition
	g forwards
	h up
	i left
	j xRot
	k yRot
	l rotation
	m detached
	n eyeHeight
	o eyeHeightOld
	a ()V tick
	a (D)D getMaxZoom
	a (DDD)V move
	a (FF)V setRotation
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/world/entity/Entity;ZZF)V setup
	a (Lnet/minecraft/world/phys/Vec3D;)V setPosition
	b ()Lnet/minecraft/world/phys/Vec3D; getPosition
	b (DDD)V setPosition
	c ()Lnet/minecraft/core/BlockPosition; getBlockPosition
	d ()F getXRot
	e ()F getYRot
	f ()Lorg/joml/Quaternionf; rotation
	g ()Lnet/minecraft/world/entity/Entity; getEntity
	h ()Z isInitialized
	i ()Z isDetached
	j ()Lelt$a; getNearPlane
	k ()Ldwl; getFluidInCamera
	l ()Lorg/joml/Vector3f; getLookVector
	m ()Lorg/joml/Vector3f; getUpVector
	n ()Lorg/joml/Vector3f; getLeftVector
	o ()V reset
elt$a net/minecraft/client/Camera$NearPlane
	a forward
	b left
	c up
	a ()Lnet/minecraft/world/phys/Vec3D; getTopLeft
	a (FF)Lnet/minecraft/world/phys/Vec3D; getPointOnPlane
	b ()Lnet/minecraft/world/phys/Vec3D; getTopRight
	c ()Lnet/minecraft/world/phys/Vec3D; getBottomLeft
	d ()Lnet/minecraft/world/phys/Vec3D; getBottomRight
elu net/minecraft/client/CameraType
	a FIRST_PERSON
	b THIRD_PERSON_BACK
	c THIRD_PERSON_FRONT
	d VALUES
	e firstPerson
	f mirrored
	g $VALUES
	a ()Z isFirstPerson
	b ()Z isMirrored
	c ()Lelu; cycle
	d ()[Lelu; $values
elv net/minecraft/client/ClientRecipeBook
	c LOGGER
	d collectionsByTab
	e allCollections
	a (Lemq;)Ljava/util/List; getCollection
	a (Ljava/lang/Iterable;)Ljava/util/Map; categorizeAndGroupRecipes
	a (Ljava/lang/Iterable;Lnet/minecraft/core/IRegistryCustom;)V setupCollections
	b ()Ljava/util/List; getCollections
	g (Lnet/minecraft/world/item/crafting/IRecipe;)Lemq; getCategory
elw net/minecraft/client/CloudStatus
	a OFF
	b FAST
	c FANCY
	d id
	e key
	f $VALUES
	a ()I getId
	b ()Ljava/lang/String; getKey
	d ()[Lelw; $values
elx net/minecraft/client/ComponentCollector
	a parts
	a ()Lnet/minecraft/network/chat/IChatFormatted; getResult
	a (Lnet/minecraft/network/chat/IChatFormatted;)V append
	b ()Lnet/minecraft/network/chat/IChatFormatted; getResultOrEmpty
	c ()V reset
ely net/minecraft/client/DebugQueryHandler
	a connection
	b transactionId
	c callback
	a (ILjava/util/function/Consumer;)V queryEntityTag
	a (ILnet/minecraft/nbt/NBTTagCompound;)Z handleResponse
	a (Ljava/util/function/Consumer;)I startTransaction
	a (Lnet/minecraft/core/BlockPosition;Ljava/util/function/Consumer;)V queryBlockEntityTag
elz net/minecraft/client/GameNarrator
	a NO_TITLE
	b LOGGER
	c minecraft
	d narrator
	a ()Z isActive
	a (Lemj;)V updateNarratorStatus
	a (Ljava/lang/String;)V sayNow
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V sayChat
	b ()V clear
	b (Ljava/lang/String;)V logNarratedMessage
	b (Lnet/minecraft/network/chat/IChatBaseComponent;)V say
	c ()V destroy
	c (Lnet/minecraft/network/chat/IChatBaseComponent;)V sayNow
	d ()Lemj; getStatus
em$a net/minecraft/commands/arguments/RangeArgument$Floats
	a EXAMPLES
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/advancements/critereon/CriterionConditionValue$DoubleRange; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/advancements/critereon/CriterionConditionValue$DoubleRange; getRange
em$b net/minecraft/commands/arguments/RangeArgument$Ints
	a EXAMPLES
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange; getRange
ema net/minecraft/client/GraphicsStatus
	a FAST
	b FANCY
	c FABULOUS
	d BY_ID
	e id
	f key
	g $VALUES
	a ()I getId
	a (I)Lema; byId
	b ()Ljava/lang/String; getKey
	d ()[Lema; $values
emb net/minecraft/client/GuiMessage
	a addedTime
	b content
	c signature
	d tag
	a ()I addedTime
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; content
	c ()Lnet/minecraft/network/chat/MessageSignature; signature
	d ()Lemc; tag
emb$a net/minecraft/client/GuiMessage$Line
	a addedTime
	b content
	c tag
	d endOfEntry
	a ()I addedTime
	b ()Lnet/minecraft/util/FormattedString; content
	c ()Lemc; tag
	d ()Z endOfEntry
emc net/minecraft/client/GuiMessageTag
	a indicatorColor
	b icon
	c text
	d logTag
	e SYSTEM_TEXT
	f SYSTEM_TEXT_SINGLE_PLAYER
	g CHAT_NOT_SECURE_TEXT
	h CHAT_MODIFIED_TEXT
	i CHAT_NOT_SECURE_INDICATOR_COLOR
	j CHAT_MODIFIED_INDICATOR_COLOR
	k SYSTEM
	l SYSTEM_SINGLE_PLAYER
	m CHAT_NOT_SECURE
	n TEXTURE_LOCATION
	a ()Lemc; system
	a (Ljava/lang/String;)Lemc; chatModified
	b ()Lemc; systemSinglePlayer
	c ()Lemc; chatNotSecure
	d ()I indicatorColor
	e ()Lemc$a; icon
	f ()Lnet/minecraft/network/chat/IChatBaseComponent; text
	g ()Ljava/lang/String; logTag
emc$a net/minecraft/client/GuiMessageTag$Icon
	a CHAT_MODIFIED
	b u
	c v
	d width
	e height
	f $VALUES
	a ()[Lemc$a; $values
	a (Lehe;II)V draw
emd net/minecraft/client/HotbarManager
	a NUM_HOTBAR_GROUPS
	b LOGGER
	c optionsFile
	d fixerUpper
	e hotbars
	f loaded
	a ()V save
	a (I)Lfhm; get
	b ()V load
eme net/minecraft/client/InputType
	a NONE
	b MOUSE
	c KEYBOARD_ARROW
	d KEYBOARD_TAB
	e $VALUES
	a ()Z isMouse
	b ()Z isKeyboard
	c ()[Leme; $values
emf net/minecraft/client/KeyMapping
	a CATEGORY_MOVEMENT
	b CATEGORY_MISC
	c CATEGORY_MULTIPLAYER
	d CATEGORY_GAMEPLAY
	e CATEGORY_INVENTORY
	f CATEGORY_INTERFACE
	g CATEGORY_CREATIVE
	h ALL
	i MAP
	j CATEGORIES
	k CATEGORY_SORT_ORDER
	l name
	m defaultKey
	n category
	o key
	p isDown
	q clickCount
	a ()V setAll
	a (I)Z matchesMouse
	a (II)Z matches
	a (Lefz$a;)V click
	a (Lefz$a;Z)V set
	a (Lemf;)I compareTo
	a (Ljava/lang/String;)Ljava/util/function/Supplier; createNameSupplier
	a (Z)V setDown
	b ()V releaseAll
	b (Lefz$a;)V setKey
	b (Lemf;)Z same
	c ()V resetMapping
	d ()Z isDown
	e ()Ljava/lang/String; getCategory
	f ()Z consumeClick
	g ()Ljava/lang/String; getName
	h ()Lefz$a; getDefaultKey
	i ()Z isUnbound
	j ()Lnet/minecraft/network/chat/IChatBaseComponent; getTranslatedKeyMessage
	k ()Z isDefault
	l ()Ljava/lang/String; saveString
	m ()V release
emg net/minecraft/client/KeyboardHandler
	a DEBUG_CRASH_TIME
	b minecraft
	c clipboardManager
	d debugCrashKeyTime
	e debugCrashKeyReportedTime
	f debugCrashKeyReportedCount
	g handledDebugKey
	a ()Ljava/lang/String; getClipboard
	a (I)Z handleChunkDebugKeys
	a (J)V setup
	a (JII)V charTyped
	a (JIIII)V keyPress
	a (Ljava/lang/String;)V setClipboard
	a (Ljava/lang/String;[Ljava/lang/Object;)V debugFeedbackTranslated
	a (Lnet/minecraft/EnumChatFormat;Lnet/minecraft/network/chat/IChatBaseComponent;)V debugComponent
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V debugFeedbackComponent
	a (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/nbt/NBTTagCompound;)V copyCreateEntityCommand
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/nbt/NBTTagCompound;)V copyCreateBlockCommand
	a (ZZ)V copyRecreateCommand
	b ()V tick
	b (I)Z handleDebugKeys
	b (Ljava/lang/String;[Ljava/lang/Object;)V debugWarningTranslated
	c (Ljava/lang/String;[Ljava/lang/Object;)V debugFeedback
emh net/minecraft/client/Minecraft
	A fpsString
	B wireframe
	C chunkPath
	D chunkVisibility
	E smartCull
	F instance
	G LOGGER
	H MAX_TICKS_PER_UPDATE
	I REGIONAL_COMPLIANCIES
	J RESOURCE_RELOAD_INITIAL_TASK
	K SOCIAL_INTERACTIONS_NOT_AVAILABLE
	L resourcePackDirectory
	M profileProperties
	N textureManager
	O fixerUpper
	P virtualScreen
	Q window
	R timer
	S renderBuffers
	T entityRenderDispatcher
	U itemRenderer
	V searchRegistry
	W user
	X progressListener
	Y hotbarManager
	Z lastInputType
	a ON_OSX
	aA skinManager
	aB modelManager
	aC blockRenderer
	aD paintingTextures
	aE mobEffectTextures
	aF toast
	aG tutorial
	aH playerSocialManager
	aI entityModels
	aJ blockEntityRenderDispatcher
	aK telemetryManager
	aL profileKeyPairManager
	aM realmsDataFetcher
	aN singleplayerServer
	aO pendingConnection
	aP isLocalServer
	aQ rightClickDelay
	aR pause
	aS pausePartialTick
	aT lastNanoTime
	aU lastTime
	aV frames
	aW overlay
	aX connectedToRealms
	aY gameThread
	aZ running
	aa launchedVersion
	ab versionType
	ac proxy
	ad levelSource
	ae is64bit
	af demo
	ag allowsMultiplayer
	ah allowsChat
	ai resourceManager
	aj vanillaPackResources
	ak downloadedPackSource
	al resourcePackRepository
	am languageManager
	an blockColors
	ao itemColors
	ap mainRenderTarget
	aq soundManager
	ar musicManager
	as fontManager
	at splashManager
	au gpuWarnlistManager
	av regionalCompliancies
	aw authenticationService
	ax minecraftSessionService
	ay serviceSignatureValidator
	az userApiService
	b DEFAULT_FONT
	ba delayedCrash
	bb fps
	bc frameTimeNs
	bd windowActive
	be progressTasks
	bf pendingReload
	bg socialInteractionsToast
	bh profiler
	bi fpsPieRenderTicks
	bj fpsPieProfiler
	bk fpsPieResults
	bl metricsRecorder
	bm reloadStateTracker
	bn savedCpuDuration
	bo gpuUtilization
	bp currentFrameProfile
	bq realms32BitWarningStatus
	br narrator
	bs chatListener
	bt reportingContext
	bu debugPath
	c UNIFORM_FONT
	d ALT_FONT
	e UPDATE_DRIVERS_ADVICE
	f levelRenderer
	g particleEngine
	h font
	i fontFilterFishy
	j gameRenderer
	k debugRenderer
	l gui
	m options
	n mouseHandler
	o keyboardHandler
	p gameDirectory
	q frameTimer
	r gameMode
	s level
	t player
	u cameraEntity
	v crosshairPickEntity
	w hitResult
	x missTime
	y noRender
	z screen
	A ()Z extraTelemetryAvailable
	B ()Z allowsTelemetry
	C ()Z allowsMultiplayer
	D ()Z allowsRealms
	E ()Z shouldShowBanNotice
	F ()Lcom/mojang/authlib/minecraft/BanDetails; multiplayerBan
	G ()Lemh$a; getChatStatus
	H ()Z isDemo
	I ()Lfdk; getConnection
	J ()Z renderNames
	K ()Z useFancyGraphics
	L ()Z useShaderTransparency
	M ()Z useAmbientOcclusion
	N ()Lemh; getInstance
	O ()Ljava/util/concurrent/CompletableFuture; delayTextureReload
	P ()Lfdq; getCurrentServer
	Q ()Z isLocalServer
	R ()Z hasSingleplayerServer
	S ()Lfww; getSingleplayerServer
	T ()Z isSingleplayer
	U ()Lemw; getUser
	V ()Lcom/mojang/authlib/properties/PropertyMap; getProfileProperties
	W ()Ljava/net/Proxy; getProxy
	X ()Lftd; getTextureManager
	Y ()Lnet/minecraft/server/packs/resources/IResourceManager; getResourceManager
	Z ()Lnet/minecraft/server/packs/repository/ResourcePackRepository; getResourcePackRepository
	a ()V resizeDisplay
	a (I)V debugFpsMeterKeyPress
	a (IJ)V onFullscreenError
	a (Lcom/mojang/authlib/yggdrasil/YggdrasilAuthenticationService;Leyl;)Lcom/mojang/authlib/minecraft/UserApiService; createUserApiService
	a (Lehe;Lnet/minecraft/util/profiling/MethodProfilerResults;)V renderFpsMeter
	a (Leme;)V setLastInputType
	a (Lemh;Lfui;Ljava/lang/String;Leml;Lnet/minecraft/CrashReport;)V fillReport
	a (Lesx;)V setOverlay
	a (Letd;)V setScreen
	a (Lfdj;)V setLevel
	a (Lfed;)V updateReportEnvironment
	a (Lfwr$a;)Lfws; getSearchTree
	a (Lfwr$a;Ljava/util/List;)V populateSearchTree
	a (Ljava/io/File;II)Lnet/minecraft/network/chat/IChatBaseComponent; grabPanoramixScreenshot
	a (Ljava/io/File;IIII)Lnet/minecraft/network/chat/IChatBaseComponent; grabHugeScreenshot
	a (Ljava/lang/String;)V openChatScreen
	a (Ljava/lang/String;Lnet/minecraft/world/level/storage/Convertable$ConversionSession;Lnet/minecraft/server/packs/repository/ResourcePackRepository;Lnet/minecraft/server/WorldStem;Z)V doWorldLoad
	a (Ljava/lang/Throwable;)V rollbackResourcePacks
	a (Ljava/lang/Throwable;Lnet/minecraft/network/chat/IChatBaseComponent;)V clearResourcePacksOnError
	a (Ljava/util/UUID;)Z isBlocked
	a (Ljava/util/function/Consumer;)Z debugClientMetricsStart
	a (Lnet/minecraft/CrashReport;)V delayCrash
	a (Lnet/minecraft/SystemReport;Lemh;Lfui;Ljava/lang/String;Leml;)Lnet/minecraft/SystemReport; fillSystemReport
	a (Lnet/minecraft/SystemReport;Ljava/util/List;)Ljava/nio/file/Path; archiveProfilingReport
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V addResourcePackLoadFailToast
	a (Lnet/minecraft/resources/MinecraftKey;)Ljava/util/function/Function; getTextureAtlas
	a (Lnet/minecraft/world/entity/Entity;)V setCameraEntity
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/entity/TileEntity;)V addCustomNbtData
	a (Z)V setWindowActive
	a (ZLnet/minecraft/util/profiling/GameProfilerTick;)Lnet/minecraft/util/profiling/GameProfilerFiller; constructProfiler
	a ([Ljava/lang/String;)Lnet/minecraft/server/packs/resources/IoSupplier; getIconFile
	aA ()Lfyl; getTutorial
	aB ()Z isWindowActive
	aC ()Lemd; getHotbarManager
	aD ()Lfve; getModelManager
	aE ()Lfua; getPaintingTextures
	aF ()Lftz; getMobEffectTextures
	aG ()Lnet/minecraft/util/profiling/GameProfilerFiller; getProfiler
	aH ()Lajc; getProgressListener
	aI ()Lfuc; getSplashManager
	aJ ()Lesx; getOverlay
	aK ()Lexf; getPlayerSocialManager
	aL ()Z renderOnThread
	aM ()Legi; getWindow
	aN ()Lfim; renderBuffers
	aO ()Lfcn; getEntityModels
	aP ()Z isTextFilteringEnabled
	aQ ()V prepareForMultiplayer
	aR ()Lemp; getRealms32BitWarningStatus
	aS ()Lnet/minecraft/util/SignatureValidator; getServiceSignatureValidator
	aT ()Leme; getLastInputType
	aU ()Lelz; getNarrator
	aV ()Lfdt; getChatListener
	aW ()Lfef; getReportingContext
	aX ()Lejk; realmsDataFetcher
	aY ()Ljava/lang/String; createTitle
	aZ ()V abortResourcePackRecovery
	aa ()Lnet/minecraft/server/packs/ResourcePackVanilla; getVanillaPackResources
	ab ()Lftu; getDownloadedPackSource
	ac ()Ljava/nio/file/Path; getResourcePackDirectory
	ad ()Lfui; getLanguageManager
	ae ()Z is64Bit
	af ()Z isPaused
	ag ()Lfia; getGpuWarnlistManager
	ah ()Lfxj; getSoundManager
	ai ()Lnet/minecraft/sounds/Music; getSituationalMusic
	aj ()Lcom/mojang/authlib/minecraft/MinecraftSessionService; getMinecraftSessionService
	ak ()Lfub; getSkinManager
	al ()Lnet/minecraft/world/entity/Entity; getCameraEntity
	am ()Lfix; getBlockRenderer
	an ()Lfnc; getEntityRenderDispatcher
	ao ()Lfkc; getBlockEntityRenderDispatcher
	ap ()Lfoc; getItemRenderer
	aq ()Lnet/minecraft/util/CircularTimer; getFrameTimer
	ar ()Z isConnectedToRealms
	as ()Lcom/mojang/datafixers/DataFixer; getFixerUpper
	au ()Ljava/lang/Thread; getRunningThread
	av ()F getFrameTime
	aw ()F getDeltaFrameTime
	ax ()Leni; getBlockColors
	ay ()Z showOnlyReducedInfo
	az ()Lepz; getToasts
	b ()V cursorEntered
	b (I)V updateMaxMipLevel
	b (Letd;)V clearLevel
	b (Lfdj;)V updateLevelInEngines
	b (Ljava/lang/Object;)Z countryEqualsISO3
	b (Lnet/minecraft/CrashReport;)V delayCrashRaw
	b (Lnet/minecraft/world/entity/Entity;)Z shouldEntityAppearGlowing
	b (Z)V selectMainFont
	b (ZLnet/minecraft/util/profiling/GameProfilerTick;)V finishProfilers
	ba ()V createSearchTrees
	bb ()Z checkIs64Bit
	bc ()V selfTest
	bd ()Z shouldRenderFpsPie
	be ()I getFramerateLimit
	bf ()V debugClientMetricsStop
	bg ()V debugClientMetricsCancel
	bh ()Z startAttack
	bi ()V startUseItem
	bj ()Z isMultiplayerServer
	bk ()V handleKeybinds
	bl ()V pickBlock
	c ()V updateTitle
	c (Letd;)V forceSetScreen
	c (Lnet/minecraft/CrashReport;)V crash
	c (Z)V pauseGame
	d ()Lnet/minecraft/util/ModCheck; checkModStatus
	d (Letd;)V updateScreenAndTick
	d (Lnet/minecraft/CrashReport;)Lnet/minecraft/CrashReport; fillReport
	d (Z)V setConnectedToRealms
	e ()V run
	e (Ljava/lang/Runnable;)Z shouldRun
	e (Z)Ljava/util/concurrent/CompletableFuture; reloadResourcePacks
	f ()Lefr; getMainRenderTarget
	f (Ljava/lang/Runnable;)Ljava/lang/Runnable; wrapRunnable
	f (Z)V runTick
	g ()Ljava/lang/String; getLaunchedVersion
	g (Z)V continueAttack
	h ()Ljava/lang/String; getVersionType
	i ()Z isEnforceUnicode
	j ()Ljava/util/concurrent/CompletableFuture; reloadResourcePacks
	k ()Lnet/minecraft/world/level/storage/Convertable; getLevelSource
	l ()V destroy
	m ()I getFps
	n ()J getFrameTimeNs
	o ()V emergencySave
	p ()V stop
	q ()Z isRunning
	r ()Lfxe; getMusicManager
	s ()V tick
	t ()Lfxn; getTelemetryManager
	u ()D getGpuUtilization
	v ()Lfdp; getProfileKeyPairManager
	w ()Lexx; createWorldOpenFlows
	y ()V clearLevel
	z ()Z telemetryOptInExtra
emh$a net/minecraft/client/Minecraft$ChatStatus
	a ENABLED
	b DISABLED_BY_OPTIONS
	c DISABLED_BY_LAUNCHER
	d DISABLED_BY_PROFILE
	e INFO_DISABLED_BY_PROFILE
	f message
	g $VALUES
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getMessage
	a (Z)Z isChatAllowed
	b ()[Lemh$a; $values
emi net/minecraft/client/MouseHandler
	a minecraft
	b isLeftPressed
	c isMiddlePressed
	d isRightPressed
	e xpos
	f ypos
	g fakeRightMouse
	h activeButton
	i ignoreFirstMove
	j clickDepth
	k mousePressedTime
	l smoothTurnX
	m smoothTurnY
	n accumulatedDX
	o accumulatedDY
	p accumulatedScroll
	q lastMouseEventTime
	r mouseGrabbed
	a ()V turnPlayer
	a (J)V setup
	a (JDD)V onScroll
	a (JIII)V onPress
	a (JLjava/util/List;)V onDrop
	b ()Z isLeftPressed
	b (JDD)V onMove
	c ()Z isMiddlePressed
	d ()Z isRightPressed
	e ()D xpos
	f ()D ypos
	g ()V setIgnoreFirstMove
	h ()Z isMouseGrabbed
	i ()V grabMouse
	j ()V releaseMouse
	k ()V cursorEntered
emj net/minecraft/client/NarratorStatus
	a OFF
	b ALL
	c CHAT
	d SYSTEM
	e BY_ID
	f id
	g name
	h $VALUES
	a ()I getId
	a (I)Lemj; byId
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; getName
	c ()Z shouldNarrateChat
	d ()Z shouldNarrateSystem
	e ()[Lemj; $values
emk net/minecraft/client/OptionInstance
	a BOOLEAN_VALUES
	b BOOLEAN_TO_STRING
	c LOGGER
	d tooltip
	e toString
	f values
	g codec
	h initialValue
	i onValueUpdate
	j caption
	k value
	a ()Lemk$l; noTooltip
	a (Leml;III)Lenz; createButton
	a (Leml;IIILjava/util/function/Consumer;)Lenz; createButton
	a (Ljava/lang/Object;)V set
	a (Ljava/lang/String;Lemk$l;Lemk$b;ZLjava/util/function/Consumer;)Lemk; createBoolean
	a (Ljava/lang/String;Lemk$l;Z)Lemk; createBoolean
	a (Ljava/lang/String;Lemk$l;ZLjava/util/function/Consumer;)Lemk; createBoolean
	a (Ljava/lang/String;Z)Lemk; createBoolean
	a (Ljava/lang/String;ZLjava/util/function/Consumer;)Lemk; createBoolean
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)Lemk$l; cachedConstantTooltip
	b ()Lemk$b; forOptionEnum
	c ()Ljava/lang/Object; get
	d ()Lcom/mojang/serialization/Codec; codec
	e ()Lemk$n; values
emk$a net/minecraft/client/OptionInstance$AltEnum
	a values
	b altValues
	c altCondition
	d valueSetter
	e codec
	a ()Leoj$c; valueListSupplier
	a (Ljava/lang/Object;)Ljava/util/Optional; validateValue
	b ()Ljava/util/List; values
	c ()Ljava/util/List; altValues
	d ()Ljava/util/function/BooleanSupplier; altCondition
	e ()Lemk$d$a; valueSetter
	f ()Lcom/mojang/serialization/Codec; codec
emk$b net/minecraft/client/OptionInstance$CaptionBasedToString
emk$c net/minecraft/client/OptionInstance$ClampingLazyMaxIntRange
	a minInclusive
	b maxSupplier
	c encodableMaxInclusive
	a ()Leoj$c; valueListSupplier
	a (Ljava/lang/Integer;)Ljava/util/Optional; validateValue
	a (Ljava/lang/Object;)Ljava/util/Optional; validateValue
	b ()I maxInclusive
	c ()Z createCycleButton
	d ()I minInclusive
	f ()Lcom/mojang/serialization/Codec; codec
	g ()Ljava/util/function/IntSupplier; maxSupplier
	h ()I encodableMaxInclusive
emk$d net/minecraft/client/OptionInstance$CycleableValueSet
	a ()Leoj$c; valueListSupplier
	a (Lemk$l;Leml;IIILjava/util/function/Consumer;)Ljava/util/function/Function; createButton
	e ()Lemk$d$a; valueSetter
emk$d$a net/minecraft/client/OptionInstance$CycleableValueSet$ValueSetter
emk$e net/minecraft/client/OptionInstance$Enum
	a values
	b codec
	a ()Leoj$c; valueListSupplier
	a (Ljava/lang/Object;)Ljava/util/Optional; validateValue
	b ()Ljava/util/List; values
	f ()Lcom/mojang/serialization/Codec; codec
emk$f net/minecraft/client/OptionInstance$IntRange
	a minInclusive
	b maxInclusive
	a (Ljava/lang/Integer;)Ljava/util/Optional; validateValue
	a (Ljava/lang/Object;)Ljava/util/Optional; validateValue
	b ()I maxInclusive
	d ()I minInclusive
	f ()Lcom/mojang/serialization/Codec; codec
emk$g net/minecraft/client/OptionInstance$IntRangeBase
	a (D)Ljava/lang/Integer; fromSliderValue
	a (Ljava/util/function/IntFunction;Ljava/util/function/ToIntFunction;)Lemk$k; xmap
	b ()I maxInclusive
	b (D)Ljava/lang/Object; fromSliderValue
	b (Ljava/lang/Integer;)D toSliderValue
	b (Ljava/lang/Object;)D toSliderValue
	d ()I minInclusive
emk$h net/minecraft/client/OptionInstance$LazyEnum
	a values
	b validateValue
	c codec
	a ()Leoj$c; valueListSupplier
	a (Ljava/lang/Object;)Ljava/util/Optional; validateValue
	b ()Ljava/util/function/Supplier; values
	c ()Ljava/util/function/Function; validateValue
	f ()Lcom/mojang/serialization/Codec; codec
emk$i net/minecraft/client/OptionInstance$OptionInstanceSliderButton
	l instance
	m values
	n tooltipSupplier
	o onValueChanged
	a ()V applyValue
	b ()V updateMessage
emk$j net/minecraft/client/OptionInstance$SliderableOrCyclableValueSet
	a (Lemk$l;Leml;IIILjava/util/function/Consumer;)Ljava/util/function/Function; createButton
	c ()Z createCycleButton
emk$k net/minecraft/client/OptionInstance$SliderableValueSet
	a (Lemk$l;Leml;IIILjava/util/function/Consumer;)Ljava/util/function/Function; createButton
	b (D)Ljava/lang/Object; fromSliderValue
	b (Ljava/lang/Object;)D toSliderValue
emk$l net/minecraft/client/OptionInstance$TooltipSupplier
emk$m net/minecraft/client/OptionInstance$UnitDouble
	a INSTANCE
	b $VALUES
	a ()[Lemk$m; $values
	a (D)Ljava/lang/Double; fromSliderValue
	a (Ljava/lang/Double;)Ljava/util/Optional; validateValue
	a (Ljava/lang/Object;)Ljava/util/Optional; validateValue
	a (Ljava/util/function/DoubleFunction;Ljava/util/function/ToDoubleFunction;)Lemk$k; xmap
	b (D)Ljava/lang/Object; fromSliderValue
	b (Ljava/lang/Double;)D toSliderValue
	b (Ljava/lang/Object;)D toSliderValue
	f ()Lcom/mojang/serialization/Codec; codec
emk$n net/minecraft/client/OptionInstance$ValueSet
	a (Lemk$l;Leml;IIILjava/util/function/Consumer;)Ljava/util/function/Function; createButton
	a (Ljava/lang/Object;)Ljava/util/Optional; validateValue
	f ()Lcom/mojang/serialization/Codec; codec
eml net/minecraft/client/Options
	A keyRight
	B keyJump
	C keyShift
	D keySprint
	E keyInventory
	F keySwapOffhand
	G keyDrop
	H keyUse
	I keyAttack
	J keyPickItem
	K keyChat
	L keyPlayerList
	M keyCommand
	N keySocialInteractions
	O keyScreenshot
	P keyTogglePerspective
	Q keySmoothCamera
	R keyFullscreen
	S keySpectatorOutlines
	T keyAdvancements
	U keyHotbarSlots
	V keySaveHotbarActivator
	W keyLoadHotbarActivator
	X keyMappings
	Y minecraft
	Z hideGui
	a RENDER_DISTANCE_TINY
	aA GRAPHICS_TOOLTIP_FANCY
	aB graphicsMode
	aC ambientOcclusion
	aD PRIORITIZE_CHUNK_TOOLTIP_NONE
	aE PRIORITIZE_CHUNK_TOOLTIP_PLAYER_AFFECTED
	aF PRIORITIZE_CHUNK_TOOLTIP_NEARBY
	aG prioritizeChunkUpdates
	aH chatVisibility
	aI chatOpacity
	aJ chatLineSpacing
	aK textBackgroundOpacity
	aL panoramaSpeed
	aM ACCESSIBILITY_TOOLTIP_CONTRAST_MODE
	aN highContrast
	aO modelParts
	aP mainHand
	aQ chatScale
	aR chatWidth
	aS chatHeightUnfocused
	aT chatHeightFocused
	aU chatDelay
	aV ACCESSIBILITY_TOOLTIP_NOTIFICATION_DISPLAY_TIME
	aW notificationDisplayTime
	aX mipmapLevels
	aY attackIndicator
	aZ biomeBlendRadius
	aa renderDebug
	ab renderDebugCharts
	ac renderFpsChart
	ad lastMpIp
	ae smoothCamera
	af languageCode
	ag onboardAccessibility
	ah syncWrites
	ai LOGGER
	aj GSON
	ak RESOURCE_PACK_TYPE
	al OPTION_SPLITTER
	am DEFAULT_VOLUME
	an ACCESSIBILITY_TOOLTIP_DARK_MOJANG_BACKGROUND
	ao darkMojangStudiosBackground
	ap ACCESSIBILITY_TOOLTIP_HIDE_LIGHTNING_FLASHES
	aq hideLightningFlash
	ar sensitivity
	as renderDistance
	at simulationDistance
	au serverRenderDistance
	av entityDistanceScaling
	aw framerateLimit
	ax cloudStatus
	ay GRAPHICS_TOOLTIP_FAST
	az GRAPHICS_TOOLTIP_FABULOUS
	b RENDER_DISTANCE_SHORT
	bA MOVEMENT_TOGGLE
	bB MOVEMENT_HOLD
	bC toggleCrouch
	bD toggleSprint
	bE CHAT_TOOLTIP_HIDE_MATCHED_NAMES
	bF hideMatchedNames
	bG showAutosaveIndicator
	bH CHAT_TOOLTIP_ONLY_SHOW_SECURE
	bI onlyShowSecureChat
	bJ optionsFile
	bK cameraType
	bL fov
	bM TELEMETRY_TOOLTIP
	bN telemetryOptInExtra
	bO ACCESSIBILITY_TOOLTIP_SCREEN_EFFECT
	bP screenEffectScale
	bQ ACCESSIBILITY_TOOLTIP_FOV_EFFECT
	bR fovEffectScale
	bS ACCESSIBILITY_TOOLTIP_DARKNESS_EFFECT
	bT darknessEffectScale
	bU ACCESSIBILITY_TOOLTIP_GLINT_SPEED
	bV glintSpeed
	bW ACCESSIBILITY_TOOLTIP_GLINT_STRENGTH
	bX glintStrength
	bY ACCESSIBILITY_TOOLTIP_DAMAGE_TILT_STRENGTH
	bZ damageTiltStrength
	ba mouseWheelSensitivity
	bb rawMouseInput
	bc autoJump
	bd operatorItemsTab
	be autoSuggestions
	bf chatColors
	bg chatLinks
	bh chatLinksPrompt
	bi enableVsync
	bj entityShadows
	bk forceUnicodeFont
	bl invertYMouse
	bm discreteMouseScroll
	bn realmsNotifications
	bo ALLOW_SERVER_LISTING_TOOLTIP
	bp allowServerListing
	bq reducedDebugInfo
	br soundSourceVolumes
	bs showSubtitles
	bt DIRECTIONAL_AUDIO_TOOLTIP_ON
	bu DIRECTIONAL_AUDIO_TOOLTIP_OFF
	bv directionalAudio
	bw backgroundForChatOnly
	bx touchscreen
	by fullscreen
	bz bobView
	c RENDER_DISTANCE_NORMAL
	ca gamma
	cb MAX_GUI_SCALE_INCLUSIVE
	cc guiScale
	cd particles
	ce narrator
	cf soundDevice
	d RENDER_DISTANCE_FAR
	e RENDER_DISTANCE_REALLY_FAR
	f RENDER_DISTANCE_EXTREME
	g DEFAULT_SOUND_DEVICE
	h UNLIMITED_FRAMERATE_CUTOFF
	i resourcePacks
	j incompatibleResourcePacks
	k fullscreenVideoModeString
	l hideServerAddress
	m advancedItemTooltips
	n pauseOnLostFocus
	o overrideWidth
	p overrideHeight
	q useNativeTransport
	r tutorialStep
	s joinedFirstServer
	t hideBundleTutorial
	u glDebugVerbosity
	v skipMultiplayerWarning
	w skipRealms32bitWarning
	x keyUp
	y keyLeft
	z keyDown
	A ()Lemk; biomeBlendRadius
	B ()Lemk; mouseWheelSensitivity
	C ()Lemk; rawMouseInput
	D ()Lemk; autoJump
	E ()Lemk; operatorItemsTab
	F ()Lemk; autoSuggestions
	G ()Lemk; chatColors
	H ()Lemk; chatLinks
	I ()Lemk; chatLinksPrompt
	J ()Lemk; enableVsync
	K ()Lemk; entityShadows
	L ()Lemk; forceUnicodeFont
	M ()Lemk; invertYMouse
	N ()Lemk; discreteMouseScroll
	O ()Lemk; realmsNotifications
	P ()Lemk; allowServerListing
	Q ()Lemk; reducedDebugInfo
	R ()Lemk; showSubtitles
	S ()Lemk; directionalAudio
	T ()Lemk; backgroundForChatOnly
	U ()Lemk; touchscreen
	V ()Lemk; fullscreen
	W ()Lemk; bobView
	X ()Lemk; toggleCrouch
	Y ()Lemk; toggleSprint
	Z ()Lemk; hideMatchedNames
	a ()Lemk; darkMojangStudiosBackground
	a (D)I unlogMouse
	a (F)F getBackgroundOpacity
	a (I)I getBackgroundColor
	a (Lelu;)V setCameraType
	a (Lemf;Lefz$a;)V setKey
	a (Leml$a;)V processOptions
	a (Ljava/lang/String;)Z isTrue
	a (Ljava/lang/String;Lnet/minecraft/sounds/SoundCategory;)Lemk; createSoundSliderOptionInstance
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; dataFix
	a (Lnet/minecraft/network/chat/IChatBaseComponent;D)Lnet/minecraft/network/chat/IChatBaseComponent; percentValueLabel
	a (Lnet/minecraft/network/chat/IChatBaseComponent;I)Lnet/minecraft/network/chat/IChatBaseComponent; genericValueLabel
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Lnet/minecraft/network/chat/IChatBaseComponent;)Lnet/minecraft/network/chat/IChatBaseComponent; genericValueLabel
	a (Lnet/minecraft/server/packs/repository/ResourcePackRepository;)V updateResourcePacks
	a (Lnet/minecraft/sounds/SoundCategory;)F getSoundSourceVolume
	a (Lnet/minecraft/world/entity/player/PlayerModelPart;)Z isModelPartEnabled
	a (Lnet/minecraft/world/entity/player/PlayerModelPart;Z)V toggleModelPart
	aa ()Lemk; showAutosaveIndicator
	ab ()Lemk; onlyShowSecureChat
	ac ()Lemk; fov
	ad ()Lemk; telemetryOptInExtra
	ae ()Lemk; screenEffectScale
	af ()Lemk; fovEffectScale
	ag ()Lemk; darknessEffectScale
	ah ()Lemk; glintSpeed
	ai ()Lemk; glintStrength
	aj ()Lemk; damageTiltStrength
	ak ()Lemk; gamma
	al ()Lemk; guiScale
	am ()Lemk; particles
	an ()Lemk; narrator
	ao ()Lemk; soundDevice
	ap ()V load
	aq ()V save
	ar ()V broadcastOptions
	as ()Lelw; getCloudsType
	at ()Z useNativeTransport
	au ()Lelu; getCameraType
	av ()Ljava/io/File; getFile
	aw ()Ljava/lang/String; dumpOptionsForReport
	ax ()I getEffectiveRenderDistance
	b ()Lemk; hideLightningFlash
	b (F)I getBackgroundColor
	b (I)V setServerRenderDistance
	b (Ljava/lang/String;)Z isFalse
	b (Lnet/minecraft/network/chat/IChatBaseComponent;I)Lnet/minecraft/network/chat/IChatBaseComponent; pixelValueLabel
	b (Lnet/minecraft/server/packs/repository/ResourcePackRepository;)V loadSelectedResourcePacks
	b (Lnet/minecraft/sounds/SoundCategory;)Lemk; getSoundSourceOptionInstance
	b (Lnet/minecraft/world/entity/player/PlayerModelPart;Z)V setModelPart
	c ()Lemk; sensitivity
	c (I)D logMouse
	c (Ljava/lang/String;)Ljava/util/List; readPackList
	d ()Lemk; renderDistance
	e ()Lemk; simulationDistance
	f ()Lemk; entityDistanceScaling
	g ()Lemk; framerateLimit
	h ()Lemk; cloudStatus
	i ()Lemk; graphicsMode
	j ()Lemk; ambientOcclusion
	k ()Lemk; prioritizeChunkUpdates
	l ()Lemk; chatVisibility
	m ()Lemk; chatOpacity
	n ()Lemk; chatLineSpacing
	o ()Lemk; textBackgroundOpacity
	p ()Lemk; panoramaSpeed
	q ()Lemk; highContrast
	r ()Lemk; mainHand
	s ()Lemk; chatScale
	t ()Lemk; chatWidth
	u ()Lemk; chatHeightUnfocused
	v ()Lemk; chatHeightFocused
	w ()Lemk; chatDelay
	x ()Lemk; notificationDisplayTime
	y ()Lemk; mipmapLevels
	z ()Lemk; attackIndicator
eml$a net/minecraft/client/Options$FieldAccess
	a (Ljava/lang/String;F)F process
	a (Ljava/lang/String;I)I process
	a (Ljava/lang/String;Lemk;)V process
	a (Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/lang/Object; process
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; process
	a (Ljava/lang/String;Z)Z process
emm net/minecraft/client/ParticleStatus
	a ALL
	b DECREASED
	c MINIMAL
	d BY_ID
	e id
	f key
	g $VALUES
	a ()I getId
	a (I)Lemm; byId
	b ()Ljava/lang/String; getKey
	d ()[Lemm; $values
emn net/minecraft/client/PeriodicNotificationManager
	a CODEC
	b LOGGER
	c notifications
	d selector
	e timer
	f notificationTask
	a ()V stopTimer
	a (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)V apply
	a (Ljava/util/List;)J calculateInitialDelay
	a (Ljava/util/List;J)J calculateOptimalPeriod
	a (Ljava/util/Map;Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)V apply
	a (Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)Ljava/util/Map; prepare
	b (Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)Ljava/lang/Object; prepare
emn$a net/minecraft/client/PeriodicNotificationManager$Notification
	a delay
	b period
	c title
	d message
	a ()J delay
	b ()J period
	c ()Ljava/lang/String; title
	d ()Ljava/lang/String; message
emn$b net/minecraft/client/PeriodicNotificationManager$NotificationTask
	a minecraft
	b notifications
	c period
	d elapsed
	a (Ljava/util/List;J)Lemn$b; reset
emo net/minecraft/client/PrioritizeChunkUpdates
	a NONE
	b PLAYER_AFFECTED
	c NEARBY
	d BY_ID
	e id
	f key
	g $VALUES
	a ()I getId
	a (I)Lemo; byId
	b ()Ljava/lang/String; getKey
	d ()[Lemo; $values
emp net/minecraft/client/Realms32BitWarningStatus
	a LOGGER
	b minecraft
	c subscriptionCheck
	d warningScreenShown
	a ()Ljava/lang/Boolean; checkForRealmsSubscription
	a (Letd;)V showRealms32BitWarningIfNeeded
	b ()Z hasRealmsSubscription
emq net/minecraft/client/RecipeBookCategories
	a CRAFTING_SEARCH
	b CRAFTING_BUILDING_BLOCKS
	c CRAFTING_REDSTONE
	d CRAFTING_EQUIPMENT
	e CRAFTING_MISC
	f FURNACE_SEARCH
	g FURNACE_FOOD
	h FURNACE_BLOCKS
	i FURNACE_MISC
	j BLAST_FURNACE_SEARCH
	k BLAST_FURNACE_BLOCKS
	l BLAST_FURNACE_MISC
	m SMOKER_SEARCH
	n SMOKER_FOOD
	o STONECUTTER
	p SMITHING
	q CAMPFIRE
	r UNKNOWN
	s SMOKER_CATEGORIES
	t BLAST_FURNACE_CATEGORIES
	u FURNACE_CATEGORIES
	v CRAFTING_CATEGORIES
	w AGGREGATE_CATEGORIES
	x itemIcons
	y $VALUES
	a ()Ljava/util/List; getIconItems
	a (Lnet/minecraft/world/inventory/RecipeBookType;)Ljava/util/List; getCategories
	b ()[Lemq; $values
emr net/minecraft/client/ResourceLoadStateTracker
	a LOGGER
	b reloadState
	c reloadCount
	a ()V finishReload
	a (Lemr$b;Ljava/util/List;)V startReload
	a (Ljava/lang/Throwable;)V startRecovery
	a (Lnet/minecraft/CrashReport;)V fillCrashReport
emr$a net/minecraft/client/ResourceLoadStateTracker$RecoveryInfo
	a error
	a (Lnet/minecraft/CrashReportSystemDetails;)V fillCrashInfo
emr$b net/minecraft/client/ResourceLoadStateTracker$ReloadReason
	a INITIAL
	b MANUAL
	c UNKNOWN
	d name
	e $VALUES
	a ()[Lemr$b; $values
emr$c net/minecraft/client/ResourceLoadStateTracker$ReloadState
	a reloadReason
	b packs
	c recoveryReloadInfo
	d finished
	a (Lnet/minecraft/CrashReportSystemDetails;)V fillCrashInfo
ems net/minecraft/client/Screenshot
	a SCREENSHOT_DIR
	b LOGGER
	c rowHeight
	d outputStream
	e bytes
	f width
	g height
	h file
	a ()V saveRow
	a (Lefr;)Legf; takeScreenshot
	a (Ljava/io/File;)Ljava/io/File; getFile
	a (Ljava/io/File;Lefr;Ljava/util/function/Consumer;)V grab
	a (Ljava/io/File;Ljava/lang/String;Lefr;Ljava/util/function/Consumer;)V grab
	a (Ljava/nio/ByteBuffer;IIII)V addRegion
	b ()Ljava/io/File; close
	b (Ljava/io/File;Ljava/lang/String;Lefr;Ljava/util/function/Consumer;)V _grab
emt net/minecraft/client/StringSplitter
	a widthProvider
	a (Ljava/lang/String;)F stringWidth
	a (Ljava/lang/String;IIZ)I getWordPosition
	a (Ljava/lang/String;ILnet/minecraft/network/chat/ChatModifier;)I plainIndexAtWidth
	a (Ljava/lang/String;ILnet/minecraft/network/chat/ChatModifier;ZLemt$d;)V splitLines
	a (Lnet/minecraft/network/chat/IChatFormatted;)F stringWidth
	a (Lnet/minecraft/network/chat/IChatFormatted;I)Lnet/minecraft/network/chat/ChatModifier; componentStyleAtWidth
	a (Lnet/minecraft/network/chat/IChatFormatted;ILnet/minecraft/network/chat/ChatModifier;)Lnet/minecraft/network/chat/IChatFormatted; headByWidth
	a (Lnet/minecraft/network/chat/IChatFormatted;ILnet/minecraft/network/chat/ChatModifier;Ljava/util/function/BiConsumer;)V splitLines
	a (Lnet/minecraft/network/chat/IChatFormatted;ILnet/minecraft/network/chat/ChatModifier;Lnet/minecraft/network/chat/IChatFormatted;)Ljava/util/List; splitLines
	a (Lnet/minecraft/util/FormattedString;)F stringWidth
	a (Lnet/minecraft/util/FormattedString;I)Lnet/minecraft/network/chat/ChatModifier; componentStyleAtWidth
	b (Ljava/lang/String;ILnet/minecraft/network/chat/ChatModifier;)Ljava/lang/String; plainHeadByWidth
	b (Lnet/minecraft/network/chat/IChatFormatted;ILnet/minecraft/network/chat/ChatModifier;)Ljava/util/List; splitLines
	c (Ljava/lang/String;ILnet/minecraft/network/chat/ChatModifier;)Ljava/lang/String; plainTailByWidth
	d (Ljava/lang/String;ILnet/minecraft/network/chat/ChatModifier;)I formattedIndexByWidth
	e (Ljava/lang/String;ILnet/minecraft/network/chat/ChatModifier;)Ljava/lang/String; formattedHeadByWidth
	f (Ljava/lang/String;ILnet/minecraft/network/chat/ChatModifier;)I findLineBreak
	g (Ljava/lang/String;ILnet/minecraft/network/chat/ChatModifier;)Ljava/util/List; splitLines
emt$a net/minecraft/client/StringSplitter$FlatComponents
	a parts
	b flatParts
	a ()Lnet/minecraft/network/chat/IChatFormatted; getRemainder
	a (I)C charAt
	a (IILnet/minecraft/network/chat/ChatModifier;)Lnet/minecraft/network/chat/IChatFormatted; splitAt
emt$b net/minecraft/client/StringSplitter$LineBreakFinder
	b maxWidth
	c lineBreak
	d lineBreakStyle
	e hadNonZeroWidthChar
	f width
	g lastSpace
	h lastSpaceStyle
	i nextChar
	j offset
	a ()I getSplitPosition
	a (I)V addToOffset
	a (ILnet/minecraft/network/chat/ChatModifier;)Z finishIteration
	b ()Lnet/minecraft/network/chat/ChatModifier; getSplitStyle
	c ()Z lineBreakFound
emt$c net/minecraft/client/StringSplitter$LineComponent
	c contents
	d style
	a (Ltn$a;)Ljava/util/Optional; visit
	a (Ltn$b;Lnet/minecraft/network/chat/ChatModifier;)Ljava/util/Optional; visit
emt$d net/minecraft/client/StringSplitter$LinePosConsumer
emt$e net/minecraft/client/StringSplitter$WidthLimitedCharSink
	b maxWidth
	c position
	a ()I getPosition
	b ()V resetPosition
emt$f net/minecraft/client/StringSplitter$WidthProvider
emu net/minecraft/client/Timer
	a partialTick
	b tickDelta
	c lastMs
	d msPerTick
	a (J)I advanceTime
emv net/minecraft/client/ToggleKeyMapping
	h needsToggle
	a (Z)V setDown
emw net/minecraft/client/User
	a name
	b uuid
	c accessToken
	d xuid
	e clientId
	f type
	a ()Ljava/lang/String; getSessionId
	b ()Ljava/lang/String; getUuid
	c ()Ljava/lang/String; getName
	d ()Ljava/lang/String; getAccessToken
	e ()Ljava/util/Optional; getClientId
	f ()Ljava/util/Optional; getXuid
	g ()Ljava/util/UUID; getProfileId
	h ()Lcom/mojang/authlib/GameProfile; getGameProfile
	i ()Lemw$a; getType
emw$a net/minecraft/client/User$Type
	a LEGACY
	b MOJANG
	c MSA
	d BY_NAME
	e name
	f $VALUES
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lemw$a; byName
	b ()[Lemw$a; $values
emx net/minecraft/client/animation/AnimationChannel
	a target
	b keyframes
	a ()Lemx$c; target
	b ()[Lemz; keyframes
emx$a net/minecraft/client/animation/AnimationChannel$Interpolation
emx$b net/minecraft/client/animation/AnimationChannel$Interpolations
	a LINEAR
	b CATMULLROM
emx$c net/minecraft/client/animation/AnimationChannel$Target
emx$d net/minecraft/client/animation/AnimationChannel$Targets
	a POSITION
	b ROTATION
	c SCALE
emy net/minecraft/client/animation/AnimationDefinition
	a lengthInSeconds
	b looping
	c boneAnimations
	a ()F lengthInSeconds
	b ()Z looping
	c ()Ljava/util/Map; boneAnimations
emy$a net/minecraft/client/animation/AnimationDefinition$Builder
	a length
	b animationByBone
	c looping
	a ()Lemy$a; looping
	a (F)Lemy$a; withLength
	a (Ljava/lang/String;Lemx;)Lemy$a; addAnimation
	b ()Lemy; build
emz net/minecraft/client/animation/Keyframe
	a timestamp
	b target
	c interpolation
	a ()F timestamp
	b ()Lorg/joml/Vector3f; target
	c ()Lemx$a; interpolation
en$a net/minecraft/commands/arguments/ResourceArgument$Info
	a (Lcom/mojang/brigadier/arguments/ArgumentType;)Lgf$a; unpack
	a (Len$a$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Len$a$a;Lnet/minecraft/network/PacketDataSerializer;)V serializeToNetwork
	a (Lgf$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lgf$a;Lnet/minecraft/network/PacketDataSerializer;)V serializeToNetwork
	a (Lnet/minecraft/commands/arguments/ResourceArgument;)Len$a$a; unpack
	a (Lnet/minecraft/network/PacketDataSerializer;)Len$a$a; deserializeFromNetwork
	b (Lnet/minecraft/network/PacketDataSerializer;)Lgf$a; deserializeFromNetwork
en$a$a net/minecraft/commands/arguments/ResourceArgument$Info$Template
	b registryKey
	a ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; type
	a (Lnet/minecraft/commands/CommandBuildContext;)Lnet/minecraft/commands/arguments/ResourceArgument; instantiate
	b (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; instantiate
ena net/minecraft/client/animation/KeyframeAnimations
	a (DDD)Lorg/joml/Vector3f; scaleVec
	a (FFF)Lorg/joml/Vector3f; posVec
	a (Lemy;J)F getElapsedSeconds
	a (Lfab;Lemy;JFLorg/joml/Vector3f;)V animate
	b (FFF)Lorg/joml/Vector3f; degreeVec
enb net/minecraft/client/animation/definitions/CamelAnimation
	a CAMEL_WALK
	b CAMEL_SIT
	c CAMEL_SIT_POSE
	d CAMEL_STANDUP
	e CAMEL_DASH
	f CAMEL_IDLE
enc net/minecraft/client/animation/definitions/FrogAnimation
	a FROG_CROAK
	b FROG_WALK
	c FROG_JUMP
	d FROG_TONGUE
	e FROG_SWIM
	f FROG_IDLE_WATER
end net/minecraft/client/animation/definitions/SnifferAnimation
	a SNIFFER_SNIFFSNIFF
	b SNIFFER_LONGSNIFF
	c SNIFFER_WALK
	d SNIFFER_SNIFF_SEARCH
	e SNIFFER_DIG
	f SNIFFER_STAND_UP
	g SNIFFER_BABY_FALL
	h SNIFFER_HAPPY
ene net/minecraft/client/animation/definitions/WardenAnimation
	a WARDEN_EMERGE
	b WARDEN_DIG
	c WARDEN_ROAR
	d WARDEN_SNIFF
	e WARDEN_ATTACK
	f WARDEN_SONIC_BOOM
enh net/minecraft/client/color/block/BlockColor
eni net/minecraft/client/color/block/BlockColors
	a DEFAULT
	b blockColors
	c coloringStates
	a ()Leni; createDefault
	a (Lenh;[Lnet/minecraft/world/level/block/Block;)V register
	a (Ljava/util/Set;[Lnet/minecraft/world/level/block/Block;)V addColoringStates
	a (Lnet/minecraft/world/level/block/Block;)Ljava/util/Set; getColoringProperties
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockLightAccess;Lnet/minecraft/core/BlockPosition;I)I getColor
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)I getColor
	a (Lnet/minecraft/world/level/block/state/properties/IBlockState;[Lnet/minecraft/world/level/block/Block;)V addColoringState
enj net/minecraft/client/color/block/BlockTintCache
	a MAX_CACHE_ENTRIES
	b latestChunkOnThread
	c cache
	d lock
	e source
	a ()V invalidateAll
	a (II)V invalidateForChunk
	a (Lnet/minecraft/core/BlockPosition;)I getColor
	b (II)Lenj$a; findOrCreateChunkCache
enj$a net/minecraft/client/color/block/BlockTintCache$CacheData
	a cache
	b lock
	c BLOCKS_PER_LAYER
	d invalidated
	a ()Z isInvalidated
	a (I)[I getLayer
	b ()V invalidate
	c ()[I allocateLayer
enj$b net/minecraft/client/color/block/BlockTintCache$LatestCacheInfo
	a x
	b z
	c cache
enl net/minecraft/client/color/item/ItemColor
enm net/minecraft/client/color/item/ItemColors
	a DEFAULT
	b itemColors
	a (Leni;)Lenm; createDefault
	a (Lenl;[Lnet/minecraft/world/level/IMaterial;)V register
	a (Lnet/minecraft/world/item/ItemStack;I)I getColor
eno net/minecraft/client/gui/ComponentPath
	a ()Lepl; component
	a (Lepk;Leno;)Leno; path
	a (Lepl;)Leno; leaf
	a (Lepl;[Lepk;)Leno; path
	a (Z)V applyFocus
eno$a net/minecraft/client/gui/ComponentPath$Leaf
	a component
	a ()Lepl; component
	a (Z)V applyFocus
eno$b net/minecraft/client/gui/ComponentPath$Path
	a component
	b childPath
	a ()Lepl; component
	a (Z)V applyFocus
	b ()Lepk; component
	c ()Leno; childPath
enp net/minecraft/client/gui/Font
	a ALPHA_CUTOFF
	b lineHeight
	c random
	d EFFECT_DEPTH
	e SHADOW_OFFSET
	f fonts
	g filterFishyGlyphs
	h splitter
	a ()Z isBidirectional
	a (I)I adjustColor
	a (Lehe;Ljava/lang/String;FFI)I drawShadow
	a (Lehe;Ljava/lang/String;FFIZ)I drawShadow
	a (Lehe;Lnet/minecraft/network/chat/IChatBaseComponent;FFI)I drawShadow
	a (Lehe;Lnet/minecraft/network/chat/IChatFormatted;IIII)V drawWordWrap
	a (Lehe;Lnet/minecraft/util/FormattedString;FFI)I drawShadow
	a (Leqh;ZZFFFLorg/joml/Matrix4f;Lehi;FFFFI)V renderChar
	a (Ljava/lang/String;)Ljava/lang/String; bidirectionalShaping
	a (Ljava/lang/String;FFILorg/joml/Matrix4f;ZZ)I drawInternal
	a (Ljava/lang/String;FFIZLorg/joml/Matrix4f;Lfig;Lenp$a;II)I drawInBatch
	a (Ljava/lang/String;FFIZLorg/joml/Matrix4f;Lfig;Lenp$a;IIZ)I drawInBatch
	a (Ljava/lang/String;I)Ljava/lang/String; plainSubstrByWidth
	a (Ljava/lang/String;IZ)Ljava/lang/String; plainSubstrByWidth
	a (Lnet/minecraft/network/chat/IChatBaseComponent;FFIZLorg/joml/Matrix4f;Lfig;Lenp$a;II)I drawInBatch
	a (Lnet/minecraft/network/chat/IChatFormatted;)I width
	a (Lnet/minecraft/network/chat/IChatFormatted;I)Lnet/minecraft/network/chat/IChatFormatted; substrByWidth
	a (Lnet/minecraft/resources/MinecraftKey;)Leqe; getFontSet
	a (Lnet/minecraft/util/FormattedString;)I width
	a (Lnet/minecraft/util/FormattedString;FFIILorg/joml/Matrix4f;Lfig;I)V drawInBatch8xOutline
	a (Lnet/minecraft/util/FormattedString;FFILorg/joml/Matrix4f;Z)I drawInternal
	a (Lnet/minecraft/util/FormattedString;FFIZLorg/joml/Matrix4f;Lfig;Lenp$a;II)I drawInBatch
	b ()Lemt; getSplitter
	b (Lehe;Ljava/lang/String;FFI)I draw
	b (Lehe;Lnet/minecraft/network/chat/IChatBaseComponent;FFI)I draw
	b (Lehe;Lnet/minecraft/util/FormattedString;FFI)I draw
	b (Ljava/lang/String;)I width
	b (Ljava/lang/String;FFIZLorg/joml/Matrix4f;Lfig;Lenp$a;II)F renderText
	b (Ljava/lang/String;FFIZLorg/joml/Matrix4f;Lfig;Lenp$a;IIZ)I drawInternal
	b (Ljava/lang/String;I)I wordWrapHeight
	b (Lnet/minecraft/network/chat/IChatFormatted;I)I wordWrapHeight
	b (Lnet/minecraft/util/FormattedString;FFIZLorg/joml/Matrix4f;Lfig;Lenp$a;II)I drawInternal
	c (Lnet/minecraft/network/chat/IChatFormatted;I)Ljava/util/List; split
	c (Lnet/minecraft/util/FormattedString;FFIZLorg/joml/Matrix4f;Lfig;Lenp$a;II)F renderText
enp$a net/minecraft/client/gui/Font$DisplayMode
	a NORMAL
	b SEE_THROUGH
	c POLYGON_OFFSET
	d $VALUES
	a ()[Lenp$a; $values
enp$b net/minecraft/client/gui/Font$StringRenderOutput
	a bufferSource
	c dropShadow
	d dimFactor
	e r
	f g
	g b
	h a
	i pose
	j mode
	k packedLightCoords
	l x
	m y
	n effects
	a (IF)F finish
	a (Leqh$a;)V addEffect
enq net/minecraft/client/gui/Gui
	A overlayMessageString
	B overlayMessageTime
	C animateOverlayMessageColor
	D chatDisabledByPlayerShown
	E toolHighlightTimer
	F lastToolHighlight
	G debugScreen
	H subtitleOverlay
	I spectatorGui
	J tabList
	K bossOverlay
	L titleTime
	M title
	N subtitle
	O titleFadeInTime
	P titleStayTime
	Q titleFadeOutTime
	R lastHealth
	S displayHealth
	T lastHealthTime
	U healthBlinkTime
	V screenWidth
	W screenHeight
	X autosaveIndicatorValue
	Y lastAutosaveIndicatorValue
	Z scopeScale
	a vignetteBrightness
	b VIGNETTE_LOCATION
	c WIDGETS_LOCATION
	d PUMPKIN_BLUR_LOCATION
	e SPYGLASS_SCOPE_LOCATION
	f POWDER_SNOW_OUTLINE_LOCATION
	k DEMO_EXPIRED_TEXT
	l SAVING_TEXT
	m COLOR_WHITE
	n MIN_CROSSHAIR_ATTACK_SPEED
	o NUM_HEARTS_PER_ROW
	p LINE_HEIGHT
	q SPACER
	r PORTAL_OVERLAY_ALPHA_MIN
	s HEART_SIZE
	t HEART_SEPARATION
	u AUTOSAVE_FADE_SPEED_FACTOR
	v random
	w minecraft
	x itemRenderer
	y chat
	z tickCount
	a ()V resetTitleTimes
	a (FLehe;)V renderHotbar
	a (I)I getVisibleVehicleHeartRows
	a (III)V setTimes
	a (Lehe;)V renderEffects
	a (Lehe;F)V render
	a (Lehe;I)V renderExperienceBar
	a (Lehe;IIFLnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/item/ItemStack;I)V renderSlot
	a (Lehe;Lenp;III)V drawBackdrop
	a (Lehe;Lenq$a;IIIZZ)V renderHeart
	a (Lehe;Lnet/minecraft/resources/MinecraftKey;F)V renderTextureOverlay
	a (Lehe;Lnet/minecraft/world/entity/Entity;)V renderVignette
	a (Lehe;Lnet/minecraft/world/entity/player/EntityHuman;IIIIFIIIZ)V renderHearts
	a (Lehe;Lnet/minecraft/world/scores/ScoreboardObjective;)V displayScoreboardSidebar
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V setNowPlaying
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Z)V setOverlayMessage
	a (Lnet/minecraft/world/entity/Entity;)V updateVignetteBrightness
	a (Lnet/minecraft/world/entity/EntityLiving;)I getVehicleMaxHearts
	a (Lnet/minecraft/world/entity/IJumpable;Lehe;I)V renderJumpMeter
	a (Lnet/minecraft/world/phys/MovingObjectPosition;)Z canRenderCrosshairForSpectator
	a (Z)V tick
	b ()Z isShowingChatDisabledByPlayer
	b (Lehe;)V renderSelectedItemName
	b (Lehe;F)V renderSpyglassOverlay
	b (Lnet/minecraft/network/chat/IChatBaseComponent;)V setSubtitle
	b (Z)V setChatDisabledByPlayerShown
	c ()V clear
	c (Lehe;)V renderDemoOverlay
	c (Lehe;F)V renderPortalOverlay
	c (Lnet/minecraft/network/chat/IChatBaseComponent;)V setTitle
	d ()Leod; getChat
	d (Lehe;)V renderCrosshair
	e ()I getGuiTicks
	e (Lehe;)V renderPlayerHealth
	f ()Lenp; getFont
	f (Lehe;)V renderVehicleHealth
	g ()Lepo; getSpectatorGui
	g (Lehe;)V renderSavingIndicator
	h ()Leoz; getTabList
	i ()V onDisconnected
	j ()Leob; getBossOverlay
	k ()V clearCache
	m ()Lnet/minecraft/world/entity/player/EntityHuman; getCameraPlayer
	n ()Lnet/minecraft/world/entity/EntityLiving; getPlayerVehicleWithHealth
	o ()V tick
	p ()V tickAutosaveIndicator
enq$a net/minecraft/client/gui/Gui$HeartType
	a CONTAINER
	b NORMAL
	c POISIONED
	d WITHERED
	e ABSORBING
	f FROZEN
	g index
	h canBlink
	i $VALUES
	a ()[Lenq$a; $values
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Lenq$a; forPlayer
	a (ZZ)I getX
enr net/minecraft/client/gui/GuiComponent
	a SCISSOR_STACK
	g BACKGROUND_LOCATION
	h STATS_ICON_LOCATION
	i GUI_ICONS_LOCATION
	j LIGHT_DIRT_BACKGROUND
	a (II)Lit/unimi/dsi/fastutil/ints/IntIterator; slices
	a (IIII)V enableScissor
	a (IILjava/util/function/BiConsumer;)V blitOutlineBlack
	a (Lehe;IIFFIIII)V blit
	a (Lehe;IIIFFIIII)V blit
	a (Lehe;IIII)V hLine
	a (Lehe;IIIIFFIIII)V blit
	a (Lehe;IIIII)V fill
	a (Lehe;IIIIII)V fill
	a (Lehe;IIIIIII)V fillGradient
	a (Lehe;IIIIIIIFFII)V blit
	a (Lehe;IIIIIIII)V blitRepeating
	a (Lehe;IIIIIIIII)V blitNineSliced
	a (Lehe;IIIIIIIIII)V blitNineSliced
	a (Lehe;IIIIIIIIIIII)V blitNineSliced
	a (Lehe;IIIIILftc;)V blit
	a (Lehe;IIIIILftc;FFFF)V blit
	a (Lehe;Lenp;Ljava/lang/String;III)V drawCenteredString
	a (Lehe;Lenp;Lnet/minecraft/network/chat/IChatBaseComponent;III)V drawCenteredString
	a (Lehe;Lenp;Lnet/minecraft/util/FormattedString;III)V drawCenteredString
	a (Lern;)V applyScissor
	a (Lorg/joml/Matrix4f;IIIIIFFFF)V innerBlit
	a (Lorg/joml/Matrix4f;IIIIIFFFFFFFF)V innerBlit
	a (Lorg/joml/Matrix4f;Legz;IIIIIII)V fillGradient
	b (Lehe;IIII)V vLine
	b (Lehe;IIIII)V renderOutline
	b (Lehe;IIIIII)V fillGradient
	b (Lehe;Lenp;Ljava/lang/String;III)V drawString
	b (Lehe;Lenp;Lnet/minecraft/network/chat/IChatBaseComponent;III)V drawString
	b (Lehe;Lenp;Lnet/minecraft/util/FormattedString;III)V drawString
	c (Lehe;IIIIII)V blit
	l ()V disableScissor
enr$a net/minecraft/client/gui/GuiComponent$ScissorStack
	a stack
	a ()Lern; pop
	a (Lern;)Lern; push
ens net/minecraft/client/gui/MapRenderer
	a MAP_ICONS_LOCATION
	b MAP_ICONS
	c WIDTH
	d HEIGHT
	e textureManager
	f maps
	a ()V resetData
	a (ILnet/minecraft/world/level/saveddata/maps/WorldMap;)V update
	a (Lehe;Lfig;ILnet/minecraft/world/level/saveddata/maps/WorldMap;ZI)V render
	b (ILnet/minecraft/world/level/saveddata/maps/WorldMap;)Lens$a; getOrCreateMapInstance
ens$a net/minecraft/client/gui/MapRenderer$MapInstance
	b data
	c texture
	d renderType
	e requiresUpload
	a ()V forceUpload
	a (Lehe;Lfig;ZI)V draw
	a (Lnet/minecraft/world/level/saveddata/maps/WorldMap;)V replaceMapData
	b ()V updateTexture
ent net/minecraft/client/gui/components/AbstractButton
	k TEXTURE_Y_OFFSET
	l TEXTURE_WIDTH
	m TEXTURE_HEIGHT
	n TEXTURE_BORDER_X
	o TEXTURE_BORDER_Y
	p TEXT_MARGIN
	a ()I getTextureY
	a (DD)V onClick
	a (III)Z keyPressed
	a (Lehe;Lenp;I)V renderString
	b (Lehe;IIF)V renderWidget
	c ()V onPress
enu net/minecraft/client/gui/components/AbstractOptionSliderButton
	a options
env net/minecraft/client/gui/components/AbstractScrollWidget
	a BORDER_COLOR_FOCUSED
	b BORDER_COLOR
	c BACKGROUND_COLOR
	d INNER_PADDING
	e scrollAmount
	f scrolling
	a ()I innerPadding
	a (D)V setScrollAmount
	a (DDD)Z mouseScrolled
	a (DDI)Z mouseClicked
	a (DDIDD)Z mouseDragged
	a (II)Z withinContentAreaTopBottom
	a (III)Z keyPressed
	a (Lehe;)V renderDecorations
	b ()I totalInnerPadding
	b (DDI)Z mouseReleased
	b (Lehe;)V renderBackground
	b (Lehe;IIF)V renderWidget
	c ()D scrollAmount
	c (DD)Z withinContentAreaPoint
	c (Lehe;)V renderScrollBar
	c (Lehe;IIF)V renderContents
	d ()I getMaxScrollAmount
	e ()I getInnerHeight
	f ()Z scrollbarVisible
	g ()D scrollRate
	t ()I getScrollBarHeight
	v ()I getContentHeight
enw net/minecraft/client/gui/components/AbstractSelectionList
	a children
	b minecraft
	c itemHeight
	d width
	e height
	f y0
	k y1
	l x1
	m x0
	n centerListVertically
	o headerHeight
	p scrollAmount
	q renderSelection
	r renderHeader
	s scrolling
	t selected
	u renderBackground
	v renderTopAndBottom
	w hovered
	a ()I getMaxPosition
	a (D)V setScrollAmount
	a (DD)Lenw$a; getEntryAtPosition
	a (DDD)Z mouseScrolled
	a (DDI)Z mouseClicked
	a (DDIDD)Z mouseDragged
	a (I)V scroll
	a (II)V clickedHeader
	a (Lehe;)V renderBackground
	a (Lehe;II)V renderHeader
	a (Lehe;IIF)V render
	a (Lehe;IIFIIIII)V renderItem
	a (Lenw$a;)V setSelected
	a (Lepl;)V setFocused
	a (Lere;Lenw$a;)V narrateListElementPosition
	a (Lerl;)Lenw$a; nextEntry
	a (Lerl;Ljava/util/function/Predicate;)Lenw$a; nextEntry
	a (Lerl;Ljava/util/function/Predicate;Lenw$a;)Lenw$a; nextEntry
	a (Ljava/util/Collection;)V replaceEntries
	a (Z)V setRenderSelection
	a (ZI)V setRenderHeader
	a_ (DD)Z isMouseOver
	b ()I getRowWidth
	b (DDI)Z mouseReleased
	b (IIII)V updateSize
	b (Lehe;II)V renderDecorations
	b (Lehe;IIF)V renderList
	b (Lenw$a;)I addEntry
	b (Z)V setRenderBackground
	c ()I getScrollbarPosition
	c (DDI)V updateScrollingState
	c (Lehe;IIIII)V renderSelection
	c (Lenw$a;)V addEntryToTop
	c (Z)V setRenderTopAndBottom
	d (I)Lenw$a; getEntry
	d (Lenw$a;)Z removeEntryFromTop
	e (I)Z isSelectedItem
	e (Lenw$a;)V centerScrollOn
	f ()Lenw$a; getSelected
	f (I)V setLeftPos
	f (Lenw$a;)V ensureVisible
	g ()Lenw$a; getFirstElement
	g (I)I getRowTop
	g (Lenw$a;)Z removeEntry
	h ()Lenw$a; getFocused
	h (I)I getRowBottom
	h (Lenw$a;)V bindEntryToSelf
	i ()Ljava/util/List; children
	i (I)Lenw$a; remove
	j ()V clearEntries
	k ()I getItemCount
	m ()V enableScissor
	n ()D getScrollAmount
	o ()I getMaxScroll
	p ()I getScrollBottom
	q ()I getRowLeft
	r ()I getRowRight
	s ()Lerc$a; narrationPriority
	t ()Lenw$a; getHovered
	u ()Lern; getRectangle
	v ()Lepl; getFocused
enw$a net/minecraft/client/gui/components/AbstractSelectionList$Entry
	a list
	a (Lehe;IIIIIIIZF)V render
	aD_ ()Z isFocused
	a_ (DD)Z isMouseOver
	b (Lehe;IIIIIIIZF)V renderBack
	b_ (Z)V setFocused
enw$b net/minecraft/client/gui/components/AbstractSelectionList$TrackedList
	b delegate
	a (I)Lenw$a; get
	a (ILenw$a;)Lenw$a; set
	b (I)Lenw$a; remove
	b (ILenw$a;)V add
enx net/minecraft/client/gui/components/AbstractSliderButton
	A canChangeValue
	a SLIDER_LOCATION
	b TEXTURE_WIDTH
	c TEXTURE_HEIGHT
	d TEXTURE_BORDER_X
	e TEXTURE_BORDER_Y
	f TEXT_MARGIN
	k value
	l HEIGHT
	m HANDLE_HALF_WIDTH
	n HANDLE_WIDTH
	o BACKGROUND
	p BACKGROUND_FOCUSED
	y HANDLE
	z HANDLE_FOCUSED
	a ()V applyValue
	a (D)V setValueFromMouse
	a (DD)V onClick
	a (DDDD)V onDrag
	a (III)Z keyPressed
	a (Lere;)V updateWidgetNarration
	a (Lfxj;)V playDownSound
	aH_ ()Lnet/minecraft/network/chat/IChatMutableComponent; createNarrationMessage
	b ()V updateMessage
	b (D)V setValue
	b (DD)V onRelease
	b (Lehe;IIF)V renderWidget
	b_ (Z)V setFocused
	e ()I getTextureY
	f ()I getHandleTextureY
eny net/minecraft/client/gui/components/AbstractStringWidget
	a font
	b color
	a ()Lenp; getFont
	a (I)Leny; setColor
	a (Lere;)V updateWidgetNarration
	b ()I getColor
enz net/minecraft/client/gui/components/AbstractWidget
	a PERIOD_PER_SCROLLED_PIXEL
	b MIN_SCROLL_PERIOD
	c x
	d y
	e message
	f tabOrderGroup
	k focused
	l tooltip
	m tooltipMsDelay
	n hoverOrFocusedStartTime
	o wasHoveredOrFocused
	q WIDGETS_LOCATION
	r ACCESSIBILITY_TEXTURE
	s width
	t height
	u isHovered
	v active
	w visible
	x alpha
	a ()V updateTooltip
	a (DD)V onClick
	a (DDDD)V onDrag
	a (DDI)Z mouseClicked
	a (DDIDD)Z mouseDragged
	a (F)V setAlpha
	a (Lehe;IIF)V render
	a (Lehe;Lenp;II)V renderScrollingString
	a (Lehe;Lenp;Lnet/minecraft/network/chat/IChatBaseComponent;IIIII)V renderScrollingString
	a (Lehe;Lnet/minecraft/resources/MinecraftKey;IIIIIIIII)V renderTexture
	a (Leph;)V setTooltip
	a (Lere;)V updateWidgetNarration
	a (Lerj;)Leno; nextFocusPath
	a (Lfxj;)V playDownSound
	a (Ljava/util/function/Consumer;)V visitWidgets
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)Lnet/minecraft/network/chat/IChatMutableComponent; wrapDefaultNarrationMessage
	aD_ ()Z isFocused
	aF_ ()I getTabOrderGroup
	aG_ ()Z isActive
	aH_ ()Lnet/minecraft/network/chat/IChatMutableComponent; createNarrationMessage
	a_ (DD)Z isMouseOver
	b (DD)V onRelease
	b (DDI)Z mouseReleased
	b (I)V setTooltipDelay
	b (Lehe;IIF)V renderWidget
	b (Lere;)V updateNarration
	b (Lnet/minecraft/network/chat/IChatBaseComponent;)V setMessage
	b_ (Z)V setFocused
	c (I)Z isValidClickButton
	c (Lere;)V defaultButtonNarrationText
	d (DD)Z clicked
	d (I)V setWidth
	e (I)V setX
	f (I)V setY
	g (I)V setTabOrderGroup
	h ()I getHeight
	i ()Levv; createTooltipPositioner
	j ()I getWidth
	k ()Lnet/minecraft/network/chat/IChatBaseComponent; getMessage
	m ()Z isHovered
	n ()Z isHoveredOrFocused
	p ()I getX
	q ()I getY
	s ()Lerc$a; narrationPriority
	u ()Lern; getRectangle
eo$a net/minecraft/commands/arguments/ResourceKeyArgument$Info
	a (Lcom/mojang/brigadier/arguments/ArgumentType;)Lgf$a; unpack
	a (Leo$a$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Leo$a$a;Lnet/minecraft/network/PacketDataSerializer;)V serializeToNetwork
	a (Lgf$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lgf$a;Lnet/minecraft/network/PacketDataSerializer;)V serializeToNetwork
	a (Lnet/minecraft/commands/arguments/ResourceKeyArgument;)Leo$a$a; unpack
	a (Lnet/minecraft/network/PacketDataSerializer;)Leo$a$a; deserializeFromNetwork
	b (Lnet/minecraft/network/PacketDataSerializer;)Lgf$a; deserializeFromNetwork
eo$a$a net/minecraft/commands/arguments/ResourceKeyArgument$Info$Template
	b registryKey
	a ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; type
	a (Lnet/minecraft/commands/CommandBuildContext;)Lnet/minecraft/commands/arguments/ResourceKeyArgument; instantiate
	b (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; instantiate
eoa net/minecraft/client/gui/components/AccessibilityOnboardingTextWidget
	a BORDER_COLOR_FOCUSED
	b BORDER_COLOR
	c BACKGROUND_COLOR
	d PADDING
	e BORDER
	a (Lere;)V updateWidgetNarration
	a (Lfxj;)V playDownSound
	b (Lehe;IIF)V renderWidget
eob net/minecraft/client/gui/components/BossHealthOverlay
	a GUI_BARS_LOCATION
	b BAR_WIDTH
	c BAR_HEIGHT
	d OVERLAY_OFFSET
	e minecraft
	f events
	a ()V reset
	a (Lehe;)V render
	a (Lehe;IILnet/minecraft/world/BossBattle;)V drawBar
	a (Lehe;IILnet/minecraft/world/BossBattle;II)V drawBar
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutBoss;)V update
	b ()Z shouldPlayMusic
	c ()Z shouldDarkenScreen
	d ()Z shouldCreateWorldFog
eoc net/minecraft/client/gui/components/Button
	A DEFAULT_HEIGHT
	B DEFAULT_NARRATION
	C onPress
	D createNarration
	y SMALL_WIDTH
	z DEFAULT_WIDTH
	a (Lere;)V updateWidgetNarration
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Leoc$c;)Leoc$a; builder
	aH_ ()Lnet/minecraft/network/chat/IChatMutableComponent; createNarrationMessage
	c ()V onPress
eoc$a net/minecraft/client/gui/components/Button$Builder
	a message
	b onPress
	c tooltip
	d x
	e y
	f width
	g height
	h createNarration
	a ()Leoc; build
	a (I)Leoc$a; width
	a (II)Leoc$a; pos
	a (IIII)Leoc$a; bounds
	a (Leoc$b;)Leoc$a; createNarration
	a (Leph;)Leoc$a; tooltip
	b (II)Leoc$a; size
eoc$b net/minecraft/client/gui/components/Button$CreateNarration
eoc$c net/minecraft/client/gui/components/Button$OnPress
eod net/minecraft/client/gui/components/ChatComponent
	a LOGGER
	b MAX_CHAT_HISTORY
	c MESSAGE_NOT_FOUND
	d MESSAGE_INDENT
	e MESSAGE_TAG_MARGIN_LEFT
	f BOTTOM_MARGIN
	k TIME_BEFORE_MESSAGE_DELETION
	l DELETED_CHAT_MESSAGE
	m minecraft
	n recentChat
	o allMessages
	p trimmedMessages
	q chatScrollbarPos
	r newMessageSinceScroll
	s messageDeletionQueue
	a ()V tick
	a (D)I getWidth
	a (DD)Z handleChatQueueClicked
	a (DLemb$a;Lemc;)Z hasSelectedMessageTag
	a (I)V scrollChat
	a (Lehe;III)V render
	a (Lehe;IILemc$a;)V drawTagIcon
	a (Lemb$a;)I getTagIconLeft
	a (Lemb;)Lemb; createDeletedMarker
	a (Ljava/lang/String;)V addRecentChat
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V addMessage
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Lemc;)V logChatMessage
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Lnet/minecraft/network/chat/MessageSignature;ILemc;Z)V addMessage
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Lnet/minecraft/network/chat/MessageSignature;Lemc;)V addMessage
	a (Lnet/minecraft/network/chat/MessageSignature;)V deleteMessage
	a (Z)V clearMessages
	b ()V rescaleChat
	b (D)I getHeight
	b (DD)Lnet/minecraft/network/chat/ChatModifier; getClickedComponentStyleAt
	b (I)D getTimeFactor
	b (Lnet/minecraft/network/chat/MessageSignature;)Leod$a; deleteMessageOrDelay
	c ()Ljava/util/List; getRecentChat
	c (D)D screenToChatX
	c (DD)Lemc; getMessageTagAt
	d ()V resetChatScroll
	d (D)D screenToChatY
	d (DD)I getMessageEndIndexAt
	e ()I getWidth
	e (DD)I getMessageLineIndexAt
	f ()I getHeight
	g ()D getScale
	h ()D defaultUnfocusedPct
	i ()I getLinesPerPage
	j ()Z isChatHidden
	k ()V processMessageDeletionQueue
	m ()V refreshTrimmedMessage
	n ()Z isChatFocused
	o ()I getLineHeight
eod$a net/minecraft/client/gui/components/ChatComponent$DelayedMessageDeletion
	a signature
	b deletableAfter
	a ()Lnet/minecraft/network/chat/MessageSignature; signature
	b ()I deletableAfter
eoe net/minecraft/client/gui/components/Checkbox
	a TEXTURE
	b TEXT_COLOR
	c selected
	d showLabel
	a ()Z selected
	a (Lere;)V updateWidgetNarration
	b (Lehe;IIF)V renderWidget
	c ()V onPress
eof net/minecraft/client/gui/components/CommandSuggestions
	a WHITESPACE_PATTERN
	b UNPARSED_STYLE
	c LITERAL_STYLE
	d ARGUMENT_STYLES
	e minecraft
	f screen
	g input
	h font
	i commandsOnly
	j onlyShowIfCursorPastError
	k lineStartOffset
	l suggestionLineLimit
	m anchorToBottom
	n fillColor
	o commandUsage
	p commandUsagePosition
	q commandUsageWidth
	r currentParse
	s pendingSuggestions
	t suggestions
	u allowSuggestions
	v keepSuggestions
	a ()V hide
	a (D)Z mouseScrolled
	a (DDI)Z mouseClicked
	a (III)Z keyPressed
	a (Lcom/mojang/brigadier/ParseResults;Ljava/lang/String;I)Lnet/minecraft/util/FormattedString; formatText
	a (Lcom/mojang/brigadier/exceptions/CommandSyntaxException;)Lnet/minecraft/util/FormattedString; getExceptionMessage
	a (Lcom/mojang/brigadier/suggestion/Suggestions;)Ljava/util/List; sortSuggestions
	a (Lehe;)V renderUsage
	a (Lehe;II)V render
	a (Ljava/lang/String;)I getLastWordIndex
	a (Ljava/lang/String;I)Lnet/minecraft/util/FormattedString; formatChat
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; calculateSuggestionSuffix
	a (Lnet/minecraft/EnumChatFormat;)V fillNodeUsage
	a (Z)V setAllowSuggestions
	b ()V updateCommandInfo
	b (Lehe;II)Z renderSuggestions
	b (Z)V showSuggestions
	c ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarrationMessage
	d ()V updateUsageInfo
eof$a net/minecraft/client/gui/components/CommandSuggestions$SuggestionsList
	b rect
	c originalContents
	d suggestionList
	e offset
	f current
	g lastMouse
	h tabCycles
	i lastNarratedEntry
	a ()V useSuggestion
	a (D)Z mouseScrolled
	a (I)V cycle
	a (III)Z mouseClicked
	a (Lehe;II)V render
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarrationMessage
	b (I)V select
	b (III)Z keyPressed
eog net/minecraft/client/gui/components/CommonButtons
	a (Leoc$c;)Lepg; languageTextAndImage
	b (Leoc$c;)Lepg; accessibilityTextAndImage
eoh net/minecraft/client/gui/components/ComponentRenderUtils
	a INDENT
	a (Ljava/lang/String;)Ljava/lang/String; stripColor
	a (Lnet/minecraft/network/chat/IChatFormatted;ILenp;)Ljava/util/List; wrapComponents
eoi net/minecraft/client/gui/components/ContainerObjectSelectionList
	a (Lepl;)V setFocused
	a (Lerj;)Leno; nextFocusPath
	b (Lere;)V updateNarration
	e (I)Z isSelectedItem
	s ()Lerc$a; narrationPriority
eoi$a net/minecraft/client/gui/components/ContainerObjectSelectionList$Entry
	a focused
	b lastNarratable
	c dragging
	a (DDI)Z mouseClicked
	a (Lepl;)V setFocused
	a (Lere;)V updateNarration
	a (Lerj;)Leno; nextFocusPath
	a (Lerj;I)Leno; focusPathAtIndex
	aC_ ()Z isDragging
	aD_ ()Z isFocused
	a_ (DD)Z isMouseOver
	b ()Ljava/util/List; narratables
	b (Lehe;IIIIIIIZF)V renderBack
	b_ (Z)V setFocused
	c_ (Z)V setDragging
	v ()Lepl; getFocused
eoj net/minecraft/client/gui/components/CycleButton
	A onValueChange
	B displayOnlyValue
	C tooltipSupplier
	a DEFAULT_ALT_LIST_SELECTOR
	b BOOLEAN_OPTIONS
	c name
	d index
	e value
	f values
	y valueStringifier
	z narrationProvider
	a ()Ljava/lang/Object; getValue
	a (DDD)Z mouseScrolled
	a (I)V cycleValue
	a (Lere;)V updateWidgetNarration
	a (Ljava/lang/Object;)V setValue
	a (Ljava/util/function/Function;)Leoj$a; builder
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Lnet/minecraft/network/chat/IChatBaseComponent;)Leoj$a; booleanBuilder
	aH_ ()Lnet/minecraft/network/chat/IChatMutableComponent; createNarrationMessage
	b ()Lnet/minecraft/network/chat/IChatMutableComponent; createDefaultNarrationMessage
	b (Ljava/lang/Object;)V updateValue
	b (Z)Leoj$a; onOffBuilder
	c ()V onPress
	c (Ljava/lang/Object;)Lnet/minecraft/network/chat/IChatBaseComponent; createLabelForValue
	d (Ljava/lang/Object;)Lnet/minecraft/network/chat/IChatMutableComponent; createFullName
	e ()Leoj$a; onOffBuilder
	f ()V updateTooltip
	h (I)Ljava/lang/Object; getCycledValue
eoj$a net/minecraft/client/gui/components/CycleButton$Builder
	a initialIndex
	b initialValue
	c valueStringifier
	d tooltipSupplier
	e narrationProvider
	f values
	g displayOnlyValue
	a ()Leoj$a; displayOnlyValue
	a (IIIILnet/minecraft/network/chat/IChatBaseComponent;)Leoj; create
	a (IIIILnet/minecraft/network/chat/IChatBaseComponent;Leoj$b;)Leoj; create
	a (Lemk$l;)Leoj$a; withTooltip
	a (Leoj$c;)Leoj$a; withValues
	a (Ljava/lang/Object;)Leoj$a; withInitialValue
	a (Ljava/util/Collection;)Leoj$a; withValues
	a (Ljava/util/List;Ljava/util/List;)Leoj$a; withValues
	a (Ljava/util/function/BooleanSupplier;Ljava/util/List;Ljava/util/List;)Leoj$a; withValues
	a (Ljava/util/function/Function;)Leoj$a; withCustomNarration
	a ([Ljava/lang/Object;)Leoj$a; withValues
eoj$b net/minecraft/client/gui/components/CycleButton$OnValueChange
eoj$c net/minecraft/client/gui/components/CycleButton$ValueListSupplier
	a ()Ljava/util/List; getSelectedList
	a (Ljava/util/Collection;)Leoj$c; create
	a (Ljava/util/function/BooleanSupplier;Ljava/util/List;Ljava/util/List;)Leoj$c; create
	b ()Ljava/util/List; getDefaultList
eok net/minecraft/client/gui/components/DebugScreenOverlay
	a COLOR_GREY
	b MARGIN_RIGHT
	c MARGIN_LEFT
	d MARGIN_TOP
	e HEIGHTMAP_NAMES
	f minecraft
	k allocationRateCalculator
	l font
	m block
	n liquid
	o lastPos
	p clientChunk
	q serverChunk
	r RED
	s YELLOW
	t GREEN
	a ()V clearChunkCache
	a (IIF)I colorLerp
	a (J)J bytesToMegabytes
	a (Lehe;)V render
	a (Lehe;Lnet/minecraft/util/CircularTimer;IIZ)V drawChart
	a (Ljava/util/Map$Entry;)Ljava/lang/String; getPropertyValueString
	a (Lnet/minecraft/core/Holder;)Ljava/lang/String; printBiome
	b ()Ljava/util/List; getGameInformation
	b (IIII)I getSampleColor
	b (Lehe;)V drawGameInformation
	c ()Ljava/util/List; getSystemInformation
	c (Lehe;)V drawSystemInformation
	d ()Lnet/minecraft/server/level/WorldServer; getServerLevel
	e ()Ljava/lang/String; getServerChunkStats
	f ()Lnet/minecraft/world/level/World; getLevel
	g ()Lnet/minecraft/world/level/chunk/Chunk; getServerChunk
	h ()Lnet/minecraft/world/level/chunk/Chunk; getClientChunk
eok$a net/minecraft/client/gui/components/DebugScreenOverlay$AllocationRateCalculator
	a UPDATE_INTERVAL_MS
	b GC_MBEANS
	c lastTime
	d lastHeapUsage
	e lastGcCounts
	f lastRate
	a ()J gcCounts
	a (J)J bytesAllocatedPerSecond
eol net/minecraft/client/gui/components/EditBox
	A canLoseFocus
	B isEditable
	C shiftPressed
	D displayPos
	E cursorPos
	F highlightPos
	G textColor
	H textColorUneditable
	I suggestion
	J responder
	K filter
	L formatter
	M hint
	a BACKWARDS
	b FORWARDS
	c DEFAULT_TEXT_COLOR
	d CURSOR_INSERT_WIDTH
	e CURSOR_INSERT_COLOR
	f CURSOR_APPEND_CHARACTER
	k BORDER_COLOR_FOCUSED
	l BORDER_COLOR
	m BACKGROUND_COLOR
	n font
	o value
	p maxLength
	y frame
	z bordered
	A ()Z isEditable
	a ()V tick
	a (CI)Z charTyped
	a (DDI)Z mouseClicked
	a (I)V deleteWords
	a (II)I getWordPosition
	a (III)Z keyPressed
	a (IIZ)I getWordPosition
	a (Lere;)V updateWidgetNarration
	a (Lerj;)Leno; nextFocusPath
	a (Ljava/lang/String;)V setValue
	a (Ljava/util/function/BiFunction;)V setFormatter
	a (Ljava/util/function/Predicate;)V setFilter
	aH_ ()Lnet/minecraft/network/chat/IChatMutableComponent; createNarrationMessage
	a_ (DD)Z isMouseOver
	b ()Ljava/lang/String; getValue
	b (Lehe;IIF)V renderWidget
	b (Ljava/lang/String;)V insertText
	b (Ljava/util/function/Consumer;)V setResponder
	b (Z)V setBordered
	b_ (Z)V setFocused
	c (Lehe;IIII)V renderHighlight
	c (Ljava/lang/String;)V setSuggestion
	c (Lnet/minecraft/network/chat/IChatBaseComponent;)V setHint
	c (Z)V setEditable
	d (Ljava/lang/String;)V onValueChange
	d (Z)V setCanLoseFocus
	e ()Ljava/lang/String; getHighlighted
	e (Z)V setVisible
	f ()V moveCursorToStart
	g ()V moveCursorToEnd
	h (I)V deleteChars
	i (I)I getWordPosition
	j (I)V moveCursor
	k (I)V moveCursorTo
	l (I)V setCursorPosition
	m (I)V setMaxLength
	n (I)V setTextColor
	o (I)V setTextColorUneditable
	p (I)V setHighlightPos
	q (I)I getScreenX
	r (I)V deleteText
	s (I)I getCursorPos
	t ()Z canConsumeInput
	v ()I getCursorPosition
	w ()I getInnerWidth
	x ()Z isVisible
	y ()I getMaxLength
	z ()Z isBordered
eom net/minecraft/client/gui/components/ImageButton
	a resourceLocation
	b xTexStart
	c yTexStart
	d yDiffTex
	e textureWidth
	f textureHeight
	b (Lehe;IIF)V renderWidget
eon net/minecraft/client/gui/components/ImageWidget
	a imageLocation
	a (Lere;)V updateWidgetNarration
	b (Lehe;IIF)V renderWidget
eoo net/minecraft/client/gui/components/LerpingBossEvent
	h targetPercent
	i setTime
	j LERP_MILLISECONDS
	a (F)V setProgress
	k ()F getProgress
eop net/minecraft/client/gui/components/LockIconButton
	a locked
	a ()Z isLocked
	aH_ ()Lnet/minecraft/network/chat/IChatMutableComponent; createNarrationMessage
	b (Lehe;IIF)V renderWidget
	b (Z)V setLocked
eop$a net/minecraft/client/gui/components/LockIconButton$Icon
	a LOCKED
	b LOCKED_HOVER
	c LOCKED_DISABLED
	d UNLOCKED
	e UNLOCKED_HOVER
	f UNLOCKED_DISABLED
	g x
	h y
	i $VALUES
	a ()I getX
	b ()I getY
	c ()[Leop$a; $values
eoq net/minecraft/client/gui/components/LogoRenderer
	a MINECRAFT_LOGO
	b MINECRAFT_EDITION
	c LOGO_WIDTH
	d LOGO_HEIGHT
	e DEFAULT_HEIGHT_OFFSET
	f showEasterEgg
	k keepLogoThroughFade
	a (Lehe;IF)V renderLogo
	a (Lehe;IFI)V renderLogo
eor net/minecraft/client/gui/components/MultiLineEditBox
	a CURSOR_INSERT_WIDTH
	b CURSOR_INSERT_COLOR
	c CURSOR_APPEND_CHARACTER
	d TEXT_COLOR
	e PLACEHOLDER_TEXT_COLOR
	f font
	k placeholder
	l textField
	m frame
	a (CI)Z charTyped
	a (DDI)Z mouseClicked
	a (DDIDD)Z mouseDragged
	a (I)V setCharacterLimit
	a (III)Z keyPressed
	a (Lehe;)V renderDecorations
	a (Lere;)V updateWidgetNarration
	a (Ljava/lang/String;)V setValue
	b (Ljava/util/function/Consumer;)V setValueListener
	c (Lehe;IIF)V renderContents
	c (Lehe;IIII)V renderHighlight
	e ()I getInnerHeight
	f ()Z scrollbarVisible
	f (DD)V seekCursorScreen
	g ()D scrollRate
	t ()Ljava/lang/String; getValue
	v ()V tick
	w ()V scrollToCursor
	x ()D getDisplayableLineCount
eos net/minecraft/client/gui/components/MultiLineLabel
	a EMPTY
	a ()I getLineCount
	a (Lehe;II)I renderCentered
	a (Lehe;IIII)I renderCentered
	a (Lehe;IIIII)V renderBackgroundCentered
	a (Lenp;Ljava/util/List;)Leos; create
	a (Lenp;Lnet/minecraft/network/chat/IChatFormatted;I)Leos; create
	a (Lenp;Lnet/minecraft/network/chat/IChatFormatted;II)Leos; create
	a (Lenp;[Lnet/minecraft/network/chat/IChatBaseComponent;)Leos; create
	b ()I getWidth
	b (Lehe;IIII)I renderLeftAligned
	b (Lenp;Ljava/util/List;)Leos; createFixed
	c (Lehe;IIII)I renderLeftAlignedNoShadow
eos$a net/minecraft/client/gui/components/MultiLineLabel$TextWithWidth
	a text
	b width
eot net/minecraft/client/gui/components/MultiLineTextWidget
	a maxWidth
	b maxRows
	c cache
	d centered
	a (I)Leny; setColor
	b (Lehe;IIF)V renderWidget
	b (Z)Leot; setCentered
	e ()Leot$a; getFreshCacheKey
	h ()I getHeight
	h (I)Leot; setColor
	i (I)Leot; setMaxWidth
	j ()I getWidth
	j (I)Leot; setMaxRows
eot$a net/minecraft/client/gui/components/MultiLineTextWidget$CacheKey
	a message
	b maxWidth
	c maxRows
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; message
	b ()I maxWidth
	c ()Ljava/util/OptionalInt; maxRows
eou net/minecraft/client/gui/components/MultilineTextField
	a NO_CHARACTER_LIMIT
	b LINE_SEEK_PIXEL_BIAS
	c font
	d displayLines
	e value
	f cursor
	g selectCursor
	h selecting
	i characterLimit
	j width
	k valueListener
	l cursorListener
	a ()I characterLimit
	a (DD)V seekCursorToPoint
	a (I)V setCharacterLimit
	a (Lepi;I)V seekCursor
	a (Ljava/lang/Runnable;)V setCursorListener
	a (Ljava/lang/String;)V setValue
	a (Ljava/util/function/Consumer;)V setValueListener
	a (Z)V setSelecting
	b ()Z hasCharacterLimit
	b (I)V deleteText
	b (Ljava/lang/String;)V insertText
	c ()Ljava/lang/String; value
	c (I)Leou$a; getLineView
	c (Ljava/lang/String;)Ljava/lang/String; truncateFullText
	d ()I cursor
	d (I)V seekCursorLine
	d (Ljava/lang/String;)Ljava/lang/String; truncateInsertionText
	e ()Leou$a; getSelected
	e (I)Z keyPressed
	f ()I getLineCount
	f (I)Leou$a; getCursorLineView
	g ()I getLineAtCursor
	g (I)I getWordEndPosition
	h ()Ljava/lang/Iterable; iterateLines
	i ()Z hasSelection
	j ()Ljava/lang/String; getSelectedText
	k ()Leou$a; getPreviousWord
	l ()Leou$a; getNextWord
	m ()Leou$a; getCursorLineView
	n ()V onValueChange
	o ()V reflowDisplayLines
eou$a net/minecraft/client/gui/components/MultilineTextField$StringView
	a beginIndex
	b endIndex
	c EMPTY
	a ()I beginIndex
	b ()I endIndex
eov net/minecraft/client/gui/components/ObjectSelectionList
	a USAGE_NARRATION
	a (Lerj;)Leno; nextFocusPath
	b (Lere;)V updateNarration
eov$a net/minecraft/client/gui/components/ObjectSelectionList$Entry
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarration
	aD_ ()Z isFocused
	a_ (DD)Z isMouseOver
	b (Lehe;IIIIIIIZF)V renderBack
	b (Lere;)V updateNarration
	b_ (Z)V setFocused
eow net/minecraft/client/gui/components/OptionsList
	a (Lemk;)I addBig
	a (Lemk;Lemk;)V addSmall
	a ([Lemk;)V addSmall
	b ()I getRowWidth
	b (Lemk;)Lenz; findOption
	c ()I getScrollbarPosition
	c (DD)Ljava/util/Optional; getMouseOver
eow$a net/minecraft/client/gui/components/OptionsList$Entry
	a options
	b children
	a (Lehe;IIIIIIIZF)V render
	a (Leml;ILemk;)Leow$a; big
	a (Leml;ILemk;Lemk;)Leow$a; small
	b ()Ljava/util/List; narratables
	i ()Ljava/util/List; children
eox net/minecraft/client/gui/components/PlainTextButton
	a font
	b message
	c underlinedMessage
	b (Lehe;IIF)V renderWidget
eoy net/minecraft/client/gui/components/PlayerFaceRenderer
	a SKIN_HEAD_U
	b SKIN_HEAD_V
	c SKIN_HEAD_WIDTH
	d SKIN_HEAD_HEIGHT
	e SKIN_HAT_U
	f SKIN_HAT_V
	g SKIN_HAT_WIDTH
	h SKIN_HAT_HEIGHT
	i SKIN_TEX_WIDTH
	j SKIN_TEX_HEIGHT
	a (Lehe;III)V draw
	a (Lehe;IIIZ)V drawHat
	a (Lehe;IIIZZ)V draw
eoz net/minecraft/client/gui/components/PlayerTabOverlay
	a MAX_ROWS_PER_COL
	b HEART_EMPTY_CONTAINER
	c HEART_EMPTY_CONTAINER_BLINKING
	d HEART_FULL
	e HEART_HALF_FULL
	f HEART_GOLDEN_FULL
	k HEART_GOLDEN_HALF_FULL
	l HEART_GHOST_FULL
	m HEART_GHOST_HALF_FULL
	n PLAYER_COMPARATOR
	o minecraft
	p gui
	q footer
	r header
	s visible
	t healthStates
	a ()V reset
	a (IIILjava/util/UUID;Lehe;I)V renderTablistHearts
	a (Lehe;IIILfdo;)V renderPingIcon
	a (Lehe;ILnet/minecraft/world/scores/Scoreboard;Lnet/minecraft/world/scores/ScoreboardObjective;)V render
	a (Lfdo;)Lnet/minecraft/network/chat/IChatBaseComponent; getNameForDisplay
	a (Lfdo;Lnet/minecraft/network/chat/IChatMutableComponent;)Lnet/minecraft/network/chat/IChatBaseComponent; decorateName
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V setFooter
	a (Lnet/minecraft/world/scores/ScoreboardObjective;ILjava/lang/String;IILjava/util/UUID;Lehe;)V renderTablistScore
	a (Z)V setVisible
	b ()Ljava/util/List; getPlayerInfos
	b (Lnet/minecraft/network/chat/IChatBaseComponent;)V setHeader
eoz$a net/minecraft/client/gui/components/PlayerTabOverlay$HealthState
	a DISPLAY_UPDATE_DELAY
	b DECREASE_BLINK_DURATION
	c INCREASE_BLINK_DURATION
	d lastValue
	e displayedValue
	f lastUpdateTick
	g blinkUntilTick
	a ()I displayedValue
	a (IJ)V update
	a (J)Z isBlinking
epa net/minecraft/client/gui/components/Renderable
	a (Lehe;IIF)V render
epb net/minecraft/client/gui/components/StateSwitchingButton
	a resourceLocation
	b isStateTriggered
	c xTexStart
	d yTexStart
	e xDiffTex
	f yDiffTex
	a ()Z isStateTriggered
	a (IIIILnet/minecraft/resources/MinecraftKey;)V initTextureValues
	a (Lere;)V updateWidgetNarration
	b (Lehe;IIF)V renderWidget
	b (Z)V setStateTriggered
epc net/minecraft/client/gui/components/StringWidget
	a alignX
	a (I)Leny; setColor
	b (F)Lepc; horizontalAlignment
	b (Lehe;IIF)V renderWidget
	e ()Lepc; alignLeft
	f ()Lepc; alignCenter
	g ()Lepc; alignRight
	h (I)Lepc; setColor
epd net/minecraft/client/gui/components/SubtitleOverlay
	a DISPLAY_TIME
	b minecraft
	c subtitles
	d isListening
	a (Lehe;)V render
	a (Lfwf;Lfxk;)V onPlaySound
epd$a net/minecraft/client/gui/components/SubtitleOverlay$Subtitle
	a text
	b time
	c location
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getText
	a (Lnet/minecraft/world/phys/Vec3D;)V refresh
	b ()J getTime
	c ()Lnet/minecraft/world/phys/Vec3D; getLocation
epe net/minecraft/client/gui/components/TabButton
	a TEXTURE_LOCATION
	b TEXTURE_WIDTH
	c TEXTURE_HEIGHT
	d TEXTURE_BORDER
	e TEXTURE_BORDER_BOTTOM
	f SELECTED_OFFSET
	k TEXT_MARGIN
	l UNDERLINE_HEIGHT
	m UNDERLINE_MARGIN_X
	n UNDERLINE_MARGIN_BOTTOM
	o tabManager
	p tab
	a ()I getTextureY
	a (Lehe;Lenp;I)V renderString
	a (Lere;)V updateWidgetNarration
	a (Lfxj;)V playDownSound
	b ()Lepr; tab
	b (Lehe;IIF)V renderWidget
	b (Lehe;Lenp;I)V renderFocusUnderline
	e ()Z isSelected
epf net/minecraft/client/gui/components/TabOrderedElement
	aF_ ()I getTabOrderGroup
epg net/minecraft/client/gui/components/TextAndImageButton
	E xOffset
	F yOffset
	G usedTextureWidth
	H usedTextureHeight
	a resourceLocation
	b xTexStart
	c yTexStart
	d yDiffTex
	e textureWidth
	f textureHeight
	a ()I getXOffset
	a (Lehe;Lenp;I)V renderString
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Lnet/minecraft/resources/MinecraftKey;Leoc$c;)Lepg$a; builder
	b ()I getYOffset
	b (Lehe;IIF)V renderWidget
epg$a net/minecraft/client/gui/components/TextAndImageButton$Builder
	a message
	b resourceLocation
	c onPress
	d xTexStart
	e yTexStart
	f yDiffTex
	g usedTextureWidth
	h usedTextureHeight
	i textureWidth
	j textureHeight
	k xOffset
	l yOffset
	a ()Lepg; build
	a (I)Lepg$a; yDiffTex
	a (II)Lepg$a; texStart
	b (II)Lepg$a; offset
	c (II)Lepg$a; usedTextureSize
	d (II)Lepg$a; textureSize
eph net/minecraft/client/gui/components/Tooltip
	a MAX_WIDTH
	b message
	c cachedTooltip
	d narration
	a (Lemh;)Ljava/util/List; toCharSequence
	a (Lemh;Lnet/minecraft/network/chat/IChatBaseComponent;)Ljava/util/List; splitTooltip
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)Leph; create
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Lnet/minecraft/network/chat/IChatBaseComponent;)Leph; create
	b (Lere;)V updateNarration
epi net/minecraft/client/gui/components/Whence
	a ABSOLUTE
	b RELATIVE
	c END
	d $VALUES
	a ()[Lepi; $values
epj net/minecraft/client/gui/components/events/AbstractContainerEventHandler
	a focused
	b isDragging
	a (Lepl;)V setFocused
	aC_ ()Z isDragging
	c_ (Z)V setDragging
	v ()Lepl; getFocused
epk net/minecraft/client/gui/components/events/ContainerEventHandler
	a (CI)Z charTyped
	a (DDD)Z mouseScrolled
	a (DDI)Z mouseClicked
	a (DDIDD)Z mouseDragged
	a (III)Z keyPressed
	a (Lepl;)V setFocused
	a (Lerj$a;)Leno; handleArrowNavigation
	a (Lerj$c;)Leno; handleTabNavigation
	a (Lerj;)Leno; nextFocusPath
	a (Lern;Lerl;Lepl;Lerj;)Leno; nextFocusPathInDirection
	aC_ ()Z isDragging
	aD_ ()Z isFocused
	aE_ ()Leno; getCurrentFocusPath
	b (DDI)Z mouseReleased
	b (III)Z keyReleased
	b (Lepl;)V magicalSpecialHackyFocus
	b (Lern;Lerl;Lepl;Lerj;)Leno; nextFocusPathVaguelyInDirection
	b_ (Z)V setFocused
	c_ (Z)V setDragging
	d (DD)Ljava/util/Optional; getChildAt
	i ()Ljava/util/List; children
	v ()Lepl; getFocused
epl net/minecraft/client/gui/components/events/GuiEventListener
	x_ DOUBLE_CLICK_THRESHOLD_MS
	a (CI)Z charTyped
	a (DDD)Z mouseScrolled
	a (DDI)Z mouseClicked
	a (DDIDD)Z mouseDragged
	a (III)Z keyPressed
	a (Lerj;)Leno; nextFocusPath
	aD_ ()Z isFocused
	aE_ ()Leno; getCurrentFocusPath
	a_ (DD)Z isMouseOver
	b (DDI)Z mouseReleased
	b (III)Z keyReleased
	b_ (Z)V setFocused
	e (DD)V mouseMoved
	u ()Lern; getRectangle
epo net/minecraft/client/gui/components/spectator/SpectatorGui
	a SPECTATOR_LOCATION
	b WIDGETS_LOCATION
	c FADE_OUT_DELAY
	d FADE_OUT_TIME
	e minecraft
	f lastSelectionTime
	k menu
	a ()Z isMenuActive
	a (I)V onHotbarSelected
	a (Lehe;)V renderHotbar
	a (Lehe;FIILeyg;)V renderPage
	a (Lehe;IIFFLeye;)V renderSlot
	a (Leyc;)V onSpectatorMenuClosed
	b ()V onMouseMiddleClick
	b (I)V onMouseScrolled
	b (Lehe;)V renderTooltip
	c ()F getHotbarAlpha
epq net/minecraft/client/gui/components/tabs/GridLayoutTab
	a layout
	b title
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getTabTitle
	a (Lern;)V doLayout
	a (Ljava/util/function/Consumer;)V visitChildren
epr net/minecraft/client/gui/components/tabs/Tab
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getTabTitle
	a (Lern;)V doLayout
	a (Ljava/util/function/Consumer;)V visitChildren
	b ()V tick
eps net/minecraft/client/gui/components/tabs/TabManager
	a addWidget
	b removeWidget
	c currentTab
	d tabArea
	a ()Lepr; getCurrentTab
	a (Lepr;Z)V setCurrentTab
	a (Lern;)V setTabArea
	b ()V tickCurrent
ept net/minecraft/client/gui/components/tabs/TabNavigationBar
	a NO_TAB
	b MAX_WIDTH
	c HEIGHT
	d MARGIN
	e USAGE_NARRATION
	f layout
	k width
	l tabManager
	m tabs
	n tabButtons
	a (I)V setWidth
	a (IZ)V selectTab
	a (Lehe;IIF)V render
	a (Lepl;)V setFocused
	a (Leps;I)Lept$a; builder
	a (Lere;Lepe;)V narrateListElementPosition
	a (Lerj;)Leno; nextFocusPath
	b ()V arrangeElements
	b (I)Z keyPressed
	b (Lere;)V updateNarration
	b_ (Z)V setFocused
	c (I)I getNextTabIndex
	d ()I currentTabIndex
	e ()Lepe; currentTabButton
	i ()Ljava/util/List; children
	s ()Lerc$a; narrationPriority
	u ()Lern; getRectangle
ept$a net/minecraft/client/gui/components/tabs/TabNavigationBar$Builder
	a width
	b tabManager
	c tabs
	a ()Lept; build
	a ([Lepr;)Lept$a; addTabs
epv net/minecraft/client/gui/components/toasts/AdvancementToast
	a DISPLAY_TIME
	e advancement
	f playedSound
	a (Lehe;Lepz;J)Lepy$a; render
epw net/minecraft/client/gui/components/toasts/RecipeToast
	a DISPLAY_TIME
	e TITLE_TEXT
	f DESCRIPTION_TEXT
	g recipes
	h lastChanged
	i changed
	a (Lehe;Lepz;J)Lepy$a; render
	a (Lepz;Lnet/minecraft/world/item/crafting/IRecipe;)V addOrUpdate
	a (Lnet/minecraft/world/item/crafting/IRecipe;)V addItem
epx net/minecraft/client/gui/components/toasts/SystemToast
	a MAX_LINE_SIZE
	e LINE_SPACING
	f MARGIN
	g id
	h title
	i messageLines
	j lastChanged
	k changed
	l width
	a ()I width
	a (Lehe;Lepz;IIII)V renderBackgroundRow
	a (Lehe;Lepz;J)Lepy$a; render
	a (Lemh;Lepx$a;Lnet/minecraft/network/chat/IChatBaseComponent;Lnet/minecraft/network/chat/IChatBaseComponent;)Lepx; multiline
	a (Lemh;Ljava/lang/String;)V onWorldAccessFailure
	a (Lepz;Lepx$a;Lnet/minecraft/network/chat/IChatBaseComponent;Lnet/minecraft/network/chat/IChatBaseComponent;)V add
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)Lcom/google/common/collect/ImmutableList; nullToEmpty
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Lnet/minecraft/network/chat/IChatBaseComponent;)V reset
	b ()I height
	b (Lemh;Ljava/lang/String;)V onWorldDeleteFailure
	b (Lepz;Lepx$a;Lnet/minecraft/network/chat/IChatBaseComponent;Lnet/minecraft/network/chat/IChatBaseComponent;)V addOrUpdate
	c ()Lepx$a; getToken
	c (Lemh;Ljava/lang/String;)V onPackCopyFailure
	d ()Ljava/lang/Object; getToken
epx$a net/minecraft/client/gui/components/toasts/SystemToast$SystemToastIds
	a TUTORIAL_HINT
	b NARRATOR_TOGGLE
	c WORLD_BACKUP
	d PACK_LOAD_FAILURE
	e WORLD_ACCESS_FAILURE
	f PACK_COPY_FAILURE
	g PERIODIC_NOTIFICATION
	h UNSECURE_SERVER_WARNING
	i displayTime
	j $VALUES
	a ()[Lepx$a; $values
epy net/minecraft/client/gui/components/toasts/Toast
	b TEXTURE
	c NO_TOKEN
	d SLOT_HEIGHT
	a ()I width
	a (Lehe;Lepz;J)Lepy$a; render
	b ()I height
	d ()Ljava/lang/Object; getToken
	e ()I slotCount
epy$a net/minecraft/client/gui/components/toasts/Toast$Visibility
	a SHOW
	b HIDE
	c soundEvent
	d $VALUES
	a ()[Lepy$a; $values
	a (Lfxj;)V playSound
epz net/minecraft/client/gui/components/toasts/ToastComponent
	a SLOT_COUNT
	b NO_SPACE
	c minecraft
	d visible
	e occupiedSlots
	f queued
	a ()V clear
	a (I)I findFreeIndex
	a (Lehe;)V render
	a (Lepy;)V addToast
	a (Ljava/lang/Class;Ljava/lang/Object;)Lepy; getToast
	b ()Lemh; getMinecraft
	c ()D getNotificationDisplayTimeMultiplier
	d ()I freeSlots
epz$a net/minecraft/client/gui/components/toasts/ToastComponent$ToastInstance
	b ANIMATION_TIME
	c toast
	d index
	e slotCount
	f animationTime
	g visibleTime
	h visibility
	a ()Lepy; getToast
	a (ILehe;)Z render
	a (J)F getVisibility
eq$a net/minecraft/commands/arguments/ResourceOrTagArgument$Info
	a (Lcom/mojang/brigadier/arguments/ArgumentType;)Lgf$a; unpack
	a (Leq$a$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Leq$a$a;Lnet/minecraft/network/PacketDataSerializer;)V serializeToNetwork
	a (Lgf$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lgf$a;Lnet/minecraft/network/PacketDataSerializer;)V serializeToNetwork
	a (Lnet/minecraft/commands/arguments/ResourceOrTagArgument;)Leq$a$a; unpack
	a (Lnet/minecraft/network/PacketDataSerializer;)Leq$a$a; deserializeFromNetwork
	b (Lnet/minecraft/network/PacketDataSerializer;)Lgf$a; deserializeFromNetwork
eq$a$a net/minecraft/commands/arguments/ResourceOrTagArgument$Info$Template
	b registryKey
	a ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; type
	a (Lnet/minecraft/commands/CommandBuildContext;)Lnet/minecraft/commands/arguments/ResourceOrTagArgument; instantiate
	b (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; instantiate
eq$b net/minecraft/commands/arguments/ResourceOrTagArgument$ResourceResult
	a value
	a ()Lcom/mojang/datafixers/util/Either; unwrap
	a (Lnet/minecraft/core/Holder;)Z test
	a (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; cast
	b ()Ljava/lang/String; asPrintable
	c ()Lhd$c; value
eq$c net/minecraft/commands/arguments/ResourceOrTagArgument$Result
	a ()Lcom/mojang/datafixers/util/Either; unwrap
	a (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; cast
	b ()Ljava/lang/String; asPrintable
eq$d net/minecraft/commands/arguments/ResourceOrTagArgument$TagResult
	a tag
	a ()Lcom/mojang/datafixers/util/Either; unwrap
	a (Lnet/minecraft/core/Holder;)Z test
	a (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; cast
	b ()Ljava/lang/String; asPrintable
	c ()Lnet/minecraft/core/HolderSet$Named; tag
eqa net/minecraft/client/gui/components/toasts/TutorialToast
	a PROGRESS_BAR_WIDTH
	e PROGRESS_BAR_HEIGHT
	f PROGRESS_BAR_X
	g PROGRESS_BAR_Y
	h icon
	i title
	j message
	k visibility
	l lastProgressTime
	m lastProgress
	n progress
	o progressable
	a (F)V updateProgress
	a (Lehe;Lepz;J)Lepy$a; render
	c ()V hide
eqa$a net/minecraft/client/gui/components/toasts/TutorialToast$Icons
	a MOVEMENT_KEYS
	b MOUSE
	c TREE
	d RECIPE_BOOK
	e WOODEN_PLANKS
	f SOCIAL_INTERACTIONS
	g RIGHT_CLICK
	h x
	i y
	j $VALUES
	a ()[Leqa$a; $values
	a (Lehe;II)V render
eqc net/minecraft/client/gui/font/AllMissingGlyphProvider
	a ()Lit/unimi/dsi/fastutil/ints/IntSet; getSupportedGlyphs
	a (I)Lefh; getGlyph
eqd net/minecraft/client/gui/font/FontManager
	a MISSING_FONT
	b LOGGER
	c FONTS_PATH
	d FONT_DEFINITIONS
	e missingFontSet
	f fontSets
	g textureManager
	h renames
	i reloadListener
	a ()Lenp; createFont
	a (Ljava/util/Map;)V setRenames
	b ()Lenp; createFontFilterFishy
	c ()Lnet/minecraft/server/packs/resources/IReloadListener; getReloadListener
eqe net/minecraft/client/gui/font/FontSet
	a RANDOM
	b LARGE_FORWARD_ADVANCE
	c textureManager
	d name
	e missingGlyph
	f whiteGlyph
	g providers
	h glyphs
	i glyphInfos
	j glyphsByWidth
	k textures
	a ()Leqh; whiteGlyph
	a (I)Leqh; getGlyph
	a (IZ)Lefh; getGlyphInfo
	a (Lefh;)Leqh; getRandomGlyph
	a (Lefj;)Leqh; stitch
	a (Ljava/util/List;)V reload
	b ()V closeProviders
	b (I)Leqe$a; computeGlyphInfo
	b (Lefh;)Z hasFishyAdvance
	c ()V closeTextures
	c (I)Leqh; computeBakedGlyph
eqe$a net/minecraft/client/gui/font/FontSet$GlyphInfoFilter
	a glyphInfo
	b glyphInfoNotFishy
	c MISSING
	a ()Lefh; glyphInfo
	a (Z)Lefh; select
	b ()Lefh; glyphInfoNotFishy
eqf net/minecraft/client/gui/font/FontTexture
	e SIZE
	f name
	g normalType
	h seeThroughType
	i polygonOffsetType
	j colored
	k root
	a ()Lnet/minecraft/resources/MinecraftKey; getName
	a (Lefj;)Leqh; add
	a (Lnet/minecraft/server/packs/resources/IResourceManager;)V load
eqf$a net/minecraft/client/gui/font/FontTexture$Node
	a x
	b y
	c width
	d height
	e left
	f right
	g occupied
	a (Lefj;)Leqf$a; insert
eqg net/minecraft/client/gui/font/TextFieldHelper
	a getMessageFn
	b setMessageFn
	c getClipboardFn
	d setClipboardFn
	e stringValidator
	f cursorPos
	g selectionPos
	a ()V cut
	a (C)Z charTyped
	a (I)Z keyPressed
	a (II)V setSelectionRange
	a (ILeqg$a;)V removeFromCursor
	a (IZ)V moveByChars
	a (IZLeqg$a;)V moveBy
	a (Lemh;)Ljava/util/function/Supplier; createClipboardGetter
	a (Lemh;Ljava/lang/String;)V setClipboardContents
	a (Ljava/lang/String;)V insertText
	a (Ljava/lang/String;Ljava/lang/String;)V insertText
	a (Z)V setCursorToStart
	b ()V paste
	b (I)V moveByChars
	b (IZ)V moveByWords
	b (Lemh;)Ljava/lang/String; getClipboardContents
	b (Ljava/lang/String;)Ljava/lang/String; getSelected
	b (Z)V setCursorToEnd
	c ()V copy
	c (I)V moveByWords
	c (IZ)V setCursorPos
	c (Lemh;)Ljava/util/function/Consumer; createClipboardSetter
	c (Ljava/lang/String;)Ljava/lang/String; deleteSelection
	c (Z)V resetSelectionIfNeeded
	d ()V selectAll
	d (I)V removeWordsFromCursor
	e ()V setCursorToStart
	e (I)V removeCharsFromCursor
	f ()V setCursorToEnd
	f (I)V setCursorPos
	g ()I getCursorPos
	g (I)V setSelectionPos
	h ()I getSelectionPos
	h (I)I clampToMsgLength
	i ()Z isSelecting
eqg$a net/minecraft/client/gui/font/TextFieldHelper$CursorStep
	a CHARACTER
	b WORD
	c $VALUES
	a ()[Leqg$a; $values
eqh net/minecraft/client/gui/font/glyphs/BakedGlyph
	a normalType
	b seeThroughType
	c polygonOffsetType
	d u0
	e u1
	f v0
	g v1
	h left
	i right
	j up
	k down
	a (Lenp$a;)Lfio; renderType
	a (Leqh$a;Lorg/joml/Matrix4f;Lehi;I)V renderEffect
	a (ZFFLorg/joml/Matrix4f;Lehi;FFFFI)V render
eqh$a net/minecraft/client/gui/font/glyphs/BakedGlyph$Effect
	a x0
	b y0
	c x1
	d y1
	e depth
	f r
	h b
	i a
eqi net/minecraft/client/gui/font/glyphs/EmptyGlyph
	a INSTANCE
	a (ZFFLorg/joml/Matrix4f;Lehi;FFFFI)V render
eqj net/minecraft/client/gui/font/glyphs/SpecialGlyphs
	a WHITE
	b MISSING
	c image
	d $VALUES
	a (IILeqj$a;)Legf; generate
	e ()[Leqj; $values
eqj$a net/minecraft/client/gui/font/glyphs/SpecialGlyphs$PixelProvider
eqm net/minecraft/client/gui/font/providers/BitmapProvider
	a LOGGER
	b image
	c glyphs
	a ()Lit/unimi/dsi/fastutil/ints/IntSet; getSupportedGlyphs
	a (I)Lefh; getGlyph
eqm$a net/minecraft/client/gui/font/providers/BitmapProvider$Builder
	a texture
	b chars
	c height
	d ascent
	a (Lcom/google/gson/JsonObject;)Leqm$a; fromJson
	a (Legf;IIII)I getActualGlyphWidth
eqm$b net/minecraft/client/gui/font/providers/BitmapProvider$Glyph
	a scale
	b image
	c offsetX
	d offsetY
	e width
	f height
	g advance
	h ascent
	c ()F scale
	d ()Legf; image
	e ()I offsetX
	f ()I offsetY
	g ()I width
	h ()I height
	i ()I advance
	j ()I ascent
eqn net/minecraft/client/gui/font/providers/GlyphProviderBuilder
eqo net/minecraft/client/gui/font/providers/GlyphProviderBuilderType
	a BITMAP
	b TTF
	c SPACE
	d LEGACY_UNICODE
	e BY_NAME
	f name
	g factory
	h $VALUES
	a ()[Leqo; $values
	a (Lcom/google/gson/JsonObject;)Leqn; create
	a (Ljava/lang/String;)Leqo; byName
eqp net/minecraft/client/gui/font/providers/LegacyUnicodeBitmapsProvider
	a LOGGER
	b UNICODE_SHEETS
	c CODEPOINTS_PER_SHEET
	d TEXTURE_SIZE
	e NO_GLYPH
	f TOTAL_CODEPOINTS
	g sizes
	h sheets
	a ()Lit/unimi/dsi/fastutil/ints/IntSet; getSupportedGlyphs
	a (B)I getLeft
	a (I)Lefh; getGlyph
	a (Ljava/lang/String;I)Lnet/minecraft/resources/MinecraftKey; getSheetLocation
	a (Ljava/util/Set;)Ljava/lang/String; getCommonSearchPrefix
	b (B)I getRight
eqp$a net/minecraft/client/gui/font/providers/LegacyUnicodeBitmapsProvider$Builder
	a metadata
	b texturePattern
	a (Lcom/google/gson/JsonObject;)Leqn; fromJson
	b (Lcom/google/gson/JsonObject;)Ljava/lang/String; getTemplate
eqp$b net/minecraft/client/gui/font/providers/LegacyUnicodeBitmapsProvider$Glyph
	a sourceX
	b sourceY
	c width
	d height
	e source
	a ()F getBoldOffset
	b ()F getShadowOffset
	c ()I sourceX
	d ()I sourceY
	e ()I width
	f ()I height
	g ()Legf; source
eqp$c net/minecraft/client/gui/font/providers/LegacyUnicodeBitmapsProvider$Sheet
	a sizes
	b source
	a (I)Lefh; getGlyph
eqq net/minecraft/client/gui/font/providers/TrueTypeGlyphProviderBuilder
	a LOGGER
	b location
	c size
	d oversample
	e shiftX
	f shiftY
	g skip
	a (Lcom/google/gson/JsonObject;)Leqn; fromJson
eqs net/minecraft/client/gui/layouts/AbstractLayout
	a width
	b height
	c x
	d y
	e (I)V setX
	f (I)V setY
	h ()I getHeight
	j ()I getWidth
	p ()I getX
	q ()I getY
eqs$a net/minecraft/client/gui/layouts/AbstractLayout$AbstractChildWrapper
	a child
	b layoutSettings
	a ()I getHeight
	a (II)V setX
	b ()I getWidth
	b (II)V setY
eqt net/minecraft/client/gui/layouts/FrameLayout
	c children
	d minWidth
	e minHeight
	f defaultChildLayoutSettings
	a ()Leqy; newChildLayoutSettings
	a (I)Leqt; setMinHeight
	a (II)Leqt; setMinDimensions
	a (IIILjava/util/function/Consumer;F)V alignInDimension
	a (Leqx;)Leqx; addChild
	a (Leqx;IIII)V centerInRectangle
	a (Leqx;IIIIFF)V alignInRectangle
	a (Leqx;Leqy;)Leqx; addChild
	a (Leqx;Lern;)V centerInRectangle
	a (Leqx;Lern;FF)V alignInRectangle
	b ()Leqy; defaultChildLayoutSetting
	b (I)Leqt; setMinWidth
	b (Ljava/util/function/Consumer;)V visitChildren
	c ()V arrangeElements
eqt$a net/minecraft/client/gui/layouts/FrameLayout$ChildContainer
equ net/minecraft/client/gui/layouts/GridLayout
	c children
	d cellInhabitants
	e defaultCellSettings
	f rowSpacing
	g columnSpacing
	a ()Leqy; newCellSettings
	a (I)Lequ; columnSpacing
	a (Leqx;II)Leqx; addChild
	a (Leqx;IIII)Leqx; addChild
	a (Leqx;IIIILeqy;)Leqx; addChild
	a (Leqx;IILeqy;)Leqx; addChild
	b ()Leqy; defaultCellSetting
	b (I)Lequ; rowSpacing
	b (Ljava/util/function/Consumer;)V visitChildren
	c ()V arrangeElements
	c (I)Lequ; spacing
	d (I)Lequ$b; createRowHelper
equ$a net/minecraft/client/gui/layouts/GridLayout$CellInhabitant
	c row
	d column
	e occupiedRows
	f occupiedColumns
	c ()I getLastOccupiedRow
	d ()I getLastOccupiedColumn
equ$b net/minecraft/client/gui/layouts/GridLayout$RowHelper
	b columns
	c index
	a ()Lequ; getGrid
	a (Leqx;)Leqx; addChild
	a (Leqx;I)Leqx; addChild
	a (Leqx;ILeqy;)Leqx; addChild
	a (Leqx;Leqy;)Leqx; addChild
	b ()Leqy; newCellSettings
	c ()Leqy; defaultCellSetting
eqv net/minecraft/client/gui/layouts/HeaderAndFooterLayout
	a DEFAULT_HEADER_AND_FOOTER_HEIGHT
	b DEFAULT_CONTENT_MARGIN_TOP
	c headerFrame
	d footerFrame
	e contentsFrame
	f screen
	g headerHeight
	h footerHeight
	a ()I getFooterHeight
	a (I)V setFooterHeight
	a (Leqx;)Leqx; addToHeader
	a (Leqx;Leqy;)Leqx; addToHeader
	b ()I getHeaderHeight
	b (I)V setHeaderHeight
	b (Leqx;)Leqx; addToFooter
	b (Leqx;Leqy;)Leqx; addToFooter
	b (Ljava/util/function/Consumer;)V visitChildren
	c ()V arrangeElements
	c (Leqx;)Leqx; addToContents
	c (Leqx;Leqy;)Leqx; addToContents
	d ()Leqy; newHeaderLayoutSettings
	e ()Leqy; newContentLayoutSettings
	e (I)V setX
	f ()Leqy; newFooterLayoutSettings
	f (I)V setY
	h ()I getHeight
	j ()I getWidth
	p ()I getX
	q ()I getY
eqw net/minecraft/client/gui/layouts/Layout
	a (Ljava/util/function/Consumer;)V visitWidgets
	b (Ljava/util/function/Consumer;)V visitChildren
	c ()V arrangeElements
eqx net/minecraft/client/gui/layouts/LayoutElement
	a (Ljava/util/function/Consumer;)V visitWidgets
	b (II)V setPosition
	e (I)V setX
	f (I)V setY
	h ()I getHeight
	j ()I getWidth
	p ()I getX
	q ()I getY
	u ()Lern; getRectangle
eqy net/minecraft/client/gui/layouts/LayoutSettings
	a ()Leqy; alignHorizontallyLeft
	a (F)Leqy; alignHorizontally
	a (FF)Leqy; align
	a (I)Leqy; padding
	a (II)Leqy; padding
	a (IIII)Leqy; padding
	b ()Leqy; alignHorizontallyCenter
	b (F)Leqy; alignVertically
	b (I)Leqy; paddingLeft
	c ()Leqy; alignHorizontallyRight
	c (I)Leqy; paddingTop
	d ()Leqy; alignVerticallyTop
	d (I)Leqy; paddingRight
	e ()Leqy; alignVerticallyMiddle
	e (I)Leqy; paddingBottom
	f ()Leqy; alignVerticallyBottom
	f (I)Leqy; paddingHorizontal
	g ()Leqy; copy
	g (I)Leqy; paddingVertical
	h ()Leqy$a; getExposed
	i ()Leqy; defaults
eqy$a net/minecraft/client/gui/layouts/LayoutSettings$LayoutSettingsImpl
	a paddingLeft
	b paddingTop
	c paddingRight
	d paddingBottom
	e xAlignment
	f yAlignment
	a (F)Leqy; alignHorizontally
	a (FF)Leqy; align
	a (I)Leqy; padding
	a (II)Leqy; padding
	a (IIII)Leqy; padding
	b (F)Leqy; alignVertically
	b (FF)Leqy$a; align
	b (I)Leqy; paddingLeft
	b (II)Leqy$a; padding
	b (IIII)Leqy$a; padding
	c (F)Leqy$a; alignHorizontally
	c (I)Leqy; paddingTop
	d (F)Leqy$a; alignVertically
	d (I)Leqy; paddingRight
	e (I)Leqy; paddingBottom
	f (I)Leqy; paddingHorizontal
	g ()Leqy; copy
	g (I)Leqy; paddingVertical
	h ()Leqy$a; getExposed
	h (I)Leqy$a; padding
	i (I)Leqy$a; paddingLeft
	j ()Leqy$a; copy
	j (I)Leqy$a; paddingTop
	k (I)Leqy$a; paddingRight
	l (I)Leqy$a; paddingBottom
	m (I)Leqy$a; paddingHorizontal
	n (I)Leqy$a; paddingVertical
eqz net/minecraft/client/gui/layouts/LinearLayout
	c orientation
	d children
	e defaultChildLayoutSettings
	a ()Leqy; newChildLayoutSettings
	a (Leqx;)Leqx; addChild
	a (Leqx;Leqy;)Leqx; addChild
	b ()Leqy; defaultChildLayoutSetting
	b (Ljava/util/function/Consumer;)V visitChildren
	c ()V arrangeElements
eqz$a net/minecraft/client/gui/layouts/LinearLayout$ChildContainer
eqz$b net/minecraft/client/gui/layouts/LinearLayout$Orientation
	a HORIZONTAL
	b VERTICAL
	c $VALUES
	a ()[Leqz$b; $values
	a (Leqx;)I getPrimaryLength
	a (Leqz$a;)I getPrimaryLength
	a (Leqz$a;I)V setPrimaryPosition
	a (Leqz$a;II)V setSecondaryPosition
	b (Leqx;)I getSecondaryLength
	b (Leqz$a;)I getSecondaryLength
	c (Leqx;)I getPrimaryPosition
	d (Leqx;)I getSecondaryPosition
er$a net/minecraft/commands/arguments/ResourceOrTagKeyArgument$Info
	a (Lcom/mojang/brigadier/arguments/ArgumentType;)Lgf$a; unpack
	a (Ler$a$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Ler$a$a;Lnet/minecraft/network/PacketDataSerializer;)V serializeToNetwork
	a (Lgf$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lgf$a;Lnet/minecraft/network/PacketDataSerializer;)V serializeToNetwork
	a (Lnet/minecraft/commands/arguments/ResourceOrTagKeyArgument;)Ler$a$a; unpack
	a (Lnet/minecraft/network/PacketDataSerializer;)Ler$a$a; deserializeFromNetwork
	b (Lnet/minecraft/network/PacketDataSerializer;)Lgf$a; deserializeFromNetwork
er$a$a net/minecraft/commands/arguments/ResourceOrTagKeyArgument$Info$Template
	b registryKey
	a ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; type
	a (Lnet/minecraft/commands/CommandBuildContext;)Lnet/minecraft/commands/arguments/ResourceOrTagKeyArgument; instantiate
	b (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; instantiate
er$b net/minecraft/commands/arguments/ResourceOrTagKeyArgument$ResourceResult
	a key
	a ()Lcom/mojang/datafixers/util/Either; unwrap
	a (Lnet/minecraft/core/Holder;)Z test
	a (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; cast
	b ()Ljava/lang/String; asPrintable
	c ()Lnet/minecraft/resources/ResourceKey; key
er$c net/minecraft/commands/arguments/ResourceOrTagKeyArgument$Result
	a ()Lcom/mojang/datafixers/util/Either; unwrap
	a (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; cast
	b ()Ljava/lang/String; asPrintable
er$d net/minecraft/commands/arguments/ResourceOrTagKeyArgument$TagResult
	a key
	a ()Lcom/mojang/datafixers/util/Either; unwrap
	a (Lnet/minecraft/core/Holder;)Z test
	a (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; cast
	b ()Ljava/lang/String; asPrintable
	c ()Lnet/minecraft/tags/TagKey; key
era net/minecraft/client/gui/layouts/SpacerElement
	a x
	b y
	c width
	d height
	a (I)Lera; width
	a (Ljava/util/function/Consumer;)V visitWidgets
	b (I)Lera; height
	e (I)V setX
	f (I)V setY
	h ()I getHeight
	j ()I getWidth
	p ()I getX
	q ()I getY
erc net/minecraft/client/gui/narration/NarratableEntry
	aG_ ()Z isActive
	s ()Lerc$a; narrationPriority
erc$a net/minecraft/client/gui/narration/NarratableEntry$NarrationPriority
	a NONE
	b HOVERED
	c FOCUSED
	d $VALUES
	a ()Z isTerminal
	b ()[Lerc$a; $values
erd net/minecraft/client/gui/narration/NarratedElementType
	a TITLE
	b POSITION
	c HINT
	d USAGE
	e $VALUES
	a ()[Lerd; $values
ere net/minecraft/client/gui/narration/NarrationElementOutput
	a ()Lere; nest
	a (Lerd;Lerg;)V add
	a (Lerd;Ljava/lang/String;)V add
	a (Lerd;Lnet/minecraft/network/chat/IChatBaseComponent;)V add
	a (Lerd;[Lnet/minecraft/network/chat/IChatBaseComponent;)V add
erf net/minecraft/client/gui/narration/NarrationSupplier
	b (Lere;)V updateNarration
erg net/minecraft/client/gui/narration/NarrationThunk
	a EMPTY
	b contents
	c converter
	a (Ljava/lang/String;)Lerg; from
	a (Ljava/util/List;)Lerg; from
	a (Ljava/util/function/Consumer;)V getText
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)Lerg; from
erh net/minecraft/client/gui/narration/ScreenNarrationCollector
	a generation
	b entries
	a (Ljava/util/function/Consumer;)V update
	a (Z)Ljava/lang/String; collectNarrationText
erh$a net/minecraft/client/gui/narration/ScreenNarrationCollector$EntryKey
	a type
	b depth
erh$b net/minecraft/client/gui/narration/ScreenNarrationCollector$NarrationEntry
	a contents
	b generation
	c alreadyNarrated
	a (ILerg;)Lerh$b; update
erh$c net/minecraft/client/gui/narration/ScreenNarrationCollector$Output
	b depth
	a ()Lere; nest
	a (Lerd;Lerg;)V add
erj net/minecraft/client/gui/navigation/FocusNavigationEvent
	a ()Lerl; getVerticalDirectionForInitialFocus
erj$a net/minecraft/client/gui/navigation/FocusNavigationEvent$ArrowNavigation
	a direction
	a ()Lerl; getVerticalDirectionForInitialFocus
	b ()Lerl; direction
erj$b net/minecraft/client/gui/navigation/FocusNavigationEvent$InitialFocus
	a ()Lerl; getVerticalDirectionForInitialFocus
erj$c net/minecraft/client/gui/navigation/FocusNavigationEvent$TabNavigation
	a forward
	a ()Lerl; getVerticalDirectionForInitialFocus
	b ()Z forward
erk net/minecraft/client/gui/navigation/ScreenAxis
	a HORIZONTAL
	b VERTICAL
	c $VALUES
	a ()Lerk; orthogonal
	a (Z)Lerl; getDirection
	b ()Lerl; getPositive
	c ()Lerl; getNegative
	d ()[Lerk; $values
erl net/minecraft/client/gui/navigation/ScreenDirection
	a UP
	b DOWN
	c LEFT
	d RIGHT
	e coordinateValueComparator
	f $VALUES
	a ()Lerk; getAxis
	a (II)Z isAfter
	b ()Lerl; getOpposite
	b (II)Z isBefore
	c ()Z isPositive
	d ()Lit/unimi/dsi/fastutil/ints/IntComparator; coordinateValueComparator
	e ()[Lerl; $values
erm net/minecraft/client/gui/navigation/ScreenPosition
	a x
	b y
	a ()I x
	a (Lerk;)I getCoordinate
	a (Lerk;II)Lerm; of
	a (Lerl;)Lerm; step
	b ()I y
ern net/minecraft/client/gui/navigation/ScreenRectangle
	a position
	b width
	c height
	d EMPTY
	a ()Lern; empty
	a (Lerk;)I getLength
	a (Lerk;IIII)Lern; of
	a (Lerl;)Lern; step
	a (Lern;)Z overlaps
	a (Lern;Lerk;)Z overlapsInAxis
	b ()I top
	b (Lerk;)I getCenterInAxis
	b (Lerl;)I getBoundInDirection
	b (Lern;)Lern; intersection
	c ()I bottom
	c (Lerl;)Lern; getBorder
	d ()I left
	e ()I right
	f ()Lerm; position
	g ()I width
	h ()I height
erq net/minecraft/client/gui/screens/AccessibilityOnboardingScreen
	a ONBOARDING_NARRATOR_MESSAGE
	b PADDING
	c TITLE_PADDING
	o panorama
	p logoRenderer
	q options
	r narratorAvailable
	s hasNarrated
	t timer
	u textWidget
	B ()V handleInitialNarrationDelay
	a (Lehe;IIF)V render
	a (Letd;)V closeAndSetScreen
	ay_ ()V onClose
	b ()V init
	m ()I initTitleYPos
err net/minecraft/client/gui/screens/AccessibilityOptionsScreen
	a (Leml;)[Lemk; options
	b ()V init
	e ()V createFooter
ers net/minecraft/client/gui/screens/AlertScreen
	a LABEL_Y
	b messageText
	c message
	o callback
	p okButton
	q shouldCloseOnEsc
	a (Lehe;IIF)V render
	aw_ ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarrationMessage
	ax_ ()Z shouldCloseOnEsc
	b ()V init
ert net/minecraft/client/gui/screens/BackupConfirmScreen
	a listener
	b id
	c lastScreen
	o description
	p promptForCacheErase
	q message
	r eraseCache
	a (III)Z keyPressed
	a (Lehe;IIF)V render
	ax_ ()Z shouldCloseOnEsc
	b ()V init
ert$a net/minecraft/client/gui/screens/BackupConfirmScreen$Listener
eru net/minecraft/client/gui/screens/BanNoticeScreen
	a TEMPORARY_BAN_TITLE
	b PERMANENT_BAN_TITLE
	a (Lcom/mojang/authlib/minecraft/BanDetails;)Lnet/minecraft/network/chat/IChatBaseComponent; getBannedTitle
	a (Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;Lcom/mojang/authlib/minecraft/BanDetails;)Lerx; create
	b (Lcom/mojang/authlib/minecraft/BanDetails;)Lnet/minecraft/network/chat/IChatBaseComponent; getBannedScreenText
	c (Lcom/mojang/authlib/minecraft/BanDetails;)Lnet/minecraft/network/chat/IChatBaseComponent; getBanReasonText
	d (Lcom/mojang/authlib/minecraft/BanDetails;)Lnet/minecraft/network/chat/IChatBaseComponent; getBanStatusText
	e (Lcom/mojang/authlib/minecraft/BanDetails;)Lnet/minecraft/network/chat/IChatBaseComponent; getBanDurationText
	f (Lcom/mojang/authlib/minecraft/BanDetails;)Z isTemporaryBan
erv net/minecraft/client/gui/screens/ChatOptionsScreen
erw net/minecraft/client/gui/screens/ChatScreen
	a MOUSE_SCROLL_SPEED
	b input
	c USAGE_TEXT
	o TOOLTIP_MAX_WIDTH
	p historyBuffer
	q historyPos
	r initial
	s commandSuggestions
	a (DD)Lnet/minecraft/network/chat/ChatModifier; getComponentStyleAt
	a (DDD)Z mouseScrolled
	a (DDI)Z mouseClicked
	a (I)V moveInHistory
	a (III)Z keyPressed
	a (Lehe;IIF)V render
	a (Lemh;II)V resize
	a (Lere;)V updateNarrationState
	a (Ljava/lang/String;)Ljava/lang/String; normalizeChatMessage
	a (Ljava/lang/String;Z)V insertText
	aB_ ()Z isPauseScreen
	az_ ()V removed
	b ()V init
	b (Ljava/lang/String;)V onEdited
	b (Ljava/lang/String;Z)Z handleChatInput
	c (Ljava/lang/String;)V setChatLine
	f ()V tick
erx net/minecraft/client/gui/screens/ConfirmLinkScreen
	o COPY_BUTTON_TEXT
	p WARNING_TEXT
	q url
	r showWarning
	a (I)V addButtons
	a (Lehe;IIF)V render
	a (Ljava/lang/String;Letd;Z)V confirmLinkNow
	a (ZLjava/lang/String;)Lnet/minecraft/network/chat/IChatMutableComponent; confirmMessage
	b (Ljava/lang/String;Letd;Z)Leoc$c; confirmLink
	c (Z)Lnet/minecraft/network/chat/IChatMutableComponent; confirmMessage
	j ()V copyToClipboard
ery net/minecraft/client/gui/screens/ConfirmScreen
	a yesButton
	b noButton
	c callback
	o MARGIN
	p message
	q multilineMessage
	r delayTicker
	s exitButtons
	B ()I messageTop
	C ()I messageHeight
	a (I)V addButtons
	a (III)Z keyPressed
	a (Lehe;IIF)V render
	a (Leoc;)V addExitButton
	aw_ ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarrationMessage
	ax_ ()Z shouldCloseOnEsc
	b ()V init
	b (I)V setDelay
	f ()V tick
	m ()I titleTop
erz net/minecraft/client/gui/screens/ConnectScreen
	a UNKNOWN_HOST_MESSAGE
	b UNIQUE_THREAD_ID
	c LOGGER
	o NARRATION_DELAY_MS
	p connection
	q aborted
	r parent
	s status
	t lastNarration
	a (Lehe;IIF)V render
	a (Lemh;Lfen;Lfdq;)V connect
	a (Letd;Lemh;Lfen;Lfdq;)V startConnecting
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V updateStatus
	ax_ ()Z shouldCloseOnEsc
	b ()V init
	f ()V tick
es$a net/minecraft/commands/arguments/ScoreHolderArgument$Info
	a FLAG_MULTIPLE
	a (Lcom/mojang/brigadier/arguments/ArgumentType;)Lgf$a; unpack
	a (Les$a$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Les$a$a;Lnet/minecraft/network/PacketDataSerializer;)V serializeToNetwork
	a (Lgf$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lgf$a;Lnet/minecraft/network/PacketDataSerializer;)V serializeToNetwork
	a (Lnet/minecraft/commands/arguments/ArgumentScoreholder;)Les$a$a; unpack
	a (Lnet/minecraft/network/PacketDataSerializer;)Les$a$a; deserializeFromNetwork
	b (Lnet/minecraft/network/PacketDataSerializer;)Lgf$a; deserializeFromNetwork
es$a$a net/minecraft/commands/arguments/ScoreHolderArgument$Info$Template
	b multiple
	a ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; type
	a (Lnet/minecraft/commands/CommandBuildContext;)Lnet/minecraft/commands/arguments/ArgumentScoreholder; instantiate
	b (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; instantiate
es$b net/minecraft/commands/arguments/ScoreHolderArgument$Result
es$c net/minecraft/commands/arguments/ScoreHolderArgument$SelectorResult
	a selector
esa net/minecraft/client/gui/screens/CreateBuffetWorldScreen
	a BIOME_SELECT_INFO
	b parent
	c applySettings
	o biomes
	p list
	q biome
	r doneButton
	a (Lehe;IIF)V render
	ay_ ()V onClose
	b ()V init
	m ()V updateButtonValidity
esa$a net/minecraft/client/gui/screens/CreateBuffetWorldScreen$BiomeList
	a (Lenw$a;)V setSelected
	a (Lesa$a$a;)V setSelected
esa$a$a net/minecraft/client/gui/screens/CreateBuffetWorldScreen$BiomeList$Entry
	b biome
	c name
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarration
	a (DDI)Z mouseClicked
	a (Lehe;IIIIIIIZF)V render
esb net/minecraft/client/gui/screens/CreateFlatWorldScreen
	a parent
	b SLOT_TEX_SIZE
	c SLOT_BG_SIZE
	o SLOT_STAT_HEIGHT
	p SLOT_BG_X
	q SLOT_BG_Y
	r SLOT_FG_X
	s SLOT_FG_Y
	t applySettings
	u generator
	v columnType
	w columnHeight
	x list
	y deleteLayerButton
	B ()Z hasValidSelection
	a (Lehe;IIF)V render
	a (Lnet/minecraft/world/level/levelgen/flat/GeneratorSettingsFlat;)V setConfig
	ay_ ()V onClose
	b ()V init
	j ()Lnet/minecraft/world/level/levelgen/flat/GeneratorSettingsFlat; settings
	m ()V updateButtonValidity
esb$a net/minecraft/client/gui/screens/CreateFlatWorldScreen$DetailsList
	a (Lenw$a;)V setSelected
	a (Lesb$a$a;)V setSelected
	c ()I getScrollbarPosition
	d ()V resetRows
esb$a$a net/minecraft/client/gui/screens/CreateFlatWorldScreen$DetailsList$Entry
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarration
	a (DDI)Z mouseClicked
	a (Lehe;II)V blitSlotBg
	a (Lehe;IIIIIIIZF)V render
	a (Lehe;IILnet/minecraft/world/item/ItemStack;)V blitSlot
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/item/ItemStack; getDisplayItem
esc net/minecraft/client/gui/screens/CreditsAndAttributionScreen
	a BUTTON_SPACING
	b BUTTON_WIDTH
	c TITLE
	o CREDITS_BUTTON
	p ATTRIBUTION_BUTTON
	q LICENSES_BUTTON
	r lastScreen
	s layout
	a (Lehe;IIF)V render
	aI_ ()V repositionElements
	ay_ ()V onClose
	b ()V init
	m ()V openCreditsScreen
esd net/minecraft/client/gui/screens/DatapackLoadFailureScreen
	a message
	b callback
	a (Lehe;IIF)V render
	ax_ ()Z shouldCloseOnEsc
	b ()V init
ese net/minecraft/client/gui/screens/DeathScreen
	a delayTicker
	b causeOfDeath
	c hardcore
	o deathScore
	p exitButtons
	q exitToTitleButton
	B ()V exitToTitleScreen
	a (DDI)Z mouseClicked
	a (I)Lnet/minecraft/network/chat/ChatModifier; getClickedComponentStyleAt
	a (Lehe;IIF)V render
	aB_ ()Z isPauseScreen
	ax_ ()Z shouldCloseOnEsc
	b ()V init
	c (Z)V setButtonsActive
	f ()V tick
	m ()V handleExitToTitleScreen
ese$a net/minecraft/client/gui/screens/DeathScreen$TitleConfirmScreen
esf net/minecraft/client/gui/screens/DemoIntroScreen
	a DEMO_BACKGROUND_LOCATION
	b movementMessage
	c durationMessage
	a (Lehe;)V renderBackground
	a (Lehe;IIF)V render
	b ()V init
esg net/minecraft/client/gui/screens/DirectJoinServerScreen
	a ENTER_IP_LABEL
	b selectButton
	c serverData
	o ipEdit
	p callback
	q lastScreen
	B ()V updateSelectButtonStatus
	a (III)Z keyPressed
	a (Lehe;IIF)V render
	a (Lemh;II)V resize
	ay_ ()V onClose
	az_ ()V removed
	b ()V init
	f ()V tick
	m ()V onSelect
esh net/minecraft/client/gui/screens/DisconnectedScreen
	a reason
	b message
	c parent
	o textHeight
	a (Lehe;IIF)V render
	ax_ ()Z shouldCloseOnEsc
	b ()V init
esi net/minecraft/client/gui/screens/EditServerScreen
	a NAME_LABEL
	b IP_LABEL
	c addButton
	o callback
	p serverData
	q ipEdit
	r nameEdit
	s lastScreen
	B ()V updateAddButtonStatus
	a (Lehe;IIF)V render
	a (Lemh;II)V resize
	ay_ ()V onClose
	b ()V init
	f ()V tick
	m ()V onAdd
esj net/minecraft/client/gui/screens/ErrorScreen
	a message
	a (Lehe;IIF)V render
	ax_ ()Z shouldCloseOnEsc
	b ()V init
esk net/minecraft/client/gui/screens/GenericDirtMessageScreen
	a (Lehe;IIF)V render
	ax_ ()Z shouldCloseOnEsc
esl net/minecraft/client/gui/screens/GenericWaitingScreen
	a TITLE_Y
	b MESSAGE_Y
	c MESSAGE_MAX_WIDTH
	o messageText
	p buttonLabel
	q buttonCallback
	r message
	s button
	t disableButtonTicks
	a (Lehe;IIF)V render
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Lnet/minecraft/network/chat/IChatBaseComponent;Ljava/lang/Runnable;)Lesl; createWaiting
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Lnet/minecraft/network/chat/IChatBaseComponent;Lnet/minecraft/network/chat/IChatBaseComponent;Ljava/lang/Runnable;)Lesl; createCompleted
	aw_ ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarrationMessage
	ax_ ()Z shouldCloseOnEsc
	ay_ ()V onClose
	b ()V init
	f ()V tick
esm net/minecraft/client/gui/screens/InBedChatScreen
	c leaveBedButton
	a (CI)Z charTyped
	a (III)Z keyPressed
	a (Lehe;IIF)V render
	ay_ ()V onClose
	b ()V init
	k ()V onPlayerWokeUp
	m ()V sendWakeUp
esn net/minecraft/client/gui/screens/LanguageSelectScreen
	c WARNING_LABEL
	o packSelectionList
	p languageManager
	a (Lehe;IIF)V render
	b ()V init
esn$a net/minecraft/client/gui/screens/LanguageSelectScreen$LanguageSelectionList
	a (Lehe;)V renderBackground
	b ()I getRowWidth
	c ()I getScrollbarPosition
esn$a$a net/minecraft/client/gui/screens/LanguageSelectScreen$LanguageSelectionList$Entry
	b code
	c language
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarration
	a (DDI)Z mouseClicked
	a (Lehe;IIIIIIIZF)V render
	b ()V select
eso net/minecraft/client/gui/screens/LevelLoadingScreen
	a NARRATION_DELAY_MS
	b progressListener
	c lastNarration
	o done
	p COLORS
	a (Lehe;IIF)V render
	a (Lehe;Lajc;IIII)V renderChunks
	aJ_ ()Z shouldNarrateNavigation
	ax_ ()Z shouldCloseOnEsc
	az_ ()V removed
	b (Lere;)V updateNarratedWidget
	m ()Ljava/lang/String; getFormattedProgress
esp net/minecraft/client/gui/screens/LoadingDotsText
	a FRAMES
	b INTERVAL_MS
	a (J)Ljava/lang/String; get
esq net/minecraft/client/gui/screens/LoadingOverlay
	a FADE_OUT_TIME
	b FADE_IN_TIME
	c MOJANG_STUDIOS_LOGO_LOCATION
	d LOGO_BACKGROUND_COLOR
	e LOGO_BACKGROUND_COLOR_DARK
	f BRAND_BACKGROUND
	k LOGO_SCALE
	l LOGO_QUARTER_FLOAT
	m LOGO_QUARTER
	n LOGO_HALF
	o LOGO_OVERLAP
	p SMOOTHING
	q minecraft
	r reload
	s onFinish
	t fadeIn
	u currentProgress
	v fadeOutStart
	w fadeInStart
	a ()Z isPauseScreen
	a (II)I replaceAlpha
	a (Lehe;IIF)V render
	a (Lehe;IIIIF)V drawProgressBar
	a (Lemh;)V registerTextures
esq$a net/minecraft/client/gui/screens/LoadingOverlay$LogoTexture
	b (Lnet/minecraft/server/packs/resources/IResourceManager;)Lfsv$a; getTextureImage
esr net/minecraft/client/gui/screens/MenuScreens
	a LOGGER
	b SCREENS
	a ()Z selfTest
	a (Lnet/minecraft/world/inventory/Containers;)Lesr$a; getConstructor
	a (Lnet/minecraft/world/inventory/Containers;Lemh;ILnet/minecraft/network/chat/IChatBaseComponent;)V create
	a (Lnet/minecraft/world/inventory/Containers;Lesr$a;)V register
esr$a net/minecraft/client/gui/screens/MenuScreens$ScreenConstructor
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Lnet/minecraft/world/inventory/Containers;Lemh;I)V fromPacket
ess net/minecraft/client/gui/screens/MouseSettingsScreen
	c list
	a (Lehe;IIF)V render
	a (Leml;)[Lemk; options
	b ()V init
est net/minecraft/client/gui/screens/OnlineOptionsScreen
	p difficultyDisplay
	a (Lemh;Letd;Leml;)Lest; createOnlineOptionsScreen
	b ()V init
esu net/minecraft/client/gui/screens/OptionsScreen
	a SKIN_CUSTOMIZATION
	b SOUNDS
	c VIDEO
	o CONTROLS
	p LANGUAGE
	q CHAT
	r RESOURCEPACK
	s ACCESSIBILITY
	t TELEMETRY
	u CREDITS_AND_ATTRIBUTION
	v COLUMNS
	w lastScreen
	x options
	y difficultyButton
	z lockButton
	a (IILjava/lang/String;Lemh;)Leoj; createDifficultyButton
	a (Lehe;IIF)V render
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Ljava/util/function/Supplier;)Leoc; openScreenButton
	a (Lnet/minecraft/server/packs/repository/ResourcePackRepository;)V applyPacks
	az_ ()V removed
	b ()V init
	c (Z)V lockCallback
	m ()Leqx; createOnlineButton
esv net/minecraft/client/gui/screens/OptionsSubScreen
	a lastScreen
	b options
	a (Lehe;Leow;IIF)V basicListRender
	ay_ ()V onClose
	az_ ()V removed
esw net/minecraft/client/gui/screens/OutOfMemoryScreen
	a message
	a (Lehe;IIF)V render
	ax_ ()Z shouldCloseOnEsc
	b ()V init
esx net/minecraft/client/gui/screens/Overlay
	a ()Z isPauseScreen
esy net/minecraft/client/gui/screens/PauseScreen
	A SAVING_LEVEL
	B GAME
	C PAUSED
	D showPauseMenu
	E disconnectButton
	a COLUMNS
	b MENU_PADDING_TOP
	c BUTTON_PADDING
	o BUTTON_WIDTH_FULL
	p BUTTON_WIDTH_HALF
	q RETURN_TO_GAME
	r ADVANCEMENTS
	s STATS
	t SEND_FEEDBACK
	u REPORT_BUGS
	v OPTIONS
	w SHARE_TO_LAN
	x PLAYER_REPORTING
	y RETURN_TO_MENU
	z DISCONNECT
	B ()V onDisconnect
	a (Lehe;IIF)V render
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Ljava/lang/String;)Leoc; openLinkButton
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Ljava/util/function/Supplier;)Leoc; openScreenButton
	b ()V init
	f ()V tick
	m ()V createPauseMenu
esz net/minecraft/client/gui/screens/PopupScreen
	a BUTTON_PADDING
	b BUTTON_MARGIN
	c BUTTON_HEIGHT
	o narrationMessage
	p message
	q buttonOptions
	r messageLines
	s contentTop
	t buttonWidth
	a (Lehe;IIF)V render
	aw_ ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarrationMessage
	ax_ ()Z shouldCloseOnEsc
	b ()V init
esz$a net/minecraft/client/gui/screens/PopupScreen$ButtonOption
	a message
	b onPress
eta net/minecraft/client/gui/screens/PresetFlatWorldScreen
	A export
	B settings
	a UNKNOWN_PRESET
	b LOGGER
	c SLOT_TEX_SIZE
	o SLOT_BG_SIZE
	p SLOT_STAT_HEIGHT
	q SLOT_BG_X
	r SLOT_BG_Y
	s SLOT_FG_X
	t SLOT_FG_Y
	u DEFAULT_BIOME
	v parent
	w shareText
	x listText
	y list
	z selectButton
	a (DDD)Z mouseScrolled
	a (Lehe;IIF)V render
	a (Lemh;II)V resize
	a (Lnet/minecraft/core/HolderGetter;Ljava/lang/String;)Ljava/util/List; getLayersInfoFromString
	a (Lnet/minecraft/core/HolderGetter;Ljava/lang/String;I)Lnet/minecraft/world/level/levelgen/flat/WorldGenFlatLayerInfo; getLayerInfoFromString
	a (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Ljava/lang/String;Lnet/minecraft/world/level/levelgen/flat/GeneratorSettingsFlat;)Lnet/minecraft/world/level/levelgen/flat/GeneratorSettingsFlat; fromString
	a (Lnet/minecraft/world/level/levelgen/flat/GeneratorSettingsFlat;)Ljava/lang/String; save
	ay_ ()V onClose
	b ()V init
	c (Z)V updateButtonValidity
	f ()V tick
eta$a net/minecraft/client/gui/screens/PresetFlatWorldScreen$PresetsList
	a (III)Z keyPressed
	a (Lenw$a;)V setSelected
	a (Leta$a$a;)V setSelected
eta$a$a net/minecraft/client/gui/screens/PresetFlatWorldScreen$PresetsList$Entry
	b preset
	c name
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarration
	a (DDI)Z mouseClicked
	a (Lehe;II)V blitSlotBg
	a (Lehe;IIIIIIIZF)V render
	a (Lehe;IILnet/minecraft/world/item/Item;)V blitSlot
	b ()V select
etb net/minecraft/client/gui/screens/ProgressScreen
	a header
	b stage
	c progress
	o stop
	p clearScreenAfterStop
	a ()V stop
	a (I)V progressStagePercentage
	a (Lehe;IIF)V render
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V progressStartNoAbort
	aJ_ ()Z shouldNarrateNavigation
	ax_ ()Z shouldCloseOnEsc
	b (Lnet/minecraft/network/chat/IChatBaseComponent;)V progressStart
	c (Lnet/minecraft/network/chat/IChatBaseComponent;)V progressStage
etc net/minecraft/client/gui/screens/ReceivingLevelScreen
	a DOWNLOADING_TERRAIN_TEXT
	b CHUNK_LOADING_START_WAIT_LIMIT_MS
	c loadingPacketsReceived
	o oneTickSkipped
	p createdAt
	a (Lehe;IIF)V render
	aB_ ()Z isPauseScreen
	aJ_ ()Z shouldNarrateNavigation
	ax_ ()Z shouldCloseOnEsc
	ay_ ()V onClose
	f ()V tick
	m ()V loadingPacketsReceived
etd net/minecraft/client/gui/screens/Screen
	A narrationSuppressTime
	B nextNarrationTime
	C lastNarratable
	D deferredTooltipRendering
	a LOGGER
	b ALLOWED_PROTOCOLS
	c EXTRA_SPACE_AFTER_FIRST_TOOLTIP_LINE
	d title
	e minecraft
	f itemRenderer
	k width
	l height
	m passEvents
	n font
	o USAGE_NARRATION
	p children
	q narratables
	r initialized
	s renderables
	t clickedLink
	u NARRATE_SUPPRESS_AFTER_INIT_TIME
	v NARRATE_DELAY_NARRATOR_ENABLED
	w NARRATE_DELAY_MOUSE_MOVE
	x NARRATE_DELAY_MOUSE_ACTION
	y NARRATE_DELAY_KEYBOARD_ACTION
	z narrationState
	A ()V narrationEnabled
	B ()V clearFocus
	F ()Z shouldRunNarration
	a (III)Z keyPressed
	a (J)V suppressNarration
	a (JZ)V scheduleNarration
	a (Lehe;)V renderBackground
	a (Lehe;IIF)V render
	a (Lehe;Letd$a;II)V renderTooltip
	a (Lehe;Ljava/util/List;II)V renderComponentTooltip
	a (Lehe;Ljava/util/List;IILevv;)V renderTooltipInternal
	a (Lehe;Ljava/util/List;Ljava/util/Optional;II)V renderTooltip
	a (Lehe;Lnet/minecraft/network/chat/ChatModifier;II)V renderComponentHoverEffect
	a (Lehe;Lnet/minecraft/world/item/ItemStack;II)V renderTooltip
	a (Lemh;II)V resize
	a (Leno;)V changeFocus
	a (Lepa;)Lepa; addRenderableOnly
	a (Leph;Levv;Z)V setTooltipForNextRenderPass
	a (Lere;)V updateNarrationState
	a (Lerl;)Lerj$a; createArrowEvent
	a (Ljava/lang/Runnable;Ljava/lang/String;Ljava/lang/String;)V wrapScreenError
	a (Ljava/lang/String;CI)Z isValidCharacterForName
	a (Ljava/lang/String;Z)V insertText
	a (Ljava/net/URI;)V openLink
	a (Ljava/util/List;)V onFilesDrop
	a (Ljava/util/List;Lerc;)Letd$b; findNarratableWidget
	a (Ljava/util/List;Levv;Z)V setTooltipForNextRenderPass
	a (Lnet/minecraft/network/chat/ChatModifier;)Z handleComponentClicked
	a (Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; getTooltipFromItem
	a ([Lenz;)V hideWidgets
	aA_ ()V added
	aB_ ()Z isPauseScreen
	aI_ ()V repositionElements
	aJ_ ()Z shouldNarrateNavigation
	a_ (DD)Z isMouseOver
	aw_ ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarrationMessage
	ax_ ()Z shouldCloseOnEsc
	ay_ ()V onClose
	az_ ()V removed
	b ()V init
	b (Lehe;)V renderDirtBackground
	b (Lehe;IIF)V renderWithTooltip
	b (Lehe;Ljava/util/List;II)V renderTooltip
	b (Lehe;Lnet/minecraft/network/chat/IChatBaseComponent;II)V renderTooltip
	b (Lemh;II)V init
	b (Lere;)V updateNarratedWidget
	b (Ljava/util/List;)V setTooltipForNextRenderPass
	c (Lepl;)V setInitialFocus
	c (Z)V confirmLink
	d (I)Z isCut
	d (Lepl;)Lepl; addRenderableWidget
	d (Lnet/minecraft/network/chat/IChatBaseComponent;)V setTooltipForNextRenderPass
	d (Z)V triggerImmediateNarration
	e (I)Z isPaste
	e (Lepl;)Lepl; addWidget
	e (Z)V runNarration
	f ()V tick
	f (I)Z isCopy
	f (Lepl;)V removeWidget
	g (I)Z isSelectAll
	i ()Ljava/util/List; children
	m ()Lerj$c; createTabEvent
	n ()Lnet/minecraft/network/chat/IChatBaseComponent; getTitle
	o ()V clearWidgets
	p ()V rebuildWidgets
	q ()Z hasControlDown
	s ()Z hasShiftDown
	t ()Z hasAltDown
	u ()Lern; getRectangle
	w ()V afterMouseMove
	x ()V afterMouseAction
	y ()V afterKeyboardAction
	z ()V handleDelayedNarration
etd$a net/minecraft/client/gui/screens/Screen$DeferredTooltipRendering
	a tooltip
	b positioner
	a ()Ljava/util/List; tooltip
	b ()Levv; positioner
etd$b net/minecraft/client/gui/screens/Screen$NarratableSearchResult
	a entry
	b index
	c priority
ete net/minecraft/client/gui/screens/ShareToLanScreen
	a PORT_LOWER_BOUND
	b PORT_HIGHER_BOUND
	c ALLOW_COMMANDS_LABEL
	o GAME_MODE_LABEL
	p INFO_TEXT
	q PORT_INFO_TEXT
	r PORT_UNAVAILABLE
	s INVALID_PORT
	t INVALID_PORT_COLOR
	u lastScreen
	v gameMode
	w commands
	x port
	y portEdit
	a (Lehe;IIF)V render
	a (Ljava/lang/String;)Lnet/minecraft/network/chat/IChatBaseComponent; tryParsePort
	b ()V init
	f ()V tick
etf net/minecraft/client/gui/screens/SimpleOptionsSubScreen
	c smallOptions
	o list
	p narratorButton
	a (Lehe;IIF)V render
	b ()V init
	e ()V createFooter
	m ()V updateNarratorButton
etg net/minecraft/client/gui/screens/SkinCustomizationScreen
	a (Lehe;IIF)V render
	b ()V init
eth net/minecraft/client/gui/screens/SoundOptionsScreen
	c list
	a (Lehe;IIF)V render
	a (Leml;)[Lemk; buttonOptions
	b ()V init
	m ()[Lemk; getAllSoundOptionsExceptMaster
eti net/minecraft/client/gui/screens/TitleScreen
	a COPYRIGHT_TEXT
	b CUBE_MAP
	c LOGGER
	o DEMO_LEVEL_ID
	p PANORAMA_OVERLAY
	q splash
	r resetDemoButton
	s realmsNotificationsScreen
	t panorama
	u fading
	v fadeInStart
	w warningLabel
	x logoRenderer
	B ()Lnet/minecraft/network/chat/IChatBaseComponent; getMultiplayerDisabledReason
	C ()Z checkDemoWorldPresence
	D ()V realmsButtonClicked
	a (DDI)Z mouseClicked
	a (II)V createNormalMenuOptions
	a (Lehe;IIF)V render
	a (Lftd;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; preloadResources
	aA_ ()V added
	aB_ ()Z isPauseScreen
	ax_ ()Z shouldCloseOnEsc
	az_ ()V removed
	b ()V init
	b (II)V createDemoMenuOptions
	c (Z)V confirmDemo
	f ()V tick
	m ()Z realmsNotificationsEnabled
eti$a net/minecraft/client/gui/screens/TitleScreen$WarningLabel
	a font
	b label
	c x
	d y
	a ()Lenp; font
	a (Lehe;I)V render
	b ()Leos; label
	c ()I x
	d ()I y
etj net/minecraft/client/gui/screens/VideoSettingsScreen
	c FABULOUS
	o WARNING_MESSAGE
	p WARNING_TITLE
	q BUTTON_ACCEPT
	r BUTTON_CANCEL
	s list
	t gpuWarnlistManager
	u oldMipmaps
	a (DDI)Z mouseClicked
	a (Lehe;IIF)V render
	a (Leml;)[Lemk; options
	az_ ()V removed
	b ()V init
etk net/minecraft/client/gui/screens/WinScreen
	A scrollSpeed
	B unmodifiedScrollSpeed
	C logoRenderer
	a LOGGER
	b VIGNETTE_LOCATION
	c SECTION_HEADING
	o NAME_PREFIX
	p OBFUSCATE_TOKEN
	q SPEEDUP_FACTOR
	r SPEEDUP_FACTOR_FAST
	s poem
	t onFinished
	u scroll
	v lines
	w centeredLines
	x totalScrollLength
	y speedupActive
	z speedupModifiers
	B ()V respawn
	C ()V addEmptyLine
	a (III)Z keyPressed
	a (Lehe;IIF)V render
	a (Ljava/io/Reader;)V addPoemFile
	a (Ljava/lang/String;)V addPoemLines
	a (Ljava/lang/String;Letk$a;)V wrapCreditsIO
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Z)V addCreditsLine
	ay_ ()V onClose
	b ()V init
	b (III)Z keyReleased
	b (Ljava/io/Reader;)V addCreditsFile
	c (Lehe;)V renderBg
	f ()V tick
	m ()F calculateScrollSpeed
etk$a net/minecraft/client/gui/screens/WinScreen$CreditsReader
etl net/minecraft/client/gui/screens/achievement/StatsScreen
	A SLOT_FG_Y
	B SLOT_LEFT_INSERT
	C SLOT_TEXT_OFFSET
	D SORT_NONE
	E SORT_DOWN
	F SORT_UP
	a lastScreen
	c PENDING_TEXT
	o statsList
	p itemStatsList
	q mobsStatsList
	r stats
	s activeList
	t isLoading
	u SLOT_TEX_SIZE
	v SLOT_BG_SIZE
	w SLOT_STAT_HEIGHT
	x SLOT_BG_X
	y SLOT_BG_Y
	z SLOT_FG_X
	B ()V initButtons
	C ()V onStatsUpdated
	D ()Leov; getActiveList
	a (I)I getColumnX
	a (Lehe;IIF)V render
	a (Lehe;IILnet/minecraft/world/item/Item;)V blitSlot
	a (Leov;)V setActiveList
	a (Lnet/minecraft/stats/Statistic;)Ljava/lang/String; getTranslationKey
	aB_ ()Z isPauseScreen
	b ()V init
	c (Lehe;IIII)V blitSlotIcon
	m ()V initLists
etl$a net/minecraft/client/gui/screens/achievement/StatsScreen$GeneralStatisticsList
	a (Lehe;)V renderBackground
etl$a$a net/minecraft/client/gui/screens/achievement/StatsScreen$GeneralStatisticsList$Entry
	b stat
	c statDisplay
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarration
	a (Lehe;IIIIIIIZF)V render
	b ()Ljava/lang/String; getValueText
etl$b net/minecraft/client/gui/screens/achievement/StatsScreen$ItemStatisticsList
	a blockColumns
	p itemColumns
	q headerPressed
	r itemStatSorter
	s sortColumn
	t sortOrder
	v iconOffsets
	a (I)Lnet/minecraft/stats/StatisticWrapper; getColumn
	a (II)V clickedHeader
	a (Lehe;)V renderBackground
	a (Lehe;II)V renderHeader
	a (Lehe;Lnet/minecraft/network/chat/IChatBaseComponent;II)V renderMousehoverTooltip
	a (Lnet/minecraft/stats/StatisticWrapper;)V sortByColumn
	a (Lnet/minecraft/world/item/Item;)Lnet/minecraft/network/chat/IChatBaseComponent; getString
	b ()I getRowWidth
	b (Lehe;II)V renderDecorations
	b (Lnet/minecraft/stats/StatisticWrapper;)I getColumnIndex
	c ()I getScrollbarPosition
etl$b$a net/minecraft/client/gui/screens/achievement/StatsScreen$ItemStatisticsList$ItemRow
	b item
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarration
	a (Lehe;IIIIIIIZF)V render
	a (Lehe;Lnet/minecraft/stats/Statistic;IIZ)V renderStat
	b ()Lnet/minecraft/world/item/Item; getItem
etl$b$b net/minecraft/client/gui/screens/achievement/StatsScreen$ItemStatisticsList$ItemRowComparator
	a (Letl$b$a;Letl$b$a;)I compare
etl$c net/minecraft/client/gui/screens/achievement/StatsScreen$MobsStatisticsList
	a (Lehe;)V renderBackground
etl$c$a net/minecraft/client/gui/screens/achievement/StatsScreen$MobsStatisticsList$MobRow
	b mobName
	c kills
	d hasKills
	e killedBy
	f wasKilledBy
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarration
	a (Lehe;IIIIIIIZF)V render
etm net/minecraft/client/gui/screens/achievement/StatsUpdateListener
	b LOADING_SYMBOLS
	C ()V onStatsUpdated
eto net/minecraft/client/gui/screens/advancements/AdvancementTab
	a minecraft
	b screen
	c type
	d index
	e advancement
	f display
	k icon
	l title
	m root
	n widgets
	o scrollX
	p scrollY
	q minX
	r minY
	s maxX
	t maxY
	u fade
	v centered
	a ()Letp; getType
	a (DD)V scroll
	a (IIDD)Z isMouseOver
	a (Lehe;II)V drawContents
	a (Lehe;IILfoc;)V drawIcon
	a (Lehe;IIZ)V drawTab
	a (Lemh;Lets;ILnet/minecraft/advancements/Advancement;)Leto; create
	a (Letq;Lnet/minecraft/advancements/Advancement;)V addWidget
	a (Lnet/minecraft/advancements/Advancement;)V addAdvancement
	b ()I getIndex
	b (Lnet/minecraft/advancements/Advancement;)Letq; getWidget
	c ()Lnet/minecraft/advancements/Advancement; getAdvancement
	c (Lehe;IIII)V drawTooltips
	d ()Lnet/minecraft/network/chat/IChatBaseComponent; getTitle
	e ()Lnet/minecraft/advancements/AdvancementDisplay; getDisplay
	f ()Lets; getScreen
etp net/minecraft/client/gui/screens/advancements/AdvancementTabType
	a ABOVE
	b BELOW
	c LEFT
	d RIGHT
	e textureX
	f textureY
	g width
	h height
	i max
	j $VALUES
	a ()I getMax
	a (I)I getX
	a (IIIDD)Z isMouseOver
	a (Lehe;IIILfoc;Lnet/minecraft/world/item/ItemStack;)V drawIcon
	a (Lehe;IIZI)V draw
	b ()[Letp; $values
	b (I)I getY
etq net/minecraft/client/gui/screens/advancements/AdvancementWidget
	A children
	B progress
	C x
	D y
	a WIDGETS_LOCATION
	b HEIGHT
	c BOX_X
	d BOX_WIDTH
	e FRAME_WIDTH
	f ICON_X
	k ICON_Y
	l ICON_WIDTH
	m TITLE_PADDING_LEFT
	n TITLE_PADDING_RIGHT
	o TITLE_X
	p TITLE_Y
	q TITLE_MAX_WIDTH
	r TEST_SPLIT_OFFSETS
	s tab
	t advancement
	u display
	v title
	w width
	x description
	y minecraft
	z parent
	a ()I getWidth
	a (Lehe;II)V draw
	a (Lehe;IIFII)V drawHover
	a (Lehe;IIZ)V drawConnectivity
	a (Lemt;Ljava/util/List;)F getMaxWidth
	a (Letq;)V addChild
	a (Lnet/minecraft/advancements/Advancement;)Letq; getFirstVisibleParent
	a (Lnet/minecraft/advancements/AdvancementProgress;)V setProgress
	a (Lnet/minecraft/network/chat/IChatBaseComponent;I)Ljava/util/List; findOptimalLines
	b ()V attachToParent
	b (IIII)Z isMouseOver
	c ()I getY
	d ()I getX
etr net/minecraft/client/gui/screens/advancements/AdvancementWidgetType
	a OBTAINED
	b UNOBTAINED
	c y
	d $VALUES
	a ()I getIndex
	b ()[Letr; $values
ets net/minecraft/client/gui/screens/advancements/AdvancementsScreen
	A NO_ADVANCEMENTS_LABEL
	B TITLE
	C advancements
	D tabs
	E selectedTab
	F isScrolling
	a WINDOW_WIDTH
	b WINDOW_HEIGHT
	c WINDOW_INSIDE_WIDTH
	o WINDOW_INSIDE_HEIGHT
	p BACKGROUND_TILE_WIDTH
	q BACKGROUND_TILE_HEIGHT
	r BACKGROUND_TILE_COUNT_X
	s BACKGROUND_TILE_COUNT_Y
	t WINDOW_LOCATION
	u TABS_LOCATION
	v WINDOW_INSIDE_X
	w WINDOW_INSIDE_Y
	x WINDOW_TITLE_X
	y WINDOW_TITLE_Y
	z VERY_SAD_LABEL
	a ()V onAdvancementsCleared
	a (DDI)Z mouseClicked
	a (DDIDD)Z mouseDragged
	a (III)Z keyPressed
	a (Lehe;II)V renderWindow
	a (Lehe;IIF)V render
	a (Lnet/minecraft/advancements/Advancement;)V onAddAdvancementRoot
	a (Lnet/minecraft/advancements/Advancement;Lnet/minecraft/advancements/AdvancementProgress;)V onUpdateAdvancementProgress
	az_ ()V removed
	b ()V init
	b (Lnet/minecraft/advancements/Advancement;)V onRemoveAdvancementRoot
	c (Lehe;IIII)V renderInside
	c (Lnet/minecraft/advancements/Advancement;)V onAddAdvancementTask
	d (Lehe;IIII)V renderTooltips
	d (Lnet/minecraft/advancements/Advancement;)V onRemoveAdvancementTask
	e (Lnet/minecraft/advancements/Advancement;)V onSelectedTabChanged
	f (Lnet/minecraft/advancements/Advancement;)Letq; getAdvancementWidget
	g (Lnet/minecraft/advancements/Advancement;)Leto; getTab
etu net/minecraft/client/gui/screens/controls/ControlsScreen
	c ROW_SPACING
	a (Lehe;IIF)V render
	b ()V init
etv net/minecraft/client/gui/screens/controls/KeyBindsList
	a keyBindsScreen
	p maxNameWidth
	b ()I getRowWidth
	c ()I getScrollbarPosition
	d ()V resetMappingAndUpdateButtons
	e ()V refreshEntries
etv$a net/minecraft/client/gui/screens/controls/KeyBindsList$CategoryEntry
	b name
	c width
	a (Lehe;IIIIIIIZF)V render
	a (Lerj;)Leno; nextFocusPath
	b ()Ljava/util/List; narratables
	d ()V refreshEntry
	i ()Ljava/util/List; children
etv$b net/minecraft/client/gui/screens/controls/KeyBindsList$Entry
	d ()V refreshEntry
etv$c net/minecraft/client/gui/screens/controls/KeyBindsList$KeyEntry
	b key
	c name
	d changeButton
	e resetButton
	f hasCollision
	a (Lehe;IIIIIIIZF)V render
	b ()Ljava/util/List; narratables
	d ()V refreshEntry
	i ()Ljava/util/List; children
etw net/minecraft/client/gui/screens/controls/KeyBindsScreen
	c selectedKey
	o lastKeySelection
	p keyBindsList
	q resetButton
	a (DDI)Z mouseClicked
	a (III)Z keyPressed
	a (Lehe;IIF)V render
	b ()V init
ety net/minecraft/client/gui/screens/debug/GameModeSwitcherScreen
	a GAMEMODE_SWITCHER_LOCATION
	b SPRITE_SHEET_WIDTH
	c SPRITE_SHEET_HEIGHT
	o SLOT_AREA
	p SLOT_PADDING
	q SLOT_AREA_PADDED
	r HELP_TIPS_OFFSET_Y
	s ALL_SLOTS_WIDTH
	t SELECT_KEY
	u previousHovered
	v currentlyHovered
	w firstMouseX
	x firstMouseY
	y setFirstMousePos
	z slots
	B ()V switchToHoveredGameMode
	C ()Z checkToClose
	a (III)Z keyPressed
	a (Lehe;IIF)V render
	a (Lemh;Ljava/util/Optional;)V switchToHoveredGameMode
	aB_ ()Z isPauseScreen
	b ()V init
	m ()Lnet/minecraft/world/level/EnumGamemode; getDefaultSelected
ety$a net/minecraft/client/gui/screens/debug/GameModeSwitcherScreen$GameModeIcon
	a CREATIVE
	b SURVIVAL
	c ADVENTURE
	d SPECTATOR
	e VALUES
	f ICON_TOP_LEFT
	g name
	h command
	i renderStack
	j ICON_AREA
	k $VALUES
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getName
	a (Lehe;Lfoc;II)V drawIcon
	a (Lnet/minecraft/world/level/EnumGamemode;)Ljava/util/Optional; getFromGameType
	b ()Ljava/lang/String; getCommand
	c ()Ljava/util/Optional; getNext
	d ()[Lety$a; $values
ety$b net/minecraft/client/gui/screens/debug/GameModeSwitcherScreen$GameModeSlot
	b icon
	c isSelected
	a (Lehe;Lftd;)V drawSlot
	a (Lere;)V updateWidgetNarration
	b (Lehe;IIF)V renderWidget
	b (Lehe;Lftd;)V drawSelection
	b (Z)V setSelected
	n ()Z isHoveredOrFocused
eua net/minecraft/client/gui/screens/inventory/AbstractCommandBlockEditScreen
	a commandEdit
	b previousEdit
	c doneButton
	o cancelButton
	p outputButton
	q SET_COMMAND_LABEL
	r COMMAND_LABEL
	s PREVIOUS_OUTPUT_LABEL
	t commandSuggestions
	B ()I getPreviousY
	C ()V onDone
	a (DDD)Z mouseScrolled
	a (DDI)Z mouseClicked
	a (III)Z keyPressed
	a (Lehe;IIF)V render
	a (Lemh;II)V resize
	a (Ljava/lang/String;)V onEdited
	a (Lnet/minecraft/world/level/CommandBlockListenerAbstract;)V populateAndSendPacket
	b ()V init
	c (Z)V updatePreviousOutput
	f ()V tick
	m ()Lnet/minecraft/world/level/CommandBlockListenerAbstract; getCommandBlock
eub net/minecraft/client/gui/screens/inventory/AbstractContainerScreen
	A SNAPBACK_SPEED
	B QUICKDROP_DELAY
	C HOVER_ITEM_BLIT_OFFSET
	D clickedSlot
	E snapbackEnd
	F quickdropSlot
	G lastClickSlot
	H isSplittingStack
	I draggingItem
	J snapbackStartX
	K snapbackStartY
	L snapbackTime
	M snapbackItem
	N quickdropTime
	O quickCraftingType
	P quickCraftingButton
	Q skipNextRelease
	R quickCraftingRemainder
	S lastClickTime
	T lastClickButton
	U doubleclick
	V lastQuickMoved
	a INVENTORY_LOCATION
	b SLOT_ITEM_BLIT_OFFSET
	c imageWidth
	o imageHeight
	p titleLabelX
	q titleLabelY
	r inventoryLabelX
	s inventoryLabelY
	t menu
	u playerInventoryTitle
	v hoveredSlot
	w leftPos
	x topPos
	y quickCraftSlots
	z isQuickCrafting
	B ()V containerTick
	C ()Lnet/minecraft/world/inventory/Container; getMenu
	F ()V recalculateQuickCraftRemaining
	a (DD)Lnet/minecraft/world/inventory/Slot; findSlot
	a (DDI)Z mouseClicked
	a (DDIDD)Z mouseDragged
	a (DDIII)Z hasClickedOutside
	a (I)V checkHotbarMouseClicked
	a (II)Z checkHotbarKeyPressed
	a (III)Z keyPressed
	a (IIIIDD)Z isHovering
	a (Lehe;FII)V renderBg
	a (Lehe;II)V renderTooltip
	a (Lehe;IIF)V render
	a (Lehe;III)V renderSlotHighlight
	a (Lehe;Lnet/minecraft/world/inventory/Slot;)V renderSlot
	a (Lehe;Lnet/minecraft/world/item/ItemStack;IILjava/lang/String;)V renderFloatingItem
	a (Lnet/minecraft/world/inventory/Slot;DD)Z isHovering
	a (Lnet/minecraft/world/inventory/Slot;IILnet/minecraft/world/inventory/InventoryClickType;)V slotClicked
	aB_ ()Z isPauseScreen
	ay_ ()V onClose
	az_ ()V removed
	b ()V init
	b (DDI)Z mouseReleased
	b (Lehe;II)V renderLabels
	f ()V tick
	m ()V clearDraggingState
euc net/minecraft/client/gui/screens/inventory/AbstractFurnaceScreen
	A recipeBookComponent
	B RECIPE_BUTTON_LOCATION
	C widthTooNarrow
	D texture
	B ()V containerTick
	D ()V recipesUpdated
	E ()Lewp; getRecipeBookComponent
	a (CI)Z charTyped
	a (DDI)Z mouseClicked
	a (DDIII)Z hasClickedOutside
	a (III)Z keyPressed
	a (Lehe;FII)V renderBg
	a (Lehe;IIF)V render
	a (Lnet/minecraft/world/inventory/Slot;IILnet/minecraft/world/inventory/InventoryClickType;)V slotClicked
	b ()V init
eud net/minecraft/client/gui/screens/inventory/AbstractSignEditScreen
	a sign
	b messages
	c woodType
	o frame
	p line
	q signField
	B ()V onDone
	a (CI)Z charTyped
	a (III)Z keyPressed
	a (Lehe;IIF)V render
	a (Lehe;Lfig$a;)V renderSignText
	a (Lehe;Lfig$a;Lnet/minecraft/world/level/block/state/IBlockData;)V renderSignBackground
	a (Lehe;Lnet/minecraft/world/level/block/state/IBlockData;)V offsetSign
	ay_ ()V onClose
	az_ ()V removed
	b ()V init
	c (Lehe;)V renderSign
	f ()V tick
	m ()Lorg/joml/Vector3f; getSignTextScale
eue net/minecraft/client/gui/screens/inventory/AnvilScreen
	A ANVIL_LOCATION
	B TOO_EXPENSIVE_TEXT
	C name
	D player
	B ()V containerTick
	D ()V subInit
	a (III)Z keyPressed
	a (Lehe;FII)V renderBg
	a (Lemh;II)V resize
	a (Ljava/lang/String;)V onNameChanged
	a (Lnet/minecraft/world/inventory/Container;ILnet/minecraft/world/item/ItemStack;)V slotChanged
	b (Lehe;II)V renderLabels
	c (Lehe;II)V renderErrorIcon
	c (Lehe;IIF)V renderFg
euf net/minecraft/client/gui/screens/inventory/BeaconScreen
	A BEACON_LOCATION
	B PRIMARY_EFFECT_LABEL
	C SECONDARY_EFFECT_LABEL
	D beaconButtons
	E primary
	F secondary
	B ()V containerTick
	D ()V updateButtons
	a (Lehe;FII)V renderBg
	a (Lehe;IIF)V render
	a (Lenz;)V addBeaconButton
	b ()V init
	b (Lehe;II)V renderLabels
euf$a net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconButton
	a (I)V updateStatus
euf$b net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconCancelButton
	a (I)V updateStatus
	c ()V onPress
euf$c net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconConfirmButton
	a (I)V updateStatus
	c ()V onPress
euf$d net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconPowerButton
	a tier
	c isPrimary
	d effect
	e sprite
	a (I)V updateStatus
	a (Lehe;)V renderIcon
	a (Lnet/minecraft/world/effect/MobEffectList;)V setEffect
	aH_ ()Lnet/minecraft/network/chat/IChatMutableComponent; createNarrationMessage
	b (Lnet/minecraft/world/effect/MobEffectList;)Lnet/minecraft/network/chat/IChatMutableComponent; createEffectDescription
	c ()V onPress
euf$e net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconScreenButton
	a selected
	a ()Z isSelected
	a (Lehe;)V renderIcon
	a (Lere;)V updateWidgetNarration
	b (Lehe;IIF)V renderWidget
	b (Z)V setSelected
euf$f net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconSpriteScreenButton
	a iconX
	b iconY
	a (Lehe;)V renderIcon
euf$g net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconUpgradePowerButton
	a (I)V updateStatus
	b (Lnet/minecraft/world/effect/MobEffectList;)Lnet/minecraft/network/chat/IChatMutableComponent; createEffectDescription
eug net/minecraft/client/gui/screens/inventory/BlastFurnaceScreen
	B TEXTURE
euh net/minecraft/client/gui/screens/inventory/BookEditScreen
	A title
	B pageEdit
	C titleEdit
	D lastClickTime
	E lastIndex
	F forwardButton
	G backButton
	H doneButton
	I signButton
	J finalizeButton
	K cancelButton
	L hand
	M displayCache
	N pageMsg
	O ownerText
	a TEXT_WIDTH
	b TEXT_HEIGHT
	c IMAGE_WIDTH
	o IMAGE_HEIGHT
	p EDIT_TITLE_LABEL
	q FINALIZE_WARNING_LABEL
	r BLACK_CURSOR
	s GRAY_CURSOR
	t owner
	u book
	v isModified
	w isSigning
	x frameTick
	y currentPage
	z pages
	B ()I getNumPages
	C ()V pageBack
	D ()V pageForward
	E ()V updateButtonVisibility
	F ()V eraseEmptyTrailingPages
	G ()V appendPageToBook
	H ()V keyUp
	I ()V keyDown
	J ()V keyHome
	K ()V keyEnd
	L ()Ljava/lang/String; getCurrentPageText
	M ()Leuh$a; getDisplayCache
	N ()V clearDisplayCache
	O ()V clearDisplayCacheAfterPageChange
	P ()Leuh$a; rebuildDisplayCache
	a (CI)Z charTyped
	a (DDI)Z mouseClicked
	a (DDIDD)Z mouseDragged
	a (I)V changeLine
	a (III)Z keyPressed
	a (Lehe;IIF)V render
	a (Lehe;Leuh$c;Z)V renderCursor
	a (Lehe;[Lfil;)V renderHighlight
	a (Leuh$c;)Leuh$c; convertScreenToLocal
	a (Leuh$c;Leuh$c;)Lfil; createSelection
	a (Ljava/lang/String;)V setClipboard
	a (Ljava/lang/String;Lemt;IIII)Lfil; createPartialLineSelection
	a ([II)I findLineFromPos
	b ()V init
	b (I)V selectWord
	b (Leuh$c;)Leuh$c; convertLocalToScreen
	b (Ljava/lang/String;)V setCurrentPageText
	c (III)Z bookKeyPressed
	c (Z)V saveChanges
	d (III)Z titleKeyPressed
	e (Z)V updateLocalCopy
	f ()V tick
	m ()Ljava/lang/String; getClipboard
euh$a net/minecraft/client/gui/screens/inventory/BookEditScreen$DisplayCache
	a EMPTY
	b fullText
	c cursor
	d cursorAtEnd
	e lineStarts
	f lines
	g selection
	a (I)I findLineStart
	a (II)I changeLine
	a (Lenp;Leuh$c;)I getIndexAtPosition
	b (I)I findLineEnd
euh$b net/minecraft/client/gui/screens/inventory/BookEditScreen$LineInfo
	a style
	b contents
	c asComponent
	d x
	e y
euh$c net/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i
	a x
	b y
eui net/minecraft/client/gui/screens/inventory/BookViewScreen
	A backButton
	B playTurnSound
	a PAGE_INDICATOR_TEXT_Y_OFFSET
	b PAGE_TEXT_X_OFFSET
	c PAGE_TEXT_Y_OFFSET
	o EMPTY_ACCESS
	p BOOK_LOCATION
	q TEXT_WIDTH
	r TEXT_HEIGHT
	s IMAGE_WIDTH
	t IMAGE_HEIGHT
	u bookAccess
	v currentPage
	w cachedPageComponents
	x cachedPage
	y pageMsg
	z forwardButton
	B ()V createPageControlButtons
	C ()I getNumPages
	D ()V pageBack
	E ()V pageForward
	F ()V closeScreen
	G ()V updateButtonVisibility
	a (DD)Lnet/minecraft/network/chat/ChatModifier; getClickedComponentStyleAt
	a (DDI)Z mouseClicked
	a (I)Z setPage
	a (III)Z keyPressed
	a (Lehe;IIF)V render
	a (Leui$a;)V setBookAccess
	a (Lnet/minecraft/nbt/NBTTagCompound;)Ljava/util/List; loadPages
	a (Lnet/minecraft/nbt/NBTTagCompound;Ljava/util/function/Consumer;)V loadPages
	a (Lnet/minecraft/network/chat/ChatModifier;)Z handleComponentClicked
	b ()V init
	b (I)Z forcePage
	m ()V createMenuControls
eui$a net/minecraft/client/gui/screens/inventory/BookViewScreen$BookAccess
	a ()I getPageCount
	a (I)Lnet/minecraft/network/chat/IChatFormatted; getPageRaw
	a (Lnet/minecraft/world/item/ItemStack;)Leui$a; fromItem
	b (I)Lnet/minecraft/network/chat/IChatFormatted; getPage
eui$b net/minecraft/client/gui/screens/inventory/BookViewScreen$WritableBookAccess
	a pages
	a ()I getPageCount
	a (I)Lnet/minecraft/network/chat/IChatFormatted; getPageRaw
	b (Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; readPages
eui$c net/minecraft/client/gui/screens/inventory/BookViewScreen$WrittenBookAccess
	a pages
	a ()I getPageCount
	a (I)Lnet/minecraft/network/chat/IChatFormatted; getPageRaw
	b (Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; readPages
euj net/minecraft/client/gui/screens/inventory/BrewingStandScreen
	A BREWING_STAND_LOCATION
	B BUBBLELENGTHS
	a (Lehe;FII)V renderBg
	a (Lehe;IIF)V render
	b ()V init
euk net/minecraft/client/gui/screens/inventory/CartographyTableScreen
	A BG_LOCATION
	a (Lehe;FII)V renderBg
	a (Lehe;IIF)V render
	a (Lehe;Ljava/lang/Integer;Lnet/minecraft/world/level/saveddata/maps/WorldMap;IIF)V renderMap
	a (Lehe;Ljava/lang/Integer;Lnet/minecraft/world/level/saveddata/maps/WorldMap;ZZZZ)V renderResultingMap
eul net/minecraft/client/gui/screens/inventory/CommandBlockEditScreen
	q autoCommandBlock
	r modeButton
	s conditionalButton
	t autoexecButton
	u mode
	v conditional
	w autoexec
	B ()I getPreviousY
	D ()V updateGui
	a (Lemh;II)V resize
	a (Lnet/minecraft/world/level/CommandBlockListenerAbstract;)V populateAndSendPacket
	b ()V init
	e (Z)V enableControls
	m ()Lnet/minecraft/world/level/CommandBlockListenerAbstract; getCommandBlock
eum net/minecraft/client/gui/screens/inventory/ContainerScreen
	A CONTAINER_BACKGROUND
	B containerRows
	a (Lehe;FII)V renderBg
	a (Lehe;IIF)V render
eun net/minecraft/client/gui/screens/inventory/CraftingScreen
	A CRAFTING_TABLE_LOCATION
	B RECIPE_BUTTON_LOCATION
	C recipeBookComponent
	D widthTooNarrow
	B ()V containerTick
	D ()V recipesUpdated
	E ()Lewp; getRecipeBookComponent
	a (DDI)Z mouseClicked
	a (DDIII)Z hasClickedOutside
	a (IIIIDD)Z isHovering
	a (Lehe;FII)V renderBg
	a (Lehe;IIF)V render
	a (Lnet/minecraft/world/inventory/Slot;IILnet/minecraft/world/inventory/InventoryClickType;)V slotClicked
	b ()V init
euo net/minecraft/client/gui/screens/inventory/CreativeInventoryListener
	a minecraft
	a (Lnet/minecraft/world/inventory/Container;II)V dataChanged
	a (Lnet/minecraft/world/inventory/Container;ILnet/minecraft/world/item/ItemStack;)V slotChanged
eup net/minecraft/client/gui/screens/inventory/CreativeModeInventoryScreen
	A CREATIVE_TABS_LOCATION
	B GUI_CREATIVE_TAB_PREFIX
	C CUSTOM_SLOT_LOCK
	D NUM_ROWS
	E NUM_COLS
	F TAB_WIDTH
	G TAB_HEIGHT
	H SCROLLER_WIDTH
	I SCROLLER_HEIGHT
	J CONTAINER
	K TRASH_SLOT_TOOLTIP
	L TEXT_COLOR
	M selectedTab
	N scrollOffs
	O scrolling
	P searchBox
	Q originalSlots
	R destroyItemSlot
	S listener
	T ignoreTextInput
	U hasClickedOutside
	V visibleTags
	W displayOperatorCreativeTab
	B ()V containerTick
	D ()Z isInventoryOpen
	E ()V refreshSearchResults
	G ()Z canScroll
	a (CI)Z charTyped
	a (DD)Z insideScrollbar
	a (DDD)Z mouseScrolled
	a (DDI)Z mouseClicked
	a (DDIDD)Z mouseDragged
	a (DDIII)Z hasClickedOutside
	a (III)Z keyPressed
	a (Lced;)V selectTab
	a (Lced;DD)Z checkTabClicked
	a (Lehe;FII)V renderBg
	a (Lehe;IIF)V render
	a (Lehe;Lced;)V renderTabButton
	a (Lehe;Lced;II)Z checkTabHovering
	a (Lehe;Lnet/minecraft/world/item/ItemStack;II)V renderTooltip
	a (Lemh;II)V resize
	a (Lemh;IZZ)V handleHotbarLoadOrSave
	a (Ljava/lang/String;)V updateVisibleTags
	a (Ljava/util/Collection;)V refreshCurrentTabContents
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z hasPermissions
	a (Lnet/minecraft/world/flag/FeatureFlagSet;ZLhf$b;)V tryRefreshInvalidatedTabs
	a (Lnet/minecraft/world/inventory/Slot;)Z isCreativeSlot
	a (Lnet/minecraft/world/inventory/Slot;IILnet/minecraft/world/inventory/InventoryClickType;)V slotClicked
	az_ ()V removed
	b ()V init
	b (DDI)Z mouseReleased
	b (III)Z keyReleased
	b (Lced;)I getTabX
	b (Lehe;II)V renderLabels
	c (Lced;)I getTabY
eup$a net/minecraft/client/gui/screens/inventory/CreativeModeInventoryScreen$CustomCreativeSlot
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z mayPickup
eup$b net/minecraft/client/gui/screens/inventory/CreativeModeInventoryScreen$ItemPickerMenu
	k items
	l inventoryMenu
	a (F)I getRowIndexForScroll
	a (FD)F subtractInputFromScroll
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	a (Lnet/minecraft/world/entity/player/EntityHuman;I)Lnet/minecraft/world/item/ItemStack; quickMoveStack
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z canTakeItemForPickAll
	b (F)V scrollTo
	b (Lnet/minecraft/world/inventory/Slot;)Z canDragTo
	b (Lnet/minecraft/world/item/ItemStack;)V setCarried
	e (I)F getScrollForRowIndex
	g ()Lnet/minecraft/world/item/ItemStack; getCarried
	l ()I calculateRowCount
	m ()Z canScroll
eup$c net/minecraft/client/gui/screens/inventory/CreativeModeInventoryScreen$SlotWrapper
	a target
	a ()I getMaxStackSize
	a (I)Lnet/minecraft/world/item/ItemStack; remove
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z mayPickup
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/item/ItemStack;)V onTake
	a (Lnet/minecraft/world/item/ItemStack;)Z mayPlace
	a_ (Lnet/minecraft/world/item/ItemStack;)I getMaxStackSize
	b ()Z isActive
	c ()Lcom/mojang/datafixers/util/Pair; getNoItemIcon
	d ()V setChanged
	d (Lnet/minecraft/world/item/ItemStack;)V setByPlayer
	e ()Lnet/minecraft/world/item/ItemStack; getItem
	e (Lnet/minecraft/world/item/ItemStack;)V set
	f ()Z hasItem
euq net/minecraft/client/gui/screens/inventory/CyclingSlotBackground
	a ICON_CHANGE_TICK_RATE
	b ICON_SIZE
	c ICON_TRANSITION_TICK_DURATION
	d slotIndex
	e icons
	f tick
	g iconIndex
	a (F)F getIconTransitionTransparency
	a (Ljava/util/List;)V tick
	a (Lnet/minecraft/world/inventory/Container;Lehe;FII)V render
	a (Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/resources/MinecraftKey;FLehe;II)V renderIcon
eur net/minecraft/client/gui/screens/inventory/DispenserScreen
	A CONTAINER_LOCATION
	a (Lehe;FII)V renderBg
	a (Lehe;IIF)V render
	b ()V init
eus net/minecraft/client/gui/screens/inventory/EffectRenderingInventoryScreen
	F ()Z canSeeEffects
	a (Lehe;IIF)V render
	a (Lehe;IILjava/lang/Iterable;)V renderLabels
	a (Lehe;IILjava/lang/Iterable;Z)V renderBackgrounds
	a (Lnet/minecraft/world/effect/MobEffect;)Lnet/minecraft/network/chat/IChatBaseComponent; getEffectName
	b (Lehe;IILjava/lang/Iterable;Z)V renderIcons
	c (Lehe;II)V renderEffects
eut net/minecraft/client/gui/screens/inventory/EnchantmentNames
	a ALT_FONT
	b ROOT_STYLE
	c INSTANCE
	d random
	e words
	a ()Leut; getInstance
	a (J)V initSeed
	a (Lenp;I)Lnet/minecraft/network/chat/IChatFormatted; getRandomName
euu net/minecraft/client/gui/screens/inventory/EnchantmentScreen
	A time
	B flip
	C oFlip
	D flipT
	E flipA
	F open
	G oOpen
	H ENCHANTING_TABLE_LOCATION
	I ENCHANTING_BOOK_LOCATION
	J random
	K bookModel
	L last
	B ()V containerTick
	D ()V tickBook
	a (DDI)Z mouseClicked
	a (Lehe;FII)V renderBg
	a (Lehe;IIF)V render
	b ()V init
euv net/minecraft/client/gui/screens/inventory/FurnaceScreen
	B TEXTURE
euw net/minecraft/client/gui/screens/inventory/GrindstoneScreen
	A GRINDSTONE_LOCATION
	a (Lehe;FII)V renderBg
	a (Lehe;IIF)V render
eux net/minecraft/client/gui/screens/inventory/HangingSignEditScreen
	o MAGIC_BACKGROUND_SCALE
	p TEXT_SCALE
	q TEXTURE_WIDTH
	r TEXTURE_HEIGHT
	s texture
	a (Lehe;Lfig$a;Lnet/minecraft/world/level/block/state/IBlockData;)V renderSignBackground
	a (Lehe;Lnet/minecraft/world/level/block/state/IBlockData;)V offsetSign
	m ()Lorg/joml/Vector3f; getSignTextScale
euy net/minecraft/client/gui/screens/inventory/HopperScreen
	A HOPPER_LOCATION
	a (Lehe;FII)V renderBg
	a (Lehe;IIF)V render
euz net/minecraft/client/gui/screens/inventory/HorseInventoryScreen
	A HORSE_INVENTORY_LOCATION
	B horse
	C xMouse
	D yMouse
	a (Lehe;FII)V renderBg
	a (Lehe;IIF)V render
eva net/minecraft/client/gui/screens/inventory/InventoryScreen
	A RECIPE_BUTTON_LOCATION
	B xMouse
	C yMouse
	D recipeBookComponent
	E recipeBookComponentInitialized
	F widthTooNarrow
	G buttonClicked
	B ()V containerTick
	D ()V recipesUpdated
	E ()Lewp; getRecipeBookComponent
	a (DDI)Z mouseClicked
	a (DDIII)Z hasClickedOutside
	a (IIIIDD)Z isHovering
	a (Lehe;FII)V renderBg
	a (Lehe;IIF)V render
	a (Lehe;IIIFFLnet/minecraft/world/entity/EntityLiving;)V renderEntityInInventoryFollowsMouse
	a (Lehe;IIILorg/joml/Quaternionf;Lorg/joml/Quaternionf;Lnet/minecraft/world/entity/EntityLiving;)V renderEntityInInventory
	a (Lnet/minecraft/world/inventory/Slot;IILnet/minecraft/world/inventory/InventoryClickType;)V slotClicked
	b ()V init
	b (DDI)Z mouseReleased
	b (Lehe;II)V renderLabels
evb net/minecraft/client/gui/screens/inventory/ItemCombinerScreen
	A menuResource
	D ()V subInit
	a (Lehe;FII)V renderBg
	a (Lehe;IIF)V render
	a (Lnet/minecraft/world/inventory/Container;II)V dataChanged
	a (Lnet/minecraft/world/inventory/Container;ILnet/minecraft/world/item/ItemStack;)V slotChanged
	az_ ()V removed
	b ()V init
	c (Lehe;II)V renderErrorIcon
	c (Lehe;IIF)V renderFg
evc net/minecraft/client/gui/screens/inventory/JigsawBlockEditScreen
	A generateButton
	B joint
	a MAX_LEVELS
	b JOINT_LABEL
	c POOL_LABEL
	o NAME_LABEL
	p TARGET_LABEL
	q FINAL_STATE_LABEL
	r jigsawEntity
	s nameEdit
	t targetEdit
	u poolEdit
	v finalStateEdit
	w levels
	x keepJigsaws
	y jointButton
	z doneButton
	B ()V onCancel
	C ()V sendToServer
	D ()V sendGenerate
	E ()V updateValidity
	a (III)Z keyPressed
	a (Lehe;IIF)V render
	a (Lemh;II)V resize
	ay_ ()V onClose
	b ()V init
	f ()V tick
	m ()V onDone
evd net/minecraft/client/gui/screens/inventory/LecternScreen
	u menu
	v listener
	C ()Lnet/minecraft/world/inventory/Container; getMenu
	D ()V pageBack
	E ()V pageForward
	F ()V closeScreen
	G ()Lnet/minecraft/world/inventory/ContainerLectern; getMenu
	H ()V bookChanged
	I ()V pageChanged
	aB_ ()Z isPauseScreen
	ay_ ()V onClose
	az_ ()V removed
	b ()V init
	b (I)Z forcePage
	c (I)V sendButtonClick
	m ()V createMenuControls
eve net/minecraft/client/gui/screens/inventory/LegacySmithingScreen
	A SMITHING_LOCATION
	c (Lehe;II)V renderErrorIcon
evf net/minecraft/client/gui/screens/inventory/LoomScreen
	A BG_LOCATION
	B PATTERN_COLUMNS
	C PATTERN_ROWS
	D SCROLLER_WIDTH
	E SCROLLER_HEIGHT
	F PATTERN_IMAGE_SIZE
	G SCROLLER_FULL_HEIGHT
	H PATTERNS_X
	I PATTERNS_Y
	J flag
	K resultBannerPatterns
	L bannerStack
	M dyeStack
	N patternStack
	O displayPatterns
	P hasMaxPatterns
	Q scrollOffs
	R scrolling
	S startRow
	D ()I totalRowCount
	E ()V containerChanged
	a (DDD)Z mouseScrolled
	a (DDI)Z mouseClicked
	a (DDIDD)Z mouseDragged
	a (DDIII)Z hasClickedOutside
	a (Lehe;FII)V renderBg
	a (Lehe;IIF)V render
	a (Lnet/minecraft/core/Holder;II)V renderPattern
	b ()V init
evg net/minecraft/client/gui/screens/inventory/MenuAccess
	C ()Lnet/minecraft/world/inventory/Container; getMenu
evh net/minecraft/client/gui/screens/inventory/MerchantScreen
	A VILLAGER_LOCATION
	B TEXTURE_WIDTH
	C TEXTURE_HEIGHT
	D MERCHANT_MENU_PART_X
	E PROGRESS_BAR_X
	F PROGRESS_BAR_Y
	G SELL_ITEM_1_X
	H SELL_ITEM_2_X
	I BUY_ITEM_X
	J LABEL_Y
	K NUMBER_OF_OFFER_BUTTONS
	L TRADE_BUTTON_X
	M TRADE_BUTTON_HEIGHT
	N TRADE_BUTTON_WIDTH
	O SCROLLER_HEIGHT
	P SCROLLER_WIDTH
	Q SCROLL_BAR_HEIGHT
	R SCROLL_BAR_TOP_POS_Y
	S SCROLL_BAR_START_X
	T TRADES_LABEL
	U LEVEL_SEPARATOR
	V DEPRECATED_TOOLTIP
	W shopItem
	X tradeOfferButtons
	Y scrollOff
	Z isDragging
	D ()V postButtonClick
	a (DDD)Z mouseScrolled
	a (DDI)Z mouseClicked
	a (DDIDD)Z mouseDragged
	a (I)Z canScroll
	a (Lehe;FII)V renderBg
	a (Lehe;IIF)V render
	a (Lehe;IILnet/minecraft/world/item/trading/MerchantRecipe;)V renderProgressBar
	a (Lehe;IILnet/minecraft/world/item/trading/MerchantRecipeList;)V renderScroller
	a (Lehe;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;II)V renderAndDecorateCostA
	a (Lehe;Lnet/minecraft/world/item/trading/MerchantRecipe;II)V renderButtonArrows
	b ()V init
	b (Lehe;II)V renderLabels
evh$a net/minecraft/client/gui/screens/inventory/MerchantScreen$TradeOfferButton
	a index
	a ()I getIndex
	a (Lehe;II)V renderToolTip
evi net/minecraft/client/gui/screens/inventory/MinecartCommandBlockEditScreen
	q commandBlock
	B ()I getPreviousY
	a (Lnet/minecraft/world/level/CommandBlockListenerAbstract;)V populateAndSendPacket
	b ()V init
	m ()Lnet/minecraft/world/level/CommandBlockListenerAbstract; getCommandBlock
evj net/minecraft/client/gui/screens/inventory/PageButton
	a isForward
	b playTurnSound
	a (Lfxj;)V playDownSound
	b (Lehe;IIF)V renderWidget
evk net/minecraft/client/gui/screens/inventory/ShulkerBoxScreen
	A CONTAINER_TEXTURE
	a (Lehe;FII)V renderBg
	a (Lehe;IIF)V render
evl net/minecraft/client/gui/screens/inventory/SignEditScreen
	o MAGIC_SCALE_NUMBER
	p MAGIC_TEXT_SCALE
	q TEXT_SCALE
	r signModel
	a (Lehe;Lfig$a;Lnet/minecraft/world/level/block/state/IBlockData;)V renderSignBackground
	a (Lehe;Lnet/minecraft/world/level/block/state/IBlockData;)V offsetSign
	b ()V init
	m ()Lorg/joml/Vector3f; getSignTextScale
evm net/minecraft/client/gui/screens/inventory/SmithingScreen
	A ARMOR_STAND_Y_ROT
	B ARMOR_STAND_X_ROT
	C ARMOR_STAND_ANGLE
	D ARMOR_STAND_SCALE
	E ARMOR_STAND_OFFSET_Y
	F ARMOR_STAND_OFFSET_X
	G SMITHING_LOCATION
	H EMPTY_SLOT_SMITHING_TEMPLATE_ARMOR_TRIM
	I EMPTY_SLOT_SMITHING_TEMPLATE_NETHERITE_UPGRADE
	J MISSING_TEMPLATE_TOOLTIP
	K ERROR_TOOLTIP
	L EMPTY_SLOT_SMITHING_TEMPLATES
	M TITLE_LABEL_X
	N TITLE_LABEL_Y
	O ERROR_ICON_WIDTH
	P ERROR_ICON_HEIGHT
	Q ERROR_ICON_X
	R ERROR_ICON_Y
	S TOOLTIP_WIDTH
	T templateIcon
	U baseIcon
	V additionalIcon
	W armorStandPreview
	B ()V containerTick
	D ()V subInit
	E ()Ljava/util/Optional; getTemplateItem
	F ()Z hasRecipeError
	a (Lehe;FII)V renderBg
	a (Lehe;IIF)V render
	a (Lnet/minecraft/world/inventory/Container;ILnet/minecraft/world/item/ItemStack;)V slotChanged
	b (Lnet/minecraft/world/item/ItemStack;)V updateArmorStandPreview
	c (Lehe;II)V renderErrorIcon
	d (Lehe;II)V renderOnboardingTooltips
evn net/minecraft/client/gui/screens/inventory/SmokerScreen
	B TEXTURE
evo net/minecraft/client/gui/screens/inventory/StonecutterScreen
	A BG_LOCATION
	B SCROLLER_WIDTH
	C SCROLLER_HEIGHT
	D RECIPES_COLUMNS
	E RECIPES_ROWS
	F RECIPES_IMAGE_SIZE_WIDTH
	G RECIPES_IMAGE_SIZE_HEIGHT
	H SCROLLER_FULL_HEIGHT
	I RECIPES_X
	J RECIPES_Y
	K scrollOffs
	L scrolling
	M startIndex
	N displayRecipes
	D ()I getOffscreenRows
	E ()Z isScrollBarActive
	F ()V containerChanged
	a (DDD)Z mouseScrolled
	a (DDI)Z mouseClicked
	a (DDIDD)Z mouseDragged
	a (Lehe;FII)V renderBg
	a (Lehe;II)V renderTooltip
	a (Lehe;IIF)V render
	b (Lehe;III)V renderRecipes
	c (Lehe;IIIII)V renderButtons
evp net/minecraft/client/gui/screens/inventory/StructureBlockEditScreen
	A initialEntityIgnoring
	B initialShowAir
	C initialShowBoundingBox
	D nameEdit
	E posXEdit
	F posYEdit
	G posZEdit
	H sizeXEdit
	I sizeYEdit
	J sizeZEdit
	K integrityEdit
	L seedEdit
	M dataEdit
	N saveButton
	O loadButton
	P rot0Button
	Q rot90Button
	R rot180Button
	S rot270Button
	T detectButton
	U includeEntitiesButton
	V mirrorButton
	W toggleAirButton
	X toggleBoundingBox
	Y decimalFormat
	a NAME_LABEL
	b POSITION_LABEL
	c SIZE_LABEL
	o INTEGRITY_LABEL
	p CUSTOM_DATA_LABEL
	q INCLUDE_ENTITIES_LABEL
	r DETECT_SIZE_LABEL
	s SHOW_AIR_LABEL
	t SHOW_BOUNDING_BOX_LABEL
	u ALL_MODES
	v DEFAULT_MODES
	w structure
	x initialMirror
	y initialRotation
	z initialMode
	B ()V onCancel
	C ()V updateDirectionButtons
	a (III)Z keyPressed
	a (Lehe;IIF)V render
	a (Lemh;II)V resize
	a (Ljava/lang/String;)J parseSeed
	a (Lnet/minecraft/world/level/block/entity/TileEntityStructure$UpdateType;)Z sendToServer
	a (Lnet/minecraft/world/level/block/state/properties/BlockPropertyStructureMode;)V updateMode
	aB_ ()Z isPauseScreen
	ay_ ()V onClose
	b ()V init
	b (Ljava/lang/String;)F parseIntegrity
	c (Ljava/lang/String;)I parseCoordinate
	f ()V tick
	m ()V onDone
evr net/minecraft/client/gui/screens/inventory/tooltip/BelowOrAboveWidgetTooltipPositioner
	a widget
	a (Letd;IIII)Lorg/joml/Vector2ic; positionTooltip
evs net/minecraft/client/gui/screens/inventory/tooltip/ClientBundleTooltip
	a TEXTURE_LOCATION
	b MARGIN_Y
	c BORDER_WIDTH
	d TEX_SIZE
	e SLOT_SIZE_X
	f SLOT_SIZE_Y
	g items
	h weight
	a ()I getHeight
	a (IIIILehe;)V drawBorder
	a (IIIZLenp;Lehe;Lfoc;)V renderSlot
	a (Lehe;IILevs$a;)V blit
	a (Lenp;)I getWidth
	a (Lenp;IILehe;Lfoc;)V renderImage
	b ()I gridSizeX
	c ()I gridSizeY
evs$a net/minecraft/client/gui/screens/inventory/tooltip/ClientBundleTooltip$Texture
	a SLOT
	b BLOCKED_SLOT
	c BORDER_VERTICAL
	d BORDER_HORIZONTAL_TOP
	e BORDER_HORIZONTAL_BOTTOM
	f BORDER_CORNER_TOP
	g BORDER_CORNER_BOTTOM
	h x
	i y
	j w
	k h
	l $VALUES
	a ()[Levs$a; $values
evt net/minecraft/client/gui/screens/inventory/tooltip/ClientTextTooltip
	a text
	a ()I getHeight
	a (Lenp;)I getWidth
	a (Lenp;IILorg/joml/Matrix4f;Lfig$a;)V renderText
evu net/minecraft/client/gui/screens/inventory/tooltip/ClientTooltipComponent
	a ()I getHeight
	a (Lenp;)I getWidth
	a (Lenp;IILehe;Lfoc;)V renderImage
	a (Lenp;IILorg/joml/Matrix4f;Lfig$a;)V renderText
	a (Lnet/minecraft/util/FormattedString;)Levu; create
	a (Lnet/minecraft/world/inventory/tooltip/TooltipComponent;)Levu; create
evv net/minecraft/client/gui/screens/inventory/tooltip/ClientTooltipPositioner
	a (Letd;IIII)Lorg/joml/Vector2ic; positionTooltip
evw net/minecraft/client/gui/screens/inventory/tooltip/DefaultTooltipPositioner
	a INSTANCE
	a (Letd;IIII)Lorg/joml/Vector2ic; positionTooltip
	a (Letd;Lorg/joml/Vector2i;II)V positionTooltip
evx net/minecraft/client/gui/screens/inventory/tooltip/MenuTooltipPositioner
	a MAX_OVERLAP_WITH_WIDGET
	b MAX_DISTANCE_TO_WIDGET
	c MARGIN
	d MOUSE_OFFSET_X
	e widget
	a (III)I getOffset
	a (Letd;IIII)Lorg/joml/Vector2ic; positionTooltip
evy net/minecraft/client/gui/screens/inventory/tooltip/TooltipRenderUtil
	a MOUSE_OFFSET
	b PADDING_LEFT
	c PADDING_RIGHT
	d PADDING_TOP
	e PADDING_BOTTOM
	f PADDING
	g BACKGROUND_COLOR
	h BORDER_COLOR_TOP
	i BORDER_COLOR_BOTTOM
	a (Levy$a;Lorg/joml/Matrix4f;Legz;IIIII)V renderTooltipBackground
	a (Levy$a;Lorg/joml/Matrix4f;Legz;IIIIII)V renderVerticalLineGradient
	a (Levy$a;Lorg/joml/Matrix4f;Legz;IIIIIII)V renderFrameGradient
	b (Levy$a;Lorg/joml/Matrix4f;Legz;IIIII)V renderVerticalLine
	b (Levy$a;Lorg/joml/Matrix4f;Legz;IIIIII)V renderRectangle
	c (Levy$a;Lorg/joml/Matrix4f;Legz;IIIII)V renderHorizontalLine
evy$a net/minecraft/client/gui/screens/inventory/tooltip/TooltipRenderUtil$BlitPainter
ewa net/minecraft/client/gui/screens/multiplayer/JoinMultiplayerScreen
	A lanServerDetector
	B initedOnce
	a BUTTON_ROW_WIDTH
	b TOP_ROW_BUTTON_WIDTH
	c LOWER_ROW_BUTTON_WIDTH
	o FOOTER_HEIGHT
	p serverSelectionList
	q LOGGER
	r pinger
	s lastScreen
	t servers
	u editButton
	v selectButton
	w deleteButton
	x toolTip
	y editingServer
	z lanServerList
	B ()V onSelectedChange
	C ()Lfds; getPinger
	D ()Lfdr; getServers
	E ()V refreshServerList
	a (III)Z keyPressed
	a (Lehe;IIF)V render
	a (Lewd$a;)V setSelected
	a (Lfdq;)V join
	az_ ()V removed
	b ()V init
	c (Ljava/util/List;)V setToolTip
	c (Z)V deleteCallback
	e (Z)V editServerCallback
	f ()V tick
	f (Z)V addServerCallback
	g (Z)V directJoinCallback
	m ()V joinSelectedServer
ewb net/minecraft/client/gui/screens/multiplayer/Realms32bitWarningScreen
	b TITLE
	c CONTENT
	o CHECK
	p NARRATION
	q previous
	a (I)V initButtons
ewc net/minecraft/client/gui/screens/multiplayer/SafetyScreen
	b TITLE
	c CONTENT
	o CHECK
	p NARRATION
	q previous
	a (I)V initButtons
ewd net/minecraft/client/gui/screens/multiplayer/ServerSelectionList
	A onlineServers
	B lanHeader
	C networkServers
	a LOGGER
	p THREAD_POOL
	q ICON_MISSING
	r ICON_OVERLAY_LOCATION
	s SCANNING_LABEL
	t CANT_RESOLVE_TEXT
	u CANT_CONNECT_TEXT
	v INCOMPATIBLE_STATUS
	w NO_CONNECTION_STATUS
	x PINGING_STATUS
	y ONLINE_STATUS
	z screen
	a (III)Z keyPressed
	a (Lenw$a;)V setSelected
	a (Lewd$a;)V setSelected
	a (Lfdr;)V updateOnlineServers
	a (Ljava/util/List;)V updateNetworkServers
	b ()I getRowWidth
	c ()I getScrollbarPosition
	d ()V refreshEntries
ewd$a net/minecraft/client/gui/screens/multiplayer/ServerSelectionList$Entry
ewd$b net/minecraft/client/gui/screens/multiplayer/ServerSelectionList$LANHeader
	a minecraft
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarration
	a (Lehe;IIIIIIIZF)V render
ewd$c net/minecraft/client/gui/screens/multiplayer/ServerSelectionList$NetworkServerEntry
	a minecraft
	b serverData
	c ICON_WIDTH
	d LAN_SERVER_HEADER
	e HIDDEN_ADDRESS_TEXT
	f screen
	h lastClickTime
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarration
	a (DDI)Z mouseClicked
	a (Lehe;IIIIIIIZF)V render
	b ()Lfwx; getServerData
	d ()Lnet/minecraft/network/chat/IChatBaseComponent; getServerNarration
ewd$d net/minecraft/client/gui/screens/multiplayer/ServerSelectionList$OnlineServerEntry
	b ICON_WIDTH
	c ICON_HEIGHT
	d ICON_OVERLAY_X_MOVE_RIGHT
	e ICON_OVERLAY_X_MOVE_LEFT
	f ICON_OVERLAY_X_MOVE_DOWN
	h ICON_OVERLAY_X_MOVE_UP
	i ICON_OVERLAY_Y_UNSELECTED
	j ICON_OVERLAY_Y_SELECTED
	k screen
	l minecraft
	m serverData
	n iconLocation
	o lastIconBytes
	p icon
	q lastClickTime
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarration
	a (DDI)Z mouseClicked
	a (II)V swap
	a (III)Z keyPressed
	a (Lehe;IIIIIIIZF)V render
	a (Lehe;IILnet/minecraft/resources/MinecraftKey;)V drawIcon
	a ([B)Z uploadServerIcon
	b ()V updateServerList
	d ()Lfdq; getServerData
	e ()Z pingCompleted
	f ()Z isCompatible
	g ()Z canJoin
ewe net/minecraft/client/gui/screens/multiplayer/WarningScreen
	a stopShowing
	b content
	c check
	o narration
	p message
	a (I)V initButtons
	a (Lehe;IIF)V render
	aw_ ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarrationMessage
	b ()V init
	c (Lehe;)V renderTitle
	m ()I getLineHeight
ewh net/minecraft/client/gui/screens/packs/PackSelectionModel
	a repository
	b selected
	c unselected
	d iconGetter
	e onListChanged
	f output
	a ()Ljava/util/stream/Stream; getUnselected
	b ()Ljava/util/stream/Stream; getSelected
	c ()V commit
	d ()V findNewPacks
	e ()V updateRepoSelectedList
ewh$a net/minecraft/client/gui/screens/packs/PackSelectionModel$Entry
	a ()Lnet/minecraft/resources/MinecraftKey; getIconTexture
	b ()Lnet/minecraft/server/packs/repository/EnumResourcePackVersion; getCompatibility
	c ()Ljava/lang/String; getId
	d ()Lnet/minecraft/network/chat/IChatBaseComponent; getTitle
	e ()Lnet/minecraft/network/chat/IChatBaseComponent; getDescription
	f ()Lnet/minecraft/server/packs/repository/PackSource; getPackSource
	g ()Lnet/minecraft/network/chat/IChatBaseComponent; getExtendedDescription
	h ()Z isFixedPosition
	i ()Z isRequired
	j ()V select
	k ()V unselect
	l ()V moveUp
	m ()V moveDown
	n ()Z isSelected
	o ()Z canSelect
	p ()Z canUnselect
	q ()Z canMoveUp
	r ()Z canMoveDown
ewh$b net/minecraft/client/gui/screens/packs/PackSelectionModel$EntryBase
	b pack
	a ()Lnet/minecraft/resources/MinecraftKey; getIconTexture
	a (I)V move
	b ()Lnet/minecraft/server/packs/repository/EnumResourcePackVersion; getCompatibility
	c ()Ljava/lang/String; getId
	d ()Lnet/minecraft/network/chat/IChatBaseComponent; getTitle
	e ()Lnet/minecraft/network/chat/IChatBaseComponent; getDescription
	f ()Lnet/minecraft/server/packs/repository/PackSource; getPackSource
	h ()Z isFixedPosition
	i ()Z isRequired
	l ()V moveUp
	m ()V moveDown
	q ()Z canMoveUp
	r ()Z canMoveDown
	s ()Ljava/util/List; getSelfList
	t ()Ljava/util/List; getOtherList
	u ()V toggleSelection
	v ()V updateHighContrastOptionInstance
ewh$c net/minecraft/client/gui/screens/packs/PackSelectionModel$SelectedPackEntry
	j ()V select
	k ()V unselect
	n ()Z isSelected
	s ()Ljava/util/List; getSelfList
	t ()Ljava/util/List; getOtherList
ewh$d net/minecraft/client/gui/screens/packs/PackSelectionModel$UnselectedPackEntry
	j ()V select
	k ()V unselect
	n ()Z isSelected
	s ()Ljava/util/List; getSelfList
	t ()Ljava/util/List; getOtherList
ewi net/minecraft/client/gui/screens/packs/PackSelectionScreen
	a LOGGER
	b LIST_WIDTH
	c DRAG_AND_DROP
	o DIRECTORY_BUTTON_TOOLTIP
	p RELOAD_COOLDOWN
	q DEFAULT_ICON
	r model
	s watcher
	t ticksToReload
	u availablePackList
	v selectedPackList
	w packDir
	x doneButton
	y packIcons
	B ()V closeWatcher
	C ()V populateLists
	D ()V reload
	a (Lehe;IIF)V render
	a (Lemh;Ljava/util/List;Ljava/nio/file/Path;)V copyPacks
	a (Lewj;)V updateFocus
	a (Lewj;Ljava/util/stream/Stream;)V updateList
	a (Lftd;Lnet/minecraft/server/packs/repository/ResourcePackLoader;)Lnet/minecraft/resources/MinecraftKey; loadPackIcon
	a (Ljava/util/List;)V onFilesDrop
	a (Lnet/minecraft/server/packs/repository/ResourcePackLoader;)Lnet/minecraft/resources/MinecraftKey; getPackIcon
	ay_ ()V onClose
	b ()V init
	f ()V tick
	m ()V clearSelected
ewi$a net/minecraft/client/gui/screens/packs/PackSelectionScreen$Watcher
	a watcher
	b packPath
	a ()Z pollForChanges
	a (Ljava/nio/file/Path;)Lewi$a; create
	b (Ljava/nio/file/Path;)V watchDir
ewj net/minecraft/client/gui/screens/packs/TransferableSelectionList
	a ICON_OVERLAY_LOCATION
	p INCOMPATIBLE_TITLE
	q INCOMPATIBLE_CONFIRM_TITLE
	r title
	s screen
	a (III)Z keyPressed
	a (Lehe;II)V renderHeader
	b ()I getRowWidth
	c ()I getScrollbarPosition
ewj$a net/minecraft/client/gui/screens/packs/TransferableSelectionList$PackEntry
	a minecraft
	b ICON_OVERLAY_X_MOVE_RIGHT
	c ICON_OVERLAY_X_MOVE_LEFT
	d ICON_OVERLAY_X_MOVE_DOWN
	e ICON_OVERLAY_X_MOVE_UP
	f ICON_OVERLAY_Y_UNSELECTED
	h ICON_OVERLAY_Y_SELECTED
	i MAX_DESCRIPTION_WIDTH_PIXELS
	j MAX_NAME_WIDTH_PIXELS
	k TOO_LONG_NAME_SUFFIX
	l parent
	m pack
	n nameDisplayCache
	o descriptionDisplayCache
	p incompatibleNameDisplayCache
	q incompatibleDescriptionDisplayCache
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarration
	a (DDI)Z mouseClicked
	a (Lehe;IIIIIIIZF)V render
	a (Lemh;Lnet/minecraft/network/chat/IChatBaseComponent;)Lnet/minecraft/util/FormattedString; cacheName
	b ()Ljava/lang/String; getPackId
	b (Lemh;Lnet/minecraft/network/chat/IChatBaseComponent;)Leos; cacheDescription
	d ()V keyboardSelection
	e ()Z showHoverOverlay
	f ()V keyboardMoveUp
	g ()V keyboardMoveDown
	h ()Z handlePackSelection
ewl net/minecraft/client/gui/screens/recipebook/AbstractFurnaceRecipeBookComponent
	l fuels
	a ()V initFilterButtonTextures
	a (Lnet/minecraft/world/inventory/Slot;)V slotClicked
	a (Lnet/minecraft/world/item/crafting/IRecipe;Ljava/util/List;)V setupGhostRecipe
	b ()Ljava/util/Set; getFuelItems
ewm net/minecraft/client/gui/screens/recipebook/BlastingRecipeBookComponent
	l FILTER_NAME
	b ()Ljava/util/Set; getFuelItems
	d ()Lnet/minecraft/network/chat/IChatBaseComponent; getRecipeFilterName
ewn net/minecraft/client/gui/screens/recipebook/GhostRecipe
	a recipe
	b ingredients
	c time
	a ()V clear
	a (I)Lewn$a; get
	a (Lehe;Lemh;IIZF)V render
	a (Lnet/minecraft/world/item/crafting/IRecipe;)V setRecipe
	a (Lnet/minecraft/world/item/crafting/RecipeItemStack;II)V addIngredient
	b ()I size
	c ()Lnet/minecraft/world/item/crafting/IRecipe; getRecipe
ewn$a net/minecraft/client/gui/screens/recipebook/GhostRecipe$GhostIngredient
	b ingredient
	c x
	d y
	a ()I getX
	b ()I getY
	c ()Lnet/minecraft/world/item/ItemStack; getItem
ewo net/minecraft/client/gui/screens/recipebook/OverlayRecipeComponent
	a BUTTON_SIZE
	b RECIPE_BOOK_LOCATION
	c MAX_ROW
	d MAX_ROW_LARGE
	e ITEM_RENDER_SCALE
	f recipeButtons
	k isVisible
	l x
	m y
	n minecraft
	o collection
	p lastRecipeClicked
	q time
	r isFurnaceMenu
	a ()Lewt; getRecipeCollection
	a (DDI)Z mouseClicked
	a (Lehe;IIF)V render
	a (Lemh;Lewt;IIIIF)V init
	aD_ ()Z isFocused
	a_ (DD)Z isMouseOver
	b ()Lnet/minecraft/world/item/crafting/IRecipe; getLastRecipeClicked
	b (Z)V setVisible
	b_ (Z)V setFocused
	d ()Z isVisible
ewo$a net/minecraft/client/gui/screens/recipebook/OverlayRecipeComponent$OverlayRecipeButton
	a ingredientPos
	c recipe
	d isCraftable
	a (Lere;)V updateWidgetNarration
	a (Ljava/util/Iterator;IIII)V addItemToSlot
	a (Lnet/minecraft/world/item/crafting/IRecipe;)V calculateIngredientsPositions
	b (Lehe;IIF)V renderWidget
ewo$a$a net/minecraft/client/gui/screens/recipebook/OverlayRecipeComponent$OverlayRecipeButton$Pos
	a ingredients
	b x
	c y
ewo$b net/minecraft/client/gui/screens/recipebook/OverlayRecipeComponent$OverlaySmeltingRecipeButton
	a (Lnet/minecraft/world/item/crafting/IRecipe;)V calculateIngredientsPositions
ewp net/minecraft/client/gui/screens/recipebook/RecipeBookComponent
	A ignoreTextInput
	B visible
	C widthTooNarrow
	a RECIPE_BOOK_LOCATION
	b IMAGE_WIDTH
	c IMAGE_HEIGHT
	d ghostRecipe
	e filterButton
	f menu
	k minecraft
	l SEARCH_HINT
	m OFFSET_X_POSITION
	n ONLY_CRAFTABLES_TOOLTIP
	o ALL_RECIPES_TOOLTIP
	p xOffset
	q width
	r height
	s tabButtons
	t selectedTab
	u searchBox
	v lastSearch
	w book
	x recipeBookPage
	y stackedContents
	z timesInventoryChanged
	a ()V initFilterButtonTextures
	a (CI)Z charTyped
	a (DDI)Z mouseClicked
	a (DDIIIII)Z hasClickedOutside
	a (II)I updateScreenPosition
	a (III)Z keyPressed
	a (IILemh;ZLnet/minecraft/world/inventory/ContainerRecipeBook;)V init
	a (Lehe;IIF)V render
	a (Lehe;IIZF)V renderGhostRecipe
	a (Ljava/lang/String;)V pirateSpeechForThePeople
	a (Ljava/util/Iterator;IIII)V addItemToSlot
	a (Ljava/util/List;)V recipesShown
	a (Lnet/minecraft/world/inventory/Slot;)V slotClicked
	a (Lnet/minecraft/world/item/crafting/IRecipe;Ljava/util/List;)V setupGhostRecipe
	aD_ ()Z isFocused
	a_ (DD)Z isMouseOver
	b ()V updateFilterButtonTooltip
	b (III)Z keyReleased
	b (Lere;)V updateNarration
	b (Z)V setVisible
	b_ (Z)V setFocused
	c (Lehe;IIII)V renderTooltip
	c (Z)V updateCollections
	d ()Lnet/minecraft/network/chat/IChatBaseComponent; getRecipeFilterName
	d (Lehe;IIII)V renderGhostRecipeTooltip
	e ()V initVisuals
	f ()V toggleVisibility
	g ()Z isVisible
	h ()V tick
	i ()V recipesUpdated
	j ()V sendUpdateSettings
	k ()Z isVisibleAccordingToBookData
	m ()V updateTabs
	n ()V updateStackedContents
	p ()Z toggleFiltering
	q ()V checkSearchStringUpdate
	s ()Lerc$a; narrationPriority
	t ()Z isOffsetNextToMainGUI
ewq net/minecraft/client/gui/screens/recipebook/RecipeBookPage
	a ITEMS_PER_PAGE
	b buttons
	c hoveredButton
	d overlay
	e minecraft
	f showListeners
	g recipeCollections
	h forwardButton
	i backButton
	j totalPages
	k currentPage
	l recipeBook
	m lastClickedRecipe
	n lastClickedRecipeCollection
	a ()Lnet/minecraft/world/item/crafting/IRecipe; getLastClickedRecipe
	a (DDIIIII)Z mouseClicked
	a (Lehe;II)V renderTooltip
	a (Lehe;IIIIF)V render
	a (Lemh;II)V init
	a (Lewp;)V addListener
	a (Ljava/util/List;)V recipesShown
	a (Ljava/util/List;Z)V updateCollections
	a (Ljava/util/function/Consumer;)V listButtons
	b ()Lewt; getLastClickedRecipeCollection
	c ()V setInvisible
	d ()Lemh; getMinecraft
	e ()Lnet/minecraft/stats/RecipeBook; getRecipeBook
	f ()V updateButtonsForPage
	g ()V updateArrowButtons
ewr net/minecraft/client/gui/screens/recipebook/RecipeBookTabButton
	k category
	l ANIMATION_TIME
	m animationTime
	a (Lehe;Lfoc;)V renderIcon
	a (Lelv;)Z updateVisibility
	a (Lemh;)V startAnimation
	b ()Lemq; getCategory
	b (Lehe;IIF)V renderWidget
ews net/minecraft/client/gui/screens/recipebook/RecipeButton
	a TICKS_TO_SWAP
	b RECIPE_BOOK_LOCATION
	c ANIMATION_TIME
	d BACKGROUND_SIZE
	e MORE_RECIPES_TOOLTIP
	f menu
	k book
	l collection
	m time
	n animationTime
	o currentIndex
	a ()Lewt; getCollection
	a (Lere;)V updateWidgetNarration
	a (Letd;)Ljava/util/List; getTooltipText
	a (Lewt;Lewq;)V init
	b ()Z isOnlyOption
	b (Lehe;IIF)V renderWidget
	c (I)Z isValidClickButton
	e ()Lnet/minecraft/world/item/crafting/IRecipe; getRecipe
	f ()Ljava/util/List; getOrderedRecipes
	j ()I getWidth
ewt net/minecraft/client/gui/screens/recipebook/RecipeCollection
	a registryAccess
	b recipes
	c singleResultItem
	d craftable
	e fitsDimensions
	f known
	a ()Lnet/minecraft/core/IRegistryCustom; registryAccess
	a (Lnet/minecraft/core/IRegistryCustom;Ljava/util/List;)Z allRecipesHaveSameResult
	a (Lnet/minecraft/stats/RecipeBook;)V updateKnownRecipes
	a (Lnet/minecraft/world/entity/player/AutoRecipeStackManager;IILnet/minecraft/stats/RecipeBook;)V canCraft
	a (Lnet/minecraft/world/item/crafting/IRecipe;)Z isCraftable
	a (Z)Ljava/util/List; getRecipes
	b ()Z hasKnownRecipes
	b (Z)Ljava/util/List; getDisplayRecipes
	c ()Z hasCraftable
	d ()Z hasFitting
	e ()Ljava/util/List; getRecipes
	f ()Z hasSingleResultItem
ewu net/minecraft/client/gui/screens/recipebook/RecipeShownListener
	a (Ljava/util/List;)V recipesShown
ewv net/minecraft/client/gui/screens/recipebook/RecipeUpdateListener
	D ()V recipesUpdated
	E ()Lewp; getRecipeBookComponent
eww net/minecraft/client/gui/screens/recipebook/SmeltingRecipeBookComponent
	l FILTER_NAME
	b ()Ljava/util/Set; getFuelItems
	d ()Lnet/minecraft/network/chat/IChatBaseComponent; getRecipeFilterName
ewx net/minecraft/client/gui/screens/recipebook/SmokingRecipeBookComponent
	l FILTER_NAME
	b ()Ljava/util/Set; getFuelItems
	d ()Lnet/minecraft/network/chat/IChatBaseComponent; getRecipeFilterName
ewz net/minecraft/client/gui/screens/reporting/ChatReportScreen
	A REPORT_ERROR_TITLE
	B REPORT_SEND_GENERIC_ERROR
	C LOGGER
	D lastScreen
	E reportingContext
	F reasonDescriptionLabel
	G commentBox
	H sendButton
	I reportBuilder
	J cannotBuildReason
	a BUTTON_WIDTH
	b BUTTON_HEIGHT
	c BUTTON_MARGIN
	o BUTTON_MARGIN_HALF
	p LABEL_HEIGHT
	q SCREEN_WIDTH
	r SCREEN_HEIGHT
	s OBSERVED_WHAT_LABEL
	t SELECT_REASON
	u MORE_COMMENTS_LABEL
	v DESCRIBE_PLACEHOLDER
	w REPORT_SENT_MESSAGE
	x SELECT_CHAT_MESSAGE
	y REPORT_SENDING_TITLE
	z REPORT_SENT_TITLE
	B ()V sendReport
	C ()V onReportSendSuccess
	D ()V saveDraft
	E ()V clearDraft
	F ()I contentLeft
	G ()I contentRight
	H ()I contentTop
	I ()I contentBottom
	J ()I selectChatTop
	K ()I selectInfoTop
	L ()I commentBoxTop
	M ()I commentBoxBottom
	N ()I completeButtonTop
	a (Lehe;IIF)V render
	a (Ljava/lang/Throwable;)V onReportSendError
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V displayReportSendError
	ay_ ()V onClose
	az_ ()V removed
	b ()V init
	b (DDI)Z mouseReleased
	f ()V tick
	m ()V onReportChanged
ewz$a net/minecraft/client/gui/screens/reporting/ChatReportScreen$DiscardReportWarningScreen
	c TITLE
	o MESSAGE
	p RETURN
	q DRAFT
	r DISCARD
	a (I)V initButtons
	ax_ ()Z shouldCloseOnEsc
	ay_ ()V onClose
	c (Lehe;)V renderTitle
exa net/minecraft/client/gui/screens/reporting/ChatSelectionLogFiller
	a log
	b contextBuilder
	c canReport
	d previousLink
	e eventId
	f missedCount
	g lastMessage
	a (ILexa$a;)V fillNextPage
	a (Lexa$a;Lfdx$a;)Z acceptMessage
exa$a net/minecraft/client/gui/screens/reporting/ChatSelectionLogFiller$Output
	a (ILfdx$a;)V acceptMessage
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V acceptDivider
exb net/minecraft/client/gui/screens/reporting/ChatSelectionScreen
	a TITLE
	b CONTEXT_INFO
	c lastScreen
	o reportingContext
	p confirmSelectedButton
	q contextInfoLabel
	r chatSelectionList
	s report
	t onSelected
	u chatLogFiller
	B ()V onReachedScrollTop
	C ()V updateConfirmSelectedButton
	a (Lehe;IIF)V render
	a (Lfdx;)Z canReport
	aw_ ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarrationMessage
	ay_ ()V onClose
	b ()V init
	m ()V extendLog
exb$a net/minecraft/client/gui/screens/reporting/ChatSelectionScreen$ChatSelectionList
	p previousHeading
	a (D)V setScrollAmount
	a (III)Z keyPressed
	a (ILfdx$a;)V acceptMessage
	a (Lehe;IIFIIIII)V renderItem
	a (Lenw$a;)V setSelected
	a (Lerl;)Lenw$a; nextEntry
	a (Lexb$a$b;)V setSelected
	a (Lfdx$a;Z)V updateHeading
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V acceptDivider
	b ()I getRowWidth
	b (Lerl;)Lexb$a$b; nextEntry
	b (Lexb$a$b;)Z shouldHighlightEntry
	c ()I getScrollbarPosition
	d ()I getMaxVisibleEntries
	e ()I getFooterTop
exb$a$a net/minecraft/client/gui/screens/reporting/ChatSelectionScreen$ChatSelectionList$DividerEntry
	c COLOR
	d text
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarration
	a (Lehe;IIIIIIIZF)V render
exb$a$b net/minecraft/client/gui/screens/reporting/ChatSelectionScreen$ChatSelectionList$Entry
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarration
	b ()Z isSelected
	d ()Z canSelect
	e ()Z canReport
exb$a$c net/minecraft/client/gui/screens/reporting/ChatSelectionScreen$ChatSelectionList$Heading
	a sender
	b entry
	a ()Ljava/util/UUID; sender
	a (Lexb$a$c;)Z canCombine
	b ()Lexb$a$b; entry
exb$a$d net/minecraft/client/gui/screens/reporting/ChatSelectionScreen$ChatSelectionList$MessageEntry
	c CHECKMARK_TEXTURE
	d CHECKMARK_WIDTH
	e CHECKMARK_HEIGHT
	f INDENT_AMOUNT
	h TAG_MARGIN_LEFT
	i chatId
	j text
	k narration
	l hoverText
	m tagIcon
	n tagHoverText
	o canReport
	p playerMessage
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarration
	a (DDI)Z mouseClicked
	a (III)Z keyPressed
	a (Lehe;III)V renderSelectedCheckmark
	a (Lehe;IIIII)V renderTag
	a (Lehe;IIIIIIIZF)V render
	b ()Z isSelected
	d ()Z canSelect
	e ()Z canReport
	f ()I getMaximumTextWidth
	g ()I getTextIndent
	h ()Z toggleReport
exb$a$e net/minecraft/client/gui/screens/reporting/ChatSelectionScreen$ChatSelectionList$MessageHeadingEntry
	c FACE_SIZE
	d heading
	e skin
	f canReport
	a (Lehe;IIIIIIIZF)V render
	a (Lehe;IILnet/minecraft/resources/MinecraftKey;)V renderFace
exb$a$f net/minecraft/client/gui/screens/reporting/ChatSelectionScreen$ChatSelectionList$PaddingEntry
	a (Lehe;IIIIIIIZF)V render
exc net/minecraft/client/gui/screens/reporting/ReportReasonSelectionScreen
	a REASON_TITLE
	b REASON_DESCRIPTION
	c READ_INFO_LABEL
	o FOOTER_HEIGHT
	p BUTTON_WIDTH
	q BUTTON_HEIGHT
	r CONTENT_WIDTH
	s PADDING
	t lastScreen
	u reasonSelectionList
	v currentlySelectedReason
	w onSelectedReason
	B ()I contentLeft
	C ()I contentRight
	D ()I descriptionTop
	E ()I descriptionBottom
	a (Lehe;IIF)V render
	ay_ ()V onClose
	b ()V init
	m ()I buttonTop
exc$a net/minecraft/client/gui/screens/reporting/ReportReasonSelectionScreen$ReasonSelectionList
	a (Lenw$a;)V setSelected
	a (Lexc$a$a;)V setSelected
	a (Lfee;)Lexc$a$a; findEntry
	b ()I getRowWidth
	c ()I getScrollbarPosition
exc$a$a net/minecraft/client/gui/screens/reporting/ReportReasonSelectionScreen$ReasonSelectionList$Entry
	b reason
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarration
	a (DDI)Z mouseClicked
	a (Lehe;IIIIIIIZF)V render
	b ()Lfee; getReason
exe net/minecraft/client/gui/screens/social/PlayerEntry
	A BLOCKED_OFFLINE
	B REPORT_DISABLED_TOOLTIP
	C NOT_REPORTABLE_TOOLTIP
	D HIDE_TEXT_TOOLTIP
	E SHOW_TEXT_TOOLTIP
	F REPORT_PLAYER_TOOLTIP
	G SKIN_SIZE
	H PADDING
	I CHAT_TOGGLE_ICON_SIZE
	J CHAT_TOGGLE_ICON_X
	K CHAT_TOGGLE_ICON_Y
	a SKIN_SHADE
	b BG_FILL
	c BG_FILL_REMOVED
	d PLAYERNAME_COLOR
	e PLAYER_STATUS_COLOR
	f REPORT_BUTTON_LOCATION
	h TOOLTIP_DELAY
	i minecraft
	j children
	k id
	l playerName
	m skinGetter
	n isRemoved
	o hasRecentMessages
	p reportingEnabled
	q playerReportable
	r hasDraftReport
	s hideButton
	t showButton
	u reportButton
	v tooltipHoverTime
	w HIDDEN
	x BLOCKED
	y OFFLINE
	z HIDDEN_OFFLINE
	a (Lehe;IIIIIIIZF)V render
	a (Lnet/minecraft/network/chat/IChatMutableComponent;)Lnet/minecraft/network/chat/IChatMutableComponent; getEntryNarationMessage
	a (ZLnet/minecraft/network/chat/IChatBaseComponent;)V onHiddenOrShown
	b ()Ljava/util/List; narratables
	c (Z)V setRemoved
	d ()Ljava/lang/String; getPlayerName
	d (Z)V setHasRecentMessages
	e ()Ljava/util/UUID; getPlayerId
	e (Z)V updateHideAndShowButton
	f ()Z isRemoved
	g ()Z hasRecentMessages
	h ()Leph; createReportButtonTooltip
	i ()Ljava/util/List; children
	j ()Lnet/minecraft/network/chat/IChatBaseComponent; getStatusComponent
exf net/minecraft/client/gui/screens/social/PlayerSocialManager
	a minecraft
	b hiddenPlayers
	c service
	d discoveredNamesToUUID
	e onlineMode
	f pendingBlockListRefresh
	a ()V startOnlineMode
	a (Lfdo;)V addPlayer
	a (Ljava/lang/String;)Ljava/util/UUID; getDiscoveredUUID
	a (Ljava/util/UUID;)V hidePlayer
	b ()V stopOnlineMode
	b (Ljava/util/UUID;)V showPlayer
	c ()Ljava/util/Set; getHiddenPlayers
	c (Ljava/util/UUID;)Z shouldHideMessageFrom
	d (Ljava/util/UUID;)Z isHidden
	e (Ljava/util/UUID;)Z isBlocked
	f (Ljava/util/UUID;)V removePlayer
exg net/minecraft/client/gui/screens/social/SocialInteractionsPlayerList
	a socialInteractionsScreen
	p players
	q filter
	a (Lfdo;Lexh$a;)V addPlayer
	a (Lfdu;)Ljava/util/Collection; collectProfilesFromChatLog
	a (Ljava/lang/String;)V setFilter
	a (Ljava/util/Collection;D)V updateFiltersAndScroll
	a (Ljava/util/Collection;DZ)V updatePlayerList
	a (Ljava/util/Collection;Ljava/util/Map;)V addOnlinePlayers
	a (Ljava/util/Map;Z)V updatePlayersFromChatLog
	a (Ljava/util/UUID;)V removePlayer
	d ()Z isEmpty
	e ()V sortPlayerEntries
	m ()V enableScissor
	w ()V updateFilteredPlayers
exh net/minecraft/client/gui/screens/social/SocialInteractionsScreen
	A BG_WIDTH
	B SEARCH_HEIGHT
	C MARGIN_Y
	D IMAGE_WIDTH
	E BUTTON_HEIGHT
	F ITEM_HEIGHT
	G socialInteractionsPlayerList
	H searchBox
	I lastSearch
	J page
	K allButton
	L hiddenButton
	M blockedButton
	N blockingHintButton
	O serverLabel
	P playerCount
	Q initialized
	a SOCIAL_INTERACTIONS_LOCATION
	b SEARCH_START
	c LIST_START
	o TAB_ALL
	p TAB_HIDDEN
	q TAB_BLOCKED
	r TAB_ALL_SELECTED
	s TAB_HIDDEN_SELECTED
	t TAB_BLOCKED_SELECTED
	u SEARCH_HINT
	v EMPTY_SEARCH
	w EMPTY_HIDDEN
	x EMPTY_BLOCKED
	y BLOCKING_HINT
	z BG_BORDER_SIZE
	B ()I listEnd
	C ()I marginX
	a (DDI)Z mouseClicked
	a (III)Z keyPressed
	a (Lehe;)V renderBackground
	a (Lehe;IIF)V render
	a (Lemh;)V updateServerLabel
	a (Lexh$a;)V showPage
	a (Lfdo;)V onAddPlayer
	a (Ljava/lang/String;)V checkSearchStringUpdate
	a (Ljava/util/UUID;)V onRemovePlayer
	aB_ ()Z isPauseScreen
	aw_ ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarrationMessage
	b ()V init
	f ()V tick
	m ()I windowHeight
exh$a net/minecraft/client/gui/screens/social/SocialInteractionsScreen$Page
	a ALL
	b HIDDEN
	c BLOCKED
	d $VALUES
	a ()[Lexh$a; $values
exj net/minecraft/client/gui/screens/telemetry/TelemetryEventWidget
	a HEADER_HORIZONTAL_PADDING
	b TELEMETRY_REQUIRED_TRANSLATION_KEY
	c TELEMETRY_OPTIONAL_TRANSLATION_KEY
	d PROPERTY_TITLE
	e font
	f content
	k onScrolledListener
	a (D)V setScrollAmount
	a (Lere;)V updateWidgetNarration
	a (Lexj$b;Lfxs;)V addEventType
	a (Lfxs;Lexj$b;)V addEventTypeProperties
	a (Ljava/util/function/DoubleConsumer;)V setOnScrolledListener
	b (Z)V onOptInChanged
	c (Lehe;IIF)V renderContents
	c (Z)Lexj$a; buildContent
	e ()I getInnerHeight
	f ()Z scrollbarVisible
	g ()D scrollRate
	t ()I containerWidth
exj$a net/minecraft/client/gui/screens/telemetry/TelemetryEventWidget$Content
	a container
	b narration
	a ()Lequ; container
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; narration
exj$b net/minecraft/client/gui/screens/telemetry/TelemetryEventWidget$ContentBuilder
	a width
	b grid
	c helper
	d alignHeader
	e narration
	a ()Lexj$a; build
	a (I)V addSpacer
	a (Lenp;Lnet/minecraft/network/chat/IChatBaseComponent;)V addLine
	a (Lenp;Lnet/minecraft/network/chat/IChatBaseComponent;I)V addLine
	b (Lenp;Lnet/minecraft/network/chat/IChatBaseComponent;)V addHeader
exk net/minecraft/client/gui/screens/telemetry/TelemetryInfoScreen
	a PADDING
	b TITLE
	c DESCRIPTION
	o BUTTON_GIVE_FEEDBACK
	p BUTTON_SHOW_DATA
	q lastScreen
	r options
	s telemetryEventWidget
	t savedScroll
	a (Lehe;IIF)V render
	a (Lenz;Lenz;)Lequ; twoButtonContainer
	a (Leoc;)V openLastScreen
	aw_ ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarrationMessage
	ay_ ()V onClose
	b ()V init
	b (Leoc;)V openFeedbackLink
	c (Leoc;)V openDataFolder
	m ()Lenz; createTelemetryButton
exm net/minecraft/client/gui/screens/worldselection/ConfirmExperimentalFeaturesScreen
	a TITLE
	b MESSAGE
	c DETAILS_BUTTON
	o COLUMN_SPACING
	p DETAILS_BUTTON_WIDTH
	q callback
	r enabledPacks
	s layout
	a (Lehe;IIF)V render
	aI_ ()V repositionElements
	aw_ ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarrationMessage
	ay_ ()V onClose
	b ()V init
exm$a net/minecraft/client/gui/screens/worldselection/ConfirmExperimentalFeaturesScreen$DetailsScreen
	b packList
	a (Lehe;IIF)V render
	ay_ ()V onClose
	b ()V init
exm$a$a net/minecraft/client/gui/screens/worldselection/ConfirmExperimentalFeaturesScreen$DetailsScreen$PackList
	b ()I getRowWidth
exm$a$b net/minecraft/client/gui/screens/worldselection/ConfirmExperimentalFeaturesScreen$DetailsScreen$PackListEntry
	b packId
	c message
	d splitMessage
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarration
	a (Lehe;IIIIIIIZF)V render
exn net/minecraft/client/gui/screens/worldselection/CreateWorldScreen
	A uiState
	B tabManager
	C recreated
	D lastScreen
	E tempDataPackDir
	F tempDataPackRepository
	G bottomButtons
	H tabNavigationBar
	a HEADER_SEPERATOR
	b FOOTER_SEPERATOR
	c GROUP_BOTTOM
	o TAB_COLUMN_WIDTH
	p FOOTER_HEIGHT
	q TEXT_INDENT
	r LOGGER
	s TEMP_WORLD_PREFIX
	t GAME_MODEL_LABEL
	u NAME_LABEL
	v EXPERIMENTS_LABEL
	w ALLOW_CHEATS_INFO
	x PREPARING_WORLD_DATA
	y HORIZONTAL_BUTTON_SPACING
	z VERTICAL_BUTTON_SPACING
	B ()V popScreen
	C ()V onCreate
	D ()Ljava/nio/file/Path; getTempDataPackDir
	E ()V removeTempDataPackDir
	F ()Ljava/util/Optional; createNewWorldDirectory
	a (III)Z keyPressed
	a (Ldyi$a;Lnet/minecraft/core/LayeredRegistryAccess;Lcom/mojang/serialization/Lifecycle;)V createNewWorld
	a (Lehe;IIF)V render
	a (Lemh;Letd;)V openFresh
	a (Lemh;Letd;Lnet/minecraft/world/level/WorldSettings;Lexv;Ljava/nio/file/Path;)Lexn; createFromExisting
	a (Lemh;Lnet/minecraft/network/chat/IChatBaseComponent;)V queueLoadScreen
	a (Ljava/nio/file/Path;Lemh;)Ljava/nio/file/Path; createTempDataPackDirFromExistingWorld
	a (Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)V copyBetweenDirs
	a (Lnet/minecraft/server/packs/repository/ResourcePackRepository;Lnet/minecraft/world/level/WorldDataConfiguration;)Ladw$c; createDefaultLoadConfig
	a (Lnet/minecraft/server/packs/repository/ResourcePackRepository;Lnet/minecraft/world/level/WorldDataConfiguration;Ljava/util/function/Consumer;)V applyNewPackConfig
	a (Lnet/minecraft/server/packs/repository/ResourcePackRepository;ZLjava/util/function/Consumer;)V tryApplyNewDataPacks
	a (Lnet/minecraft/world/level/WorldDataConfiguration;)V openExperimentsScreen
	aI_ ()V repositionElements
	ay_ ()V onClose
	b ()V init
	b (Lehe;)V renderDirtBackground
	b (Lnet/minecraft/world/level/WorldDataConfiguration;)V openDataPackSelectionScreen
	c (Lnet/minecraft/world/level/WorldDataConfiguration;)Lcom/mojang/datafixers/util/Pair; getDataPackSelectionSettings
	c (Z)Lnet/minecraft/world/level/WorldSettings; createLevelSettings
	d (Lepl;)Lepl; addRenderableWidget
	e (Lepl;)Lepl; addWidget
	f ()V tick
	m ()Lexw; getUiState
exn$a net/minecraft/client/gui/screens/worldselection/CreateWorldScreen$DataPackReloadCookie
	a worldGenSettings
	b dataConfiguration
	a ()Lnet/minecraft/world/level/levelgen/GeneratorSettings; worldGenSettings
	b ()Lnet/minecraft/world/level/WorldDataConfiguration; dataConfiguration
exn$b net/minecraft/client/gui/screens/worldselection/CreateWorldScreen$GameTab
	c TITLE
	d ALLOW_CHEATS
	e nameEdit
	b ()V tick
exn$c net/minecraft/client/gui/screens/worldselection/CreateWorldScreen$MoreTab
	c TITLE
	d GAME_RULES_LABEL
	e DATA_PACKS_LABEL
	c ()V openGameRulesScreen
exn$d net/minecraft/client/gui/screens/worldselection/CreateWorldScreen$WorldTab
	c TITLE
	d AMPLIFIED_HELP_TEXT
	e GENERATE_STRUCTURES
	f GENERATE_STRUCTURES_INFO
	g BONUS_CHEST
	h SEED_LABEL
	i SEED_EMPTY_HINT
	j WORLD_TAB_WIDTH
	k seedEdit
	l customizeTypeButton
	a (Leoj;)Lnet/minecraft/network/chat/IChatMutableComponent; createTypeButtonNarration
	b ()V tick
	c ()V openPresetEditor
	d ()Leoj$c; createWorldTypeValueSupplier
exo net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen
	a exitCallback
	b rules
	c invalidEntries
	o doneButton
	p tooltip
	q gameRules
	a (Lehe;IIF)V render
	a (Lexo$f;)V markInvalid
	ay_ ()V onClose
	b ()V init
	b (Lexo$f;)V clearInvalid
	m ()V updateDoneButton
exo$a net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$BooleanRuleEntry
	d checkbox
	a (Lehe;IIIIIIIZF)V render
exo$b net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$CategoryRuleEntry
	b label
	a (Lehe;IIIIIIIZF)V render
	b ()Ljava/util/List; narratables
	i ()Ljava/util/List; children
exo$c net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$EntryFactory
exo$d net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$GameRuleEntry
	a label
	b children
	a (Lehe;II)V renderLabel
	b ()Ljava/util/List; narratables
	i ()Ljava/util/List; children
exo$e net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$IntegerRuleEntry
	d input
	a (Lehe;IIIIIIIZF)V render
exo$f net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$RuleEntry
	a tooltip
exo$g net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$RuleList
	a (Lehe;IIF)V render
exp net/minecraft/client/gui/screens/worldselection/EditWorldScreen
	a LOGGER
	b NAME_LABEL
	c renameButton
	o callback
	p nameEdit
	q levelAccess
	a (Lehe;IIF)V render
	a (Lemh;II)V resize
	a (Lnet/minecraft/world/level/storage/Convertable$ConversionSession;)Z makeBackupAndShowToast
	a (Lnet/minecraft/world/level/storage/Convertable;Ljava/lang/String;)V makeBackupAndShowToast
	ay_ ()V onClose
	b ()V init
	f ()V tick
	m ()V onRename
exq net/minecraft/client/gui/screens/worldselection/ExperimentsScreen
	a MAIN_CONTENT_WIDTH
	b layout
	c parent
	o packRepository
	p output
	q packs
	a (Lehe;IIF)V render
	a (Lnet/minecraft/server/packs/repository/ResourcePackLoader;)Lnet/minecraft/network/chat/IChatBaseComponent; getHumanReadableTitle
	aI_ ()V repositionElements
	ay_ ()V onClose
	b ()V init
	m ()V onDone
exr net/minecraft/client/gui/screens/worldselection/OptimizeWorldScreen
	a LOGGER
	b DIMENSION_COLORS
	c callback
	o upgrader
	a (Lehe;IIF)V render
	a (Lemh;Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;Lcom/mojang/datafixers/DataFixer;Lnet/minecraft/world/level/storage/Convertable$ConversionSession;Z)Lexr; create
	ay_ ()V onClose
	az_ ()V removed
	b ()V init
	f ()V tick
exs net/minecraft/client/gui/screens/worldselection/PresetEditor
	a EDITORS
	a (Lnet/minecraft/core/Holder;)Lexv$a; fixedBiomeConfigurator
	a (Lnet/minecraft/world/level/levelgen/flat/GeneratorSettingsFlat;)Lexv$a; flatWorldConfigurator
ext net/minecraft/client/gui/screens/worldselection/SelectWorldScreen
	a TEST_OPTIONS
	b lastScreen
	c searchBox
	o LOGGER
	p deleteButton
	q selectButton
	r renameButton
	s copyButton
	t list
	a (CI)Z charTyped
	a (DDD)Z mouseScrolled
	a (III)Z keyPressed
	a (Lehe;IIF)V render
	a (ZZ)V updateButtonStatus
	ay_ ()V onClose
	az_ ()V removed
	b ()V init
	f ()V tick
exu net/minecraft/client/gui/screens/worldselection/SwitchGrid
	a DEFAULT_SWITCH_BUTTON_WIDTH
	b switches
	a ()V refreshStates
	a (I)Lexu$a; builder
exu$a net/minecraft/client/gui/screens/worldselection/SwitchGrid$Builder
	a width
	b switchBuilders
	c paddingLeft
	d rowSpacing
	e rowCount
	f infoUnderneath
	a ()V increaseRow
	a (I)Lexu$a; withPaddingLeft
	a (IZ)Lexu$a; withInfoUnderneath
	a (Ljava/util/function/Consumer;)Lexu; build
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Ljava/util/function/BooleanSupplier;Ljava/util/function/Consumer;)Lexu$d; addSwitch
	b (I)Lexu$a; withRowSpacing
exu$b net/minecraft/client/gui/screens/worldselection/SwitchGrid$InfoUnderneathSettings
	a maxInfoRows
	b alwaysMaxHeight
	a ()I maxInfoRows
	b ()Z alwaysMaxHeight
exu$c net/minecraft/client/gui/screens/worldselection/SwitchGrid$LabeledSwitch
	a button
	b stateSupplier
	c isActiveCondition
	a ()V refreshState
	b ()Leoj; button
	c ()Ljava/util/function/BooleanSupplier; stateSupplier
	d ()Ljava/util/function/BooleanSupplier; isActiveCondition
exu$d net/minecraft/client/gui/screens/worldselection/SwitchGrid$SwitchBuilder
	a label
	b stateSupplier
	c onClicked
	d info
	e isActiveCondition
	f buttonWidth
	a (Lexu$a;Lequ;I)Lexu$c; build
	a (Ljava/util/function/BooleanSupplier;)Lexu$d; withIsActiveCondition
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)Lexu$d; withInfo
exv net/minecraft/client/gui/screens/worldselection/WorldCreationContext
	a options
	b datapackDimensions
	c selectedDimensions
	d worldgenRegistries
	e dataPackResources
	f dataConfiguration
	a ()Lnet/minecraft/core/IRegistryCustom$Dimension; worldgenLoadContext
	a (Lexv$a;)Lexv; withDimensions
	a (Lexv$b;)Lexv; withOptions
	a (Lnet/minecraft/world/level/levelgen/WorldOptions;Lnet/minecraft/world/level/levelgen/WorldDimensions;)Lexv; withSettings
	b ()Lnet/minecraft/world/level/levelgen/WorldOptions; options
	c ()Lnet/minecraft/core/IRegistry; datapackDimensions
	d ()Lnet/minecraft/world/level/levelgen/WorldDimensions; selectedDimensions
	e ()Lnet/minecraft/core/LayeredRegistryAccess; worldgenRegistries
	f ()Lnet/minecraft/server/DataPackResources; dataPackResources
	g ()Lnet/minecraft/world/level/WorldDataConfiguration; dataConfiguration
exv$a net/minecraft/client/gui/screens/worldselection/WorldCreationContext$DimensionsUpdater
exv$b net/minecraft/client/gui/screens/worldselection/WorldCreationContext$OptionsModifier
exw net/minecraft/client/gui/screens/worldselection/WorldCreationUiState
	a DEFAULT_WORLD_NAME
	b listeners
	c name
	d gameMode
	e difficulty
	f allowCheats
	g seed
	h generateStructures
	i bonusChest
	j savesFolder
	k targetFolder
	l settings
	m worldType
	n normalPresetList
	o altPresetList
	p gameRules
	a ()V onChanged
	a (Lexv$a;)V updateDimensions
	a (Lexv;)V setSettings
	a (Lexv;Ljava/util/Optional;)Ljava/util/Optional; findPreset
	a (Lexw$a;)V setGameMode
	a (Lexw$b;)V setWorldType
	a (Ljava/lang/String;)V setName
	a (Ljava/util/function/Consumer;)V addListener
	a (Lnet/minecraft/core/IRegistry;Lnet/minecraft/tags/TagKey;)Ljava/util/Optional; getNonEmptyList
	a (Lnet/minecraft/world/EnumDifficulty;)V setDifficulty
	a (Lnet/minecraft/world/level/GameRules;)V setGameRules
	a (Lnet/minecraft/world/level/WorldDataConfiguration;)Z tryUpdateDataConfiguration
	a (Z)V setAllowCheats
	b ()Ljava/lang/String; getName
	b (Ljava/lang/String;)V setSeed
	b (Z)V setGenerateStructures
	c ()Ljava/lang/String; getTargetFolder
	c (Ljava/lang/String;)Ljava/lang/String; findResultFolder
	c (Z)V setBonusChest
	d ()Lexw$a; getGameMode
	e ()Lnet/minecraft/world/EnumDifficulty; getDifficulty
	f ()Z isHardcore
	g ()Z isAllowCheats
	h ()Ljava/lang/String; getSeed
	i ()Z isGenerateStructures
	j ()Z isBonusChest
	k ()Lexv; getSettings
	l ()Z isDebug
	m ()Lexw$b; getWorldType
	n ()Lexs; getPresetEditor
	o ()Ljava/util/List; getNormalPresetList
	p ()Ljava/util/List; getAltPresetList
	q ()Lnet/minecraft/world/level/GameRules; getGameRules
	r ()V updatePresetLists
exw$a net/minecraft/client/gui/screens/worldselection/WorldCreationUiState$SelectedGameMode
	a SURVIVAL
	b HARDCORE
	c CREATIVE
	d DEBUG
	e gameType
	f displayName
	g info
	h $VALUES
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getInfo
	b ()[Lexw$a; $values
exw$b net/minecraft/client/gui/screens/worldselection/WorldCreationUiState$WorldTypeEntry
	a preset
	b CUSTOM_WORLD_DESCRIPTION
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; describePreset
	b ()Z isAmplified
	c ()Lnet/minecraft/core/Holder; preset
exx net/minecraft/client/gui/screens/worldselection/WorldOpenFlows
	a LOGGER
	b minecraft
	c levelSource
	a ()Ljava/util/concurrent/CompletableFuture; promptBundledPackLoadFailure
	a (Ladw$d;Ladw$f;Ladw$e;)Ljava/lang/Object; loadWorldDataBlocking
	a (Lemh;Lexn;Lcom/mojang/serialization/Lifecycle;Ljava/lang/Runnable;Z)V confirmWorldCreation
	a (Letd;Ljava/lang/String;)V loadLevel
	a (Letd;Ljava/lang/String;ZLjava/lang/Runnable;)V askForBackup
	a (Letd;Ljava/lang/String;ZZ)V doLoadLevel
	a (Ljava/lang/String;)Lnet/minecraft/world/level/storage/Convertable$ConversionSession; createWorldAccess
	a (Ljava/lang/String;Lnet/minecraft/world/level/WorldSettings;Lnet/minecraft/world/level/levelgen/WorldOptions;Ljava/util/function/Function;)V createFreshLevel
	a (Lnet/minecraft/world/level/storage/Convertable$ConversionSession;)Lcom/mojang/datafixers/util/Pair; recreateWorldData
	a (Lnet/minecraft/world/level/storage/Convertable$ConversionSession;Ljava/lang/String;)V safeCloseAccess
	a (Lnet/minecraft/world/level/storage/Convertable$ConversionSession;Lnet/minecraft/server/DataPackResources;Lnet/minecraft/core/LayeredRegistryAccess;Lnet/minecraft/world/level/storage/SaveData;)V createLevelFromExistingSettings
	a (Lnet/minecraft/world/level/storage/Convertable$ConversionSession;Z)Lnet/minecraft/server/WorldStem; loadWorldStem
	a (Lnet/minecraft/world/level/storage/Convertable$ConversionSession;ZLnet/minecraft/server/packs/repository/ResourcePackRepository;)Lnet/minecraft/server/WorldStem; loadWorldStem
	b (Lnet/minecraft/world/level/storage/Convertable$ConversionSession;ZLnet/minecraft/server/packs/repository/ResourcePackRepository;)Ladw$d; getPackConfigFromLevelData
exy net/minecraft/client/gui/screens/worldselection/WorldSelectionList
	A currentlyDisplayedLevels
	B filter
	C loadingHeader
	a LOGGER
	p DATE_FORMAT
	q ICON_MISSING
	r ICON_OVERLAY_LOCATION
	s FROM_NEWER_TOOLTIP_1
	t FROM_NEWER_TOOLTIP_2
	u SNAPSHOT_TOOLTIP_1
	v SNAPSHOT_TOOLTIP_2
	w WORLD_LOCKED_TOOLTIP
	x WORLD_REQUIRES_CONVERSION
	y screen
	z pendingLevels
	A ()V notifyListUpdated
	a (Lehe;IIF)V render
	a (Lenw$a;)V setSelected
	a (Lexy$a;)V setSelected
	a (Ljava/lang/String;)V updateFilter
	a (Ljava/lang/String;Ljava/util/List;)V fillLevels
	a (Ljava/lang/String;Lnet/minecraft/world/level/storage/WorldInfo;)Z filterAccepts
	a (Ljava/util/List;)V handleNewLevels
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V handleLevelLoadFailure
	b ()I getRowWidth
	b (Lere;)V updateNarration
	c ()I getScrollbarPosition
	d ()Ljava/util/Optional; getSelectedOpt
	e ()Lext; getScreen
	w ()Ljava/util/List; pollLevelsIgnoreErrors
	x ()V reloadWorldList
	y ()Ljava/util/concurrent/CompletableFuture; loadLevels
	z ()V fillLoadingLevels
exy$a net/minecraft/client/gui/screens/worldselection/WorldSelectionList$Entry
	b ()Z isSelectable
exy$b net/minecraft/client/gui/screens/worldselection/WorldSelectionList$LoadingHeader
	a LOADING_LABEL
	b minecraft
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarration
	a (Lehe;IIIIIIIZF)V render
	b ()Z isSelectable
exy$c net/minecraft/client/gui/screens/worldselection/WorldSelectionList$WorldListEntry
	b ICON_WIDTH
	c ICON_HEIGHT
	d ICON_OVERLAY_X_JOIN
	e ICON_OVERLAY_X_JOIN_WITH_NOTIFY
	f ICON_OVERLAY_X_WARNING
	h ICON_OVERLAY_X_ERROR
	i ICON_OVERLAY_Y_UNSELECTED
	j ICON_OVERLAY_Y_SELECTED
	k minecraft
	l screen
	m summary
	n iconLocation
	o iconFile
	p icon
	q lastClickTime
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarration
	a (DDI)Z mouseClicked
	a (Lehe;IIIIIIIZF)V render
	b ()Z isSelectable
	d ()V joinWorld
	e ()V deleteWorld
	f ()V doDeleteWorld
	g ()V editWorld
	h ()V recreateWorld
	i ()Ljava/lang/String; getLevelName
	j ()V loadWorld
	k ()V queueLoadScreen
	m ()Lfsp; loadServerIcon
eya net/minecraft/client/gui/spectator/PlayerMenuItem
	a profile
	b location
	c name
	a (Lehe;FI)V renderIcon
	a (Leyc;)V selectItem
	aK_ ()Lnet/minecraft/network/chat/IChatBaseComponent; getName
	aL_ ()Z isEnabled
eyb net/minecraft/client/gui/spectator/RootSpectatorMenuCategory
	a PROMPT_TEXT
	b items
	a ()Ljava/util/List; getItems
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; getPrompt
eyc net/minecraft/client/gui/spectator/SpectatorMenu
	a EMPTY_SLOT
	b CLOSE_ITEM
	c SCROLL_LEFT
	d SCROLL_RIGHT_ENABLED
	e SCROLL_RIGHT_DISABLED
	f MAX_PER_PAGE
	g CLOSE_MENU_TEXT
	h PREVIOUS_PAGE_TEXT
	i NEXT_PAGE_TEXT
	j listener
	k category
	l selectedSlot
	m page
	a ()Ljava/util/List; getItems
	a (I)Leye; getItem
	a (Leyd;)V selectCategory
	b ()Leye; getSelectedItem
	b (I)V selectSlot
	c ()Leyd; getSelectedCategory
	d ()V exit
	e ()I getSelectedSlot
	f ()Leyg; getCurrentPage
eyc$a net/minecraft/client/gui/spectator/SpectatorMenu$CloseSpectatorItem
	a (Lehe;FI)V renderIcon
	a (Leyc;)V selectItem
	aK_ ()Lnet/minecraft/network/chat/IChatBaseComponent; getName
	aL_ ()Z isEnabled
eyc$b net/minecraft/client/gui/spectator/SpectatorMenu$ScrollMenuItem
	a direction
	b enabled
	a (Lehe;FI)V renderIcon
	a (Leyc;)V selectItem
	aK_ ()Lnet/minecraft/network/chat/IChatBaseComponent; getName
	aL_ ()Z isEnabled
eyd net/minecraft/client/gui/spectator/SpectatorMenuCategory
	a ()Ljava/util/List; getItems
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; getPrompt
eye net/minecraft/client/gui/spectator/SpectatorMenuItem
	a (Lehe;FI)V renderIcon
	a (Leyc;)V selectItem
	aK_ ()Lnet/minecraft/network/chat/IChatBaseComponent; getName
	aL_ ()Z isEnabled
eyf net/minecraft/client/gui/spectator/SpectatorMenuListener
	a (Leyc;)V onSpectatorMenuClosed
eyg net/minecraft/client/gui/spectator/categories/SpectatorPage
	a NO_SELECTION
	b items
	c selection
	a ()I getSelectedSlot
	a (I)Leye; getItem
eyh net/minecraft/client/gui/spectator/categories/TeleportToPlayerMenuCategory
	a PROFILE_ORDER
	b TELEPORT_TEXT
	c TELEPORT_PROMPT
	d items
	a ()Ljava/util/List; getItems
	a (Lehe;FI)V renderIcon
	a (Leyc;)V selectItem
	aK_ ()Lnet/minecraft/network/chat/IChatBaseComponent; getName
	aL_ ()Z isEnabled
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; getPrompt
eyi net/minecraft/client/gui/spectator/categories/TeleportToTeamMenuCategory
	a TELEPORT_TEXT
	b TELEPORT_PROMPT
	c items
	a ()Ljava/util/List; getItems
	a (Lehe;FI)V renderIcon
	a (Lemh;Lnet/minecraft/world/scores/Scoreboard;)Ljava/util/List; createTeamEntries
	a (Leyc;)V selectItem
	aK_ ()Lnet/minecraft/network/chat/IChatBaseComponent; getName
	aL_ ()Z isEnabled
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; getPrompt
eyi$a net/minecraft/client/gui/spectator/categories/TeleportToTeamMenuCategory$TeamSelectionItem
	a team
	b iconSkin
	c players
	a (Lehe;FI)V renderIcon
	a (Lemh;Lnet/minecraft/world/scores/ScoreboardTeam;)Ljava/util/Optional; create
	a (Leyc;)V selectItem
	aK_ ()Lnet/minecraft/network/chat/IChatBaseComponent; getName
	aL_ ()Z isEnabled
eyl net/minecraft/client/main/GameConfig
	a user
	b display
	c location
	d game
	e server
eyl$a net/minecraft/client/main/GameConfig$FolderData
	a gameDirectory
	b resourcePackDirectory
	c assetDirectory
	d assetIndex
	a ()Ljava/nio/file/Path; getExternalAssetSource
eyl$b net/minecraft/client/main/GameConfig$GameData
	a demo
	b launchVersion
	c versionType
	d disableMultiplayer
	e disableChat
eyl$c net/minecraft/client/main/GameConfig$ServerData
	a hostname
	b port
eyl$d net/minecraft/client/main/GameConfig$UserData
	a user
	b userProperties
	c profileProperties
	d proxy
eym net/minecraft/client/main/SilentInitException
eyo net/minecraft/client/model/AbstractZombieModel
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/EntityLiving;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/monster/EntityMonster;)Z isAggressive
	a (Lnet/minecraft/world/entity/monster/EntityMonster;FFFFF)V setupAnim
eyp net/minecraft/client/model/AgeableHierarchicalModel
	a youngScaleFactor
	b bodyYOffset
	a (Lehe;Lehi;IIFFFF)V renderToBuffer
eyq net/minecraft/client/model/AgeableListModel
	a scaleHead
	b babyYHeadOffset
	f babyZHeadOffset
	g babyHeadScale
	h babyBodyScale
	i bodyYOffset
	a ()Ljava/lang/Iterable; headParts
	a (Lehe;Lehi;IIFFFF)V renderToBuffer
	b ()Ljava/lang/Iterable; bodyParts
eyr net/minecraft/client/model/AllayModel
	a root
	b head
	f body
	g right_arm
	h left_arm
	i right_wing
	j left_wing
	k FLYING_ANIMATION_X_ROT
	l MAX_HAND_HOLDING_ITEM_X_ROT_RAD
	m MIN_HAND_HOLDING_ITEM_X_ROT_RAD
	a ()Lfcr; root
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/EnumMainHand;Lehe;)V translateToHand
	a (Lnet/minecraft/world/entity/animal/allay/Allay;FFFFF)V setupAnim
	b ()Lfcx; createBodyLayer
eys net/minecraft/client/model/AnimationUtils
	a (Lfcr;FF)V bobModelPart
	a (Lfcr;Lfcr;F)V bobArms
	a (Lfcr;Lfcr;Lfcr;Z)V animateCrossbowHold
	a (Lfcr;Lfcr;Lnet/minecraft/world/entity/EntityInsentient;FF)V swingWeaponDown
	a (Lfcr;Lfcr;Lnet/minecraft/world/entity/EntityLiving;Z)V animateCrossbowCharge
	a (Lfcr;Lfcr;ZFF)V animateZombieArms
eyt net/minecraft/client/model/ArmedModel
	a (Lnet/minecraft/world/entity/EnumMainHand;Lehe;)V translateToHand
eyu net/minecraft/client/model/ArmorStandArmorModel
	a (Lfcv;)Lfcx; createBodyLayer
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/EntityLiving;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/decoration/EntityArmorStand;FFFFF)V setupAnim
eyv net/minecraft/client/model/ArmorStandModel
	A shoulderStick
	B basePlate
	a RIGHT_BODY_STICK
	b LEFT_BODY_STICK
	w SHOULDER_STICK
	x BASE_PLATE
	y rightBodyStick
	z leftBodyStick
	a (Lnet/minecraft/world/entity/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/EntityLiving;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/EntityLiving;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/EnumMainHand;Lehe;)V translateToHand
	a (Lnet/minecraft/world/entity/decoration/EntityArmorStand;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/decoration/EntityArmorStand;FFFFF)V setupAnim
	b ()Ljava/lang/Iterable; bodyParts
	c ()Lfcx; createBodyLayer
eyw net/minecraft/client/model/AxolotlModel
	a SWIMMING_LEG_XROT
	b tail
	f leftHindLeg
	g rightHindLeg
	h leftFrontLeg
	i rightFrontLeg
	j body
	k head
	l topGills
	m leftGills
	n rightGills
	a ()Ljava/lang/Iterable; headParts
	a (F)V setupWaterHoveringAnimation
	a (FF)F lerpTo
	a (FFF)F lerpTo
	a (Lfcr;)Lorg/joml/Vector3f; getRotationVector
	a (Lfcr;FFF)V lerpPart
	a (Lfcr;Lorg/joml/Vector3f;)V setRotationFromVector
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/animal/axolotl/Axolotl;)V saveAnimationValues
	a (Lnet/minecraft/world/entity/animal/axolotl/Axolotl;FF)V setupInitialAnimationValues
	a (Lnet/minecraft/world/entity/animal/axolotl/Axolotl;FFFFF)V setupAnim
	b ()Ljava/lang/Iterable; bodyParts
	b (F)V setupPlayDeadAnimation
	b (FF)V setupLayStillOnGroundAnimation
	c ()Lfcx; createBodyLayer
	c (FF)V setupGroundCrawlingAnimation
	d ()V applyMirrorLegRotations
	d (FF)V setupSwimmingAnimation
eyx net/minecraft/client/model/BatModel
	a root
	b head
	f body
	g rightWing
	h leftWing
	i rightWingTip
	j leftWingTip
	a ()Lfcr; root
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/ambient/EntityBat;FFFFF)V setupAnim
	b ()Lfcx; createBodyLayer
eyy net/minecraft/client/model/BeeModel
	a BEE_Y_BASE
	b BONE
	f STINGER
	g LEFT_ANTENNA
	h RIGHT_ANTENNA
	i FRONT_LEGS
	j MIDDLE_LEGS
	k BACK_LEGS
	l bone
	m rightWing
	n leftWing
	o frontLeg
	p midLeg
	q backLeg
	r stinger
	s leftAntenna
	t rightAntenna
	u rollAmount
	a ()Ljava/lang/Iterable; headParts
	a (Lnet/minecraft/world/entity/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/animal/EntityBee;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/animal/EntityBee;FFFFF)V setupAnim
	b ()Ljava/lang/Iterable; bodyParts
	c ()Lfcx; createBodyLayer
eyz net/minecraft/client/model/BlazeModel
	a root
	b upperBodyParts
	f head
	a ()Lfcr; root
	a (I)Ljava/lang/String; getPartName
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	b ()Lfcx; createBodyLayer
eza net/minecraft/client/model/BoatModel
	a LEFT_PADDLE
	b RIGHT_PADDLE
	f WATER_PATCH
	g BOTTOM
	h BACK
	i FRONT
	j RIGHT
	k LEFT
	l leftPaddle
	m rightPaddle
	n waterPatch
	o parts
	a ()Lfcx; createBodyModel
	a (Lfcr;)Lcom/google/common/collect/ImmutableList$Builder; createPartsBuilder
	a (Lfda;)V createChildren
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/vehicle/EntityBoat;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/vehicle/EntityBoat;ILfcr;F)V animatePaddle
	b ()Lcom/google/common/collect/ImmutableList; parts
	c ()Lfcr; waterPatch
	d ()Ljava/lang/Iterable; parts
ezb net/minecraft/client/model/BookModel
	a LEFT_PAGES
	b RIGHT_PAGES
	c FLIP_PAGE_1
	d FLIP_PAGE_2
	e root
	f leftLid
	g rightLid
	h leftPages
	i rightPages
	j flipPage1
	k flipPage2
	a ()Lfcx; createBodyLayer
	a (FFFF)V setupAnim
	a (Lehe;Lehi;IIFFFF)V renderToBuffer
	b (Lehe;Lehi;IIFFFF)V render
ezc net/minecraft/client/model/CamelModel
	a MAX_WALK_ANIMATION_SPEED
	b WALK_ANIMATION_SCALE_FACTOR
	f BABY_SCALE
	g BABY_Y_OFFSET
	h SADDLE
	i BRIDLE
	j REINS
	k root
	l head
	m saddleParts
	n ridingParts
	a ()Lfcr; root
	a (Lehe;Lehi;IIFFFF)V renderToBuffer
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/animal/camel/Camel;)V toggleInvisibleParts
	a (Lnet/minecraft/world/entity/animal/camel/Camel;FFF)V applyHeadRotation
	a (Lnet/minecraft/world/entity/animal/camel/Camel;FFFFF)V setupAnim
	b ()Lfcx; createBodyLayer
ezd net/minecraft/client/model/CatModel
	q lieDownAmount
	r lieDownAmountTail
	s relaxStateOneAmount
	a (Lnet/minecraft/world/entity/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/animal/EntityCat;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/animal/EntityCat;FFFFF)V setupAnim
eze net/minecraft/client/model/ChestBoatModel
	a CHEST_BOTTOM
	b CHEST_LID
	f CHEST_LOCK
	a (Lfcr;)Lcom/google/common/collect/ImmutableList$Builder; createPartsBuilder
	e ()Lfcx; createBodyModel
ezf net/minecraft/client/model/ChestRaftModel
	a CHEST_BOTTOM
	b CHEST_LID
	f CHEST_LOCK
	a ()Lfcx; createBodyModel
	a (Lfcr;)Lcom/google/common/collect/ImmutableList$Builder; createPartsBuilder
ezg net/minecraft/client/model/ChestedHorseModel
	g leftChest
	h rightChest
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/animal/horse/EntityHorseAbstract;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/animal/horse/EntityHorseChestedAbstract;FFFFF)V setupAnim
	c ()Lfcx; createBodyLayer
ezh net/minecraft/client/model/ChickenModel
	a RED_THING
	b head
	f body
	g rightLeg
	h leftLeg
	i rightWing
	j leftWing
	k beak
	l redThing
	a ()Ljava/lang/Iterable; headParts
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	b ()Ljava/lang/Iterable; bodyParts
	c ()Lfcx; createBodyLayer
ezi net/minecraft/client/model/CodModel
	a root
	b tailFin
	a ()Lfcr; root
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	b ()Lfcx; createBodyLayer
ezj net/minecraft/client/model/ColorableAgeableListModel
	a r
	b g
	f b
	a (FFF)V setColor
	a (Lehe;Lehi;IIFFFF)V renderToBuffer
ezk net/minecraft/client/model/ColorableHierarchicalModel
	a r
	b g
	f b
	a (FFF)V setColor
	a (Lehe;Lehi;IIFFFF)V renderToBuffer
ezl net/minecraft/client/model/CowModel
	c ()Lfcx; createBodyLayer
	d ()Lfcr; getHead
ezm net/minecraft/client/model/CreeperModel
	a root
	b head
	f rightHindLeg
	g leftHindLeg
	h rightFrontLeg
	i leftFrontLeg
	j Y_OFFSET
	a ()Lfcr; root
	a (Lfcv;)Lfcx; createBodyLayer
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
ezn net/minecraft/client/model/DolphinModel
	a root
	b body
	f tail
	g tailFin
	a ()Lfcr; root
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	b ()Lfcx; createBodyLayer
ezo net/minecraft/client/model/DrownedModel
	a (Lfcv;)Lfcx; createBodyLayer
	a (Lnet/minecraft/world/entity/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/EntityLiving;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/EntityLiving;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/monster/EntityMonster;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/monster/EntityZombie;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/monster/EntityZombie;FFFFF)V setupAnim
ezp net/minecraft/client/model/ElytraModel
	a rightWing
	b leftWing
	a ()Ljava/lang/Iterable; headParts
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/EntityLiving;FFFFF)V setupAnim
	b ()Ljava/lang/Iterable; bodyParts
	c ()Lfcx; createLayer
ezq net/minecraft/client/model/EndermanModel
	a carrying
	b creepy
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/EntityLiving;FFFFF)V setupAnim
	c ()Lfcx; createBodyLayer
ezr net/minecraft/client/model/EndermiteModel
	a BODY_COUNT
	b BODY_SIZES
	f BODY_TEXS
	g root
	h bodyParts
	a ()Lfcr; root
	a (I)Ljava/lang/String; createSegmentName
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	b ()Lfcx; createBodyLayer
ezs net/minecraft/client/model/EntityModel
	c attackTime
	d riding
	e young
	a (Lezs;)V copyPropertiesTo
	a (Lnet/minecraft/world/entity/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
ezt net/minecraft/client/model/EvokerFangsModel
	a BASE
	b UPPER_JAW
	f LOWER_JAW
	g root
	h base
	i upperJaw
	j lowerJaw
	a ()Lfcr; root
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	b ()Lfcx; createBodyLayer
ezu net/minecraft/client/model/FoxModel
	a head
	b body
	f rightHindLeg
	g leftHindLeg
	h rightFrontLeg
	i leftFrontLeg
	j tail
	k LEG_SIZE
	l HEAD_HEIGHT
	m LEG_POS
	n legMotionPos
	a ()Ljava/lang/Iterable; headParts
	a (Lnet/minecraft/world/entity/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/animal/EntityFox;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/animal/EntityFox;FFFFF)V setupAnim
	b ()Ljava/lang/Iterable; bodyParts
	c ()Lfcx; createBodyLayer
ezv net/minecraft/client/model/FrogModel
	a MAX_WALK_ANIMATION_SPEED
	b MAX_SWIM_ANIMATION_SPEED
	f WALK_ANIMATION_SCALE_FACTOR
	g root
	h body
	i head
	j eyes
	k tongue
	l leftArm
	m rightArm
	n leftLeg
	o rightLeg
	p croakingBody
	a ()Lfcr; root
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/animal/frog/Frog;FFFFF)V setupAnim
	b ()Lfcx; createBodyLayer
ezw net/minecraft/client/model/GhastModel
	a root
	b tentacles
	a ()Lfcr; root
	a (I)Ljava/lang/String; createTentacleName
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	b ()Lfcx; createBodyLayer
ezx net/minecraft/client/model/GiantZombieModel
	a (Lnet/minecraft/world/entity/monster/EntityGiantZombie;)Z isAggressive
	a (Lnet/minecraft/world/entity/monster/EntityMonster;)Z isAggressive
ezy net/minecraft/client/model/GoatModel
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/animal/goat/Goat;FFFFF)V setupAnim
	c ()Lfcx; createBodyLayer
ezz net/minecraft/client/model/GuardianModel
	a SPIKE_X_ROT
	b SPIKE_Y_ROT
	f SPIKE_Z_ROT
	g SPIKE_X
	h SPIKE_Y
	i SPIKE_Z
	j EYE
	k TAIL_0
	l TAIL_1
	m TAIL_2
	n root
	o head
	p eye
	q spikeParts
	r tailParts
	a ()Lfcr; root
	a (FF)V setupSpikes
	a (I)Ljava/lang/String; createSpikeName
	a (IFF)F getSpikeOffset
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/monster/EntityGuardian;FFFFF)V setupAnim
	b ()Lfcx; createBodyLayer
	b (IFF)F getSpikeX
	c (IFF)F getSpikeY
	d (IFF)F getSpikeZ
fa$a net/minecraft/commands/arguments/TimeArgument$Info
	a (Lcom/mojang/brigadier/arguments/ArgumentType;)Lgf$a; unpack
	a (Lfa$a$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lfa$a$a;Lnet/minecraft/network/PacketDataSerializer;)V serializeToNetwork
	a (Lgf$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lgf$a;Lnet/minecraft/network/PacketDataSerializer;)V serializeToNetwork
	a (Lnet/minecraft/commands/arguments/ArgumentTime;)Lfa$a$a; unpack
	a (Lnet/minecraft/network/PacketDataSerializer;)Lfa$a$a; deserializeFromNetwork
	b (Lnet/minecraft/network/PacketDataSerializer;)Lgf$a; deserializeFromNetwork
fa$a$a net/minecraft/commands/arguments/TimeArgument$Info$Template
	b min
	a ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; type
	a (Lnet/minecraft/commands/CommandBuildContext;)Lnet/minecraft/commands/arguments/ArgumentTime; instantiate
	b (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; instantiate
faa net/minecraft/client/model/HeadedModel
	d ()Lfcr; getHead
fab net/minecraft/client/model/HierarchicalModel
	a ANIMATION_VECTOR_CACHE
	a ()Lfcr; root
	a (Lehe;Lehi;IIFFFF)V renderToBuffer
	a (Lemy;FFFF)V animateWalk
	a (Ljava/lang/String;)Ljava/util/Optional; getAnyDescendantWithName
	a (Lnet/minecraft/world/entity/AnimationState;Lemy;F)V animate
	a (Lnet/minecraft/world/entity/AnimationState;Lemy;FF)V animate
fac net/minecraft/client/model/HoglinModel
	a DEFAULT_HEAD_X_ROT
	b ATTACK_HEAD_X_ROT_END
	f head
	g rightEar
	h leftEar
	i body
	j rightFrontLeg
	k leftFrontLeg
	l rightHindLeg
	m leftHindLeg
	n mane
	a ()Ljava/lang/Iterable; headParts
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/EntityInsentient;FFFFF)V setupAnim
	b ()Ljava/lang/Iterable; bodyParts
	c ()Lfcx; createBodyLayer
fad net/minecraft/client/model/HorseModel
	A leftFrontLeg
	B rightHindBabyLeg
	C leftHindBabyLeg
	D rightFrontBabyLeg
	E leftFrontBabyLeg
	F tail
	G saddleParts
	H ridingParts
	a HEAD_PARTS
	b body
	f headParts
	g DEG_125
	h DEG_60
	i DEG_45
	j DEG_30
	k DEG_15
	l LEFT_HIND_BABY_LEG
	m RIGHT_HIND_BABY_LEG
	n LEFT_FRONT_BABY_LEG
	o RIGHT_FRONT_BABY_LEG
	p SADDLE
	q LEFT_SADDLE_MOUTH
	r LEFT_SADDLE_LINE
	s RIGHT_SADDLE_MOUTH
	t RIGHT_SADDLE_LINE
	u HEAD_SADDLE
	w MOUTH_SADDLE_WRAP
	x rightHindLeg
	y leftHindLeg
	z rightFrontLeg
	a ()Ljava/lang/Iterable; headParts
	a (Lfcv;)Lfcz; createBodyMesh
	a (Lnet/minecraft/world/entity/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/animal/horse/EntityHorseAbstract;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/animal/horse/EntityHorseAbstract;FFFFF)V setupAnim
	b ()Ljava/lang/Iterable; bodyParts
fae net/minecraft/client/model/HumanoidArmorModel
	a (Lfcv;)Lfcz; createBodyLayer
faf net/minecraft/client/model/HumanoidModel
	a DUCK_WALK_ROTATION
	b SPYGLASS_ARM_ROT_Y
	f OVERLAY_SCALE
	g HAT_OVERLAY_SCALE
	h LEGGINGS_OVERLAY_SCALE
	i TOOT_HORN_XROT_BASE
	j TOOT_HORN_YROT_BASE
	k head
	l hat
	m body
	n rightArm
	o leftArm
	p rightLeg
	q leftLeg
	r leftArmPose
	s rightArmPose
	t crouching
	u swimAmount
	w SPYGLASS_ARM_ROT_X
	x SPYGLASS_ARM_CROUCH_ROT_X
	a ()Ljava/lang/Iterable; headParts
	a (F)F quadraticArmUpdate
	a (FFF)F rotlerpRad
	a (Lfaf;)V copyPropertiesTo
	a (Lfcv;F)Lfcz; createMesh
	a (Lnet/minecraft/world/entity/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/EntityLiving;)V poseRightArm
	a (Lnet/minecraft/world/entity/EntityLiving;F)V setupAttackAnimation
	a (Lnet/minecraft/world/entity/EntityLiving;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/EntityLiving;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/EnumMainHand;)Lfcr; getArm
	a (Lnet/minecraft/world/entity/EnumMainHand;Lehe;)V translateToHand
	b ()Ljava/lang/Iterable; bodyParts
	b (Lnet/minecraft/world/entity/EntityLiving;)V poseLeftArm
	c (Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/entity/EnumMainHand; getAttackArm
	d ()Lfcr; getHead
	d_ (Z)V setAllVisible
faf$a net/minecraft/client/model/HumanoidModel$ArmPose
	a EMPTY
	b ITEM
	c BLOCK
	d BOW_AND_ARROW
	e THROW_SPEAR
	f CROSSBOW_CHARGE
	g CROSSBOW_HOLD
	h SPYGLASS
	i TOOT_HORN
	j BRUSH
	k twoHanded
	l $VALUES
	a ()Z isTwoHanded
	b ()[Lfaf$a; $values
fag net/minecraft/client/model/IllagerModel
	a root
	b head
	f hat
	g arms
	h leftLeg
	i rightLeg
	j rightArm
	k leftArm
	a ()Lfcr; root
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/EnumMainHand;)Lfcr; getArm
	a (Lnet/minecraft/world/entity/EnumMainHand;Lehe;)V translateToHand
	a (Lnet/minecraft/world/entity/monster/EntityIllagerAbstract;FFFFF)V setupAnim
	b ()Lfcx; createBodyLayer
	c ()Lfcr; getHat
	d ()Lfcr; getHead
fah net/minecraft/client/model/IronGolemModel
	a root
	b head
	f rightArm
	g leftArm
	h rightLeg
	i leftLeg
	a ()Lfcr; root
	a (Lnet/minecraft/world/entity/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/animal/EntityIronGolem;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/animal/EntityIronGolem;FFFFF)V setupAnim
	b ()Lfcx; createBodyLayer
	c ()Lfcr; getFlowerHoldingArm
fai net/minecraft/client/model/LavaSlimeModel
	a SEGMENT_COUNT
	b root
	f bodyCubes
	a ()Lfcr; root
	a (I)Ljava/lang/String; getSegmentName
	a (Lnet/minecraft/world/entity/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/monster/EntitySlime;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/monster/EntitySlime;FFFFF)V setupAnim
	b ()Lfcx; createBodyLayer
faj net/minecraft/client/model/LeashKnotModel
	a KNOT
	b root
	f knot
	a ()Lfcr; root
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	b ()Lfcx; createBodyLayer
fak net/minecraft/client/model/ListModel
	a (Lehe;Lehi;IIFFFF)V renderToBuffer
	d ()Ljava/lang/Iterable; parts
fal net/minecraft/client/model/LlamaModel
	a head
	b body
	f rightHindLeg
	g leftHindLeg
	h rightFrontLeg
	i leftFrontLeg
	j rightChest
	k leftChest
	a (Lehe;Lehi;IIFFFF)V renderToBuffer
	a (Lfcv;)Lfcx; createBodyLayer
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/animal/horse/EntityHorseChestedAbstract;FFFFF)V setupAnim
fam net/minecraft/client/model/LlamaSpitModel
	a MAIN
	b root
	a ()Lfcr; root
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	b ()Lfcx; createBodyLayer
fan net/minecraft/client/model/MinecartModel
	a root
	a ()Lfcr; root
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	b ()Lfcx; createBodyLayer
fao net/minecraft/client/model/Model
	v renderType
	a (Lehe;Lehi;IIFFFF)V renderToBuffer
	a (Lnet/minecraft/resources/MinecraftKey;)Lfio; renderType
fap net/minecraft/client/model/ModelUtils
	a (FFF)F rotlerpRad
faq net/minecraft/client/model/OcelotModel
	A BODY_WALK_Z
	B TAIL_1_WALK_Y
	C TAIL_1_WALK_Z
	D TAIL_2_WALK_Y
	E TAIL_2_WALK_Z
	F FRONT_LEG_Z
	G TAIL_1
	H TAIL_2
	a SITTING_STATE
	b BACK_LEG_Y
	f BACK_LEG_Z
	g FRONT_LEG_Y
	h leftHindLeg
	i rightHindLeg
	j leftFrontLeg
	k rightFrontLeg
	l tail1
	m tail2
	n head
	o body
	p state
	q CROUCH_STATE
	r WALK_STATE
	s SPRINT_STATE
	t XO
	u YO
	w ZO
	x HEAD_WALK_Y
	y HEAD_WALK_Z
	z BODY_WALK_Y
	a ()Ljava/lang/Iterable; headParts
	a (Lfcv;)Lfcz; createBodyMesh
	a (Lnet/minecraft/world/entity/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	b ()Ljava/lang/Iterable; bodyParts
far net/minecraft/client/model/PandaModel
	j sitAmount
	k lieOnBackAmount
	l rollAmount
	a (Lnet/minecraft/world/entity/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/animal/EntityPanda;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/animal/EntityPanda;FFFFF)V setupAnim
	c ()Lfcx; createBodyLayer
fas net/minecraft/client/model/ParrotModel
	a FEATHER
	b root
	f body
	g tail
	h leftWing
	i rightWing
	j head
	k feather
	l leftLeg
	m rightLeg
	a ()Lfcr; root
	a (Lehe;Lehi;IIFFFFI)V renderOnShoulder
	a (Lfas$a;)V prepare
	a (Lfas$a;IFFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/animal/EntityParrot;)Lfas$a; getState
	a (Lnet/minecraft/world/entity/animal/EntityParrot;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/animal/EntityParrot;FFFFF)V setupAnim
	b ()Lfcx; createBodyLayer
fas$a net/minecraft/client/model/ParrotModel$State
	a FLYING
	b STANDING
	c SITTING
	d PARTY
	e ON_SHOULDER
	f $VALUES
	a ()[Lfas$a; $values
fat net/minecraft/client/model/PhantomModel
	a TAIL_BASE
	b TAIL_TIP
	f root
	g leftWingBase
	h leftWingTip
	i rightWingBase
	j rightWingTip
	k tailBase
	l tailTip
	a ()Lfcr; root
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/monster/EntityPhantom;FFFFF)V setupAnim
	b ()Lfcx; createBodyLayer
fau net/minecraft/client/model/PigModel
	a (Lfcv;)Lfcx; createBodyLayer
fav net/minecraft/client/model/PiglinHeadModel
	a head
	b leftEar
	c rightEar
	a ()Lfcz; createHeadModel
	a (FFF)V setupAnim
	a (Lehe;Lehi;IIFFFF)V renderToBuffer
faw net/minecraft/client/model/PiglinModel
	A leftEar
	B bodyDefault
	C headDefault
	D leftArmDefault
	E rightArmDefault
	a rightEar
	a (Lfcv;)Lfcz; createMesh
	a (Lfcv;Lfcz;)V addHead
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/EntityInsentient;)V holdWeaponHigh
	a (Lnet/minecraft/world/entity/EntityInsentient;F)V setupAttackAnimation
	a (Lnet/minecraft/world/entity/EntityInsentient;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/EntityLiving;F)V setupAttackAnimation
	a (Lnet/minecraft/world/entity/EntityLiving;FFFFF)V setupAnim
fax net/minecraft/client/model/PlayerModel
	A CLOAK
	B LEFT_SLEEVE
	C RIGHT_SLEEVE
	D LEFT_PANTS
	E RIGHT_PANTS
	F parts
	G cloak
	H ear
	I slim
	a EAR
	b leftSleeve
	w rightSleeve
	x leftPants
	y rightPants
	z jacket
	a (Lehe;Lehi;II)V renderEars
	a (Lfcv;Z)Lfcz; createMesh
	a (Lnet/minecraft/util/RandomSource;)Lfcr; getRandomModelPart
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/EntityLiving;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/EnumMainHand;Lehe;)V translateToHand
	b ()Ljava/lang/Iterable; bodyParts
	b (Lehe;Lehi;II)V renderCloak
	d_ (Z)V setAllVisible
fay net/minecraft/client/model/PolarBearModel
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/animal/EntityPolarBear;FFFFF)V setupAnim
	c ()Lfcx; createBodyLayer
faz net/minecraft/client/model/PufferfishBigModel
	a root
	b leftBlueFin
	f rightBlueFin
	a ()Lfcr; root
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	b ()Lfcx; createBodyLayer
fba net/minecraft/client/model/PufferfishMidModel
	a root
	b leftBlueFin
	f rightBlueFin
	a ()Lfcr; root
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	b ()Lfcx; createBodyLayer
fbb net/minecraft/client/model/PufferfishSmallModel
	a root
	b leftFin
	f rightFin
	a ()Lfcr; root
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	b ()Lfcx; createBodyLayer
fbc net/minecraft/client/model/QuadrupedModel
	a head
	b body
	f rightHindLeg
	g leftHindLeg
	h rightFrontLeg
	i leftFrontLeg
	a ()Ljava/lang/Iterable; headParts
	a (ILfcv;)Lfcz; createBodyMesh
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	b ()Ljava/lang/Iterable; bodyParts
fbd net/minecraft/client/model/RabbitModel
	a REAR_JUMP_ANGLE
	b FRONT_JUMP_ANGLE
	f LEFT_HAUNCH
	g RIGHT_HAUNCH
	h leftRearFoot
	i rightRearFoot
	j leftHaunch
	k rightHaunch
	l body
	m leftFrontLeg
	n rightFrontLeg
	o head
	p rightEar
	q leftEar
	r tail
	s nose
	t jumpRotation
	u NEW_SCALE
	a ()Lfcx; createBodyLayer
	a (Lehe;Lehi;IIFFFF)V renderToBuffer
	a (Lnet/minecraft/world/entity/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/animal/EntityRabbit;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/animal/EntityRabbit;FFFFF)V setupAnim
fbe net/minecraft/client/model/RaftModel
	a LEFT_PADDLE
	b RIGHT_PADDLE
	f BOTTOM
	g leftPaddle
	h rightPaddle
	i parts
	a (Lfcr;)Lcom/google/common/collect/ImmutableList$Builder; createPartsBuilder
	a (Lfda;)V createChildren
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/vehicle/EntityBoat;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/vehicle/EntityBoat;ILfcr;F)V animatePaddle
	b ()Lfcx; createBodyModel
	c ()Lcom/google/common/collect/ImmutableList; parts
	d ()Ljava/lang/Iterable; parts
fbf net/minecraft/client/model/RavagerModel
	a root
	b head
	f mouth
	g rightHindLeg
	h leftHindLeg
	i rightFrontLeg
	j leftFrontLeg
	k neck
	a ()Lfcr; root
	a (Lnet/minecraft/world/entity/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/monster/EntityRavager;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/monster/EntityRavager;FFFFF)V setupAnim
	b ()Lfcx; createBodyLayer
fbg net/minecraft/client/model/SalmonModel
	a BODY_FRONT
	b BODY_BACK
	f root
	g bodyBack
	a ()Lfcr; root
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	b ()Lfcx; createBodyLayer
fbh net/minecraft/client/model/SheepFurModel
	j headXRot
	a (Lnet/minecraft/world/entity/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/animal/EntitySheep;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/animal/EntitySheep;FFFFF)V setupAnim
	c ()Lfcx; createFurLayer
fbi net/minecraft/client/model/SheepModel
	j headXRot
	a (Lnet/minecraft/world/entity/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/animal/EntitySheep;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/animal/EntitySheep;FFFFF)V setupAnim
	c ()Lfcx; createBodyLayer
fbj net/minecraft/client/model/ShieldModel
	a PLATE
	b HANDLE
	c SHIELD_WIDTH
	d SHIELD_HEIGHT
	e root
	f plate
	g handle
	a ()Lfcx; createLayer
	a (Lehe;Lehi;IIFFFF)V renderToBuffer
	b ()Lfcr; plate
	c ()Lfcr; handle
fbk net/minecraft/client/model/ShulkerBulletModel
	a MAIN
	b root
	f main
	a ()Lfcr; root
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	b ()Lfcx; createBodyLayer
fbl net/minecraft/client/model/ShulkerModel
	a LID
	b BASE
	f base
	g lid
	h head
	a ()Lfcx; createBodyLayer
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/monster/EntityShulker;FFFFF)V setupAnim
	b ()Lfcr; getLid
	c ()Lfcr; getHead
	d ()Ljava/lang/Iterable; parts
fbm net/minecraft/client/model/SilverfishModel
	a BODY_COUNT
	b root
	f bodyParts
	g bodyLayers
	h BODY_SIZES
	i BODY_TEXS
	a ()Lfcr; root
	a (I)Ljava/lang/String; getLayerName
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	b ()Lfcx; createBodyLayer
	b (I)Ljava/lang/String; getSegmentName
fbn net/minecraft/client/model/SkeletonModel
	a (Lnet/minecraft/world/entity/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/EntityInsentient;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/EntityInsentient;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/EntityLiving;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/EntityLiving;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/EnumMainHand;Lehe;)V translateToHand
	c ()Lfcx; createBodyLayer
fbo net/minecraft/client/model/SkullModel
	a head
	b root
	a ()Lfcz; createHeadModel
	a (FFF)V setupAnim
	a (Lehe;Lehi;IIFFFF)V renderToBuffer
	b ()Lfcx; createHumanoidHeadLayer
	c ()Lfcx; createMobHeadLayer
fbp net/minecraft/client/model/SkullModelBase
	a (FFF)V setupAnim
fbq net/minecraft/client/model/SlimeModel
	a root
	a ()Lfcr; root
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	b ()Lfcx; createOuterBodyLayer
	c ()Lfcx; createInnerBodyLayer
fbr net/minecraft/client/model/SnifferModel
	a WALK_ANIMATION_SPEED_FACTOR
	b MAX_WALK_ANIMATION_SPEED
	f PANIC_ANIMATION_FACTOR
	g root
	h head
	a ()Lfcr; root
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/animal/sniffer/Sniffer;FFFFF)V setupAnim
	b ()Lfcx; createBodyLayer
fbs net/minecraft/client/model/SnowGolemModel
	a UPPER_BODY
	b root
	f upperBody
	g head
	h leftArm
	i rightArm
	a ()Lfcr; root
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	b ()Lfcx; createBodyLayer
	c ()Lfcr; getHead
fbt net/minecraft/client/model/SpiderModel
	a BODY_0
	b BODY_1
	f RIGHT_MIDDLE_FRONT_LEG
	g LEFT_MIDDLE_FRONT_LEG
	h RIGHT_MIDDLE_HIND_LEG
	i LEFT_MIDDLE_HIND_LEG
	j root
	k head
	l rightHindLeg
	m leftHindLeg
	n rightMiddleHindLeg
	o leftMiddleHindLeg
	p rightMiddleFrontLeg
	q leftMiddleFrontLeg
	r rightFrontLeg
	s leftFrontLeg
	a ()Lfcr; root
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	b ()Lfcx; createSpiderBodyLayer
fbu net/minecraft/client/model/SquidModel
	a tentacles
	b root
	a ()Lfcr; root
	a (I)Ljava/lang/String; createTentacleName
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	b ()Lfcx; createBodyLayer
fbv net/minecraft/client/model/StriderModel
	a RIGHT_BOTTOM_BRISTLE
	b RIGHT_MIDDLE_BRISTLE
	f RIGHT_TOP_BRISTLE
	g LEFT_TOP_BRISTLE
	h LEFT_MIDDLE_BRISTLE
	i LEFT_BOTTOM_BRISTLE
	j root
	k rightLeg
	l leftLeg
	m body
	n rightBottomBristle
	o rightMiddleBristle
	p rightTopBristle
	q leftTopBristle
	r leftMiddleBristle
	s leftBottomBristle
	a ()Lfcr; root
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/monster/EntityStrider;FFFFF)V setupAnim
	b ()Lfcx; createBodyLayer
fbw net/minecraft/client/model/TadpoleModel
	a root
	b tail
	a ()Ljava/lang/Iterable; headParts
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/animal/frog/Tadpole;FFFFF)V setupAnim
	b ()Ljava/lang/Iterable; bodyParts
	c ()Lfcx; createBodyLayer
fbx net/minecraft/client/model/TridentModel
	a TEXTURE
	b root
	a ()Lfcx; createLayer
	a (Lehe;Lehi;IIFFFF)V renderToBuffer
fby net/minecraft/client/model/TropicalFishModelA
	a root
	b tail
	a ()Lfcr; root
	a (Lfcv;)Lfcx; createBodyLayer
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
fbz net/minecraft/client/model/TropicalFishModelB
	a root
	b tail
	a ()Lfcr; root
	a (Lfcv;)Lfcx; createBodyLayer
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
fca net/minecraft/client/model/TurtleModel
	j EGG_BELLY
	k eggBelly
	a (Lehe;Lehi;IIFFFF)V renderToBuffer
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/animal/EntityTurtle;FFFFF)V setupAnim
	b ()Ljava/lang/Iterable; bodyParts
	c ()Lfcx; createBodyLayer
fcb net/minecraft/client/model/VexModel
	a root
	b body
	f rightArm
	g leftArm
	h rightWing
	i leftWing
	j head
	a ()Lfcr; root
	a (Lehe;Z)V offsetStackPosition
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/EnumMainHand;Lehe;)V translateToHand
	a (Lnet/minecraft/world/entity/monster/EntityVex;FFFFF)V setupAnim
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;F)V setArmsCharging
	b ()Lfcx; createBodyLayer
fcc net/minecraft/client/model/VillagerHeadModel
	a (Z)V hatVisible
fcd net/minecraft/client/model/VillagerModel
	a nose
	b root
	f head
	g hat
	h hatRim
	i rightLeg
	j leftLeg
	a ()Lfcr; root
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Z)V hatVisible
	b ()Lfcz; createBodyModel
	d ()Lfcr; getHead
fce net/minecraft/client/model/WardenModel
	a bone
	b body
	f head
	g rightTendril
	h leftTendril
	i leftLeg
	j leftArm
	k leftRibcage
	l rightArm
	m rightLeg
	n rightRibcage
	o DEFAULT_ARM_X_Y
	p DEFAULT_ARM_Z
	q root
	r tendrilsLayerModelParts
	s heartLayerModelParts
	t bioluminescentLayerModelParts
	u pulsatingSpotsLayerModelParts
	a ()Lfcr; root
	a (F)V animateIdlePose
	a (FF)V animateHeadLookTarget
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/monster/warden/Warden;FF)V animateTendrils
	a (Lnet/minecraft/world/entity/monster/warden/Warden;FFFFF)V setupAnim
	b ()Lfcx; createBodyLayer
	b (FF)V animateWalk
	c ()Ljava/util/List; getTendrilsLayerModelParts
	d ()Ljava/util/List; getHeartLayerModelParts
	e ()Ljava/util/List; getBioluminescentLayerModelParts
	f ()Ljava/util/List; getPulsatingSpotsLayerModelParts
	g ()V resetArmPoses
fcf net/minecraft/client/model/WaterPatchModel
	c ()Lfcr; waterPatch
fcg net/minecraft/client/model/WitchModel
	b holdingItem
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	b (Z)V setHoldingItem
	c ()Lfcx; createBodyLayer
	e ()Lfcr; getNose
fch net/minecraft/client/model/WitherBossModel
	a RIBCAGE
	b CENTER_HEAD
	f RIGHT_HEAD
	g LEFT_HEAD
	h RIBCAGE_X_ROT_OFFSET
	i TAIL_X_ROT_OFFSET
	j root
	k centerHead
	l rightHead
	m leftHead
	n ribcage
	o tail
	a ()Lfcr; root
	a (Lfcv;)Lfcx; createBodyLayer
	a (Lnet/minecraft/world/entity/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/boss/wither/EntityWither;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/boss/wither/EntityWither;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/boss/wither/EntityWither;Lfcr;I)V setupHeadRotation
fci net/minecraft/client/model/WolfModel
	a REAL_HEAD
	b UPPER_BODY
	f REAL_TAIL
	g head
	h realHead
	i body
	j rightHindLeg
	k leftHindLeg
	l rightFrontLeg
	m leftFrontLeg
	n tail
	o realTail
	p upperBody
	q LEG_SIZE
	a ()Ljava/lang/Iterable; headParts
	a (Lnet/minecraft/world/entity/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/animal/EntityWolf;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/animal/EntityWolf;FFFFF)V setupAnim
	b ()Ljava/lang/Iterable; bodyParts
	c ()Lfcx; createBodyLayer
fcj net/minecraft/client/model/ZombieModel
	a (Lnet/minecraft/world/entity/monster/EntityMonster;)Z isAggressive
	a (Lnet/minecraft/world/entity/monster/EntityZombie;)Z isAggressive
fck net/minecraft/client/model/ZombieVillagerModel
	a hatRim
	a (Lfcv;)Lfcx; createArmorLayer
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/EntityLiving;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/monster/EntityZombie;FFFFF)V setupAnim
	a (Z)V hatVisible
	c ()Lfcx; createBodyLayer
fcl net/minecraft/client/model/dragon/DragonHeadModel
	a head
	b jaw
	a ()Lfcx; createHeadLayer
	a (FFF)V setupAnim
	a (Lehe;Lehi;IIFFFF)V renderToBuffer
fcn net/minecraft/client/model/geom/EntityModelSet
	a roots
	a (Lfcp;)Lfcr; bakeLayer
	a (Lnet/minecraft/server/packs/resources/IResourceManager;)V onResourceManagerReload
fco net/minecraft/client/model/geom/LayerDefinitions
	a FISH_PATTERN_DEFORMATION
	b OUTER_ARMOR_DEFORMATION
	c INNER_ARMOR_DEFORMATION
	a ()Ljava/util/Map; createRoots
fcp net/minecraft/client/model/geom/ModelLayerLocation
	a model
	b layer
	a ()Lnet/minecraft/resources/MinecraftKey; getModel
	b ()Ljava/lang/String; getLayer
fcq net/minecraft/client/model/geom/ModelLayers
	A COW
	B CREEPER
	C CREEPER_ARMOR
	D CREEPER_HEAD
	E DECORATED_POT_BASE
	F DECORATED_POT_SIDES
	G DOLPHIN
	H DONKEY
	I DOUBLE_CHEST_LEFT
	J DOUBLE_CHEST_RIGHT
	K DRAGON_SKULL
	L DROWNED
	M DROWNED_INNER_ARMOR
	N DROWNED_OUTER_ARMOR
	O DROWNED_OUTER_LAYER
	P ELDER_GUARDIAN
	Q ELYTRA
	R ENDERMAN
	S ENDERMITE
	T ENDER_DRAGON
	U END_CRYSTAL
	V EVOKER
	W EVOKER_FANGS
	X FOX
	Y FROG
	Z FURNACE_MINECART
	a ALLAY
	aA PARROT
	aB PHANTOM
	aC PIG
	aD PIGLIN
	aE PIGLIN_BRUTE
	aF PIGLIN_BRUTE_INNER_ARMOR
	aG PIGLIN_BRUTE_OUTER_ARMOR
	aH PIGLIN_HEAD
	aI PIGLIN_INNER_ARMOR
	aJ PIGLIN_OUTER_ARMOR
	aK PIG_SADDLE
	aL PILLAGER
	aM PLAYER
	aN PLAYER_HEAD
	aO PLAYER_INNER_ARMOR
	aP PLAYER_OUTER_ARMOR
	aQ PLAYER_SLIM
	aR PLAYER_SLIM_INNER_ARMOR
	aS PLAYER_SLIM_OUTER_ARMOR
	aT PLAYER_SPIN_ATTACK
	aU POLAR_BEAR
	aV PUFFERFISH_BIG
	aW PUFFERFISH_MEDIUM
	aX PUFFERFISH_SMALL
	aY RABBIT
	aZ RAVAGER
	aa GHAST
	ab GIANT
	ac GIANT_INNER_ARMOR
	ad GIANT_OUTER_ARMOR
	ae GLOW_SQUID
	af GOAT
	ag GUARDIAN
	ah HOGLIN
	ai HOPPER_MINECART
	aj HORSE
	ak HORSE_ARMOR
	al HUSK
	am HUSK_INNER_ARMOR
	an HUSK_OUTER_ARMOR
	ao ILLUSIONER
	ap IRON_GOLEM
	aq LEASH_KNOT
	ar LLAMA
	as LLAMA_DECOR
	at LLAMA_SPIT
	au MAGMA_CUBE
	av MINECART
	aw MOOSHROOM
	ax MULE
	ay OCELOT
	az PANDA
	b ARMOR_STAND
	bA TNT_MINECART
	bB TRADER_LLAMA
	bC TRIDENT
	bD TROPICAL_FISH_LARGE
	bE TROPICAL_FISH_LARGE_PATTERN
	bF TROPICAL_FISH_SMALL
	bG TROPICAL_FISH_SMALL_PATTERN
	bH TURTLE
	bI VEX
	bJ VILLAGER
	bK VINDICATOR
	bL WARDEN
	bM WANDERING_TRADER
	bN WITCH
	bO WITHER
	bP WITHER_ARMOR
	bQ WITHER_SKELETON
	bR WITHER_SKELETON_INNER_ARMOR
	bS WITHER_SKELETON_OUTER_ARMOR
	bT WITHER_SKELETON_SKULL
	bU WITHER_SKULL
	bV WOLF
	bW ZOGLIN
	bX ZOMBIE
	bY ZOMBIE_HEAD
	bZ ZOMBIE_HORSE
	ba SALMON
	bb SHEEP
	bc SHEEP_FUR
	bd SHIELD
	be SHULKER
	bf SHULKER_BULLET
	bg SILVERFISH
	bh SKELETON
	bi SKELETON_HORSE
	bj SKELETON_INNER_ARMOR
	bk SKELETON_OUTER_ARMOR
	bl SKELETON_SKULL
	bm SLIME
	bn SLIME_OUTER
	bo SNIFFER
	bp SNOW_GOLEM
	bq SPAWNER_MINECART
	br SPIDER
	bs SQUID
	bt STRAY
	bu STRAY_INNER_ARMOR
	bv STRAY_OUTER_ARMOR
	bw STRAY_OUTER_LAYER
	bx STRIDER
	by STRIDER_SADDLE
	bz TADPOLE
	c ARMOR_STAND_INNER_ARMOR
	ca ZOMBIE_INNER_ARMOR
	cb ZOMBIE_OUTER_ARMOR
	cc ZOMBIE_VILLAGER
	cd ZOMBIE_VILLAGER_INNER_ARMOR
	ce ZOMBIE_VILLAGER_OUTER_ARMOR
	cf ZOMBIFIED_PIGLIN
	cg ZOMBIFIED_PIGLIN_INNER_ARMOR
	ch ZOMBIFIED_PIGLIN_OUTER_ARMOR
	ci DEFAULT_LAYER
	cj ALL_MODELS
	d ARMOR_STAND_OUTER_ARMOR
	e AXOLOTL
	f BANNER
	g BAT
	h BED_FOOT
	i BED_HEAD
	j BEE
	k BELL
	l BLAZE
	m BOOK
	n CAT
	o CAT_COLLAR
	p CAMEL
	q CAVE_SPIDER
	r CHEST
	s CHEST_MINECART
	t CHICKEN
	u COD
	v COMMAND_BLOCK_MINECART
	w CONDUIT_CAGE
	x CONDUIT_EYE
	y CONDUIT_SHELL
	z CONDUIT_WIND
	a ()Ljava/util/stream/Stream; getKnownLocations
	a (Ljava/lang/String;)Lfcp; register
	a (Ljava/lang/String;Ljava/lang/String;)Lfcp; register
	a (Lnet/minecraft/world/entity/vehicle/EntityBoat$EnumBoatType;)Lfcp; createRaftModelName
	a (Lnet/minecraft/world/level/block/state/properties/BlockPropertyWood;)Lfcp; createSignModelName
	b (Ljava/lang/String;)Lfcp; registerInnerArmor
	b (Ljava/lang/String;Ljava/lang/String;)Lfcp; createLocation
	b (Lnet/minecraft/world/entity/vehicle/EntityBoat$EnumBoatType;)Lfcp; createChestRaftModelName
	b (Lnet/minecraft/world/level/block/state/properties/BlockPropertyWood;)Lfcp; createHangingSignModelName
	c (Ljava/lang/String;)Lfcp; registerOuterArmor
	c (Lnet/minecraft/world/entity/vehicle/EntityBoat$EnumBoatType;)Lfcp; createBoatModelName
	d (Lnet/minecraft/world/entity/vehicle/EntityBoat$EnumBoatType;)Lfcp; createChestBoatModelName
fcr net/minecraft/client/model/geom/ModelPart
	a DEFAULT_SCALE
	b x
	c y
	d z
	e xRot
	f yRot
	g zRot
	h xScale
	i yScale
	j zScale
	k visible
	l skipDraw
	m cubes
	n children
	o initialPose
	a ()Lfct; storePose
	a (FFF)V setPos
	a (Lehe$a;Lehi;IIFFFF)V compile
	a (Lehe;)V translateAndRotate
	a (Lehe;Lehi;II)V render
	a (Lehe;Lehi;IIFFFF)V render
	a (Lehe;Lfcr$d;)V visit
	a (Lehe;Lfcr$d;Ljava/lang/String;)V visit
	a (Lfcr;)V copyFrom
	a (Lfct;)V setInitialPose
	a (Ljava/lang/String;)Z hasChild
	a (Lnet/minecraft/util/RandomSource;)Lfcr$a; getRandomCube
	a (Lorg/joml/Vector3f;)V offsetPos
	b ()Lfct; getInitialPose
	b (FFF)V setRotation
	b (Lfct;)V loadPose
	b (Ljava/lang/String;)Lfcr; getChild
	b (Lorg/joml/Vector3f;)V offsetRotation
	c ()V resetPose
	c (Lorg/joml/Vector3f;)V offsetScale
	d ()Z isEmpty
	e ()Ljava/util/stream/Stream; getAllParts
fcr$a net/minecraft/client/model/geom/ModelPart$Cube
	a minX
	b minY
	c minZ
	d maxX
	e maxY
	f maxZ
	g polygons
	a (Lehe$a;Lehi;IIFFFF)V compile
fcr$b net/minecraft/client/model/geom/ModelPart$Polygon
	a vertices
	b normal
fcr$c net/minecraft/client/model/geom/ModelPart$Vertex
	a pos
	b u
	c v
	a (FF)Lfcr$c; remap
fcr$d net/minecraft/client/model/geom/ModelPart$Visitor
fcs net/minecraft/client/model/geom/PartNames
	A RIGHT_HIND_FOOT
	B LEFT_FRONT_FOOT
	C RIGHT_FRONT_FOOT
	D LEFT_HIND_LEG_TIP
	E RIGHT_HIND_LEG_TIP
	F LEFT_FRONT_LEG_TIP
	G RIGHT_FRONT_LEG_TIP
	H LEFT_LID
	I RIGHT_LID
	J LEFT_CHEST
	K RIGHT_CHEST
	L LEFT_HORN
	M RIGHT_HORN
	N LEFT_EYE
	O RIGHT_EYE
	P JAW
	Q NOSE
	R ARMS
	S TAIL
	T CUBE
	U BEAK
	V BACK_FIN
	W MANE
	X NECK
	Y MOUTH
	Z HEAD
	a LEFT_FIN
	aa HAT
	ab BODY
	ac HAT_RIM
	ad JACKET
	ae TOP_GILLS
	af LEFT_GILLS
	ag RIGHT_GILLS
	ah ROOT
	ai CROAKING_BODY
	aj TONGUE
	ak TONGUE_R1
	al LEFT_HAND
	am RIGHT_HAND
	an LEFT_FOOT
	ao RIGHT_FOOT
	ap EYES
	aq RIGHT_TENDRIL
	ar LEFT_TENDRIL
	as RIGHT_RIBCAGE
	at LEFT_RIBCAGE
	au BONE
	b RIGHT_FIN
	c TOP_FIN
	d BOTTOM_FIN
	e TAIL_FIN
	f LEFT_BLUE_FIN
	g RIGHT_BLUE_FIN
	h LEFT_ARM
	i RIGHT_ARM
	j LEFT_WING
	k RIGHT_WING
	l LEFT_WING_BASE
	m RIGHT_WING_BASE
	n LEFT_WING_TIP
	o RIGHT_WING_TIP
	p LEFT_EAR
	q RIGHT_EAR
	r LEFT_LEG
	s RIGHT_LEG
	t LEFT_HIND_LEG
	u RIGHT_HIND_LEG
	v LEFT_MID_LEG
	w RIGHT_MID_LEG
	x LEFT_FRONT_LEG
	y RIGHT_FRONT_LEG
	z LEFT_HIND_FOOT
fct net/minecraft/client/model/geom/PartPose
	a ZERO
	b x
	c y
	d z
	e xRot
	f yRot
	g zRot
	a (FFF)Lfct; offset
	a (FFFFFF)Lfct; offsetAndRotation
	b (FFF)Lfct; rotation
fcu net/minecraft/client/model/geom/builders/CubeDefinition
	a comment
	b origin
	c dimensions
	d grow
	e mirror
	f texCoord
	g texScale
	h visibleFaces
	a (II)Lfcr$a; bake
fcv net/minecraft/client/model/geom/builders/CubeDeformation
	a NONE
	b growX
	c growY
	d growZ
	a (F)Lfcv; extend
	a (FFF)Lfcv; extend
fcw net/minecraft/client/model/geom/builders/CubeListBuilder
	a ALL_VISIBLE
	b cubes
	c xTexOffs
	d yTexOffs
	e mirror
	a ()Lfcw; mirror
	a (FFFFFF)Lfcw; addBox
	a (FFFFFFLfcv;)Lfcw; addBox
	a (FFFFFFLfcv;FF)Lfcw; addBox
	a (FFFFFFLjava/util/Set;)Lfcw; addBox
	a (FFFFFFZ)Lfcw; addBox
	a (II)Lfcw; texOffs
	a (Ljava/lang/String;FFFFFF)Lfcw; addBox
	a (Ljava/lang/String;FFFFFFLfcv;)Lfcw; addBox
	a (Ljava/lang/String;FFFIIIII)Lfcw; addBox
	a (Ljava/lang/String;FFFIIILfcv;II)Lfcw; addBox
	a (Z)Lfcw; mirror
	b ()Ljava/util/List; getCubes
	c ()Lfcw; create
fcx net/minecraft/client/model/geom/builders/LayerDefinition
	a mesh
	b material
	a ()Lfcr; bakeRoot
	a (Lfcz;II)Lfcx; create
fcy net/minecraft/client/model/geom/builders/MaterialDefinition
	a xTexSize
	b yTexSize
fcz net/minecraft/client/model/geom/builders/MeshDefinition
	a root
	a ()Lfda; getRoot
fd$a net/minecraft/commands/arguments/blocks/BlockPredicateArgument$BlockPredicate
	a state
	b properties
	c nbt
	a ()Z requiresNbt
	a (Lnet/minecraft/world/level/block/state/pattern/ShapeDetectorBlock;)Z test
fd$b net/minecraft/commands/arguments/blocks/BlockPredicateArgument$Result
	a ()Z requiresNbt
fd$c net/minecraft/commands/arguments/blocks/BlockPredicateArgument$TagPredicate
	a tag
	b nbt
	c vagueProperties
	a ()Z requiresNbt
	a (Lnet/minecraft/world/level/block/state/pattern/ShapeDetectorBlock;)Z test
fda net/minecraft/client/model/geom/builders/PartDefinition
	a cubes
	b partPose
	c children
	a (II)Lfcr; bake
	a (Ljava/lang/String;)Lfda; getChild
	a (Ljava/lang/String;Lfcw;Lfct;)Lfda; addOrReplaceChild
fdb net/minecraft/client/model/geom/builders/UVPair
	a u
	b v
	a ()F u
	b ()F v
fdf net/minecraft/client/multiplayer/AccountProfileKeyPairManager
	b LOGGER
	c MINIMUM_PROFILE_KEY_REFRESH_INTERVAL
	d PROFILE_KEY_PAIR_DIR
	e userApiService
	f profileKeyPairPath
	g keyPair
	h nextProfileKeyRefreshTime
	a ()Ljava/util/concurrent/CompletableFuture; prepareKeyPair
	a (Lbyo;)V writeProfileKeyPair
	a (Lcom/mojang/authlib/minecraft/UserApiService;)Lbyo; fetchProfileKeyPair
	a (Lcom/mojang/authlib/yggdrasil/response/KeyPairResponse;)Lbyp$a; parsePublicKey
	a (Ljava/util/Optional;)Ljava/util/concurrent/CompletableFuture; readOrFetchProfileKeyPair
	b ()Z shouldRefreshKeyPair
	c ()Ljava/util/Optional; readProfileKeyPair
fdg net/minecraft/client/multiplayer/ClientAdvancements
	a LOGGER
	b minecraft
	c advancements
	d progress
	e listener
	f selectedTab
	a ()Lnet/minecraft/advancements/Advancements; getAdvancements
	a (Lfdg$a;)V setListener
	a (Lnet/minecraft/advancements/Advancement;Z)V setSelectedTab
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutAdvancements;)V update
fdg$a net/minecraft/client/multiplayer/ClientAdvancements$Listener
	a (Lnet/minecraft/advancements/Advancement;Lnet/minecraft/advancements/AdvancementProgress;)V onUpdateAdvancementProgress
	e (Lnet/minecraft/advancements/Advancement;)V onSelectedTabChanged
fdh net/minecraft/client/multiplayer/ClientChunkCache
	a LOGGER
	b emptyChunk
	c lightEngine
	d storage
	e level
	a (I)V updateViewRadius
	a (IILnet/minecraft/network/PacketDataSerializer;)V replaceBiomes
	a (IILnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/nbt/NBTTagCompound;Ljava/util/function/Consumer;)Lnet/minecraft/world/level/chunk/Chunk; replaceWithPacketData
	a (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/IChunkAccess; getChunk
	a (Ljava/util/function/BooleanSupplier;Z)V tick
	a (Lnet/minecraft/world/level/EnumSkyBlock;Lnet/minecraft/core/SectionPosition;)V onLightUpdate
	a (Lnet/minecraft/world/level/chunk/Chunk;II)Z isValidChunk
	b (I)I calculateStorageRange
	b (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/Chunk; getChunk
	d (II)V drop
	e ()Ljava/lang/String; gatherStats
	e (II)V updateViewCenter
	j ()I getLoadedChunksCount
	p ()Lnet/minecraft/world/level/lighting/LightEngine; getLightEngine
	q ()Lnet/minecraft/world/level/IBlockAccess; getLevel
fdh$a net/minecraft/client/multiplayer/ClientChunkCache$Storage
	b chunks
	c chunkRadius
	d viewRange
	e viewCenterX
	f viewCenterZ
	g chunkCount
	a (I)Lnet/minecraft/world/level/chunk/Chunk; getChunk
	a (II)I getIndex
	a (ILnet/minecraft/world/level/chunk/Chunk;)V replace
	a (ILnet/minecraft/world/level/chunk/Chunk;Lnet/minecraft/world/level/chunk/Chunk;)Lnet/minecraft/world/level/chunk/Chunk; replace
	a (Ljava/lang/String;)V dumpChunks
	b (II)Z inRange
fdi net/minecraft/client/multiplayer/ClientHandshakePacketListenerImpl
	a LOGGER
	b minecraft
	c serverData
	d parent
	e updateStatus
	f connection
	g localGameProfile
	h newWorld
	i worldLoadDuration
	a ()Z isAcceptingMessages
	a (Ljava/lang/String;)Lnet/minecraft/network/chat/IChatBaseComponent; authenticateServer
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V onDisconnect
	a (Lnet/minecraft/network/protocol/login/PacketLoginOutCustomPayload;)V handleCustomQuery
	a (Lnet/minecraft/network/protocol/login/PacketLoginOutDisconnect;)V handleDisconnect
	a (Lnet/minecraft/network/protocol/login/PacketLoginOutEncryptionBegin;)V handleHello
	a (Lnet/minecraft/network/protocol/login/PacketLoginOutSetCompression;)V handleCompression
	a (Lnet/minecraft/network/protocol/login/PacketLoginOutSuccess;)V handleGameProfile
	c ()Lcom/mojang/authlib/minecraft/MinecraftSessionService; getMinecraftSessionService
fdj net/minecraft/client/multiplayer/ClientLevel
	C connection
	D levelRenderer
	E clientLevelData
	F effects
	G minecraft
	H players
	I scoreboard
	J mapData
	K CLOUD_COLOR
	L skyFlashTime
	M tintCaches
	N chunkSource
	O lightUpdateQueue
	P serverSimulationDistance
	Q blockStatePredictionHandler
	R MARKER_PARTICLE_ITEMS
	a LOGGER
	b FLUID_PARTICLE_SPAWN_OFFSET
	c NORMAL_LIGHT_UPDATES_PER_FRAME
	d LIGHT_UPDATE_QUEUE_SIZE_THRESHOLD
	e tickingEntities
	f entityStorage
	E ()Lnet/minecraft/world/level/entity/LevelEntityGetter; getEntities
	F ()Ljava/lang/String; gatherChunkSourceStats
	G ()Lnet/minecraft/world/flag/FeatureFlagSet; enabledFeatures
	H ()Lnet/minecraft/world/scores/Scoreboard; getScoreboard
	I ()Lnet/minecraft/world/level/chunk/IChunkProvider; getChunkSource
	J ()Lnet/minecraft/world/ticks/LevelTickAccess; getFluidTicks
	K ()Lnet/minecraft/world/ticks/LevelTickAccess; getBlockTicks
	T ()V disconnect
	a ()Lfei; getBlockStatePredictionHandler
	a (DDDDDDLnet/minecraft/nbt/NBTTagCompound;)V createFireworks
	a (DDDDDLnet/minecraft/core/particles/ParticleParam;)V spawnFluidParticle
	a (DDDLnet/minecraft/sounds/SoundEffect;Lnet/minecraft/sounds/SoundCategory;FFZ)V playLocalSound
	a (DDDLnet/minecraft/sounds/SoundEffect;Lnet/minecraft/sounds/SoundCategory;FFZJ)V playSound
	a (I)Lnet/minecraft/world/entity/Entity; getEntity
	a (III)Lnet/minecraft/core/Holder; getUncachedNoiseBiome
	a (IIIILnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;)V doAnimateTick
	a (ILfhh;)V addPlayer
	a (ILnet/minecraft/core/BlockPosition;I)V destroyBlockProgress
	a (ILnet/minecraft/world/entity/Entity$RemovalReason;)V removeEntity
	a (ILnet/minecraft/world/entity/Entity;)V putNonPlayerEntity
	a (Ljava/lang/Runnable;)V queueLightUpdate
	a (Ljava/lang/String;)Lnet/minecraft/world/level/saveddata/maps/WorldMap; getMapData
	a (Ljava/lang/String;Lnet/minecraft/world/level/saveddata/maps/WorldMap;)V setMapData
	a (Ljava/util/Map;)V addMapData
	a (Ljava/util/function/BooleanSupplier;)V tick
	a (Lnet/minecraft/CrashReport;)Lnet/minecraft/CrashReportSystemDetails; fillReportDetails
	a (Lnet/minecraft/core/BlockPosition;F)V setDefaultSpawnPos
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/particles/ParticleParam;Lnet/minecraft/world/phys/shapes/VoxelShape;D)V spawnParticle
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/ColorResolver;)I getBlockTint
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V addDestroyBlockEffect
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;II)Z setBlock
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/particles/ParticleParam;Z)V trySpawnDripParticles
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;I)V sendBlockUpdated
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/phys/Vec3D;)V syncBlockState
	a (Lnet/minecraft/core/EnumDirection;Z)F getShade
	a (Lnet/minecraft/core/particles/ParticleParam;DDDDDD)V addParticle
	a (Lnet/minecraft/core/particles/ParticleParam;ZDDDDDD)V addParticle
	a (Lnet/minecraft/network/protocol/Packet;)V sendPacketToServer
	a (Lnet/minecraft/world/entity/Entity;)V tickNonPassenger
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)V tickPassenger
	a (Lnet/minecraft/world/entity/player/EntityHuman;DDDLnet/minecraft/core/Holder;Lnet/minecraft/sounds/SoundCategory;FFJ)V playSeededSound
	a (Lnet/minecraft/world/entity/player/EntityHuman;ILnet/minecraft/core/BlockPosition;I)V levelEvent
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Holder;Lnet/minecraft/sounds/SoundCategory;FFJ)V playSeededSound
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;)V onChunkLoaded
	a (Lnet/minecraft/world/level/chunk/Chunk;)V unload
	a (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/phys/Vec3D;Ldga$a;)V gameEvent
	a (Lnet/minecraft/world/phys/Vec3D;F)Lnet/minecraft/world/phys/Vec3D; getSkyColor
	a (Lnet/minecraft/world/scores/Scoreboard;)V setScoreboard
	b ()V pollLightUpdates
	b (I)V handleBlockChangedAck
	b (II)Z hasChunk
	b (III)V animateTick
	b (ILnet/minecraft/core/BlockPosition;I)V globalLevelEvent
	b (ILnet/minecraft/world/entity/Entity;)V addEntity
	b (J)V setGameTime
	b (Ljava/lang/String;Lnet/minecraft/world/level/saveddata/maps/WorldMap;)V overrideMapData
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/ColorResolver;)I calculateBlockTint
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;I)V setServerVerifiedBlockState
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;)V setBlocksDirty
	b (Lnet/minecraft/core/particles/ParticleParam;DDDDDD)V addAlwaysVisibleParticle
	b (Lnet/minecraft/core/particles/ParticleParam;ZDDDDDD)V addAlwaysVisibleParticle
	c ()Z isLightUpdateQueueEmpty
	c (I)V setSkyFlashTime
	c (III)V setSectionDirtyWithNeighbors
	c (J)V setDayTime
	d ()Lfhv; effects
	e ()Ljava/lang/Iterable; entitiesForRendering
	f ()V tickEntities
	g ()V clearTintCaches
	g (F)F getSkyDarken
	g (II)V setLightReady
	h ()I getEntityCount
	h (F)Lnet/minecraft/world/phys/Vec3D; getCloudColor
	h (I)V setServerSimulationDistance
	h (Lnet/minecraft/world/entity/Entity;)Z shouldTickDeath
	i ()Lfdh; getChunkSource
	i (F)F getStarBrightness
	j ()I getSkyFlashTime
	k ()Lfdj$a; getLevelData
	l ()Ljava/util/Map; getAllMapData
	m ()I getServerSimulationDistance
	n_ ()Lnet/minecraft/world/level/storage/WorldData; getLevelData
	o ()V tickTime
	p ()Lnet/minecraft/world/level/block/Block; getMarkerParticleTarget
	q ()Lnet/minecraft/world/item/crafting/CraftingManager; getRecipeManager
	t ()I getFreeMapId
	v ()Ljava/util/List; players
fdj$a net/minecraft/client/multiplayer/ClientLevel$ClientLevelData
	a hardcore
	b gameRules
	c isFlat
	d xSpawn
	e ySpawn
	f zSpawn
	g spawnAngle
	h gameTime
	i dayTime
	j raining
	k difficulty
	l difficultyLocked
	a ()I getXSpawn
	a (F)V setSpawnAngle
	a (J)V setGameTime
	a (Lnet/minecraft/CrashReportSystemDetails;Lnet/minecraft/world/level/LevelHeightAccessor;)V fillCrashReportCategory
	a (Lnet/minecraft/core/BlockPosition;F)V setSpawn
	a (Lnet/minecraft/world/EnumDifficulty;)V setDifficulty
	a (Lnet/minecraft/world/level/LevelHeightAccessor;)D getHorizonHeight
	a (Z)V setDifficultyLocked
	b ()I getYSpawn
	b (I)V setXSpawn
	b (J)V setDayTime
	b (Z)V setRaining
	c ()I getZSpawn
	c (I)V setYSpawn
	d ()F getSpawnAngle
	d (I)V setZSpawn
	e ()J getGameTime
	f ()J getDayTime
	g ()F getClearColorScale
	i ()Z isThundering
	k ()Z isRaining
	n ()Z isHardcore
	q ()Lnet/minecraft/world/level/GameRules; getGameRules
	s ()Lnet/minecraft/world/EnumDifficulty; getDifficulty
	t ()Z isDifficultyLocked
fdj$b net/minecraft/client/multiplayer/ClientLevel$EntityCallbacks
	a (Ljava/lang/Object;)V onSectionChange
	a (Lnet/minecraft/world/entity/Entity;)V onCreated
	b (Ljava/lang/Object;)V onTrackingEnd
	b (Lnet/minecraft/world/entity/Entity;)V onDestroyed
	c (Ljava/lang/Object;)V onTrackingStart
	c (Lnet/minecraft/world/entity/Entity;)V onTickingStart
	d (Ljava/lang/Object;)V onTickingEnd
	d (Lnet/minecraft/world/entity/Entity;)V onTickingEnd
	e (Ljava/lang/Object;)V onTickingStart
	e (Lnet/minecraft/world/entity/Entity;)V onTrackingStart
	f (Ljava/lang/Object;)V onDestroyed
	f (Lnet/minecraft/world/entity/Entity;)V onTrackingEnd
	g (Ljava/lang/Object;)V onCreated
	g (Lnet/minecraft/world/entity/Entity;)V onSectionChange
fdk net/minecraft/client/multiplayer/ClientPacketListener
	A levels
	B registryAccess
	C enabledFeatures
	D telemetryManager
	E chatSession
	F signedMessageEncoder
	G lastSeenMessages
	H messageSignatureCache
	a LOGGER
	b GENERIC_DISCONNECT_MESSAGE
	c UNSECURE_SERVER_TOAST_TITLE
	d UNSERURE_SERVER_TOAST
	e INVALID_PACKET
	f CHAT_VALIDATION_FAILED_ERROR
	g PENDING_OFFSET_THRESHOLD
	h connection
	i deferredPackets
	j serverData
	k localGameProfile
	l callbackScreen
	m minecraft
	n level
	o levelData
	p playerInfoMap
	q listedPlayers
	r advancements
	s suggestionsProvider
	t debugQueryHandler
	u serverChunkRadius
	v serverSimulationDistance
	w random
	x commands
	y recipeManager
	z id
	a ()Z isAcceptingMessages
	a (IILnet/minecraft/network/protocol/game/ClientboundLevelChunkPacketData;)V updateLevelChunk
	a (IILnet/minecraft/network/protocol/game/ClientboundLightUpdatePacketData;)V queueLightUpdate
	a (IILnet/minecraft/world/level/lighting/LightEngine;Lnet/minecraft/world/level/EnumSkyBlock;Ljava/util/BitSet;Ljava/util/BitSet;Ljava/util/Iterator;Z)V readSectionList
	a (Lbyo;)V setKeyPair
	a (Ljava/lang/String;)Lfdo; getPlayerInfo
	a (Ljava/util/UUID;)Lfdo; getPlayerInfo
	a (Ljava/util/concurrent/CompletableFuture;)V downloadCallback
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V onDisconnect
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Lnet/minecraft/network/chat/IChatBaseComponent;)Lnet/minecraft/network/chat/IChatBaseComponent; preparePackPrompt
	a (Lnet/minecraft/network/chat/PlayerChatMessage;Z)V markMessageAsProcessed
	a (Lnet/minecraft/network/protocol/Packet;)V send
	a (Lnet/minecraft/network/protocol/Packet;Ljava/util/function/BooleanSupplier;Ljava/time/Duration;)V sendWhen
	a (Lnet/minecraft/network/protocol/game/ClientboundBlockChangedAckPacket;)V handleBlockChangedAck
	a (Lnet/minecraft/network/protocol/game/ClientboundBundlePacket;)V handleBundlePacket
	a (Lnet/minecraft/network/protocol/game/ClientboundChunksBiomesPacket;)V handleChunksBiomes
	a (Lnet/minecraft/network/protocol/game/ClientboundClearTitlesPacket;)V handleTitlesClear
	a (Lnet/minecraft/network/protocol/game/ClientboundCustomChatCompletionsPacket;)V handleCustomChatCompletions
	a (Lnet/minecraft/network/protocol/game/ClientboundDamageEventPacket;)V handleDamageEvent
	a (Lnet/minecraft/network/protocol/game/ClientboundDeleteChatPacket;)V handleDeleteChat
	a (Lnet/minecraft/network/protocol/game/ClientboundDisguisedChatPacket;)V handleDisguisedChat
	a (Lnet/minecraft/network/protocol/game/ClientboundHurtAnimationPacket;)V handleHurtAnimation
	a (Lnet/minecraft/network/protocol/game/ClientboundInitializeBorderPacket;)V handleInitializeBorder
	a (Lnet/minecraft/network/protocol/game/ClientboundLevelChunkWithLightPacket;)V handleLevelChunkWithLight
	a (Lnet/minecraft/network/protocol/game/ClientboundPingPacket;)V handlePing
	a (Lnet/minecraft/network/protocol/game/ClientboundPlayerChatPacket;)V handlePlayerChat
	a (Lnet/minecraft/network/protocol/game/ClientboundPlayerCombatEndPacket;)V handlePlayerCombatEnd
	a (Lnet/minecraft/network/protocol/game/ClientboundPlayerCombatEnterPacket;)V handlePlayerCombatEnter
	a (Lnet/minecraft/network/protocol/game/ClientboundPlayerCombatKillPacket;)V handlePlayerCombatKill
	a (Lnet/minecraft/network/protocol/game/ClientboundPlayerInfoRemovePacket;)V handlePlayerInfoRemove
	a (Lnet/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket;)V handlePlayerInfoUpdate
	a (Lnet/minecraft/network/protocol/game/ClientboundServerDataPacket;)V handleServerData
	a (Lnet/minecraft/network/protocol/game/ClientboundSetActionBarTextPacket;)V setActionBarText
	a (Lnet/minecraft/network/protocol/game/ClientboundSetBorderCenterPacket;)V handleSetBorderCenter
	a (Lnet/minecraft/network/protocol/game/ClientboundSetBorderLerpSizePacket;)V handleSetBorderLerpSize
	a (Lnet/minecraft/network/protocol/game/ClientboundSetBorderSizePacket;)V handleSetBorderSize
	a (Lnet/minecraft/network/protocol/game/ClientboundSetBorderWarningDelayPacket;)V handleSetBorderWarningDelay
	a (Lnet/minecraft/network/protocol/game/ClientboundSetBorderWarningDistancePacket;)V handleSetBorderWarningDistance
	a (Lnet/minecraft/network/protocol/game/ClientboundSetSimulationDistancePacket;)V handleSetSimulationDistance
	a (Lnet/minecraft/network/protocol/game/ClientboundSetSubtitleTextPacket;)V setSubtitleText
	a (Lnet/minecraft/network/protocol/game/ClientboundSetTitleTextPacket;)V setTitleText
	a (Lnet/minecraft/network/protocol/game/ClientboundSetTitlesAnimationPacket;)V setTitlesAnimation
	a (Lnet/minecraft/network/protocol/game/ClientboundSystemChatPacket;)V handleSystemChat
	a (Lnet/minecraft/network/protocol/game/ClientboundUpdateEnabledFeaturesPacket;)V handleEnabledFeatures
	a (Lnet/minecraft/network/protocol/game/PacketPlayInResourcePackStatus$EnumResourcePackStatus;)V send
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutAbilities;)V handlePlayerAbilities
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutAdvancements;)V handleUpdateAdvancementsPacket
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutAnimation;)V handleAnimate
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutAttachEntity;)V handleEntityLinkPacket
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutAutoRecipe;)V handlePlaceRecipe
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutBlockAction;)V handleBlockEvent
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutBlockBreakAnimation;)V handleBlockDestruction
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutBlockChange;)V handleBlockUpdate
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutBoss;)V handleBossUpdate
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutCamera;)V handleSetCamera
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutCloseWindow;)V handleContainerClose
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutCollect;)V handleTakeItemEntity
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutCommands;)V handleCommands
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutCustomPayload;)V handleCustomPayload
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutEntity;)V handleMoveEntity
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutEntityDestroy;)V handleRemoveEntities
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutEntityEffect;)V handleUpdateMobEffect
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutEntityEquipment;)V handleSetEquipment
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutEntityHeadRotation;)V handleRotateMob
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutEntityMetadata;)V handleSetEntityData
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutEntitySound;)V handleSoundEntityEvent
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutEntityStatus;)V handleEntityEvent
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutEntityTeleport;)V handleTeleportEntity
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutEntityVelocity;)V handleSetEntityMotion
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutExperience;)V handleSetExperience
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutExplosion;)V handleExplosion
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutGameStateChange;)V handleGameEvent
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutHeldItemSlot;)V handleSetCarriedItem
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutKeepAlive;)V handleKeepAlive
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutKickDisconnect;)V handleDisconnect
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutLightUpdate;)V handleLightUpdatePacket
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutLogin;)V handleLogin
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutLookAt;)V handleLookAt
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutMap;)V handleMapItemData
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutMount;)V handleSetEntityPassengersPacket
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutMultiBlockChange;)V handleChunkBlocksUpdate
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutNBTQuery;)V handleTagQueryPacket
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutNamedEntitySpawn;)V handleAddPlayer
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutNamedSoundEffect;)V handleSoundEvent
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutOpenBook;)V handleOpenBook
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutOpenSignEditor;)V handleOpenSignEditor
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutOpenWindow;)V handleOpenScreen
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutOpenWindowHorse;)V handleHorseScreenOpen
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutOpenWindowMerchant;)V handleMerchantOffers
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutPlayerListHeaderFooter;)V handleTabListCustomisation
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutPosition;)V handleMovePlayer
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutRecipeUpdate;)V handleUpdateRecipes
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutRecipes;)V handleAddOrRemoveRecipes
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutRemoveEntityEffect;)V handleRemoveMobEffect
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutResourcePackSend;)V handleResourcePack
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutRespawn;)V handleRespawn
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutScoreboardDisplayObjective;)V handleSetDisplayObjective
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutScoreboardObjective;)V handleAddObjective
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutScoreboardScore;)V handleSetScore
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutScoreboardTeam;)V handleSetPlayerTeamPacket
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutSelectAdvancementTab;)V handleSelectAdvancementsTab
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutServerDifficulty;)V handleChangeDifficulty
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutSetCooldown;)V handleItemCooldown
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutSetSlot;)V handleContainerSetSlot
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutSpawnEntity;)V handleAddEntity
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutSpawnEntityExperienceOrb;)V handleAddExperienceOrb
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutSpawnPosition;)V handleSetSpawn
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutStatistic;)V handleAwardStats
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutStopSound;)V handleStopSoundEvent
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutTabComplete;)V handleCommandSuggestions
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutTags;)V handleUpdateTags
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutTileEntityData;)V handleBlockEntityData
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutUnloadChunk;)V handleForgetLevelChunk
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutUpdateAttributes;)V handleUpdateAttributes
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutUpdateHealth;)V handleSetHealth
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutUpdateTime;)V handleSetTime
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutVehicleMove;)V handleMoveVehicle
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutViewCentre;)V handleSetChunkCacheCenter
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutViewDistance;)V handleSetChunkCacheRadius
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutWindowData;)V handleContainerSetData
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutWindowItems;)V handleContainerContent
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutWorldEvent;)V handleLevelEvent
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutWorldParticles;)V handleParticleEvent
	a (Lnet/minecraft/resources/ResourceKey;Lany$a;)V updateTagsForRegistry
	a (Lnet/minecraft/world/entity/Entity;)V postAddEntitySoundInstance
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Lnet/minecraft/world/item/ItemStack; findTotem
	a (Lnet/minecraft/world/flag/FeatureFlagSet;)Z isFeatureEnabled
	a (Lnet/minecraft/world/level/chunk/Chunk;II)V enableChunkLight
	a (Lxl$a;Lxl$b;Lfdo;)V applyPlayerInfoUpdate
	a (Lxl$b;Lfdo;)V initializeChatSession
	b (IILnet/minecraft/network/protocol/game/ClientboundLightUpdatePacketData;)V applyLightData
	b (Ljava/lang/String;)V sendChat
	b (Lnet/minecraft/network/protocol/game/PacketPlayOutUnloadChunk;)V queueLightUpdate
	c ()V tick
	c (Ljava/lang/String;)V sendCommand
	d ()Lfdm; getSuggestionsProvider
	d (Ljava/lang/String;)Z sendUnsignedCommand
	e ()V close
	e (Ljava/lang/String;)Ljava/net/URL; parseResourcePackUrl
	f ()Lnet/minecraft/world/item/crafting/CraftingManager; getRecipeManager
	f (Ljava/lang/String;)Lcom/mojang/brigadier/ParseResults; parseCommand
	g ()Lnet/minecraft/network/NetworkManager; getConnection
	h ()Ljava/util/Collection; getListedOnlinePlayers
	i ()Ljava/util/Collection; getOnlinePlayers
	j ()Ljava/util/Collection; getOnlinePlayerIds
	k ()Lcom/mojang/authlib/GameProfile; getLocalGameProfile
	l ()Lfdg; getAdvancements
	m ()Lcom/mojang/brigadier/CommandDispatcher; getCommands
	n ()Lfdj; getLevel
	o ()Lely; getDebugQueryHandler
	p ()Ljava/util/UUID; getId
	q ()Ljava/util/Set; levels
	r ()Lnet/minecraft/core/IRegistryCustom; registryAccess
	s ()Lfdq; getServerData
	t ()Lnet/minecraft/world/flag/FeatureFlagSet; enabledFeatures
	u ()Z enforcesSecureChat
	v ()V sendDeferredPackets
	w ()V sendChatAcknowledgement
fdk$a net/minecraft/client/multiplayer/ClientPacketListener$DeferredPacket
	a packet
	b sendCondition
	c expirationTime
	a ()Lnet/minecraft/network/protocol/Packet; packet
	b ()Ljava/util/function/BooleanSupplier; sendCondition
	c ()J expirationTime
fdl net/minecraft/client/multiplayer/ClientRegistryLayer
	a STATIC
	b REMOTE
	c VALUES
	d STATIC_ACCESS
	e $VALUES
	a ()Lnet/minecraft/core/LayeredRegistryAccess; createRegistryAccess
	b ()[Lfdl; $values
fdm net/minecraft/client/multiplayer/ClientSuggestionProvider
	a connection
	b minecraft
	c pendingSuggestionsId
	d pendingSuggestionsFuture
	e customCompletionSuggestions
	a (D)Ljava/lang/String; prettyPrint
	a (I)Ljava/lang/String; prettyPrint
	a (ILcom/mojang/brigadier/suggestion/Suggestions;)V completeCustomSuggestions
	a (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/concurrent/CompletableFuture; customSuggestion
	a (Lnet/minecraft/network/protocol/game/ClientboundCustomChatCompletionsPacket$Action;Ljava/util/List;)V modifyCustomCompletions
	a (Lnet/minecraft/resources/ResourceKey;Ldt$a;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/concurrent/CompletableFuture; suggestRegistryElements
	c (I)Z hasPermission
	p ()Ljava/util/Collection; getOnlinePlayerNames
	q ()Ljava/util/Collection; getAllTeams
	r ()Ljava/util/stream/Stream; getAvailableSounds
	s ()Ljava/util/stream/Stream; getRecipeNames
	t ()Ljava/util/Set; levels
	u ()Lnet/minecraft/core/IRegistryCustom; registryAccess
	v ()Lnet/minecraft/world/flag/FeatureFlagSet; enabledFeatures
	w ()Ljava/util/Collection; getCustomTabSugggestions
	x ()Ljava/util/Collection; getSelectedEntities
	y ()Ljava/util/Collection; getRelevantCoordinates
	z ()Ljava/util/Collection; getAbsoluteCoordinates
fdn net/minecraft/client/multiplayer/MultiPlayerGameMode
	a LOGGER
	b minecraft
	c connection
	d destroyBlockPos
	e destroyingItem
	f destroyProgress
	g destroyTicks
	h destroyDelay
	i isDestroying
	j localPlayerMode
	k previousLocalPlayerMode
	l carriedIndex
	a ()Z canHurtPlayer
	a (I)V handlePickItem
	a (II)V handleInventoryButtonClick
	a (IIILnet/minecraft/world/inventory/InventoryClickType;Lnet/minecraft/world/entity/player/EntityHuman;)V handleInventoryMouseClick
	a (ILnet/minecraft/world/item/crafting/IRecipe;Z)V handlePlaceRecipe
	a (Lfdj;Lfej;)V startPrediction
	a (Lfdj;Lnet/minecraft/stats/StatisticManager;Lelv;)Lfhk; createPlayer
	a (Lfdj;Lnet/minecraft/stats/StatisticManager;Lelv;ZZ)Lfhk; createPlayer
	a (Lfhk;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; useItemOn
	a (Lnet/minecraft/core/BlockPosition;)Z destroyBlock
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Z startDestroyBlock
	a (Lnet/minecraft/world/entity/player/EntityHuman;)V adjustPlayer
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; useItem
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/entity/Entity;)V attack
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; interact
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/MovingObjectPositionEntity;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; interactAt
	a (Lnet/minecraft/world/item/ItemStack;)V handleCreativeModeItemDrop
	a (Lnet/minecraft/world/item/ItemStack;I)V handleCreativeModeItemAdd
	a (Lnet/minecraft/world/level/EnumGamemode;)V setLocalMode
	a (Lnet/minecraft/world/level/EnumGamemode;Lnet/minecraft/world/level/EnumGamemode;)V setLocalMode
	b ()V stopDestroyBlock
	b (Lfhk;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; performUseItemOn
	b (Lnet/minecraft/core/BlockPosition;)Z sameDestroyTarget
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Z continueDestroyBlock
	b (Lnet/minecraft/world/entity/player/EntityHuman;)V releaseUsingItem
	c ()F getPickRange
	d ()V tick
	e ()Z hasExperience
	f ()Z hasMissTime
	g ()Z hasInfiniteItems
	h ()Z hasFarPickRange
	i ()Z isServerControlledInventory
	j ()Z isAlwaysFlying
	k ()Lnet/minecraft/world/level/EnumGamemode; getPreviousPlayerMode
	l ()Lnet/minecraft/world/level/EnumGamemode; getPlayerMode
	m ()Z isDestroying
	n ()V ensureHasSentCarriedItem
fdo net/minecraft/client/multiplayer/PlayerInfo
	a profile
	b textureLocations
	c gameMode
	d latency
	e pendingTextures
	f skinModel
	g tabListDisplayName
	h chatSession
	i messageValidator
	a ()Lcom/mojang/authlib/GameProfile; getProfile
	a (I)V setLatency
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V setTabListDisplayName
	a (Lnet/minecraft/network/chat/RemoteChatSession;)V setChatSession
	a (Lnet/minecraft/world/level/EnumGamemode;)V setGameMode
	a (Z)V clearChatSession
	b ()Lnet/minecraft/network/chat/RemoteChatSession; getChatSession
	b (Z)Lnet/minecraft/network/chat/SignedMessageValidator; fallbackMessageValidator
	c ()Lnet/minecraft/network/chat/SignedMessageValidator; getMessageValidator
	d ()Z hasVerifiableChat
	e ()Lnet/minecraft/world/level/EnumGamemode; getGameMode
	f ()I getLatency
	g ()Z isCapeLoaded
	h ()Z isSkinLoaded
	i ()Ljava/lang/String; getModelName
	j ()Lnet/minecraft/resources/MinecraftKey; getSkinLocation
	k ()Lnet/minecraft/resources/MinecraftKey; getCapeLocation
	l ()Lnet/minecraft/resources/MinecraftKey; getElytraLocation
	m ()Lnet/minecraft/world/scores/ScoreboardTeam; getTeam
	n ()V registerTextures
	o ()Lnet/minecraft/network/chat/IChatBaseComponent; getTabListDisplayName
fdp net/minecraft/client/multiplayer/ProfileKeyPairManager
	a EMPTY_KEY_MANAGER
	a ()Ljava/util/concurrent/CompletableFuture; prepareKeyPair
	a (Lcom/mojang/authlib/minecraft/UserApiService;Lemw;Ljava/nio/file/Path;)Lfdp; create
	b ()Z shouldRefreshKeyPair
fdq net/minecraft/client/multiplayer/ServerData
	a name
	b ip
	c status
	d motd
	e players
	f ping
	g protocol
	h version
	i pinged
	j playerList
	k LOGGER
	l packStatus
	m iconBytes
	n lan
	o enforcesSecureChat
	a ()Lnet/minecraft/nbt/NBTTagCompound; write
	a (Lfdq$a;)V setResourcePackStatus
	a (Lfdq;)V copyNameIconFrom
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lfdq; read
	a (Z)V setEnforcesSecureChat
	a ([B)V setIconBytes
	b ()Lfdq$a; getResourcePackStatus
	b (Lfdq;)V copyFrom
	c ()[B getIconBytes
	d ()Z isLan
	e ()Z enforcesSecureChat
fdq$a net/minecraft/client/multiplayer/ServerData$ServerPackStatus
	a ENABLED
	b DISABLED
	c PROMPT
	d name
	e $VALUES
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getName
	b ()[Lfdq$a; $values
fdr net/minecraft/client/multiplayer/ServerList
	a LOGGER
	b IO_MAILBOX
	c MAX_HIDDEN_SERVERS
	d minecraft
	e serverList
	f hiddenServerList
	a ()V load
	a (I)Lfdq; get
	a (II)V swap
	a (ILfdq;)V replace
	a (Lfdq;)V remove
	a (Lfdq;Ljava/util/List;)Z set
	a (Lfdq;Z)V add
	a (Ljava/lang/String;)Lfdq; get
	b ()V save
	b (Lfdq;)V saveSingleServer
	b (Ljava/lang/String;)Lfdq; unhide
	c ()I size
fds net/minecraft/client/multiplayer/ServerStatusPinger
	a SPLITTER
	b LOGGER
	c CANT_CONNECT_MESSAGE
	d connections
	a ()V tick
	a (II)Lnet/minecraft/network/chat/IChatBaseComponent; formatPlayerCount
	a (Lfdq;Ljava/lang/Runnable;)V pingServer
	a (Ljava/net/InetSocketAddress;Lfdq;)V pingLegacyServer
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Lfdq;)V onPingFailed
	b ()V removeAll
fdt net/minecraft/client/multiplayer/chat/ChatListener
	a minecraft
	b delayedMessageQueue
	c messageDelay
	d previousMessageTime
	a ()V tick
	a (D)V setMessageDelay
	a (Ljava/util/UUID;)Z isSenderLocalPlayer
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)Ljava/util/UUID; guessChatUUID
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Ljava/time/Instant;)V logSystemMessage
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Ltf$a;)V handleDisguisedChatMessage
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Z)V handleSystemMessage
	a (Lnet/minecraft/network/chat/MessageSignature;)Z removeFromDelayedMessageQueue
	a (Lnet/minecraft/network/chat/MessageSignature;Ljava/util/function/BooleanSupplier;)V handleMessage
	a (Lnet/minecraft/network/chat/PlayerChatMessage;Lcom/mojang/authlib/GameProfile;Ltf$a;)V handlePlayerChatMessage
	a (Lnet/minecraft/network/chat/PlayerChatMessage;Lnet/minecraft/network/chat/IChatBaseComponent;Ljava/time/Instant;)Lfdv; evaluateTrustLevel
	a (Lnet/minecraft/network/chat/PlayerChatMessage;Ltf$a;Lcom/mojang/authlib/GameProfile;Lfdv;)V logPlayerMessage
	a (Ltf$a;Lnet/minecraft/network/chat/IChatBaseComponent;)V narrateChatMessage
	a (Ltf$a;Lnet/minecraft/network/chat/PlayerChatMessage;Lnet/minecraft/network/chat/IChatBaseComponent;Lcom/mojang/authlib/GameProfile;ZLjava/time/Instant;)Z showMessageToPlayer
	b ()V acceptNextDelayedMessage
	c ()J queueSize
	d ()V clearQueue
	e ()Z willDelayMessages
fdt$a net/minecraft/client/multiplayer/chat/ChatListener$Message
	a signature
	b handler
	a ()Z accept
	b ()Lnet/minecraft/network/chat/MessageSignature; signature
	c ()Ljava/util/function/BooleanSupplier; handler
fdu net/minecraft/client/multiplayer/chat/ChatLog
	a buffer
	b nextId
	a ()I start
	a (I)Lcom/mojang/serialization/Codec; codec
	a (Lfdw;)V push
	b ()I end
	b (I)Lfdw; lookup
	c ()Ljava/util/List; loggedChatEvents
	c (I)I index
	d ()I size
fdv net/minecraft/client/multiplayer/chat/ChatTrustLevel
	a SECURE
	b MODIFIED
	c NOT_SECURE
	d CODEC
	e serializedName
	f $VALUES
	a ()Z isNotSecure
	a (Lnet/minecraft/network/chat/ChatModifier;)Z isModifiedStyle
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)Z containsModifiedStyle
	a (Lnet/minecraft/network/chat/PlayerChatMessage;)Lemc; createTag
	a (Lnet/minecraft/network/chat/PlayerChatMessage;Lnet/minecraft/network/chat/IChatBaseComponent;)Z isModified
	a (Lnet/minecraft/network/chat/PlayerChatMessage;Lnet/minecraft/network/chat/IChatBaseComponent;Ljava/time/Instant;)Lfdv; evaluate
	b ()[Lfdv; $values
	c ()Ljava/lang/String; getSerializedName
fdw net/minecraft/client/multiplayer/chat/LoggedChatEvent
	a CODEC
	a ()Lfdw$a; type
fdw$a net/minecraft/client/multiplayer/chat/LoggedChatEvent$Type
	a PLAYER
	b SYSTEM
	c serializedName
	d codec
	e $VALUES
	a ()Lcom/mojang/serialization/Codec; codec
	c ()Ljava/lang/String; getSerializedName
	e ()[Lfdw$a; $values
fdx net/minecraft/client/multiplayer/chat/LoggedChatMessage
	a (Lcom/mojang/authlib/GameProfile;Lnet/minecraft/network/chat/PlayerChatMessage;Lfdv;)Lfdx$a; player
	a (Ljava/util/UUID;)Z canReport
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Ljava/time/Instant;)Lfdx$b; system
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; toContentComponent
	c ()Lnet/minecraft/network/chat/IChatBaseComponent; toNarrationComponent
fdx$a net/minecraft/client/multiplayer/chat/LoggedChatMessage$Player
	b CODEC
	c profile
	d message
	e trustLevel
	f TIME_FORMATTER
	a ()Lfdw$a; type
	a (Ljava/util/UUID;)Z canReport
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; toContentComponent
	c ()Lnet/minecraft/network/chat/IChatBaseComponent; toNarrationComponent
	d ()Lnet/minecraft/network/chat/IChatBaseComponent; toHeadingComponent
	e ()Ljava/util/UUID; profileId
	f ()Lcom/mojang/authlib/GameProfile; profile
	g ()Lnet/minecraft/network/chat/PlayerChatMessage; message
	h ()Lfdv; trustLevel
	i ()Lnet/minecraft/network/chat/IChatBaseComponent; getTimeComponent
fdx$b net/minecraft/client/multiplayer/chat/LoggedChatMessage$System
	b CODEC
	c message
	d timeStamp
	a ()Lfdw$a; type
	a (Ljava/util/UUID;)Z canReport
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; toContentComponent
	d ()Lnet/minecraft/network/chat/IChatBaseComponent; message
	e ()Ljava/time/Instant; timeStamp
fdz net/minecraft/client/multiplayer/chat/report/AbuseReportSender
	a ()Z isEnabled
	a (Lfed;Lcom/mojang/authlib/minecraft/UserApiService;)Lfdz; create
	a (Ljava/util/UUID;Lcom/mojang/authlib/minecraft/report/AbuseReport;)Ljava/util/concurrent/CompletableFuture; send
	b ()Lcom/mojang/authlib/minecraft/report/AbuseReportLimits; reportLimits
fdz$a net/minecraft/client/multiplayer/chat/report/AbuseReportSender$SendException
fdz$b net/minecraft/client/multiplayer/chat/report/AbuseReportSender$Services
	a environment
	b userApiService
	c SERVICE_UNAVAILABLE_TEXT
	d HTTP_ERROR_TEXT
	e JSON_ERROR_TEXT
	a ()Z isEnabled
	a (Lcom/mojang/authlib/exceptions/MinecraftClientException;)Lnet/minecraft/network/chat/IChatBaseComponent; getErrorDescription
	a (Lcom/mojang/authlib/exceptions/MinecraftClientHttpException;)Lnet/minecraft/network/chat/IChatBaseComponent; getHttpErrorDescription
	a (Ljava/util/UUID;Lcom/mojang/authlib/minecraft/report/AbuseReport;)Ljava/util/concurrent/CompletableFuture; send
	b ()Lcom/mojang/authlib/minecraft/report/AbuseReportLimits; reportLimits
	c ()Lfed; environment
	d ()Lcom/mojang/authlib/minecraft/UserApiService; userApiService
fea net/minecraft/client/multiplayer/chat/report/BanReason
	a GENERIC_VIOLATION
	b FALSE_REPORTING
	c HATE_SPEECH
	d HATE_TERRORISM_NOTORIOUS_FIGURE
	e HARASSMENT_OR_BULLYING
	f DEFAMATION_IMPERSONATION_FALSE_INFORMATION
	g DRUGS
	h FRAUD
	i SPAM_OR_ADVERTISING
	j NUDITY_OR_PORNOGRAPHY
	k SEXUALLY_INAPPROPRIATE
	l EXTREME_VIOLENCE_OR_GORE
	m IMMINENT_HARM_TO_PERSON_OR_PROPERTY
	n title
	o $VALUES
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; title
	a (I)Lfea; byId
	b ()[Lfea; $values
feb net/minecraft/client/multiplayer/chat/report/ChatReportBuilder
	a report
	b limits
	a ()Lfeb$b; report
	a (I)V toggleReported
	a (Lfdu;)Lcom/mojang/authlib/minecraft/report/ReportEvidence; buildEvidence
	a (Lfdx$a;Z)Lcom/mojang/authlib/minecraft/report/ReportChatMessage; buildReportedChatMessage
	a (Lfee;)V setReason
	a (Lfef;)Lcom/mojang/datafixers/util/Either; build
	a (Ljava/lang/String;)V setComments
	b ()Ljava/util/UUID; reportedProfileId
	b (I)Z isReported
	c ()Lit/unimi/dsi/fastutil/ints/IntSet; reportedMessages
	d ()Ljava/lang/String; comments
	e ()Lfee; reason
	f ()Z hasContent
	g ()Lfeb$a; checkBuildable
	h ()Lfeb; copy
feb$a net/minecraft/client/multiplayer/chat/report/ChatReportBuilder$CannotBuildReason
	a NO_REASON
	b NO_REPORTED_MESSAGES
	c TOO_MANY_MESSAGES
	d COMMENTS_TOO_LONG
	e message
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; message
feb$b net/minecraft/client/multiplayer/chat/report/ChatReportBuilder$ChatReport
	b reportId
	c createdAt
	d reportedProfileId
	e reportedMessages
	f comments
	g reason
	a ()Lfeb$b; copy
	a (ILcom/mojang/authlib/minecraft/report/AbuseReportLimits;)V toggleReported
	a (Ljava/util/UUID;)Z isReportedPlayer
feb$c net/minecraft/client/multiplayer/chat/report/ChatReportBuilder$Result
	a id
	b report
	a ()Ljava/util/UUID; id
	b ()Lcom/mojang/authlib/minecraft/report/AbuseReport; report
fec net/minecraft/client/multiplayer/chat/report/ChatReportContextBuilder
	a leadingCount
	b activeCollectors
	a ()Z isActive
	a (Lfdu;Lit/unimi/dsi/fastutil/ints/IntCollection;Lfec$b;)V collectAllContext
	a (Lnet/minecraft/network/chat/PlayerChatMessage;)V trackContext
	b (Lnet/minecraft/network/chat/PlayerChatMessage;)Z acceptContext
fec$a net/minecraft/client/multiplayer/chat/report/ChatReportContextBuilder$Collector
	b lastSeenSignatures
	c lastChainMessage
	d collectingChain
	e count
	a ()Z isComplete
	a (Lnet/minecraft/network/chat/PlayerChatMessage;)Z accept
fec$b net/minecraft/client/multiplayer/chat/report/ChatReportContextBuilder$Handler
fed net/minecraft/client/multiplayer/chat/report/ReportEnvironment
	a clientVersion
	b server
	a ()Lfed; local
	a (Leik;)Lfed; realm
	a (Lfed$a;)Lfed; create
	a (Ljava/lang/String;)Lfed; thirdParty
	b ()Lcom/mojang/authlib/yggdrasil/request/AbuseReportRequest$ClientInfo; clientInfo
	c ()Lcom/mojang/authlib/yggdrasil/request/AbuseReportRequest$ThirdPartyServerInfo; thirdPartyServerInfo
	d ()Lcom/mojang/authlib/yggdrasil/request/AbuseReportRequest$RealmInfo; realmInfo
	e ()Ljava/lang/String; clientVersion
	f ()Lfed$a; server
	g ()Ljava/lang/String; getClientVersion
fed$a net/minecraft/client/multiplayer/chat/report/ReportEnvironment$Server
fed$a$a net/minecraft/client/multiplayer/chat/report/ReportEnvironment$Server$Realm
	a realmId
	b slotId
	a ()J realmId
	b ()I slotId
fed$a$b net/minecraft/client/multiplayer/chat/report/ReportEnvironment$Server$ThirdParty
	a ip
	a ()Ljava/lang/String; ip
fee net/minecraft/client/multiplayer/chat/report/ReportReason
	a HATE_SPEECH
	b TERRORISM_OR_VIOLENT_EXTREMISM
	c CHILD_SEXUAL_EXPLOITATION_OR_ABUSE
	d IMMINENT_HARM
	e NON_CONSENSUAL_INTIMATE_IMAGERY
	f HARASSMENT_OR_BULLYING
	g DEFAMATION_IMPERSONATION_FALSE_INFORMATION
	h SELF_HARM_OR_SUICIDE
	i ALCOHOL_TOBACCO_DRUGS
	j backendName
	k title
	l description
	m $VALUES
	a ()Ljava/lang/String; backendName
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; title
	c ()Lnet/minecraft/network/chat/IChatBaseComponent; description
	d ()[Lfee; $values
fef net/minecraft/client/multiplayer/chat/report/ReportingContext
	a LOG_CAPACITY
	b sender
	c environment
	d chatLog
	e chatReportDraft
	a ()Lfdz; sender
	a (Lemh;Letd;Ljava/lang/Runnable;Z)V draftReportHandled
	a (Lfeb$b;)V setChatReportDraft
	a (Lfed;)Z matches
	a (Lfed;Lcom/mojang/authlib/minecraft/UserApiService;)Lfef; create
	a (Ljava/util/UUID;)Z hasDraftReportFor
	b ()Lfdu; chatLog
	c ()Z hasDraftReport
fei net/minecraft/client/multiplayer/prediction/BlockStatePredictionHandler
	a serverVerifiedStates
	b currentSequenceNr
	c isPredicting
	a ()Lfei; startPredicting
	a (ILfdj;)V endPredictionsUpTo
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z updateKnownServerState
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lfhk;)V retainKnownServerState
	b ()I currentSequence
	c ()Z isPredicting
fei$a net/minecraft/client/multiplayer/prediction/BlockStatePredictionHandler$ServerVerifiedState
	a playerPos
	b sequence
	c blockState
	a (I)Lfei$a; setSequence
	a (Lnet/minecraft/world/level/block/state/IBlockData;)V setBlockState
fej net/minecraft/client/multiplayer/prediction/PredictiveAction
fel net/minecraft/client/multiplayer/resolver/AddressCheck
	a ()Lfel; createFromService
	a (Lfem;)Z isAllowed
	a (Lfen;)Z isAllowed
fem net/minecraft/client/multiplayer/resolver/ResolvedServerAddress
	a ()Ljava/lang/String; getHostName
	a (Ljava/net/InetSocketAddress;)Lfem; from
	b ()Ljava/lang/String; getHostIp
	c ()I getPort
	d ()Ljava/net/InetSocketAddress; asInetSocketAddress
fen net/minecraft/client/multiplayer/resolver/ServerAddress
	a LOGGER
	b hostAndPort
	c INVALID
	a ()Ljava/lang/String; getHost
	a (Ljava/lang/String;)Lfen; parseString
	b ()I getPort
	b (Ljava/lang/String;)Z isValidAddress
	c (Ljava/lang/String;)I parsePort
feo net/minecraft/client/multiplayer/resolver/ServerAddressResolver
	a LOGGER
	b SYSTEM
fep net/minecraft/client/multiplayer/resolver/ServerNameResolver
	a DEFAULT
	b resolver
	c redirectHandler
	d addressCheck
	a (Lfen;)Ljava/util/Optional; resolveAddress
feq net/minecraft/client/multiplayer/resolver/ServerRedirectHandler
	a LOGGER
	b EMPTY
fet net/minecraft/client/particle/AshParticle
fet$a net/minecraft/client/particle/AshParticle$Provider
	a sprites
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
feu net/minecraft/client/particle/AttackSweepParticle
	a sprites
	a ()V tick
	a (F)I getLightColor
	b ()Lfgc; getRenderType
feu$a net/minecraft/client/particle/AttackSweepParticle$Provider
	a sprites
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
fev net/minecraft/client/particle/BaseAshSmokeParticle
	a sprites
	a ()V tick
	b ()Lfgc; getRenderType
	b (F)F getQuadSize
few net/minecraft/client/particle/BlockMarker
	b ()Lfgc; getRenderType
	b (F)F getQuadSize
few$a net/minecraft/client/particle/BlockMarker$Provider
	a (Lnet/minecraft/core/particles/ParticleParamBlock;Lfdj;DDDDDD)Lffy; createParticle
fex net/minecraft/client/particle/BreakingItemParticle
	a uo
	b vo
	b ()Lfgc; getRenderType
	c ()F getU0
	d ()F getU1
	e ()F getV0
	f ()F getV1
fex$a net/minecraft/client/particle/BreakingItemParticle$Provider
	a (Lnet/minecraft/core/particles/ParticleParamItem;Lfdj;DDDDDD)Lffy; createParticle
fex$b net/minecraft/client/particle/BreakingItemParticle$SlimeProvider
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
fex$c net/minecraft/client/particle/BreakingItemParticle$SnowballProvider
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
fey net/minecraft/client/particle/BubbleColumnUpParticle
	a ()V tick
	b ()Lfgc; getRenderType
fey$a net/minecraft/client/particle/BubbleColumnUpParticle$Provider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
fez net/minecraft/client/particle/BubbleParticle
	a ()V tick
	b ()Lfgc; getRenderType
fez$a net/minecraft/client/particle/BubbleParticle$Provider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
ff$a net/minecraft/commands/arguments/blocks/BlockStateParser$BlockResult
	a blockState
	b properties
	c nbt
	a ()Lnet/minecraft/world/level/block/state/IBlockData; blockState
	b ()Ljava/util/Map; properties
	c ()Lnet/minecraft/nbt/NBTTagCompound; nbt
ff$b net/minecraft/commands/arguments/blocks/BlockStateParser$TagResult
	a tag
	b vagueProperties
	c nbt
	a ()Lnet/minecraft/core/HolderSet; tag
	b ()Ljava/util/Map; vagueProperties
	c ()Lnet/minecraft/nbt/NBTTagCompound; nbt
ffa net/minecraft/client/particle/BubblePopParticle
	a sprites
	a ()V tick
	b ()Lfgc; getRenderType
ffa$a net/minecraft/client/particle/BubblePopParticle$Provider
	a sprites
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
ffb net/minecraft/client/particle/CampfireSmokeParticle
	a ()V tick
	b ()Lfgc; getRenderType
ffb$a net/minecraft/client/particle/CampfireSmokeParticle$CosyProvider
	a sprites
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
ffb$b net/minecraft/client/particle/CampfireSmokeParticle$SignalProvider
	a sprites
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
ffc net/minecraft/client/particle/CritParticle
	a ()V tick
	b ()Lfgc; getRenderType
	b (F)F getQuadSize
ffc$a net/minecraft/client/particle/CritParticle$DamageIndicatorProvider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
ffc$b net/minecraft/client/particle/CritParticle$MagicProvider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
ffc$c net/minecraft/client/particle/CritParticle$Provider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
ffd net/minecraft/client/particle/DragonBreathParticle
	F COLOR_MIN_RED
	G COLOR_MIN_GREEN
	H COLOR_MIN_BLUE
	I COLOR_MAX_RED
	J COLOR_MAX_GREEN
	K COLOR_MAX_BLUE
	L hasHitGround
	M sprites
	a COLOR_MIN
	b COLOR_MAX
	a ()V tick
	b ()Lfgc; getRenderType
	b (F)F getQuadSize
ffd$a net/minecraft/client/particle/DragonBreathParticle$Provider
	a sprites
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
ffe net/minecraft/client/particle/DripParticle
	a isGlowing
	b type
	a ()V tick
	a (F)I getLightColor
	a (Lffe;)Lffe; setCherryColor
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lfgy; createWaterHangParticle
	b ()Lfgc; getRenderType
	b (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lfgy; createWaterFallParticle
	c (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lfgy; createLavaHangParticle
	d (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lfgy; createLavaFallParticle
	e (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lfgy; createLavaLandParticle
	f (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lfgy; createCherryLeavesHangParticle
	g ()Lnet/minecraft/world/level/material/FluidType; getType
	g (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lfgy; createCherryLeavesFallParticle
	h ()V preMoveUpdate
	h (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lfgy; createCherryLeavesLandParticle
	i ()V postMoveUpdate
	i (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lfgy; createHoneyHangParticle
	j (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lfgy; createHoneyFallParticle
	k (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lfgy; createHoneyLandParticle
	l (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lfgy; createDripstoneWaterHangParticle
	m (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lfgy; createDripstoneWaterFallParticle
	n (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lfgy; createDripstoneLavaHangParticle
	o (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lfgy; createDripstoneLavaFallParticle
	p (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lfgy; createNectarFallParticle
	q (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lfgy; createSporeBlossomFallParticle
	r (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lfgy; createObsidianTearHangParticle
	s (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lfgy; createObsidianTearFallParticle
	t (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lfgy; createObsidianTearLandParticle
ffe$a net/minecraft/client/particle/DripParticle$CoolingDripHangParticle
	h ()V preMoveUpdate
ffe$b net/minecraft/client/particle/DripParticle$DripHangParticle
	b fallingParticle
	h ()V preMoveUpdate
	i ()V postMoveUpdate
ffe$c net/minecraft/client/particle/DripParticle$DripLandParticle
ffe$d net/minecraft/client/particle/DripParticle$DripstoneFallAndLandParticle
	i ()V postMoveUpdate
ffe$e net/minecraft/client/particle/DripParticle$FallAndLandParticle
	b landParticle
	i ()V postMoveUpdate
ffe$f net/minecraft/client/particle/DripParticle$FallingParticle
	i ()V postMoveUpdate
ffe$g net/minecraft/client/particle/DripParticle$HoneyFallAndLandParticle
	i ()V postMoveUpdate
fff net/minecraft/client/particle/DustColorTransitionParticle
	a fromColor
	b toColor
	a (Lehi;Lelt;F)V render
	a (Lorg/joml/Vector3f;F)Lorg/joml/Vector3f; randomizeColor
	f (F)V lerpColors
fff$a net/minecraft/client/particle/DustColorTransitionParticle$Provider
	a sprites
	a (Lnet/minecraft/core/particles/DustColorTransitionOptions;Lfdj;DDDDDD)Lffy; createParticle
ffg net/minecraft/client/particle/DustParticle
ffg$a net/minecraft/client/particle/DustParticle$Provider
	a sprites
	a (Lnet/minecraft/core/particles/ParticleParamRedstone;Lfdj;DDDDDD)Lffy; createParticle
ffh net/minecraft/client/particle/DustParticleBase
	a sprites
	a ()V tick
	a (FF)F randomizeColor
	b ()Lfgc; getRenderType
	b (F)F getQuadSize
ffi net/minecraft/client/particle/EnchantmentTableParticle
	F zStart
	a xStart
	b yStart
	a ()V tick
	a (DDD)V move
	a (F)I getLightColor
	b ()Lfgc; getRenderType
ffi$a net/minecraft/client/particle/EnchantmentTableParticle$NautilusProvider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
ffi$b net/minecraft/client/particle/EnchantmentTableParticle$Provider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
ffj net/minecraft/client/particle/EndRodParticle
	a (DDD)V move
ffj$a net/minecraft/client/particle/EndRodParticle$Provider
	a sprites
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
ffk net/minecraft/client/particle/ExplodeParticle
	a sprites
	a ()V tick
	b ()Lfgc; getRenderType
ffk$a net/minecraft/client/particle/ExplodeParticle$Provider
	a sprites
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
ffl net/minecraft/client/particle/FallingDustParticle
	a rotSpeed
	b sprites
	a ()V tick
	b ()Lfgc; getRenderType
	b (F)F getQuadSize
ffl$a net/minecraft/client/particle/FallingDustParticle$Provider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleParamBlock;Lfdj;DDDDDD)Lffy; createParticle
ffm net/minecraft/client/particle/FireworkParticles
ffm$a net/minecraft/client/particle/FireworkParticles$FlashProvider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
ffm$b net/minecraft/client/particle/FireworkParticles$OverlayParticle
	a (Lehi;Lelt;F)V render
	b ()Lfgc; getRenderType
	b (F)F getQuadSize
ffm$c net/minecraft/client/particle/FireworkParticles$SparkParticle
	F flicker
	G engine
	H fadeR
	I fadeG
	J fadeB
	K hasFade
	b trail
	a ()V tick
	a (Lehi;Lelt;F)V render
	a (Z)V setTrail
	b (Z)V setFlicker
ffm$d net/minecraft/client/particle/FireworkParticles$SparkProvider
	a sprites
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
ffm$e net/minecraft/client/particle/FireworkParticles$Starter
	D explosions
	E twinkleDelay
	a life
	b engine
	a ()V tick
	a (DDDDDD[I[IZZ)V createParticle
	a (DI[I[IZZ)V createParticleBall
	a (D[[D[I[IZZZ)V createParticleShape
	a ([I[IZZ)V createParticleBurst
	c ()Z isFarAwayFromCamera
ffn net/minecraft/client/particle/FlameParticle
	a (DDD)V move
	a (F)I getLightColor
	b ()Lfgc; getRenderType
	b (F)F getQuadSize
ffn$a net/minecraft/client/particle/FlameParticle$Provider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
ffn$b net/minecraft/client/particle/FlameParticle$SmallFlameProvider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
ffo net/minecraft/client/particle/GlowParticle
	a RANDOM
	b sprites
	a ()V tick
	a (F)I getLightColor
	b ()Lfgc; getRenderType
ffo$a net/minecraft/client/particle/GlowParticle$ElectricSparkProvider
	a SPEED_FACTOR
	b sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
ffo$b net/minecraft/client/particle/GlowParticle$GlowSquidProvider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
ffo$c net/minecraft/client/particle/GlowParticle$ScrapeProvider
	a SPEED_FACTOR
	b sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
ffo$d net/minecraft/client/particle/GlowParticle$WaxOffProvider
	a SPEED_FACTOR
	b sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
ffo$e net/minecraft/client/particle/GlowParticle$WaxOnProvider
	a SPEED_FACTOR
	b sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
ffp net/minecraft/client/particle/HeartParticle
	b ()Lfgc; getRenderType
	b (F)F getQuadSize
ffp$a net/minecraft/client/particle/HeartParticle$AngryVillagerProvider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
ffp$b net/minecraft/client/particle/HeartParticle$Provider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
ffq net/minecraft/client/particle/HugeExplosionParticle
	a sprites
	a ()V tick
	a (F)I getLightColor
	b ()Lfgc; getRenderType
ffq$a net/minecraft/client/particle/HugeExplosionParticle$Provider
	a sprites
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
ffr net/minecraft/client/particle/HugeExplosionSeedParticle
	a life
	b lifeTime
	a ()V tick
ffr$a net/minecraft/client/particle/HugeExplosionSeedParticle$Provider
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
ffs net/minecraft/client/particle/ItemPickupParticle
	D itemEntity
	E target
	F life
	G entityRenderDispatcher
	a LIFE_TIME
	b renderBuffers
	a ()V tick
	a (Lehi;Lelt;F)V render
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/entity/Entity; getSafeCopy
	b ()Lfgc; getRenderType
fft net/minecraft/client/particle/LargeSmokeParticle
fft$a net/minecraft/client/particle/LargeSmokeParticle$Provider
	a sprites
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
ffu net/minecraft/client/particle/LavaParticle
	a ()V tick
	a (F)I getLightColor
	b ()Lfgc; getRenderType
	b (F)F getQuadSize
ffu$a net/minecraft/client/particle/LavaParticle$Provider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
ffv net/minecraft/client/particle/MobAppearanceParticle
	a model
	b renderType
	a (Lehi;Lelt;F)V render
	b ()Lfgc; getRenderType
ffv$a net/minecraft/client/particle/MobAppearanceParticle$Provider
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
ffw net/minecraft/client/particle/NoRenderParticle
	a (Lehi;Lelt;F)V render
	b ()Lfgc; getRenderType
ffx net/minecraft/client/particle/NoteParticle
	b ()Lfgc; getRenderType
	b (F)F getQuadSize
ffx$a net/minecraft/client/particle/NoteParticle$Provider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
ffy net/minecraft/client/particle/Particle
	A oRoll
	B friction
	C speedUpWhenYMotionIsBlocked
	D bb
	E stoppedByCollision
	a INITIAL_AABB
	b MAXIMUM_COLLISION_VELOCITY_SQUARED
	c level
	d xo
	e yo
	f zo
	g x
	h y
	i z
	j xd
	k yd
	l zd
	m onGround
	n hasPhysics
	o removed
	p bbWidth
	q bbHeight
	r random
	s age
	t lifetime
	u gravity
	v rCol
	w gCol
	x bCol
	y alpha
	z roll
	a ()V tick
	a (DDD)V move
	a (F)I getLightColor
	a (FFF)V setColor
	a (I)V setLifetime
	a (Lehi;Lelt;F)V render
	a (Lnet/minecraft/world/phys/AxisAlignedBB;)V setBoundingBox
	b ()Lfgc; getRenderType
	b (DDD)V setParticleSpeed
	b (FF)V setSize
	c (DDD)V setPos
	c (F)Lffy; setPower
	d (F)Lffy; scale
	e (F)V setAlpha
	j ()I getLifetime
	k ()V remove
	l ()V setLocationFromBoundingbox
	m ()Z isAlive
	n ()Lnet/minecraft/world/phys/AxisAlignedBB; getBoundingBox
	o ()Ljava/util/Optional; getParticleGroup
ffz net/minecraft/client/particle/ParticleDescription
	a textures
	a ()Ljava/util/List; getTextures
	a (Lcom/google/gson/JsonObject;)Lffz; fromJson
fga net/minecraft/client/particle/ParticleEngine
	a level
	b LOGGER
	c PARTICLE_LISTER
	d PARTICLES_ATLAS_INFO
	e MAX_PARTICLES_PER_LAYER
	f RENDER_ORDER
	g particles
	h trackingEmitters
	i textureManager
	j random
	k providers
	l particlesToAdd
	m spriteSets
	n textureAtlas
	o trackedParticleCounts
	a ()V close
	a (Lalb$a;Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;Lnet/minecraft/util/profiling/GameProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; reload
	a (Lehe;Lfig$a;Lfif;Lelt;F)V render
	a (Lfdj;)V setLevel
	a (Lffy;)V add
	a (Lir;)Z hasSpaceInParticleLimit
	a (Lir;I)V updateCount
	a (Ljava/util/Collection;)V tickParticleList
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)V crack
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V destroy
	a (Lnet/minecraft/core/particles/Particle;Lfga$c;)V register
	a (Lnet/minecraft/core/particles/Particle;Lfgb$a;)V register
	a (Lnet/minecraft/core/particles/Particle;Lfgb;)V register
	a (Lnet/minecraft/core/particles/ParticleParam;DDDDDD)Lffy; createParticle
	a (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/server/packs/resources/IResource;)Ljava/util/Optional; loadParticleDescription
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/particles/ParticleParam;)V createTrackingEmitter
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/particles/ParticleParam;I)V createTrackingEmitter
	b ()V tick
	b (Lffy;)V tickParticle
	b (Lnet/minecraft/core/particles/ParticleParam;DDDDDD)Lffy; makeParticle
	d ()Ljava/lang/String; countParticles
	e ()V registerProviders
	f ()V clearParticles
fga$b net/minecraft/client/particle/ParticleEngine$MutableSpriteSet
	a sprites
	a (II)Lftc; get
	a (Ljava/util/List;)V rebind
	a (Lnet/minecraft/util/RandomSource;)Lftc; get
fga$c net/minecraft/client/particle/ParticleEngine$SpriteParticleRegistration
fgb net/minecraft/client/particle/ParticleProvider
fgb$a net/minecraft/client/particle/ParticleProvider$Sprite
fgc net/minecraft/client/particle/ParticleRenderType
	a TERRAIN_SHEET
	b PARTICLE_SHEET_OPAQUE
	c PARTICLE_SHEET_TRANSLUCENT
	d PARTICLE_SHEET_LIT
	e CUSTOM
	f NO_RENDER
	a (Legz;Lftd;)V begin
	a (Lehg;)V end
fgd net/minecraft/client/particle/PlayerCloudParticle
	a sprites
	a ()V tick
	b ()Lfgc; getRenderType
	b (F)F getQuadSize
fgd$a net/minecraft/client/particle/PlayerCloudParticle$Provider
	a sprites
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
fgd$b net/minecraft/client/particle/PlayerCloudParticle$SneezeProvider
	a sprites
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
fge net/minecraft/client/particle/PortalParticle
	F zStart
	a xStart
	b yStart
	a ()V tick
	a (DDD)V move
	a (F)I getLightColor
	b ()Lfgc; getRenderType
	b (F)F getQuadSize
fge$a net/minecraft/client/particle/PortalParticle$Provider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
fgf net/minecraft/client/particle/ReversePortalParticle
	a ()V tick
	b (F)F getQuadSize
fgf$a net/minecraft/client/particle/ReversePortalParticle$ReversePortalProvider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
fgg net/minecraft/client/particle/RisingParticle
fgh net/minecraft/client/particle/SculkChargeParticle
	a sprites
	a ()V tick
	a (F)I getLightColor
	b ()Lfgc; getRenderType
fgh$a net/minecraft/client/particle/SculkChargeParticle$Provider
	a sprite
	a ()Lfgt; sprite
	a (Lnet/minecraft/core/particles/SculkChargeParticleOptions;Lfdj;DDDDDD)Lffy; createParticle
fgi net/minecraft/client/particle/SculkChargePopParticle
	a sprites
	a ()V tick
	a (F)I getLightColor
	b ()Lfgc; getRenderType
fgi$a net/minecraft/client/particle/SculkChargePopParticle$Provider
	a sprite
	a ()Lfgt; sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
fgj net/minecraft/client/particle/ShriekParticle
	F MAGICAL_X_ROT
	G delay
	a ROTATION_VECTOR
	b TRANSFORM_VECTOR
	a ()V tick
	a (F)I getLightColor
	a (Lehi;Lelt;F)V render
	a (Lehi;Lelt;FLjava/util/function/Consumer;)V renderRotatedParticle
	a (Lehi;Lorg/joml/Vector3f;FFI)V makeCornerVertex
	b ()Lfgc; getRenderType
	b (F)F getQuadSize
fgj$a net/minecraft/client/particle/ShriekParticle$Provider
	a sprite
	a (Lnet/minecraft/core/particles/ShriekParticleOption;Lfdj;DDDDDD)Lffy; createParticle
fgk net/minecraft/client/particle/SimpleAnimatedParticle
	F fadeG
	G fadeB
	H hasFade
	a sprites
	b fadeR
	a ()V tick
	a (F)I getLightColor
	b ()Lfgc; getRenderType
	b (I)V setColor
	c (I)V setFadeColor
fgl net/minecraft/client/particle/SingleQuadParticle
	D quadSize
	a (Lehi;Lelt;F)V render
	b (F)F getQuadSize
	c ()F getU0
	d ()F getU1
	d (F)Lffy; scale
	e ()F getV0
	f ()F getV1
fgm net/minecraft/client/particle/SmokeParticle
fgm$a net/minecraft/client/particle/SmokeParticle$Provider
	a sprites
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
fgn net/minecraft/client/particle/SnowflakeParticle
	a sprites
	a ()V tick
	b ()Lfgc; getRenderType
fgn$a net/minecraft/client/particle/SnowflakeParticle$Provider
	a sprites
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
fgo net/minecraft/client/particle/SonicBoomParticle
fgo$a net/minecraft/client/particle/SonicBoomParticle$Provider
	a sprites
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
fgp net/minecraft/client/particle/SoulParticle
	a isGlowing
	b sprites
	a ()V tick
	a (F)I getLightColor
	b ()Lfgc; getRenderType
fgp$a net/minecraft/client/particle/SoulParticle$EmissiveProvider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
fgp$b net/minecraft/client/particle/SoulParticle$Provider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
fgq net/minecraft/client/particle/SpellParticle
	a RANDOM
	b sprites
	a ()V tick
	b ()Lfgc; getRenderType
	g ()Z isCloseToScopingPlayer
fgq$a net/minecraft/client/particle/SpellParticle$AmbientMobProvider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
fgq$b net/minecraft/client/particle/SpellParticle$InstantProvider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
fgq$c net/minecraft/client/particle/SpellParticle$MobProvider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
fgq$d net/minecraft/client/particle/SpellParticle$Provider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
fgq$e net/minecraft/client/particle/SpellParticle$WitchProvider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
fgr net/minecraft/client/particle/SpitParticle
fgr$a net/minecraft/client/particle/SpitParticle$Provider
	a sprites
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
fgs net/minecraft/client/particle/SplashParticle
fgs$a net/minecraft/client/particle/SplashParticle$Provider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
fgt net/minecraft/client/particle/SpriteSet
	a (II)Lftc; get
	a (Lnet/minecraft/util/RandomSource;)Lftc; get
fgu net/minecraft/client/particle/SquidInkParticle
	a ()V tick
fgu$a net/minecraft/client/particle/SquidInkParticle$GlowInkProvider
	a sprites
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
fgu$b net/minecraft/client/particle/SquidInkParticle$Provider
	a sprites
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
fgv net/minecraft/client/particle/SuspendedParticle
	b ()Lfgc; getRenderType
fgv$a net/minecraft/client/particle/SuspendedParticle$CrimsonSporeProvider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
fgv$b net/minecraft/client/particle/SuspendedParticle$SporeBlossomAirProvider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
fgv$c net/minecraft/client/particle/SuspendedParticle$UnderwaterProvider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
fgv$d net/minecraft/client/particle/SuspendedParticle$WarpedSporeProvider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
fgw net/minecraft/client/particle/SuspendedTownParticle
	a ()V tick
	a (DDD)V move
	b ()Lfgc; getRenderType
fgw$a net/minecraft/client/particle/SuspendedTownParticle$ComposterFillProvider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
fgw$b net/minecraft/client/particle/SuspendedTownParticle$DolphinSpeedProvider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
fgw$c net/minecraft/client/particle/SuspendedTownParticle$HappyVillagerProvider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
fgw$d net/minecraft/client/particle/SuspendedTownParticle$Provider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
fgx net/minecraft/client/particle/TerrainParticle
	F vo
	a pos
	b uo
	a (F)I getLightColor
	b ()Lfgc; getRenderType
	c ()F getU0
	d ()F getU1
	e ()F getV0
	f ()F getV1
fgx$a net/minecraft/client/particle/TerrainParticle$Provider
	a (Lnet/minecraft/core/particles/ParticleParamBlock;Lfdj;DDDDDD)Lffy; createParticle
fgy net/minecraft/client/particle/TextureSheetParticle
	E sprite
	a (Lfgt;)V pickSprite
	a (Lftc;)V setSprite
	b (Lfgt;)V setSpriteFromAge
	c ()F getU0
	d ()F getU1
	e ()F getV0
	f ()F getV1
fgz net/minecraft/client/particle/TotemParticle
fgz$a net/minecraft/client/particle/TotemParticle$Provider
	a sprites
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
fha net/minecraft/client/particle/TrackingEmitter
	D lifeTime
	E particleType
	a entity
	b life
	a ()V tick
fhb net/minecraft/client/particle/VibrationSignalParticle
	F rotO
	G pitch
	H pitchO
	a target
	b rot
	a ()V tick
	a (F)I getLightColor
	a (Lehi;Lelt;F)V render
	a (Lehi;Lelt;FLjava/util/function/Consumer;)V renderSignal
	b ()Lfgc; getRenderType
fhb$a net/minecraft/client/particle/VibrationSignalParticle$Provider
	a sprite
	a (Lnet/minecraft/core/particles/VibrationParticleOption;Lfdj;DDDDDD)Lffy; createParticle
fhc net/minecraft/client/particle/WakeParticle
	a sprites
	a ()V tick
	b ()Lfgc; getRenderType
fhc$a net/minecraft/client/particle/WakeParticle$Provider
	a sprites
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
fhd net/minecraft/client/particle/WaterCurrentDownParticle
	a angle
	a ()V tick
	b ()Lfgc; getRenderType
fhd$a net/minecraft/client/particle/WaterCurrentDownParticle$Provider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
fhe net/minecraft/client/particle/WaterDropParticle
	a ()V tick
	b ()Lfgc; getRenderType
fhe$a net/minecraft/client/particle/WaterDropParticle$Provider
	a sprite
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
fhf net/minecraft/client/particle/WhiteAshParticle
	a COLOR_RGB24
fhf$a net/minecraft/client/particle/WhiteAshParticle$Provider
	a sprites
	a (Lnet/minecraft/core/particles/ParticleType;Lfdj;DDDDDD)Lffy; createParticle
fhh net/minecraft/client/player/AbstractClientPlayer
	b deltaMovementOnPreviousTick
	c elytraRotX
	cj SKIN_URL_TEMPLATE
	ck playerInfo
	d elytraRotY
	e elytraRotZ
	f clientLevel
	A (F)Lnet/minecraft/world/phys/Vec3D; getDeltaMovementLerped
	F_ ()Z isSpectator
	a ()Z isCapeLoaded
	a (Lnet/minecraft/resources/MinecraftKey;Ljava/lang/String;)V registerSkinTexture
	b ()Lfdo; getPlayerInfo
	c ()Z isSkinLoaded
	c (Ljava/lang/String;)Lnet/minecraft/resources/MinecraftKey; getSkinLocation
	d ()Lnet/minecraft/resources/MinecraftKey; getSkinTextureLocation
	e ()Lnet/minecraft/resources/MinecraftKey; getCloakTextureLocation
	f ()Z isCreative
	h ()Z isElytraLoaded
	i ()Lnet/minecraft/resources/MinecraftKey; getElytraTextureLocation
	l ()V tick
	m ()Ljava/lang/String; getModelName
	o ()F getFieldOfViewModifier
fhi net/minecraft/client/player/Input
	a leftImpulse
	b forwardImpulse
	c up
	d down
	e left
	f right
	g jumping
	h shiftKeyDown
	a ()Lnet/minecraft/world/phys/Vec2F; getMoveVector
	a (ZF)V tick
	b ()Z hasForwardImpulse
fhj net/minecraft/client/player/KeyboardInput
	i options
	a (ZF)V tick
	a (ZZ)F calculateImpulse
fhk net/minecraft/client/player/LocalPlayer
	cA DEFAULT_SNEAKING_MOVEMENT_FACTOR
	cB stats
	cC recipeBook
	cD ambientSoundHandlers
	cE permissionLevel
	cF xLast
	cG yLast1
	cH zLast
	cI yRotLast
	cJ xRotLast
	cK lastOnGround
	cL crouching
	cM wasShiftKeyDown
	cN wasSprinting
	cO positionReminder
	cP flashOnSetHealth
	cQ serverBrand
	cR jumpRidingTicks
	cS jumpRidingScale
	cT startedUsingItem
	cU usingItemHand
	cV handsBusy
	cW autoJumpEnabled
	cX autoJumpTime
	cY wasFallFlying
	cZ waterVisionTime
	cj LOGGER
	ck connection
	cl input
	cm minecraft
	cn sprintTriggerTime
	co yBob
	cp xBob
	cq yBobO
	cr xBobO
	cs portalTime
	ct oPortalTime
	cu POSITION_REMINDER_INTERVAL
	cv WATER_VISION_MAX_TIME
	cw WATER_VISION_QUICK_TIME
	cx WATER_VISION_QUICK_PERCENT
	cy SUFFOCATING_COLLISION_CHECK_SCALE
	cz MINOR_COLLISION_ANGLE_THRESHOLD_RADIAN
	da showDeathScreen
	A ()Lnet/minecraft/world/entity/IJumpable; jumpableVehicle
	B ()I getPermissionLevel
	B (F)V hurtTo
	C ()F getJumpRidingScale
	D ()Z isMovingSlowly
	E ()Z isControlledCamera
	G ()V resetPos
	I ()Z isHandsBusy
	J ()Z isAutoJumpEnabled
	K ()F getWaterVision
	L ()V sendPosition
	M ()V sendIsSprintingIfNeeded
	N ()V handleNetherPortalClient
	O ()Z canAutoJump
	P ()Z isMoving
	Q ()Z canStartSprinting
	R ()Z hasEnoughImpulseToStartSprinting
	T ()Z hasEnoughFoodToStartSprinting
	U ()Z isTextFilteringEnabled
	a (FII)V setExperienceValues
	a (I)V setPermissionLevel
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V sendSystemMessage
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Z)V displayClientMessage
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/sounds/SoundEffect;FF)V playSound
	a (Lnet/minecraft/sounds/SoundEffect;Lnet/minecraft/sounds/SoundCategory;FF)V playNotifySound
	a (Lnet/minecraft/world/EnumHand;)V swing
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/entity/Entity;)V crit
	a (Lnet/minecraft/world/entity/Entity;Z)Z startRiding
	a (Lnet/minecraft/world/entity/EnumMoveType;Lnet/minecraft/world/phys/Vec3D;)V move
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/EnumHand;)V openItemGui
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/ClickAction;)V updateTutorialInventoryAction
	a (Lnet/minecraft/world/item/crafting/IRecipe;)V removeRecipeHighlight
	a (Lnet/minecraft/world/level/CommandBlockListenerAbstract;)V openMinecartCommandBlock
	a (Lnet/minecraft/world/level/block/entity/TileEntityCommand;)V openCommandBlock
	a (Lnet/minecraft/world/level/block/entity/TileEntityJigsaw;)V openJigsawBlock
	a (Lnet/minecraft/world/level/block/entity/TileEntitySign;)V openTextEdit
	a (Lnet/minecraft/world/level/block/entity/TileEntityStructure;)V openStructureBlock
	a (Z)Z drop
	aX ()Z isUnderWater
	b (B)V handleEntityEvent
	b (F)V heal
	b (Lnet/minecraft/world/entity/Entity;)V magicCrit
	b (Lnet/minecraft/world/phys/Vec3D;)Z isHorizontalCollisionMinor
	b (Z)V setShowDeathScreen
	bO ()Z isShiftKeyDown
	bT ()Z isCrouching
	b_ ()V aiStep
	be ()Z canSpawnSprintParticle
	bt ()V rideTick
	by ()V removeVehicle
	c (DD)V moveTowardsClosestSpace
	c (Lnet/minecraft/world/EnumHand;)V startUsingItem
	c (Lnet/minecraft/world/effect/MobEffectList;)Lnet/minecraft/world/effect/MobEffect; removeEffectNoUpdate
	c (Lnet/minecraft/world/entity/Entity;)Z vehicleCanSprint
	cU ()Z isEffectiveAi
	d (Ljava/lang/String;)V setServerBrand
	dL ()Z canSpawnSoulSpeedParticle
	dU ()V tickDeath
	dx ()F getVisualRotationYInDegrees
	eY ()V serverAiStep
	f (FF)V updateAutoJump
	f (Lnet/minecraft/world/damagesource/DamageSource;F)V actuallyHurt
	fC ()Z updateIsUnderwater
	fH ()V respawn
	fe ()Z isUsingItem
	ff ()Lnet/minecraft/world/EnumHand; getUsedItemHand
	fk ()V stopUsingItem
	fm ()Z isSuppressingSlidingDownLadder
	g ()Z isLocalPlayer
	g (Lnet/minecraft/core/BlockPosition;)Z suffocatesAt
	k (F)F getViewXRot
	l ()V tick
	l (F)F getViewYRot
	p ()F getCurrentMood
	q ()V closeContainer
	s ()V clientSideCloseContainer
	t ()V sendRidingJump
	u ()V sendOpenInventory
	u (F)Lnet/minecraft/world/phys/Vec3D; getRopeHoldPosition
	v ()Ljava/lang/String; getServerBrand
	w ()V onUpdateAbilities
	x ()Lnet/minecraft/stats/StatisticManager; getStats
	y ()Lelv; getRecipeBook
	z ()Z shouldShowDeathScreen
fhl net/minecraft/client/player/RemotePlayer
	cj lerpDeltaMovement
	ck lerpDeltaMovementSteps
	a (D)Z shouldRenderAtSqrDistance
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V sendSystemMessage
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	b_ ()V aiStep
	fD ()V updatePlayerPose
	l ()V tick
	l (DDD)V lerpMotion
fhm net/minecraft/client/player/inventory/Hotbar
	a items
	a ()Lnet/minecraft/nbt/NBTTagList; createTag
	a (Lnet/minecraft/nbt/NBTTagList;)V fromTag
fhp net/minecraft/client/profiling/ClientMetricsSamplersProvider
	a levelRenderer
	b samplers
	c samplerFactory
	a ()V registerStaticSamplers
	a (Ljava/util/function/Supplier;)Ljava/util/Set; samplers
fhr net/minecraft/client/renderer/BiomeColors
	a GRASS_COLOR_RESOLVER
	b FOLIAGE_COLOR_RESOLVER
	c WATER_COLOR_RESOLVER
	a (Lnet/minecraft/world/level/IBlockLightAccess;Lnet/minecraft/core/BlockPosition;)I getAverageGrassColor
	a (Lnet/minecraft/world/level/IBlockLightAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/ColorResolver;)I getAverageColor
	b (Lnet/minecraft/world/level/IBlockLightAccess;Lnet/minecraft/core/BlockPosition;)I getAverageFoliageColor
	c (Lnet/minecraft/world/level/IBlockLightAccess;Lnet/minecraft/core/BlockPosition;)I getAverageWaterColor
fhs net/minecraft/client/renderer/BlockEntityWithoutLevelRenderer
	a SHULKER_BOXES
	b DEFAULT_SHULKER_BOX
	c chest
	d trappedChest
	e enderChest
	f banner
	g bed
	h conduit
	i decoratedPot
	j shieldModel
	k tridentModel
	l skullModels
	m blockEntityRenderDispatcher
	n entityModelSet
	a (Lnet/minecraft/server/packs/resources/IResourceManager;)V onResourceManagerReload
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemDisplayContext;Lehe;Lfig;II)V renderByItem
fht net/minecraft/client/renderer/ChunkBufferBuilderPack
	a builders
	a ()V clearAll
	a (Lfio;)Legz; builder
	b ()V discardAll
fhu net/minecraft/client/renderer/CubeMap
	a SIDES
	b images
	a (Lemh;FFF)V render
	a (Lftd;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; preload
fhv net/minecraft/client/renderer/DimensionSpecialEffects
	a EFFECTS
	b sunriseCol
	c cloudLevel
	d hasGround
	e skyType
	f forceBrightLightmap
	g constantAmbientLight
	a ()F getCloudHeight
	a (FF)[F getSunriseColor
	a (II)Z isFoggyAt
	a (Lnet/minecraft/world/level/dimension/DimensionManager;)Lfhv; forType
	a (Lnet/minecraft/world/phys/Vec3D;F)Lnet/minecraft/world/phys/Vec3D; getBrightnessDependentFogColor
	b ()Z hasGround
	c ()Lfhv$d; skyType
	d ()Z forceBrightLightmap
	e ()Z constantAmbientLight
fhv$a net/minecraft/client/renderer/DimensionSpecialEffects$EndEffects
	a (FF)[F getSunriseColor
	a (II)Z isFoggyAt
	a (Lnet/minecraft/world/phys/Vec3D;F)Lnet/minecraft/world/phys/Vec3D; getBrightnessDependentFogColor
fhv$b net/minecraft/client/renderer/DimensionSpecialEffects$NetherEffects
	a (II)Z isFoggyAt
	a (Lnet/minecraft/world/phys/Vec3D;F)Lnet/minecraft/world/phys/Vec3D; getBrightnessDependentFogColor
fhv$c net/minecraft/client/renderer/DimensionSpecialEffects$OverworldEffects
	a CLOUD_LEVEL
	a (II)Z isFoggyAt
	a (Lnet/minecraft/world/phys/Vec3D;F)Lnet/minecraft/world/phys/Vec3D; getBrightnessDependentFogColor
fhv$d net/minecraft/client/renderer/DimensionSpecialEffects$SkyType
	a NONE
	b NORMAL
	c END
	d $VALUES
	a ()[Lfhv$d; $values
fhw net/minecraft/client/renderer/EffectInstance
	a EFFECT_SHADER_PATH
	b LOGGER
	c DUMMY_UNIFORM
	d ALWAYS_REAPPLY
	e lastAppliedEffect
	f lastProgramId
	g samplerMap
	h samplerNames
	i samplerLocations
	j uniforms
	k uniformLocations
	l uniformMap
	m programId
	n name
	o dirty
	p blend
	q attributes
	r attributeNames
	s vertexProgram
	t fragmentProgram
	a ()I getId
	a (Lcom/google/gson/JsonElement;)V parseSamplerNode
	a (Lcom/google/gson/JsonObject;)Lego; parseBlendNode
	a (Ljava/lang/String;)Legv; getUniform
	a (Ljava/lang/String;Ljava/util/function/IntSupplier;)V setSampler
	a (Lnet/minecraft/server/packs/resources/IResourceManager;Legs$a;Ljava/lang/String;)Legq; getOrCreate
	b ()V markDirty
	b (Lcom/google/gson/JsonElement;)V parseUniformNode
	b (Ljava/lang/String;)Legn; safeGetUniform
	c ()Legs; getVertexProgram
	d ()Legs; getFragmentProgram
	e ()V attachToProgram
	f ()V clear
	g ()V apply
	h ()Ljava/lang/String; getName
	i ()V updateLocations
fhx net/minecraft/client/renderer/FaceInfo
	a DOWN
	b UP
	c NORTH
	d SOUTH
	e WEST
	f EAST
	g BY_FACING
	h infos
	i $VALUES
	a ()[Lfhx; $values
	a (I)Lfhx$b; getVertexInfo
	a (Lnet/minecraft/core/EnumDirection;)Lfhx; fromFacing
fhx$a net/minecraft/client/renderer/FaceInfo$Constants
	a MAX_Z
	b MAX_Y
	c MAX_X
	d MIN_Z
	e MIN_Y
	f MIN_X
fhx$b net/minecraft/client/renderer/FaceInfo$VertexInfo
	a xFace
	b yFace
	c zFace
fhy net/minecraft/client/renderer/FogRenderer
	a BIOME_FOG_TRANSITION_TIME
	b WATER_FOG_DISTANCE
	c MOB_EFFECT_FOG
	d fogRed
	e fogGreen
	f fogBlue
	g targetBiomeFog
	h previousBiomeFog
	i biomeChangedTime
	a ()V setupNoFog
	a (Lelt;FLfdj;IF)V setupColor
	a (Lelt;Lfhy$d;FZF)V setupFog
	a (Lnet/minecraft/world/entity/Entity;F)Lfhy$e; getPriorityFogFunction
	b ()V levelFogColor
fhy$a net/minecraft/client/renderer/FogRenderer$BlindnessFogFunction
	a ()Lnet/minecraft/world/effect/MobEffectList; getMobEffect
	a (Lfhy$c;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/effect/MobEffect;FF)V setupFog
fhy$b net/minecraft/client/renderer/FogRenderer$DarknessFogFunction
	a ()Lnet/minecraft/world/effect/MobEffectList; getMobEffect
	a (Lfhy$c;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/effect/MobEffect;FF)V setupFog
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/effect/MobEffect;FF)F getModifiedVoidDarkness
fhy$c net/minecraft/client/renderer/FogRenderer$FogData
	a mode
	b start
	c end
	d shape
fhy$d net/minecraft/client/renderer/FogRenderer$FogMode
	a FOG_SKY
	b FOG_TERRAIN
	c $VALUES
	a ()[Lfhy$d; $values
fhy$e net/minecraft/client/renderer/FogRenderer$MobEffectFogFunction
	a ()Lnet/minecraft/world/effect/MobEffectList; getMobEffect
	a (Lfhy$c;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/effect/MobEffect;FF)V setupFog
	a (Lnet/minecraft/world/entity/EntityLiving;F)Z isEnabled
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/effect/MobEffect;FF)F getModifiedVoidDarkness
fhz net/minecraft/client/renderer/GameRenderer
	A panoramicMode
	B zoom
	C zoomX
	D zoomY
	E itemActivationItem
	F itemActivationTicks
	G itemActivationOffX
	H itemActivationOffY
	I postEffect
	J EFFECTS
	K effectIndex
	L effectActive
	M mainCamera
	N shaders
	O positionShader
	P positionColorShader
	Q positionColorTexShader
	R positionTexShader
	S positionTexColorShader
	T blockShader
	U newEntityShader
	V particleShader
	W positionColorLightmapShader
	X positionColorTexLightmapShader
	Y positionTexColorNormalShader
	Z positionTexLightmapColorShader
	a PROJECTION_Z_NEAR
	aA rendertypeArmorGlintShader
	aB rendertypeArmorEntityGlintShader
	aC rendertypeGlintTranslucentShader
	aD rendertypeGlintShader
	aE rendertypeGlintDirectShader
	aF rendertypeEntityGlintShader
	aG rendertypeEntityGlintDirectShader
	aH rendertypeTextShader
	aI rendertypeTextBackgroundShader
	aJ rendertypeTextIntensityShader
	aK rendertypeTextSeeThroughShader
	aL rendertypeTextBackgroundSeeThroughShader
	aM rendertypeTextIntensitySeeThroughShader
	aN rendertypeLightningShader
	aO rendertypeTripwireShader
	aP rendertypeEndPortalShader
	aQ rendertypeEndGatewayShader
	aR rendertypeLinesShader
	aS rendertypeCrumblingShader
	aa rendertypeSolidShader
	ab rendertypeCutoutMippedShader
	ac rendertypeCutoutShader
	ad rendertypeTranslucentShader
	ae rendertypeTranslucentMovingBlockShader
	af rendertypeTranslucentNoCrumblingShader
	ag rendertypeArmorCutoutNoCullShader
	ah rendertypeEntitySolidShader
	ai rendertypeEntityCutoutShader
	aj rendertypeEntityCutoutNoCullShader
	ak rendertypeEntityCutoutNoCullZOffsetShader
	al rendertypeItemEntityTranslucentCullShader
	am rendertypeEntityTranslucentCullShader
	an rendertypeEntityTranslucentShader
	ao rendertypeEntityTranslucentEmissiveShader
	ap rendertypeEntitySmoothCutoutShader
	aq rendertypeBeaconBeamShader
	ar rendertypeEntityDecalShader
	as rendertypeEntityNoOutlineShader
	at rendertypeEntityShadowShader
	au rendertypeEntityAlphaShader
	av rendertypeEyesShader
	aw rendertypeEnergySwirlShader
	ax rendertypeLeashShader
	ay rendertypeWaterMaskShader
	az rendertypeOutlineShader
	b itemInHandRenderer
	c ITEM_ACTIVATION_ANIMATION_LENGTH
	d EFFECT_NONE
	e blitShader
	f NAUSEA_LOCATION
	g LOGGER
	h DEPTH_BUFFER_DEBUG
	i minecraft
	j resourceManager
	k random
	l renderDistance
	m mapRenderer
	n renderBuffers
	o tick
	p fov
	q oldFov
	r darkenWorldAmount
	s darkenWorldAmountO
	t renderHand
	u renderBlockOutline
	v lastScreenshotAttempt
	w hasWorldScreenshot
	x lastActiveTime
	y lightTexture
	z overlayTexture
	A ()Lfir; getPositionTexLightmapColorShader
	B ()Lfir; getRendertypeSolidShader
	C ()Lfir; getRendertypeCutoutMippedShader
	D ()Lfir; getRendertypeCutoutShader
	E ()Lfir; getRendertypeTranslucentShader
	F ()Lfir; getRendertypeTranslucentMovingBlockShader
	G ()Lfir; getRendertypeTranslucentNoCrumblingShader
	H ()Lfir; getRendertypeArmorCutoutNoCullShader
	I ()Lfir; getRendertypeEntitySolidShader
	J ()Lfir; getRendertypeEntityCutoutShader
	K ()Lfir; getRendertypeEntityCutoutNoCullShader
	L ()Lfir; getRendertypeEntityCutoutNoCullZOffsetShader
	M ()Lfir; getRendertypeItemEntityTranslucentCullShader
	N ()Lfir; getRendertypeEntityTranslucentCullShader
	O ()Lfir; getRendertypeEntityTranslucentShader
	P ()Lfir; getRendertypeEntityTranslucentEmissiveShader
	Q ()Lfir; getRendertypeEntitySmoothCutoutShader
	R ()Lfir; getRendertypeBeaconBeamShader
	S ()Lfir; getRendertypeEntityDecalShader
	T ()Lfir; getRendertypeEntityNoOutlineShader
	U ()Lfir; getRendertypeEntityShadowShader
	V ()Lfir; getRendertypeEntityAlphaShader
	W ()Lfir; getRendertypeEyesShader
	X ()Lfir; getRendertypeEnergySwirlShader
	Y ()Lfir; getRendertypeLeashShader
	Z ()Lfir; getRendertypeWaterMaskShader
	a ()Z isPanoramicMode
	a (D)Lorg/joml/Matrix4f; getProjectionMatrix
	a (F)V pick
	a (FFF)V renderZoomed
	a (FJLehe;)V renderLevel
	a (FJZ)V render
	a (II)V resize
	a (IIF)V renderItemActivationAnimation
	a (Lehe;F)V bobHurt
	a (Lehe;Lelt;F)V renderItemInHand
	a (Lelt;FZ)D getFov
	a (Ljava/lang/String;)Lfir; getShader
	a (Ljava/nio/file/Path;)V takeAutoScreenshot
	a (Lnet/minecraft/resources/MinecraftKey;)V loadEffect
	a (Lnet/minecraft/server/packs/resources/ResourceProvider;)V preloadUiShader
	a (Lnet/minecraft/server/packs/resources/ResourceProvider;Ljava/lang/String;Lehj;)Lfir; preloadShader
	a (Lnet/minecraft/world/entity/Entity;)V checkEntityPostEffect
	a (Lnet/minecraft/world/entity/EntityLiving;F)F getNightVisionScale
	a (Lnet/minecraft/world/item/ItemStack;)V displayItemActivation
	a (Lorg/joml/Matrix4f;)V resetProjectionMatrix
	a (Z)V setRenderHand
	aa ()Lfir; getRendertypeOutlineShader
	ab ()Lfir; getRendertypeArmorGlintShader
	ac ()Lfir; getRendertypeArmorEntityGlintShader
	ad ()Lfir; getRendertypeGlintTranslucentShader
	ae ()Lfir; getRendertypeGlintShader
	af ()Lfir; getRendertypeGlintDirectShader
	ag ()Lfir; getRendertypeEntityGlintShader
	ah ()Lfir; getRendertypeEntityGlintDirectShader
	ai ()Lfir; getRendertypeTextShader
	aj ()Lfir; getRendertypeTextBackgroundShader
	ak ()Lfir; getRendertypeTextIntensityShader
	al ()Lfir; getRendertypeTextSeeThroughShader
	am ()Lfir; getRendertypeTextBackgroundSeeThroughShader
	an ()Lfir; getRendertypeTextIntensitySeeThroughShader
	ao ()Lfir; getRendertypeLightningShader
	ap ()Lfir; getRendertypeTripwireShader
	aq ()Lfir; getRendertypeEndPortalShader
	ar ()Lfir; getRendertypeEndGatewayShader
	as ()Lfir; getRendertypeLinesShader
	at ()Lfir; getRendertypeCrumblingShader
	au ()V shutdownShaders
	av ()V tickFov
	aw ()V tryTakeScreenshotIfNeeded
	ax ()Z shouldRenderBlockOutline
	b ()V shutdownEffect
	b (F)F getDarkenWorldAmount
	b (Lehe;F)V bobView
	b (Lnet/minecraft/server/packs/resources/ResourceProvider;)V reloadShaders
	b (Z)V setRenderBlockOutline
	c ()V togglePostEffect
	c (F)V renderConfusionOverlay
	c (Z)V setPanoramicMode
	d ()V cycleEffect
	e ()Lnet/minecraft/server/packs/resources/IReloadListener; createReloadListener
	f ()V tick
	g ()Lfij; currentEffect
	h ()F getDepthFar
	i ()V resetData
	j ()Lens; getMapRenderer
	k ()Lemh; getMinecraft
	l ()F getRenderDistance
	m ()Lelt; getMainCamera
	n ()Lfif; lightTexture
	o ()Lfst; overlayTexture
	p ()Lfir; getPositionShader
	q ()Lfir; getPositionColorShader
	r ()Lfir; getPositionColorTexShader
	s ()Lfir; getPositionTexShader
	t ()Lfir; getPositionTexColorShader
	u ()Lfir; getBlockShader
	v ()Lfir; getNewEntityShader
	w ()Lfir; getParticleShader
	x ()Lfir; getPositionColorLightmapShader
	y ()Lfir; getPositionColorTexLightmapShader
	z ()Lfir; getPositionTexColorNormalShader
fhz$a net/minecraft/client/renderer/GameRenderer$ResourceCache
	a original
	b cache
	a ()Lnet/minecraft/server/packs/resources/ResourceProvider; original
	b ()Ljava/util/Map; cache
fia net/minecraft/client/renderer/GpuWarnlistManager
	a LOGGER
	b GPU_WARNLIST_LOCATION
	c warnings
	d showWarning
	e warningDismissed
	f skipFabulous
	a ()Z hasWarnings
	a (Lcom/google/gson/JsonArray;Ljava/util/List;)V compilePatterns
	a (Lfia$a;Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)V apply
	a (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)V apply
	a (Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)Lfia$a; prepare
	b ()Z willShowWarning
	b (Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)Ljava/lang/Object; prepare
	c (Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)Lcom/google/gson/JsonObject; parseJson
	d ()V showWarning
	e ()V dismissWarning
	f ()V dismissWarningAndSkipFabulous
	g ()Z isShowingWarning
	h ()Z isSkippingFabulous
	i ()V resetWarnings
	j ()Ljava/lang/String; getRendererWarnings
	k ()Ljava/lang/String; getVersionWarnings
	l ()Ljava/lang/String; getVendorWarnings
	m ()Ljava/lang/String; getAllWarnings
fia$a net/minecraft/client/renderer/GpuWarnlistManager$Preparations
	a rendererPatterns
	b versionPatterns
	c vendorPatterns
	a ()Lcom/google/common/collect/ImmutableMap; apply
	a (Ljava/util/List;Ljava/lang/String;)Ljava/lang/String; matchAny
fib net/minecraft/client/renderer/ItemBlockRenderTypes
	a TYPE_BY_BLOCK
	b TYPE_BY_FLUID
	c renderCutout
	a (Lnet/minecraft/world/item/ItemStack;Z)Lfio; getRenderType
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Lfio; getChunkRenderType
	a (Lnet/minecraft/world/level/block/state/IBlockData;Z)Lfio; getRenderType
	a (Lnet/minecraft/world/level/material/Fluid;)Lfio; getRenderLayer
	a (Z)V setFancy
	b (Lnet/minecraft/world/level/block/state/IBlockData;)Lfio; getMovingBlockRenderType
fic net/minecraft/client/renderer/ItemInHandRenderer
	A ARM_SWING_Z_ROT_AMOUNT
	B ARM_HEIGHT_SCALE
	C ARM_POS_SCALE
	D ARM_POS_X
	E ARM_POS_Y
	F ARM_POS_Z
	G ARM_PRESWING_ROT_Y
	H ARM_PREROTATION_X_OFFSET
	I ARM_PREROTATION_Y_OFFSET
	J ARM_PREROTATION_Z_OFFSET
	K ARM_POSTROTATION_X_OFFSET
	L ARM_ROT_X
	M ARM_ROT_Y
	N ARM_ROT_Z
	O MAP_SWING_X_POS_SCALE
	P MAP_SWING_Z_POS_SCALE
	Q MAP_HANDS_POS_X
	R MAP_HANDS_POS_Y
	S MAP_HANDS_POS_Z
	T MAP_HANDS_HEIGHT_SCALE
	U MAP_HANDS_TILT_SCALE
	V MAP_PLAYER_PITCH_SCALE
	W MAP_HANDS_Z_ROT_AMOUNT
	X MAPHAND_X_ROT_AMOUNT
	Y MAPHAND_Y_ROT_AMOUNT
	Z MAPHAND_Z_ROT_AMOUNT
	a MAP_BACKGROUND
	aA oOffHandHeight
	aB entityRenderDispatcher
	aC itemRenderer
	aa MAP_HAND_X_POS
	ab MAP_HAND_Y_POS
	ac MAP_HAND_Z_POS
	ad MAP_SWING_X_ROT_AMOUNT
	ae MAP_PRE_ROT_SCALE
	af MAP_GLOBAL_X_POS
	ag MAP_GLOBAL_Y_POS
	ah MAP_GLOBAL_Z_POS
	ai MAP_FINAL_SCALE
	aj MAP_BORDER
	ak MAP_HEIGHT
	al MAP_WIDTH
	am BOW_CHARGE_X_POS_SCALE
	an BOW_CHARGE_Y_POS_SCALE
	ao BOW_CHARGE_Z_POS_SCALE
	ap BOW_CHARGE_SHAKE_X_SCALE
	aq BOW_CHARGE_SHAKE_Y_SCALE
	ar BOW_CHARGE_SHAKE_Z_SCALE
	as BOW_CHARGE_Z_SCALE
	at BOW_MIN_SHAKE_CHARGE
	au minecraft
	av mainHandItem
	aw offHandItem
	ax mainHandHeight
	ay oMainHandHeight
	az offHandHeight
	b MAP_BACKGROUND_CHECKERBOARD
	c ITEM_SWING_X_POS_SCALE
	d ITEM_SWING_Y_POS_SCALE
	e ITEM_SWING_Z_POS_SCALE
	f ITEM_HEIGHT_SCALE
	g ITEM_POS_X
	h ITEM_POS_Y
	i ITEM_POS_Z
	j ITEM_PRESWING_ROT_Y
	k ITEM_SWING_X_ROT_AMOUNT
	l ITEM_SWING_Y_ROT_AMOUNT
	m ITEM_SWING_Z_ROT_AMOUNT
	n EAT_JIGGLE_X_ROT_AMOUNT
	o EAT_JIGGLE_Y_ROT_AMOUNT
	p EAT_JIGGLE_Z_ROT_AMOUNT
	q EAT_JIGGLE_X_POS_SCALE
	r EAT_JIGGLE_Y_POS_SCALE
	s EAT_JIGGLE_Z_POS_SCALE
	t EAT_JIGGLE_EXPONENT
	u EAT_EXTRA_JIGGLE_CUTOFF
	v EAT_EXTRA_JIGGLE_SCALE
	w ARM_SWING_X_POS_SCALE
	x ARM_SWING_Y_POS_SCALE
	y ARM_SWING_Z_POS_SCALE
	z ARM_SWING_Y_ROT_AMOUNT
	a ()V tick
	a (F)F calculateMapTilt
	a (FLehe;Lfig$a;Lfhk;I)V renderHandsWithItems
	a (Lehe;FLnet/minecraft/world/entity/EnumMainHand;Lnet/minecraft/world/item/ItemStack;)V applyEatTransform
	a (Lehe;FLnet/minecraft/world/entity/EnumMainHand;Lnet/minecraft/world/item/ItemStack;F)V applyBrushTransform
	a (Lehe;Lfig;IFFF)V renderTwoHandedMap
	a (Lehe;Lfig;IFFLnet/minecraft/world/entity/EnumMainHand;)V renderPlayerArm
	a (Lehe;Lfig;IFLnet/minecraft/world/entity/EnumMainHand;FLnet/minecraft/world/item/ItemStack;)V renderOneHandedMap
	a (Lehe;Lfig;ILnet/minecraft/world/entity/EnumMainHand;)V renderMapHand
	a (Lehe;Lfig;ILnet/minecraft/world/item/ItemStack;)V renderMap
	a (Lehe;Lnet/minecraft/world/entity/EnumMainHand;F)V applyItemArmAttackTransform
	a (Lfhh;FFLnet/minecraft/world/EnumHand;FLnet/minecraft/world/item/ItemStack;FLehe;Lfig;I)V renderArmWithItem
	a (Lfhk;)Lfic$a; evaluateWhichHandsToRender
	a (Lnet/minecraft/world/EnumHand;)V itemUsed
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemDisplayContext;ZLehe;Lfig;I)V renderItem
	a (Lnet/minecraft/world/item/ItemStack;)Z isChargedCrossbow
	b (Lehe;Lnet/minecraft/world/entity/EnumMainHand;F)V applyItemArmTransform
	b (Lfhk;)Lfic$a; selectionUsingItemWhileHoldingBowLike
fic$a net/minecraft/client/renderer/ItemInHandRenderer$HandRenderSelection
	a RENDER_BOTH_HANDS
	b RENDER_MAIN_HAND_ONLY
	c RENDER_OFF_HAND_ONLY
	d renderMainHand
	e renderOffHand
	f $VALUES
	a ()[Lfic$a; $values
	a (Lnet/minecraft/world/EnumHand;)Lfic$a; onlyForHand
fid net/minecraft/client/renderer/ItemModelShaper
	a shapes
	b shapesCache
	c modelManager
	a ()Lfve; getModelManager
	a (Lnet/minecraft/world/item/Item;)Lfuy; getItemModel
	a (Lnet/minecraft/world/item/Item;Lfvf;)V register
	a (Lnet/minecraft/world/item/ItemStack;)Lfuy; getItemModel
	b ()V rebuildCache
	b (Lnet/minecraft/world/item/Item;)I getIndex
fie net/minecraft/client/renderer/LevelRenderer
	A renderChunksInFrustum
	B globalBlockEntities
	C lastFullRenderChunkUpdate
	D viewArea
	E starBuffer
	F skyBuffer
	G darkBuffer
	H generateClouds
	I cloudBuffer
	J frameTimes
	K ticks
	L destroyingBlocks
	M destructionProgress
	N playingRecords
	O entityTarget
	P entityEffect
	Q translucentTarget
	R itemEntityTarget
	S particlesTarget
	T weatherTarget
	U cloudsTarget
	V transparencyChain
	W lastCameraX
	X lastCameraY
	Y lastCameraZ
	Z lastCameraChunkX
	a CHUNK_SIZE
	aA needsFrustumUpdate
	aB rainSoundTime
	aC rainSizeX
	aD rainSizeZ
	aa lastCameraChunkY
	ab lastCameraChunkZ
	ac prevCamX
	ad prevCamY
	ae prevCamZ
	af prevCamRotX
	ag prevCamRotY
	ah prevCloudX
	ai prevCloudY
	aj prevCloudZ
	ak prevCloudColor
	al prevCloudsType
	am chunkRenderDispatcher
	an lastViewDistance
	ao renderedEntities
	ap culledEntities
	aq cullingFrustum
	ar captureFrustum
	as capturedFrustum
	at frustumPoints
	au frustumPos
	av xTransparentOld
	aw yTransparentOld
	ax zTransparentOld
	ay needsFullRenderChunkUpdate
	az nextFullUpdateMillis
	b DIRECTIONS
	c LOGGER
	d HALF_CHUNK_SIZE
	e SKY_DISC_RADIUS
	f MINIMUM_ADVANCED_CULLING_DISTANCE
	g CEILED_SECTION_DIAGONAL
	h MIN_FOG_DISTANCE
	i RAIN_RADIUS
	j RAIN_DIAMETER
	k TRANSPARENT_SORT_COUNT
	l HALF_A_SECOND_IN_MILLIS
	m MOON_LOCATION
	n SUN_LOCATION
	o CLOUDS_LOCATION
	p END_SKY_LOCATION
	q FORCEFIELD_LOCATION
	r RAIN_LOCATION
	s SNOW_LOCATION
	t minecraft
	u entityRenderDispatcher
	v blockEntityRenderDispatcher
	w renderBuffers
	x level
	y recentlyCompiledChunks
	z renderChunkStorage
	A ()V createDarkSky
	B ()V createLightSky
	C ()V createStars
	a ()V initOutline
	a (II)V resize
	a (III)V setSectionDirtyWithNeighbors
	a (IIIIII)V setBlocksDirty
	a (IIIZ)V setSectionDirty
	a (ILnet/minecraft/core/BlockPosition;I)V globalLevelEvent
	a (Laia;)V removeProgress
	a (Legz;)Legz$b; drawStars
	a (Legz;DDDLnet/minecraft/world/phys/Vec3D;)Legz$b; buildClouds
	a (Legz;F)Legz$b; buildSkyDisc
	a (Lehe;)V checkPoseStack
	a (Lehe;FJZLelt;Lfhz;Lfif;Lorg/joml/Matrix4f;)V renderLevel
	a (Lehe;Lehi;DDDDDDFFFF)V renderLineBox
	a (Lehe;Lehi;DDDDDDFFFFFFF)V renderLineBox
	a (Lehe;Lehi;FFFFFFFFFF)V addChainedFilledBoxVertices
	a (Lehe;Lehi;Lnet/minecraft/world/entity/Entity;DDDLnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V renderHitOutline
	a (Lehe;Lehi;Lnet/minecraft/world/phys/AxisAlignedBB;FFFF)V renderLineBox
	a (Lehe;Lehi;Lnet/minecraft/world/phys/shapes/VoxelShape;DDDFFFF)V renderVoxelShape
	a (Lehe;Lfig;Lelt;)V renderDebug
	a (Lehe;Lnet/minecraft/world/phys/Vec3D;Lorg/joml/Matrix4f;)V prepareCullFrustum
	a (Lehe;Lorg/joml/Matrix4f;FDDD)V renderClouds
	a (Lehe;Lorg/joml/Matrix4f;FLelt;ZLjava/lang/Runnable;)V renderSky
	a (Lehi;DDDDDDFFFF)V renderLineBox
	a (Lehi;Lorg/joml/Matrix4f;I)V addFrustumVertex
	a (Lehi;Lorg/joml/Matrix4f;IIIIIII)V addFrustumQuad
	a (Lelt;)V tickRain
	a (Lelt;Lflf;ZZ)V setupRender
	a (Lelt;Ljava/util/Queue;)V initializeQueueForFullUpdate
	a (Lfdj;)V setLevel
	a (Lfif;FDDD)V renderSnowAndRain
	a (Lfio;Lehe;DDDLorg/joml/Matrix4f;)V renderChunkLayer
	a (Lfky$c;)V addRecentlyCompiledChunk
	a (Lflf;)V applyFrustum
	a (Ljava/util/Collection;Ljava/util/Collection;)V updateGlobalBlockEntities
	a (Ljava/util/LinkedHashSet;Lfie$c;Lnet/minecraft/world/phys/Vec3D;Ljava/util/Queue;Z)V updateRenderChunks
	a (Lnet/minecraft/core/BlockPosition;)Z isChunkCompiled
	a (Lnet/minecraft/core/BlockPosition;Lfky$c;)Z closeToBorder
	a (Lnet/minecraft/core/BlockPosition;Lfky$c;Lnet/minecraft/core/EnumDirection;)Lfky$c; getRelativeFrom
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;)V setBlockDirty
	a (Lnet/minecraft/core/BlockPosition;Z)V setBlockDirty
	a (Lnet/minecraft/core/particles/ParticleParam;DDDDDD)V addParticle
	a (Lnet/minecraft/core/particles/ParticleParam;ZDDDDDD)V addParticle
	a (Lnet/minecraft/core/particles/ParticleParam;ZZDDDDDD)V addParticle
	a (Lnet/minecraft/server/packs/resources/IResourceManager;)V onResourceManagerReload
	a (Lnet/minecraft/sounds/SoundEffect;Lnet/minecraft/core/BlockPosition;)V playStreamingMusic
	a (Lnet/minecraft/world/entity/Entity;DDDFLehe;Lfig;)V renderEntity
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;I)V blockChanged
	a (Lnet/minecraft/world/level/IBlockLightAccess;Lnet/minecraft/core/BlockPosition;)I getLightColor
	a (Lnet/minecraft/world/level/IBlockLightAccess;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;)I getLightColor
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Z)V notifyNearbyEntities
	a (Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;DDDLflf;)V captureFrustum
	a (Z)Lemm; calculateParticleLevel
	b ()V doEntityOutline
	b (III)V setSectionDirty
	b (ILnet/minecraft/core/BlockPosition;I)V levelEvent
	b (Lehe;)V renderEndSky
	b (Lehe;Lehi;DDDDDDFFFF)V addChainedFilledBoxVertices
	b (Lehe;Lehi;Lnet/minecraft/world/phys/shapes/VoxelShape;DDDFFFF)V renderShape
	b (Lelt;)Z doesMobEffectBlockSky
	b (Lnet/minecraft/core/particles/ParticleParam;ZDDDDDD)Lffy; addParticleInternal
	b (Lnet/minecraft/core/particles/ParticleParam;ZZDDDDDD)Lffy; addParticleInternal
	c (ILnet/minecraft/core/BlockPosition;I)V destroyBlockProgress
	c (Lelt;)V compileChunks
	d ()Z shouldShowEntityOutlines
	d (Lelt;)V renderWorldBorder
	e ()V graphicsChanged
	f ()V allChanged
	g ()Ljava/lang/String; getChunkStatistics
	h ()Lfky; getChunkRenderDispatcher
	i ()D getTotalChunks
	j ()D getLastViewDistance
	k ()I countRenderedChunks
	l ()Ljava/lang/String; getEntityStatistics
	m ()V captureFrustum
	n ()V killFrustum
	o ()V tick
	p ()V clear
	q ()Z hasRenderedAllChunks
	r ()V needsUpdate
	s ()Lefr; entityTarget
	t ()Lefr; getTranslucentTarget
	u ()Lefr; getItemEntityTarget
	v ()Lefr; getParticlesTarget
	w ()Lefr; getWeatherTarget
	x ()Lefr; getCloudsTarget
	y ()V initTransparency
	z ()V deinitTransparency
fie$a net/minecraft/client/renderer/LevelRenderer$RenderChunkInfo
	a chunk
	b sourceDirections
	c directions
	d step
	a ()Z hasSourceDirections
	a (BLnet/minecraft/core/EnumDirection;)V setDirections
	a (I)Z hasSourceDirection
	a (III)Z isAxisAlignedWith
	a (Lnet/minecraft/core/EnumDirection;)Z hasDirection
	b (Lnet/minecraft/core/EnumDirection;)V addSourceDirection
fie$b net/minecraft/client/renderer/LevelRenderer$RenderChunkStorage
	a renderInfoMap
	b renderChunks
fie$c net/minecraft/client/renderer/LevelRenderer$RenderInfoMap
	a infos
	a (Lfky$c;)Lfie$a; get
	a (Lfky$c;Lfie$a;)V put
fie$d net/minecraft/client/renderer/LevelRenderer$TransparencyShaderException
fif net/minecraft/client/renderer/LightTexture
	a FULL_BRIGHT
	b FULL_SKY
	c FULL_BLOCK
	d lightTexture
	e lightPixels
	f lightTextureLocation
	g updateLightTexture
	h blockLightRedFlicker
	i renderer
	j minecraft
	a ()V tick
	a (F)V updateLightTexture
	a (I)I block
	a (II)I pack
	a (Lnet/minecraft/world/entity/EntityLiving;FF)F calculateDarknessScale
	a (Lnet/minecraft/world/level/dimension/DimensionManager;I)F getBrightness
	a (Lorg/joml/Vector3f;)V clampColor
	b ()V turnOffLightLayer
	b (F)F getDarknessGamma
	b (I)I sky
	c ()V turnOnLightLayer
	c (F)F notGamma
fig net/minecraft/client/renderer/MultiBufferSource
	a (Legz;)Lfig$a; immediate
	a (Ljava/util/Map;Legz;)Lfig$a; immediateWithBuffers
fig$a net/minecraft/client/renderer/MultiBufferSource$BufferSource
	a builder
	b fixedBuffers
	c lastState
	d startedBuffers
	a ()V endLastBatch
	a (Lfio;)V endBatch
	b ()V endBatch
	b (Lfio;)Legz; getBuilderRaw
fih net/minecraft/client/renderer/OutlineBufferSource
	a bufferSource
	b outlineBufferSource
	c teamR
	d teamG
	e teamB
	f teamA
	a ()V endOutlineBatch
	a (IIII)V setColor
fih$a net/minecraft/client/renderer/OutlineBufferSource$EntityOutlineGenerator
	f delegate
	g x
	h y
	i z
	j u
	k v
	a (DDD)Lehi; vertex
	a (FF)Lehi; uv
	a (FFFFFFFFFIIFFF)V vertex
	a (II)Lehi; overlayCoords
	a (IIII)Lehi; color
	b (FFF)Lehi; normal
	b (II)Lehi; uv2
	b (IIII)V defaultColor
	e ()V endVertex
	k ()V unsetDefaultColor
fii net/minecraft/client/renderer/PanoramaRenderer
	a minecraft
	b cubeMap
	c spin
	d bob
	a (FF)V render
	b (FF)F wrap
fij net/minecraft/client/renderer/PostChain
	a MAIN_RENDER_TARGET
	b screenTarget
	c resourceManager
	d name
	e passes
	f customRenderTargets
	g fullSizedTargets
	h shaderOrthoMatrix
	i screenWidth
	j screenHeight
	k time
	l lastStamp
	a ()Ljava/lang/String; getName
	a (F)V process
	a (II)V resize
	a (Lcom/google/gson/JsonElement;)V parseTargetNode
	a (Lftd;Lcom/google/gson/JsonElement;)V parsePassNode
	a (Lftd;Lnet/minecraft/resources/MinecraftKey;)V load
	a (Ljava/lang/String;)Lefr; getTempTarget
	a (Ljava/lang/String;II)V addTempTarget
	a (Ljava/lang/String;Lefr;Lefr;)Lfik; addPass
	b ()V updateOrthoMatrix
	b (Lcom/google/gson/JsonElement;)V parseUniformNode
	b (Ljava/lang/String;)Lefr; getRenderTarget
fik net/minecraft/client/renderer/PostPass
	a inTarget
	b outTarget
	c effect
	d auxAssets
	e auxNames
	f auxWidths
	g auxHeights
	h shaderOrthoMatrix
	a ()Ljava/lang/String; getName
	a (F)V process
	a (Ljava/lang/String;Ljava/util/function/IntSupplier;II)V addAuxAsset
	a (Lorg/joml/Matrix4f;)V setOrthoMatrix
	b ()Lfhw; getEffect
fil net/minecraft/client/renderer/Rect2i
	a xPos
	b yPos
	c width
	d height
	a ()I getX
	a (I)V setX
	a (II)V setPosition
	a (Lfil;)Lfil; intersect
	b ()I getY
	b (I)V setY
	b (II)Z contains
	c ()I getWidth
	c (I)V setWidth
	d ()I getHeight
	d (I)V setHeight
fim net/minecraft/client/renderer/RenderBuffers
	a fixedBufferPack
	b fixedBuffers
	c bufferSource
	d crumblingBufferSource
	e outlineBufferSource
	a ()Lfht; fixedBufferPack
	a (Lit/unimi/dsi/fastutil/objects/Object2ObjectLinkedOpenHashMap;Lfio;)V put
	b ()Lfig$a; bufferSource
	c ()Lfig$a; crumblingBufferSource
	d ()Lfih; outlineBufferSource
fin net/minecraft/client/renderer/RenderStateShard
	A RENDERTYPE_ENTITY_CUTOUT_NO_CULL_SHADER
	B RENDERTYPE_ENTITY_CUTOUT_NO_CULL_Z_OFFSET_SHADER
	C RENDERTYPE_ITEM_ENTITY_TRANSLUCENT_CULL_SHADER
	D RENDERTYPE_ENTITY_TRANSLUCENT_CULL_SHADER
	E RENDERTYPE_ENTITY_TRANSLUCENT_SHADER
	F RENDERTYPE_ENTITY_TRANSLUCENT_EMISSIVE_SHADER
	G RENDERTYPE_ENTITY_SMOOTH_CUTOUT_SHADER
	H RENDERTYPE_BEACON_BEAM_SHADER
	I RENDERTYPE_ENTITY_DECAL_SHADER
	J RENDERTYPE_ENTITY_NO_OUTLINE_SHADER
	K RENDERTYPE_ENTITY_SHADOW_SHADER
	L RENDERTYPE_ENTITY_ALPHA_SHADER
	M RENDERTYPE_EYES_SHADER
	N RENDERTYPE_ENERGY_SWIRL_SHADER
	O RENDERTYPE_LEASH_SHADER
	P RENDERTYPE_WATER_MASK_SHADER
	Q RENDERTYPE_OUTLINE_SHADER
	R RENDERTYPE_ARMOR_GLINT_SHADER
	S RENDERTYPE_ARMOR_ENTITY_GLINT_SHADER
	T RENDERTYPE_GLINT_TRANSLUCENT_SHADER
	U RENDERTYPE_GLINT_SHADER
	V RENDERTYPE_GLINT_DIRECT_SHADER
	W RENDERTYPE_ENTITY_GLINT_SHADER
	X RENDERTYPE_ENTITY_GLINT_DIRECT_SHADER
	Y RENDERTYPE_CRUMBLING_SHADER
	Z RENDERTYPE_TEXT_SHADER
	a MAX_ENCHANTMENT_GLINT_SPEED_MILLIS
	aA COLOR_WRITE
	aB DEPTH_WRITE
	aC NO_LAYERING
	aD POLYGON_OFFSET_LAYERING
	aE VIEW_OFFSET_Z_LAYERING
	aF MAIN_TARGET
	aG OUTLINE_TARGET
	aH TRANSLUCENT_TARGET
	aI PARTICLES_TARGET
	aJ WEATHER_TARGET
	aK CLOUDS_TARGET
	aL ITEM_ENTITY_TARGET
	aM DEFAULT_LINE
	aN VIEW_SCALE_Z_EPSILON
	aO setupState
	aP clearState
	aa RENDERTYPE_TEXT_BACKGROUND_SHADER
	ab RENDERTYPE_TEXT_INTENSITY_SHADER
	ac RENDERTYPE_TEXT_SEE_THROUGH_SHADER
	ad RENDERTYPE_TEXT_BACKGROUND_SEE_THROUGH_SHADER
	ae RENDERTYPE_TEXT_INTENSITY_SEE_THROUGH_SHADER
	af RENDERTYPE_LIGHTNING_SHADER
	ag RENDERTYPE_TRIPWIRE_SHADER
	ah RENDERTYPE_END_PORTAL_SHADER
	ai RENDERTYPE_END_GATEWAY_SHADER
	aj RENDERTYPE_LINES_SHADER
	ak BLOCK_SHEET_MIPPED
	al BLOCK_SHEET
	am NO_TEXTURE
	an DEFAULT_TEXTURING
	ao GLINT_TEXTURING
	ap ENTITY_GLINT_TEXTURING
	aq LIGHTMAP
	ar NO_LIGHTMAP
	as OVERLAY
	at NO_OVERLAY
	au CULL
	av NO_CULL
	aw NO_DEPTH_TEST
	ax EQUAL_DEPTH_TEST
	ay LEQUAL_DEPTH_TEST
	az COLOR_DEPTH_WRITE
	b name
	c NO_TRANSPARENCY
	d ADDITIVE_TRANSPARENCY
	e LIGHTNING_TRANSPARENCY
	f GLINT_TRANSPARENCY
	g CRUMBLING_TRANSPARENCY
	h TRANSLUCENT_TRANSPARENCY
	i NO_SHADER
	j BLOCK_SHADER
	k NEW_ENTITY_SHADER
	l POSITION_COLOR_LIGHTMAP_SHADER
	m POSITION_SHADER
	n POSITION_COLOR_TEX_SHADER
	o POSITION_TEX_SHADER
	p POSITION_COLOR_TEX_LIGHTMAP_SHADER
	q POSITION_COLOR_SHADER
	r RENDERTYPE_SOLID_SHADER
	s RENDERTYPE_CUTOUT_MIPPED_SHADER
	t RENDERTYPE_CUTOUT_SHADER
	u RENDERTYPE_TRANSLUCENT_SHADER
	v RENDERTYPE_TRANSLUCENT_MOVING_BLOCK_SHADER
	w RENDERTYPE_TRANSLUCENT_NO_CRUMBLING_SHADER
	x RENDERTYPE_ARMOR_CUTOUT_NO_CULL_SHADER
	y RENDERTYPE_ENTITY_SOLID_SHADER
	z RENDERTYPE_ENTITY_CUTOUT_SHADER
	a ()V setupRenderState
	a (F)V setupGlintTexturing
	b ()V clearRenderState
fin$a net/minecraft/client/renderer/RenderStateShard$BooleanStateShard
	aN enabled
fin$b net/minecraft/client/renderer/RenderStateShard$CullStateShard
fin$c net/minecraft/client/renderer/RenderStateShard$DepthTestStateShard
	aN functionName
fin$d net/minecraft/client/renderer/RenderStateShard$EmptyTextureStateShard
	c ()Ljava/util/Optional; cutoutTexture
fin$e net/minecraft/client/renderer/RenderStateShard$LayeringStateShard
fin$f net/minecraft/client/renderer/RenderStateShard$LightmapStateShard
fin$g net/minecraft/client/renderer/RenderStateShard$LineStateShard
	aN width
fin$h net/minecraft/client/renderer/RenderStateShard$MultiTextureStateShard
	aN cutoutTexture
	c ()Ljava/util/Optional; cutoutTexture
	d ()Lfin$h$a; builder
fin$h$a net/minecraft/client/renderer/RenderStateShard$MultiTextureStateShard$Builder
	a builder
	a ()Lfin$h; build
	a (Lnet/minecraft/resources/MinecraftKey;ZZ)Lfin$h$a; add
fin$i net/minecraft/client/renderer/RenderStateShard$OffsetTexturingStateShard
fin$j net/minecraft/client/renderer/RenderStateShard$OutputStateShard
fin$k net/minecraft/client/renderer/RenderStateShard$OverlayStateShard
fin$l net/minecraft/client/renderer/RenderStateShard$ShaderStateShard
	aN shader
fin$m net/minecraft/client/renderer/RenderStateShard$TextureStateShard
	aN texture
	aO blur
	aP mipmap
	c ()Ljava/util/Optional; cutoutTexture
fin$n net/minecraft/client/renderer/RenderStateShard$TexturingStateShard
fin$o net/minecraft/client/renderer/RenderStateShard$TransparencyStateShard
fin$p net/minecraft/client/renderer/RenderStateShard$WriteMaskStateShard
	aN writeColor
	aO writeDepth
fio net/minecraft/client/renderer/RenderType
	aN BIG_BUFFER_SIZE
	aO MEDIUM_BUFFER_SIZE
	aP SMALL_BUFFER_SIZE
	aQ TRANSIENT_BUFFER_SIZE
	aR LINES
	aS LINE_STRIP
	aT BYTES_IN_INT
	aU MEGABYTE
	aV SOLID
	aW CUTOUT_MIPPED
	aX CUTOUT
	aY TRANSLUCENT
	aZ TRANSLUCENT_MOVING_BLOCK
	bA CRUMBLING
	bB TEXT
	bC TEXT_BACKGROUND
	bD TEXT_INTENSITY
	bE TEXT_POLYGON_OFFSET
	bF TEXT_INTENSITY_POLYGON_OFFSET
	bG TEXT_SEE_THROUGH
	bH TEXT_BACKGROUND_SEE_THROUGH
	bI TEXT_INTENSITY_SEE_THROUGH
	bJ LIGHTNING
	bK TRIPWIRE
	bL END_PORTAL
	bM END_GATEWAY
	bN DEBUG_LINE_STRIP
	bO DEBUG_FILLED_BOX
	bP DEBUG_QUADS
	bQ CHUNK_BUFFER_LAYERS
	bR format
	bS mode
	bT bufferSize
	bU affectsCrumbling
	bV sortOnUpload
	bW asOptional
	ba TRANSLUCENT_NO_CRUMBLING
	bb ARMOR_CUTOUT_NO_CULL
	bc ENTITY_SOLID
	bd ENTITY_CUTOUT
	be ENTITY_CUTOUT_NO_CULL
	bf ENTITY_CUTOUT_NO_CULL_Z_OFFSET
	bg ITEM_ENTITY_TRANSLUCENT_CULL
	bh ENTITY_TRANSLUCENT_CULL
	bi ENTITY_TRANSLUCENT
	bj ENTITY_TRANSLUCENT_EMISSIVE
	bk ENTITY_SMOOTH_CUTOUT
	bl BEACON_BEAM
	bm ENTITY_DECAL
	bn ENTITY_NO_OUTLINE
	bo ENTITY_SHADOW
	bp DRAGON_EXPLOSION_ALPHA
	bq EYES
	br LEASH
	bs WATER_MASK
	bt ARMOR_GLINT
	bu ARMOR_ENTITY_GLINT
	bv GLINT_TRANSLUCENT
	bw GLINT
	bx GLINT_DIRECT
	by ENTITY_GLINT
	bz ENTITY_GLINT_DIRECT
	A ()Lfio; debugQuads
	B ()Ljava/util/List; chunkBufferLayers
	C ()I bufferSize
	D ()Lehj; format
	E ()Lehj$b; mode
	F ()Ljava/util/Optional; outline
	G ()Z isOutline
	H ()Z affectsCrumbling
	I ()Z canConsolidateConsecutiveGeometry
	J ()Ljava/util/Optional; asOptional
	K ()Lfio$b; translucentMovingBlockState
	L ()Lfio$b; tripwireState
	a (D)Lfio; debugLineStrip
	a (Legz;III)V end
	a (Lfin$l;)Lfio$b; translucentState
	a (Ljava/lang/String;Lehj;Lehj$b;ILfio$b;)Lfio$a; create
	a (Ljava/lang/String;Lehj;Lehj$b;IZZLfio$b;)Lfio$a; create
	a (Lnet/minecraft/resources/MinecraftKey;)Lfio; armorCutoutNoCull
	a (Lnet/minecraft/resources/MinecraftKey;FF)Lfio; energySwirl
	a (Lnet/minecraft/resources/MinecraftKey;Z)Lfio; entityCutoutNoCull
	b (Lnet/minecraft/resources/MinecraftKey;)Lfio; entitySolid
	b (Lnet/minecraft/resources/MinecraftKey;Z)Lfio; entityCutoutNoCullZOffset
	c ()Lfio; solid
	c (Lnet/minecraft/resources/MinecraftKey;)Lfio; entityCutout
	c (Lnet/minecraft/resources/MinecraftKey;Z)Lfio; entityTranslucent
	d ()Lfio; cutoutMipped
	d (Lnet/minecraft/resources/MinecraftKey;)Lfio; entityCutoutNoCull
	d (Lnet/minecraft/resources/MinecraftKey;Z)Lfio; entityTranslucentEmissive
	e ()Lfio; cutout
	e (Lnet/minecraft/resources/MinecraftKey;)Lfio; entityCutoutNoCullZOffset
	e (Lnet/minecraft/resources/MinecraftKey;Z)Lfio; beaconBeam
	f ()Lfio; translucent
	f (Lnet/minecraft/resources/MinecraftKey;)Lfio; itemEntityTranslucentCull
	g ()Lfio; translucentMovingBlock
	g (Lnet/minecraft/resources/MinecraftKey;)Lfio; entityTranslucentCull
	h ()Lfio; translucentNoCrumbling
	h (Lnet/minecraft/resources/MinecraftKey;)Lfio; entityTranslucent
	i ()Lfio; leash
	i (Lnet/minecraft/resources/MinecraftKey;)Lfio; entityTranslucentEmissive
	j ()Lfio; waterMask
	j (Lnet/minecraft/resources/MinecraftKey;)Lfio; entitySmoothCutout
	k ()Lfio; armorGlint
	k (Lnet/minecraft/resources/MinecraftKey;)Lfio; entityDecal
	l ()Lfio; armorEntityGlint
	l (Lnet/minecraft/resources/MinecraftKey;)Lfio; entityNoOutline
	m ()Lfio; glintTranslucent
	m (Lnet/minecraft/resources/MinecraftKey;)Lfio; entityShadow
	n ()Lfio; glint
	n (Lnet/minecraft/resources/MinecraftKey;)Lfio; dragonExplosionAlpha
	o ()Lfio; glintDirect
	o (Lnet/minecraft/resources/MinecraftKey;)Lfio; eyes
	p ()Lfio; entityGlint
	p (Lnet/minecraft/resources/MinecraftKey;)Lfio; outline
	q ()Lfio; entityGlintDirect
	q (Lnet/minecraft/resources/MinecraftKey;)Lfio; crumbling
	r ()Lfio; textBackground
	r (Lnet/minecraft/resources/MinecraftKey;)Lfio; text
	s ()Lfio; textBackgroundSeeThrough
	s (Lnet/minecraft/resources/MinecraftKey;)Lfio; textIntensity
	t ()Lfio; lightning
	t (Lnet/minecraft/resources/MinecraftKey;)Lfio; textPolygonOffset
	u ()Lfio; tripwire
	u (Lnet/minecraft/resources/MinecraftKey;)Lfio; textIntensityPolygonOffset
	v ()Lfio; endPortal
	v (Lnet/minecraft/resources/MinecraftKey;)Lfio; textSeeThrough
	w ()Lfio; endGateway
	w (Lnet/minecraft/resources/MinecraftKey;)Lfio; textIntensitySeeThrough
	x ()Lfio; lines
	y ()Lfio; lineStrip
	z ()Lfio; debugFilledBox
fio$a net/minecraft/client/renderer/RenderType$CompositeRenderType
	aT OUTLINE
	aU state
	aV outline
	aW isOutline
	F ()Ljava/util/Optional; outline
	G ()Z isOutline
	K ()Lfio$b; state
fio$b net/minecraft/client/renderer/RenderType$CompositeState
	a textureState
	b shaderState
	c transparencyState
	d depthTestState
	e cullState
	f lightmapState
	g overlayState
	h layeringState
	i outputState
	j texturingState
	k writeMaskState
	l lineState
	m outlineProperty
	n states
	a ()Lfio$b$a; builder
fio$b$a net/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder
	a textureState
	b shaderState
	c transparencyState
	d depthTestState
	e cullState
	f lightmapState
	g overlayState
	h layeringState
	i outputState
	j texturingState
	k writeMaskState
	l lineState
	a (Lfin$b;)Lfio$b$a; setCullState
	a (Lfin$c;)Lfio$b$a; setDepthTestState
	a (Lfin$d;)Lfio$b$a; setTextureState
	a (Lfin$e;)Lfio$b$a; setLayeringState
	a (Lfin$f;)Lfio$b$a; setLightmapState
	a (Lfin$g;)Lfio$b$a; setLineState
	a (Lfin$j;)Lfio$b$a; setOutputState
	a (Lfin$k;)Lfio$b$a; setOverlayState
	a (Lfin$l;)Lfio$b$a; setShaderState
	a (Lfin$n;)Lfio$b$a; setTexturingState
	a (Lfin$o;)Lfio$b$a; setTransparencyState
	a (Lfin$p;)Lfio$b$a; setWriteMaskState
	a (Lfio$c;)Lfio$b; createCompositeState
	a (Z)Lfio$b; createCompositeState
fio$c net/minecraft/client/renderer/RenderType$OutlineProperty
	a NONE
	b IS_OUTLINE
	c AFFECTS_OUTLINE
	d name
	e $VALUES
	a ()[Lfio$c; $values
fip net/minecraft/client/renderer/RunningTrimmedMean
	a values
	b count
	c cursor
	a (J)J registerValueAndGetMean
fiq net/minecraft/client/renderer/ScreenEffectRenderer
	a UNDERWATER_LOCATION
	a (Lemh;Lehe;)V renderScreenEffect
	a (Lftc;Lehe;)V renderTex
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Lnet/minecraft/world/level/block/state/IBlockData; getViewBlockingState
	b (Lemh;Lehe;)V renderWater
	c (Lemh;Lehe;)V renderFire
fir net/minecraft/client/renderer/ShaderInstance
	A samplerLocations
	B uniforms
	C uniformLocations
	D uniformMap
	E programId
	F name
	G dirty
	H blend
	I attributes
	J attributeNames
	K vertexProgram
	L fragmentProgram
	M vertexFormat
	a SHADER_PATH
	b MODEL_VIEW_MATRIX
	c PROJECTION_MATRIX
	d INVERSE_VIEW_ROTATION_MATRIX
	e TEXTURE_MATRIX
	f SCREEN_SIZE
	g COLOR_MODULATOR
	h LIGHT0_DIRECTION
	i LIGHT1_DIRECTION
	j GLINT_ALPHA
	k FOG_START
	l FOG_END
	m FOG_COLOR
	n FOG_SHAPE
	o LINE_WIDTH
	p GAME_TIME
	q CHUNK_OFFSET
	r SHADER_CORE_PATH
	s SHADER_INCLUDE_PATH
	t LOGGER
	u DUMMY_UNIFORM
	v ALWAYS_REAPPLY
	w lastAppliedShader
	x lastProgramId
	y samplerMap
	z samplerNames
	a ()I getId
	a (Lcom/google/gson/JsonElement;)V parseSamplerNode
	a (Lcom/google/gson/JsonObject;)Lego; parseBlendNode
	a (Ljava/lang/String;)Legv; getUniform
	a (Ljava/lang/String;Ljava/lang/Object;)V setSampler
	a (Lnet/minecraft/server/packs/resources/ResourceProvider;Legs$a;Ljava/lang/String;)Legs; getOrCreate
	b ()V markDirty
	b (Lcom/google/gson/JsonElement;)V parseUniformNode
	b (Ljava/lang/String;)Legn; safeGetUniform
	c ()Legs; getVertexProgram
	d ()Legs; getFragmentProgram
	e ()V attachToProgram
	f ()V clear
	g ()V apply
	h ()Lehj; getVertexFormat
	i ()Ljava/lang/String; getName
	j ()V updateLocations
fis net/minecraft/client/renderer/Sheets
	A SHULKER_BOX_SHEET_TYPE
	B BED_SHEET_TYPE
	C BANNER_SHEET_TYPE
	D SHIELD_SHEET_TYPE
	E SIGN_SHEET_TYPE
	F CHEST_SHEET_TYPE
	G ARMOR_TRIMS_SHEET_TYPE
	H SOLID_BLOCK_SHEET
	I CUTOUT_BLOCK_SHEET
	J TRANSLUCENT_ITEM_CULL_BLOCK_SHEET
	K TRANSLUCENT_CULL_BLOCK_SHEET
	a SHULKER_SHEET
	b BED_SHEET
	c BANNER_SHEET
	d SHIELD_SHEET
	e SIGN_SHEET
	f CHEST_SHEET
	g ARMOR_TRIMS_SHEET
	h DECORATED_POT_SHEET
	i DEFAULT_SHULKER_TEXTURE_LOCATION
	j SHULKER_TEXTURE_LOCATION
	k SIGN_MATERIALS
	l HANGING_SIGN_MATERIALS
	m BANNER_MATERIALS
	n SHIELD_MATERIALS
	o DECORATED_POT_MATERIALS
	p BED_TEXTURES
	q CHEST_TRAP_LOCATION
	r CHEST_TRAP_LOCATION_LEFT
	s CHEST_TRAP_LOCATION_RIGHT
	t CHEST_XMAS_LOCATION
	u CHEST_XMAS_LOCATION_LEFT
	v CHEST_XMAS_LOCATION_RIGHT
	w CHEST_LOCATION
	x CHEST_LOCATION_LEFT
	y CHEST_LOCATION_RIGHT
	z ENDER_CHEST_LOCATION
	a ()Lfio; bannerSheet
	a (Ljava/lang/String;)Lfvb; chestMaterial
	a (Ljava/util/function/Consumer;)V getAllMaterials
	a (Lnet/minecraft/resources/ResourceKey;)Lfvb; getBannerMaterial
	a (Lnet/minecraft/world/level/block/entity/TileEntity;Lnet/minecraft/world/level/block/state/properties/BlockPropertyChestType;Z)Lfvb; chooseMaterial
	a (Lnet/minecraft/world/level/block/state/properties/BlockPropertyChestType;Lfvb;Lfvb;Lfvb;)Lfvb; chooseMaterial
	a (Lnet/minecraft/world/level/block/state/properties/BlockPropertyWood;)Lfvb; getSignMaterial
	b ()Lfio; shieldSheet
	b (Lnet/minecraft/resources/ResourceKey;)Lfvb; getShieldMaterial
	b (Lnet/minecraft/world/level/block/state/properties/BlockPropertyWood;)Lfvb; getHangingSignMaterial
	c ()Lfio; bedSheet
	c (Lnet/minecraft/resources/ResourceKey;)Lfvb; getDecoratedPotMaterial
	c (Lnet/minecraft/world/level/block/state/properties/BlockPropertyWood;)Lfvb; createSignMaterial
	d ()Lfio; shulkerBoxSheet
	d (Lnet/minecraft/resources/ResourceKey;)Lfvb; createBannerMaterial
	d (Lnet/minecraft/world/level/block/state/properties/BlockPropertyWood;)Lfvb; createHangingSignMaterial
	e ()Lfio; signSheet
	e (Lnet/minecraft/resources/ResourceKey;)Lfvb; createShieldMaterial
	f ()Lfio; hangingSignSheet
	f (Lnet/minecraft/resources/ResourceKey;)Lfvb; createDecoratedPotMaterial
	g ()Lfio; chestSheet
	h ()Lfio; armorTrimsSheet
	i ()Lfio; solidBlockSheet
	j ()Lfio; cutoutBlockSheet
	k ()Lfio; translucentItemSheet
	l ()Lfio; translucentCullBlockSheet
fit net/minecraft/client/renderer/SpriteCoordinateExpander
	a delegate
	b sprite
	a (DDD)Lehi; vertex
	a (FF)Lehi; uv
	a (FFFFFFFFFIIFFF)V vertex
	a (II)Lehi; overlayCoords
	a (IIII)Lehi; color
	b (FFF)Lehi; normal
	b (II)Lehi; uv2
	b (IIII)V defaultColor
	e ()V endVertex
	k ()V unsetDefaultColor
fiu net/minecraft/client/renderer/ViewArea
	a levelRenderer
	b level
	c chunkGridSizeY
	d chunkGridSizeX
	e chunkGridSizeZ
	f chunks
	a ()V releaseAllBuffers
	a (DD)V repositionCamera
	a (I)V setViewDistance
	a (III)I getChunkIndex
	a (IIIZ)V setDirty
	a (Lfky;)V createChunks
	a (Lnet/minecraft/core/BlockPosition;)Lfky$c; getRenderChunkAt
fiv net/minecraft/client/renderer/VirtualScreen
	a minecraft
	b screenManager
	a (Lefw;Ljava/lang/String;Ljava/lang/String;)Legi; newWindow
fiw net/minecraft/client/renderer/block/BlockModelShaper
	a modelByStateCache
	b modelManager
	a ()Lfve; getModelManager
	a (Ljava/util/Map;)V replaceCache
	a (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/world/level/block/state/IBlockData;)Lfvf; stateToModelLocation
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Lftc; getParticleIcon
	a (Lnet/minecraft/world/level/block/state/properties/IBlockState;Ljava/lang/Comparable;)Ljava/lang/String; getValue
	b (Ljava/util/Map;)Ljava/lang/String; statePropertiesToString
	b (Lnet/minecraft/world/level/block/state/IBlockData;)Lfuy; getBlockModel
	c (Lnet/minecraft/world/level/block/state/IBlockData;)Lfvf; stateToModelLocation
fix net/minecraft/client/renderer/block/BlockRenderDispatcher
	a blockModelShaper
	b modelRenderer
	c blockEntityRenderer
	d liquidBlockRenderer
	e random
	f blockColors
	a ()Lfiw; getBlockModelShaper
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/IBlockLightAccess;Lehi;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/Fluid;)V renderLiquid
	a (Lnet/minecraft/server/packs/resources/IResourceManager;)V onResourceManagerReload
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Lfuy; getBlockModel
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lehe;Lfig;II)V renderSingleBlock
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/IBlockLightAccess;Lehe;Lehi;)V renderBreakingTexture
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/IBlockLightAccess;Lehe;Lehi;ZLnet/minecraft/util/RandomSource;)V renderBatched
	b ()Lfiz; getModelRenderer
fiy net/minecraft/client/renderer/block/LiquidBlockRenderer
	a MAX_FLUID_HEIGHT
	b lavaIcons
	c waterIcons
	d waterOverlay
	a ()V setupSprites
	a (Lehi;DDDFFFFFI)V vertex
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;FLnet/minecraft/world/level/block/state/IBlockData;)Z isFaceOccludedByNeighbor
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;)Z isFaceOccludedBySelf
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/EnumDirection;FLnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isFaceOccludedByState
	a (Lnet/minecraft/world/level/IBlockLightAccess;Lnet/minecraft/core/BlockPosition;)I getLightColor
	a (Lnet/minecraft/world/level/IBlockLightAccess;Lnet/minecraft/core/BlockPosition;Lehi;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/Fluid;)V tesselate
	a (Lnet/minecraft/world/level/IBlockLightAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/material/Fluid;)Z shouldRenderFace
	a (Lnet/minecraft/world/level/IBlockLightAccess;Lnet/minecraft/world/level/material/FluidType;FFFLnet/minecraft/core/BlockPosition;)F calculateAverageHeight
	a (Lnet/minecraft/world/level/IBlockLightAccess;Lnet/minecraft/world/level/material/FluidType;Lnet/minecraft/core/BlockPosition;)F getHeight
	a (Lnet/minecraft/world/level/IBlockLightAccess;Lnet/minecraft/world/level/material/FluidType;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/Fluid;)F getHeight
	a (Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/world/level/material/Fluid;)Z isNeighborSameFluid
	a ([FF)V addWeightedHeight
fiz net/minecraft/client/renderer/block/ModelBlockRenderer
	a FACE_CUBIC
	b FACE_PARTIAL
	c DIRECTIONS
	d blockColors
	e CACHE_SIZE
	f CACHE
	a ()V enableCaching
	a (Lehe$a;Lehi;FFFLjava/util/List;II)V renderQuadList
	a (Lehe$a;Lehi;Lnet/minecraft/world/level/block/state/IBlockData;Lfuy;FFFII)V renderModel
	a (Lnet/minecraft/world/level/IBlockLightAccess;Lfuy;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lehe;Lehi;ZLnet/minecraft/util/RandomSource;JI)V tesselateBlock
	a (Lnet/minecraft/world/level/IBlockLightAccess;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;IIZLehe;Lehi;Ljava/util/List;Ljava/util/BitSet;)V renderModelFaceFlat
	a (Lnet/minecraft/world/level/IBlockLightAccess;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lehe;Lehi;Ljava/util/List;[FLjava/util/BitSet;Lfiz$b;I)V renderModelFaceAO
	a (Lnet/minecraft/world/level/IBlockLightAccess;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lehi;Lehe$a;Lfja;FFFFIIIII)V putQuadData
	a (Lnet/minecraft/world/level/IBlockLightAccess;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;[ILnet/minecraft/core/EnumDirection;[FLjava/util/BitSet;)V calculateShape
	b ()V clearCache
	b (Lnet/minecraft/world/level/IBlockLightAccess;Lfuy;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lehe;Lehi;ZLnet/minecraft/util/RandomSource;JI)V tesselateWithAO
	c (Lnet/minecraft/world/level/IBlockLightAccess;Lfuy;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lehe;Lehi;ZLnet/minecraft/util/RandomSource;JI)V tesselateWithoutAO
fiz$a net/minecraft/client/renderer/block/ModelBlockRenderer$AdjacencyInfo
	a DOWN
	b UP
	c NORTH
	d SOUTH
	e WEST
	f EAST
	g corners
	h doNonCubicWeight
	i vert0Weights
	j vert1Weights
	k vert2Weights
	l vert3Weights
	m BY_FACING
	n $VALUES
	a ()[Lfiz$a; $values
	a (Lnet/minecraft/core/EnumDirection;)Lfiz$a; fromFacing
fiz$b net/minecraft/client/renderer/block/ModelBlockRenderer$AmbientOcclusionFace
	a brightness
	b lightmap
	a (IIII)I blend
	a (IIIIFFFF)I blend
	a (Lnet/minecraft/world/level/IBlockLightAccess;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;[FLjava/util/BitSet;Z)V calculate
fiz$c net/minecraft/client/renderer/block/ModelBlockRenderer$AmbientVertexRemap
	a DOWN
	b UP
	c NORTH
	d SOUTH
	e WEST
	f EAST
	g vert0
	h vert1
	i vert2
	j vert3
	k BY_FACING
	l $VALUES
	a ()[Lfiz$c; $values
	a (Lnet/minecraft/core/EnumDirection;)Lfiz$c; fromFacing
fiz$d net/minecraft/client/renderer/block/ModelBlockRenderer$Cache
	a enabled
	b colorCache
	c brightnessCache
	a ()V enable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockLightAccess;Lnet/minecraft/core/BlockPosition;)I getLightColor
	b ()V disable
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockLightAccess;Lnet/minecraft/core/BlockPosition;)F getShadeBrightness
fiz$e net/minecraft/client/renderer/block/ModelBlockRenderer$SizeInfo
	a DOWN
	b UP
	c NORTH
	d SOUTH
	e WEST
	f EAST
	g FLIP_DOWN
	h FLIP_UP
	i FLIP_NORTH
	j FLIP_SOUTH
	k FLIP_WEST
	l FLIP_EAST
	m shape
	n $VALUES
	a ()[Lfiz$e; $values
fja net/minecraft/client/renderer/block/model/BakedQuad
	a vertices
	b tintIndex
	c direction
	d sprite
	e shade
	a ()Lftc; getSprite
	b ()[I getVertices
	c ()Z isTinted
	d ()I getTintIndex
	e ()Lnet/minecraft/core/EnumDirection; getDirection
	f ()Z isShade
fjb net/minecraft/client/renderer/block/model/BlockElement
	a from
	b to
	c faces
	d rotation
	e shade
	f DEFAULT_RESCALE
	g MIN_EXTENT
	h MAX_EXTENT
	a ()V fillUvs
	a (Lnet/minecraft/core/EnumDirection;)[F uvsByFace
fjb$a net/minecraft/client/renderer/block/model/BlockElement$Deserializer
	a DEFAULT_SHADE
	a (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/Map; getFaces
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lfjb; deserialize
	a (Lcom/google/gson/JsonObject;)Lfjd; getRotation
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lorg/joml/Vector3f; getVector3f
	a (Ljava/lang/String;)Lnet/minecraft/core/EnumDirection; getFacing
	b (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/Map; filterNullFromFaces
	b (Lcom/google/gson/JsonObject;)F getAngle
	c (Lcom/google/gson/JsonObject;)Lnet/minecraft/core/EnumDirection$EnumAxis; getAxis
	d (Lcom/google/gson/JsonObject;)Lorg/joml/Vector3f; getTo
	e (Lcom/google/gson/JsonObject;)Lorg/joml/Vector3f; getFrom
fjc net/minecraft/client/renderer/block/model/BlockElementFace
	a NO_TINT
	b cullForDirection
	c tintIndex
	d texture
	e uv
fjc$a net/minecraft/client/renderer/block/model/BlockElementFace$Deserializer
	a DEFAULT_TINT_INDEX
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lfjc; deserialize
	a (Lcom/google/gson/JsonObject;)I getTintIndex
	b (Lcom/google/gson/JsonObject;)Ljava/lang/String; getTexture
	c (Lcom/google/gson/JsonObject;)Lnet/minecraft/core/EnumDirection; getCullFacing
fjd net/minecraft/client/renderer/block/model/BlockElementRotation
	a origin
	b axis
	c angle
	d rescale
	a ()Lorg/joml/Vector3f; origin
	b ()Lnet/minecraft/core/EnumDirection$EnumAxis; axis
	c ()F angle
	d ()Z rescale
fje net/minecraft/client/renderer/block/model/BlockFaceUV
	a uvs
	b rotation
	a (I)F getU
	a ([F)V setMissingUv
	b (I)F getV
	c (I)I getReverseIndex
	d (I)I getShiftedIndex
fje$a net/minecraft/client/renderer/block/model/BlockFaceUV$Deserializer
	a DEFAULT_ROTATION
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lfje; deserialize
	a (Lcom/google/gson/JsonObject;)I getRotation
	b (Lcom/google/gson/JsonObject;)[F getUVs
fjf net/minecraft/client/renderer/block/model/BlockModel
	a GSON
	b PARTICLE_TEXTURE_REFERENCE
	c name
	d textureMap
	e parent
	f parentLocation
	g LOGGER
	h FACE_BAKERY
	i REFERENCE_CHAR
	j DEFAULT_AMBIENT_OCCLUSION
	k elements
	l guiLight
	m hasAmbientOcclusion
	n transforms
	o overrides
	a ()Ljava/util/List; getElements
	a (Lfjb;Lfjc;Lftc;Lnet/minecraft/core/EnumDirection;Lfvg;Lnet/minecraft/resources/MinecraftKey;)Lfja; bakeFace
	a (Lfvc;Lfjf;)Lfjk; getItemOverrides
	a (Lfvc;Lfjf;Ljava/util/function/Function;Lfvg;Lnet/minecraft/resources/MinecraftKey;Z)Lfuy; bake
	a (Lfvc;Ljava/util/function/Function;Lfvg;Lnet/minecraft/resources/MinecraftKey;)Lfuy; bake
	a (Ljava/io/Reader;)Lfjf; fromStream
	a (Ljava/lang/String;)Lfjf; fromString
	a (Ljava/util/function/Function;)V resolveParents
	a (Lnet/minecraft/world/item/ItemDisplayContext;)Lfjl; getTransform
	b ()Z hasAmbientOcclusion
	b (Ljava/lang/String;)Z hasTexture
	c ()Lfjf$b; getGuiLight
	c (Ljava/lang/String;)Lfvb; getMaterial
	d ()Z isResolved
	d (Ljava/lang/String;)Lcom/mojang/datafixers/util/Either; findTextureEntry
	e ()Ljava/util/List; getOverrides
	e (Ljava/lang/String;)Z isTextureReference
	f ()Ljava/util/Collection; getDependencies
	g ()Lfjf; getRootModel
	h ()Lfjm; getTransforms
fjf$a net/minecraft/client/renderer/block/model/BlockModel$Deserializer
	a (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/List; getOverrides
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lfjf; deserialize
	a (Lcom/google/gson/JsonObject;)Ljava/lang/Boolean; getAmbientOcclusion
	a (Lnet/minecraft/resources/MinecraftKey;Ljava/lang/String;)Lcom/mojang/datafixers/util/Either; parseTextureLocationOrReference
	b (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/List; getElements
	b (Lcom/google/gson/JsonObject;)Ljava/util/Map; getTextureMap
	c (Lcom/google/gson/JsonObject;)Ljava/lang/String; getParentName
fjf$b net/minecraft/client/renderer/block/model/BlockModel$GuiLight
	a FRONT
	b SIDE
	c name
	d $VALUES
	a ()Z lightLikeBlock
	a (Ljava/lang/String;)Lfjf$b; getByName
	b ()[Lfjf$b; $values
fjf$c net/minecraft/client/renderer/block/model/BlockModel$LoopException
fjg net/minecraft/client/renderer/block/model/BlockModelDefinition
	a variants
	b multiPart
	a ()Ljava/util/Map; getVariants
	a (Lfjg$a;Lcom/google/gson/JsonElement;)Lfjg; fromJsonElement
	a (Lfjg$a;Ljava/io/Reader;)Lfjg; fromStream
	a (Ljava/lang/String;)Z hasVariant
	b ()Ljava/util/Set; getMultiVariants
	b (Ljava/lang/String;)Lfjn; getVariant
	c ()Z isMultiPart
	d ()Lfjs; getMultiPart
fjg$a net/minecraft/client/renderer/block/model/BlockModelDefinition$Context
	a gson
	b definition
	a ()Lnet/minecraft/world/level/block/state/BlockStateList; getDefinition
	a (Lnet/minecraft/world/level/block/state/BlockStateList;)V setDefinition
fjg$b net/minecraft/client/renderer/block/model/BlockModelDefinition$Deserializer
	a (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/Map; getVariants
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lfjg; deserialize
	b (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Lfjs; getMultiPart
fjg$c net/minecraft/client/renderer/block/model/BlockModelDefinition$MissingVariantException
fjh net/minecraft/client/renderer/block/model/FaceBakery
	a VERTEX_INT_SIZE
	b VERTEX_COUNT
	c UV_INDEX
	d RESCALE_22_5
	e RESCALE_45
	f COLOR_INDEX
	a (Lfje;Lftc;Lnet/minecraft/core/EnumDirection;[FLcom/mojang/math/Transformation;Lfjd;Z)[I makeVertices
	a (Lfje;Lnet/minecraft/core/EnumDirection;Lcom/mojang/math/Transformation;Lnet/minecraft/resources/MinecraftKey;)Lfje; recomputeUVs
	a (Lorg/joml/Vector3f;Lcom/mojang/math/Transformation;)V applyModelRotation
	a (Lorg/joml/Vector3f;Lfjd;)V applyElementRotation
	a (Lorg/joml/Vector3f;Lorg/joml/Vector3f;)[F setupShape
	a (Lorg/joml/Vector3f;Lorg/joml/Vector3f;Lfjc;Lftc;Lnet/minecraft/core/EnumDirection;Lfvg;Lfjd;ZLnet/minecraft/resources/MinecraftKey;)Lfja; bakeQuad
	a (Lorg/joml/Vector3f;Lorg/joml/Vector3f;Lorg/joml/Matrix4f;Lorg/joml/Vector3f;)V rotateVertexBy
	a ([I)Lnet/minecraft/core/EnumDirection; calculateFacing
	a ([IILnet/minecraft/core/EnumDirection;Lfje;[FLftc;Lcom/mojang/math/Transformation;Lfjd;Z)V bakeVertex
	a ([IILorg/joml/Vector3f;Lftc;Lfje;)V fillVertex
	a ([ILnet/minecraft/core/EnumDirection;)V recalculateWinding
fji net/minecraft/client/renderer/block/model/ItemModelGenerator
	a LAYERS
	b MIN_Z
	c MAX_Z
	a (ILjava/lang/String;Lfsw;)Ljava/util/List; processFrames
	a (Lfji$b;Ljava/util/List;Lfsw;IIIIIZ)V checkTransition
	a (Lfsw;)Ljava/util/List; getSpans
	a (Lfsw;IIIII)Z isTransparent
	a (Lfsw;Ljava/lang/String;I)Ljava/util/List; createSideElements
	a (Ljava/util/List;Lfji$b;II)V createOrExpandSpan
	a (Ljava/util/function/Function;Lfjf;)Lfjf; generateBlockModel
fji$a net/minecraft/client/renderer/block/model/ItemModelGenerator$Span
	a facing
	b min
	c max
	d anchor
	a ()Lfji$b; getFacing
	a (I)V expand
	b ()I getMin
	c ()I getMax
	d ()I getAnchor
fji$b net/minecraft/client/renderer/block/model/ItemModelGenerator$SpanFacing
	a UP
	b DOWN
	c LEFT
	d RIGHT
	e direction
	f xOffset
	g yOffset
	h $VALUES
	a ()Lnet/minecraft/core/EnumDirection; getDirection
	b ()I getXOffset
	c ()I getYOffset
	d ()Z isHorizontal
	e ()[Lfji$b; $values
fjj net/minecraft/client/renderer/block/model/ItemOverride
	a model
	b predicates
	a ()Lnet/minecraft/resources/MinecraftKey; getModel
	b ()Ljava/util/stream/Stream; getPredicates
fjj$a net/minecraft/client/renderer/block/model/ItemOverride$Deserializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lfjj; deserialize
	a (Lcom/google/gson/JsonObject;)Ljava/util/List; getPredicates
fjj$b net/minecraft/client/renderer/block/model/ItemOverride$Predicate
	a property
	b value
	a ()Lnet/minecraft/resources/MinecraftKey; getProperty
	b ()F getValue
fjk net/minecraft/client/renderer/block/model/ItemOverrides
	a EMPTY
	b NO_OVERRIDE
	c overrides
	d properties
	a (Lfuy;Lnet/minecraft/world/item/ItemStack;Lfdj;Lnet/minecraft/world/entity/EntityLiving;I)Lfuy; resolve
	a (Lfvc;Lfjf;Lfjj;)Lfuy; bakeModel
fjk$a net/minecraft/client/renderer/block/model/ItemOverrides$BakedOverride
	a matchers
	b model
	a ([F)Z test
fjk$b net/minecraft/client/renderer/block/model/ItemOverrides$PropertyMatcher
	a index
	b value
fjl net/minecraft/client/renderer/block/model/ItemTransform
	a NO_TRANSFORM
	b rotation
	c translation
	d scale
	a (ZLehe;)V apply
fjl$a net/minecraft/client/renderer/block/model/ItemTransform$Deserializer
	a MAX_TRANSLATION
	b MAX_SCALE
	c DEFAULT_ROTATION
	d DEFAULT_TRANSLATION
	e DEFAULT_SCALE
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lfjl; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Lorg/joml/Vector3f;)Lorg/joml/Vector3f; getVector3f
fjm net/minecraft/client/renderer/block/model/ItemTransforms
	a NO_TRANSFORMS
	b thirdPersonLeftHand
	c thirdPersonRightHand
	d firstPersonLeftHand
	e firstPersonRightHand
	f head
	g gui
	h ground
	i fixed
	a (Lnet/minecraft/world/item/ItemDisplayContext;)Lfjl; getTransform
	b (Lnet/minecraft/world/item/ItemDisplayContext;)Z hasTransform
fjm$a net/minecraft/client/renderer/block/model/ItemTransforms$Deserializer
	a (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;Lnet/minecraft/world/item/ItemDisplayContext;)Lfjl; getTransform
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lfjm; deserialize
fjn net/minecraft/client/renderer/block/model/MultiVariant
	a variants
	a ()Ljava/util/List; getVariants
	a (Lfvc;Ljava/util/function/Function;Lfvg;Lnet/minecraft/resources/MinecraftKey;)Lfuy; bake
	a (Ljava/util/function/Function;)V resolveParents
	f ()Ljava/util/Collection; getDependencies
fjn$a net/minecraft/client/renderer/block/model/MultiVariant$Deserializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lfjn; deserialize
fjo net/minecraft/client/renderer/block/model/Variant
	a modelLocation
	b rotation
	c uvLock
	d weight
	a ()Lnet/minecraft/resources/MinecraftKey; getModelLocation
	b ()Lcom/mojang/math/Transformation; getRotation
	c ()Z isUvLocked
	d ()I getWeight
fjo$a net/minecraft/client/renderer/block/model/Variant$Deserializer
	a DEFAULT_UVLOCK
	b DEFAULT_WEIGHT
	c DEFAULT_X_ROTATION
	d DEFAULT_Y_ROTATION
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lfjo; deserialize
	a (Lcom/google/gson/JsonObject;)Lfuz; getBlockRotation
	b (Lcom/google/gson/JsonObject;)Lnet/minecraft/resources/MinecraftKey; getModel
	c (Lcom/google/gson/JsonObject;)I getWeight
	d (Lcom/google/gson/JsonObject;)Z getUvLock
fjp net/minecraft/client/renderer/block/model/multipart/AndCondition
	a TOKEN
	d conditions
fjq net/minecraft/client/renderer/block/model/multipart/Condition
	b TRUE
	c FALSE
fjr net/minecraft/client/renderer/block/model/multipart/KeyValueCondition
	a PIPE_SPLITTER
	d key
	e value
	a (Lnet/minecraft/world/level/block/state/BlockStateList;Lnet/minecraft/world/level/block/state/properties/IBlockState;Ljava/lang/String;)Ljava/util/function/Predicate; getBlockStatePredicate
fjs net/minecraft/client/renderer/block/model/multipart/MultiPart
	a definition
	b selectors
	a ()Ljava/util/List; getSelectors
	a (Lfvc;Ljava/util/function/Function;Lfvg;Lnet/minecraft/resources/MinecraftKey;)Lfuy; bake
	a (Ljava/util/function/Function;)V resolveParents
	b ()Ljava/util/Set; getMultiVariants
	f ()Ljava/util/Collection; getDependencies
fjs$a net/minecraft/client/renderer/block/model/multipart/MultiPart$Deserializer
	a context
	a (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonArray;)Ljava/util/List; getSelectors
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lfjs; deserialize
fjt net/minecraft/client/renderer/block/model/multipart/OrCondition
	a TOKEN
	d conditions
fju net/minecraft/client/renderer/block/model/multipart/Selector
	a condition
	b variant
	a ()Lfjn; getVariant
	a (Lnet/minecraft/world/level/block/state/BlockStateList;)Ljava/util/function/Predicate; getPredicate
fju$a net/minecraft/client/renderer/block/model/multipart/Selector$Deserializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lfju; deserialize
	a (Lcom/google/gson/JsonObject;)Lfjq; getCondition
	a (Ljava/util/Map$Entry;)Lfjq; getKeyValueCondition
	b (Lcom/google/gson/JsonObject;)Lfjq; getSelector
fjy net/minecraft/client/renderer/blockentity/BannerRenderer
	a FLAG
	b BANNER_WIDTH
	c BANNER_HEIGHT
	d MAX_PATTERNS
	e POLE
	f BAR
	g flag
	h pole
	i bar
	a ()Lfcx; createBodyLayer
	a (Lehe;Lfig;IILfcr;Lfvb;ZLjava/util/List;)V renderPatterns
	a (Lehe;Lfig;IILfcr;Lfvb;ZLjava/util/List;Z)V renderPatterns
	a (Lnet/minecraft/world/level/block/entity/TileEntity;FLehe;Lfig;II)V render
	a (Lnet/minecraft/world/level/block/entity/TileEntityBanner;FLehe;Lfig;II)V render
fjz net/minecraft/client/renderer/blockentity/BeaconRenderer
	a BEAM_LOCATION
	b MAX_RENDER_Y
	a (Lehe;Lehi;FFFFIIFFFFFFFFFFFF)V renderPart
	a (Lehe;Lfig;FJII[F)V renderBeaconBeam
	a (Lehe;Lfig;Lnet/minecraft/resources/MinecraftKey;FFJII[FFF)V renderBeaconBeam
	a (Lnet/minecraft/world/level/block/entity/TileEntity;)Z shouldRenderOffScreen
	a (Lnet/minecraft/world/level/block/entity/TileEntity;FLehe;Lfig;II)V render
	a (Lnet/minecraft/world/level/block/entity/TileEntity;Lnet/minecraft/world/phys/Vec3D;)Z shouldRender
	a (Lnet/minecraft/world/level/block/entity/TileEntityBeacon;)Z shouldRenderOffScreen
	a (Lnet/minecraft/world/level/block/entity/TileEntityBeacon;FLehe;Lfig;II)V render
	a (Lnet/minecraft/world/level/block/entity/TileEntityBeacon;Lnet/minecraft/world/phys/Vec3D;)Z shouldRender
	a (Lorg/joml/Matrix4f;Lorg/joml/Matrix3f;Lehi;FFFFIFFFF)V addVertex
	a (Lorg/joml/Matrix4f;Lorg/joml/Matrix3f;Lehi;FFFFIIFFFFFFFF)V renderQuad
	aM_ ()I getViewDistance
fka net/minecraft/client/renderer/blockentity/BedRenderer
	a headRoot
	b footRoot
	a (Lehe;Lfig;Lfcr;Lnet/minecraft/core/EnumDirection;Lfvb;IIZ)V renderPiece
	a (Lnet/minecraft/world/level/block/entity/TileEntity;FLehe;Lfig;II)V render
	a (Lnet/minecraft/world/level/block/entity/TileEntityBed;FLehe;Lfig;II)V render
	b ()Lfcx; createHeadLayer
	c ()Lfcx; createFootLayer
fkb net/minecraft/client/renderer/blockentity/BellRenderer
	a BELL_RESOURCE_LOCATION
	b BELL_BODY
	c bellBody
	a (Lnet/minecraft/world/level/block/entity/TileEntity;FLehe;Lfig;II)V render
	a (Lnet/minecraft/world/level/block/entity/TileEntityBell;FLehe;Lfig;II)V render
	b ()Lfcx; createBodyLayer
fkc net/minecraft/client/renderer/blockentity/BlockEntityRenderDispatcher
	a level
	b camera
	c cameraHitResult
	d renderers
	e font
	f entityModelSet
	g blockRenderDispatcher
	h itemRenderer
	i entityRenderer
	a (Lfkd;Lnet/minecraft/world/level/block/entity/TileEntity;FLehe;Lfig;)V setupAndRender
	a (Lnet/minecraft/server/packs/resources/IResourceManager;)V onResourceManagerReload
	a (Lnet/minecraft/world/level/World;)V setLevel
	a (Lnet/minecraft/world/level/World;Lelt;Lnet/minecraft/world/phys/MovingObjectPosition;)V prepare
	a (Lnet/minecraft/world/level/block/entity/TileEntity;)Lfkd; getRenderer
	a (Lnet/minecraft/world/level/block/entity/TileEntity;FLehe;Lfig;)V render
	a (Lnet/minecraft/world/level/block/entity/TileEntity;Lehe;Lfig;II)Z renderItem
	a (Lnet/minecraft/world/level/block/entity/TileEntity;Ljava/lang/Runnable;)V tryRender
fkd net/minecraft/client/renderer/blockentity/BlockEntityRenderer
	a (Lnet/minecraft/world/level/block/entity/TileEntity;)Z shouldRenderOffScreen
	a (Lnet/minecraft/world/level/block/entity/TileEntity;FLehe;Lfig;II)V render
	a (Lnet/minecraft/world/level/block/entity/TileEntity;Lnet/minecraft/world/phys/Vec3D;)Z shouldRender
	aM_ ()I getViewDistance
fke net/minecraft/client/renderer/blockentity/BlockEntityRendererProvider
fke$a net/minecraft/client/renderer/blockentity/BlockEntityRendererProvider$Context
	a blockEntityRenderDispatcher
	b blockRenderDispatcher
	c itemRenderer
	d entityRenderer
	e modelSet
	f font
	a ()Lfkc; getBlockEntityRenderDispatcher
	a (Lfcp;)Lfcr; bakeLayer
	b ()Lfix; getBlockRenderDispatcher
	c ()Lfnc; getEntityRenderer
	d ()Lfoc; getItemRenderer
	e ()Lfcn; getModelSet
	f ()Lenp; getFont
fkf net/minecraft/client/renderer/blockentity/BlockEntityRenderers
	a PROVIDERS
	a (Lfke$a;)Ljava/util/Map; createEntityRenderers
	a (Lnet/minecraft/world/level/block/entity/TileEntityTypes;Lfke;)V register
fkg net/minecraft/client/renderer/blockentity/BrightnessCombiner
	a ()Lit/unimi/dsi/fastutil/ints/Int2IntFunction; acceptNone
	a (Ljava/lang/Object;)Ljava/lang/Object; acceptSingle
	a (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; acceptDouble
	a (Lnet/minecraft/world/level/block/entity/TileEntity;)Lit/unimi/dsi/fastutil/ints/Int2IntFunction; acceptSingle
	a (Lnet/minecraft/world/level/block/entity/TileEntity;Lnet/minecraft/world/level/block/entity/TileEntity;)Lit/unimi/dsi/fastutil/ints/Int2IntFunction; acceptDouble
	b ()Ljava/lang/Object; acceptNone
fkh net/minecraft/client/renderer/blockentity/CampfireRenderer
	a SIZE
	b itemRenderer
	a (Lnet/minecraft/world/level/block/entity/TileEntity;FLehe;Lfig;II)V render
	a (Lnet/minecraft/world/level/block/entity/TileEntityCampfire;FLehe;Lfig;II)V render
fki net/minecraft/client/renderer/blockentity/ChestRenderer
	a BOTTOM
	b LID
	c LOCK
	d lid
	e bottom
	f lock
	g doubleLeftLid
	h doubleLeftBottom
	i doubleLeftLock
	j doubleRightLid
	k doubleRightBottom
	l doubleRightLock
	m xmasTextures
	a (Lehe;Lehi;Lfcr;Lfcr;Lfcr;FII)V render
	a (Lnet/minecraft/world/level/block/entity/TileEntity;FLehe;Lfig;II)V render
	b ()Lfcx; createSingleBodyLayer
	c ()Lfcx; createDoubleBodyRightLayer
	d ()Lfcx; createDoubleBodyLeftLayer
fkj net/minecraft/client/renderer/blockentity/ConduitRenderer
	a SHELL_TEXTURE
	b ACTIVE_SHELL_TEXTURE
	c WIND_TEXTURE
	d VERTICAL_WIND_TEXTURE
	e OPEN_EYE_TEXTURE
	f CLOSED_EYE_TEXTURE
	g eye
	h wind
	i shell
	j cage
	k renderer
	a (Lnet/minecraft/world/level/block/entity/TileEntity;FLehe;Lfig;II)V render
	a (Lnet/minecraft/world/level/block/entity/TileEntityConduit;FLehe;Lfig;II)V render
	b ()Lfcx; createEyeLayer
	c ()Lfcx; createWindLayer
	d ()Lfcx; createShellLayer
	e ()Lfcx; createCageLayer
fkk net/minecraft/client/renderer/blockentity/DecoratedPotRenderer
	a NECK
	b FRONT
	c BACK
	d LEFT
	e RIGHT
	f TOP
	g BOTTOM
	h neck
	i frontSide
	j backSide
	k leftSide
	l rightSide
	m top
	n bottom
	o baseMaterial
	a (Lfcr;Lehe;Lfig;IILfvb;)V renderSide
	a (Lnet/minecraft/world/item/Item;)Lfvb; getMaterial
	a (Lnet/minecraft/world/level/block/entity/DecoratedPotBlockEntity;FLehe;Lfig;II)V render
	a (Lnet/minecraft/world/level/block/entity/TileEntity;FLehe;Lfig;II)V render
	b ()Lfcx; createBaseLayer
	c ()Lfcx; createSidesLayer
fkl net/minecraft/client/renderer/blockentity/EnchantTableRenderer
	a BOOK_LOCATION
	b bookModel
	a (Lnet/minecraft/world/level/block/entity/TileEntity;FLehe;Lfig;II)V render
	a (Lnet/minecraft/world/level/block/entity/TileEntityEnchantTable;FLehe;Lfig;II)V render
fkm net/minecraft/client/renderer/blockentity/HangingSignRenderer
	a NORMAL_CHAINS
	b CHAIN_L_1
	c CHAIN_L_2
	d CHAIN_R_1
	e CHAIN_R_2
	f BOARD
	g PLANK
	h V_CHAINS
	i hangingSignModels
	a (F)Lnet/minecraft/world/phys/Vec3D; getTextOffset
	a (Lehe;IILfao;Lehi;)V renderSignModel
	a (Lnet/minecraft/world/level/block/entity/TileEntity;FLehe;Lfig;II)V render
	a (Lnet/minecraft/world/level/block/entity/TileEntitySign;FLehe;Lfig;II)V render
	a (Lnet/minecraft/world/level/block/state/IBlockData;Z)F getSignAngle
	a (Lnet/minecraft/world/level/block/state/properties/BlockPropertyWood;)Lfvb; getSignMaterial
	b ()Lfcx; createHangingSignLayer
fkm$a net/minecraft/client/renderer/blockentity/HangingSignRenderer$HangingSignModel
	a root
	b plank
	c vChains
	d normalChains
	a (Lehe;Lehi;IIFFFF)V renderToBuffer
	a (Lnet/minecraft/world/level/block/state/IBlockData;)V evaluateVisibleParts
fkn net/minecraft/client/renderer/blockentity/LecternRenderer
	a bookModel
	a (Lnet/minecraft/world/level/block/entity/TileEntity;FLehe;Lfig;II)V render
	a (Lnet/minecraft/world/level/block/entity/TileEntityLectern;FLehe;Lfig;II)V render
fko net/minecraft/client/renderer/blockentity/PistonHeadRenderer
	a blockRenderer
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lehe;Lfig;Lnet/minecraft/world/level/World;ZI)V renderBlock
	a (Lnet/minecraft/world/level/block/entity/TileEntity;FLehe;Lfig;II)V render
	a (Lnet/minecraft/world/level/block/piston/TileEntityPiston;FLehe;Lfig;II)V render
	aM_ ()I getViewDistance
fkp net/minecraft/client/renderer/blockentity/ShulkerBoxRenderer
	a model
	a (Lnet/minecraft/world/level/block/entity/TileEntity;FLehe;Lfig;II)V render
	a (Lnet/minecraft/world/level/block/entity/TileEntityShulkerBox;FLehe;Lfig;II)V render
fkq net/minecraft/client/renderer/blockentity/SignRenderer
	a STICK
	b BLACK_TEXT_OUTLINE_COLOR
	c OUTLINE_RENDER_DISTANCE
	d signModels
	e font
	a (F)Lnet/minecraft/world/phys/Vec3D; getTextOffset
	a (Lehe;IILfao;Lehi;)V renderSignModel
	a (Lehe;Lfig;IIFLnet/minecraft/world/level/block/state/properties/BlockPropertyWood;Lfao;)V renderSign
	a (Lfcn;Lnet/minecraft/world/level/block/state/properties/BlockPropertyWood;)Lfkq$a; createSignModel
	a (Lnet/minecraft/world/level/block/entity/TileEntity;FLehe;Lfig;II)V render
	a (Lnet/minecraft/world/level/block/entity/TileEntitySign;)I getDarkColor
	a (Lnet/minecraft/world/level/block/entity/TileEntitySign;FLehe;Lfig;II)V render
	a (Lnet/minecraft/world/level/block/entity/TileEntitySign;I)Z isOutlineVisible
	a (Lnet/minecraft/world/level/block/entity/TileEntitySign;Lehe;Lfig;IF)V renderSignText
	a (Lnet/minecraft/world/level/block/state/properties/BlockPropertyWood;)Lfvb; getSignMaterial
	c ()Lfcx; createSignLayer
fkq$a net/minecraft/client/renderer/blockentity/SignRenderer$SignModel
	a root
	b stick
	a (Lehe;Lehi;IIFFFF)V renderToBuffer
fkr net/minecraft/client/renderer/blockentity/SkullBlockRenderer
	a modelByType
	b SKIN_BY_TYPE
	a (Lcwg$a;Lcom/mojang/authlib/GameProfile;)Lfio; getRenderType
	a (Lfcn;)Ljava/util/Map; createSkullRenderers
	a (Lnet/minecraft/core/EnumDirection;FFLehe;Lfig;ILfbp;Lfio;)V renderSkull
	a (Lnet/minecraft/world/level/block/entity/TileEntity;FLehe;Lfig;II)V render
	a (Lnet/minecraft/world/level/block/entity/TileEntitySkull;FLehe;Lfig;II)V render
fks net/minecraft/client/renderer/blockentity/SpawnerRenderer
	a entityRenderer
	a (Lnet/minecraft/world/level/block/entity/TileEntity;FLehe;Lfig;II)V render
	a (Lnet/minecraft/world/level/block/entity/TileEntityMobSpawner;FLehe;Lfig;II)V render
fkt net/minecraft/client/renderer/blockentity/StructureBlockRenderer
	a (Lnet/minecraft/world/level/block/entity/TileEntity;)Z shouldRenderOffScreen
	a (Lnet/minecraft/world/level/block/entity/TileEntity;FLehe;Lfig;II)V render
	a (Lnet/minecraft/world/level/block/entity/TileEntityStructure;)Z shouldRenderOffScreen
	a (Lnet/minecraft/world/level/block/entity/TileEntityStructure;FLehe;Lfig;II)V render
	a (Lnet/minecraft/world/level/block/entity/TileEntityStructure;Lehi;Lnet/minecraft/core/BlockPosition;Lehe;)V renderInvisibleBlocks
	aM_ ()I getViewDistance
fku net/minecraft/client/renderer/blockentity/SuspiciousSandRenderer
	a itemRenderer
	a (Lnet/minecraft/core/EnumDirection;I)[F translations
	a (Lnet/minecraft/world/level/block/entity/SuspiciousSandBlockEntity;FLehe;Lfig;II)V render
	a (Lnet/minecraft/world/level/block/entity/TileEntity;FLehe;Lfig;II)V render
fkv net/minecraft/client/renderer/blockentity/TheEndGatewayRenderer
	c BEAM_LOCATION
	a (Lnet/minecraft/world/level/block/entity/TileEntity;FLehe;Lfig;II)V render
	a (Lnet/minecraft/world/level/block/entity/TileEntityEndGateway;FLehe;Lfig;II)V render
	a (Lnet/minecraft/world/level/block/entity/TileEntityEnderPortal;FLehe;Lfig;II)V render
	aM_ ()I getViewDistance
	b ()F getOffsetUp
	c ()F getOffsetDown
	d ()Lfio; renderType
fkw net/minecraft/client/renderer/blockentity/TheEndPortalRenderer
	a END_SKY_LOCATION
	b END_PORTAL_LOCATION
	a (Lnet/minecraft/world/level/block/entity/TileEntity;FLehe;Lfig;II)V render
	a (Lnet/minecraft/world/level/block/entity/TileEntityEnderPortal;FLehe;Lfig;II)V render
	a (Lnet/minecraft/world/level/block/entity/TileEntityEnderPortal;Lorg/joml/Matrix4f;Lehi;)V renderCube
	a (Lnet/minecraft/world/level/block/entity/TileEntityEnderPortal;Lorg/joml/Matrix4f;Lehi;FFFFFFFFLnet/minecraft/core/EnumDirection;)V renderFace
	b ()F getOffsetUp
	c ()F getOffsetDown
	d ()Lfio; renderType
fky net/minecraft/client/renderer/chunk/ChunkRenderDispatcher
	a LOGGER
	b MAX_WORKERS_32_BIT
	c VERTEX_FORMAT
	d MAX_HIGH_PRIORITY_QUOTA
	e toBatchHighPriority
	f toBatchLowPriority
	g highPriorityQuota
	h freeBuffers
	i toUpload
	j toBatchCount
	k freeBufferCount
	l fixedBuffers
	m mailbox
	n executor
	o level
	p renderer
	q camera
	a ()Ljava/lang/String; getStats
	a (Legz$b;Lehh;)Ljava/util/concurrent/CompletableFuture; uploadChunkLayer
	a (Lfdj;)V setLevel
	a (Lfky$c$a;)V schedule
	a (Lfky$c;Lflb;)V rebuildChunkSync
	a (Lnet/minecraft/world/phys/Vec3D;)V setCamera
	b ()I getToBatchCount
	c ()I getToUpload
	d ()I getFreeBufferCount
	e ()Lnet/minecraft/world/phys/Vec3D; getCameraPosition
	f ()V uploadAllPendingUploads
	g ()V blockUntilClear
	h ()Z isQueueEmpty
	i ()V dispose
	j ()V runTask
	k ()Lfky$c$a; pollTask
	l ()V clearBatchQueue
fky$a net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$ChunkTaskResult
	a SUCCESSFUL
	b CANCELLED
	c $VALUES
	a ()[Lfky$a; $values
fky$b net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$CompiledChunk
	a UNCOMPILED
	b hasBlocks
	c renderableBlockEntities
	d visibilitySet
	e transparencyState
	a ()Z hasNoRenderableLayers
	a (Lfio;)Z isEmpty
	a (Lnet/minecraft/core/EnumDirection;Lnet/minecraft/core/EnumDirection;)Z facesCanSeeEachother
	b ()Ljava/util/List; getRenderableBlockEntities
fky$c net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk
	a SIZE
	b index
	c compiled
	e initialCompilationCancelCount
	f lastRebuildTask
	g lastResortTransparencyTask
	h globalBlockEntities
	i buffers
	j bb
	k dirty
	l origin
	m relativeOrigins
	n playerChanged
	a ()Z hasAllNeighbors
	a (III)V setOrigin
	a (Legz;)V beginLayer
	a (Lfio;)Lehh; getBuffer
	a (Lfio;Lfky;)Z resortTransparency
	a (Lfky;Lflb;)V rebuildChunkAsync
	a (Lflb;)Lfky$c$a; createCompileTask
	a (Ljava/util/Collection;)V updateGlobalBlockEntities
	a (Lnet/minecraft/core/BlockPosition;)Z doesChunkExistAt
	a (Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/core/BlockPosition; getRelativeOrigin
	a (Z)V setDirty
	b ()Lnet/minecraft/world/phys/AxisAlignedBB; getBoundingBox
	b (Lflb;)V compileSync
	c ()D getDistToPlayerSqr
	d ()Lfky$b; getCompiledChunk
	e ()V releaseBuffers
	f ()Lnet/minecraft/core/BlockPosition; getOrigin
	g ()V setNotDirty
	h ()Z isDirty
	i ()Z isDirtyFromPlayer
	j ()Z cancelTasks
	k ()V reset
fky$c$a net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk$ChunkCompileTask
	a distAtCreation
	b isCancelled
	c isHighPriority
	a ()V cancel
	a (Lfht;)Ljava/util/concurrent/CompletableFuture; doTask
	a (Lfky$c$a;)I compareTo
	b ()Ljava/lang/String; name
fky$c$b net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk$RebuildTask
	e region
	a ()V cancel
	a (FFFLfht;)Lfky$c$b$a; compile
	a (Lfht;)Ljava/util/concurrent/CompletableFuture; doTask
	a (Lfky$c$b$a;Lnet/minecraft/world/level/block/entity/TileEntity;)V handleBlockEntity
	b ()Ljava/lang/String; name
fky$c$b$a net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk$RebuildTask$CompileResults
	a globalBlockEntities
	b blockEntities
	c renderedLayers
	d visibilitySet
	e transparencyState
fky$c$c net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk$ResortTransparencyTask
	f compiledChunk
	a ()V cancel
	a (Lfht;)Ljava/util/concurrent/CompletableFuture; doTask
	b ()Ljava/lang/String; name
fkz net/minecraft/client/renderer/chunk/RenderChunk
	a blockEntities
	b sections
	c debug
	d wrapped
	a (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/entity/TileEntity; getBlockEntity
	b (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; getBlockState
fla net/minecraft/client/renderer/chunk/RenderChunkRegion
	a chunks
	b level
	c centerX
	d centerZ
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/ColorResolver;)I getBlockTint
	a (Lnet/minecraft/core/EnumDirection;Z)F getShade
	a_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; getBlockState
	b_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	c_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/entity/TileEntity; getBlockEntity
	l_ ()Lnet/minecraft/world/level/lighting/LightEngine; getLightEngine
	v_ ()I getMinBuildHeight
	w_ ()I getHeight
flb net/minecraft/client/renderer/chunk/RenderRegionCache
	a chunkInfoCache
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;II[[Lflb$a;)Z isAllEmpty
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;I)Lfla; createRegion
flb$a net/minecraft/client/renderer/chunk/RenderRegionCache$ChunkInfo
	a chunk
	b renderChunk
	a ()Lnet/minecraft/world/level/chunk/Chunk; chunk
	b ()Lfkz; renderChunk
flc net/minecraft/client/renderer/chunk/VisGraph
	a SIZE_IN_BITS
	b LEN
	c MASK
	d SIZE
	e X_SHIFT
	f Z_SHIFT
	g Y_SHIFT
	h DX
	i DZ
	j DY
	k INVALID_INDEX
	l DIRECTIONS
	m bitSet
	n INDEX_OF_EDGES
	o empty
	a ()Lfld; resolve
	a (I)Ljava/util/Set; floodFill
	a (III)I getIndex
	a (ILjava/util/Set;)V addEdges
	a (ILnet/minecraft/core/EnumDirection;)I getNeighborIndexAtFace
	a (Lnet/minecraft/core/BlockPosition;)V setOpaque
	b (Lnet/minecraft/core/BlockPosition;)I getIndex
fld net/minecraft/client/renderer/chunk/VisibilitySet
	a FACINGS
	b data
	a (Ljava/util/Set;)V add
	a (Lnet/minecraft/core/EnumDirection;Lnet/minecraft/core/EnumDirection;)Z visibilityBetween
	a (Lnet/minecraft/core/EnumDirection;Lnet/minecraft/core/EnumDirection;Z)V set
	a (Z)V setAll
flf net/minecraft/client/renderer/culling/Frustum
	a OFFSET_STEP
	b intersection
	c matrix
	d viewVector
	e camX
	f camY
	g camZ
	a (DDD)V prepare
	a (DDDDDD)Z cubeInFrustum
	a (I)Lflf; offsetToFullyIncludeCameraCube
	a (Lnet/minecraft/world/phys/AxisAlignedBB;)Z isVisible
	a (Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;)V calculateFrustum
flh net/minecraft/client/renderer/debug/BeeDebugRenderer
	A minecraft
	B hives
	C beeInfosPerEntity
	D lastLookedAtUuid
	a SHOW_GOAL_FOR_ALL_BEES
	b SHOW_NAME_FOR_ALL_BEES
	c SHOW_HIVE_FOR_ALL_BEES
	d SHOW_FLOWER_POS_FOR_ALL_BEES
	e SHOW_TRAVEL_TICKS_FOR_ALL_BEES
	f SHOW_PATH_FOR_ALL_BEES
	g SHOW_GOAL_FOR_SELECTED_BEE
	h SHOW_NAME_FOR_SELECTED_BEE
	i SHOW_HIVE_FOR_SELECTED_BEE
	j SHOW_FLOWER_POS_FOR_SELECTED_BEE
	k SHOW_TRAVEL_TICKS_FOR_SELECTED_BEE
	l SHOW_PATH_FOR_SELECTED_BEE
	m SHOW_HIVE_MEMBERS
	n SHOW_BLACKLISTS
	o MAX_RENDER_DIST_FOR_HIVE_OVERLAY
	p MAX_RENDER_DIST_FOR_BEE_OVERLAY
	q MAX_TARGETING_DIST
	r HIVE_TIMEOUT
	s TEXT_SCALE
	t WHITE
	u YELLOW
	v ORANGE
	w GREEN
	x GRAY
	y PINK
	z RED
	a ()V clear
	a (I)V removeBeeInfo
	a (Lehe;Lfig;)V doRender
	a (Lehe;Lfig;DDD)V render
	a (Lehe;Lfig;Lflh$a;)V renderPath
	a (Lehe;Lfig;Lflh$b;Ljava/util/Collection;)V renderHiveInfo
	a (Lehe;Lfig;Ljava/lang/String;Lflh$b;II)V renderTextOverHive
	a (Lehe;Lfig;Ljava/lang/String;Lnet/minecraft/core/BlockPosition;II)V renderTextOverPos
	a (Lehe;Lfig;Lnet/minecraft/core/BlockPosition;)V highlightHive
	a (Lehe;Lfig;Lnet/minecraft/core/BlockPosition;Ljava/util/List;)V renderGhostHive
	a (Lehe;Lfig;Lnet/minecraft/core/IPosition;ILjava/lang/String;IF)V renderTextOverMob
	a (Lflh$a;)V addOrUpdateBeeInfo
	a (Lflh$a;Lnet/minecraft/core/BlockPosition;)Ljava/lang/String; getPosDescription
	a (Lflh$b;)V addOrUpdateHiveInfo
	a (Ljava/util/Collection;)Ljava/lang/String; getBeeUuidsAsString
	a (Lnet/minecraft/core/BlockPosition;)Ljava/util/Collection; getHiveMembers
	b ()V clearRemovedBees
	b (Lehe;Lfig;)V renderFlowerInfos
	b (Lehe;Lfig;Lflh$a;)V renderBeeInfo
	b (Lflh$a;)Z isBeeSelected
	b (Lflh$b;)Ljava/util/Set; getHiveMemberNames
	c ()V clearRemovedHives
	c (Lflh$a;)Z isPlayerCloseEnoughToMob
	d ()Ljava/util/Map; createHiveBlacklistMap
	e ()Lelt; getCamera
	f ()Ljava/util/Map; getGhostHives
	g ()V updateLastLookedAtUuid
flh$a net/minecraft/client/renderer/debug/BeeDebugRenderer$BeeInfo
	a uuid
	b id
	c pos
	d path
	e hivePos
	f flowerPos
	g travelTicks
	h goals
	i blacklistedHives
	a ()Ljava/util/UUID; getUuid
	a (Lnet/minecraft/core/BlockPosition;)Z hasHive
	b ()Ljava/lang/String; getName
	c ()Z hasFlower
flh$b net/minecraft/client/renderer/debug/BeeDebugRenderer$HiveInfo
	a pos
	b hiveType
	c occupantCount
	d honeyLevel
	e sedated
	f lastSeen
fli net/minecraft/client/renderer/debug/BrainDebugRenderer
	A TEXT_SCALE
	B WHITE
	C YELLOW
	D CYAN
	E GREEN
	F GRAY
	G PINK
	H RED
	I ORANGE
	J minecraft
	K pois
	L brainDumpsPerEntity
	M lastLookedAtUuid
	a LOGGER
	b SHOW_NAME_FOR_ALL
	c SHOW_PROFESSION_FOR_ALL
	d SHOW_BEHAVIORS_FOR_ALL
	e SHOW_ACTIVITIES_FOR_ALL
	f SHOW_INVENTORY_FOR_ALL
	g SHOW_GOSSIPS_FOR_ALL
	h SHOW_PATH_FOR_ALL
	i SHOW_HEALTH_FOR_ALL
	j SHOW_WANTS_GOLEM_FOR_ALL
	k SHOW_ANGER_LEVEL_FOR_ALL
	l SHOW_NAME_FOR_SELECTED
	m SHOW_PROFESSION_FOR_SELECTED
	n SHOW_BEHAVIORS_FOR_SELECTED
	o SHOW_ACTIVITIES_FOR_SELECTED
	p SHOW_MEMORIES_FOR_SELECTED
	q SHOW_INVENTORY_FOR_SELECTED
	r SHOW_GOSSIPS_FOR_SELECTED
	s SHOW_PATH_FOR_SELECTED
	t SHOW_HEALTH_FOR_SELECTED
	u SHOW_WANTS_GOLEM_FOR_SELECTED
	v SHOW_ANGER_LEVEL_FOR_SELECTED
	w SHOW_POI_INFO
	x MAX_RENDER_DIST_FOR_BRAIN_INFO
	y MAX_RENDER_DIST_FOR_POI_INFO
	z MAX_TARGETING_DIST
	a ()V clear
	a (I)V removeBrainDump
	a (Lehe;Lfig;DDD)V render
	a (Lehe;Lfig;Lfli$a;DDD)V renderPath
	a (Lehe;Lfig;Lfli$b;)V renderPoiInfo
	a (Lehe;Lfig;Ljava/lang/String;Lfli$b;II)V renderTextOverPoi
	a (Lehe;Lfig;Ljava/lang/String;Lnet/minecraft/core/BlockPosition;II)V renderTextOverPos
	a (Lehe;Lfig;Lnet/minecraft/core/BlockPosition;)V highlightPoi
	a (Lehe;Lfig;Lnet/minecraft/core/BlockPosition;Ljava/util/List;)V renderGhostPoi
	a (Lehe;Lfig;Lnet/minecraft/core/IPosition;ILjava/lang/String;IF)V renderTextOverMob
	a (Lfli$a;)V addOrUpdateBrainDump
	a (Lfli$b;)V addPoi
	a (Lnet/minecraft/core/BlockPosition;)V removePoi
	a (Lnet/minecraft/core/BlockPosition;I)V setFreeTicketCount
	b ()V clearRemovedEntities
	b (Lehe;Lfig;DDD)V doRender
	b (Lehe;Lfig;Lfli$a;DDD)V renderBrainInfo
	b (Lfli$a;)Z isMobSelected
	b (Lfli$b;)Ljava/util/Set; getTicketHolderNames
	b (Lnet/minecraft/core/BlockPosition;)Ljava/util/Collection; getTicketHolders
	c ()Ljava/util/Map; getGhostPois
	c (Lfli$a;)Z isPlayerCloseEnoughToMob
	c (Lfli$b;)Ljava/util/Set; getPotentialTicketHolderNames
	c (Lnet/minecraft/core/BlockPosition;)Ljava/util/Collection; getPotentialTicketHolders
	d ()V updateLastLookedAtUuid
fli$a net/minecraft/client/renderer/debug/BrainDebugRenderer$BrainDump
	a uuid
	b id
	c name
	d profession
	e xp
	f health
	g maxHealth
	h pos
	i inventory
	j path
	k wantsGolem
	l angerLevel
	m activities
	n behaviors
	o memories
	p gossips
	q pois
	r potentialPois
	a ()Ljava/util/UUID; getUuid
	a (Lnet/minecraft/core/BlockPosition;)Z hasPoi
	b (Lnet/minecraft/core/BlockPosition;)Z hasPotentialPoi
fli$b net/minecraft/client/renderer/debug/BrainDebugRenderer$PoiInfo
	a pos
	b type
	c freeTicketCount
flj net/minecraft/client/renderer/debug/ChunkBorderRenderer
	a minecraft
	b CELL_BORDER
	c YELLOW
	a (Lehe;Lfig;DDD)V render
flk net/minecraft/client/renderer/debug/ChunkDebugRenderer
	a minecraft
	b lastUpdateTime
	c radius
	d data
	a (Lehe;Lfig;DDD)V render
flk$a net/minecraft/client/renderer/debug/ChunkDebugRenderer$ChunkData
	b clientData
	c serverData
fll net/minecraft/client/renderer/debug/CollisionBoxRenderer
	a minecraft
	b lastUpdateTime
	c shapes
	a (Lehe;Lfig;DDD)V render
flm net/minecraft/client/renderer/debug/DebugRenderer
	a pathfindingRenderer
	b waterDebugRenderer
	c chunkBorderRenderer
	d heightMapRenderer
	e collisionBoxRenderer
	f neighborsUpdateRenderer
	g structureRenderer
	h lightDebugRenderer
	i worldGenAttemptRenderer
	j solidFaceRenderer
	k chunkRenderer
	l brainDebugRenderer
	m villageSectionsDebugRenderer
	n beeDebugRenderer
	o raidDebugRenderer
	p goalSelectorRenderer
	q gameTestDebugRenderer
	r gameEventListenerRenderer
	s renderChunkborder
	a ()V clear
	a (Lehe;Lfig$a;DDD)V render
	a (Lehe;Lfig;DDDDDDFFFF)V renderFilledBox
	a (Lehe;Lfig;Ljava/lang/String;DDDI)V renderFloatingText
	a (Lehe;Lfig;Ljava/lang/String;DDDIF)V renderFloatingText
	a (Lehe;Lfig;Ljava/lang/String;DDDIFZFZ)V renderFloatingText
	a (Lehe;Lfig;Ljava/lang/String;IIII)V renderFloatingText
	a (Lehe;Lfig;Lnet/minecraft/core/BlockPosition;FFFFF)V renderFilledBox
	a (Lehe;Lfig;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;FFFF)V renderFilledBox
	a (Lehe;Lfig;Lnet/minecraft/world/phys/AxisAlignedBB;FFFF)V renderFilledBox
	a (Lnet/minecraft/world/entity/Entity;I)Ljava/util/Optional; getTargetedEntity
	b ()Z switchRenderChunkborder
flm$a net/minecraft/client/renderer/debug/DebugRenderer$SimpleDebugRenderer
	a ()V clear
	a (Lehe;Lfig;DDD)V render
fln net/minecraft/client/renderer/debug/GameEventListenerRenderer
	a minecraft
	b LISTENER_RENDER_DIST
	c BOX_HEIGHT
	d trackedGameEvents
	e trackedListeners
	a (Lehe;Lfig;DDD)V render
	a (Lehe;Lfig;Lnet/minecraft/world/phys/AxisAlignedBB;FFFF)V renderFilledBox
	a (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/phys/Vec3D;)V trackGameEvent
	a (Lnet/minecraft/world/level/gameevent/PositionSource;I)V trackListener
fln$a net/minecraft/client/renderer/debug/GameEventListenerRenderer$TrackedGameEvent
	a timeStamp
	b gameEvent
	c position
	a ()Z isExpired
	b ()J timeStamp
	c ()Lnet/minecraft/world/level/gameevent/GameEvent; gameEvent
	d ()Lnet/minecraft/world/phys/Vec3D; position
fln$b net/minecraft/client/renderer/debug/GameEventListenerRenderer$TrackedListener
	a listenerSource
	b listenerRange
	a ()Lnet/minecraft/world/level/gameevent/PositionSource; getListenerSource
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/gameevent/GameEvent;Ldga$a;Lnet/minecraft/world/phys/Vec3D;)Z handleGameEvent
	a (Lnet/minecraft/world/level/World;)Ljava/util/Optional; getPosition
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/phys/Vec3D;)Z isExpired
	b ()I getListenerRadius
flo net/minecraft/client/renderer/debug/GameTestDebugRenderer
	a PADDING
	b markers
	a ()V clear
	a (Lehe;Lfig;DDD)V render
	a (Lehe;Lfig;Lnet/minecraft/core/BlockPosition;Lflo$a;)V renderMarker
	a (Lnet/minecraft/core/BlockPosition;ILjava/lang/String;I)V addMarker
flo$a net/minecraft/client/renderer/debug/GameTestDebugRenderer$Marker
	a color
	b text
	c removeAtTime
	a ()F getR
	b ()F getG
	c ()F getB
	d ()F getA
flp net/minecraft/client/renderer/debug/GoalSelectorDebugRenderer
	a MAX_RENDER_DIST
	b minecraft
	c goalSelectors
	a ()V clear
	a (I)V removeGoalSelector
	a (ILjava/util/List;)V addGoalSelector
	a (Lehe;Lfig;DDD)V render
flp$a net/minecraft/client/renderer/debug/GoalSelectorDebugRenderer$DebugGoal
	a pos
	b priority
	c name
	d isRunning
flq net/minecraft/client/renderer/debug/HeightMapRenderer
	a minecraft
	b CHUNK_DIST
	c BOX_HEIGHT
	a (Lehe;Lfig;DDD)V render
	a (Lnet/minecraft/world/level/levelgen/HeightMap$Type;)Lorg/joml/Vector3f; getColor
flr net/minecraft/client/renderer/debug/LightDebugRenderer
	a minecraft
	b MAX_RENDER_DIST
	a (Lehe;Lfig;DDD)V render
fls net/minecraft/client/renderer/debug/NeighborsUpdateRenderer
	a minecraft
	b lastUpdate
	a (JLnet/minecraft/core/BlockPosition;)V addUpdate
	a (Lehe;Lfig;DDD)V render
flt net/minecraft/client/renderer/debug/PathfindingRenderer
	a pathMap
	b pathMaxDist
	c creationMap
	d TIMEOUT
	e MAX_RENDER_DIST
	f SHOW_OPEN_CLOSED
	g SHOW_OPEN_CLOSED_COST_MALUS
	h SHOW_OPEN_CLOSED_NODE_TYPE_WITH_TEXT
	i SHOW_OPEN_CLOSED_NODE_TYPE_WITH_BOX
	j SHOW_GROUND_LABELS
	k TEXT_SCALE
	a (ILnet/minecraft/world/level/pathfinder/PathEntity;F)V addPath
	a (Lehe;Lehi;Lnet/minecraft/world/level/pathfinder/PathEntity;DDD)V renderPathLine
	a (Lehe;Lfig;DDD)V render
	a (Lehe;Lfig;Lnet/minecraft/world/level/pathfinder/PathEntity;FZZDDD)V renderPath
	a (Lnet/minecraft/core/BlockPosition;DDD)F distanceToCamera
flu net/minecraft/client/renderer/debug/RaidDebugRenderer
	a MAX_RENDER_DIST
	b TEXT_SCALE
	c minecraft
	d raidCenters
	a (Lehe;Lfig;DDD)V render
	a (Lehe;Lfig;Ljava/lang/String;Lnet/minecraft/core/BlockPosition;I)V renderTextOverBlock
	a (Lehe;Lfig;Lnet/minecraft/core/BlockPosition;)V highlightRaidCenter
	a (Ljava/util/Collection;)V setRaidCenters
	b ()Lelt; getCamera
flv net/minecraft/client/renderer/debug/SolidFaceRenderer
	a minecraft
	a (Lehe;Lfig;DDD)V render
flw net/minecraft/client/renderer/debug/StructureRenderer
	a minecraft
	b postMainBoxes
	c postPiecesBoxes
	d startPiecesMap
	e MAX_RENDER_DIST
	a ()V clear
	a (Lehe;Lfig;DDD)V render
	a (Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Ljava/util/List;Ljava/util/List;Lnet/minecraft/world/level/dimension/DimensionManager;)V addBoundingBox
flx net/minecraft/client/renderer/debug/VillageSectionsDebugRenderer
	a MAX_RENDER_DIST_FOR_VILLAGE_SECTIONS
	b villageSections
	a ()V clear
	a (Lehe;Lfig;DDD)V render
	a (Lehe;Lfig;Lnet/minecraft/core/SectionPosition;)V highlightVillageSection
	a (Lnet/minecraft/core/SectionPosition;)V setVillageSection
	b (Lnet/minecraft/core/SectionPosition;)V setNotVillageSection
fly net/minecraft/client/renderer/debug/WaterDebugRenderer
	a minecraft
	a (Lehe;Lfig;DDD)V render
flz net/minecraft/client/renderer/debug/WorldGenAttemptRenderer
	a toRender
	b scales
	c alphas
	d reds
	e greens
	f blues
	a (Lehe;Lfig;DDD)V render
	a (Lnet/minecraft/core/BlockPosition;FFFFF)V addPos
fmb net/minecraft/client/renderer/entity/AbstractHorseRenderer
	a scale
	a (Lnet/minecraft/world/entity/EntityLiving;Lehe;F)V scale
	a (Lnet/minecraft/world/entity/animal/horse/EntityHorseAbstract;Lehe;F)V scale
fmc net/minecraft/client/renderer/entity/AbstractZombieRenderer
	a ZOMBIE_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/EntityLiving;)Z isShaking
	a (Lnet/minecraft/world/entity/monster/EntityZombie;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	b (Lnet/minecraft/world/entity/monster/EntityZombie;)Z isShaking
fmd net/minecraft/client/renderer/entity/AllayRenderer
	a ALLAY_TEXTURE
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPosition;)I getBlockLightLevel
	a (Lnet/minecraft/world/entity/animal/allay/Allay;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/allay/Allay;Lnet/minecraft/core/BlockPosition;)I getBlockLightLevel
fme net/minecraft/client/renderer/entity/ArmorStandRenderer
	a DEFAULT_SKIN_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/EntityLiving;Lehe;FFF)V setupRotations
	a (Lnet/minecraft/world/entity/EntityLiving;ZZZ)Lfio; getRenderType
	a (Lnet/minecraft/world/entity/decoration/EntityArmorStand;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/decoration/EntityArmorStand;Lehe;FFF)V setupRotations
	a (Lnet/minecraft/world/entity/decoration/EntityArmorStand;ZZZ)Lfio; getRenderType
	b (Lnet/minecraft/world/entity/Entity;)Z shouldShowName
	b (Lnet/minecraft/world/entity/EntityLiving;)Z shouldShowName
	b (Lnet/minecraft/world/entity/decoration/EntityArmorStand;)Z shouldShowName
fmf net/minecraft/client/renderer/entity/ArrowRenderer
	a (Lnet/minecraft/world/entity/Entity;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/projectile/EntityArrow;FFLehe;Lfig;I)V render
	a (Lorg/joml/Matrix4f;Lorg/joml/Matrix3f;Lehi;IIIFFIIII)V vertex
fmg net/minecraft/client/renderer/entity/AxolotlRenderer
	a TEXTURE_BY_TYPE
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/axolotl/Axolotl;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
fmh net/minecraft/client/renderer/entity/BatRenderer
	a BAT_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/EntityLiving;Lehe;F)V scale
	a (Lnet/minecraft/world/entity/EntityLiving;Lehe;FFF)V setupRotations
	a (Lnet/minecraft/world/entity/ambient/EntityBat;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/ambient/EntityBat;Lehe;F)V scale
	a (Lnet/minecraft/world/entity/ambient/EntityBat;Lehe;FFF)V setupRotations
fmi net/minecraft/client/renderer/entity/BeeRenderer
	a ANGRY_BEE_TEXTURE
	i ANGRY_NECTAR_BEE_TEXTURE
	j BEE_TEXTURE
	k NECTAR_BEE_TEXTURE
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/EntityBee;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
fmj net/minecraft/client/renderer/entity/BlazeRenderer
	a BLAZE_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPosition;)I getBlockLightLevel
	a (Lnet/minecraft/world/entity/monster/EntityBlaze;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/monster/EntityBlaze;Lnet/minecraft/core/BlockPosition;)I getBlockLightLevel
fmk net/minecraft/client/renderer/entity/BoatRenderer
	a boatResources
	a (Lfne$a;Lnet/minecraft/world/entity/vehicle/EntityBoat$EnumBoatType;Z)Lfak; createBoatModel
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/vehicle/EntityBoat$EnumBoatType;Z)Ljava/lang/String; getTextureLocation
	a (Lnet/minecraft/world/entity/vehicle/EntityBoat;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/vehicle/EntityBoat;FFLehe;Lfig;I)V render
fml net/minecraft/client/renderer/entity/CamelRenderer
	a CAMEL_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/camel/Camel;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
fmm net/minecraft/client/renderer/entity/CatRenderer
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/EntityLiving;Lehe;F)V scale
	a (Lnet/minecraft/world/entity/EntityLiving;Lehe;FFF)V setupRotations
	a (Lnet/minecraft/world/entity/animal/EntityCat;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/EntityCat;Lehe;F)V scale
	a (Lnet/minecraft/world/entity/animal/EntityCat;Lehe;FFF)V setupRotations
fmn net/minecraft/client/renderer/entity/CaveSpiderRenderer
	a CAVE_SPIDER_LOCATION
	i SCALE
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/EntityLiving;Lehe;F)V scale
	a (Lnet/minecraft/world/entity/monster/EntityCaveSpider;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/monster/EntityCaveSpider;Lehe;F)V scale
	a (Lnet/minecraft/world/entity/monster/EntitySpider;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
fmo net/minecraft/client/renderer/entity/ChestedHorseRenderer
	a MAP
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/horse/EntityHorseChestedAbstract;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
fmp net/minecraft/client/renderer/entity/ChickenRenderer
	a CHICKEN_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/EntityLiving;F)F getBob
	a (Lnet/minecraft/world/entity/animal/EntityChicken;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/EntityChicken;F)F getBob
fmq net/minecraft/client/renderer/entity/CodRenderer
	a COD_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/EntityLiving;Lehe;FFF)V setupRotations
	a (Lnet/minecraft/world/entity/animal/EntityCod;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/EntityCod;Lehe;FFF)V setupRotations
fmr net/minecraft/client/renderer/entity/CowRenderer
	a COW_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/EntityCow;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
fms net/minecraft/client/renderer/entity/CreeperRenderer
	a CREEPER_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/EntityLiving;Lehe;F)V scale
	a (Lnet/minecraft/world/entity/monster/EntityCreeper;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/monster/EntityCreeper;F)F getWhiteOverlayProgress
	a (Lnet/minecraft/world/entity/monster/EntityCreeper;Lehe;F)V scale
	b (Lnet/minecraft/world/entity/EntityLiving;F)F getWhiteOverlayProgress
fmt net/minecraft/client/renderer/entity/DisplayRenderer
	a MAX_SHADOW_RADIUS
	f entityRenderDispatcher
	a (Lnet/minecraft/world/entity/Display;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Display;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/Display;Lehe;Lfig;IF)V renderInner
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLehe;Lfig;I)V render
	b (Lnet/minecraft/world/entity/Display;)Lorg/joml/Quaternionf; calculateOrientation
fmt$a net/minecraft/client/renderer/entity/DisplayRenderer$BlockDisplayRenderer
	a blockRenderer
	a (Lnet/minecraft/world/entity/Display$BlockDisplay;Lehe;Lfig;IF)V renderInner
	a (Lnet/minecraft/world/entity/Display;Lehe;Lfig;IF)V renderInner
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLehe;Lfig;I)V render
fmt$b net/minecraft/client/renderer/entity/DisplayRenderer$ItemDisplayRenderer
	a itemRenderer
	a (Lnet/minecraft/world/entity/Display$ItemDisplay;Lehe;Lfig;IF)V renderInner
	a (Lnet/minecraft/world/entity/Display;Lehe;Lfig;IF)V renderInner
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLehe;Lfig;I)V render
fmt$c net/minecraft/client/renderer/entity/DisplayRenderer$TextDisplayRenderer
	a font
	a (Lnet/minecraft/network/chat/IChatBaseComponent;I)Lnet/minecraft/world/entity/Display$TextDisplay$CachedInfo; splitLines
	a (Lnet/minecraft/world/entity/Display$TextDisplay;Lehe;Lfig;IF)V renderInner
	a (Lnet/minecraft/world/entity/Display;Lehe;Lfig;IF)V renderInner
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLehe;Lfig;I)V render
fmu net/minecraft/client/renderer/entity/DolphinRenderer
	a DOLPHIN_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/EntityDolphin;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
fmv net/minecraft/client/renderer/entity/DragonFireballRenderer
	a TEXTURE_LOCATION
	f RENDER_TYPE
	a (Lehi;Lorg/joml/Matrix4f;Lorg/joml/Matrix3f;IFIII)V vertex
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPosition;)I getBlockLightLevel
	a (Lnet/minecraft/world/entity/projectile/EntityDragonFireball;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/projectile/EntityDragonFireball;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/projectile/EntityDragonFireball;Lnet/minecraft/core/BlockPosition;)I getBlockLightLevel
fmw net/minecraft/client/renderer/entity/DrownedRenderer
	a DROWNED_LOCATION
	a (Lnet/minecraft/world/entity/EntityLiving;Lehe;FFF)V setupRotations
	a (Lnet/minecraft/world/entity/monster/EntityDrowned;Lehe;FFF)V setupRotations
	a (Lnet/minecraft/world/entity/monster/EntityZombie;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
fmx net/minecraft/client/renderer/entity/ElderGuardianRenderer
	a GUARDIAN_ELDER_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/EntityLiving;Lehe;F)V scale
	a (Lnet/minecraft/world/entity/monster/EntityGuardian;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/monster/EntityGuardian;Lehe;F)V scale
fmy net/minecraft/client/renderer/entity/EndCrystalRenderer
	a END_CRYSTAL_LOCATION
	f RENDER_TYPE
	g SIN_45
	h GLASS
	i BASE
	j cube
	k glass
	l base
	a ()Lfcx; createBodyLayer
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/Entity;Lflf;DDD)Z shouldRender
	a (Lnet/minecraft/world/entity/boss/enderdragon/EntityEnderCrystal;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/boss/enderdragon/EntityEnderCrystal;F)F getY
	a (Lnet/minecraft/world/entity/boss/enderdragon/EntityEnderCrystal;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/boss/enderdragon/EntityEnderCrystal;Lflf;DDD)Z shouldRender
fmz net/minecraft/client/renderer/entity/EnderDragonRenderer
	a CRYSTAL_BEAM_LOCATION
	f DRAGON_EXPLODING_LOCATION
	g DRAGON_LOCATION
	h DRAGON_EYES_LOCATION
	i RENDER_TYPE
	j DECAL
	k EYES
	l BEAM
	m HALF_SQRT_3
	n model
	a ()Lfcx; createBodyLayer
	a (FFFFILehe;Lfig;I)V renderCrystalBeams
	a (Lehi;Lorg/joml/Matrix4f;FF)V vertex2
	a (Lehi;Lorg/joml/Matrix4f;I)V vertex01
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/boss/enderdragon/EntityEnderDragon;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/boss/enderdragon/EntityEnderDragon;FFLehe;Lfig;I)V render
	b (Lehi;Lorg/joml/Matrix4f;FF)V vertex3
	c (Lehi;Lorg/joml/Matrix4f;FF)V vertex4
fmz$a net/minecraft/client/renderer/entity/EnderDragonRenderer$DragonModel
	a head
	b neck
	f jaw
	g body
	h leftWing
	i leftWingTip
	j leftFrontLeg
	k leftFrontLegTip
	l leftFrontFoot
	m leftRearLeg
	n leftRearLegTip
	o leftRearFoot
	p rightWing
	q rightWingTip
	r rightFrontLeg
	s rightFrontLegTip
	t rightFrontFoot
	u rightRearLeg
	w rightRearLegTip
	x rightRearFoot
	y entity
	z a
	a (Lehe;Lehi;IIFFFF)V renderToBuffer
	a (Lehe;Lehi;IIFLfcr;Lfcr;Lfcr;Lfcr;Lfcr;Lfcr;Lfcr;F)V renderSide
	a (Lnet/minecraft/world/entity/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/world/entity/boss/enderdragon/EntityEnderDragon;FFF)V prepareMobModel
	a (Lnet/minecraft/world/entity/boss/enderdragon/EntityEnderDragon;FFFFF)V setupAnim
fna net/minecraft/client/renderer/entity/EndermanRenderer
	a ENDERMAN_LOCATION
	i random
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;F)Lnet/minecraft/world/phys/Vec3D; getRenderOffset
	a (Lnet/minecraft/world/entity/Entity;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/EntityInsentient;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/EntityLiving;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/monster/EntityEnderman;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/monster/EntityEnderman;F)Lnet/minecraft/world/phys/Vec3D; getRenderOffset
	a (Lnet/minecraft/world/entity/monster/EntityEnderman;FFLehe;Lfig;I)V render
fnb net/minecraft/client/renderer/entity/EndermiteRenderer
	a ENDERMITE_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/monster/EntityEndermite;)F getFlipDegrees
	b (Lnet/minecraft/world/entity/monster/EntityEndermite;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	c (Lnet/minecraft/world/entity/EntityLiving;)F getFlipDegrees
fnc net/minecraft/client/renderer/entity/EntityRenderDispatcher
	a textureManager
	b camera
	c crosshairPickEntity
	d options
	e SHADOW_RENDER_TYPE
	f renderers
	g playerRenderers
	h level
	i cameraOrientation
	j itemRenderer
	k blockRenderDispatcher
	l itemInHandRenderer
	m font
	n entityModels
	o shouldRenderShadow
	p renderHitBoxes
	a ()Z shouldRenderHitBoxes
	a (DDD)D distanceToSqr
	a (Lehe$a;Lehi;FFFFF)V fireVertex
	a (Lehe$a;Lehi;FFFFFF)V shadowVertex
	a (Lehe$a;Lehi;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;DDDFF)V renderBlockShadow
	a (Lehe;Lehi;Lnet/minecraft/world/entity/Entity;F)V renderHitbox
	a (Lehe;Lfig;Lnet/minecraft/world/entity/Entity;)V renderFlame
	a (Lehe;Lfig;Lnet/minecraft/world/entity/Entity;FFLnet/minecraft/world/level/IWorldReader;F)V renderShadow
	a (Lnet/minecraft/server/packs/resources/IResourceManager;)V onResourceManagerReload
	a (Lnet/minecraft/world/entity/Entity;)Lfnd; getRenderer
	a (Lnet/minecraft/world/entity/Entity;DDDFFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/Entity;F)I getPackedLightCoords
	a (Lnet/minecraft/world/entity/Entity;Lflf;DDD)Z shouldRender
	a (Lnet/minecraft/world/level/World;)V setLevel
	a (Lnet/minecraft/world/level/World;Lelt;Lnet/minecraft/world/entity/Entity;)V prepare
	a (Lorg/joml/Quaternionf;)V overrideCameraOrientation
	a (Z)V setRenderShadow
	b ()Lorg/joml/Quaternionf; cameraOrientation
	b (Lnet/minecraft/world/entity/Entity;)D distanceToSqr
	b (Z)V setRenderHitBoxes
	d ()Lfic; getItemInHandRenderer
fnd net/minecraft/client/renderer/entity/EntityRenderer
	a font
	b NAMETAG_SCALE
	c entityRenderDispatcher
	d shadowRadius
	e shadowStrength
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;F)Lnet/minecraft/world/phys/Vec3D; getRenderOffset
	a (Lnet/minecraft/world/entity/Entity;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/Entity;Lflf;DDD)Z shouldRender
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPosition;)I getBlockLightLevel
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/chat/IChatBaseComponent;Lehe;Lfig;I)V renderNameTag
	b ()Lenp; getFont
	b (Lnet/minecraft/world/entity/Entity;)Z shouldShowName
	b (Lnet/minecraft/world/entity/Entity;F)I getPackedLightCoords
	b (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPosition;)I getSkyLightLevel
fne net/minecraft/client/renderer/entity/EntityRendererProvider
fne$a net/minecraft/client/renderer/entity/EntityRendererProvider$Context
	a entityRenderDispatcher
	b itemRenderer
	c blockRenderDispatcher
	d itemInHandRenderer
	e resourceManager
	f modelSet
	g font
	a ()Lfnc; getEntityRenderDispatcher
	a (Lfcp;)Lfcr; bakeLayer
	b ()Lfoc; getItemRenderer
	c ()Lfix; getBlockRenderDispatcher
	d ()Lfic; getItemInHandRenderer
	e ()Lnet/minecraft/server/packs/resources/IResourceManager; getResourceManager
	f ()Lfcn; getModelSet
	g ()Lfve; getModelManager
	h ()Lenp; getFont
fnf net/minecraft/client/renderer/entity/EntityRenderers
	a DEFAULT_PLAYER_MODEL
	b LOGGER
	c PROVIDERS
	d PLAYER_PROVIDERS
	a ()Z validateRegistrations
	a (Lfne$a;)Ljava/util/Map; createEntityRenderers
	a (Lnet/minecraft/world/entity/EntityTypes;Lfne;)V register
	b (Lfne$a;)Ljava/util/Map; createPlayerRenderers
fng net/minecraft/client/renderer/entity/EvokerFangsRenderer
	a TEXTURE_LOCATION
	f model
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/projectile/EntityEvokerFangs;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/projectile/EntityEvokerFangs;FFLehe;Lfig;I)V render
fnh net/minecraft/client/renderer/entity/EvokerRenderer
	a EVOKER_ILLAGER
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/monster/EntityIllagerWizard;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
fni net/minecraft/client/renderer/entity/ExperienceOrbRenderer
	a EXPERIENCE_ORB_LOCATION
	f RENDER_TYPE
	a (Lehi;Lorg/joml/Matrix4f;Lorg/joml/Matrix3f;FFIIIFFI)V vertex
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPosition;)I getBlockLightLevel
	a (Lnet/minecraft/world/entity/EntityExperienceOrb;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/EntityExperienceOrb;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/EntityExperienceOrb;Lnet/minecraft/core/BlockPosition;)I getBlockLightLevel
fnj net/minecraft/client/renderer/entity/FallingBlockRenderer
	a dispatcher
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/item/EntityFallingBlock;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/item/EntityFallingBlock;FFLehe;Lfig;I)V render
fnk net/minecraft/client/renderer/entity/FireworkEntityRenderer
	a itemRenderer
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/projectile/EntityFireworks;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/projectile/EntityFireworks;FFLehe;Lfig;I)V render
fnl net/minecraft/client/renderer/entity/FishingHookRenderer
	a TEXTURE_LOCATION
	f RENDER_TYPE
	g VIEW_BOBBING_SCALE
	a (FFFLehi;Lehe$a;FF)V stringVertex
	a (II)F fraction
	a (Lehi;Lorg/joml/Matrix4f;Lorg/joml/Matrix3f;IFIII)V vertex
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/projectile/EntityFishingHook;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/projectile/EntityFishingHook;FFLehe;Lfig;I)V render
fnm net/minecraft/client/renderer/entity/FoxRenderer
	a RED_FOX_TEXTURE
	i RED_FOX_SLEEP_TEXTURE
	j SNOW_FOX_TEXTURE
	k SNOW_FOX_SLEEP_TEXTURE
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/EntityLiving;Lehe;FFF)V setupRotations
	a (Lnet/minecraft/world/entity/animal/EntityFox;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/EntityFox;Lehe;FFF)V setupRotations
fnn net/minecraft/client/renderer/entity/FrogRenderer
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/frog/Frog;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
fno net/minecraft/client/renderer/entity/GhastRenderer
	a GHAST_LOCATION
	i GHAST_SHOOTING_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/EntityLiving;Lehe;F)V scale
	a (Lnet/minecraft/world/entity/monster/EntityGhast;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/monster/EntityGhast;Lehe;F)V scale
fnp net/minecraft/client/renderer/entity/GiantMobRenderer
	a ZOMBIE_LOCATION
	i scale
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/EntityLiving;Lehe;F)V scale
	a (Lnet/minecraft/world/entity/monster/EntityGiantZombie;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/monster/EntityGiantZombie;Lehe;F)V scale
fnq net/minecraft/client/renderer/entity/GlowSquidRenderer
	a GLOW_SQUID_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPosition;)I getBlockLightLevel
	a (Lnet/minecraft/world/entity/GlowSquid;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/GlowSquid;Lnet/minecraft/core/BlockPosition;)I getBlockLightLevel
	a (Lnet/minecraft/world/entity/animal/EntitySquid;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
fnr net/minecraft/client/renderer/entity/GoatRenderer
	a GOAT_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/goat/Goat;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
fns net/minecraft/client/renderer/entity/GuardianRenderer
	a GUARDIAN_LOCATION
	i GUARDIAN_BEAM_LOCATION
	j BEAM_RENDER_TYPE
	a (Lehi;Lorg/joml/Matrix4f;Lorg/joml/Matrix3f;FFFIIIFF)V vertex
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/Entity;Lflf;DDD)Z shouldRender
	a (Lnet/minecraft/world/entity/EntityInsentient;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/EntityInsentient;Lflf;DDD)Z shouldRender
	a (Lnet/minecraft/world/entity/EntityLiving;DF)Lnet/minecraft/world/phys/Vec3D; getPosition
	a (Lnet/minecraft/world/entity/EntityLiving;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/monster/EntityGuardian;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/monster/EntityGuardian;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/monster/EntityGuardian;Lflf;DDD)Z shouldRender
fnt net/minecraft/client/renderer/entity/HoglinRenderer
	a HOGLIN_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/EntityLiving;)Z isShaking
	a (Lnet/minecraft/world/entity/monster/hoglin/EntityHoglin;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	b (Lnet/minecraft/world/entity/monster/hoglin/EntityHoglin;)Z isShaking
fnu net/minecraft/client/renderer/entity/HorseRenderer
	a LOCATION_BY_VARIANT
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/horse/EntityHorse;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
fnv net/minecraft/client/renderer/entity/HumanoidMobRenderer
fnw net/minecraft/client/renderer/entity/HuskRenderer
	a HUSK_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/EntityLiving;Lehe;F)V scale
	a (Lnet/minecraft/world/entity/monster/EntityZombie;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/monster/EntityZombie;Lehe;F)V scale
fnx net/minecraft/client/renderer/entity/IllagerRenderer
	a (Lnet/minecraft/world/entity/EntityLiving;Lehe;F)V scale
	a (Lnet/minecraft/world/entity/monster/EntityIllagerAbstract;Lehe;F)V scale
fny net/minecraft/client/renderer/entity/IllusionerRenderer
	a ILLUSIONER
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/EntityInsentient;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/EntityLiving;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/monster/EntityIllagerIllusioner;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/monster/EntityIllagerIllusioner;FFLehe;Lfig;I)V render
	b (Lnet/minecraft/world/entity/monster/EntityIllagerIllusioner;)Z isBodyVisible
	d (Lnet/minecraft/world/entity/EntityLiving;)Z isBodyVisible
fnz net/minecraft/client/renderer/entity/IronGolemRenderer
	a GOLEM_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/EntityLiving;Lehe;FFF)V setupRotations
	a (Lnet/minecraft/world/entity/animal/EntityIronGolem;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/EntityIronGolem;Lehe;FFF)V setupRotations
foa net/minecraft/client/renderer/entity/ItemEntityRenderer
	a ITEM_BUNDLE_OFFSET_SCALE
	f ITEM_COUNT_FOR_5_BUNDLE
	g ITEM_COUNT_FOR_4_BUNDLE
	h ITEM_COUNT_FOR_3_BUNDLE
	i ITEM_COUNT_FOR_2_BUNDLE
	j FLAT_ITEM_BUNDLE_OFFSET_X
	k FLAT_ITEM_BUNDLE_OFFSET_Y
	l FLAT_ITEM_BUNDLE_OFFSET_Z
	m itemRenderer
	n random
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/item/EntityItem;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/item/EntityItem;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/item/ItemStack;)I getRenderAmount
fob net/minecraft/client/renderer/entity/ItemFrameRenderer
	a GLOW_FRAME_BRIGHTNESS
	f BRIGHT_MAP_LIGHT_ADJUSTMENT
	g FRAME_LOCATION
	h MAP_FRAME_LOCATION
	i GLOW_FRAME_LOCATION
	j GLOW_MAP_FRAME_LOCATION
	k itemRenderer
	l blockRenderer
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;F)Lnet/minecraft/world/phys/Vec3D; getRenderOffset
	a (Lnet/minecraft/world/entity/Entity;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPosition;)I getBlockLightLevel
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/chat/IChatBaseComponent;Lehe;Lfig;I)V renderNameTag
	a (Lnet/minecraft/world/entity/decoration/EntityItemFrame;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/decoration/EntityItemFrame;F)Lnet/minecraft/world/phys/Vec3D; getRenderOffset
	a (Lnet/minecraft/world/entity/decoration/EntityItemFrame;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/decoration/EntityItemFrame;II)I getLightVal
	a (Lnet/minecraft/world/entity/decoration/EntityItemFrame;Lnet/minecraft/core/BlockPosition;)I getBlockLightLevel
	a (Lnet/minecraft/world/entity/decoration/EntityItemFrame;Lnet/minecraft/network/chat/IChatBaseComponent;Lehe;Lfig;I)V renderNameTag
	a (Lnet/minecraft/world/entity/decoration/EntityItemFrame;Lnet/minecraft/world/item/ItemStack;)Lfvf; getFrameModelResourceLoc
	b (Lnet/minecraft/world/entity/Entity;)Z shouldShowName
	b (Lnet/minecraft/world/entity/decoration/EntityItemFrame;)Z shouldShowName
foc net/minecraft/client/renderer/entity/ItemRenderer
	a ENCHANTED_GLINT_ENTITY
	b ENCHANTED_GLINT_ITEM
	c ITEM_COUNT_BLIT_OFFSET
	d COMPASS_FOIL_UI_SCALE
	e COMPASS_FOIL_FIRST_PERSON_SCALE
	f COMPASS_FOIL_TEXTURE_SCALE
	g TRIDENT_IN_HAND_MODEL
	h SPYGLASS_IN_HAND_MODEL
	i IGNORED
	j GUI_SLOT_CENTER_X
	k GUI_SLOT_CENTER_Y
	l TRIDENT_MODEL
	m SPYGLASS_MODEL
	n minecraft
	o itemModelShaper
	p textureManager
	q itemColors
	r blockEntityRenderer
	a ()Lfid; getItemModelShaper
	a (Lehe;Lehi;Ljava/util/List;Lnet/minecraft/world/item/ItemStack;II)V renderQuadList
	a (Lehe;Lenp;Lnet/minecraft/world/item/ItemStack;II)V renderGuiItemDecorations
	a (Lehe;Lenp;Lnet/minecraft/world/item/ItemStack;IILjava/lang/String;)V renderGuiItemDecorations
	a (Lehe;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;III)V renderAndDecorateItem
	a (Lehe;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/level/World;Lnet/minecraft/world/item/ItemStack;III)V tryRenderGuiItem
	a (Lehe;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/level/World;Lnet/minecraft/world/item/ItemStack;IIII)V tryRenderGuiItem
	a (Lehe;Lnet/minecraft/world/item/ItemStack;II)V renderGuiItem
	a (Lehe;Lnet/minecraft/world/item/ItemStack;III)V renderAndDecorateItem
	a (Lehe;Lnet/minecraft/world/item/ItemStack;IIII)V renderAndDecorateItem
	a (Lehe;Lnet/minecraft/world/item/ItemStack;IILfuy;)V renderGuiItem
	a (Lfig;Lfio;Lehe$a;)Lehi; getCompassFoilBuffer
	a (Lfig;Lfio;ZZ)Lehi; getArmorFoilBuffer
	a (Lfuy;Lnet/minecraft/world/item/ItemStack;IILehe;Lehi;)V renderModelLists
	a (Lnet/minecraft/server/packs/resources/IResourceManager;)V onResourceManagerReload
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemDisplayContext;ZLehe;Lfig;Lnet/minecraft/world/level/World;III)V renderStatic
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemDisplayContext;IILehe;Lfig;Lnet/minecraft/world/level/World;I)V renderStatic
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemDisplayContext;ZLehe;Lfig;IILfuy;)V render
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/EntityLiving;I)Lfuy; getModel
	b (Lehe;Lnet/minecraft/world/item/ItemStack;II)V renderAndDecorateItem
	b (Lfig;Lfio;Lehe$a;)Lehi; getCompassFoilBufferDirect
	b (Lfig;Lfio;ZZ)Lehi; getFoilBuffer
	c (Lehe;Lnet/minecraft/world/item/ItemStack;II)V renderAndDecorateFakeItem
	c (Lfig;Lfio;ZZ)Lehi; getFoilBufferDirect
fod net/minecraft/client/renderer/entity/LeashKnotRenderer
	a KNOT_LOCATION
	f model
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/decoration/EntityLeash;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/decoration/EntityLeash;FFLehe;Lfig;I)V render
foe net/minecraft/client/renderer/entity/LightningBoltRenderer
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/EntityLightning;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/EntityLightning;FFLehe;Lfig;I)V render
	a (Lorg/joml/Matrix4f;Lehi;FFIFFFFFFFZZZZ)V quad
fof net/minecraft/client/renderer/entity/LivingEntityRenderer
	a LOGGER
	f model
	g layers
	h EYE_BED_OFFSET
	a ()Lezs; getModel
	a (Lfrn;)Z addLayer
	a (Lnet/minecraft/core/EnumDirection;)F sleepDirectionToRotation
	a (Lnet/minecraft/world/entity/Entity;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/EntityLiving;)Z isShaking
	a (Lnet/minecraft/world/entity/EntityLiving;F)F getBob
	a (Lnet/minecraft/world/entity/EntityLiving;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/EntityLiving;Lehe;F)V scale
	a (Lnet/minecraft/world/entity/EntityLiving;Lehe;FFF)V setupRotations
	a (Lnet/minecraft/world/entity/EntityLiving;ZZZ)Lfio; getRenderType
	b (Lnet/minecraft/world/entity/Entity;)Z shouldShowName
	b (Lnet/minecraft/world/entity/EntityLiving;)Z shouldShowName
	b (Lnet/minecraft/world/entity/EntityLiving;F)F getWhiteOverlayProgress
	c (Lnet/minecraft/world/entity/EntityLiving;)F getFlipDegrees
	c (Lnet/minecraft/world/entity/EntityLiving;F)I getOverlayCoords
	d (Lnet/minecraft/world/entity/EntityLiving;)Z isBodyVisible
	d (Lnet/minecraft/world/entity/EntityLiving;F)F getAttackAnim
	e (Lnet/minecraft/world/entity/EntityLiving;)Z isEntityUpsideDown
fog net/minecraft/client/renderer/entity/LlamaRenderer
	a CREAMY
	i WHITE
	j BROWN
	k GRAY
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/horse/EntityLlama;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
foh net/minecraft/client/renderer/entity/LlamaSpitRenderer
	a LLAMA_SPIT_LOCATION
	f model
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/projectile/EntityLlamaSpit;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/projectile/EntityLlamaSpit;FFLehe;Lfig;I)V render
foi net/minecraft/client/renderer/entity/MagmaCubeRenderer
	a MAGMACUBE_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPosition;)I getBlockLightLevel
	a (Lnet/minecraft/world/entity/EntityInsentient;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/EntityLiving;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/EntityLiving;Lehe;F)V scale
	a (Lnet/minecraft/world/entity/monster/EntityMagmaCube;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/monster/EntityMagmaCube;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/monster/EntityMagmaCube;Lehe;F)V scale
	a (Lnet/minecraft/world/entity/monster/EntityMagmaCube;Lnet/minecraft/core/BlockPosition;)I getBlockLightLevel
foj net/minecraft/client/renderer/entity/MinecartRenderer
	a model
	f MINECART_LOCATION
	g blockRenderer
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/vehicle/EntityMinecartAbstract;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/vehicle/EntityMinecartAbstract;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/vehicle/EntityMinecartAbstract;FLnet/minecraft/world/level/block/state/IBlockData;Lehe;Lfig;I)V renderMinecartContents
fok net/minecraft/client/renderer/entity/MobRenderer
	h LEASH_RENDER_STEPS
	a (Lehi;Lorg/joml/Matrix4f;FFFIIIIFFFFIZ)V addVertexPair
	a (Lnet/minecraft/world/entity/Entity;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/Entity;Lflf;DDD)Z shouldRender
	a (Lnet/minecraft/world/entity/EntityInsentient;)Z shouldShowName
	a (Lnet/minecraft/world/entity/EntityInsentient;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/EntityInsentient;FLehe;Lfig;Lnet/minecraft/world/entity/Entity;)V renderLeash
	a (Lnet/minecraft/world/entity/EntityInsentient;Lflf;DDD)Z shouldRender
	a (Lnet/minecraft/world/entity/EntityLiving;FFLehe;Lfig;I)V render
	b (Lnet/minecraft/world/entity/Entity;)Z shouldShowName
	b (Lnet/minecraft/world/entity/EntityLiving;)Z shouldShowName
fol net/minecraft/client/renderer/entity/MushroomCowRenderer
	a TEXTURES
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/EntityMushroomCow;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
fom net/minecraft/client/renderer/entity/NoopRenderer
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
fon net/minecraft/client/renderer/entity/OcelotRenderer
	a CAT_OCELOT_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/EntityOcelot;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
foo net/minecraft/client/renderer/entity/PaintingRenderer
	a (Lehe;Lehi;Lnet/minecraft/world/entity/decoration/EntityPainting;IILftc;Lftc;)V renderPainting
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/decoration/EntityPainting;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/decoration/EntityPainting;FFLehe;Lfig;I)V render
	a (Lorg/joml/Matrix4f;Lorg/joml/Matrix3f;Lehi;FFFFFIIII)V vertex
fop net/minecraft/client/renderer/entity/PandaRenderer
	a TEXTURES
	a (FFIFF)F getAngle
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/EntityLiving;Lehe;FFF)V setupRotations
	a (Lnet/minecraft/world/entity/animal/EntityPanda;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/EntityPanda;Lehe;FFF)V setupRotations
foq net/minecraft/client/renderer/entity/ParrotRenderer
	a RED_BLUE
	i BLUE
	j GREEN
	k YELLOW_BLUE
	l GREY
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/EntityLiving;F)F getBob
	a (Lnet/minecraft/world/entity/animal/EntityParrot$Variant;)Lnet/minecraft/resources/MinecraftKey; getVariantTexture
	a (Lnet/minecraft/world/entity/animal/EntityParrot;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/EntityParrot;F)F getBob
fos net/minecraft/client/renderer/entity/PhantomRenderer
	a PHANTOM_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/EntityLiving;Lehe;F)V scale
	a (Lnet/minecraft/world/entity/EntityLiving;Lehe;FFF)V setupRotations
	a (Lnet/minecraft/world/entity/monster/EntityPhantom;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/monster/EntityPhantom;Lehe;F)V scale
	a (Lnet/minecraft/world/entity/monster/EntityPhantom;Lehe;FFF)V setupRotations
fot net/minecraft/client/renderer/entity/PigRenderer
	a PIG_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/EntityPig;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
fou net/minecraft/client/renderer/entity/PiglinRenderer
	a TEXTURES
	i PIGLIN_CUSTOM_HEAD_SCALE
	a (Lfcn;Lfcp;Z)Lfaw; createModel
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/EntityLiving;)Z isShaking
	b (Lnet/minecraft/world/entity/EntityInsentient;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	c (Lnet/minecraft/world/entity/EntityInsentient;)Z isShaking
fov net/minecraft/client/renderer/entity/PillagerRenderer
	a PILLAGER
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/monster/EntityPillager;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
fow net/minecraft/client/renderer/entity/PolarBearRenderer
	a BEAR_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/EntityLiving;Lehe;F)V scale
	a (Lnet/minecraft/world/entity/animal/EntityPolarBear;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/EntityPolarBear;Lehe;F)V scale
fox net/minecraft/client/renderer/entity/PufferfishRenderer
	a PUFFER_LOCATION
	i puffStateO
	j small
	k mid
	l big
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/EntityInsentient;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/EntityLiving;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/EntityLiving;Lehe;FFF)V setupRotations
	a (Lnet/minecraft/world/entity/animal/EntityPufferFish;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/EntityPufferFish;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/animal/EntityPufferFish;Lehe;FFF)V setupRotations
foy net/minecraft/client/renderer/entity/RabbitRenderer
	a RABBIT_BROWN_LOCATION
	i RABBIT_WHITE_LOCATION
	j RABBIT_BLACK_LOCATION
	k RABBIT_GOLD_LOCATION
	l RABBIT_SALT_LOCATION
	m RABBIT_WHITE_SPLOTCHED_LOCATION
	n RABBIT_TOAST_LOCATION
	o RABBIT_EVIL_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/EntityRabbit;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
foz net/minecraft/client/renderer/entity/RavagerRenderer
	a TEXTURE_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/monster/EntityRavager;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
fpa net/minecraft/client/renderer/entity/RenderLayerParent
	a ()Lezs; getModel
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
fpb net/minecraft/client/renderer/entity/SalmonRenderer
	a SALMON_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/EntityLiving;Lehe;FFF)V setupRotations
	a (Lnet/minecraft/world/entity/animal/EntitySalmon;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/EntitySalmon;Lehe;FFF)V setupRotations
fpc net/minecraft/client/renderer/entity/SheepRenderer
	a SHEEP_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/EntitySheep;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
fpd net/minecraft/client/renderer/entity/ShulkerBulletRenderer
	a TEXTURE_LOCATION
	f RENDER_TYPE
	g model
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPosition;)I getBlockLightLevel
	a (Lnet/minecraft/world/entity/projectile/EntityShulkerBullet;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/projectile/EntityShulkerBullet;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/projectile/EntityShulkerBullet;Lnet/minecraft/core/BlockPosition;)I getBlockLightLevel
fpe net/minecraft/client/renderer/entity/ShulkerRenderer
	a DEFAULT_TEXTURE_LOCATION
	i TEXTURE_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;F)Lnet/minecraft/world/phys/Vec3D; getRenderOffset
	a (Lnet/minecraft/world/entity/Entity;Lflf;DDD)Z shouldRender
	a (Lnet/minecraft/world/entity/EntityInsentient;Lflf;DDD)Z shouldRender
	a (Lnet/minecraft/world/entity/EntityLiving;Lehe;FFF)V setupRotations
	a (Lnet/minecraft/world/entity/monster/EntityShulker;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/monster/EntityShulker;F)Lnet/minecraft/world/phys/Vec3D; getRenderOffset
	a (Lnet/minecraft/world/entity/monster/EntityShulker;Lehe;FFF)V setupRotations
	a (Lnet/minecraft/world/entity/monster/EntityShulker;Lflf;DDD)Z shouldRender
	a (Lnet/minecraft/world/item/EnumColor;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
fpf net/minecraft/client/renderer/entity/SilverfishRenderer
	a SILVERFISH_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/monster/EntitySilverfish;)F getFlipDegrees
	b (Lnet/minecraft/world/entity/monster/EntitySilverfish;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	c (Lnet/minecraft/world/entity/EntityLiving;)F getFlipDegrees
fpg net/minecraft/client/renderer/entity/SkeletonRenderer
	a SKELETON_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/EntityLiving;)Z isShaking
	a (Lnet/minecraft/world/entity/monster/EntitySkeletonAbstract;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	b (Lnet/minecraft/world/entity/monster/EntitySkeletonAbstract;)Z isShaking
fph net/minecraft/client/renderer/entity/SlimeRenderer
	a SLIME_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/EntityInsentient;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/EntityLiving;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/EntityLiving;Lehe;F)V scale
	a (Lnet/minecraft/world/entity/monster/EntitySlime;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/monster/EntitySlime;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/monster/EntitySlime;Lehe;F)V scale
fpi net/minecraft/client/renderer/entity/SnifferRenderer
	a SNIFFER_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/sniffer/Sniffer;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
fpj net/minecraft/client/renderer/entity/SnowGolemRenderer
	a SNOW_GOLEM_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/EntitySnowman;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
fpk net/minecraft/client/renderer/entity/SpectralArrowRenderer
	a SPECTRAL_ARROW_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/projectile/EntitySpectralArrow;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
fpl net/minecraft/client/renderer/entity/SpiderRenderer
	a SPIDER_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/monster/EntitySpider;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	b (Lnet/minecraft/world/entity/monster/EntitySpider;)F getFlipDegrees
	c (Lnet/minecraft/world/entity/EntityLiving;)F getFlipDegrees
fpm net/minecraft/client/renderer/entity/SquidRenderer
	a SQUID_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/EntityLiving;F)F getBob
	a (Lnet/minecraft/world/entity/EntityLiving;Lehe;FFF)V setupRotations
	a (Lnet/minecraft/world/entity/animal/EntitySquid;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/EntitySquid;F)F getBob
	a (Lnet/minecraft/world/entity/animal/EntitySquid;Lehe;FFF)V setupRotations
fpn net/minecraft/client/renderer/entity/StrayRenderer
	a STRAY_SKELETON_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/monster/EntitySkeletonAbstract;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
fpo net/minecraft/client/renderer/entity/StriderRenderer
	a STRIDER_LOCATION
	i COLD_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/EntityLiving;)Z isShaking
	a (Lnet/minecraft/world/entity/EntityLiving;Lehe;F)V scale
	a (Lnet/minecraft/world/entity/monster/EntityStrider;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/monster/EntityStrider;Lehe;F)V scale
	b (Lnet/minecraft/world/entity/monster/EntityStrider;)Z isShaking
fpp net/minecraft/client/renderer/entity/TadpoleRenderer
	a TADPOLE_TEXTURE
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/frog/Tadpole;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
fpq net/minecraft/client/renderer/entity/ThrownItemRenderer
	a MIN_CAMERA_DISTANCE_SQUARED
	f itemRenderer
	g scale
	h fullBright
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPosition;)I getBlockLightLevel
fpr net/minecraft/client/renderer/entity/ThrownTridentRenderer
	a TRIDENT_LOCATION
	f model
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/projectile/EntityThrownTrident;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/projectile/EntityThrownTrident;FFLehe;Lfig;I)V render
fps net/minecraft/client/renderer/entity/TippableArrowRenderer
	a NORMAL_ARROW_LOCATION
	f TIPPED_ARROW_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/projectile/EntityTippedArrow;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
fpt net/minecraft/client/renderer/entity/TntMinecartRenderer
	f blockRenderer
	a (Lfix;Lnet/minecraft/world/level/block/state/IBlockData;Lehe;Lfig;IZ)V renderWhiteSolidBlock
	a (Lnet/minecraft/world/entity/vehicle/EntityMinecartAbstract;FLnet/minecraft/world/level/block/state/IBlockData;Lehe;Lfig;I)V renderMinecartContents
	a (Lnet/minecraft/world/entity/vehicle/EntityMinecartTNT;FLnet/minecraft/world/level/block/state/IBlockData;Lehe;Lfig;I)V renderMinecartContents
fpu net/minecraft/client/renderer/entity/TntRenderer
	a blockRenderer
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/item/EntityTNTPrimed;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/item/EntityTNTPrimed;FFLehe;Lfig;I)V render
fpv net/minecraft/client/renderer/entity/TropicalFishRenderer
	a modelA
	i modelB
	j MODEL_A_TEXTURE
	k MODEL_B_TEXTURE
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/EntityInsentient;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/EntityLiving;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/EntityLiving;Lehe;FFF)V setupRotations
	a (Lnet/minecraft/world/entity/animal/EntityTropicalFish;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/EntityTropicalFish;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/animal/EntityTropicalFish;Lehe;FFF)V setupRotations
fpw net/minecraft/client/renderer/entity/TurtleRenderer
	a TURTLE_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/EntityInsentient;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/EntityLiving;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/animal/EntityTurtle;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/EntityTurtle;FFLehe;Lfig;I)V render
fpx net/minecraft/client/renderer/entity/UndeadHorseRenderer
	a MAP
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/horse/EntityHorseAbstract;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
fpy net/minecraft/client/renderer/entity/VexRenderer
	a VEX_LOCATION
	i VEX_CHARGING_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPosition;)I getBlockLightLevel
	a (Lnet/minecraft/world/entity/monster/EntityVex;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/monster/EntityVex;Lnet/minecraft/core/BlockPosition;)I getBlockLightLevel
fpz net/minecraft/client/renderer/entity/VillagerRenderer
	a VILLAGER_BASE_SKIN
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/EntityLiving;Lehe;F)V scale
	a (Lnet/minecraft/world/entity/npc/EntityVillager;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/npc/EntityVillager;Lehe;F)V scale
fqa net/minecraft/client/renderer/entity/VindicatorRenderer
	a VINDICATOR
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/monster/EntityVindicator;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
fqb net/minecraft/client/renderer/entity/WanderingTraderRenderer
	a VILLAGER_BASE_SKIN
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/EntityLiving;Lehe;F)V scale
	a (Lnet/minecraft/world/entity/npc/EntityVillagerTrader;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/npc/EntityVillagerTrader;Lehe;F)V scale
fqc net/minecraft/client/renderer/entity/WardenRenderer
	a TEXTURE
	i BIOLUMINESCENT_LAYER_TEXTURE
	j HEART_TEXTURE
	k PULSATING_SPOTS_TEXTURE_1
	l PULSATING_SPOTS_TEXTURE_2
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/monster/warden/Warden;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
fqd net/minecraft/client/renderer/entity/WitchRenderer
	a WITCH_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/EntityInsentient;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/EntityLiving;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/EntityLiving;Lehe;F)V scale
	a (Lnet/minecraft/world/entity/monster/EntityWitch;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/monster/EntityWitch;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/monster/EntityWitch;Lehe;F)V scale
fqe net/minecraft/client/renderer/entity/WitherBossRenderer
	a WITHER_INVULNERABLE_LOCATION
	i WITHER_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPosition;)I getBlockLightLevel
	a (Lnet/minecraft/world/entity/EntityLiving;Lehe;F)V scale
	a (Lnet/minecraft/world/entity/boss/wither/EntityWither;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/boss/wither/EntityWither;Lehe;F)V scale
	a (Lnet/minecraft/world/entity/boss/wither/EntityWither;Lnet/minecraft/core/BlockPosition;)I getBlockLightLevel
fqf net/minecraft/client/renderer/entity/WitherSkeletonRenderer
	a WITHER_SKELETON_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/EntityLiving;Lehe;F)V scale
	a (Lnet/minecraft/world/entity/monster/EntitySkeletonAbstract;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/monster/EntitySkeletonAbstract;Lehe;F)V scale
fqg net/minecraft/client/renderer/entity/WitherSkullRenderer
	a WITHER_INVULNERABLE_LOCATION
	f WITHER_LOCATION
	g model
	a ()Lfcx; createSkullLayer
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPosition;)I getBlockLightLevel
	a (Lnet/minecraft/world/entity/projectile/EntityWitherSkull;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/projectile/EntityWitherSkull;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/projectile/EntityWitherSkull;Lnet/minecraft/core/BlockPosition;)I getBlockLightLevel
fqh net/minecraft/client/renderer/entity/WolfRenderer
	a WOLF_LOCATION
	i WOLF_TAME_LOCATION
	j WOLF_ANGRY_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/EntityInsentient;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/EntityLiving;F)F getBob
	a (Lnet/minecraft/world/entity/EntityLiving;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/animal/EntityWolf;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/animal/EntityWolf;F)F getBob
	a (Lnet/minecraft/world/entity/animal/EntityWolf;FFLehe;Lfig;I)V render
fqi net/minecraft/client/renderer/entity/ZoglinRenderer
	a ZOGLIN_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/monster/EntityZoglin;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
fqj net/minecraft/client/renderer/entity/ZombieRenderer
fqk net/minecraft/client/renderer/entity/ZombieVillagerRenderer
	a ZOMBIE_VILLAGER_LOCATION
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/EntityLiving;)Z isShaking
	a (Lnet/minecraft/world/entity/monster/EntityZombieVillager;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	b (Lnet/minecraft/world/entity/monster/EntityZombieVillager;)Z isShaking
fql net/minecraft/client/renderer/entity/layers/ArrowLayer
	a dispatcher
	a (Lehe;Lfig;ILnet/minecraft/world/entity/Entity;FFFF)V renderStuckItem
	a (Lnet/minecraft/world/entity/EntityLiving;)I numStuck
fqm net/minecraft/client/renderer/entity/layers/BeeStingerLayer
	a BEE_STINGER_LOCATION
	a (Lehe;Lfig;ILnet/minecraft/world/entity/Entity;FFFF)V renderStuckItem
	a (Lehi;Lorg/joml/Matrix4f;Lorg/joml/Matrix3f;FIFFI)V vertex
	a (Lnet/minecraft/world/entity/EntityLiving;)I numStuck
fqn net/minecraft/client/renderer/entity/layers/CapeLayer
	a (Lehe;Lfig;ILfhh;FFFFFF)V render
	a (Lehe;Lfig;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
fqo net/minecraft/client/renderer/entity/layers/CarriedBlockLayer
	a blockRenderer
	a (Lehe;Lfig;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	a (Lehe;Lfig;ILnet/minecraft/world/entity/monster/EntityEnderman;FFFFFF)V render
fqp net/minecraft/client/renderer/entity/layers/CatCollarLayer
	a CAT_COLLAR_LOCATION
	b catModel
	a (Lehe;Lfig;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	a (Lehe;Lfig;ILnet/minecraft/world/entity/animal/EntityCat;FFFFFF)V render
fqq net/minecraft/client/renderer/entity/layers/CreeperPowerLayer
	a POWER_LOCATION
	b model
	a ()Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (F)F xOffset
	b ()Lezs; model
fqr net/minecraft/client/renderer/entity/layers/CrossedArmsItemLayer
	a itemInHandRenderer
	a (Lehe;Lfig;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	a (Lehe;Lfig;ILnet/minecraft/world/entity/EntityLiving;FFFFFF)V render
fqs net/minecraft/client/renderer/entity/layers/CustomHeadLayer
	a scaleX
	b scaleY
	c scaleZ
	d skullModels
	e itemInHandRenderer
	a (Lehe;Lfig;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	a (Lehe;Lfig;ILnet/minecraft/world/entity/EntityLiving;FFFFFF)V render
	a (Lehe;Z)V translateToHead
fqt net/minecraft/client/renderer/entity/layers/Deadmau5EarsLayer
	a (Lehe;Lfig;ILfhh;FFFFFF)V render
	a (Lehe;Lfig;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
fqu net/minecraft/client/renderer/entity/layers/DolphinCarryingItemLayer
	a itemInHandRenderer
	a (Lehe;Lfig;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	a (Lehe;Lfig;ILnet/minecraft/world/entity/animal/EntityDolphin;FFFFFF)V render
fqv net/minecraft/client/renderer/entity/layers/DrownedOuterLayer
	a DROWNED_OUTER_LAYER_LOCATION
	b model
	a (Lehe;Lfig;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	a (Lehe;Lfig;ILnet/minecraft/world/entity/monster/EntityDrowned;FFFFFF)V render
fqw net/minecraft/client/renderer/entity/layers/ElytraLayer
	a WINGS_LOCATION
	b elytraModel
	a (Lehe;Lfig;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	a (Lehe;Lfig;ILnet/minecraft/world/entity/EntityLiving;FFFFFF)V render
fqx net/minecraft/client/renderer/entity/layers/EnderEyesLayer
	a ENDERMAN_EYES
	a ()Lfio; renderType
fqy net/minecraft/client/renderer/entity/layers/EnergySwirlLayer
	a ()Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (F)F xOffset
	a (Lehe;Lfig;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	b ()Lezs; model
fqz net/minecraft/client/renderer/entity/layers/EyesLayer
	a ()Lfio; renderType
	a (Lehe;Lfig;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
fra net/minecraft/client/renderer/entity/layers/FoxHeldItemLayer
	a itemInHandRenderer
	a (Lehe;Lfig;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	a (Lehe;Lfig;ILnet/minecraft/world/entity/animal/EntityFox;FFFFFF)V render
frb net/minecraft/client/renderer/entity/layers/HorseArmorLayer
	a model
	a (Lehe;Lfig;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	a (Lehe;Lfig;ILnet/minecraft/world/entity/animal/horse/EntityHorse;FFFFFF)V render
frc net/minecraft/client/renderer/entity/layers/HorseMarkingLayer
	a LOCATION_BY_MARKINGS
	a (Lehe;Lfig;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	a (Lehe;Lfig;ILnet/minecraft/world/entity/animal/horse/EntityHorse;FFFFFF)V render
frd net/minecraft/client/renderer/entity/layers/HumanoidArmorLayer
	a ARMOR_LOCATION_CACHE
	b innerModel
	c outerModel
	d armorTrimAtlas
	a (Lehe;Lfig;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	a (Lehe;Lfig;ILnet/minecraft/world/entity/EntityLiving;FFFFFF)V render
	a (Lehe;Lfig;ILnet/minecraft/world/item/ItemArmor;ZLfaf;ZFFFLjava/lang/String;)V renderModel
	a (Lehe;Lfig;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EnumItemSlot;ILfaf;)V renderArmorPiece
	a (Lfaf;Lnet/minecraft/world/entity/EnumItemSlot;)V setPartVisibility
	a (Lnet/minecraft/world/entity/EnumItemSlot;)Lfaf; getArmorModel
	a (Lnet/minecraft/world/item/ArmorMaterial;Lehe;Lfig;ILnet/minecraft/world/item/armortrim/ArmorTrim;ZLfaf;ZFFF)V renderTrim
	a (Lnet/minecraft/world/item/ItemArmor;ZLjava/lang/String;)Lnet/minecraft/resources/MinecraftKey; getArmorLocation
	b (Lnet/minecraft/world/entity/EnumItemSlot;)Z usesInnerModel
fre net/minecraft/client/renderer/entity/layers/IronGolemCrackinessLayer
	a resourceLocations
	a (Lehe;Lfig;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	a (Lehe;Lfig;ILnet/minecraft/world/entity/animal/EntityIronGolem;FFFFFF)V render
frf net/minecraft/client/renderer/entity/layers/IronGolemFlowerLayer
	a blockRenderer
	a (Lehe;Lfig;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	a (Lehe;Lfig;ILnet/minecraft/world/entity/animal/EntityIronGolem;FFFFFF)V render
frg net/minecraft/client/renderer/entity/layers/ItemInHandLayer
	a itemInHandRenderer
	a (Lehe;Lfig;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	a (Lehe;Lfig;ILnet/minecraft/world/entity/EntityLiving;FFFFFF)V render
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemDisplayContext;Lnet/minecraft/world/entity/EnumMainHand;Lehe;Lfig;I)V renderArmWithItem
frh net/minecraft/client/renderer/entity/layers/LlamaDecorLayer
	a TEXTURE_LOCATION
	b TRADER_LLAMA
	c model
	a (Lehe;Lfig;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	a (Lehe;Lfig;ILnet/minecraft/world/entity/animal/horse/EntityLlama;FFFFFF)V render
fri net/minecraft/client/renderer/entity/layers/MushroomCowMushroomLayer
	a blockRenderer
	a (Lehe;Lfig;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	a (Lehe;Lfig;ILnet/minecraft/world/entity/animal/EntityMushroomCow;FFFFFF)V render
	a (Lehe;Lfig;IZLnet/minecraft/world/level/block/state/IBlockData;ILfuy;)V renderMushroomBlock
frj net/minecraft/client/renderer/entity/layers/PandaHoldsItemLayer
	a itemInHandRenderer
	a (Lehe;Lfig;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	a (Lehe;Lfig;ILnet/minecraft/world/entity/animal/EntityPanda;FFFFFF)V render
frk net/minecraft/client/renderer/entity/layers/ParrotOnShoulderLayer
	a model
	a (Lehe;Lfig;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	a (Lehe;Lfig;ILnet/minecraft/world/entity/player/EntityHuman;FFFFFF)V render
	a (Lehe;Lfig;ILnet/minecraft/world/entity/player/EntityHuman;FFFFZ)V render
frl net/minecraft/client/renderer/entity/layers/PhantomEyesLayer
	a PHANTOM_EYES
	a ()Lfio; renderType
frm net/minecraft/client/renderer/entity/layers/PlayerItemInHandLayer
	a itemInHandRenderer
	b X_ROT_MIN
	c X_ROT_MAX
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/EnumMainHand;Lehe;Lfig;I)V renderArmWithSpyglass
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemDisplayContext;Lnet/minecraft/world/entity/EnumMainHand;Lehe;Lfig;I)V renderArmWithItem
frn net/minecraft/client/renderer/entity/layers/RenderLayer
	a renderer
	a (Lehe;Lfig;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	a (Lezs;Lezs;Lnet/minecraft/resources/MinecraftKey;Lehe;Lfig;ILnet/minecraft/world/entity/EntityLiving;FFFFFFFFF)V coloredCutoutModelCopyLayerRender
	a (Lezs;Lnet/minecraft/resources/MinecraftKey;Lehe;Lfig;ILnet/minecraft/world/entity/EntityLiving;FFF)V renderColoredCutoutModel
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	c ()Lezs; getParentModel
fro net/minecraft/client/renderer/entity/layers/SaddleLayer
	a textureLocation
	b model
	a (Lehe;Lfig;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
frp net/minecraft/client/renderer/entity/layers/SheepFurLayer
	a SHEEP_FUR_LOCATION
	b model
	a (Lehe;Lfig;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	a (Lehe;Lfig;ILnet/minecraft/world/entity/animal/EntitySheep;FFFFFF)V render
frq net/minecraft/client/renderer/entity/layers/ShulkerHeadLayer
	a (Lehe;Lfig;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	a (Lehe;Lfig;ILnet/minecraft/world/entity/monster/EntityShulker;FFFFFF)V render
frr net/minecraft/client/renderer/entity/layers/SlimeOuterLayer
	a model
	a (Lehe;Lfig;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	a (Lehe;Lfig;ILnet/minecraft/world/entity/EntityLiving;FFFFFF)V render
frs net/minecraft/client/renderer/entity/layers/SnowGolemHeadLayer
	a blockRenderer
	b itemRenderer
	a (Lehe;Lfig;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	a (Lehe;Lfig;ILnet/minecraft/world/entity/animal/EntitySnowman;FFFFFF)V render
frt net/minecraft/client/renderer/entity/layers/SpiderEyesLayer
	a SPIDER_EYES
	a ()Lfio; renderType
fru net/minecraft/client/renderer/entity/layers/SpinAttackEffectLayer
	a TEXTURE
	b BOX
	c box
	a ()Lfcx; createLayer
	a (Lehe;Lfig;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	a (Lehe;Lfig;ILnet/minecraft/world/entity/EntityLiving;FFFFFF)V render
frv net/minecraft/client/renderer/entity/layers/StrayClothingLayer
	a STRAY_CLOTHES_LOCATION
	b layerModel
	a (Lehe;Lfig;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	a (Lehe;Lfig;ILnet/minecraft/world/entity/EntityInsentient;FFFFFF)V render
frw net/minecraft/client/renderer/entity/layers/StuckInBodyLayer
	a (Lehe;Lfig;ILnet/minecraft/world/entity/Entity;FFFF)V renderStuckItem
	a (Lehe;Lfig;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	a (Lehe;Lfig;ILnet/minecraft/world/entity/EntityLiving;FFFFFF)V render
	a (Lnet/minecraft/world/entity/EntityLiving;)I numStuck
frx net/minecraft/client/renderer/entity/layers/TropicalFishPatternLayer
	a KOB_TEXTURE
	b SUNSTREAK_TEXTURE
	c SNOOPER_TEXTURE
	d DASHER_TEXTURE
	e BRINELY_TEXTURE
	f SPOTTY_TEXTURE
	g FLOPPER_TEXTURE
	h STRIPEY_TEXTURE
	i GLITTER_TEXTURE
	j BLOCKFISH_TEXTURE
	k BETTY_TEXTURE
	l CLAYFISH_TEXTURE
	m modelA
	n modelB
	a (Lehe;Lfig;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	a (Lehe;Lfig;ILnet/minecraft/world/entity/animal/EntityTropicalFish;FFFFFF)V render
fry net/minecraft/client/renderer/entity/layers/VillagerProfessionLayer
	a LEVEL_LOCATIONS
	b typeHatCache
	c professionHatCache
	d resourceManager
	e path
	a (Lehe;Lfig;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	a (Lehe;Lfig;ILnet/minecraft/world/entity/EntityLiving;FFFFFF)V render
	a (Lit/unimi/dsi/fastutil/objects/Object2ObjectMap;Ljava/lang/String;Lnet/minecraft/core/RegistryBlocks;Ljava/lang/Object;)Lfuo$a; getHatData
	a (Ljava/lang/String;Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/resources/MinecraftKey; getResourceLocation
frz net/minecraft/client/renderer/entity/layers/WardenEmissiveLayer
	a texture
	b alphaFunction
	c drawSelector
	a ()V onlyDrawSelectedParts
	a (Lehe;Lfig;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	a (Lehe;Lfig;ILnet/minecraft/world/entity/monster/warden/Warden;FFFFFF)V render
	b ()V resetDrawForAllParts
frz$a net/minecraft/client/renderer/entity/layers/WardenEmissiveLayer$AlphaFunction
frz$b net/minecraft/client/renderer/entity/layers/WardenEmissiveLayer$DrawSelector
fs$a net/minecraft/commands/arguments/item/FunctionArgument$Result
	a (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; create
	b (Lcom/mojang/brigadier/context/CommandContext;)Lcom/mojang/datafixers/util/Pair; unwrap
fsa net/minecraft/client/renderer/entity/layers/WitchItemLayer
	a (Lehe;Lfig;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	a (Lehe;Lfig;ILnet/minecraft/world/entity/EntityLiving;FFFFFF)V render
fsb net/minecraft/client/renderer/entity/layers/WitherArmorLayer
	a WITHER_ARMOR_LOCATION
	b model
	a ()Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (F)F xOffset
	b ()Lezs; model
fsc net/minecraft/client/renderer/entity/layers/WolfCollarLayer
	a WOLF_COLLAR_LOCATION
	a (Lehe;Lfig;ILnet/minecraft/world/entity/Entity;FFFFFF)V render
	a (Lehe;Lfig;ILnet/minecraft/world/entity/animal/EntityWolf;FFFFFF)V render
fsf net/minecraft/client/renderer/entity/player/PlayerRenderer
	a (Lehe;Lfig;ILfhh;)V renderRightHand
	a (Lehe;Lfig;ILfhh;Lfcr;Lfcr;)V renderHand
	a (Lfhh;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lfhh;F)Lnet/minecraft/world/phys/Vec3D; getRenderOffset
	a (Lfhh;FFLehe;Lfig;I)V render
	a (Lfhh;Lehe;F)V scale
	a (Lfhh;Lehe;FFF)V setupRotations
	a (Lfhh;Lnet/minecraft/network/chat/IChatBaseComponent;Lehe;Lfig;I)V renderNameTag
	a (Lfhh;Lnet/minecraft/world/EnumHand;)Lfaf$a; getArmPose
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/world/entity/Entity;F)Lnet/minecraft/world/phys/Vec3D; getRenderOffset
	a (Lnet/minecraft/world/entity/Entity;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/chat/IChatBaseComponent;Lehe;Lfig;I)V renderNameTag
	a (Lnet/minecraft/world/entity/EntityLiving;FFLehe;Lfig;I)V render
	a (Lnet/minecraft/world/entity/EntityLiving;Lehe;F)V scale
	a (Lnet/minecraft/world/entity/EntityLiving;Lehe;FFF)V setupRotations
	b (Lehe;Lfig;ILfhh;)V renderLeftHand
	b (Lfhh;)V setModelProperties
fsh net/minecraft/client/renderer/item/ClampedItemPropertyFunction
fsi net/minecraft/client/renderer/item/CompassItemPropertyFunction
	a DEFAULT_ROTATION
	b compassTarget
	c wobble
	d wobbleRandom
	a (I)I hash
	a (IJ)F getRandomlySpinningRotation
	a (Lnet/minecraft/world/entity/Entity;)D getWrappedVisualRotationY
	a (Lnet/minecraft/world/entity/Entity;JLnet/minecraft/core/BlockPosition;)F getRotationTowardsCompassTarget
	a (Lnet/minecraft/world/entity/Entity;Lfdj;)Lfdj; tryFetchLevelIfMissing
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPosition;)D getAngleFromEntityToPos
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/GlobalPos;)Z isValidCompassTargetPos
	a (Lnet/minecraft/world/item/ItemStack;Lfdj;ILnet/minecraft/world/entity/Entity;)F getCompassRotation
fsi$a net/minecraft/client/renderer/item/CompassItemPropertyFunction$CompassTarget
fsi$b net/minecraft/client/renderer/item/CompassItemPropertyFunction$CompassWobble
	a rotation
	b deltaRotation
	c lastUpdateTick
	a (J)Z shouldUpdate
	a (JD)V update
fsj net/minecraft/client/renderer/item/ItemProperties
	a GENERIC_PROPERTIES
	b TAG_CUSTOM_MODEL_DATA
	c DAMAGED
	d DAMAGE
	e PROPERTY_DAMAGED
	f PROPERTY_DAMAGE
	g PROPERTIES
	a (Lfsk;)V registerCustomModelData
	a (Lnet/minecraft/resources/MinecraftKey;Lfsh;)Lfsh; registerGeneric
	a (Lnet/minecraft/world/item/Item;Lnet/minecraft/resources/MinecraftKey;)Lfsk; getProperty
	a (Lnet/minecraft/world/item/Item;Lnet/minecraft/resources/MinecraftKey;Lfsh;)V register
fsk net/minecraft/client/renderer/item/ItemPropertyFunction
fsn net/minecraft/client/renderer/texture/AbstractTexture
	a NOT_ASSIGNED
	b id
	c blur
	d mipmap
	a (Lftd;Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/resources/MinecraftKey;Ljava/util/concurrent/Executor;)V reset
	a (Lnet/minecraft/server/packs/resources/IResourceManager;)V load
	a (ZZ)V setFilter
	b ()I getId
	c ()V releaseId
	d ()V bind
fso net/minecraft/client/renderer/texture/Dumpable
	a (Lnet/minecraft/resources/MinecraftKey;Ljava/nio/file/Path;)V dumpContents
fsp net/minecraft/client/renderer/texture/DynamicTexture
	e LOGGER
	f pixels
	a ()V upload
	a (Legf;)V setPixels
	a (Lnet/minecraft/resources/MinecraftKey;Ljava/nio/file/Path;)V dumpContents
	a (Lnet/minecraft/server/packs/resources/IResourceManager;)V load
	e ()Legf; getPixels
fsq net/minecraft/client/renderer/texture/HttpTexture
	f LOGGER
	g SKIN_WIDTH
	h SKIN_HEIGHT
	i LEGACY_SKIN_HEIGHT
	j file
	k urlString
	l processLegacySkin
	m onDownloaded
	n future
	o uploaded
	a (Legf;)V loadCallback
	a (Legf;IIII)V doNotchTransparencyHack
	a (Ljava/io/InputStream;)Legf; load
	a (Lnet/minecraft/server/packs/resources/IResourceManager;)V load
	b (Legf;)V upload
	b (Legf;IIII)V setNoAlpha
	c (Legf;)Legf; processLegacySkin
fsr net/minecraft/client/renderer/texture/MipmapGenerator
	a ALPHA_CUTOUT_CUTOFF
	b POW22
	a (I)F getPow22
	a (IIIII)I gammaBlend
	a (IIIIZ)I alphaBlend
	a (Legf;)Z hasTransparentPixel
	a ([Legf;I)[Legf; generateMipLevels
fss net/minecraft/client/renderer/texture/MissingTextureAtlasSprite
	a MISSING_IMAGE_WIDTH
	b MISSING_IMAGE_HEIGHT
	c MISSING_TEXTURE_NAME
	d MISSING_TEXTURE_LOCATION
	e EMPTY_ANIMATION_META
	f missingTexture
	a ()Lfsw; create
	a (II)Legf; generateMissingImage
	b ()Lnet/minecraft/resources/MinecraftKey; getLocation
	c ()Lfsp; getTexture
fst net/minecraft/client/renderer/texture/OverlayTexture
	a NO_WHITE_U
	b RED_OVERLAY_V
	c WHITE_OVERLAY_V
	d NO_OVERLAY
	e SIZE
	f texture
	a ()V setupOverlayColor
	a (F)I u
	a (FZ)I pack
	a (II)I pack
	a (Z)I v
	b ()V teardownOverlayColor
fsu net/minecraft/client/renderer/texture/PreloadedTexture
	f future
	a ()Ljava/util/concurrent/CompletableFuture; getFuture
	a (Lftd;Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/resources/MinecraftKey;Ljava/util/concurrent/Executor;)V reset
	a (Ljava/util/concurrent/Executor;)Ljava/util/concurrent/Executor; executor
	b (Lnet/minecraft/server/packs/resources/IResourceManager;)Lfsv$a; getTextureImage
fsv net/minecraft/client/renderer/texture/SimpleTexture
	e location
	f LOGGER
	a (Legf;ZZ)V doLoad
	a (Lnet/minecraft/server/packs/resources/IResourceManager;)V load
	b (Lnet/minecraft/server/packs/resources/IResourceManager;)Lfsv$a; getTextureImage
fsv$a net/minecraft/client/renderer/texture/SimpleTexture$TextureImage
	a metadata
	b image
	c exception
	a ()Lfuu; getTextureMetadata
	a (Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/resources/MinecraftKey;)Lfsv$a; load
	b ()Legf; getImage
	c ()V throwIfError
fsw net/minecraft/client/renderer/texture/SpriteContents
	a LOGGER
	b name
	c width
	d height
	e originalImage
	f byMipLevel
	g animatedTexture
	a ()I width
	a (I)V increaseMipLevel
	a (II)V uploadFirstFrame
	a (III)Z isTransparent
	a (IIII[Legf;)V upload
	a (Lfun;IILful;)Lfsw$a; createAnimatedTexture
	b ()I height
	c ()Lnet/minecraft/resources/MinecraftKey; name
	d ()Ljava/util/stream/IntStream; getUniqueFrames
	e ()Lfsy; createTicker
	f ()I getFrameCount
fsw$a net/minecraft/client/renderer/texture/SpriteContents$AnimatedTexture
	b frames
	c frameRowSize
	d interpolateFrames
	a ()Lfsy; createTicker
	a (I)I getFrameX
	a (II)V uploadFirstFrame
	a (III)V uploadFrame
	b ()Ljava/util/stream/IntStream; getUniqueFrames
	b (I)I getFrameY
fsw$b net/minecraft/client/renderer/texture/SpriteContents$FrameInfo
	a index
	b time
fsw$c net/minecraft/client/renderer/texture/SpriteContents$InterpolationData
	b activeFrame
	a (DII)I mix
	a (IILfsw$d;)V uploadInterpolatedFrame
	a (Lfsw$a;IIII)I getPixel
fsw$d net/minecraft/client/renderer/texture/SpriteContents$Ticker
	b frame
	c subFrame
	d animationInfo
	e interpolationData
	a (II)V tickAndUpload
fsx net/minecraft/client/renderer/texture/SpriteLoader
	a LOGGER
	b location
	c maxSupportedTextureSize
	d minWidth
	e minHeight
	a (Lfsz;II)Ljava/util/Map; getStitchedSprites
	a (Lftb;)Lfsx; create
	a (Ljava/util/List;ILjava/util/concurrent/Executor;)Lfsx$a; stitch
	a (Ljava/util/List;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; runSpriteSuppliers
	a (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/server/packs/resources/IResource;)Lfsw; loadSprite
	a (Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/resources/MinecraftKey;ILjava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; loadAndStitch
fsx$a net/minecraft/client/renderer/texture/SpriteLoader$Preparations
	a width
	b height
	c mipLevel
	d missing
	e regions
	f readyForUpload
	a ()Ljava/util/concurrent/CompletableFuture; waitForUpload
	b ()I width
	c ()I height
	d ()I mipLevel
	e ()Lftc; missing
	f ()Ljava/util/Map; regions
	g ()Ljava/util/concurrent/CompletableFuture; readyForUpload
fsy net/minecraft/client/renderer/texture/SpriteTicker
	a (II)V tickAndUpload
fsz net/minecraft/client/renderer/texture/Stitcher
	a HOLDER_COMPARATOR
	b mipLevel
	c texturesToBeStitched
	d storage
	e storageX
	f storageY
	g maxWidth
	h maxHeight
	a ()I getWidth
	a (II)I smallestFittingMinTexel
	a (Lfsz$a;)V registerSprite
	a (Lfsz$b;)Z addToStorage
	a (Lfsz$d;)V gatherSprites
	b ()I getHeight
	b (Lfsz$b;)Z expand
	c ()V stitch
fsz$a net/minecraft/client/renderer/texture/Stitcher$Entry
	a ()I width
	b ()I height
	c ()Lnet/minecraft/resources/MinecraftKey; name
fsz$b net/minecraft/client/renderer/texture/Stitcher$Holder
	a entry
	b width
	c height
	a ()Lfsz$a; entry
	b ()I width
	c ()I height
fsz$c net/minecraft/client/renderer/texture/Stitcher$Region
	a originX
	b originY
	c width
	d height
	e subSlots
	f holder
	a ()I getX
	a (Lfsz$b;)Z add
	a (Lfsz$d;)V walk
	b ()I getY
fsz$d net/minecraft/client/renderer/texture/Stitcher$SpriteLoader
fta net/minecraft/client/renderer/texture/StitcherException
	a allSprites
	a ()Ljava/util/Collection; getAllSprites
ftb net/minecraft/client/renderer/texture/TextureAtlas
	e LOCATION_BLOCKS
	f LOCATION_PARTICLES
	g LOGGER
	h sprites
	i animatedTextures
	j texturesByName
	k location
	l maxSupportedTextureSize
	m width
	n height
	o mipLevel
	a ()V cycleAnimationFrames
	a (Lfsx$a;)V upload
	a (Ljava/nio/file/Path;Ljava/lang/String;Ljava/util/Map;)V dumpSpriteNames
	a (Lnet/minecraft/resources/MinecraftKey;)Lftc; getSprite
	a (Lnet/minecraft/resources/MinecraftKey;Ljava/nio/file/Path;)V dumpContents
	a (Lnet/minecraft/server/packs/resources/IResourceManager;)V load
	b (Lfsx$a;)V updateFilter
	e ()V tick
	f ()V clearTextureData
	g ()Lnet/minecraft/resources/MinecraftKey; location
	h ()I maxSupportedTextureSize
	i ()I getWidth
	j ()I getHeight
ftc net/minecraft/client/renderer/texture/TextureAtlasSprite
	a atlasLocation
	b contents
	c x
	d y
	e u0
	f u1
	g v0
	h v1
	a ()I getX
	a (D)F getU
	a (F)F getUOffset
	a (Lehi;)Lehi; wrap
	b ()I getY
	b (D)F getV
	b (F)F getVOffset
	c ()F getU0
	d ()F getU1
	e ()Lfsw; contents
	f ()Lftc$a; createTicker
	g ()F getV0
	h ()F getV1
	i ()Lnet/minecraft/resources/MinecraftKey; atlasLocation
	j ()V uploadFirstFrame
	k ()F uvShrinkRatio
	l ()F atlasSize
ftc$a net/minecraft/client/renderer/texture/TextureAtlasSprite$Ticker
	a ()V tickAndUpload
ftd net/minecraft/client/renderer/texture/TextureManager
	a INTENTIONAL_MISSING_TEXTURE
	b LOGGER
	c byPath
	d tickableTextures
	e prefixRegister
	f resourceManager
	a (Lalb$a;Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;Lnet/minecraft/util/profiling/GameProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; reload
	a (Ljava/lang/Runnable;)V execute
	a (Ljava/lang/String;Lfsp;)Lnet/minecraft/resources/MinecraftKey; register
	a (Ljava/nio/file/Path;)V dumpAllSheets
	a (Lnet/minecraft/resources/MinecraftKey;)V bindForSetup
	a (Lnet/minecraft/resources/MinecraftKey;Lfsn;)V register
	a (Lnet/minecraft/resources/MinecraftKey;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; preload
	b (Ljava/nio/file/Path;)V _dumpAllSheets
	b (Lnet/minecraft/resources/MinecraftKey;)Lfsn; getTexture
	b (Lnet/minecraft/resources/MinecraftKey;Lfsn;)Lfsn; getTexture
	c (Lnet/minecraft/resources/MinecraftKey;)V release
	c (Lnet/minecraft/resources/MinecraftKey;Lfsn;)V safeClose
	d (Lnet/minecraft/resources/MinecraftKey;)V _bind
	d (Lnet/minecraft/resources/MinecraftKey;Lfsn;)Lfsn; loadTexture
	e ()V tick
fte net/minecraft/client/renderer/texture/Tickable
	e ()V tick
ftf net/minecraft/client/renderer/texture/atlas/SpriteResourceLoader
	a LOGGER
	b ATLAS_INFO_CONVERTER
	c sources
	a (Lnet/minecraft/server/packs/resources/IResourceManager;)Ljava/util/List; list
	a (Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/resources/MinecraftKey;)Lftf; load
ftg net/minecraft/client/renderer/texture/atlas/SpriteSource
	a TEXTURE_ID_CONVERTER
	a ()Lfth; type
	a (Lnet/minecraft/server/packs/resources/IResourceManager;Lftg$a;)V run
ftg$a net/minecraft/client/renderer/texture/atlas/SpriteSource$Output
	a (Ljava/util/function/Predicate;)V removeAll
	a (Lnet/minecraft/resources/MinecraftKey;Lftg$b;)V add
	a (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/server/packs/resources/IResource;)V add
ftg$b net/minecraft/client/renderer/texture/atlas/SpriteSource$SpriteSupplier
	a ()V discard
fth net/minecraft/client/renderer/texture/atlas/SpriteSourceType
	a codec
	a ()Lcom/mojang/serialization/Codec; codec
fti net/minecraft/client/renderer/texture/atlas/SpriteSources
	a SINGLE_FILE
	b DIRECTORY
	c FILTER
	d UNSTITCHER
	e PALETTED_PERMUTATIONS
	f TYPE_CODEC
	g CODEC
	h FILE_CODEC
	i TYPES
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lfth; register
ftk net/minecraft/client/renderer/texture/atlas/sources/DirectoryLister
	b CODEC
	c sourcePath
	d idPrefix
	a ()Lfth; type
	a (Lnet/minecraft/server/packs/resources/IResourceManager;Lftg$a;)V run
ftl net/minecraft/client/renderer/texture/atlas/sources/LazyLoadedImage
	a id
	b resource
	c image
	d referenceCount
	a ()Legf; get
	b ()V release
ftm net/minecraft/client/renderer/texture/atlas/sources/PalettedPermutations
	b CODEC
	c LOGGER
	d textures
	e permutations
	f paletteKey
	a ()Lfth; type
	a (Lnet/minecraft/server/packs/resources/IResourceManager;Lftg$a;)V run
	a (Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/resources/MinecraftKey;)[I loadPaletteEntryFromImage
	a ([I[I)Ljava/util/function/IntUnaryOperator; createPaletteMapping
ftm$a net/minecraft/client/renderer/texture/atlas/sources/PalettedPermutations$PalettedSpriteSupplier
	a baseImage
	b palette
	c permutationLocation
	a ()V discard
	b ()Lfsw; get
	c ()Lftl; baseImage
	d ()Ljava/util/function/Supplier; palette
	e ()Lnet/minecraft/resources/MinecraftKey; permutationLocation
ftn net/minecraft/client/renderer/texture/atlas/sources/SingleFile
	b CODEC
	c LOGGER
	d resourceId
	e spriteId
	a ()Lfth; type
	a (Lnet/minecraft/server/packs/resources/IResourceManager;Lftg$a;)V run
fto net/minecraft/client/renderer/texture/atlas/sources/SourceFilter
	b CODEC
	c filter
	a ()Lfth; type
	a (Lnet/minecraft/server/packs/resources/IResourceManager;Lftg$a;)V run
ftp net/minecraft/client/renderer/texture/atlas/sources/Unstitcher
	b CODEC
	c LOGGER
	d resource
	e regions
	f xDivisor
	g yDivisor
	a ()Lfth; type
	a (Lnet/minecraft/server/packs/resources/IResourceManager;Lftg$a;)V run
ftp$a net/minecraft/client/renderer/texture/atlas/sources/Unstitcher$Region
	a CODEC
	b sprite
	c x
	d y
	e width
	f height
	a ()Lnet/minecraft/resources/MinecraftKey; sprite
	b ()D x
	c ()D y
	d ()D width
	e ()D height
ftp$b net/minecraft/client/renderer/texture/atlas/sources/Unstitcher$RegionInstance
	a image
	b region
	c xDivisor
	d yDivisor
	a ()V discard
	b ()Lfsw; get
fts net/minecraft/client/resources/ClientPackSource
	b HIGH_CONTRAST_PACK
	c VERSION_METADATA_SECTION
	d BUILT_IN_METADATA
	e VANILLA_NAME
	f SPECIAL_PACK_NAMES
	g PACKS_DIR
	h externalAssetDir
	a (Ljava/lang/String;)Lnet/minecraft/network/chat/IChatBaseComponent; getPackTitle
	a (Ljava/lang/String;Lakq$c;Lnet/minecraft/network/chat/IChatBaseComponent;)Lnet/minecraft/server/packs/repository/ResourcePackLoader; createBuiltinPack
	a (Ljava/nio/file/Path;)Ljava/nio/file/Path; findExplodedAssetPacks
	a (Ljava/util/function/BiConsumer;)V populatePackList
	a (Lnet/minecraft/server/packs/IResourcePack;)Lnet/minecraft/server/packs/repository/ResourcePackLoader; createVanillaPack
	b (Ljava/nio/file/Path;)Lnet/minecraft/server/packs/ResourcePackVanilla; createVanillaPackSource
ftt net/minecraft/client/resources/DefaultPlayerSkin
	a DEFAULT_SKINS
	a ()Lnet/minecraft/resources/MinecraftKey; getDefaultSkin
	a (Ljava/util/UUID;)Lnet/minecraft/resources/MinecraftKey; getDefaultSkin
	b (Ljava/util/UUID;)Ljava/lang/String; getSkinModelName
	c (Ljava/util/UUID;)Lftt$b; getSkinType
ftt$a net/minecraft/client/resources/DefaultPlayerSkin$ModelType
	a SLIM
	b WIDE
	c id
	d $VALUES
	a ()[Lftt$a; $values
ftt$b net/minecraft/client/resources/DefaultPlayerSkin$SkinType
	a texture
	b model
	a ()Lnet/minecraft/resources/MinecraftKey; texture
	b ()Lftt$a; model
ftu net/minecraft/client/resources/DownloadedPackSource
	a LOGGER
	b SHA1
	c MAX_PACK_SIZE_BYTES
	d MAX_KEPT_PACKS
	e SERVER_ID
	f SERVER_NAME
	g APPLYING_PACK_TEXT
	h serverPackDir
	i downloadLock
	j currentDownload
	k serverPack
	a ()Ljava/util/concurrent/CompletableFuture; clearServerPack
	a (Ljava/io/File;)V deleteQuietly
	a (Ljava/io/File;Lnet/minecraft/server/packs/repository/PackSource;)Ljava/util/concurrent/CompletableFuture; setServerPack
	a (Ljava/lang/String;Ljava/io/File;)Z checkHash
	a (Ljava/net/URL;Ljava/lang/String;Z)Ljava/util/concurrent/CompletableFuture; downloadAndSelectResourcePack
	a (Ljava/util/function/Consumer;)V loadPacks
	a (Lnet/minecraft/world/level/storage/Convertable$ConversionSession;)Ljava/util/concurrent/CompletableFuture; loadBundledResourcePack
	b ()Ljava/util/Map; getDownloadHeaders
	c ()V clearOldDownloads
ftv net/minecraft/client/resources/FoliageColorReloadListener
	a LOCATION
	a (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)V apply
	a (Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)[I prepare
	a ([ILnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)V apply
	b (Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)Ljava/lang/Object; prepare
ftw net/minecraft/client/resources/GrassColorReloadListener
	a LOCATION
	a (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)V apply
	a (Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)[I prepare
	a ([ILnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)V apply
	b (Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)Ljava/lang/Object; prepare
ftx net/minecraft/client/resources/IndexedAssetSource
	a PATH_SPLITTER
	b LOGGER
	a (Ljava/nio/file/Path;Ljava/lang/String;)Ljava/nio/file/Path; createIndexFs
fty net/minecraft/client/resources/LegacyStuffWrapper
	a (Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/resources/MinecraftKey;)[I getPixels
ftz net/minecraft/client/resources/MobEffectTextureManager
	a (Lnet/minecraft/world/effect/MobEffectList;)Lftc; get
fua net/minecraft/client/resources/PaintingTextureManager
	a BACK_SPRITE_LOCATION
	a ()Lftc; getBackSprite
	a (Lnet/minecraft/world/entity/decoration/PaintingVariant;)Lftc; get
fub net/minecraft/client/resources/SkinManager
	a PROPERTY_TEXTURES
	b textureManager
	c skinsDirectory
	d sessionService
	e insecureSkinCache
	a (Lcom/mojang/authlib/GameProfile;)Ljava/util/Map; getInsecureSkinInformation
	a (Lcom/mojang/authlib/GameProfile;Lfub$a;Z)V registerSkins
	a (Lcom/mojang/authlib/minecraft/MinecraftProfileTexture$Type;Ljava/lang/String;)Lnet/minecraft/resources/MinecraftKey; getTextureLocation
	a (Lcom/mojang/authlib/minecraft/MinecraftProfileTexture;Lcom/mojang/authlib/minecraft/MinecraftProfileTexture$Type;)Lnet/minecraft/resources/MinecraftKey; registerTexture
	a (Lcom/mojang/authlib/minecraft/MinecraftProfileTexture;Lcom/mojang/authlib/minecraft/MinecraftProfileTexture$Type;Lfub$a;)Lnet/minecraft/resources/MinecraftKey; registerTexture
	b (Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/resources/MinecraftKey; getInsecureSkinLocation
fub$a net/minecraft/client/resources/SkinManager$SkinTextureCallback
fuc net/minecraft/client/resources/SplashManager
	a SPLASHES_LOCATION
	b RANDOM
	c splashes
	d user
	a ()Ljava/lang/String; getSplash
	a (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)V apply
	a (Ljava/util/List;Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)V apply
	a (Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)Ljava/util/List; prepare
	b (Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)Ljava/lang/Object; prepare
fud net/minecraft/client/resources/TextureAtlasHolder
	a textureAtlas
	b atlasInfoLocation
	a (Lalb$a;Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;Lnet/minecraft/util/profiling/GameProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; reload
	a (Lfsx$a;Lnet/minecraft/util/profiling/GameProfilerFiller;)V apply
	a (Lnet/minecraft/resources/MinecraftKey;)Lftc; getSprite
fue net/minecraft/client/resources/language/ClientLanguage
	b LOGGER
	c storage
	d defaultRightToLeft
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; getOrDefault
	a (Ljava/lang/String;Ljava/util/List;Ljava/util/Map;)V appendFrom
	a (Lnet/minecraft/network/chat/IChatFormatted;)Lnet/minecraft/util/FormattedString; getVisualOrder
	a (Lnet/minecraft/server/packs/resources/IResourceManager;Ljava/util/List;Z)Lfue; loadFrom
	b ()Z isDefaultRightToLeft
	b (Ljava/lang/String;)Z has
fuf net/minecraft/client/resources/language/FormattedBidiReorder
	a (Ljava/lang/String;)Ljava/lang/String; shape
	a (Lnet/minecraft/network/chat/IChatFormatted;Z)Lnet/minecraft/util/FormattedString; reorder
fug net/minecraft/client/resources/language/I18n
	a language
	a (Ljava/lang/String;)Z exists
	a (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; get
	a (Lnet/minecraft/locale/LocaleLanguage;)V setLanguage
fuh net/minecraft/client/resources/language/LanguageInfo
	a CODEC
	b region
	c name
	d bidirectional
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; toComponent
	b ()Ljava/lang/String; region
	c ()Ljava/lang/String; name
	d ()Z bidirectional
fui net/minecraft/client/resources/language/LanguageManager
	a DEFAULT_LANGUAGE_CODE
	b LOGGER
	c DEFAULT_LANGUAGE
	d languages
	e currentCode
	a ()Ljava/lang/String; getSelected
	a (Ljava/lang/String;)V setSelected
	a (Ljava/util/stream/Stream;)Ljava/util/Map; extractLanguages
	a (Lnet/minecraft/server/packs/resources/IResourceManager;)V onResourceManagerReload
	b ()Ljava/util/SortedMap; getLanguages
	b (Ljava/lang/String;)Lfuh; getLanguage
fuk net/minecraft/client/resources/metadata/animation/AnimationFrame
	a UNKNOWN_FRAME_TIME
	b index
	c time
	a ()I getIndex
	a (I)I getTime
ful net/minecraft/client/resources/metadata/animation/AnimationMetadataSection
	a SERIALIZER
	b SECTION_NAME
	c DEFAULT_FRAME_TIME
	d UNKNOWN_SIZE
	e EMPTY
	f frames
	g frameWidth
	h frameHeight
	i defaultFrameTime
	j interpolatedFrames
	a ()I getDefaultFrameTime
	a (II)Lfun; calculateFrameSize
	a (Lful$a;)V forEachFrame
	b ()Z isInterpolatedFrames
ful$a net/minecraft/client/resources/metadata/animation/AnimationMetadataSection$FrameOutput
fum net/minecraft/client/resources/metadata/animation/AnimationMetadataSectionSerializer
	a ()Ljava/lang/String; getMetadataSectionName
	a (ILcom/google/gson/JsonElement;)Lfuk; getFrame
	a (Lcom/google/gson/JsonObject;)Ljava/lang/Object; fromJson
	b (Lcom/google/gson/JsonObject;)Lful; fromJson
fun net/minecraft/client/resources/metadata/animation/FrameSize
	a width
	b height
	a ()I width
	b ()I height
fuo net/minecraft/client/resources/metadata/animation/VillagerMetaDataSection
	a SERIALIZER
	b SECTION_NAME
	c hat
	a ()Lfuo$a; getHat
fuo$a net/minecraft/client/resources/metadata/animation/VillagerMetaDataSection$Hat
	a NONE
	b PARTIAL
	c FULL
	d BY_NAME
	e name
	f $VALUES
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lfuo$a; getByName
	b ()[Lfuo$a; $values
fup net/minecraft/client/resources/metadata/animation/VillagerMetadataSectionSerializer
	a ()Ljava/lang/String; getMetadataSectionName
	a (Lcom/google/gson/JsonObject;)Ljava/lang/Object; fromJson
	b (Lcom/google/gson/JsonObject;)Lfuo; fromJson
fur net/minecraft/client/resources/metadata/language/LanguageMetadataSection
	a LANGUAGE_CODE_CODEC
	b CODEC
	c TYPE
	d languages
	a ()Ljava/util/Map; languages
fuu net/minecraft/client/resources/metadata/texture/TextureMetadataSection
	a SERIALIZER
	b DEFAULT_BLUR
	c DEFAULT_CLAMP
	d blur
	e clamp
	a ()Z isBlur
	b ()Z isClamp
fuv net/minecraft/client/resources/metadata/texture/TextureMetadataSectionSerializer
	a ()Ljava/lang/String; getMetadataSectionName
	a (Lcom/google/gson/JsonObject;)Ljava/lang/Object; fromJson
	b (Lcom/google/gson/JsonObject;)Lfuu; fromJson
fux net/minecraft/client/resources/model/AtlasSet
	a atlases
	a (Lnet/minecraft/resources/MinecraftKey;)Lftb; getAtlas
	a (Lnet/minecraft/server/packs/resources/IResourceManager;ILjava/util/concurrent/Executor;)Ljava/util/Map; scheduleLoad
fux$a net/minecraft/client/resources/model/AtlasSet$AtlasEntry
	a atlas
	b atlasInfoLocation
	a ()Lftb; atlas
	b ()Lnet/minecraft/resources/MinecraftKey; atlasInfoLocation
fux$b net/minecraft/client/resources/model/AtlasSet$StitchResult
	a atlas
	b preparations
	a ()Lftc; missing
	a (Lnet/minecraft/resources/MinecraftKey;)Lftc; getSprite
	b ()Ljava/util/concurrent/CompletableFuture; readyForUpload
	c ()V upload
fuy net/minecraft/client/resources/model/BakedModel
	a ()Z useAmbientOcclusion
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/util/RandomSource;)Ljava/util/List; getQuads
	b ()Z isGui3d
	c ()Z usesBlockLight
	d ()Z isCustomRenderer
	e ()Lftc; getParticleIcon
	f ()Lfjm; getTransforms
	g ()Lfjk; getOverrides
fuz net/minecraft/client/resources/model/BlockModelRotation
	a X0_Y0
	b X0_Y90
	c X0_Y180
	d X0_Y270
	e X90_Y0
	f X90_Y90
	g X90_Y180
	h X90_Y270
	i X180_Y0
	j X180_Y90
	k X180_Y180
	l X180_Y270
	m X270_Y0
	n X270_Y90
	o X270_Y180
	p X270_Y270
	q DEGREES
	r BY_INDEX
	s transformation
	t actualRotation
	u index
	v $VALUES
	a ()Lcom/mojang/math/PointGroupO; actualRotation
	a (II)Lfuz; by
	b ()Lcom/mojang/math/Transformation; getRotation
	b (II)I getIndex
	d ()[Lfuz; $values
fv$a net/minecraft/commands/arguments/item/ItemParser$ItemResult
	a item
	b nbt
	a ()Lnet/minecraft/core/Holder; item
	b ()Lnet/minecraft/nbt/NBTTagCompound; nbt
fv$b net/minecraft/commands/arguments/item/ItemParser$TagResult
	a tag
	b nbt
	a ()Lnet/minecraft/core/HolderSet; tag
	b ()Lnet/minecraft/nbt/NBTTagCompound; nbt
fva net/minecraft/client/resources/model/BuiltInModel
	a itemTransforms
	b overrides
	c particleTexture
	d usesBlockLight
	a ()Z useAmbientOcclusion
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/util/RandomSource;)Ljava/util/List; getQuads
	b ()Z isGui3d
	c ()Z usesBlockLight
	d ()Z isCustomRenderer
	e ()Lftc; getParticleIcon
	f ()Lfjm; getTransforms
	g ()Lfjk; getOverrides
fvb net/minecraft/client/resources/model/Material
	a COMPARATOR
	b atlasLocation
	c texture
	d renderType
	a ()Lnet/minecraft/resources/MinecraftKey; atlasLocation
	a (Lfig;Ljava/util/function/Function;)Lehi; buffer
	a (Lfig;Ljava/util/function/Function;Z)Lehi; buffer
	a (Ljava/util/function/Function;)Lfio; renderType
	b ()Lnet/minecraft/resources/MinecraftKey; texture
	c ()Lftc; sprite
fvc net/minecraft/client/resources/model/ModelBaker
	a (Lnet/minecraft/resources/MinecraftKey;)Lfvj; getModel
	a (Lnet/minecraft/resources/MinecraftKey;Lfvg;)Lfuy; bake
fvd net/minecraft/client/resources/model/ModelBakery
	A COMMA_SPLITTER
	B EQUAL_SPLITTER
	C ITEM_FRAME_FAKE_DEFINITION
	D ITEM_MODEL_GENERATOR
	E STATIC_DEFINITIONS
	F blockColors
	G modelResources
	H blockStateResources
	I loadingStack
	J context
	K unbakedCache
	L bakedCache
	M topLevelModels
	N bakedTopLevelModels
	O nextModelGroup
	P modelGroups
	a FIRE_0
	b FIRE_1
	c LAVA_FLOW
	d WATER_FLOW
	e WATER_OVERLAY
	f BANNER_BASE
	g SHIELD_BASE
	h NO_PATTERN_SHIELD
	i DESTROY_STAGE_COUNT
	j DESTROY_STAGES
	k BREAKING_LOCATIONS
	l DESTROY_TYPES
	m SINGLETON_MODEL_GROUP
	n MISSING_MODEL_LOCATION
	o BLOCKSTATE_LISTER
	p MODEL_LISTER
	q MISSING_MODEL_MESH
	r GENERATION_MARKER
	s BLOCK_ENTITY_MARKER
	t INVISIBLE_MODEL_GROUP
	u LOGGER
	v BUILTIN_SLASH
	w BUILTIN_SLASH_GENERATED
	x BUILTIN_BLOCK_ENTITY
	y MISSING_MODEL_NAME
	z BUILTIN_MODELS
	a ()Ljava/util/Map; getBakedTopLevelModels
	a (Lfvf;)V loadTopLevel
	a (Ljava/lang/Iterable;)V registerModelGroup
	a (Ljava/util/function/BiFunction;)V bakeModels
	a (Lnet/minecraft/resources/MinecraftKey;)Lfvj; getModel
	a (Lnet/minecraft/resources/MinecraftKey;Lfvj;)V cacheAndQueueDependencies
	a (Lnet/minecraft/world/level/block/state/BlockStateList;Ljava/lang/String;)Ljava/util/function/Predicate; predicate
	a (Lnet/minecraft/world/level/block/state/properties/IBlockState;Ljava/lang/String;)Ljava/lang/Comparable; getValueHelper
	b ()Lit/unimi/dsi/fastutil/objects/Object2IntMap; getModelGroups
	b (Lnet/minecraft/resources/MinecraftKey;)V loadModel
	c (Lnet/minecraft/resources/MinecraftKey;)Lfjf; loadBlockModel
fvd$a net/minecraft/client/resources/model/ModelBakery$BakedCacheKey
	a id
	b transformation
	c isUvLocked
	a ()Lnet/minecraft/resources/MinecraftKey; id
	b ()Lcom/mojang/math/Transformation; transformation
	c ()Z isUvLocked
fvd$b net/minecraft/client/resources/model/ModelBakery$BlockStateDefinitionException
fvd$c net/minecraft/client/resources/model/ModelBakery$LoadedJson
	a source
	b data
	a ()Ljava/lang/String; source
	b ()Lcom/google/gson/JsonElement; data
fvd$d net/minecraft/client/resources/model/ModelBakery$ModelBakerImpl
	b modelTextureGetter
	a (Lnet/minecraft/resources/MinecraftKey;)Lfvj; getModel
	a (Lnet/minecraft/resources/MinecraftKey;Lfvg;)Lfuy; bake
fvd$e net/minecraft/client/resources/model/ModelBakery$ModelGroupKey
	a models
	b coloringValues
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lfjs;Ljava/util/Collection;)Lfvd$e; create
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lfvj;Ljava/util/Collection;)Lfvd$e; create
	a (Lnet/minecraft/world/level/block/state/IBlockData;Ljava/util/Collection;)Ljava/util/List; getColoringValues
fve net/minecraft/client/resources/model/ModelManager
	a LOGGER
	b VANILLA_ATLASES
	c bakedRegistry
	d atlases
	e blockModelShaper
	f blockColors
	g maxMipmapLevels
	h missingModel
	i modelGroups
	a ()Lfuy; getMissingModel
	a (I)V updateMaxMipLevel
	a (Lalb$a;Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;Lnet/minecraft/util/profiling/GameProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; reload
	a (Lfve$a;Lnet/minecraft/util/profiling/GameProfilerFiller;)V apply
	a (Lfvf;)Lfuy; getModel
	a (Lnet/minecraft/resources/MinecraftKey;)Lftb; getAtlas
	a (Lnet/minecraft/server/packs/resources/IResourceManager;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; loadBlockModels
	a (Lnet/minecraft/util/profiling/GameProfilerFiller;Ljava/util/Map;Lfvd;)Lfve$a; loadModels
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;)Z requiresRender
	b ()Lfiw; getBlockModelShaper
	b (Lnet/minecraft/server/packs/resources/IResourceManager;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; loadBlockStates
fve$a net/minecraft/client/resources/model/ModelManager$ReloadState
	a modelBakery
	b missingModel
	c modelCache
	d atlasPreparations
	e readyForUpload
	a ()Lfvd; modelBakery
	b ()Lfuy; missingModel
	c ()Ljava/util/Map; modelCache
	d ()Ljava/util/Map; atlasPreparations
	e ()Ljava/util/concurrent/CompletableFuture; readyForUpload
fvf net/minecraft/client/resources/model/ModelResourceLocation
	e VARIANT_SEPARATOR
	f variant
	c (Ljava/lang/String;Ljava/lang/String;)Lfvf; vanilla
	f ()Ljava/lang/String; getVariant
	h (Ljava/lang/String;)Ljava/lang/String; lowercaseVariant
fvg net/minecraft/client/resources/model/ModelState
	b ()Lcom/mojang/math/Transformation; getRotation
	c ()Z isUvLocked
fvh net/minecraft/client/resources/model/MultiPartBakedModel
	a hasAmbientOcclusion
	b isGui3d
	c usesBlockLight
	d particleIcon
	e transforms
	f overrides
	g selectors
	h selectorCache
	a ()Z useAmbientOcclusion
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/util/RandomSource;)Ljava/util/List; getQuads
	b ()Z isGui3d
	c ()Z usesBlockLight
	d ()Z isCustomRenderer
	e ()Lftc; getParticleIcon
	f ()Lfjm; getTransforms
	g ()Lfjk; getOverrides
fvh$a net/minecraft/client/resources/model/MultiPartBakedModel$Builder
	a selectors
	a ()Lfuy; build
	a (Ljava/util/function/Predicate;Lfuy;)V add
fvi net/minecraft/client/resources/model/SimpleBakedModel
	a unculledFaces
	b culledFaces
	c hasAmbientOcclusion
	d isGui3d
	e usesBlockLight
	f particleIcon
	g transforms
	h overrides
	a ()Z useAmbientOcclusion
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/util/RandomSource;)Ljava/util/List; getQuads
	b ()Z isGui3d
	c ()Z usesBlockLight
	d ()Z isCustomRenderer
	e ()Lftc; getParticleIcon
	f ()Lfjm; getTransforms
	g ()Lfjk; getOverrides
fvi$a net/minecraft/client/resources/model/SimpleBakedModel$Builder
	a unculledFaces
	b culledFaces
	c overrides
	d hasAmbientOcclusion
	e particleIcon
	f usesBlockLight
	g isGui3d
	h transforms
	a ()Lfvi$a; item
	a (Lfja;)Lfvi$a; addUnculledFace
	a (Lftc;)Lfvi$a; particle
	a (Lnet/minecraft/core/EnumDirection;Lfja;)Lfvi$a; addCulledFace
	b ()Lfuy; build
fvj net/minecraft/client/resources/model/UnbakedModel
	a (Lfvc;Ljava/util/function/Function;Lfvg;Lnet/minecraft/resources/MinecraftKey;)Lfuy; bake
	a (Ljava/util/function/Function;)V resolveParents
	f ()Ljava/util/Collection; getDependencies
fvk net/minecraft/client/resources/model/WeightedBakedModel
	a totalWeight
	b list
	c wrapped
	a ()Z useAmbientOcclusion
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/util/RandomSource;)Ljava/util/List; getQuads
	b ()Z isGui3d
	c ()Z usesBlockLight
	d ()Z isCustomRenderer
	e ()Lftc; getParticleIcon
	f ()Lfjm; getTransforms
	g ()Lfjk; getOverrides
fvk$a net/minecraft/client/resources/model/WeightedBakedModel$Builder
	a list
	a ()Lfuy; build
	a (Lfuy;I)Lfvk$a; add
fvn net/minecraft/client/resources/sounds/AbstractSoundInstance
	a sound
	b source
	c location
	d volume
	e pitch
	f x
	g y
	h z
	i looping
	j delay
	k attenuation
	l relative
	m random
	a ()Lnet/minecraft/resources/MinecraftKey; getLocation
	a (Lfxj;)Lfxk; resolve
	b ()Lfwc; getSound
	c ()Lnet/minecraft/sounds/SoundCategory; getSource
	d ()Z isLooping
	e ()I getDelay
	f ()F getVolume
	g ()F getPitch
	h ()D getX
	i ()D getY
	j ()D getZ
	k ()Lfwf$a; getAttenuation
	l ()Z isRelative
fvo net/minecraft/client/resources/sounds/AbstractTickableSoundInstance
	n stopped
	m ()Z isStopped
	n ()V stop
fvp net/minecraft/client/resources/sounds/AmbientSoundHandler
	a ()V tick
fvq net/minecraft/client/resources/sounds/BeeAggressiveSoundInstance
	o ()Lfvo; getAlternativeSoundInstance
	p ()Z shouldSwitchSounds
fvr net/minecraft/client/resources/sounds/BeeFlyingSoundInstance
	o ()Lfvo; getAlternativeSoundInstance
	p ()Z shouldSwitchSounds
fvs net/minecraft/client/resources/sounds/BeeSoundInstance
	n bee
	o VOLUME_MIN
	p VOLUME_MAX
	q PITCH_MIN
	r hasSwitched
	o ()Lfvo; getAlternativeSoundInstance
	p ()Z shouldSwitchSounds
	q ()V tick
	r ()Z canStartSilent
	s ()Z canPlaySound
	u ()F getMinPitch
	v ()F getMaxPitch
fvt net/minecraft/client/resources/sounds/BiomeAmbientSoundsHandler
	a LOOP_SOUND_CROSS_FADE_TIME
	b SKY_MOOD_RECOVERY_RATE
	c player
	d soundManager
	e biomeManager
	f random
	g loopSounds
	h moodSettings
	i additionsSettings
	j moodiness
	k previousBiome
	a ()V tick
	b ()F getMoodiness
fvt$a net/minecraft/client/resources/sounds/BiomeAmbientSoundsHandler$LoopSoundInstance
	n fadeDirection
	o fade
	o ()V fadeOut
	p ()V fadeIn
	q ()V tick
fvu net/minecraft/client/resources/sounds/BubbleColumnAmbientSoundHandler
	a player
	b wasInBubbleColumn
	c firstTick
	a ()V tick
fvv net/minecraft/client/resources/sounds/ElytraOnPlayerSoundInstance
	n DELAY
	o player
	p time
	q ()V tick
fvw net/minecraft/client/resources/sounds/EntityBoundSoundInstance
	n entity
	q ()V tick
	s ()Z canPlaySound
fvx net/minecraft/client/resources/sounds/GuardianAttackSoundInstance
	n VOLUME_MIN
	o VOLUME_SCALE
	p PITCH_MIN
	q PITCH_SCALE
	r guardian
	q ()V tick
	s ()Z canPlaySound
fvy net/minecraft/client/resources/sounds/MinecartSoundInstance
	n VOLUME_MIN
	o VOLUME_MAX
	p PITCH_MIN
	q PITCH_MAX
	r PITCH_DELTA
	s minecart
	t pitch
	q ()V tick
	r ()Z canStartSilent
	s ()Z canPlaySound
fvz net/minecraft/client/resources/sounds/RidingMinecartSoundInstance
	n VOLUME_MIN
	o VOLUME_MAX
	p player
	q minecart
	r underwaterSound
	q ()V tick
	r ()Z canStartSilent
	s ()Z canPlaySound
fw$a net/minecraft/commands/arguments/item/ItemPredicateArgument$Result
fwa net/minecraft/client/resources/sounds/SimpleSoundInstance
	a (Lnet/minecraft/core/Holder;F)Lfwa; forUI
	a (Lnet/minecraft/sounds/SoundEffect;)Lfwa; forMusic
	a (Lnet/minecraft/sounds/SoundEffect;F)Lfwa; forUI
	a (Lnet/minecraft/sounds/SoundEffect;FF)Lfwa; forUI
	a (Lnet/minecraft/sounds/SoundEffect;Lnet/minecraft/util/RandomSource;DDD)Lfwa; forAmbientMood
	a (Lnet/minecraft/sounds/SoundEffect;Lnet/minecraft/world/phys/Vec3D;)Lfwa; forRecord
	b (Lnet/minecraft/sounds/SoundEffect;)Lfwa; forAmbientAddition
	b (Lnet/minecraft/sounds/SoundEffect;FF)Lfwa; forLocalAmbience
fwb net/minecraft/client/resources/sounds/SnifferSoundInstance
	n VOLUME
	o PITCH
	p sniffer
	q ()V tick
	s ()Z canPlaySound
fwc net/minecraft/client/resources/sounds/Sound
	a SOUND_LISTER
	b location
	c volume
	d pitch
	e weight
	f type
	g stream
	h preload
	i attenuationDistance
	a ()Lnet/minecraft/resources/MinecraftKey; getLocation
	a (Lfxg;)V preloadIfRequired
	a (Lnet/minecraft/util/RandomSource;)Lfwc; getSound
	b ()Lnet/minecraft/resources/MinecraftKey; getPath
	b (Lnet/minecraft/util/RandomSource;)Ljava/lang/Object; getSound
	c ()Lnet/minecraft/util/valueproviders/SampledFloat; getVolume
	d ()Lnet/minecraft/util/valueproviders/SampledFloat; getPitch
	e ()I getWeight
	f ()Lfwc$a; getType
	g ()Z shouldStream
	h ()Z shouldPreload
	i ()I getAttenuationDistance
fwc$a net/minecraft/client/resources/sounds/Sound$Type
	a FILE
	b SOUND_EVENT
	c name
	d $VALUES
	a ()[Lfwc$a; $values
	a (Ljava/lang/String;)Lfwc$a; getByName
fwd net/minecraft/client/resources/sounds/SoundEventRegistration
	a sounds
	b replace
	c subtitle
	a ()Ljava/util/List; getSounds
	b ()Z isReplace
	c ()Ljava/lang/String; getSubtitle
fwe net/minecraft/client/resources/sounds/SoundEventRegistrationSerializer
	a DEFAULT_FLOAT
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lfwd; deserialize
	a (Lcom/google/gson/JsonObject;)Ljava/util/List; getSounds
	a (Lcom/google/gson/JsonObject;Lfwc$a;)Lfwc$a; getType
	b (Lcom/google/gson/JsonObject;)Lfwc; getSound
fwf net/minecraft/client/resources/sounds/SoundInstance
	a ()Lnet/minecraft/resources/MinecraftKey; getLocation
	a (Lfxj;)Lfxk; resolve
	b ()Lfwc; getSound
	c ()Lnet/minecraft/sounds/SoundCategory; getSource
	d ()Z isLooping
	e ()I getDelay
	f ()F getVolume
	g ()F getPitch
	h ()D getX
	i ()D getY
	j ()D getZ
	k ()Lfwf$a; getAttenuation
	l ()Z isRelative
	r ()Z canStartSilent
	s ()Z canPlaySound
	t ()Lnet/minecraft/util/RandomSource; createUnseededRandom
fwf$a net/minecraft/client/resources/sounds/SoundInstance$Attenuation
	a NONE
	b LINEAR
	c $VALUES
	a ()[Lfwf$a; $values
fwg net/minecraft/client/resources/sounds/TickableSoundInstance
	m ()Z isStopped
	q ()V tick
fwh net/minecraft/client/resources/sounds/UnderwaterAmbientSoundHandler
	a CHANCE_PER_TICK
	b RARE_CHANCE_PER_TICK
	c ULTRA_RARE_CHANCE_PER_TICK
	d MINIMUM_TICK_DELAY
	e player
	f soundManager
	g tickDelay
	a ()V tick
fwi net/minecraft/client/resources/sounds/UnderwaterAmbientSoundInstances
fwi$a net/minecraft/client/resources/sounds/UnderwaterAmbientSoundInstances$SubSound
	n player
	q ()V tick
fwi$b net/minecraft/client/resources/sounds/UnderwaterAmbientSoundInstances$UnderwaterAmbientSoundInstance
	n FADE_DURATION
	o player
	p fade
	q ()V tick
fwk net/minecraft/client/searchtree/FullTextSearchTree
	c contents
	d filler
	e plainTextSearchTree
	a ()V refresh
	a (Ljava/lang/String;)Ljava/util/List; searchPlainText
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/util/List; searchResourceLocation
fwl net/minecraft/client/searchtree/IdSearchTree
	a additionOrder
	b resourceLocationSearchTree
	a (Ljava/lang/String;)Ljava/util/List; searchPlainText
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/util/List; searchResourceLocation
fwm net/minecraft/client/searchtree/IntersectionIterator
	a firstIterator
	b secondIterator
	c comparator
fwn net/minecraft/client/searchtree/MergingUniqueIterator
	a firstIterator
	b secondIterator
	c comparator
fwo net/minecraft/client/searchtree/PlainTextSearchTree
	a ()Lfwo; empty
	a (Ljava/util/List;Ljava/util/function/Function;)Lfwo; create
fwp net/minecraft/client/searchtree/RefreshableSearchTree
	a ()V refresh
	b ()Lfwp; empty
fwq net/minecraft/client/searchtree/ResourceLocationSearchTree
	a ()Lfwq; empty
	a (Ljava/lang/String;)Ljava/util/List; searchNamespace
	a (Ljava/util/List;Ljava/util/function/Function;)Lfwq; create
	b (Ljava/lang/String;)Ljava/util/List; searchPath
fwr net/minecraft/client/searchtree/SearchRegistry
	a CREATIVE_NAMES
	b CREATIVE_TAGS
	c RECIPE_COLLECTIONS
	d searchTrees
	a (Lfwr$a;)Lfws; getTree
	a (Lfwr$a;Lfwr$b;)V register
	a (Lfwr$a;Ljava/util/List;)V populate
	a (Lnet/minecraft/server/packs/resources/IResourceManager;)V onResourceManagerReload
	b (Lfwr$a;)Lfwr$c; getSupplier
fwr$a net/minecraft/client/searchtree/SearchRegistry$Key
fwr$b net/minecraft/client/searchtree/SearchRegistry$TreeBuilderSupplier
fwr$c net/minecraft/client/searchtree/SearchRegistry$TreeEntry
	a factory
	b tree
	a ()V refresh
	a (Ljava/util/List;)V populate
fws net/minecraft/client/searchtree/SearchTree
fwt net/minecraft/client/searchtree/SuffixArray
	a list
	b DEBUG_COMPARISONS
	c DEBUG_ARRAY
	d LOGGER
	e END_OF_TEXT_MARKER
	f END_OF_DATA
	g chars
	h wordStarts
	i suffixToT
	j offsets
	k maxStringLength
	a ()V generate
	a (I)Ljava/lang/String; getString
	a (Ljava/lang/Object;Ljava/lang/String;)V add
	a (Ljava/lang/String;)Ljava/util/List; search
	a (Ljava/lang/String;I)I compare
	b ()V print
fwv net/minecraft/client/server/IntegratedPlayerList
	a playerData
	a (Ljava/net/SocketAddress;Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/network/chat/IChatBaseComponent; canPlayerLogin
	b ()Lfww; getServer
	b (Lnet/minecraft/server/level/EntityPlayer;)V save
	c ()Lnet/minecraft/server/MinecraftServer; getServer
	r ()Lnet/minecraft/nbt/NBTTagCompound; getSingleplayerData
fww net/minecraft/client/server/IntegratedServer
	n LOGGER
	o MIN_SIM_DISTANCE
	p minecraft
	q paused
	r publishedPort
	s publishedGameType
	t lanPinger
	u uuid
	v previousSimulationDistance
	K ()Lnet/minecraft/util/ModCheck; getModdedStatus
	M ()I getPort
	M_ ()Z shouldInformAdmins
	a ()V tickPaused
	a (Lcom/mojang/authlib/GameProfile;)Z isSingleplayerOwner
	a (Ljava/util/UUID;)V setUUID
	a (Ljava/util/function/BooleanSupplier;)V tickServer
	a (Lnet/minecraft/CrashReport;)V onServerCrash
	a (Lnet/minecraft/SystemReport;)Lnet/minecraft/SystemReport; fillServerSystemReport
	a (Lnet/minecraft/world/level/EnumGamemode;)V setDefaultGameType
	a (Lnet/minecraft/world/level/EnumGamemode;ZI)Z publishServer
	a (Z)V halt
	aU ()Z forceSynchronousWrites
	aZ ()Lnet/minecraft/world/level/EnumGamemode; getForcedGameType
	b (I)I getScaledTrackingDistance
	e ()Z initServer
	i ()I getOperatorUserPermissionLevel
	j ()I getFunctionCompilationLevel
	k ()Z shouldRconBroadcast
	l ()Z isDedicatedServer
	m ()I getRateLimitPacketsPerSecond
	n ()Z isEpollEnabled
	o ()Z isCommandBlockEnabled
	p ()Z isPublished
	t ()V stopServer
	z ()Ljava/io/File; getServerDirectory
fwx net/minecraft/client/server/LanServer
	a motd
	b address
	c pingTime
	a ()Ljava/lang/String; getMotd
	b ()Ljava/lang/String; getAddress
	c ()V updatePingTime
fwy net/minecraft/client/server/LanServerDetection
	a UNIQUE_THREAD_ID
	b LOGGER
fwy$a net/minecraft/client/server/LanServerDetection$LanServerDetector
	a serverList
	b pingGroup
	c socket
fwy$b net/minecraft/client/server/LanServerDetection$LanServerList
	a servers
	b isDirty
	a ()Ljava/util/List; takeDirtyServers
	a (Ljava/lang/String;Ljava/net/InetAddress;)V addServer
fwz net/minecraft/client/server/LanServerPinger
	a MULTICAST_GROUP
	b PING_PORT
	c UNIQUE_THREAD_ID
	d LOGGER
	e PING_INTERVAL
	f motd
	g socket
	h isRunning
	i serverAddress
	a (Ljava/lang/String;)Ljava/lang/String; parseMotd
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; createPingString
	b (Ljava/lang/String;)Ljava/lang/String; parseAddress
fxb net/minecraft/client/sounds/AudioStream
	a ()Ljavax/sound/sampled/AudioFormat; getFormat
	a (I)Ljava/nio/ByteBuffer; read
fxc net/minecraft/client/sounds/ChannelAccess
	a channels
	b library
	c executor
	a ()V scheduleTick
	a (Lefb$c;)Ljava/util/concurrent/CompletableFuture; createHandle
	a (Ljava/util/function/Consumer;)V executeOnChannels
	b ()V clear
fxc$a net/minecraft/client/sounds/ChannelAccess$ChannelHandle
	b channel
	c stopped
	a ()Z isStopped
	a (Ljava/util/function/Consumer;)V execute
	b ()V release
fxd net/minecraft/client/sounds/LoopingAudioStream
	a provider
	b stream
	c bufferedInputStream
	a ()Ljavax/sound/sampled/AudioFormat; getFormat
	a (I)Ljava/nio/ByteBuffer; read
fxd$a net/minecraft/client/sounds/LoopingAudioStream$AudioStreamProvider
fxd$b net/minecraft/client/sounds/LoopingAudioStream$NoCloseBuffer
fxe net/minecraft/client/sounds/MusicManager
	a STARTING_DELAY
	b random
	c minecraft
	d currentMusic
	e nextSongDelay
	a ()V tick
	a (Lnet/minecraft/sounds/Music;)V startPlaying
	b ()V stopPlaying
	b (Lnet/minecraft/sounds/Music;)Z isPlayingMusic
fxf net/minecraft/client/sounds/SoundBufferLibrary
	a resourceManager
	b cache
	a ()V clear
	a (Ljava/util/Collection;)Ljava/util/concurrent/CompletableFuture; preload
	a (Lnet/minecraft/resources/MinecraftKey;)Ljava/util/concurrent/CompletableFuture; getCompleteBuffer
	a (Lnet/minecraft/resources/MinecraftKey;Z)Ljava/util/concurrent/CompletableFuture; getStream
fxg net/minecraft/client/sounds/SoundEngine
	A queuedSounds
	B soundDeleteTime
	C listeners
	D queuedTickableSounds
	E preloadQueue
	a MISSING_SOUND
	b OPEN_AL_SOFT_PREFIX
	c OPEN_AL_SOFT_PREFIX_LENGTH
	d MARKER
	e LOGGER
	f PITCH_MIN
	g PITCH_MAX
	h VOLUME_MIN
	i VOLUME_MAX
	j MIN_SOURCE_LIFETIME
	k ONLY_WARN_ONCE
	l DEFAULT_DEVICE_CHECK_INTERVAL_MS
	m soundManager
	n options
	o loaded
	p library
	q listener
	r soundBuffers
	s executor
	t channelAccess
	u tickCount
	v lastDeviceCheckTime
	w devicePoolState
	x instanceToChannel
	y instanceBySource
	z tickingSounds
	a ()V reload
	a (FLnet/minecraft/sounds/SoundCategory;)F calculateVolume
	a (Lelt;)V updateSource
	a (Lfwc;)V requestPreload
	a (Lfwf;)V stop
	a (Lfwf;I)V playDelayed
	a (Lfwg;)V queueTickingSound
	a (Lfxi;)V addEventListener
	a (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/sounds/SoundCategory;)V stop
	a (Lnet/minecraft/sounds/SoundCategory;)F getVolume
	a (Lnet/minecraft/sounds/SoundCategory;F)V updateCategoryVolume
	a (Z)V tick
	b ()V destroy
	b (Lfwf;)Z isActive
	b (Lfxi;)V removeEventListener
	c ()V stopAll
	c (Lfwf;)V play
	d ()V pause
	d (Lfwf;)Z requiresManualLooping
	e ()V resume
	e (Lfwf;)Z shouldLoopManually
	f ()Ljava/lang/String; getDebugString
	f (Lfwf;)Z shouldLoopAutomatically
	g ()Ljava/util/List; getAvailableSoundDevices
	g (Lfwf;)F calculatePitch
	h ()V loadLibrary
	h (Lfwf;)F calculateVolume
	i ()Z shouldChangeDevice
	j ()V tickNonPaused
fxg$a net/minecraft/client/sounds/SoundEngine$DeviceCheckState
	a ONGOING
	b CHANGE_DETECTED
	c NO_CHANGE
	d $VALUES
	a ()[Lfxg$a; $values
fxh net/minecraft/client/sounds/SoundEngineExecutor
	a thread
	b shutdown
	a ()V flush
	au ()Ljava/lang/Thread; getRunningThread
	b ()Ljava/lang/Thread; createThread
	bs ()V waitForTasks
	c ()V run
	e (Ljava/lang/Runnable;)Z shouldRun
	f (Ljava/lang/Runnable;)Ljava/lang/Runnable; wrapRunnable
fxi net/minecraft/client/sounds/SoundEventListener
	a (Lfwf;Lfxk;)V onPlaySound
fxj net/minecraft/client/sounds/SoundManager
	a EMPTY_SOUND
	b INTENTIONALLY_EMPTY_SOUND_LOCATION
	c INTENTIONALLY_EMPTY_SOUND_EVENT
	d INTENTIONALLY_EMPTY_SOUND
	e LOGGER
	f SOUNDS_PATH
	g GSON
	h SOUND_EVENT_REGISTRATION_TYPE
	i registry
	j soundEngine
	k soundCache
	a ()Ljava/util/List; getAvailableSoundDevices
	a (Lelt;)V updateSource
	a (Lfwc;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/server/packs/resources/ResourceProvider;)Z validateSoundResource
	a (Lfwf;)V play
	a (Lfwf;I)V playDelayed
	a (Lfwg;)V queueTickingSound
	a (Lfxi;)V addListener
	a (Lfxj$a;Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)V apply
	a (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)V apply
	a (Lnet/minecraft/resources/MinecraftKey;)Lfxk; getSoundEvent
	a (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/sounds/SoundCategory;)V stop
	a (Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)Lfxj$a; prepare
	a (Lnet/minecraft/sounds/SoundCategory;F)V updateSourceVolume
	a (Z)V tick
	b ()Ljava/util/Collection; getAvailableSounds
	b (Lfwf;)V stop
	b (Lfxi;)V removeListener
	b (Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)Ljava/lang/Object; prepare
	c (Lfwf;)Z isActive
	d ()V pause
	e ()V stop
	f ()V destroy
	g ()V resume
	h ()Ljava/lang/String; getDebugString
	i ()V reload
fxj$a net/minecraft/client/sounds/SoundManager$Preparations
	a registry
	b soundCache
	a (Ljava/util/Map;Ljava/util/Map;Lfxg;)V apply
	a (Lnet/minecraft/resources/MinecraftKey;Lfwd;)V handleRegistration
	a (Lnet/minecraft/server/packs/resources/IResourceManager;)V listResources
fxk net/minecraft/client/sounds/WeighedSoundEvents
	a list
	b subtitle
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getSubtitle
	a (Lfxg;)V preloadIfRequired
	a (Lfxl;)V addSound
	a (Lnet/minecraft/util/RandomSource;)Lfwc; getSound
	b (Lnet/minecraft/util/RandomSource;)Ljava/lang/Object; getSound
	e ()I getWeight
fxl net/minecraft/client/sounds/Weighted
	a (Lfxg;)V preloadIfRequired
	b (Lnet/minecraft/util/RandomSource;)Ljava/lang/Object; getSound
	e ()I getWeight
fxn net/minecraft/client/telemetry/ClientTelemetryManager
	a THREAD_COUNT
	b EXECUTOR
	c userApiService
	d deviceSessionProperties
	e logDirectory
	f logManager
	a ()Ljava/nio/file/Path; getLogDirectory
	a (ZLjava/time/Duration;)Lfxw; createWorldSessionManager
	b ()Lfxr; createWorldSessionEventSender
fxo net/minecraft/client/telemetry/TelemetryEventInstance
	a CODEC
	b type
	c properties
	a ()Lfxs; type
	a (Lcom/mojang/authlib/minecraft/TelemetrySession;)Lcom/mojang/authlib/minecraft/TelemetryEvent; export
	b ()Lfxv; properties
fxp net/minecraft/client/telemetry/TelemetryEventLog
	a LOGGER
	b log
	c mailbox
	a ()Lfxq; logger
fxq net/minecraft/client/telemetry/TelemetryEventLogger
fxr net/minecraft/client/telemetry/TelemetryEventSender
	a DISABLED
fxs net/minecraft/client/telemetry/TelemetryEventType
	a CODEC
	b WORLD_LOADED
	c PERFORMANCE_METRICS
	d WORLD_LOAD_TIMES
	e WORLD_UNLOADED
	f REGISTRY
	g GLOBAL_PROPERTIES
	h WORLD_SESSION_PROPERTIES
	i id
	j exportKey
	k properties
	l isOptIn
	m codec
	a ()Ljava/lang/String; id
	a (Lcom/mojang/authlib/minecraft/TelemetrySession;Lfxv;)Lcom/mojang/authlib/minecraft/TelemetryEvent; export
	a (Lfxu;)Z contains
	a (Ljava/lang/String;)Lnet/minecraft/network/chat/IChatMutableComponent; makeTranslation
	a (Ljava/lang/String;Ljava/lang/String;)Lfxs$a; builder
	b ()Ljava/util/List; properties
	c ()Lcom/mojang/serialization/Codec; codec
	d ()Z isOptIn
	e ()Lnet/minecraft/network/chat/IChatMutableComponent; title
	f ()Lnet/minecraft/network/chat/IChatMutableComponent; description
	g ()Ljava/util/List; values
fxs$a net/minecraft/client/telemetry/TelemetryEventType$Builder
	a id
	b exportKey
	c properties
	d isOptIn
	a ()Lfxs$a; optIn
	a (Lfxu;)Lfxs$a; define
	a (Ljava/util/List;)Lfxs$a; defineAll
	b ()Lfxs; register
fxt net/minecraft/client/telemetry/TelemetryLogManager
	a LOGGER
	b RAW_EXTENSION
	c EXPIRY_DAYS
	d directory
	e sessionLog
	a ()Ljava/util/concurrent/CompletableFuture; openLogger
	a (Ljava/nio/file/Path;)Ljava/util/concurrent/CompletableFuture; open
fxu net/minecraft/client/telemetry/TelemetryProperty
	A exporter
	B TIMESTAMP_FORMATTER
	a USER_ID
	b CLIENT_ID
	c MINECRAFT_SESSION_ID
	d GAME_VERSION
	e OPERATING_SYSTEM
	f PLATFORM
	g CLIENT_MODDED
	h WORLD_SESSION_ID
	i SERVER_MODDED
	j SERVER_TYPE
	k OPT_IN
	l EVENT_TIMESTAMP_UTC
	m GAME_MODE
	n SECONDS_SINCE_LOAD
	o TICKS_SINCE_LOAD
	p FRAME_RATE_SAMPLES
	q RENDER_TIME_SAMPLES
	r USED_MEMORY_SAMPLES
	s NUMBER_OF_SAMPLES
	t RENDER_DISTANCE
	u DEDICATED_MEMORY_KB
	v WORLD_LOAD_TIME_MS
	w NEW_WORLD
	x id
	y exportKey
	z codec
	a ()Lnet/minecraft/network/chat/IChatMutableComponent; title
	a (Lfxv;Lcom/mojang/authlib/minecraft/TelemetryPropertyContainer;)V export
	a (Ljava/lang/String;Ljava/lang/String;)Lfxu; bool
	a (Ljava/lang/String;Ljava/lang/String;Lcom/mojang/serialization/Codec;Lfxu$a;)Lfxu; create
	b ()Ljava/lang/String; id
	b (Ljava/lang/String;Ljava/lang/String;)Lfxu; string
	c ()Ljava/lang/String; exportKey
	c (Ljava/lang/String;Ljava/lang/String;)Lfxu; integer
	d ()Lcom/mojang/serialization/Codec; codec
	d (Ljava/lang/String;Ljava/lang/String;)Lfxu; uuid
	e ()Lfxu$a; exporter
	e (Ljava/lang/String;Ljava/lang/String;)Lfxu; longSamples
fxu$a net/minecraft/client/telemetry/TelemetryProperty$Exporter
fxu$b net/minecraft/client/telemetry/TelemetryProperty$GameMode
	a SURVIVAL
	b CREATIVE
	c ADVENTURE
	d SPECTATOR
	e HARDCORE
	f CODEC
	g key
	h id
	i $VALUES
	a ()I id
	b ()[Lfxu$b; $values
	c ()Ljava/lang/String; getSerializedName
fxu$c net/minecraft/client/telemetry/TelemetryProperty$ServerType
	a REALM
	b LOCAL
	c OTHER
	d CODEC
	e key
	f $VALUES
	a ()[Lfxu$c; $values
	c ()Ljava/lang/String; getSerializedName
fxv net/minecraft/client/telemetry/TelemetryPropertyMap
	a entries
	a ()Lfxv$a; builder
	a (Lfxu;)Ljava/lang/Object; get
	a (Ljava/util/List;)Lcom/mojang/serialization/Codec; createCodec
	b ()Ljava/util/Set; propertySet
fxv$a net/minecraft/client/telemetry/TelemetryPropertyMap$Builder
	a entries
	a ()Lfxv; build
	a (Lfxu;Ljava/lang/Object;)Lfxv$a; put
	a (Lfxv;)Lfxv$a; putAll
fxw net/minecraft/client/telemetry/WorldSessionTelemetryManager
	a worldSessionId
	b eventSender
	c worldLoadEvent
	d worldUnloadEvent
	e performanceMetricsEvent
	f worldLoadTimesEvent
	a ()V tick
	a (J)V setTime
	a (Ljava/lang/String;)V onServerBrandReceived
	a (Lnet/minecraft/world/level/EnumGamemode;Z)V onPlayerInfoReceived
	b ()V worldSessionStart
	c ()V onDisconnect
fxx net/minecraft/client/telemetry/events/AggregatedTelemetryEvent
	a SAMPLE_INTERVAL_MS
	b SAMPLES_PER_EVENT
	c sampleCount
	d ticking
	e lastSampleTime
	a ()V start
	a (Lfxr;)V tick
	b ()Z shouldTakeSample
	b (Lfxr;)V sendEvent
	c ()Z shouldSentEvent
	d ()V stop
	e ()I getSampleCount
	f ()V takeSample
fxy net/minecraft/client/telemetry/events/PerformanceMetricsEvent
	a DEDICATED_MEMORY_KB
	b fpsSamples
	c frameTimeSamples
	d usedMemorySamples
	a (J)J toKilobytes
	a (Lfxr;)V tick
	b (Lfxr;)V sendEvent
	f ()V takeSample
	g ()V resetValues
	h ()V takeUsedMemorySample
fxz net/minecraft/client/telemetry/events/WorldLoadEvent
	a eventSent
	b gameMode
	c serverBrand
	a ()Lfxu$c; getServerType
	a (Lfxr;)Z send
	a (Lfxv$a;)V addProperties
	a (Ljava/lang/String;)V setServerBrand
	a (Lnet/minecraft/world/level/EnumGamemode;Z)V setGameMode
fya net/minecraft/client/telemetry/events/WorldLoadTimesEvent
	a newWorld
	b worldLoadDuration
	a (Lfxr;)V send
fyb net/minecraft/client/telemetry/events/WorldUnloadEvent
	a NOT_TRACKING_TIME
	b worldLoadedTime
	c totalTicks
	d lastGameTime
	a ()V onPlayerInfoReceived
	a (J)V setTime
	a (Lfxr;)V send
	a (Ljava/time/Instant;)I getTimeInSecondsSinceLoad
fye net/minecraft/client/tutorial/BundleTutorial
	a tutorial
	b options
	c toast
	a ()V showToast
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/ClickAction;)V onInventoryAction
	b ()V clearToast
fyf net/minecraft/client/tutorial/CompletedTutorialStepInstance
fyg net/minecraft/client/tutorial/CraftPlanksTutorialStep
	a HINT_DELAY
	b CRAFT_TITLE
	c CRAFT_DESCRIPTION
	d tutorial
	e toast
	f timeWaiting
	a ()V tick
	a (Lfhk;Lnet/minecraft/tags/TagKey;)Z hasCraftedPlanksPreviously
	a (Lnet/minecraft/world/item/ItemStack;)V onGetItem
	b ()V clear
fyh net/minecraft/client/tutorial/FindTreeTutorialStepInstance
	a HINT_DELAY
	b TITLE
	c DESCRIPTION
	d tutorial
	e toast
	f timeWaiting
	a ()V tick
	a (Lfdj;Lnet/minecraft/world/phys/MovingObjectPosition;)V onLookAt
	a (Lfhk;)Z hasPunchedTreesPreviously
	a (Lnet/minecraft/world/item/ItemStack;)V onGetItem
	b ()V clear
	b (Lfhk;)Z hasCollectedTreeItems
fyi net/minecraft/client/tutorial/MovementTutorialStepInstance
	a MINIMUM_TIME_MOVED
	b MINIMUM_TIME_LOOKED
	c MOVE_HINT_DELAY
	d LOOK_HINT_DELAY
	e INCOMPLETE
	f MOVE_TITLE
	g MOVE_DESCRIPTION
	h LOOK_TITLE
	i LOOK_DESCRIPTION
	j tutorial
	k moveToast
	l lookToast
	m timeWaiting
	n timeMoved
	o timeLooked
	p moved
	q turned
	r moveCompleted
	s lookCompleted
	a ()V tick
	a (DD)V onMouse
	a (Lfhi;)V onInput
	b ()V clear
fyj net/minecraft/client/tutorial/OpenInventoryTutorialStep
	a HINT_DELAY
	b TITLE
	c DESCRIPTION
	d tutorial
	e toast
	f timeWaiting
	a ()V tick
	b ()V clear
	c ()V onOpenInventory
fyk net/minecraft/client/tutorial/PunchTreeTutorialStepInstance
	a HINT_DELAY
	b TITLE
	c DESCRIPTION
	d tutorial
	e toast
	f timeWaiting
	g resetCount
	a ()V tick
	a (Lfdj;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;F)V onDestroyBlock
	a (Lnet/minecraft/world/item/ItemStack;)V onGetItem
	b ()V clear
fyl net/minecraft/client/tutorial/Tutorial
	a minecraft
	b instance
	c timedToasts
	d bundleTutorial
	a ()V onOpenInventory
	a (DD)V onMouse
	a (Leqa;)V removeTimedToast
	a (Leqa;I)V addTimedToast
	a (Lfdj;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;F)V onDestroyBlock
	a (Lfdj;Lnet/minecraft/world/phys/MovingObjectPosition;)V onLookAt
	a (Lfhi;)V onInput
	a (Lfyn;)V setStep
	a (Ljava/lang/String;)Lnet/minecraft/network/chat/IChatBaseComponent; key
	a (Lnet/minecraft/world/item/ItemStack;)V onGetItem
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/ClickAction;)V onInventoryAction
	b ()V stop
	c ()V start
	d ()V tick
	e ()Lemh; getMinecraft
	f ()Z isSurvival
fyl$a net/minecraft/client/tutorial/Tutorial$TimedToast
	a toast
	b durationTicks
	c progress
	a ()Z updateProgress
fym net/minecraft/client/tutorial/TutorialStepInstance
	a ()V tick
	a (DD)V onMouse
	a (Lfdj;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;F)V onDestroyBlock
	a (Lfdj;Lnet/minecraft/world/phys/MovingObjectPosition;)V onLookAt
	a (Lfhi;)V onInput
	a (Lnet/minecraft/world/item/ItemStack;)V onGetItem
	b ()V clear
	c ()V onOpenInventory
fyn net/minecraft/client/tutorial/TutorialSteps
	a MOVEMENT
	b FIND_TREE
	c PUNCH_TREE
	d OPEN_INVENTORY
	e CRAFT_PLANKS
	f NONE
	g name
	h constructor
	i $VALUES
	a ()Ljava/lang/String; getName
	a (Lfyl;)Lfym; create
	a (Ljava/lang/String;)Lfyn; getByName
	b ()[Lfyn; $values
fyp net/minecraft/realms/DisconnectedRealmsScreen
	J textHeight
	a reason
	b message
	c parent
	a (Lehe;IIF)V render
	aw_ ()Lnet/minecraft/network/chat/IChatBaseComponent; getNarrationMessage
	ay_ ()V onClose
	b ()V init
fyq net/minecraft/realms/RealmsConnect
	a LOGGER
	b onlineScreen
	c aborted
	d connection
	a ()V abort
	a (Leik;Lfen;)V connect
	b ()V tick
fyr net/minecraft/realms/RealmsLabel
	a text
	b x
	c y
	d color
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getText
	a (Lehe;IIF)V render
fys net/minecraft/realms/RealmsObjectSelectionList
	a ()I getMaxPosition
	a (I)V selectItem
	a (IIDDII)V itemClicked
	a (Leov$a;)I addEntry
	a (Ljava/util/Collection;)V replaceEntries
	b ()I getRowWidth
	b (Lenw$a;)I addEntry
	c ()I getScrollbarPosition
	g (I)I getRowTop
	j (I)V setSelectedItem
	k ()I getItemCount
	q ()I getRowLeft
	w ()V clear
fyt net/minecraft/realms/RealmsScreen
	A COLOR_BLACK
	B COLOR_YELLOW
	C COLOR_BRIGHT_YELLOW
	D COLOR_LINK
	E COLOR_LINK_HOVER
	F COLOR_INFO
	G COLOR_BUTTON_YELLOW
	H UPDATE_BREAKS_ADVENTURE_URL
	I SKIN_FACE_SIZE
	a labels
	o TITLE_HEIGHT
	p COMPONENT_HEIGHT
	q EXPIRATION_NOTIFICATION_DAYS
	r SIZE_LIMIT
	s COLOR_WHITE
	t COLOR_GRAY
	u COLOR_DARK_GRAY
	v COLOR_MEDIUM_GRAY
	w COLOR_GREEN
	x COLOR_DARK_GREEN
	y COLOR_RED
	z COLOR_RED_FADE
	a (Lfyr;)Lfyr; addLabel
	h (I)I row
	m ()Lnet/minecraft/network/chat/IChatBaseComponent; createLabelNarration
fyu net/minecraft/realms/RepeatedNarrator
	a permitsPerSecond
	b params
	a (Lelz;Lnet/minecraft/network/chat/IChatBaseComponent;)V narrate
fyu$a net/minecraft/realms/RepeatedNarrator$Params
	a narration
	b rateLimiter
g com/mojang/math/MethodsReturnNonnullByDefault
gb$a net/minecraft/commands/arguments/selector/options/EntitySelectorOptions$Modifier
gb$b net/minecraft/commands/arguments/selector/options/EntitySelectorOptions$Option
	a modifier
	b canUse
	c description
	a ()Lgb$a; modifier
	b ()Ljava/util/function/Predicate; canUse
	c ()Lnet/minecraft/network/chat/IChatBaseComponent; description
gf$a net/minecraft/commands/synchronization/ArgumentTypeInfo$Template
	a ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; type
	b (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; instantiate
gi$a net/minecraft/commands/synchronization/SingletonArgumentInfo$Template
	b constructor
	a ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; type
	b (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; instantiate
gj$a net/minecraft/commands/synchronization/SuggestionProviders$Wrapper
	a delegate
	b name
gk$a net/minecraft/commands/synchronization/brigadier/DoubleArgumentInfo$Template
	b min
	c max
	a ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; type
	a (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/DoubleArgumentType; instantiate
	b (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; instantiate
gl$a net/minecraft/commands/synchronization/brigadier/FloatArgumentInfo$Template
	b min
	c max
	a ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; type
	a (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/FloatArgumentType; instantiate
	b (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; instantiate
gm$a net/minecraft/commands/synchronization/brigadier/IntegerArgumentInfo$Template
	b min
	c max
	a ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; type
	a (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/IntegerArgumentType; instantiate
	b (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; instantiate
gn$a net/minecraft/commands/synchronization/brigadier/LongArgumentInfo$Template
	b min
	c max
	a ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; type
	a (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/LongArgumentType; instantiate
	b (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; instantiate
go$a net/minecraft/commands/synchronization/brigadier/StringArgumentSerializer$Template
	b type
	a ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; type
	a (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/StringArgumentType; instantiate
	b (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; instantiate
gs net/minecraft/core/BlockMath
	a VANILLA_UV_TRANSFORM_LOCAL_TO_GLOBAL
	b VANILLA_UV_TRANSFORM_GLOBAL_TO_LOCAL
	c LOGGER
	a (Lcom/mojang/math/Transformation;)Lcom/mojang/math/Transformation; blockCenterToCorner
	a (Lcom/mojang/math/Transformation;Lnet/minecraft/core/EnumDirection;Ljava/util/function/Supplier;)Lcom/mojang/math/Transformation; getUVLockTransform
	b (Lcom/mojang/math/Transformation;)Lcom/mojang/math/Transformation; blockCornerToCenter
hd$a net/minecraft/core/Holder$Direct
	a value
	a ()Ljava/lang/Object; value
	a (Ljava/util/function/Predicate;)Z is
	a (Lnet/minecraft/core/HolderOwner;)Z canSerializeIn
	a (Lnet/minecraft/resources/MinecraftKey;)Z is
	a (Lnet/minecraft/resources/ResourceKey;)Z is
	a (Lnet/minecraft/tags/TagKey;)Z is
	b ()Z isBound
	c ()Ljava/util/stream/Stream; tags
	d ()Lcom/mojang/datafixers/util/Either; unwrap
	e ()Ljava/util/Optional; unwrapKey
	f ()Lhd$b; kind
hd$b net/minecraft/core/Holder$Kind
	a REFERENCE
	b DIRECT
	c $VALUES
	a ()[Lhd$b; $values
hd$c net/minecraft/core/Holder$Reference
	a owner
	b tags
	c type
	d key
	e value
	a ()Ljava/lang/Object; value
	a (Ljava/util/Collection;)V bindTags
	a (Ljava/util/function/Predicate;)Z is
	a (Lnet/minecraft/core/HolderOwner;)Z canSerializeIn
	a (Lnet/minecraft/core/HolderOwner;Ljava/lang/Object;)Lhd$c; createIntrusive
	a (Lnet/minecraft/core/HolderOwner;Lnet/minecraft/resources/ResourceKey;)Lhd$c; createStandAlone
	a (Lnet/minecraft/resources/MinecraftKey;)Z is
	a (Lnet/minecraft/resources/ResourceKey;)Z is
	a (Lnet/minecraft/tags/TagKey;)Z is
	b ()Z isBound
	b (Ljava/lang/Object;)V bindValue
	b (Lnet/minecraft/resources/ResourceKey;)V bindKey
	c ()Ljava/util/stream/Stream; tags
	d ()Lcom/mojang/datafixers/util/Either; unwrap
	e ()Ljava/util/Optional; unwrapKey
	f ()Lhd$b; kind
	g ()Lnet/minecraft/resources/ResourceKey; key
hd$c$a net/minecraft/core/Holder$Reference$Type
	a STAND_ALONE
	b INTRUSIVE
	c $VALUES
	a ()[Lhd$c$a; $values
he$a net/minecraft/core/HolderGetter$Provider
	a (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; lookup
	b (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/core/HolderGetter; lookupOrThrow
hf$a net/minecraft/core/HolderLookup$Delegate
	c parent
	a (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; get
	a (Lnet/minecraft/tags/TagKey;)Ljava/util/Optional; get
	b ()Ljava/util/stream/Stream; listElements
	d ()Ljava/util/stream/Stream; listTags
hf$b net/minecraft/core/HolderLookup$Provider
	a ()Lhe$a; asGetterLookup
	a (Ljava/util/stream/Stream;)Lhf$b; create
	a (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; lookup
	b (Lnet/minecraft/resources/ResourceKey;)Lhf$c; lookupOrThrow
hf$c net/minecraft/core/HolderLookup$RegistryLookup
	a (Lnet/minecraft/world/flag/FeatureFlagSet;)Lnet/minecraft/core/HolderLookup; filterFeatures
	f ()Lnet/minecraft/resources/ResourceKey; key
	g ()Lcom/mojang/serialization/Lifecycle; registryLifecycle
hf$c$a net/minecraft/core/HolderLookup$RegistryLookup$Delegate
	a ()Lhf$c; parent
	a (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; get
	a (Lnet/minecraft/tags/TagKey;)Ljava/util/Optional; get
	b ()Ljava/util/stream/Stream; listElements
	d ()Ljava/util/stream/Stream; listTags
	f ()Lnet/minecraft/resources/ResourceKey; key
	g ()Lcom/mojang/serialization/Lifecycle; registryLifecycle
hh$a net/minecraft/core/HolderSet$Direct
	a contents
	b contentsSet
	a (Lnet/minecraft/core/Holder;)Z contains
	c ()Lcom/mojang/datafixers/util/Either; unwrap
	d ()Ljava/util/Optional; unwrapKey
	e ()Ljava/util/List; contents
hh$b net/minecraft/core/HolderSet$ListBacked
	a ()Ljava/util/stream/Stream; stream
	a (I)Lnet/minecraft/core/Holder; get
	a (Lnet/minecraft/core/HolderOwner;)Z canSerializeIn
	a (Lnet/minecraft/util/RandomSource;)Ljava/util/Optional; getRandomElement
	b ()I size
	e ()Ljava/util/List; contents
hr$c net/minecraft/core/RegistryAccess$ImmutableRegistryAccess
	c registries
	b ()Ljava/util/stream/Stream; registries
	c (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; registry
hr$d net/minecraft/core/RegistryAccess$RegistryEntry
	a key
	b value
	a ()Lnet/minecraft/resources/ResourceKey; key
	a (Ljava/util/Map$Entry;)Lhr$d; fromMapEntry
	a (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/IRegistry;)Lhr$d; fromUntyped
	b ()Lnet/minecraft/core/IRegistry; value
	c ()Lhr$d; freeze
hs$a net/minecraft/core/RegistryCodecs$RegistryEntry
	a key
	b id
	c value
	a ()Lnet/minecraft/resources/ResourceKey; key
	b ()I id
	c ()Ljava/lang/Object; value
ht$a net/minecraft/core/RegistrySetBuilder$BuildState
	a owner
	b lookup
	c registries
	d registeredValues
	e errors
	a ()Lnet/minecraft/data/worldgen/BootstapContext; bootstapContext
	a (Lhf$b;)V fillMissingHolders
	a (Lnet/minecraft/core/HolderOwner;)V addOwner
	a (Lnet/minecraft/core/IRegistryCustom;Ljava/util/stream/Stream;)Lht$a; create
	b ()V reportRemainingUnreferencedValues
	c ()V throwOnError
	d ()Ljava/util/stream/Stream; collectReferencedRegistries
	e ()Lht$b; owner
	f ()Lht$h; lookup
	g ()Ljava/util/Map; registries
	h ()Ljava/util/Map; registeredValues
	i ()Ljava/util/List; errors
ht$b net/minecraft/core/RegistrySetBuilder$CompositeOwner
	a owners
	a (Lnet/minecraft/core/HolderOwner;)Z canSerializeIn
	b (Lnet/minecraft/core/HolderOwner;)V add
ht$c net/minecraft/core/RegistrySetBuilder$EmptyTagLookup
	b owner
	a (Lnet/minecraft/tags/TagKey;)Ljava/util/Optional; get
ht$d net/minecraft/core/RegistrySetBuilder$RegisteredValue
	a value
	b lifecycle
	a ()Ljava/lang/Object; value
	b ()Lcom/mojang/serialization/Lifecycle; lifecycle
ht$e net/minecraft/core/RegistrySetBuilder$RegistryBootstrap
ht$f net/minecraft/core/RegistrySetBuilder$RegistryContents
	a key
	b lifecycle
	c values
	a ()Lhf$c; buildAsLookup
	b ()Lnet/minecraft/resources/ResourceKey; key
	c ()Lcom/mojang/serialization/Lifecycle; lifecycle
	d ()Ljava/util/Map; values
ht$g net/minecraft/core/RegistrySetBuilder$RegistryStub
	a key
	b lifecycle
	c bootstrap
	a ()Lnet/minecraft/resources/ResourceKey; key
	a (Lht$a;)Lht$f; collectChanges
	b ()Lcom/mojang/serialization/Lifecycle; lifecycle
	b (Lht$a;)V apply
	c ()Lht$e; bootstrap
ht$h net/minecraft/core/RegistrySetBuilder$UniversalLookup
	a holders
	a (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; get
	c (Lnet/minecraft/resources/ResourceKey;)Lhd$c; getOrCreate
ht$i net/minecraft/core/RegistrySetBuilder$ValueAndHolder
	a value
	b holder
	a ()Lht$d; value
	b ()Ljava/util/Optional; holder
hu$a net/minecraft/core/RegistrySynchronization$NetworkedRegistryData
	a key
	b networkCodec
	a ()Lnet/minecraft/resources/ResourceKey; key
	b ()Lcom/mojang/serialization/Codec; networkCodec
ir net/minecraft/core/particles/ParticleGroup
	a SPORE_BLOSSOM
	b limit
	a ()I getLimit
is$a net/minecraft/core/particles/ParticleOptions$Deserializer
	b (Lnet/minecraft/core/particles/Particle;Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/core/particles/ParticleParam; fromCommand
	b (Lnet/minecraft/core/particles/Particle;Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/core/particles/ParticleParam; fromNetwork
ja$a net/minecraft/core/registries/BuiltInRegistries$RegistryBootstrap
jd net/minecraft/data/BlockFamilies
	A EXPOSED_CUT_COPPER
	B WAXED_EXPOSED_COPPER
	C WAXED_EXPOSED_CUT_COPPER
	D WEATHERED_COPPER
	E WEATHERED_CUT_COPPER
	F WAXED_WEATHERED_COPPER
	G WAXED_WEATHERED_CUT_COPPER
	H OXIDIZED_COPPER
	I OXIDIZED_CUT_COPPER
	J WAXED_OXIDIZED_COPPER
	K WAXED_OXIDIZED_CUT_COPPER
	L COBBLESTONE
	M MOSSY_COBBLESTONE
	N DIORITE
	O POLISHED_DIORITE
	P GRANITE
	Q POLISHED_GRANITE
	R NETHER_BRICKS
	S RED_NETHER_BRICKS
	T PRISMARINE
	U PURPUR
	V PRISMARINE_BRICKS
	W DARK_PRISMARINE
	X QUARTZ
	Y SMOOTH_QUARTZ
	Z SANDSTONE
	a ACACIA_PLANKS
	aa CUT_SANDSTONE
	ab SMOOTH_SANDSTONE
	ac RED_SANDSTONE
	ad CUT_RED_SANDSTONE
	ae SMOOTH_RED_SANDSTONE
	af STONE
	ag STONE_BRICK
	ah DEEPSLATE
	ai COBBLED_DEEPSLATE
	aj POLISHED_DEEPSLATE
	ak DEEPSLATE_BRICKS
	al DEEPSLATE_TILES
	am MAP
	an RECIPE_GROUP_PREFIX_WOODEN
	ao RECIPE_UNLOCKED_BY_HAS_PLANKS
	b CHERRY_PLANKS
	c BIRCH_PLANKS
	d CRIMSON_PLANKS
	e JUNGLE_PLANKS
	f OAK_PLANKS
	g DARK_OAK_PLANKS
	h SPRUCE_PLANKS
	i WARPED_PLANKS
	j MANGROVE_PLANKS
	k BAMBOO_PLANKS
	l BAMBOO_MOSAIC
	m MUD_BRICKS
	n ANDESITE
	o POLISHED_ANDESITE
	p BLACKSTONE
	q POLISHED_BLACKSTONE
	r POLISHED_BLACKSTONE_BRICKS
	s BRICKS
	t END_STONE_BRICKS
	u MOSSY_STONE_BRICKS
	v COPPER_BLOCK
	w CUT_COPPER
	x WAXED_COPPER_BLOCK
	y WAXED_CUT_COPPER
	z EXPOSED_COPPER
	a ()Ljava/util/stream/Stream; getAllFamilies
	a (Lnet/minecraft/world/level/block/Block;)Lje$a; familyBuilder
je net/minecraft/data/BlockFamily
	a baseBlock
	b variants
	c requiredFeatures
	d generateModel
	e generateRecipe
	f recipeGroupPrefix
	g recipeUnlockedBy
	a ()Lnet/minecraft/world/level/block/Block; getBaseBlock
	a (Lje$b;)Lnet/minecraft/world/level/block/Block; get
	a (Lnet/minecraft/world/flag/FeatureFlagSet;)Z shouldGenerateRecipe
	b ()Ljava/util/Map; getVariants
	c ()Z shouldGenerateModel
	d ()Ljava/util/Optional; getRecipeGroupPrefix
	e ()Ljava/util/Optional; getRecipeUnlockedBy
je$a net/minecraft/data/BlockFamily$Builder
	a family
	a ()Lje; getFamily
	a (Ljava/lang/String;)Lje$a; recipeGroupPrefix
	a (Lnet/minecraft/world/level/block/Block;)Lje$a; button
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Lje$a; sign
	a ([Lnet/minecraft/world/flag/FeatureFlag;)Lje$a; featureLockedBehind
	b ()Lje$a; dontGenerateModel
	b (Ljava/lang/String;)Lje$a; recipeUnlockedBy
	b (Lnet/minecraft/world/level/block/Block;)Lje$a; chiseled
	c ()Lje$a; dontGenerateRecipe
	c (Lnet/minecraft/world/level/block/Block;)Lje$a; mosaic
	d (Lnet/minecraft/world/level/block/Block;)Lje$a; cracked
	e (Lnet/minecraft/world/level/block/Block;)Lje$a; cut
	f (Lnet/minecraft/world/level/block/Block;)Lje$a; door
	g (Lnet/minecraft/world/level/block/Block;)Lje$a; customFence
	h (Lnet/minecraft/world/level/block/Block;)Lje$a; fence
	i (Lnet/minecraft/world/level/block/Block;)Lje$a; customFenceGate
	j (Lnet/minecraft/world/level/block/Block;)Lje$a; fenceGate
	k (Lnet/minecraft/world/level/block/Block;)Lje$a; slab
	l (Lnet/minecraft/world/level/block/Block;)Lje$a; stairs
	m (Lnet/minecraft/world/level/block/Block;)Lje$a; pressurePlate
	n (Lnet/minecraft/world/level/block/Block;)Lje$a; polished
	o (Lnet/minecraft/world/level/block/Block;)Lje$a; trapdoor
	p (Lnet/minecraft/world/level/block/Block;)Lje$a; wall
je$b net/minecraft/data/BlockFamily$Variant
	a BUTTON
	b CHISELED
	c CRACKED
	d CUT
	e DOOR
	f CUSTOM_FENCE
	g FENCE
	h CUSTOM_FENCE_GATE
	i FENCE_GATE
	j MOSAIC
	k SIGN
	l SLAB
	m STAIRS
	n PRESSURE_PLATE
	o POLISHED
	p TRAPDOOR
	q WALL
	r WALL_SIGN
	s name
	t $VALUES
	a ()Ljava/lang/String; getName
	b ()[Lje$b; $values
jg net/minecraft/data/DataGenerator
	a LOGGER
	b rootOutputFolder
	c vanillaPackOutput
	d allProviderIds
	e providersToRun
	f version
	g alwaysGenerate
	a ()V run
	a (Z)Ljg$a; getVanillaPack
	a (ZLjava/lang/String;)Ljg$a; getBuiltinDatapack
jg$a net/minecraft/data/DataGenerator$PackGenerator
	b toRun
	c providerPrefix
	d output
	a (Ljh$a;)Lnet/minecraft/data/DebugReportProvider; addProvider
jh$a net/minecraft/data/DataProvider$Factory
ji net/minecraft/data/HashCache
	a LOGGER
	b HEADER_MARKER
	c rootDir
	d cacheDir
	e versionId
	f caches
	g cachesToWrite
	h cachePaths
	i initialCount
	j writes
	a ()V purgeStaleAndWrite
	a (Ljava/lang/String;)Z shouldRunInThisVersion
	a (Ljava/lang/String;Lji$d;)Ljava/util/concurrent/CompletableFuture; generateUpdate
	a (Ljava/nio/file/Path;Ljava/nio/file/Path;)Lji$b; readCache
	a (Lji$e;)V applyUpdate
	b (Ljava/lang/String;)Ljava/nio/file/Path; getProviderCachePath
ji$a net/minecraft/data/HashCache$CacheUpdater
	c provider
	d oldCache
	e newCache
	f writes
	g closed
	a ()Lji$e; close
	a (Ljava/nio/file/Path;Lcom/google/common/hash/HashCode;)Z shouldWrite
ji$b net/minecraft/data/HashCache$ProviderCache
	a version
	b data
	a ()I count
	a (Ljava/nio/file/Path;)Lcom/google/common/hash/HashCode; get
	a (Ljava/nio/file/Path;Ljava/nio/file/Path;)Lji$b; load
	a (Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/lang/String;)V save
	b ()Ljava/lang/String; version
	c ()Lcom/google/common/collect/ImmutableMap; data
ji$c net/minecraft/data/HashCache$ProviderCacheBuilder
	a version
	b data
	a ()Lji$b; build
	a (Ljava/nio/file/Path;Lcom/google/common/hash/HashCode;)V put
	b ()Ljava/lang/String; version
	c ()Ljava/util/concurrent/ConcurrentMap; data
ji$d net/minecraft/data/HashCache$UpdateFunction
ji$e net/minecraft/data/HashCache$UpdateResult
	a providerId
	b cache
	c writes
	a ()Ljava/lang/String; providerId
	b ()Lji$b; cache
	c ()I writes
jj$a net/minecraft/data/PackOutput$PathProvider
	a root
	b kind
	a (Lnet/minecraft/resources/MinecraftKey;)Ljava/nio/file/Path; json
	a (Lnet/minecraft/resources/MinecraftKey;Ljava/lang/String;)Ljava/nio/file/Path; file
jj$b net/minecraft/data/PackOutput$Target
	a DATA_PACK
	b RESOURCE_PACK
	c REPORTS
	d directory
	e $VALUES
	a ()[Ljj$b; $values
jk net/minecraft/data/advancements/AdvancementProvider
	d pathProvider
	e subProviders
	f registries
	a ()Ljava/lang/String; getName
	a (Lnet/minecraft/data/CachedOutput;)Ljava/util/concurrent/CompletableFuture; run
jl net/minecraft/data/advancements/AdvancementSubProvider
	a (Lhf$b;Ljava/util/function/Consumer;)V generate
	a (Ljava/lang/String;)Lnet/minecraft/advancements/Advancement; createPlaceholder
jn net/minecraft/data/advancements/packs/UpdateOneTwentyAdventureAdvancements
	a (Lhf$b;Ljava/util/function/Consumer;)V generate
jo net/minecraft/data/advancements/packs/UpdateOneTwentyHusbandryAdvancements
	a (Lhf$b;Ljava/util/function/Consumer;)V generate
jp net/minecraft/data/advancements/packs/UpdateOneTwentyVanillaAdvancementProvider
	a (Lnet/minecraft/data/PackOutput;Ljava/util/concurrent/CompletableFuture;)Ljk; create
jq net/minecraft/data/advancements/packs/VanillaAdvancementProvider
	a (Lnet/minecraft/data/PackOutput;Ljava/util/concurrent/CompletableFuture;)Ljk; create
jr net/minecraft/data/advancements/packs/VanillaAdventureAdvancements
	a DISTANCE_FROM_BOTTOM_TO_TOP
	b Y_COORDINATE_AT_TOP
	c Y_COORDINATE_AT_BOTTOM
	d BEDROCK_THICKNESS
	e MOBS_TO_KILL
	a (Lhf$b;Ljava/util/function/Consumer;)V generate
	a (Ljava/util/function/Consumer;Lnet/minecraft/advancements/Advancement;Lcnt$a;)V createAdventuringTime
	a (Lnet/minecraft/advancements/Advancement$SerializedAdvancement;)Lnet/minecraft/advancements/Advancement$SerializedAdvancement; addMobsToKill
	a (Lnet/minecraft/advancements/Advancement$SerializedAdvancement;Ljava/util/List;)Lnet/minecraft/advancements/Advancement$SerializedAdvancement; addBiomes
	a (Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange;Lnet/minecraft/advancements/critereon/CriterionConditionEntity;)Lcf$a; fireCountAndBystander
	a (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/item/Item;)Ldg$a; lookAtThroughItem
js net/minecraft/data/advancements/packs/VanillaHusbandryAdvancements
	a BREEDABLE_ANIMALS
	b INDIRECTLY_BREEDABLE_ANIMALS
	c FISH
	d FISH_BUCKETS
	e EDIBLE_ITEMS
	f WAX_SCRAPING_TOOLS
	a (Lhf$b;Ljava/util/function/Consumer;)V generate
	a (Lnet/minecraft/advancements/Advancement$SerializedAdvancement;)Lnet/minecraft/advancements/Advancement$SerializedAdvancement; addLeashedFrogVariants
	a (Lnet/minecraft/advancements/Advancement$SerializedAdvancement;Ljava/util/stream/Stream;Ljava/util/stream/Stream;)Lnet/minecraft/advancements/Advancement$SerializedAdvancement; addBreedable
	a (Lnet/minecraft/advancements/Advancement;Ljava/util/function/Consumer;Ljava/util/stream/Stream;Ljava/util/stream/Stream;)Lnet/minecraft/advancements/Advancement; createBreedAllAnimalsAdvancement
	b (Lnet/minecraft/advancements/Advancement$SerializedAdvancement;)Lnet/minecraft/advancements/Advancement$SerializedAdvancement; addFood
	c (Lnet/minecraft/advancements/Advancement$SerializedAdvancement;)Lnet/minecraft/advancements/Advancement$SerializedAdvancement; addFishBuckets
	d (Lnet/minecraft/advancements/Advancement$SerializedAdvancement;)Lnet/minecraft/advancements/Advancement$SerializedAdvancement; addFish
	e (Lnet/minecraft/advancements/Advancement$SerializedAdvancement;)Lnet/minecraft/advancements/Advancement$SerializedAdvancement; addCatVariants
jt net/minecraft/data/advancements/packs/VanillaNetherAdvancements
	a DISTRACT_PIGLIN_PLAYER_ARMOR_PREDICATE
	a (Lhf$b;Ljava/util/function/Consumer;)V generate
ju net/minecraft/data/advancements/packs/VanillaStoryAdvancements
	a (Lhf$b;Ljava/util/function/Consumer;)V generate
jv net/minecraft/data/advancements/packs/VanillaTheEndAdvancements
	a (Lhf$b;Ljava/util/function/Consumer;)V generate
jx net/minecraft/data/info/BiomeParametersDumpReport
	d LOGGER
	e topPath
	f registries
	g ENTRY_CODEC
	h CODEC
	a ()Ljava/lang/String; getName
	a (Ljava/nio/file/Path;Lnet/minecraft/data/CachedOutput;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Encoder;Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture; dumpValue
	a (Lnet/minecraft/data/CachedOutput;)Ljava/util/concurrent/CompletableFuture; run
	a (Lnet/minecraft/resources/MinecraftKey;)Ljava/nio/file/Path; createPath
jy net/minecraft/data/info/BlockListReport
	d output
	a ()Ljava/lang/String; getName
	a (Lnet/minecraft/data/CachedOutput;)Ljava/util/concurrent/CompletableFuture; run
jz net/minecraft/data/info/CommandsReport
	d output
	e registries
	a ()Ljava/lang/String; getName
	a (Lnet/minecraft/data/CachedOutput;)Ljava/util/concurrent/CompletableFuture; run
ka net/minecraft/data/info/RegistryDumpReport
	d output
	a ()Ljava/lang/String; getName
	a (Lnet/minecraft/core/IRegistry;)Lcom/google/gson/JsonElement; dumpRegistry
	a (Lnet/minecraft/data/CachedOutput;)Ljava/util/concurrent/CompletableFuture; run
kc net/minecraft/data/loot/BlockLootSubProvider
	a HAS_SILK_TOUCH
	b HAS_NO_SILK_TOUCH
	c HAS_SHEARS
	d NORMAL_LEAVES_SAPLING_CHANCES
	e HAS_SHEARS_OR_SILK_TOUCH
	f HAS_NO_SHEARS_OR_SILK_TOUCH
	g explosionResistant
	h enabledFeatures
	i map
	j NORMAL_LEAVES_STICK_CHANCES
	a ()Ldyu$a; noDrop
	a (Lnet/minecraft/world/level/IMaterial;)Ldyu$a; createSingleItemTable
	a (Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionUser;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionUser; applyExplosionDecay
	a (Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionUser;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionUser; applyExplosionCondition
	a (Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Ldyu$a; createSingleItemTable
	a (Lnet/minecraft/world/level/block/Block;)Ldyu$a; createSlabItemTable
	a (Lnet/minecraft/world/level/block/Block;Ldyu$a;)V add
	a (Lnet/minecraft/world/level/block/Block;Ldzj$a;)Ldyu$a; createSilkTouchDispatchTable
	a (Lnet/minecraft/world/level/block/Block;Lebl$a;)Ldyu$a; createMultifaceBlockDrops
	a (Lnet/minecraft/world/level/block/Block;Lebl$a;Ldzj$a;)Ldyu$a; createSelfDropDispatchTable
	a (Lnet/minecraft/world/level/block/Block;Ljava/util/function/Function;)V add
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/Item;)Ldyu$a; createOreDrop
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/Item;Lebl$a;)Ldyu$a; createCropDrops
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/IMaterial;)Ldyu$a; createSingleItemTableWithSilkTouch
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Ldyu$a; createSingleItemTableWithSilkTouch
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Ldyu$a; createDoublePlantWithSeedDrops
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;[F)Ldyu$a; createLeavesDrops
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/state/properties/IBlockState;Ljava/lang/Comparable;)Ldyu$a; createSinglePropConditionTable
	b ()V generate
	b (Lnet/minecraft/world/level/IMaterial;)Ldyu$a; createShearsOnlyDrop
	b (Lnet/minecraft/world/level/block/Block;)Ldyu$a; createNameableBlockEntityTable
	b (Lnet/minecraft/world/level/block/Block;Ldzj$a;)Ldyu$a; createShearsDispatchTable
	b (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/Item;)Ldyu$a; createStemDrops
	b (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/IMaterial;)Ldyu$a; createMushroomBlockDrop
	b (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V addNetherVinesDropTable
	b (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;[F)Ldyu$a; createOakLeavesDrops
	c (Lnet/minecraft/world/level/IMaterial;)Ldyu$a; createSilkTouchOnlyTable
	c (Lnet/minecraft/world/level/block/Block;)Ldyu$a; createShulkerBoxDrop
	c (Lnet/minecraft/world/level/block/Block;Ldzj$a;)Ldyu$a; createSilkTouchOrShearsDispatchTable
	c (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/Item;)Ldyu$a; createAttachedStemDrops
	c (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/IMaterial;)V dropOther
	c (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V otherWhenSilkTouch
	d (Lnet/minecraft/world/level/IMaterial;)Ldyu$a; createPotFlowerItemTable
	d (Lnet/minecraft/world/level/block/Block;)Ldyu$a; createCopperOreDrops
	e (Lnet/minecraft/world/level/block/Block;)Ldyu$a; createLapisOreDrops
	f (Lnet/minecraft/world/level/block/Block;)Ldyu$a; createRedstoneOreDrops
	g (Lnet/minecraft/world/level/block/Block;)Ldyu$a; createBannerDrop
	h (Lnet/minecraft/world/level/block/Block;)Ldyu$a; createBeeNestDrop
	i (Lnet/minecraft/world/level/block/Block;)Ldyu$a; createBeeHiveDrop
	j (Lnet/minecraft/world/level/block/Block;)Ldyu$a; createCaveVinesDrop
	k (Lnet/minecraft/world/level/block/Block;)Ldyu$a; createGrassDrops
	l (Lnet/minecraft/world/level/block/Block;)Ldyu$a; createMangroveLeavesDrops
	m (Lnet/minecraft/world/level/block/Block;)Ldyu$a; createDoublePlantShearsDrop
	n (Lnet/minecraft/world/level/block/Block;)Ldyu$a; createCandleDrops
	o (Lnet/minecraft/world/level/block/Block;)Ldyu$a; createPetalsDrops
	p (Lnet/minecraft/world/level/block/Block;)Ldyu$a; createCandleCakeDrops
	q (Lnet/minecraft/world/level/block/Block;)Ldyu$a; createDoorTable
	r (Lnet/minecraft/world/level/block/Block;)V dropPottedContents
	s (Lnet/minecraft/world/level/block/Block;)V dropWhenSilkTouch
	t (Lnet/minecraft/world/level/block/Block;)V dropSelf
kd net/minecraft/data/loot/EntityLootSubProvider
	a ENTITY_ON_FIRE
	b SPECIAL_LOOT_TABLE_TYPES
	c allowed
	d required
	e map
	a ()V generate
	a (Lnet/minecraft/world/entity/EntityTypes;)Z canHaveLootTable
	a (Lnet/minecraft/world/entity/EntityTypes;Ldyu$a;)V add
	a (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/resources/MinecraftKey;Ldyu$a;)V add
	a (Lnet/minecraft/world/entity/animal/FrogVariant;)Lebl$a; killedByFrogVariant
	a (Lnet/minecraft/world/level/IMaterial;)Ldyu$a; createSheepTable
	b ()Lebl$a; killedByFrog
ke net/minecraft/data/loot/LootTableProvider
	d LOGGER
	e pathProvider
	f requiredTables
	g subProviders
	a ()Ljava/lang/String; getName
	a (Lnet/minecraft/data/CachedOutput;)Ljava/util/concurrent/CompletableFuture; run
ke$a net/minecraft/data/loot/LootTableProvider$SubProviderEntry
	a provider
	b paramSet
	a ()Ljava/util/function/Supplier; provider
	b ()Lnet/minecraft/world/level/storage/loot/parameters/LootContextParameterSet; paramSet
kf net/minecraft/data/loot/LootTableSubProvider
kh net/minecraft/data/loot/packs/UpdateOneTwentyArchaeologyLoot
ki net/minecraft/data/loot/packs/UpdateOneTwentyBlockLoot
	b ()V generate
kk net/minecraft/data/loot/packs/UpdateOneTwentyChestLoot
kl net/minecraft/data/loot/packs/UpdateOneTwentyEntityLoot
	a ()V generate
km net/minecraft/data/loot/packs/UpdateOneTwentyFishingLoot
kn net/minecraft/data/loot/packs/UpdateOneTwentyLootTableProvider
	a (Lnet/minecraft/data/PackOutput;)Lke; create
ko net/minecraft/data/loot/packs/VanillaBlockLoot
	e JUNGLE_LEAVES_SAPLING_CHANGES
	f EXPLOSION_RESISTANT
	b ()V generate
kp net/minecraft/data/loot/packs/VanillaChestLoot
	a ()Ldyu$a; shipwreckSupplyLootTable
	b ()Ldyu$a; shipwreckMapLootTable
	c ()Ldyu$a; bastionHoglinStableLootTable
	d ()Ldyu$a; bastionBridgeLootTable
	e ()Ldyu$a; endCityTreasureLootTable
	f ()Ldyu$a; netherBridgeLootTable
	g ()Ldyu$a; bastionTreasureLootTable
	h ()Ldyu$a; bastionOtherLootTable
	i ()Ldyu$a; woodlandMansionLootTable
	j ()Ldyu$a; strongholdLibraryLootTable
	k ()Ldyu$a; strongholdCorridorLootTable
	l ()Ldyu$a; ancientCityLootTable
	m ()Ldyu$a; jungleTempleLootTable
	n ()Ldyu$a; shipwreckTreasureLootTable
	o ()Ldyu$a; pillagerOutpostLootTable
	p ()Ldyu$a; desertPyramidLootTable
kq net/minecraft/data/loot/packs/VanillaEntityLoot
	a ()V generate
	c ()Ldyu$a; elderGuardianLootTable
kr net/minecraft/data/loot/packs/VanillaFishingLoot
	a IN_JUNGLE
	b IN_SPARSE_JUNGLE
	c IN_BAMBOO_JUNGLE
	a ()Ldyu$a; fishingFishLootTable
ks net/minecraft/data/loot/packs/VanillaGiftLoot
kt net/minecraft/data/loot/packs/VanillaLootTableProvider
	a (Lnet/minecraft/data/PackOutput;)Lke; create
ku net/minecraft/data/loot/packs/VanillaPiglinBarterLoot
kw net/minecraft/data/metadata/PackMetadataGenerator
	d output
	e elements
	a ()Ljava/lang/String; getName
	a (Lnet/minecraft/data/CachedOutput;)Ljava/util/concurrent/CompletableFuture; run
	a (Lnet/minecraft/data/PackOutput;Lnet/minecraft/network/chat/IChatBaseComponent;)Lkw; forFeaturePack
	a (Lnet/minecraft/data/PackOutput;Lnet/minecraft/network/chat/IChatBaseComponent;Lnet/minecraft/world/flag/FeatureFlagSet;)Lkw; forFeaturePack
	a (Lnet/minecraft/server/packs/metadata/MetadataSectionType;Ljava/lang/Object;)Lkw; add
ky net/minecraft/data/models/BlockModelGenerators
	a MULTIFACE_GENERATOR
	b blockStateOutput
	c modelOutput
	d skippedAutoModelsOutput
	e nonOrientableTrapdoor
	f fullBlockModelCustomGenerators
	g texturedModels
	h SHAPE_CONSUMERS
	i CHISELED_BOOKSHELF_SLOT_MODEL_CACHE
	A ()V createChorusFlower
	A (Lnet/minecraft/world/level/block/Block;)V createLantern
	B ()V createEndPortalFrame
	B (Lnet/minecraft/world/level/block/Block;)V createNonTemplateHorizontalBlock
	C ()V createChorusPlant
	C (Lnet/minecraft/world/level/block/Block;)V createMultiface
	D ()V createComposter
	D (Lnet/minecraft/world/level/block/Block;)V createShulkerBox
	E ()V createAmethystClusters
	F ()V createPointedDripstone
	G ()V createDaylightDetector
	H ()V createLightningRod
	I ()V createFarmland
	J ()V createFire
	K ()V createSoulFire
	L ()V createMuddyMangroveRoots
	M ()V createMangrovePropagule
	N ()V createFrostedIce
	O ()V createGrassBlocks
	P ()V createCocoa
	Q ()V createDirtPath
	R ()V createHopper
	S ()V createIronBars
	T ()V createLever
	U ()V createLilyPad
	V ()V createFrogspawnBlock
	W ()V createNetherPortalBlock
	X ()V createNetherrack
	Y ()V createObserver
	Z ()V createPistons
	a ()V run
	a (I)Ljava/util/List; createBambooModels
	a (ILjava/lang/String;Llp;)Lnet/minecraft/resources/MinecraftKey; createTurtleEggModel
	a (Ljava/lang/Integer;Ljava/lang/Integer;)Lnet/minecraft/resources/MinecraftKey; createTurtleEggModel
	a (Ljava/util/List;Ljava/util/function/UnaryOperator;)Ljava/util/List; wrapModels
	a (Lld;Llc$c;Lli$a;)V addSlotStateAndRotationVariants
	a (Lld;Llc$c;Lli$a;Lnet/minecraft/world/level/block/state/properties/BlockStateBoolean;Lln;Z)V addBookSlotModel
	a (Llf$d;Lnet/minecraft/world/level/block/state/properties/BlockPropertyDoubleBlockHalf;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;)Llf$d; configureDoorHalf
	a (Llr$a;[Lnet/minecraft/world/level/block/Block;)V createColoredBlockWithRandomRotations
	a (Lnet/minecraft/core/BlockPropertyJigsawOrientation;Llh;)Llh; applyRotation
	a (Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/properties/DripstoneThickness;)Llh; createPointedDripstoneVariant
	a (Lnet/minecraft/resources/MinecraftKey;)[Llh; createRotatedVariants
	a (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/world/level/block/Block;)Lky$a; blockEntityModels
	a (Lnet/minecraft/world/item/Item;)V createSimpleFlatItemModel
	a (Lnet/minecraft/world/item/Item;Lnet/minecraft/resources/MinecraftKey;)V delegateItemModel
	a (Lnet/minecraft/world/level/block/Block;)V skipAutoItemBlock
	a (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;)V createSimpleFlatItemModel
	a (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;Lln;Ljava/util/function/Function;)Lnet/minecraft/resources/MinecraftKey; createSuffixedVariant
	a (Lnet/minecraft/world/level/block/Block;Ljava/util/function/Function;)V createBeeNest
	a (Lnet/minecraft/world/level/block/Block;Lky$e;)V createCrossBlockWithDefaultItem
	a (Lnet/minecraft/world/level/block/Block;Lky$e;Llp;)V createCrossBlockWithDefaultItem
	a (Lnet/minecraft/world/level/block/Block;Lky$e;Lnet/minecraft/world/level/block/state/properties/IBlockState;[I)V createCrossBlock
	a (Lnet/minecraft/world/level/block/Block;Llp;)V createPumpkinVariant
	a (Lnet/minecraft/world/level/block/Block;Llp;Ljava/util/function/BiConsumer;)Llb; createPillarBlockUVLocked
	a (Lnet/minecraft/world/level/block/Block;Llp;Lln;)V createTrivialBlock
	a (Lnet/minecraft/world/level/block/Block;Llr$a;)V createAxisAlignedPillarBlock
	a (Lnet/minecraft/world/level/block/Block;Llr$a;Llr$a;)V createRotatedPillarWithHorizontalVariant
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/MinecraftKey;)V delegateItemModel
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/MinecraftKey;Llh;)V createGrassLikeBlock
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/MinecraftKey;Llp;)V createPistonVariant
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/MinecraftKey;Llp;Ljava/util/function/BiConsumer;)Llb; createMirroredCubeGenerator
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;)Lle; createRotatedVariant
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;)Llb; createWall
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;)Llb; createCustomFence
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;)Llb; createDoor
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;Z)Llb; createFenceGate
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/Item;)V createAirLikeBlock
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V createNonTemplateModelBlock
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Ljava/util/function/BiFunction;)V createCraftingTableLike
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lky$e;)V createPlant
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V createHangingSign
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V createCoral
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/state/properties/IBlockState;[I)V createCropBlock
	a (Lnet/minecraft/world/level/block/state/properties/BlockStateBoolean;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;)Llf; createBooleanModelDispatch
	a (Lnet/minecraft/world/level/block/state/properties/IBlockState;Ljava/lang/Comparable;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;)Llf; createEmptyOrFullDispatch
	a ([Lnet/minecraft/world/level/block/Block;)V createCampfires
	aa ()V createPistonHeads
	ab ()V createSculkSensor
	ac ()V createSculkShrieker
	ad ()V createScaffolding
	ae ()V createCaveVines
	af ()V createRedstoneLamp
	ag ()V createRedstoneTorch
	ah ()V createRepeater
	ai ()V createSeaPickle
	aj ()V createSnowBlocks
	ak ()V createStonecutter
	al ()V createStructureBlock
	am ()V createSweetBerryBush
	an ()V createTripwire
	ao ()V createTripwireHook
	ap ()V createTurtleEgg
	aq ()V createSculkCatalyst
	ar ()V createChiseledBookshelf
	as ()V createMagmaBlock
	at ()V createInfestedStone
	au ()V createInfestedDeepslate
	av ()V createRespawnAnchor
	aw ()V createJigsaw
	ax ()V createPetrifiedOakSlab
	ay ()V createLightBlock
	b ()Llf; createHorizontalFacingDispatch
	b (Llr$a;[Lnet/minecraft/world/level/block/Block;)V createColoredBlockWithStateRotations
	b (Lnet/minecraft/world/level/block/Block;)V createSimpleFlatItemModel
	b (Lnet/minecraft/world/level/block/Block;Lky$e;)V createCrossBlock
	b (Lnet/minecraft/world/level/block/Block;Lky$e;Llp;)V createCrossBlock
	b (Lnet/minecraft/world/level/block/Block;Llr$a;)V createHorizontallyRotatedBlock
	b (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/MinecraftKey;)Lle; createRotatedVariant
	b (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/MinecraftKey;Llp;Ljava/util/function/BiConsumer;)Llb; createNorthWestMirroredCubeGenerator
	b (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;)Llb; createButton
	b (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;)Llb; createStairs
	b (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V createCoralFans
	b (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lky$e;)V createGrowingPlant
	c ()Llf; createHorizontalFacingDispatchAlt
	c (Lnet/minecraft/world/level/block/Block;)V createRotatedMirroredVariantBlock
	c (Lnet/minecraft/world/level/block/Block;Lky$e;)V createDoublePlant
	c (Lnet/minecraft/world/level/block/Block;Llr$a;)V createTrivialBlock
	c (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/MinecraftKey;)Lle; createSimpleBlock
	c (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/MinecraftKey;Llp;Ljava/util/function/BiConsumer;)Llb; createMirroredColumnGenerator
	c (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;)Llb; createFence
	c (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;)Llb; createOrientableTrapdoor
	c (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V createStems
	d ()Llf; createTorchHorizontalDispatch
	d (Lnet/minecraft/world/level/block/Block;)V createRotatedVariantBlock
	d (Lnet/minecraft/world/level/block/Block;Llr$a;)V createFurnace
	d (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/MinecraftKey;)Llb; createAxisAlignedPillarBlock
	d (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;)Llb; createRotatedPillarWithHorizontalVariant
	d (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;)Llb; createTrapdoor
	d (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Lky$a; blockEntityModels
	e ()Llf; createFacingDispatch
	e (Lnet/minecraft/world/level/block/Block;)V createTrivialCube
	e (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/MinecraftKey;)V createAxisAlignedPillarBlockCustomModel
	e (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;)Llb; createPressurePlate
	e (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;)Llb; createSlab
	e (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V createFullAndCarpetBlocks
	f ()V createSuspiciousSandBlock
	f (Lnet/minecraft/world/level/block/Block;)Lky$b; family
	f (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/MinecraftKey;)V createAirLikeBlock
	f (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;)V createDoubleBlock
	f (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V createGlassBlocks
	g ()Llf; createRotatedPillar
	g (Lnet/minecraft/world/level/block/Block;)V createDoor
	g (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V createWeightedPressurePlate
	h ()V createBigDripLeafBlock
	h (Lnet/minecraft/world/level/block/Block;)V createOrientableTrapdoor
	h (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V copyModel
	i ()V createSunflower
	i (Lnet/minecraft/world/level/block/Block;)V createTrapdoor
	i (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V createNormalTorch
	j ()V createTallSeagrass
	j (Lnet/minecraft/world/level/block/Block;)Lky$f; woodProvider
	j (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V createBedItem
	k ()V createSmallDripleaf
	k (Lnet/minecraft/world/level/block/Block;)V createNonTemplateModelBlock
	k (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V createNetherRoots
	l ()V createBamboo
	l (Lnet/minecraft/world/level/block/Block;)V createPassiveRail
	l (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V createCandleAndCandleCake
	m ()Llf; createColumnWithFacing
	m (Lnet/minecraft/world/level/block/Block;)V createActiveRail
	n ()V createBarrel
	n (Lnet/minecraft/world/level/block/Block;)V createFlowerBed
	o ()V createBell
	o (Lnet/minecraft/world/level/block/Block;)V createCommandBlock
	p ()V createGrindstone
	p (Lnet/minecraft/world/level/block/Block;)V createAnvil
	q ()V createBookshelf
	q (Lnet/minecraft/world/level/block/Block;)V createAzalea
	r ()V createRedstoneWire
	r (Lnet/minecraft/world/level/block/Block;)V createPottedAzalea
	s ()V createComparator
	s (Lnet/minecraft/world/level/block/Block;)V createMushroomBlock
	t ()V createSmoothStoneSlab
	t (Lnet/minecraft/world/level/block/Block;)V createDispenserBlock
	u ()V createBrewingStand
	u (Lnet/minecraft/world/level/block/Block;)V createAmethystCluster
	v ()V createCakeBlock
	v (Lnet/minecraft/world/level/block/Block;)V createNyliumBlock
	w ()V createCartographyTable
	w (Lnet/minecraft/world/level/block/Block;)V createRotatableColumn
	x ()V createSmithingTable
	x (Lnet/minecraft/world/level/block/Block;)Ljava/util/List; createFloorFireModels
	y ()V createPumpkins
	y (Lnet/minecraft/world/level/block/Block;)Ljava/util/List; createSideFireModels
	z ()V createCauldrons
	z (Lnet/minecraft/world/level/block/Block;)Ljava/util/List; createTopFireModels
ky$a net/minecraft/data/models/BlockModelGenerators$BlockEntityModelGenerator
	b baseModel
	a (Lln;[Lnet/minecraft/world/level/block/Block;)Lky$a; createWithCustomBlockItemModel
	a ([Lnet/minecraft/world/level/block/Block;)Lky$a; create
	b ([Lnet/minecraft/world/level/block/Block;)Lky$a; createWithoutBlockItem
ky$b net/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider
	b mapping
	c models
	d family
	e fullBlock
	a (Lje;)Lky$b; generateFor
	a (Lln;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/resources/MinecraftKey; getOrCreateModel
	a (Lnet/minecraft/world/level/block/Block;)Lky$b; button
	a (Lnet/minecraft/world/level/block/Block;Lln;)Lky$b; fullBlock
	a ([Lnet/minecraft/world/level/block/Block;)Lky$b; fullBlockCopies
	b (Lnet/minecraft/world/level/block/Block;)Lky$b; wall
	c (Lnet/minecraft/world/level/block/Block;)Lky$b; customFence
	d (Lnet/minecraft/world/level/block/Block;)Lky$b; fence
	e (Lnet/minecraft/world/level/block/Block;)Lky$b; customFenceGate
	f (Lnet/minecraft/world/level/block/Block;)Lky$b; fenceGate
	g (Lnet/minecraft/world/level/block/Block;)Lky$b; pressurePlate
	h (Lnet/minecraft/world/level/block/Block;)Lky$b; sign
	i (Lnet/minecraft/world/level/block/Block;)Lky$b; slab
	j (Lnet/minecraft/world/level/block/Block;)Lky$b; stairs
	k (Lnet/minecraft/world/level/block/Block;)Lky$b; fullBlockVariant
	l (Lnet/minecraft/world/level/block/Block;)Lky$b; door
	m (Lnet/minecraft/world/level/block/Block;)V trapdoor
ky$c net/minecraft/data/models/BlockModelGenerators$BlockStateGeneratorSupplier
ky$d net/minecraft/data/models/BlockModelGenerators$BookSlotModelCacheKey
	a template
	b modelSuffix
	a ()Lln; template
	b ()Ljava/lang/String; modelSuffix
ky$e net/minecraft/data/models/BlockModelGenerators$TintState
	a TINTED
	b NOT_TINTED
	c $VALUES
	a ()Lln; getCross
	b ()Lln; getCrossPot
	c ()[Lky$e; $values
ky$f net/minecraft/data/models/BlockModelGenerators$WoodProvider
	b logMapping
	a (Lnet/minecraft/world/level/block/Block;)Lky$f; wood
	b (Lnet/minecraft/world/level/block/Block;)Lky$f; log
	c (Lnet/minecraft/world/level/block/Block;)Lky$f; logWithHorizontal
	d (Lnet/minecraft/world/level/block/Block;)Lky$f; logUVLocked
kz net/minecraft/data/models/ItemModelGenerators
	a TRIM_TYPE_PREDICATE_ID
	b GENERATED_TRIM_MODELS
	c output
	a ()V run
	a (Lnet/minecraft/resources/MinecraftKey;Ljava/lang/String;)Lnet/minecraft/resources/MinecraftKey; getItemModelForTrimMaterial
	a (Lnet/minecraft/resources/MinecraftKey;Ljava/util/Map;Lnet/minecraft/world/item/ArmorMaterial;)Lcom/google/gson/JsonObject; generateBaseArmorTrimTemplate
	a (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;)V generateLayeredItem
	a (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;)V generateLayeredItem
	a (Lnet/minecraft/world/item/Item;)V generateCompassItem
	a (Lnet/minecraft/world/item/Item;Ljava/lang/String;Lln;)V generateFlatItem
	a (Lnet/minecraft/world/item/Item;Lln;)V generateFlatItem
	a (Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/Item;Lln;)V generateFlatItem
	a (Lnet/minecraft/world/item/ItemArmor;)V generateArmorTrims
	b (Lnet/minecraft/world/item/Item;)V generateClockItem
kz$a net/minecraft/data/models/ItemModelGenerators$TrimModelData
	a name
	b itemModelIndex
	c overrideArmorMaterials
	a ()Ljava/lang/String; name
	a (Lnet/minecraft/world/item/ArmorMaterial;)Ljava/lang/String; name
	b ()F itemModelIndex
	c ()Ljava/util/Map; overrideArmorMaterials
la net/minecraft/data/models/ModelProvider
	d blockStatePathProvider
	e modelPathProvider
	a ()Ljava/lang/String; getName
	a (Lnet/minecraft/data/CachedOutput;)Ljava/util/concurrent/CompletableFuture; run
	a (Lnet/minecraft/data/CachedOutput;Ljava/util/Map;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; saveCollection
lb net/minecraft/data/models/blockstates/BlockStateGenerator
	a ()Lnet/minecraft/world/level/block/Block; getBlock
lc net/minecraft/data/models/blockstates/Condition
	a ()Llc$c; condition
	a (Lnet/minecraft/world/level/block/state/BlockStateList;)V validate
	a ([Llc;)Llc; and
	b ([Llc;)Llc; or
lc$a net/minecraft/data/models/blockstates/Condition$CompositeCondition
	a operation
	b subconditions
	a (Lnet/minecraft/world/level/block/state/BlockStateList;)V validate
	b ()Lcom/google/gson/JsonElement; get
lc$b net/minecraft/data/models/blockstates/Condition$Operation
	a AND
	b OR
	c id
	d $VALUES
	a ()[Llc$b; $values
lc$c net/minecraft/data/models/blockstates/Condition$TerminalCondition
	a terms
	a (Lnet/minecraft/world/level/block/state/BlockStateList;)V validate
	a (Lnet/minecraft/world/level/block/state/properties/IBlockState;Ljava/lang/Comparable;)Llc$c; term
	a (Lnet/minecraft/world/level/block/state/properties/IBlockState;Ljava/lang/Comparable;[Ljava/lang/Comparable;)Llc$c; term
	a (Lnet/minecraft/world/level/block/state/properties/IBlockState;Ljava/lang/String;)V putValue
	a (Lnet/minecraft/world/level/block/state/properties/IBlockState;Ljava/util/stream/Stream;)Ljava/lang/String; joinValues
	b ()Lcom/google/gson/JsonElement; get
	b (Lnet/minecraft/world/level/block/state/properties/IBlockState;Ljava/lang/Comparable;)Llc$c; negatedTerm
	b (Lnet/minecraft/world/level/block/state/properties/IBlockState;Ljava/lang/Comparable;[Ljava/lang/Comparable;)Llc$c; negatedTerm
	c (Lnet/minecraft/world/level/block/state/properties/IBlockState;Ljava/lang/Comparable;[Ljava/lang/Comparable;)Ljava/lang/String; getTerm
ld net/minecraft/data/models/blockstates/MultiPartGenerator
	a block
	b parts
	a ()Lnet/minecraft/world/level/block/Block; getBlock
	a (Ljava/util/List;)Lld; with
	a (Llc;Ljava/util/List;)Lld; with
	a (Llc;Llh;)Lld; with
	a (Llc;[Llh;)Lld; with
	a (Llh;)Lld; with
	a (Lnet/minecraft/world/level/block/Block;)Lld; multiPart
	b ()Lcom/google/gson/JsonElement; get
ld$a net/minecraft/data/models/blockstates/MultiPartGenerator$ConditionalEntry
	a condition
	a (Lcom/google/gson/JsonObject;)V decorate
	a (Lnet/minecraft/world/level/block/state/BlockStateList;)V validate
ld$b net/minecraft/data/models/blockstates/MultiPartGenerator$Entry
	a variants
	a ()Lcom/google/gson/JsonElement; get
	a (Lcom/google/gson/JsonObject;)V decorate
	a (Lnet/minecraft/world/level/block/state/BlockStateList;)V validate
le net/minecraft/data/models/blockstates/MultiVariantGenerator
	a block
	b baseVariants
	c seenProperties
	d declaredPropertySets
	a ()Lnet/minecraft/world/level/block/Block; getBlock
	a (Ljava/util/List;Ljava/util/List;)Ljava/util/List; mergeVariants
	a (Llf;)Lle; with
	a (Lnet/minecraft/world/level/block/Block;)Lle; multiVariant
	a (Lnet/minecraft/world/level/block/Block;Llh;)Lle; multiVariant
	a (Lnet/minecraft/world/level/block/Block;[Llh;)Lle; multiVariant
	b ()Lcom/google/gson/JsonElement; get
lf net/minecraft/data/models/blockstates/PropertyDispatch
	a values
	a ()Ljava/util/Map; getEntries
	a (Llg;Ljava/util/List;)V putValue
	a (Lnet/minecraft/world/level/block/state/properties/IBlockState;)Llf$a; property
	a (Lnet/minecraft/world/level/block/state/properties/IBlockState;Lnet/minecraft/world/level/block/state/properties/IBlockState;)Llf$b; properties
	a (Lnet/minecraft/world/level/block/state/properties/IBlockState;Lnet/minecraft/world/level/block/state/properties/IBlockState;Lnet/minecraft/world/level/block/state/properties/IBlockState;)Llf$c; properties
	a (Lnet/minecraft/world/level/block/state/properties/IBlockState;Lnet/minecraft/world/level/block/state/properties/IBlockState;Lnet/minecraft/world/level/block/state/properties/IBlockState;Lnet/minecraft/world/level/block/state/properties/IBlockState;)Llf$d; properties
	a (Lnet/minecraft/world/level/block/state/properties/IBlockState;Lnet/minecraft/world/level/block/state/properties/IBlockState;Lnet/minecraft/world/level/block/state/properties/IBlockState;Lnet/minecraft/world/level/block/state/properties/IBlockState;Lnet/minecraft/world/level/block/state/properties/IBlockState;)Llf$e; properties
	b ()Ljava/util/List; getDefinedProperties
	c ()V verifyComplete
lf$a net/minecraft/data/models/blockstates/PropertyDispatch$C1
	a property1
	a (Ljava/lang/Comparable;Ljava/util/List;)Llf$a; select
	a (Ljava/lang/Comparable;Llh;)Llf$a; select
	a (Ljava/util/function/Function;)Llf; generate
	b ()Ljava/util/List; getDefinedProperties
	b (Ljava/util/function/Function;)Llf; generateList
lf$b net/minecraft/data/models/blockstates/PropertyDispatch$C2
	a property1
	b property2
	a (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Llf$b; select
	a (Ljava/lang/Comparable;Ljava/lang/Comparable;Llh;)Llf$b; select
	a (Ljava/util/function/BiFunction;)Llf; generate
	b ()Ljava/util/List; getDefinedProperties
	b (Ljava/util/function/BiFunction;)Llf; generateList
lf$c net/minecraft/data/models/blockstates/PropertyDispatch$C3
	a property1
	b property2
	c property3
	a (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Llf$c; select
	a (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Llh;)Llf$c; select
	a (Llf$h;)Llf; generate
	b ()Ljava/util/List; getDefinedProperties
	b (Llf$h;)Llf; generateList
lf$d net/minecraft/data/models/blockstates/PropertyDispatch$C4
	a property1
	b property2
	c property3
	d property4
	a (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Llf$d; select
	a (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Llh;)Llf$d; select
	a (Llf$g;)Llf; generate
	b ()Ljava/util/List; getDefinedProperties
	b (Llf$g;)Llf; generateList
lf$e net/minecraft/data/models/blockstates/PropertyDispatch$C5
	a property1
	b property2
	c property3
	d property4
	e property5
	a (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Llf$e; select
	a (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Llh;)Llf$e; select
	a (Llf$f;)Llf; generate
	b ()Ljava/util/List; getDefinedProperties
	b (Llf$f;)Llf; generateList
lf$f net/minecraft/data/models/blockstates/PropertyDispatch$PentaFunction
lf$g net/minecraft/data/models/blockstates/PropertyDispatch$QuadFunction
lf$h net/minecraft/data/models/blockstates/PropertyDispatch$TriFunction
lg net/minecraft/data/models/blockstates/Selector
	a EMPTY
	b COMPARE_BY_NAME
	c values
	a ()Llg; empty
	a (Ldcu$a;)Llg; extend
	a (Llg;)Llg; extend
	a ([Ldcu$a;)Llg; of
	b ()Ljava/lang/String; getKey
lh net/minecraft/data/models/blockstates/Variant
	a values
	a ()Llh; variant
	a (Ljava/util/List;)Lcom/google/gson/JsonElement; convertList
	a (Llh;Llh;)Llh; merge
	a (Llj;Ljava/lang/Object;)Llh; with
	b ()Lcom/google/gson/JsonElement; get
li net/minecraft/data/models/blockstates/VariantProperties
	a X_ROT
	b Y_ROT
	c MODEL
	d UV_LOCK
	e WEIGHT
li$a net/minecraft/data/models/blockstates/VariantProperties$Rotation
	a R0
	b R90
	c R180
	d R270
	e value
	f $VALUES
	a ()[Lli$a; $values
lj net/minecraft/data/models/blockstates/VariantProperty
	a key
	b serializer
	a (Ljava/lang/Object;)Llj$a; withValue
lj$a net/minecraft/data/models/blockstates/VariantProperty$Value
	b value
	a ()Llj; getKey
	a (Lcom/google/gson/JsonObject;)V addToVariant
ll net/minecraft/data/models/model/DelegatedModel
	a parent
	a ()Lcom/google/gson/JsonElement; get
lm net/minecraft/data/models/model/ModelLocationUtils
	a (Ljava/lang/String;)Lnet/minecraft/resources/MinecraftKey; decorateBlockModelLocation
	a (Lnet/minecraft/world/item/Item;)Lnet/minecraft/resources/MinecraftKey; getModelLocation
	a (Lnet/minecraft/world/item/Item;Ljava/lang/String;)Lnet/minecraft/resources/MinecraftKey; getModelLocation
	a (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/resources/MinecraftKey; getModelLocation
	a (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;)Lnet/minecraft/resources/MinecraftKey; getModelLocation
	b (Ljava/lang/String;)Lnet/minecraft/resources/MinecraftKey; decorateItemModelLocation
ln net/minecraft/data/models/model/ModelTemplate
	a model
	b requiredSlots
	c suffix
	a (Llp;)Ljava/util/Map; createMap
	a (Lnet/minecraft/resources/MinecraftKey;Ljava/util/Map;)Lcom/google/gson/JsonObject; createBaseTemplate
	a (Lnet/minecraft/resources/MinecraftKey;Llp;Ljava/util/function/BiConsumer;)Lnet/minecraft/resources/MinecraftKey; create
	a (Lnet/minecraft/resources/MinecraftKey;Llp;Ljava/util/function/BiConsumer;Lln$a;)Lnet/minecraft/resources/MinecraftKey; create
	a (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;Llp;Ljava/util/function/BiConsumer;)Lnet/minecraft/resources/MinecraftKey; createWithSuffix
	a (Lnet/minecraft/world/level/block/Block;Llp;Ljava/util/function/BiConsumer;)Lnet/minecraft/resources/MinecraftKey; create
	b (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;Llp;Ljava/util/function/BiConsumer;)Lnet/minecraft/resources/MinecraftKey; createWithOverride
ln$a net/minecraft/data/models/model/ModelTemplate$JsonFactory
lo net/minecraft/data/models/model/ModelTemplates
	A DOOR_TOP_RIGHT_OPEN
	B CUSTOM_FENCE_POST
	C CUSTOM_FENCE_SIDE_NORTH
	D CUSTOM_FENCE_SIDE_EAST
	E CUSTOM_FENCE_SIDE_SOUTH
	F CUSTOM_FENCE_SIDE_WEST
	G CUSTOM_FENCE_INVENTORY
	H FENCE_POST
	I FENCE_SIDE
	J FENCE_INVENTORY
	K WALL_POST
	L WALL_LOW_SIDE
	M WALL_TALL_SIDE
	N WALL_INVENTORY
	O CUSTOM_FENCE_GATE_CLOSED
	P CUSTOM_FENCE_GATE_OPEN
	Q CUSTOM_FENCE_GATE_WALL_CLOSED
	R CUSTOM_FENCE_GATE_WALL_OPEN
	S FENCE_GATE_CLOSED
	T FENCE_GATE_OPEN
	U FENCE_GATE_WALL_CLOSED
	V FENCE_GATE_WALL_OPEN
	W PRESSURE_PLATE_UP
	X PRESSURE_PLATE_DOWN
	Y PARTICLE_ONLY
	Z SLAB_BOTTOM
	a CUBE
	aA CORAL_WALL_FAN
	aB GLAZED_TERRACOTTA
	aC CHORUS_FLOWER
	aD DAYLIGHT_DETECTOR
	aE STAINED_GLASS_PANE_NOSIDE
	aF STAINED_GLASS_PANE_NOSIDE_ALT
	aG STAINED_GLASS_PANE_POST
	aH STAINED_GLASS_PANE_SIDE
	aI STAINED_GLASS_PANE_SIDE_ALT
	aJ COMMAND_BLOCK
	aK CHISELED_BOOKSHELF_SLOT_TOP_LEFT
	aL CHISELED_BOOKSHELF_SLOT_TOP_MID
	aM CHISELED_BOOKSHELF_SLOT_TOP_RIGHT
	aN CHISELED_BOOKSHELF_SLOT_BOTTOM_LEFT
	aO CHISELED_BOOKSHELF_SLOT_BOTTOM_MID
	aP CHISELED_BOOKSHELF_SLOT_BOTTOM_RIGHT
	aQ ANVIL
	aR STEMS
	aS ATTACHED_STEM
	aT CROP
	aU FARMLAND
	aV FIRE_FLOOR
	aW FIRE_SIDE
	aX FIRE_SIDE_ALT
	aY FIRE_UP
	aZ FIRE_UP_ALT
	aa SLAB_TOP
	ab LEAVES
	ac STAIRS_STRAIGHT
	ad STAIRS_INNER
	ae STAIRS_OUTER
	af TRAPDOOR_TOP
	ag TRAPDOOR_BOTTOM
	ah TRAPDOOR_OPEN
	ai ORIENTABLE_TRAPDOOR_TOP
	aj ORIENTABLE_TRAPDOOR_BOTTOM
	ak ORIENTABLE_TRAPDOOR_OPEN
	al POINTED_DRIPSTONE
	am CROSS
	an TINTED_CROSS
	ao FLOWER_POT_CROSS
	ap TINTED_FLOWER_POT_CROSS
	aq RAIL_FLAT
	ar RAIL_CURVED
	as RAIL_RAISED_NE
	at RAIL_RAISED_SW
	au CARPET
	av FLOWERBED_1
	aw FLOWERBED_2
	ax FLOWERBED_3
	ay FLOWERBED_4
	az CORAL_FAN
	b CUBE_DIRECTIONAL
	bA BANNER_INVENTORY
	bB SKULL_INVENTORY
	bC CANDLE
	bD TWO_CANDLES
	bE THREE_CANDLES
	bF FOUR_CANDLES
	bG CANDLE_CAKE
	bH SCULK_SHRIEKER
	ba CAMPFIRE
	bb LANTERN
	bc HANGING_LANTERN
	bd TORCH
	be WALL_TORCH
	bf PISTON
	bg PISTON_HEAD
	bh PISTON_HEAD_SHORT
	bi SEAGRASS
	bj TURTLE_EGG
	bk TWO_TURTLE_EGGS
	bl THREE_TURTLE_EGGS
	bm FOUR_TURTLE_EGGS
	bn SINGLE_FACE
	bo CAULDRON_LEVEL1
	bp CAULDRON_LEVEL2
	bq CAULDRON_FULL
	br AZALEA
	bs POTTED_AZALEA
	bt FLAT_ITEM
	bu FLAT_HANDHELD_ITEM
	bv FLAT_HANDHELD_ROD_ITEM
	bw TWO_LAYERED_ITEM
	bx THREE_LAYERED_ITEM
	by SHULKER_BOX_INVENTORY
	bz BED_INVENTORY
	c CUBE_ALL
	d CUBE_MIRRORED_ALL
	e CUBE_NORTH_WEST_MIRRORED_ALL
	f CUBE_COLUMN_UV_LOCKED_X
	g CUBE_COLUMN_UV_LOCKED_Y
	h CUBE_COLUMN_UV_LOCKED_Z
	i CUBE_COLUMN
	j CUBE_COLUMN_HORIZONTAL
	k CUBE_COLUMN_MIRRORED
	l CUBE_TOP
	m CUBE_BOTTOM_TOP
	n CUBE_ORIENTABLE
	o CUBE_ORIENTABLE_TOP_BOTTOM
	p CUBE_ORIENTABLE_VERTICAL
	q BUTTON
	r BUTTON_PRESSED
	s BUTTON_INVENTORY
	t DOOR_BOTTOM_LEFT
	u DOOR_BOTTOM_LEFT_OPEN
	v DOOR_BOTTOM_RIGHT
	w DOOR_BOTTOM_RIGHT_OPEN
	x DOOR_TOP_LEFT
	y DOOR_TOP_LEFT_OPEN
	z DOOR_TOP_RIGHT
	a (Ljava/lang/String;Ljava/lang/String;[Llq;)Lln; create
	a (Ljava/lang/String;[Llq;)Lln; create
	a ([Llq;)Lln; create
	b (Ljava/lang/String;[Llq;)Lln; createItem
lp net/minecraft/data/models/model/TextureMapping
	a slots
	b forcedSlots
	A (Lnet/minecraft/world/level/block/Block;)Llp; orientableCubeOnlyTop
	B (Lnet/minecraft/world/level/block/Block;)Llp; orientableCubeSameEnds
	C (Lnet/minecraft/world/level/block/Block;)Llp; top
	D (Lnet/minecraft/world/level/block/Block;)Llp; campfire
	E (Lnet/minecraft/world/level/block/Block;)Llp; layer0
	F (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/resources/MinecraftKey; getBlockTexture
	a ()Ljava/util/stream/Stream; getForced
	a (Llq;)Lnet/minecraft/resources/MinecraftKey; get
	a (Llq;Llq;)Llp; copySlot
	a (Llq;Lnet/minecraft/resources/MinecraftKey;)Llp; put
	a (Lnet/minecraft/resources/MinecraftKey;)Llp; defaultTexture
	a (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;)Llp; column
	a (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;)Llp; layered
	a (Lnet/minecraft/world/item/Item;)Llp; particleFromItem
	a (Lnet/minecraft/world/item/Item;Ljava/lang/String;)Lnet/minecraft/resources/MinecraftKey; getItemTexture
	a (Lnet/minecraft/world/level/block/Block;)Llp; cube
	a (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;)Lnet/minecraft/resources/MinecraftKey; getBlockTexture
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Llp; attachedStem
	a (Lnet/minecraft/world/level/block/Block;Z)Llp; candleCake
	a (Z)Llp; sculkShrieker
	b (Llq;Llq;)Llp; copyForced
	b (Llq;Lnet/minecraft/resources/MinecraftKey;)Llp; putForced
	b (Lnet/minecraft/resources/MinecraftKey;)Llp; cube
	b (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;)Llp; door
	b (Lnet/minecraft/world/item/Item;)Llp; layer0
	b (Lnet/minecraft/world/level/block/Block;)Llp; defaultTexture
	b (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Llp; pane
	c (Llq;Lnet/minecraft/resources/MinecraftKey;)Llp; copyAndUpdate
	c (Lnet/minecraft/resources/MinecraftKey;)Llp; cross
	c (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;)Llp; layered
	c (Lnet/minecraft/world/item/Item;)Lnet/minecraft/resources/MinecraftKey; getItemTexture
	c (Lnet/minecraft/world/level/block/Block;)Llp; cross
	c (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Llp; craftingTable
	d (Llq;Lnet/minecraft/resources/MinecraftKey;)Llp; singleSlot
	d (Lnet/minecraft/resources/MinecraftKey;)Llp; plant
	d (Lnet/minecraft/world/level/block/Block;)Llp; plant
	d (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Llp; fletchingTable
	e (Lnet/minecraft/resources/MinecraftKey;)Llp; rail
	e (Lnet/minecraft/world/level/block/Block;)Llp; rail
	f (Lnet/minecraft/resources/MinecraftKey;)Llp; wool
	f (Lnet/minecraft/world/level/block/Block;)Llp; wool
	g (Lnet/minecraft/resources/MinecraftKey;)Llp; crop
	g (Lnet/minecraft/world/level/block/Block;)Llp; flowerbed
	h (Lnet/minecraft/resources/MinecraftKey;)Llp; particle
	h (Lnet/minecraft/world/level/block/Block;)Llp; stem
	i (Lnet/minecraft/resources/MinecraftKey;)Llp; torch
	i (Lnet/minecraft/world/level/block/Block;)Llp; pattern
	j (Lnet/minecraft/resources/MinecraftKey;)Llp; cauldron
	j (Lnet/minecraft/world/level/block/Block;)Llp; fan
	k (Lnet/minecraft/resources/MinecraftKey;)Llp; layer0
	k (Lnet/minecraft/world/level/block/Block;)Llp; column
	l (Lnet/minecraft/world/level/block/Block;)Llp; cubeTop
	m (Lnet/minecraft/world/level/block/Block;)Llp; logColumn
	n (Lnet/minecraft/world/level/block/Block;)Llp; fence
	o (Lnet/minecraft/world/level/block/Block;)Llp; customParticle
	p (Lnet/minecraft/world/level/block/Block;)Llp; cubeBottomTop
	q (Lnet/minecraft/world/level/block/Block;)Llp; cubeBottomTopWithWall
	r (Lnet/minecraft/world/level/block/Block;)Llp; columnWithWall
	s (Lnet/minecraft/world/level/block/Block;)Llp; door
	t (Lnet/minecraft/world/level/block/Block;)Llp; particle
	u (Lnet/minecraft/world/level/block/Block;)Llp; fire0
	v (Lnet/minecraft/world/level/block/Block;)Llp; fire1
	w (Lnet/minecraft/world/level/block/Block;)Llp; lantern
	x (Lnet/minecraft/world/level/block/Block;)Llp; torch
	y (Lnet/minecraft/world/level/block/Block;)Llp; commandBlock
	z (Lnet/minecraft/world/level/block/Block;)Llp; orientableCube
lq net/minecraft/data/models/model/TextureSlot
	A CROP
	B DIRT
	C FIRE
	D LANTERN
	E PLATFORM
	F UNSTICKY
	G TORCH
	H LAYER0
	I LAYER1
	J LAYER2
	K LIT_LOG
	L CANDLE
	M INSIDE
	N CONTENT
	O INNER_TOP
	P FLOWERBED
	Q id
	R parent
	a ALL
	b TEXTURE
	c PARTICLE
	d END
	e BOTTOM
	f TOP
	g FRONT
	h BACK
	i SIDE
	j NORTH
	k SOUTH
	l EAST
	m WEST
	n UP
	o DOWN
	p CROSS
	q PLANT
	r WALL
	s RAIL
	t WOOL
	u PATTERN
	v PANE
	w EDGE
	x FAN
	y STEM
	z UPPER_STEM
	a ()Ljava/lang/String; getId
	a (Ljava/lang/String;)Llq; create
	a (Ljava/lang/String;Llq;)Llq; create
	b ()Llq; getParent
lr net/minecraft/data/models/model/TexturedModel
	A template
	a CUBE
	b CUBE_MIRRORED
	c COLUMN
	d COLUMN_HORIZONTAL
	e CUBE_TOP_BOTTOM
	f CUBE_TOP
	g ORIENTABLE_ONLY_TOP
	h ORIENTABLE
	i CARPET
	j FLOWERBED_1
	k FLOWERBED_2
	l FLOWERBED_3
	m FLOWERBED_4
	n GLAZED_TERRACOTTA
	o CORAL_FAN
	p PARTICLE_ONLY
	q ANVIL
	r LEAVES
	s LANTERN
	t HANGING_LANTERN
	u SEAGRASS
	v COLUMN_ALT
	w COLUMN_HORIZONTAL_ALT
	x TOP_BOTTOM_WITH_WALL
	y COLUMN_WITH_WALL
	z mapping
	a ()Lln; getTemplate
	a (Ljava/util/function/Consumer;)Llr; updateTextures
	a (Ljava/util/function/Function;Lln;)Llr$a; createDefault
	a (Lnet/minecraft/resources/MinecraftKey;)Llr; createAllSame
	a (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;Ljava/util/function/BiConsumer;)Lnet/minecraft/resources/MinecraftKey; createWithSuffix
	a (Lnet/minecraft/world/level/block/Block;Ljava/util/function/BiConsumer;)Lnet/minecraft/resources/MinecraftKey; create
	b ()Llp; getMapping
lr$a net/minecraft/data/models/model/TexturedModel$Provider
lv net/minecraft/data/recipes/CraftingRecipeBuilder
	a (Llz;)Lnet/minecraft/world/item/crafting/CraftingBookCategory; determineBookCategory
lv$a net/minecraft/data/recipes/CraftingRecipeBuilder$CraftingResult
	a category
	a (Lcom/google/gson/JsonObject;)V serializeRecipeData
lw net/minecraft/data/recipes/FinishedRecipe
	a ()Lcom/google/gson/JsonObject; serializeRecipe
	a (Lcom/google/gson/JsonObject;)V serializeRecipeData
	b ()Lnet/minecraft/resources/MinecraftKey; getId
	c ()Lnet/minecraft/world/item/crafting/RecipeSerializer; getType
	d ()Lcom/google/gson/JsonObject; serializeAdvancement
	e ()Lnet/minecraft/resources/MinecraftKey; getAdvancementId
lx net/minecraft/data/recipes/LegacyUpgradeRecipeBuilder
	a base
	b addition
	c category
	d result
	e advancement
	f type
	a (Ljava/lang/String;Lnet/minecraft/advancements/CriterionInstance;)Llx; unlocks
	a (Ljava/util/function/Consumer;Ljava/lang/String;)V save
	a (Ljava/util/function/Consumer;Lnet/minecraft/resources/MinecraftKey;)V save
	a (Lnet/minecraft/resources/MinecraftKey;)V ensureValid
	a (Lnet/minecraft/world/item/crafting/RecipeItemStack;Lnet/minecraft/world/item/crafting/RecipeItemStack;Llz;Lnet/minecraft/world/item/Item;)Llx; smithing
lx$a net/minecraft/data/recipes/LegacyUpgradeRecipeBuilder$Result
	a id
	b base
	c addition
	d result
	e advancement
	f advancementId
	g type
	a (Lcom/google/gson/JsonObject;)V serializeRecipeData
	b ()Lnet/minecraft/resources/MinecraftKey; getId
	c ()Lnet/minecraft/world/item/crafting/RecipeSerializer; getType
	d ()Lcom/google/gson/JsonObject; serializeAdvancement
	e ()Lnet/minecraft/resources/MinecraftKey; getAdvancementId
ly net/minecraft/data/recipes/RecipeBuilder
	a ROOT_RECIPE_ADVANCEMENT
	a ()Lnet/minecraft/world/item/Item; getResult
	a (Ljava/lang/String;)Lly; group
	a (Ljava/lang/String;Lnet/minecraft/advancements/CriterionInstance;)Lly; unlockedBy
	a (Ljava/util/function/Consumer;)V save
	a (Ljava/util/function/Consumer;Ljava/lang/String;)V save
	a (Ljava/util/function/Consumer;Lnet/minecraft/resources/MinecraftKey;)V save
	a (Lnet/minecraft/world/level/IMaterial;)Lnet/minecraft/resources/MinecraftKey; getDefaultRecipeId
lz net/minecraft/data/recipes/RecipeCategory
	a BUILDING_BLOCKS
	b DECORATIONS
	c REDSTONE
	d TRANSPORTATION
	e TOOLS
	f COMBAT
	g FOOD
	h BREWING
	i MISC
	j recipeFolderName
	k $VALUES
	a ()Ljava/lang/String; getFolderName
	b ()[Llz; $values
ma net/minecraft/data/recipes/RecipeProvider
	d recipePathProvider
	e advancementPathProvider
	f SHAPE_BUILDERS
	a ()Ljava/lang/String; getName
	a (Ljava/util/function/Consumer;)V buildRecipes
	a (Ljava/util/function/Consumer;Ljava/lang/String;Lnet/minecraft/world/item/crafting/RecipeSerializer;I)V cookRecipes
	a (Ljava/util/function/Consumer;Ljava/lang/String;Lnet/minecraft/world/item/crafting/RecipeSerializer;ILnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;F)V simpleCookingRecipe
	a (Ljava/util/function/Consumer;Ljava/util/List;Llz;Lnet/minecraft/world/level/IMaterial;FILjava/lang/String;)V oreSmelting
	a (Ljava/util/function/Consumer;Lje;)V generateRecipes
	a (Ljava/util/function/Consumer;Llz;Lnet/minecraft/world/level/IMaterial;Llz;Lnet/minecraft/world/level/IMaterial;)V nineBlockStorageRecipes
	a (Ljava/util/function/Consumer;Llz;Lnet/minecraft/world/level/IMaterial;Llz;Lnet/minecraft/world/level/IMaterial;Ljava/lang/String;Ljava/lang/String;)V nineBlockStorageRecipesWithCustomPacking
	a (Ljava/util/function/Consumer;Llz;Lnet/minecraft/world/level/IMaterial;Llz;Lnet/minecraft/world/level/IMaterial;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V nineBlockStorageRecipes
	a (Ljava/util/function/Consumer;Llz;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;)V twoByTwoPacker
	a (Ljava/util/function/Consumer;Llz;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;I)V stonecutterResultFromBase
	a (Ljava/util/function/Consumer;Llz;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;Ljava/lang/String;)V threeByThreePacker
	a (Ljava/util/function/Consumer;Lnet/minecraft/world/flag/FeatureFlagSet;)V generateForEnabledBlockFamilies
	a (Ljava/util/function/Consumer;Lnet/minecraft/world/item/Item;)V trimSmithing
	a (Ljava/util/function/Consumer;Lnet/minecraft/world/item/Item;Llz;Lnet/minecraft/world/item/Item;)V legacyNetheriteSmithing
	a (Ljava/util/function/Consumer;Lnet/minecraft/world/item/crafting/RecipeSerializer;Ljava/util/List;Llz;Lnet/minecraft/world/level/IMaterial;FILjava/lang/String;Ljava/lang/String;)V oreCooking
	a (Ljava/util/function/Consumer;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/tags/TagKey;)V copySmithingTemplate
	a (Ljava/util/function/Consumer;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/tags/TagKey;I)V planksFromLog
	a (Ljava/util/function/Consumer;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;)V woodFromLogs
	a (Ljava/util/function/Consumer;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;Ljava/lang/String;)V oneToOneConversionRecipe
	a (Ljava/util/function/Consumer;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;Ljava/lang/String;I)V oneToOneConversionRecipe
	a (Lje;Lje$b;)Lnet/minecraft/world/level/block/Block; getBaseBlock
	a (Llz;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/item/crafting/RecipeItemStack;)Lly; slabBuilder
	a (Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange;Lnet/minecraft/world/level/IMaterial;)Lbw$a; has
	a (Lnet/minecraft/data/CachedOutput;)Ljava/util/concurrent/CompletableFuture; run
	a (Lnet/minecraft/data/CachedOutput;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/advancements/Advancement$SerializedAdvancement;)Ljava/util/concurrent/CompletableFuture; buildAdvancement
	a (Lnet/minecraft/tags/TagKey;)Lbw$a; has
	a (Lnet/minecraft/world/level/IMaterial;)Lbw$a; has
	a (Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/item/crafting/RecipeItemStack;)Lly; doorBuilder
	a (Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;)Ljava/lang/String; getConversionRecipeName
	a (Lnet/minecraft/world/level/block/Block;)Lbj$a; insideOf
	a ([Lnet/minecraft/advancements/critereon/CriterionConditionItem;)Lbw$a; inventoryTrigger
	b (Ljava/util/function/Consumer;)V waxRecipes
	b (Ljava/util/function/Consumer;Ljava/util/List;Llz;Lnet/minecraft/world/level/IMaterial;FILjava/lang/String;)V oreBlasting
	b (Ljava/util/function/Consumer;Llz;Lnet/minecraft/world/level/IMaterial;Llz;Lnet/minecraft/world/level/IMaterial;Ljava/lang/String;Ljava/lang/String;)V nineBlockStorageRecipesRecipesWithCustomUnpacking
	b (Ljava/util/function/Consumer;Llz;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;)V threeByThreePacker
	b (Ljava/util/function/Consumer;Lnet/minecraft/world/item/Item;Llz;Lnet/minecraft/world/item/Item;)V netheriteSmithing
	b (Ljava/util/function/Consumer;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/tags/TagKey;I)V planksFromLogs
	b (Ljava/util/function/Consumer;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;)V woodenBoat
	b (Llz;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/item/crafting/RecipeItemStack;)Lmb; chiseledBuilder
	b (Lnet/minecraft/world/level/IMaterial;)Ljava/lang/String; getHasName
	b (Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/item/crafting/RecipeItemStack;)Lly; stairBuilder
	c (Ljava/util/function/Consumer;Llz;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;)V slab
	c (Ljava/util/function/Consumer;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;)V chestBoat
	c (Llz;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/item/crafting/RecipeItemStack;)Lly; pressurePlateBuilder
	c (Lnet/minecraft/world/level/IMaterial;)Ljava/lang/String; getItemName
	c (Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/item/crafting/RecipeItemStack;)Lly; buttonBuilder
	d (Ljava/util/function/Consumer;Llz;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;)V wall
	d (Ljava/util/function/Consumer;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;)V pressurePlate
	d (Llz;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/item/crafting/RecipeItemStack;)Lly; wallBuilder
	d (Lnet/minecraft/world/level/IMaterial;)Ljava/lang/String; getSimpleRecipeName
	d (Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/item/crafting/RecipeItemStack;)Lly; fenceBuilder
	e (Ljava/util/function/Consumer;Llz;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;)V polished
	e (Ljava/util/function/Consumer;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;)V hangingSign
	e (Llz;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/item/crafting/RecipeItemStack;)Lly; polishedBuilder
	e (Lnet/minecraft/world/level/IMaterial;)Ljava/lang/String; getSmeltingRecipeName
	e (Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/item/crafting/RecipeItemStack;)Lly; fenceGateBuilder
	f (Ljava/util/function/Consumer;Llz;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;)V cut
	f (Ljava/util/function/Consumer;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;)V coloredWoolFromWhiteWoolAndDye
	f (Llz;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/item/crafting/RecipeItemStack;)Lmb; cutBuilder
	f (Lnet/minecraft/world/level/IMaterial;)Ljava/lang/String; getBlastingRecipeName
	f (Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/item/crafting/RecipeItemStack;)Lly; trapdoorBuilder
	g (Ljava/util/function/Consumer;Llz;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;)V chiseled
	g (Ljava/util/function/Consumer;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;)V carpet
	g (Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/item/crafting/RecipeItemStack;)Lly; signBuilder
	h (Ljava/util/function/Consumer;Llz;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;)V mosaicBuilder
	h (Ljava/util/function/Consumer;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;)V coloredCarpetFromWhiteCarpetAndDye
	i (Ljava/util/function/Consumer;Llz;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;)V stonecutterResultFromBase
	i (Ljava/util/function/Consumer;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;)V bedFromPlanksAndWool
	j (Ljava/util/function/Consumer;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;)V bedFromWhiteBedAndDye
	k (Ljava/util/function/Consumer;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;)V banner
	l (Ljava/util/function/Consumer;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;)V stainedGlassFromGlassAndDye
	m (Ljava/util/function/Consumer;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;)V stainedGlassPaneFromStainedGlass
	n (Ljava/util/function/Consumer;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;)V stainedGlassPaneFromGlassPaneAndDye
	o (Ljava/util/function/Consumer;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;)V coloredTerracottaFromTerracottaAndDye
	p (Ljava/util/function/Consumer;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;)V concretePowder
	q (Ljava/util/function/Consumer;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;)V candle
	r (Ljava/util/function/Consumer;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;)V copySmithingTemplate
	s (Ljava/util/function/Consumer;Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/world/level/IMaterial;)V smeltingResultFromBase
mb net/minecraft/data/recipes/ShapedRecipeBuilder
	b category
	c result
	d count
	e rows
	f key
	g advancement
	h group
	i showNotification
	a ()Lnet/minecraft/world/item/Item; getResult
	a (Ljava/lang/Character;Lnet/minecraft/tags/TagKey;)Lmb; define
	a (Ljava/lang/Character;Lnet/minecraft/world/item/crafting/RecipeItemStack;)Lmb; define
	a (Ljava/lang/Character;Lnet/minecraft/world/level/IMaterial;)Lmb; define
	a (Ljava/lang/String;)Lly; group
	a (Ljava/lang/String;Lnet/minecraft/advancements/CriterionInstance;)Lly; unlockedBy
	a (Ljava/util/function/Consumer;Lnet/minecraft/resources/MinecraftKey;)V save
	a (Llz;Lnet/minecraft/world/level/IMaterial;)Lmb; shaped
	a (Llz;Lnet/minecraft/world/level/IMaterial;I)Lmb; shaped
	a (Lnet/minecraft/resources/MinecraftKey;)V ensureValid
	a (Z)Lmb; showNotification
	b (Ljava/lang/String;)Lmb; pattern
	b (Ljava/lang/String;Lnet/minecraft/advancements/CriterionInstance;)Lmb; unlockedBy
	c (Ljava/lang/String;)Lmb; group
mb$a net/minecraft/data/recipes/ShapedRecipeBuilder$Result
	a id
	b result
	c count
	d group
	e pattern
	f key
	g advancement
	h advancementId
	i showNotification
	a (Lcom/google/gson/JsonObject;)V serializeRecipeData
	b ()Lnet/minecraft/resources/MinecraftKey; getId
	c ()Lnet/minecraft/world/item/crafting/RecipeSerializer; getType
	d ()Lcom/google/gson/JsonObject; serializeAdvancement
	e ()Lnet/minecraft/resources/MinecraftKey; getAdvancementId
mc net/minecraft/data/recipes/ShapelessRecipeBuilder
	b category
	c result
	d count
	e ingredients
	f advancement
	g group
	a ()Lnet/minecraft/world/item/Item; getResult
	a (Ljava/lang/String;)Lly; group
	a (Ljava/lang/String;Lnet/minecraft/advancements/CriterionInstance;)Lly; unlockedBy
	a (Ljava/util/function/Consumer;Lnet/minecraft/resources/MinecraftKey;)V save
	a (Llz;Lnet/minecraft/world/level/IMaterial;)Lmc; shapeless
	a (Llz;Lnet/minecraft/world/level/IMaterial;I)Lmc; shapeless
	a (Lnet/minecraft/resources/MinecraftKey;)V ensureValid
	a (Lnet/minecraft/tags/TagKey;)Lmc; requires
	a (Lnet/minecraft/world/item/crafting/RecipeItemStack;)Lmc; requires
	a (Lnet/minecraft/world/item/crafting/RecipeItemStack;I)Lmc; requires
	a (Lnet/minecraft/world/level/IMaterial;I)Lmc; requires
	b (Ljava/lang/String;)Lmc; group
	b (Ljava/lang/String;Lnet/minecraft/advancements/CriterionInstance;)Lmc; unlockedBy
	b (Lnet/minecraft/world/level/IMaterial;)Lmc; requires
mc$a net/minecraft/data/recipes/ShapelessRecipeBuilder$Result
	a id
	b result
	c count
	d group
	e ingredients
	f advancement
	g advancementId
	a (Lcom/google/gson/JsonObject;)V serializeRecipeData
	b ()Lnet/minecraft/resources/MinecraftKey; getId
	c ()Lnet/minecraft/world/item/crafting/RecipeSerializer; getType
	d ()Lcom/google/gson/JsonObject; serializeAdvancement
	e ()Lnet/minecraft/resources/MinecraftKey; getAdvancementId
md net/minecraft/data/recipes/SimpleCookingRecipeBuilder
	b category
	c bookCategory
	d result
	e ingredient
	f experience
	g cookingTime
	h advancement
	i group
	j serializer
	a ()Lnet/minecraft/world/item/Item; getResult
	a (Ljava/lang/String;)Lly; group
	a (Ljava/lang/String;Lnet/minecraft/advancements/CriterionInstance;)Lly; unlockedBy
	a (Ljava/util/function/Consumer;Lnet/minecraft/resources/MinecraftKey;)V save
	a (Lnet/minecraft/resources/MinecraftKey;)V ensureValid
	a (Lnet/minecraft/world/item/crafting/RecipeItemStack;Llz;Lnet/minecraft/world/level/IMaterial;FI)Lmd; campfireCooking
	a (Lnet/minecraft/world/item/crafting/RecipeItemStack;Llz;Lnet/minecraft/world/level/IMaterial;FILnet/minecraft/world/item/crafting/RecipeSerializer;)Lmd; generic
	a (Lnet/minecraft/world/item/crafting/RecipeSerializer;Lnet/minecraft/world/level/IMaterial;)Lnet/minecraft/world/item/crafting/CookingBookCategory; determineRecipeCategory
	b (Ljava/lang/String;)Lmd; group
	b (Ljava/lang/String;Lnet/minecraft/advancements/CriterionInstance;)Lmd; unlockedBy
	b (Lnet/minecraft/world/item/crafting/RecipeItemStack;Llz;Lnet/minecraft/world/level/IMaterial;FI)Lmd; blasting
	b (Lnet/minecraft/world/level/IMaterial;)Lnet/minecraft/world/item/crafting/CookingBookCategory; determineSmeltingRecipeCategory
	c (Lnet/minecraft/world/item/crafting/RecipeItemStack;Llz;Lnet/minecraft/world/level/IMaterial;FI)Lmd; smelting
	c (Lnet/minecraft/world/level/IMaterial;)Lnet/minecraft/world/item/crafting/CookingBookCategory; determineBlastingRecipeCategory
	d (Lnet/minecraft/world/item/crafting/RecipeItemStack;Llz;Lnet/minecraft/world/level/IMaterial;FI)Lmd; smoking
md$a net/minecraft/data/recipes/SimpleCookingRecipeBuilder$Result
	a id
	b group
	c category
	d ingredient
	e result
	f experience
	g cookingTime
	h advancement
	i advancementId
	j serializer
	a (Lcom/google/gson/JsonObject;)V serializeRecipeData
	b ()Lnet/minecraft/resources/MinecraftKey; getId
	c ()Lnet/minecraft/world/item/crafting/RecipeSerializer; getType
	d ()Lcom/google/gson/JsonObject; serializeAdvancement
	e ()Lnet/minecraft/resources/MinecraftKey; getAdvancementId
me net/minecraft/data/recipes/SingleItemRecipeBuilder
	b category
	c result
	d ingredient
	e count
	f advancement
	g group
	h type
	a ()Lnet/minecraft/world/item/Item; getResult
	a (Ljava/lang/String;)Lly; group
	a (Ljava/lang/String;Lnet/minecraft/advancements/CriterionInstance;)Lly; unlockedBy
	a (Ljava/util/function/Consumer;Lnet/minecraft/resources/MinecraftKey;)V save
	a (Lnet/minecraft/resources/MinecraftKey;)V ensureValid
	a (Lnet/minecraft/world/item/crafting/RecipeItemStack;Llz;Lnet/minecraft/world/level/IMaterial;)Lme; stonecutting
	a (Lnet/minecraft/world/item/crafting/RecipeItemStack;Llz;Lnet/minecraft/world/level/IMaterial;I)Lme; stonecutting
	b (Ljava/lang/String;)Lme; group
	b (Ljava/lang/String;Lnet/minecraft/advancements/CriterionInstance;)Lme; unlockedBy
me$a net/minecraft/data/recipes/SingleItemRecipeBuilder$Result
	a id
	b group
	c ingredient
	d result
	e count
	f advancement
	g advancementId
	h type
	a (Lcom/google/gson/JsonObject;)V serializeRecipeData
	b ()Lnet/minecraft/resources/MinecraftKey; getId
	c ()Lnet/minecraft/world/item/crafting/RecipeSerializer; getType
	d ()Lcom/google/gson/JsonObject; serializeAdvancement
	e ()Lnet/minecraft/resources/MinecraftKey; getAdvancementId
mf net/minecraft/data/recipes/SmithingTransformRecipeBuilder
	a template
	b base
	c addition
	d category
	e result
	f advancement
	g type
	a (Ljava/lang/String;Lnet/minecraft/advancements/CriterionInstance;)Lmf; unlocks
	a (Ljava/util/function/Consumer;Ljava/lang/String;)V save
	a (Ljava/util/function/Consumer;Lnet/minecraft/resources/MinecraftKey;)V save
	a (Lnet/minecraft/resources/MinecraftKey;)V ensureValid
	a (Lnet/minecraft/world/item/crafting/RecipeItemStack;Lnet/minecraft/world/item/crafting/RecipeItemStack;Lnet/minecraft/world/item/crafting/RecipeItemStack;Llz;Lnet/minecraft/world/item/Item;)Lmf; smithing
mf$a net/minecraft/data/recipes/SmithingTransformRecipeBuilder$Result
	a id
	b type
	c template
	d base
	e addition
	f result
	g advancement
	h advancementId
	a (Lcom/google/gson/JsonObject;)V serializeRecipeData
	b ()Lnet/minecraft/resources/MinecraftKey; getId
	c ()Lnet/minecraft/world/item/crafting/RecipeSerializer; getType
	d ()Lcom/google/gson/JsonObject; serializeAdvancement
	e ()Lnet/minecraft/resources/MinecraftKey; getAdvancementId
	f ()Lnet/minecraft/resources/MinecraftKey; id
	g ()Lnet/minecraft/world/item/crafting/RecipeSerializer; type
	h ()Lnet/minecraft/world/item/crafting/RecipeItemStack; template
	i ()Lnet/minecraft/world/item/crafting/RecipeItemStack; base
	j ()Lnet/minecraft/world/item/crafting/RecipeItemStack; addition
	k ()Lnet/minecraft/world/item/Item; result
	l ()Lnet/minecraft/advancements/Advancement$SerializedAdvancement; advancement
	m ()Lnet/minecraft/resources/MinecraftKey; advancementId
mg net/minecraft/data/recipes/SmithingTrimRecipeBuilder
	a category
	b template
	c base
	d addition
	e advancement
	f type
	a (Ljava/lang/String;Lnet/minecraft/advancements/CriterionInstance;)Lmg; unlocks
	a (Ljava/util/function/Consumer;Ljava/lang/String;)V save
	a (Ljava/util/function/Consumer;Lnet/minecraft/resources/MinecraftKey;)V save
	a (Lnet/minecraft/resources/MinecraftKey;)V ensureValid
	a (Lnet/minecraft/world/item/crafting/RecipeItemStack;Lnet/minecraft/world/item/crafting/RecipeItemStack;Lnet/minecraft/world/item/crafting/RecipeItemStack;Llz;)Lmg; smithingTrim
mg$a net/minecraft/data/recipes/SmithingTrimRecipeBuilder$Result
	a id
	b type
	c template
	d base
	e addition
	f advancement
	g advancementId
	a (Lcom/google/gson/JsonObject;)V serializeRecipeData
	b ()Lnet/minecraft/resources/MinecraftKey; getId
	c ()Lnet/minecraft/world/item/crafting/RecipeSerializer; getType
	d ()Lcom/google/gson/JsonObject; serializeAdvancement
	e ()Lnet/minecraft/resources/MinecraftKey; getAdvancementId
	f ()Lnet/minecraft/resources/MinecraftKey; id
	g ()Lnet/minecraft/world/item/crafting/RecipeSerializer; type
	h ()Lnet/minecraft/world/item/crafting/RecipeItemStack; template
	i ()Lnet/minecraft/world/item/crafting/RecipeItemStack; base
	j ()Lnet/minecraft/world/item/crafting/RecipeItemStack; addition
	k ()Lnet/minecraft/advancements/Advancement$SerializedAdvancement; advancement
	l ()Lnet/minecraft/resources/MinecraftKey; advancementId
mh net/minecraft/data/recipes/SpecialRecipeBuilder
	a serializer
	a (Ljava/util/function/Consumer;Ljava/lang/String;)V save
	a (Lnet/minecraft/world/item/crafting/RecipeSerializer;)Lmh; special
mj net/minecraft/data/recipes/packs/BundleRecipeProvider
	a (Ljava/util/function/Consumer;)V buildRecipes
mk net/minecraft/data/recipes/packs/UpdateOneTwentyRecipeProvider
	a (Ljava/util/function/Consumer;)V buildRecipes
ml net/minecraft/data/recipes/packs/VanillaRecipeProvider
	d COAL_SMELTABLES
	e IRON_SMELTABLES
	f COPPER_SMELTABLES
	g GOLD_SMELTABLES
	h DIAMOND_SMELTABLES
	i LAPIS_SMELTABLES
	j REDSTONE_SMELTABLES
	k EMERALD_SMELTABLES
	a (Ljava/util/function/Consumer;)V buildRecipes
	a (Lnet/minecraft/data/CachedOutput;)Ljava/util/concurrent/CompletableFuture; run
mn net/minecraft/data/registries/RegistriesDatapackGenerator
	d LOGGER
	e output
	f registries
	a ()Ljava/lang/String; getName
	a (Ljava/nio/file/Path;Lnet/minecraft/data/CachedOutput;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Encoder;Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture; dumpValue
	a (Lnet/minecraft/data/CachedOutput;)Ljava/util/concurrent/CompletableFuture; run
	a (Lnet/minecraft/data/CachedOutput;Lhf$b;Lcom/mojang/serialization/DynamicOps;Lacy$b;)Ljava/util/Optional; dumpRegistryCap
mo net/minecraft/data/registries/UpdateOneTwentyRegistries
	a BUILDER
	a (Ljava/util/concurrent/CompletableFuture;)Ljava/util/concurrent/CompletableFuture; createLookup
ms$a net/minecraft/data/structures/SnbtToNbt$Filter
ms$b net/minecraft/data/structures/SnbtToNbt$StructureConversionException
ms$c net/minecraft/data/structures/SnbtToNbt$TaskResult
	a name
	b payload
	c snbtPayload
	d hash
	a ()Ljava/lang/String; name
	b ()[B payload
	c ()Ljava/lang/String; snbtPayload
	d ()Lcom/google/common/hash/HashCode; hash
mv net/minecraft/data/tags/BannerPatternTagsProvider
	a (Lhf$b;)V addTags
mw net/minecraft/data/tags/BiomeTagsProvider
	a (Lhf$b;)V addTags
mx net/minecraft/data/tags/CatVariantTagsProvider
	a (Lhf$b;)V addTags
my net/minecraft/data/tags/DamageTypeTagsProvider
	a (Lhf$b;)V addTags
mz net/minecraft/data/tags/EntityTypeTagsProvider
	a (Lhf$b;)V addTags
na net/minecraft/data/tags/FlatLevelGeneratorPresetTagsProvider
	a (Lhf$b;)V addTags
nb net/minecraft/data/tags/FluidTagsProvider
	a (Lhf$b;)V addTags
nc net/minecraft/data/tags/GameEventTagsProvider
	d VIBRATIONS_EXCEPT_FLAP
	a (Lhf$b;)V addTags
nd net/minecraft/data/tags/InstrumentTagsProvider
	a (Lhf$b;)V addTags
ne net/minecraft/data/tags/IntrinsicHolderTagsProvider
	d keyExtractor
	a (Lnet/minecraft/tags/TagKey;)Lne$a; tag
	b (Lnet/minecraft/tags/TagKey;)Lnj$b; tag
ne$a net/minecraft/data/tags/IntrinsicHolderTagsProvider$IntrinsicTagAppender
	a keyExtractor
	a (Ljava/lang/Object;)Lne$a; add
	a (Lnet/minecraft/tags/TagKey;)Lne$a; addTag
	a ([Ljava/lang/Object;)Lne$a; add
	b (Lnet/minecraft/tags/TagKey;)Lnj$b; addTag
net/minecraft/BlockUtil$Rectangle net/minecraft/BlockUtil$FoundRectangle
	a minCorner
	b axis1Size
	c axis2Size
net/minecraft/CrashReportCallable net/minecraft/CrashReportDetail
net/minecraft/CrashReportSystemDetails net/minecraft/CrashReportCategory
	a title
	b entries
	c stackTrace
	a ()[Ljava/lang/StackTraceElement; getStacktrace
	a (I)I fillInStackTrace
	a (Ljava/lang/StackTraceElement;Ljava/lang/StackTraceElement;)Z validateStackTrace
	a (Ljava/lang/String;Ljava/lang/Object;)Lnet/minecraft/CrashReportSystemDetails; setDetail
	a (Ljava/lang/String;Ljava/lang/Throwable;)V setDetailError
	a (Ljava/lang/String;Lnet/minecraft/CrashReportCallable;)Lnet/minecraft/CrashReportSystemDetails; setDetail
	a (Ljava/lang/StringBuilder;)V getDetails
	a (Lnet/minecraft/CrashReportSystemDetails;Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V populateBlockDetails
	a (Lnet/minecraft/world/level/LevelHeightAccessor;DDD)Ljava/lang/String; formatLocation
	a (Lnet/minecraft/world/level/LevelHeightAccessor;III)Ljava/lang/String; formatLocation
	a (Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/core/BlockPosition;)Ljava/lang/String; formatLocation
	b (I)V trimStacktrace
net/minecraft/CrashReportSystemDetails$CrashReportDetail net/minecraft/CrashReportCategory$Entry
	a key
	b value
	a ()Ljava/lang/String; getKey
	b ()Ljava/lang/String; getValue
net/minecraft/EnumChatFormat net/minecraft/ChatFormatting
	A name
	B code
	C isFormat
	D toString
	E id
	F color
	G $VALUES
	a BLACK
	b DARK_BLUE
	c DARK_GREEN
	d DARK_AQUA
	e DARK_RED
	f DARK_PURPLE
	g GOLD
	h GRAY
	i DARK_GRAY
	j BLUE
	k GREEN
	l AQUA
	m RED
	n LIGHT_PURPLE
	o YELLOW
	p WHITE
	q OBFUSCATED
	r BOLD
	s STRIKETHROUGH
	t UNDERLINE
	u ITALIC
	v RESET
	w CODEC
	x PREFIX_CODE
	y FORMATTING_BY_NAME
	z STRIP_FORMATTING_PATTERN
	a ()C getChar
	a (C)Lnet/minecraft/EnumChatFormat; getByCode
	a (I)Lnet/minecraft/EnumChatFormat; getById
	a (Ljava/lang/String;)Ljava/lang/String; stripFormatting
	a (ZZ)Ljava/util/Collection; getNames
	b ()I getId
	b (Ljava/lang/String;)Lnet/minecraft/EnumChatFormat; getByName
	c ()Ljava/lang/String; getSerializedName
	c (Ljava/lang/String;)Ljava/lang/String; cleanName
	d ()Z isFormat
	e ()Z isColor
	f ()Ljava/lang/Integer; getColor
	g ()Ljava/lang/String; getName
	h ()[Lnet/minecraft/EnumChatFormat; $values
net/minecraft/FileUtils net/minecraft/FileUtil
	a COPY_COUNTER_PATTERN
	b MAX_FILE_NAME
	c RESERVED_WINDOWS_FILENAMES
	d STRICT_PATH_SEGMENT_CHECK
	a (Ljava/lang/String;)Ljava/lang/String; getFullResourcePath
	a (Ljava/nio/file/Path;)Z isPathNormalized
	a (Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; findAvailableName
	a (Ljava/nio/file/Path;Ljava/util/List;)Ljava/nio/file/Path; resolvePath
	a ([Ljava/lang/String;)V validatePath
	b (Ljava/lang/String;)Ljava/lang/String; normalizeResourcePath
	b (Ljava/nio/file/Path;)Z isPathPortable
	b (Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;)Ljava/nio/file/Path; createPathToResource
	c (Ljava/lang/String;)Lcom/mojang/serialization/DataResult; decomposePath
	c (Ljava/nio/file/Path;)V createDirectoriesSafe
	d (Ljava/lang/String;)Z isValidStrictPathSegment
net/minecraft/MinecraftVersion net/minecraft/DetectedVersion
	a BUILT_IN
	b LOGGER
	c id
	d name
	e stable
	f worldVersion
	g protocolVersion
	h resourcePackVersion
	i dataPackVersion
	j buildTime
	a ()Lnet/minecraft/WorldVersion; tryDetectVersion
	a (Lnet/minecraft/server/packs/EnumResourcePackType;)I getPackVersion
	b ()Ljava/lang/String; getId
	c ()Ljava/lang/String; getName
	d ()Lnet/minecraft/world/level/storage/DataVersion; getDataVersion
	e ()I getProtocolVersion
	f ()Ljava/util/Date; getBuildTime
	g ()Z isStable
net/minecraft/ResourceKeyInvalidException net/minecraft/ResourceLocationException
net/minecraft/SystemUtils net/minecraft/Util
	a timeSource
	b TICKER
	c NIL_UUID
	d ZIP_FILE_SYSTEM_PROVIDER
	e LOGGER
	f DEFAULT_MAX_THREADS
	g MAX_THREADS_SYSTEM_PROPERTY
	h WORKER_COUNT
	i BACKGROUND_EXECUTOR
	j IO_POOL
	k FILENAME_DATE_TIME_FORMATTER
	l thePauser
	a ()Ljava/util/stream/Collector; toMap
	a (ILjava/lang/String;[Ljava/util/function/BooleanSupplier;)Z runWithRetries
	a (Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)Lcom/mojang/datafixers/types/Type; fetchChoiceType
	a (Lcom/mojang/serialization/DataResult;Ljava/util/function/Function;)Ljava/lang/Object; getOrThrow
	a (Lit/unimi/dsi/fastutil/objects/ObjectArrayList;Lnet/minecraft/util/RandomSource;)Ljava/util/List; shuffledCopy
	a (Ljava/io/File;Ljava/io/File;Ljava/io/File;)V safeReplaceFile
	a (Ljava/io/File;Ljava/io/File;Ljava/io/File;Z)V safeReplaceOrMoveFile
	a (Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object; findNextInIterable
	a (Ljava/lang/Object;Ljava/util/function/Consumer;)Ljava/lang/Object; make
	a (Ljava/lang/Runnable;Ljava/util/function/Supplier;)Ljava/lang/Runnable; name
	a (Ljava/lang/String;)V logAndPauseIfInIde
	a (Ljava/lang/String;II)I offsetByCodepoints
	a (Ljava/lang/String;Ljava/lang/Runnable;)Ljava/lang/Runnable; wrapThreadWithTaskName
	a (Ljava/lang/String;Ljava/lang/Throwable;)V logAndPauseIfInIde
	a (Ljava/lang/String;Ljava/util/function/Consumer;)Ljava/util/function/Consumer; prefix
	a (Ljava/lang/String;Ljava/util/function/Supplier;)Ljava/util/function/Supplier; wrapThreadWithTaskName
	a (Ljava/lang/String;Lnet/minecraft/CharPredicate;)Ljava/lang/String; sanitizeName
	a (Ljava/lang/String;Lnet/minecraft/resources/MinecraftKey;)Ljava/lang/String; makeDescriptionId
	a (Ljava/lang/Thread;Ljava/lang/Throwable;)V onThreadException
	a (Ljava/lang/Throwable;)V throwAsRuntime
	a (Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier; createDeleter
	a (Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier; createRenamer
	a (Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)V safeReplaceFile
	a (Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;Z)V safeReplaceOrMoveFile
	a (Ljava/util/List;)Ljava/lang/Object; lastOf
	a (Ljava/util/List;I)Lcom/mojang/serialization/DataResult; fixedSize
	a (Ljava/util/List;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; fallibleSequence
	a (Ljava/util/List;Ljava/util/function/IntFunction;)Ljava/util/function/ToIntFunction; createIndexLookup
	a (Ljava/util/List;Lnet/minecraft/util/RandomSource;)Ljava/lang/Object; getRandom
	a (Ljava/util/Optional;Ljava/util/function/Consumer;Ljava/lang/Runnable;)Ljava/util/Optional; ifElse
	a (Ljava/util/concurrent/ExecutorService;)V shutdownExecutor
	a (Ljava/util/function/BiFunction;)Ljava/util/function/BiFunction; memoize
	a (Ljava/util/function/Consumer;)V setPause
	a (Ljava/util/function/Function;)Lnet/minecraft/util/SingleKeyCache; singleKeyCache
	a (Ljava/util/function/Function;Ljava/util/function/Predicate;)Ljava/lang/Object; blockUntilDone
	a (Ljava/util/function/Supplier;)Ljava/lang/Object; make
	a (Ljava/util/function/Supplier;Ljava/util/function/Supplier;)Ljava/util/function/Supplier; name
	a (Ljava/util/stream/IntStream;I)Lcom/mojang/serialization/DataResult; fixedSize
	a (Ljava/util/stream/IntStream;Lnet/minecraft/util/RandomSource;)Lit/unimi/dsi/fastutil/ints/IntArrayList; toShuffledList
	a (Ljava/util/stream/Stream;Lnet/minecraft/util/RandomSource;)Ljava/util/List; toShuffledList
	a (Lnet/minecraft/world/level/block/state/properties/IBlockState;Ljava/lang/Object;)Ljava/lang/String; getPropertyName
	a ([ILnet/minecraft/util/RandomSource;)I getRandom
	a ([Ljava/lang/Object;Lnet/minecraft/util/RandomSource;)Ljava/lang/Object; getRandom
	a ([Ljava/util/function/BooleanSupplier;)Z executeInSequence
	b ()J getMillis
	b (Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)Lcom/mojang/datafixers/types/Type; doFetchChoiceType
	b (Lit/unimi/dsi/fastutil/objects/ObjectArrayList;Lnet/minecraft/util/RandomSource;)V shuffle
	b (Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object; findPreviousInIterable
	b (Ljava/lang/String;)Ljava/util/concurrent/ExecutorService; makeExecutor
	b (Ljava/lang/Throwable;)Ljava/lang/Throwable; pauseInIde
	b (Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier; createFileDeletedCheck
	b (Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)V copyBetweenDirs
	b (Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; sequence
	b (Ljava/util/List;Lnet/minecraft/util/RandomSource;)Ljava/util/Optional; getRandomSafe
	b (Ljava/util/function/Function;)Ljava/util/function/Function; memoize
	b ([Ljava/lang/Object;Lnet/minecraft/util/RandomSource;)Ljava/util/List; shuffledCopy
	c ()J getNanos
	c (Ljava/lang/String;)V doPause
	c (Ljava/lang/Throwable;)Ljava/lang/String; describeError
	c (Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier; createFileCreatedCheck
	c (Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; sequenceFailFast
	c (Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; blockUntilDone
	d ()J getEpochMillis
	d (Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; sequenceFailFastAndCancel
	e ()Ljava/lang/String; getFilenameFormattedDateTime
	e (Ljava/util/List;)Ljava/util/function/ToIntFunction; createIndexLookup
	f ()Ljava/util/concurrent/ExecutorService; backgroundExecutor
	g ()Ljava/util/concurrent/ExecutorService; ioPool
	h ()V shutdownExecutors
	i ()Lnet/minecraft/SystemUtils$OS; getPlatform
	j ()Ljava/util/stream/Stream; getVmArguments
	k ()Lit/unimi/dsi/fastutil/Hash$Strategy; identityStrategy
	l ()V startTimerHackThread
	m ()I getMaxThreads
	n ()Ljava/util/concurrent/ExecutorService; makeIoExecutor
net/minecraft/SystemUtils$IdentityHashingStrategy net/minecraft/Util$IdentityStrategy
	a INSTANCE
	b $VALUES
	a ()[Lnet/minecraft/SystemUtils$IdentityHashingStrategy; $values
net/minecraft/SystemUtils$OS net/minecraft/Util$OS
	a LINUX
	b SOLARIS
	c WINDOWS
	d OSX
	e UNKNOWN
	f telemetryName
	g $VALUES
	a ()Ljava/lang/String; telemetryName
	a (Ljava/io/File;)V openFile
	a (Ljava/lang/String;)V openUri
	a (Ljava/net/URI;)V openUri
	a (Ljava/net/URL;)V openUrl
	b ()[Lnet/minecraft/SystemUtils$OS; $values
	b (Ljava/net/URL;)[Ljava/lang/String; getOpenUrlArguments
net/minecraft/ThreadNamedUncaughtExceptionHandler net/minecraft/DefaultUncaughtExceptionHandlerWithName
	a logger
net/minecraft/advancements/Advancement$SerializedAdvancement net/minecraft/advancements/Advancement$Builder
	a parentId
	b parent
	c display
	d rewards
	e criteria
	f requirements
	g requirementsStrategy
	a ()Lnet/minecraft/advancements/Advancement$SerializedAdvancement; advancement
	a (Lah$a;)Lnet/minecraft/advancements/Advancement$SerializedAdvancement; rewards
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lnet/minecraft/advancements/Advancement$SerializedAdvancement; fromJson
	a (Ljava/lang/String;Lnet/minecraft/advancements/Criterion;)Lnet/minecraft/advancements/Advancement$SerializedAdvancement; addCriterion
	a (Ljava/lang/String;Lnet/minecraft/advancements/CriterionInstance;)Lnet/minecraft/advancements/Advancement$SerializedAdvancement; addCriterion
	a (Ljava/util/function/Consumer;Ljava/lang/String;)Lnet/minecraft/advancements/Advancement; save
	a (Ljava/util/function/Function;)Z canBuild
	a (Lnet/minecraft/advancements/Advancement;)Lnet/minecraft/advancements/Advancement$SerializedAdvancement; parent
	a (Lnet/minecraft/advancements/AdvancementDisplay;)Lnet/minecraft/advancements/Advancement$SerializedAdvancement; display
	a (Lnet/minecraft/advancements/AdvancementRequirements;)Lnet/minecraft/advancements/Advancement$SerializedAdvancement; requirements
	a (Lnet/minecraft/advancements/AdvancementRewards;)Lnet/minecraft/advancements/Advancement$SerializedAdvancement; rewards
	a (Lnet/minecraft/network/PacketDataSerializer;)V serializeToNetwork
	a (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/advancements/Advancement$SerializedAdvancement; parent
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/network/chat/IChatBaseComponent;Lnet/minecraft/network/chat/IChatBaseComponent;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/advancements/AdvancementFrameType;ZZZ)Lnet/minecraft/advancements/Advancement$SerializedAdvancement; display
	a (Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/network/chat/IChatBaseComponent;Lnet/minecraft/network/chat/IChatBaseComponent;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/advancements/AdvancementFrameType;ZZZ)Lnet/minecraft/advancements/Advancement$SerializedAdvancement; display
	a ([[Ljava/lang/String;)Lnet/minecraft/advancements/Advancement$SerializedAdvancement; requirements
	b ()Lcom/google/gson/JsonObject; serializeToJson
	b (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/advancements/Advancement$SerializedAdvancement; fromNetwork
	b (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/advancements/Advancement; build
	c ()Ljava/util/Map; getCriteria
net/minecraft/advancements/AdvancementDisplay net/minecraft/advancements/DisplayInfo
	a title
	b description
	c icon
	d background
	e frame
	f showToast
	g announceChat
	h hidden
	i x
	j y
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getTitle
	a (FF)V setLocation
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/advancements/AdvancementDisplay; fromJson
	a (Lnet/minecraft/network/PacketDataSerializer;)V serializeToNetwork
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; getDescription
	b (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/ItemStack; getIcon
	b (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/advancements/AdvancementDisplay; fromNetwork
	c ()Lnet/minecraft/world/item/ItemStack; getIcon
	d ()Lnet/minecraft/resources/MinecraftKey; getBackground
	e ()Lnet/minecraft/advancements/AdvancementFrameType; getFrame
	f ()F getX
	g ()F getY
	h ()Z shouldShowToast
	i ()Z shouldAnnounceChat
	j ()Z isHidden
	k ()Lcom/google/gson/JsonElement; serializeToJson
	l ()Lcom/google/gson/JsonObject; serializeIcon
net/minecraft/advancements/AdvancementFrameType net/minecraft/advancements/FrameType
	a TASK
	b CHALLENGE
	c GOAL
	d name
	e texture
	f chatColor
	g displayName
	h $VALUES
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lnet/minecraft/advancements/AdvancementFrameType; byName
	b ()I getTexture
	c ()Lnet/minecraft/EnumChatFormat; getChatColor
	d ()Lnet/minecraft/network/chat/IChatBaseComponent; getDisplayName
	e ()[Lnet/minecraft/advancements/AdvancementFrameType; $values
net/minecraft/advancements/AdvancementRequirements net/minecraft/advancements/RequirementsStrategy
	a AND
	b OR
net/minecraft/advancements/AdvancementTree net/minecraft/advancements/TreeNodePosition
	a advancement
	b parent
	c previousSibling
	d childIndex
	e children
	f ancestor
	g thread
	h x
	i y
	j mod
	k change
	l shift
	a ()V firstWalk
	a (F)V thirdWalk
	a (FIF)F secondWalk
	a (Lnet/minecraft/advancements/Advancement;)V run
	a (Lnet/minecraft/advancements/Advancement;Lnet/minecraft/advancements/AdvancementTree;)Lnet/minecraft/advancements/AdvancementTree; addChild
	a (Lnet/minecraft/advancements/AdvancementTree;)Lnet/minecraft/advancements/AdvancementTree; apportion
	a (Lnet/minecraft/advancements/AdvancementTree;F)V moveSubtree
	a (Lnet/minecraft/advancements/AdvancementTree;Lnet/minecraft/advancements/AdvancementTree;)Lnet/minecraft/advancements/AdvancementTree; getAncestor
	b ()V executeShifts
	c ()Lnet/minecraft/advancements/AdvancementTree; previousOrThread
	d ()Lnet/minecraft/advancements/AdvancementTree; nextOrThread
	e ()V finalizePosition
net/minecraft/advancements/Advancements net/minecraft/advancements/AdvancementList
	a LOGGER
	b advancements
	c roots
	d tasks
	e listener
	a ()V clear
	a (Laf$a;)V setListener
	a (Ljava/util/Map;)V add
	a (Ljava/util/Set;)V remove
	a (Lnet/minecraft/advancements/Advancement;)V remove
	a (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/advancements/Advancement; get
	b ()Ljava/lang/Iterable; getRoots
	c ()Ljava/util/Collection; getAllAdvancements
net/minecraft/advancements/CriterionInstance net/minecraft/advancements/CriterionTriggerInstance
	a ()Lnet/minecraft/resources/MinecraftKey; getCriterion
	a (Lnet/minecraft/advancements/critereon/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
net/minecraft/advancements/CriterionTriggers net/minecraft/advancements/CriteriaTriggers
	A EFFECTS_CHANGED
	B USED_TOTEM
	C NETHER_TRAVEL
	D FISHING_ROD_HOOKED
	E CHANNELED_LIGHTNING
	F SHOT_CROSSBOW
	G KILLED_BY_CROSSBOW
	H RAID_WIN
	I BAD_OMEN
	J HONEY_BLOCK_SLIDE
	K BEE_NEST_DESTROYED
	L TARGET_BLOCK_HIT
	M ITEM_USED_ON_BLOCK
	N GENERATE_LOOT
	O THROWN_ITEM_PICKED_UP_BY_ENTITY
	P THROWN_ITEM_PICKED_UP_BY_PLAYER
	Q PLAYER_INTERACTED_WITH_ENTITY
	R START_RIDING_TRIGGER
	S LIGHTNING_STRIKE
	T USING_ITEM
	U FALL_FROM_HEIGHT
	V RIDE_ENTITY_IN_LAVA_TRIGGER
	W KILL_MOB_NEAR_SCULK_CATALYST
	X ALLAY_DROP_ITEM_ON_BLOCK
	Y AVOID_VIBRATION
	Z CRITERIA
	a IMPOSSIBLE
	b PLAYER_KILLED_ENTITY
	c ENTITY_KILLED_PLAYER
	d ENTER_BLOCK
	e INVENTORY_CHANGED
	f RECIPE_UNLOCKED
	g PLAYER_HURT_ENTITY
	h ENTITY_HURT_PLAYER
	i ENCHANTED_ITEM
	j FILLED_BUCKET
	k BREWED_POTION
	l CONSTRUCT_BEACON
	m USED_ENDER_EYE
	n SUMMONED_ENTITY
	o BRED_ANIMALS
	p LOCATION
	q SLEPT_IN_BED
	r CURED_ZOMBIE_VILLAGER
	s TRADE
	t ITEM_DURABILITY_CHANGED
	u LEVITATION
	v CHANGED_DIMENSION
	w TICK
	x TAME_ANIMAL
	y PLACED_BLOCK
	z CONSUME_ITEM
	a ()Ljava/lang/Iterable; all
	a (Lnet/minecraft/advancements/CriterionTrigger;)Lnet/minecraft/advancements/CriterionTrigger; register
	a (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/advancements/CriterionTrigger; getCriterion
net/minecraft/advancements/critereon/CriterionConditionBlock net/minecraft/advancements/critereon/BlockPredicate
	a ANY
	b tag
	c blocks
	d properties
	e nbt
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/CriterionConditionBlock; fromJson
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;)Z matches
net/minecraft/advancements/critereon/CriterionConditionDamage net/minecraft/advancements/critereon/DamagePredicate
	a ANY
	b dealtDamage
	c takenDamage
	d sourceEntity
	e blocked
	f type
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/CriterionConditionDamage; fromJson
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/damagesource/DamageSource;FFZ)Z matches
net/minecraft/advancements/critereon/CriterionConditionDamageSource net/minecraft/advancements/critereon/DamageSourcePredicate
	a ANY
	b tags
	c directEntity
	d sourceEntity
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/CriterionConditionDamageSource; fromJson
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/damagesource/DamageSource;)Z matches
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/damagesource/DamageSource;)Z matches
net/minecraft/advancements/critereon/CriterionConditionDistance net/minecraft/advancements/critereon/DistancePredicate
	a ANY
	b x
	c y
	d z
	e horizontal
	f absolute
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (DDDDDD)Z matches
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/CriterionConditionDistance; fromJson
	a (Lnet/minecraft/advancements/critereon/CriterionConditionValue$DoubleRange;)Lnet/minecraft/advancements/critereon/CriterionConditionDistance; horizontal
	b (Lnet/minecraft/advancements/critereon/CriterionConditionValue$DoubleRange;)Lnet/minecraft/advancements/critereon/CriterionConditionDistance; vertical
	c (Lnet/minecraft/advancements/critereon/CriterionConditionValue$DoubleRange;)Lnet/minecraft/advancements/critereon/CriterionConditionDistance; absolute
net/minecraft/advancements/critereon/CriterionConditionEnchantments net/minecraft/advancements/critereon/EnchantmentPredicate
	a ANY
	b NONE
	c enchantment
	d level
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/CriterionConditionEnchantments; fromJson
	a (Ljava/util/Map;)Z containedIn
	b (Lcom/google/gson/JsonElement;)[Lnet/minecraft/advancements/critereon/CriterionConditionEnchantments; fromJsonArray
net/minecraft/advancements/critereon/CriterionConditionEntity net/minecraft/advancements/critereon/EntityPredicate
	a ANY
	b entityType
	c distanceToPlayer
	d location
	e steppingOnLocation
	f effects
	g nbt
	h flags
	i equipment
	j subPredicate
	k vehicle
	l passenger
	m targetedEntity
	n team
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/CriterionConditionEntity; fromJson
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/entity/Entity;)Z matches
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/entity/Entity;)Z matches
	b (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/level/storage/loot/LootTableInfo; createContext
net/minecraft/advancements/critereon/CriterionConditionEntityEquipment net/minecraft/advancements/critereon/EntityEquipmentPredicate
	a ANY
	b CAPTAIN
	c head
	d chest
	e legs
	f feet
	g mainhand
	h offhand
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/CriterionConditionEntityEquipment; fromJson
	a (Lnet/minecraft/world/entity/Entity;)Z matches
net/minecraft/advancements/critereon/CriterionConditionEntityFlags net/minecraft/advancements/critereon/EntityFlagsPredicate
	a ANY
	b isOnFire
	c isCrouching
	d isSprinting
	e isSwimming
	f isBaby
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/CriterionConditionEntityFlags; fromJson
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/Boolean; getOptionalBoolean
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/Boolean;)V addOptionalBoolean
	a (Lnet/minecraft/world/entity/Entity;)Z matches
net/minecraft/advancements/critereon/CriterionConditionEntityType net/minecraft/advancements/critereon/EntityTypePredicate
	a ANY
	b COMMA_JOINER
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/CriterionConditionEntityType; fromJson
	a (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/advancements/critereon/CriterionConditionEntityType; of
	a (Lnet/minecraft/world/entity/EntityTypes;)Z matches
	b (Lnet/minecraft/world/entity/EntityTypes;)Lnet/minecraft/advancements/critereon/CriterionConditionEntityType; of
net/minecraft/advancements/critereon/CriterionConditionFluid net/minecraft/advancements/critereon/FluidPredicate
	a ANY
	b tag
	c fluid
	d properties
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/CriterionConditionFluid; fromJson
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;)Z matches
net/minecraft/advancements/critereon/CriterionConditionInOpenWater net/minecraft/advancements/critereon/FishingHookPredicate
	b ANY
	c IN_OPEN_WATER_KEY
	d inOpenWater
	a ()Lcom/google/gson/JsonObject; serializeCustomData
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/advancements/critereon/CriterionConditionInOpenWater; fromJson
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/phys/Vec3D;)Z matches
	a (Z)Lnet/minecraft/advancements/critereon/CriterionConditionInOpenWater; inOpenWater
	c ()Lbo$a; type
net/minecraft/advancements/critereon/CriterionConditionItem net/minecraft/advancements/critereon/ItemPredicate
	a ANY
	b tag
	c items
	d count
	e durability
	f enchantments
	g storedEnchantments
	h potion
	i nbt
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/CriterionConditionItem; fromJson
	a (Lnet/minecraft/world/item/ItemStack;)Z matches
	b (Lcom/google/gson/JsonElement;)[Lnet/minecraft/advancements/critereon/CriterionConditionItem; fromJsonArray
net/minecraft/advancements/critereon/CriterionConditionLight net/minecraft/advancements/critereon/LightPredicate
	a ANY
	b composite
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/CriterionConditionLight; fromJson
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;)Z matches
net/minecraft/advancements/critereon/CriterionConditionLocation net/minecraft/advancements/critereon/LocationPredicate
	a ANY
	b LOGGER
	c x
	d y
	e z
	f biome
	g structure
	h dimension
	i smokey
	j light
	k block
	l fluid
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/CriterionConditionLocation; fromJson
	a (Lnet/minecraft/advancements/critereon/CriterionConditionValue$DoubleRange;)Lnet/minecraft/advancements/critereon/CriterionConditionLocation; atYLocation
	a (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/advancements/critereon/CriterionConditionLocation; inBiome
	a (Lnet/minecraft/server/level/WorldServer;DDD)Z matches
	b (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/advancements/critereon/CriterionConditionLocation; inDimension
	c (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/advancements/critereon/CriterionConditionLocation; inStructure
net/minecraft/advancements/critereon/CriterionConditionMobEffect net/minecraft/advancements/critereon/MobEffectsPredicate
	a ANY
	b effects
	a ()Lnet/minecraft/advancements/critereon/CriterionConditionMobEffect; effects
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/CriterionConditionMobEffect; fromJson
	a (Ljava/util/Map;)Z matches
	a (Lnet/minecraft/world/effect/MobEffectList;)Lnet/minecraft/advancements/critereon/CriterionConditionMobEffect; and
	a (Lnet/minecraft/world/effect/MobEffectList;Lcj$a;)Lnet/minecraft/advancements/critereon/CriterionConditionMobEffect; and
	a (Lnet/minecraft/world/entity/Entity;)Z matches
	a (Lnet/minecraft/world/entity/EntityLiving;)Z matches
	b ()Lcom/google/gson/JsonElement; serializeToJson
net/minecraft/advancements/critereon/CriterionConditionNBT net/minecraft/advancements/critereon/NbtPredicate
	a ANY
	b tag
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/CriterionConditionNBT; fromJson
	a (Lnet/minecraft/nbt/NBTBase;)Z matches
	a (Lnet/minecraft/world/entity/Entity;)Z matches
	a (Lnet/minecraft/world/item/ItemStack;)Z matches
	b (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/nbt/NBTTagCompound; getEntityTagToCompare
net/minecraft/advancements/critereon/CriterionConditionPlayer net/minecraft/advancements/critereon/PlayerPredicate
	b LOOKING_AT_RANGE
	c level
	d gameType
	e stats
	f recipes
	g advancements
	h lookingAt
	a ()Lcom/google/gson/JsonObject; serializeCustomData
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/advancements/critereon/CriterionConditionPlayer; fromJson
	a (Lnet/minecraft/stats/Statistic;)Lnet/minecraft/resources/MinecraftKey; getStatValueId
	a (Lnet/minecraft/stats/StatisticWrapper;Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/stats/Statistic; getStat
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/phys/Vec3D;)Z matches
	b (Lcom/google/gson/JsonElement;)Lcp$c; advancementPredicateFromJson
	c ()Lbo$a; type
net/minecraft/advancements/critereon/CriterionConditionRange net/minecraft/advancements/critereon/WrappedMinMaxBounds
	a ANY
	b ERROR_INTS_ONLY
	c min
	d max
	a ()Ljava/lang/Float; getMin
	a (D)Z matchesSqr
	a (F)Lnet/minecraft/advancements/critereon/CriterionConditionRange; exactly
	a (FF)Lnet/minecraft/advancements/critereon/CriterionConditionRange; between
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/CriterionConditionRange; fromJson
	a (Lcom/mojang/brigadier/StringReader;Z)Lnet/minecraft/advancements/critereon/CriterionConditionRange; fromReader
	a (Lcom/mojang/brigadier/StringReader;ZLjava/util/function/Function;)Lnet/minecraft/advancements/critereon/CriterionConditionRange; fromReader
	a (Ljava/lang/Float;Ljava/util/function/Function;)Ljava/lang/Float; optionallyFormat
	b ()Ljava/lang/Float; getMax
	b (F)Lnet/minecraft/advancements/critereon/CriterionConditionRange; atLeast
	b (Lcom/mojang/brigadier/StringReader;Z)Ljava/lang/Float; readNumber
	c ()Lcom/google/gson/JsonElement; serializeToJson
	c (F)Lnet/minecraft/advancements/critereon/CriterionConditionRange; atMost
	c (Lcom/mojang/brigadier/StringReader;Z)Z isAllowedNumber
	d (F)Z matches
net/minecraft/advancements/critereon/CriterionConditionValue net/minecraft/advancements/critereon/MinMaxBounds
	a ERROR_EMPTY
	b ERROR_SWAPPED
	c min
	d max
	a ()Ljava/lang/Number; getMin
	a (Lcom/google/gson/JsonElement;Lnet/minecraft/advancements/critereon/CriterionConditionValue;Ljava/util/function/BiFunction;Lci$a;)Lnet/minecraft/advancements/critereon/CriterionConditionValue; fromJson
	a (Lcom/mojang/brigadier/StringReader;)Z isAllowedInputChat
	a (Lcom/mojang/brigadier/StringReader;Lci$b;Ljava/util/function/Function;Ljava/util/function/Supplier;Ljava/util/function/Function;)Lnet/minecraft/advancements/critereon/CriterionConditionValue; fromReader
	a (Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;Ljava/util/function/Supplier;)Ljava/lang/Number; readNumber
	a (Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object; optionallyFormat
	b ()Ljava/lang/Number; getMax
	c ()Z isAny
	d ()Lcom/google/gson/JsonElement; serializeToJson
net/minecraft/advancements/critereon/CriterionConditionValue$DoubleRange net/minecraft/advancements/critereon/MinMaxBounds$Doubles
	e ANY
	f minSq
	g maxSq
	a (D)Lnet/minecraft/advancements/critereon/CriterionConditionValue$DoubleRange; exactly
	a (DD)Lnet/minecraft/advancements/critereon/CriterionConditionValue$DoubleRange; between
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/CriterionConditionValue$DoubleRange; fromJson
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/advancements/critereon/CriterionConditionValue$DoubleRange; fromReader
	a (Lcom/mojang/brigadier/StringReader;Ljava/lang/Double;Ljava/lang/Double;)Lnet/minecraft/advancements/critereon/CriterionConditionValue$DoubleRange; create
	a (Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;)Lnet/minecraft/advancements/critereon/CriterionConditionValue$DoubleRange; fromReader
	a (Ljava/lang/Double;)Ljava/lang/Double; squareOpt
	b (D)Lnet/minecraft/advancements/critereon/CriterionConditionValue$DoubleRange; atLeast
	c (D)Lnet/minecraft/advancements/critereon/CriterionConditionValue$DoubleRange; atMost
	d (D)Z matches
	e (D)Z matchesSqr
net/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange net/minecraft/advancements/critereon/MinMaxBounds$Ints
	e ANY
	f minSq
	g maxSq
	a (I)Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange; exactly
	a (II)Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange; between
	a (J)Z matchesSqr
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange; fromJson
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange; fromReader
	a (Lcom/mojang/brigadier/StringReader;Ljava/lang/Integer;Ljava/lang/Integer;)Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange; create
	a (Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;)Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange; fromReader
	a (Ljava/lang/Integer;)Ljava/lang/Long; squareOpt
	b (I)Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange; atLeast
	c (I)Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange; atMost
	d (I)Z matches
net/minecraft/advancements/critereon/CriterionInstanceAbstract net/minecraft/advancements/critereon/AbstractCriterionTriggerInstance
	a criterion
	b player
	a ()Lnet/minecraft/resources/MinecraftKey; getCriterion
	a (Lnet/minecraft/advancements/critereon/LootSerializationContext;)Lcom/google/gson/JsonObject; serializeToJson
	b ()Lbn$b; getPlayerPredicate
net/minecraft/advancements/critereon/CriterionSlideDownBlock net/minecraft/advancements/critereon/SlideDownBlockTrigger
	a ID
	a ()Lnet/minecraft/resources/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/level/block/Block; deserializeBlock
	a (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lcv$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/level/block/state/IBlockData;)V trigger
	b (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lnet/minecraft/advancements/critereon/CriterionInstanceAbstract; createInstance
net/minecraft/advancements/critereon/CriterionTriggerAbstract net/minecraft/advancements/critereon/SimpleCriterionTrigger
	a players
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lnet/minecraft/advancements/CriterionInstance; createInstance
	a (Lnet/minecraft/server/AdvancementDataPlayer;)V removePlayerListeners
	a (Lnet/minecraft/server/AdvancementDataPlayer;Lal$a;)V addPlayerListener
	a (Lnet/minecraft/server/level/EntityPlayer;Ljava/util/function/Predicate;)V trigger
	b (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lnet/minecraft/advancements/critereon/CriterionInstanceAbstract; createInstance
	b (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lnet/minecraft/advancements/critereon/CriterionInstanceAbstract; createInstance
	b (Lnet/minecraft/server/AdvancementDataPlayer;Lal$a;)V removePlayerListener
net/minecraft/advancements/critereon/CriterionTriggerBeeNestDestroyed net/minecraft/advancements/critereon/BeeNestDestroyedTrigger
	a ID
	a ()Lnet/minecraft/resources/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/level/block/Block; deserializeBlock
	a (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Las$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/item/ItemStack;I)V trigger
	b (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lnet/minecraft/advancements/critereon/CriterionInstanceAbstract; createInstance
net/minecraft/advancements/critereon/CriterionTriggerBredAnimals net/minecraft/advancements/critereon/BredAnimalsTrigger
	a ID
	a ()Lnet/minecraft/resources/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lau$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/entity/animal/EntityAnimal;Lnet/minecraft/world/entity/animal/EntityAnimal;Lnet/minecraft/world/entity/EntityAgeable;)V trigger
	b (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lnet/minecraft/advancements/critereon/CriterionInstanceAbstract; createInstance
net/minecraft/advancements/critereon/CriterionTriggerBrewedPotion net/minecraft/advancements/critereon/BrewedPotionTrigger
	a ID
	a ()Lnet/minecraft/resources/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lav$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/item/alchemy/PotionRegistry;)V trigger
	b (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lnet/minecraft/advancements/critereon/CriterionInstanceAbstract; createInstance
net/minecraft/advancements/critereon/CriterionTriggerChangedDimension net/minecraft/advancements/critereon/ChangeDimensionTrigger
	a ID
	a ()Lnet/minecraft/resources/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Law$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;)V trigger
	b (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lnet/minecraft/advancements/critereon/CriterionInstanceAbstract; createInstance
net/minecraft/advancements/critereon/CriterionTriggerChanneledLightning net/minecraft/advancements/critereon/ChanneledLightningTrigger
	a ID
	a ()Lnet/minecraft/resources/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lax$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Ljava/util/Collection;)V trigger
	b (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lnet/minecraft/advancements/critereon/CriterionInstanceAbstract; createInstance
net/minecraft/advancements/critereon/CriterionTriggerConstructBeacon net/minecraft/advancements/critereon/ConstructBeaconTrigger
	a ID
	a ()Lnet/minecraft/resources/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lay$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;I)V trigger
	b (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lnet/minecraft/advancements/critereon/CriterionInstanceAbstract; createInstance
net/minecraft/advancements/critereon/CriterionTriggerConsumeItem net/minecraft/advancements/critereon/ConsumeItemTrigger
	a ID
	a ()Lnet/minecraft/resources/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Laz$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/item/ItemStack;)V trigger
	b (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lnet/minecraft/advancements/critereon/CriterionInstanceAbstract; createInstance
net/minecraft/advancements/critereon/CriterionTriggerCuredZombieVillager net/minecraft/advancements/critereon/CuredZombieVillagerTrigger
	a ID
	a ()Lnet/minecraft/resources/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lba$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/entity/monster/EntityZombie;Lnet/minecraft/world/entity/npc/EntityVillager;)V trigger
	b (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lnet/minecraft/advancements/critereon/CriterionInstanceAbstract; createInstance
net/minecraft/advancements/critereon/CriterionTriggerEffectsChanged net/minecraft/advancements/critereon/EffectsChangedTrigger
	a ID
	a ()Lnet/minecraft/resources/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lbg$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/entity/Entity;)V trigger
	b (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lnet/minecraft/advancements/critereon/CriterionInstanceAbstract; createInstance
net/minecraft/advancements/critereon/CriterionTriggerEnchantedItem net/minecraft/advancements/critereon/EnchantedItemTrigger
	a ID
	a ()Lnet/minecraft/resources/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lbh$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/item/ItemStack;I)V trigger
	b (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lnet/minecraft/advancements/critereon/CriterionInstanceAbstract; createInstance
net/minecraft/advancements/critereon/CriterionTriggerEnterBlock net/minecraft/advancements/critereon/EnterBlockTrigger
	a ID
	a ()Lnet/minecraft/resources/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/level/block/Block; deserializeBlock
	a (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lbj$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/level/block/state/IBlockData;)V trigger
	b (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lnet/minecraft/advancements/critereon/CriterionInstanceAbstract; createInstance
net/minecraft/advancements/critereon/CriterionTriggerEntityHurtPlayer net/minecraft/advancements/critereon/EntityHurtPlayerTrigger
	a ID
	a ()Lnet/minecraft/resources/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lbm$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/damagesource/DamageSource;FFZ)V trigger
	b (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lnet/minecraft/advancements/critereon/CriterionInstanceAbstract; createInstance
net/minecraft/advancements/critereon/CriterionTriggerFilledBucket net/minecraft/advancements/critereon/FilledBucketTrigger
	a ID
	a ()Lnet/minecraft/resources/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lbr$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/item/ItemStack;)V trigger
	b (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lnet/minecraft/advancements/critereon/CriterionInstanceAbstract; createInstance
net/minecraft/advancements/critereon/CriterionTriggerFishingRodHooked net/minecraft/advancements/critereon/FishingRodHookedTrigger
	a ID
	a ()Lnet/minecraft/resources/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lbt$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/projectile/EntityFishingHook;Ljava/util/Collection;)V trigger
	b (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lnet/minecraft/advancements/critereon/CriterionInstanceAbstract; createInstance
net/minecraft/advancements/critereon/CriterionTriggerImpossible net/minecraft/advancements/critereon/ImpossibleTrigger
	a ID
	a ()Lnet/minecraft/resources/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lnet/minecraft/advancements/CriterionInstance; createInstance
	a (Lnet/minecraft/server/AdvancementDataPlayer;)V removePlayerListeners
	a (Lnet/minecraft/server/AdvancementDataPlayer;Lal$a;)V addPlayerListener
	b (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lbv$a; createInstance
	b (Lnet/minecraft/server/AdvancementDataPlayer;Lal$a;)V removePlayerListener
net/minecraft/advancements/critereon/CriterionTriggerInventoryChanged net/minecraft/advancements/critereon/InventoryChangeTrigger
	a ID
	a ()Lnet/minecraft/resources/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lbw$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/entity/player/PlayerInventory;Lnet/minecraft/world/item/ItemStack;)V trigger
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/entity/player/PlayerInventory;Lnet/minecraft/world/item/ItemStack;III)V trigger
	b (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lnet/minecraft/advancements/critereon/CriterionInstanceAbstract; createInstance
net/minecraft/advancements/critereon/CriterionTriggerItemDurabilityChanged net/minecraft/advancements/critereon/ItemDurabilityTrigger
	a ID
	a ()Lnet/minecraft/resources/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lbx$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/item/ItemStack;I)V trigger
	b (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lnet/minecraft/advancements/critereon/CriterionInstanceAbstract; createInstance
net/minecraft/advancements/critereon/CriterionTriggerKilled net/minecraft/advancements/critereon/KilledTrigger
	a id
	a ()Lnet/minecraft/resources/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lcb$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/damagesource/DamageSource;)V trigger
	b (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lnet/minecraft/advancements/critereon/CriterionInstanceAbstract; createInstance
net/minecraft/advancements/critereon/CriterionTriggerKilledByCrossbow net/minecraft/advancements/critereon/KilledByCrossbowTrigger
	a ID
	a ()Lnet/minecraft/resources/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lca$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Ljava/util/Collection;)V trigger
	b (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lnet/minecraft/advancements/critereon/CriterionInstanceAbstract; createInstance
net/minecraft/advancements/critereon/CriterionTriggerLevitation net/minecraft/advancements/critereon/LevitationTrigger
	a ID
	a ()Lnet/minecraft/resources/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lcc$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/phys/Vec3D;I)V trigger
	b (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lnet/minecraft/advancements/critereon/CriterionInstanceAbstract; createInstance
net/minecraft/advancements/critereon/CriterionTriggerPlacedBlock net/minecraft/advancements/critereon/PlacedBlockTrigger
	a ID
	a ()Lnet/minecraft/resources/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/level/block/Block; deserializeBlock
	a (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lcm$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/item/ItemStack;)V trigger
	b (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lnet/minecraft/advancements/critereon/CriterionInstanceAbstract; createInstance
net/minecraft/advancements/critereon/CriterionTriggerPlayerGeneratesContainerLoot net/minecraft/advancements/critereon/LootTableTrigger
	a ID
	a ()Lnet/minecraft/resources/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lch$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/resources/MinecraftKey;)V trigger
	b (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lnet/minecraft/advancements/critereon/CriterionInstanceAbstract; createInstance
net/minecraft/advancements/critereon/CriterionTriggerPlayerHurtEntity net/minecraft/advancements/critereon/PlayerHurtEntityTrigger
	a ID
	a ()Lnet/minecraft/resources/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lcn$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/damagesource/DamageSource;FFZ)V trigger
	b (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lnet/minecraft/advancements/critereon/CriterionInstanceAbstract; createInstance
net/minecraft/advancements/critereon/CriterionTriggerPlayerInteractedWithEntity net/minecraft/advancements/critereon/PlayerInteractTrigger
	a ID
	a ()Lnet/minecraft/resources/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lco$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/Entity;)V trigger
	b (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lnet/minecraft/advancements/critereon/CriterionInstanceAbstract; createInstance
net/minecraft/advancements/critereon/CriterionTriggerProperties net/minecraft/advancements/critereon/StatePropertiesPredicate
	a ANY
	b properties
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/CriterionTriggerProperties; fromJson
	a (Ljava/lang/String;Lcom/google/gson/JsonElement;)Lcy$c; fromJson
	a (Lnet/minecraft/world/level/block/state/BlockStateList;Ljava/util/function/Consumer;)V checkState
	a (Lnet/minecraft/world/level/block/state/BlockStateList;Lnet/minecraft/world/level/block/state/IBlockDataHolder;)Z matches
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z matches
	a (Lnet/minecraft/world/level/material/Fluid;)Z matches
	b (Lcom/google/gson/JsonElement;)Ljava/lang/String; getStringOrNull
net/minecraft/advancements/critereon/CriterionTriggerRecipeUnlocked net/minecraft/advancements/critereon/RecipeUnlockedTrigger
	a ID
	a ()Lnet/minecraft/resources/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lcr$a; createInstance
	a (Lnet/minecraft/resources/MinecraftKey;)Lcr$a; unlocked
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/item/crafting/IRecipe;)V trigger
	b (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lnet/minecraft/advancements/critereon/CriterionInstanceAbstract; createInstance
net/minecraft/advancements/critereon/CriterionTriggerShotCrossbow net/minecraft/advancements/critereon/ShotCrossbowTrigger
	a ID
	a ()Lnet/minecraft/resources/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lct$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/item/ItemStack;)V trigger
	b (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lnet/minecraft/advancements/critereon/CriterionInstanceAbstract; createInstance
net/minecraft/advancements/critereon/CriterionTriggerSummonedEntity net/minecraft/advancements/critereon/SummonedEntityTrigger
	a ID
	a ()Lnet/minecraft/resources/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lcz$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/entity/Entity;)V trigger
	b (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lnet/minecraft/advancements/critereon/CriterionInstanceAbstract; createInstance
net/minecraft/advancements/critereon/CriterionTriggerTamedAnimal net/minecraft/advancements/critereon/TameAnimalTrigger
	a ID
	a ()Lnet/minecraft/resources/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Ldb$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/entity/animal/EntityAnimal;)V trigger
	b (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lnet/minecraft/advancements/critereon/CriterionInstanceAbstract; createInstance
net/minecraft/advancements/critereon/CriterionTriggerTargetHit net/minecraft/advancements/critereon/TargetBlockTrigger
	a ID
	a ()Lnet/minecraft/resources/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Ldc$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/Vec3D;I)V trigger
	b (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lnet/minecraft/advancements/critereon/CriterionInstanceAbstract; createInstance
net/minecraft/advancements/critereon/CriterionTriggerUsedEnderEye net/minecraft/advancements/critereon/UsedEnderEyeTrigger
	a ID
	a ()Lnet/minecraft/resources/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lde$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/core/BlockPosition;)V trigger
	b (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lnet/minecraft/advancements/critereon/CriterionInstanceAbstract; createInstance
net/minecraft/advancements/critereon/CriterionTriggerUsedTotem net/minecraft/advancements/critereon/UsedTotemTrigger
	a ID
	a ()Lnet/minecraft/resources/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Ldf$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/item/ItemStack;)V trigger
	b (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lnet/minecraft/advancements/critereon/CriterionInstanceAbstract; createInstance
net/minecraft/advancements/critereon/CriterionTriggerVillagerTrade net/minecraft/advancements/critereon/TradeTrigger
	a ID
	a ()Lnet/minecraft/resources/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Ldd$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/entity/npc/EntityVillagerAbstract;Lnet/minecraft/world/item/ItemStack;)V trigger
	b (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lnet/minecraft/advancements/critereon/CriterionInstanceAbstract; createInstance
net/minecraft/advancements/critereon/LootDeserializationContext net/minecraft/advancements/critereon/DeserializationContext
	a LOGGER
	b id
	c predicateManager
	d predicateGson
	a ()Lnet/minecraft/resources/MinecraftKey; getAdvancementId
	a (Lcom/google/gson/JsonArray;Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/parameters/LootContextParameterSet;)[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition; deserializeConditions
net/minecraft/advancements/critereon/LootSerializationContext net/minecraft/advancements/critereon/SerializationContext
	a INSTANCE
	b predicateGson
	a ([Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lcom/google/gson/JsonElement; serializeConditions
net/minecraft/commands/CommandDispatcher net/minecraft/commands/Commands
	a LEVEL_ALL
	b LEVEL_MODERATORS
	c LEVEL_GAMEMASTERS
	d LEVEL_ADMINS
	e LEVEL_OWNERS
	f LOGGER
	g dispatcher
	a ()Lcom/mojang/brigadier/CommandDispatcher; getDispatcher
	a (Lcom/mojang/brigadier/ParseResults;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; getParseException
	a (Lcom/mojang/brigadier/ParseResults;Ljava/lang/String;)I performCommand
	a (Lcom/mojang/brigadier/ParseResults;Ljava/util/function/UnaryOperator;)Lcom/mojang/brigadier/ParseResults; mapSource
	a (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/tree/CommandNode;Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Map;)V fillUsableCommands
	a (Lds$b;)Ljava/util/function/Predicate; createValidator
	a (Lhf$b;)Lnet/minecraft/commands/CommandBuildContext; createValidationContext
	a (Ljava/lang/String;)Lcom/mojang/brigadier/builder/LiteralArgumentBuilder; literal
	a (Ljava/lang/String;Lcom/mojang/brigadier/arguments/ArgumentType;)Lcom/mojang/brigadier/builder/RequiredArgumentBuilder; argument
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/lang/String;)I performPrefixedCommand
	a (Lnet/minecraft/server/level/EntityPlayer;)V sendCommands
	b ()V validate
net/minecraft/commands/CommandDispatcher$ServerType net/minecraft/commands/Commands$CommandSelection
	a ALL
	b DEDICATED
	c INTEGRATED
	d includeIntegrated
	e includeDedicated
	f $VALUES
	a ()[Lnet/minecraft/commands/CommandDispatcher$ServerType; $values
net/minecraft/commands/CommandException net/minecraft/commands/CommandRuntimeException
	a message
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getComponent
net/minecraft/commands/CommandExceptionProvider net/minecraft/commands/BrigadierExceptions
	A DISPATCHER_PARSE_EXCEPTION
	a DOUBLE_TOO_SMALL
	b DOUBLE_TOO_BIG
	c FLOAT_TOO_SMALL
	d FLOAT_TOO_BIG
	e INTEGER_TOO_SMALL
	f INTEGER_TOO_BIG
	g LONG_TOO_SMALL
	h LONG_TOO_BIG
	i LITERAL_INCORRECT
	j READER_EXPECTED_START_OF_QUOTE
	k READER_EXPECTED_END_OF_QUOTE
	l READER_INVALID_ESCAPE
	m READER_INVALID_BOOL
	n READER_INVALID_INT
	o READER_EXPECTED_INT
	p READER_INVALID_LONG
	q READER_EXPECTED_LONG
	r READER_INVALID_DOUBLE
	s READER_EXPECTED_DOUBLE
	t READER_INVALID_FLOAT
	u READER_EXPECTED_FLOAT
	v READER_EXPECTED_BOOL
	w READER_EXPECTED_SYMBOL
	x DISPATCHER_UNKNOWN_COMMAND
	y DISPATCHER_UNKNOWN_ARGUMENT
	z DISPATCHER_EXPECTED_ARGUMENT_SEPARATOR
net/minecraft/commands/CommandListenerWrapper net/minecraft/commands/CommandSourceStack
	a ERROR_NOT_PLAYER
	b ERROR_NOT_ENTITY
	c source
	d worldPosition
	e level
	f permissionLevel
	g textName
	h displayName
	i server
	j silent
	k entity
	l consumer
	m anchor
	n rotation
	o signingContext
	p chatMessageChainer
	a ()Lnet/minecraft/commands/CommandListenerWrapper; withSuppressedOutput
	a (I)Lnet/minecraft/commands/CommandListenerWrapper; withPermission
	a (Lcom/mojang/brigadier/ResultConsumer;)Lnet/minecraft/commands/CommandListenerWrapper; withCallback
	a (Lcom/mojang/brigadier/ResultConsumer;Ljava/util/function/BinaryOperator;)Lnet/minecraft/commands/CommandListenerWrapper; withCallback
	a (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/concurrent/CompletableFuture; customSuggestion
	a (Lcom/mojang/brigadier/context/CommandContext;ZI)V onCommandComplete
	a (Lnet/minecraft/commands/CommandSigningContext;)Lnet/minecraft/commands/CommandListenerWrapper; withSigningContext
	a (Lnet/minecraft/commands/ICommandListener;)Lnet/minecraft/commands/CommandListenerWrapper; withSource
	a (Lnet/minecraft/commands/arguments/ArgumentAnchor$Anchor;)Lnet/minecraft/commands/CommandListenerWrapper; withAnchor
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V sendSystemMessage
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Z)V sendSuccess
	a (Lnet/minecraft/network/chat/OutgoingChatMessage;ZLtf$a;)V sendChatMessage
	a (Lnet/minecraft/resources/ResourceKey;Ldt$a;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/concurrent/CompletableFuture; suggestRegistryElements
	a (Lnet/minecraft/server/level/EntityPlayer;)Z shouldFilterMessageTo
	a (Lnet/minecraft/server/level/WorldServer;)Lnet/minecraft/commands/CommandListenerWrapper; withLevel
	a (Lnet/minecraft/util/TaskChainer;)Lnet/minecraft/commands/CommandListenerWrapper; withChatMessageChainer
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/commands/CommandListenerWrapper; withEntity
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/commands/arguments/ArgumentAnchor$Anchor;)Lnet/minecraft/commands/CommandListenerWrapper; facing
	a (Lnet/minecraft/world/phys/Vec2F;)Lnet/minecraft/commands/CommandListenerWrapper; withRotation
	a (Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/commands/CommandListenerWrapper; withPosition
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; getDisplayName
	b (I)Lnet/minecraft/commands/CommandListenerWrapper; withMaximumPermission
	b (Lnet/minecraft/network/chat/IChatBaseComponent;)V sendFailure
	b (Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/commands/CommandListenerWrapper; facing
	c ()Ljava/lang/String; getTextName
	c (I)Z hasPermission
	c (Lnet/minecraft/network/chat/IChatBaseComponent;)V broadcastToAdmins
	d ()Lnet/minecraft/world/phys/Vec3D; getPosition
	e ()Lnet/minecraft/server/level/WorldServer; getLevel
	f ()Lnet/minecraft/world/entity/Entity; getEntity
	g ()Lnet/minecraft/world/entity/Entity; getEntityOrException
	h ()Lnet/minecraft/server/level/EntityPlayer; getPlayerOrException
	i ()Lnet/minecraft/server/level/EntityPlayer; getPlayer
	j ()Z isPlayer
	k ()Lnet/minecraft/world/phys/Vec2F; getRotation
	l ()Lnet/minecraft/server/MinecraftServer; getServer
	m ()Lnet/minecraft/commands/arguments/ArgumentAnchor$Anchor; getAnchor
	n ()Lnet/minecraft/commands/CommandSigningContext; getSigningContext
	o ()Lnet/minecraft/util/TaskChainer; getChatMessageChainer
	p ()Ljava/util/Collection; getOnlinePlayerNames
	q ()Ljava/util/Collection; getAllTeams
	r ()Ljava/util/stream/Stream; getAvailableSounds
	s ()Ljava/util/stream/Stream; getRecipeNames
	t ()Ljava/util/Set; levels
	u ()Lnet/minecraft/core/IRegistryCustom; registryAccess
	v ()Lnet/minecraft/world/flag/FeatureFlagSet; enabledFeatures
net/minecraft/commands/CustomFunction net/minecraft/commands/CommandFunction
	a entries
	b id
	a ()Lnet/minecraft/resources/MinecraftKey; getId
	a (Lnet/minecraft/resources/MinecraftKey;Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/List;)Lnet/minecraft/commands/CustomFunction; fromLines
	b ()[Ldm$c; getEntries
net/minecraft/commands/ICommandListener net/minecraft/commands/CommandSource
	a NULL
	M_ ()Z shouldInformAdmins
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V sendSystemMessage
	d_ ()Z acceptsSuccess
	e_ ()Z alwaysAccepts
	j_ ()Z acceptsFailure
net/minecraft/commands/ICompletionProvider net/minecraft/commands/SharedSuggestionProvider
	a (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/concurrent/CompletableFuture; customSuggestion
	a (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestResource
	a (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; suggestResource
	a (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; suggestResource
	a (Ljava/lang/Iterable;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Consumer;)V filterResources
	a (Ljava/lang/Iterable;Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Consumer;)V filterResources
	a (Ljava/lang/String;Ljava/lang/String;)Z matchesSubStr
	a (Ljava/lang/String;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Predicate;)Ljava/util/concurrent/CompletableFuture; suggestCoordinates
	a (Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestResource
	a (Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; suggestResource
	a (Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; suggestResource
	a (Lnet/minecraft/core/IRegistry;Ldt$a;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V suggestRegistryElements
	a (Lnet/minecraft/resources/ResourceKey;Ldt$a;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/concurrent/CompletableFuture; suggestRegistryElements
	a ([Ljava/lang/String;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggest
	b (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggest
	b (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; suggest
	b (Ljava/lang/String;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Predicate;)Ljava/util/concurrent/CompletableFuture; suggest2DCoordinates
	b (Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggest
	c (I)Z hasPermission
	p ()Ljava/util/Collection; getOnlinePlayerNames
	q ()Ljava/util/Collection; getAllTeams
	r ()Ljava/util/stream/Stream; getAvailableSounds
	s ()Ljava/util/stream/Stream; getRecipeNames
	t ()Ljava/util/Set; levels
	u ()Lnet/minecraft/core/IRegistryCustom; registryAccess
	v ()Lnet/minecraft/world/flag/FeatureFlagSet; enabledFeatures
	w ()Ljava/util/Collection; getCustomTabSugggestions
	x ()Ljava/util/Collection; getSelectedEntities
	y ()Ljava/util/Collection; getRelevantCoordinates
	z ()Ljava/util/Collection; getAbsoluteCoordinates
net/minecraft/commands/arguments/ArgumentAnchor net/minecraft/commands/arguments/EntityAnchorArgument
	a EXAMPLES
	b ERROR_INVALID
	a ()Lnet/minecraft/commands/arguments/ArgumentAnchor; anchor
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/ArgumentAnchor$Anchor; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/commands/arguments/ArgumentAnchor$Anchor; getAnchor
net/minecraft/commands/arguments/ArgumentAnchor$Anchor net/minecraft/commands/arguments/EntityAnchorArgument$Anchor
	a FEET
	b EYES
	c BY_NAME
	d name
	e transform
	f $VALUES
	a ()[Lnet/minecraft/commands/arguments/ArgumentAnchor$Anchor; $values
	a (Ljava/lang/String;)Lnet/minecraft/commands/arguments/ArgumentAnchor$Anchor; getByName
	a (Lnet/minecraft/commands/CommandListenerWrapper;)Lnet/minecraft/world/phys/Vec3D; apply
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/phys/Vec3D; apply
net/minecraft/commands/arguments/ArgumentAngle net/minecraft/commands/arguments/AngleArgument
	a ERROR_NOT_COMPLETE
	b ERROR_INVALID_ANGLE
	c EXAMPLES
	a ()Lnet/minecraft/commands/arguments/ArgumentAngle; angle
	a (Lcom/mojang/brigadier/StringReader;)Ldu$a; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)F getAngle
net/minecraft/commands/arguments/ArgumentChat net/minecraft/commands/arguments/MessageArgument
	a EXAMPLES
	a ()Lnet/minecraft/commands/arguments/ArgumentChat; message
	a (Lcom/mojang/brigadier/StringReader;)Lef$a; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/network/chat/IChatBaseComponent; getMessage
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Ljava/util/function/Consumer;)V resolveChatMessage
	a (Ljava/util/function/Consumer;Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/network/chat/PlayerChatMessage;)V resolveSignedMessage
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/network/chat/PlayerChatMessage;)Ljava/util/concurrent/CompletableFuture; filterPlainText
	b (Ljava/util/function/Consumer;Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/network/chat/PlayerChatMessage;)V resolveDisguisedMessage
net/minecraft/commands/arguments/ArgumentChatComponent net/minecraft/commands/arguments/ComponentArgument
	a ERROR_INVALID_JSON
	b EXAMPLES
	a ()Lnet/minecraft/commands/arguments/ArgumentChatComponent; textComponent
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/network/chat/IChatBaseComponent; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/network/chat/IChatBaseComponent; getComponent
net/minecraft/commands/arguments/ArgumentChatFormat net/minecraft/commands/arguments/ColorArgument
	a ERROR_INVALID_VALUE
	b EXAMPLES
	a ()Lnet/minecraft/commands/arguments/ArgumentChatFormat; color
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/EnumChatFormat; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/EnumChatFormat; getColor
net/minecraft/commands/arguments/ArgumentCriterionValue net/minecraft/commands/arguments/RangeArgument
	a ()Lem$b; intRange
	b ()Lem$a; floatRange
net/minecraft/commands/arguments/ArgumentDimension net/minecraft/commands/arguments/DimensionArgument
	a EXAMPLES
	b ERROR_INVALID_VALUE
	a ()Lnet/minecraft/commands/arguments/ArgumentDimension; dimension
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/resources/MinecraftKey; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/level/WorldServer; getDimension
net/minecraft/commands/arguments/ArgumentEntity net/minecraft/commands/arguments/EntityArgument
	a ERROR_NOT_SINGLE_ENTITY
	b ERROR_NOT_SINGLE_PLAYER
	c ERROR_ONLY_PLAYERS_ALLOWED
	d NO_ENTITIES_FOUND
	e NO_PLAYERS_FOUND
	f ERROR_SELECTORS_NOT_ALLOWED
	g EXAMPLES
	h single
	i playersOnly
	a ()Lnet/minecraft/commands/arguments/ArgumentEntity; entity
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/selector/EntitySelector; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/entity/Entity; getEntity
	b ()Lnet/minecraft/commands/arguments/ArgumentEntity; entities
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; getEntities
	c ()Lnet/minecraft/commands/arguments/ArgumentEntity; player
	c (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; getOptionalEntities
	d ()Lnet/minecraft/commands/arguments/ArgumentEntity; players
	d (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; getOptionalPlayers
	e (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/level/EntityPlayer; getPlayer
	f (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; getPlayers
net/minecraft/commands/arguments/ArgumentEntity$Info net/minecraft/commands/arguments/EntityArgument$Info
	a FLAG_SINGLE
	b FLAG_PLAYERS_ONLY
	a (Lcom/mojang/brigadier/arguments/ArgumentType;)Lgf$a; unpack
	a (Lgf$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lgf$a;Lnet/minecraft/network/PacketDataSerializer;)V serializeToNetwork
	a (Lnet/minecraft/commands/arguments/ArgumentEntity$Info$Template;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lnet/minecraft/commands/arguments/ArgumentEntity$Info$Template;Lnet/minecraft/network/PacketDataSerializer;)V serializeToNetwork
	a (Lnet/minecraft/commands/arguments/ArgumentEntity;)Lnet/minecraft/commands/arguments/ArgumentEntity$Info$Template; unpack
	a (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/commands/arguments/ArgumentEntity$Info$Template; deserializeFromNetwork
	b (Lnet/minecraft/network/PacketDataSerializer;)Lgf$a; deserializeFromNetwork
net/minecraft/commands/arguments/ArgumentEntity$Info$Template net/minecraft/commands/arguments/EntityArgument$Info$Template
	b single
	c playersOnly
	a ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; type
	a (Lnet/minecraft/commands/CommandBuildContext;)Lnet/minecraft/commands/arguments/ArgumentEntity; instantiate
	b (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; instantiate
net/minecraft/commands/arguments/ArgumentInventorySlot net/minecraft/commands/arguments/SlotArgument
	a EXAMPLES
	b ERROR_UNKNOWN_SLOT
	c SLOTS
	a ()Lnet/minecraft/commands/arguments/ArgumentInventorySlot; slot
	a (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Integer; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)I getSlot
net/minecraft/commands/arguments/ArgumentMathOperation net/minecraft/commands/arguments/OperationArgument
	a EXAMPLES
	b ERROR_INVALID_OPERATION
	c ERROR_DIVIDE_BY_ZERO
	a ()Lnet/minecraft/commands/arguments/ArgumentMathOperation; operation
	a (Lcom/mojang/brigadier/StringReader;)Lek$a; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lek$a; getOperation
	a (Ljava/lang/String;)Lek$a; getOperation
	b (Ljava/lang/String;)Lek$b; getSimpleOperation
net/minecraft/commands/arguments/ArgumentMinecraftKeyRegistered net/minecraft/commands/arguments/ResourceLocationArgument
	a EXAMPLES
	b ERROR_UNKNOWN_ADVANCEMENT
	c ERROR_UNKNOWN_RECIPE
	d ERROR_UNKNOWN_PREDICATE
	e ERROR_UNKNOWN_ITEM_MODIFIER
	a ()Lnet/minecraft/commands/arguments/ArgumentMinecraftKeyRegistered; id
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/resources/MinecraftKey; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/advancements/Advancement; getAdvancement
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/item/crafting/IRecipe; getRecipe
	c (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition; getPredicate
	d (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; getItemModifier
	e (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/resources/MinecraftKey; getId
net/minecraft/commands/arguments/ArgumentNBTBase net/minecraft/commands/arguments/NbtTagArgument
	a EXAMPLES
	a ()Lnet/minecraft/commands/arguments/ArgumentNBTBase; nbtTag
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/nbt/NBTBase; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/nbt/NBTBase; getNbtTag
net/minecraft/commands/arguments/ArgumentNBTKey net/minecraft/commands/arguments/NbtPathArgument
	a ERROR_INVALID_NODE
	b ERROR_DATA_TOO_DEEP
	c ERROR_NOTHING_FOUND
	d EXAMPLES
	e ERROR_EXPECTED_LIST
	f ERROR_INVALID_INDEX
	g INDEX_MATCH_START
	h INDEX_MATCH_END
	i KEY_MATCH_START
	j KEY_MATCH_END
	k QUOTED_KEY_START
	a ()Lnet/minecraft/commands/arguments/ArgumentNBTKey; nbtPath
	a (C)Z isAllowedInUnquotedName
	a (Lcom/mojang/brigadier/StringReader;)Leg$g; parse
	a (Lcom/mojang/brigadier/StringReader;Ljava/lang/String;)Leg$h; readObjectNode
	a (Lcom/mojang/brigadier/StringReader;Z)Leg$h; parseNode
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Leg$g; getPath
	a (Lnet/minecraft/nbt/NBTTagCompound;)Ljava/util/function/Predicate; createTagPredicate
	b (Lcom/mojang/brigadier/StringReader;)Ljava/lang/String; readUnquotedName
net/minecraft/commands/arguments/ArgumentNBTTag net/minecraft/commands/arguments/CompoundTagArgument
	a EXAMPLES
	a ()Lnet/minecraft/commands/arguments/ArgumentNBTTag; compoundTag
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/nbt/NBTTagCompound; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/nbt/NBTTagCompound; getCompoundTag
net/minecraft/commands/arguments/ArgumentParticle net/minecraft/commands/arguments/ParticleArgument
	a ERROR_UNKNOWN_PARTICLE
	b EXAMPLES
	c particles
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/core/particles/ParticleParam; parse
	a (Lcom/mojang/brigadier/StringReader;Lnet/minecraft/core/HolderLookup;)Lnet/minecraft/core/particles/ParticleParam; readParticle
	a (Lcom/mojang/brigadier/StringReader;Lnet/minecraft/core/particles/Particle;)Lnet/minecraft/core/particles/ParticleParam; readParticle
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/core/particles/ParticleParam; getParticle
	a (Lnet/minecraft/commands/CommandBuildContext;)Lnet/minecraft/commands/arguments/ArgumentParticle; particle
	b (Lcom/mojang/brigadier/StringReader;Lnet/minecraft/core/HolderLookup;)Lnet/minecraft/core/particles/Particle; readParticleType
net/minecraft/commands/arguments/ArgumentProfile net/minecraft/commands/arguments/GameProfileArgument
	a ERROR_UNKNOWN_PLAYER
	b EXAMPLES
	a ()Lnet/minecraft/commands/arguments/ArgumentProfile; gameProfile
	a (Lcom/mojang/brigadier/StringReader;)Led$a; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; getGameProfiles
net/minecraft/commands/arguments/ArgumentScoreboardCriteria net/minecraft/commands/arguments/ObjectiveCriteriaArgument
	a ERROR_INVALID_VALUE
	b EXAMPLES
	a ()Lnet/minecraft/commands/arguments/ArgumentScoreboardCriteria; criteria
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/world/scores/criteria/IScoreboardCriteria; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/scores/criteria/IScoreboardCriteria; getCriteria
	a (Lnet/minecraft/stats/StatisticWrapper;Ljava/lang/Object;)Ljava/lang/String; getName
net/minecraft/commands/arguments/ArgumentScoreboardObjective net/minecraft/commands/arguments/ObjectiveArgument
	a EXAMPLES
	b ERROR_OBJECTIVE_NOT_FOUND
	c ERROR_OBJECTIVE_READ_ONLY
	a ()Lnet/minecraft/commands/arguments/ArgumentScoreboardObjective; objective
	a (Lcom/mojang/brigadier/StringReader;)Ljava/lang/String; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/scores/ScoreboardObjective; getObjective
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/scores/ScoreboardObjective; getWritableObjective
net/minecraft/commands/arguments/ArgumentScoreboardSlot net/minecraft/commands/arguments/ScoreboardSlotArgument
	a ERROR_INVALID_VALUE
	b EXAMPLES
	a ()Lnet/minecraft/commands/arguments/ArgumentScoreboardSlot; displaySlot
	a (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Integer; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)I getDisplaySlot
net/minecraft/commands/arguments/ArgumentScoreboardTeam net/minecraft/commands/arguments/TeamArgument
	a EXAMPLES
	b ERROR_TEAM_NOT_FOUND
	a ()Lnet/minecraft/commands/arguments/ArgumentScoreboardTeam; team
	a (Lcom/mojang/brigadier/StringReader;)Ljava/lang/String; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/scores/ScoreboardTeam; getTeam
net/minecraft/commands/arguments/ArgumentScoreholder net/minecraft/commands/arguments/ScoreHolderArgument
	a SUGGEST_SCORE_HOLDERS
	b EXAMPLES
	c ERROR_NO_RESULTS
	d multiple
	a ()Lnet/minecraft/commands/arguments/ArgumentScoreholder; scoreHolder
	a (Lcom/mojang/brigadier/StringReader;)Les$b; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/lang/String; getName
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Ljava/util/function/Supplier;)Ljava/util/Collection; getNames
	b ()Lnet/minecraft/commands/arguments/ArgumentScoreholder; scoreHolders
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; getNames
	c (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; getNamesWithDefaultWildcard
net/minecraft/commands/arguments/ArgumentTime net/minecraft/commands/arguments/TimeArgument
	a EXAMPLES
	b ERROR_INVALID_UNIT
	c ERROR_TICK_COUNT_TOO_LOW
	d UNITS
	e minimum
	a ()Lnet/minecraft/commands/arguments/ArgumentTime; time
	a (I)Lnet/minecraft/commands/arguments/ArgumentTime; time
	a (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Integer; parse
net/minecraft/commands/arguments/ArgumentUUID net/minecraft/commands/arguments/UuidArgument
	a ERROR_INVALID_UUID
	b EXAMPLES
	c ALLOWED_CHARACTERS
	a ()Lnet/minecraft/commands/arguments/ArgumentUUID; uuid
	a (Lcom/mojang/brigadier/StringReader;)Ljava/util/UUID; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/UUID; getUuid
net/minecraft/commands/arguments/blocks/ArgumentBlock net/minecraft/commands/arguments/blocks/BlockStateParser
	A suggestions
	a ERROR_NO_TAGS_ALLOWED
	b ERROR_UNKNOWN_BLOCK
	c ERROR_UNKNOWN_PROPERTY
	d ERROR_DUPLICATE_PROPERTY
	e ERROR_INVALID_VALUE
	f ERROR_EXPECTED_VALUE
	g ERROR_EXPECTED_END_OF_PROPERTIES
	h ERROR_UNKNOWN_TAG
	i SYNTAX_START_PROPERTIES
	j SYNTAX_START_NBT
	k SYNTAX_END_PROPERTIES
	l SYNTAX_EQUALS
	m SYNTAX_PROPERTY_SEPARATOR
	n SYNTAX_TAG
	o SUGGEST_NOTHING
	p blocks
	q reader
	r forTesting
	s allowNbt
	t properties
	u vagueProperties
	v id
	w definition
	x state
	y nbt
	z tag
	a ()V parse
	a (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestPropertyNameOrEnd
	a (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; suggestVaguePropertyValue
	a (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/world/level/block/state/properties/IBlockState;)Lcom/mojang/brigadier/suggestion/SuggestionsBuilder; addSuggestions
	a (Ljava/lang/StringBuilder;Lnet/minecraft/world/level/block/state/properties/IBlockState;Ljava/lang/Comparable;)V appendProperty
	a (Lnet/minecraft/core/HolderLookup;Lcom/mojang/brigadier/StringReader;Z)Lff$a; parseForBlock
	a (Lnet/minecraft/core/HolderLookup;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;ZZ)Ljava/util/concurrent/CompletableFuture; fillSuggestions
	a (Lnet/minecraft/core/HolderLookup;Ljava/lang/String;Z)Lff$a; parseForBlock
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Ljava/lang/String; serialize
	a (Lnet/minecraft/world/level/block/state/properties/IBlockState;Ljava/lang/String;I)V setValue
	b ()Z hasBlockEntity
	b (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestVaguePropertyNameOrEnd
	b (Lnet/minecraft/core/HolderLookup;Lcom/mojang/brigadier/StringReader;Z)Lcom/mojang/datafixers/util/Either; parseForTesting
	b (Lnet/minecraft/core/HolderLookup;Ljava/lang/String;Z)Lcom/mojang/datafixers/util/Either; parseForTesting
	c ()V readBlock
	c (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestPropertyName
	d ()V readTag
	d (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestVaguePropertyName
	e ()V readProperties
	e (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestOpenNbt
	f ()V readVagueProperties
	f (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestEquals
	g ()V readNbt
	g (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestNextPropertyOrEnd
	h (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestOpenVaguePropertiesOrNbt
	i (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestOpenPropertiesOrNbt
	j (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestTag
	k (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestItem
	l (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestBlockIdOrTag
net/minecraft/commands/arguments/blocks/ArgumentBlockPredicate net/minecraft/commands/arguments/blocks/BlockPredicateArgument
	a EXAMPLES
	b blocks
	a (Lcom/mojang/brigadier/StringReader;)Lfd$b; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/function/Predicate; getBlockPredicate
	a (Lnet/minecraft/commands/CommandBuildContext;)Lnet/minecraft/commands/arguments/blocks/ArgumentBlockPredicate; blockPredicate
	a (Lnet/minecraft/core/HolderLookup;Lcom/mojang/brigadier/StringReader;)Lfd$b; parse
net/minecraft/commands/arguments/blocks/ArgumentTile net/minecraft/commands/arguments/blocks/BlockStateArgument
	a EXAMPLES
	b blocks
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/blocks/ArgumentTileLocation; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/commands/arguments/blocks/ArgumentTileLocation; getBlock
	a (Lnet/minecraft/commands/CommandBuildContext;)Lnet/minecraft/commands/arguments/blocks/ArgumentTile; block
net/minecraft/commands/arguments/blocks/ArgumentTileLocation net/minecraft/commands/arguments/blocks/BlockInput
	a state
	b properties
	c tag
	a ()Lnet/minecraft/world/level/block/state/IBlockData; getState
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;)Z test
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;I)Z place
	a (Lnet/minecraft/world/level/block/state/pattern/ShapeDetectorBlock;)Z test
	b ()Ljava/util/Set; getDefinedProperties
net/minecraft/commands/arguments/coordinates/ArgumentParserPosition net/minecraft/commands/arguments/coordinates/WorldCoordinate
	a ERROR_EXPECTED_DOUBLE
	b ERROR_EXPECTED_INT
	c PREFIX_RELATIVE
	d relative
	e value
	a ()Z isRelative
	a (D)D get
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/ArgumentParserPosition; parseInt
	a (Lcom/mojang/brigadier/StringReader;Z)Lnet/minecraft/commands/arguments/coordinates/ArgumentParserPosition; parseDouble
	b (Lcom/mojang/brigadier/StringReader;)Z isRelative
net/minecraft/commands/arguments/coordinates/ArgumentPosition net/minecraft/commands/arguments/coordinates/BlockPosArgument
	a ERROR_NOT_LOADED
	b ERROR_OUT_OF_WORLD
	c ERROR_OUT_OF_BOUNDS
	d EXAMPLES
	a ()Lnet/minecraft/commands/arguments/coordinates/ArgumentPosition; blockPos
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/IVectorPosition; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/core/BlockPosition; getLoadedBlockPos
	a (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/level/WorldServer;Ljava/lang/String;)Lnet/minecraft/core/BlockPosition; getLoadedBlockPos
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/core/BlockPosition; getBlockPos
	c (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/core/BlockPosition; getSpawnablePos
net/minecraft/commands/arguments/coordinates/ArgumentRotation net/minecraft/commands/arguments/coordinates/RotationArgument
	a ERROR_NOT_COMPLETE
	b EXAMPLES
	a ()Lnet/minecraft/commands/arguments/coordinates/ArgumentRotation; rotation
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/IVectorPosition; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/commands/arguments/coordinates/IVectorPosition; getRotation
net/minecraft/commands/arguments/coordinates/ArgumentRotationAxis net/minecraft/commands/arguments/coordinates/SwizzleArgument
	a EXAMPLES
	b ERROR_INVALID
	a ()Lnet/minecraft/commands/arguments/coordinates/ArgumentRotationAxis; swizzle
	a (Lcom/mojang/brigadier/StringReader;)Ljava/util/EnumSet; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/EnumSet; getSwizzle
net/minecraft/commands/arguments/coordinates/ArgumentVec2 net/minecraft/commands/arguments/coordinates/Vec2Argument
	a ERROR_NOT_COMPLETE
	b EXAMPLES
	c centerCorrect
	a ()Lnet/minecraft/commands/arguments/coordinates/ArgumentVec2; vec2
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/IVectorPosition; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/phys/Vec2F; getVec2
	a (Z)Lnet/minecraft/commands/arguments/coordinates/ArgumentVec2; vec2
net/minecraft/commands/arguments/coordinates/ArgumentVec2I net/minecraft/commands/arguments/coordinates/ColumnPosArgument
	a ERROR_NOT_COMPLETE
	b EXAMPLES
	a ()Lnet/minecraft/commands/arguments/coordinates/ArgumentVec2I; columnPos
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/IVectorPosition; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/level/BlockPosition2D; getColumnPos
net/minecraft/commands/arguments/coordinates/ArgumentVec3 net/minecraft/commands/arguments/coordinates/Vec3Argument
	a ERROR_NOT_COMPLETE
	b ERROR_MIXED_TYPE
	c EXAMPLES
	d centerCorrect
	a ()Lnet/minecraft/commands/arguments/coordinates/ArgumentVec3; vec3
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/IVectorPosition; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/phys/Vec3D; getVec3
	a (Z)Lnet/minecraft/commands/arguments/coordinates/ArgumentVec3; vec3
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/commands/arguments/coordinates/IVectorPosition; getCoordinates
net/minecraft/commands/arguments/coordinates/ArgumentVectorPosition net/minecraft/commands/arguments/coordinates/LocalCoordinates
	a PREFIX_LOCAL_COORDINATE
	b left
	c up
	d forwards
	a ()Z isXRelative
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/ArgumentVectorPosition; parse
	a (Lcom/mojang/brigadier/StringReader;I)D readDouble
	a (Lnet/minecraft/commands/CommandListenerWrapper;)Lnet/minecraft/world/phys/Vec3D; getPosition
	b ()Z isYRelative
	b (Lnet/minecraft/commands/CommandListenerWrapper;)Lnet/minecraft/world/phys/Vec2F; getRotation
	c ()Z isZRelative
net/minecraft/commands/arguments/coordinates/IVectorPosition net/minecraft/commands/arguments/coordinates/Coordinates
	a ()Z isXRelative
	a (Lnet/minecraft/commands/CommandListenerWrapper;)Lnet/minecraft/world/phys/Vec3D; getPosition
	b ()Z isYRelative
	b (Lnet/minecraft/commands/CommandListenerWrapper;)Lnet/minecraft/world/phys/Vec2F; getRotation
	c ()Z isZRelative
	c (Lnet/minecraft/commands/CommandListenerWrapper;)Lnet/minecraft/core/BlockPosition; getBlockPos
net/minecraft/commands/arguments/coordinates/VectorPosition net/minecraft/commands/arguments/coordinates/WorldCoordinates
	a x
	b y
	c z
	a ()Z isXRelative
	a (DDD)Lnet/minecraft/commands/arguments/coordinates/VectorPosition; absolute
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/VectorPosition; parseInt
	a (Lcom/mojang/brigadier/StringReader;Z)Lnet/minecraft/commands/arguments/coordinates/VectorPosition; parseDouble
	a (Lnet/minecraft/commands/CommandListenerWrapper;)Lnet/minecraft/world/phys/Vec3D; getPosition
	a (Lnet/minecraft/world/phys/Vec2F;)Lnet/minecraft/commands/arguments/coordinates/VectorPosition; absolute
	b ()Z isYRelative
	b (Lnet/minecraft/commands/CommandListenerWrapper;)Lnet/minecraft/world/phys/Vec2F; getRotation
	c ()Z isZRelative
	d ()Lnet/minecraft/commands/arguments/coordinates/VectorPosition; current
net/minecraft/commands/arguments/item/ArgumentItemPredicate net/minecraft/commands/arguments/item/ItemPredicateArgument
	a EXAMPLES
	b items
	a (Lcom/mojang/brigadier/StringReader;)Lfw$a; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/function/Predicate; getItemPredicate
	a (Ljava/util/function/Predicate;Lnet/minecraft/nbt/NBTTagCompound;)Lfw$a; createResult
	a (Lnet/minecraft/commands/CommandBuildContext;)Lnet/minecraft/commands/arguments/item/ArgumentItemPredicate; itemPredicate
net/minecraft/commands/arguments/item/ArgumentItemStack net/minecraft/commands/arguments/item/ItemArgument
	a EXAMPLES
	b items
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/item/ArgumentPredicateItemStack; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/commands/arguments/item/ArgumentPredicateItemStack; getItem
	a (Lnet/minecraft/commands/CommandBuildContext;)Lnet/minecraft/commands/arguments/item/ArgumentItemStack; item
net/minecraft/commands/arguments/item/ArgumentParserItemStack net/minecraft/commands/arguments/item/ItemParser
	a ERROR_NO_TAGS_ALLOWED
	b ERROR_UNKNOWN_ITEM
	c ERROR_UNKNOWN_TAG
	d SYNTAX_START_NBT
	e SYNTAX_TAG
	f SUGGEST_NOTHING
	g items
	h reader
	i allowTags
	j result
	k nbt
	l suggestions
	a ()V readItem
	a (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestOpenNbt
	a (Lnet/minecraft/core/HolderLookup;Lcom/mojang/brigadier/StringReader;)Lfv$a; parseForItem
	a (Lnet/minecraft/core/HolderLookup;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Z)Ljava/util/concurrent/CompletableFuture; fillSuggestions
	b ()V readTag
	b (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestTag
	b (Lnet/minecraft/core/HolderLookup;Lcom/mojang/brigadier/StringReader;)Lcom/mojang/datafixers/util/Either; parseForTesting
	c ()V readNbt
	c (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestItem
	d ()V parse
	d (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestItemIdOrTag
net/minecraft/commands/arguments/item/ArgumentPredicateItemStack net/minecraft/commands/arguments/item/ItemInput
	a ERROR_STACK_TOO_BIG
	b item
	c tag
	a ()Lnet/minecraft/world/item/Item; getItem
	a (IZ)Lnet/minecraft/world/item/ItemStack; createItemStack
	a (Lnet/minecraft/world/item/ItemStack;)Z test
	b ()Ljava/lang/String; serialize
	c ()Ljava/lang/String; getItemName
net/minecraft/commands/arguments/item/ArgumentTag net/minecraft/commands/arguments/item/FunctionArgument
	a EXAMPLES
	b ERROR_UNKNOWN_TAG
	c ERROR_UNKNOWN_FUNCTION
	a ()Lnet/minecraft/commands/arguments/item/ArgumentTag; functions
	a (Lcom/mojang/brigadier/StringReader;)Lfs$a; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; getFunctions
	a (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/commands/CustomFunction; getFunction
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair; getFunctionOrTag
	b (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/resources/MinecraftKey;)Ljava/util/Collection; getFunctionTag
net/minecraft/commands/arguments/selector/ArgumentParserSelector net/minecraft/commands/arguments/selector/EntitySelectorParser
	A worldLimited
	B distance
	C level
	D x
	E y
	F z
	G deltaX
	H deltaY
	I deltaZ
	J rotX
	K rotY
	L predicate
	M order
	N currentEntity
	O playerName
	P startPosition
	Q entityUUID
	R suggestions
	S hasNameEquals
	T hasNameNotEquals
	U isLimited
	V isSorted
	W hasGamemodeEquals
	X hasGamemodeNotEquals
	Y hasTeamEquals
	Z hasTeamNotEquals
	a SYNTAX_SELECTOR_START
	aa type
	ab typeInverse
	ac hasScores
	ad hasAdvancements
	ae usesSelectors
	b SYNTAX_OPTIONS_KEY_VALUE_SEPARATOR
	c SYNTAX_NOT
	d SYNTAX_TAG
	e ERROR_INVALID_NAME_OR_UUID
	f ERROR_UNKNOWN_SELECTOR_TYPE
	g ERROR_SELECTORS_NOT_ALLOWED
	h ERROR_MISSING_SELECTOR_TYPE
	i ERROR_EXPECTED_END_OF_OPTIONS
	j ERROR_EXPECTED_OPTION_VALUE
	k ORDER_NEAREST
	l ORDER_FURTHEST
	m ORDER_RANDOM
	n SUGGEST_NOTHING
	o SYNTAX_OPTIONS_START
	p SYNTAX_OPTIONS_END
	q SYNTAX_OPTIONS_SEPARATOR
	r SELECTOR_NEAREST_PLAYER
	s SELECTOR_ALL_PLAYERS
	t SELECTOR_RANDOM_PLAYERS
	u SELECTOR_CURRENT_ENTITY
	v SELECTOR_ALL_ENTITIES
	w reader
	x allowSelectors
	y maxResults
	z includesEntities
	A ()Z hasGamemodeNotEquals
	B ()Z hasTeamEquals
	C ()Z hasTeamNotEquals
	D ()V setTypeLimitedInversely
	E ()Z isTypeLimited
	F ()Z isTypeLimitedInversely
	G ()Z hasScores
	H ()Z hasAdvancements
	I ()V finalizePredicates
	a ()Lnet/minecraft/commands/arguments/selector/EntitySelector; getSelector
	a (D)V setX
	a (DDD)Lnet/minecraft/world/phys/AxisAlignedBB; createAabb
	a (I)V setMaxResults
	a (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V fillSelectorSuggestions
	a (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; fillSuggestions
	a (Ljava/util/function/BiConsumer;)V setOrder
	a (Ljava/util/function/BiFunction;)V setSuggestions
	a (Ljava/util/function/Predicate;)V addPredicate
	a (Lnet/minecraft/advancements/critereon/CriterionConditionRange;)V setRotX
	a (Lnet/minecraft/advancements/critereon/CriterionConditionRange;Ljava/util/function/ToDoubleFunction;)Ljava/util/function/Predicate; createRotationPredicate
	a (Lnet/minecraft/advancements/critereon/CriterionConditionValue$DoubleRange;)V setDistance
	a (Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange;)V setLevel
	a (Lnet/minecraft/world/entity/EntityTypes;)V limitToType
	a (Z)V setIncludesEntities
	b ()V parseSelector
	b (D)V setY
	b (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestNameOrSelector
	b (Lnet/minecraft/advancements/critereon/CriterionConditionRange;)V setRotY
	b (Z)V setHasNameEquals
	c ()V parseNameOrUUID
	c (D)V setZ
	c (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestName
	c (Z)V setHasNameNotEquals
	d ()V parseOptions
	d (D)V setDeltaX
	d (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestSelector
	d (Z)V setLimited
	e ()Z shouldInvertValue
	e (D)V setDeltaY
	e (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestOpenOptions
	e (Z)V setSorted
	f ()Z isTag
	f (D)V setDeltaZ
	f (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestOptionsKeyOrClose
	f (Z)V setHasGamemodeEquals
	g ()Lcom/mojang/brigadier/StringReader; getReader
	g (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestOptionsKey
	g (Z)V setHasGamemodeNotEquals
	h ()V setWorldLimited
	h (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestOptionsNextOrClose
	h (Z)V setHasTeamEquals
	i ()Lnet/minecraft/advancements/critereon/CriterionConditionValue$DoubleRange; getDistance
	i (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestEquals
	i (Z)V setHasTeamNotEquals
	j ()Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange; getLevel
	j (Z)V setHasScores
	k ()Lnet/minecraft/advancements/critereon/CriterionConditionRange; getRotX
	k (Z)V setHasAdvancements
	l ()Lnet/minecraft/advancements/critereon/CriterionConditionRange; getRotY
	m ()Ljava/lang/Double; getX
	n ()Ljava/lang/Double; getY
	o ()Ljava/lang/Double; getZ
	p ()Ljava/lang/Double; getDeltaX
	q ()Ljava/lang/Double; getDeltaY
	r ()Ljava/lang/Double; getDeltaZ
	s ()Ljava/util/function/BiConsumer; getOrder
	t ()Lnet/minecraft/commands/arguments/selector/EntitySelector; parse
	u ()Z isCurrentEntity
	v ()Z hasNameEquals
	w ()Z hasNameNotEquals
	x ()Z isLimited
	y ()Z isSorted
	z ()Z hasGamemodeEquals
net/minecraft/commands/arguments/selector/options/PlayerSelector net/minecraft/commands/arguments/selector/options/EntitySelectorOptions
	a ERROR_UNKNOWN_OPTION
	b ERROR_INAPPLICABLE_OPTION
	c ERROR_RANGE_NEGATIVE
	d ERROR_LEVEL_NEGATIVE
	e ERROR_LIMIT_TOO_SMALL
	f ERROR_SORT_UNKNOWN
	g ERROR_GAME_MODE_INVALID
	h ERROR_ENTITY_TYPE_INVALID
	i OPTIONS
	a ()V bootStrap
	a (Ljava/lang/String;Lgb$a;Ljava/util/function/Predicate;Lnet/minecraft/network/chat/IChatBaseComponent;)V register
	a (Lnet/minecraft/commands/arguments/selector/ArgumentParserSelector;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V suggestNames
	a (Lnet/minecraft/commands/arguments/selector/ArgumentParserSelector;Ljava/lang/String;I)Lgb$a; get
net/minecraft/commands/synchronization/CompletionProviders net/minecraft/commands/synchronization/SuggestionProviders
	a ASK_SERVER
	b ALL_RECIPES
	c AVAILABLE_SOUNDS
	d SUMMONABLE_ENTITIES
	e PROVIDERS_BY_NAME
	f DEFAULT_NAME
	a (Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lnet/minecraft/resources/MinecraftKey; getName
	a (Lnet/minecraft/resources/MinecraftKey;)Lcom/mojang/brigadier/suggestion/SuggestionProvider; getProvider
	a (Lnet/minecraft/resources/MinecraftKey;Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lcom/mojang/brigadier/suggestion/SuggestionProvider; register
	b (Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lcom/mojang/brigadier/suggestion/SuggestionProvider; safelySwap
net/minecraft/commands/synchronization/brigadier/ArgumentSerializerString net/minecraft/commands/synchronization/brigadier/StringArgumentSerializer
	a (Lcom/mojang/brigadier/arguments/ArgumentType;)Lgf$a; unpack
	a (Lcom/mojang/brigadier/arguments/StringArgumentType;)Lgo$a; unpack
	a (Lgf$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lgf$a;Lnet/minecraft/network/PacketDataSerializer;)V serializeToNetwork
	a (Lgo$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lgo$a;Lnet/minecraft/network/PacketDataSerializer;)V serializeToNetwork
	a (Lnet/minecraft/network/PacketDataSerializer;)Lgo$a; deserializeFromNetwork
	b (Lnet/minecraft/network/PacketDataSerializer;)Lgf$a; deserializeFromNetwork
net/minecraft/core/BaseBlockPosition net/minecraft/core/Vec3i
	a x
	b y
	c z
	f CODEC
	g ZERO
	a (Lnet/minecraft/core/BaseBlockPosition;D)Z closerThan
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;)I get
	a (Lnet/minecraft/core/IPosition;D)Z closerToCenterThan
	b (Lnet/minecraft/core/EnumDirection$EnumAxis;I)Lnet/minecraft/core/BaseBlockPosition; relative
	b (Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/core/BaseBlockPosition; relative
	b (Lnet/minecraft/core/EnumDirection;I)Lnet/minecraft/core/BaseBlockPosition; relative
	b (Lnet/minecraft/core/IPosition;)D distToCenterSqr
	c (DDD)D distToCenterSqr
	c (III)Lnet/minecraft/core/BaseBlockPosition; offset
	d (DDD)D distToLowCornerSqr
	d (Lnet/minecraft/core/BaseBlockPosition;)Lnet/minecraft/core/BaseBlockPosition; cross
	e (Lnet/minecraft/core/BaseBlockPosition;)Lnet/minecraft/core/BaseBlockPosition; subtract
	f (Lnet/minecraft/core/BaseBlockPosition;)Lnet/minecraft/core/BaseBlockPosition; offset
	i (I)Lnet/minecraft/core/BaseBlockPosition; east
	i (Lnet/minecraft/core/BaseBlockPosition;)I compareTo
	j (I)Lnet/minecraft/core/BaseBlockPosition; west
	j (Lnet/minecraft/core/BaseBlockPosition;)D distSqr
	k ()Lnet/minecraft/core/BaseBlockPosition; east
	k (I)Lnet/minecraft/core/BaseBlockPosition; south
	k (Lnet/minecraft/core/BaseBlockPosition;)I distManhattan
	l ()Lnet/minecraft/core/BaseBlockPosition; west
	l (I)Lnet/minecraft/core/BaseBlockPosition; north
	m ()Lnet/minecraft/core/BaseBlockPosition; south
	m (I)Lnet/minecraft/core/BaseBlockPosition; below
	n ()Lnet/minecraft/core/BaseBlockPosition; north
	n (I)Lnet/minecraft/core/BaseBlockPosition; above
	o ()Lnet/minecraft/core/BaseBlockPosition; below
	o (I)Lnet/minecraft/core/BaseBlockPosition; multiply
	p ()Lnet/minecraft/core/BaseBlockPosition; above
	s (I)Lnet/minecraft/core/BaseBlockPosition; setZ
	t (I)Lnet/minecraft/core/BaseBlockPosition; setY
	u ()I getX
	u (I)Lnet/minecraft/core/BaseBlockPosition; setX
	v ()I getY
	v (I)Lcom/mojang/serialization/Codec; offsetCodec
	w ()I getZ
	x ()Ljava/lang/String; toShortString
net/minecraft/core/BlockPosition net/minecraft/core/BlockPos
	a CODEC
	b ZERO
	c PACKED_Y_LENGTH
	d LOGGER
	e PACKED_X_LENGTH
	h PACKED_Z_LENGTH
	i PACKED_X_MASK
	j PACKED_Y_MASK
	k PACKED_Z_MASK
	l Y_OFFSET
	m Z_OFFSET
	n X_OFFSET
	a ()J asLong
	a (DDD)Lnet/minecraft/core/BlockPosition; containing
	a (I)Lnet/minecraft/core/BlockPosition; multiply
	a (III)J asLong
	a (IIIIII)Ljava/util/stream/Stream; betweenClosedStream
	a (J)I getX
	a (JIII)J offset
	a (JLnet/minecraft/core/EnumDirection;)J offset
	a (Lnet/minecraft/core/BaseBlockPosition;)Lnet/minecraft/core/BlockPosition; offset
	a (Lnet/minecraft/core/BlockPosition;III)Ljava/lang/Iterable; withinManhattan
	a (Lnet/minecraft/core/BlockPosition;IILjava/util/function/Predicate;)Ljava/util/Optional; findClosestMatch
	a (Lnet/minecraft/core/BlockPosition;ILnet/minecraft/core/EnumDirection;Lnet/minecraft/core/EnumDirection;)Ljava/lang/Iterable; spiralAround
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Ljava/lang/Iterable; betweenClosed
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;I)Lnet/minecraft/core/BlockPosition; relative
	a (Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/core/BlockPosition; relative
	a (Lnet/minecraft/core/EnumDirection;I)Lnet/minecraft/core/BlockPosition; relative
	a (Lnet/minecraft/core/IPosition;)Lnet/minecraft/core/BlockPosition; containing
	a (Lnet/minecraft/util/RandomSource;IIIIIII)Ljava/lang/Iterable; randomBetweenClosed
	a (Lnet/minecraft/util/RandomSource;ILnet/minecraft/core/BlockPosition;I)Ljava/lang/Iterable; randomInCube
	a (Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/core/BlockPosition; rotate
	a (Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)Ljava/util/stream/Stream; betweenClosedStream
	a (Lnet/minecraft/world/phys/AxisAlignedBB;)Ljava/util/stream/Stream; betweenClosedStream
	b ()Lnet/minecraft/world/phys/Vec3D; getCenter
	b (I)Lnet/minecraft/core/BlockPosition; above
	b (III)Lnet/minecraft/core/BlockPosition; offset
	b (IIIIII)Ljava/lang/Iterable; betweenClosed
	b (J)I getY
	b (Lnet/minecraft/core/BaseBlockPosition;)Lnet/minecraft/core/BlockPosition; subtract
	b (Lnet/minecraft/core/BlockPosition;III)Ljava/util/stream/Stream; withinManhattanStream
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Ljava/util/stream/Stream; betweenClosedStream
	b (Lnet/minecraft/core/EnumDirection$EnumAxis;I)Lnet/minecraft/core/BaseBlockPosition; relative
	b (Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/core/BaseBlockPosition; relative
	b (Lnet/minecraft/core/EnumDirection;I)Lnet/minecraft/core/BaseBlockPosition; relative
	c ()Lnet/minecraft/core/BlockPosition; above
	c (I)Lnet/minecraft/core/BlockPosition; below
	c (III)Lnet/minecraft/core/BaseBlockPosition; offset
	c (J)I getZ
	c (Lnet/minecraft/core/BaseBlockPosition;)Lnet/minecraft/core/BlockPosition; cross
	d ()Lnet/minecraft/core/BlockPosition; below
	d (I)Lnet/minecraft/core/BlockPosition; north
	d (J)Lnet/minecraft/core/BlockPosition; of
	d (Lnet/minecraft/core/BaseBlockPosition;)Lnet/minecraft/core/BaseBlockPosition; cross
	e ()Lnet/minecraft/core/BlockPosition; north
	e (I)Lnet/minecraft/core/BlockPosition; south
	e (J)J getFlatIndex
	e (Lnet/minecraft/core/BaseBlockPosition;)Lnet/minecraft/core/BaseBlockPosition; subtract
	f ()Lnet/minecraft/core/BlockPosition; south
	f (I)Lnet/minecraft/core/BlockPosition; west
	f (Lnet/minecraft/core/BaseBlockPosition;)Lnet/minecraft/core/BaseBlockPosition; offset
	g ()Lnet/minecraft/core/BlockPosition; west
	g (I)Lnet/minecraft/core/BlockPosition; east
	h ()Lnet/minecraft/core/BlockPosition; east
	h (I)Lnet/minecraft/core/BlockPosition; atY
	i ()Lnet/minecraft/core/BlockPosition; immutable
	i (I)Lnet/minecraft/core/BaseBlockPosition; east
	j ()Lnet/minecraft/core/BlockPosition$MutableBlockPosition; mutable
	j (I)Lnet/minecraft/core/BaseBlockPosition; west
	k ()Lnet/minecraft/core/BaseBlockPosition; east
	k (I)Lnet/minecraft/core/BaseBlockPosition; south
	l ()Lnet/minecraft/core/BaseBlockPosition; west
	l (I)Lnet/minecraft/core/BaseBlockPosition; north
	m ()Lnet/minecraft/core/BaseBlockPosition; south
	m (I)Lnet/minecraft/core/BaseBlockPosition; below
	n ()Lnet/minecraft/core/BaseBlockPosition; north
	n (I)Lnet/minecraft/core/BaseBlockPosition; above
	o ()Lnet/minecraft/core/BaseBlockPosition; below
	o (I)Lnet/minecraft/core/BaseBlockPosition; multiply
	p ()Lnet/minecraft/core/BaseBlockPosition; above
net/minecraft/core/BlockPosition$MutableBlockPosition net/minecraft/core/BlockPos$MutableBlockPos
	a (I)Lnet/minecraft/core/BlockPosition; multiply
	a (Lnet/minecraft/core/BaseBlockPosition;III)Lnet/minecraft/core/BlockPosition$MutableBlockPosition; setWithOffset
	a (Lnet/minecraft/core/BaseBlockPosition;Lnet/minecraft/core/BaseBlockPosition;)Lnet/minecraft/core/BlockPosition$MutableBlockPosition; setWithOffset
	a (Lnet/minecraft/core/BaseBlockPosition;Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/core/BlockPosition$MutableBlockPosition; setWithOffset
	a (Lnet/minecraft/core/EnumAxisCycle;III)Lnet/minecraft/core/BlockPosition$MutableBlockPosition; set
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;I)Lnet/minecraft/core/BlockPosition; relative
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;II)Lnet/minecraft/core/BlockPosition$MutableBlockPosition; clamp
	a (Lnet/minecraft/core/EnumDirection;I)Lnet/minecraft/core/BlockPosition; relative
	a (Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/core/BlockPosition; rotate
	b (DDD)Lnet/minecraft/core/BlockPosition$MutableBlockPosition; set
	b (III)Lnet/minecraft/core/BlockPosition; offset
	b (Lnet/minecraft/core/EnumDirection$EnumAxis;I)Lnet/minecraft/core/BaseBlockPosition; relative
	b (Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/core/BaseBlockPosition; relative
	b (Lnet/minecraft/core/EnumDirection;I)Lnet/minecraft/core/BaseBlockPosition; relative
	c (III)Lnet/minecraft/core/BaseBlockPosition; offset
	c (Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/core/BlockPosition$MutableBlockPosition; move
	c (Lnet/minecraft/core/EnumDirection;I)Lnet/minecraft/core/BlockPosition$MutableBlockPosition; move
	d (III)Lnet/minecraft/core/BlockPosition$MutableBlockPosition; set
	d (Lnet/minecraft/core/BaseBlockPosition;)Lnet/minecraft/core/BaseBlockPosition; cross
	e (III)Lnet/minecraft/core/BlockPosition$MutableBlockPosition; move
	e (Lnet/minecraft/core/BaseBlockPosition;)Lnet/minecraft/core/BaseBlockPosition; subtract
	f (J)Lnet/minecraft/core/BlockPosition$MutableBlockPosition; set
	f (Lnet/minecraft/core/BaseBlockPosition;)Lnet/minecraft/core/BaseBlockPosition; offset
	g (Lnet/minecraft/core/BaseBlockPosition;)Lnet/minecraft/core/BlockPosition$MutableBlockPosition; set
	h (Lnet/minecraft/core/BaseBlockPosition;)Lnet/minecraft/core/BlockPosition$MutableBlockPosition; move
	i ()Lnet/minecraft/core/BlockPosition; immutable
	i (I)Lnet/minecraft/core/BaseBlockPosition; east
	j (I)Lnet/minecraft/core/BaseBlockPosition; west
	k ()Lnet/minecraft/core/BaseBlockPosition; east
	k (I)Lnet/minecraft/core/BaseBlockPosition; south
	l ()Lnet/minecraft/core/BaseBlockPosition; west
	l (I)Lnet/minecraft/core/BaseBlockPosition; north
	m ()Lnet/minecraft/core/BaseBlockPosition; south
	m (I)Lnet/minecraft/core/BaseBlockPosition; below
	n ()Lnet/minecraft/core/BaseBlockPosition; north
	n (I)Lnet/minecraft/core/BaseBlockPosition; above
	o ()Lnet/minecraft/core/BaseBlockPosition; below
	o (I)Lnet/minecraft/core/BaseBlockPosition; multiply
	p ()Lnet/minecraft/core/BaseBlockPosition; above
	p (I)Lnet/minecraft/core/BlockPosition$MutableBlockPosition; setX
	q (I)Lnet/minecraft/core/BlockPosition$MutableBlockPosition; setY
	r (I)Lnet/minecraft/core/BlockPosition$MutableBlockPosition; setZ
	s (I)Lnet/minecraft/core/BaseBlockPosition; setZ
	t (I)Lnet/minecraft/core/BaseBlockPosition; setY
	u (I)Lnet/minecraft/core/BaseBlockPosition; setX
net/minecraft/core/BlockPropertyJigsawOrientation net/minecraft/core/FrontAndTop
	a DOWN_EAST
	b DOWN_NORTH
	c DOWN_SOUTH
	d DOWN_WEST
	e UP_EAST
	f UP_NORTH
	g UP_SOUTH
	h UP_WEST
	i WEST_UP
	j EAST_UP
	k NORTH_UP
	l SOUTH_UP
	m LOOKUP_TOP_FRONT
	n name
	o top
	p front
	q $VALUES
	a ()Lnet/minecraft/core/EnumDirection; front
	a (Lnet/minecraft/core/EnumDirection;Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/core/BlockPropertyJigsawOrientation; fromFrontAndTop
	b ()Lnet/minecraft/core/EnumDirection; top
	b (Lnet/minecraft/core/EnumDirection;Lnet/minecraft/core/EnumDirection;)I lookupKey
	c ()Ljava/lang/String; getSerializedName
	d ()[Lnet/minecraft/core/BlockPropertyJigsawOrientation; $values
net/minecraft/core/CursorPosition net/minecraft/core/Cursor3D
	a TYPE_INSIDE
	b TYPE_FACE
	c TYPE_EDGE
	d TYPE_CORNER
	e originX
	f originY
	g originZ
	h width
	i height
	j depth
	k end
	l index
	m x
	n y
	o z
	a ()Z advance
	b ()I nextX
	c ()I nextY
	d ()I nextZ
	e ()I getNextType
net/minecraft/core/EnumAxisCycle net/minecraft/core/AxisCycle
	a NONE
	b FORWARD
	c BACKWARD
	d AXIS_VALUES
	e VALUES
	f $VALUES
	a ()Lnet/minecraft/core/EnumAxisCycle; inverse
	a (DDDLnet/minecraft/core/EnumDirection$EnumAxis;)D cycle
	a (IIILnet/minecraft/core/EnumDirection$EnumAxis;)I cycle
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;)Lnet/minecraft/core/EnumDirection$EnumAxis; cycle
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;Lnet/minecraft/core/EnumDirection$EnumAxis;)Lnet/minecraft/core/EnumAxisCycle; between
	b ()[Lnet/minecraft/core/EnumAxisCycle; $values
net/minecraft/core/EnumDirection net/minecraft/core/Direction
	a DOWN
	b UP
	c NORTH
	d SOUTH
	e WEST
	f EAST
	g CODEC
	h VERTICAL_CODEC
	i data3d
	j oppositeIndex
	k data2d
	l name
	m axis
	n axisDirection
	o normal
	p VALUES
	q BY_3D_DATA
	r BY_2D_DATA
	s BY_NORMAL
	t $VALUES
	a ()Ljava/util/stream/Stream; stream
	a (D)Lnet/minecraft/core/EnumDirection; fromYRot
	a (DDD)Lnet/minecraft/core/EnumDirection; getNearest
	a (F)Z isFacingAngle
	a (FFF)Lnet/minecraft/core/EnumDirection; getNearest
	a (I)Lnet/minecraft/core/EnumDirection; from3DDataValue
	a (III)Lnet/minecraft/core/EnumDirection; fromNormal
	a (Ljava/lang/String;)Lnet/minecraft/core/EnumDirection; byName
	a (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/core/EnumDirection; fromNormal
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;)Lnet/minecraft/core/EnumDirection; getClockWise
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;Lnet/minecraft/core/EnumDirection$EnumAxisDirection;)Lnet/minecraft/core/EnumDirection; fromAxisAndDirection
	a (Lnet/minecraft/core/EnumDirection$EnumAxisDirection;Lnet/minecraft/core/EnumDirection$EnumAxis;)Lnet/minecraft/core/EnumDirection; get
	a (Lnet/minecraft/core/EnumDirection;)Lcom/mojang/serialization/DataResult; verifyVertical
	a (Lnet/minecraft/core/EnumDirection;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/core/EnumDirection;)[Lnet/minecraft/core/EnumDirection; makeDirectionArray
	a (Lnet/minecraft/util/RandomSource;)Ljava/util/Collection; allShuffled
	a (Lnet/minecraft/world/entity/Entity;)[Lnet/minecraft/core/EnumDirection; orderedByNearest
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/EnumDirection$EnumAxis;)Lnet/minecraft/core/EnumDirection; getFacingAxis
	a (Lorg/joml/Matrix4f;Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/core/EnumDirection; rotate
	b ()Lorg/joml/Quaternionf; getRotation
	b (I)Lnet/minecraft/core/EnumDirection; from2DDataValue
	b (Lnet/minecraft/core/EnumDirection$EnumAxis;)Lnet/minecraft/core/EnumDirection; getCounterClockWise
	b (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/core/EnumDirection; getRandom
	c ()Ljava/lang/String; getSerializedName
	d ()I get3DDataValue
	e ()I get2DDataValue
	f ()Lnet/minecraft/core/EnumDirection$EnumAxisDirection; getAxisDirection
	g ()Lnet/minecraft/core/EnumDirection; getOpposite
	h ()Lnet/minecraft/core/EnumDirection; getClockWise
	i ()Lnet/minecraft/core/EnumDirection; getCounterClockWise
	j ()I getStepX
	k ()I getStepY
	l ()I getStepZ
	m ()Lorg/joml/Vector3f; step
	n ()Ljava/lang/String; getName
	o ()Lnet/minecraft/core/EnumDirection$EnumAxis; getAxis
	p ()F toYRot
	q ()Lnet/minecraft/core/BaseBlockPosition; getNormal
	r ()Lnet/minecraft/core/EnumDirection; getClockWiseX
	s ()Lnet/minecraft/core/EnumDirection; getCounterClockWiseX
	t ()Lnet/minecraft/core/EnumDirection; getClockWiseZ
	u ()Lnet/minecraft/core/EnumDirection; getCounterClockWiseZ
	w ()[Lnet/minecraft/core/EnumDirection; $values
net/minecraft/core/EnumDirection$EnumAxis net/minecraft/core/Direction$Axis
	a X
	b Y
	c Z
	d VALUES
	e CODEC
	f name
	g $VALUES
	a ()Ljava/lang/String; getName
	a (DDD)D choose
	a (III)I choose
	a (Ljava/lang/String;)Lnet/minecraft/core/EnumDirection$EnumAxis; byName
	a (Lnet/minecraft/core/EnumDirection;)Z test
	a (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/core/EnumDirection$EnumAxis; getRandom
	b ()Z isVertical
	c ()Ljava/lang/String; getSerializedName
	d ()Z isHorizontal
	e ()Lnet/minecraft/core/EnumDirection$EnumDirectionLimit; getPlane
	f ()[Lnet/minecraft/core/EnumDirection$EnumAxis; $values
net/minecraft/core/EnumDirection$EnumAxisDirection net/minecraft/core/Direction$AxisDirection
	a POSITIVE
	b NEGATIVE
	c step
	d name
	e $VALUES
	a ()I getStep
	b ()Ljava/lang/String; getName
	c ()Lnet/minecraft/core/EnumDirection$EnumAxisDirection; opposite
	d ()[Lnet/minecraft/core/EnumDirection$EnumAxisDirection; $values
net/minecraft/core/EnumDirection$EnumDirectionLimit net/minecraft/core/Direction$Plane
	a HORIZONTAL
	b VERTICAL
	c faces
	d axis
	e $VALUES
	a ()Ljava/util/stream/Stream; stream
	a (Lnet/minecraft/core/EnumDirection;)Z test
	a (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/core/EnumDirection; getRandomDirection
	b ()[Lnet/minecraft/core/EnumDirection$EnumDirectionLimit; $values
	b (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/core/EnumDirection$EnumAxis; getRandomAxis
	c (Lnet/minecraft/util/RandomSource;)Ljava/util/List; shuffledCopy
net/minecraft/core/EnumDirection8 net/minecraft/core/Direction8
	a NORTH
	b NORTH_EAST
	c EAST
	d SOUTH_EAST
	e SOUTH
	f SOUTH_WEST
	g WEST
	h NORTH_WEST
	i directions
	j step
	k $VALUES
	a ()Ljava/util/Set; getDirections
	b ()I getStepX
	c ()I getStepZ
	d ()[Lnet/minecraft/core/EnumDirection8; $values
net/minecraft/core/IPosition net/minecraft/core/Position
	a ()D x
	b ()D y
	c ()D z
net/minecraft/core/IRegistry net/minecraft/core/Registry
	a (Ljava/lang/Object;)I getId
	a (Ljava/util/Map;)V bindTags
	a (Lnet/minecraft/core/IRegistry;ILjava/lang/String;Ljava/lang/Object;)Ljava/lang/Object; registerMapping
	a (Lnet/minecraft/core/IRegistry;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object; register
	a (Lnet/minecraft/core/IRegistry;Lnet/minecraft/resources/MinecraftKey;Ljava/lang/Object;)Ljava/lang/Object; register
	a (Lnet/minecraft/core/IRegistry;Lnet/minecraft/resources/ResourceKey;Ljava/lang/Object;)Ljava/lang/Object; register
	a (Lnet/minecraft/resources/MinecraftKey;)Ljava/lang/Object; get
	a (Lnet/minecraft/resources/ResourceKey;)Ljava/lang/Object; get
	a (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/core/HolderSet$Named; getOrCreateTag
	a (Lnet/minecraft/util/RandomSource;)Ljava/util/Optional; getRandom
	b (Ljava/lang/Object;)Lnet/minecraft/resources/MinecraftKey; getKey
	b (Lnet/minecraft/core/IRegistry;Lnet/minecraft/resources/MinecraftKey;Ljava/lang/Object;)Lhd$c; registerForHolder
	b (Lnet/minecraft/core/IRegistry;Lnet/minecraft/resources/ResourceKey;Ljava/lang/Object;)Lhd$c; registerForHolder
	b (Lnet/minecraft/resources/MinecraftKey;)Ljava/util/Optional; getOptional
	b (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; getHolder
	b (Lnet/minecraft/tags/TagKey;)Ljava/util/Optional; getTag
	c ()Lnet/minecraft/resources/ResourceKey; key
	c (I)Ljava/util/Optional; getHolder
	c (Ljava/lang/Object;)Ljava/util/Optional; getResourceKey
	c (Lnet/minecraft/resources/MinecraftKey;)Z containsKey
	c (Lnet/minecraft/resources/ResourceKey;)Z containsKey
	c (Lnet/minecraft/tags/TagKey;)Ljava/lang/Iterable; getTagOrEmpty
	d ()Lcom/mojang/serialization/Lifecycle; registryLifecycle
	d (Ljava/lang/Object;)Lnet/minecraft/core/Holder; wrapAsHolder
	d (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; getOptional
	e ()Ljava/util/Set; keySet
	e (Ljava/lang/Object;)Lcom/mojang/serialization/Lifecycle; lifecycle
	e (Lnet/minecraft/resources/ResourceKey;)Ljava/lang/Object; getOrThrow
	f ()Ljava/util/Set; registryKeySet
	f (Ljava/lang/Object;)Lhd$c; createIntrusiveHolder
	f (Lnet/minecraft/resources/ResourceKey;)Lhd$c; getHolderOrThrow
	g ()Ljava/util/Set; entrySet
	h ()Ljava/util/stream/Stream; holders
	i ()Ljava/util/stream/Stream; getTags
	j ()Ljava/util/stream/Stream; getTagNames
	l ()Lnet/minecraft/core/IRegistry; freeze
	m ()V resetTags
	o ()Lnet/minecraft/core/HolderOwner; holderOwner
	p ()Lhf$c; asLookup
	q ()Lcom/mojang/serialization/Codec; byNameCodec
	r ()Lcom/mojang/serialization/Codec; holderByNameCodec
	s ()Ljava/util/stream/Stream; stream
	t ()Lnet/minecraft/core/Registry; asHolderIdMap
	u ()Lhf$c; asTagAddingLookup
net/minecraft/core/IRegistryCustom net/minecraft/core/RegistryAccess
	a LOGGER
	b EMPTY
	a (Lnet/minecraft/core/IRegistry;)Lnet/minecraft/core/IRegistryCustom$Dimension; fromRegistryOfRegistries
	a (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; lookup
	b ()Ljava/util/stream/Stream; registries
	c ()Lnet/minecraft/core/IRegistryCustom$Dimension; freeze
	c (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; registry
	d ()Lcom/mojang/serialization/Lifecycle; allRegistriesLifecycle
	d (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/core/IRegistry; registryOrThrow
net/minecraft/core/IRegistryCustom$Dimension net/minecraft/core/RegistryAccess$Frozen
net/minecraft/core/IRegistryWritable net/minecraft/core/WritableRegistry
	a (Lnet/minecraft/resources/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lhd$c; register
	b (ILnet/minecraft/resources/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/core/Holder; registerMapping
	k ()Z isEmpty
	n ()Lnet/minecraft/core/HolderGetter; createRegistrationLookup
net/minecraft/core/ISourceBlock net/minecraft/core/BlockSource
	a ()D x
	b ()D y
	c ()D z
	d ()Lnet/minecraft/core/BlockPosition; getPos
	e ()Lnet/minecraft/world/level/block/state/IBlockData; getBlockState
	f ()Lnet/minecraft/world/level/block/entity/TileEntity; getEntity
	g ()Lnet/minecraft/server/level/WorldServer; getLevel
net/minecraft/core/Position net/minecraft/core/PositionImpl
	a x
	b y
	c z
	a ()D x
	b ()D y
	c ()D z
net/minecraft/core/Registry net/minecraft/core/IdMap
	a DEFAULT
	a (I)Ljava/lang/Object; byId
	a (Ljava/lang/Object;)I getId
	b ()I size
	b (I)Ljava/lang/Object; byIdOrThrow
net/minecraft/core/RegistryBlockID net/minecraft/core/IdMapper
	b nextId
	c tToId
	d idToT
	a (I)Ljava/lang/Object; byId
	a (Ljava/lang/Object;)I getId
	a (Ljava/lang/Object;I)V addMapping
	b ()I size
	b (Ljava/lang/Object;)V add
	c (I)Z contains
net/minecraft/core/RegistryBlocks net/minecraft/core/DefaultedRegistry
	a ()Lnet/minecraft/resources/MinecraftKey; getDefaultKey
	a (I)Ljava/lang/Object; byId
	a (Lnet/minecraft/resources/MinecraftKey;)Ljava/lang/Object; get
	b (Ljava/lang/Object;)Lnet/minecraft/resources/MinecraftKey; getKey
net/minecraft/core/RegistryMaterials net/minecraft/core/MappedRegistry
	b LOGGER
	c key
	d byId
	e toId
	f byLocation
	g byKey
	h byValue
	i lifecycles
	j registryLifecycle
	k tags
	l frozen
	m unregisteredIntrusiveHolders
	n holdersInOrder
	o nextId
	p lookup
	a ()Ljava/util/List; holdersInOrder
	a (I)Ljava/lang/Object; byId
	a (ILnet/minecraft/resources/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lhd$c; registerMapping
	a (Lhd$c;)Ljava/lang/Object; getValueFromNullable
	a (Ljava/lang/Object;)I getId
	a (Ljava/util/Map;)V bindTags
	a (Lnet/minecraft/resources/MinecraftKey;)Ljava/lang/Object; get
	a (Lnet/minecraft/resources/ResourceKey;)Ljava/lang/Object; get
	a (Lnet/minecraft/resources/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lhd$c; register
	a (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/core/HolderSet$Named; getOrCreateTag
	a (Lnet/minecraft/util/RandomSource;)Ljava/util/Optional; getRandom
	b ()I size
	b (ILnet/minecraft/resources/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/core/Holder; registerMapping
	b (Ljava/lang/Object;)Lnet/minecraft/resources/MinecraftKey; getKey
	b (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; getHolder
	b (Lnet/minecraft/tags/TagKey;)Ljava/util/Optional; getTag
	c ()Lnet/minecraft/resources/ResourceKey; key
	c (I)Ljava/util/Optional; getHolder
	c (Ljava/lang/Object;)Ljava/util/Optional; getResourceKey
	c (Lnet/minecraft/resources/MinecraftKey;)Z containsKey
	c (Lnet/minecraft/resources/ResourceKey;)Z containsKey
	d ()Lcom/mojang/serialization/Lifecycle; registryLifecycle
	d (Ljava/lang/Object;)Lnet/minecraft/core/Holder; wrapAsHolder
	d (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/core/HolderSet$Named; createTag
	e ()Ljava/util/Set; keySet
	e (Ljava/lang/Object;)Lcom/mojang/serialization/Lifecycle; lifecycle
	f ()Ljava/util/Set; registryKeySet
	f (Ljava/lang/Object;)Lhd$c; createIntrusiveHolder
	g ()Ljava/util/Set; entrySet
	g (Lnet/minecraft/resources/ResourceKey;)V validateWrite
	h ()Ljava/util/stream/Stream; holders
	h (Lnet/minecraft/resources/ResourceKey;)Lhd$c; getOrCreateHolderOrThrow
	i ()Ljava/util/stream/Stream; getTags
	j ()Ljava/util/stream/Stream; getTagNames
	k ()Z isEmpty
	l ()Lnet/minecraft/core/IRegistry; freeze
	m ()V resetTags
	n ()Lnet/minecraft/core/HolderGetter; createRegistrationLookup
	o ()Lnet/minecraft/core/HolderOwner; holderOwner
	p ()Lhf$c; asLookup
	v ()V validateWrite
net/minecraft/core/SectionPosition net/minecraft/core/SectionPos
	a SECTION_BITS
	b SECTION_SIZE
	c SECTION_MASK
	d SECTION_HALF_SIZE
	e SECTION_MAX_INDEX
	h PACKED_X_LENGTH
	i PACKED_Y_LENGTH
	j PACKED_Z_LENGTH
	k PACKED_X_MASK
	l PACKED_Y_MASK
	m PACKED_Z_MASK
	n Y_OFFSET
	o Z_OFFSET
	p X_OFFSET
	q RELATIVE_X_SHIFT
	r RELATIVE_Y_SHIFT
	s RELATIVE_Z_SHIFT
	a ()I x
	a (D)I posToSectionCoord
	a (I)I blockToSectionCoord
	a (II)I sectionToBlockCoord
	a (III)Lnet/minecraft/core/SectionPosition; of
	a (IIIIII)Ljava/util/stream/Stream; betweenClosedStream
	a (IIILit/unimi/dsi/fastutil/longs/LongConsumer;)V aroundAndAtBlockPos
	a (J)Lnet/minecraft/core/SectionPosition; of
	a (JIII)J offset
	a (JLit/unimi/dsi/fastutil/longs/LongConsumer;)V aroundAndAtBlockPos
	a (JLnet/minecraft/core/EnumDirection;)J offset
	a (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/core/SectionPosition; of
	a (Lnet/minecraft/core/BlockPosition;Lit/unimi/dsi/fastutil/longs/LongConsumer;)V aroundAndAtBlockPos
	a (Lnet/minecraft/core/IPosition;)Lnet/minecraft/core/SectionPosition; of
	a (Lnet/minecraft/core/SectionPosition;I)Ljava/util/stream/Stream; cube
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;I)Lnet/minecraft/core/SectionPosition; of
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;III)Ljava/util/stream/Stream; aroundChunk
	a (Lnet/minecraft/world/level/chunk/IChunkAccess;)Lnet/minecraft/core/SectionPosition; bottomOf
	a (Lnet/minecraft/world/level/entity/EntityAccess;)Lnet/minecraft/core/SectionPosition; of
	a (S)I sectionRelativeX
	b ()I y
	b (D)I blockToSectionCoord
	b (I)I sectionRelative
	b (III)J asLong
	b (J)I x
	b (Lnet/minecraft/core/BlockPosition;)S sectionRelativePos
	b (S)I sectionRelativeY
	c ()I z
	c (I)I sectionToBlockCoord
	c (III)Lnet/minecraft/core/BaseBlockPosition; offset
	c (J)I y
	c (Lnet/minecraft/core/BlockPosition;)J asLong
	c (S)I sectionRelativeZ
	d ()I minBlockX
	d (III)Lnet/minecraft/core/SectionPosition; offset
	d (J)I z
	d (S)I relativeToBlockX
	e ()I minBlockY
	e (J)J blockToSection
	e (S)I relativeToBlockY
	f ()I minBlockZ
	f (J)J getZeroNode
	f (S)I relativeToBlockZ
	g ()I maxBlockX
	g (S)Lnet/minecraft/core/BlockPosition; relativeToBlockPos
	h ()I maxBlockY
	i ()I maxBlockZ
	j ()Lnet/minecraft/core/BlockPosition; origin
	q ()Lnet/minecraft/core/BlockPosition; center
	r ()Lnet/minecraft/world/level/ChunkCoordIntPair; chunk
	s ()J asLong
	t ()Ljava/util/stream/Stream; blocksInside
net/minecraft/core/SourceBlock net/minecraft/core/BlockSourceImpl
	a level
	b pos
	a ()D x
	b ()D y
	c ()D z
	d ()Lnet/minecraft/core/BlockPosition; getPos
	e ()Lnet/minecraft/world/level/block/state/IBlockData; getBlockState
	f ()Lnet/minecraft/world/level/block/entity/TileEntity; getEntity
	g ()Lnet/minecraft/server/level/WorldServer; getLevel
net/minecraft/core/Vector3f net/minecraft/core/Rotations
	a x
	b y
	c z
	a ()Lnet/minecraft/nbt/NBTTagList; save
	b ()F getX
	c ()F getY
	d ()F getZ
	e ()F getWrappedX
	f ()F getWrappedY
	g ()F getWrappedZ
net/minecraft/core/dispenser/DispenseBehaviorBoat net/minecraft/core/dispenser/BoatDispenseItemBehavior
	c defaultDispenseItemBehavior
	d type
	e isChestBoat
	a (Lnet/minecraft/core/ISourceBlock;)V playSound
	a (Lnet/minecraft/core/ISourceBlock;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; execute
net/minecraft/core/dispenser/DispenseBehaviorItem net/minecraft/core/dispenser/DefaultDispenseItemBehavior
	a (Lnet/minecraft/core/ISourceBlock;)V playSound
	a (Lnet/minecraft/core/ISourceBlock;Lnet/minecraft/core/EnumDirection;)V playAnimation
	a (Lnet/minecraft/core/ISourceBlock;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; execute
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/item/ItemStack;ILnet/minecraft/core/EnumDirection;Lnet/minecraft/core/IPosition;)V spawnItem
net/minecraft/core/dispenser/DispenseBehaviorMaybe net/minecraft/core/dispenser/OptionalDispenseItemBehavior
	c success
	a ()Z isSuccess
	a (Lnet/minecraft/core/ISourceBlock;)V playSound
	a (Z)V setSuccess
net/minecraft/core/dispenser/DispenseBehaviorProjectile net/minecraft/core/dispenser/AbstractProjectileDispenseBehavior
	a ()F getUncertainty
	a (Lnet/minecraft/core/ISourceBlock;)V playSound
	a (Lnet/minecraft/core/ISourceBlock;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; execute
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/IPosition;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/entity/projectile/IProjectile; getProjectile
	b ()F getPower
net/minecraft/core/dispenser/DispenseBehaviorShears net/minecraft/core/dispenser/ShearsDispenseItemBehavior
	a (Lnet/minecraft/core/ISourceBlock;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; execute
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;)Z tryShearBeehive
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;)Z tryShearLivingEntity
net/minecraft/core/dispenser/DispenseBehaviorShulkerBox net/minecraft/core/dispenser/ShulkerBoxDispenseBehavior
	c LOGGER
	a (Lnet/minecraft/core/ISourceBlock;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; execute
net/minecraft/core/dispenser/IDispenseBehavior net/minecraft/core/dispenser/DispenseItemBehavior
	a LOGGER
	b NOOP
	a (Lnet/minecraft/core/ISourceBlock;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/EnumDirection;)V setEntityPokingOutOfBlock
	c ()V bootStrap
net/minecraft/core/particles/Particle net/minecraft/core/particles/ParticleType
	a overrideLimiter
	b deserializer
	c ()Z getOverrideLimiter
	d ()Lis$a; getDeserializer
	e ()Lcom/mojang/serialization/Codec; codec
net/minecraft/core/particles/ParticleParam net/minecraft/core/particles/ParticleOptions
	a ()Ljava/lang/String; writeToString
	a (Lnet/minecraft/network/PacketDataSerializer;)V writeToNetwork
	b ()Lnet/minecraft/core/particles/Particle; getType
net/minecraft/core/particles/ParticleParamBlock net/minecraft/core/particles/BlockParticleOption
	a DESERIALIZER
	b type
	c state
	a ()Ljava/lang/String; writeToString
	a (Lnet/minecraft/core/particles/Particle;)Lcom/mojang/serialization/Codec; codec
	a (Lnet/minecraft/network/PacketDataSerializer;)V writeToNetwork
	b ()Lnet/minecraft/core/particles/Particle; getType
	c ()Lnet/minecraft/world/level/block/state/IBlockData; getState
net/minecraft/core/particles/ParticleParamItem net/minecraft/core/particles/ItemParticleOption
	a DESERIALIZER
	b type
	c itemStack
	a ()Ljava/lang/String; writeToString
	a (Lnet/minecraft/core/particles/Particle;)Lcom/mojang/serialization/Codec; codec
	a (Lnet/minecraft/network/PacketDataSerializer;)V writeToNetwork
	b ()Lnet/minecraft/core/particles/Particle; getType
	c ()Lnet/minecraft/world/item/ItemStack; getItem
net/minecraft/core/particles/ParticleParamRedstone net/minecraft/core/particles/DustParticleOptions
	a REDSTONE_PARTICLE_COLOR
	b REDSTONE
	c CODEC
	d DESERIALIZER
	b ()Lnet/minecraft/core/particles/Particle; getType
net/minecraft/core/particles/ParticleType net/minecraft/core/particles/SimpleParticleType
	a DESERIALIZER
	b codec
	a ()Ljava/lang/String; writeToString
	a (Lnet/minecraft/network/PacketDataSerializer;)V writeToNetwork
	b ()Lnet/minecraft/core/particles/Particle; getType
	e ()Lcom/mojang/serialization/Codec; codec
	f ()Lnet/minecraft/core/particles/ParticleType; getType
net/minecraft/core/particles/Particles net/minecraft/core/particles/ParticleTypes
	A FIREWORK
	B FISHING
	C FLAME
	D DRIPPING_CHERRY_LEAVES
	E FALLING_CHERRY_LEAVES
	F LANDING_CHERRY_LEAVES
	G SCULK_SOUL
	H SCULK_CHARGE
	I SCULK_CHARGE_POP
	J SOUL_FIRE_FLAME
	K SOUL
	L FLASH
	M HAPPY_VILLAGER
	N COMPOSTER
	O HEART
	P INSTANT_EFFECT
	Q ITEM
	R VIBRATION
	S ITEM_SLIME
	T ITEM_SNOWBALL
	U LARGE_SMOKE
	V LAVA
	W MYCELIUM
	X NOTE
	Y POOF
	Z PORTAL
	a AMBIENT_ENTITY_EFFECT
	aA DRIPPING_OBSIDIAN_TEAR
	aB FALLING_OBSIDIAN_TEAR
	aC LANDING_OBSIDIAN_TEAR
	aD REVERSE_PORTAL
	aE WHITE_ASH
	aF SMALL_FLAME
	aG SNOWFLAKE
	aH DRIPPING_DRIPSTONE_LAVA
	aI FALLING_DRIPSTONE_LAVA
	aJ DRIPPING_DRIPSTONE_WATER
	aK FALLING_DRIPSTONE_WATER
	aL GLOW_SQUID_INK
	aM GLOW
	aN WAX_ON
	aO WAX_OFF
	aP ELECTRIC_SPARK
	aQ SCRAPE
	aR SHRIEK
	aS CODEC
	aa RAIN
	ab SMOKE
	ac SNEEZE
	ad SPIT
	ae SQUID_INK
	af SWEEP_ATTACK
	ag TOTEM_OF_UNDYING
	ah UNDERWATER
	ai SPLASH
	aj WITCH
	ak BUBBLE_POP
	al CURRENT_DOWN
	am BUBBLE_COLUMN_UP
	an NAUTILUS
	ao DOLPHIN
	ap CAMPFIRE_COSY_SMOKE
	aq CAMPFIRE_SIGNAL_SMOKE
	ar DRIPPING_HONEY
	as FALLING_HONEY
	at LANDING_HONEY
	au FALLING_NECTAR
	av FALLING_SPORE_BLOSSOM
	aw ASH
	ax CRIMSON_SPORE
	ay WARPED_SPORE
	az SPORE_BLOSSOM_AIR
	b ANGRY_VILLAGER
	c BLOCK
	d BLOCK_MARKER
	e BUBBLE
	f CLOUD
	g CRIT
	h DAMAGE_INDICATOR
	i DRAGON_BREATH
	j DRIPPING_LAVA
	k FALLING_LAVA
	l LANDING_LAVA
	m DRIPPING_WATER
	n FALLING_WATER
	o DUST
	p DUST_COLOR_TRANSITION
	q EFFECT
	r ELDER_GUARDIAN
	s ENCHANTED_HIT
	t ENCHANT
	u END_ROD
	v ENTITY_EFFECT
	w EXPLOSION_EMITTER
	x EXPLOSION
	y SONIC_BOOM
	z FALLING_DUST
	a (Ljava/lang/String;Z)Lnet/minecraft/core/particles/ParticleType; register
	a (Ljava/lang/String;ZLis$a;Ljava/util/function/Function;)Lnet/minecraft/core/particles/Particle; register
net/minecraft/data/DebugReportProvider net/minecraft/data/DataProvider
	a FIXED_ORDER_FIELDS
	b KEY_COMPARATOR
	c LOGGER
	a ()Ljava/lang/String; getName
	a (Lnet/minecraft/data/CachedOutput;)Ljava/util/concurrent/CompletableFuture; run
	a (Lnet/minecraft/data/CachedOutput;Lcom/google/gson/JsonElement;Ljava/nio/file/Path;)Ljava/util/concurrent/CompletableFuture; saveStable
net/minecraft/data/structures/DebugReportNBT net/minecraft/data/structures/NbtToSnbt
	d LOGGER
	e inputFolders
	f output
	a ()Ljava/lang/String; getName
	a (Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/lang/String; getName
	a (Lnet/minecraft/data/CachedOutput;)Ljava/util/concurrent/CompletableFuture; run
	a (Lnet/minecraft/data/CachedOutput;Ljava/nio/file/Path;Ljava/lang/String;)V writeSnbt
	a (Lnet/minecraft/data/CachedOutput;Ljava/nio/file/Path;Ljava/lang/String;Ljava/nio/file/Path;)Ljava/nio/file/Path; convertStructure
net/minecraft/data/worldgen/BiomeSettings net/minecraft/data/worldgen/BiomeDefaultFeatures
	A (Lcng$a;)V addLushCavesVegetationFeatures
	B (Lcng$a;)V addLushCavesSpecialOres
	C (Lcng$a;)V addMountainTrees
	D (Lcng$a;)V addMountainForestTrees
	E (Lcng$a;)V addJungleTrees
	F (Lcng$a;)V addSparseJungleTrees
	G (Lcng$a;)V addBadlandsTrees
	H (Lcng$a;)V addSnowyTrees
	I (Lcng$a;)V addJungleGrass
	J (Lcng$a;)V addSavannaGrass
	K (Lcng$a;)V addShatteredSavannaGrass
	L (Lcng$a;)V addSavannaExtraGrass
	M (Lcng$a;)V addBadlandGrass
	N (Lcng$a;)V addForestFlowers
	O (Lcng$a;)V addForestGrass
	P (Lcng$a;)V addSwampVegetation
	Q (Lcng$a;)V addMangroveSwampVegetation
	R (Lcng$a;)V addMushroomFieldVegetation
	S (Lcng$a;)V addPlainVegetation
	T (Lcng$a;)V addDesertVegetation
	U (Lcng$a;)V addGiantTaigaVegetation
	V (Lcng$a;)V addDefaultFlowers
	W (Lcng$a;)V addCherryGroveVegetation
	X (Lcng$a;)V addMeadowVegetation
	Y (Lcng$a;)V addWarmFlowers
	Z (Lcng$a;)V addDefaultGrass
	a (Lcng$a;)V addDefaultCarversAndLakes
	a (Lcng$a;Z)V addDefaultOres
	a (Lcnr$a;)V farmAnimals
	a (Lcnr$a;II)V warmOceanSpawns
	a (Lcnr$a;III)V oceanSpawns
	a (Lcnr$a;IIIZ)V monsters
	aa (Lcng$a;)V addTaigaGrass
	ab (Lcng$a;)V addPlainGrass
	ac (Lcng$a;)V addDefaultMushrooms
	ad (Lcng$a;)V addDefaultExtraVegetation
	ae (Lcng$a;)V addBadlandExtraVegetation
	af (Lcng$a;)V addJungleMelons
	ag (Lcng$a;)V addSparseJungleMelons
	ah (Lcng$a;)V addJungleVines
	ai (Lcng$a;)V addDesertExtraVegetation
	aj (Lcng$a;)V addSwampExtraVegetation
	ak (Lcng$a;)V addDesertExtraDecoration
	al (Lcng$a;)V addFossilDecoration
	am (Lcng$a;)V addColdOceanExtraVegetation
	an (Lcng$a;)V addDefaultSeagrass
	ao (Lcng$a;)V addLukeWarmKelp
	ap (Lcng$a;)V addDefaultSprings
	aq (Lcng$a;)V addFrozenSprings
	ar (Lcng$a;)V addIcebergs
	as (Lcng$a;)V addBlueIce
	at (Lcng$a;)V addSurfaceFreezing
	au (Lcng$a;)V addNetherDefaultOres
	av (Lcng$a;)V addAncientDebris
	aw (Lcng$a;)V addDefaultCrystalFormations
	b (Lcng$a;)V addDefaultMonsterRoom
	b (Lcnr$a;)V caveSpawns
	c (Lcng$a;)V addDefaultUndergroundVariety
	c (Lcnr$a;)V commonSpawns
	d (Lcng$a;)V addDripstone
	d (Lcnr$a;)V plainsSpawns
	e (Lcng$a;)V addSculk
	e (Lcnr$a;)V snowySpawns
	f (Lcng$a;)V addDefaultOres
	f (Lcnr$a;)V desertSpawns
	g (Lcng$a;)V addExtraGold
	g (Lcnr$a;)V dripstoneCavesSpawns
	h (Lcng$a;)V addExtraEmeralds
	h (Lcnr$a;)V mooshroomSpawns
	i (Lcng$a;)V addInfestedStone
	i (Lcnr$a;)V baseJungleSpawns
	j (Lcng$a;)V addDefaultSoftDisks
	j (Lcnr$a;)V endSpawns
	k (Lcng$a;)V addSwampClayDisk
	l (Lcng$a;)V addMangroveSwampDisks
	m (Lcng$a;)V addMossyStoneBlock
	n (Lcng$a;)V addFerns
	o (Lcng$a;)V addRareBerryBushes
	p (Lcng$a;)V addCommonBerryBushes
	q (Lcng$a;)V addLightBambooVegetation
	r (Lcng$a;)V addBambooVegetation
	s (Lcng$a;)V addTaigaTrees
	t (Lcng$a;)V addGroveTrees
	u (Lcng$a;)V addWaterTrees
	v (Lcng$a;)V addBirchTrees
	w (Lcng$a;)V addOtherBirchTrees
	x (Lcng$a;)V addTallBirchTrees
	y (Lcng$a;)V addSavannaTrees
	z (Lcng$a;)V addShatteredSavannaTrees
net/minecraft/data/worldgen/WorldGenCarvers net/minecraft/data/worldgen/Carvers
	a CAVE
	b CAVE_EXTRA_UNDERGROUND
	c CANYON
	d NETHER_CAVE
	a (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; createKey
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/WorldGenFeatureBastionBridge net/minecraft/data/worldgen/BastionBridgePools
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/WorldGenFeatureBastionExtra net/minecraft/data/worldgen/BastionSharedPools
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/WorldGenFeatureBastionHoglinStable net/minecraft/data/worldgen/BastionHoglinStablePools
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/WorldGenFeatureBastionPieces net/minecraft/data/worldgen/BastionPieces
	a START
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/WorldGenFeatureBastionTreasure net/minecraft/data/worldgen/BastionTreasureRoomPools
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/WorldGenFeatureBastionUnits net/minecraft/data/worldgen/BastionHousingUnitsPools
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/WorldGenFeatureDesertVillage net/minecraft/data/worldgen/DesertVillagePools
	a START
	b TERMINATORS_KEY
	c ZOMBIE_TERMINATORS_KEY
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/WorldGenFeaturePieces net/minecraft/data/worldgen/Pools
	a EMPTY
	a (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; createKey
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
	a (Lnet/minecraft/data/worldgen/BootstapContext;Ljava/lang/String;Lnet/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePoolTemplate;)V register
net/minecraft/data/worldgen/WorldGenFeaturePillagerOutpostPieces net/minecraft/data/worldgen/PillagerOutpostPools
	a START
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/WorldGenFeatureVillagePlain net/minecraft/data/worldgen/PlainVillagePools
	a START
	b TERMINATORS_KEY
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/WorldGenFeatureVillageSavanna net/minecraft/data/worldgen/SavannaVillagePools
	a START
	b TERMINATORS_KEY
	c ZOMBIE_TERMINATORS_KEY
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/WorldGenFeatureVillageSnowy net/minecraft/data/worldgen/SnowyVillagePools
	a START
	b TERMINATORS_KEY
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/WorldGenFeatureVillageTaiga net/minecraft/data/worldgen/TaigaVillagePools
	a START
	b TERMINATORS_KEY
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/WorldGenFeatureVillages net/minecraft/data/worldgen/VillagePools
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/gametest/framework/GameTestHarnessAssertion net/minecraft/gametest/framework/GameTestAssertException
net/minecraft/gametest/framework/GameTestHarnessAssertionPosition net/minecraft/gametest/framework/GameTestAssertPosException
	a absolutePos
	b relativePos
	c tick
	a ()Ljava/lang/String; getMessageToShowAtBlock
	b ()Lnet/minecraft/core/BlockPosition; getRelativePos
	c ()Lnet/minecraft/core/BlockPosition; getAbsolutePos
net/minecraft/gametest/framework/GameTestHarnessBatch net/minecraft/gametest/framework/GameTestBatch
	a DEFAULT_BATCH_NAME
	b name
	c testFunctions
	d beforeBatchFunction
	e afterBatchFunction
	a ()Ljava/lang/String; getName
	a (Lnet/minecraft/server/level/WorldServer;)V runBeforeBatchFunction
	b ()Ljava/util/Collection; getTestFunctions
	b (Lnet/minecraft/server/level/WorldServer;)V runAfterBatchFunction
net/minecraft/gametest/framework/GameTestHarnessBatchRunner net/minecraft/gametest/framework/GameTestBatchRunner
	a LOGGER
	b firstTestNorthWestCorner
	c level
	d testTicker
	e testsPerRow
	f allTestInfos
	g batches
	h nextTestNorthWestCorner
	a ()Ljava/util/List; getTestInfos
	a (I)V runBatch
	a (Ljava/util/Collection;)Ljava/util/Map; createStructuresForBatch
	b ()V start
net/minecraft/gametest/framework/GameTestHarnessCollector net/minecraft/gametest/framework/MultipleTestTracker
	a NOT_STARTED_TEST_CHAR
	b ONGOING_TEST_CHAR
	c SUCCESSFUL_TEST_CHAR
	d FAILED_OPTIONAL_TEST_CHAR
	e FAILED_REQUIRED_TEST_CHAR
	f tests
	g listeners
	a ()I getFailedRequiredCount
	a (Ljava/util/function/Consumer;)V addFailureListener
	a (Lnet/minecraft/gametest/framework/GameTestHarnessInfo;)V addTestToTrack
	a (Lnet/minecraft/gametest/framework/GameTestHarnessListener;)V addListener
	b ()I getFailedOptionalCount
	c ()I getDoneCount
	d ()Z hasFailedRequired
	e ()Z hasFailedOptional
	f ()Ljava/util/Collection; getFailedRequired
	g ()Ljava/util/Collection; getFailedOptional
	h ()I getTotalCount
	i ()Z isDone
	j ()Ljava/lang/String; getProgressBar
net/minecraft/gametest/framework/GameTestHarnessEvent net/minecraft/gametest/framework/GameTestEvent
	a expectedDelay
	b assertion
	a (JLjava/lang/Runnable;)Lnet/minecraft/gametest/framework/GameTestHarnessEvent; create
	a (Ljava/lang/Runnable;)Lnet/minecraft/gametest/framework/GameTestHarnessEvent; create
net/minecraft/gametest/framework/GameTestHarnessHelper net/minecraft/gametest/framework/GameTestHelper
	a testInfo
	b finalCheckAdded
	a ()Lnet/minecraft/server/level/WorldServer; getLevel
	a (I)V setDayTime
	a (III)V pressButton
	a (IIILnet/minecraft/world/level/block/Block;)V setBlock
	a (IIILnet/minecraft/world/level/block/state/IBlockData;)V setBlock
	a (ILjava/lang/Runnable;)V succeedOnTickWhen
	a (JLjava/lang/Runnable;)V runAtTickTime
	a (JLnet/minecraft/core/BlockPosition;)V assertAtTickTimeContainerEmpty
	a (JLnet/minecraft/core/BlockPosition;Lnet/minecraft/world/item/Item;)V assertAtTickTimeContainerContains
	a (Ljava/lang/Runnable;)V succeedIf
	a (Ljava/lang/String;)V fail
	a (Ljava/lang/String;Lnet/minecraft/core/BlockPosition;)V fail
	a (Ljava/lang/String;Lnet/minecraft/world/entity/Entity;)V fail
	a (Ljava/util/function/Consumer;)V forEveryBlockInStructure
	a (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; getBlockState
	a (Lnet/minecraft/core/BlockPosition;J)V pulseRedstone
	a (Lnet/minecraft/core/BlockPosition;Ljava/util/function/Predicate;Ljava/lang/String;)V assertBlock
	a (Lnet/minecraft/core/BlockPosition;Ljava/util/function/Predicate;Ljava/util/function/Supplier;)V assertBlock
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)V assertSameBlockState
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/EntityTypes;Ljava/util/function/Function;Ljava/lang/Object;)V assertEntityData
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/item/Item;)V assertEntityIsHolding
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;)V useBlock
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)V useBlock
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/item/Item;)V assertContainerContains
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;)V setBlock
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V setBlock
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/properties/IBlockState;Ljava/lang/Comparable;)V assertBlockProperty
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/properties/IBlockState;Ljava/util/function/Predicate;Ljava/lang/String;)V assertBlockProperty
	a (Lnet/minecraft/world/entity/Entity;III)V assertEntityInstancePresent
	a (Lnet/minecraft/world/entity/Entity;Ljava/util/function/Function;Ljava/lang/String;Ljava/lang/Object;)V assertEntityProperty
	a (Lnet/minecraft/world/entity/Entity;Ljava/util/function/Predicate;Ljava/lang/String;)V assertEntityProperty
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPosition;)V assertEntityInstancePresent
	a (Lnet/minecraft/world/entity/EntityInsentient;Lnet/minecraft/core/BlockPosition;F)Lnet/minecraft/gametest/framework/GameTestHarnessSequence; walkTo
	a (Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/entity/EntityLiving; makeAboutToDrown
	a (Lnet/minecraft/world/entity/EntityTypes;)V assertEntityPresent
	a (Lnet/minecraft/world/entity/EntityTypes;DDD)V assertEntityTouching
	a (Lnet/minecraft/world/entity/EntityTypes;FFF)Lnet/minecraft/world/entity/Entity; spawn
	a (Lnet/minecraft/world/entity/EntityTypes;III)Lnet/minecraft/world/entity/Entity; spawn
	a (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/entity/Entity; spawn
	a (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/core/BlockPosition;D)V assertEntityPresent
	a (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/core/BlockPosition;ID)V assertEntitiesPresent
	a (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/entity/Entity; spawn
	a (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/phys/Vec3D;)V assertEntityPresent
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)V placeAt
	a (Lnet/minecraft/world/item/Item;FFF)Lnet/minecraft/world/entity/item/EntityItem; spawnItem
	a (Lnet/minecraft/world/item/Item;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/entity/item/EntityItem; spawnItem
	a (Lnet/minecraft/world/item/Item;Lnet/minecraft/core/BlockPosition;D)V assertItemEntityPresent
	a (Lnet/minecraft/world/item/Item;Lnet/minecraft/core/BlockPosition;DI)V assertItemEntityCountIs
	a (Lnet/minecraft/world/level/block/Block;III)V assertBlockPresent
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;)V assertBlockPresent
	a (Lnet/minecraft/world/level/levelgen/HeightMap$Type;II)I getHeight
	a (Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/core/BlockPosition;)V assertSameBlockStates
	a (Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/phys/Vec3D; absoluteVec
	a (ZLjava/lang/String;)V assertTrue
	b ()V killAllEntities
	b (III)V pullLever
	b (JLjava/lang/Runnable;)V runAfterDelay
	b (Ljava/lang/Runnable;)V succeedWhen
	b (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/entity/TileEntity; getBlockEntity
	b (Lnet/minecraft/core/BlockPosition;Ljava/util/function/Predicate;Ljava/util/function/Supplier;)V assertBlockState
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/EntityTypes;Ljava/util/function/Function;Ljava/lang/Object;)V succeedWhenEntityData
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/item/Item;)V assertEntityInventoryContains
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)V continuouslyUse
	b (Lnet/minecraft/world/entity/EntityTypes;)V assertEntityNotPresent
	b (Lnet/minecraft/world/entity/EntityTypes;DDD)V assertEntityNotTouching
	b (Lnet/minecraft/world/entity/EntityTypes;FFF)Lnet/minecraft/world/entity/EntityInsentient; spawnWithNoFreeWill
	b (Lnet/minecraft/world/entity/EntityTypes;III)Lnet/minecraft/world/entity/EntityInsentient; spawnWithNoFreeWill
	b (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/entity/EntityInsentient; spawnWithNoFreeWill
	b (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/core/BlockPosition;D)Ljava/util/List; getEntities
	b (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/entity/EntityInsentient; spawnWithNoFreeWill
	b (Lnet/minecraft/world/item/Item;Lnet/minecraft/core/BlockPosition;D)V assertItemEntityNotPresent
	b (Lnet/minecraft/world/level/block/Block;III)V assertBlockNotPresent
	b (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;)V assertBlockNotPresent
	b (Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/phys/Vec3D; relativeVec
	c ()Lnet/minecraft/world/entity/player/EntityHuman; makeMockSurvivalPlayer
	c (Ljava/lang/Runnable;)V failIf
	c (Lnet/minecraft/core/BlockPosition;)V pressButton
	c (Lnet/minecraft/world/entity/EntityTypes;III)V assertEntityPresent
	c (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/core/BlockPosition;)V assertEntityPresent
	c (Lnet/minecraft/world/level/block/Block;III)V succeedWhenBlockPresent
	c (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;)V succeedWhenBlockPresent
	d ()Lnet/minecraft/world/entity/player/EntityHuman; makeMockPlayer
	d (Ljava/lang/Runnable;)V failIfEver
	d (Lnet/minecraft/core/BlockPosition;)V useBlock
	d (Lnet/minecraft/world/entity/EntityTypes;III)V assertEntityNotPresent
	d (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/core/BlockPosition;)V assertEntityNotPresent
	e ()V setNight
	e (Ljava/lang/Runnable;)V onEachTick
	e (Lnet/minecraft/core/BlockPosition;)V pullLever
	e (Lnet/minecraft/world/entity/EntityTypes;III)V succeedWhenEntityPresent
	e (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/core/BlockPosition;)V succeedWhenEntityPresent
	f ()V succeed
	f (Lnet/minecraft/core/BlockPosition;)V destroyBlock
	f (Lnet/minecraft/world/entity/EntityTypes;III)V succeedWhenEntityNotPresent
	f (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/core/BlockPosition;)V succeedWhenEntityNotPresent
	g ()Lnet/minecraft/gametest/framework/GameTestHarnessSequence; startSequence
	g (Lnet/minecraft/core/BlockPosition;)V assertContainerEmpty
	h ()J getTick
	h (Lnet/minecraft/core/BlockPosition;)V randomTick
	i ()V ensureSingleFinalCheck
	i (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/core/BlockPosition; absolutePos
	j ()Lnet/minecraft/world/phys/AxisAlignedBB; getBounds
	j (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/core/BlockPosition; relativePos
	k ()Lnet/minecraft/world/phys/AxisAlignedBB; getRelativeBounds
net/minecraft/gametest/framework/GameTestHarnessITestReporter net/minecraft/gametest/framework/TestReporter
	a ()V finish
	a (Lnet/minecraft/gametest/framework/GameTestHarnessInfo;)V onTestFailed
	b (Lnet/minecraft/gametest/framework/GameTestHarnessInfo;)V onTestSuccess
net/minecraft/gametest/framework/GameTestHarnessInfo net/minecraft/gametest/framework/GameTestInfo
	a testFunction
	b structureBlockPos
	c level
	d listeners
	e timeoutTicks
	f sequences
	g runAtTickTimeMap
	h startTick
	i tickCount
	j started
	k timer
	l done
	m rotation
	n error
	o structureBlockEntity
	A ()V tickInternal
	B ()V startTest
	C ()Lnet/minecraft/world/level/block/entity/TileEntityStructure; getStructureBlockEntity
	D ()V finish
	a ()V startExecution
	a (JLjava/lang/Runnable;)V setRunAtTickTime
	a (Ljava/lang/Throwable;)V fail
	a (Lnet/minecraft/core/BlockPosition;)V setStructureBlockPos
	a (Lnet/minecraft/core/BlockPosition;I)V spawnStructure
	a (Lnet/minecraft/gametest/framework/GameTestHarnessListener;)V addListener
	b ()V tick
	c ()Ljava/lang/String; getTestName
	d ()Lnet/minecraft/core/BlockPosition; getStructureBlockPos
	e ()Lnet/minecraft/core/BaseBlockPosition; getStructureSize
	f ()Lnet/minecraft/world/phys/AxisAlignedBB; getStructureBounds
	g ()Lnet/minecraft/server/level/WorldServer; getLevel
	h ()Z hasSucceeded
	i ()Z hasFailed
	j ()Z hasStarted
	k ()Z isDone
	l ()J getRunTime
	m ()V succeed
	n ()Ljava/lang/Throwable; getError
	o ()V clearStructure
	p ()J getTick
	q ()Lnet/minecraft/gametest/framework/GameTestHarnessSequence; createSequence
	r ()Z isRequired
	s ()Z isOptional
	t ()Ljava/lang/String; getStructureName
	u ()Lnet/minecraft/world/level/block/EnumBlockRotation; getRotation
	v ()Lnet/minecraft/gametest/framework/GameTestHarnessTestFunction; getTestFunction
	w ()I getTimeoutTicks
	x ()Z isFlaky
	y ()I maxAttempts
	z ()I requiredSuccesses
net/minecraft/gametest/framework/GameTestHarnessListener net/minecraft/gametest/framework/GameTestListener
	a (Lnet/minecraft/gametest/framework/GameTestHarnessInfo;)V testStructureLoaded
	b (Lnet/minecraft/gametest/framework/GameTestHarnessInfo;)V testPassed
	c (Lnet/minecraft/gametest/framework/GameTestHarnessInfo;)V testFailed
net/minecraft/gametest/framework/GameTestHarnessLogger net/minecraft/gametest/framework/LogTestReporter
	a LOGGER
	a (Lnet/minecraft/gametest/framework/GameTestHarnessInfo;)V onTestFailed
	b (Lnet/minecraft/gametest/framework/GameTestHarnessInfo;)V onTestSuccess
net/minecraft/gametest/framework/GameTestHarnessRegistry net/minecraft/gametest/framework/GameTestRegistry
	a TEST_FUNCTIONS
	b TEST_CLASS_NAMES
	c BEFORE_BATCH_FUNCTIONS
	d AFTER_BATCH_FUNCTIONS
	e LAST_FAILED_TESTS
	a ()Ljava/util/Collection; getAllTestFunctions
	a (Ljava/lang/Class;)V register
	a (Ljava/lang/String;)Ljava/util/Collection; getTestFunctionsForClassName
	a (Ljava/lang/reflect/Method;)V register
	a (Ljava/lang/reflect/Method;Ljava/lang/Class;Ljava/util/function/Function;Ljava/util/Map;)V registerBatchFunction
	a (Lnet/minecraft/gametest/framework/GameTestHarnessTestFunction;)V rememberFailedTest
	a (Lnet/minecraft/gametest/framework/GameTestHarnessTestFunction;Ljava/lang/String;)Z isTestFunctionPartOfClass
	b ()Ljava/util/Collection; getAllTestClassNames
	b (Ljava/lang/String;)Z isTestClass
	b (Ljava/lang/reflect/Method;)Ljava/util/Collection; useTestGeneratorMethod
	c ()Ljava/util/Collection; getLastFailedTests
	c (Ljava/lang/String;)Ljava/util/function/Consumer; getBeforeBatchFunction
	c (Ljava/lang/reflect/Method;)Lnet/minecraft/gametest/framework/GameTestHarnessTestFunction; turnMethodIntoTestFunction
	d ()V forgetFailedTests
	d (Ljava/lang/String;)Ljava/util/function/Consumer; getAfterBatchFunction
	d (Ljava/lang/reflect/Method;)Ljava/util/function/Consumer; turnMethodIntoConsumer
	e (Ljava/lang/String;)Ljava/util/Optional; findTestFunction
	f (Ljava/lang/String;)Lnet/minecraft/gametest/framework/GameTestHarnessTestFunction; getTestFunction
net/minecraft/gametest/framework/GameTestHarnessRunner net/minecraft/gametest/framework/GameTestRunner
	a PADDING_AROUND_EACH_STRUCTURE
	b SPACE_BETWEEN_COLUMNS
	c SPACE_BETWEEN_ROWS
	d DEFAULT_TESTS_PER_ROW
	e MAX_TESTS_PER_BATCH
	a (Ljava/util/Collection;)Ljava/util/Collection; groupTestsIntoBatches
	a (Ljava/util/Collection;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/gametest/framework/GameTestHarnessTicker;I)Ljava/util/Collection; runTestBatches
	a (Lnet/minecraft/gametest/framework/GameTestHarnessInfo;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/gametest/framework/GameTestHarnessTicker;)V runTest
	a (Lnet/minecraft/server/level/WorldServer;)V clearMarkers
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/gametest/framework/GameTestHarnessTicker;I)V clearAllTests
	b (Ljava/util/Collection;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/gametest/framework/GameTestHarnessTicker;I)Ljava/util/Collection; runTests
net/minecraft/gametest/framework/GameTestHarnessSequence net/minecraft/gametest/framework/GameTestSequence
	a parent
	b events
	c lastTick
	a ()V thenSucceed
	a (I)Lnet/minecraft/gametest/framework/GameTestHarnessSequence; thenIdle
	a (ILjava/lang/Runnable;)Lnet/minecraft/gametest/framework/GameTestHarnessSequence; thenExecuteAfter
	a (J)V tickAndContinue
	a (JLjava/lang/Runnable;)Lnet/minecraft/gametest/framework/GameTestHarnessSequence; thenWaitUntil
	a (Ljava/lang/Runnable;)Lnet/minecraft/gametest/framework/GameTestHarnessSequence; thenWaitUntil
	a (Ljava/util/function/Supplier;)V thenFail
	b ()Lqi$a; thenTrigger
	b (ILjava/lang/Runnable;)Lnet/minecraft/gametest/framework/GameTestHarnessSequence; thenExecuteFor
	b (J)V tickAndFailIfNotComplete
	b (Ljava/lang/Runnable;)Lnet/minecraft/gametest/framework/GameTestHarnessSequence; thenExecute
	c (J)V tick
	c (Ljava/lang/Runnable;)V executeWithoutFail
net/minecraft/gametest/framework/GameTestHarnessStructures net/minecraft/gametest/framework/StructureUtils
	a DEFAULT_TEST_STRUCTURES_DIR
	b testStructuresDir
	c LOGGER
	d HOW_MANY_CHUNKS_TO_LOAD_IN_EACH_DIRECTION_OF_STRUCTURE
	a (I)Lnet/minecraft/world/level/block/EnumBlockRotation; getRotationForRotationSteps
	a (ILnet/minecraft/core/BlockPosition;Lnet/minecraft/server/level/WorldServer;)V clearBlock
	a (Ljava/lang/String;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BaseBlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/server/level/WorldServer;)V createNewEmptyStructureBlock
	a (Ljava/lang/String;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;ILnet/minecraft/server/level/WorldServer;Z)Lnet/minecraft/world/level/block/entity/TileEntityStructure; spawnStructure
	a (Ljava/lang/String;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/server/level/WorldServer;Z)Lnet/minecraft/world/level/block/entity/TileEntityStructure; createStructureBlock
	a (Ljava/lang/String;Lnet/minecraft/server/level/WorldServer;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure; getStructureTemplate
	a (Ljava/nio/file/Path;)Lnet/minecraft/nbt/NBTTagCompound; tryLoadStructure
	a (Lnet/minecraft/core/BlockPosition;ILnet/minecraft/server/level/WorldServer;)Ljava/util/Optional; findStructureBlockContainingPos
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BaseBlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; getStructureBoundingBox
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/server/level/WorldServer;)Z doesStructureContain
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/server/level/WorldServer;)V addCommandBlockAndButtonToStartTest
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/server/level/WorldServer;)V forceLoadChunks
	a (Lnet/minecraft/world/level/block/EnumBlockRotation;)I getRotationStepsForRotation
	a (Lnet/minecraft/world/level/block/entity/TileEntityStructure;)Lnet/minecraft/world/phys/AxisAlignedBB; getStructureBounds
	a (Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;ILnet/minecraft/server/level/WorldServer;)V clearSpaceForStructure
	a ([Ljava/lang/String;)V main
	b (Lnet/minecraft/core/BlockPosition;ILnet/minecraft/server/level/WorldServer;)Lnet/minecraft/core/BlockPosition; findNearestStructureBlock
	b (Lnet/minecraft/world/level/block/entity/TileEntityStructure;)Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; getStructureBoundingBox
	c (Lnet/minecraft/core/BlockPosition;ILnet/minecraft/server/level/WorldServer;)Ljava/util/Collection; findStructureBlocks
net/minecraft/gametest/framework/GameTestHarnessTestClassArgument net/minecraft/gametest/framework/TestClassNameArgument
	a EXAMPLES
	a ()Lnet/minecraft/gametest/framework/GameTestHarnessTestClassArgument; testClassName
	a (Lcom/mojang/brigadier/StringReader;)Ljava/lang/String; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/lang/String; getTestClassName
net/minecraft/gametest/framework/GameTestHarnessTestCommand net/minecraft/gametest/framework/TestCommand
	a DEFAULT_CLEAR_RADIUS
	b MAX_CLEAR_RADIUS
	c STRUCTURE_BLOCK_NEARBY_SEARCH_RADIUS
	d STRUCTURE_BLOCK_FULL_SEARCH_RADIUS
	e TEST_POS_Z_OFFSET_FROM_PLAYER
	f SHOW_POS_DURATION_MS
	g DEFAULT_X_SIZE
	h DEFAULT_Y_SIZE
	i DEFAULT_Z_SIZE
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;)I runNearbyTest
	a (Lnet/minecraft/commands/CommandListenerWrapper;I)I clearAllTests
	a (Lnet/minecraft/commands/CommandListenerWrapper;II)I runAllTests
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/lang/String;)I showPos
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/lang/String;II)I runAllTestsInClass
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/lang/String;III)I createNewStructure
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;II)V runTests
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/gametest/framework/GameTestHarnessTestFunction;I)I runTest
	a (Lnet/minecraft/commands/CommandListenerWrapper;ZII)I runLastFailedTests
	a (Lnet/minecraft/gametest/framework/GameTestHarnessTestFunction;Lnet/minecraft/server/level/WorldServer;)V runTestPreparation
	a (Lnet/minecraft/server/level/WorldServer;Ljava/lang/String;Lnet/minecraft/EnumChatFormat;)V say
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/gametest/framework/GameTestHarnessCollector;)V runTest
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/gametest/framework/GameTestHarnessCollector;)V showTestSummaryIfAllDone
	b (Lnet/minecraft/commands/CommandListenerWrapper;)I runAllNearbyTests
	b (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/lang/String;)V say
	c (Lnet/minecraft/commands/CommandListenerWrapper;)I exportNearestTestStructure
	c (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/lang/String;)I exportTestStructure
	d (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/lang/String;)I importTestStructure
net/minecraft/gametest/framework/GameTestHarnessTestFunction net/minecraft/gametest/framework/TestFunction
	a batchName
	b testName
	c structureName
	d required
	e maxAttempts
	f requiredSuccesses
	g function
	h maxTicks
	i setupTicks
	j rotation
	a ()Ljava/lang/String; getTestName
	a (Lnet/minecraft/gametest/framework/GameTestHarnessHelper;)V run
	b ()Ljava/lang/String; getStructureName
	c ()I getMaxTicks
	d ()Z isRequired
	e ()Ljava/lang/String; getBatchName
	f ()J getSetupTicks
	g ()Lnet/minecraft/world/level/block/EnumBlockRotation; getRotation
	h ()Z isFlaky
	i ()I getMaxAttempts
	j ()I getRequiredSuccesses
net/minecraft/gametest/framework/GameTestHarnessTestFunctionArgument net/minecraft/gametest/framework/TestFunctionArgument
	a EXAMPLES
	a ()Lnet/minecraft/gametest/framework/GameTestHarnessTestFunctionArgument; testFunctionArgument
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/gametest/framework/GameTestHarnessTestFunction; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/gametest/framework/GameTestHarnessTestFunction; getTestFunction
net/minecraft/gametest/framework/GameTestHarnessTicker net/minecraft/gametest/framework/GameTestTicker
	a SINGLETON
	b testInfos
	a ()V clear
	a (Lnet/minecraft/gametest/framework/GameTestHarnessInfo;)V add
	b ()V tick
net/minecraft/gametest/framework/GameTestHarnessTimeout net/minecraft/gametest/framework/GameTestTimeoutException
net/minecraft/locale/LocaleLanguage net/minecraft/locale/Language
	a DEFAULT
	b LOGGER
	c GSON
	d UNSUPPORTED_FORMAT_PATTERN
	e instance
	a ()Lnet/minecraft/locale/LocaleLanguage; getInstance
	a (Ljava/io/InputStream;Ljava/util/function/BiConsumer;)V loadFromJson
	a (Ljava/lang/String;)Ljava/lang/String; getOrDefault
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; getOrDefault
	a (Ljava/util/List;)Ljava/util/List; getVisualOrder
	a (Lnet/minecraft/locale/LocaleLanguage;)V inject
	a (Lnet/minecraft/network/chat/IChatFormatted;)Lnet/minecraft/util/FormattedString; getVisualOrder
	b ()Z isDefaultRightToLeft
	b (Ljava/lang/String;)Z has
	c ()Lnet/minecraft/locale/LocaleLanguage; loadDefault
net/minecraft/nbt/DynamicOpsNBT net/minecraft/nbt/NbtOps
	a INSTANCE
	b WRAPPER_MARKER
	a ()Lnet/minecraft/nbt/NBTBase; empty
	a (B)Lnet/minecraft/nbt/NBTBase; createByte
	a (D)Lnet/minecraft/nbt/NBTBase; createDouble
	a (F)Lnet/minecraft/nbt/NBTBase; createFloat
	a (I)Lnet/minecraft/nbt/NBTBase; createInt
	a (J)Lnet/minecraft/nbt/NBTBase; createLong
	a (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/nbt/NBTBase;)Ljava/lang/Object; convertTo
	a (Ljava/lang/Number;)Lnet/minecraft/nbt/NBTBase; createNumeric
	a (Ljava/lang/String;)Lnet/minecraft/nbt/NBTBase; createString
	a (Ljava/nio/ByteBuffer;)Lnet/minecraft/nbt/NBTBase; createByteList
	a (Ljava/util/stream/IntStream;)Lnet/minecraft/nbt/NBTBase; createIntList
	a (Ljava/util/stream/LongStream;)Lnet/minecraft/nbt/NBTBase; createLongList
	a (Ljava/util/stream/Stream;)Lnet/minecraft/nbt/NBTBase; createMap
	a (Lnet/minecraft/nbt/NBTBase;)Lcom/mojang/serialization/DataResult; getNumberValue
	a (Lnet/minecraft/nbt/NBTBase;Lcom/mojang/serialization/MapLike;)Lcom/mojang/serialization/DataResult; mergeToMap
	a (Lnet/minecraft/nbt/NBTBase;Ljava/lang/String;)Lnet/minecraft/nbt/NBTBase; remove
	a (Lnet/minecraft/nbt/NBTBase;Ljava/util/List;)Lcom/mojang/serialization/DataResult; mergeToList
	a (Lnet/minecraft/nbt/NBTBase;Lnet/minecraft/nbt/NBTBase;)Lcom/mojang/serialization/DataResult; mergeToList
	a (Lnet/minecraft/nbt/NBTBase;Lnet/minecraft/nbt/NBTBase;Lnet/minecraft/nbt/NBTBase;)Lcom/mojang/serialization/DataResult; mergeToMap
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTBase; tryUnwrap
	a (S)Lnet/minecraft/nbt/NBTBase; createShort
	a (Z)Lnet/minecraft/nbt/NBTBase; createBoolean
	b (Ljava/util/stream/Stream;)Lnet/minecraft/nbt/NBTBase; createList
	b (Lnet/minecraft/nbt/NBTBase;)Lcom/mojang/serialization/DataResult; getStringValue
	c (Lnet/minecraft/nbt/NBTBase;)Lcom/mojang/serialization/DataResult; getMapValues
	d (Lnet/minecraft/nbt/NBTBase;)Lcom/mojang/serialization/DataResult; getMapEntries
	e (Lnet/minecraft/nbt/NBTBase;)Lcom/mojang/serialization/DataResult; getMap
	f (Lnet/minecraft/nbt/NBTBase;)Lcom/mojang/serialization/DataResult; getStream
	g (Lnet/minecraft/nbt/NBTBase;)Lcom/mojang/serialization/DataResult; getList
	h (Lnet/minecraft/nbt/NBTBase;)Lcom/mojang/serialization/DataResult; getByteBuffer
	i (Lnet/minecraft/nbt/NBTBase;)Lcom/mojang/serialization/DataResult; getIntStream
	j (Lnet/minecraft/nbt/NBTBase;)Lcom/mojang/serialization/DataResult; getLongStream
	k (Lnet/minecraft/nbt/NBTBase;)Ljava/util/Optional; createCollector
net/minecraft/nbt/GameProfileSerializer net/minecraft/nbt/NbtUtils
	a SNBT_DATA_TAG
	b YXZ_LISTTAG_INT_COMPARATOR
	c YXZ_LISTTAG_DOUBLE_COMPARATOR
	d PROPERTIES_START
	e PROPERTIES_END
	f ELEMENT_SEPARATOR
	g KEY_VALUE_SEPARATOR
	h COMMA_SPLITTER
	i COLON_SPLITTER
	j LOGGER
	k INDENT
	l NOT_FOUND
	a (ILjava/lang/StringBuilder;)Ljava/lang/StringBuilder; indent
	a (Ljava/lang/String;)Lnet/minecraft/nbt/NBTTagCompound; snbtToStructure
	a (Ljava/lang/StringBuilder;Lnet/minecraft/nbt/NBTBase;IZ)Ljava/lang/StringBuilder; prettyPrint
	a (Ljava/util/UUID;)Lnet/minecraft/nbt/NBTTagIntArray; createUUID
	a (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/nbt/NBTTagCompound; writeBlockPos
	a (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/level/block/state/IBlockData; readBlockState
	a (Lnet/minecraft/nbt/NBTBase;)Ljava/util/UUID; loadUUID
	a (Lnet/minecraft/nbt/NBTBase;Lnet/minecraft/nbt/NBTBase;Z)Z compareNbt
	a (Lnet/minecraft/nbt/NBTBase;Z)Ljava/lang/String; prettyPrint
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lcom/mojang/authlib/GameProfile; readGameProfile
	a (Lnet/minecraft/nbt/NBTTagCompound;I)Lnet/minecraft/nbt/NBTTagCompound; addDataVersion
	a (Lnet/minecraft/nbt/NBTTagCompound;Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/nbt/NBTTagCompound; writeGameProfile
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/nbt/NBTTagCompound; writeBlockState
	a (Lnet/minecraft/world/level/block/state/IBlockDataHolder;Lnet/minecraft/world/level/block/state/properties/IBlockState;Ljava/lang/String;Lnet/minecraft/nbt/NBTTagCompound;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/level/block/state/IBlockDataHolder; setValueHelper
	a (Lnet/minecraft/world/level/block/state/properties/IBlockState;Ljava/lang/Comparable;)Ljava/lang/String; getName
	a (Lnet/minecraft/world/level/material/Fluid;)Lnet/minecraft/nbt/NBTTagCompound; writeFluidState
	b (Ljava/lang/String;)Lnet/minecraft/nbt/NBTTagCompound; unpackBlockState
	b (Lnet/minecraft/nbt/NBTBase;)Ljava/lang/String; prettyPrint
	b (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/core/BlockPosition; readBlockPos
	b (Lnet/minecraft/nbt/NBTTagCompound;I)I getDataVersion
	c (Lnet/minecraft/nbt/NBTBase;)Lnet/minecraft/network/chat/IChatBaseComponent; toPrettyComponent
	c (Lnet/minecraft/nbt/NBTTagCompound;)Ljava/lang/String; structureToSnbt
	d (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; packStructureTemplate
	e (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; unpackStructureTemplate
	f (Lnet/minecraft/nbt/NBTTagCompound;)Ljava/lang/String; packBlockState
	g (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; addCurrentDataVersion
net/minecraft/nbt/MojangsonParser net/minecraft/nbt/TagParser
	a ERROR_TRAILING_DATA
	b ERROR_EXPECTED_KEY
	c ERROR_EXPECTED_VALUE
	d ERROR_INSERT_MIXED_LIST
	e ERROR_INSERT_MIXED_ARRAY
	f ERROR_INVALID_ARRAY
	g ELEMENT_SEPARATOR
	h NAME_VALUE_SEPARATOR
	i LIST_OPEN
	j LIST_CLOSE
	k STRUCT_CLOSE
	l STRUCT_OPEN
	m DOUBLE_PATTERN_NOSUFFIX
	n DOUBLE_PATTERN
	o FLOAT_PATTERN
	p BYTE_PATTERN
	q LONG_PATTERN
	r SHORT_PATTERN
	s INT_PATTERN
	t reader
	a ()Lnet/minecraft/nbt/NBTTagCompound; readSingleStruct
	a (C)V expect
	a (Ljava/lang/String;)Lnet/minecraft/nbt/NBTTagCompound; parseTag
	a (Lnet/minecraft/nbt/NBTTagType;Lnet/minecraft/nbt/NBTTagType;)Ljava/util/List; readArray
	b ()Ljava/lang/String; readKey
	b (Ljava/lang/String;)Lnet/minecraft/nbt/NBTBase; type
	c ()Lnet/minecraft/nbt/NBTBase; readTypedValue
	d ()Lnet/minecraft/nbt/NBTBase; readValue
	e ()Lnet/minecraft/nbt/NBTBase; readList
	f ()Lnet/minecraft/nbt/NBTTagCompound; readStruct
	g ()Lnet/minecraft/nbt/NBTBase; readListTag
	h ()Lnet/minecraft/nbt/NBTBase; readArrayTag
	i ()Z hasElementSeparator
net/minecraft/nbt/NBTBase net/minecraft/nbt/Tag
	d OBJECT_HEADER
	e ARRAY_HEADER
	f OBJECT_REFERENCE
	g STRING_SIZE
	h TAG_END
	i TAG_BYTE
	j TAG_SHORT
	k TAG_INT
	l TAG_LONG
	m TAG_FLOAT
	n TAG_DOUBLE
	o TAG_BYTE_ARRAY
	p TAG_STRING
	q TAG_LIST
	r TAG_COMPOUND
	s TAG_INT_ARRAY
	t TAG_LONG_ARRAY
	u TAG_ANY_NUMERIC
	v MAX_DEPTH
	a ()I sizeInBytes
	a (Ljava/io/DataOutput;)V write
	a (Lnet/minecraft/nbt/StreamTagVisitor;)Lru$b; accept
	a (Lnet/minecraft/nbt/TagVisitor;)V accept
	b ()B getId
	b (Lnet/minecraft/nbt/StreamTagVisitor;)V acceptAsRoot
	c ()Lnet/minecraft/nbt/NBTTagType; getType
	d ()Lnet/minecraft/nbt/NBTBase; copy
	f_ ()Ljava/lang/String; getAsString
net/minecraft/nbt/NBTCompressedStreamTools net/minecraft/nbt/NbtIo
	a (Ljava/io/DataInput;)Lnet/minecraft/nbt/NBTTagCompound; read
	a (Ljava/io/DataInput;ILnet/minecraft/nbt/NBTReadLimiter;)Lnet/minecraft/nbt/NBTBase; readUnnamedTag
	a (Ljava/io/DataInput;Lnet/minecraft/nbt/NBTReadLimiter;)Lnet/minecraft/nbt/NBTTagCompound; read
	a (Ljava/io/DataInput;Lnet/minecraft/nbt/StreamTagVisitor;)V parse
	a (Ljava/io/File;)Lnet/minecraft/nbt/NBTTagCompound; readCompressed
	a (Ljava/io/File;Lnet/minecraft/nbt/StreamTagVisitor;)V parseCompressed
	a (Ljava/io/InputStream;)Lnet/minecraft/nbt/NBTTagCompound; readCompressed
	a (Ljava/io/InputStream;Lnet/minecraft/nbt/StreamTagVisitor;)V parseCompressed
	a (Lnet/minecraft/nbt/NBTBase;Ljava/io/DataOutput;)V writeUnnamedTag
	a (Lnet/minecraft/nbt/NBTTagCompound;Ljava/io/DataOutput;)V write
	a (Lnet/minecraft/nbt/NBTTagCompound;Ljava/io/File;)V writeCompressed
	a (Lnet/minecraft/nbt/NBTTagCompound;Ljava/io/OutputStream;)V writeCompressed
	b (Ljava/io/File;)Lnet/minecraft/nbt/NBTTagCompound; read
	b (Ljava/io/InputStream;)Ljava/io/DataInputStream; createDecompressorStream
	b (Lnet/minecraft/nbt/NBTTagCompound;Ljava/io/File;)V write
net/minecraft/nbt/NBTList net/minecraft/nbt/CollectionTag
	a (ILnet/minecraft/nbt/NBTBase;)Z setTag
	b (ILnet/minecraft/nbt/NBTBase;)Z addTag
	c (I)Lnet/minecraft/nbt/NBTBase; remove
	c (ILnet/minecraft/nbt/NBTBase;)V add
	d (ILnet/minecraft/nbt/NBTBase;)Lnet/minecraft/nbt/NBTBase; set
	f ()B getElementType
net/minecraft/nbt/NBTNumber net/minecraft/nbt/NumericTag
	f ()J getAsLong
	g ()I getAsInt
	h ()S getAsShort
	i ()B getAsByte
	j ()D getAsDouble
	k ()F getAsFloat
	l ()Ljava/lang/Number; getAsNumber
net/minecraft/nbt/NBTReadLimiter net/minecraft/nbt/NbtAccounter
	a UNLIMITED
	b quota
	c usage
	a ()J getUsage
	a (J)V accountBytes
net/minecraft/nbt/NBTTagByte net/minecraft/nbt/ByteTag
	a TYPE
	b ZERO
	c ONE
	w SELF_SIZE_IN_BYTES
	x data
	a ()I sizeInBytes
	a (B)Lnet/minecraft/nbt/NBTTagByte; valueOf
	a (Ljava/io/DataOutput;)V write
	a (Lnet/minecraft/nbt/StreamTagVisitor;)Lru$b; accept
	a (Lnet/minecraft/nbt/TagVisitor;)V accept
	a (Z)Lnet/minecraft/nbt/NBTTagByte; valueOf
	b ()B getId
	c ()Lnet/minecraft/nbt/NBTTagType; getType
	d ()Lnet/minecraft/nbt/NBTBase; copy
	e ()Lnet/minecraft/nbt/NBTTagByte; copy
	f ()J getAsLong
	g ()I getAsInt
	h ()S getAsShort
	i ()B getAsByte
	j ()D getAsDouble
	k ()F getAsFloat
	l ()Ljava/lang/Number; getAsNumber
net/minecraft/nbt/NBTTagByteArray net/minecraft/nbt/ByteArrayTag
	a TYPE
	b SELF_SIZE_IN_BYTES
	c data
	a ()I sizeInBytes
	a (I)Lnet/minecraft/nbt/NBTTagByte; get
	a (ILnet/minecraft/nbt/NBTBase;)Z setTag
	a (ILnet/minecraft/nbt/NBTTagByte;)Lnet/minecraft/nbt/NBTTagByte; set
	a (Ljava/io/DataOutput;)V write
	a (Ljava/util/List;)[B toArray
	a (Lnet/minecraft/nbt/StreamTagVisitor;)Lru$b; accept
	a (Lnet/minecraft/nbt/TagVisitor;)V accept
	b ()B getId
	b (I)Lnet/minecraft/nbt/NBTTagByte; remove
	b (ILnet/minecraft/nbt/NBTBase;)Z addTag
	b (ILnet/minecraft/nbt/NBTTagByte;)V add
	c ()Lnet/minecraft/nbt/NBTTagType; getType
	c (I)Lnet/minecraft/nbt/NBTBase; remove
	c (ILnet/minecraft/nbt/NBTBase;)V add
	d ()Lnet/minecraft/nbt/NBTBase; copy
	d (ILnet/minecraft/nbt/NBTBase;)Lnet/minecraft/nbt/NBTBase; set
	e ()[B getAsByteArray
	f ()B getElementType
net/minecraft/nbt/NBTTagCompound net/minecraft/nbt/CompoundTag
	a CODEC
	b TYPE
	c SELF_SIZE_IN_BYTES
	w MAP_ENTRY_SIZE_IN_BYTES
	x tags
	a ()I sizeInBytes
	a (Ljava/io/DataInput;Lnet/minecraft/nbt/NBTReadLimiter;)B readNamedTagType
	a (Ljava/io/DataOutput;)V write
	a (Ljava/lang/String;)Ljava/util/UUID; getUUID
	a (Ljava/lang/String;B)V putByte
	a (Ljava/lang/String;D)V putDouble
	a (Ljava/lang/String;F)V putFloat
	a (Ljava/lang/String;I)V putInt
	a (Ljava/lang/String;J)V putLong
	a (Ljava/lang/String;Ljava/lang/String;)V putString
	a (Ljava/lang/String;Ljava/util/List;)V putByteArray
	a (Ljava/lang/String;Ljava/util/UUID;)V putUUID
	a (Ljava/lang/String;Lnet/minecraft/nbt/NBTBase;)Lnet/minecraft/nbt/NBTBase; put
	a (Ljava/lang/String;Lnet/minecraft/nbt/NBTBase;Ljava/io/DataOutput;)V writeNamedTag
	a (Ljava/lang/String;Lnet/minecraft/nbt/NBTTagType;Ljava/lang/ClassCastException;)Lnet/minecraft/CrashReport; createReport
	a (Ljava/lang/String;S)V putShort
	a (Ljava/lang/String;Z)V putBoolean
	a (Ljava/lang/String;[B)V putByteArray
	a (Ljava/lang/String;[I)V putIntArray
	a (Ljava/lang/String;[J)V putLongArray
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; merge
	a (Lnet/minecraft/nbt/NBTTagType;Ljava/lang/String;Ljava/io/DataInput;ILnet/minecraft/nbt/NBTReadLimiter;)Lnet/minecraft/nbt/NBTBase; readNamedTagData
	a (Lnet/minecraft/nbt/StreamTagVisitor;)Lru$b; accept
	a (Lnet/minecraft/nbt/TagVisitor;)V accept
	b ()B getId
	b (Ljava/io/DataInput;Lnet/minecraft/nbt/NBTReadLimiter;)Ljava/lang/String; readNamedTagName
	b (Ljava/lang/String;)Z hasUUID
	b (Ljava/lang/String;I)Z contains
	b (Ljava/lang/String;Ljava/util/List;)V putIntArray
	c ()Lnet/minecraft/nbt/NBTTagType; getType
	c (Ljava/lang/String;)Lnet/minecraft/nbt/NBTBase; get
	c (Ljava/lang/String;I)Lnet/minecraft/nbt/NBTTagList; getList
	c (Ljava/lang/String;Ljava/util/List;)V putLongArray
	d ()Lnet/minecraft/nbt/NBTBase; copy
	d (Ljava/lang/String;)B getTagType
	e ()Ljava/util/Set; getAllKeys
	e (Ljava/lang/String;)Z contains
	f ()I size
	f (Ljava/lang/String;)B getByte
	g ()Z isEmpty
	g (Ljava/lang/String;)S getShort
	h ()Lnet/minecraft/nbt/NBTTagCompound; copy
	h (Ljava/lang/String;)I getInt
	i ()Ljava/util/Map; entries
	i (Ljava/lang/String;)J getLong
	j (Ljava/lang/String;)F getFloat
	k (Ljava/lang/String;)D getDouble
	l (Ljava/lang/String;)Ljava/lang/String; getString
	m (Ljava/lang/String;)[B getByteArray
	n (Ljava/lang/String;)[I getIntArray
	o (Ljava/lang/String;)[J getLongArray
	p (Ljava/lang/String;)Lnet/minecraft/nbt/NBTTagCompound; getCompound
	q (Ljava/lang/String;)Z getBoolean
	r (Ljava/lang/String;)V remove
net/minecraft/nbt/NBTTagDouble net/minecraft/nbt/DoubleTag
	a ZERO
	b TYPE
	c SELF_SIZE_IN_BYTES
	w data
	a ()I sizeInBytes
	a (D)Lnet/minecraft/nbt/NBTTagDouble; valueOf
	a (Ljava/io/DataOutput;)V write
	a (Lnet/minecraft/nbt/StreamTagVisitor;)Lru$b; accept
	a (Lnet/minecraft/nbt/TagVisitor;)V accept
	b ()B getId
	c ()Lnet/minecraft/nbt/NBTTagType; getType
	d ()Lnet/minecraft/nbt/NBTBase; copy
	e ()Lnet/minecraft/nbt/NBTTagDouble; copy
	f ()J getAsLong
	g ()I getAsInt
	h ()S getAsShort
	i ()B getAsByte
	j ()D getAsDouble
	k ()F getAsFloat
	l ()Ljava/lang/Number; getAsNumber
net/minecraft/nbt/NBTTagEnd net/minecraft/nbt/EndTag
	a TYPE
	b INSTANCE
	c SELF_SIZE_IN_BYTES
	a ()I sizeInBytes
	a (Ljava/io/DataOutput;)V write
	a (Lnet/minecraft/nbt/StreamTagVisitor;)Lru$b; accept
	a (Lnet/minecraft/nbt/TagVisitor;)V accept
	b ()B getId
	c ()Lnet/minecraft/nbt/NBTTagType; getType
	d ()Lnet/minecraft/nbt/NBTBase; copy
	e ()Lnet/minecraft/nbt/NBTTagEnd; copy
net/minecraft/nbt/NBTTagFloat net/minecraft/nbt/FloatTag
	a ZERO
	b TYPE
	c SELF_SIZE_IN_BYTES
	w data
	a ()I sizeInBytes
	a (F)Lnet/minecraft/nbt/NBTTagFloat; valueOf
	a (Ljava/io/DataOutput;)V write
	a (Lnet/minecraft/nbt/StreamTagVisitor;)Lru$b; accept
	a (Lnet/minecraft/nbt/TagVisitor;)V accept
	b ()B getId
	c ()Lnet/minecraft/nbt/NBTTagType; getType
	d ()Lnet/minecraft/nbt/NBTBase; copy
	e ()Lnet/minecraft/nbt/NBTTagFloat; copy
	f ()J getAsLong
	g ()I getAsInt
	h ()S getAsShort
	i ()B getAsByte
	j ()D getAsDouble
	k ()F getAsFloat
	l ()Ljava/lang/Number; getAsNumber
net/minecraft/nbt/NBTTagInt net/minecraft/nbt/IntTag
	a TYPE
	b SELF_SIZE_IN_BYTES
	c data
	a ()I sizeInBytes
	a (I)Lnet/minecraft/nbt/NBTTagInt; valueOf
	a (Ljava/io/DataOutput;)V write
	a (Lnet/minecraft/nbt/StreamTagVisitor;)Lru$b; accept
	a (Lnet/minecraft/nbt/TagVisitor;)V accept
	b ()B getId
	c ()Lnet/minecraft/nbt/NBTTagType; getType
	d ()Lnet/minecraft/nbt/NBTBase; copy
	e ()Lnet/minecraft/nbt/NBTTagInt; copy
	f ()J getAsLong
	g ()I getAsInt
	h ()S getAsShort
	i ()B getAsByte
	j ()D getAsDouble
	k ()F getAsFloat
	l ()Ljava/lang/Number; getAsNumber
net/minecraft/nbt/NBTTagIntArray net/minecraft/nbt/IntArrayTag
	a TYPE
	b SELF_SIZE_IN_BYTES
	c data
	a ()I sizeInBytes
	a (I)Lnet/minecraft/nbt/NBTTagInt; get
	a (ILnet/minecraft/nbt/NBTBase;)Z setTag
	a (ILnet/minecraft/nbt/NBTTagInt;)Lnet/minecraft/nbt/NBTTagInt; set
	a (Ljava/io/DataOutput;)V write
	a (Ljava/util/List;)[I toArray
	a (Lnet/minecraft/nbt/StreamTagVisitor;)Lru$b; accept
	a (Lnet/minecraft/nbt/TagVisitor;)V accept
	b ()B getId
	b (I)Lnet/minecraft/nbt/NBTTagInt; remove
	b (ILnet/minecraft/nbt/NBTBase;)Z addTag
	b (ILnet/minecraft/nbt/NBTTagInt;)V add
	c ()Lnet/minecraft/nbt/NBTTagType; getType
	c (I)Lnet/minecraft/nbt/NBTBase; remove
	c (ILnet/minecraft/nbt/NBTBase;)V add
	d ()Lnet/minecraft/nbt/NBTBase; copy
	d (ILnet/minecraft/nbt/NBTBase;)Lnet/minecraft/nbt/NBTBase; set
	e ()Lnet/minecraft/nbt/NBTTagIntArray; copy
	f ()B getElementType
	g ()[I getAsIntArray
net/minecraft/nbt/NBTTagList net/minecraft/nbt/ListTag
	a TYPE
	b SELF_SIZE_IN_BYTES
	c list
	w type
	a ()I sizeInBytes
	a (I)Lnet/minecraft/nbt/NBTTagCompound; getCompound
	a (ILnet/minecraft/nbt/NBTBase;)Z setTag
	a (Ljava/io/DataOutput;)V write
	a (Lnet/minecraft/nbt/NBTBase;)Z updateType
	a (Lnet/minecraft/nbt/StreamTagVisitor;)Lru$b; accept
	a (Lnet/minecraft/nbt/TagVisitor;)V accept
	b ()B getId
	b (I)Lnet/minecraft/nbt/NBTTagList; getList
	b (ILnet/minecraft/nbt/NBTBase;)Z addTag
	c ()Lnet/minecraft/nbt/NBTTagType; getType
	c (I)Lnet/minecraft/nbt/NBTBase; remove
	c (ILnet/minecraft/nbt/NBTBase;)V add
	d ()Lnet/minecraft/nbt/NBTBase; copy
	d (I)S getShort
	d (ILnet/minecraft/nbt/NBTBase;)Lnet/minecraft/nbt/NBTBase; set
	e ()Lnet/minecraft/nbt/NBTTagList; copy
	e (I)I getInt
	f ()B getElementType
	f (I)[I getIntArray
	g ()V updateTypeAfterRemove
	g (I)[J getLongArray
	h (I)D getDouble
	i (I)F getFloat
	j (I)Ljava/lang/String; getString
	k (I)Lnet/minecraft/nbt/NBTBase; get
net/minecraft/nbt/NBTTagLong net/minecraft/nbt/LongTag
	a TYPE
	b SELF_SIZE_IN_BYTES
	c data
	a ()I sizeInBytes
	a (J)Lnet/minecraft/nbt/NBTTagLong; valueOf
	a (Ljava/io/DataOutput;)V write
	a (Lnet/minecraft/nbt/StreamTagVisitor;)Lru$b; accept
	a (Lnet/minecraft/nbt/TagVisitor;)V accept
	b ()B getId
	c ()Lnet/minecraft/nbt/NBTTagType; getType
	d ()Lnet/minecraft/nbt/NBTBase; copy
	e ()Lnet/minecraft/nbt/NBTTagLong; copy
	f ()J getAsLong
	g ()I getAsInt
	h ()S getAsShort
	i ()B getAsByte
	j ()D getAsDouble
	k ()F getAsFloat
	l ()Ljava/lang/Number; getAsNumber
net/minecraft/nbt/NBTTagLongArray net/minecraft/nbt/LongArrayTag
	a TYPE
	b SELF_SIZE_IN_BYTES
	c data
	a ()I sizeInBytes
	a (I)Lnet/minecraft/nbt/NBTTagLong; get
	a (ILnet/minecraft/nbt/NBTBase;)Z setTag
	a (ILnet/minecraft/nbt/NBTTagLong;)Lnet/minecraft/nbt/NBTTagLong; set
	a (Ljava/io/DataOutput;)V write
	a (Ljava/util/List;)[J toArray
	a (Lnet/minecraft/nbt/StreamTagVisitor;)Lru$b; accept
	a (Lnet/minecraft/nbt/TagVisitor;)V accept
	b ()B getId
	b (I)Lnet/minecraft/nbt/NBTTagLong; remove
	b (ILnet/minecraft/nbt/NBTBase;)Z addTag
	b (ILnet/minecraft/nbt/NBTTagLong;)V add
	c ()Lnet/minecraft/nbt/NBTTagType; getType
	c (I)Lnet/minecraft/nbt/NBTBase; remove
	c (ILnet/minecraft/nbt/NBTBase;)V add
	d ()Lnet/minecraft/nbt/NBTBase; copy
	d (ILnet/minecraft/nbt/NBTBase;)Lnet/minecraft/nbt/NBTBase; set
	e ()Lnet/minecraft/nbt/NBTTagLongArray; copy
	f ()B getElementType
	g ()[J getAsLongArray
net/minecraft/nbt/NBTTagShort net/minecraft/nbt/ShortTag
	a TYPE
	b SELF_SIZE_IN_BYTES
	c data
	a ()I sizeInBytes
	a (Ljava/io/DataOutput;)V write
	a (Lnet/minecraft/nbt/StreamTagVisitor;)Lru$b; accept
	a (Lnet/minecraft/nbt/TagVisitor;)V accept
	a (S)Lnet/minecraft/nbt/NBTTagShort; valueOf
	b ()B getId
	c ()Lnet/minecraft/nbt/NBTTagType; getType
	d ()Lnet/minecraft/nbt/NBTBase; copy
	e ()Lnet/minecraft/nbt/NBTTagShort; copy
	f ()J getAsLong
	g ()I getAsInt
	h ()S getAsShort
	i ()B getAsByte
	j ()D getAsDouble
	k ()F getAsFloat
	l ()Ljava/lang/Number; getAsNumber
net/minecraft/nbt/NBTTagString net/minecraft/nbt/StringTag
	A data
	a TYPE
	b SELF_SIZE_IN_BYTES
	c EMPTY
	w DOUBLE_QUOTE
	x SINGLE_QUOTE
	y ESCAPE
	z NOT_SET
	a ()I sizeInBytes
	a (Ljava/io/DataInput;)V skipString
	a (Ljava/io/DataOutput;)V write
	a (Ljava/lang/String;)Lnet/minecraft/nbt/NBTTagString; valueOf
	a (Lnet/minecraft/nbt/StreamTagVisitor;)Lru$b; accept
	a (Lnet/minecraft/nbt/TagVisitor;)V accept
	b ()B getId
	b (Ljava/lang/String;)Ljava/lang/String; quoteAndEscape
	c ()Lnet/minecraft/nbt/NBTTagType; getType
	d ()Lnet/minecraft/nbt/NBTBase; copy
	e ()Lnet/minecraft/nbt/NBTTagString; copy
	f_ ()Ljava/lang/String; getAsString
net/minecraft/nbt/NBTTagType net/minecraft/nbt/TagType
	a ()Ljava/lang/String; getName
	a (I)Lnet/minecraft/nbt/NBTTagType; createInvalid
	a (Ljava/io/DataInput;)V skip
	a (Ljava/io/DataInput;I)V skip
	a (Ljava/io/DataInput;Lnet/minecraft/nbt/StreamTagVisitor;)Lru$b; parse
	b ()Ljava/lang/String; getPrettyName
	b (Ljava/io/DataInput;ILnet/minecraft/nbt/NBTReadLimiter;)Lnet/minecraft/nbt/NBTBase; load
	b (Ljava/io/DataInput;Lnet/minecraft/nbt/StreamTagVisitor;)V parseRoot
	d ()Z isValue
net/minecraft/nbt/NBTTagTypes net/minecraft/nbt/TagTypes
	a TYPES
	a (I)Lnet/minecraft/nbt/NBTTagType; getType
net/minecraft/network/EnumProtocol net/minecraft/network/ConnectionProtocol
	a HANDSHAKING
	b PLAY
	c STATUS
	d LOGIN
	e NOT_REGISTERED
	f MIN_PROTOCOL_ID
	g MAX_PROTOCOL_ID
	h LOOKUP
	i PROTOCOL_BY_PACKET
	j id
	k flows
	l $VALUES
	a ()I getId
	a (I)Lnet/minecraft/network/EnumProtocol; getById
	a (Lnet/minecraft/network/protocol/EnumProtocolDirection;)Lnet/minecraft/network/protocol/BundlerInfo; getBundlerInfo
	a (Lnet/minecraft/network/protocol/EnumProtocolDirection;ILnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/network/protocol/Packet; createPacket
	a (Lnet/minecraft/network/protocol/EnumProtocolDirection;Lnet/minecraft/network/protocol/Packet;)I getPacketId
	a (Lnet/minecraft/network/protocol/Packet;)Lnet/minecraft/network/EnumProtocol; getProtocolForPacket
	b ()Lsr$b; protocol
	b (Lnet/minecraft/network/protocol/EnumProtocolDirection;)Lit/unimi/dsi/fastutil/ints/Int2ObjectMap; getPacketsByIds
	c ()[Lnet/minecraft/network/EnumProtocol; $values
net/minecraft/network/NetworkManager net/minecraft/network/Connection
	a ROOT_MARKER
	b PACKET_MARKER
	c PACKET_RECEIVED_MARKER
	d PACKET_SENT_MARKER
	e ATTRIBUTE_PROTOCOL
	f NETWORK_WORKER_GROUP
	g NETWORK_EPOLL_WORKER_GROUP
	h LOCAL_WORKER_GROUP
	i AVERAGE_PACKETS_SMOOTHING
	j LOGGER
	k receiving
	l queue
	m channel
	n address
	o packetListener
	p disconnectedReason
	q encrypted
	r disconnectionHandled
	s receivedPackets
	t sentPackets
	u averageReceivedPackets
	v averageSentPackets
	w tickCount
	x handlingFault
	a ()V tick
	a (IZ)V setupCompression
	a (Lio/netty/channel/ChannelHandlerContext;Lnet/minecraft/network/protocol/Packet;)V channelRead0
	a (Lio/netty/channel/ChannelPipeline;Lnet/minecraft/network/protocol/EnumProtocolDirection;)V configureSerialization
	a (Ljava/net/InetSocketAddress;Z)Lnet/minecraft/network/NetworkManager; connectToServer
	a (Ljava/net/SocketAddress;)Lnet/minecraft/network/NetworkManager; connectToLocalServer
	a (Ljavax/crypto/Cipher;Ljavax/crypto/Cipher;)V setEncryptionKey
	a (Lnet/minecraft/network/EnumProtocol;)V setProtocol
	a (Lnet/minecraft/network/PacketListener;)V setListener
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V disconnect
	a (Lnet/minecraft/network/protocol/Packet;)V send
	a (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/network/PacketListener;)V genericsFtw
	a (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/network/PacketSendListener;)V send
	a (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/network/PacketSendListener;Lnet/minecraft/network/EnumProtocol;Lnet/minecraft/network/EnumProtocol;)V doSendPacket
	b ()V tickSecond
	b (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/network/PacketSendListener;)V sendPacket
	c ()Ljava/net/SocketAddress; getRemoteAddress
	d ()Z isMemoryConnection
	e ()Lnet/minecraft/network/protocol/EnumProtocolDirection; getReceiving
	f ()Lnet/minecraft/network/protocol/EnumProtocolDirection; getSending
	g ()Z isEncrypted
	h ()Z isConnected
	i ()Z isConnecting
	j ()Lnet/minecraft/network/PacketListener; getPacketListener
	k ()Lnet/minecraft/network/chat/IChatBaseComponent; getDisconnectedReason
	l ()V setReadOnly
	m ()V handleDisconnection
	n ()F getAverageReceivedPackets
	o ()F getAverageSentPackets
	p ()Lnet/minecraft/network/EnumProtocol; getCurrentProtocol
	q ()V flushQueue
net/minecraft/network/NetworkManager$QueuedPacket net/minecraft/network/Connection$PacketHolder
	a packet
	b listener
net/minecraft/network/NetworkManagerServer net/minecraft/network/RateKickingConnection
	i LOGGER
	j EXCEED_REASON
	k rateLimitPacketsPerSecond
	b ()V tickSecond
net/minecraft/network/PacketCompressor net/minecraft/network/CompressionEncoder
	a encodeBuf
	b deflater
	c threshold
	a ()I getThreshold
	a (I)V setThreshold
	a (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V encode
net/minecraft/network/PacketDataSerializer net/minecraft/network/FriendlyByteBuf
	a DEFAULT_NBT_QUOTA
	b MAX_STRING_LENGTH
	c MAX_COMPONENT_STRING_LENGTH
	d MAX_VARINT_SIZE
	e MAX_VARLONG_SIZE
	f source
	g PUBLIC_KEY_SIZE
	h MAX_PUBLIC_KEY_HEADER_SIZE
	i MAX_PUBLIC_KEY_LENGTH
	j GSON
	A ()Lcom/mojang/authlib/properties/PropertyMap; readGameProfileProperties
	B ()Lcom/mojang/authlib/properties/Property; readProperty
	a ()Lit/unimi/dsi/fastutil/ints/IntList; readIntIdList
	a (I)I getVarIntSize
	a (J)I getVarLongSize
	a (Lcom/mojang/authlib/GameProfile;)V writeGameProfile
	a (Lcom/mojang/authlib/properties/Property;)V writeProperty
	a (Lcom/mojang/authlib/properties/PropertyMap;)V writeGameProfileProperties
	a (Lcom/mojang/datafixers/util/Either;Lss$b;Lss$b;)V writeEither
	a (Lcom/mojang/serialization/Codec;)Ljava/lang/Object; readJsonWithCodec
	a (Lcom/mojang/serialization/Codec;Ljava/lang/Object;)V writeJsonWithCodec
	a (Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Codec;)Ljava/lang/Object; readWithCodec
	a (Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Codec;Ljava/lang/Object;)V writeWithCodec
	a (Lit/unimi/dsi/fastutil/ints/IntList;)V writeIntIdList
	a (Ljava/lang/Class;)Ljava/util/EnumSet; readEnumSet
	a (Ljava/lang/Enum;)Lnet/minecraft/network/PacketDataSerializer; writeEnum
	a (Ljava/lang/Object;Lss$b;)V writeNullable
	a (Ljava/lang/String;)Lnet/minecraft/network/PacketDataSerializer; writeUtf
	a (Ljava/lang/String;I)Lnet/minecraft/network/PacketDataSerializer; writeUtf
	a (Ljava/security/PublicKey;)Lnet/minecraft/network/PacketDataSerializer; writePublicKey
	a (Ljava/time/Instant;)V writeInstant
	a (Ljava/util/BitSet;)V writeBitSet
	a (Ljava/util/BitSet;I)V writeFixedBitSet
	a (Ljava/util/Collection;Lss$b;)V writeCollection
	a (Ljava/util/Date;)Lnet/minecraft/network/PacketDataSerializer; writeDate
	a (Ljava/util/EnumSet;Ljava/lang/Class;)V writeEnumSet
	a (Ljava/util/Map;Lss$b;Lss$b;)V writeMap
	a (Ljava/util/Optional;Lss$b;)V writeOptional
	a (Ljava/util/UUID;)Lnet/minecraft/network/PacketDataSerializer; writeUUID
	a (Ljava/util/function/Consumer;)V readWithCount
	a (Ljava/util/function/IntFunction;I)Ljava/util/function/IntFunction; limitValue
	a (Ljava/util/function/IntFunction;Lss$a;)Ljava/util/Collection; readCollection
	a (Ljava/util/function/IntFunction;Lss$a;Lss$a;)Ljava/util/Map; readMap
	a (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/network/PacketDataSerializer; writeBlockPos
	a (Lnet/minecraft/core/GlobalPos;)V writeGlobalPos
	a (Lnet/minecraft/core/Registry;)Ljava/lang/Object; readById
	a (Lnet/minecraft/core/Registry;Ljava/lang/Object;)V writeId
	a (Lnet/minecraft/core/Registry;Lnet/minecraft/core/Holder;Lss$b;)V writeId
	a (Lnet/minecraft/core/Registry;Lss$a;)Lnet/minecraft/core/Holder; readById
	a (Lnet/minecraft/core/SectionPosition;)Lnet/minecraft/network/PacketDataSerializer; writeSectionPos
	a (Lnet/minecraft/nbt/NBTReadLimiter;)Lnet/minecraft/nbt/NBTTagCompound; readNbt
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/network/PacketDataSerializer; writeNbt
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)Lnet/minecraft/network/PacketDataSerializer; writeComponent
	a (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/network/PacketDataSerializer; writeResourceLocation
	a (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/resources/ResourceKey; readResourceKey
	a (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/network/PacketDataSerializer; writeItem
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;)Lnet/minecraft/network/PacketDataSerializer; writeChunkPos
	a (Lnet/minecraft/world/phys/MovingObjectPositionBlock;)V writeBlockHitResult
	a (Lorg/joml/Quaternionf;)V writeQuaternion
	a (Lorg/joml/Vector3f;)V writeVector3f
	a (Lss$a;)Ljava/util/List; readList
	a (Lss$a;Lss$a;)Ljava/util/Map; readMap
	a ([B)Lnet/minecraft/network/PacketDataSerializer; writeByteArray
	a ([I)Lnet/minecraft/network/PacketDataSerializer; writeVarIntArray
	a ([J)Lnet/minecraft/network/PacketDataSerializer; writeLongArray
	a ([JI)[J readLongArray
	b ()[B readByteArray
	b (I)[B readByteArray
	b (J)Lnet/minecraft/network/PacketDataSerializer; writeVarLong
	b (Ljava/lang/Class;)Ljava/lang/Enum; readEnum
	b (Lnet/minecraft/resources/ResourceKey;)V writeResourceKey
	b (Lss$a;)Ljava/util/Optional; readOptional
	b (Lss$a;Lss$a;)Lcom/mojang/datafixers/util/Either; readEither
	b ([J)[J readLongArray
	c ()[I readVarIntArray
	c (I)[I readVarIntArray
	c (Lss$a;)Ljava/lang/Object; readNullable
	d ()[J readLongArray
	d (I)Lnet/minecraft/network/PacketDataSerializer; writeVarInt
	e ()[B accessByteBufWithCorrectSize
	e (I)Ljava/lang/String; readUtf
	f ()Lnet/minecraft/core/BlockPosition; readBlockPos
	f (I)Ljava/util/BitSet; readFixedBitSet
	g ()Lnet/minecraft/world/level/ChunkCoordIntPair; readChunkPos
	g (I)I getMaxEncodedUtfLength
	h ()Lnet/minecraft/core/SectionPosition; readSectionPos
	i ()Lnet/minecraft/core/GlobalPos; readGlobalPos
	j ()Lorg/joml/Vector3f; readVector3f
	k ()Lorg/joml/Quaternionf; readQuaternion
	l ()Lnet/minecraft/network/chat/IChatBaseComponent; readComponent
	m ()I readVarInt
	n ()J readVarLong
	o ()Ljava/util/UUID; readUUID
	p ()Lnet/minecraft/nbt/NBTTagCompound; readNbt
	q ()Lnet/minecraft/nbt/NBTTagCompound; readAnySizeNbt
	r ()Lnet/minecraft/world/item/ItemStack; readItem
	s ()Ljava/lang/String; readUtf
	t ()Lnet/minecraft/resources/MinecraftKey; readResourceLocation
	u ()Ljava/util/Date; readDate
	v ()Ljava/time/Instant; readInstant
	w ()Ljava/security/PublicKey; readPublicKey
	x ()Lnet/minecraft/world/phys/MovingObjectPositionBlock; readBlockHitResult
	y ()Ljava/util/BitSet; readBitSet
	z ()Lcom/mojang/authlib/GameProfile; readGameProfile
net/minecraft/network/PacketDecompressor net/minecraft/network/CompressionDecoder
	a MAXIMUM_COMPRESSED_LENGTH
	b MAXIMUM_UNCOMPRESSED_LENGTH
	c inflater
	d threshold
	e validateDecompressed
	a (IZ)V setThreshold
net/minecraft/network/PacketDecrypter net/minecraft/network/CipherDecoder
	a cipher
	a (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Ljava/util/List;)V decode
net/minecraft/network/PacketEncrypter net/minecraft/network/CipherEncoder
	a cipher
	a (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V encode
net/minecraft/network/PacketEncryptionHandler net/minecraft/network/CipherBase
	a cipher
	b heapIn
	c heapOut
	a (Lio/netty/buffer/ByteBuf;)[B bufToByte
	a (Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V encipher
	a (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf; decipher
net/minecraft/network/PacketPrepender net/minecraft/network/Varint21LengthFieldPrepender
	a MAX_BYTES
	a (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V encode
net/minecraft/network/PacketSplitter net/minecraft/network/Varint21FrameDecoder
net/minecraft/network/SkipEncodeException net/minecraft/network/SkipPacketException
net/minecraft/network/chat/ChatClickable net/minecraft/network/chat/ClickEvent
	a action
	b value
	a ()Lnet/minecraft/network/chat/ChatClickable$EnumClickAction; getAction
	b ()Ljava/lang/String; getValue
net/minecraft/network/chat/ChatClickable$EnumClickAction net/minecraft/network/chat/ClickEvent$Action
	a OPEN_URL
	b OPEN_FILE
	c RUN_COMMAND
	d SUGGEST_COMMAND
	e CHANGE_PAGE
	f COPY_TO_CLIPBOARD
	g LOOKUP
	h allowFromServer
	i name
	j $VALUES
	a ()Z isAllowedFromServer
	a (Ljava/lang/String;)Lnet/minecraft/network/chat/ChatClickable$EnumClickAction; getByName
	b ()Ljava/lang/String; getName
	c ()[Lnet/minecraft/network/chat/ChatClickable$EnumClickAction; $values
net/minecraft/network/chat/ChatComponentUtils net/minecraft/network/chat/ComponentUtils
	a DEFAULT_SEPARATOR_TEXT
	b DEFAULT_SEPARATOR
	c DEFAULT_NO_STYLE_SEPARATOR
	a (Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/network/chat/IChatBaseComponent; getDisplayName
	a (Lcom/mojang/brigadier/Message;)Lnet/minecraft/network/chat/IChatBaseComponent; fromMessage
	a (Ljava/lang/String;)Lnet/minecraft/network/chat/IChatMutableComponent; copyOnClickText
	a (Ljava/util/Collection;)Lnet/minecraft/network/chat/IChatBaseComponent; formatList
	a (Ljava/util/Collection;Ljava/util/Optional;Ljava/util/function/Function;)Lnet/minecraft/network/chat/IChatMutableComponent; formatList
	a (Ljava/util/Collection;Ljava/util/function/Function;)Lnet/minecraft/network/chat/IChatBaseComponent; formatAndSortList
	a (Ljava/util/Collection;Lnet/minecraft/network/chat/IChatBaseComponent;)Lnet/minecraft/network/chat/IChatBaseComponent; formatList
	a (Ljava/util/Collection;Lnet/minecraft/network/chat/IChatBaseComponent;Ljava/util/function/Function;)Lnet/minecraft/network/chat/IChatMutableComponent; formatList
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Optional;Lnet/minecraft/world/entity/Entity;I)Ljava/util/Optional; updateForEntity
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/network/chat/ChatModifier;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/network/chat/ChatModifier; resolveStyle
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/network/chat/IChatBaseComponent;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/network/chat/IChatMutableComponent; updateForEntity
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)Lnet/minecraft/network/chat/IChatMutableComponent; wrapInSquareBrackets
	a (Lnet/minecraft/network/chat/IChatMutableComponent;Lnet/minecraft/network/chat/ChatModifier;)Lnet/minecraft/network/chat/IChatMutableComponent; mergeStyles
	b (Ljava/util/Collection;Ljava/util/function/Function;)Lnet/minecraft/network/chat/IChatBaseComponent; formatList
	b (Lnet/minecraft/network/chat/IChatBaseComponent;)Z isTranslationResolvable
net/minecraft/network/chat/ChatDecoration net/minecraft/network/chat/ChatTypeDecoration
	a CODEC
	b translationKey
	c parameters
	d style
	a ()Ljava/lang/String; translationKey
	a (Ljava/lang/String;)Lnet/minecraft/network/chat/ChatDecoration; withSender
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Ltf$a;)Lnet/minecraft/network/chat/IChatBaseComponent; decorate
	b ()Ljava/util/List; parameters
	b (Ljava/lang/String;)Lnet/minecraft/network/chat/ChatDecoration; incomingDirectMessage
	b (Lnet/minecraft/network/chat/IChatBaseComponent;Ltf$a;)[Lnet/minecraft/network/chat/IChatBaseComponent; resolveParameters
	c ()Lnet/minecraft/network/chat/ChatModifier; style
	c (Ljava/lang/String;)Lnet/minecraft/network/chat/ChatDecoration; outgoingDirectMessage
	d (Ljava/lang/String;)Lnet/minecraft/network/chat/ChatDecoration; teamMessage
net/minecraft/network/chat/ChatHexColor net/minecraft/network/chat/TextColor
	a CODEC
	b CUSTOM_COLOR_PREFIX
	c LEGACY_FORMAT_TO_COLOR
	d NAMED_COLORS
	e value
	f name
	a ()I getValue
	a (I)Lnet/minecraft/network/chat/ChatHexColor; fromRgb
	a (Ljava/lang/String;)Lnet/minecraft/network/chat/ChatHexColor; parseColor
	a (Lnet/minecraft/EnumChatFormat;)Lnet/minecraft/network/chat/ChatHexColor; fromLegacyFormat
	b ()Ljava/lang/String; serialize
	c ()Ljava/lang/String; formatValue
net/minecraft/network/chat/ChatHoverable net/minecraft/network/chat/HoverEvent
	a LOGGER
	b action
	c value
	a ()Lnet/minecraft/network/chat/ChatHoverable$EnumHoverAction; getAction
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/network/chat/ChatHoverable; deserialize
	a (Lnet/minecraft/network/chat/ChatHoverable$EnumHoverAction;)Ljava/lang/Object; getValue
	b ()Lcom/google/gson/JsonObject; serialize
net/minecraft/network/chat/ChatHoverable$EnumHoverAction net/minecraft/network/chat/HoverEvent$Action
	a SHOW_TEXT
	b SHOW_ITEM
	c SHOW_ENTITY
	d LOOKUP
	e name
	f allowFromServer
	g argDeserializer
	h argSerializer
	i legacyArgDeserializer
	a ()Z isAllowedFromServer
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/network/chat/ChatHoverable; deserialize
	a (Ljava/lang/Object;)Lcom/google/gson/JsonElement; serializeArg
	a (Ljava/lang/String;)Lnet/minecraft/network/chat/ChatHoverable$EnumHoverAction; getByName
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)Lnet/minecraft/network/chat/ChatHoverable; deserializeFromLegacy
	b ()Ljava/lang/String; getName
	b (Ljava/lang/Object;)Ljava/lang/Object; cast
net/minecraft/network/chat/ChatMessageType net/minecraft/network/chat/ChatType
	a CODEC
	b DEFAULT_CHAT_DECORATION
	c CHAT
	d SAY_COMMAND
	e MSG_COMMAND_INCOMING
	f MSG_COMMAND_OUTGOING
	g TEAM_MSG_COMMAND_INCOMING
	h TEAM_MSG_COMMAND_OUTGOING
	i EMOTE_COMMAND
	j chat
	k narration
	a ()Lnet/minecraft/network/chat/ChatDecoration; chat
	a (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; create
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)Ltf$a; bind
	a (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/commands/CommandListenerWrapper;)Ltf$a; bind
	a (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/IRegistryCustom;Lnet/minecraft/network/chat/IChatBaseComponent;)Ltf$a; bind
	a (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/entity/Entity;)Ltf$a; bind
	b ()Lnet/minecraft/network/chat/ChatDecoration; narration
net/minecraft/network/chat/ChatModifier net/minecraft/network/chat/Style
	a EMPTY
	b FORMATTING_CODEC
	c DEFAULT_FONT
	d color
	e bold
	f italic
	g underlined
	h strikethrough
	i obfuscated
	j clickEvent
	k hoverEvent
	l insertion
	m font
	a ()Lnet/minecraft/network/chat/ChatHexColor; getColor
	a (I)Lnet/minecraft/network/chat/ChatModifier; withColor
	a (Ljava/lang/Boolean;)Lnet/minecraft/network/chat/ChatModifier; withBold
	a (Ljava/lang/String;)Lnet/minecraft/network/chat/ChatModifier; withInsertion
	a (Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)Lnet/minecraft/network/chat/ChatModifier; create
	a (Lnet/minecraft/EnumChatFormat;)Lnet/minecraft/network/chat/ChatModifier; withColor
	a (Lnet/minecraft/network/chat/ChatClickable;)Lnet/minecraft/network/chat/ChatModifier; withClickEvent
	a (Lnet/minecraft/network/chat/ChatHexColor;)Lnet/minecraft/network/chat/ChatModifier; withColor
	a (Lnet/minecraft/network/chat/ChatHoverable;)Lnet/minecraft/network/chat/ChatModifier; withHoverEvent
	a (Lnet/minecraft/network/chat/ChatModifier;)Lnet/minecraft/network/chat/ChatModifier; applyTo
	a (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/network/chat/ChatModifier; withFont
	a ([Lnet/minecraft/EnumChatFormat;)Lnet/minecraft/network/chat/ChatModifier; applyFormats
	b ()Z isBold
	b (Ljava/lang/Boolean;)Lnet/minecraft/network/chat/ChatModifier; withItalic
	b (Lnet/minecraft/EnumChatFormat;)Lnet/minecraft/network/chat/ChatModifier; applyFormat
	c ()Z isItalic
	c (Ljava/lang/Boolean;)Lnet/minecraft/network/chat/ChatModifier; withUnderlined
	c (Lnet/minecraft/EnumChatFormat;)Lnet/minecraft/network/chat/ChatModifier; applyLegacyFormat
	d ()Z isStrikethrough
	d (Ljava/lang/Boolean;)Lnet/minecraft/network/chat/ChatModifier; withStrikethrough
	e ()Z isUnderlined
	e (Ljava/lang/Boolean;)Lnet/minecraft/network/chat/ChatModifier; withObfuscated
	f ()Z isObfuscated
	g ()Z isEmpty
	h ()Lnet/minecraft/network/chat/ChatClickable; getClickEvent
	i ()Lnet/minecraft/network/chat/ChatHoverable; getHoverEvent
	j ()Ljava/lang/String; getInsertion
	k ()Lnet/minecraft/resources/MinecraftKey; getFont
net/minecraft/network/chat/ChatModifier$ChatModifierSerializer net/minecraft/network/chat/Style$Serializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/network/chat/ChatModifier; deserialize
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/resources/MinecraftKey; getFont
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/Boolean; getOptionalFlag
	a (Lnet/minecraft/network/chat/ChatModifier;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
	b (Lcom/google/gson/JsonObject;)Lnet/minecraft/network/chat/ChatHoverable; getHoverEvent
	c (Lcom/google/gson/JsonObject;)Lnet/minecraft/network/chat/ChatClickable; getClickEvent
	d (Lcom/google/gson/JsonObject;)Ljava/lang/String; getInsertion
	e (Lcom/google/gson/JsonObject;)Lnet/minecraft/network/chat/ChatHexColor; getTextColor
net/minecraft/network/chat/IChatBaseComponent net/minecraft/network/chat/Component
	a ()Lnet/minecraft/network/chat/ChatModifier; getStyle
	a (I)Ljava/lang/String; getString
	a (Ljava/lang/String;)Lnet/minecraft/network/chat/IChatBaseComponent; nullToEmpty
	a (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/network/chat/IChatMutableComponent; translatableWithFallback
	a (Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)Lnet/minecraft/network/chat/IChatMutableComponent; translatableWithFallback
	a (Ljava/lang/String;Ljava/util/Optional;)Lnet/minecraft/network/chat/IChatMutableComponent; selector
	a (Ljava/lang/String;ZLjava/util/Optional;Lnet/minecraft/network/chat/contents/DataSource;)Lnet/minecraft/network/chat/IChatMutableComponent; nbt
	a (Ljava/lang/String;[Ljava/lang/Object;)Lnet/minecraft/network/chat/IChatMutableComponent; translatable
	a (Lnet/minecraft/network/chat/ChatModifier;)Ljava/util/List; toFlatList
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)Z contains
	a (Ltn$a;)Ljava/util/Optional; visit
	a (Ltn$b;Lnet/minecraft/network/chat/ChatModifier;)Ljava/util/Optional; visit
	b ()Lnet/minecraft/network/chat/ComponentContents; getContents
	b (Ljava/lang/String;)Lnet/minecraft/network/chat/IChatMutableComponent; literal
	b (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/network/chat/IChatMutableComponent; score
	c ()Ljava/util/List; getSiblings
	c (Ljava/lang/String;)Lnet/minecraft/network/chat/IChatMutableComponent; translatable
	d ()Lnet/minecraft/network/chat/IChatMutableComponent; plainCopy
	d (Ljava/lang/String;)Lnet/minecraft/network/chat/IChatMutableComponent; keybind
	e ()Lnet/minecraft/network/chat/IChatMutableComponent; copy
	f ()Lnet/minecraft/util/FormattedString; getVisualOrderText
	g ()Ljava/util/List; toFlatList
	h ()Lnet/minecraft/network/chat/IChatMutableComponent; empty
net/minecraft/network/chat/IChatBaseComponent$ChatSerializer net/minecraft/network/chat/Component$Serializer
	a GSON
	b JSON_READER_POS
	c JSON_READER_LINESTART
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/network/chat/IChatMutableComponent; fromJson
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/network/chat/IChatMutableComponent; deserialize
	a (Lcom/google/gson/JsonSerializationContext;Lcom/google/gson/JsonObject;Ljava/util/Optional;)V serializeSeparator
	a (Lcom/google/gson/stream/JsonReader;)I getPos
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/network/chat/IChatMutableComponent; fromJson
	a (Ljava/lang/Object;)Ljava/lang/Object; unwrapTextArgument
	a (Ljava/lang/String;)Lnet/minecraft/network/chat/IChatMutableComponent; fromJson
	a (Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/Optional; parseSeparator
	a (Lnet/minecraft/network/chat/ChatModifier;Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V serializeStyle
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)Ljava/lang/String; toJson
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
	b (Ljava/lang/String;)Lnet/minecraft/network/chat/IChatMutableComponent; fromJsonLenient
	b (Lnet/minecraft/network/chat/IChatBaseComponent;)Ljava/lang/String; toStableJson
	c (Lnet/minecraft/network/chat/IChatBaseComponent;)Lcom/google/gson/JsonElement; toJsonTree
net/minecraft/network/chat/IChatFormatted net/minecraft/network/chat/FormattedText
	a STOP_ITERATION
	b EMPTY
	a (Ljava/lang/String;Lnet/minecraft/network/chat/ChatModifier;)Lnet/minecraft/network/chat/IChatFormatted; of
	a (Ljava/util/List;)Lnet/minecraft/network/chat/IChatFormatted; composite
	a (Ltn$a;)Ljava/util/Optional; visit
	a (Ltn$b;Lnet/minecraft/network/chat/ChatModifier;)Ljava/util/Optional; visit
	a ([Lnet/minecraft/network/chat/IChatFormatted;)Lnet/minecraft/network/chat/IChatFormatted; composite
	e (Ljava/lang/String;)Lnet/minecraft/network/chat/IChatFormatted; of
net/minecraft/network/chat/IChatMutableComponent net/minecraft/network/chat/MutableComponent
	c contents
	d siblings
	e style
	f visualOrderText
	g decomposedWith
	a ()Lnet/minecraft/network/chat/ChatModifier; getStyle
	a (Ljava/util/function/UnaryOperator;)Lnet/minecraft/network/chat/IChatMutableComponent; withStyle
	a (Lnet/minecraft/EnumChatFormat;)Lnet/minecraft/network/chat/IChatMutableComponent; withStyle
	a (Lnet/minecraft/network/chat/ComponentContents;)Lnet/minecraft/network/chat/IChatMutableComponent; create
	a ([Lnet/minecraft/EnumChatFormat;)Lnet/minecraft/network/chat/IChatMutableComponent; withStyle
	b ()Lnet/minecraft/network/chat/ComponentContents; getContents
	b (Lnet/minecraft/network/chat/ChatModifier;)Lnet/minecraft/network/chat/IChatMutableComponent; setStyle
	b (Lnet/minecraft/network/chat/IChatBaseComponent;)Lnet/minecraft/network/chat/IChatMutableComponent; append
	c ()Ljava/util/List; getSiblings
	c (Lnet/minecraft/network/chat/ChatModifier;)Lnet/minecraft/network/chat/IChatMutableComponent; withStyle
	f ()Lnet/minecraft/util/FormattedString; getVisualOrderText
	f (Ljava/lang/String;)Lnet/minecraft/network/chat/IChatMutableComponent; append
net/minecraft/network/protocol/EnumProtocolDirection net/minecraft/network/protocol/PacketFlow
	a SERVERBOUND
	b CLIENTBOUND
	c $VALUES
	a ()Lnet/minecraft/network/protocol/EnumProtocolDirection; getOpposite
	b ()[Lnet/minecraft/network/protocol/EnumProtocolDirection; $values
net/minecraft/network/protocol/PlayerConnectionUtils net/minecraft/network/protocol/PacketUtils
	a LOGGER
	a (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/network/PacketListener;Lnet/minecraft/server/level/WorldServer;)V ensureRunningOnSameThread
	a (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/network/PacketListener;Lnet/minecraft/util/thread/IAsyncTaskHandler;)V ensureRunningOnSameThread
net/minecraft/network/protocol/game/PacketDebug net/minecraft/network/protocol/game/DebugPackets
	a LOGGER
	a (Lnet/minecraft/server/level/WorldServer;)V sendGameTestClearPacket
	a (Lnet/minecraft/server/level/WorldServer;Ljava/lang/Object;)Ljava/lang/String; getShortDescription
	a (Lnet/minecraft/server/level/WorldServer;Ljava/util/Collection;)V sendRaids
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;)V sendPoiAddedPacket
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Ljava/lang/String;II)V sendGameTestAddMarker
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/resources/MinecraftKey;)V sendPacketToAllPlayers
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/ChunkCoordIntPair;)V sendPoiPacketsForChunk
	a (Lnet/minecraft/world/entity/EntityLiving;)V sendEntityBrain
	a (Lnet/minecraft/world/entity/EntityLiving;J)Ljava/util/List; getMemoryDescriptions
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/network/PacketDataSerializer;)V writeBrain
	a (Lnet/minecraft/world/entity/animal/EntityBee;)V sendBeeInfo
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/structure/StructureStart;)V sendStructurePacket
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V sendNeighborsUpdatePacket
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityBeehive;)V sendHiveInfo
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/EntityInsentient;Lnet/minecraft/world/entity/ai/goal/PathfinderGoalSelector;)V sendGoalSelector
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/EntityInsentient;Lnet/minecraft/world/level/pathfinder/PathEntity;F)V sendPathFindingPacket
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/phys/Vec3D;)V sendGameEventInfo
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/gameevent/GameEventListener;)V sendGameEventListenerInfo
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;)V sendPoiRemovedPacket
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;)V sendPoiTicketCountPacket
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;)V sendVillageSectionsPacket
net/minecraft/network/protocol/game/PacketListenerPlayIn net/minecraft/network/protocol/game/ServerGamePacketListener
	a (Lnet/minecraft/network/protocol/game/PacketPlayInAbilities;)V handlePlayerAbilities
	a (Lnet/minecraft/network/protocol/game/PacketPlayInAdvancements;)V handleSeenAdvancements
	a (Lnet/minecraft/network/protocol/game/PacketPlayInArmAnimation;)V handleAnimate
	a (Lnet/minecraft/network/protocol/game/PacketPlayInAutoRecipe;)V handlePlaceRecipe
	a (Lnet/minecraft/network/protocol/game/PacketPlayInBEdit;)V handleEditBook
	a (Lnet/minecraft/network/protocol/game/PacketPlayInBeacon;)V handleSetBeaconPacket
	a (Lnet/minecraft/network/protocol/game/PacketPlayInBlockDig;)V handlePlayerAction
	a (Lnet/minecraft/network/protocol/game/PacketPlayInBlockPlace;)V handleUseItem
	a (Lnet/minecraft/network/protocol/game/PacketPlayInBoatMove;)V handlePaddleBoat
	a (Lnet/minecraft/network/protocol/game/PacketPlayInChat;)V handleChat
	a (Lnet/minecraft/network/protocol/game/PacketPlayInClientCommand;)V handleClientCommand
	a (Lnet/minecraft/network/protocol/game/PacketPlayInCloseWindow;)V handleContainerClose
	a (Lnet/minecraft/network/protocol/game/PacketPlayInCustomPayload;)V handleCustomPayload
	a (Lnet/minecraft/network/protocol/game/PacketPlayInDifficultyChange;)V handleChangeDifficulty
	a (Lnet/minecraft/network/protocol/game/PacketPlayInDifficultyLock;)V handleLockDifficulty
	a (Lnet/minecraft/network/protocol/game/PacketPlayInEnchantItem;)V handleContainerButtonClick
	a (Lnet/minecraft/network/protocol/game/PacketPlayInEntityAction;)V handlePlayerCommand
	a (Lnet/minecraft/network/protocol/game/PacketPlayInEntityNBTQuery;)V handleEntityTagQuery
	a (Lnet/minecraft/network/protocol/game/PacketPlayInFlying;)V handleMovePlayer
	a (Lnet/minecraft/network/protocol/game/PacketPlayInHeldItemSlot;)V handleSetCarriedItem
	a (Lnet/minecraft/network/protocol/game/PacketPlayInItemName;)V handleRenameItem
	a (Lnet/minecraft/network/protocol/game/PacketPlayInJigsawGenerate;)V handleJigsawGenerate
	a (Lnet/minecraft/network/protocol/game/PacketPlayInKeepAlive;)V handleKeepAlive
	a (Lnet/minecraft/network/protocol/game/PacketPlayInPickItem;)V handlePickItem
	a (Lnet/minecraft/network/protocol/game/PacketPlayInRecipeDisplayed;)V handleRecipeBookSeenRecipePacket
	a (Lnet/minecraft/network/protocol/game/PacketPlayInRecipeSettings;)V handleRecipeBookChangeSettingsPacket
	a (Lnet/minecraft/network/protocol/game/PacketPlayInResourcePackStatus;)V handleResourcePackResponse
	a (Lnet/minecraft/network/protocol/game/PacketPlayInSetCommandBlock;)V handleSetCommandBlock
	a (Lnet/minecraft/network/protocol/game/PacketPlayInSetCommandMinecart;)V handleSetCommandMinecart
	a (Lnet/minecraft/network/protocol/game/PacketPlayInSetCreativeSlot;)V handleSetCreativeModeSlot
	a (Lnet/minecraft/network/protocol/game/PacketPlayInSetJigsaw;)V handleSetJigsawBlock
	a (Lnet/minecraft/network/protocol/game/PacketPlayInSettings;)V handleClientInformation
	a (Lnet/minecraft/network/protocol/game/PacketPlayInSpectate;)V handleTeleportToEntityPacket
	a (Lnet/minecraft/network/protocol/game/PacketPlayInSteerVehicle;)V handlePlayerInput
	a (Lnet/minecraft/network/protocol/game/PacketPlayInStruct;)V handleSetStructureBlock
	a (Lnet/minecraft/network/protocol/game/PacketPlayInTabComplete;)V handleCustomCommandSuggestions
	a (Lnet/minecraft/network/protocol/game/PacketPlayInTeleportAccept;)V handleAcceptTeleportPacket
	a (Lnet/minecraft/network/protocol/game/PacketPlayInTileNBTQuery;)V handleBlockEntityTagQuery
	a (Lnet/minecraft/network/protocol/game/PacketPlayInTrSel;)V handleSelectTrade
	a (Lnet/minecraft/network/protocol/game/PacketPlayInUpdateSign;)V handleSignUpdate
	a (Lnet/minecraft/network/protocol/game/PacketPlayInUseEntity;)V handleInteract
	a (Lnet/minecraft/network/protocol/game/PacketPlayInUseItem;)V handleUseItemOn
	a (Lnet/minecraft/network/protocol/game/PacketPlayInVehicleMove;)V handleMoveVehicle
	a (Lnet/minecraft/network/protocol/game/PacketPlayInWindowClick;)V handleContainerClick
	a (Lnet/minecraft/network/protocol/game/ServerboundChatAckPacket;)V handleChatAck
	a (Lnet/minecraft/network/protocol/game/ServerboundChatCommandPacket;)V handleChatCommand
	a (Lnet/minecraft/network/protocol/game/ServerboundChatSessionUpdatePacket;)V handleChatSessionUpdate
	a (Lnet/minecraft/network/protocol/game/ServerboundPongPacket;)V handlePong
net/minecraft/network/protocol/game/PacketListenerPlayOut net/minecraft/network/protocol/game/ClientGamePacketListener
	a (Lnet/minecraft/network/protocol/game/ClientboundBlockChangedAckPacket;)V handleBlockChangedAck
	a (Lnet/minecraft/network/protocol/game/ClientboundBundlePacket;)V handleBundlePacket
	a (Lnet/minecraft/network/protocol/game/ClientboundChunksBiomesPacket;)V handleChunksBiomes
	a (Lnet/minecraft/network/protocol/game/ClientboundClearTitlesPacket;)V handleTitlesClear
	a (Lnet/minecraft/network/protocol/game/ClientboundCustomChatCompletionsPacket;)V handleCustomChatCompletions
	a (Lnet/minecraft/network/protocol/game/ClientboundDamageEventPacket;)V handleDamageEvent
	a (Lnet/minecraft/network/protocol/game/ClientboundDeleteChatPacket;)V handleDeleteChat
	a (Lnet/minecraft/network/protocol/game/ClientboundDisguisedChatPacket;)V handleDisguisedChat
	a (Lnet/minecraft/network/protocol/game/ClientboundHurtAnimationPacket;)V handleHurtAnimation
	a (Lnet/minecraft/network/protocol/game/ClientboundInitializeBorderPacket;)V handleInitializeBorder
	a (Lnet/minecraft/network/protocol/game/ClientboundLevelChunkWithLightPacket;)V handleLevelChunkWithLight
	a (Lnet/minecraft/network/protocol/game/ClientboundPingPacket;)V handlePing
	a (Lnet/minecraft/network/protocol/game/ClientboundPlayerChatPacket;)V handlePlayerChat
	a (Lnet/minecraft/network/protocol/game/ClientboundPlayerCombatEndPacket;)V handlePlayerCombatEnd
	a (Lnet/minecraft/network/protocol/game/ClientboundPlayerCombatEnterPacket;)V handlePlayerCombatEnter
	a (Lnet/minecraft/network/protocol/game/ClientboundPlayerCombatKillPacket;)V handlePlayerCombatKill
	a (Lnet/minecraft/network/protocol/game/ClientboundPlayerInfoRemovePacket;)V handlePlayerInfoRemove
	a (Lnet/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket;)V handlePlayerInfoUpdate
	a (Lnet/minecraft/network/protocol/game/ClientboundServerDataPacket;)V handleServerData
	a (Lnet/minecraft/network/protocol/game/ClientboundSetActionBarTextPacket;)V setActionBarText
	a (Lnet/minecraft/network/protocol/game/ClientboundSetBorderCenterPacket;)V handleSetBorderCenter
	a (Lnet/minecraft/network/protocol/game/ClientboundSetBorderLerpSizePacket;)V handleSetBorderLerpSize
	a (Lnet/minecraft/network/protocol/game/ClientboundSetBorderSizePacket;)V handleSetBorderSize
	a (Lnet/minecraft/network/protocol/game/ClientboundSetBorderWarningDelayPacket;)V handleSetBorderWarningDelay
	a (Lnet/minecraft/network/protocol/game/ClientboundSetBorderWarningDistancePacket;)V handleSetBorderWarningDistance
	a (Lnet/minecraft/network/protocol/game/ClientboundSetSimulationDistancePacket;)V handleSetSimulationDistance
	a (Lnet/minecraft/network/protocol/game/ClientboundSetSubtitleTextPacket;)V setSubtitleText
	a (Lnet/minecraft/network/protocol/game/ClientboundSetTitleTextPacket;)V setTitleText
	a (Lnet/minecraft/network/protocol/game/ClientboundSetTitlesAnimationPacket;)V setTitlesAnimation
	a (Lnet/minecraft/network/protocol/game/ClientboundSystemChatPacket;)V handleSystemChat
	a (Lnet/minecraft/network/protocol/game/ClientboundUpdateEnabledFeaturesPacket;)V handleEnabledFeatures
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutAbilities;)V handlePlayerAbilities
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutAdvancements;)V handleUpdateAdvancementsPacket
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutAnimation;)V handleAnimate
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutAttachEntity;)V handleEntityLinkPacket
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutAutoRecipe;)V handlePlaceRecipe
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutBlockAction;)V handleBlockEvent
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutBlockBreakAnimation;)V handleBlockDestruction
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutBlockChange;)V handleBlockUpdate
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutBoss;)V handleBossUpdate
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutCamera;)V handleSetCamera
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutCloseWindow;)V handleContainerClose
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutCollect;)V handleTakeItemEntity
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutCommands;)V handleCommands
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutCustomPayload;)V handleCustomPayload
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutEntity;)V handleMoveEntity
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutEntityDestroy;)V handleRemoveEntities
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutEntityEffect;)V handleUpdateMobEffect
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutEntityEquipment;)V handleSetEquipment
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutEntityHeadRotation;)V handleRotateMob
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutEntityMetadata;)V handleSetEntityData
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutEntitySound;)V handleSoundEntityEvent
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutEntityStatus;)V handleEntityEvent
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutEntityTeleport;)V handleTeleportEntity
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutEntityVelocity;)V handleSetEntityMotion
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutExperience;)V handleSetExperience
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutExplosion;)V handleExplosion
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutGameStateChange;)V handleGameEvent
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutHeldItemSlot;)V handleSetCarriedItem
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutKeepAlive;)V handleKeepAlive
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutKickDisconnect;)V handleDisconnect
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutLightUpdate;)V handleLightUpdatePacket
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutLogin;)V handleLogin
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutLookAt;)V handleLookAt
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutMap;)V handleMapItemData
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutMount;)V handleSetEntityPassengersPacket
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutMultiBlockChange;)V handleChunkBlocksUpdate
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutNBTQuery;)V handleTagQueryPacket
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutNamedEntitySpawn;)V handleAddPlayer
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutNamedSoundEffect;)V handleSoundEvent
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutOpenBook;)V handleOpenBook
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutOpenSignEditor;)V handleOpenSignEditor
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutOpenWindow;)V handleOpenScreen
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutOpenWindowHorse;)V handleHorseScreenOpen
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutOpenWindowMerchant;)V handleMerchantOffers
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutPlayerListHeaderFooter;)V handleTabListCustomisation
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutPosition;)V handleMovePlayer
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutRecipeUpdate;)V handleUpdateRecipes
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutRecipes;)V handleAddOrRemoveRecipes
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutRemoveEntityEffect;)V handleRemoveMobEffect
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutResourcePackSend;)V handleResourcePack
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutRespawn;)V handleRespawn
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutScoreboardDisplayObjective;)V handleSetDisplayObjective
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutScoreboardObjective;)V handleAddObjective
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutScoreboardScore;)V handleSetScore
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutScoreboardTeam;)V handleSetPlayerTeamPacket
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutSelectAdvancementTab;)V handleSelectAdvancementsTab
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutServerDifficulty;)V handleChangeDifficulty
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutSetCooldown;)V handleItemCooldown
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutSetSlot;)V handleContainerSetSlot
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutSpawnEntity;)V handleAddEntity
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutSpawnEntityExperienceOrb;)V handleAddExperienceOrb
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutSpawnPosition;)V handleSetSpawn
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutStatistic;)V handleAwardStats
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutStopSound;)V handleStopSoundEvent
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutTabComplete;)V handleCommandSuggestions
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutTags;)V handleUpdateTags
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutTileEntityData;)V handleBlockEntityData
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutUnloadChunk;)V handleForgetLevelChunk
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutUpdateAttributes;)V handleUpdateAttributes
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutUpdateHealth;)V handleSetHealth
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutUpdateTime;)V handleSetTime
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutVehicleMove;)V handleMoveVehicle
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutViewCentre;)V handleSetChunkCacheCenter
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutViewDistance;)V handleSetChunkCacheRadius
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutWindowData;)V handleContainerSetData
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutWindowItems;)V handleContainerContent
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutWorldEvent;)V handleLevelEvent
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutWorldParticles;)V handleParticleEvent
net/minecraft/network/protocol/game/PacketPlayInAbilities net/minecraft/network/protocol/game/ServerboundPlayerAbilitiesPacket
	a FLAG_FLYING
	b isFlying
	a ()Z isFlying
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
net/minecraft/network/protocol/game/PacketPlayInAdvancements net/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket
	a action
	b tab
	a ()Lnet/minecraft/network/protocol/game/PacketPlayInAdvancements; closedScreen
	a (Lnet/minecraft/advancements/Advancement;)Lnet/minecraft/network/protocol/game/PacketPlayInAdvancements; openedTab
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
	c ()Lnet/minecraft/network/protocol/game/PacketPlayInAdvancements$Status; getAction
	d ()Lnet/minecraft/resources/MinecraftKey; getTab
net/minecraft/network/protocol/game/PacketPlayInAdvancements$Status net/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket$Action
	a OPENED_TAB
	b CLOSED_SCREEN
	c $VALUES
	a ()[Lnet/minecraft/network/protocol/game/PacketPlayInAdvancements$Status; $values
net/minecraft/network/protocol/game/PacketPlayInArmAnimation net/minecraft/network/protocol/game/ServerboundSwingPacket
	a hand
	a ()Lnet/minecraft/world/EnumHand; getHand
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
net/minecraft/network/protocol/game/PacketPlayInAutoRecipe net/minecraft/network/protocol/game/ServerboundPlaceRecipePacket
	a containerId
	b recipe
	c shiftDown
	a ()I getContainerId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
	c ()Lnet/minecraft/resources/MinecraftKey; getRecipe
	d ()Z isShiftDown
net/minecraft/network/protocol/game/PacketPlayInBEdit net/minecraft/network/protocol/game/ServerboundEditBookPacket
	a MAX_BYTES_PER_CHAR
	b TITLE_MAX_CHARS
	c PAGE_MAX_CHARS
	d MAX_PAGES_COUNT
	e slot
	f pages
	g title
	a ()Ljava/util/List; getPages
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
	c ()Ljava/util/Optional; getTitle
	d ()I getSlot
net/minecraft/network/protocol/game/PacketPlayInBeacon net/minecraft/network/protocol/game/ServerboundSetBeaconPacket
	a primary
	b secondary
	a ()Ljava/util/Optional; getPrimary
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
	c ()Ljava/util/Optional; getSecondary
net/minecraft/network/protocol/game/PacketPlayInBlockDig net/minecraft/network/protocol/game/ServerboundPlayerActionPacket
	a pos
	b direction
	c action
	d sequence
	a ()Lnet/minecraft/core/BlockPosition; getPos
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
	c ()Lnet/minecraft/core/EnumDirection; getDirection
	d ()Lnet/minecraft/network/protocol/game/PacketPlayInBlockDig$EnumPlayerDigType; getAction
	e ()I getSequence
net/minecraft/network/protocol/game/PacketPlayInBlockDig$EnumPlayerDigType net/minecraft/network/protocol/game/ServerboundPlayerActionPacket$Action
	a START_DESTROY_BLOCK
	b ABORT_DESTROY_BLOCK
	c STOP_DESTROY_BLOCK
	d DROP_ALL_ITEMS
	e DROP_ITEM
	f RELEASE_USE_ITEM
	g SWAP_ITEM_WITH_OFFHAND
	h $VALUES
	a ()[Lnet/minecraft/network/protocol/game/PacketPlayInBlockDig$EnumPlayerDigType; $values
net/minecraft/network/protocol/game/PacketPlayInBlockPlace net/minecraft/network/protocol/game/ServerboundUseItemPacket
	a hand
	b sequence
	a ()Lnet/minecraft/world/EnumHand; getHand
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
	c ()I getSequence
net/minecraft/network/protocol/game/PacketPlayInBoatMove net/minecraft/network/protocol/game/ServerboundPaddleBoatPacket
	a left
	b right
	a ()Z getLeft
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
	c ()Z getRight
net/minecraft/network/protocol/game/PacketPlayInChat net/minecraft/network/protocol/game/ServerboundChatPacket
	a message
	b timeStamp
	c salt
	d signature
	e lastSeenMessages
	a ()Ljava/lang/String; message
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
	c ()Ljava/time/Instant; timeStamp
	d ()J salt
	e ()Lnet/minecraft/network/chat/MessageSignature; signature
	f ()Ltp$b; lastSeenMessages
net/minecraft/network/protocol/game/PacketPlayInClientCommand net/minecraft/network/protocol/game/ServerboundClientCommandPacket
	a action
	a ()Lnet/minecraft/network/protocol/game/PacketPlayInClientCommand$EnumClientCommand; getAction
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
net/minecraft/network/protocol/game/PacketPlayInClientCommand$EnumClientCommand net/minecraft/network/protocol/game/ServerboundClientCommandPacket$Action
	a PERFORM_RESPAWN
	b REQUEST_STATS
	c $VALUES
	a ()[Lnet/minecraft/network/protocol/game/PacketPlayInClientCommand$EnumClientCommand; $values
net/minecraft/network/protocol/game/PacketPlayInCloseWindow net/minecraft/network/protocol/game/ServerboundContainerClosePacket
	a containerId
	a ()I getContainerId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
net/minecraft/network/protocol/game/PacketPlayInCustomPayload net/minecraft/network/protocol/game/ServerboundCustomPayloadPacket
	a BRAND
	b MAX_PAYLOAD_SIZE
	c identifier
	d data
	a ()Lnet/minecraft/resources/MinecraftKey; getIdentifier
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
	c ()Lnet/minecraft/network/PacketDataSerializer; getData
net/minecraft/network/protocol/game/PacketPlayInDifficultyChange net/minecraft/network/protocol/game/ServerboundChangeDifficultyPacket
	a difficulty
	a ()Lnet/minecraft/world/EnumDifficulty; getDifficulty
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
net/minecraft/network/protocol/game/PacketPlayInDifficultyLock net/minecraft/network/protocol/game/ServerboundLockDifficultyPacket
	a locked
	a ()Z isLocked
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
net/minecraft/network/protocol/game/PacketPlayInEnchantItem net/minecraft/network/protocol/game/ServerboundContainerButtonClickPacket
	a containerId
	b buttonId
	a ()I getContainerId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
	c ()I getButtonId
net/minecraft/network/protocol/game/PacketPlayInEntityAction net/minecraft/network/protocol/game/ServerboundPlayerCommandPacket
	a id
	b action
	c data
	a ()I getId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
	c ()Lnet/minecraft/network/protocol/game/PacketPlayInEntityAction$EnumPlayerAction; getAction
	d ()I getData
net/minecraft/network/protocol/game/PacketPlayInEntityAction$EnumPlayerAction net/minecraft/network/protocol/game/ServerboundPlayerCommandPacket$Action
	a PRESS_SHIFT_KEY
	b RELEASE_SHIFT_KEY
	c STOP_SLEEPING
	d START_SPRINTING
	e STOP_SPRINTING
	f START_RIDING_JUMP
	g STOP_RIDING_JUMP
	h OPEN_INVENTORY
	i START_FALL_FLYING
	j $VALUES
	a ()[Lnet/minecraft/network/protocol/game/PacketPlayInEntityAction$EnumPlayerAction; $values
net/minecraft/network/protocol/game/PacketPlayInEntityNBTQuery net/minecraft/network/protocol/game/ServerboundEntityTagQuery
	a transactionId
	b entityId
	a ()I getTransactionId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
	c ()I getEntityId
net/minecraft/network/protocol/game/PacketPlayInFlying net/minecraft/network/protocol/game/ServerboundMovePlayerPacket
	a x
	b y
	c z
	d yRot
	e xRot
	f onGround
	g hasPos
	h hasRot
	a ()Z isOnGround
	a (D)D getX
	a (F)F getYRot
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
	b (D)D getY
	b (F)F getXRot
	c ()Z hasPosition
	c (D)D getZ
	d ()Z hasRotation
net/minecraft/network/protocol/game/PacketPlayInFlying$PacketPlayInLook net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$Rot
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	b (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/network/protocol/game/PacketPlayInFlying$PacketPlayInLook; read
net/minecraft/network/protocol/game/PacketPlayInFlying$PacketPlayInPosition net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$Pos
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	b (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/network/protocol/game/PacketPlayInFlying$PacketPlayInPosition; read
net/minecraft/network/protocol/game/PacketPlayInFlying$PacketPlayInPositionLook net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$PosRot
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	b (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/network/protocol/game/PacketPlayInFlying$PacketPlayInPositionLook; read
net/minecraft/network/protocol/game/PacketPlayInHeldItemSlot net/minecraft/network/protocol/game/ServerboundSetCarriedItemPacket
	a slot
	a ()I getSlot
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
net/minecraft/network/protocol/game/PacketPlayInItemName net/minecraft/network/protocol/game/ServerboundRenameItemPacket
	a name
	a ()Ljava/lang/String; getName
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
net/minecraft/network/protocol/game/PacketPlayInJigsawGenerate net/minecraft/network/protocol/game/ServerboundJigsawGeneratePacket
	a pos
	b levels
	c keepJigsaws
	a ()Lnet/minecraft/core/BlockPosition; getPos
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
	c ()I levels
	d ()Z keepJigsaws
net/minecraft/network/protocol/game/PacketPlayInKeepAlive net/minecraft/network/protocol/game/ServerboundKeepAlivePacket
	a id
	a ()J getId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
net/minecraft/network/protocol/game/PacketPlayInPickItem net/minecraft/network/protocol/game/ServerboundPickItemPacket
	a slot
	a ()I getSlot
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
net/minecraft/network/protocol/game/PacketPlayInRecipeDisplayed net/minecraft/network/protocol/game/ServerboundRecipeBookSeenRecipePacket
	a recipe
	a ()Lnet/minecraft/resources/MinecraftKey; getRecipe
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
net/minecraft/network/protocol/game/PacketPlayInRecipeSettings net/minecraft/network/protocol/game/ServerboundRecipeBookChangeSettingsPacket
	a bookType
	b isOpen
	c isFiltering
	a ()Lnet/minecraft/world/inventory/RecipeBookType; getBookType
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
	c ()Z isOpen
	d ()Z isFiltering
net/minecraft/network/protocol/game/PacketPlayInResourcePackStatus net/minecraft/network/protocol/game/ServerboundResourcePackPacket
	a action
	a ()Lnet/minecraft/network/protocol/game/PacketPlayInResourcePackStatus$EnumResourcePackStatus; getAction
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
net/minecraft/network/protocol/game/PacketPlayInResourcePackStatus$EnumResourcePackStatus net/minecraft/network/protocol/game/ServerboundResourcePackPacket$Action
	a SUCCESSFULLY_LOADED
	b DECLINED
	c FAILED_DOWNLOAD
	d ACCEPTED
	e $VALUES
	a ()[Lnet/minecraft/network/protocol/game/PacketPlayInResourcePackStatus$EnumResourcePackStatus; $values
net/minecraft/network/protocol/game/PacketPlayInSetCommandBlock net/minecraft/network/protocol/game/ServerboundSetCommandBlockPacket
	a FLAG_TRACK_OUTPUT
	b FLAG_CONDITIONAL
	c FLAG_AUTOMATIC
	d pos
	e command
	f trackOutput
	g conditional
	h automatic
	i mode
	a ()Lnet/minecraft/core/BlockPosition; getPos
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
	c ()Ljava/lang/String; getCommand
	d ()Z isTrackOutput
	e ()Z isConditional
	f ()Z isAutomatic
	g ()Lnet/minecraft/world/level/block/entity/TileEntityCommand$Type; getMode
net/minecraft/network/protocol/game/PacketPlayInSetCommandMinecart net/minecraft/network/protocol/game/ServerboundSetCommandMinecartPacket
	a entity
	b command
	c trackOutput
	a ()Ljava/lang/String; getCommand
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
	a (Lnet/minecraft/world/level/World;)Lnet/minecraft/world/level/CommandBlockListenerAbstract; getCommandBlock
	c ()Z isTrackOutput
net/minecraft/network/protocol/game/PacketPlayInSetCreativeSlot net/minecraft/network/protocol/game/ServerboundSetCreativeModeSlotPacket
	a slotNum
	b itemStack
	a ()I getSlotNum
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
	c ()Lnet/minecraft/world/item/ItemStack; getItem
net/minecraft/network/protocol/game/PacketPlayInSetJigsaw net/minecraft/network/protocol/game/ServerboundSetJigsawBlockPacket
	a pos
	b name
	c target
	d pool
	e finalState
	f joint
	a ()Lnet/minecraft/core/BlockPosition; getPos
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
	c ()Lnet/minecraft/resources/MinecraftKey; getName
	d ()Lnet/minecraft/resources/MinecraftKey; getTarget
	e ()Lnet/minecraft/resources/MinecraftKey; getPool
	f ()Ljava/lang/String; getFinalState
	g ()Lnet/minecraft/world/level/block/entity/TileEntityJigsaw$JointType; getJoint
net/minecraft/network/protocol/game/PacketPlayInSettings net/minecraft/network/protocol/game/ServerboundClientInformationPacket
	a MAX_LANGUAGE_LENGTH
	b language
	c viewDistance
	d chatVisibility
	e chatColors
	f modelCustomisation
	g mainHand
	h textFilteringEnabled
	i allowsListing
	a ()Ljava/lang/String; language
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
	c ()I viewDistance
	d ()Lnet/minecraft/world/entity/player/EnumChatVisibility; chatVisibility
	e ()Z chatColors
	f ()I modelCustomisation
	g ()Lnet/minecraft/world/entity/EnumMainHand; mainHand
	h ()Z textFilteringEnabled
	i ()Z allowsListing
net/minecraft/network/protocol/game/PacketPlayInSpectate net/minecraft/network/protocol/game/ServerboundTeleportToEntityPacket
	a uuid
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
	a (Lnet/minecraft/server/level/WorldServer;)Lnet/minecraft/world/entity/Entity; getEntity
net/minecraft/network/protocol/game/PacketPlayInSteerVehicle net/minecraft/network/protocol/game/ServerboundPlayerInputPacket
	a FLAG_JUMPING
	b FLAG_SHIFT_KEY_DOWN
	c xxa
	d zza
	e isJumping
	f isShiftKeyDown
	a ()F getXxa
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
	c ()F getZza
	d ()Z isJumping
	e ()Z isShiftKeyDown
net/minecraft/network/protocol/game/PacketPlayInStruct net/minecraft/network/protocol/game/ServerboundSetStructureBlockPacket
	a FLAG_IGNORE_ENTITIES
	b FLAG_SHOW_AIR
	c FLAG_SHOW_BOUNDING_BOX
	d pos
	e updateType
	f mode
	g name
	h offset
	i size
	j mirror
	k rotation
	l data
	m ignoreEntities
	n showAir
	o showBoundingBox
	p integrity
	q seed
	a ()Lnet/minecraft/core/BlockPosition; getPos
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
	c ()Lnet/minecraft/world/level/block/entity/TileEntityStructure$UpdateType; getUpdateType
	d ()Lnet/minecraft/world/level/block/state/properties/BlockPropertyStructureMode; getMode
	e ()Ljava/lang/String; getName
	f ()Lnet/minecraft/core/BlockPosition; getOffset
	g ()Lnet/minecraft/core/BaseBlockPosition; getSize
	h ()Lnet/minecraft/world/level/block/EnumBlockMirror; getMirror
	i ()Lnet/minecraft/world/level/block/EnumBlockRotation; getRotation
	j ()Ljava/lang/String; getData
	k ()Z isIgnoreEntities
	l ()Z isShowAir
	m ()Z isShowBoundingBox
	n ()F getIntegrity
	o ()J getSeed
net/minecraft/network/protocol/game/PacketPlayInTabComplete net/minecraft/network/protocol/game/ServerboundCommandSuggestionPacket
	a id
	b command
	a ()I getId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
	c ()Ljava/lang/String; getCommand
net/minecraft/network/protocol/game/PacketPlayInTeleportAccept net/minecraft/network/protocol/game/ServerboundAcceptTeleportationPacket
	a id
	a ()I getId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
net/minecraft/network/protocol/game/PacketPlayInTileNBTQuery net/minecraft/network/protocol/game/ServerboundBlockEntityTagQuery
	a transactionId
	b pos
	a ()I getTransactionId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
	c ()Lnet/minecraft/core/BlockPosition; getPos
net/minecraft/network/protocol/game/PacketPlayInTrSel net/minecraft/network/protocol/game/ServerboundSelectTradePacket
	a item
	a ()I getItem
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
net/minecraft/network/protocol/game/PacketPlayInUpdateSign net/minecraft/network/protocol/game/ServerboundSignUpdatePacket
	a MAX_STRING_LENGTH
	b pos
	c lines
	a ()Lnet/minecraft/core/BlockPosition; getPos
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
	c ()[Ljava/lang/String; getLines
net/minecraft/network/protocol/game/PacketPlayInUseEntity net/minecraft/network/protocol/game/ServerboundInteractPacket
	a entityId
	b action
	c usingSecondaryAction
	d ATTACK_ACTION
	a ()Z isUsingSecondaryAction
	a (Laag$c;)V dispatch
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
	a (Lnet/minecraft/server/level/WorldServer;)Lnet/minecraft/world/entity/Entity; getTarget
	a (Lnet/minecraft/world/entity/Entity;Z)Lnet/minecraft/network/protocol/game/PacketPlayInUseEntity; createAttackPacket
	a (Lnet/minecraft/world/entity/Entity;ZLnet/minecraft/world/EnumHand;)Lnet/minecraft/network/protocol/game/PacketPlayInUseEntity; createInteractionPacket
	a (Lnet/minecraft/world/entity/Entity;ZLnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/network/protocol/game/PacketPlayInUseEntity; createInteractionPacket
net/minecraft/network/protocol/game/PacketPlayInUseEntity$EnumEntityUseAction net/minecraft/network/protocol/game/ServerboundInteractPacket$Action
	a ()Laag$b; getType
	a (Laag$c;)V dispatch
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
net/minecraft/network/protocol/game/PacketPlayInUseItem net/minecraft/network/protocol/game/ServerboundUseItemOnPacket
	a blockHit
	b hand
	c sequence
	a ()Lnet/minecraft/world/EnumHand; getHand
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
	c ()Lnet/minecraft/world/phys/MovingObjectPositionBlock; getHitResult
	d ()I getSequence
net/minecraft/network/protocol/game/PacketPlayInVehicleMove net/minecraft/network/protocol/game/ServerboundMoveVehiclePacket
	a x
	b y
	c z
	d yRot
	e xRot
	a ()D getX
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
	c ()D getY
	d ()D getZ
	e ()F getYRot
	f ()F getXRot
net/minecraft/network/protocol/game/PacketPlayInWindowClick net/minecraft/network/protocol/game/ServerboundContainerClickPacket
	a MAX_SLOT_COUNT
	b containerId
	c stateId
	d slotNum
	e buttonNum
	f clickType
	g carriedItem
	h changedSlots
	a ()I getContainerId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
	c ()I getSlotNum
	d ()I getButtonNum
	e ()Lnet/minecraft/world/item/ItemStack; getCarriedItem
	f ()Lit/unimi/dsi/fastutil/ints/Int2ObjectMap; getChangedSlots
	g ()Lnet/minecraft/world/inventory/InventoryClickType; getClickType
	h ()I getStateId
net/minecraft/network/protocol/game/PacketPlayOutAbilities net/minecraft/network/protocol/game/ClientboundPlayerAbilitiesPacket
	a FLAG_INVULNERABLE
	b FLAG_FLYING
	c FLAG_CAN_FLY
	d FLAG_INSTABUILD
	e invulnerable
	f isFlying
	g canFly
	h instabuild
	i flyingSpeed
	j walkingSpeed
	a ()Z isInvulnerable
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	c ()Z isFlying
	d ()Z canFly
	e ()Z canInstabuild
	f ()F getFlyingSpeed
	g ()F getWalkingSpeed
net/minecraft/network/protocol/game/PacketPlayOutAdvancements net/minecraft/network/protocol/game/ClientboundUpdateAdvancementsPacket
	a reset
	b added
	c removed
	d progress
	a ()Ljava/util/Map; getAdded
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	c ()Ljava/util/Set; getRemoved
	d ()Ljava/util/Map; getProgress
	e ()Z shouldReset
net/minecraft/network/protocol/game/PacketPlayOutAnimation net/minecraft/network/protocol/game/ClientboundAnimatePacket
	a SWING_MAIN_HAND
	b WAKE_UP
	c SWING_OFF_HAND
	d CRITICAL_HIT
	e MAGIC_CRITICAL_HIT
	f id
	g action
	a ()I getId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	c ()I getAction
net/minecraft/network/protocol/game/PacketPlayOutAttachEntity net/minecraft/network/protocol/game/ClientboundSetEntityLinkPacket
	a sourceId
	b destId
	a ()I getSourceId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	c ()I getDestId
net/minecraft/network/protocol/game/PacketPlayOutAutoRecipe net/minecraft/network/protocol/game/ClientboundPlaceGhostRecipePacket
	a containerId
	b recipe
	a ()Lnet/minecraft/resources/MinecraftKey; getRecipe
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	c ()I getContainerId
net/minecraft/network/protocol/game/PacketPlayOutBlockAction net/minecraft/network/protocol/game/ClientboundBlockEventPacket
	a pos
	b b0
	c b1
	d block
	a ()Lnet/minecraft/core/BlockPosition; getPos
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	c ()I getB0
	d ()I getB1
	e ()Lnet/minecraft/world/level/block/Block; getBlock
net/minecraft/network/protocol/game/PacketPlayOutBlockBreakAnimation net/minecraft/network/protocol/game/ClientboundBlockDestructionPacket
	a id
	b pos
	c progress
	a ()I getId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	c ()Lnet/minecraft/core/BlockPosition; getPos
	d ()I getProgress
net/minecraft/network/protocol/game/PacketPlayOutBlockChange net/minecraft/network/protocol/game/ClientboundBlockUpdatePacket
	a pos
	b blockState
	a ()Lnet/minecraft/world/level/block/state/IBlockData; getBlockState
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	c ()Lnet/minecraft/core/BlockPosition; getPos
net/minecraft/network/protocol/game/PacketPlayOutBoss net/minecraft/network/protocol/game/ClientboundBossEventPacket
	a FLAG_DARKEN
	b FLAG_MUSIC
	c FLAG_FOG
	d id
	e operation
	f REMOVE_OPERATION
	a (Ljava/util/UUID;)Lnet/minecraft/network/protocol/game/PacketPlayOutBoss; createRemovePacket
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	a (Lnet/minecraft/world/BossBattle;)Lnet/minecraft/network/protocol/game/PacketPlayOutBoss; createAddPacket
	a (Lvp$b;)V dispatch
	a (ZZZ)I encodeProperties
	b (Lnet/minecraft/world/BossBattle;)Lnet/minecraft/network/protocol/game/PacketPlayOutBoss; createUpdateProgressPacket
	c (Lnet/minecraft/world/BossBattle;)Lnet/minecraft/network/protocol/game/PacketPlayOutBoss; createUpdateNamePacket
	d (Lnet/minecraft/world/BossBattle;)Lnet/minecraft/network/protocol/game/PacketPlayOutBoss; createUpdateStylePacket
	e (Lnet/minecraft/world/BossBattle;)Lnet/minecraft/network/protocol/game/PacketPlayOutBoss; createUpdatePropertiesPacket
net/minecraft/network/protocol/game/PacketPlayOutBoss$Action net/minecraft/network/protocol/game/ClientboundBossEventPacket$Operation
	a ()Lvp$d; getType
	a (Ljava/util/UUID;Lvp$b;)V dispatch
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
net/minecraft/network/protocol/game/PacketPlayOutCamera net/minecraft/network/protocol/game/ClientboundSetCameraPacket
	a cameraId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	a (Lnet/minecraft/world/level/World;)Lnet/minecraft/world/entity/Entity; getEntity
net/minecraft/network/protocol/game/PacketPlayOutCloseWindow net/minecraft/network/protocol/game/ClientboundContainerClosePacket
	a containerId
	a ()I getContainerId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
net/minecraft/network/protocol/game/PacketPlayOutCollect net/minecraft/network/protocol/game/ClientboundTakeItemEntityPacket
	a itemId
	b playerId
	c amount
	a ()I getItemId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	c ()I getPlayerId
	d ()I getAmount
net/minecraft/network/protocol/game/PacketPlayOutCommands net/minecraft/network/protocol/game/ClientboundCommandsPacket
	a MASK_TYPE
	b FLAG_EXECUTABLE
	c FLAG_REDIRECT
	d FLAG_CUSTOM_SUGGESTIONS
	e TYPE_ROOT
	f TYPE_LITERAL
	g TYPE_ARGUMENT
	h rootIndex
	i entries
	a (Lcom/mojang/brigadier/tree/CommandNode;Lit/unimi/dsi/fastutil/objects/Object2IntMap;)Lvv$b; createEntry
	a (Lcom/mojang/brigadier/tree/RootCommandNode;)Lit/unimi/dsi/fastutil/objects/Object2IntMap; enumerateNodes
	a (Lit/unimi/dsi/fastutil/objects/Object2IntMap;)Ljava/util/List; createEntries
	a (Ljava/util/List;)V validateEntries
	a (Ljava/util/List;Ljava/util/function/BiPredicate;)V validateEntries
	a (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/tree/RootCommandNode; getRoot
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketDataSerializer;B)Lvv$e; read
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	b (Lnet/minecraft/network/PacketDataSerializer;)Lvv$b; readNode
net/minecraft/network/protocol/game/PacketPlayOutCustomPayload net/minecraft/network/protocol/game/ClientboundCustomPayloadPacket
	a BRAND
	b DEBUG_PATHFINDING_PACKET
	c DEBUG_NEIGHBORSUPDATE_PACKET
	d DEBUG_STRUCTURES_PACKET
	e DEBUG_WORLDGENATTEMPT_PACKET
	f DEBUG_POI_TICKET_COUNT_PACKET
	g DEBUG_POI_ADDED_PACKET
	h DEBUG_POI_REMOVED_PACKET
	i DEBUG_VILLAGE_SECTIONS
	j DEBUG_GOAL_SELECTOR
	k DEBUG_BRAIN
	l DEBUG_BEE
	m DEBUG_HIVE
	n DEBUG_GAME_TEST_ADD_MARKER
	o DEBUG_GAME_TEST_CLEAR
	p DEBUG_RAIDS
	q DEBUG_GAME_EVENT
	r DEBUG_GAME_EVENT_LISTENER
	s MAX_PAYLOAD_SIZE
	t identifier
	u data
	a ()Lnet/minecraft/resources/MinecraftKey; getIdentifier
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	c ()Lnet/minecraft/network/PacketDataSerializer; getData
net/minecraft/network/protocol/game/PacketPlayOutEntity net/minecraft/network/protocol/game/ClientboundMoveEntityPacket
	a entityId
	b xa
	c ya
	d za
	e yRot
	f xRot
	g onGround
	h hasRot
	i hasPos
	a ()S getXa
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	a (Lnet/minecraft/world/level/World;)Lnet/minecraft/world/entity/Entity; getEntity
	c ()S getYa
	d ()S getZa
	e ()B getyRot
	f ()B getxRot
	g ()Z hasRotation
	h ()Z hasPosition
	i ()Z isOnGround
net/minecraft/network/protocol/game/PacketPlayOutEntity$PacketPlayOutEntityLook net/minecraft/network/protocol/game/ClientboundMoveEntityPacket$Rot
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	b (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/network/protocol/game/PacketPlayOutEntity$PacketPlayOutEntityLook; read
net/minecraft/network/protocol/game/PacketPlayOutEntity$PacketPlayOutRelEntityMove net/minecraft/network/protocol/game/ClientboundMoveEntityPacket$Pos
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	b (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/network/protocol/game/PacketPlayOutEntity$PacketPlayOutRelEntityMove; read
net/minecraft/network/protocol/game/PacketPlayOutEntity$PacketPlayOutRelEntityMoveLook net/minecraft/network/protocol/game/ClientboundMoveEntityPacket$PosRot
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	b (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/network/protocol/game/PacketPlayOutEntity$PacketPlayOutRelEntityMoveLook; read
net/minecraft/network/protocol/game/PacketPlayOutEntityDestroy net/minecraft/network/protocol/game/ClientboundRemoveEntitiesPacket
	a entityIds
	a ()Lit/unimi/dsi/fastutil/ints/IntList; getEntityIds
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
net/minecraft/network/protocol/game/PacketPlayOutEntityEffect net/minecraft/network/protocol/game/ClientboundUpdateMobEffectPacket
	a FLAG_AMBIENT
	b FLAG_VISIBLE
	c FLAG_SHOW_ICON
	d entityId
	e effect
	f effectAmplifier
	g effectDurationTicks
	h flags
	i factorData
	a ()I getEntityId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	c ()Lnet/minecraft/world/effect/MobEffectList; getEffect
	d ()B getEffectAmplifier
	e ()I getEffectDurationTicks
	f ()Z isEffectVisible
	g ()Z isEffectAmbient
	h ()Z effectShowsIcon
	i ()Lbey$a; getFactorData
net/minecraft/network/protocol/game/PacketPlayOutEntityEquipment net/minecraft/network/protocol/game/ClientboundSetEquipmentPacket
	a CONTINUE_MASK
	b entity
	c slots
	a ()I getEntity
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	c ()Ljava/util/List; getSlots
net/minecraft/network/protocol/game/PacketPlayOutEntityHeadRotation net/minecraft/network/protocol/game/ClientboundRotateHeadPacket
	a entityId
	b yHeadRot
	a ()B getYHeadRot
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	a (Lnet/minecraft/world/level/World;)Lnet/minecraft/world/entity/Entity; getEntity
net/minecraft/network/protocol/game/PacketPlayOutEntityMetadata net/minecraft/network/protocol/game/ClientboundSetEntityDataPacket
	a EOF_MARKER
	b id
	c packedItems
	a ()I id
	a (Ljava/util/List;Lnet/minecraft/network/PacketDataSerializer;)V pack
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	b (Lnet/minecraft/network/PacketDataSerializer;)Ljava/util/List; unpack
	c ()Ljava/util/List; packedItems
net/minecraft/network/protocol/game/PacketPlayOutEntitySound net/minecraft/network/protocol/game/ClientboundSoundEntityPacket
	a sound
	b source
	c id
	d volume
	e pitch
	f seed
	a ()Lnet/minecraft/core/Holder; getSound
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	c ()Lnet/minecraft/sounds/SoundCategory; getSource
	d ()I getId
	e ()F getVolume
	f ()F getPitch
	g ()J getSeed
net/minecraft/network/protocol/game/PacketPlayOutEntityStatus net/minecraft/network/protocol/game/ClientboundEntityEventPacket
	a entityId
	b eventId
	a ()B getEventId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	a (Lnet/minecraft/world/level/World;)Lnet/minecraft/world/entity/Entity; getEntity
net/minecraft/network/protocol/game/PacketPlayOutEntityTeleport net/minecraft/network/protocol/game/ClientboundTeleportEntityPacket
	a id
	b x
	c y
	d z
	e yRot
	f xRot
	g onGround
	a ()I getId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	c ()D getX
	d ()D getY
	e ()D getZ
	f ()B getyRot
	g ()B getxRot
	h ()Z isOnGround
net/minecraft/network/protocol/game/PacketPlayOutEntityVelocity net/minecraft/network/protocol/game/ClientboundSetEntityMotionPacket
	a id
	b xa
	c ya
	d za
	a ()I getId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	c ()I getXa
	d ()I getYa
	e ()I getZa
net/minecraft/network/protocol/game/PacketPlayOutExperience net/minecraft/network/protocol/game/ClientboundSetExperiencePacket
	a experienceProgress
	b totalExperience
	c experienceLevel
	a ()F getExperienceProgress
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	c ()I getTotalExperience
	d ()I getExperienceLevel
net/minecraft/network/protocol/game/PacketPlayOutExplosion net/minecraft/network/protocol/game/ClientboundExplodePacket
	a x
	b y
	c z
	d power
	e toBlow
	f knockbackX
	g knockbackY
	h knockbackZ
	a ()F getKnockbackX
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	c ()F getKnockbackY
	d ()F getKnockbackZ
	e ()D getX
	f ()D getY
	g ()D getZ
	h ()F getPower
	i ()Ljava/util/List; getToBlow
net/minecraft/network/protocol/game/PacketPlayOutGameStateChange net/minecraft/network/protocol/game/ClientboundGameEventPacket
	a NO_RESPAWN_BLOCK_AVAILABLE
	b START_RAINING
	c STOP_RAINING
	d CHANGE_GAME_MODE
	e WIN_GAME
	f DEMO_EVENT
	g ARROW_HIT_PLAYER
	h RAIN_LEVEL_CHANGE
	i THUNDER_LEVEL_CHANGE
	j PUFFER_FISH_STING
	k GUARDIAN_ELDER_EFFECT
	l IMMEDIATE_RESPAWN
	m DEMO_PARAM_INTRO
	n DEMO_PARAM_HINT_1
	o DEMO_PARAM_HINT_2
	p DEMO_PARAM_HINT_3
	q DEMO_PARAM_HINT_4
	r event
	s param
	a ()Lwk$a; getEvent
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	c ()F getParam
net/minecraft/network/protocol/game/PacketPlayOutHeldItemSlot net/minecraft/network/protocol/game/ClientboundSetCarriedItemPacket
	a slot
	a ()I getSlot
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
net/minecraft/network/protocol/game/PacketPlayOutKeepAlive net/minecraft/network/protocol/game/ClientboundKeepAlivePacket
	a id
	a ()J getId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
net/minecraft/network/protocol/game/PacketPlayOutKickDisconnect net/minecraft/network/protocol/game/ClientboundDisconnectPacket
	a reason
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getReason
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
net/minecraft/network/protocol/game/PacketPlayOutLightUpdate net/minecraft/network/protocol/game/ClientboundLightUpdatePacket
	a x
	b z
	c lightData
	a ()I getX
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	c ()I getZ
	d ()Lnet/minecraft/network/protocol/game/ClientboundLightUpdatePacketData; getLightData
net/minecraft/network/protocol/game/PacketPlayOutLogin net/minecraft/network/protocol/game/ClientboundLoginPacket
	a playerId
	b hardcore
	c gameType
	d previousGameType
	e levels
	f registryHolder
	g dimensionType
	h dimension
	i seed
	j maxPlayers
	k chunkRadius
	l simulationDistance
	m reducedDebugInfo
	n showDeathScreen
	o isDebug
	p isFlat
	q lastDeathLocation
	r BUILTIN_CONTEXT_OPS
	a ()I playerId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	c ()Z hardcore
	d ()Lnet/minecraft/world/level/EnumGamemode; gameType
	e ()Lnet/minecraft/world/level/EnumGamemode; previousGameType
	f ()Ljava/util/Set; levels
	g ()Lnet/minecraft/core/IRegistryCustom$Dimension; registryHolder
	h ()Lnet/minecraft/resources/ResourceKey; dimensionType
	i ()Lnet/minecraft/resources/ResourceKey; dimension
	j ()J seed
	k ()I maxPlayers
	l ()I chunkRadius
	m ()I simulationDistance
	n ()Z reducedDebugInfo
	o ()Z showDeathScreen
	p ()Z isDebug
	q ()Z isFlat
	r ()Ljava/util/Optional; lastDeathLocation
net/minecraft/network/protocol/game/PacketPlayOutLookAt net/minecraft/network/protocol/game/ClientboundPlayerLookAtPacket
	a x
	b y
	c z
	d entity
	e fromAnchor
	f toAnchor
	g atEntity
	a ()Lnet/minecraft/commands/arguments/ArgumentAnchor$Anchor; getFromAnchor
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	a (Lnet/minecraft/world/level/World;)Lnet/minecraft/world/phys/Vec3D; getPosition
net/minecraft/network/protocol/game/PacketPlayOutMap net/minecraft/network/protocol/game/ClientboundMapItemDataPacket
	a mapId
	b scale
	c locked
	d decorations
	e colorPatch
	a ()I getMapId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	a (Lnet/minecraft/world/level/saveddata/maps/WorldMap;)V applyToMap
	c ()B getScale
	d ()Z isLocked
net/minecraft/network/protocol/game/PacketPlayOutMount net/minecraft/network/protocol/game/ClientboundSetPassengersPacket
	a vehicle
	b passengers
	a ()[I getPassengers
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	c ()I getVehicle
net/minecraft/network/protocol/game/PacketPlayOutMultiBlockChange net/minecraft/network/protocol/game/ClientboundSectionBlocksUpdatePacket
	a POS_IN_SECTION_BITS
	b sectionPos
	c positions
	d states
	e suppressLightUpdates
	a ()Z shouldSuppressLightUpdates
	a (Ljava/util/function/BiConsumer;)V runUpdates
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
net/minecraft/network/protocol/game/PacketPlayOutNBTQuery net/minecraft/network/protocol/game/ClientboundTagQueryPacket
	a transactionId
	b tag
	a ()I getTransactionId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	b ()Z isSkippable
	c ()Lnet/minecraft/nbt/NBTTagCompound; getTag
net/minecraft/network/protocol/game/PacketPlayOutNamedEntitySpawn net/minecraft/network/protocol/game/ClientboundAddPlayerPacket
	a entityId
	b playerId
	c x
	d y
	e z
	f yRot
	g xRot
	a ()I getEntityId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	c ()Ljava/util/UUID; getPlayerId
	d ()D getX
	e ()D getY
	f ()D getZ
	g ()B getyRot
	h ()B getxRot
net/minecraft/network/protocol/game/PacketPlayOutNamedSoundEffect net/minecraft/network/protocol/game/ClientboundSoundPacket
	a LOCATION_ACCURACY
	b sound
	c source
	d x
	e y
	f z
	g volume
	h pitch
	i seed
	a ()Lnet/minecraft/core/Holder; getSound
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	c ()Lnet/minecraft/sounds/SoundCategory; getSource
	d ()D getX
	e ()D getY
	f ()D getZ
	g ()F getVolume
	h ()F getPitch
	i ()J getSeed
net/minecraft/network/protocol/game/PacketPlayOutOpenBook net/minecraft/network/protocol/game/ClientboundOpenBookPacket
	a hand
	a ()Lnet/minecraft/world/EnumHand; getHand
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
net/minecraft/network/protocol/game/PacketPlayOutOpenSignEditor net/minecraft/network/protocol/game/ClientboundOpenSignEditorPacket
	a pos
	a ()Lnet/minecraft/core/BlockPosition; getPos
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
net/minecraft/network/protocol/game/PacketPlayOutOpenWindow net/minecraft/network/protocol/game/ClientboundOpenScreenPacket
	a containerId
	b type
	c title
	a ()I getContainerId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	c ()Lnet/minecraft/world/inventory/Containers; getType
	d ()Lnet/minecraft/network/chat/IChatBaseComponent; getTitle
net/minecraft/network/protocol/game/PacketPlayOutOpenWindowHorse net/minecraft/network/protocol/game/ClientboundHorseScreenOpenPacket
	a containerId
	b size
	c entityId
	a ()I getContainerId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	c ()I getSize
	d ()I getEntityId
net/minecraft/network/protocol/game/PacketPlayOutOpenWindowMerchant net/minecraft/network/protocol/game/ClientboundMerchantOffersPacket
	a containerId
	b offers
	c villagerLevel
	d villagerXp
	e showProgress
	f canRestock
	a ()I getContainerId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	c ()Lnet/minecraft/world/item/trading/MerchantRecipeList; getOffers
	d ()I getVillagerLevel
	e ()I getVillagerXp
	f ()Z showProgress
	g ()Z canRestock
net/minecraft/network/protocol/game/PacketPlayOutPlayerListHeaderFooter net/minecraft/network/protocol/game/ClientboundTabListPacket
	a header
	b footer
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getHeader
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	c ()Lnet/minecraft/network/chat/IChatBaseComponent; getFooter
net/minecraft/network/protocol/game/PacketPlayOutPosition net/minecraft/network/protocol/game/ClientboundPlayerPositionPacket
	a x
	b y
	c z
	d yRot
	e xRot
	f relativeArguments
	g id
	a ()D getX
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	c ()D getY
	d ()D getZ
	e ()F getYRot
	f ()F getXRot
	g ()I getId
	h ()Ljava/util/Set; getRelativeArguments
net/minecraft/network/protocol/game/PacketPlayOutRecipeUpdate net/minecraft/network/protocol/game/ClientboundUpdateRecipesPacket
	a recipes
	a ()Ljava/util/List; getRecipes
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/world/item/crafting/IRecipe;)V toNetwork
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	b (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/world/item/crafting/IRecipe; fromNetwork
net/minecraft/network/protocol/game/PacketPlayOutRecipes net/minecraft/network/protocol/game/ClientboundRecipePacket
	a state
	b recipes
	c toHighlight
	d bookSettings
	a ()Ljava/util/List; getRecipes
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	c ()Ljava/util/List; getHighlights
	d ()Lnet/minecraft/stats/RecipeBookSettings; getBookSettings
	e ()Lnet/minecraft/network/protocol/game/PacketPlayOutRecipes$Action; getState
net/minecraft/network/protocol/game/PacketPlayOutRecipes$Action net/minecraft/network/protocol/game/ClientboundRecipePacket$State
	a INIT
	b ADD
	c REMOVE
	d $VALUES
	a ()[Lnet/minecraft/network/protocol/game/PacketPlayOutRecipes$Action; $values
net/minecraft/network/protocol/game/PacketPlayOutRemoveEntityEffect net/minecraft/network/protocol/game/ClientboundRemoveMobEffectPacket
	a entityId
	b effect
	a ()Lnet/minecraft/world/effect/MobEffectList; getEffect
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	a (Lnet/minecraft/world/level/World;)Lnet/minecraft/world/entity/Entity; getEntity
net/minecraft/network/protocol/game/PacketPlayOutResourcePackSend net/minecraft/network/protocol/game/ClientboundResourcePackPacket
	a MAX_HASH_LENGTH
	b url
	c hash
	d required
	e prompt
	a ()Ljava/lang/String; getUrl
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	c ()Ljava/lang/String; getHash
	d ()Z isRequired
	e ()Lnet/minecraft/network/chat/IChatBaseComponent; getPrompt
net/minecraft/network/protocol/game/PacketPlayOutRespawn net/minecraft/network/protocol/game/ClientboundRespawnPacket
	a KEEP_ATTRIBUTES
	b KEEP_ENTITY_DATA
	c KEEP_ALL_DATA
	d dimensionType
	e dimension
	f seed
	g playerGameType
	h previousPlayerGameType
	i isDebug
	j isFlat
	k dataToKeep
	l lastDeathLocation
	a ()Lnet/minecraft/resources/ResourceKey; getDimensionType
	a (B)Z shouldKeep
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	c ()Lnet/minecraft/resources/ResourceKey; getDimension
	d ()J getSeed
	e ()Lnet/minecraft/world/level/EnumGamemode; getPlayerGameType
	f ()Lnet/minecraft/world/level/EnumGamemode; getPreviousPlayerGameType
	g ()Z isDebug
	h ()Z isFlat
	i ()Ljava/util/Optional; getLastDeathLocation
net/minecraft/network/protocol/game/PacketPlayOutScoreboardDisplayObjective net/minecraft/network/protocol/game/ClientboundSetDisplayObjectivePacket
	a slot
	b objectiveName
	a ()I getSlot
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	c ()Ljava/lang/String; getObjectiveName
net/minecraft/network/protocol/game/PacketPlayOutScoreboardObjective net/minecraft/network/protocol/game/ClientboundSetObjectivePacket
	a METHOD_ADD
	b METHOD_REMOVE
	c METHOD_CHANGE
	d objectiveName
	e displayName
	f renderType
	g method
	a ()Ljava/lang/String; getObjectiveName
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	c ()Lnet/minecraft/network/chat/IChatBaseComponent; getDisplayName
	d ()I getMethod
	e ()Lnet/minecraft/world/scores/criteria/IScoreboardCriteria$EnumScoreboardHealthDisplay; getRenderType
net/minecraft/network/protocol/game/PacketPlayOutScoreboardScore net/minecraft/network/protocol/game/ClientboundSetScorePacket
	a owner
	b objectiveName
	c score
	d method
	a ()Ljava/lang/String; getOwner
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	c ()Ljava/lang/String; getObjectiveName
	d ()I getScore
	e ()Lnet/minecraft/server/ScoreboardServer$Action; getMethod
net/minecraft/network/protocol/game/PacketPlayOutScoreboardTeam net/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket
	a METHOD_ADD
	b METHOD_REMOVE
	c METHOD_CHANGE
	d METHOD_JOIN
	e METHOD_LEAVE
	f MAX_VISIBILITY_LENGTH
	g MAX_COLLISION_LENGTH
	h method
	i name
	j players
	k parameters
	a ()Lyr$a; getPlayerAction
	a (I)Z shouldHavePlayerList
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	a (Lnet/minecraft/world/scores/ScoreboardTeam;)Lnet/minecraft/network/protocol/game/PacketPlayOutScoreboardTeam; createRemovePacket
	a (Lnet/minecraft/world/scores/ScoreboardTeam;Ljava/lang/String;Lyr$a;)Lnet/minecraft/network/protocol/game/PacketPlayOutScoreboardTeam; createPlayerPacket
	a (Lnet/minecraft/world/scores/ScoreboardTeam;Z)Lnet/minecraft/network/protocol/game/PacketPlayOutScoreboardTeam; createAddOrModifyPacket
	b (I)Z shouldHaveParameters
	c ()Lyr$a; getTeamAction
	d ()Ljava/lang/String; getName
	e ()Ljava/util/Collection; getPlayers
	f ()Ljava/util/Optional; getParameters
net/minecraft/network/protocol/game/PacketPlayOutSelectAdvancementTab net/minecraft/network/protocol/game/ClientboundSelectAdvancementsTabPacket
	a tab
	a ()Lnet/minecraft/resources/MinecraftKey; getTab
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
net/minecraft/network/protocol/game/PacketPlayOutServerDifficulty net/minecraft/network/protocol/game/ClientboundChangeDifficultyPacket
	a difficulty
	b locked
	a ()Z isLocked
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	c ()Lnet/minecraft/world/EnumDifficulty; getDifficulty
net/minecraft/network/protocol/game/PacketPlayOutSetCooldown net/minecraft/network/protocol/game/ClientboundCooldownPacket
	a item
	b duration
	a ()Lnet/minecraft/world/item/Item; getItem
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	c ()I getDuration
net/minecraft/network/protocol/game/PacketPlayOutSetSlot net/minecraft/network/protocol/game/ClientboundContainerSetSlotPacket
	a CARRIED_ITEM
	b PLAYER_INVENTORY
	c containerId
	d stateId
	e slot
	f itemStack
	a ()I getContainerId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	c ()I getSlot
	d ()Lnet/minecraft/world/item/ItemStack; getItem
	e ()I getStateId
net/minecraft/network/protocol/game/PacketPlayOutSpawnEntity net/minecraft/network/protocol/game/ClientboundAddEntityPacket
	a MAGICAL_QUANTIZATION
	b LIMIT
	c id
	d uuid
	e type
	f x
	g y
	h z
	i xa
	j ya
	k za
	l xRot
	m yRot
	n yHeadRot
	o data
	a ()I getId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	c ()Ljava/util/UUID; getUUID
	d ()Lnet/minecraft/world/entity/EntityTypes; getType
	e ()D getX
	f ()D getY
	g ()D getZ
	h ()D getXa
	i ()D getYa
	j ()D getZa
	k ()F getXRot
	l ()F getYRot
	m ()F getYHeadRot
	n ()I getData
net/minecraft/network/protocol/game/PacketPlayOutSpawnEntityExperienceOrb net/minecraft/network/protocol/game/ClientboundAddExperienceOrbPacket
	a id
	b x
	c y
	d z
	e value
	a ()I getId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	c ()D getX
	d ()D getY
	e ()D getZ
	f ()I getValue
net/minecraft/network/protocol/game/PacketPlayOutSpawnPosition net/minecraft/network/protocol/game/ClientboundSetDefaultSpawnPositionPacket
	a pos
	b angle
	a ()Lnet/minecraft/core/BlockPosition; getPos
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	c ()F getAngle
net/minecraft/network/protocol/game/PacketPlayOutStatistic net/minecraft/network/protocol/game/ClientboundAwardStatsPacket
	a stats
	a ()Ljava/util/Map; getStats
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/stats/Statistic;)V writeStatCap
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/stats/StatisticWrapper;)Lnet/minecraft/stats/Statistic; readStatCap
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
net/minecraft/network/protocol/game/PacketPlayOutStopSound net/minecraft/network/protocol/game/ClientboundStopSoundPacket
	a HAS_SOURCE
	b HAS_SOUND
	c name
	d source
	a ()Lnet/minecraft/resources/MinecraftKey; getName
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	c ()Lnet/minecraft/sounds/SoundCategory; getSource
net/minecraft/network/protocol/game/PacketPlayOutTabComplete net/minecraft/network/protocol/game/ClientboundCommandSuggestionsPacket
	a id
	b suggestions
	a ()I getId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	c ()Lcom/mojang/brigadier/suggestion/Suggestions; getSuggestions
net/minecraft/network/protocol/game/PacketPlayOutTags net/minecraft/network/protocol/game/ClientboundUpdateTagsPacket
	a tags
	a ()Ljava/util/Map; getTags
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
net/minecraft/network/protocol/game/PacketPlayOutTileEntityData net/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket
	a pos
	b type
	c tag
	a ()Lnet/minecraft/core/BlockPosition; getPos
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	a (Lnet/minecraft/world/level/block/entity/TileEntity;)Lnet/minecraft/network/protocol/game/PacketPlayOutTileEntityData; create
	a (Lnet/minecraft/world/level/block/entity/TileEntity;Ljava/util/function/Function;)Lnet/minecraft/network/protocol/game/PacketPlayOutTileEntityData; create
	c ()Lnet/minecraft/world/level/block/entity/TileEntityTypes; getType
	d ()Lnet/minecraft/nbt/NBTTagCompound; getTag
net/minecraft/network/protocol/game/PacketPlayOutUnloadChunk net/minecraft/network/protocol/game/ClientboundForgetLevelChunkPacket
	a x
	b z
	a ()I getX
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	c ()I getZ
net/minecraft/network/protocol/game/PacketPlayOutUpdateAttributes net/minecraft/network/protocol/game/ClientboundUpdateAttributesPacket
	a entityId
	b attributes
	a ()I getEntityId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	c ()Ljava/util/List; getValues
net/minecraft/network/protocol/game/PacketPlayOutUpdateAttributes$AttributeSnapshot net/minecraft/network/protocol/game/ClientboundUpdateAttributesPacket$AttributeSnapshot
	a attribute
	b base
	c modifiers
	a ()Lnet/minecraft/world/entity/ai/attributes/AttributeBase; getAttribute
	b ()D getBase
	c ()Ljava/util/Collection; getModifiers
net/minecraft/network/protocol/game/PacketPlayOutUpdateHealth net/minecraft/network/protocol/game/ClientboundSetHealthPacket
	a health
	b food
	c saturation
	a ()F getHealth
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	c ()I getFood
	d ()F getSaturation
net/minecraft/network/protocol/game/PacketPlayOutUpdateTime net/minecraft/network/protocol/game/ClientboundSetTimePacket
	a gameTime
	b dayTime
	a ()J getGameTime
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	c ()J getDayTime
net/minecraft/network/protocol/game/PacketPlayOutVehicleMove net/minecraft/network/protocol/game/ClientboundMoveVehiclePacket
	a x
	b y
	c z
	d yRot
	e xRot
	a ()D getX
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	c ()D getY
	d ()D getZ
	e ()F getYRot
	f ()F getXRot
net/minecraft/network/protocol/game/PacketPlayOutViewCentre net/minecraft/network/protocol/game/ClientboundSetChunkCacheCenterPacket
	a x
	b z
	a ()I getX
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	c ()I getZ
net/minecraft/network/protocol/game/PacketPlayOutViewDistance net/minecraft/network/protocol/game/ClientboundSetChunkCacheRadiusPacket
	a radius
	a ()I getRadius
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
net/minecraft/network/protocol/game/PacketPlayOutWindowData net/minecraft/network/protocol/game/ClientboundContainerSetDataPacket
	a containerId
	b id
	c value
	a ()I getContainerId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	c ()I getId
	d ()I getValue
net/minecraft/network/protocol/game/PacketPlayOutWindowItems net/minecraft/network/protocol/game/ClientboundContainerSetContentPacket
	a containerId
	b stateId
	c items
	d carriedItem
	a ()I getContainerId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	c ()Ljava/util/List; getItems
	d ()Lnet/minecraft/world/item/ItemStack; getCarriedItem
	e ()I getStateId
net/minecraft/network/protocol/game/PacketPlayOutWorldEvent net/minecraft/network/protocol/game/ClientboundLevelEventPacket
	a type
	b pos
	c data
	d globalEvent
	a ()Z isGlobalEvent
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	c ()I getType
	d ()I getData
	e ()Lnet/minecraft/core/BlockPosition; getPos
net/minecraft/network/protocol/game/PacketPlayOutWorldParticles net/minecraft/network/protocol/game/ClientboundLevelParticlesPacket
	a x
	b y
	c z
	d xDist
	e yDist
	f zDist
	g maxSpeed
	h count
	i overrideLimiter
	j particle
	a ()Z isOverrideLimiter
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/core/particles/Particle;)Lnet/minecraft/core/particles/ParticleParam; readParticle
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	c ()D getX
	d ()D getY
	e ()D getZ
	f ()F getXDist
	g ()F getYDist
	h ()F getZDist
	i ()F getMaxSpeed
	j ()I getCount
	k ()Lnet/minecraft/core/particles/ParticleParam; getParticle
net/minecraft/network/protocol/handshake/PacketHandshakingInListener net/minecraft/network/protocol/handshake/ServerHandshakePacketListener
	a (Lnet/minecraft/network/protocol/handshake/PacketHandshakingInSetProtocol;)V handleIntention
net/minecraft/network/protocol/handshake/PacketHandshakingInSetProtocol net/minecraft/network/protocol/handshake/ClientIntentionPacket
	a MAX_HOST_LENGTH
	b protocolVersion
	c hostName
	d port
	e intention
	a ()Lnet/minecraft/network/EnumProtocol; getIntention
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/handshake/PacketHandshakingInListener;)V handle
	c ()I getProtocolVersion
	d ()Ljava/lang/String; getHostName
	e ()I getPort
net/minecraft/network/protocol/login/PacketLoginInCustomPayload net/minecraft/network/protocol/login/ServerboundCustomQueryPacket
	a MAX_PAYLOAD_SIZE
	b transactionId
	c data
	a ()I getTransactionId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/login/PacketLoginInListener;)V handle
	c ()Lnet/minecraft/network/PacketDataSerializer; getData
net/minecraft/network/protocol/login/PacketLoginInEncryptionBegin net/minecraft/network/protocol/login/ServerboundKeyPacket
	a keybytes
	b encryptedChallenge
	a (Ljava/security/PrivateKey;)Ljavax/crypto/SecretKey; getSecretKey
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/login/PacketLoginInListener;)V handle
	a ([BLjava/security/PrivateKey;)Z isChallengeValid
net/minecraft/network/protocol/login/PacketLoginInListener net/minecraft/network/protocol/login/ServerLoginPacketListener
	a (Lnet/minecraft/network/protocol/login/PacketLoginInCustomPayload;)V handleCustomQueryPacket
	a (Lnet/minecraft/network/protocol/login/PacketLoginInEncryptionBegin;)V handleKey
	a (Lnet/minecraft/network/protocol/login/PacketLoginInStart;)V handleHello
net/minecraft/network/protocol/login/PacketLoginInStart net/minecraft/network/protocol/login/ServerboundHelloPacket
	a name
	b profileId
	a ()Ljava/lang/String; name
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/login/PacketLoginInListener;)V handle
	c ()Ljava/util/Optional; profileId
net/minecraft/network/protocol/login/PacketLoginOutCustomPayload net/minecraft/network/protocol/login/ClientboundCustomQueryPacket
	a MAX_PAYLOAD_SIZE
	b transactionId
	c identifier
	d data
	a ()I getTransactionId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/login/PacketLoginOutListener;)V handle
	c ()Lnet/minecraft/resources/MinecraftKey; getIdentifier
	d ()Lnet/minecraft/network/PacketDataSerializer; getData
net/minecraft/network/protocol/login/PacketLoginOutDisconnect net/minecraft/network/protocol/login/ClientboundLoginDisconnectPacket
	a reason
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getReason
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/login/PacketLoginOutListener;)V handle
net/minecraft/network/protocol/login/PacketLoginOutEncryptionBegin net/minecraft/network/protocol/login/ClientboundHelloPacket
	a serverId
	b publicKey
	c challenge
	a ()Ljava/lang/String; getServerId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/login/PacketLoginOutListener;)V handle
	c ()Ljava/security/PublicKey; getPublicKey
	d ()[B getChallenge
net/minecraft/network/protocol/login/PacketLoginOutListener net/minecraft/network/protocol/login/ClientLoginPacketListener
	a (Lnet/minecraft/network/protocol/login/PacketLoginOutCustomPayload;)V handleCustomQuery
	a (Lnet/minecraft/network/protocol/login/PacketLoginOutDisconnect;)V handleDisconnect
	a (Lnet/minecraft/network/protocol/login/PacketLoginOutEncryptionBegin;)V handleHello
	a (Lnet/minecraft/network/protocol/login/PacketLoginOutSetCompression;)V handleCompression
	a (Lnet/minecraft/network/protocol/login/PacketLoginOutSuccess;)V handleGameProfile
net/minecraft/network/protocol/login/PacketLoginOutSetCompression net/minecraft/network/protocol/login/ClientboundLoginCompressionPacket
	a compressionThreshold
	a ()I getCompressionThreshold
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/login/PacketLoginOutListener;)V handle
net/minecraft/network/protocol/login/PacketLoginOutSuccess net/minecraft/network/protocol/login/ClientboundGameProfilePacket
	a gameProfile
	a ()Lcom/mojang/authlib/GameProfile; getGameProfile
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/login/PacketLoginOutListener;)V handle
net/minecraft/network/protocol/status/PacketStatusInListener net/minecraft/network/protocol/status/ServerStatusPacketListener
	a (Lnet/minecraft/network/protocol/status/PacketStatusInPing;)V handlePingRequest
	a (Lnet/minecraft/network/protocol/status/PacketStatusInStart;)V handleStatusRequest
net/minecraft/network/protocol/status/PacketStatusInPing net/minecraft/network/protocol/status/ServerboundPingRequestPacket
	a time
	a ()J getTime
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/status/PacketStatusInListener;)V handle
net/minecraft/network/protocol/status/PacketStatusInStart net/minecraft/network/protocol/status/ServerboundStatusRequestPacket
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/status/PacketStatusInListener;)V handle
net/minecraft/network/protocol/status/PacketStatusOutListener net/minecraft/network/protocol/status/ClientStatusPacketListener
	a (Lnet/minecraft/network/protocol/status/PacketStatusOutPong;)V handlePongResponse
	a (Lnet/minecraft/network/protocol/status/PacketStatusOutServerInfo;)V handleStatusResponse
net/minecraft/network/protocol/status/PacketStatusOutPong net/minecraft/network/protocol/status/ClientboundPongResponsePacket
	a time
	a ()J getTime
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/status/PacketStatusOutListener;)V handle
net/minecraft/network/protocol/status/PacketStatusOutServerInfo net/minecraft/network/protocol/status/ClientboundStatusResponsePacket
	a status
	a ()Lnet/minecraft/network/protocol/status/ServerPing; status
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/status/PacketStatusOutListener;)V handle
net/minecraft/network/protocol/status/ServerPing net/minecraft/network/protocol/status/ServerStatus
	a CODEC
	b description
	c players
	d version
	e favicon
	f enforcesSecureChat
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; description
	b ()Ljava/util/Optional; players
	c ()Ljava/util/Optional; version
	d ()Ljava/util/Optional; favicon
	e ()Z enforcesSecureChat
net/minecraft/network/protocol/status/ServerPing$ServerData net/minecraft/network/protocol/status/ServerStatus$Version
	a CODEC
	b name
	c protocol
	a ()Lnet/minecraft/network/protocol/status/ServerPing$ServerData; current
	b ()Ljava/lang/String; name
	c ()I protocol
net/minecraft/network/protocol/status/ServerPing$ServerPingPlayerSample net/minecraft/network/protocol/status/ServerStatus$Players
	a CODEC
	b max
	c online
	d sample
	e PROFILE_CODEC
	a ()I max
	b ()I online
	c ()Ljava/util/List; sample
net/minecraft/network/syncher/DataWatcher net/minecraft/network/syncher/SynchedEntityData
	a LOGGER
	b ENTITY_ID_POOL
	c MAX_ID_VALUE
	d entity
	e itemsById
	f lock
	g isDirty
	a ()Z isDirty
	a (Ljava/lang/Class;Lnet/minecraft/network/syncher/DataWatcherSerializer;)Lnet/minecraft/network/syncher/DataWatcherObject; defineId
	a (Ljava/util/List;)V assignValues
	a (Lnet/minecraft/network/syncher/DataWatcher$Item;Laco$b;)V assignValue
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)Ljava/lang/Object; get
	a (Lnet/minecraft/network/syncher/DataWatcherObject;Ljava/lang/Object;)V define
	a (Lnet/minecraft/network/syncher/DataWatcherObject;Ljava/lang/Object;Z)V set
	b ()Ljava/util/List; packDirty
	b (Lnet/minecraft/network/syncher/DataWatcherObject;)Lnet/minecraft/network/syncher/DataWatcher$Item; getItem
	b (Lnet/minecraft/network/syncher/DataWatcherObject;Ljava/lang/Object;)V set
	c ()Ljava/util/List; getNonDefaultValues
	c (Lnet/minecraft/network/syncher/DataWatcherObject;Ljava/lang/Object;)V createDataItem
	d ()Z isEmpty
net/minecraft/network/syncher/DataWatcher$Item net/minecraft/network/syncher/SynchedEntityData$DataItem
	a accessor
	b value
	c initialValue
	d dirty
	a ()Lnet/minecraft/network/syncher/DataWatcherObject; getAccessor
	a (Ljava/lang/Object;)V setValue
	a (Z)V setDirty
	b ()Ljava/lang/Object; getValue
	c ()Z isDirty
	d ()Z isSetToDefault
	e ()Laco$b; value
net/minecraft/network/syncher/DataWatcherObject net/minecraft/network/syncher/EntityDataAccessor
	a id
	b serializer
	a ()I getId
	b ()Lnet/minecraft/network/syncher/DataWatcherSerializer; getSerializer
net/minecraft/network/syncher/DataWatcherRegistry net/minecraft/network/syncher/EntityDataSerializers
	A VECTOR3
	B QUATERNION
	C SERIALIZERS
	a BYTE
	b INT
	c LONG
	d FLOAT
	e STRING
	f COMPONENT
	g OPTIONAL_COMPONENT
	h ITEM_STACK
	i BLOCK_STATE
	j OPTIONAL_BLOCK_STATE
	k BOOLEAN
	l PARTICLE
	m ROTATIONS
	n BLOCK_POS
	o OPTIONAL_BLOCK_POS
	p DIRECTION
	q OPTIONAL_UUID
	r OPTIONAL_GLOBAL_POS
	s COMPOUND_TAG
	t VILLAGER_DATA
	u OPTIONAL_UNSIGNED_INT
	v POSE
	w CAT_VARIANT
	x FROG_VARIANT
	y PAINTING_VARIANT
	z SNIFFER_STATE
	a (I)Lnet/minecraft/network/syncher/DataWatcherSerializer; getSerializer
	a (Lnet/minecraft/network/syncher/DataWatcherSerializer;)V registerSerializer
	b (Lnet/minecraft/network/syncher/DataWatcherSerializer;)I getSerializedId
net/minecraft/network/syncher/DataWatcherSerializer net/minecraft/network/syncher/EntityDataSerializer
	a (I)Lnet/minecraft/network/syncher/DataWatcherObject; createAccessor
	a (Ljava/lang/Class;)Lnet/minecraft/network/syncher/DataWatcherSerializer; simpleEnum
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Lnet/minecraft/core/Registry;)Lnet/minecraft/network/syncher/DataWatcherSerializer; simpleId
	a (Lnet/minecraft/network/PacketDataSerializer;)Ljava/lang/Object; read
	a (Lnet/minecraft/network/PacketDataSerializer;Ljava/lang/Object;)V write
	a (Lss$b;Lss$a;)Lnet/minecraft/network/syncher/DataWatcherSerializer; simple
	b (Lss$b;Lss$a;)Lnet/minecraft/network/syncher/DataWatcherSerializer; optional
net/minecraft/recipebook/AutoRecipe net/minecraft/recipebook/ServerPlaceRecipe
	a stackedContents
	b inventory
	c menu
	d LOGGER
	a ()V clearGrid
	a (Ljava/util/Iterator;IIII)V addItemToSlot
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/item/crafting/IRecipe;Z)V recipeClicked
	a (Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/item/ItemStack;)V moveItemToGrid
	a (Lnet/minecraft/world/item/crafting/IRecipe;Z)V handleRecipeClicked
	a (ZIZ)I getStackSize
	b ()Z testClearGrid
	c ()I getAmountOfFreeSlotsInInventory
net/minecraft/recipebook/AutoRecipeAbstract net/minecraft/recipebook/PlaceRecipe
	a (IIILnet/minecraft/world/item/crafting/IRecipe;Ljava/util/Iterator;I)V placeRecipe
	a (Ljava/util/Iterator;IIII)V addItemToSlot
net/minecraft/resources/DynamicOpsWrapper net/minecraft/resources/DelegatingOps
	a delegate
net/minecraft/resources/MinecraftKey net/minecraft/resources/ResourceLocation
	a CODEC
	b NAMESPACE_SEPARATOR
	c DEFAULT_NAMESPACE
	d REALMS_NAMESPACE
	e ERROR_INVALID
	f namespace
	g path
	a ()Ljava/lang/String; getPath
	a (C)Z isAllowedInResourceLocation
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/resources/MinecraftKey; read
	a (Ljava/lang/String;)Lnet/minecraft/resources/MinecraftKey; tryParse
	a (Ljava/lang/String;C)Lnet/minecraft/resources/MinecraftKey; of
	a (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/resources/MinecraftKey; tryBuild
	a (Ljava/util/function/UnaryOperator;)Lnet/minecraft/resources/MinecraftKey; withPath
	a (Lnet/minecraft/resources/MinecraftKey;)I compareTo
	b ()Ljava/lang/String; getNamespace
	b (C)Z validPathChar
	b (Ljava/lang/String;)Lcom/mojang/serialization/DataResult; read
	b (Ljava/lang/String;C)[Ljava/lang/String; decompose
	b (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; toLanguageKey
	c ()Ljava/lang/String; toDebugFileName
	c (C)Z validNamespaceChar
	c (Ljava/lang/String;)Lnet/minecraft/resources/MinecraftKey; withPath
	c (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; assertValidNamespace
	d ()Ljava/lang/String; toLanguageKey
	d (Ljava/lang/String;)Lnet/minecraft/resources/MinecraftKey; withPrefix
	d (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; assertValidPath
	e ()Ljava/lang/String; toShortLanguageKey
	e (Ljava/lang/String;)Lnet/minecraft/resources/MinecraftKey; withSuffix
	f (Ljava/lang/String;)Ljava/lang/String; toLanguageKey
	g (Ljava/lang/String;)Z isValidResourceLocation
	h (Ljava/lang/String;)Z isValidPath
	i (Ljava/lang/String;)Z isValidNamespace
net/minecraft/server/AdvancementDataPlayer net/minecraft/server/PlayerAdvancements
	a LOGGER
	b GSON
	c TYPE_TOKEN
	d dataFixer
	e playerList
	f playerSavePath
	g progress
	h visible
	i progressChanged
	j rootsToUpdate
	k player
	l lastSelectedTab
	m isFirstPacket
	a ()V stopListening
	a (Lnet/minecraft/advancements/Advancement;)V setSelectedTab
	a (Lnet/minecraft/advancements/Advancement;Ljava/lang/String;)Z award
	a (Lnet/minecraft/advancements/Advancement;Ljava/util/Set;Ljava/util/Set;)V updateTreeVisibility
	a (Lnet/minecraft/advancements/Advancement;Lnet/minecraft/advancements/AdvancementProgress;)V startProgress
	a (Lnet/minecraft/server/AdvancementDataWorld;)V reload
	a (Lnet/minecraft/server/level/EntityPlayer;)V setPlayer
	b ()V save
	b (Lnet/minecraft/advancements/Advancement;)Lnet/minecraft/advancements/AdvancementProgress; getOrStartProgress
	b (Lnet/minecraft/advancements/Advancement;Ljava/lang/String;)Z revoke
	b (Lnet/minecraft/server/AdvancementDataWorld;)V registerListeners
	b (Lnet/minecraft/server/level/EntityPlayer;)V flushDirty
	c (Lnet/minecraft/advancements/Advancement;)V markForVisibilityUpdate
	c (Lnet/minecraft/server/AdvancementDataWorld;)V checkForAutomaticTriggers
	d (Lnet/minecraft/advancements/Advancement;)V registerListeners
	d (Lnet/minecraft/server/AdvancementDataWorld;)V load
	e (Lnet/minecraft/advancements/Advancement;)V unregisterListeners
net/minecraft/server/AdvancementDataWorld net/minecraft/server/ServerAdvancementManager
	a LOGGER
	b GSON
	c advancements
	d predicateManager
	a ()Ljava/util/Collection; getAllAdvancements
	a (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)V apply
	a (Ljava/util/Map;Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)V apply
	a (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/advancements/Advancement; getAdvancement
net/minecraft/server/CancelledPacketHandleException net/minecraft/server/RunningOnDifferentThreadException
	a RUNNING_ON_DIFFERENT_THREAD
net/minecraft/server/CustomFunctionData net/minecraft/server/ServerFunctionManager
	a NO_RECURSIVE_TRACES
	b TICK_FUNCTION_TAG
	c LOAD_FUNCTION_TAG
	d server
	e context
	f ticking
	g postReload
	h library
	a ()I getCommandLimit
	a (Ljava/util/Collection;Lnet/minecraft/resources/MinecraftKey;)V executeTagFunctions
	a (Lnet/minecraft/commands/CustomFunction;Lnet/minecraft/commands/CommandListenerWrapper;)I execute
	a (Lnet/minecraft/commands/CustomFunction;Lnet/minecraft/commands/CommandListenerWrapper;Ladr$c;)I execute
	a (Lnet/minecraft/resources/MinecraftKey;)Ljava/util/Optional; get
	a (Lnet/minecraft/server/CustomFunctionManager;)V replaceLibrary
	b ()Lcom/mojang/brigadier/CommandDispatcher; getDispatcher
	b (Lnet/minecraft/resources/MinecraftKey;)Ljava/util/Collection; getTag
	b (Lnet/minecraft/server/CustomFunctionManager;)V postReload
	c ()V tick
	d ()Lnet/minecraft/commands/CommandListenerWrapper; getGameLoopSender
	e ()Ljava/lang/Iterable; getFunctionNames
	f ()Ljava/lang/Iterable; getTagNames
net/minecraft/server/CustomFunctionManager net/minecraft/server/ServerFunctionLibrary
	a LOGGER
	b LISTER
	c functions
	d tagsLoader
	e tags
	f functionCompilationLevel
	g dispatcher
	a ()Ljava/util/Map; getFunctions
	a (Lalb$a;Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;Lnet/minecraft/util/profiling/GameProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; reload
	a (Lnet/minecraft/resources/MinecraftKey;)Ljava/util/Optional; getFunction
	a (Lnet/minecraft/server/packs/resources/IResource;)Ljava/util/List; readLines
	b ()Ljava/lang/Iterable; getAvailableTags
	b (Lnet/minecraft/resources/MinecraftKey;)Ljava/util/Collection; getTag
net/minecraft/server/DataPackResources net/minecraft/server/ReloadableServerResources
	a LOGGER
	b DATA_RELOAD_INITIAL_TASK
	c commandBuildContext
	d commands
	e recipes
	f tagManager
	g predicateManager
	h lootTables
	i itemModifierManager
	j advancements
	k functionLibrary
	a ()Lnet/minecraft/server/CustomFunctionManager; getFunctionLibrary
	a (Lnet/minecraft/core/IRegistryCustom;)V updateRegistryTags
	a (Lnet/minecraft/core/IRegistryCustom;Lanx$a;)V updateRegistryTags
	a (Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/core/IRegistryCustom$Dimension;Lnet/minecraft/world/flag/FeatureFlagSet;Lnet/minecraft/commands/CommandDispatcher$ServerType;ILjava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; loadResources
	b ()Lnet/minecraft/world/level/storage/loot/LootPredicateManager; getPredicateManager
	c ()Lnet/minecraft/world/level/storage/loot/LootTableRegistry; getLootTables
	d ()Lnet/minecraft/world/level/storage/loot/ItemModifierManager; getItemModifierManager
	e ()Lnet/minecraft/world/item/crafting/CraftingManager; getRecipeManager
	f ()Lnet/minecraft/commands/CommandDispatcher; getCommands
	g ()Lnet/minecraft/server/AdvancementDataWorld; getAdvancements
	h ()Ljava/util/List; listeners
net/minecraft/server/DebugOutputStream net/minecraft/server/DebugLoggedPrintStream
	b LOGGER
	a (Ljava/lang/String;)V logLine
net/minecraft/server/DispenserRegistry net/minecraft/server/Bootstrap
	a STDOUT
	b isBootstrapped
	c LOGGER
	a ()V bootStrap
	a (Ljava/lang/Iterable;Ljava/util/function/Function;Ljava/util/Set;)V checkTranslations
	a (Ljava/lang/String;)V realStdoutPrintln
	a (Ljava/util/Set;)V checkGameruleTranslations
	a (Ljava/util/function/Supplier;)V checkBootstrapCalled
	b ()Ljava/util/Set; getMissingTranslations
	b (Ljava/util/function/Supplier;)Ljava/lang/RuntimeException; createBootstrapException
	c ()V validate
	d ()V wrapStreams
net/minecraft/server/EULA net/minecraft/server/Eula
	a LOGGER
	b file
	c agreed
	a ()Z hasAgreedToEULA
	b ()Z readFile
	c ()V saveDefaults
net/minecraft/server/IMinecraftServer net/minecraft/server/ServerInterface
	G ()Ljava/lang/String; getServerVersion
	H ()I getPlayerCount
	I ()I getMaxPlayers
	J ()[Ljava/lang/String; getPlayerNames
	a ()Lnet/minecraft/server/dedicated/DedicatedServerProperties; getProperties
	a (Ljava/lang/String;)Ljava/lang/String; runCommand
	b ()Ljava/lang/String; getServerIp
	d ()I getServerPort
	f ()Ljava/lang/String; getServerName
	q ()Ljava/lang/String; getLevelIdName
	s ()Ljava/lang/String; getPluginNames
net/minecraft/server/RedirectStream net/minecraft/server/LoggedPrintStream
	a name
	b LOGGER
	a (Ljava/lang/String;)V logLine
net/minecraft/server/ScoreboardServer net/minecraft/server/ServerScoreboard
	g server
	h trackedObjectives
	i dirtyListeners
	a ()V setDirty
	a (ILnet/minecraft/world/scores/ScoreboardObjective;)V setDisplayObjective
	a (Ljava/lang/Runnable;)V addDirtyListener
	a (Ljava/lang/String;)V onPlayerRemoved
	a (Ljava/lang/String;Lnet/minecraft/world/scores/ScoreboardObjective;)V onPlayerScoreRemoved
	a (Ljava/lang/String;Lnet/minecraft/world/scores/ScoreboardTeam;)Z addPlayerToTeam
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/scores/PersistentScoreboard; createData
	a (Lnet/minecraft/world/scores/ScoreboardObjective;)V onObjectiveAdded
	a (Lnet/minecraft/world/scores/ScoreboardScore;)V onScoreChanged
	a (Lnet/minecraft/world/scores/ScoreboardTeam;)V onTeamAdded
	b ()Lnet/minecraft/world/scores/PersistentScoreboard; createData
	b (Ljava/lang/String;Lnet/minecraft/world/scores/ScoreboardTeam;)V removePlayerFromTeam
	b (Lnet/minecraft/world/scores/ScoreboardObjective;)V onObjectiveChanged
	b (Lnet/minecraft/world/scores/ScoreboardTeam;)V onTeamChanged
	c (Lnet/minecraft/world/scores/ScoreboardObjective;)V onObjectiveRemoved
	c (Lnet/minecraft/world/scores/ScoreboardTeam;)V onTeamRemoved
	d (Lnet/minecraft/world/scores/ScoreboardObjective;)Ljava/util/List; getStartTrackingPackets
	e (Lnet/minecraft/world/scores/ScoreboardObjective;)V startTrackingObjective
	f (Lnet/minecraft/world/scores/ScoreboardObjective;)Ljava/util/List; getStopTrackingPackets
	g (Lnet/minecraft/world/scores/ScoreboardObjective;)V stopTrackingObjective
	h (Lnet/minecraft/world/scores/ScoreboardObjective;)I getObjectiveDisplaySlotCount
net/minecraft/server/ScoreboardServer$Action net/minecraft/server/ServerScoreboard$Method
	a CHANGE
	b REMOVE
	c $VALUES
	a ()[Lnet/minecraft/server/ScoreboardServer$Action; $values
net/minecraft/server/ServerCommand net/minecraft/server/ConsoleInput
	a msg
	b source
net/minecraft/server/bossevents/BossBattleCustom net/minecraft/server/bossevents/CustomBossEvent
	h id
	i players
	j value
	k max
	a ()Lnet/minecraft/resources/MinecraftKey; getTextId
	a (I)V setValue
	a (Ljava/util/Collection;)Z setPlayers
	a (Ljava/util/UUID;)V addOfflinePlayer
	a (Lnet/minecraft/nbt/NBTTagCompound;Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/server/bossevents/BossBattleCustom; load
	a (Lnet/minecraft/server/level/EntityPlayer;)V addPlayer
	b ()V removeAllPlayers
	b (I)V setMax
	b (Lnet/minecraft/server/level/EntityPlayer;)V removePlayer
	c ()I getValue
	c (Lnet/minecraft/server/level/EntityPlayer;)V onPlayerConnect
	d ()I getMax
	d (Lnet/minecraft/server/level/EntityPlayer;)V onPlayerDisconnect
	e ()Lnet/minecraft/network/chat/IChatBaseComponent; getDisplayName
	f ()Lnet/minecraft/nbt/NBTTagCompound; save
net/minecraft/server/bossevents/BossBattleCustomData net/minecraft/server/bossevents/CustomBossEvents
	a events
	a ()Ljava/util/Collection; getIds
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/server/bossevents/BossBattleCustom; get
	a (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/network/chat/IChatBaseComponent;)Lnet/minecraft/server/bossevents/BossBattleCustom; create
	a (Lnet/minecraft/server/bossevents/BossBattleCustom;)V remove
	a (Lnet/minecraft/server/level/EntityPlayer;)V onPlayerConnect
	b ()Ljava/util/Collection; getEvents
	b (Lnet/minecraft/server/level/EntityPlayer;)V onPlayerDisconnect
	c ()Lnet/minecraft/nbt/NBTTagCompound; save
net/minecraft/server/commands/CommandAdvancement net/minecraft/server/commands/AdvancementCommands
	a SUGGEST_ADVANCEMENTS
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/advancements/Advancement;Ljava/util/List;)V addChildren
	a (Lnet/minecraft/advancements/Advancement;Lnet/minecraft/server/commands/CommandAdvancement$Filter;)Ljava/util/List; getAdvancements
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/commands/CommandAdvancement$Action;Ljava/util/Collection;)I perform
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/commands/CommandAdvancement$Action;Lnet/minecraft/advancements/Advancement;Ljava/lang/String;)I performCriterion
net/minecraft/server/commands/CommandAdvancement$Action net/minecraft/server/commands/AdvancementCommands$Action
	a GRANT
	b REVOKE
	c key
	d $VALUES
	a ()Ljava/lang/String; getKey
	a (Lnet/minecraft/server/level/EntityPlayer;Ljava/lang/Iterable;)I perform
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/advancements/Advancement;)Z perform
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/advancements/Advancement;Ljava/lang/String;)Z performCriterion
	b ()[Lnet/minecraft/server/commands/CommandAdvancement$Action; $values
net/minecraft/server/commands/CommandAdvancement$Filter net/minecraft/server/commands/AdvancementCommands$Mode
	a ONLY
	b THROUGH
	c FROM
	d UNTIL
	e EVERYTHING
	f parents
	g children
	h $VALUES
	a ()[Lnet/minecraft/server/commands/CommandAdvancement$Filter; $values
net/minecraft/server/commands/CommandAttribute net/minecraft/server/commands/AttributeCommand
	a ERROR_NOT_LIVING_ENTITY
	b ERROR_NO_SUCH_ATTRIBUTE
	c ERROR_NO_SUCH_MODIFIER
	d ERROR_MODIFIER_ALREADY_PRESENT
	a (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Holder;D)I getAttributeValue
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Holder;Ljava/util/UUID;)I removeModifier
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Holder;Ljava/util/UUID;D)I getAttributeModifier
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Holder;Ljava/util/UUID;Ljava/lang/String;DLnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation;)I addModifier
	a (Lnet/minecraft/core/Holder;)Lnet/minecraft/network/chat/IChatBaseComponent; getAttributeDescription
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/entity/EntityLiving; getLivingEntity
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Holder;)Lnet/minecraft/world/entity/ai/attributes/AttributeModifiable; getAttributeInstance
	b (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Holder;D)I getAttributeBase
	b (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Holder;)Lnet/minecraft/world/entity/EntityLiving; getEntityWithAttribute
	c (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Holder;D)I setAttributeBase
net/minecraft/server/commands/CommandBan net/minecraft/server/commands/BanPlayerCommands
	a ERROR_ALREADY_BANNED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/network/chat/IChatBaseComponent;)I banPlayers
net/minecraft/server/commands/CommandBanIp net/minecraft/server/commands/BanIpCommands
	a ERROR_INVALID_IP
	b ERROR_ALREADY_BANNED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/lang/String;Lnet/minecraft/network/chat/IChatBaseComponent;)I banIpOrName
	b (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/lang/String;Lnet/minecraft/network/chat/IChatBaseComponent;)I banIp
net/minecraft/server/commands/CommandBanList net/minecraft/server/commands/BanListCommands
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;)I showList
net/minecraft/server/commands/CommandBossBar net/minecraft/server/commands/BossBarCommands
	a SUGGEST_BOSS_BAR
	b ERROR_ALREADY_EXISTS
	c ERROR_DOESNT_EXIST
	d ERROR_NO_PLAYER_CHANGE
	e ERROR_NO_NAME_CHANGE
	f ERROR_NO_COLOR_CHANGE
	g ERROR_NO_STYLE_CHANGE
	h ERROR_NO_VALUE_CHANGE
	i ERROR_NO_MAX_CHANGE
	j ERROR_ALREADY_HIDDEN
	k ERROR_ALREADY_VISIBLE
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/server/bossevents/BossBattleCustom; getBossBar
	a (Lnet/minecraft/commands/CommandListenerWrapper;)I listBars
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/network/chat/IChatBaseComponent;)I createBar
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/server/bossevents/BossBattleCustom;)I getValue
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/server/bossevents/BossBattleCustom;I)I setValue
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/server/bossevents/BossBattleCustom;Ljava/util/Collection;)I setPlayers
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/server/bossevents/BossBattleCustom;Lnet/minecraft/network/chat/IChatBaseComponent;)I setName
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/server/bossevents/BossBattleCustom;Lnet/minecraft/world/BossBattle$BarColor;)I setColor
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/server/bossevents/BossBattleCustom;Lnet/minecraft/world/BossBattle$BarStyle;)I setStyle
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/server/bossevents/BossBattleCustom;Z)I setVisible
	b (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/server/bossevents/BossBattleCustom;)I getMax
	b (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/server/bossevents/BossBattleCustom;I)I setMax
	c (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/server/bossevents/BossBattleCustom;)I getVisible
	d (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/server/bossevents/BossBattleCustom;)I getPlayers
	e (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/server/bossevents/BossBattleCustom;)I removeBar
net/minecraft/server/commands/CommandClear net/minecraft/server/commands/ClearInventoryCommands
	a ERROR_SINGLE
	b ERROR_MULTIPLE
	a (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;Ljava/util/function/Predicate;I)I clearInventory
net/minecraft/server/commands/CommandClone net/minecraft/server/commands/CloneCommands
	a FILTER_AIR
	b ERROR_OVERLAP
	c ERROR_AREA_TOO_LARGE
	d ERROR_FAILED
	a (Laeo$b;Laeo$b;Laeo$b;Laeo$b;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder; wrapWithCloneMode
	a (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/level/WorldServer;Ljava/lang/String;)Laeo$c; getLoadedDimensionAndPosition
	a (Lnet/minecraft/commands/CommandBuildContext;Laeo$b;)Lcom/mojang/brigadier/builder/ArgumentBuilder; beginEndDestinationAndModeSuffix
	a (Lnet/minecraft/commands/CommandBuildContext;Laeo$b;Laeo$b;)Lcom/mojang/brigadier/builder/ArgumentBuilder; destinationAndModeSuffix
	a (Lnet/minecraft/commands/CommandListenerWrapper;Laeo$c;Laeo$c;Laeo$c;Ljava/util/function/Predicate;Lnet/minecraft/server/commands/CommandClone$Mode;)I clone
net/minecraft/server/commands/CommandClone$CommandCloneStoredTileEntity net/minecraft/server/commands/CloneCommands$CloneBlockInfo
	a pos
	b state
	c tag
net/minecraft/server/commands/CommandClone$Mode net/minecraft/server/commands/CloneCommands$Mode
	a FORCE
	b MOVE
	c NORMAL
	d canOverlap
	e $VALUES
	a ()Z canOverlap
	b ()[Lnet/minecraft/server/commands/CommandClone$Mode; $values
net/minecraft/server/commands/CommandDatapack net/minecraft/server/commands/DataPackCommand
	a ERROR_UNKNOWN_PACK
	b ERROR_PACK_ALREADY_ENABLED
	c ERROR_PACK_ALREADY_DISABLED
	d ERROR_PACK_FEATURES_NOT_ENABLED
	e SELECTED_PACKS
	f UNSELECTED_PACKS
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Z)Lnet/minecraft/server/packs/repository/ResourcePackLoader; getPack
	a (Lnet/minecraft/commands/CommandListenerWrapper;)I listPacks
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/server/packs/repository/ResourcePackLoader;)I disablePack
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/server/packs/repository/ResourcePackLoader;Laeq$a;)I enablePack
	b (Lnet/minecraft/commands/CommandListenerWrapper;)I listAvailablePacks
	c (Lnet/minecraft/commands/CommandListenerWrapper;)I listEnabledPacks
net/minecraft/server/commands/CommandDebug net/minecraft/server/commands/DebugCommand
	a LOGGER
	b ERROR_NOT_RUNNING
	c ERROR_ALREADY_RUNNING
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;)I start
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;)I traceFunction
	b (Lnet/minecraft/commands/CommandListenerWrapper;)I stop
net/minecraft/server/commands/CommandDeop net/minecraft/server/commands/DeOpCommands
	a ERROR_NOT_OP
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;)I deopPlayers
net/minecraft/server/commands/CommandDifficulty net/minecraft/server/commands/DifficultyCommand
	a ERROR_ALREADY_DIFFICULT
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/EnumDifficulty;)I setDifficulty
net/minecraft/server/commands/CommandEffect net/minecraft/server/commands/EffectCommands
	a ERROR_GIVE_FAILED
	b ERROR_CLEAR_EVERYTHING_FAILED
	c ERROR_CLEAR_SPECIFIC_FAILED
	a (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;)I clearEffects
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/core/Holder;)I clearEffect
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/core/Holder;Ljava/lang/Integer;IZ)I giveEffect
net/minecraft/server/commands/CommandEnchant net/minecraft/server/commands/EnchantCommand
	a ERROR_NOT_LIVING_ENTITY
	b ERROR_NO_ITEM
	c ERROR_INCOMPATIBLE
	d ERROR_LEVEL_TOO_HIGH
	e ERROR_NOTHING_HAPPENED
	a (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/core/Holder;I)I enchant
net/minecraft/server/commands/CommandExecute net/minecraft/server/commands/ExecuteCommand
	a MAX_TEST_AREA
	b ERROR_AREA_TOO_LARGE
	c ERROR_CONDITIONAL_FAILED
	d ERROR_CONDITIONAL_FAILED_COUNT
	e CALLBACK_CHAINER
	f SUGGEST_PREDICATE
	a (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/function/BiPredicate;)Z checkScore
	a (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange;)Z checkScore
	a (Lcom/mojang/brigadier/context/CommandContext;Z)I checkIfRegions
	a (Lcom/mojang/brigadier/context/CommandContext;ZZ)Ljava/util/Collection; expect
	a (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/ArgumentBuilder;ZLafa$b;)Lcom/mojang/brigadier/builder/ArgumentBuilder; addConditional
	a (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/ArgumentBuilder;ZZ)Lcom/mojang/brigadier/builder/ArgumentBuilder; addIfBlocksConditional
	a (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;)Lcom/mojang/brigadier/builder/LiteralArgumentBuilder; createRelationOperations
	a (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;ZLnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/builder/ArgumentBuilder; addConditionals
	a (Lcom/mojang/brigadier/tree/LiteralCommandNode;Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;Z)Lcom/mojang/brigadier/builder/ArgumentBuilder; wrapStores
	a (Ljava/util/function/Function;)Lcom/mojang/brigadier/RedirectModifier; expandOneToOneEntityRelation
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lhd$c;)Lnet/minecraft/commands/CommandListenerWrapper; spawnEntityAndRedirect
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/world/scores/ScoreboardObjective;Z)Lnet/minecraft/commands/CommandListenerWrapper; storeValue
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/server/bossevents/BossBattleCustom;ZZ)Lnet/minecraft/commands/CommandListenerWrapper; storeValue
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/server/commands/data/CommandDataAccessor;Leg$g;Ljava/util/function/IntFunction;Z)Lnet/minecraft/commands/CommandListenerWrapper; storeData
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Z checkCustomPredicate
	a (Lnet/minecraft/server/commands/data/CommandDataAccessor;Leg$g;)I checkMatchingData
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;)Z isChunkLoaded
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Z)Ljava/util/OptionalInt; checkRegions
	a (ZLafa$a;)Lcom/mojang/brigadier/Command; createNumericConditionalHandler
	b (Lcom/mojang/brigadier/context/CommandContext;Z)I checkUnlessRegions
	b (Ljava/util/function/Function;)Lcom/mojang/brigadier/RedirectModifier; expandOneToManyEntityRelation
	c (Lcom/mojang/brigadier/context/CommandContext;Z)Ljava/util/OptionalInt; checkRegions
net/minecraft/server/commands/CommandFill net/minecraft/server/commands/FillCommand
	a ERROR_AREA_TOO_LARGE
	b HOLLOW_CORE
	c ERROR_FAILED
	a (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/commands/arguments/blocks/ArgumentTileLocation;Lnet/minecraft/server/commands/CommandFill$Mode;Ljava/util/function/Predicate;)I fillBlocks
net/minecraft/server/commands/CommandFill$Mode net/minecraft/server/commands/FillCommand$Mode
	a REPLACE
	b OUTLINE
	c HOLLOW
	d DESTROY
	e filter
	f $VALUES
	a ()[Lnet/minecraft/server/commands/CommandFill$Mode; $values
net/minecraft/server/commands/CommandForceload net/minecraft/server/commands/ForceLoadCommand
	a MAX_CHUNK_LIMIT
	b ERROR_TOO_MANY_CHUNKS
	c ERROR_NOT_TICKING
	d ERROR_ALL_ADDED
	e ERROR_NONE_REMOVED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;)I listForceLoad
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/server/level/BlockPosition2D;)I queryForceLoad
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/server/level/BlockPosition2D;Lnet/minecraft/server/level/BlockPosition2D;Z)I changeForceLoad
	b (Lnet/minecraft/commands/CommandListenerWrapper;)I removeAll
net/minecraft/server/commands/CommandFunction net/minecraft/server/commands/FunctionCommand
	a SUGGEST_FUNCTION
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;)I runFunction
net/minecraft/server/commands/CommandGamemode net/minecraft/server/commands/GameModeCommand
	a PERMISSION_LEVEL
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/Collection;Lnet/minecraft/world/level/EnumGamemode;)I setMode
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/level/EnumGamemode;)V logGamemodeChange
net/minecraft/server/commands/CommandGamemodeDefault net/minecraft/server/commands/DefaultGameModeCommands
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/level/EnumGamemode;)I setMode
net/minecraft/server/commands/CommandGamerule net/minecraft/server/commands/GameRuleCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/world/level/GameRules$GameRuleKey;)I setRule
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/level/GameRules$GameRuleKey;)I queryRule
net/minecraft/server/commands/CommandGive net/minecraft/server/commands/GiveCommand
	a MAX_ALLOWED_ITEMSTACKS
	a (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/commands/arguments/item/ArgumentPredicateItemStack;Ljava/util/Collection;I)I giveItem
net/minecraft/server/commands/CommandHelp net/minecraft/server/commands/HelpCommand
	a ERROR_FAILED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
net/minecraft/server/commands/CommandIdleTimeout net/minecraft/server/commands/SetPlayerIdleTimeoutCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;I)I setIdleTimeout
net/minecraft/server/commands/CommandKick net/minecraft/server/commands/KickCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/network/chat/IChatBaseComponent;)I kickPlayers
net/minecraft/server/commands/CommandKill net/minecraft/server/commands/KillCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;)I kill
net/minecraft/server/commands/CommandList net/minecraft/server/commands/ListPlayersCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;)I listPlayers
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/function/Function;)I format
	b (Lnet/minecraft/commands/CommandListenerWrapper;)I listPlayersWithUuids
net/minecraft/server/commands/CommandLocate net/minecraft/server/commands/LocateCommand
	a LOGGER
	b ERROR_STRUCTURE_NOT_FOUND
	c ERROR_STRUCTURE_INVALID
	d ERROR_BIOME_NOT_FOUND
	e ERROR_POI_NOT_FOUND
	f MAX_STRUCTURE_SEARCH_RADIUS
	g MAX_BIOME_SEARCH_RADIUS
	h BIOME_SAMPLE_RESOLUTION_HORIZONTAL
	i BIOME_SAMPLE_RESOLUTION_VERTICAL
	j POI_SEARCH_RADIUS
	a (IIII)F dist
	a (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V register
	a (Lcom/mojang/datafixers/util/Pair;)Ljava/lang/String; getElementName
	a (Ler$c;Lnet/minecraft/core/IRegistry;)Ljava/util/Optional; getHolders
	a (Lnet/minecraft/commands/CommandListenerWrapper;Leq$c;)I locateBiome
	a (Lnet/minecraft/commands/CommandListenerWrapper;Leq$c;Lnet/minecraft/core/BlockPosition;Lcom/mojang/datafixers/util/Pair;Ljava/lang/String;ZLjava/time/Duration;)I showLocateResult
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ler$c;)I locateStructure
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ler$c;Lnet/minecraft/core/BlockPosition;Lcom/mojang/datafixers/util/Pair;Ljava/lang/String;ZLjava/time/Duration;)I showLocateResult
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/core/BlockPosition;Lcom/mojang/datafixers/util/Pair;Ljava/lang/String;ZLjava/lang/String;Ljava/time/Duration;)I showLocateResult
	b (Lnet/minecraft/commands/CommandListenerWrapper;Leq$c;)I locatePoi
net/minecraft/server/commands/CommandLoot net/minecraft/server/commands/LootCommand
	a SUGGEST_LOOT_TABLE
	b ERROR_NO_HELD_ITEMS
	c ERROR_NO_LOOT_TABLE
	a (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V register
	a (Lcom/mojang/brigadier/builder/ArgumentBuilder;Lafq$c;)Lcom/mojang/brigadier/builder/ArgumentBuilder; addTargets
	a (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/item/ItemStack;Lafq$b;)I dropBlockLoot
	a (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/resources/MinecraftKey;Lafq$b;)I dropChestLoot
	a (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/item/ItemStack;Lafq$b;)I dropFishingLoot
	a (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/world/level/storage/loot/LootTableInfo;Lafq$b;)I drop
	a (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/world/entity/Entity;Lafq$b;)I dropKillLoot
	a (Ljava/util/Collection;IILjava/util/List;Lafq$a;)I entityReplace
	a (Ljava/util/Collection;Ljava/util/List;Lafq$a;)I playerGive
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/List;)V callback
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/List;Lnet/minecraft/resources/MinecraftKey;)V callback
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/IInventory; getContainer
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/core/BlockPosition;IILjava/util/List;Lafq$a;)I blockReplace
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/core/BlockPosition;Ljava/util/List;Lafq$a;)I blockDistribute
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/entity/EnumItemSlot;)Lnet/minecraft/world/item/ItemStack; getSourceHandItem
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/phys/Vec3D;Ljava/util/List;Lafq$a;)I dropInWorld
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/world/item/ItemStack;)Z distributeToContainer
	a (Lnet/minecraft/world/entity/Entity;Ljava/util/List;IILjava/util/List;)V setSlots
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z canMergeItems
net/minecraft/server/commands/CommandMe net/minecraft/server/commands/EmoteCommands
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
net/minecraft/server/commands/CommandOp net/minecraft/server/commands/OpCommand
	a ERROR_ALREADY_OP
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;)I opPlayers
net/minecraft/server/commands/CommandPardon net/minecraft/server/commands/PardonCommand
	a ERROR_NOT_BANNED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;)I pardonPlayers
net/minecraft/server/commands/CommandPardonIP net/minecraft/server/commands/PardonIpCommand
	a ERROR_INVALID
	b ERROR_NOT_BANNED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/lang/String;)I unban
net/minecraft/server/commands/CommandParticle net/minecraft/server/commands/ParticleCommand
	a ERROR_FAILED
	a (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/core/particles/ParticleParam;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/phys/Vec3D;FIZLjava/util/Collection;)I sendParticles
net/minecraft/server/commands/CommandPlaySound net/minecraft/server/commands/PlaySoundCommand
	a ERROR_TOO_FAR
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/sounds/SoundCategory;Lnet/minecraft/world/phys/Vec3D;FFF)I playSound
	a (Lnet/minecraft/sounds/SoundCategory;)Lcom/mojang/brigadier/builder/LiteralArgumentBuilder; source
net/minecraft/server/commands/CommandPublish net/minecraft/server/commands/PublishCommand
	a ERROR_FAILED
	b ERROR_ALREADY_PUBLISHED
	a (I)Lnet/minecraft/network/chat/IChatMutableComponent; getSuccessMessage
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;IZLnet/minecraft/world/level/EnumGamemode;)I publish
net/minecraft/server/commands/CommandRecipe net/minecraft/server/commands/RecipeCommand
	a ERROR_GIVE_FAILED
	b ERROR_TAKE_FAILED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;Ljava/util/Collection;)I giveRecipes
	b (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;Ljava/util/Collection;)I takeRecipes
net/minecraft/server/commands/CommandReload net/minecraft/server/commands/ReloadCommand
	a LOGGER
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ljava/util/Collection;Lnet/minecraft/commands/CommandListenerWrapper;)V reloadPacks
	a (Lnet/minecraft/server/packs/repository/ResourcePackRepository;Lnet/minecraft/world/level/storage/SaveData;Ljava/util/Collection;)Ljava/util/Collection; discoverNewPacks
net/minecraft/server/commands/CommandSaveAll net/minecraft/server/commands/SaveAllCommand
	a ERROR_FAILED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Z)I saveAll
net/minecraft/server/commands/CommandSaveOff net/minecraft/server/commands/SaveOffCommand
	a ERROR_ALREADY_OFF
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
net/minecraft/server/commands/CommandSaveOn net/minecraft/server/commands/SaveOnCommand
	a ERROR_ALREADY_ON
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
net/minecraft/server/commands/CommandSay net/minecraft/server/commands/SayCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
net/minecraft/server/commands/CommandSchedule net/minecraft/server/commands/ScheduleCommand
	a ERROR_SAME_TICK
	b ERROR_CANT_REMOVE
	c SUGGEST_SCHEDULE
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lcom/mojang/datafixers/util/Pair;IZ)I schedule
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/lang/String;)I remove
net/minecraft/server/commands/CommandScoreboard net/minecraft/server/commands/ScoreboardCommand
	a ERROR_OBJECTIVE_ALREADY_EXISTS
	b ERROR_DISPLAY_SLOT_ALREADY_EMPTY
	c ERROR_DISPLAY_SLOT_ALREADY_SET
	d ERROR_TRIGGER_ALREADY_ENABLED
	e ERROR_NOT_TRIGGER
	f ERROR_NO_VALUE
	a ()Lcom/mojang/brigadier/builder/LiteralArgumentBuilder; createRenderTypeModify
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;)I listTrackedPlayers
	a (Lnet/minecraft/commands/CommandListenerWrapper;I)I clearDisplaySlot
	a (Lnet/minecraft/commands/CommandListenerWrapper;ILnet/minecraft/world/scores/ScoreboardObjective;)I setDisplaySlot
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/lang/String;)I listTrackedPlayerScores
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/lang/String;Lnet/minecraft/world/scores/ScoreboardObjective;)I getScore
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/lang/String;Lnet/minecraft/world/scores/criteria/IScoreboardCriteria;Lnet/minecraft/network/chat/IChatBaseComponent;)I addObjective
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;)I resetScores
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestTriggers
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/world/scores/ScoreboardObjective;)I enableTrigger
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/world/scores/ScoreboardObjective;I)I setScore
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/world/scores/ScoreboardObjective;Lek$a;Ljava/util/Collection;Lnet/minecraft/world/scores/ScoreboardObjective;)I performOperation
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/scores/ScoreboardObjective;)I removeObjective
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/scores/ScoreboardObjective;Lnet/minecraft/network/chat/IChatBaseComponent;)I setDisplayName
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/scores/ScoreboardObjective;Lnet/minecraft/world/scores/criteria/IScoreboardCriteria$EnumScoreboardHealthDisplay;)I setRenderType
	b (Lnet/minecraft/commands/CommandListenerWrapper;)I listObjectives
	b (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/world/scores/ScoreboardObjective;)I resetScore
	b (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/world/scores/ScoreboardObjective;I)I addScore
	c (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/world/scores/ScoreboardObjective;I)I removeScore
net/minecraft/server/commands/CommandSeed net/minecraft/server/commands/SeedCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;Z)V register
net/minecraft/server/commands/CommandSetBlock net/minecraft/server/commands/SetBlockCommand
	a ERROR_FAILED
	a (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/commands/arguments/blocks/ArgumentTileLocation;Lnet/minecraft/server/commands/CommandSetBlock$Mode;Ljava/util/function/Predicate;)I setBlock
net/minecraft/server/commands/CommandSetBlock$Filter net/minecraft/server/commands/SetBlockCommand$Filter
net/minecraft/server/commands/CommandSetBlock$Mode net/minecraft/server/commands/SetBlockCommand$Mode
	a REPLACE
	b DESTROY
	c $VALUES
	a ()[Lnet/minecraft/server/commands/CommandSetBlock$Mode; $values
net/minecraft/server/commands/CommandSetWorldSpawn net/minecraft/server/commands/SetWorldSpawnCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/core/BlockPosition;F)I setSpawn
net/minecraft/server/commands/CommandSpawnpoint net/minecraft/server/commands/SetSpawnCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/core/BlockPosition;F)I setSpawn
net/minecraft/server/commands/CommandSpectate net/minecraft/server/commands/SpectateCommand
	a ERROR_SELF
	b ERROR_NOT_SPECTATOR
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/server/level/EntityPlayer;)I spectate
net/minecraft/server/commands/CommandSpreadPlayers net/minecraft/server/commands/SpreadPlayersCommand
	a MAX_ITERATION_COUNT
	b ERROR_FAILED_TO_SPREAD_TEAMS
	c ERROR_FAILED_TO_SPREAD_ENTITIES
	d ERROR_INVALID_MAX_HEIGHT
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ljava/util/Collection;)I getNumberOfTeams
	a (Ljava/util/Collection;Lnet/minecraft/server/level/WorldServer;[Lags$a;IZ)D setPlayerPositions
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/phys/Vec2F;FFIZLjava/util/Collection;)I spreadPlayers
	a (Lnet/minecraft/util/RandomSource;IDDDD)[Lags$a; createInitialPositions
	a (Lnet/minecraft/world/phys/Vec2F;DLnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;DDDDI[Lags$a;Z)V spreadPositions
net/minecraft/server/commands/CommandStop net/minecraft/server/commands/StopCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
net/minecraft/server/commands/CommandStopSound net/minecraft/server/commands/StopSoundCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/sounds/SoundCategory;Lnet/minecraft/resources/MinecraftKey;)I stopSound
net/minecraft/server/commands/CommandSummon net/minecraft/server/commands/SummonCommand
	a ERROR_FAILED
	b ERROR_DUPLICATE_UUID
	c INVALID_POSITION
	a (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lhd$c;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/nbt/NBTTagCompound;Z)Lnet/minecraft/world/entity/Entity; createEntity
	b (Lnet/minecraft/commands/CommandListenerWrapper;Lhd$c;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/nbt/NBTTagCompound;Z)I spawnEntity
net/minecraft/server/commands/CommandTag net/minecraft/server/commands/TagCommand
	a ERROR_ADD_FAILED
	b ERROR_REMOVE_FAILED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ljava/util/Collection;)Ljava/util/Collection; getTags
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;)I listTags
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;Ljava/lang/String;)I addTag
	b (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;Ljava/lang/String;)I removeTag
net/minecraft/server/commands/CommandTeam net/minecraft/server/commands/TeamCommand
	a ERROR_TEAM_ALREADY_EXISTS
	b ERROR_TEAM_ALREADY_EMPTY
	c ERROR_TEAM_ALREADY_NAME
	d ERROR_TEAM_ALREADY_COLOR
	e ERROR_TEAM_ALREADY_FRIENDLYFIRE_ENABLED
	f ERROR_TEAM_ALREADY_FRIENDLYFIRE_DISABLED
	g ERROR_TEAM_ALREADY_FRIENDLYINVISIBLES_ENABLED
	h ERROR_TEAM_ALREADY_FRIENDLYINVISIBLES_DISABLED
	i ERROR_TEAM_NAMETAG_VISIBLITY_UNCHANGED
	j ERROR_TEAM_DEATH_MESSAGE_VISIBLITY_UNCHANGED
	k ERROR_TEAM_COLLISION_UNCHANGED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;)I listTeams
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/lang/String;)I createTeam
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/lang/String;Lnet/minecraft/network/chat/IChatBaseComponent;)I createTeam
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;)I leaveTeam
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/scores/ScoreboardTeam;)I emptyTeam
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/scores/ScoreboardTeam;Ljava/util/Collection;)I joinTeam
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/scores/ScoreboardTeam;Lnet/minecraft/EnumChatFormat;)I setColor
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/scores/ScoreboardTeam;Lnet/minecraft/network/chat/IChatBaseComponent;)I setDisplayName
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/scores/ScoreboardTeam;Lnet/minecraft/world/scores/ScoreboardTeamBase$EnumNameTagVisibility;)I setNametagVisibility
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/scores/ScoreboardTeam;Lnet/minecraft/world/scores/ScoreboardTeamBase$EnumTeamPush;)I setCollision
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/scores/ScoreboardTeam;Z)I setFriendlySight
	b (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/scores/ScoreboardTeam;)I deleteTeam
	b (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/scores/ScoreboardTeam;Lnet/minecraft/network/chat/IChatBaseComponent;)I setPrefix
	b (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/scores/ScoreboardTeam;Lnet/minecraft/world/scores/ScoreboardTeamBase$EnumNameTagVisibility;)I setDeathMessageVisibility
	b (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/scores/ScoreboardTeam;Z)I setFriendlyFire
	c (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/scores/ScoreboardTeam;)I listMembers
	c (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/scores/ScoreboardTeam;Lnet/minecraft/network/chat/IChatBaseComponent;)I setSuffix
net/minecraft/server/commands/CommandTeamMsg net/minecraft/server/commands/TeamMsgCommand
	a SUGGEST_STYLE
	b ERROR_NOT_ON_TEAM
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/scores/ScoreboardTeam;Ljava/util/List;Lnet/minecraft/network/chat/PlayerChatMessage;)V sendMessage
net/minecraft/server/commands/CommandTeleport net/minecraft/server/commands/TeleportCommand
	a INVALID_POSITION
	a (D)Ljava/lang/String; formatDouble
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/commands/arguments/coordinates/IVectorPosition;Lnet/minecraft/commands/arguments/coordinates/IVectorPosition;Lagz$a;)I teleportToPos
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/world/entity/Entity;)I teleportToEntity
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/server/level/WorldServer;DDDLjava/util/Set;FFLagz$a;)V performTeleport
net/minecraft/server/commands/CommandTell net/minecraft/server/commands/MsgCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/network/chat/PlayerChatMessage;)V sendMessage
net/minecraft/server/commands/CommandTellRaw net/minecraft/server/commands/TellRawCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
net/minecraft/server/commands/CommandTime net/minecraft/server/commands/TimeCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;I)I setTime
	a (Lnet/minecraft/server/level/WorldServer;)I getDayTime
	b (Lnet/minecraft/commands/CommandListenerWrapper;I)I addTime
	c (Lnet/minecraft/commands/CommandListenerWrapper;I)I queryTime
net/minecraft/server/commands/CommandTitle net/minecraft/server/commands/TitleCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;)I clearTitle
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;III)I setTimes
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/network/chat/IChatBaseComponent;Ljava/lang/String;Ljava/util/function/Function;)I showTitle
	b (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;)I resetTitle
net/minecraft/server/commands/CommandTrigger net/minecraft/server/commands/TriggerCommand
	a ERROR_NOT_PRIMED
	b ERROR_INVALID_OBJECTIVE
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestObjectives
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/scores/ScoreboardScore;)I simpleTrigger
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/scores/ScoreboardScore;I)I addValue
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/scores/ScoreboardObjective;)Lnet/minecraft/world/scores/ScoreboardScore; getScore
	b (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/scores/ScoreboardScore;I)I setValue
net/minecraft/server/commands/CommandWeather net/minecraft/server/commands/WeatherCommand
	a DEFAULT_TIME
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;I)I setClear
	a (Lnet/minecraft/commands/CommandListenerWrapper;ILnet/minecraft/util/valueproviders/IntProvider;)I getDuration
	b (Lnet/minecraft/commands/CommandListenerWrapper;I)I setRain
	c (Lnet/minecraft/commands/CommandListenerWrapper;I)I setThunder
net/minecraft/server/commands/CommandWhitelist net/minecraft/server/commands/WhitelistCommand
	a ERROR_ALREADY_ENABLED
	b ERROR_ALREADY_DISABLED
	c ERROR_ALREADY_WHITELISTED
	d ERROR_NOT_WHITELISTED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;)I reload
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;)I addPlayers
	b (Lnet/minecraft/commands/CommandListenerWrapper;)I enableWhitelist
	b (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;)I removePlayers
	c (Lnet/minecraft/commands/CommandListenerWrapper;)I disableWhitelist
	d (Lnet/minecraft/commands/CommandListenerWrapper;)I showList
net/minecraft/server/commands/CommandWorldBorder net/minecraft/server/commands/WorldBorderCommand
	a ERROR_SAME_CENTER
	b ERROR_SAME_SIZE
	c ERROR_TOO_SMALL
	d ERROR_TOO_BIG
	e ERROR_TOO_FAR_OUT
	f ERROR_SAME_WARNING_TIME
	g ERROR_SAME_WARNING_DISTANCE
	h ERROR_SAME_DAMAGE_BUFFER
	i ERROR_SAME_DAMAGE_AMOUNT
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;)I getSize
	a (Lnet/minecraft/commands/CommandListenerWrapper;DJ)I setSize
	a (Lnet/minecraft/commands/CommandListenerWrapper;F)I setDamageBuffer
	a (Lnet/minecraft/commands/CommandListenerWrapper;I)I setWarningTime
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/phys/Vec2F;)I setCenter
	b (Lnet/minecraft/commands/CommandListenerWrapper;F)I setDamageAmount
	b (Lnet/minecraft/commands/CommandListenerWrapper;I)I setWarningDistance
net/minecraft/server/commands/CommandXp net/minecraft/server/commands/ExperienceCommand
	a ERROR_SET_POINTS_INVALID
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;ILnet/minecraft/server/commands/CommandXp$Unit;)I addExperience
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/server/commands/CommandXp$Unit;)I queryExperience
	b (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;ILnet/minecraft/server/commands/CommandXp$Unit;)I setExperience
net/minecraft/server/commands/CommandXp$Unit net/minecraft/server/commands/ExperienceCommand$Type
	a POINTS
	b LEVELS
	c add
	d set
	e name
	f query
	g $VALUES
	a ()[Lnet/minecraft/server/commands/CommandXp$Unit; $values
net/minecraft/server/commands/data/CommandData net/minecraft/server/commands/data/DataCommands
	a ALL_PROVIDERS
	b TARGET_PROVIDERS
	c SOURCE_PROVIDERS
	d ERROR_MERGE_UNCHANGED
	e ERROR_GET_NOT_NUMBER
	f ERROR_GET_NON_EXISTENT
	g ERROR_MULTIPLE_TAGS
	h ERROR_EXPECTED_OBJECT
	i ERROR_EXPECTED_VALUE
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;Lahk$c;)Ljava/util/List; getSingletonSource
	a (Lcom/mojang/brigadier/context/CommandContext;Lahk$c;Lahk$a;Ljava/util/List;)I manipulateData
	a (Leg$g;Lnet/minecraft/server/commands/data/CommandDataAccessor;)Lnet/minecraft/nbt/NBTBase; getSingleTag
	a (Ljava/util/List;Ljava/util/function/Function;)Ljava/util/List; stringifyTagList
	a (Ljava/util/function/BiConsumer;)Lcom/mojang/brigadier/builder/ArgumentBuilder; decorateModification
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/server/commands/data/CommandDataAccessor;)I getData
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/server/commands/data/CommandDataAccessor;Leg$g;)I removeData
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/server/commands/data/CommandDataAccessor;Leg$g;D)I getNumeric
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/server/commands/data/CommandDataAccessor;Lnet/minecraft/nbt/NBTTagCompound;)I mergeData
	a (Lnet/minecraft/nbt/NBTBase;)Ljava/lang/String; getAsText
	b (Lcom/mojang/brigadier/context/CommandContext;Lahk$c;)Ljava/util/List; resolveSourcePath
	b (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/server/commands/data/CommandDataAccessor;Leg$g;)I getData
net/minecraft/server/commands/data/CommandDataAccessor net/minecraft/server/commands/data/DataAccessor
	a ()Lnet/minecraft/nbt/NBTTagCompound; getData
	a (Leg$g;DI)Lnet/minecraft/network/chat/IChatBaseComponent; getPrintSuccess
	a (Lnet/minecraft/nbt/NBTBase;)Lnet/minecraft/network/chat/IChatBaseComponent; getPrintSuccess
	a (Lnet/minecraft/nbt/NBTTagCompound;)V setData
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; getModifiedSuccess
net/minecraft/server/commands/data/CommandDataAccessorEntity net/minecraft/server/commands/data/EntityDataAccessor
	a PROVIDER
	b ERROR_NO_PLAYERS
	c entity
	a ()Lnet/minecraft/nbt/NBTTagCompound; getData
	a (Leg$g;DI)Lnet/minecraft/network/chat/IChatBaseComponent; getPrintSuccess
	a (Lnet/minecraft/nbt/NBTBase;)Lnet/minecraft/network/chat/IChatBaseComponent; getPrintSuccess
	a (Lnet/minecraft/nbt/NBTTagCompound;)V setData
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; getModifiedSuccess
net/minecraft/server/commands/data/CommandDataAccessorTile net/minecraft/server/commands/data/BlockDataAccessor
	a PROVIDER
	b ERROR_NOT_A_BLOCK_ENTITY
	c entity
	d pos
	a ()Lnet/minecraft/nbt/NBTTagCompound; getData
	a (Leg$g;DI)Lnet/minecraft/network/chat/IChatBaseComponent; getPrintSuccess
	a (Lnet/minecraft/nbt/NBTBase;)Lnet/minecraft/network/chat/IChatBaseComponent; getPrintSuccess
	a (Lnet/minecraft/nbt/NBTTagCompound;)V setData
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; getModifiedSuccess
net/minecraft/server/commands/data/CommandDataStorage net/minecraft/server/commands/data/StorageDataAccessor
	a PROVIDER
	b SUGGEST_STORAGE
	c storage
	d id
	a ()Lnet/minecraft/nbt/NBTTagCompound; getData
	a (Lcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/world/level/storage/PersistentCommandStorage; getGlobalTags
	a (Leg$g;DI)Lnet/minecraft/network/chat/IChatBaseComponent; getPrintSuccess
	a (Lnet/minecraft/nbt/NBTBase;)Lnet/minecraft/network/chat/IChatBaseComponent; getPrintSuccess
	a (Lnet/minecraft/nbt/NBTTagCompound;)V setData
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; getModifiedSuccess
net/minecraft/server/dedicated/PropertyManager net/minecraft/server/dedicated/Settings
	Y properties
	a LOGGER
	a ()Ljava/util/Properties; cloneProperties
	a (Ljava/lang/String;)Ljava/lang/String; getLegacyString
	a (Ljava/lang/String;I)I get
	a (Ljava/lang/String;J)J get
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; get
	a (Ljava/lang/String;Ljava/util/function/Function;)Ljava/lang/Object; getLegacy
	a (Ljava/lang/String;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object; get
	a (Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object; get
	a (Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/UnaryOperator;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object; get
	a (Ljava/lang/String;Ljava/util/function/UnaryOperator;I)I get
	a (Ljava/lang/String;Z)Z get
	a (Ljava/util/function/Function;)Ljava/util/function/Function; wrapNumberDeserializer
	a (Ljava/util/function/IntFunction;Ljava/util/function/Function;)Ljava/util/function/Function; dispatchNumberOrString
	b (Ljava/lang/String;)Ljava/lang/Boolean; getLegacyBoolean
	b (Ljava/lang/String;I)Lnet/minecraft/server/dedicated/PropertyManager$EditableProperty; getMutable
	b (Ljava/lang/String;Ljava/util/function/Function;Ljava/lang/Object;)Lnet/minecraft/server/dedicated/PropertyManager$EditableProperty; getMutable
	b (Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Lnet/minecraft/server/dedicated/PropertyManager$EditableProperty; getMutable
	b (Ljava/lang/String;Z)Lnet/minecraft/server/dedicated/PropertyManager$EditableProperty; getMutable
	b (Ljava/nio/file/Path;)Ljava/util/Properties; loadFromFile
	b (Lnet/minecraft/core/IRegistryCustom;Ljava/util/Properties;)Lnet/minecraft/server/dedicated/PropertyManager; reload
	c (Ljava/lang/String;)Ljava/lang/String; getStringRaw
	c (Ljava/nio/file/Path;)V store
net/minecraft/server/dedicated/PropertyManager$EditableProperty net/minecraft/server/dedicated/Settings$MutableValue
	b key
	c value
	d serializer
	a (Lnet/minecraft/core/IRegistryCustom;Ljava/lang/Object;)Lnet/minecraft/server/dedicated/PropertyManager; update
net/minecraft/server/dedicated/ThreadWatchdog net/minecraft/server/dedicated/ServerWatchdog
	a LOGGER
	b MAX_SHUTDOWN_TIME
	c SHUTDOWN_STATUS
	d server
	e maxTickTime
	a ()V exit
net/minecraft/server/gui/GuiStatsComponent net/minecraft/server/gui/StatsComponent
	a DECIMAL_FORMAT
	b values
	c vp
	d msgs
	e server
	f timer
	a ()V close
	a ([J)D getAverage
	b ()V tick
net/minecraft/server/gui/PlayerListBox net/minecraft/server/gui/PlayerListComponent
	a server
	b tickCount
	a ()V tick
net/minecraft/server/gui/ServerGUI net/minecraft/server/gui/MinecraftServerGui
	a MONOSPACED
	b LOGGER
	c TITLE
	d SHUTDOWN_TITLE
	e server
	f logAppenderThread
	g finalizers
	h isClosing
	a ()V start
	a (Ljava/lang/Runnable;)V addFinalizer
	a (Ljavax/swing/JTextArea;Ljavax/swing/JScrollPane;Ljava/lang/String;)V print
	a (Lnet/minecraft/server/dedicated/DedicatedServer;)Lnet/minecraft/server/gui/ServerGUI; showFrameFor
	b ()V close
	c ()Ljavax/swing/JComponent; buildInfoPanel
	d ()Ljavax/swing/JComponent; buildPlayerPanel
	e ()Ljavax/swing/JComponent; buildChatPanel
	f ()V runFinalizers
net/minecraft/server/level/BlockPosition2D net/minecraft/server/level/ColumnPos
	a x
	b z
	c COORD_BITS
	d COORD_MASK
	a ()Lnet/minecraft/world/level/ChunkCoordIntPair; toChunkPos
	a (II)J asLong
	a (J)I getX
	b ()J toLong
	b (J)I getZ
	c ()I x
	d ()I z
net/minecraft/server/level/BossBattleServer net/minecraft/server/level/ServerBossEvent
	h players
	i unmodifiablePlayers
	j visible
	a (F)V setProgress
	a (Ljava/util/function/Function;)V broadcast
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V setName
	a (Lnet/minecraft/server/level/EntityPlayer;)V addPlayer
	a (Lnet/minecraft/world/BossBattle$BarColor;)V setColor
	a (Lnet/minecraft/world/BossBattle$BarStyle;)V setOverlay
	a (Z)Lnet/minecraft/world/BossBattle; setDarkenScreen
	b ()V removeAllPlayers
	b (Lnet/minecraft/server/level/EntityPlayer;)V removePlayer
	b (Z)Lnet/minecraft/world/BossBattle; setPlayBossMusic
	c (Z)Lnet/minecraft/world/BossBattle; setCreateWorldFog
	d (Z)V setVisible
	g ()Z isVisible
	h ()Ljava/util/Collection; getPlayers
net/minecraft/server/level/ChunkMap net/minecraft/server/level/ChunkTracker
	a (J)Z isSource
	a (JIZ)V checkNeighborsAfterUpdate
	a (JJI)I getComputedLevel
	b (J)I getLevelFromSource
	b (JIZ)V update
	b (JJI)I computeLevelFromNeighbor
net/minecraft/server/level/ChunkMapDistance net/minecraft/server/level/DistanceManager
	a LOGGER
	b ENTITY_TICKING_RANGE
	c PLAYER_TICKET_LEVEL
	d INITIAL_TICKET_LIST_CAPACITY
	e ENTITY_TICKING_LEVEL_THRESHOLD
	f BLOCK_TICKING_LEVEL_THRESHOLD
	g playersPerChunk
	h tickets
	i ticketTracker
	j naturalSpawnChunkCounter
	k tickingTicketsTracker
	l playerTicketManager
	m chunksToUpdateFutures
	n ticketThrottler
	o ticketThrottlerInput
	p ticketThrottlerReleaser
	q ticketsToRelease
	r mainThreadExecutor
	s ticketTickCounter
	t simulationDistance
	a ()V purgeStaleTickets
	a (I)V updatePlayerTickets
	a (J)Z isChunkToRemove
	a (JILnet/minecraft/server/level/PlayerChunk;I)Lnet/minecraft/server/level/PlayerChunk; updateChunkScheduling
	a (JLnet/minecraft/server/level/Ticket;)V addTicket
	a (Ljava/lang/String;)V dumpTickets
	a (Lnet/minecraft/core/SectionPosition;Lnet/minecraft/server/level/EntityPlayer;)V addPlayer
	a (Lnet/minecraft/server/level/PlayerChunkMap;)Z runAllUpdates
	a (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkCoordIntPair;ILjava/lang/Object;)V addTicket
	a (Lnet/minecraft/util/ArraySetSorted;)I getTicketLevelAt
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Z)V updateChunkForced
	b ()I getNaturalSpawnChunkCount
	b (I)V updateSimulationDistance
	b (J)Lnet/minecraft/server/level/PlayerChunk; getChunk
	b (JLnet/minecraft/server/level/Ticket;)V removeTicket
	b (Lnet/minecraft/core/SectionPosition;Lnet/minecraft/server/level/EntityPlayer;)V removePlayer
	b (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkCoordIntPair;ILjava/lang/Object;)V removeTicket
	c ()Ljava/lang/String; getDebugStatus
	c (J)Z inEntityTickingRange
	c (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkCoordIntPair;ILjava/lang/Object;)V addRegionTicket
	d ()Lnet/minecraft/server/level/TickingTracker; tickingTracker
	d (J)Z inBlockTickingRange
	d (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkCoordIntPair;ILjava/lang/Object;)V removeRegionTicket
	e ()V removeTicketsOnClosing
	e (J)Ljava/lang/String; getTicketDebugString
	f ()Z hasTickets
	f (J)Z hasPlayersNearby
	g ()I getPlayerTicketLevel
	g (J)Lnet/minecraft/util/ArraySetSorted; getTickets
net/minecraft/server/level/ChunkProviderServer net/minecraft/server/level/ServerChunkCache
	a chunkMap
	b CHUNK_STATUSES
	c distanceManager
	d level
	e mainThread
	f lightEngine
	g mainThreadProcessor
	h dataStorage
	i lastInhabitedUpdate
	j spawnEnemies
	k spawnFriendlies
	l CACHE_SIZE
	m lastChunkPos
	n lastChunkStatus
	o lastChunk
	p lastSpawnState
	a ()Lnet/minecraft/server/level/LightEngineThreaded; getLightEngine
	a (I)V setViewDistance
	a (II)Lnet/minecraft/world/level/chunk/Chunk; getChunkNow
	a (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/IChunkAccess; getChunk
	a (J)Z isPositionTicking
	a (JLjava/util/function/Consumer;)V getFullChunk
	a (JLnet/minecraft/world/level/chunk/IChunkAccess;Lnet/minecraft/world/level/chunk/ChunkStatus;)V storeInCache
	a (Ljava/util/function/BooleanSupplier;Z)V tick
	a (Lnet/minecraft/core/BlockPosition;)V blockChanged
	a (Lnet/minecraft/server/level/EntityPlayer;)V move
	a (Lnet/minecraft/server/level/PlayerChunk;I)Z chunkAbsent
	a (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkCoordIntPair;ILjava/lang/Object;)V addRegionTicket
	a (Lnet/minecraft/world/entity/Entity;)V removeEntity
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/protocol/Packet;)V broadcastAndSend
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;)Ljava/lang/String; getChunkDebugData
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Z)V updateChunkForced
	a (Lnet/minecraft/world/level/EnumSkyBlock;Lnet/minecraft/core/SectionPosition;)V onLightUpdate
	a (Z)V save
	a (ZZ)V setSpawnSettings
	b ()I getTickingGenerated
	b (I)V setSimulationDistance
	b (II)Z hasChunk
	b (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Ljava/util/concurrent/CompletableFuture; getChunkFuture
	b (J)Lnet/minecraft/server/level/PlayerChunk; getVisibleChunkIfPresent
	b (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkCoordIntPair;ILjava/lang/Object;)V removeRegionTicket
	b (Lnet/minecraft/world/entity/Entity;)V addEntity
	b (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/protocol/Packet;)V broadcast
	c ()Lnet/minecraft/world/level/World; getLevel
	c (II)Lnet/minecraft/world/level/IBlockAccess; getChunkForLighting
	c (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Ljava/util/concurrent/CompletableFuture; getChunkFutureMainThread
	d ()Z pollTask
	e ()Ljava/lang/String; gatherStats
	f ()I getPendingTasksCount
	g ()Lnet/minecraft/world/level/chunk/ChunkGenerator; getGenerator
	h ()Lnet/minecraft/world/level/chunk/ChunkGeneratorStructureState; getGeneratorState
	i ()Lnet/minecraft/world/level/levelgen/RandomState; randomState
	j ()I getLoadedChunksCount
	k ()Lnet/minecraft/world/level/storage/WorldPersistentData; getDataStorage
	l ()Lnet/minecraft/world/entity/ai/village/poi/VillagePlace; getPoiManager
	m ()Lnet/minecraft/world/level/chunk/storage/ChunkScanAccess; chunkScanner
	n ()Lcmt$d; getLastSpawnState
	o ()V removeTicketsOnClosing
	p ()Lnet/minecraft/world/level/lighting/LightEngine; getLightEngine
	q ()Lnet/minecraft/world/level/IBlockAccess; getLevel
	r ()V clearCache
	s ()Z runDistanceManagerUpdates
	t ()V tickChunks
net/minecraft/server/level/ChunkTaskQueue net/minecraft/server/level/ChunkTaskPriorityQueue
	a PRIORITY_LEVEL_COUNT
	b taskQueue
	c firstQueue
	d name
	e acquired
	f maxTasks
	a ()Ljava/util/stream/Stream; pop
	a (ILnet/minecraft/world/level/ChunkCoordIntPair;I)V resortChunkTasks
	a (J)Ljava/lang/Runnable; acquire
	a (JZ)V release
	a (Ljava/util/Optional;JI)V submit
	b ()Z hasWork
	c ()Lit/unimi/dsi/fastutil/longs/LongSet; getAcquired
net/minecraft/server/level/ChunkTaskQueueSorter net/minecraft/server/level/ChunkTaskPriorityQueueSorter
	a LOGGER
	b queues
	c sleeping
	d mailbox
	a ()Z hasWork
	a (Ljava/lang/Runnable;JLjava/util/function/IntSupplier;)Laie$a; message
	a (Ljava/lang/Runnable;JZ)Laie$b; release
	a (Ljava/util/function/Function;JLjava/util/function/IntSupplier;)Laie$a; message
	a (Lnet/minecraft/server/level/ChunkTaskQueue;Lnet/minecraft/util/thread/Mailbox;)V pollTask
	a (Lnet/minecraft/server/level/PlayerChunk;Ljava/lang/Runnable;)Laie$a; message
	a (Lnet/minecraft/server/level/PlayerChunk;Ljava/util/function/Function;)Laie$a; message
	a (Lnet/minecraft/util/thread/Mailbox;)Lnet/minecraft/util/thread/Mailbox; getReleaseProcessor
	a (Lnet/minecraft/util/thread/Mailbox;JLjava/lang/Runnable;Z)V release
	a (Lnet/minecraft/util/thread/Mailbox;Ljava/util/function/Function;JLjava/util/function/IntSupplier;Z)V submit
	a (Lnet/minecraft/util/thread/Mailbox;Z)Lnet/minecraft/util/thread/Mailbox; getProcessor
	b ()Ljava/lang/String; getDebugStatus
	b (Lnet/minecraft/util/thread/Mailbox;)Lnet/minecraft/server/level/ChunkTaskQueue; getQueue
net/minecraft/server/level/DemoPlayerInteractManager net/minecraft/server/level/DemoMode
	a DEMO_DAYS
	b TOTAL_PLAY_TICKS
	e displayedIntro
	f demoHasEnded
	g demoEndedReminder
	h gameModeTicks
	a ()V tick
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/network/protocol/game/PacketPlayInBlockDig$EnumPlayerDigType;Lnet/minecraft/core/EnumDirection;II)V handleBlockBreakAction
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/level/World;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; useItem
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/level/World;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; useItemOn
	f ()V outputDemoReminder
net/minecraft/server/level/EntityPlayer net/minecraft/server/level/ServerPlayer
	b connection
	c server
	cA canChatColor
	cB lastActionTime
	cC camera
	cD isChangingDimension
	cE seenCredits
	cF recipeBook
	cG levitationStartPos
	cH levitationStartTime
	cI disconnected
	cJ startingToFallPosition
	cK enteredNetherPosition
	cL enteredLavaOnVehiclePosition
	cM lastSectionPos
	cN respawnDimension
	cO respawnPosition
	cP respawnForced
	cQ respawnAngle
	cR textFilter
	cS textFilteringEnabled
	cT allowsListing
	cU wardenSpawnTracker
	cV containerSynchronizer
	cW containerListener
	cX chatSession
	cY containerCounter
	cj LOGGER
	ck NEUTRAL_MOB_DEATH_NOTIFICATION_RADII_XZ
	cl NEUTRAL_MOB_DEATH_NOTIFICATION_RADII_Y
	cm advancements
	cn stats
	co lastRecordedHealthAndAbsorption
	cp lastRecordedFoodLevel
	cq lastRecordedAirLevel
	cr lastRecordedArmor
	cs lastRecordedLevel
	ct lastRecordedExperience
	cu lastSentHealth
	cv lastSentFood
	cw lastFoodSaturationZero
	cx lastSentExp
	cy spawnInvulnerableTime
	cz chatVisibility
	d gameMode
	e latency
	f wonGame
	A ()Lnet/minecraft/world/entity/player/EnumChatVisibility; getChatVisibility
	B ()I getPermissionLevel
	C ()V resetLastActionTime
	D ()Lnet/minecraft/stats/ServerStatisticManager; getStats
	E ()Lnet/minecraft/stats/RecipeBookServer; getRecipeBook
	E_ ()V onEnterCombat
	F ()V updateInvisibilityStatus
	F_ ()Z isSpectator
	G ()Lnet/minecraft/world/entity/Entity; getCamera
	H ()V processPortalCooldown
	I ()J getLastActionTime
	J ()Lnet/minecraft/network/chat/IChatBaseComponent; getTabListDisplayName
	K ()Z isChangingDimension
	L ()V hasChangedDimension
	M ()Lnet/minecraft/server/AdvancementDataPlayer; getAdvancements
	N ()Lnet/minecraft/core/BlockPosition; getRespawnPosition
	O ()F getRespawnAngle
	P ()Lnet/minecraft/resources/ResourceKey; getRespawnDimension
	Q ()Z isRespawnForced
	R ()Lnet/minecraft/core/SectionPosition; getLastSectionPos
	S ()Lnet/minecraft/network/protocol/Packet; getAddEntityPacket
	T ()Lnet/minecraft/server/network/ITextFilter; getTextFilter
	U ()Z isTextFilteringEnabled
	V ()Z allowsListing
	W ()Ljava/util/Optional; getWardenSpawnTracker
	X ()Lnet/minecraft/network/chat/RemoteChatSession; getChatSession
	Y ()Lnet/minecraft/world/level/World; getLevel
	Y_ ()V completeUsingItem
	a (DD)V indicateDamage
	a (DDD)V dismountTo
	a (DZ)V doCheckFallDamage
	a (DZLnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;)V checkFallDamage
	a (FFZZ)V setPlayerInput
	a (I)V setExperiencePoints
	a (ILnet/minecraft/world/item/trading/MerchantRecipeList;IIZZ)V sendMerchantOffers
	a (Ljava/lang/String;Ljava/lang/String;ZLnet/minecraft/network/chat/IChatBaseComponent;)V sendTexturePack
	a (Ljava/lang/String;Ljava/lang/String;[Lnet/minecraft/world/scores/criteria/IScoreboardCriteria;)V handleTeamKill
	a (Ljava/util/Collection;)I awardRecipes
	a (Lnet/minecraft/commands/arguments/ArgumentAnchor$Anchor;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/commands/arguments/ArgumentAnchor$Anchor;)V lookAt
	a (Lnet/minecraft/commands/arguments/ArgumentAnchor$Anchor;Lnet/minecraft/world/phys/Vec3D;)V lookAt
	a (Lnet/minecraft/core/BlockPosition;)Lcom/mojang/datafixers/util/Either; startSleepInBed
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Z bedInRange
	a (Lnet/minecraft/core/SectionPosition;)V setLastSectionPos
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/nbt/NBTTagCompound;Ljava/lang/String;)Lnet/minecraft/world/level/EnumGamemode; readPlayerMode
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V sendSystemMessage
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Z)V displayClientMessage
	a (Lnet/minecraft/network/chat/OutgoingChatMessage;ZLtf$a;)V sendChatMessage
	a (Lnet/minecraft/network/chat/RemoteChatSession;)V setChatSession
	a (Lnet/minecraft/network/protocol/game/PacketPlayInSettings;)V updateOptions
	a (Lnet/minecraft/network/protocol/status/ServerPing;)V sendServerStatus
	a (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/BlockPosition;FZZ)V setRespawnPosition
	a (Lnet/minecraft/server/level/EntityPlayer;)Z broadcastToPlayer
	a (Lnet/minecraft/server/level/EntityPlayer;Z)V restoreFrom
	a (Lnet/minecraft/server/level/WorldServer;)Lnet/minecraft/world/level/portal/ShapeDetectorShape; findDimensionEntryPoint
	a (Lnet/minecraft/server/level/WorldServer;DDDFF)V teleportTo
	a (Lnet/minecraft/server/level/WorldServer;DDDLjava/util/Set;FF)Z teleportTo
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;)V createEndPlatform
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;ZLnet/minecraft/world/level/border/WorldBorder;)Ljava/util/Optional; getExitPortal
	a (Lnet/minecraft/sounds/SoundEffect;Lnet/minecraft/sounds/SoundCategory;FF)V playNotifySound
	a (Lnet/minecraft/stats/Statistic;)V resetStat
	a (Lnet/minecraft/stats/Statistic;I)V awardStat
	a (Lnet/minecraft/world/EnumHand;)V swing
	a (Lnet/minecraft/world/ITileInventory;)Ljava/util/OptionalInt; openMenu
	a (Lnet/minecraft/world/damagesource/DamageSource;)V die
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/effect/MobEffect;)V onEffectRemoved
	a (Lnet/minecraft/world/effect/MobEffect;Lnet/minecraft/world/entity/Entity;)V onEffectAdded
	a (Lnet/minecraft/world/effect/MobEffect;ZLnet/minecraft/world/entity/Entity;)V onEffectUpdated
	a (Lnet/minecraft/world/entity/Entity;)V crit
	a (Lnet/minecraft/world/entity/Entity;I)V take
	a (Lnet/minecraft/world/entity/Entity;ILnet/minecraft/world/damagesource/DamageSource;)V awardKillScore
	a (Lnet/minecraft/world/entity/animal/horse/EntityHorseAbstract;Lnet/minecraft/world/IInventory;)V openHorseInventory
	a (Lnet/minecraft/world/entity/item/EntityItem;)V onItemPickup
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z canHarmPlayer
	a (Lnet/minecraft/world/inventory/Container;)V initMenu
	a (Lnet/minecraft/world/item/ItemStack;)V updateUsingItem
	a (Lnet/minecraft/world/item/ItemStack;I)V onEnchantmentPerformed
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/EnumHand;)V openItemGui
	a (Lnet/minecraft/world/item/ItemStack;ZZ)Lnet/minecraft/world/entity/item/EntityItem; drop
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;)V untrackChunk
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/network/protocol/Packet;)V trackChunk
	a (Lnet/minecraft/world/level/EnumGamemode;)Z setGameMode
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Z mayInteract
	a (Lnet/minecraft/world/level/block/entity/TileEntityCommand;)V openCommandBlock
	a (Lnet/minecraft/world/level/block/entity/TileEntitySign;)V openTextEdit
	a (Lnet/minecraft/world/level/block/state/IBlockData;)V onInsideBlock
	a (Lnet/minecraft/world/scores/criteria/IScoreboardCriteria;I)V updateScoreForCriteria
	a (Z)Z drop
	a (ZZ)V stopSleepInBed
	a ([Lnet/minecraft/resources/MinecraftKey;)V awardRecipesByKey
	b (DDD)V teleportTo
	b (I)V setExperienceLevels
	b (Ljava/util/Collection;)I resetRecipes
	b (Lnet/minecraft/core/BlockPosition;)V startSleeping
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Z bedBlocked
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/network/chat/IChatBaseComponent;Z)V sendSystemMessage
	b (Lnet/minecraft/server/level/EntityPlayer;)Z shouldFilterMessageTo
	b (Lnet/minecraft/server/level/WorldServer;)Lnet/minecraft/world/entity/Entity; changeDimension
	b (Lnet/minecraft/world/damagesource/DamageSource;)Z isInvulnerableTo
	b (Lnet/minecraft/world/entity/Entity;)V magicCrit
	b (Lnet/minecraft/world/level/EnumGamemode;)Lnet/minecraft/world/level/EnumGamemode; calculateGameModeForNewPlayer
	c (DDD)V teleportRelative
	c (I)V giveExperienceLevels
	c (Lnet/minecraft/core/BlockPosition;)V onChangedBlock
	c (Lnet/minecraft/nbt/NBTTagCompound;)V loadGameTypes
	c (Lnet/minecraft/server/level/WorldServer;)V setLevel
	c (Lnet/minecraft/world/entity/Entity;)V setCamera
	d (DDD)V moveTo
	d (I)V giveExperiencePoints
	d (Lnet/minecraft/server/level/WorldServer;)V fudgeSpawnLocation
	d (Lnet/minecraft/world/entity/Entity;)V attack
	e (Lnet/minecraft/server/level/WorldServer;)V triggerDimensionChangeTriggers
	f ()Z isCreative
	g (Lnet/minecraft/core/BlockPosition;)Z isReachableBedBlock
	gj ()V tellNeutralMobsThatIDied
	gk ()Z isPvpAllowed
	gl ()V nextContainerCounter
	gm ()Z acceptsChatMessages
	h ()V initInventoryMenu
	j ()V onLeaveCombat
	k ()Lnet/minecraft/world/item/ItemCooldown; createItemCooldowns
	k (Lnet/minecraft/nbt/NBTTagCompound;)V storeGameTypes
	l ()V tick
	m ()V doTick
	n ()V resetFallDistance
	o ()V trackStartFallingPosition
	p ()V trackEnteredOrExitedLavaOnVehicle
	q ()V closeContainer
	r ()V doCloseContainer
	s ()V disconnect
	t ()Z hasDisconnected
	t (I)I getCoprime
	u ()V resetSentInfo
	v (Z)Z acceptsSystemMessages
	w ()V onUpdateAbilities
	x ()Lnet/minecraft/server/level/WorldServer; getLevel
	y ()Ljava/lang/String; getIpAddress
	z ()Z canChatInColor
net/minecraft/server/level/EntityTrackerEntry net/minecraft/server/level/ServerEntity
	a LOGGER
	b TOLERANCE_LEVEL_ROTATION
	c level
	d entity
	e updateInterval
	f trackDelta
	g broadcast
	h positionCodec
	i yRotp
	j xRotp
	k yHeadRotp
	l ap
	m tickCount
	n teleportDelay
	o lastPassengers
	p wasRiding
	q wasOnGround
	r trackedDataValues
	a ()V sendChanges
	a (Ljava/util/List;Ljava/util/List;)Ljava/util/stream/Stream; changedPassengers
	a (Ljava/util/function/Consumer;)V sendPairingData
	a (Lnet/minecraft/network/protocol/Packet;)V broadcastAndSend
	a (Lnet/minecraft/server/level/EntityPlayer;)V removePairing
	b ()V sendDirtyEntityData
	b (Lnet/minecraft/server/level/EntityPlayer;)V addPairing
net/minecraft/server/level/LightEngineGraphSection net/minecraft/server/level/SectionTracker
	a (J)Z isSource
	a (JIZ)V checkNeighborsAfterUpdate
	a (JJI)I getComputedLevel
	b (J)I getLevelFromSource
	b (JIZ)V update
	b (JJI)I computeLevelFromNeighbor
net/minecraft/server/level/LightEngineThreaded net/minecraft/server/level/ThreadedLevelLightEngine
	d LOGGER
	e taskMailbox
	f lightTasks
	g chunkMap
	h sorterMailbox
	i taskPerBatch
	j scheduled
	a ()V tryScheduleUpdate
	a (I)V setTaskPerBatch
	a (IILjava/util/function/IntSupplier;Lnet/minecraft/server/level/LightEngineThreaded$Update;Ljava/lang/Runnable;)V addTask
	a (IILnet/minecraft/server/level/LightEngineThreaded$Update;Ljava/lang/Runnable;)V addTask
	a (IZZ)I runUpdates
	a (Lnet/minecraft/core/BlockPosition;)V checkBlock
	a (Lnet/minecraft/core/BlockPosition;I)V onBlockEmissionIncrease
	a (Lnet/minecraft/core/SectionPosition;Z)V updateSectionStatus
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;)V updateChunkStatus
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Z)V enableLightSources
	a (Lnet/minecraft/world/level/EnumSkyBlock;Lnet/minecraft/core/SectionPosition;Lnet/minecraft/world/level/chunk/NibbleArray;Z)V queueSectionData
	a (Lnet/minecraft/world/level/chunk/IChunkAccess;)Ljava/util/concurrent/CompletableFuture; retainData
	a (Lnet/minecraft/world/level/chunk/IChunkAccess;Z)Ljava/util/concurrent/CompletableFuture; lightChunk
	b (Lnet/minecraft/world/level/ChunkCoordIntPair;Z)V retainData
	e ()V runUpdate
net/minecraft/server/level/LightEngineThreaded$Update net/minecraft/server/level/ThreadedLevelLightEngine$TaskType
	a PRE_UPDATE
	b POST_UPDATE
	c $VALUES
	a ()[Lnet/minecraft/server/level/LightEngineThreaded$Update; $values
net/minecraft/server/level/PlayerChunk net/minecraft/server/level/ChunkHolder
	A wasAccessibleSinceLastSave
	B resendLight
	C pendingFullStateConfirmation
	a UNLOADED_CHUNK
	b UNLOADED_CHUNK_FUTURE
	c UNLOADED_LEVEL_CHUNK
	d NOT_DONE_YET
	e UNLOADED_LEVEL_CHUNK_FUTURE
	f CHUNK_STATUSES
	g FULL_CHUNK_STATUSES
	h BLOCKS_BEFORE_RESEND_FUDGE
	i futures
	j levelHeightAccessor
	k fullChunkFuture
	l tickingChunkFuture
	m entityTickingChunkFuture
	n chunkToSave
	o chunkToSaveHistory
	p oldTicketLevel
	q ticketLevel
	r queueLevel
	s pos
	t hasChangedSections
	u changedBlocksPerSection
	v blockChangedLightSectionFilter
	w skyChangedLightSectionFilter
	x lightEngine
	y onLevelChange
	z playerProvider
	a ()Ljava/util/concurrent/CompletableFuture; getTickingChunkFuture
	a (I)V setTicketLevel
	a (Ljava/lang/String;Ljava/util/concurrent/CompletableFuture;)V addSaveDependency
	a (Ljava/util/concurrent/CompletableFuture;Ljava/lang/String;)V updateChunkToSave
	a (Lnet/minecraft/core/BlockPosition;)V blockChanged
	a (Lnet/minecraft/network/protocol/Packet;Z)V broadcast
	a (Lnet/minecraft/server/level/PlayerChunkMap;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/Executor;Lnet/minecraft/server/level/PlayerChunk$State;)V scheduleFullChunkPromotion
	a (Lnet/minecraft/server/level/PlayerChunkMap;Ljava/util/concurrent/Executor;)V updateFutures
	a (Lnet/minecraft/server/level/PlayerChunkMap;Lnet/minecraft/server/level/PlayerChunk$State;)V demoteFullChunk
	a (Lnet/minecraft/world/level/EnumSkyBlock;I)V sectionLightChanged
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V broadcastBlockEntity
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V broadcastBlockEntityIfNeeded
	a (Lnet/minecraft/world/level/chunk/Chunk;)V broadcastChanges
	a (Lnet/minecraft/world/level/chunk/ChunkStatus;)Ljava/util/concurrent/CompletableFuture; getFutureIfPresentUnchecked
	a (Lnet/minecraft/world/level/chunk/ChunkStatus;Lnet/minecraft/server/level/PlayerChunkMap;)Ljava/util/concurrent/CompletableFuture; getOrScheduleFuture
	a (Lnet/minecraft/world/level/chunk/ProtoChunkExtension;)V replaceProtoChunk
	b ()Ljava/util/concurrent/CompletableFuture; getEntityTickingChunkFuture
	b (I)Lnet/minecraft/world/level/chunk/ChunkStatus; getStatus
	b (Lnet/minecraft/world/level/chunk/ChunkStatus;)Ljava/util/concurrent/CompletableFuture; getFutureIfPresent
	c ()Ljava/util/concurrent/CompletableFuture; getFullChunkFuture
	c (I)Lnet/minecraft/server/level/PlayerChunk$State; getFullChunkStatus
	d ()Lnet/minecraft/world/level/chunk/Chunk; getTickingChunk
	d (I)V setQueueLevel
	e ()Lnet/minecraft/world/level/chunk/Chunk; getFullChunk
	f ()Lnet/minecraft/world/level/chunk/ChunkStatus; getLastAvailableStatus
	g ()Lnet/minecraft/world/level/chunk/IChunkAccess; getLastAvailable
	h ()Ljava/util/concurrent/CompletableFuture; getChunkToSave
	i ()Lnet/minecraft/server/level/PlayerChunk$State; getFullStatus
	j ()Lnet/minecraft/world/level/ChunkCoordIntPair; getPos
	k ()I getTicketLevel
	l ()I getQueueLevel
	m ()Z wasAccessibleSinceLastSave
	n ()V refreshAccessibility
	o ()Ljava/util/List; getAllFutures
net/minecraft/server/level/PlayerChunk$Failure net/minecraft/server/level/ChunkHolder$ChunkLoadingFailure
	b UNLOADED
net/minecraft/server/level/PlayerChunk$State net/minecraft/server/level/ChunkHolder$FullChunkStatus
	a INACCESSIBLE
	b BORDER
	c TICKING
	d ENTITY_TICKING
	e $VALUES
	a ()[Lnet/minecraft/server/level/PlayerChunk$State; $values
	a (Lnet/minecraft/server/level/PlayerChunk$State;)Z isOrAfter
net/minecraft/server/level/PlayerChunkMap net/minecraft/server/level/ChunkMap
	A modified
	B queueSorter
	C worldgenMailbox
	D mainThreadMailbox
	E progressListener
	F chunkStatusListener
	G distanceManager
	H tickingGenerated
	I structureTemplateManager
	J storageName
	K playerMap
	L entityMap
	M chunkTypeCache
	N chunkSaveCooldowns
	O unloadQueue
	P viewDistance
	a MAX_VIEW_DISTANCE
	b MAX_CHUNK_DISTANCE
	c FORCED_TICKET_LEVEL
	f CHUNK_TYPE_REPLACEABLE
	g CHUNK_TYPE_UNKNOWN
	h CHUNK_TYPE_FULL
	i LOGGER
	j CHUNK_SAVED_PER_TICK
	k CHUNK_SAVED_EAGERLY_PER_TICK
	l EAGER_CHUNK_SAVE_COOLDOWN_IN_MILLIS
	m MIN_VIEW_DISTANCE
	n updatingChunkMap
	o visibleChunkMap
	p pendingUnloads
	q entitiesInLevel
	r level
	s lightEngine
	t mainThreadExecutor
	u generator
	v randomState
	w chunkGeneratorState
	x overworldDataStorage
	y poiManager
	z toDrop
	a ()Lnet/minecraft/world/level/chunk/ChunkGenerator; generator
	a (I)V setViewDistance
	a (IIIII)Z isChunkInRange
	a (J)Lnet/minecraft/server/level/PlayerChunk; getUpdatingChunkIfPresent
	a (JILnet/minecraft/server/level/PlayerChunk;I)Lnet/minecraft/server/level/PlayerChunk; updateChunkScheduling
	a (JLnet/minecraft/server/level/PlayerChunk;)V scheduleUnload
	a (Ljava/io/Writer;)V dumpChunks
	a (Ljava/lang/IllegalStateException;Ljava/lang/String;)Lnet/minecraft/ReportedException; debugFuturesAndCreateReportedException
	a (Ljava/lang/Throwable;Lnet/minecraft/world/level/ChunkCoordIntPair;)Lcom/mojang/datafixers/util/Either; handleChunkLoadFailure
	a (Ljava/util/List;)V resendBiomesForChunks
	a (Ljava/util/concurrent/CompletableFuture;)Ljava/lang/String; printFuture
	a (Ljava/util/function/BooleanSupplier;)V tick
	a (Lnet/minecraft/server/level/EntityPlayer;)V move
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/level/ChunkCoordIntPair;)Z playerIsCloseEnoughForSpawning
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/level/ChunkCoordIntPair;Lorg/apache/commons/lang3/mutable/MutableObject;ZZ)V updateChunkTracking
	a (Lnet/minecraft/server/level/EntityPlayer;Lorg/apache/commons/lang3/mutable/MutableObject;Lnet/minecraft/world/level/chunk/Chunk;)V playerLoadedChunk
	a (Lnet/minecraft/server/level/EntityPlayer;Z)V updatePlayerStatus
	a (Lnet/minecraft/server/level/PlayerChunk;)Ljava/util/concurrent/CompletableFuture; prepareTickingChunk
	a (Lnet/minecraft/server/level/PlayerChunk;Lnet/minecraft/world/level/chunk/ChunkStatus;)Ljava/util/concurrent/CompletableFuture; schedule
	a (Lnet/minecraft/server/level/WorldServer;Ljava/util/List;)V postLoadProtoChunk
	a (Lnet/minecraft/world/entity/Entity;)V addEntity
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/protocol/Packet;)V broadcast
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;)Ljava/lang/String; getChunkDebugData
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;ILjava/util/function/IntFunction;)Ljava/util/concurrent/CompletableFuture; getChunkRangeFuture
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/server/level/PlayerChunk$State;)V onFullChunkStatusChange
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/world/entity/Entity;)D euclideanDistanceSquared
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/world/level/chunk/ChunkStatus$Type;)B markPosition
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Z)Ljava/util/List; getPlayers
	a (Lnet/minecraft/world/level/chunk/ChunkStatus;I)Lnet/minecraft/world/level/chunk/ChunkStatus; getDependencyStatus
	a (Lnet/minecraft/world/level/chunk/IChunkAccess;)Z save
	a (Z)V saveAllChunks
	b ()Lnet/minecraft/world/level/chunk/ChunkGeneratorStructureState; generatorState
	b (IIIII)Z isChunkOnRangeBorder
	b (J)Lnet/minecraft/server/level/PlayerChunk; getVisibleChunkIfPresent
	b (Ljava/util/function/BooleanSupplier;)V processUnloads
	b (Lnet/minecraft/nbt/NBTTagCompound;)Z isChunkDataValid
	b (Lnet/minecraft/server/level/EntityPlayer;)Z skipPlayer
	b (Lnet/minecraft/server/level/PlayerChunk;)Ljava/util/concurrent/CompletableFuture; prepareAccessibleChunk
	b (Lnet/minecraft/server/level/PlayerChunk;Lnet/minecraft/world/level/chunk/ChunkStatus;)Ljava/util/concurrent/CompletableFuture; scheduleChunkGeneration
	b (Lnet/minecraft/world/entity/Entity;)V removeEntity
	b (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/protocol/Packet;)V broadcastAndSend
	b (Lnet/minecraft/world/level/ChunkCoordIntPair;)Ljava/util/concurrent/CompletableFuture; prepareEntityTickingChunk
	c ()Lnet/minecraft/world/level/levelgen/RandomState; randomState
	c (J)Ljava/util/function/IntSupplier; getChunkQueueLevel
	c (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; upgradeChunkTag
	c (Lnet/minecraft/server/level/EntityPlayer;)Lnet/minecraft/core/SectionPosition; updatePlayerPos
	c (Lnet/minecraft/server/level/PlayerChunk;)Ljava/util/concurrent/CompletableFuture; protoChunkToFullChunk
	c (Lnet/minecraft/world/level/ChunkCoordIntPair;)V releaseLightTicket
	d ()V debugReloadGenerator
	d (Lnet/minecraft/server/level/PlayerChunk;)Z saveChunkIfNeeded
	d (Lnet/minecraft/world/level/ChunkCoordIntPair;)Z anyPlayerCloseEnoughForSpawning
	e ()Lnet/minecraft/server/level/LightEngineThreaded; getLightEngine
	e (Lnet/minecraft/world/level/ChunkCoordIntPair;)Ljava/util/List; getPlayersCloseForSpawning
	f ()Z hasWork
	g ()Z promoteChunkMap
	g (Lnet/minecraft/world/level/ChunkCoordIntPair;)Ljava/util/concurrent/CompletableFuture; scheduleChunkLoad
	h ()I getTickingGenerated
	h (Lnet/minecraft/world/level/ChunkCoordIntPair;)Lnet/minecraft/world/level/chunk/IChunkAccess; createEmptyChunk
	i ()I size
	i (Lnet/minecraft/world/level/ChunkCoordIntPair;)V markPositionReplaceable
	j ()Lnet/minecraft/server/level/ChunkMapDistance; getDistanceManager
	j (Lnet/minecraft/world/level/ChunkCoordIntPair;)Z isExistingChunkFull
	k ()Ljava/lang/Iterable; getChunks
	k (Lnet/minecraft/world/level/ChunkCoordIntPair;)Ljava/util/concurrent/CompletableFuture; readChunk
	l ()V tick
	m ()Lnet/minecraft/world/entity/ai/village/poi/VillagePlace; getPoiManager
	n ()Ljava/lang/String; getStorageName
net/minecraft/server/level/PlayerChunkMap$EntityTracker net/minecraft/server/level/ChunkMap$TrackedEntity
	b serverEntity
	c entity
	d range
	e lastSectionPos
	f seenBy
	a ()V broadcastRemoved
	a (I)I scaledRange
	a (Ljava/util/List;)V updatePlayers
	a (Lnet/minecraft/network/protocol/Packet;)V broadcast
	a (Lnet/minecraft/server/level/EntityPlayer;)V removePlayer
	b ()I getEffectiveRange
	b (Lnet/minecraft/network/protocol/Packet;)V broadcastAndSend
	b (Lnet/minecraft/server/level/EntityPlayer;)V updatePlayer
net/minecraft/server/level/PlayerInteractManager net/minecraft/server/level/ServerPlayerGameMode
	a LOGGER
	b gameModeForPlayer
	c level
	d player
	e previousGameModeForPlayer
	f isDestroyingBlock
	g destroyProgressStart
	h destroyPos
	i gameTicks
	j hasDelayedDestroy
	k delayedDestroyPos
	l delayedTickStart
	m lastSentState
	a ()V tick
	a (Lnet/minecraft/core/BlockPosition;)Z destroyBlock
	a (Lnet/minecraft/core/BlockPosition;ILjava/lang/String;)V destroyAndAck
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/network/protocol/game/PacketPlayInBlockDig$EnumPlayerDigType;Lnet/minecraft/core/EnumDirection;II)V handleBlockBreakAction
	a (Lnet/minecraft/core/BlockPosition;ZILjava/lang/String;)V debugLogging
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/level/World;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; useItem
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/level/World;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; useItemOn
	a (Lnet/minecraft/server/level/WorldServer;)V setLevel
	a (Lnet/minecraft/world/level/EnumGamemode;)Z changeGameModeForPlayer
	a (Lnet/minecraft/world/level/EnumGamemode;Lnet/minecraft/world/level/EnumGamemode;)V setGameModeForPlayer
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;I)F incrementDestroyProgress
	b ()Lnet/minecraft/world/level/EnumGamemode; getGameModeForPlayer
	c ()Lnet/minecraft/world/level/EnumGamemode; getPreviousGameModeForPlayer
	d ()Z isSurvival
	e ()Z isCreative
net/minecraft/server/level/RegionLimitedWorldAccess net/minecraft/server/level/WorldGenRegion
	a LOGGER
	b cache
	c center
	d size
	e level
	f seed
	g levelData
	h random
	i dimensionType
	j blockTicks
	k fluidTicks
	l biomeManager
	m firstPos
	n lastPos
	o structureManager
	p generatingStatus
	q writeRadiusCutoff
	r currentlyGenerating
	s subTickCount
	t WORLDGEN_REGION_RANDOM
	A ()J getSeed
	C ()Lnet/minecraft/server/level/WorldServer; getLevel
	G ()Lnet/minecraft/world/flag/FeatureFlagSet; enabledFeatures
	I ()Lnet/minecraft/world/level/chunk/IChunkProvider; getChunkSource
	J ()Lnet/minecraft/world/ticks/LevelTickAccess; getFluidTicks
	K ()Lnet/minecraft/world/ticks/LevelTickAccess; getBlockTicks
	a ()Lnet/minecraft/world/level/ChunkCoordIntPair; getCenter
	a (DDDDLjava/util/function/Predicate;)Lnet/minecraft/world/entity/player/EntityHuman; getNearestPlayer
	a (II)Lnet/minecraft/world/level/chunk/IChunkAccess; getChunk
	a (III)Lnet/minecraft/core/Holder; getUncachedNoiseBiome
	a (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/IChunkAccess; getChunk
	a (Ljava/util/function/Supplier;)V setCurrentlyGenerating
	a (Lnet/minecraft/core/BlockPosition;Ljava/util/function/Predicate;)Z isStateAtPosition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;II)Z setBlock
	a (Lnet/minecraft/core/BlockPosition;Z)Z removeBlock
	a (Lnet/minecraft/core/BlockPosition;ZLnet/minecraft/world/entity/Entity;I)Z destroyBlock
	a (Lnet/minecraft/core/EnumDirection;Z)F getShade
	a (Lnet/minecraft/core/particles/ParticleParam;DDDDDD)V addParticle
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AxisAlignedBB;Ljava/util/function/Predicate;)Ljava/util/List; getEntities
	a (Lnet/minecraft/world/entity/player/EntityHuman;ILnet/minecraft/core/BlockPosition;I)V levelEvent
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/sounds/SoundEffect;Lnet/minecraft/sounds/SoundCategory;FF)V playSound
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;I)Z isOldChunkAround
	a (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/world/phys/AxisAlignedBB;Ljava/util/function/Predicate;)Ljava/util/List; getEntities
	a (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/phys/Vec3D;Ldga$a;)V gameEvent
	a (Lnet/minecraft/world/level/levelgen/HeightMap$Type;II)I getHeight
	a_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; getBlockState
	b (II)Z hasChunk
	b (Lnet/minecraft/core/BlockPosition;Ljava/util/function/Predicate;)Z isFluidAtPosition
	b (Lnet/minecraft/world/entity/Entity;)Z addFreshEntity
	b_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	c_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/entity/TileEntity; getBlockEntity
	d_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/DifficultyDamageScaler; getCurrentDifficultyAt
	e_ (Lnet/minecraft/core/BlockPosition;)Z ensureCanWrite
	f (Lnet/minecraft/core/BlockPosition;)V markPosForPostprocessing
	k_ ()Z isClientSide
	l_ ()Lnet/minecraft/world/level/lighting/LightEngine; getLightEngine
	m_ ()I getSeaLevel
	n ()Lnet/minecraft/server/MinecraftServer; getServer
	n_ ()Lnet/minecraft/world/level/storage/WorldData; getLevelData
	o_ ()I getSkyDarken
	p_ ()Lnet/minecraft/world/level/border/WorldBorder; getWorldBorder
	q_ ()Lnet/minecraft/world/level/dimension/DimensionManager; dimensionType
	r_ ()Lnet/minecraft/util/RandomSource; getRandom
	s_ ()Lnet/minecraft/world/level/biome/BiomeManager; getBiomeManager
	t_ ()J nextSubTickCount
	u_ ()Lnet/minecraft/core/IRegistryCustom; registryAccess
	v ()Ljava/util/List; players
	v_ ()I getMinBuildHeight
	w_ ()I getHeight
net/minecraft/server/level/WorldProviderNormal net/minecraft/server/level/PlayerRespawnLogic
	a (Lnet/minecraft/server/level/WorldServer;II)Lnet/minecraft/core/BlockPosition; getOverworldRespawnPos
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/ChunkCoordIntPair;)Lnet/minecraft/core/BlockPosition; getSpawnPosInChunk
net/minecraft/server/level/WorldServer net/minecraft/server/level/ServerLevel
	C THUNDER_DELAY
	D LOGGER
	E EMPTY_TIME_NO_TICK
	F MAX_SCHEDULED_TICKS_PER_TICK
	G players
	H chunkSource
	I server
	J serverLevelData
	K entityTickList
	L entityManager
	M gameEventDispatcher
	N sleepStatus
	O emptyTime
	P portalForcer
	Q blockTicks
	R fluidTicks
	S navigatingMobs
	T isUpdatingNavigations
	U blockEvents
	V blockEventsToReschedule
	W handlingTick
	X customSpawners
	Y dragonFight
	Z dragonParts
	a END_SPAWN_POINT
	aa structureManager
	ab structureCheck
	ac tickTime
	b RAIN_DELAY
	c RAIN_DURATION
	d THUNDER_DURATION
	e noSave
	f raids
	A ()J getSeed
	B ()Lnet/minecraft/world/level/dimension/end/EnderDragonBattle; dragonFight
	C ()Lnet/minecraft/server/level/WorldServer; getLevel
	D ()Ljava/lang/String; getWatchdogStats
	E ()Lnet/minecraft/world/level/entity/LevelEntityGetter; getEntities
	E (Lnet/minecraft/core/BlockPosition;)Ljava/util/Optional; findLightningRod
	F ()Ljava/lang/String; gatherChunkSourceStats
	G ()Lnet/minecraft/world/flag/FeatureFlagSet; enabledFeatures
	H ()Lnet/minecraft/world/scores/Scoreboard; getScoreboard
	I ()Lnet/minecraft/world/level/chunk/IChunkProvider; getChunkSource
	J ()Lnet/minecraft/world/ticks/LevelTickAccess; getFluidTicks
	K ()Lnet/minecraft/world/ticks/LevelTickAccess; getBlockTicks
	a ()Lnet/minecraft/world/level/StructureManager; structureManager
	a (I)Lnet/minecraft/world/entity/Entity; getEntity
	a (III)Lnet/minecraft/core/Holder; getUncachedNoiseBiome
	a (IIZ)Z setChunkForced
	a (IIZZ)V setWeatherParameters
	a (ILnet/minecraft/core/BlockPosition;I)V destroyBlockProgress
	a (J)Z shouldTickBlocksAt
	a (Ljava/io/Writer;)V dumpBlockEntityTickers
	a (Ljava/io/Writer;Ljava/lang/Iterable;)V dumpEntities
	a (Ljava/lang/Iterable;Ljava/util/function/Function;)Ljava/lang/String; getTypeCount
	a (Ljava/lang/String;)Lnet/minecraft/world/level/saveddata/maps/WorldMap; getMapData
	a (Ljava/lang/String;Lnet/minecraft/world/level/saveddata/maps/WorldMap;)V setMapData
	a (Ljava/nio/file/Path;)V saveDebugReport
	a (Ljava/util/UUID;)Lnet/minecraft/world/entity/Entity; getEntity
	a (Ljava/util/function/BooleanSupplier;)V tick
	a (Ljava/util/function/Predicate;)Ljava/util/List; getPlayers
	a (Ljava/util/function/Predicate;I)Ljava/util/List; getPlayers
	a (Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPosition;III)Lcom/mojang/datafixers/util/Pair; findClosestBiome3d
	a (Ljava/util/stream/Stream;)V addLegacyChunkEntities
	a (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/core/BlockPosition; findLightningTargetAround
	a (Lnet/minecraft/core/BlockPosition;F)V setDefaultSpawnPos
	a (Lnet/minecraft/core/BlockPosition;I)Z isCloseToVillage
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;)V updateNeighborsAt
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;II)V blockEvent
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;)V neighborChanged
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/EnumDirection;)V updateNeighborsAtExceptFromFacing
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;)V onBlockStateChange
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;I)V sendBlockUpdated
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/material/FluidType;)V tickFluid
	a (Lnet/minecraft/core/EnumDirection;Z)F getShade
	a (Lnet/minecraft/core/SectionPosition;)Z isVillage
	a (Lnet/minecraft/core/particles/ParticleParam;DDDIDDDD)I sendParticles
	a (Lnet/minecraft/server/level/EntityPlayer;)V addDuringCommandTeleport
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/core/particles/ParticleParam;ZDDDIDDDD)Z sendParticles
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/entity/Entity$RemovalReason;)V removePlayerImmediately
	a (Lnet/minecraft/server/level/EntityPlayer;ZDDDLnet/minecraft/network/protocol/Packet;)Z sendParticles
	a (Lnet/minecraft/server/level/WorldServer;)V makeObsidianPlatform
	a (Lnet/minecraft/tags/TagKey;Lnet/minecraft/core/BlockPosition;IZ)Lnet/minecraft/core/BlockPosition; findNearestMapStructure
	a (Lnet/minecraft/util/IProgressUpdate;ZZ)V save
	a (Lnet/minecraft/world/entity/Entity;)V tickNonPassenger
	a (Lnet/minecraft/world/entity/Entity;B)V broadcastEntityEvent
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/damagesource/DamageSource;)V broadcastDamageEvent
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/level/ExplosionDamageCalculator;DDDFZLcmi$a;)Lnet/minecraft/world/level/Explosion; explode
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)V tickPassenger
	a (Lnet/minecraft/world/entity/ai/village/ReputationEvent;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/ReputationHandler;)V onReputationEvent
	a (Lnet/minecraft/world/entity/player/EntityHuman;DDDLnet/minecraft/core/Holder;Lnet/minecraft/sounds/SoundCategory;FFJ)V playSeededSound
	a (Lnet/minecraft/world/entity/player/EntityHuman;ILnet/minecraft/core/BlockPosition;I)V levelEvent
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/core/BlockPosition;)Z mayInteract
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Holder;Lnet/minecraft/sounds/SoundCategory;FFJ)V playSeededSound
	a (Lnet/minecraft/world/level/BlockActionData;)Z doBlockEvent
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;)Z isNaturalSpawningAllowed
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/world/level/chunk/Chunk;)V unload
	a (Lnet/minecraft/world/level/chunk/Chunk;I)V tickChunk
	a (Lnet/minecraft/world/level/chunk/IChunkAccess;)V onStructureStartsAvailable
	a (Lnet/minecraft/world/level/entity/EntityTypeTest;Ljava/util/function/Predicate;)Ljava/util/List; getEntities
	a (Lnet/minecraft/world/level/entity/EntityTypeTest;Ljava/util/function/Predicate;Ljava/util/List;)V getEntities
	a (Lnet/minecraft/world/level/entity/EntityTypeTest;Ljava/util/function/Predicate;Ljava/util/List;I)V getEntities
	a (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/phys/Vec3D;Ldga$a;)V gameEvent
	a (Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)V clearBlockEvents
	a (ZZ)V tickCustomSpawners
	ao ()V wakeUpAllPlayers
	ap ()V announceSleepStatus
	aq ()V advanceWeatherCycle
	ar ()V resetWeatherCycle
	as ()V saveLevelData
	at ()V runBlockEvents
	b ()V tickTime
	b (I)Lnet/minecraft/world/entity/Entity; getEntityOrPart
	b (ILnet/minecraft/core/BlockPosition;I)V globalLevelEvent
	b (J)V setDayTime
	b (Ljava/util/stream/Stream;)V addWorldGenChunkEntities
	b (Lnet/minecraft/core/BlockPosition;)Z isVillage
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;)V blockUpdated
	b (Lnet/minecraft/core/SectionPosition;)I sectionsToVillage
	b (Lnet/minecraft/server/level/EntityPlayer;)V addDuringPortalTeleport
	b (Lnet/minecraft/world/entity/Entity;)Z addFreshEntity
	b (Lnet/minecraft/world/level/chunk/Chunk;)V startTickingChunk
	c ()Z isHandlingTick
	c (J)Z areEntitiesLoaded
	c (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/entity/raid/Raid; getRaidAt
	c (Lnet/minecraft/server/level/EntityPlayer;)V addNewPlayer
	c (Lnet/minecraft/world/entity/Entity;)Z addWithUUID
	d ()Z canSleepThroughNights
	d (J)Z isPositionTickingWithEntitiesLoaded
	d (Lnet/minecraft/core/BlockPosition;)Z isRaided
	d (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;)V tickBlock
	d (Lnet/minecraft/server/level/EntityPlayer;)V addRespawnedPlayer
	d (Lnet/minecraft/world/entity/Entity;)V addDuringTeleport
	e ()V updateSleepingPlayerList
	e (Lnet/minecraft/core/BlockPosition;)Z isPositionEntityTicking
	e (Lnet/minecraft/server/level/EntityPlayer;)V addPlayer
	e (Lnet/minecraft/world/entity/Entity;)Z tryAddFreshEntityWithPassengers
	f ()Lnet/minecraft/server/ScoreboardServer; getScoreboard
	f (Lnet/minecraft/core/BlockPosition;)Z isNaturalSpawningAllowed
	g ()V resetEmptyTime
	h ()Ljava/util/List; getDragons
	i ()Lnet/minecraft/server/level/EntityPlayer; getRandomPlayer
	i (Lnet/minecraft/world/entity/Entity;)Z shouldDiscardEntity
	j ()I getLogicalHeight
	j (Lnet/minecraft/world/entity/Entity;)Z addEntity
	k ()Lnet/minecraft/server/level/ChunkProviderServer; getChunkSource
	l ()Lnet/minecraft/world/ticks/TickListServer; getBlockTicks
	m ()Lnet/minecraft/world/ticks/TickListServer; getFluidTicks
	n ()Lnet/minecraft/server/MinecraftServer; getServer
	o ()Lnet/minecraft/world/level/portal/PortalTravelAgent; getPortalForcer
	p ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager; getStructureManager
	q ()Lnet/minecraft/world/item/crafting/CraftingManager; getRecipeManager
	r ()Z noSave
	s ()Lnet/minecraft/world/level/storage/WorldPersistentData; getDataStorage
	t ()I getFreeMapId
	u ()Lit/unimi/dsi/fastutil/longs/LongSet; getForcedChunks
	v ()Ljava/util/List; players
	w ()Lnet/minecraft/world/entity/ai/village/poi/VillagePlace; getPoiManager
	x ()Lnet/minecraft/world/entity/raid/PersistentRaid; getRaids
	y ()Ljava/lang/Iterable; getAllEntities
	z ()Z isFlat
net/minecraft/server/level/progress/WorldLoadListener net/minecraft/server/level/progress/ChunkProgressListener
	a ()V start
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;)V updateSpawnPos
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/world/level/chunk/ChunkStatus;)V onStatusChange
	b ()V stop
net/minecraft/server/level/progress/WorldLoadListenerFactory net/minecraft/server/level/progress/ChunkProgressListenerFactory
net/minecraft/server/level/progress/WorldLoadListenerLogger net/minecraft/server/level/progress/LoggerChunkProgressListener
	a LOGGER
	b maxCount
	c count
	d startTime
	e nextTickTime
	a ()V start
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;)V updateSpawnPos
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/world/level/chunk/ChunkStatus;)V onStatusChange
	b ()V stop
	c ()I getProgress
net/minecraft/server/network/HandshakeListener net/minecraft/server/network/ServerHandshakePacketListenerImpl
	a IGNORE_STATUS_REASON
	b server
	c connection
	a ()Z isAcceptingMessages
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V onDisconnect
	a (Lnet/minecraft/network/protocol/handshake/PacketHandshakingInSetProtocol;)V handleIntention
net/minecraft/server/network/ITextFilter net/minecraft/server/network/TextFilter
	a DUMMY
	a ()V join
	a (Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; processStreamMessage
	a (Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; processMessageBundle
	b ()V leave
net/minecraft/server/network/LegacyPingHandler net/minecraft/server/network/LegacyQueryHandler
	a FAKE_PROTOCOL_VERSION
	b LOGGER
	c serverConnectionListener
	a (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;)V sendFlushAndClose
	a (Ljava/lang/String;)Lio/netty/buffer/ByteBuf; createReply
net/minecraft/server/network/LoginListener net/minecraft/server/network/ServerLoginPacketListenerImpl
	a UNIQUE_THREAD_ID
	b LOGGER
	c MAX_TICKS_BEFORE_LOGIN
	d RANDOM
	e challenge
	f server
	g connection
	h state
	i tick
	j gameProfile
	k serverId
	l delayedAcceptPlayer
	a ()Z isAcceptingMessages
	a (Lcom/mojang/authlib/GameProfile;)Lcom/mojang/authlib/GameProfile; createFakeProfile
	a (Ljava/lang/String;)Z isValidUsername
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V onDisconnect
	a (Lnet/minecraft/network/protocol/login/PacketLoginInCustomPayload;)V handleCustomQueryPacket
	a (Lnet/minecraft/network/protocol/login/PacketLoginInEncryptionBegin;)V handleKey
	a (Lnet/minecraft/network/protocol/login/PacketLoginInStart;)V handleHello
	a (Lnet/minecraft/server/level/EntityPlayer;)V placeNewPlayer
	b (Lnet/minecraft/network/chat/IChatBaseComponent;)V disconnect
	c ()V tick
	d ()V handleAcceptedLogin
	e ()Ljava/lang/String; getUserName
net/minecraft/server/network/LoginListener$EnumProtocolState net/minecraft/server/network/ServerLoginPacketListenerImpl$State
	a HELLO
	b KEY
	c AUTHENTICATING
	d NEGOTIATING
	e READY_TO_ACCEPT
	f DELAY_ACCEPT
	g ACCEPTED
	h $VALUES
	a ()[Lnet/minecraft/server/network/LoginListener$EnumProtocolState; $values
net/minecraft/server/network/PacketStatusListener net/minecraft/server/network/ServerStatusPacketListenerImpl
	a DISCONNECT_REASON
	b status
	c connection
	d hasRequestedStatus
	a ()Z isAcceptingMessages
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V onDisconnect
	a (Lnet/minecraft/network/protocol/status/PacketStatusInPing;)V handlePingRequest
	a (Lnet/minecraft/network/protocol/status/PacketStatusInStart;)V handleStatusRequest
net/minecraft/server/network/PlayerConnection net/minecraft/server/network/ServerGamePacketListenerImpl
	A vehicleLastGoodX
	B vehicleLastGoodY
	C vehicleLastGoodZ
	D awaitingPositionFromClient
	E awaitingTeleport
	F awaitingTeleportTime
	G clientIsFloating
	H aboveGroundTickCount
	I clientVehicleIsFloating
	J aboveGroundVehicleTickCount
	K receivedMovePacketCount
	L knownMovePacketCount
	M lastChatTimeStamp
	N chatSession
	O signedMessageDecoder
	P lastSeenMessages
	Q messageSignatureCache
	R chatMessageChain
	a MAX_INTERACTION_DISTANCE
	b player
	c LOGGER
	d LATENCY_CHECK_INTERVAL
	e NO_BLOCK_UPDATES_TO_ACK
	f TRACKED_MESSAGE_DISCONNECT_THRESHOLD
	g CHAT_VALIDATION_FAILED
	h connection
	i server
	j tickCount
	k ackBlockChangesUpTo
	l keepAliveTime
	m keepAlivePending
	n keepAliveChallenge
	o chatSpamTickCount
	p dropSpamTickCount
	q firstGoodX
	r firstGoodY
	s firstGoodZ
	t lastGoodX
	u lastGoodY
	v lastGoodZ
	w lastVehicle
	x vehicleFirstGoodX
	y vehicleFirstGoodY
	z vehicleFirstGoodZ
	a ()Z isAcceptingMessages
	a (D)D clampHorizontal
	a (DDDFF)V teleport
	a (DDDFFLjava/util/Set;)V teleport
	a (I)V ackBlockChangesUpTo
	a (Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/util/concurrent/CompletableFuture; filterTextPacket
	a (Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; filterTextPacket
	a (Ljava/lang/String;Ljava/time/Instant;Ltp$b;)Ljava/util/Optional; tryHandleChat
	a (Ljava/time/Instant;)Z updateChatOrder
	a (Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; filterTextPacket
	a (Ljava/util/List;I)V updateBookContents
	a (Ljava/util/List;Ljava/util/function/UnaryOperator;Lnet/minecraft/world/item/ItemStack;)V updateBookPages
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V onDisconnect
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Ltf$a;)V sendDisguisedChatMessage
	a (Lnet/minecraft/network/chat/PlayerChatMessage;)V addPendingMessage
	a (Lnet/minecraft/network/chat/PlayerChatMessage;Ltf$a;)V sendPlayerChatMessage
	a (Lnet/minecraft/network/chat/RemoteChatSession;)V resetPlayerChatState
	a (Lnet/minecraft/network/protocol/Packet;)V send
	a (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/network/PacketSendListener;)V send
	a (Lnet/minecraft/network/protocol/game/PacketPlayInAbilities;)V handlePlayerAbilities
	a (Lnet/minecraft/network/protocol/game/PacketPlayInAdvancements;)V handleSeenAdvancements
	a (Lnet/minecraft/network/protocol/game/PacketPlayInArmAnimation;)V handleAnimate
	a (Lnet/minecraft/network/protocol/game/PacketPlayInAutoRecipe;)V handlePlaceRecipe
	a (Lnet/minecraft/network/protocol/game/PacketPlayInBEdit;)V handleEditBook
	a (Lnet/minecraft/network/protocol/game/PacketPlayInBeacon;)V handleSetBeaconPacket
	a (Lnet/minecraft/network/protocol/game/PacketPlayInBlockDig;)V handlePlayerAction
	a (Lnet/minecraft/network/protocol/game/PacketPlayInBlockPlace;)V handleUseItem
	a (Lnet/minecraft/network/protocol/game/PacketPlayInBoatMove;)V handlePaddleBoat
	a (Lnet/minecraft/network/protocol/game/PacketPlayInChat;)V handleChat
	a (Lnet/minecraft/network/protocol/game/PacketPlayInChat;Lnet/minecraft/network/chat/LastSeenMessages;)Lnet/minecraft/network/chat/PlayerChatMessage; getSignedMessage
	a (Lnet/minecraft/network/protocol/game/PacketPlayInClientCommand;)V handleClientCommand
	a (Lnet/minecraft/network/protocol/game/PacketPlayInCloseWindow;)V handleContainerClose
	a (Lnet/minecraft/network/protocol/game/PacketPlayInCustomPayload;)V handleCustomPayload
	a (Lnet/minecraft/network/protocol/game/PacketPlayInDifficultyChange;)V handleChangeDifficulty
	a (Lnet/minecraft/network/protocol/game/PacketPlayInDifficultyLock;)V handleLockDifficulty
	a (Lnet/minecraft/network/protocol/game/PacketPlayInEnchantItem;)V handleContainerButtonClick
	a (Lnet/minecraft/network/protocol/game/PacketPlayInEntityAction;)V handlePlayerCommand
	a (Lnet/minecraft/network/protocol/game/PacketPlayInEntityNBTQuery;)V handleEntityTagQuery
	a (Lnet/minecraft/network/protocol/game/PacketPlayInFlying;)V handleMovePlayer
	a (Lnet/minecraft/network/protocol/game/PacketPlayInHeldItemSlot;)V handleSetCarriedItem
	a (Lnet/minecraft/network/protocol/game/PacketPlayInItemName;)V handleRenameItem
	a (Lnet/minecraft/network/protocol/game/PacketPlayInJigsawGenerate;)V handleJigsawGenerate
	a (Lnet/minecraft/network/protocol/game/PacketPlayInKeepAlive;)V handleKeepAlive
	a (Lnet/minecraft/network/protocol/game/PacketPlayInPickItem;)V handlePickItem
	a (Lnet/minecraft/network/protocol/game/PacketPlayInRecipeDisplayed;)V handleRecipeBookSeenRecipePacket
	a (Lnet/minecraft/network/protocol/game/PacketPlayInRecipeSettings;)V handleRecipeBookChangeSettingsPacket
	a (Lnet/minecraft/network/protocol/game/PacketPlayInResourcePackStatus;)V handleResourcePackResponse
	a (Lnet/minecraft/network/protocol/game/PacketPlayInSetCommandBlock;)V handleSetCommandBlock
	a (Lnet/minecraft/network/protocol/game/PacketPlayInSetCommandMinecart;)V handleSetCommandMinecart
	a (Lnet/minecraft/network/protocol/game/PacketPlayInSetCreativeSlot;)V handleSetCreativeModeSlot
	a (Lnet/minecraft/network/protocol/game/PacketPlayInSetJigsaw;)V handleSetJigsawBlock
	a (Lnet/minecraft/network/protocol/game/PacketPlayInSettings;)V handleClientInformation
	a (Lnet/minecraft/network/protocol/game/PacketPlayInSpectate;)V handleTeleportToEntityPacket
	a (Lnet/minecraft/network/protocol/game/PacketPlayInSteerVehicle;)V handlePlayerInput
	a (Lnet/minecraft/network/protocol/game/PacketPlayInStruct;)V handleSetStructureBlock
	a (Lnet/minecraft/network/protocol/game/PacketPlayInTabComplete;)V handleCustomCommandSuggestions
	a (Lnet/minecraft/network/protocol/game/PacketPlayInTeleportAccept;)V handleAcceptTeleportPacket
	a (Lnet/minecraft/network/protocol/game/PacketPlayInTileNBTQuery;)V handleBlockEntityTagQuery
	a (Lnet/minecraft/network/protocol/game/PacketPlayInTrSel;)V handleSelectTrade
	a (Lnet/minecraft/network/protocol/game/PacketPlayInUpdateSign;)V handleSignUpdate
	a (Lnet/minecraft/network/protocol/game/PacketPlayInUpdateSign;Ljava/util/List;)V updateSignText
	a (Lnet/minecraft/network/protocol/game/PacketPlayInUseEntity;)V handleInteract
	a (Lnet/minecraft/network/protocol/game/PacketPlayInUseItem;)V handleUseItemOn
	a (Lnet/minecraft/network/protocol/game/PacketPlayInVehicleMove;)V handleMoveVehicle
	a (Lnet/minecraft/network/protocol/game/PacketPlayInWindowClick;)V handleContainerClick
	a (Lnet/minecraft/network/protocol/game/ServerboundChatAckPacket;)V handleChatAck
	a (Lnet/minecraft/network/protocol/game/ServerboundChatCommandPacket;)V handleChatCommand
	a (Lnet/minecraft/network/protocol/game/ServerboundChatCommandPacket;Lnet/minecraft/network/chat/LastSeenMessages;)V performChatCommand
	a (Lnet/minecraft/network/protocol/game/ServerboundChatCommandPacket;Lnet/minecraft/network/chat/SignableCommand;Lnet/minecraft/network/chat/LastSeenMessages;)Ljava/util/Map; collectSignedArguments
	a (Lnet/minecraft/network/protocol/game/ServerboundChatSessionUpdatePacket;)V handleChatSessionUpdate
	a (Lnet/minecraft/network/protocol/game/ServerboundPongPacket;)V handlePong
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/item/ItemStack;)Z wasBlockPlacementAttempt
	a (Lnet/minecraft/server/network/FilteredText;Ljava/util/List;I)V signBook
	a (Lnet/minecraft/world/entity/Entity;)Z noBlocksAround
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/world/phys/AxisAlignedBB;)Z isPlayerCollidingWithAnythingNew
	a (Ltp$b;)Ljava/util/Optional; unpackAndApplyLastSeen
	a (Luc$a;)V handleMessageDecodeFailure
	b (D)D clampVertical
	b (DDDFF)Z containsInvalidValues
	b (Ljava/lang/String;)Lcom/mojang/brigadier/ParseResults; parseCommand
	b (Lnet/minecraft/network/chat/IChatBaseComponent;)V disconnect
	b (Lnet/minecraft/network/chat/PlayerChatMessage;)V broadcastChatMessage
	c ()V tick
	c (Ljava/lang/String;)Z isChatMessageIllegal
	d ()V resetPosition
	e ()Ljava/net/SocketAddress; getRemoteAddress
	f ()Lnet/minecraft/server/level/EntityPlayer; getPlayer
	g ()Z isSingleplayerOwner
	h ()V detectRateSpam
net/minecraft/server/network/ServerConnection net/minecraft/server/network/ServerConnectionListener
	a SERVER_EVENT_GROUP
	b SERVER_EPOLL_EVENT_GROUP
	c running
	d LOGGER
	e server
	f channels
	g connections
	a ()Ljava/net/SocketAddress; startMemoryChannel
	a (Ljava/net/InetAddress;I)V startTcpServerListener
	b ()V stop
	c ()V tick
	d ()Lnet/minecraft/server/MinecraftServer; getServer
	e ()Ljava/util/List; getConnections
net/minecraft/server/network/ServerConnection$LatencySimulator net/minecraft/server/network/ServerConnectionListener$LatencySimulator
	a TIMER
	b delay
	c jitter
	d queuedMessages
	a (Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)V delayDownstream
	a (Lio/netty/util/Timeout;)V onTimeout
net/minecraft/server/network/ServerConnection$LatencySimulator$DelayedMessage net/minecraft/server/network/ServerConnectionListener$LatencySimulator$DelayedMessage
	a ctx
	b msg
net/minecraft/server/network/TextFilter net/minecraft/server/network/TextFilterClient
	a LOGGER
	b WORKER_COUNT
	c THREAD_FACTORY
	d DEFAULT_ENDPOINT
	e chatEndpoint
	f chatEncoder
	g joinEndpoint
	h joinEncoder
	i leaveEndpoint
	j leaveEncoder
	k authKey
	l chatIgnoreStrategy
	m workerPool
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; getEndpointFromConfig
	a (Lcom/google/gson/JsonObject;Ljava/net/URL;)Lcom/google/gson/JsonObject; processRequestResponse
	a (Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/server/network/ITextFilter; createContext
	a (Lcom/mojang/authlib/GameProfile;Ljava/lang/String;Lajo$a;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; requestMessageProcessing
	a (Lcom/mojang/authlib/GameProfile;Ljava/net/URL;Lajo$b;Ljava/util/concurrent/Executor;)V processJoinOrLeave
	a (Ljava/io/InputStream;)V drainStream
	a (Ljava/lang/String;)Lnet/minecraft/server/network/TextFilter; createFromConfig
	a (Ljava/lang/String;Lcom/google/gson/JsonArray;Lajo$a;)Lnet/minecraft/network/chat/FilterMask; parseMask
	a (Ljava/net/URI;Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/String;)Ljava/net/URL; getEndpoint
	b (Lcom/google/gson/JsonObject;Ljava/net/URL;)V processRequest
	c (Lcom/google/gson/JsonObject;Ljava/net/URL;)Ljava/net/HttpURLConnection; makeRequest
net/minecraft/server/packs/EnumResourcePackType net/minecraft/server/packs/PackType
	a CLIENT_RESOURCES
	b SERVER_DATA
	c directory
	d $VALUES
	a ()Ljava/lang/String; getDirectory
	b ()[Lnet/minecraft/server/packs/EnumResourcePackType; $values
net/minecraft/server/packs/IResourcePack net/minecraft/server/packs/PackResources
	b METADATA_EXTENSION
	c PACK_META
	a ()Ljava/lang/String; packId
	a (Lnet/minecraft/server/packs/EnumResourcePackType;)Ljava/util/Set; getNamespaces
	a (Lnet/minecraft/server/packs/EnumResourcePackType;Ljava/lang/String;Ljava/lang/String;Lajv$a;)V listResources
	a (Lnet/minecraft/server/packs/EnumResourcePackType;Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/server/packs/resources/IoSupplier; getResource
	a (Lnet/minecraft/server/packs/metadata/ResourcePackMetaParser;)Ljava/lang/Object; getMetadataSection
	a ([Ljava/lang/String;)Lnet/minecraft/server/packs/resources/IoSupplier; getRootResource
	b ()Z isBuiltin
net/minecraft/server/packs/ResourcePackAbstract net/minecraft/server/packs/AbstractPackResources
	a LOGGER
	d name
	e isBuiltin
	a ()Ljava/lang/String; packId
	a (Lnet/minecraft/server/packs/metadata/ResourcePackMetaParser;)Ljava/lang/Object; getMetadataSection
	a (Lnet/minecraft/server/packs/metadata/ResourcePackMetaParser;Ljava/io/InputStream;)Ljava/lang/Object; getMetadataFromStream
	b ()Z isBuiltin
net/minecraft/server/packs/ResourcePackFile net/minecraft/server/packs/FilePackResources
	a SPLITTER
	d LOGGER
	e file
	f zipFile
	g failedToLoad
	a (Ljava/lang/String;)Lnet/minecraft/server/packs/resources/IoSupplier; getResource
	a (Lnet/minecraft/server/packs/EnumResourcePackType;)Ljava/util/Set; getNamespaces
	a (Lnet/minecraft/server/packs/EnumResourcePackType;Ljava/lang/String;Ljava/lang/String;Lajv$a;)V listResources
	a (Lnet/minecraft/server/packs/EnumResourcePackType;Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/server/packs/resources/IoSupplier; getResource
	a ([Ljava/lang/String;)Lnet/minecraft/server/packs/resources/IoSupplier; getRootResource
	b (Lnet/minecraft/server/packs/EnumResourcePackType;Lnet/minecraft/resources/MinecraftKey;)Ljava/lang/String; getPathFromLocation
	c ()Ljava/util/zip/ZipFile; getOrCreateZipFile
net/minecraft/server/packs/ResourcePackVanilla net/minecraft/server/packs/VanillaPackResources
	a LOGGER
	d metadata
	e namespaces
	f rootPaths
	g pathsForType
	a ()Ljava/lang/String; packId
	a (Lajv$a;Ljava/lang/String;Ljava/nio/file/Path;Ljava/util/List;)V getResources
	a (Lnet/minecraft/server/packs/EnumResourcePackType;)Ljava/util/Set; getNamespaces
	a (Lnet/minecraft/server/packs/EnumResourcePackType;Ljava/lang/String;Ljava/lang/String;Lajv$a;)V listResources
	a (Lnet/minecraft/server/packs/EnumResourcePackType;Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/server/packs/resources/IoSupplier; getResource
	a (Lnet/minecraft/server/packs/EnumResourcePackType;Lnet/minecraft/resources/MinecraftKey;Ljava/util/function/Consumer;)V listRawPaths
	a (Lnet/minecraft/server/packs/metadata/ResourcePackMetaParser;)Ljava/lang/Object; getMetadataSection
	a ([Ljava/lang/String;)Lnet/minecraft/server/packs/resources/IoSupplier; getRootResource
	b ()Z isBuiltin
	c ()Lnet/minecraft/server/packs/resources/ResourceProvider; asProvider
net/minecraft/server/packs/metadata/ResourcePackMetaParser net/minecraft/server/packs/metadata/MetadataSectionSerializer
	a ()Ljava/lang/String; getMetadataSectionName
	a (Lcom/google/gson/JsonObject;)Ljava/lang/Object; fromJson
net/minecraft/server/packs/metadata/pack/ResourcePackInfo net/minecraft/server/packs/metadata/pack/PackMetadataSection
	a TYPE
	b description
	c packFormat
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getDescription
	b ()I getPackFormat
net/minecraft/server/packs/metadata/pack/ResourcePackInfoDeserializer net/minecraft/server/packs/metadata/pack/PackMetadataSectionSerializer
	a ()Ljava/lang/String; getMetadataSectionName
	a (Lcom/google/gson/JsonObject;)Ljava/lang/Object; fromJson
	a (Ljava/lang/Object;)Lcom/google/gson/JsonObject; toJson
	a (Lnet/minecraft/server/packs/metadata/pack/ResourcePackInfo;)Lcom/google/gson/JsonObject; toJson
	b (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/packs/metadata/pack/ResourcePackInfo; fromJson
net/minecraft/server/packs/repository/EnumResourcePackVersion net/minecraft/server/packs/repository/PackCompatibility
	a TOO_OLD
	b TOO_NEW
	c COMPATIBLE
	d description
	e confirmation
	f $VALUES
	a ()Z isCompatible
	a (ILnet/minecraft/server/packs/EnumResourcePackType;)Lnet/minecraft/server/packs/repository/EnumResourcePackVersion; forFormat
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; getDescription
	c ()Lnet/minecraft/network/chat/IChatBaseComponent; getConfirmation
	d ()[Lnet/minecraft/server/packs/repository/EnumResourcePackVersion; $values
net/minecraft/server/packs/repository/ResourcePackLoader net/minecraft/server/packs/repository/Pack
	a LOGGER
	b id
	c resources
	d title
	e description
	f compatibility
	g requestedFeatures
	h defaultPosition
	i required
	j fixedPosition
	k packSource
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getTitle
	a (Ljava/lang/String;Lakq$c;)Lakq$a; readPackInfo
	a (Ljava/lang/String;Lnet/minecraft/network/chat/IChatBaseComponent;ZLakq$c;Lakq$a;Lnet/minecraft/server/packs/EnumResourcePackType;Lnet/minecraft/server/packs/repository/ResourcePackLoader$Position;ZLnet/minecraft/server/packs/repository/PackSource;)Lnet/minecraft/server/packs/repository/ResourcePackLoader; create
	a (Ljava/lang/String;Lnet/minecraft/network/chat/IChatBaseComponent;ZLakq$c;Lnet/minecraft/server/packs/EnumResourcePackType;Lnet/minecraft/server/packs/repository/ResourcePackLoader$Position;Lnet/minecraft/server/packs/repository/PackSource;)Lnet/minecraft/server/packs/repository/ResourcePackLoader; readMetaAndCreate
	a (Z)Lnet/minecraft/network/chat/IChatBaseComponent; getChatLink
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; getDescription
	c ()Lnet/minecraft/server/packs/repository/EnumResourcePackVersion; getCompatibility
	d ()Lnet/minecraft/world/flag/FeatureFlagSet; getRequestedFeatures
	e ()Lnet/minecraft/server/packs/IResourcePack; open
	f ()Ljava/lang/String; getId
	g ()Z isRequired
	h ()Z isFixedPosition
	i ()Lnet/minecraft/server/packs/repository/ResourcePackLoader$Position; getDefaultPosition
	j ()Lnet/minecraft/server/packs/repository/PackSource; getPackSource
net/minecraft/server/packs/repository/ResourcePackLoader$Position net/minecraft/server/packs/repository/Pack$Position
	a TOP
	b BOTTOM
	c $VALUES
	a ()Lnet/minecraft/server/packs/repository/ResourcePackLoader$Position; opposite
	a (Ljava/util/List;Ljava/lang/Object;Ljava/util/function/Function;Z)I insert
	b ()[Lnet/minecraft/server/packs/repository/ResourcePackLoader$Position; $values
net/minecraft/server/packs/repository/ResourcePackRepository net/minecraft/server/packs/repository/PackRepository
	a sources
	b available
	c selected
	a ()V reload
	a (Ljava/lang/String;)Z addPack
	a (Ljava/util/Collection;)V setSelected
	b ()Ljava/util/Collection; getAvailableIds
	b (Ljava/lang/String;)Z removePack
	b (Ljava/util/Collection;)Ljava/util/List; rebuildSelected
	c ()Ljava/util/Collection; getAvailablePacks
	c (Ljava/lang/String;)Lnet/minecraft/server/packs/repository/ResourcePackLoader; getPack
	c (Ljava/util/Collection;)Ljava/util/stream/Stream; getAvailablePacks
	d ()Ljava/util/Collection; getSelectedIds
	d (Ljava/lang/String;)Z isAvailable
	e ()Lnet/minecraft/world/flag/FeatureFlagSet; getRequestedFeatureFlags
	f ()Ljava/util/Collection; getSelectedPacks
	g ()Ljava/util/List; openAllSelected
	h ()Ljava/util/Map; discoverAvailable
net/minecraft/server/packs/repository/ResourcePackSource net/minecraft/server/packs/repository/RepositorySource
	a (Ljava/util/function/Consumer;)V loadPacks
net/minecraft/server/packs/repository/ResourcePackSourceFolder net/minecraft/server/packs/repository/FolderRepositorySource
	a LOGGER
	b folder
	c packType
	d packSource
	a (Ljava/nio/file/Path;)Ljava/lang/String; nameFromPath
	a (Ljava/nio/file/Path;Z)Lakq$c; detectPackResources
	a (Ljava/nio/file/Path;ZLjava/util/function/BiConsumer;)V discoverPacks
	a (Ljava/util/function/Consumer;)V loadPacks
net/minecraft/server/packs/repository/ResourcePackSourceVanilla net/minecraft/server/packs/repository/ServerPacksSource
	b VERSION_METADATA_SECTION
	c FEATURE_FLAGS_METADATA_SECTION
	d BUILT_IN_METADATA
	e VANILLA_NAME
	f PACKS_DIR
	a (Ljava/lang/String;)Lnet/minecraft/network/chat/IChatBaseComponent; getPackTitle
	a (Ljava/lang/String;Lakq$c;Lnet/minecraft/network/chat/IChatBaseComponent;)Lnet/minecraft/server/packs/repository/ResourcePackLoader; createBuiltinPack
	a (Ljava/nio/file/Path;)Lnet/minecraft/server/packs/repository/ResourcePackRepository; createPackRepository
	a (Lnet/minecraft/server/packs/IResourcePack;)Lnet/minecraft/server/packs/repository/ResourcePackLoader; createVanillaPack
	a (Lnet/minecraft/world/level/storage/Convertable$ConversionSession;)Lnet/minecraft/server/packs/repository/ResourcePackRepository; createPackRepository
	b ()Lnet/minecraft/server/packs/ResourcePackVanilla; createVanillaPackSource
net/minecraft/server/packs/resources/IReloadListener net/minecraft/server/packs/resources/PreparableReloadListener
	a (Lalb$a;Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;Lnet/minecraft/util/profiling/GameProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; reload
	c ()Ljava/lang/String; getName
net/minecraft/server/packs/resources/IReloadable net/minecraft/server/packs/resources/ReloadInstance
	a ()Ljava/util/concurrent/CompletableFuture; done
	b ()F getActualProgress
	c ()Z isDone
	d ()V checkExceptions
net/minecraft/server/packs/resources/IReloadableResourceManager net/minecraft/server/packs/resources/CloseableResourceManager
net/minecraft/server/packs/resources/IResource net/minecraft/server/packs/resources/Resource
	a source
	b streamSupplier
	c metadataSupplier
	d cachedMetadata
	a ()Lnet/minecraft/server/packs/IResourcePack; source
	b ()Ljava/lang/String; sourcePackId
	c ()Z isBuiltin
	d ()Ljava/io/InputStream; open
	e ()Ljava/io/BufferedReader; openAsReader
	f ()Lnet/minecraft/server/packs/resources/ResourceMetadata; metadata
net/minecraft/server/packs/resources/IResourceManager net/minecraft/server/packs/resources/ResourceManager
	a ()Ljava/util/Set; getNamespaces
	a (Lnet/minecraft/resources/MinecraftKey;)Ljava/util/List; getResourceStack
	b ()Ljava/util/stream/Stream; listPacks
	b (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map; listResources
	c (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map; listResourceStacks
net/minecraft/server/packs/resources/IResourceManager$Empty net/minecraft/server/packs/resources/ResourceManager$Empty
	a INSTANCE
	b $VALUES
	a ()Ljava/util/Set; getNamespaces
	a (Lnet/minecraft/resources/MinecraftKey;)Ljava/util/List; getResourceStack
	b ()Ljava/util/stream/Stream; listPacks
	b (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map; listResources
	c ()[Lnet/minecraft/server/packs/resources/IResourceManager$Empty; $values
	c (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map; listResourceStacks
net/minecraft/server/packs/resources/Reloadable net/minecraft/server/packs/resources/SimpleReloadInstance
	a allPreparations
	b allDone
	c PREPARATION_PROGRESS_WEIGHT
	d EXTRA_RELOAD_PROGRESS_WEIGHT
	e LISTENER_PROGRESS_WEIGHT
	f preparingListeners
	g listenerCount
	h startedReloads
	i finishedReloads
	j startedTaskCounter
	k doneTaskCounter
	a ()Ljava/util/concurrent/CompletableFuture; done
	a (Lnet/minecraft/server/packs/resources/IResourceManager;Ljava/util/List;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;)Lnet/minecraft/server/packs/resources/Reloadable; of
	a (Lnet/minecraft/server/packs/resources/IResourceManager;Ljava/util/List;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;Z)Lnet/minecraft/server/packs/resources/IReloadable; create
	b ()F getActualProgress
net/minecraft/server/packs/resources/ReloadableProfiled net/minecraft/server/packs/resources/ProfiledReloadInstance
	c LOGGER
	d total
	a (Ljava/util/List;)Ljava/util/List; finish
net/minecraft/server/packs/resources/ResourceDataAbstract net/minecraft/server/packs/resources/SimplePreparableReloadListener
	a (Lalb$a;Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;Lnet/minecraft/util/profiling/GameProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; reload
	a (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)V apply
	b (Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)Ljava/lang/Object; prepare
net/minecraft/server/packs/resources/ResourceDataJson net/minecraft/server/packs/resources/SimpleJsonResourceReloadListener
	a LOGGER
	b gson
	c directory
	a (Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)Ljava/util/Map; prepare
	b (Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)Ljava/lang/Object; prepare
net/minecraft/server/packs/resources/ResourceManager net/minecraft/server/packs/resources/MultiPackResourceManager
	a LOGGER
	b namespacedManagers
	c packs
	a ()Ljava/util/Set; getNamespaces
	a (Ljava/lang/String;)V checkTrailingDirectoryPath
	a (Lnet/minecraft/resources/MinecraftKey;)Ljava/util/List; getResourceStack
	a (Lnet/minecraft/server/packs/IResourcePack;)Lnet/minecraft/server/packs/resources/ResourceFilterSection; getPackFilterSection
	b ()Ljava/util/stream/Stream; listPacks
	b (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map; listResources
	c (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map; listResourceStacks
net/minecraft/server/packs/resources/ResourceManagerFallback net/minecraft/server/packs/resources/FallbackResourceManager
	a fallbacks
	b LOGGER
	c type
	d namespace
	a ()Ljava/util/Set; getNamespaces
	a (Laky$d;Ljava/lang/String;Ljava/util/function/Predicate;Ljava/util/Map;)V listPackResources
	a (Laky$d;Ljava/util/Map;)V applyPackFiltersToExistingResources
	a (Ljava/lang/String;Ljava/util/function/Predicate;)V pushFilterOnly
	a (Ljava/lang/String;Lnet/minecraft/server/packs/IResourcePack;Ljava/util/function/Predicate;)V pushInternal
	a (Lnet/minecraft/resources/MinecraftKey;)Ljava/util/List; getResourceStack
	a (Lnet/minecraft/resources/MinecraftKey;I)Lnet/minecraft/server/packs/resources/IoSupplier; createStackMetadataFinder
	a (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/server/packs/IResourcePack;Lnet/minecraft/server/packs/resources/IoSupplier;)Lnet/minecraft/server/packs/resources/IoSupplier; wrapForDebug
	a (Lnet/minecraft/server/packs/IResourcePack;)V push
	a (Lnet/minecraft/server/packs/IResourcePack;Ljava/util/function/Predicate;)V push
	a (Lnet/minecraft/server/packs/IResourcePack;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/server/packs/resources/IoSupplier;Lnet/minecraft/server/packs/resources/IoSupplier;)Lnet/minecraft/server/packs/resources/IResource; createResource
	a (Lnet/minecraft/server/packs/resources/IoSupplier;)Lnet/minecraft/server/packs/resources/IoSupplier; convertToMetadata
	b ()Ljava/util/stream/Stream; listPacks
	b (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map; listResources
	b (Lnet/minecraft/resources/MinecraftKey;)Z isMetadata
	b (Lnet/minecraft/server/packs/resources/IoSupplier;)Lnet/minecraft/server/packs/resources/ResourceMetadata; parseMetadata
	c (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map; listResourceStacks
	c (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/resources/MinecraftKey; getResourceLocationFromMetadata
	d (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/resources/MinecraftKey; getMetadataLocation
net/minecraft/server/players/ExpirableListEntry net/minecraft/server/players/BanListEntry
	a DATE_FORMAT
	b EXPIRES_NEVER
	c created
	d source
	e expires
	f reason
	a ()Ljava/util/Date; getCreated
	a (Lcom/google/gson/JsonObject;)V serialize
	b ()Ljava/lang/String; getSource
	c ()Ljava/util/Date; getExpires
	d ()Ljava/lang/String; getReason
	e ()Lnet/minecraft/network/chat/IChatBaseComponent; getDisplayName
	f ()Z hasExpired
net/minecraft/server/players/GameProfileBanEntry net/minecraft/server/players/UserBanListEntry
	a (Lcom/google/gson/JsonObject;)V serialize
	b (Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile; createGameProfile
	e ()Lnet/minecraft/network/chat/IChatBaseComponent; getDisplayName
net/minecraft/server/players/GameProfileBanList net/minecraft/server/players/UserBanList
	a ()[Ljava/lang/String; getUserList
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/players/JsonListEntry; createEntry
	a (Lcom/mojang/authlib/GameProfile;)Z isBanned
	a (Ljava/lang/Object;)Ljava/lang/String; getKeyForUser
	b (Lcom/mojang/authlib/GameProfile;)Ljava/lang/String; getKeyForUser
net/minecraft/server/players/IpBanEntry net/minecraft/server/players/IpBanListEntry
	a (Lcom/google/gson/JsonObject;)V serialize
	b (Lcom/google/gson/JsonObject;)Ljava/lang/String; createIpInfo
	e ()Lnet/minecraft/network/chat/IChatBaseComponent; getDisplayName
net/minecraft/server/players/JsonList net/minecraft/server/players/StoredUserList
	a LOGGER
	b GSON
	c file
	d map
	a ()[Ljava/lang/String; getUserList
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/players/JsonListEntry; createEntry
	a (Ljava/lang/Object;)Ljava/lang/String; getKeyForUser
	a (Lnet/minecraft/server/players/JsonListEntry;)V add
	b ()Ljava/io/File; getFile
	b (Ljava/lang/Object;)Lnet/minecraft/server/players/JsonListEntry; get
	b (Lnet/minecraft/server/players/JsonListEntry;)V remove
	c ()Z isEmpty
	c (Ljava/lang/Object;)V remove
	d ()Ljava/util/Collection; getEntries
	d (Ljava/lang/Object;)Z contains
	e ()V save
	f ()V load
	g ()V removeExpired
net/minecraft/server/players/JsonListEntry net/minecraft/server/players/StoredUserEntry
	a user
	a (Lcom/google/gson/JsonObject;)V serialize
	f ()Z hasExpired
	g ()Ljava/lang/Object; getUser
net/minecraft/server/players/NameReferencingFileConverter net/minecraft/server/players/OldUsersConverter
	a OLD_IPBANLIST
	b OLD_USERBANLIST
	c OLD_OPLIST
	d OLD_WHITELIST
	e LOGGER
	a ()Z areOldUserlistsRemoved
	a (Ljava/io/File;)V ensureDirectoryExists
	a (Ljava/io/File;Ljava/util/Map;)Ljava/util/List; readOldListFormat
	a (Ljava/lang/String;Ljava/util/Date;)Ljava/util/Date; parseDate
	a (Lnet/minecraft/server/MinecraftServer;)Z convertUserBanlist
	a (Lnet/minecraft/server/MinecraftServer;Ljava/lang/String;)Ljava/util/UUID; convertMobOwnerIfNecessary
	a (Lnet/minecraft/server/MinecraftServer;Ljava/util/Collection;Lcom/mojang/authlib/ProfileLookupCallback;)V lookupPlayers
	a (Lnet/minecraft/server/dedicated/DedicatedServer;)Z convertPlayers
	b (Ljava/io/File;)V renameOldFile
	b (Lnet/minecraft/server/MinecraftServer;)Z convertIpBanlist
	c (Lnet/minecraft/server/MinecraftServer;)Z convertOpsList
	d (Lnet/minecraft/server/MinecraftServer;)Z convertWhiteList
	e (Lnet/minecraft/server/MinecraftServer;)Z serverReadyAfterUserconversion
	f (Lnet/minecraft/server/MinecraftServer;)Z areOldPlayersConverted
	g (Lnet/minecraft/server/MinecraftServer;)Ljava/io/File; getWorldPlayersDirectory
net/minecraft/server/players/NameReferencingFileConverter$FileConversionException net/minecraft/server/players/OldUsersConverter$ConversionError
net/minecraft/server/players/OpList net/minecraft/server/players/ServerOpList
	a ()[Ljava/lang/String; getUserList
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/players/JsonListEntry; createEntry
	a (Lcom/mojang/authlib/GameProfile;)Z canBypassPlayerLimit
	a (Ljava/lang/Object;)Ljava/lang/String; getKeyForUser
	b (Lcom/mojang/authlib/GameProfile;)Ljava/lang/String; getKeyForUser
net/minecraft/server/players/OpListEntry net/minecraft/server/players/ServerOpListEntry
	a level
	b bypassesPlayerLimit
	a ()I getLevel
	a (Lcom/google/gson/JsonObject;)V serialize
	b ()Z getBypassesPlayerLimit
	b (Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile; createGameProfile
net/minecraft/server/players/UserCache net/minecraft/server/players/GameProfileCache
	a LOGGER
	b GAMEPROFILES_MRU_LIMIT
	c GAMEPROFILES_EXPIRATION_MONTHS
	d usesAuthentication
	e profilesByName
	f profilesByUUID
	g requests
	h profileRepository
	i gson
	j file
	k operationCount
	l executor
	a ()V clearExecutor
	a (I)Ljava/util/stream/Stream; getTopMRUProfiles
	a (Lcom/google/gson/JsonElement;Ljava/text/DateFormat;)Ljava/util/Optional; readGameProfile
	a (Lcom/mojang/authlib/GameProfile;)V add
	a (Lcom/mojang/authlib/GameProfileRepository;Ljava/lang/String;)Ljava/util/Optional; lookupGameProfile
	a (Ljava/lang/String;)Ljava/util/Optional; get
	a (Ljava/lang/String;Ljava/util/function/Consumer;)V getAsync
	a (Ljava/util/UUID;)Ljava/util/Optional; get
	a (Ljava/util/concurrent/Executor;)V setExecutor
	a (Lnet/minecraft/server/players/UserCache$UserCacheEntry;)V safeAdd
	a (Lnet/minecraft/server/players/UserCache$UserCacheEntry;Ljava/text/DateFormat;)Lcom/google/gson/JsonElement; writeGameProfile
	a (Z)V setUsesAuthentication
	b ()Ljava/util/List; load
	c ()V save
	d ()Z usesAuthentication
	e ()J getNextOperation
	f ()Ljava/text/DateFormat; createDateFormat
net/minecraft/server/players/UserCache$UserCacheEntry net/minecraft/server/players/GameProfileCache$GameProfileInfo
	a profile
	b expirationDate
	c lastAccess
	a ()Lcom/mojang/authlib/GameProfile; getProfile
	a (J)V setLastAccess
	b ()Ljava/util/Date; getExpirationDate
	c ()J getLastAccess
net/minecraft/server/players/WhiteList net/minecraft/server/players/UserWhiteList
	a ()[Ljava/lang/String; getUserList
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/players/JsonListEntry; createEntry
	a (Lcom/mojang/authlib/GameProfile;)Z isWhiteListed
	a (Ljava/lang/Object;)Ljava/lang/String; getKeyForUser
	b (Lcom/mojang/authlib/GameProfile;)Ljava/lang/String; getKeyForUser
net/minecraft/server/players/WhiteListEntry net/minecraft/server/players/UserWhiteListEntry
	a (Lcom/google/gson/JsonObject;)V serialize
	b (Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile; createGameProfile
net/minecraft/server/rcon/RemoteControlCommandListener net/minecraft/server/rcon/RconConsoleSource
	b RCON
	c RCON_COMPONENT
	d buffer
	e server
	M_ ()Z shouldInformAdmins
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V sendSystemMessage
	d_ ()Z acceptsSuccess
	e ()V prepareForCommand
	f ()Ljava/lang/String; getCommandResponse
	g ()Lnet/minecraft/commands/CommandListenerWrapper; createCommandSourceStack
	j_ ()Z acceptsFailure
net/minecraft/server/rcon/RemoteStatusReply net/minecraft/server/rcon/NetworkDataOutputStream
	a outputStream
	b dataOutputStream
	a ()[B toByteArray
	a (F)V writeFloat
	a (I)V write
	a (Ljava/lang/String;)V writeString
	a (S)V writeShort
	a ([B)V writeBytes
	b ()V reset
	b (I)V writeInt
net/minecraft/server/rcon/StatusChallengeUtils net/minecraft/server/rcon/PktUtils
	a MAX_PACKET_SIZE
	b HEX_CHAR
	a (B)Ljava/lang/String; toHexString
	a ([BI)I intFromByteArray
	a ([BII)Ljava/lang/String; stringFromByteArray
	b ([BII)I intFromByteArray
	c ([BII)I intFromNetworkByteArray
net/minecraft/server/rcon/thread/RemoteConnectionThread net/minecraft/server/rcon/thread/GenericThread
	a running
	b name
	c thread
	d LOGGER
	e UNIQUE_THREAD_ID
	f MAX_STOP_WAIT
	a ()Z start
	b ()V stop
	c ()Z isRunning
net/minecraft/server/rcon/thread/RemoteControlListener net/minecraft/server/rcon/thread/RconThread
	d LOGGER
	e socket
	f rconPassword
	g clients
	h serverInterface
	a (Ljava/net/ServerSocket;)V closeSocket
	a (Lnet/minecraft/server/IMinecraftServer;)Lnet/minecraft/server/rcon/thread/RemoteControlListener; create
	b ()V stop
	d ()V clearClients
net/minecraft/server/rcon/thread/RemoteControlSession net/minecraft/server/rcon/thread/RconClient
	d LOGGER
	e SERVERDATA_AUTH
	f SERVERDATA_EXECCOMMAND
	g SERVERDATA_RESPONSE_VALUE
	h SERVERDATA_AUTH_RESPONSE
	i SERVERDATA_AUTH_FAILURE
	j authed
	k client
	l buf
	m rconPassword
	n serverInterface
	a (IILjava/lang/String;)V send
	a (ILjava/lang/String;)V sendCmdResponse
	b ()V stop
	d ()V sendAuthFailure
	e ()V closeSocket
net/minecraft/server/rcon/thread/RemoteStatusListener net/minecraft/server/rcon/thread/QueryThreadGs4
	d LOGGER
	e GAME_TYPE
	f GAME_ID
	g CHALLENGE_CHECK_INTERVAL
	h RESPONSE_CACHE_TIME
	i lastChallengeCheck
	j port
	k serverPort
	l maxPlayers
	m serverName
	n worldName
	o socket
	p buffer
	q hostIp
	r serverIp
	s validChallenges
	t rulesResponse
	u lastRulesResponse
	v serverInterface
	a ()Z start
	a (Ljava/lang/Exception;)V recoverSocketError
	a (Ljava/net/DatagramPacket;)Z processPacket
	a (Ljava/net/SocketAddress;)[B getIdentBytes
	a (Lnet/minecraft/server/IMinecraftServer;)Lnet/minecraft/server/rcon/thread/RemoteStatusListener; create
	a ([BLjava/net/DatagramPacket;)V sendTo
	b (Ljava/net/DatagramPacket;)[B buildRuleResponse
	c (Ljava/net/DatagramPacket;)Ljava/lang/Boolean; validChallenge
	d ()V pruneChallenges
	d (Ljava/net/DatagramPacket;)V sendChallenge
	e ()Z initSocket
net/minecraft/server/rcon/thread/RemoteStatusListener$RemoteStatusChallenge net/minecraft/server/rcon/thread/QueryThreadGs4$RequestChallenge
	a time
	b challenge
	c identBytes
	d challengeBytes
	e ident
	a ()I getChallenge
	a (J)Ljava/lang/Boolean; before
	b ()[B getChallengeBytes
	c ()[B getIdentBytes
	d ()Ljava/lang/String; getIdent
net/minecraft/sounds/SoundCategory net/minecraft/sounds/SoundSource
	a MASTER
	b MUSIC
	c RECORDS
	d WEATHER
	e BLOCKS
	f HOSTILE
	g NEUTRAL
	h PLAYERS
	i AMBIENT
	j VOICE
	k name
	l $VALUES
	a ()Ljava/lang/String; getName
	b ()[Lnet/minecraft/sounds/SoundCategory; $values
net/minecraft/sounds/SoundEffect net/minecraft/sounds/SoundEvent
	a DIRECT_CODEC
	b CODEC
	c DEFAULT_RANGE
	d location
	e range
	f newSystem
	a ()Lnet/minecraft/resources/MinecraftKey; getLocation
	a (F)F getRange
	a (Lnet/minecraft/network/PacketDataSerializer;)V writeToNetwork
	a (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/sounds/SoundEffect; createVariableRangeEvent
	a (Lnet/minecraft/resources/MinecraftKey;F)Lnet/minecraft/sounds/SoundEffect; createFixedRangeEvent
	a (Lnet/minecraft/resources/MinecraftKey;Ljava/util/Optional;)Lnet/minecraft/sounds/SoundEffect; create
	b ()Ljava/util/Optional; fixedRange
	b (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/sounds/SoundEffect; readFromNetwork
net/minecraft/sounds/SoundEffects net/minecraft/sounds/SoundEvents
	A AMBIENT_UNDERWATER_LOOP_ADDITIONS
	AA ZOMBIE_DEATH
	AB ZOMBIE_DESTROY_EGG
	AC ZOMBIE_HORSE_AMBIENT
	AD ZOMBIE_HORSE_DEATH
	AE ZOMBIE_HORSE_HURT
	AF ZOMBIE_HURT
	AG ZOMBIE_INFECT
	AH ZOMBIFIED_PIGLIN_AMBIENT
	AI ZOMBIFIED_PIGLIN_ANGRY
	AJ ZOMBIFIED_PIGLIN_DEATH
	AK ZOMBIFIED_PIGLIN_HURT
	AL ZOMBIE_STEP
	AM ZOMBIE_VILLAGER_AMBIENT
	AN ZOMBIE_VILLAGER_CONVERTED
	AO ZOMBIE_VILLAGER_CURE
	AP ZOMBIE_VILLAGER_DEATH
	AQ ZOMBIE_VILLAGER_HURT
	AR ZOMBIE_VILLAGER_STEP
	Aa WOODEN_TRAPDOOR_OPEN
	Ab WOODEN_BUTTON_CLICK_OFF
	Ac WOODEN_BUTTON_CLICK_ON
	Ad WOODEN_PRESSURE_PLATE_CLICK_OFF
	Ae WOODEN_PRESSURE_PLATE_CLICK_ON
	Af WOOD_BREAK
	Ag WOOD_FALL
	Ah WOOD_HIT
	Ai WOOD_PLACE
	Aj WOOD_STEP
	Ak WOOL_BREAK
	Al WOOL_FALL
	Am WOOL_HIT
	An WOOL_PLACE
	Ao WOOL_STEP
	Ap ZOGLIN_AMBIENT
	Aq ZOGLIN_ANGRY
	Ar ZOGLIN_ATTACK
	As ZOGLIN_DEATH
	At ZOGLIN_HURT
	Au ZOGLIN_STEP
	Av ZOMBIE_AMBIENT
	Aw ZOMBIE_ATTACK_WOODEN_DOOR
	Ax ZOMBIE_ATTACK_IRON_DOOR
	Ay ZOMBIE_BREAK_WOODEN_DOOR
	Az ZOMBIE_CONVERTED_TO_DROWNED
	B AMBIENT_UNDERWATER_LOOP_ADDITIONS_RARE
	C AMBIENT_UNDERWATER_LOOP_ADDITIONS_ULTRA_RARE
	D AMETHYST_BLOCK_BREAK
	E AMETHYST_BLOCK_CHIME
	F AMETHYST_BLOCK_FALL
	G AMETHYST_BLOCK_HIT
	H AMETHYST_BLOCK_PLACE
	I AMETHYST_BLOCK_STEP
	J AMETHYST_CLUSTER_BREAK
	K AMETHYST_CLUSTER_FALL
	L AMETHYST_CLUSTER_HIT
	M AMETHYST_CLUSTER_PLACE
	N AMETHYST_CLUSTER_STEP
	O ANCIENT_DEBRIS_BREAK
	P ANCIENT_DEBRIS_STEP
	Q ANCIENT_DEBRIS_PLACE
	R ANCIENT_DEBRIS_HIT
	S ANCIENT_DEBRIS_FALL
	T ANVIL_BREAK
	U ANVIL_DESTROY
	V ANVIL_FALL
	W ANVIL_HIT
	X ANVIL_LAND
	Y ANVIL_PLACE
	Z ANVIL_STEP
	a ALLAY_AMBIENT_WITH_ITEM
	aA AXOLOTL_SWIM
	aB AZALEA_BREAK
	aC AZALEA_FALL
	aD AZALEA_HIT
	aE AZALEA_PLACE
	aF AZALEA_STEP
	aG AZALEA_LEAVES_BREAK
	aH AZALEA_LEAVES_FALL
	aI AZALEA_LEAVES_HIT
	aJ AZALEA_LEAVES_PLACE
	aK AZALEA_LEAVES_STEP
	aL BAMBOO_BREAK
	aM BAMBOO_FALL
	aN BAMBOO_HIT
	aO BAMBOO_PLACE
	aP BAMBOO_STEP
	aQ BAMBOO_SAPLING_BREAK
	aR BAMBOO_SAPLING_HIT
	aS BAMBOO_SAPLING_PLACE
	aT BAMBOO_WOOD_BREAK
	aU BAMBOO_WOOD_FALL
	aV BAMBOO_WOOD_HIT
	aW BAMBOO_WOOD_PLACE
	aX BAMBOO_WOOD_STEP
	aY BAMBOO_WOOD_DOOR_CLOSE
	aZ BAMBOO_WOOD_DOOR_OPEN
	aa ANVIL_USE
	ab ARMOR_EQUIP_CHAIN
	ac ARMOR_EQUIP_DIAMOND
	ad ARMOR_EQUIP_ELYTRA
	ae ARMOR_EQUIP_GENERIC
	af ARMOR_EQUIP_GOLD
	ag ARMOR_EQUIP_IRON
	ah ARMOR_EQUIP_LEATHER
	ai ARMOR_EQUIP_NETHERITE
	aj ARMOR_EQUIP_TURTLE
	ak ARMOR_STAND_BREAK
	al ARMOR_STAND_FALL
	am ARMOR_STAND_HIT
	an ARMOR_STAND_PLACE
	ao ARROW_HIT
	ap ARROW_HIT_PLAYER
	aq ARROW_SHOOT
	ar AXE_STRIP
	as AXE_SCRAPE
	at AXE_WAX_OFF
	au AXOLOTL_ATTACK
	av AXOLOTL_DEATH
	aw AXOLOTL_HURT
	ax AXOLOTL_IDLE_AIR
	ay AXOLOTL_IDLE_WATER
	az AXOLOTL_SPLASH
	b ALLAY_AMBIENT_WITHOUT_ITEM
	bA BEE_LOOP_AGGRESSIVE
	bB BEE_LOOP
	bC BEE_STING
	bD BEE_POLLINATE
	bE BEEHIVE_DRIP
	bF BEEHIVE_ENTER
	bG BEEHIVE_EXIT
	bH BEEHIVE_SHEAR
	bI BEEHIVE_WORK
	bJ BELL_BLOCK
	bK BELL_RESONATE
	bL BIG_DRIPLEAF_BREAK
	bM BIG_DRIPLEAF_FALL
	bN BIG_DRIPLEAF_HIT
	bO BIG_DRIPLEAF_PLACE
	bP BIG_DRIPLEAF_STEP
	bQ BLAZE_AMBIENT
	bR BLAZE_BURN
	bS BLAZE_DEATH
	bT BLAZE_HURT
	bU BLAZE_SHOOT
	bV BOAT_PADDLE_LAND
	bW BOAT_PADDLE_WATER
	bX BONE_BLOCK_BREAK
	bY BONE_BLOCK_FALL
	bZ BONE_BLOCK_HIT
	ba BAMBOO_WOOD_TRAPDOOR_CLOSE
	bb BAMBOO_WOOD_TRAPDOOR_OPEN
	bc BAMBOO_WOOD_BUTTON_CLICK_OFF
	bd BAMBOO_WOOD_BUTTON_CLICK_ON
	be BAMBOO_WOOD_PRESSURE_PLATE_CLICK_OFF
	bf BAMBOO_WOOD_PRESSURE_PLATE_CLICK_ON
	bg BAMBOO_WOOD_FENCE_GATE_CLOSE
	bh BAMBOO_WOOD_FENCE_GATE_OPEN
	bi BARREL_CLOSE
	bj BARREL_OPEN
	bk BASALT_BREAK
	bl BASALT_STEP
	bm BASALT_PLACE
	bn BASALT_HIT
	bo BASALT_FALL
	bp BAT_AMBIENT
	bq BAT_DEATH
	br BAT_HURT
	bs BAT_LOOP
	bt BAT_TAKEOFF
	bu BEACON_ACTIVATE
	bv BEACON_AMBIENT
	bw BEACON_DEACTIVATE
	bx BEACON_POWER_SELECT
	by BEE_DEATH
	bz BEE_HURT
	c ALLAY_DEATH
	cA BUCKET_FILL_LAVA
	cB BUCKET_FILL_POWDER_SNOW
	cC BUCKET_FILL_TADPOLE
	cD BUNDLE_DROP_CONTENTS
	cE BUNDLE_INSERT
	cF BUNDLE_REMOVE_ONE
	cG CAKE_ADD_CANDLE
	cH CALCITE_BREAK
	cI CALCITE_STEP
	cJ CALCITE_PLACE
	cK CALCITE_HIT
	cL CALCITE_FALL
	cM CAMEL_AMBIENT
	cN CAMEL_DASH
	cO CAMEL_DASH_READY
	cP CAMEL_DEATH
	cQ CAMEL_EAT
	cR CAMEL_HURT
	cS CAMEL_SADDLE
	cT CAMEL_SIT
	cU CAMEL_STAND
	cV CAMEL_STEP
	cW CAMEL_STEP_SAND
	cX CAMPFIRE_CRACKLE
	cY CANDLE_AMBIENT
	cZ CANDLE_BREAK
	ca BONE_BLOCK_PLACE
	cb BONE_BLOCK_STEP
	cc BONE_MEAL_USE
	cd BOOK_PAGE_TURN
	ce BOOK_PUT
	cf BLASTFURNACE_FIRE_CRACKLE
	cg BOTTLE_EMPTY
	ch BOTTLE_FILL
	ci BOTTLE_FILL_DRAGONBREATH
	cj BREWING_STAND_BREW
	ck BRUSH_BRUSHING
	cl BRUSH_BRUSH_SAND_COMPLETED
	cm BUBBLE_COLUMN_BUBBLE_POP
	cn BUBBLE_COLUMN_UPWARDS_AMBIENT
	co BUBBLE_COLUMN_UPWARDS_INSIDE
	cp BUBBLE_COLUMN_WHIRLPOOL_AMBIENT
	cq BUBBLE_COLUMN_WHIRLPOOL_INSIDE
	cr BUCKET_EMPTY
	cs BUCKET_EMPTY_AXOLOTL
	ct BUCKET_EMPTY_FISH
	cu BUCKET_EMPTY_LAVA
	cv BUCKET_EMPTY_POWDER_SNOW
	cw BUCKET_EMPTY_TADPOLE
	cx BUCKET_FILL
	cy BUCKET_FILL_AXOLOTL
	cz BUCKET_FILL_FISH
	d ALLAY_HURT
	dA CHERRY_WOOD_FALL
	dB CHERRY_WOOD_HIT
	dC CHERRY_WOOD_PLACE
	dD CHERRY_WOOD_STEP
	dE CHERRY_SAPLING_BREAK
	dF CHERRY_SAPLING_FALL
	dG CHERRY_SAPLING_HIT
	dH CHERRY_SAPLING_PLACE
	dI CHERRY_SAPLING_STEP
	dJ CHERRY_LEAVES_BREAK
	dK CHERRY_LEAVES_FALL
	dL CHERRY_LEAVES_HIT
	dM CHERRY_LEAVES_PLACE
	dN CHERRY_LEAVES_STEP
	dO CHERRY_WOOD_HANGING_SIGN_STEP
	dP CHERRY_WOOD_HANGING_SIGN_BREAK
	dQ CHERRY_WOOD_HANGING_SIGN_FALL
	dR CHERRY_WOOD_HANGING_SIGN_HIT
	dS CHERRY_WOOD_HANGING_SIGN_PLACE
	dT CHERRY_WOOD_DOOR_CLOSE
	dU CHERRY_WOOD_DOOR_OPEN
	dV CHERRY_WOOD_TRAPDOOR_CLOSE
	dW CHERRY_WOOD_TRAPDOOR_OPEN
	dX CHERRY_WOOD_BUTTON_CLICK_OFF
	dY CHERRY_WOOD_BUTTON_CLICK_ON
	dZ CHERRY_WOOD_PRESSURE_PLATE_CLICK_OFF
	da CANDLE_EXTINGUISH
	db CANDLE_FALL
	dc CANDLE_HIT
	dd CANDLE_PLACE
	de CANDLE_STEP
	df CAT_AMBIENT
	dg CAT_STRAY_AMBIENT
	dh CAT_DEATH
	di CAT_EAT
	dj CAT_HISS
	dk CAT_BEG_FOR_FOOD
	dl CAT_HURT
	dm CAT_PURR
	dn CAT_PURREOW
	do CAVE_VINES_BREAK
	dp CAVE_VINES_FALL
	dq CAVE_VINES_HIT
	dr CAVE_VINES_PLACE
	ds CAVE_VINES_STEP
	dt CAVE_VINES_PICK_BERRIES
	du CHAIN_BREAK
	dv CHAIN_FALL
	dw CHAIN_HIT
	dx CHAIN_PLACE
	dy CHAIN_STEP
	dz CHERRY_WOOD_BREAK
	e ALLAY_ITEM_GIVEN
	eA COD_HURT
	eB COMPARATOR_CLICK
	eC COMPOSTER_EMPTY
	eD COMPOSTER_FILL
	eE COMPOSTER_FILL_SUCCESS
	eF COMPOSTER_READY
	eG CONDUIT_ACTIVATE
	eH CONDUIT_AMBIENT
	eI CONDUIT_AMBIENT_SHORT
	eJ CONDUIT_ATTACK_TARGET
	eK CONDUIT_DEACTIVATE
	eL COPPER_BREAK
	eM COPPER_STEP
	eN COPPER_PLACE
	eO COPPER_HIT
	eP COPPER_FALL
	eQ CORAL_BLOCK_BREAK
	eR CORAL_BLOCK_FALL
	eS CORAL_BLOCK_HIT
	eT CORAL_BLOCK_PLACE
	eU CORAL_BLOCK_STEP
	eV COW_AMBIENT
	eW COW_DEATH
	eX COW_HURT
	eY COW_MILK
	eZ COW_STEP
	ea CHERRY_WOOD_PRESSURE_PLATE_CLICK_ON
	eb CHERRY_WOOD_FENCE_GATE_CLOSE
	ec CHERRY_WOOD_FENCE_GATE_OPEN
	ed CHEST_CLOSE
	ee CHEST_LOCKED
	ef CHEST_OPEN
	eg CHICKEN_AMBIENT
	eh CHICKEN_DEATH
	ei CHICKEN_EGG
	ej CHICKEN_HURT
	ek CHICKEN_STEP
	el CHISELED_BOOKSHELF_BREAK
	em CHISELED_BOOKSHELF_FALL
	en CHISELED_BOOKSHELF_HIT
	eo CHISELED_BOOKSHELF_INSERT
	ep CHISELED_BOOKSHELF_INSERT_ENCHANTED
	eq CHISELED_BOOKSHELF_STEP
	er CHISELED_BOOKSHELF_PICKUP
	es CHISELED_BOOKSHELF_PICKUP_ENCHANTED
	et CHISELED_BOOKSHELF_PLACE
	eu CHORUS_FLOWER_DEATH
	ev CHORUS_FLOWER_GROW
	ew CHORUS_FRUIT_TELEPORT
	ex COD_AMBIENT
	ey COD_DEATH
	ez COD_FLOP
	f ALLAY_ITEM_TAKEN
	fA DEEPSLATE_HIT
	fB DEEPSLATE_PLACE
	fC DEEPSLATE_STEP
	fD DEEPSLATE_TILES_BREAK
	fE DEEPSLATE_TILES_FALL
	fF DEEPSLATE_TILES_HIT
	fG DEEPSLATE_TILES_PLACE
	fH DEEPSLATE_TILES_STEP
	fI DISPENSER_DISPENSE
	fJ DISPENSER_FAIL
	fK DISPENSER_LAUNCH
	fL DOLPHIN_AMBIENT
	fM DOLPHIN_AMBIENT_WATER
	fN DOLPHIN_ATTACK
	fO DOLPHIN_DEATH
	fP DOLPHIN_EAT
	fQ DOLPHIN_HURT
	fR DOLPHIN_JUMP
	fS DOLPHIN_PLAY
	fT DOLPHIN_SPLASH
	fU DOLPHIN_SWIM
	fV DONKEY_AMBIENT
	fW DONKEY_ANGRY
	fX DONKEY_CHEST
	fY DONKEY_DEATH
	fZ DONKEY_EAT
	fa CREEPER_DEATH
	fb CREEPER_HURT
	fc CREEPER_PRIMED
	fd CROP_BREAK
	fe CROP_PLANTED
	ff CROSSBOW_HIT
	fg CROSSBOW_LOADING_END
	fh CROSSBOW_LOADING_MIDDLE
	fi CROSSBOW_LOADING_START
	fj CROSSBOW_QUICK_CHARGE_1
	fk CROSSBOW_QUICK_CHARGE_2
	fl CROSSBOW_QUICK_CHARGE_3
	fm CROSSBOW_SHOOT
	fn DECORATED_POT_BREAK
	fo DECORATED_POT_FALL
	fp DECORATED_POT_HIT
	fq DECORATED_POT_STEP
	fr DECORATED_POT_PLACE
	fs DECORATED_POT_SHATTER
	ft DEEPSLATE_BRICKS_BREAK
	fu DEEPSLATE_BRICKS_FALL
	fv DEEPSLATE_BRICKS_HIT
	fw DEEPSLATE_BRICKS_PLACE
	fx DEEPSLATE_BRICKS_STEP
	fy DEEPSLATE_BREAK
	fz DEEPSLATE_FALL
	g ALLAY_THROW
	gA DROWNED_SWIM
	gB DYE_USE
	gC EGG_THROW
	gD ELDER_GUARDIAN_AMBIENT
	gE ELDER_GUARDIAN_AMBIENT_LAND
	gF ELDER_GUARDIAN_CURSE
	gG ELDER_GUARDIAN_DEATH
	gH ELDER_GUARDIAN_DEATH_LAND
	gI ELDER_GUARDIAN_FLOP
	gJ ELDER_GUARDIAN_HURT
	gK ELDER_GUARDIAN_HURT_LAND
	gL ELYTRA_FLYING
	gM ENCHANTMENT_TABLE_USE
	gN ENDER_CHEST_CLOSE
	gO ENDER_CHEST_OPEN
	gP ENDER_DRAGON_AMBIENT
	gQ ENDER_DRAGON_DEATH
	gR DRAGON_FIREBALL_EXPLODE
	gS ENDER_DRAGON_FLAP
	gT ENDER_DRAGON_GROWL
	gU ENDER_DRAGON_HURT
	gV ENDER_DRAGON_SHOOT
	gW ENDER_EYE_DEATH
	gX ENDER_EYE_LAUNCH
	gY ENDERMAN_AMBIENT
	gZ ENDERMAN_DEATH
	ga DONKEY_HURT
	gb DRIPSTONE_BLOCK_BREAK
	gc DRIPSTONE_BLOCK_STEP
	gd DRIPSTONE_BLOCK_PLACE
	ge DRIPSTONE_BLOCK_HIT
	gf DRIPSTONE_BLOCK_FALL
	gg POINTED_DRIPSTONE_BREAK
	gh POINTED_DRIPSTONE_STEP
	gi POINTED_DRIPSTONE_PLACE
	gj POINTED_DRIPSTONE_HIT
	gk POINTED_DRIPSTONE_FALL
	gl POINTED_DRIPSTONE_LAND
	gm POINTED_DRIPSTONE_DRIP_LAVA
	gn POINTED_DRIPSTONE_DRIP_WATER
	go POINTED_DRIPSTONE_DRIP_LAVA_INTO_CAULDRON
	gp POINTED_DRIPSTONE_DRIP_WATER_INTO_CAULDRON
	gq BIG_DRIPLEAF_TILT_DOWN
	gr BIG_DRIPLEAF_TILT_UP
	gs DROWNED_AMBIENT
	gt DROWNED_AMBIENT_WATER
	gu DROWNED_DEATH
	gv DROWNED_DEATH_WATER
	gw DROWNED_HURT
	gx DROWNED_HURT_WATER
	gy DROWNED_SHOOT
	gz DROWNED_STEP
	h AMBIENT_CAVE
	hA FIREWORK_ROCKET_BLAST
	hB FIREWORK_ROCKET_BLAST_FAR
	hC FIREWORK_ROCKET_LARGE_BLAST
	hD FIREWORK_ROCKET_LARGE_BLAST_FAR
	hE FIREWORK_ROCKET_LAUNCH
	hF FIREWORK_ROCKET_SHOOT
	hG FIREWORK_ROCKET_TWINKLE
	hH FIREWORK_ROCKET_TWINKLE_FAR
	hI FIRE_AMBIENT
	hJ FIRE_EXTINGUISH
	hK FISH_SWIM
	hL FISHING_BOBBER_RETRIEVE
	hM FISHING_BOBBER_SPLASH
	hN FISHING_BOBBER_THROW
	hO FLINTANDSTEEL_USE
	hP FLOWERING_AZALEA_BREAK
	hQ FLOWERING_AZALEA_FALL
	hR FLOWERING_AZALEA_HIT
	hS FLOWERING_AZALEA_PLACE
	hT FLOWERING_AZALEA_STEP
	hU FOX_AGGRO
	hV FOX_AMBIENT
	hW FOX_BITE
	hX FOX_DEATH
	hY FOX_EAT
	hZ FOX_HURT
	ha ENDERMAN_HURT
	hb ENDERMAN_SCREAM
	hc ENDERMAN_STARE
	hd ENDERMAN_TELEPORT
	he ENDERMITE_AMBIENT
	hf ENDERMITE_DEATH
	hg ENDERMITE_HURT
	hh ENDERMITE_STEP
	hi ENDER_PEARL_THROW
	hj END_GATEWAY_SPAWN
	hk END_PORTAL_FRAME_FILL
	hl END_PORTAL_SPAWN
	hm EVOKER_AMBIENT
	hn EVOKER_CAST_SPELL
	ho EVOKER_CELEBRATE
	hp EVOKER_DEATH
	hq EVOKER_FANGS_ATTACK
	hr EVOKER_HURT
	hs EVOKER_PREPARE_ATTACK
	ht EVOKER_PREPARE_SUMMON
	hu EVOKER_PREPARE_WOLOLO
	hv EXPERIENCE_BOTTLE_THROW
	hw EXPERIENCE_ORB_PICKUP
	hx FENCE_GATE_CLOSE
	hy FENCE_GATE_OPEN
	hz FIRECHARGE_USE
	i AMBIENT_BASALT_DELTAS_ADDITIONS
	iA FROG_LONG_JUMP
	iB FROG_STEP
	iC FROG_TONGUE
	iD ROOTS_BREAK
	iE ROOTS_STEP
	iF ROOTS_PLACE
	iG ROOTS_HIT
	iH ROOTS_FALL
	iI FURNACE_FIRE_CRACKLE
	iJ GENERIC_BIG_FALL
	iK GENERIC_BURN
	iL GENERIC_DEATH
	iM GENERIC_DRINK
	iN GENERIC_EAT
	iO GENERIC_EXPLODE
	iP GENERIC_EXTINGUISH_FIRE
	iQ GENERIC_HURT
	iR GENERIC_SMALL_FALL
	iS GENERIC_SPLASH
	iT GENERIC_SWIM
	iU GHAST_AMBIENT
	iV GHAST_DEATH
	iW GHAST_HURT
	iX GHAST_SCREAM
	iY GHAST_SHOOT
	iZ GHAST_WARN
	ia FOX_SCREECH
	ib FOX_SLEEP
	ic FOX_SNIFF
	id FOX_SPIT
	ie FOX_TELEPORT
	if SUSPICIOUS_SAND_BREAK
	ig SUSPICIOUS_SAND_STEP
	ih SUSPICIOUS_SAND_PLACE
	ii SUSPICIOUS_SAND_HIT
	ij SUSPICIOUS_SAND_FALL
	ik FROGLIGHT_BREAK
	il FROGLIGHT_FALL
	im FROGLIGHT_HIT
	in FROGLIGHT_PLACE
	io FROGLIGHT_STEP
	ip FROGSPAWNSTEP
	iq FROGSPAWN_BREAK
	ir FROGSPAWN_FALL
	is FROGSPAWN_HATCH
	it FROGSPAWN_HIT
	iu FROGSPAWN_PLACE
	iv FROG_AMBIENT
	iw FROG_DEATH
	ix FROG_EAT
	iy FROG_HURT
	iz FROG_LAY_SPAWN
	j AMBIENT_BASALT_DELTAS_LOOP
	jA GOAT_PREPARE_RAM
	jB GOAT_RAM_IMPACT
	jC GOAT_HORN_BREAK
	jD GOAT_HORN_PLAY
	jE GOAT_SCREAMING_AMBIENT
	jF GOAT_SCREAMING_DEATH
	jG GOAT_SCREAMING_EAT
	jH GOAT_SCREAMING_HURT
	jI GOAT_SCREAMING_LONG_JUMP
	jJ GOAT_SCREAMING_MILK
	jK GOAT_SCREAMING_PREPARE_RAM
	jL GOAT_SCREAMING_RAM_IMPACT
	jM GOAT_SCREAMING_HORN_BREAK
	jN GOAT_STEP
	jO GRASS_BREAK
	jP GRASS_FALL
	jQ GRASS_HIT
	jR GRASS_PLACE
	jS GRASS_STEP
	jT GRAVEL_BREAK
	jU GRAVEL_FALL
	jV GRAVEL_HIT
	jW GRAVEL_PLACE
	jX GRAVEL_STEP
	jY GRINDSTONE_USE
	jZ GROWING_PLANT_CROP
	ja GILDED_BLACKSTONE_BREAK
	jb GILDED_BLACKSTONE_FALL
	jc GILDED_BLACKSTONE_HIT
	jd GILDED_BLACKSTONE_PLACE
	je GILDED_BLACKSTONE_STEP
	jf GLASS_BREAK
	jg GLASS_FALL
	jh GLASS_HIT
	ji GLASS_PLACE
	jj GLASS_STEP
	jk GLOW_INK_SAC_USE
	jl GLOW_ITEM_FRAME_ADD_ITEM
	jm GLOW_ITEM_FRAME_BREAK
	jn GLOW_ITEM_FRAME_PLACE
	jo GLOW_ITEM_FRAME_REMOVE_ITEM
	jp GLOW_ITEM_FRAME_ROTATE_ITEM
	jq GLOW_SQUID_AMBIENT
	jr GLOW_SQUID_DEATH
	js GLOW_SQUID_HURT
	jt GLOW_SQUID_SQUIRT
	ju GOAT_AMBIENT
	jv GOAT_DEATH
	jw GOAT_EAT
	jx GOAT_HURT
	jy GOAT_LONG_JUMP
	jz GOAT_MILK
	k AMBIENT_BASALT_DELTAS_MOOD
	kA BAMBOO_WOOD_HANGING_SIGN_HIT
	kB BAMBOO_WOOD_HANGING_SIGN_PLACE
	kC HOE_TILL
	kD HOGLIN_AMBIENT
	kE HOGLIN_ANGRY
	kF HOGLIN_ATTACK
	kG HOGLIN_CONVERTED_TO_ZOMBIFIED
	kH HOGLIN_DEATH
	kI HOGLIN_HURT
	kJ HOGLIN_RETREAT
	kK HOGLIN_STEP
	kL HONEY_BLOCK_BREAK
	kM HONEY_BLOCK_FALL
	kN HONEY_BLOCK_HIT
	kO HONEY_BLOCK_PLACE
	kP HONEY_BLOCK_SLIDE
	kQ HONEY_BLOCK_STEP
	kR HONEYCOMB_WAX_ON
	kS HONEY_DRINK
	kT GOAT_HORN_VARIANT_COUNT
	kU GOAT_HORN_SOUND_VARIANTS
	kV HORSE_AMBIENT
	kW HORSE_ANGRY
	kX HORSE_ARMOR
	kY HORSE_BREATHE
	kZ HORSE_DEATH
	ka GUARDIAN_AMBIENT
	kb GUARDIAN_AMBIENT_LAND
	kc GUARDIAN_ATTACK
	kd GUARDIAN_DEATH
	ke GUARDIAN_DEATH_LAND
	kf GUARDIAN_FLOP
	kg GUARDIAN_HURT
	kh GUARDIAN_HURT_LAND
	ki HANGING_ROOTS_BREAK
	kj HANGING_ROOTS_FALL
	kk HANGING_ROOTS_HIT
	kl HANGING_ROOTS_PLACE
	km HANGING_ROOTS_STEP
	kn HANGING_SIGN_STEP
	ko HANGING_SIGN_BREAK
	kp HANGING_SIGN_FALL
	kq HANGING_SIGN_HIT
	kr HANGING_SIGN_PLACE
	ks NETHER_WOOD_HANGING_SIGN_STEP
	kt NETHER_WOOD_HANGING_SIGN_BREAK
	ku NETHER_WOOD_HANGING_SIGN_FALL
	kv NETHER_WOOD_HANGING_SIGN_HIT
	kw NETHER_WOOD_HANGING_SIGN_PLACE
	kx BAMBOO_WOOD_HANGING_SIGN_STEP
	ky BAMBOO_WOOD_HANGING_SIGN_BREAK
	kz BAMBOO_WOOD_HANGING_SIGN_FALL
	l AMBIENT_CRIMSON_FOREST_ADDITIONS
	lA INK_SAC_USE
	lB IRON_DOOR_CLOSE
	lC IRON_DOOR_OPEN
	lD IRON_GOLEM_ATTACK
	lE IRON_GOLEM_DAMAGE
	lF IRON_GOLEM_DEATH
	lG IRON_GOLEM_HURT
	lH IRON_GOLEM_REPAIR
	lI IRON_GOLEM_STEP
	lJ IRON_TRAPDOOR_CLOSE
	lK IRON_TRAPDOOR_OPEN
	lL ITEM_FRAME_ADD_ITEM
	lM ITEM_FRAME_BREAK
	lN ITEM_FRAME_PLACE
	lO ITEM_FRAME_REMOVE_ITEM
	lP ITEM_FRAME_ROTATE_ITEM
	lQ ITEM_BREAK
	lR ITEM_PICKUP
	lS LADDER_BREAK
	lT LADDER_FALL
	lU LADDER_HIT
	lV LADDER_PLACE
	lW LADDER_STEP
	lX LANTERN_BREAK
	lY LANTERN_FALL
	lZ LANTERN_HIT
	la HORSE_EAT
	lb HORSE_GALLOP
	lc HORSE_HURT
	ld HORSE_JUMP
	le HORSE_LAND
	lf HORSE_SADDLE
	lg HORSE_STEP
	lh HORSE_STEP_WOOD
	li HOSTILE_BIG_FALL
	lj HOSTILE_DEATH
	lk HOSTILE_HURT
	ll HOSTILE_SMALL_FALL
	lm HOSTILE_SPLASH
	ln HOSTILE_SWIM
	lo HUSK_AMBIENT
	lp HUSK_CONVERTED_TO_ZOMBIE
	lq HUSK_DEATH
	lr HUSK_HURT
	ls HUSK_STEP
	lt ILLUSIONER_AMBIENT
	lu ILLUSIONER_CAST_SPELL
	lv ILLUSIONER_DEATH
	lw ILLUSIONER_HURT
	lx ILLUSIONER_MIRROR_MOVE
	ly ILLUSIONER_PREPARE_BLINDNESS
	lz ILLUSIONER_PREPARE_MIRROR
	m AMBIENT_CRIMSON_FOREST_LOOP
	mA LODESTONE_HIT
	mB LODESTONE_FALL
	mC LODESTONE_COMPASS_LOCK
	mD MAGMA_CUBE_DEATH
	mE MAGMA_CUBE_HURT
	mF MAGMA_CUBE_HURT_SMALL
	mG MAGMA_CUBE_JUMP
	mH MAGMA_CUBE_SQUISH
	mI MAGMA_CUBE_SQUISH_SMALL
	mJ MANGROVE_ROOTS_BREAK
	mK MANGROVE_ROOTS_FALL
	mL MANGROVE_ROOTS_HIT
	mM MANGROVE_ROOTS_PLACE
	mN MANGROVE_ROOTS_STEP
	mO MEDIUM_AMETHYST_BUD_BREAK
	mP MEDIUM_AMETHYST_BUD_PLACE
	mQ METAL_BREAK
	mR METAL_FALL
	mS METAL_HIT
	mT METAL_PLACE
	mU METAL_PRESSURE_PLATE_CLICK_OFF
	mV METAL_PRESSURE_PLATE_CLICK_ON
	mW METAL_STEP
	mX MINECART_INSIDE_UNDERWATER
	mY MINECART_INSIDE
	mZ MINECART_RIDING
	ma LANTERN_PLACE
	mb LANTERN_STEP
	mc LARGE_AMETHYST_BUD_BREAK
	md LARGE_AMETHYST_BUD_PLACE
	me LAVA_AMBIENT
	mf LAVA_EXTINGUISH
	mg LAVA_POP
	mh LEASH_KNOT_BREAK
	mi LEASH_KNOT_PLACE
	mj LEVER_CLICK
	mk LIGHTNING_BOLT_IMPACT
	ml LIGHTNING_BOLT_THUNDER
	mm LINGERING_POTION_THROW
	mn LLAMA_AMBIENT
	mo LLAMA_ANGRY
	mp LLAMA_CHEST
	mq LLAMA_DEATH
	mr LLAMA_EAT
	ms LLAMA_HURT
	mt LLAMA_SPIT
	mu LLAMA_STEP
	mv LLAMA_SWAG
	mw MAGMA_CUBE_DEATH_SMALL
	mx LODESTONE_BREAK
	my LODESTONE_STEP
	mz LODESTONE_PLACE
	n AMBIENT_CRIMSON_FOREST_MOOD
	nA MUD_BRICKS_FALL
	nB MUD_BRICKS_HIT
	nC MUD_BRICKS_PLACE
	nD MUD_BRICKS_STEP
	nE MUDDY_MANGROVE_ROOTS_BREAK
	nF MUDDY_MANGROVE_ROOTS_FALL
	nG MUDDY_MANGROVE_ROOTS_HIT
	nH MUDDY_MANGROVE_ROOTS_PLACE
	nI MUDDY_MANGROVE_ROOTS_STEP
	nJ MULE_AMBIENT
	nK MULE_ANGRY
	nL MULE_CHEST
	nM MULE_DEATH
	nN MULE_EAT
	nO MULE_HURT
	nP MUSIC_CREATIVE
	nQ MUSIC_CREDITS
	nR MUSIC_DISC_5
	nS MUSIC_DISC_11
	nT MUSIC_DISC_13
	nU MUSIC_DISC_BLOCKS
	nV MUSIC_DISC_CAT
	nW MUSIC_DISC_CHIRP
	nX MUSIC_DISC_FAR
	nY MUSIC_DISC_MALL
	nZ MUSIC_DISC_MELLOHI
	na MOOSHROOM_CONVERT
	nb MOOSHROOM_EAT
	nc MOOSHROOM_MILK
	nd MOOSHROOM_MILK_SUSPICIOUSLY
	ne MOOSHROOM_SHEAR
	nf MOSS_CARPET_BREAK
	ng MOSS_CARPET_FALL
	nh MOSS_CARPET_HIT
	ni MOSS_CARPET_PLACE
	nj MOSS_CARPET_STEP
	nk PINK_PETALS_BREAK
	nl PINK_PETALS_FALL
	nm PINK_PETALS_HIT
	nn PINK_PETALS_PLACE
	no PINK_PETALS_STEP
	np MOSS_BREAK
	nq MOSS_FALL
	nr MOSS_HIT
	ns MOSS_PLACE
	nt MOSS_STEP
	nu MUD_BREAK
	nv MUD_FALL
	nw MUD_HIT
	nx MUD_PLACE
	ny MUD_STEP
	nz MUD_BRICKS_BREAK
	o AMBIENT_NETHER_WASTES_ADDITIONS
	oA MUSIC_BIOME_STONY_PEAKS
	oB MUSIC_BIOME_WARPED_FOREST
	oC MUSIC_UNDER_WATER
	oD NETHER_BRICKS_BREAK
	oE NETHER_BRICKS_STEP
	oF NETHER_BRICKS_PLACE
	oG NETHER_BRICKS_HIT
	oH NETHER_BRICKS_FALL
	oI NETHER_WART_BREAK
	oJ NETHER_WART_PLANTED
	oK NETHER_WOOD_BREAK
	oL NETHER_WOOD_FALL
	oM NETHER_WOOD_HIT
	oN NETHER_WOOD_PLACE
	oO NETHER_WOOD_STEP
	oP NETHER_WOOD_DOOR_CLOSE
	oQ NETHER_WOOD_DOOR_OPEN
	oR NETHER_WOOD_TRAPDOOR_CLOSE
	oS NETHER_WOOD_TRAPDOOR_OPEN
	oT NETHER_WOOD_BUTTON_CLICK_OFF
	oU NETHER_WOOD_BUTTON_CLICK_ON
	oV NETHER_WOOD_PRESSURE_PLATE_CLICK_OFF
	oW NETHER_WOOD_PRESSURE_PLATE_CLICK_ON
	oX NETHER_WOOD_FENCE_GATE_CLOSE
	oY NETHER_WOOD_FENCE_GATE_OPEN
	oZ EMPTY
	oa MUSIC_DISC_PIGSTEP
	ob MUSIC_DISC_STAL
	oc MUSIC_DISC_STRAD
	od MUSIC_DISC_WAIT
	oe MUSIC_DISC_WARD
	of MUSIC_DISC_OTHERSIDE
	og MUSIC_DRAGON
	oh MUSIC_END
	oi MUSIC_GAME
	oj MUSIC_MENU
	ok MUSIC_BIOME_BASALT_DELTAS
	ol MUSIC_BIOME_CRIMSON_FOREST
	om MUSIC_BIOME_DEEP_DARK
	on MUSIC_BIOME_DRIPSTONE_CAVES
	oo MUSIC_BIOME_GROVE
	op MUSIC_BIOME_JAGGED_PEAKS
	oq MUSIC_BIOME_LUSH_CAVES
	or MUSIC_BIOME_SWAMP
	os MUSIC_BIOME_JUNGLE_AND_FOREST
	ot MUSIC_BIOME_OLD_GROWTH_TAIGA
	ou MUSIC_BIOME_MEADOW
	ov MUSIC_BIOME_CHERRY_GROVE
	ow MUSIC_BIOME_NETHER_WASTES
	ox MUSIC_BIOME_FROZEN_PEAKS
	oy MUSIC_BIOME_SNOWY_SLOPES
	oz MUSIC_BIOME_SOUL_SAND_VALLEY
	p AMBIENT_NETHER_WASTES_LOOP
	pA WEEPING_VINES_STEP
	pB WEEPING_VINES_PLACE
	pC WEEPING_VINES_HIT
	pD WEEPING_VINES_FALL
	pE WART_BLOCK_BREAK
	pF WART_BLOCK_STEP
	pG WART_BLOCK_PLACE
	pH WART_BLOCK_HIT
	pI WART_BLOCK_FALL
	pJ NETHERITE_BLOCK_BREAK
	pK NETHERITE_BLOCK_STEP
	pL NETHERITE_BLOCK_PLACE
	pM NETHERITE_BLOCK_HIT
	pN NETHERITE_BLOCK_FALL
	pO NETHERRACK_BREAK
	pP NETHERRACK_STEP
	pQ NETHERRACK_PLACE
	pR NETHERRACK_HIT
	pS NETHERRACK_FALL
	pT NOTE_BLOCK_BASEDRUM
	pU NOTE_BLOCK_BASS
	pV NOTE_BLOCK_BELL
	pW NOTE_BLOCK_CHIME
	pX NOTE_BLOCK_FLUTE
	pY NOTE_BLOCK_GUITAR
	pZ NOTE_BLOCK_HARP
	pa PACKED_MUD_BREAK
	pb PACKED_MUD_FALL
	pc PACKED_MUD_HIT
	pd PACKED_MUD_PLACE
	pe PACKED_MUD_STEP
	pf STEM_BREAK
	pg STEM_STEP
	ph STEM_PLACE
	pi STEM_HIT
	pj STEM_FALL
	pk NYLIUM_BREAK
	pl NYLIUM_STEP
	pm NYLIUM_PLACE
	pn NYLIUM_HIT
	po NYLIUM_FALL
	pp NETHER_SPROUTS_BREAK
	pq NETHER_SPROUTS_STEP
	pr NETHER_SPROUTS_PLACE
	ps NETHER_SPROUTS_HIT
	pt NETHER_SPROUTS_FALL
	pu FUNGUS_BREAK
	pv FUNGUS_STEP
	pw FUNGUS_PLACE
	px FUNGUS_HIT
	py FUNGUS_FALL
	pz WEEPING_VINES_BREAK
	q AMBIENT_NETHER_WASTES_MOOD
	qA PANDA_CANT_BREED
	qB PANDA_AGGRESSIVE_AMBIENT
	qC PANDA_WORRIED_AMBIENT
	qD PANDA_HURT
	qE PANDA_BITE
	qF PARROT_AMBIENT
	qG PARROT_DEATH
	qH PARROT_EAT
	qI PARROT_FLY
	qJ PARROT_HURT
	qK PARROT_IMITATE_BLAZE
	qL PARROT_IMITATE_CREEPER
	qM PARROT_IMITATE_DROWNED
	qN PARROT_IMITATE_ELDER_GUARDIAN
	qO PARROT_IMITATE_ENDER_DRAGON
	qP PARROT_IMITATE_ENDERMITE
	qQ PARROT_IMITATE_EVOKER
	qR PARROT_IMITATE_GHAST
	qS PARROT_IMITATE_GUARDIAN
	qT PARROT_IMITATE_HOGLIN
	qU PARROT_IMITATE_HUSK
	qV PARROT_IMITATE_ILLUSIONER
	qW PARROT_IMITATE_MAGMA_CUBE
	qX PARROT_IMITATE_PHANTOM
	qY PARROT_IMITATE_PIGLIN
	qZ PARROT_IMITATE_PIGLIN_BRUTE
	qa NOTE_BLOCK_HAT
	qb NOTE_BLOCK_PLING
	qc NOTE_BLOCK_SNARE
	qd NOTE_BLOCK_XYLOPHONE
	qe NOTE_BLOCK_IRON_XYLOPHONE
	qf NOTE_BLOCK_COW_BELL
	qg NOTE_BLOCK_DIDGERIDOO
	qh NOTE_BLOCK_BIT
	qi NOTE_BLOCK_BANJO
	qj NOTE_BLOCK_IMITATE_ZOMBIE
	qk NOTE_BLOCK_IMITATE_SKELETON
	ql NOTE_BLOCK_IMITATE_CREEPER
	qm NOTE_BLOCK_IMITATE_ENDER_DRAGON
	qn NOTE_BLOCK_IMITATE_WITHER_SKELETON
	qo NOTE_BLOCK_IMITATE_PIGLIN
	qp OCELOT_HURT
	qq OCELOT_AMBIENT
	qr OCELOT_DEATH
	qs PAINTING_BREAK
	qt PAINTING_PLACE
	qu PANDA_PRE_SNEEZE
	qv PANDA_SNEEZE
	qw PANDA_AMBIENT
	qx PANDA_DEATH
	qy PANDA_EAT
	qz PANDA_STEP
	r AMBIENT_SOUL_SAND_VALLEY_ADDITIONS
	rA PIG_HURT
	rB PIG_SADDLE
	rC PIG_STEP
	rD PIGLIN_ADMIRING_ITEM
	rE PIGLIN_AMBIENT
	rF PIGLIN_ANGRY
	rG PIGLIN_CELEBRATE
	rH PIGLIN_DEATH
	rI PIGLIN_JEALOUS
	rJ PIGLIN_HURT
	rK PIGLIN_RETREAT
	rL PIGLIN_STEP
	rM PIGLIN_CONVERTED_TO_ZOMBIFIED
	rN PIGLIN_BRUTE_AMBIENT
	rO PIGLIN_BRUTE_ANGRY
	rP PIGLIN_BRUTE_DEATH
	rQ PIGLIN_BRUTE_HURT
	rR PIGLIN_BRUTE_STEP
	rS PIGLIN_BRUTE_CONVERTED_TO_ZOMBIFIED
	rT PILLAGER_AMBIENT
	rU PILLAGER_CELEBRATE
	rV PILLAGER_DEATH
	rW PILLAGER_HURT
	rX PISTON_CONTRACT
	rY PISTON_EXTEND
	rZ PLAYER_ATTACK_CRIT
	ra PARROT_IMITATE_PILLAGER
	rb PARROT_IMITATE_RAVAGER
	rc PARROT_IMITATE_SHULKER
	rd PARROT_IMITATE_SILVERFISH
	re PARROT_IMITATE_SKELETON
	rf PARROT_IMITATE_SLIME
	rg PARROT_IMITATE_SPIDER
	rh PARROT_IMITATE_STRAY
	ri PARROT_IMITATE_VEX
	rj PARROT_IMITATE_VINDICATOR
	rk PARROT_IMITATE_WARDEN
	rl PARROT_IMITATE_WITCH
	rm PARROT_IMITATE_WITHER
	rn PARROT_IMITATE_WITHER_SKELETON
	ro PARROT_IMITATE_ZOGLIN
	rp PARROT_IMITATE_ZOMBIE
	rq PARROT_IMITATE_ZOMBIE_VILLAGER
	rr PARROT_STEP
	rs PHANTOM_AMBIENT
	rt PHANTOM_BITE
	ru PHANTOM_DEATH
	rv PHANTOM_FLAP
	rw PHANTOM_HURT
	rx PHANTOM_SWOOP
	ry PIG_AMBIENT
	rz PIG_DEATH
	s AMBIENT_SOUL_SAND_VALLEY_LOOP
	sA POLISHED_DEEPSLATE_FALL
	sB POLISHED_DEEPSLATE_HIT
	sC POLISHED_DEEPSLATE_PLACE
	sD POLISHED_DEEPSLATE_STEP
	sE PORTAL_AMBIENT
	sF PORTAL_TRAVEL
	sG PORTAL_TRIGGER
	sH POWDER_SNOW_BREAK
	sI POWDER_SNOW_FALL
	sJ POWDER_SNOW_HIT
	sK POWDER_SNOW_PLACE
	sL POWDER_SNOW_STEP
	sM PUFFER_FISH_AMBIENT
	sN PUFFER_FISH_BLOW_OUT
	sO PUFFER_FISH_BLOW_UP
	sP PUFFER_FISH_DEATH
	sQ PUFFER_FISH_FLOP
	sR PUFFER_FISH_HURT
	sS PUFFER_FISH_STING
	sT PUMPKIN_CARVE
	sU RABBIT_AMBIENT
	sV RABBIT_ATTACK
	sW RABBIT_DEATH
	sX RABBIT_HURT
	sY RABBIT_JUMP
	sZ RAID_HORN
	sa PLAYER_ATTACK_KNOCKBACK
	sb PLAYER_ATTACK_NODAMAGE
	sc PLAYER_ATTACK_STRONG
	sd PLAYER_ATTACK_SWEEP
	se PLAYER_ATTACK_WEAK
	sf PLAYER_BIG_FALL
	sg PLAYER_BREATH
	sh PLAYER_BURP
	si PLAYER_DEATH
	sj PLAYER_HURT
	sk PLAYER_HURT_DROWN
	sl PLAYER_HURT_FREEZE
	sm PLAYER_HURT_ON_FIRE
	sn PLAYER_HURT_SWEET_BERRY_BUSH
	so PLAYER_LEVELUP
	sp PLAYER_SMALL_FALL
	sq PLAYER_SPLASH
	sr PLAYER_SPLASH_HIGH_SPEED
	ss PLAYER_SWIM
	st POLAR_BEAR_AMBIENT
	su POLAR_BEAR_AMBIENT_BABY
	sv POLAR_BEAR_DEATH
	sw POLAR_BEAR_HURT
	sx POLAR_BEAR_STEP
	sy POLAR_BEAR_WARNING
	sz POLISHED_DEEPSLATE_BREAK
	t AMBIENT_SOUL_SAND_VALLEY_MOOD
	tA ROOTED_DIRT_PLACE
	tB ROOTED_DIRT_STEP
	tC SALMON_AMBIENT
	tD SALMON_DEATH
	tE SALMON_FLOP
	tF SALMON_HURT
	tG SAND_BREAK
	tH SAND_FALL
	tI SAND_HIT
	tJ SAND_PLACE
	tK SAND_STEP
	tL SCAFFOLDING_BREAK
	tM SCAFFOLDING_FALL
	tN SCAFFOLDING_HIT
	tO SCAFFOLDING_PLACE
	tP SCAFFOLDING_STEP
	tQ SCULK_BLOCK_SPREAD
	tR SCULK_BLOCK_CHARGE
	tS SCULK_BLOCK_BREAK
	tT SCULK_BLOCK_FALL
	tU SCULK_BLOCK_HIT
	tV SCULK_BLOCK_PLACE
	tW SCULK_BLOCK_STEP
	tX SCULK_CATALYST_BLOOM
	tY SCULK_CATALYST_BREAK
	tZ SCULK_CATALYST_FALL
	ta RAVAGER_AMBIENT
	tb RAVAGER_ATTACK
	tc RAVAGER_CELEBRATE
	td RAVAGER_DEATH
	te RAVAGER_HURT
	tf RAVAGER_STEP
	tg RAVAGER_STUNNED
	th RAVAGER_ROAR
	ti NETHER_GOLD_ORE_BREAK
	tj NETHER_GOLD_ORE_FALL
	tk NETHER_GOLD_ORE_HIT
	tl NETHER_GOLD_ORE_PLACE
	tm NETHER_GOLD_ORE_STEP
	tn NETHER_ORE_BREAK
	to NETHER_ORE_FALL
	tp NETHER_ORE_HIT
	tq NETHER_ORE_PLACE
	tr NETHER_ORE_STEP
	ts REDSTONE_TORCH_BURNOUT
	tt RESPAWN_ANCHOR_AMBIENT
	tu RESPAWN_ANCHOR_CHARGE
	tv RESPAWN_ANCHOR_DEPLETE
	tw RESPAWN_ANCHOR_SET_SPAWN
	tx ROOTED_DIRT_BREAK
	ty ROOTED_DIRT_FALL
	tz ROOTED_DIRT_HIT
	u AMBIENT_WARPED_FOREST_ADDITIONS
	uA SHIELD_BLOCK
	uB SHIELD_BREAK
	uC SHROOMLIGHT_BREAK
	uD SHROOMLIGHT_STEP
	uE SHROOMLIGHT_PLACE
	uF SHROOMLIGHT_HIT
	uG SHROOMLIGHT_FALL
	uH SHOVEL_FLATTEN
	uI SHULKER_AMBIENT
	uJ SHULKER_BOX_CLOSE
	uK SHULKER_BOX_OPEN
	uL SHULKER_BULLET_HIT
	uM SHULKER_BULLET_HURT
	uN SHULKER_CLOSE
	uO SHULKER_DEATH
	uP SHULKER_HURT
	uQ SHULKER_HURT_CLOSED
	uR SHULKER_OPEN
	uS SHULKER_SHOOT
	uT SHULKER_TELEPORT
	uU SILVERFISH_AMBIENT
	uV SILVERFISH_DEATH
	uW SILVERFISH_HURT
	uX SILVERFISH_STEP
	uY SKELETON_AMBIENT
	uZ SKELETON_CONVERTED_TO_STRAY
	ua SCULK_CATALYST_HIT
	ub SCULK_CATALYST_PLACE
	uc SCULK_CATALYST_STEP
	ud SCULK_CLICKING
	ue SCULK_CLICKING_STOP
	uf SCULK_SENSOR_BREAK
	ug SCULK_SENSOR_FALL
	uh SCULK_SENSOR_HIT
	ui SCULK_SENSOR_PLACE
	uj SCULK_SENSOR_STEP
	uk SCULK_SHRIEKER_BREAK
	ul SCULK_SHRIEKER_FALL
	um SCULK_SHRIEKER_HIT
	un SCULK_SHRIEKER_PLACE
	uo SCULK_SHRIEKER_SHRIEK
	up SCULK_SHRIEKER_STEP
	uq SCULK_VEIN_BREAK
	ur SCULK_VEIN_FALL
	us SCULK_VEIN_HIT
	ut SCULK_VEIN_PLACE
	uu SCULK_VEIN_STEP
	uv SHEEP_AMBIENT
	uw SHEEP_DEATH
	ux SHEEP_HURT
	uy SHEEP_SHEAR
	uz SHEEP_STEP
	v AMBIENT_WARPED_FOREST_LOOP
	vA SMALL_DRIPLEAF_HIT
	vB SMALL_DRIPLEAF_PLACE
	vC SMALL_DRIPLEAF_STEP
	vD SOUL_SAND_BREAK
	vE SOUL_SAND_STEP
	vF SOUL_SAND_PLACE
	vG SOUL_SAND_HIT
	vH SOUL_SAND_FALL
	vI SOUL_SOIL_BREAK
	vJ SOUL_SOIL_STEP
	vK SOUL_SOIL_PLACE
	vL SOUL_SOIL_HIT
	vM SOUL_SOIL_FALL
	vN SOUL_ESCAPE
	vO SPORE_BLOSSOM_BREAK
	vP SPORE_BLOSSOM_FALL
	vQ SPORE_BLOSSOM_HIT
	vR SPORE_BLOSSOM_PLACE
	vS SPORE_BLOSSOM_STEP
	vT STRIDER_AMBIENT
	vU STRIDER_HAPPY
	vV STRIDER_RETREAT
	vW STRIDER_DEATH
	vX STRIDER_HURT
	vY STRIDER_STEP
	vZ STRIDER_STEP_LAVA
	va SKELETON_DEATH
	vb SKELETON_HORSE_AMBIENT
	vc SKELETON_HORSE_DEATH
	vd SKELETON_HORSE_HURT
	ve SKELETON_HORSE_SWIM
	vf SKELETON_HORSE_AMBIENT_WATER
	vg SKELETON_HORSE_GALLOP_WATER
	vh SKELETON_HORSE_JUMP_WATER
	vi SKELETON_HORSE_STEP_WATER
	vj SKELETON_HURT
	vk SKELETON_SHOOT
	vl SKELETON_STEP
	vm SLIME_ATTACK
	vn SLIME_DEATH
	vo SLIME_HURT
	vp SLIME_JUMP
	vq SLIME_SQUISH
	vr SLIME_BLOCK_BREAK
	vs SLIME_BLOCK_FALL
	vt SLIME_BLOCK_HIT
	vu SLIME_BLOCK_PLACE
	vv SLIME_BLOCK_STEP
	vw SMALL_AMETHYST_BUD_BREAK
	vx SMALL_AMETHYST_BUD_PLACE
	vy SMALL_DRIPLEAF_BREAK
	vz SMALL_DRIPLEAF_FALL
	w AMBIENT_WARPED_FOREST_MOOD
	wA SNOW_GOLEM_SHOOT
	wB SNOW_GOLEM_SHEAR
	wC SNOW_HIT
	wD SNOW_PLACE
	wE SNOW_STEP
	wF SPIDER_AMBIENT
	wG SPIDER_DEATH
	wH SPIDER_HURT
	wI SPIDER_STEP
	wJ SPLASH_POTION_BREAK
	wK SPLASH_POTION_THROW
	wL SPYGLASS_USE
	wM SPYGLASS_STOP_USING
	wN SQUID_AMBIENT
	wO SQUID_DEATH
	wP SQUID_HURT
	wQ SQUID_SQUIRT
	wR STONE_BREAK
	wS STONE_BUTTON_CLICK_OFF
	wT STONE_BUTTON_CLICK_ON
	wU STONE_FALL
	wV STONE_HIT
	wW STONE_PLACE
	wX STONE_PRESSURE_PLATE_CLICK_OFF
	wY STONE_PRESSURE_PLATE_CLICK_ON
	wZ STONE_STEP
	wa STRIDER_EAT
	wb STRIDER_SADDLE
	wc SLIME_DEATH_SMALL
	wd SLIME_HURT_SMALL
	we SLIME_JUMP_SMALL
	wf SLIME_SQUISH_SMALL
	wg SMITHING_TABLE_USE
	wh SMOKER_SMOKE
	wi SNIFFER_STEP
	wj SNIFFER_EAT
	wk SNIFFER_IDLE
	wl SNIFFER_HURT
	wm SNIFFER_DEATH
	wn SNIFFER_DROP_SEED
	wo SNIFFER_SCENTING
	wp SNIFFER_SNIFFING
	wq SNIFFER_SEARCHING
	wr SNIFFER_DIGGING
	ws SNIFFER_DIGGING_STOP
	wt SNIFFER_HAPPY
	wu SNOWBALL_THROW
	wv SNOW_BREAK
	ww SNOW_FALL
	wx SNOW_GOLEM_AMBIENT
	wy SNOW_GOLEM_DEATH
	wz SNOW_GOLEM_HURT
	x AMBIENT_UNDERWATER_ENTER
	xA TROPICAL_FISH_AMBIENT
	xB TROPICAL_FISH_DEATH
	xC TROPICAL_FISH_FLOP
	xD TROPICAL_FISH_HURT
	xE TUFF_BREAK
	xF TUFF_STEP
	xG TUFF_PLACE
	xH TUFF_HIT
	xI TUFF_FALL
	xJ TURTLE_AMBIENT_LAND
	xK TURTLE_DEATH
	xL TURTLE_DEATH_BABY
	xM TURTLE_EGG_BREAK
	xN TURTLE_EGG_CRACK
	xO TURTLE_EGG_HATCH
	xP TURTLE_HURT
	xQ TURTLE_HURT_BABY
	xR TURTLE_LAY_EGG
	xS TURTLE_SHAMBLE
	xT TURTLE_SHAMBLE_BABY
	xU TURTLE_SWIM
	xV UI_BUTTON_CLICK
	xW UI_LOOM_SELECT_PATTERN
	xX UI_LOOM_TAKE_RESULT
	xY UI_CARTOGRAPHY_TABLE_TAKE_RESULT
	xZ UI_STONECUTTER_TAKE_RESULT
	xa STRAY_AMBIENT
	xb STRAY_DEATH
	xc STRAY_HURT
	xd STRAY_STEP
	xe SWEET_BERRY_BUSH_BREAK
	xf SWEET_BERRY_BUSH_PLACE
	xg SWEET_BERRY_BUSH_PICK_BERRIES
	xh TADPOLE_DEATH
	xi TADPOLE_FLOP
	xj TADPOLE_GROW_UP
	xk TADPOLE_HURT
	xl THORNS_HIT
	xm TNT_PRIMED
	xn TOTEM_USE
	xo TRIDENT_HIT
	xp TRIDENT_HIT_GROUND
	xq TRIDENT_RETURN
	xr TRIDENT_RIPTIDE_1
	xs TRIDENT_RIPTIDE_2
	xt TRIDENT_RIPTIDE_3
	xu TRIDENT_THROW
	xv TRIDENT_THUNDER
	xw TRIPWIRE_ATTACH
	xx TRIPWIRE_CLICK_OFF
	xy TRIPWIRE_CLICK_ON
	xz TRIPWIRE_DETACH
	y AMBIENT_UNDERWATER_EXIT
	yA VILLAGER_WORK_TOOLSMITH
	yB VILLAGER_WORK_WEAPONSMITH
	yC VINDICATOR_AMBIENT
	yD VINDICATOR_CELEBRATE
	yE VINDICATOR_DEATH
	yF VINDICATOR_HURT
	yG VINE_BREAK
	yH VINE_FALL
	yI VINE_HIT
	yJ VINE_PLACE
	yK VINE_STEP
	yL LILY_PAD_PLACE
	yM WANDERING_TRADER_AMBIENT
	yN WANDERING_TRADER_DEATH
	yO WANDERING_TRADER_DISAPPEARED
	yP WANDERING_TRADER_DRINK_MILK
	yQ WANDERING_TRADER_DRINK_POTION
	yR WANDERING_TRADER_HURT
	yS WANDERING_TRADER_NO
	yT WANDERING_TRADER_REAPPEARED
	yU WANDERING_TRADER_TRADE
	yV WANDERING_TRADER_YES
	yW WARDEN_AGITATED
	yX WARDEN_AMBIENT
	yY WARDEN_ANGRY
	yZ WARDEN_ATTACK_IMPACT
	ya UI_STONECUTTER_SELECT_RECIPE
	yb UI_TOAST_CHALLENGE_COMPLETE
	yc UI_TOAST_IN
	yd UI_TOAST_OUT
	ye VEX_AMBIENT
	yf VEX_CHARGE
	yg VEX_DEATH
	yh VEX_HURT
	yi VILLAGER_AMBIENT
	yj VILLAGER_CELEBRATE
	yk VILLAGER_DEATH
	yl VILLAGER_HURT
	ym VILLAGER_NO
	yn VILLAGER_TRADE
	yo VILLAGER_YES
	yp VILLAGER_WORK_ARMORER
	yq VILLAGER_WORK_BUTCHER
	yr VILLAGER_WORK_CARTOGRAPHER
	ys VILLAGER_WORK_CLERIC
	yt VILLAGER_WORK_FARMER
	yu VILLAGER_WORK_FISHERMAN
	yv VILLAGER_WORK_FLETCHER
	yw VILLAGER_WORK_LEATHERWORKER
	yx VILLAGER_WORK_LIBRARIAN
	yy VILLAGER_WORK_MASON
	yz VILLAGER_WORK_SHEPHERD
	z AMBIENT_UNDERWATER_LOOP
	zA WITCH_DEATH
	zB WITCH_DRINK
	zC WITCH_HURT
	zD WITCH_THROW
	zE WITHER_AMBIENT
	zF WITHER_BREAK_BLOCK
	zG WITHER_DEATH
	zH WITHER_HURT
	zI WITHER_SHOOT
	zJ WITHER_SKELETON_AMBIENT
	zK WITHER_SKELETON_DEATH
	zL WITHER_SKELETON_HURT
	zM WITHER_SKELETON_STEP
	zN WITHER_SPAWN
	zO WOLF_AMBIENT
	zP WOLF_DEATH
	zQ WOLF_GROWL
	zR WOLF_HOWL
	zS WOLF_HURT
	zT WOLF_PANT
	zU WOLF_SHAKE
	zV WOLF_STEP
	zW WOLF_WHINE
	zX WOODEN_DOOR_CLOSE
	zY WOODEN_DOOR_OPEN
	zZ WOODEN_TRAPDOOR_CLOSE
	za WARDEN_DEATH
	zb WARDEN_DIG
	zc WARDEN_EMERGE
	zd WARDEN_HEARTBEAT
	ze WARDEN_HURT
	zf WARDEN_LISTENING
	zg WARDEN_LISTENING_ANGRY
	zh WARDEN_NEARBY_CLOSE
	zi WARDEN_NEARBY_CLOSER
	zj WARDEN_NEARBY_CLOSEST
	zk WARDEN_ROAR
	zl WARDEN_SNIFF
	zm WARDEN_SONIC_BOOM
	zn WARDEN_SONIC_CHARGE
	zo WARDEN_STEP
	zp WARDEN_TENDRIL_CLICKS
	zq WATER_AMBIENT
	zr WEATHER_RAIN
	zs WEATHER_RAIN_ABOVE
	zt WET_GRASS_BREAK
	zu WET_GRASS_FALL
	zv WET_GRASS_HIT
	zw WET_GRASS_PLACE
	zx WET_GRASS_STEP
	zy WITCH_AMBIENT
	zz WITCH_CELEBRATE
	a ()Lcom/google/common/collect/ImmutableList; registerGoatHornSoundVariants
	a (Ljava/lang/String;)Lnet/minecraft/sounds/SoundEffect; register
	a (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/sounds/SoundEffect; register
	a (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/sounds/SoundEffect; register
	a (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;F)Lnet/minecraft/core/Holder; register
	b (Ljava/lang/String;)Lhd$c; registerForHolder
	b (Lnet/minecraft/resources/MinecraftKey;)Lhd$c; registerForHolder
	b (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;)Lhd$c; registerForHolder
net/minecraft/stats/Counter net/minecraft/stats/StatFormatter
	a DECIMAL_FORMAT
	b DEFAULT
	c DIVIDE_BY_TEN
	d DISTANCE
	e TIME
net/minecraft/stats/RecipeBookServer net/minecraft/stats/ServerRecipeBook
	c RECIPE_BOOK_TAG
	d LOGGER
	a (Ljava/util/Collection;Lnet/minecraft/server/level/EntityPlayer;)I addRecipes
	a (Lnet/minecraft/nbt/NBTTagCompound;Lnet/minecraft/world/item/crafting/CraftingManager;)V fromNbt
	a (Lnet/minecraft/nbt/NBTTagList;Ljava/util/function/Consumer;Lnet/minecraft/world/item/crafting/CraftingManager;)V loadRecipes
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutRecipes$Action;Lnet/minecraft/server/level/EntityPlayer;Ljava/util/List;)V sendRecipes
	a (Lnet/minecraft/server/level/EntityPlayer;)V sendInitialRecipeBook
	b ()Lnet/minecraft/nbt/NBTTagCompound; toNbt
	b (Ljava/util/Collection;Lnet/minecraft/server/level/EntityPlayer;)I removeRecipes
net/minecraft/stats/ServerStatisticManager net/minecraft/stats/ServerStatsCounter
	b LOGGER
	c server
	d file
	e dirty
	a ()V save
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/nbt/NBTTagCompound; fromJson
	a (Lcom/mojang/datafixers/DataFixer;Ljava/lang/String;)V parseLocal
	a (Lnet/minecraft/server/level/EntityPlayer;)V sendStats
	a (Lnet/minecraft/stats/StatisticWrapper;Ljava/lang/String;)Ljava/util/Optional; getStat
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/stats/Statistic;I)V setValue
	b ()Ljava/lang/String; toJson
	b (Lnet/minecraft/stats/Statistic;)Lnet/minecraft/resources/MinecraftKey; getKey
	c ()V markAllDirty
	d ()Ljava/util/Set; getDirty
net/minecraft/stats/Statistic net/minecraft/stats/Stat
	n formatter
	o value
	p type
	a ()Lnet/minecraft/stats/StatisticWrapper; getType
	a (I)Ljava/lang/String; format
	a (Lnet/minecraft/resources/MinecraftKey;)Ljava/lang/String; locationToKey
	a (Lnet/minecraft/stats/StatisticWrapper;Ljava/lang/Object;)Ljava/lang/String; buildName
	b ()Ljava/lang/Object; getValue
net/minecraft/stats/StatisticList net/minecraft/stats/Stats
	A HORSE_ONE_CM
	B AVIATE_ONE_CM
	C SWIM_ONE_CM
	D STRIDER_ONE_CM
	E JUMP
	F DROP
	G DAMAGE_DEALT
	H DAMAGE_DEALT_ABSORBED
	I DAMAGE_DEALT_RESISTED
	J DAMAGE_TAKEN
	K DAMAGE_BLOCKED_BY_SHIELD
	L DAMAGE_ABSORBED
	M DAMAGE_RESISTED
	N DEATHS
	O MOB_KILLS
	P ANIMALS_BRED
	Q PLAYER_KILLS
	R FISH_CAUGHT
	S TALKED_TO_VILLAGER
	T TRADED_WITH_VILLAGER
	U EAT_CAKE_SLICE
	V FILL_CAULDRON
	W USE_CAULDRON
	X CLEAN_ARMOR
	Y CLEAN_BANNER
	Z CLEAN_SHULKER_BOX
	a BLOCK_MINED
	aA RAID_TRIGGER
	aB RAID_WIN
	aC INTERACT_WITH_ANVIL
	aD INTERACT_WITH_GRINDSTONE
	aE TARGET_HIT
	aF INTERACT_WITH_SMITHING_TABLE
	aa INTERACT_WITH_BREWINGSTAND
	ab INTERACT_WITH_BEACON
	ac INSPECT_DROPPER
	ad INSPECT_HOPPER
	ae INSPECT_DISPENSER
	af PLAY_NOTEBLOCK
	ag TUNE_NOTEBLOCK
	ah POT_FLOWER
	ai TRIGGER_TRAPPED_CHEST
	aj OPEN_ENDERCHEST
	ak ENCHANT_ITEM
	al PLAY_RECORD
	am INTERACT_WITH_FURNACE
	an INTERACT_WITH_CRAFTING_TABLE
	ao OPEN_CHEST
	ap SLEEP_IN_BED
	aq OPEN_SHULKER_BOX
	ar OPEN_BARREL
	as INTERACT_WITH_BLAST_FURNACE
	at INTERACT_WITH_SMOKER
	au INTERACT_WITH_LECTERN
	av INTERACT_WITH_CAMPFIRE
	aw INTERACT_WITH_CARTOGRAPHY_TABLE
	ax INTERACT_WITH_LOOM
	ay INTERACT_WITH_STONECUTTER
	az BELL_RING
	b ITEM_CRAFTED
	c ITEM_USED
	d ITEM_BROKEN
	e ITEM_PICKED_UP
	f ITEM_DROPPED
	g ENTITY_KILLED
	h ENTITY_KILLED_BY
	i CUSTOM
	j LEAVE_GAME
	k PLAY_TIME
	l TOTAL_WORLD_TIME
	m TIME_SINCE_DEATH
	n TIME_SINCE_REST
	o CROUCH_TIME
	p WALK_ONE_CM
	q CROUCH_ONE_CM
	r SPRINT_ONE_CM
	s WALK_ON_WATER_ONE_CM
	t FALL_ONE_CM
	u CLIMB_ONE_CM
	v FLY_ONE_CM
	w WALK_UNDER_WATER_ONE_CM
	x MINECART_ONE_CM
	y BOAT_ONE_CM
	z PIG_ONE_CM
	a (Ljava/lang/String;Lnet/minecraft/core/IRegistry;)Lnet/minecraft/stats/StatisticWrapper; makeRegistryStatType
	a (Ljava/lang/String;Lnet/minecraft/stats/Counter;)Lnet/minecraft/resources/MinecraftKey; makeCustomStat
net/minecraft/stats/StatisticManager net/minecraft/stats/StatsCounter
	a stats
	a (Lnet/minecraft/stats/Statistic;)I getValue
	a (Lnet/minecraft/stats/StatisticWrapper;Ljava/lang/Object;)I getValue
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/stats/Statistic;I)V setValue
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/stats/Statistic;I)V increment
net/minecraft/stats/StatisticWrapper net/minecraft/stats/StatType
	a registry
	b map
	c displayName
	a ()Lnet/minecraft/core/IRegistry; getRegistry
	a (Ljava/lang/Object;)Z contains
	a (Ljava/lang/Object;Lnet/minecraft/stats/Counter;)Lnet/minecraft/stats/Statistic; get
	b ()Ljava/lang/String; getTranslationKey
	b (Ljava/lang/Object;)Lnet/minecraft/stats/Statistic; get
	c ()Lnet/minecraft/network/chat/IChatBaseComponent; getDisplayName
net/minecraft/tags/TagDataPack net/minecraft/tags/TagLoader
	a LOGGER
	b idToValue
	c directory
	a (Lant$a;Ljava/util/List;)Lcom/mojang/datafixers/util/Either; build
	a (Lcom/google/common/collect/Multimap;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;)Z isCyclic
	a (Ljava/util/Map;)Ljava/util/Map; build
	a (Ljava/util/Map;Lcom/google/common/collect/Multimap;Ljava/util/Set;Lnet/minecraft/resources/MinecraftKey;Ljava/util/function/BiConsumer;)V visitDependenciesAndElement
	a (Lnet/minecraft/server/packs/resources/IResourceManager;)Ljava/util/Map; load
	b (Lcom/google/common/collect/Multimap;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;)V addDependencyIfNotCyclic
	b (Lnet/minecraft/server/packs/resources/IResourceManager;)Ljava/util/Map; loadAndBuild
net/minecraft/tags/TagRegistry net/minecraft/tags/TagManager
	a CUSTOM_REGISTRY_DIRECTORIES
	b registryAccess
	c results
	a ()Ljava/util/List; getResult
	a (Lalb$a;Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;Lnet/minecraft/util/profiling/GameProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; reload
	a (Lnet/minecraft/resources/ResourceKey;)Ljava/lang/String; getTagDir
	a (Lnet/minecraft/server/packs/resources/IResourceManager;Ljava/util/concurrent/Executor;Lhr$d;)Ljava/util/concurrent/CompletableFuture; createLoader
net/minecraft/tags/TagsBlock net/minecraft/tags/BlockTags
	A MANGROVE_LOGS
	B CRIMSON_STEMS
	C WARPED_STEMS
	D BAMBOO_BLOCKS
	E WART_BLOCKS
	F BANNERS
	G SAND
	H SMELTS_TO_GLASS
	I STAIRS
	J SLABS
	K WALLS
	L ANVIL
	M RAILS
	N LEAVES
	O TRAPDOORS
	P SMALL_FLOWERS
	Q BEDS
	R FENCES
	S TALL_FLOWERS
	T FLOWERS
	U PIGLIN_REPELLENTS
	V GOLD_ORES
	W IRON_ORES
	X DIAMOND_ORES
	Y REDSTONE_ORES
	Z LAPIS_ORES
	a WOOL
	aA DRAGON_TRANSPARENT
	aB WITHER_IMMUNE
	aC WITHER_SUMMON_BASE_BLOCKS
	aD BEEHIVES
	aE CROPS
	aF BEE_GROWABLES
	aG PORTALS
	aH FIRE
	aI NYLIUM
	aJ BEACON_BASE_BLOCKS
	aK SOUL_SPEED_BLOCKS
	aL WALL_POST_OVERRIDE
	aM CLIMBABLE
	aN FALL_DAMAGE_RESETTING
	aO SHULKER_BOXES
	aP HOGLIN_REPELLENTS
	aQ SOUL_FIRE_BASE_BLOCKS
	aR STRIDER_WARM_BLOCKS
	aS CAMPFIRES
	aT GUARDED_BY_PIGLINS
	aU PREVENT_MOB_SPAWNING_INSIDE
	aV FENCE_GATES
	aW UNSTABLE_BOTTOM_CENTER
	aX MUSHROOM_GROW_BLOCK
	aY INFINIBURN_OVERWORLD
	aZ INFINIBURN_NETHER
	aa COAL_ORES
	ab EMERALD_ORES
	ac COPPER_ORES
	ad CANDLES
	ae DIRT
	af TERRACOTTA
	ag COMPLETES_FIND_TREE_TUTORIAL
	ah FLOWER_POTS
	ai ENDERMAN_HOLDABLE
	aj ICE
	ak VALID_SPAWN
	al IMPERMEABLE
	am UNDERWATER_BONEMEALS
	an CORAL_BLOCKS
	ao WALL_CORALS
	ap CORAL_PLANTS
	aq CORALS
	ar BAMBOO_PLANTABLE_ON
	as STANDING_SIGNS
	at WALL_SIGNS
	au SIGNS
	av CEILING_HANGING_SIGNS
	aw WALL_HANGING_SIGNS
	ax ALL_HANGING_SIGNS
	ay ALL_SIGNS
	az DRAGON_IMMUNE
	b PLANKS
	bA NEEDS_IRON_TOOL
	bB NEEDS_STONE_TOOL
	bC FEATURES_CANNOT_REPLACE
	bD LAVA_POOL_STONE_CANNOT_REPLACE
	bE GEODE_INVALID_BLOCKS
	bF FROG_PREFER_JUMP_TO
	bG SCULK_REPLACEABLE
	bH SCULK_REPLACEABLE_WORLD_GEN
	bI ANCIENT_CITY_REPLACEABLE
	bJ ANIMALS_SPAWNABLE_ON
	bK AXOLOTLS_SPAWNABLE_ON
	bL GOATS_SPAWNABLE_ON
	bM MOOSHROOMS_SPAWNABLE_ON
	bN PARROTS_SPAWNABLE_ON
	bO POLAR_BEARS_SPAWNABLE_ON_ALTERNATE
	bP RABBITS_SPAWNABLE_ON
	bQ FOXES_SPAWNABLE_ON
	bR WOLVES_SPAWNABLE_ON
	bS FROGS_SPAWNABLE_ON
	bT AZALEA_GROWS_ON
	bU REPLACEABLE_PLANTS
	bV CONVERTABLE_TO_MUD
	bW MANGROVE_LOGS_CAN_GROW_THROUGH
	bX MANGROVE_ROOTS_CAN_GROW_THROUGH
	bY DEAD_BUSH_MAY_PLACE_ON
	bZ SNAPS_GOAT_HORN
	ba INFINIBURN_END
	bb BASE_STONE_OVERWORLD
	bc STONE_ORE_REPLACEABLES
	bd DEEPSLATE_ORE_REPLACEABLES
	be BASE_STONE_NETHER
	bf OVERWORLD_CARVER_REPLACEABLES
	bg NETHER_CARVER_REPLACEABLES
	bh CANDLE_CAKES
	bi CAULDRONS
	bj CRYSTAL_SOUND_BLOCKS
	bk INSIDE_STEP_SOUND_BLOCKS
	bl OCCLUDES_VIBRATION_SIGNALS
	bm DAMPENS_VIBRATIONS
	bn DRIPSTONE_REPLACEABLE
	bo CAVE_VINES
	bp MOSS_REPLACEABLE
	bq LUSH_GROUND_REPLACEABLE
	br AZALEA_ROOT_REPLACEABLE
	bs SMALL_DRIPLEAF_PLACEABLE
	bt BIG_DRIPLEAF_PLACEABLE
	bu SNOW
	bv MINEABLE_WITH_AXE
	bw MINEABLE_WITH_HOE
	bx MINEABLE_WITH_PICKAXE
	by MINEABLE_WITH_SHOVEL
	bz NEEDS_DIAMOND_TOOL
	c STONE_BRICKS
	ca SNOW_LAYER_CANNOT_SURVIVE_ON
	cb SNOW_LAYER_CAN_SURVIVE_ON
	cc INVALID_SPAWN_INSIDE
	cd SNIFFER_DIGGABLE_BLOCK
	d WOODEN_BUTTONS
	e BUTTONS
	f WOOL_CARPETS
	g WOODEN_DOORS
	h WOODEN_STAIRS
	i WOODEN_SLABS
	j WOODEN_FENCES
	k PRESSURE_PLATES
	l WOODEN_PRESSURE_PLATES
	m STONE_PRESSURE_PLATES
	n WOODEN_TRAPDOORS
	o DOORS
	p SAPLINGS
	q LOGS_THAT_BURN
	r OVERWORLD_NATURAL_LOGS
	s LOGS
	t DARK_OAK_LOGS
	u OAK_LOGS
	v BIRCH_LOGS
	w ACACIA_LOGS
	x CHERRY_LOGS
	y JUNGLE_LOGS
	z SPRUCE_LOGS
	a (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; create
net/minecraft/tags/TagsEntity net/minecraft/tags/EntityTypeTags
	a SKELETONS
	b RAIDERS
	c BEEHIVE_INHABITORS
	d ARROWS
	e IMPACT_PROJECTILES
	f POWDER_SNOW_WALKABLE_MOBS
	g AXOLOTL_ALWAYS_HOSTILES
	h AXOLOTL_HUNT_TARGETS
	i FREEZE_IMMUNE_ENTITY_TYPES
	j FREEZE_HURTS_EXTRA_TYPES
	k FROG_FOOD
	l FALL_DAMAGE_IMMUNE
	m DISMOUNTS_UNDERWATER
	a (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; create
net/minecraft/tags/TagsFluid net/minecraft/tags/FluidTags
	a WATER
	b LAVA
	a (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; create
net/minecraft/tags/TagsItem net/minecraft/tags/ItemTags
	A WARPED_STEMS
	B BAMBOO_BLOCKS
	C WART_BLOCKS
	D BANNERS
	E SAND
	F SMELTS_TO_GLASS
	G STAIRS
	H SLABS
	I WALLS
	J ANVIL
	K RAILS
	L LEAVES
	M TRAPDOORS
	N SMALL_FLOWERS
	O BEDS
	P FENCES
	Q TALL_FLOWERS
	R FLOWERS
	S PIGLIN_REPELLENTS
	T PIGLIN_LOVED
	U IGNORED_BY_PIGLIN_BABIES
	V PIGLIN_FOOD
	W FOX_FOOD
	X GOLD_ORES
	Y IRON_ORES
	Z DIAMOND_ORES
	a WOOL
	aA DAMPENS_VIBRATIONS
	aB CLUSTER_MAX_HARVESTABLES
	aC COMPASSES
	aD HANGING_SIGNS
	aE CREEPER_IGNITERS
	aF NOTE_BLOCK_TOP_INSTRUMENTS
	aG TRIMMABLE_ARMOR
	aH TRIM_MATERIALS
	aI TRIM_TEMPLATES
	aJ SNIFFER_FOOD
	aK DECORATED_POT_SHARDS
	aL SWORDS
	aM AXES
	aN HOES
	aO PICKAXES
	aP SHOVELS
	aQ TOOLS
	aR BREAKS_DECORATED_POTS
	aa REDSTONE_ORES
	ab LAPIS_ORES
	ac COAL_ORES
	ad EMERALD_ORES
	ae COPPER_ORES
	af NON_FLAMMABLE_WOOD
	ag SOUL_FIRE_BASE_BLOCKS
	ah CANDLES
	ai DIRT
	aj TERRACOTTA
	ak COMPLETES_FIND_TREE_TUTORIAL
	al BOATS
	am CHEST_BOATS
	an FISHES
	ao SIGNS
	ap MUSIC_DISCS
	aq CREEPER_DROP_MUSIC_DISCS
	ar COALS
	as ARROWS
	at LECTERN_BOOKS
	au BOOKSHELF_BOOKS
	av BEACON_PAYMENT_ITEMS
	aw STONE_TOOL_MATERIALS
	ax STONE_CRAFTING_MATERIALS
	ay FREEZE_IMMUNE_WEARABLES
	az AXOLOTL_TEMPT_ITEMS
	b PLANKS
	c STONE_BRICKS
	d WOODEN_BUTTONS
	e BUTTONS
	f WOOL_CARPETS
	g WOODEN_DOORS
	h WOODEN_STAIRS
	i WOODEN_SLABS
	j WOODEN_FENCES
	k FENCE_GATES
	l WOODEN_PRESSURE_PLATES
	m WOODEN_TRAPDOORS
	n DOORS
	o SAPLINGS
	p LOGS_THAT_BURN
	q LOGS
	r DARK_OAK_LOGS
	s OAK_LOGS
	t BIRCH_LOGS
	u ACACIA_LOGS
	v CHERRY_LOGS
	w JUNGLE_LOGS
	x SPRUCE_LOGS
	y MANGROVE_LOGS
	z CRIMSON_STEMS
	a (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; bind
net/minecraft/util/ArraySetSorted net/minecraft/util/SortedArraySet
	a DEFAULT_INITIAL_CAPACITY
	b comparator
	c contents
	d size
	a ()Lnet/minecraft/util/ArraySetSorted; create
	a (I)Lnet/minecraft/util/ArraySetSorted; create
	a (Ljava/lang/Object;)Ljava/lang/Object; addOrGet
	a (Ljava/lang/Object;I)V addInternal
	a (Ljava/util/Comparator;)Lnet/minecraft/util/ArraySetSorted; create
	a (Ljava/util/Comparator;I)Lnet/minecraft/util/ArraySetSorted; create
	a ([Ljava/lang/Object;)[Ljava/lang/Object; castRawArray
	b ()Ljava/lang/Object; first
	b (I)I getInsertionPosition
	b (Ljava/lang/Object;)Ljava/lang/Object; get
	c ()Ljava/lang/Object; last
	c (I)V grow
	c (Ljava/lang/Object;)I findIndex
	d (I)V removeInternal
	e (I)Ljava/lang/Object; getInternal
net/minecraft/util/CSVWriter net/minecraft/util/CsvOutput
	a LINE_SEPARATOR
	b FIELD_SEPARATOR
	c output
	d columnCount
	a ()Laol$a; builder
	a (Ljava/lang/Object;)Ljava/lang/String; getStringValue
	a (Ljava/util/stream/Stream;)V writeLine
	a ([Ljava/lang/Object;)V writeRow
net/minecraft/util/ChatDeserializer net/minecraft/util/GsonHelper
	a GSON
	a (Lcom/google/gson/Gson;Ljava/io/Reader;Lcom/google/gson/reflect/TypeToken;)Ljava/lang/Object; fromJson
	a (Lcom/google/gson/Gson;Ljava/io/Reader;Lcom/google/gson/reflect/TypeToken;Z)Ljava/lang/Object; fromNullableJson
	a (Lcom/google/gson/Gson;Ljava/io/Reader;Ljava/lang/Class;)Ljava/lang/Object; fromJson
	a (Lcom/google/gson/Gson;Ljava/io/Reader;Ljava/lang/Class;Z)Ljava/lang/Object; fromNullableJson
	a (Lcom/google/gson/Gson;Ljava/lang/String;Lcom/google/gson/reflect/TypeToken;)Ljava/lang/Object; fromNullableJson
	a (Lcom/google/gson/Gson;Ljava/lang/String;Lcom/google/gson/reflect/TypeToken;Z)Ljava/lang/Object; fromNullableJson
	a (Lcom/google/gson/Gson;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object; fromJson
	a (Lcom/google/gson/Gson;Ljava/lang/String;Ljava/lang/Class;Z)Ljava/lang/Object; fromJson
	a (Lcom/google/gson/JsonElement;)Z isStringValue
	a (Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/lang/String; convertToString
	a (Lcom/google/gson/JsonElement;Ljava/lang/String;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object; convertToObject
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z isStringValue
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;B)B getAsByte
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;C)C getAsCharacter
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;D)D getAsDouble
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;F)F getAsFloat
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;I)I getAsInt
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;J)J getAsLong
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonArray;)Lcom/google/gson/JsonArray; getAsJsonArray
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object; getAsObject
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonObject;)Lcom/google/gson/JsonObject; getAsJsonObject
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/Object;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object; getAsObject
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; getAsString
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/math/BigDecimal;)Ljava/math/BigDecimal; getAsBigDecimal
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/math/BigInteger;)Ljava/math/BigInteger; getAsBigInteger
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/item/Item; getAsItem
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;S)S getAsShort
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Z)Z getAsBoolean
	a (Lcom/google/gson/stream/JsonWriter;Lcom/google/gson/JsonElement;Ljava/util/Comparator;)V writeValue
	a (Ljava/io/Reader;)Lcom/google/gson/JsonObject; parse
	a (Ljava/io/Reader;Z)Lcom/google/gson/JsonObject; parse
	a (Ljava/lang/String;)Lcom/google/gson/JsonObject; parse
	a (Ljava/lang/String;Z)Lcom/google/gson/JsonObject; parse
	a (Ljava/util/Collection;Ljava/util/Comparator;)Ljava/util/Collection; sortByKeyIfNeeded
	b (Lcom/google/gson/Gson;Ljava/io/Reader;Lcom/google/gson/reflect/TypeToken;Z)Ljava/lang/Object; fromJson
	b (Lcom/google/gson/Gson;Ljava/io/Reader;Ljava/lang/Class;Z)Ljava/lang/Object; fromJson
	b (Lcom/google/gson/Gson;Ljava/lang/String;Ljava/lang/Class;Z)Ljava/lang/Object; fromNullableJson
	b (Lcom/google/gson/JsonElement;)Z isNumberValue
	b (Lcom/google/gson/JsonElement;Ljava/lang/String;)Lnet/minecraft/world/item/Item; convertToItem
	b (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z isNumberValue
	b (Ljava/io/Reader;)Lcom/google/gson/JsonArray; parseArray
	b (Ljava/lang/String;)Lcom/google/gson/JsonArray; parseArray
	c (Lcom/google/gson/JsonElement;)Z isBooleanValue
	c (Lcom/google/gson/JsonElement;Ljava/lang/String;)Z convertToBoolean
	c (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z isBooleanValue
	d (Lcom/google/gson/JsonElement;)Ljava/lang/String; getType
	d (Lcom/google/gson/JsonElement;Ljava/lang/String;)D convertToDouble
	d (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z isArrayNode
	e (Lcom/google/gson/JsonElement;)Ljava/lang/String; toStableString
	e (Lcom/google/gson/JsonElement;Ljava/lang/String;)F convertToFloat
	e (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z isObjectNode
	f (Lcom/google/gson/JsonElement;Ljava/lang/String;)J convertToLong
	f (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z isValidPrimitive
	g (Lcom/google/gson/JsonElement;Ljava/lang/String;)I convertToInt
	g (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z isValidNode
	h (Lcom/google/gson/JsonElement;Ljava/lang/String;)B convertToByte
	h (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/String; getAsString
	i (Lcom/google/gson/JsonElement;Ljava/lang/String;)C convertToCharacter
	i (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lnet/minecraft/world/item/Item; getAsItem
	j (Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/math/BigDecimal; convertToBigDecimal
	j (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z getAsBoolean
	k (Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/math/BigInteger; convertToBigInteger
	k (Lcom/google/gson/JsonObject;Ljava/lang/String;)D getAsDouble
	l (Lcom/google/gson/JsonElement;Ljava/lang/String;)S convertToShort
	l (Lcom/google/gson/JsonObject;Ljava/lang/String;)F getAsFloat
	m (Lcom/google/gson/JsonElement;Ljava/lang/String;)Lcom/google/gson/JsonObject; convertToJsonObject
	m (Lcom/google/gson/JsonObject;Ljava/lang/String;)J getAsLong
	n (Lcom/google/gson/JsonElement;Ljava/lang/String;)Lcom/google/gson/JsonArray; convertToJsonArray
	n (Lcom/google/gson/JsonObject;Ljava/lang/String;)I getAsInt
	o (Lcom/google/gson/JsonObject;Ljava/lang/String;)B getAsByte
	p (Lcom/google/gson/JsonObject;Ljava/lang/String;)C getAsCharacter
	q (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/math/BigDecimal; getAsBigDecimal
	r (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/math/BigInteger; getAsBigInteger
	s (Lcom/google/gson/JsonObject;Ljava/lang/String;)S getAsShort
	t (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lcom/google/gson/JsonObject; getAsJsonObject
	u (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lcom/google/gson/JsonArray; getAsJsonArray
net/minecraft/util/ChatTypeAdapterFactory net/minecraft/util/LowerCaseEnumTypeAdapterFactory
	a (Ljava/lang/Object;)Ljava/lang/String; toLowercase
net/minecraft/util/CircularTimer net/minecraft/util/FrameTimer
	a LOGGING_LENGTH
	b loggedTimes
	c logStart
	d logLength
	e logEnd
	a ()I getLogStart
	a (I)J getAverageDuration
	a (II)I scaleAverageDurationTo
	a (J)V logFrameDuration
	a (JII)I scaleSampleTo
	b ()I getLogEnd
	b (I)I wrapIndex
	c ()[J getLog
net/minecraft/util/ColorUtil net/minecraft/util/FastColor
net/minecraft/util/CryptographyException net/minecraft/util/CryptException
net/minecraft/util/DataBits net/minecraft/util/BitStorage
	a ()[J getRaw
	a (I)I get
	a (II)I getAndSet
	a (Ljava/util/function/IntConsumer;)V getAll
	a ([I)V unpack
	b ()I getSize
	b (II)V set
	c ()I getBits
	d ()Lnet/minecraft/util/DataBits; copy
net/minecraft/util/EntitySlice net/minecraft/util/ClassInstanceMultiMap
	a byClass
	b baseClass
	c allInstances
	a ()Ljava/util/List; getAllInstances
	a (Ljava/lang/Class;)Ljava/util/Collection; find
net/minecraft/util/ExceptionSuppressor net/minecraft/util/ExceptionCollector
	a result
	a ()V throwIfPresent
	a (Ljava/lang/Throwable;)V add
net/minecraft/util/FormattedString net/minecraft/util/FormattedCharSequence
	a EMPTY
net/minecraft/util/FormattedStringEmpty net/minecraft/util/FormattedCharSink
net/minecraft/util/HttpUtilities net/minecraft/util/HttpUtil
	a DOWNLOAD_EXECUTOR
	b LOGGER
	a ()I getAvailablePort
	a (I)Z isPortAvailable
	a (Ljava/io/File;Ljava/net/URL;Ljava/util/Map;ILnet/minecraft/util/IProgressUpdate;Ljava/net/Proxy;)Ljava/util/concurrent/CompletableFuture; downloadTo
net/minecraft/util/INamable net/minecraft/util/StringRepresentable
	W PRE_BUILT_MAP_THRESHOLD
	a (Ljava/util/function/Supplier;)Laqa$a; fromEnum
	a (Ljava/util/function/Supplier;Ljava/util/function/Function;)Laqa$a; fromEnumWithMapping
	a ([Lnet/minecraft/util/INamable;)Lcom/mojang/serialization/Keyable; keys
	c ()Ljava/lang/String; getSerializedName
net/minecraft/util/IProgressUpdate net/minecraft/util/ProgressListener
	a ()V stop
	a (I)V progressStagePercentage
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V progressStartNoAbort
	b (Lnet/minecraft/network/chat/IChatBaseComponent;)V progressStart
	c (Lnet/minecraft/network/chat/IChatBaseComponent;)V progressStage
net/minecraft/util/LazyInitVar net/minecraft/util/LazyLoadedValue
	a factory
	a ()Ljava/lang/Object; get
net/minecraft/util/MathHelper net/minecraft/util/Mth
	a PI
	b HALF_PI
	c TWO_PI
	d DEG_TO_RAD
	e RAD_TO_DEG
	f EPSILON
	g SQRT_OF_TWO
	h UUID_VERSION
	i UUID_VERSION_TYPE_4
	j UUID_VARIANT
	k UUID_VARIANT_2
	l SIN_SCALE
	m SIN
	n RANDOM
	o MULTIPLY_DE_BRUIJN_BIT_POSITION
	p ONE_SIXTH
	q FRAC_EXP
	r LUT_SIZE
	s FRAC_BIAS
	t ASIN_TAB
	u COS_TAB
	a ()Ljava/util/UUID; createInsecureUUID
	a (D)I floor
	a (DD)D absMax
	a (DDD)D clamp
	a (DDDDD)D clampedMap
	a (DDDDDD)D lerp2
	a (DDDDDDDDDDD)D lerp3
	a (DI)I quantize
	a (F)F sin
	a (FF)Z equal
	a (FFF)F clamp
	a (FFFFF)F catmullrom
	a (FII)I lerpInt
	a (I)I abs
	a (II)I floorDiv
	a (III)I clamp
	a (IIII)Ljava/util/stream/IntStream; outFromOrigin
	a (IILjava/util/function/IntPredicate;)I binarySearch
	a (J)J square
	a (Ljava/lang/String;I)I getInt
	a (Lnet/minecraft/core/BaseBlockPosition;)J getSeed
	a (Lnet/minecraft/util/RandomSource;)Ljava/util/UUID; createInsecureUUID
	a (Lnet/minecraft/util/RandomSource;DD)D nextDouble
	a (Lnet/minecraft/util/RandomSource;FF)F nextFloat
	a (Lnet/minecraft/util/RandomSource;II)I nextInt
	a (Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/phys/AxisAlignedBB;)Z rayIntersectsAABB
	b (D)J lfloor
	b (DD)Z equal
	b (DDD)D clampedLerp
	b (DDDDD)D map
	b (F)F cos
	b (FF)F positiveModulo
	b (FFF)F clampedLerp
	b (FFFFF)F clampedMap
	b (I)I wrapDegrees
	b (II)I positiveModulo
	b (III)J getSeed
	b (Lnet/minecraft/util/RandomSource;FF)F randomBetween
	b (Lnet/minecraft/util/RandomSource;II)I randomBetweenInclusive
	c (D)I ceil
	c (DD)D positiveModulo
	c (DDD)D inverseLerp
	c (F)F sqrt
	c (FF)F degreesDifference
	c (FFF)F rotateIfNecessary
	c (FFFFF)F map
	c (I)I smallestEncompassingPowerOfTwo
	c (II)Z isMultipleOf
	c (III)Ljava/util/stream/IntStream; outFromOrigin
	c (Lnet/minecraft/util/RandomSource;FF)F normal
	d (D)D wrapDegrees
	d (DD)D atan2
	d (DDD)D lerp
	d (F)I floor
	d (FF)F degreesDifferenceAbs
	d (FFF)F approach
	d (I)Z isPowerOfTwo
	d (II)I roundToward
	e (D)D frac
	e (DD)D lengthSquared
	e (DDD)D lengthSquared
	e (F)F abs
	e (FF)F triangleWave
	e (FFF)F approachDegrees
	e (I)I ceillog2
	e (II)I positiveCeilDiv
	f (D)D invSqrt
	f (DD)D length
	f (DDD)D length
	f (F)I ceil
	f (FFF)I color
	f (I)I log2
	g (D)D fastInvSqrt
	g (F)F wrapDegrees
	g (FFF)F inverseLerp
	g (I)I murmurHash3Mixer
	h (D)D smoothstep
	h (F)F frac
	h (FFF)I hsvToRgb
	h (I)I square
	i (D)D smoothstepDerivative
	i (F)F invSqrt
	i (FFF)F lerp
	j (D)I sign
	j (F)F fastInvCubeRoot
	j (FFF)F rotLerp
	k (D)D square
	k (F)F square
	l (D)D wobble
net/minecraft/util/MinecraftEncryption net/minecraft/util/Crypt
	a SIGNING_ALGORITHM
	b SIGNATURE_BYTES
	c RSA_PUBLIC_KEY_HEADER
	d MIME_LINE_SEPARATOR
	e MIME_ENCODER
	f PUBLIC_KEY_CODEC
	g PRIVATE_KEY_CODEC
	h SYMMETRIC_ALGORITHM
	i SYMMETRIC_BITS
	j ASYMMETRIC_ALGORITHM
	k ASYMMETRIC_BITS
	l BYTE_ENCODING
	m HASH_ALGORITHM
	n PEM_RSA_PRIVATE_KEY_HEADER
	o PEM_RSA_PRIVATE_KEY_FOOTER
	p RSA_PUBLIC_KEY_FOOTER
	a ()Ljavax/crypto/SecretKey; generateSecretKey
	a (ILjava/lang/String;Ljava/security/Key;)Ljavax/crypto/Cipher; setupCipher
	a (ILjava/security/Key;)Ljavax/crypto/Cipher; getCipher
	a (ILjava/security/Key;[B)[B cipherData
	a (Ljava/lang/String;)Ljava/security/PrivateKey; stringToPemRsaPrivateKey
	a (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Laoj$a;)Ljava/security/Key; rsaStringToKey
	a (Ljava/lang/String;Ljava/security/PublicKey;Ljavax/crypto/SecretKey;)[B digestData
	a (Ljava/security/Key;[B)[B encryptUsingKey
	a (Ljava/security/PrivateKey;)Ljava/lang/String; pemRsaPrivateKeyToString
	a (Ljava/security/PrivateKey;[B)Ljavax/crypto/SecretKey; decryptByteToSecretKey
	a (Ljava/security/PublicKey;)Ljava/lang/String; rsaPublicKeyToString
	a ([B)Ljava/security/PublicKey; byteToPublicKey
	a ([[B)[B digestData
	b ()Ljava/security/KeyPair; generateKeyPair
	b (Ljava/lang/String;)Ljava/security/PublicKey; stringToRsaPublicKey
	b (Ljava/security/Key;[B)[B decryptUsingKey
	b ([B)Ljava/security/PrivateKey; byteToPrivateKey
net/minecraft/util/RegistryID net/minecraft/util/CrudeIncrementalIntIdentityHashBiMap
	b NOT_FOUND
	c EMPTY_SLOT
	d LOADFACTOR
	e keys
	f values
	g byId
	h nextId
	i size
	a ()V clear
	a (I)Ljava/lang/Object; byId
	a (Ljava/lang/Object;)I getId
	a (Ljava/lang/Object;I)V addMapping
	b ()I size
	b (Ljava/lang/Object;)Z contains
	b (Ljava/lang/Object;I)I indexOf
	c ()Lnet/minecraft/util/RegistryID; copy
	c (I)Lnet/minecraft/util/RegistryID; create
	c (Ljava/lang/Object;)I add
	d ()I nextId
	d (I)Z contains
	d (Ljava/lang/Object;)I hash
	e (I)I getValue
	f (I)V grow
	g (I)I findEmpty
net/minecraft/util/SessionLock net/minecraft/util/DirectoryLock
	a LOCK_FILE
	b lockFile
	c lock
	d DUMMY
	a ()Z isValid
	a (Ljava/nio/file/Path;)Lnet/minecraft/util/SessionLock; create
	b (Ljava/nio/file/Path;)Z isLocked
net/minecraft/util/SessionLock$ExceptionWorldConflict net/minecraft/util/DirectoryLock$LockException
	a (Ljava/nio/file/Path;)Lnet/minecraft/util/SessionLock$ExceptionWorldConflict; alreadyLocked
net/minecraft/util/TimeRange net/minecraft/util/TimeUtil
	a NANOSECONDS_PER_SECOND
	b NANOSECONDS_PER_MILLISECOND
	a (II)Lnet/minecraft/util/valueproviders/UniformInt; rangeOfSeconds
net/minecraft/util/UtilColor net/minecraft/util/StringUtil
	a STRIP_COLOR_PATTERN
	b LINE_PATTERN
	c LINE_END_PATTERN
	a (I)Ljava/lang/String; formatTickDuration
	a (Ljava/lang/String;)Ljava/lang/String; stripColor
	a (Ljava/lang/String;IZ)Ljava/lang/String; truncateStringIfNecessary
	b (Ljava/lang/String;)Z isNullOrEmpty
	c (Ljava/lang/String;)I lineCount
	d (Ljava/lang/String;)Z endsWithNewLine
	e (Ljava/lang/String;)Ljava/lang/String; trimChatMessage
net/minecraft/util/datafix/DataBitsPacked net/minecraft/util/datafix/PackedBitStorage
	a BIT_TO_LONG_SHIFT
	b data
	c bits
	d mask
	e size
	a ()[J getRaw
	a (I)I get
	a (II)V set
	b ()I getBits
net/minecraft/util/datafix/DataConverterRegistry net/minecraft/util/datafix/DataFixers
	a BLENDING_VERSION
	b SAME
	c SAME_NAMESPACED
	d dataFixer
	a ()Lcom/mojang/datafixers/DataFixer; getDataFixer
	a (Lcom/mojang/datafixers/DataFixerBuilder;)V addFixers
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/util/function/UnaryOperator; createRenamer
	a (Ljava/util/Map;)Ljava/util/function/UnaryOperator; createRenamer
	a (Ljava/util/Set;)Lcom/mojang/datafixers/DataFixer; createFixerUpper
net/minecraft/util/datafix/fixes/ChunkConverterPalette net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix
	A BED_BLOCK_MAP
	B BANNER_BLOCK_MAP
	C AIR
	D SIZE
	a NORTH_WEST_MASK
	b WEST_MASK
	c SOUTH_WEST_MASK
	d SOUTH_MASK
	e SOUTH_EAST_MASK
	f EAST_MASK
	g NORTH_EAST_MASK
	h NORTH_MASK
	i LOGGER
	j VIRTUAL
	k FIX
	l PUMPKIN
	m SNOWY_PODZOL
	n SNOWY_GRASS
	o SNOWY_MYCELIUM
	p UPPER_SUNFLOWER
	q UPPER_LILAC
	r UPPER_TALL_GRASS
	s UPPER_LARGE_FERN
	t UPPER_ROSE_BUSH
	u UPPER_PEONY
	v FLOWER_POT_MAP
	w SKULL_MAP
	x DOOR_MAP
	y NOTE_BLOCK_MAP
	z DYE_COLOR_MAP
	a (Lcom/mojang/serialization/Dynamic;)Ljava/lang/String; getName
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Ljava/lang/String; getProperty
	a (Ljava/util/Map;ILjava/lang/String;)V addBeds
	a (Ljava/util/Map;ILjava/lang/String;Ljava/lang/String;)V mapSkull
	a (Ljava/util/Map;Ljava/lang/String;I)V mapDoor
	a (Lnet/minecraft/util/RegistryID;Lcom/mojang/serialization/Dynamic;)I idFor
	a (ZZZZ)I getSideMask
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fix
	b (Ljava/util/Map;ILjava/lang/String;)V addBanners
net/minecraft/util/datafix/fixes/ChunkConverterPalette$Direction net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction
	a DOWN
	b UP
	c NORTH
	d SOUTH
	e WEST
	f EAST
	g axis
	h axisDirection
	i $VALUES
	a ()Lnet/minecraft/util/datafix/fixes/ChunkConverterPalette$Direction$AxisDirection; getAxisDirection
	b ()Lnet/minecraft/util/datafix/fixes/ChunkConverterPalette$Direction$Axis; getAxis
	c ()[Lnet/minecraft/util/datafix/fixes/ChunkConverterPalette$Direction; $values
net/minecraft/util/datafix/fixes/ChunkConverterPalette$Direction$Axis net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction$Axis
	a X
	b Y
	c Z
	d $VALUES
	a ()[Lnet/minecraft/util/datafix/fixes/ChunkConverterPalette$Direction$Axis; $values
net/minecraft/util/datafix/fixes/ChunkConverterPalette$Direction$AxisDirection net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction$AxisDirection
	a POSITIVE
	b NEGATIVE
	c step
	d $VALUES
	a ()I getStep
	b ()[Lnet/minecraft/util/datafix/fixes/ChunkConverterPalette$Direction$AxisDirection; $values
net/minecraft/util/datafix/fixes/DataConverterAddChoices net/minecraft/util/datafix/fixes/AddNewChoices
	a name
	b type
	a (Ljava/lang/String;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;)Lcom/mojang/datafixers/TypeRewriteRule; cap
net/minecraft/util/datafix/fixes/DataConverterAdvancement net/minecraft/util/datafix/fixes/AdvancementsFix
	a RENAMES
net/minecraft/util/datafix/fixes/DataConverterAdvancementBase net/minecraft/util/datafix/fixes/AdvancementsRenameFix
	a name
	b renamer
net/minecraft/util/datafix/fixes/DataConverterArmorStand net/minecraft/util/datafix/fixes/EntityArmorStandSilentFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
net/minecraft/util/datafix/fixes/DataConverterAttributes net/minecraft/util/datafix/fixes/AttributesRename
	a RENAMES
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fixItemStackTag
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixName
	b (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fixEntity
net/minecraft/util/datafix/fixes/DataConverterBanner net/minecraft/util/datafix/fixes/ItemBannerColorFix
net/minecraft/util/datafix/fixes/DataConverterBannerColour net/minecraft/util/datafix/fixes/BlockEntityBannerColorFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
net/minecraft/util/datafix/fixes/DataConverterBedBlock net/minecraft/util/datafix/fixes/ChunkBedBlockEntityInjecterFix
	a (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/templates/List$ListType;)Lcom/mojang/datafixers/TypeRewriteRule; cap
net/minecraft/util/datafix/fixes/DataConverterBedItem net/minecraft/util/datafix/fixes/BedItemColorFix
net/minecraft/util/datafix/fixes/DataConverterBiome net/minecraft/util/datafix/fixes/BiomeFix
	a BIOMES
net/minecraft/util/datafix/fixes/DataConverterBiomeBase net/minecraft/util/datafix/fixes/RenameBiomesFix
	a name
	b biomes
net/minecraft/util/datafix/fixes/DataConverterBitStorageAlign net/minecraft/util/datafix/fixes/BitStorageAlignFix
	a BIT_TO_LONG_SHIFT
	b SECTION_WIDTH
	c SECTION_HEIGHT
	d SECTION_SIZE
	e HEIGHTMAP_BITS
	f HEIGHTMAP_SIZE
	a (II[J)[J addPadding
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; updateSections
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; updateHeightmaps
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;II)Lcom/mojang/serialization/Dynamic; updateBitStorage
net/minecraft/util/datafix/fixes/DataConverterBlockEntityKeepPacked net/minecraft/util/datafix/fixes/BlockEntityKeepPacked
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
net/minecraft/util/datafix/fixes/DataConverterBlockEntityUUID net/minecraft/util/datafix/fixes/BlockEntityUUIDFix
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateSkull
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateConduit
net/minecraft/util/datafix/fixes/DataConverterBlockName net/minecraft/util/datafix/fixes/BlockNameFlatteningFix
net/minecraft/util/datafix/fixes/DataConverterBlockRename net/minecraft/util/datafix/fixes/BlockRenameFix
	a name
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/DataFix; create
	a (Ljava/lang/String;)Ljava/lang/String; fixBlock
net/minecraft/util/datafix/fixes/DataConverterBook net/minecraft/util/datafix/fixes/ItemWrittenBookPagesStrictJsonFix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
net/minecraft/util/datafix/fixes/DataConverterCatType net/minecraft/util/datafix/fixes/CatTypeFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
net/minecraft/util/datafix/fixes/DataConverterChunkLightRemove net/minecraft/util/datafix/fixes/ChunkLightRemoveFix
net/minecraft/util/datafix/fixes/DataConverterChunkStatus net/minecraft/util/datafix/fixes/ChunkStatusFix
net/minecraft/util/datafix/fixes/DataConverterChunkStatus2 net/minecraft/util/datafix/fixes/ChunkStatusFix2
	a RENAMES_AND_DOWNGRADES
net/minecraft/util/datafix/fixes/DataConverterChunkStructuresTemplateRename net/minecraft/util/datafix/fixes/ChunkStructuresTemplateRenameFix
	a RENAMES
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixChildren
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
net/minecraft/util/datafix/fixes/DataConverterColorlessShulkerEntity net/minecraft/util/datafix/fixes/ColorlessShulkerEntityFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
net/minecraft/util/datafix/fixes/DataConverterCoral net/minecraft/util/datafix/fixes/RenamedCoralFix
	a RENAMED_IDS
net/minecraft/util/datafix/fixes/DataConverterCoralFan net/minecraft/util/datafix/fixes/RenamedCoralFansFix
	a RENAMED_IDS
net/minecraft/util/datafix/fixes/DataConverterCustomNameEntity net/minecraft/util/datafix/fixes/EntityCustomNameToComponentFix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTagCustomName
net/minecraft/util/datafix/fixes/DataConverterCustomNameItem net/minecraft/util/datafix/fixes/ItemCustomNameToComponentFix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
net/minecraft/util/datafix/fixes/DataConverterCustomNameTile net/minecraft/util/datafix/fixes/BlockEntityCustomNameToComponentFix
net/minecraft/util/datafix/fixes/DataConverterDropChances net/minecraft/util/datafix/fixes/EntityRedundantChanceTagsFix
	a FLOAT_LIST_CODEC
	a (Lcom/mojang/serialization/OptionalDynamic;I)Z isZeroList
net/minecraft/util/datafix/fixes/DataConverterDye net/minecraft/util/datafix/fixes/DyeItemRenameFix
	a RENAMED_IDS
net/minecraft/util/datafix/fixes/DataConverterEntity net/minecraft/util/datafix/fixes/EntityIdFix
	a ID_MAP
net/minecraft/util/datafix/fixes/DataConverterEntityBlockState net/minecraft/util/datafix/fixes/EntityBlockStateFix
	a MAP
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; updateFallingBlock
	a (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/datafixers/Typed; updateBlockToBlockState
	a (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed; updateEntity
	a (Ljava/lang/String;)I getBlockId
net/minecraft/util/datafix/fixes/DataConverterEntityCatSplit net/minecraft/util/datafix/fixes/EntityCatSplitFix
	a (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; getNewNameAndTag
net/minecraft/util/datafix/fixes/DataConverterEntityCodSalmon net/minecraft/util/datafix/fixes/EntityCodSalmonFix
	a RENAMED_IDS
	b RENAMED_EGG_IDS
	a (Ljava/lang/String;)Ljava/lang/String; rename
net/minecraft/util/datafix/fixes/DataConverterEntityName net/minecraft/util/datafix/fixes/EntityRenameFix
	a name
	a (Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/Typed; getEntity
	a (Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair; fix
net/minecraft/util/datafix/fixes/DataConverterEntityNameAbstract net/minecraft/util/datafix/fixes/SimpleEntityRenameFix
	a (Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair; fix
	a (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; getNewNameAndTag
net/minecraft/util/datafix/fixes/DataConverterEntityProjectileOwner net/minecraft/util/datafix/fixes/EntityProjectileOwnerFix
	a (JJ)[I createUUIDArray
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; updateProjectiles
	a (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed; updateEntity
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateOwnerArrow
	a (Lcom/mojang/serialization/Dynamic;JJ)Lcom/mojang/serialization/Dynamic; setUUID
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateOwnerLlamaSpit
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateItemPotion
	d (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateOwnerThrowable
net/minecraft/util/datafix/fixes/DataConverterEntityPufferfish net/minecraft/util/datafix/fixes/EntityPufferfishRenameFix
	a RENAMED_IDS
	a (Ljava/lang/String;)Ljava/lang/String; rename
net/minecraft/util/datafix/fixes/DataConverterEntityRavagerRename net/minecraft/util/datafix/fixes/EntityRavagerRenameFix
	a RENAMED_IDS
	a (Ljava/lang/String;)Ljava/lang/String; rename
net/minecraft/util/datafix/fixes/DataConverterEntityRename net/minecraft/util/datafix/fixes/EntityTheRenameningFix
	a RENAMED_IDS
	b RENAMED_BLOCKS
	c RENAMED_ITEMS
	d MINECRAFT_BRED
	a (Ljava/lang/String;)Ljava/lang/String; rename
net/minecraft/util/datafix/fixes/DataConverterEntityRenameAbstract net/minecraft/util/datafix/fixes/SimplestEntityRenameFix
	a name
	a (Ljava/lang/String;)Ljava/lang/String; rename
net/minecraft/util/datafix/fixes/DataConverterEntityShulkerRotation net/minecraft/util/datafix/fixes/EntityShulkerRotationFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
net/minecraft/util/datafix/fixes/DataConverterEntityTippedArrow net/minecraft/util/datafix/fixes/EntityTippedArrowFix
	a (Ljava/lang/String;)Ljava/lang/String; rename
net/minecraft/util/datafix/fixes/DataConverterEntityUUID net/minecraft/util/datafix/fixes/EntityUUIDFix
	b LOGGER
	c ABSTRACT_HORSES
	d TAMEABLE_ANIMALS
	e ANIMALS
	f MOBS
	g LIVING_ENTITIES
	h PROJECTILES
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateLivingEntity
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateEntityUUID
	d (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updatePiglin
	e (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateEvokerFangs
	f (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateZombieVillager
	g (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateAreaEffectCloud
	h (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateShulkerBullet
	i (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateItem
	j (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateFox
	k (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateHurtBy
	l (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateAnimalOwner
	m (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateAnimal
	n (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateMob
	o (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateProjectile
net/minecraft/util/datafix/fixes/DataConverterEntityZombifiedPiglinRename net/minecraft/util/datafix/fixes/EntityZombifiedPiglinRenameFix
	a RENAMED_IDS
	a (Ljava/lang/String;)Ljava/lang/String; rename
net/minecraft/util/datafix/fixes/DataConverterEquipment net/minecraft/util/datafix/fixes/EntityEquipmentToArmorAndHandFix
	a (Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule; cap
net/minecraft/util/datafix/fixes/DataConverterFlatten net/minecraft/util/datafix/fixes/ItemStackTheFlatteningFix
	a MAP
	b IDS
	c DAMAGE_IDS
	a (Ljava/lang/String;I)Ljava/lang/String; updateItem
net/minecraft/util/datafix/fixes/DataConverterFlattenData net/minecraft/util/datafix/fixes/BlockStateData
	a FILTER_ME
	b LOGGER
	c MAP
	d BLOCK_DEFAULTS
	e ID_BY_OLD
	f ID_BY_OLD_NAME
	a ()V bootstrap0
	a (I)Ljava/lang/String; upgradeBlock
	a (ILjava/lang/String;[Ljava/lang/String;)V register
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; upgradeBlockStateTag
	a (Ljava/lang/String;)Ljava/lang/String; upgradeBlock
	b ()V bootstrap1
	b (I)Lcom/mojang/serialization/Dynamic; getTag
	b (Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; parse
	c ()V bootstrap2
	d ()V bootstrap3
	e ()V bootstrap4
	f ()V bootstrap5
	g ()V bootstrap6
	h ()V bootstrap7
	i ()V bootstrap8
	j ()V bootstrap9
	k ()V bootstrap10
	l ()V bootstrap11
	m ()V bootstrap12
	n ()V bootstrap13
	o ()V bootstrap14
	p ()V bootstrap15
	q ()V finalizeMaps
net/minecraft/util/datafix/fixes/DataConverterFlattenSpawnEgg net/minecraft/util/datafix/fixes/ItemStackSpawnEggFix
	a itemType
	b MAP
net/minecraft/util/datafix/fixes/DataConverterFlattenState net/minecraft/util/datafix/fixes/BlockStateStructureTemplateFix
net/minecraft/util/datafix/fixes/DataConverterFurnaceRecipesUsed net/minecraft/util/datafix/fixes/FurnaceRecipeFix
	a (Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule; cap
	a (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; updateFurnaceContents
net/minecraft/util/datafix/fixes/DataConverterGossip net/minecraft/util/datafix/fixes/GossipUUIDFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
net/minecraft/util/datafix/fixes/DataConverterGuardian net/minecraft/util/datafix/fixes/EntityElderGuardianSplitFix
	a (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; getNewNameAndTag
net/minecraft/util/datafix/fixes/DataConverterHanging net/minecraft/util/datafix/fixes/EntityPaintingItemFrameDirectionFix
	a DIRECTIONS
	a (Lcom/mojang/serialization/Dynamic;ZZ)Lcom/mojang/serialization/Dynamic; doFix
net/minecraft/util/datafix/fixes/DataConverterHealth net/minecraft/util/datafix/fixes/EntityHealthFix
	a ENTITIES
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
net/minecraft/util/datafix/fixes/DataConverterHeightmapRenaming net/minecraft/util/datafix/fixes/HeightmapRenamingFix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fix
net/minecraft/util/datafix/fixes/DataConverterHorse net/minecraft/util/datafix/fixes/EntityHorseSplitFix
	a (Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair; fix
net/minecraft/util/datafix/fixes/DataConverterIglooMetadataRemoval net/minecraft/util/datafix/fixes/IglooMetadataRemovalFix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; removeIglooPieces
	c (Lcom/mojang/serialization/Dynamic;)Z isIglooPiece
net/minecraft/util/datafix/fixes/DataConverterItemFrame net/minecraft/util/datafix/fixes/EntityItemFrameDirectionFix
	a (B)B direction2dTo3d
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
net/minecraft/util/datafix/fixes/DataConverterItemLoreComponentize net/minecraft/util/datafix/fixes/ItemLoreFix
	a (Ljava/lang/String;)Ljava/lang/String; fixLoreEntry
	a (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; fixLoreList
net/minecraft/util/datafix/fixes/DataConverterItemName net/minecraft/util/datafix/fixes/ItemRenameFix
	a name
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/DataFix; create
	a (Ljava/lang/String;)Ljava/lang/String; fixItem
net/minecraft/util/datafix/fixes/DataConverterItemStackEnchantment net/minecraft/util/datafix/fixes/ItemStackEnchantmentNamesFix
	a MAP
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
net/minecraft/util/datafix/fixes/DataConverterItemStackUUID net/minecraft/util/datafix/fixes/ItemStackUUIDFix
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateAttributeModifiers
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateSkullOwner
net/minecraft/util/datafix/fixes/DataConverterJigsawProperties net/minecraft/util/datafix/fixes/JigsawPropertiesFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
net/minecraft/util/datafix/fixes/DataConverterJigsawRotation net/minecraft/util/datafix/fixes/JigsawRotationFix
	a RENAMES
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fix
net/minecraft/util/datafix/fixes/DataConverterJukeBox net/minecraft/util/datafix/fixes/BlockEntityJukeboxFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
net/minecraft/util/datafix/fixes/DataConverterKeybind net/minecraft/util/datafix/fixes/OptionsKeyLwjgl3Fix
	a KEY_UNKNOWN
	b MAP
net/minecraft/util/datafix/fixes/DataConverterKeybind2 net/minecraft/util/datafix/fixes/OptionsKeyTranslationFix
net/minecraft/util/datafix/fixes/DataConverterLang net/minecraft/util/datafix/fixes/OptionsLowerCaseLanguageFix
net/minecraft/util/datafix/fixes/DataConverterLeaves net/minecraft/util/datafix/fixes/LeavesFix
	a NORTH_WEST_MASK
	b WEST_MASK
	c SOUTH_WEST_MASK
	d SOUTH_MASK
	e SOUTH_EAST_MASK
	f EAST_MASK
	g NORTH_EAST_MASK
	h NORTH_MASK
	i DIRECTIONS
	j DECAY_DISTANCE
	k SIZE_BITS
	l SIZE
	m LEAVES
	n LOGS
	a (I)I getX
	a (III)I getIndex
	a (ZZZZ)I getSideMask
	b (I)I getY
	c (I)I getZ
net/minecraft/util/datafix/fixes/DataConverterLeavesBiome net/minecraft/util/datafix/fixes/ChunkBiomeFix
net/minecraft/util/datafix/fixes/DataConverterLevelDataGeneratorOptions net/minecraft/util/datafix/fixes/LevelDataGeneratorOptionsFix
	a MAP
	b GENERATOR_OPTIONS
	a (Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair; getLayerInfoFromString
	a (Ljava/lang/String;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; convert
	b (Ljava/lang/String;)Ljava/util/List; getLayersInfoFromString
net/minecraft/util/datafix/fixes/DataConverterMap net/minecraft/util/datafix/fixes/ItemStackMapIdFix
net/minecraft/util/datafix/fixes/DataConverterMapId net/minecraft/util/datafix/fixes/MapIdFix
net/minecraft/util/datafix/fixes/DataConverterMaterialId net/minecraft/util/datafix/fixes/ItemIdFix
	a ITEM_NAMES
	a (I)Ljava/lang/String; getItem
net/minecraft/util/datafix/fixes/DataConverterMemoryExpiry net/minecraft/util/datafix/fixes/MemoryExpiryDataFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; updateMemoryEntry
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateBrain
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateMemories
	d (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; wrapMemoryValue
net/minecraft/util/datafix/fixes/DataConverterMinecart net/minecraft/util/datafix/fixes/EntityMinecartIdentifiersFix
	a MINECART_BY_ID
net/minecraft/util/datafix/fixes/DataConverterMiscUUID net/minecraft/util/datafix/fixes/LevelUUIDFix
	b LOGGER
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateWanderingTrader
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateDragonFight
	d (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateCustomBossEvents
net/minecraft/util/datafix/fixes/DataConverterMissingDimension net/minecraft/util/datafix/fixes/MissingDimensionFix
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/Type; flatType
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; recreateSettings
	a (Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/types/Type; fields
	a (Ljava/lang/String;Lcom/mojang/datafixers/types/Type;Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/types/Type; optionalFields
	b (Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/types/Type; optionalFields
net/minecraft/util/datafix/fixes/DataConverterMobSpawner net/minecraft/util/datafix/fixes/MobSpawnerEntityIdentifiersFix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fix
net/minecraft/util/datafix/fixes/DataConverterNamedEntity net/minecraft/util/datafix/fixes/NamedEntityFix
	a name
	b entityName
	c type
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
net/minecraft/util/datafix/fixes/DataConverterNewVillage net/minecraft/util/datafix/fixes/NewVillageFix
	a (Lcom/mojang/datafixers/types/templates/CompoundList$CompoundListType;)Lcom/mojang/datafixers/TypeRewriteRule; cap
net/minecraft/util/datafix/fixes/DataConverterObjectiveDisplayName net/minecraft/util/datafix/fixes/ObjectiveDisplayNameFix
net/minecraft/util/datafix/fixes/DataConverterObjectiveRenderType net/minecraft/util/datafix/fixes/ObjectiveRenderTypeFix
	a (Ljava/lang/String;)Ljava/lang/String; getRenderType
net/minecraft/util/datafix/fixes/DataConverterOminousBannerBlockEntityRename net/minecraft/util/datafix/fixes/OminousBannerBlockEntityRenameFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
net/minecraft/util/datafix/fixes/DataConverterOminousBannerRename net/minecraft/util/datafix/fixes/OminousBannerRenameFix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixItemStackTag
net/minecraft/util/datafix/fixes/DataConverterOptionsAddTextBackground net/minecraft/util/datafix/fixes/OptionsAddTextBackgroundFix
	a (Ljava/lang/String;)D calculateBackground
net/minecraft/util/datafix/fixes/DataConverterPOI net/minecraft/util/datafix/fixes/ReorganizePoi
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; cap
net/minecraft/util/datafix/fixes/DataConverterPOIRebuild net/minecraft/util/datafix/fixes/ForcePoiRebuild
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; cap
net/minecraft/util/datafix/fixes/DataConverterPainting net/minecraft/util/datafix/fixes/EntityPaintingMotiveFix
	a MAP
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
net/minecraft/util/datafix/fixes/DataConverterPiston net/minecraft/util/datafix/fixes/BlockEntityBlockStateFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
net/minecraft/util/datafix/fixes/DataConverterPlayerUUID net/minecraft/util/datafix/fixes/PlayerUUIDFix
net/minecraft/util/datafix/fixes/DataConverterPotionId net/minecraft/util/datafix/fixes/ItemPotionFix
	a DEFAULT
	b SPLASH
	c POTIONS
net/minecraft/util/datafix/fixes/DataConverterPotionWater net/minecraft/util/datafix/fixes/ItemWaterPotionFix
net/minecraft/util/datafix/fixes/DataConverterProtoChunk net/minecraft/util/datafix/fixes/ChunkToProtochunkFix
	a NUM_SECTIONS
	a (III)S packOffsetCoordinates
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixChunkData
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; repackBiomes
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; repackTicks
net/minecraft/util/datafix/fixes/DataConverterRecipeBase net/minecraft/util/datafix/fixes/RecipesRenameFix
	a name
	b renamer
net/minecraft/util/datafix/fixes/DataConverterRecipeRename net/minecraft/util/datafix/fixes/RecipesRenameningFix
	a RECIPES
net/minecraft/util/datafix/fixes/DataConverterRecipes net/minecraft/util/datafix/fixes/RecipesFix
	a RECIPES
net/minecraft/util/datafix/fixes/DataConverterRedstoneConnections net/minecraft/util/datafix/fixes/RedstoneWireConnectionsFix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateRedstoneConnections
	a (Ljava/lang/String;)Z isConnected
net/minecraft/util/datafix/fixes/DataConverterRemoveGolemGossip net/minecraft/util/datafix/fixes/RemoveGolemGossipFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixValue
net/minecraft/util/datafix/fixes/DataConverterRiding net/minecraft/util/datafix/fixes/EntityRidingToPassengersFix
	a (Lcom/mojang/datafixers/schemas/Schema;Lcom/mojang/datafixers/schemas/Schema;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule; cap
net/minecraft/util/datafix/fixes/DataConverterSaddle net/minecraft/util/datafix/fixes/EntityHorseSaddleFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
net/minecraft/util/datafix/fixes/DataConverterSavedDataUUID net/minecraft/util/datafix/fixes/SavedDataUUIDFix
	b LOGGER
net/minecraft/util/datafix/fixes/DataConverterSettingRename net/minecraft/util/datafix/fixes/OptionsRenameFieldFix
	a fixName
	b fieldFrom
	c fieldTo
net/minecraft/util/datafix/fixes/DataConverterShoulderEntity net/minecraft/util/datafix/fixes/WriteAndReadFix
	a name
	b type
net/minecraft/util/datafix/fixes/DataConverterShulker net/minecraft/util/datafix/fixes/EntityShulkerColorFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
net/minecraft/util/datafix/fixes/DataConverterShulkerBoxBlock net/minecraft/util/datafix/fixes/BlockEntityShulkerBoxColorFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
net/minecraft/util/datafix/fixes/DataConverterShulkerBoxItem net/minecraft/util/datafix/fixes/ItemShulkerBoxColorFix
	a NAMES_BY_COLOR
net/minecraft/util/datafix/fixes/DataConverterSignText net/minecraft/util/datafix/fixes/BlockEntitySignTextStrictJsonFix
	a GSON
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; updateLine
net/minecraft/util/datafix/fixes/DataConverterSkeleton net/minecraft/util/datafix/fixes/EntitySkeletonSplitFix
	a (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; getNewNameAndTag
net/minecraft/util/datafix/fixes/DataConverterSpawnEgg net/minecraft/util/datafix/fixes/ItemSpawnEggFix
	a ID_TO_ENTITY
net/minecraft/util/datafix/fixes/DataConverterStatistic net/minecraft/util/datafix/fixes/StatsCounterFix
	a SKIP
	b CUSTOM_MAP
	c BLOCK_KEY
	d NEW_BLOCK_KEY
	e ITEM_KEYS
	f ENTITY_KEYS
	g ENTITIES
	h NEW_CUSTOM_KEY
	a (Ljava/lang/String;)Ljava/lang/String; upgradeItem
	b (Ljava/lang/String;)Ljava/lang/String; upgradeBlock
net/minecraft/util/datafix/fixes/DataConverterStriderGravity net/minecraft/util/datafix/fixes/StriderGravityFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
net/minecraft/util/datafix/fixes/DataConverterStructureReference net/minecraft/util/datafix/fixes/StructureReferenceCountFix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; setCountToAtLeastOne
net/minecraft/util/datafix/fixes/DataConverterTeamDisplayName net/minecraft/util/datafix/fixes/TeamDisplayNameFix
net/minecraft/util/datafix/fixes/DataConverterTileEntity net/minecraft/util/datafix/fixes/BlockEntityIdFix
	a ID_MAP
net/minecraft/util/datafix/fixes/DataConverterTrappedChest net/minecraft/util/datafix/fixes/TrappedChestBlockEntityFix
	a LOGGER
	b SIZE
	c SIZE_BITS
net/minecraft/util/datafix/fixes/DataConverterTypes net/minecraft/util/datafix/fixes/References
	A WORLD_GEN_SETTINGS
	a LEVEL
	b PLAYER
	c CHUNK
	d HOTBAR
	e OPTIONS
	f STRUCTURE
	g STATS
	h SAVED_DATA
	i ADVANCEMENTS
	j POI_CHUNK
	k ENTITY_CHUNK
	l BLOCK_ENTITY
	m ITEM_STACK
	n BLOCK_STATE
	o ENTITY_NAME
	p ENTITY_TREE
	q ENTITY
	r BLOCK_NAME
	s ITEM_NAME
	t GAME_EVENT_NAME
	u UNTAGGED_SPAWNER
	v STRUCTURE_FEATURE
	w OBJECTIVE
	x TEAM
	y RECIPE
	z BIOME
net/minecraft/util/datafix/fixes/DataConverterUUID net/minecraft/util/datafix/fixes/EntityStringUuidFix
net/minecraft/util/datafix/fixes/DataConverterUUIDBase net/minecraft/util/datafix/fixes/AbstractUUIDFix
	a typeReference
	a (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed; updateNamedChoice
	a (Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional; createUUIDFromML
	a (Lcom/mojang/serialization/Dynamic;JJ)Ljava/util/Optional; createUUIDTag
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Ljava/util/Optional; createUUIDFromString
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional; replaceUUIDString
	b (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional; replaceUUIDMLTag
	c (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional; replaceUUIDLeastMost
	d (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional; createUUIDFromLongs
net/minecraft/util/datafix/fixes/DataConverterVBO net/minecraft/util/datafix/fixes/OptionsForceVBOFix
net/minecraft/util/datafix/fixes/DataConverterVillagerFollowRange net/minecraft/util/datafix/fixes/VillagerFollowRangeFix
	a ORIGINAL_VALUE
	b NEW_BASE_VALUE
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixValue
net/minecraft/util/datafix/fixes/DataConverterVillagerLevelXp net/minecraft/util/datafix/fixes/VillagerRebuildLevelAndXpFix
	a TRADES_PER_LEVEL
	b LEVEL_XP_THRESHOLDS
	a (I)I getMinXpPerLevel
	a (Lcom/mojang/datafixers/Typed;I)Lcom/mojang/datafixers/Typed; addLevel
	b (Lcom/mojang/datafixers/Typed;I)Lcom/mojang/datafixers/Typed; addXpFromLevel
net/minecraft/util/datafix/fixes/DataConverterVillagerProfession net/minecraft/util/datafix/fixes/VillagerDataFix
	a (II)Ljava/lang/String; upgradeData
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
net/minecraft/util/datafix/fixes/DataConverterVillagerTrade net/minecraft/util/datafix/fixes/VillagerTradeFix
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; updateItemStack
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
net/minecraft/util/datafix/fixes/DataConverterWallProperty net/minecraft/util/datafix/fixes/WallPropertyFix
	a WALL_BLOCKS
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; upgradeBlockStateTag
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; fixWallProperty
	a (Ljava/lang/String;)Ljava/lang/String; mapProperty
net/minecraft/util/datafix/fixes/DataConverterWolf net/minecraft/util/datafix/fixes/EntityWolfColorFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
net/minecraft/util/datafix/fixes/DataConverterWorldGenSettings net/minecraft/util/datafix/fixes/LevelFlatGeneratorInfoFix
	a DEFAULT
	b GENERATOR_OPTIONS
	c SPLITTER
	d LAYER_SPLITTER
	e OLD_AMOUNT_SPLITTER
	f AMOUNT_SPLITTER
	g BLOCK_SPLITTER
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fix
	a (Ljava/lang/String;)Ljava/lang/String; fixString
net/minecraft/util/datafix/fixes/DataConverterWorldGenSettingsBuilding net/minecraft/util/datafix/fixes/WorldGenSettingsFix
	a VILLAGE
	b DESERT_PYRAMID
	c IGLOO
	d JUNGLE_TEMPLE
	e SWAMP_HUT
	f PILLAGER_OUTPOST
	g END_CITY
	h WOODLAND_MANSION
	i OCEAN_MONUMENT
	j DEFAULTS
	a (JLcom/mojang/serialization/DynamicLike;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; noise
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fix
	a (Lcom/mojang/serialization/Dynamic;J)Lcom/mojang/serialization/Dynamic; defaultOverworld
	a (Lcom/mojang/serialization/Dynamic;JLcom/mojang/serialization/Dynamic;Z)Ljava/lang/Object; vanillaLevels
	a (Lcom/mojang/serialization/Dynamic;JZZ)Lcom/mojang/serialization/Dynamic; vanillaBiomeSource
	a (Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/OptionalDynamic;)Ljava/util/Map; fixFlatStructures
	a (Ljava/lang/String;I)I getInt
	a (Ljava/lang/String;II)I getInt
	a (Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;I)V setSpacing
net/minecraft/util/datafix/fixes/DataConverterZombie net/minecraft/util/datafix/fixes/EntityZombieVillagerTypeFix
	a PROFESSION_MAX
	b RANDOM
	a (I)I getVillagerProfession
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
net/minecraft/util/datafix/fixes/DataConverterZombieType net/minecraft/util/datafix/fixes/EntityZombieSplitFix
	a (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; getNewNameAndTag
net/minecraft/util/datafix/fixes/DataConverterZombieVillagerLevelXp net/minecraft/util/datafix/fixes/ZombieVillagerRebuildXpFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
net/minecraft/util/datafix/schemas/DataConverterSchemaNamed net/minecraft/util/datafix/schemas/NamespacedSchema
	a NAMESPACED_STRING_CODEC
	b NAMESPACED_STRING
	a ()Lcom/mojang/datafixers/types/Type; namespacedString
	a (Ljava/lang/String;)Ljava/lang/String; ensureNamespaced
net/minecraft/util/datafix/schemas/DataConverterSchemaV100 net/minecraft/util/datafix/schemas/V100
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; equipment
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
net/minecraft/util/datafix/schemas/DataConverterSchemaV102 net/minecraft/util/datafix/schemas/V102
net/minecraft/util/datafix/schemas/DataConverterSchemaV1022 net/minecraft/util/datafix/schemas/V1022
net/minecraft/util/datafix/schemas/DataConverterSchemaV106 net/minecraft/util/datafix/schemas/V106
net/minecraft/util/datafix/schemas/DataConverterSchemaV107 net/minecraft/util/datafix/schemas/V107
net/minecraft/util/datafix/schemas/DataConverterSchemaV1125 net/minecraft/util/datafix/schemas/V1125
net/minecraft/util/datafix/schemas/DataConverterSchemaV135 net/minecraft/util/datafix/schemas/V135
net/minecraft/util/datafix/schemas/DataConverterSchemaV143 net/minecraft/util/datafix/schemas/V143
net/minecraft/util/datafix/schemas/DataConverterSchemaV1451 net/minecraft/util/datafix/schemas/V1451
net/minecraft/util/datafix/schemas/DataConverterSchemaV1451_1 net/minecraft/util/datafix/schemas/V1451_1
net/minecraft/util/datafix/schemas/DataConverterSchemaV1451_2 net/minecraft/util/datafix/schemas/V1451_2
net/minecraft/util/datafix/schemas/DataConverterSchemaV1451_3 net/minecraft/util/datafix/schemas/V1451_3
net/minecraft/util/datafix/schemas/DataConverterSchemaV1451_4 net/minecraft/util/datafix/schemas/V1451_4
net/minecraft/util/datafix/schemas/DataConverterSchemaV1451_5 net/minecraft/util/datafix/schemas/V1451_5
net/minecraft/util/datafix/schemas/DataConverterSchemaV1451_6 net/minecraft/util/datafix/schemas/V1451_6
	b SPECIAL_OBJECTIVE_MARKER
	c UNPACK_OBJECTIVE_ID
	d REPACK_OBJECTIVE_ID
	a (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; createCriterionTypes
net/minecraft/util/datafix/schemas/DataConverterSchemaV1460 net/minecraft/util/datafix/schemas/V1460
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
	b (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerInventory
net/minecraft/util/datafix/schemas/DataConverterSchemaV1466 net/minecraft/util/datafix/schemas/V1466
net/minecraft/util/datafix/schemas/DataConverterSchemaV1470 net/minecraft/util/datafix/schemas/V1470
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
net/minecraft/util/datafix/schemas/DataConverterSchemaV1481 net/minecraft/util/datafix/schemas/V1481
net/minecraft/util/datafix/schemas/DataConverterSchemaV1483 net/minecraft/util/datafix/schemas/V1483
net/minecraft/util/datafix/schemas/DataConverterSchemaV1486 net/minecraft/util/datafix/schemas/V1486
net/minecraft/util/datafix/schemas/DataConverterSchemaV1510 net/minecraft/util/datafix/schemas/V1510
net/minecraft/util/datafix/schemas/DataConverterSchemaV1800 net/minecraft/util/datafix/schemas/V1800
net/minecraft/util/datafix/schemas/DataConverterSchemaV1801 net/minecraft/util/datafix/schemas/V1801
net/minecraft/util/datafix/schemas/DataConverterSchemaV1904 net/minecraft/util/datafix/schemas/V1904
net/minecraft/util/datafix/schemas/DataConverterSchemaV1906 net/minecraft/util/datafix/schemas/V1906
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerInventory
net/minecraft/util/datafix/schemas/DataConverterSchemaV1909 net/minecraft/util/datafix/schemas/V1909
net/minecraft/util/datafix/schemas/DataConverterSchemaV1920 net/minecraft/util/datafix/schemas/V1920
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerInventory
net/minecraft/util/datafix/schemas/DataConverterSchemaV1928 net/minecraft/util/datafix/schemas/V1928
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; equipment
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
net/minecraft/util/datafix/schemas/DataConverterSchemaV1929 net/minecraft/util/datafix/schemas/V1929
net/minecraft/util/datafix/schemas/DataConverterSchemaV1931 net/minecraft/util/datafix/schemas/V1931
net/minecraft/util/datafix/schemas/DataConverterSchemaV2100 net/minecraft/util/datafix/schemas/V2100
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
net/minecraft/util/datafix/schemas/DataConverterSchemaV2501 net/minecraft/util/datafix/schemas/V2501
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerFurnace
net/minecraft/util/datafix/schemas/DataConverterSchemaV2502 net/minecraft/util/datafix/schemas/V2502
net/minecraft/util/datafix/schemas/DataConverterSchemaV2505 net/minecraft/util/datafix/schemas/V2505
net/minecraft/util/datafix/schemas/DataConverterSchemaV2509 net/minecraft/util/datafix/schemas/V2509
net/minecraft/util/datafix/schemas/DataConverterSchemaV2519 net/minecraft/util/datafix/schemas/V2519
net/minecraft/util/datafix/schemas/DataConverterSchemaV2522 net/minecraft/util/datafix/schemas/V2522
net/minecraft/util/datafix/schemas/DataConverterSchemaV2551 net/minecraft/util/datafix/schemas/V2551
net/minecraft/util/datafix/schemas/DataConverterSchemaV2568 net/minecraft/util/datafix/schemas/V2568
net/minecraft/util/datafix/schemas/DataConverterSchemaV501 net/minecraft/util/datafix/schemas/V501
net/minecraft/util/datafix/schemas/DataConverterSchemaV700 net/minecraft/util/datafix/schemas/V700
net/minecraft/util/datafix/schemas/DataConverterSchemaV701 net/minecraft/util/datafix/schemas/V701
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
net/minecraft/util/datafix/schemas/DataConverterSchemaV702 net/minecraft/util/datafix/schemas/V702
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
net/minecraft/util/datafix/schemas/DataConverterSchemaV703 net/minecraft/util/datafix/schemas/V703
net/minecraft/util/datafix/schemas/DataConverterSchemaV704 net/minecraft/util/datafix/schemas/V704
	a ITEM_TO_BLOCKENTITY
	b ADD_NAMES
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerInventory
net/minecraft/util/datafix/schemas/DataConverterSchemaV705 net/minecraft/util/datafix/schemas/V705
	b ADD_NAMES
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
	b (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerThrowableProjectile
net/minecraft/util/datafix/schemas/DataConverterSchemaV808 net/minecraft/util/datafix/schemas/V808
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerInventory
net/minecraft/util/datafix/schemas/DataConverterSchemaV99 net/minecraft/util/datafix/schemas/V99
	a ADD_NAMES
	b LOGGER
	c ITEM_TO_BLOCKENTITY
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; equipment
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
	a (Lcom/mojang/serialization/Dynamic;Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Object; addNames
	b (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerThrowableProjectile
	c (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMinecart
	d (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerInventory
net/minecraft/util/monitoring/jmx/MinecraftServerBeans net/minecraft/util/monitoring/jmx/MinecraftServerStatistics
	a LOGGER
	b server
	c mBeanInfo
	d attributeDescriptionByName
	a ()F getAverageTickTime
	a (Lnet/minecraft/server/MinecraftServer;)V registerJmxMonitoring
	b ()[J getTickTimes
net/minecraft/util/profiling/GameProfilerDisabled net/minecraft/util/profiling/InactiveProfiler
	a INSTANCE
	a ()V startTick
	a (Ljava/lang/String;)V push
	a (Ljava/lang/String;I)V incrementCounter
	a (Ljava/util/function/Supplier;)V push
	a (Ljava/util/function/Supplier;I)V incrementCounter
	a (Lnet/minecraft/util/profiling/metrics/MetricCategory;)V markForCharting
	b ()V endTick
	b (Ljava/lang/String;)V popPush
	b (Ljava/util/function/Supplier;)V popPush
	c ()V pop
	c (Ljava/lang/String;)Lbah$a; getEntry
	d ()Lnet/minecraft/util/profiling/MethodProfilerResults; getResults
	e ()Ljava/util/Set; getChartedPaths
net/minecraft/util/profiling/GameProfilerFiller net/minecraft/util/profiling/ProfilerFiller
	b ROOT
	a ()V startTick
	a (Ljava/lang/String;)V push
	a (Ljava/lang/String;I)V incrementCounter
	a (Ljava/util/function/Supplier;)V push
	a (Ljava/util/function/Supplier;I)V incrementCounter
	a (Lnet/minecraft/util/profiling/GameProfilerFiller;Lnet/minecraft/util/profiling/GameProfilerFiller;)Lnet/minecraft/util/profiling/GameProfilerFiller; tee
	a (Lnet/minecraft/util/profiling/metrics/MetricCategory;)V markForCharting
	b ()V endTick
	b (Ljava/lang/String;)V popPush
	b (Ljava/util/function/Supplier;)V popPush
	c ()V pop
	c (Ljava/util/function/Supplier;)V incrementCounter
	d (Ljava/lang/String;)V incrementCounter
net/minecraft/util/profiling/GameProfilerFillerActive net/minecraft/util/profiling/ProfileCollector
	c (Ljava/lang/String;)Lbah$a; getEntry
	d ()Lnet/minecraft/util/profiling/MethodProfilerResults; getResults
	e ()Ljava/util/Set; getChartedPaths
net/minecraft/util/profiling/GameProfilerSwitcher net/minecraft/util/profiling/ContinuousProfiler
	a realTime
	b tickCount
	c profiler
	a ()Z isEnabled
	b ()V disable
	c ()V enable
	d ()Lnet/minecraft/util/profiling/GameProfilerFiller; getFiller
	e ()Lnet/minecraft/util/profiling/MethodProfilerResults; getResults
net/minecraft/util/profiling/GameProfilerTick net/minecraft/util/profiling/SingleTickProfiler
	a LOGGER
	b realTime
	c saveThreshold
	d tick
	e location
	f profiler
	a ()Lnet/minecraft/util/profiling/GameProfilerFiller; startTick
	a (Ljava/lang/String;)Lnet/minecraft/util/profiling/GameProfilerTick; createTickProfiler
	a (Lnet/minecraft/util/profiling/GameProfilerFiller;Lnet/minecraft/util/profiling/GameProfilerTick;)Lnet/minecraft/util/profiling/GameProfilerFiller; decorateFiller
	b ()V endTick
net/minecraft/util/profiling/MethodProfiler net/minecraft/util/profiling/ActiveProfiler
	a WARNING_TIME_NANOS
	c LOGGER
	d paths
	e startTimes
	f entries
	g getTickTime
	h getRealTime
	i startTimeNano
	j startTimeTicks
	k path
	l started
	m currentEntry
	n warn
	o chartedPaths
	a ()V startTick
	a (Ljava/lang/String;)V push
	a (Ljava/lang/String;I)V incrementCounter
	a (Ljava/util/function/Supplier;)V push
	a (Ljava/util/function/Supplier;I)V incrementCounter
	a (Lnet/minecraft/util/profiling/metrics/MetricCategory;)V markForCharting
	b ()V endTick
	b (Ljava/lang/String;)V popPush
	b (Ljava/util/function/Supplier;)V popPush
	c ()V pop
	c (Ljava/lang/String;)Lbah$a; getEntry
	d ()Lnet/minecraft/util/profiling/MethodProfilerResults; getResults
	e ()Ljava/util/Set; getChartedPaths
	f ()Lbah$a; getCurrentEntry
net/minecraft/util/profiling/MethodProfilerResult net/minecraft/util/profiling/ProfilerPathEntry
	a ()J getDuration
	b ()J getMaxDuration
	c ()J getCount
	d ()Lit/unimi/dsi/fastutil/objects/Object2LongMap; getCounters
net/minecraft/util/profiling/MethodProfilerResults net/minecraft/util/profiling/ProfileResults
	d PATH_SEPARATOR
	a ()J getStartTimeNano
	a (Ljava/lang/String;)Ljava/util/List; getTimes
	a (Ljava/nio/file/Path;)Z saveResults
	b ()I getStartTimeTicks
	b (Ljava/lang/String;)Ljava/lang/String; demanglePath
	c ()J getEndTimeNano
	d ()I getEndTimeTicks
	e ()Ljava/lang/String; getProfilerResults
	f ()I getTickDuration
	g ()J getNanoDuration
net/minecraft/util/profiling/MethodProfilerResultsEmpty net/minecraft/util/profiling/EmptyProfileResults
	a EMPTY
	a ()J getStartTimeNano
	a (Ljava/lang/String;)Ljava/util/List; getTimes
	a (Ljava/nio/file/Path;)Z saveResults
	b ()I getStartTimeTicks
	c ()J getEndTimeNano
	d ()I getEndTimeTicks
	e ()Ljava/lang/String; getProfilerResults
net/minecraft/util/profiling/MethodProfilerResultsField net/minecraft/util/profiling/ResultField
	a percentage
	b globalPercentage
	c count
	d name
	a ()I getColor
	a (Lnet/minecraft/util/profiling/MethodProfilerResultsField;)I compareTo
net/minecraft/util/profiling/MethodProfilerResultsFilled net/minecraft/util/profiling/FilledProfileResults
	a LOGGER
	b EMPTY
	c SPLITTER
	e COUNTER_ENTRY_COMPARATOR
	f entries
	g startTimeNano
	h startTimeTicks
	i endTimeNano
	j endTimeTicks
	k tickDuration
	a ()J getStartTimeNano
	a (ILjava/lang/String;Lbak$a;ILjava/lang/StringBuilder;)V appendCounterResults
	a (ILjava/lang/String;Ljava/lang/StringBuilder;)V appendProfilerResults
	a (JI)Ljava/lang/String; getProfilerResults
	a (Ljava/lang/String;)Ljava/util/List; getTimes
	a (Ljava/lang/String;Ljava/lang/String;)Z isDirectChild
	a (Ljava/lang/StringBuilder;I)Ljava/lang/StringBuilder; indentLine
	a (Ljava/nio/file/Path;)Z saveResults
	a (Ljava/util/Map;Ljava/lang/StringBuilder;I)V appendCounters
	b ()I getStartTimeTicks
	c ()J getEndTimeNano
	c (Ljava/lang/String;)Lnet/minecraft/util/profiling/MethodProfilerResult; getEntry
	d ()I getEndTimeTicks
	e ()Ljava/lang/String; getProfilerResults
	f ()I getTickDuration
	h ()Ljava/util/Map; getCounterValues
	i ()Ljava/lang/String; getComment
net/minecraft/util/profiling/jfr/event/ChunkGenerationEvent$a net/minecraft/util/profiling/jfr/event/ChunkGenerationEvent$Fields
	a WORLD_POS_X
	b WORLD_POS_Z
	c CHUNK_POS_X
	d CHUNK_POS_Z
	e STATUS
	f LEVEL
net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$a net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$Fields
	a REMOTE_ADDRESS
	b SENT_BYTES
	c RECEIVED_BYTES
	d SENT_PACKETS
	e RECEIVED_PACKETS
net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$b net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$SumAggregation
	a sentBytes
	b sentPackets
	c receivedBytes
	d receivedPackets
	e event
	a ()V commitEvent
	a (I)V trackSentPacket
	b (I)V trackReceivedPacket
net/minecraft/util/profiling/jfr/event/ServerTickTimeEvent$a net/minecraft/util/profiling/jfr/event/ServerTickTimeEvent$Fields
	a AVERAGE_TICK_DURATION
net/minecraft/util/random/WeightedRandom2 net/minecraft/util/random/WeightedRandom
	a (Ljava/util/List;)I getTotalWeight
	a (Ljava/util/List;I)Ljava/util/Optional; getWeightedItem
	a (Lnet/minecraft/util/RandomSource;Ljava/util/List;)Ljava/util/Optional; getRandomItem
	a (Lnet/minecraft/util/RandomSource;Ljava/util/List;I)Ljava/util/Optional; getRandomItem
net/minecraft/util/thread/IAsyncTaskHandler net/minecraft/util/thread/BlockableEventLoop
	b name
	c LOGGER
	d pendingRunnables
	e blockingCount
	a (Ljava/lang/Object;)V tell
	a (Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture; submitAsync
	a (Ljava/util/function/Supplier;)Ljava/util/concurrent/CompletableFuture; submit
	at ()Z scheduleExecutables
	au ()Ljava/lang/Thread; getRunningThread
	bm ()Ljava/util/List; profiledMetrics
	bn ()Z isSameThread
	bo ()I getPendingTasksCount
	bp ()Ljava/lang/String; name
	bq ()V dropAllTasks
	br ()V runAllTasks
	bs ()V waitForTasks
	c (Ljava/lang/Runnable;)V executeIfPossible
	c (Ljava/util/function/BooleanSupplier;)V managedBlock
	d (Ljava/lang/Runnable;)V doRunTask
	e (Ljava/lang/Runnable;)Z shouldRun
	f (Ljava/lang/Runnable;)Ljava/lang/Runnable; wrapRunnable
	g (Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture; submit
	h (Ljava/lang/Runnable;)V executeBlocking
	i (Ljava/lang/Runnable;)V tell
	x ()Z pollTask
net/minecraft/util/thread/IAsyncTaskHandlerReentrant net/minecraft/util/thread/ReentrantBlockableEventLoop
	b reentrantCount
	at ()Z scheduleExecutables
	bt ()Z runningTask
	d (Ljava/lang/Runnable;)V doRunTask
net/minecraft/util/thread/Mailbox net/minecraft/util/thread/ProcessorHandle
	a (Ljava/lang/Object;)V tell
	a (Ljava/lang/String;Ljava/util/function/Consumer;)Lnet/minecraft/util/thread/Mailbox; of
	b (Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; ask
	bp ()Ljava/lang/String; name
	c (Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; askEither
net/minecraft/util/thread/PairedQueue net/minecraft/util/thread/StrictQueue
	a ()Ljava/lang/Object; pop
	a (Ljava/lang/Object;)Z push
	b ()Z isEmpty
	c ()I size
net/minecraft/util/thread/ThreadedMailbox net/minecraft/util/thread/ProcessorMailbox
	a LOGGER
	b CLOSED_BIT
	c SCHEDULED_BIT
	d status
	e queue
	f dispatcher
	g name
	a ()V runAll
	a (Lit/unimi/dsi/fastutil/ints/Int2BooleanFunction;)I pollUntil
	a (Ljava/lang/Object;)V tell
	a (Ljava/util/concurrent/Executor;Ljava/lang/String;)Lnet/minecraft/util/thread/ThreadedMailbox; create
	b ()I size
	bm ()Ljava/util/List; profiledMetrics
	bp ()Ljava/lang/String; name
	c ()Z hasWork
	d ()Z setAsScheduled
	e ()V setAsIdle
	f ()Z canBeScheduled
	g ()Z shouldProcess
	h ()Z pollTask
	i ()V registerForExecution
net/minecraft/world/BossBattle net/minecraft/world/BossEvent
	a name
	b progress
	c color
	d overlay
	e darkenScreen
	f playBossMusic
	g createWorldFog
	h id
	a (F)V setProgress
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V setName
	a (Lnet/minecraft/world/BossBattle$BarColor;)V setColor
	a (Lnet/minecraft/world/BossBattle$BarStyle;)V setOverlay
	a (Z)Lnet/minecraft/world/BossBattle; setDarkenScreen
	b (Z)Lnet/minecraft/world/BossBattle; setPlayBossMusic
	c (Z)Lnet/minecraft/world/BossBattle; setCreateWorldFog
	i ()Ljava/util/UUID; getId
	j ()Lnet/minecraft/network/chat/IChatBaseComponent; getName
	k ()F getProgress
	l ()Lnet/minecraft/world/BossBattle$BarColor; getColor
	m ()Lnet/minecraft/world/BossBattle$BarStyle; getOverlay
	n ()Z shouldDarkenScreen
	o ()Z shouldPlayBossMusic
	p ()Z shouldCreateWorldFog
net/minecraft/world/BossBattle$BarColor net/minecraft/world/BossEvent$BossBarColor
	a PINK
	b BLUE
	c RED
	d GREEN
	e YELLOW
	f PURPLE
	g WHITE
	h name
	i formatting
	j $VALUES
	a ()Lnet/minecraft/EnumChatFormat; getFormatting
	a (Ljava/lang/String;)Lnet/minecraft/world/BossBattle$BarColor; byName
	b ()Ljava/lang/String; getName
	c ()[Lnet/minecraft/world/BossBattle$BarColor; $values
net/minecraft/world/BossBattle$BarStyle net/minecraft/world/BossEvent$BossBarOverlay
	a PROGRESS
	b NOTCHED_6
	c NOTCHED_10
	d NOTCHED_12
	e NOTCHED_20
	f name
	g $VALUES
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lnet/minecraft/world/BossBattle$BarStyle; byName
	b ()[Lnet/minecraft/world/BossBattle$BarStyle; $values
net/minecraft/world/ChestLock net/minecraft/world/LockCode
	a NO_LOCK
	b TAG_LOCK
	c key
	a (Lnet/minecraft/nbt/NBTTagCompound;)V addToTag
	a (Lnet/minecraft/world/item/ItemStack;)Z unlocksWith
	b (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/ChestLock; fromTag
net/minecraft/world/ContainerUtil net/minecraft/world/ContainerHelper
	a (Ljava/util/List;I)Lnet/minecraft/world/item/ItemStack; takeItem
	a (Ljava/util/List;II)Lnet/minecraft/world/item/ItemStack; removeItem
	a (Lnet/minecraft/nbt/NBTTagCompound;Lnet/minecraft/core/NonNullList;)Lnet/minecraft/nbt/NBTTagCompound; saveAllItems
	a (Lnet/minecraft/nbt/NBTTagCompound;Lnet/minecraft/core/NonNullList;Z)Lnet/minecraft/nbt/NBTTagCompound; saveAllItems
	a (Lnet/minecraft/world/IInventory;Ljava/util/function/Predicate;IZ)I clearOrCountMatchingItems
	a (Lnet/minecraft/world/item/ItemStack;Ljava/util/function/Predicate;IZ)I clearOrCountMatchingItems
	b (Lnet/minecraft/nbt/NBTTagCompound;Lnet/minecraft/core/NonNullList;)V loadAllItems
net/minecraft/world/DifficultyDamageScaler net/minecraft/world/DifficultyInstance
	a DIFFICULTY_TIME_GLOBAL_OFFSET
	b MAX_DIFFICULTY_TIME_GLOBAL
	c MAX_DIFFICULTY_TIME_LOCAL
	d base
	e effectiveDifficulty
	a ()Lnet/minecraft/world/EnumDifficulty; getDifficulty
	a (F)Z isHarderThan
	a (Lnet/minecraft/world/EnumDifficulty;JJF)F calculateDifficulty
	b ()F getEffectiveDifficulty
	c ()Z isHard
	d ()F getSpecialMultiplier
net/minecraft/world/EnumDifficulty net/minecraft/world/Difficulty
	a PEACEFUL
	b EASY
	c NORMAL
	d HARD
	e CODEC
	f BY_ID
	g id
	h key
	i $VALUES
	a ()I getId
	a (I)Lnet/minecraft/world/EnumDifficulty; byId
	a (Ljava/lang/String;)Lnet/minecraft/world/EnumDifficulty; byName
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; getDisplayName
	c ()Ljava/lang/String; getSerializedName
	d ()Lnet/minecraft/network/chat/IChatBaseComponent; getInfo
	e ()Ljava/lang/String; getKey
	f ()[Lnet/minecraft/world/EnumDifficulty; $values
net/minecraft/world/EnumHand net/minecraft/world/InteractionHand
	a MAIN_HAND
	b OFF_HAND
	c $VALUES
	a ()[Lnet/minecraft/world/EnumHand; $values
net/minecraft/world/EnumInteractionResult net/minecraft/world/InteractionResult
	a SUCCESS
	b CONSUME
	c CONSUME_PARTIAL
	d PASS
	e FAIL
	f $VALUES
	a ()Z consumesAction
	a (Z)Lnet/minecraft/world/EnumInteractionResult; sidedSuccess
	b ()Z shouldSwing
	c ()Z shouldAwardStats
	d ()[Lnet/minecraft/world/EnumInteractionResult; $values
net/minecraft/world/IInventory net/minecraft/world/Container
	k_ LARGE_MAX_STACK_SIZE
	l_ DEFAULT_DISTANCE_LIMIT
	a (I)Lnet/minecraft/world/item/ItemStack; getItem
	a (II)Lnet/minecraft/world/item/ItemStack; removeItem
	a (ILnet/minecraft/world/item/ItemStack;)V setItem
	a (Ljava/util/Set;)Z hasAnyOf
	a (Lnet/minecraft/world/IInventory;ILnet/minecraft/world/item/ItemStack;)Z canTakeItem
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	a (Lnet/minecraft/world/level/block/entity/TileEntity;Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValidBlockEntity
	a (Lnet/minecraft/world/level/block/entity/TileEntity;Lnet/minecraft/world/entity/player/EntityHuman;I)Z stillValidBlockEntity
	a_ (Ljava/util/function/Predicate;)Z hasAnyMatching
	a_ (Lnet/minecraft/world/item/Item;)I countItem
	aa_ ()Z isEmpty
	ab_ ()I getMaxStackSize
	b ()I getContainerSize
	b (I)Lnet/minecraft/world/item/ItemStack; removeItemNoUpdate
	b (ILnet/minecraft/world/item/ItemStack;)Z canPlaceItem
	c (Lnet/minecraft/world/entity/player/EntityHuman;)V stopOpen
	d_ (Lnet/minecraft/world/entity/player/EntityHuman;)V startOpen
	e ()V setChanged
net/minecraft/world/IInventoryHolder net/minecraft/world/WorldlyContainerHolder
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/IWorldInventory; getContainer
net/minecraft/world/IInventoryListener net/minecraft/world/ContainerListener
	a (Lnet/minecraft/world/IInventory;)V containerChanged
net/minecraft/world/INamableTileEntity net/minecraft/world/Nameable
	G_ ()Lnet/minecraft/network/chat/IChatBaseComponent; getDisplayName
	Z ()Lnet/minecraft/network/chat/IChatBaseComponent; getName
	aa ()Z hasCustomName
	ab ()Lnet/minecraft/network/chat/IChatBaseComponent; getCustomName
net/minecraft/world/ITileInventory net/minecraft/world/MenuProvider
	G_ ()Lnet/minecraft/network/chat/IChatBaseComponent; getDisplayName
net/minecraft/world/IWorldInventory net/minecraft/world/WorldlyContainer
	a (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/EnumDirection;)Z canPlaceItemThroughFace
	a (Lnet/minecraft/core/EnumDirection;)[I getSlotsForFace
	b (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/EnumDirection;)Z canTakeItemThroughFace
net/minecraft/world/InteractionResultWrapper net/minecraft/world/InteractionResultHolder
	a result
	b object
	a ()Lnet/minecraft/world/EnumInteractionResult; getResult
	a (Ljava/lang/Object;)Lnet/minecraft/world/InteractionResultWrapper; success
	a (Ljava/lang/Object;Z)Lnet/minecraft/world/InteractionResultWrapper; sidedSuccess
	b ()Ljava/lang/Object; getObject
	b (Ljava/lang/Object;)Lnet/minecraft/world/InteractionResultWrapper; consume
	c (Ljava/lang/Object;)Lnet/minecraft/world/InteractionResultWrapper; pass
	d (Ljava/lang/Object;)Lnet/minecraft/world/InteractionResultWrapper; fail
net/minecraft/world/InventoryLargeChest net/minecraft/world/CompoundContainer
	c container1
	d container2
	a ()V clearContent
	a (I)Lnet/minecraft/world/item/ItemStack; getItem
	a (II)Lnet/minecraft/world/item/ItemStack; removeItem
	a (ILnet/minecraft/world/item/ItemStack;)V setItem
	a (Lnet/minecraft/world/IInventory;)Z contains
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	aa_ ()Z isEmpty
	ab_ ()I getMaxStackSize
	b ()I getContainerSize
	b (I)Lnet/minecraft/world/item/ItemStack; removeItemNoUpdate
	b (ILnet/minecraft/world/item/ItemStack;)Z canPlaceItem
	c (Lnet/minecraft/world/entity/player/EntityHuman;)V stopOpen
	d_ (Lnet/minecraft/world/entity/player/EntityHuman;)V startOpen
	e ()V setChanged
net/minecraft/world/InventorySubcontainer net/minecraft/world/SimpleContainer
	c size
	d items
	e listeners
	a ()V clearContent
	a (I)Lnet/minecraft/world/item/ItemStack; getItem
	a (II)Lnet/minecraft/world/item/ItemStack; removeItem
	a (ILnet/minecraft/world/item/ItemStack;)V setItem
	a (Lnet/minecraft/nbt/NBTTagList;)V fromTag
	a (Lnet/minecraft/world/IInventoryListener;)V addListener
	a (Lnet/minecraft/world/entity/player/AutoRecipeStackManager;)V fillStackedContents
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	a (Lnet/minecraft/world/item/Item;I)Lnet/minecraft/world/item/ItemStack; removeItemType
	a (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; addItem
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V moveItemsBetweenStacks
	aa_ ()Z isEmpty
	b ()I getContainerSize
	b (I)Lnet/minecraft/world/item/ItemStack; removeItemNoUpdate
	b (Lnet/minecraft/world/IInventoryListener;)V removeListener
	b (Lnet/minecraft/world/item/ItemStack;)Z canAddItem
	c (Lnet/minecraft/world/item/ItemStack;)V moveItemToEmptySlots
	d (Lnet/minecraft/world/item/ItemStack;)V moveItemToOccupiedSlotsWithSameType
	e ()V setChanged
	f ()Ljava/util/List; removeAllItems
	g ()Lnet/minecraft/nbt/NBTTagList; createTag
net/minecraft/world/InventoryUtils net/minecraft/world/Containers
	a (Lnet/minecraft/world/level/World;DDDLnet/minecraft/world/IInventory;)V dropContents
	a (Lnet/minecraft/world/level/World;DDDLnet/minecraft/world/item/ItemStack;)V dropItemStack
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/NonNullList;)V dropContents
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/IInventory;)V dropContents
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/IInventory;)V dropContents
net/minecraft/world/TileInventory net/minecraft/world/SimpleMenuProvider
	a title
	b menuConstructor
	G_ ()Lnet/minecraft/network/chat/IChatBaseComponent; getDisplayName
net/minecraft/world/damagesource/CombatMath net/minecraft/world/damagesource/CombatRules
	a MAX_ARMOR
	b ARMOR_PROTECTION_DIVIDER
	c BASE_ARMOR_TOUGHNESS
	d MIN_ARMOR_RATIO
	e NUM_ARMOR_ITEMS
	a (FF)F getDamageAfterMagicAbsorb
	a (FFF)F getDamageAfterAbsorb
net/minecraft/world/effect/InstantMobEffect net/minecraft/world/effect/InstantenousMobEffect
	a ()Z isInstantenous
	a (II)Z isDurationEffectTick
net/minecraft/world/effect/MobEffect net/minecraft/world/effect/MobEffectInstance
	a INFINITE_DURATION
	b LOGGER
	c effect
	d duration
	e amplifier
	f ambient
	g visible
	h showIcon
	i hiddenEffect
	j factorData
	a ()Ljava/util/Optional; getFactorData
	a (I)Z endsWithin
	a (Lit/unimi/dsi/fastutil/ints/Int2IntFunction;)I mapDuration
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; save
	a (Lnet/minecraft/world/effect/MobEffect;)V setDetailsFrom
	a (Lnet/minecraft/world/effect/MobEffectList;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/effect/MobEffect; loadSpecifiedEffect
	a (Lnet/minecraft/world/entity/EntityLiving;)V applyEffect
	a (Lnet/minecraft/world/entity/EntityLiving;Ljava/lang/Runnable;)Z tick
	b ()Z isInfiniteDuration
	b (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/effect/MobEffect; load
	b (Lnet/minecraft/world/effect/MobEffect;)Z update
	c ()Lnet/minecraft/world/effect/MobEffectList; getEffect
	c (Lnet/minecraft/nbt/NBTTagCompound;)V writeDetailsTo
	c (Lnet/minecraft/world/effect/MobEffect;)I compareTo
	d ()I getDuration
	d (Lnet/minecraft/world/effect/MobEffect;)Z isShorterDurationThan
	e ()I getAmplifier
	f ()Z isAmbient
	g ()Z isVisible
	h ()Z showIcon
	i ()Ljava/lang/String; getDescriptionId
	j ()Z hasRemainingDuration
	k ()I tickDownDuration
	l ()Ljava/lang/String; describeDuration
net/minecraft/world/effect/MobEffectAbsorption net/minecraft/world/effect/AbsoptionMobEffect
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/ai/attributes/AttributeMapBase;I)V removeAttributeModifiers
	b (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/ai/attributes/AttributeMapBase;I)V addAttributeModifiers
net/minecraft/world/effect/MobEffectAttackDamage net/minecraft/world/effect/AttackDamageMobEffect
	a multiplier
	a (ILnet/minecraft/world/entity/ai/attributes/AttributeModifier;)D getAttributeModifierValue
net/minecraft/world/effect/MobEffectHealthBoost net/minecraft/world/effect/HealthBoostMobEffect
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/ai/attributes/AttributeMapBase;I)V removeAttributeModifiers
net/minecraft/world/effect/MobEffectInfo net/minecraft/world/effect/MobEffectCategory
	a BENEFICIAL
	b HARMFUL
	c NEUTRAL
	d tooltipFormatting
	e $VALUES
	a ()Lnet/minecraft/EnumChatFormat; getTooltipFormatting
	b ()[Lnet/minecraft/world/effect/MobEffectInfo; $values
net/minecraft/world/effect/MobEffectList net/minecraft/world/effect/MobEffect
	a attributeModifiers
	b category
	c color
	d descriptionId
	e factorDataFactory
	a ()Z isInstantenous
	a (I)Lnet/minecraft/world/effect/MobEffectList; byId
	a (II)Z isDurationEffectTick
	a (ILnet/minecraft/world/entity/ai/attributes/AttributeModifier;)D getAttributeModifierValue
	a (Ljava/util/function/Supplier;)Lnet/minecraft/world/effect/MobEffectList; setFactorDataFactory
	a (Lnet/minecraft/world/effect/MobEffectList;)I getId
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntityLiving;ID)V applyInstantenousEffect
	a (Lnet/minecraft/world/entity/EntityLiving;I)V applyEffectTick
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/ai/attributes/AttributeMapBase;I)V removeAttributeModifiers
	a (Lnet/minecraft/world/entity/ai/attributes/AttributeBase;Ljava/lang/String;DLnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation;)Lnet/minecraft/world/effect/MobEffectList; addAttributeModifier
	b ()Ljava/util/Optional; createFactorData
	b (Lnet/minecraft/world/effect/MobEffectList;)I getIdFromNullable
	b (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/ai/attributes/AttributeMapBase;I)V addAttributeModifiers
	c ()Ljava/lang/String; getOrCreateDescriptionId
	d ()Ljava/lang/String; getDescriptionId
	e ()Lnet/minecraft/network/chat/IChatBaseComponent; getDisplayName
	f ()Lnet/minecraft/world/effect/MobEffectInfo; getCategory
	g ()I getColor
	h ()Ljava/util/Map; getAttributeModifiers
	i ()Z isBeneficial
net/minecraft/world/entity/EntityAgeable net/minecraft/world/entity/AgeableMob
	b BABY_START_AGE
	bS DATA_BABY_ID
	bT FORCED_AGE_PARTICLE_TICKS
	c age
	d forcedAge
	e forcedAgeTimer
	O_ ()Z canBreed
	a (IZ)V ageUp
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	a (Z)V setBaby
	a_ ()V defineSynchedData
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b_ ()V aiStep
	b_ (I)V ageUp
	c_ (I)V setAge
	d_ (I)I getSpeedUpSecondsWhenFeeding
	h ()I getAge
	m ()V ageBoundaryReached
	y_ ()Z isBaby
net/minecraft/world/entity/EntityAreaEffectCloud net/minecraft/world/entity/AreaEffectCloud
	aC radiusPerTick
	aD owner
	aE ownerUUID
	b DEFAULT_WIDTH
	c HEIGHT
	d LOGGER
	e TIME_BETWEEN_APPLICATIONS
	f DATA_RADIUS
	g DATA_COLOR
	h DATA_WAITING
	i DATA_PARTICLE
	j MAX_RADIUS
	k MINIMAL_RADIUS
	l DEFAULT_RADIUS
	m potion
	n effects
	o victims
	p duration
	q waitTime
	r reapplicationDelay
	s fixedColor
	t durationOnUse
	u radiusOnUse
	C_ ()Lnet/minecraft/world/level/material/EnumPistonReaction; getPistonPushReaction
	a (F)V setRadius
	a (I)V setFixedColor
	a (Lnet/minecraft/core/particles/ParticleParam;)V setParticle
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/world/effect/MobEffect;)V addEffect
	a (Lnet/minecraft/world/entity/EntityLiving;)V setOwner
	a (Lnet/minecraft/world/entity/EntityPose;)Lnet/minecraft/world/entity/EntitySize; getDimensions
	a (Lnet/minecraft/world/item/alchemy/PotionRegistry;)V setPotion
	a (Z)V setWaiting
	a_ ()V defineSynchedData
	b (F)V setRadiusOnUse
	b (I)V setDuration
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	c (F)V setRadiusPerTick
	c (I)V setDurationOnUse
	c_ ()V refreshDimensions
	d (I)V setWaitTime
	h ()F getRadius
	i ()I getColor
	j ()Lnet/minecraft/core/particles/ParticleParam; getParticle
	k ()Z isWaiting
	l ()V tick
	m ()I getDuration
	o ()F getRadiusOnUse
	p ()F getRadiusPerTick
	q ()I getDurationOnUse
	r ()I getWaitTime
	s ()Lnet/minecraft/world/entity/EntityLiving; getOwner
	t ()Lnet/minecraft/world/item/alchemy/PotionRegistry; getPotion
	v ()Lnet/minecraft/world/entity/Entity; getOwner
	w ()V updateColor
net/minecraft/world/entity/EntityCreature net/minecraft/world/entity/PathfinderMob
	bR DEFAULT_WALK_TARGET_VALUE
	B (F)V onLeashDistance
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/IWorldReader;)F getWalkTargetValue
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/entity/EnumMobSpawn;)Z checkSpawnRules
	f (Lnet/minecraft/core/BlockPosition;)F getWalkTargetValue
	fH ()V tickLeash
	fP ()Z isPathFinding
	fQ ()Z shouldStayCloseToLeashHolder
	fR ()D followLeashSpeed
net/minecraft/world/entity/EntityExperienceOrb net/minecraft/world/entity/ExperienceOrb
	b LIFETIME
	c ENTITY_SCAN_PERIOD
	d MAX_FOLLOW_DIST
	e ORB_GROUPS_PER_AREA
	f ORB_MERGE_DISTANCE
	g age
	h health
	i value
	j count
	k followingPlayer
	S ()Lnet/minecraft/network/protocol/Packet; getAddEntityPacket
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/phys/Vec3D;I)V award
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/entity/EntityExperienceOrb;)Z canMerge
	a (Lnet/minecraft/world/entity/EntityExperienceOrb;II)Z canMerge
	a (Lnet/minecraft/world/entity/player/EntityHuman;I)I repairPlayerItems
	aQ ()Lnet/minecraft/world/entity/Entity$MovementEmission; getMovementEmission
	a_ ()V defineSynchedData
	b (I)I getExperienceValue
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/phys/Vec3D;I)Z tryMergeToExisting
	b (Lnet/minecraft/world/entity/EntityExperienceOrb;)V merge
	b_ (Lnet/minecraft/world/entity/player/EntityHuman;)V playerTouch
	bb ()V doWaterSplashEffect
	c (I)I durabilityToXp
	cX ()Lnet/minecraft/sounds/SoundCategory; getSoundSource
	cl ()Z isAttackable
	d (I)I xpToDurability
	i ()I getValue
	j ()I getIcon
	k ()V scanForEntities
	l ()V tick
	o ()V setUnderwaterMovement
net/minecraft/world/entity/EntityFlying net/minecraft/world/entity/FlyingMob
	a (DZLnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;)V checkFallDamage
	h (Lnet/minecraft/world/phys/Vec3D;)V travel
	z_ ()Z onClimbable
net/minecraft/world/entity/EntityInsentient net/minecraft/world/entity/Mob
	b DATA_MOB_FLAGS_ID
	bA MAX_PICKUP_LOOT_CHANCE
	bB MAX_ENCHANTED_ARMOR_CHANCE
	bC MAX_ENCHANTED_WEAPON_CHANCE
	bD LEASH_TAG
	bE DEFAULT_EQUIPMENT_DROP_CHANCE
	bF PRESERVE_ITEM_DROP_CHANCE
	bG UPDATE_GOAL_SELECTOR_EVERY_N_TICKS
	bH ambientSoundTime
	bI xpReward
	bJ lookControl
	bK moveControl
	bL jumpControl
	bM navigation
	bN goalSelector
	bO targetSelector
	bP handDropChances
	bQ armorDropChances
	bR ITEM_PICKUP_REACH
	bS bodyRotationControl
	bT target
	bU sensing
	bV handItems
	bW armorItems
	bX canPickUpLoot
	bY persistenceRequired
	bZ pathfindingMalus
	bz MAX_WEARING_ARMOR_CHANCE
	c MOB_FLAG_NO_AI
	ca lootTable
	cb lootTableSeed
	cc leashHolder
	cd delayedLeashHolderId
	ce leashInfoTag
	cf restrictCenter
	cg restrictRadius
	d MOB_FLAG_LEFTHANDED
	e MOB_FLAG_AGGRESSIVE
	f PICKUP_REACH
	A ()Lnet/minecraft/world/entity/ai/control/EntityAIBodyControl; createBodyControl
	A (F)V setXxa
	C ()Lnet/minecraft/world/entity/ai/control/ControllerLook; getLookControl
	D ()Lnet/minecraft/world/entity/ai/control/ControllerMove; getMoveControl
	E ()Lnet/minecraft/world/entity/ai/control/ControllerJump; getJumpControl
	G ()Lnet/minecraft/world/entity/ai/navigation/NavigationAbstract; getNavigation
	I ()Lnet/minecraft/world/entity/ai/sensing/EntitySenses; getSensing
	J ()V ate
	K ()I getAmbientSoundInterval
	L ()V playAmbientSound
	M ()V spawnAnim
	N ()V updateControlFlags
	O ()Lnet/minecraft/resources/MinecraftKey; getDefaultLootTable
	P ()Lnet/minecraft/core/BaseBlockPosition; getPickupReach
	P_ ()Lnet/minecraft/world/entity/EntityLiving; getTarget
	Q ()Z requiresCustomPersistence
	R ()Z shouldDespawnInPeaceful
	T ()V sendDebugPackets
	U ()V customServerAiStep
	V ()I getMaxHeadXRot
	W ()I getMaxHeadYRot
	X ()I getHeadRotSpeed
	a (FFF)F rotlerp
	a (Lnet/minecraft/core/BlockPosition;)Z isWithinRestriction
	a (Lnet/minecraft/core/BlockPosition;I)V restrictTo
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/util/RandomSource;F)V enchantSpawnedWeapon
	a (Lnet/minecraft/util/RandomSource;FLnet/minecraft/world/entity/EnumItemSlot;)V enchantSpawnedArmor
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyDamageScaler;)V populateDefaultEquipmentSlots
	a (Lnet/minecraft/world/damagesource/DamageSource;IZ)V dropCustomDeathLoot
	a (Lnet/minecraft/world/damagesource/DamageSource;Z)V dropFromLootTable
	a (Lnet/minecraft/world/entity/Entity;FF)V lookAt
	a (Lnet/minecraft/world/entity/Entity;Z)Z startRiding
	a (Lnet/minecraft/world/entity/EntityTypes;)Z canAttackType
	a (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkMobSpawnRules
	a (Lnet/minecraft/world/entity/EntityTypes;Z)Lnet/minecraft/world/entity/EntityInsentient; convertTo
	a (Lnet/minecraft/world/entity/EnumItemSlot;F)V setDropChance
	a (Lnet/minecraft/world/entity/EnumItemSlot;I)Lnet/minecraft/world/item/Item; getEquipmentForSlot
	a (Lnet/minecraft/world/entity/EnumItemSlot;Lnet/minecraft/world/item/ItemStack;)V setItemSlot
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z canBeLeashed
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; interact
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/entity/EntityInsentient;)V onOffspringSpawnedFromEgg
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V maybeDisableShield
	a (Lnet/minecraft/world/item/ItemProjectileWeapon;)Z canFireProjectileWeapon
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/entity/EnumMobSpawn;)Z checkSpawnRules
	a (Lnet/minecraft/world/level/IWorldReader;)Z checkSpawnObstruction
	a (Lnet/minecraft/world/level/World;)Lnet/minecraft/world/entity/ai/navigation/NavigationAbstract; createNavigation
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/world/level/pathfinder/PathType;)F getPathfindingMalus
	a (Lnet/minecraft/world/level/pathfinder/PathType;F)V setPathfindingMalus
	a (Z)V setBaby
	a (ZLnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/world/level/storage/loot/LootTableInfo$Builder; createLootContext
	a (ZZ)V dropLeash
	a_ ()V defineSynchedData
	ao ()V baseTick
	b (B)V handleEntityEvent
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyDamageScaler;)V populateDefaultEquipmentEnchantments
	b (Lnet/minecraft/world/entity/Entity;Z)V setLeashedTo
	b (Lnet/minecraft/world/entity/EnumItemSlot;Lnet/minecraft/world/item/ItemStack;)V setItemSlotAndDropWhenKilled
	b (Lnet/minecraft/world/entity/item/EntityItem;)V pickUpItem
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	b (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z canReplaceCurrentItem
	bH ()Ljava/lang/Iterable; getHandSlots
	bI ()Ljava/lang/Iterable; getArmorSlots
	b_ ()V aiStep
	c (Ljava/util/function/Predicate;)V removeAllGoals
	c (Lnet/minecraft/tags/TagKey;)V jumpInLiquid
	c (Lnet/minecraft/world/entity/EnumItemSlot;)Lnet/minecraft/world/item/ItemStack; getItemBySlot
	c (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; checkAndHandleImportantInteractions
	c (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z canReplaceEqualItem
	cK ()Lnet/minecraft/world/entity/EntityLiving; getControllingPassenger
	cU ()Z isEffectiveAi
	cn ()V removeAfterChangingDimensions
	cp ()I getMaxFallDistance
	d (I)Z isMaxGroupSizeReached
	dX ()I getExperienceReward
	ds ()V checkDespawn
	dt ()Lnet/minecraft/world/item/ItemStack; getPickResult
	e (FF)F tickHeadTurn
	e (Lnet/minecraft/world/damagesource/DamageSource;)V playHurtSound
	e (Lnet/minecraft/world/entity/EnumItemSlot;)V setGuaranteedDrop
	eY ()V serverAiStep
	et ()Lnet/minecraft/resources/MinecraftKey; getLootTable
	f (Lnet/minecraft/world/entity/EnumItemSlot;)F getEquipmentDropChance
	f (Lnet/minecraft/world/item/ItemStack;)Z canTakeItem
	fA ()Z canPickUpLoot
	fB ()Z isPersistenceRequired
	fC ()Z isWithinRestriction
	fD ()Lnet/minecraft/core/BlockPosition; getRestrictCenter
	fE ()F getRestrictRadius
	fF ()V clearRestriction
	fG ()Z hasRestriction
	fH ()V tickLeash
	fI ()Z isLeashed
	fJ ()Lnet/minecraft/world/entity/Entity; getLeashHolder
	fK ()Z isNoAi
	fL ()Z isLeftHanded
	fM ()Z isAggressive
	fN ()Z isSunBurnTick
	fO ()V removeFreeWill
	fP ()V restoreLeashFromSave
	fd ()Lnet/minecraft/world/entity/EnumMainHand; getMainArm
	fy ()I getMaxSpawnClusterSize
	fz ()V setPersistenceRequired
	h (D)Z removeWhenFarAway
	h (F)V setSpeed
	i (Lnet/minecraft/world/entity/EntityLiving;)V setTarget
	i (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; equipItemIfPossible
	j (Lnet/minecraft/world/entity/EntityLiving;)D getMeleeAttackRangeSqr
	j (Lnet/minecraft/world/item/ItemStack;)Z canHoldItem
	k (Lnet/minecraft/world/entity/EntityLiving;)D getPerceivedTargetDistanceSquareForMeleeAttack
	k (Lnet/minecraft/world/item/ItemStack;)Z wantsToPickUp
	l ()V tick
	l (Lnet/minecraft/world/entity/EntityLiving;)Z isWithinMeleeAttackRange
	q ()V resetAmbientSoundTime
	q (I)V setDelayedLeashHolderId
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	s (Z)V setCanPickUpLoot
	t (Z)V setNoAi
	u (Z)V setLeftHanded
	v (Z)V setAggressive
	x ()V registerGoals
	y ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createMobAttributes
	y (F)V setZza
	z ()Z shouldPassengersInheritMalus
	z (F)V setYya
	z (Lnet/minecraft/world/entity/Entity;)Z doHurtTarget
net/minecraft/world/entity/EntityLightning net/minecraft/world/entity/LightningBolt
	b seed
	c START_LIFE
	d DAMAGE_RADIUS
	e DETECTION_RADIUS
	f life
	g flashes
	h visualOnly
	i cause
	j hitEntities
	k blocksSetOnFire
	a (D)Z shouldRenderAtSqrDistance
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;I)V randomWalkCleaningCopper
	a (Z)V setVisualOnly
	a_ ()V defineSynchedData
	b (I)V spawnFire
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/level/EntityPlayer;)V setCause
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V clearCopperOnLightningStrike
	c (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Ljava/util/Optional; randomStepCleaningCopper
	cX ()Lnet/minecraft/sounds/SoundCategory; getSoundSource
	i ()Lnet/minecraft/server/level/EntityPlayer; getCause
	j ()I getBlocksSetOnFire
	k ()Ljava/util/stream/Stream; getHitEntities
	l ()V tick
	o ()V powerLightningRod
	p ()Lnet/minecraft/core/BlockPosition; getStrikePosition
net/minecraft/world/entity/EntityLiving net/minecraft/world/entity/LivingEntity
	aC SLEEPING_DIMENSIONS
	aD EXTRA_RENDER_CULLING_SIZE_WITH_BIG_HAT
	aE swinging
	aF swingingArm
	aG swingTime
	aH removeArrowTime
	aI removeStingerTime
	aJ hurtTime
	aK hurtDuration
	aL deathTime
	aM oAttackAnim
	aN attackAnim
	aO attackStrengthTicker
	aP walkAnimation
	aQ invulnerableDuration
	aR timeOffs
	aS rotA
	aT yBodyRot
	aU yBodyRotO
	aV yHeadRot
	aW yHeadRotO
	aX lastHurtByPlayer
	aY lastHurtByPlayerTime
	aZ dead
	b LOGGER
	bA DAMAGE_SOURCE_TIMEOUT
	bB WAIT_TICKS_BEFORE_ITEM_USE_EFFECTS
	bC TICKS_PER_ELYTRA_FREE_FALL_EVENT
	bD FREE_FALL_EVENTS_PER_ELYTRA_BREAK
	bE MAX_LINE_OF_SIGHT_TEST_RANGE
	bF DATA_HEALTH_ID
	bG DATA_EFFECT_COLOR_ID
	bH DATA_EFFECT_AMBIENCE_ID
	bI DATA_ARROW_COUNT_ID
	bJ DATA_STINGER_COUNT_ID
	bK SLEEPING_POS_ID
	bL MAX_HEAD_ROTATION_RELATIVE_TO_BODY
	bM attributes
	bN combatTracker
	bO activeEffects
	bP lastHandItemStacks
	bQ lastArmorItemStacks
	bR discardFriction
	bS effectsDirty
	bT lastHurtByMob
	bU lastHurtByMobTimestamp
	bV lastHurtMob
	bW lastHurtMobTimestamp
	bX speed
	bY noJumpDelay
	bZ absorptionAmount
	ba noActionTime
	bb oRun
	bc run
	bd animStep
	be animStepO
	bf rotOffs
	bg deathScore
	bh lastHurt
	bi jumping
	bj xxa
	bk yya
	bl zza
	bm lerpSteps
	bn lerpX
	bo lerpY
	bp lerpZ
	bq lerpYRot
	br lerpXRot
	bs lyHeadRot
	bt lerpHeadSteps
	bu useItem
	bv useItemRemaining
	bw fallFlyTicks
	bx autoSpinAttackTicks
	by brain
	bz SPEED_MODIFIER_SPRINTING
	c SPEED_MODIFIER_SPRINTING_UUID
	ca lastPos
	cb lastClimbablePos
	cc lastDamageSource
	cd lastDamageStamp
	ce swimAmount
	cf swimAmountO
	cg skipDropExperience
	d SPEED_MODIFIER_SOUL_SPEED_UUID
	e SPEED_MODIFIER_POWDER_SNOW_UUID
	g HAND_SLOTS
	h ARMOR_SLOTS
	i EQUIPMENT_SLOT_OFFSET
	j ARMOR_SLOT_OFFSET
	k SWING_DURATION
	l PLAYER_HURT_EXPERIENCE_TIME
	m MIN_MOVEMENT_DISTANCE
	n DEFAULT_BASE_GRAVITY
	o DEATH_DURATION
	p USE_ITEM_INTERVAL
	q LIVING_ENTITY_FLAG_IS_USING
	r LIVING_ENTITY_FLAG_OFF_HAND
	s LIVING_ENTITY_FLAG_SPIN_ATTACK
	t DATA_LIVING_ENTITY_FLAGS
	u DEFAULT_EYE_HEIGHT
	A ()Ljava/util/Map; collectEquipmentChanges
	A (Lnet/minecraft/world/entity/Entity;)V doPush
	A_ ()Lnet/minecraft/world/phys/AxisAlignedBB; getBoundingBoxForCulling
	B (Lnet/minecraft/world/entity/Entity;)Z hasLineOfSight
	C ()V updateFallFlying
	D ()V updatingUsingItem
	E ()Z shouldTriggerItemUseEffects
	E_ ()V onEnterCombat
	F ()V updateInvisibilityStatus
	G ()V updateSwimAmount
	I ()Z checkBedExists
	L_ ()Lnet/minecraft/world/entity/EntityLiving; getLastAttacker
	Y_ ()V completeUsingItem
	a (DD)V indicateDamage
	a (DDDFFIZ)V lerpTo
	a (DDDZ)Z randomTeleport
	a (DZLnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;)V checkFallDamage
	a (DZLnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/phys/Vec3D; getFluidFallingAdjustedMovement
	a (F)F getSwimAmount
	a (FFLnet/minecraft/world/damagesource/DamageSource;)Z causeFallDamage
	a (FI)V lerpHeadTo
	a (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/BehaviorController; makeBrain
	a (Ljava/util/Map;)V handleHandSwap
	a (Lnet/minecraft/commands/arguments/ArgumentAnchor$Anchor;Lnet/minecraft/world/phys/Vec3D;)V lookAt
	a (Lnet/minecraft/core/BlockPosition;)V setPosToBed
	a (Lnet/minecraft/core/BlockPosition;Z)V setRecordPlayingNearby
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;Lnet/minecraft/BlockUtil$Rectangle;)Lnet/minecraft/world/phys/Vec3D; getRelativePortalPosition
	a (Lnet/minecraft/core/Holder;)D getAttributeValue
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutSpawnEntity;)V recreateFromPacket
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/world/EnumHand;)V swing
	a (Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/item/ItemStack;)V setItemInHand
	a (Lnet/minecraft/world/EnumHand;Z)V swing
	a (Lnet/minecraft/world/damagesource/DamageSource;)V die
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/damagesource/DamageSource;IZ)V dropCustomDeathLoot
	a (Lnet/minecraft/world/damagesource/DamageSource;Z)V dropFromLootTable
	a (Lnet/minecraft/world/effect/MobEffect;)V onEffectRemoved
	a (Lnet/minecraft/world/effect/MobEffect;Lnet/minecraft/world/entity/Entity;)V onEffectAdded
	a (Lnet/minecraft/world/effect/MobEffect;ZLnet/minecraft/world/entity/Entity;)V onEffectUpdated
	a (Lnet/minecraft/world/effect/MobEffectList;)Z hasEffect
	a (Lnet/minecraft/world/entity/Entity$RemovalReason;)V remove
	a (Lnet/minecraft/world/entity/Entity;)V dismountVehicle
	a (Lnet/minecraft/world/entity/Entity;I)V take
	a (Lnet/minecraft/world/entity/EntityLiving;)V setLastHurtByMob
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EnumItemSlot;)Lnet/minecraft/world/entity/SlotAccess; createEquipmentSlotAccess
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/ai/targeting/PathfinderTargetCondition;)Z canAttack
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/phys/Vec3D;)V tickRidden
	a (Lnet/minecraft/world/entity/EntityPose;)Lnet/minecraft/world/entity/EntitySize; getDimensions
	a (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getEyeHeight
	a (Lnet/minecraft/world/entity/EntityTypes;)Z canAttackType
	a (Lnet/minecraft/world/entity/EnumItemSlot;)Z doesEmitEquipEvent
	a (Lnet/minecraft/world/entity/EnumItemSlot;Lnet/minecraft/world/item/ItemStack;)V setItemSlot
	a (Lnet/minecraft/world/entity/EnumItemSlot;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V onEquipItem
	a (Lnet/minecraft/world/entity/ai/attributes/AttributeBase;)Lnet/minecraft/world/entity/ai/attributes/AttributeModifiable; getAttribute
	a (Lnet/minecraft/world/entity/item/EntityItem;)V onItemPickup
	a (Lnet/minecraft/world/item/ItemStack;)V updateUsingItem
	a (Lnet/minecraft/world/item/ItemStack;I)V spawnItemParticles
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z equipmentHasChanged
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/EntityLiving;)V addEatEffect
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; eat
	a (Lnet/minecraft/world/level/material/Fluid;)Z canStandOnFluid
	a (Lnet/minecraft/world/phys/AxisAlignedBB;Lnet/minecraft/world/phys/AxisAlignedBB;)V checkAutoSpinAttack
	a (Lnet/minecraft/world/phys/Vec3D;F)Lnet/minecraft/world/phys/Vec3D; handleRelativeFrictionAndCalculateMovement
	a (ZLnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/world/level/storage/loot/LootTableInfo$Builder; createLootContext
	aF ()F getBlockSpeedFactor
	a_ ()V defineSynchedData
	a_ (I)Lnet/minecraft/world/entity/SlotAccess; getSlot
	ah ()V kill
	ao ()V baseTick
	aw ()V outOfWorld
	b (B)V handleEntityEvent
	b (F)V heal
	b (Ljava/util/Map;)V handleEquipmentChanges
	b (Ljava/util/function/Predicate;)Z isHolding
	b (Lnet/minecraft/core/BlockPosition;)V startSleeping
	b (Lnet/minecraft/core/Holder;)D getAttributeBaseValue
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/item/ItemStack; getItemInHand
	b (Lnet/minecraft/world/damagesource/DamageSource;F)V hurtArmor
	b (Lnet/minecraft/world/effect/MobEffect;)Z addEffect
	b (Lnet/minecraft/world/effect/MobEffect;Lnet/minecraft/world/entity/Entity;)Z addEffect
	b (Lnet/minecraft/world/effect/MobEffectList;)Lnet/minecraft/world/effect/MobEffect; getEffect
	b (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/phys/Vec3D; getRiddenInput
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/world/entity/EnumItemSlot;)Z hasItemInSlot
	b (Lnet/minecraft/world/entity/EnumItemSlot;Lnet/minecraft/world/item/ItemStack;)V setLastArmorItem
	b (Lnet/minecraft/world/entity/ai/attributes/AttributeBase;)D getAttributeValue
	b (Lnet/minecraft/world/item/Item;)Z isHolding
	b (Lnet/minecraft/world/item/ItemStack;I)V triggerItemUseEffects
	b (Lnet/minecraft/world/level/block/state/IBlockData;)Z shouldRemoveSoulSpeed
	bI ()Ljava/lang/Iterable; getArmorSlots
	bW ()Z isVisuallySwimming
	bZ ()Z isCurrentlyGlowing
	b_ ()V aiStep
	bm ()Z isPickable
	bn ()Z isPushable
	bq ()Z isAlive
	br ()Z isInWall
	bt ()V rideTick
	bz ()V stopRiding
	c (F)V setHealth
	c (IZ)V setLivingEntityFlag
	c (Ljava/util/Collection;)Z areAllEffectsAmbient
	c (Lnet/minecraft/core/BlockPosition;)V onChangedBlock
	c (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z trapdoorUsableAsLadder
	c (Lnet/minecraft/tags/TagKey;)V jumpInLiquid
	c (Lnet/minecraft/world/EnumHand;)V startUsingItem
	c (Lnet/minecraft/world/damagesource/DamageSource;)V handleDamageEvent
	c (Lnet/minecraft/world/damagesource/DamageSource;F)V hurtHelmet
	c (Lnet/minecraft/world/effect/MobEffect;)Z canBeAffected
	c (Lnet/minecraft/world/effect/MobEffect;Lnet/minecraft/world/entity/Entity;)V forceAddEffect
	c (Lnet/minecraft/world/effect/MobEffectList;)Lnet/minecraft/world/effect/MobEffect; removeEffectNoUpdate
	c (Lnet/minecraft/world/entity/EntityLiving;)Z canAttack
	c (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/phys/Vec3D;)V travelRidden
	c (Lnet/minecraft/world/entity/EnumItemSlot;)Lnet/minecraft/world/item/ItemStack; getItemBySlot
	c (Lnet/minecraft/world/entity/EnumItemSlot;Lnet/minecraft/world/item/ItemStack;)V setLastHandItem
	c (Lnet/minecraft/world/entity/ai/attributes/AttributeBase;)D getAttributeBaseValue
	c (Lnet/minecraft/world/entity/player/EntityHuman;)V setLastHurtByPlayer
	c (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/sounds/SoundEffect; getDrinkingSound
	c (Z)V setOnGround
	ck ()F getYHeadRot
	co ()Z canChangeDimensions
	cy ()Z shouldShowName
	d (F)V hurtCurrentlyUsedShield
	d (FF)I calculateFallDamage
	d (I)Lnet/minecraft/sounds/SoundEffect; getFallDamageSound
	d (Lnet/minecraft/world/EnumHand;)V broadcastBreakEvent
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	d (Lnet/minecraft/world/damagesource/DamageSource;F)F getDamageAfterArmorAbsorb
	d (Lnet/minecraft/world/effect/MobEffectList;)Z removeEffect
	d (Lnet/minecraft/world/entity/EntityLiving;)V blockUsingShield
	d (Lnet/minecraft/world/entity/EnumItemSlot;)V broadcastBreakEvent
	d (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/sounds/SoundEffect; getEatingSound
	dA ()F maxUpStep
	dH ()Lnet/minecraft/world/entity/ai/BehaviorController; getBrain
	dI ()Lbgy$b; brainProvider
	dJ ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createLivingAttributes
	dK ()Z canBreatheUnderwater
	dL ()Z canSpawnSoulSpeedParticle
	dM ()V spawnSoulSpeedParticle
	dN ()Z onSoulSpeedBlock
	dO ()V removeSoulSpeed
	dP ()V tryAddSoulSpeed
	dQ ()V removeFrost
	dR ()V tryAddFrost
	dS ()F getScale
	dT ()Z isAffectedByFluids
	dU ()V tickDeath
	dV ()Z shouldDropExperience
	dW ()Z shouldDropLoot
	dX ()I getExperienceReward
	dY ()Z isAlwaysExperienceDropper
	dZ ()Lnet/minecraft/util/RandomSource; getRandom
	du ()Z canFreeze
	dx ()F getVisualRotationYInDegrees
	e (FF)F tickHeadTurn
	e (Lnet/minecraft/core/BlockPosition;)V setSleepingPos
	e (Lnet/minecraft/world/damagesource/DamageSource;)V playHurtSound
	e (Lnet/minecraft/world/damagesource/DamageSource;F)F getDamageAfterMagicAbsorb
	e (Lnet/minecraft/world/entity/EntityLiving;)V blockedByShield
	e (Lnet/minecraft/world/entity/EnumItemSlot;)Lnet/minecraft/world/item/ItemStack; getLastArmorItem
	e (Lnet/minecraft/world/item/ItemStack;)V verifyEquippedItem
	eA ()V playBlockFallSound
	eB ()I getArmorValue
	eC ()Lnet/minecraft/world/damagesource/CombatTracker; getCombatTracker
	eD ()Lnet/minecraft/world/entity/EntityLiving; getKillCredit
	eE ()F getMaxHealth
	eF ()I getArrowCount
	eG ()I getStingerCount
	eH ()V updateSwingTime
	eI ()Lnet/minecraft/world/entity/ai/attributes/AttributeMapBase; getAttributes
	eJ ()Lnet/minecraft/world/entity/EnumMonsterType; getMobType
	eK ()Lnet/minecraft/world/item/ItemStack; getMainHandItem
	eL ()Lnet/minecraft/world/item/ItemStack; getOffhandItem
	eM ()F getArmorCoverPercentage
	eN ()F getSoundVolume
	eO ()F getVoicePitch
	eP ()Z isImmobile
	eQ ()F getJumpPower
	eR ()D getJumpBoostPower
	eS ()V jumpFromGround
	eT ()V goDownInWater
	eU ()F getWaterSlowDown
	eV ()F getFlyingSpeed
	eW ()F getSpeed
	eX ()Z isSensitiveToWater
	eY ()V serverAiStep
	eZ ()V pushEntities
	ea ()Lnet/minecraft/world/entity/EntityLiving; getLastHurtByMob
	eb ()I getLastHurtByMobTimestamp
	ec ()Lnet/minecraft/world/entity/EntityLiving; getLastHurtMob
	ed ()I getLastHurtMobTimestamp
	ee ()I getNoActionTime
	ef ()Z shouldDiscardFriction
	eg ()V tickEffects
	eh ()Z canBeSeenAsEnemy
	ei ()Z canBeSeenByAnyone
	ej ()V removeEffectParticles
	ek ()Z removeAllEffects
	el ()Ljava/util/Collection; getActiveEffects
	em ()Ljava/util/Map; getActiveEffectsMap
	en ()Z isInvertedHealAndHarm
	eo ()F getHealth
	ep ()Z isDeadOrDying
	eq ()Lnet/minecraft/world/damagesource/DamageSource; getLastDamageSource
	er ()V dropEquipment
	es ()V dropExperience
	et ()Lnet/minecraft/resources/MinecraftKey; getLootTable
	eu ()V skipDropExperience
	ev ()Z wasExperienceConsumed
	ew ()Lnet/minecraft/world/phys/Vec3D; getMeleeAttackReferencePosition
	ex ()F getHurtDir
	ey ()Lbfx$a; getFallSounds
	ez ()Ljava/util/Optional; getLastClimbablePos
	f (Lnet/minecraft/world/damagesource/DamageSource;)Z isDamageSourceBlocked
	f (Lnet/minecraft/world/damagesource/DamageSource;F)V actuallyHurt
	f (Lnet/minecraft/world/entity/EntityLiving;)V createWitherRose
	f (Lnet/minecraft/world/entity/EnumItemSlot;)Lnet/minecraft/world/item/ItemStack; getLastHandItem
	f (Lnet/minecraft/world/item/ItemStack;)Z canTakeItem
	fa ()Z isAutoSpinAttack
	fb ()F getAbsorptionAmount
	fc ()V updateEffectVisibility
	fd ()Lnet/minecraft/world/entity/EnumMainHand; getMainArm
	fe ()Z isUsingItem
	ff ()Lnet/minecraft/world/EnumHand; getUsedItemHand
	fg ()Lnet/minecraft/world/item/ItemStack; getUseItem
	fh ()I getUseItemRemainingTicks
	fi ()I getTicksUsingItem
	fj ()V releaseUsingItem
	fk ()V stopUsingItem
	fl ()Z isBlocking
	fm ()Z isSuppressingSlidingDownLadder
	fn ()Z isFallFlying
	fo ()I getFallFlyingTicks
	fp ()Z isAffectedByPotions
	fq ()Z attackable
	fr ()Lcom/google/common/collect/ImmutableList; getDismountPoses
	fs ()Ljava/util/Optional; getSleepingPos
	ft ()V clearSleepingPos
	fu ()Z isSleeping
	fv ()V stopSleeping
	fw ()Lnet/minecraft/core/EnumDirection; getBedOrientation
	fx ()Z canDisableShield
	g (F)V updateWalkAnimation
	g (Lnet/minecraft/world/damagesource/DamageSource;)V dropAllDeathLoot
	g (Lnet/minecraft/world/entity/Entity;)V push
	g (Lnet/minecraft/world/entity/EntityLiving;)F getRiddenSpeed
	g (Lnet/minecraft/world/entity/EntityPose;)Lnet/minecraft/world/phys/AxisAlignedBB; getLocalBoundsForPose
	g (Lnet/minecraft/world/entity/EnumItemSlot;)B entityEventForEquipmentBreak
	g (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; getProjectile
	g (Z)V setSprinting
	h (F)V setSpeed
	h (Lnet/minecraft/world/damagesource/DamageSource;)Z checkTotemDeathProtection
	h (Lnet/minecraft/world/entity/EntityLiving;)V doAutoAttackOnTouch
	h (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/entity/EnumItemSlot; getEquipmentSlotForItem
	h (Lnet/minecraft/world/phys/Vec3D;)V travel
	i (Lnet/minecraft/world/item/ItemStack;)V breakItem
	i (Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/phys/Vec3D; resetForwardDirectionOfRelativePortalPosition
	j ()V onLeaveCombat
	j (Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/phys/Vec3D; handleOnClimbable
	l ()V tick
	l (F)F getViewYRot
	l (I)I decreaseAirSupply
	m (I)I increaseAirSupply
	n (I)V setNoActionTime
	o (I)V setArrowCount
	p (I)V setStingerCount
	p (Z)V setDiscardFriction
	q ()V updateGlowingStatus
	q (DDD)V knockback
	q (F)V animateHurt
	q (I)Lnet/minecraft/world/entity/EnumItemSlot; getEquipmentSlot
	q (Z)V calculateEntityAnimation
	r (F)V setYHeadRot
	r (Z)V setJumping
	s ()I getCurrentSwingDuration
	s (F)V setYBodyRot
	w (F)F getAttackAnim
	x ()V makePoofParticles
	x (F)V setAbsorptionAmount
	x (Lnet/minecraft/world/entity/Entity;)V setLastHurtMob
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	y ()V swapHandItems
	y (F)F getFrictionInfluencedSpeed
	y (Lnet/minecraft/world/entity/Entity;)D getVisibilityPercent
	y_ ()Z isBaby
	z ()V detectEquipmentUpdates
	z (Lnet/minecraft/world/entity/Entity;)Z doHurtTarget
	z_ ()Z onClimbable
net/minecraft/world/entity/EntityPose net/minecraft/world/entity/Pose
	a STANDING
	b FALL_FLYING
	c SLEEPING
	d SWIMMING
	e SPIN_ATTACK
	f CROUCHING
	g LONG_JUMPING
	h DYING
	i CROAKING
	j USING_TONGUE
	k SITTING
	l ROARING
	m SNIFFING
	n EMERGING
	o DIGGING
	p $VALUES
	a ()[Lnet/minecraft/world/entity/EntityPose; $values
net/minecraft/world/entity/EntityPositionTypes net/minecraft/world/entity/SpawnPlacements
	a DATA_BY_TYPE
	a (Lnet/minecraft/world/entity/EntityTypes;)Lnet/minecraft/world/entity/EntityPositionTypes$Surface; getPlacementType
	a (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/entity/EntityPositionTypes$Surface;Lnet/minecraft/world/level/levelgen/HeightMap$Type;Lbgs$b;)V register
	a (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkSpawnRules
	b (Lnet/minecraft/world/entity/EntityTypes;)Lnet/minecraft/world/level/levelgen/HeightMap$Type; getHeightmapType
net/minecraft/world/entity/EntityPositionTypes$Surface net/minecraft/world/entity/SpawnPlacements$Type
	a ON_GROUND
	b IN_WATER
	c NO_RESTRICTIONS
	d IN_LAVA
	e $VALUES
	a ()[Lnet/minecraft/world/entity/EntityPositionTypes$Surface; $values
net/minecraft/world/entity/EntitySize net/minecraft/world/entity/EntityDimensions
	a width
	b height
	c fixed
	a (DDD)Lnet/minecraft/world/phys/AxisAlignedBB; makeBoundingBox
	a (F)Lnet/minecraft/world/entity/EntitySize; scale
	a (FF)Lnet/minecraft/world/entity/EntitySize; scale
	a (Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/phys/AxisAlignedBB; makeBoundingBox
	b (FF)Lnet/minecraft/world/entity/EntitySize; scalable
	c (FF)Lnet/minecraft/world/entity/EntitySize; fixed
net/minecraft/world/entity/EntityTameableAnimal net/minecraft/world/entity/TamableAnimal
	bS DATA_FLAGS_ID
	bT DATA_OWNERUUID_ID
	bV orderedToSit
	T_ ()Ljava/util/UUID; getOwnerUUID
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/damagesource/DamageSource;)V die
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityLiving;)Z wantsToAttack
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z canBeLeashed
	a_ ()V defineSynchedData
	b (B)V handleEntityEvent
	b (Ljava/util/UUID;)V setOwnerUUID
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	c (Lnet/minecraft/world/entity/EntityLiving;)Z canAttack
	cb ()Lnet/minecraft/world/scores/ScoreboardTeamBase; getTeam
	e ()Lnet/minecraft/world/level/IEntityAccess; getLevel
	e (Lnet/minecraft/world/entity/player/EntityHuman;)V tame
	fS ()Z isOrderedToSit
	m (Lnet/minecraft/world/entity/EntityLiving;)Z isOwnedBy
	p (Lnet/minecraft/world/entity/Entity;)Z isAlliedTo
	q ()Z isTame
	r ()V reassessTameGoals
	w ()Z isInSittingPose
	w (Z)V spawnTamingParticles
	x (Z)V setTame
	y (Z)V setInSittingPose
	z (Z)V setOrderedToSit
net/minecraft/world/entity/EntityTypes net/minecraft/world/entity/EntityType
	A ELDER_GUARDIAN
	B END_CRYSTAL
	C ENDER_DRAGON
	D ENDER_PEARL
	E ENDERMAN
	F ENDERMITE
	G EVOKER
	H EVOKER_FANGS
	I EXPERIENCE_BOTTLE
	J EXPERIENCE_ORB
	K EYE_OF_ENDER
	L FALLING_BLOCK
	M FIREWORK_ROCKET
	N FOX
	O FROG
	P FURNACE_MINECART
	Q GHAST
	R GIANT
	S GLOW_ITEM_FRAME
	T GLOW_SQUID
	U GOAT
	V GUARDIAN
	W HOGLIN
	X HOPPER_MINECART
	Y HORSE
	Z HUSK
	a ENTITY_TAG
	aA POTION
	aB PUFFERFISH
	aC RABBIT
	aD RAVAGER
	aE SALMON
	aF SHEEP
	aG SHULKER
	aH SHULKER_BULLET
	aI SILVERFISH
	aJ SKELETON
	aK SKELETON_HORSE
	aL SLIME
	aM SMALL_FIREBALL
	aN SNIFFER
	aO SNOW_GOLEM
	aP SNOWBALL
	aQ SPAWNER_MINECART
	aR SPECTRAL_ARROW
	aS SPIDER
	aT SQUID
	aU STRAY
	aV STRIDER
	aW TADPOLE
	aX TEXT_DISPLAY
	aY TNT
	aZ TNT_MINECART
	aa ILLUSIONER
	ab INTERACTION
	ac IRON_GOLEM
	ad ITEM
	ae ITEM_DISPLAY
	af ITEM_FRAME
	ag FIREBALL
	ah LEASH_KNOT
	ai LIGHTNING_BOLT
	aj LLAMA
	ak LLAMA_SPIT
	al MAGMA_CUBE
	am MARKER
	an MINECART
	ao MOOSHROOM
	ap MULE
	aq OCELOT
	ar PAINTING
	as PANDA
	at PARROT
	au PHANTOM
	av PIG
	aw PIGLIN
	ax PIGLIN_BRUTE
	ay PILLAGER
	az POLAR_BEAR
	b ALLAY
	bA factory
	bB category
	bC immuneTo
	bD serialize
	bE summon
	bF fireImmune
	bG canSpawnFarFromPlayer
	bH clientTrackingRange
	bI updateInterval
	bJ descriptionId
	bK description
	bL lootTable
	bM dimensions
	bN requiredFeatures
	ba TRADER_LLAMA
	bb TRIDENT
	bc TROPICAL_FISH
	bd TURTLE
	be VEX
	bf VILLAGER
	bg VINDICATOR
	bh WANDERING_TRADER
	bi WARDEN
	bj WITCH
	bk WITHER
	bl WITHER_SKELETON
	bm WITHER_SKULL
	bn WOLF
	bo ZOGLIN
	bp ZOMBIE
	bq ZOMBIE_HORSE
	br ZOMBIE_VILLAGER
	bs ZOMBIFIED_PIGLIN
	bt PLAYER
	bu FISHING_BOBBER
	bw LOGGER
	bx builtInRegistryHolder
	by MAGIC_HORSE_WIDTH
	bz DISPLAY_TRACKING_RANGE
	c AREA_EFFECT_CLOUD
	d ARMOR_STAND
	e ARROW
	f AXOLOTL
	g BAT
	h BEE
	i BLAZE
	j BLOCK_DISPLAY
	k BOAT
	l CAMEL
	m CAT
	n CAVE_SPIDER
	o CHEST_BOAT
	p CHEST_MINECART
	q CHICKEN
	r COD
	s COMMAND_BLOCK_MINECART
	t COW
	u CREEPER
	v DOLPHIN
	w DONKEY
	x DRAGON_FIREBALL
	y DROWNED
	z EGG
	a ()Ljava/lang/Class; getBaseClass
	a (DDD)Lnet/minecraft/world/phys/AxisAlignedBB; getAABB
	a (Ljava/lang/Object;)Ljava/lang/Object; tryCast
	a (Ljava/lang/String;)Ljava/util/Optional; byString
	a (Ljava/lang/String;Lnet/minecraft/world/entity/EntityTypes$Builder;)Lnet/minecraft/world/entity/EntityTypes; register
	a (Ljava/util/List;Lnet/minecraft/world/level/World;)Ljava/util/stream/Stream; loadEntitiesRecursive
	a (Ljava/util/function/Consumer;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/EntityHuman;)Ljava/util/function/Consumer; appendDefaultStackConfig
	a (Ljava/util/function/Consumer;Lnet/minecraft/world/item/ItemStack;)Ljava/util/function/Consumer; appendCustomNameConfig
	a (Lnet/minecraft/nbt/NBTTagCompound;)Ljava/util/Optional; by
	a (Lnet/minecraft/nbt/NBTTagCompound;Lnet/minecraft/world/level/World;)Ljava/util/Optional; create
	a (Lnet/minecraft/nbt/NBTTagCompound;Lnet/minecraft/world/level/World;Ljava/util/function/Function;)Lnet/minecraft/world/entity/Entity; loadEntityRecursive
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/EnumMobSpawn;)Lnet/minecraft/world/entity/Entity; spawn
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/nbt/NBTTagCompound;Ljava/util/function/Consumer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/EnumMobSpawn;ZZ)Lnet/minecraft/world/entity/Entity; spawn
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/EntityHuman;)Ljava/util/function/Consumer; createDefaultStackConfig
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/EnumMobSpawn;ZZ)Lnet/minecraft/world/entity/Entity; spawn
	a (Lnet/minecraft/tags/TagKey;)Z is
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/entity/Entity; tryCast
	a (Lnet/minecraft/world/entity/EntityTypes;)Lnet/minecraft/resources/MinecraftKey; getKey
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;ZLnet/minecraft/world/phys/AxisAlignedBB;)D getYOffset
	a (Lnet/minecraft/world/level/World;)Lnet/minecraft/world/entity/Entity; create
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/nbt/NBTTagCompound;)V updateCustomEntityTag
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z isBlockDangerous
	b ()Z canSerialize
	b (Ljava/util/function/Consumer;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/EntityHuman;)Ljava/util/function/Consumer; appendCustomEntityStackConfig
	b (Lnet/minecraft/nbt/NBTTagCompound;Lnet/minecraft/world/level/World;)Ljava/util/Optional; loadStaticEntity
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/nbt/NBTTagCompound;Ljava/util/function/Consumer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/EnumMobSpawn;ZZ)Lnet/minecraft/world/entity/Entity; create
	c ()Z canSummon
	d ()Z fireImmune
	e ()Z canSpawnFarFromPlayer
	f ()Lnet/minecraft/world/entity/EnumCreatureType; getCategory
	g ()Ljava/lang/String; getDescriptionId
	h ()Lnet/minecraft/network/chat/IChatBaseComponent; getDescription
	i ()Ljava/lang/String; toShortString
	j ()Lnet/minecraft/resources/MinecraftKey; getDefaultLootTable
	k ()F getWidth
	l ()F getHeight
	m ()Lnet/minecraft/world/flag/FeatureFlagSet; requiredFeatures
	n ()Lnet/minecraft/world/entity/EntitySize; getDimensions
	o ()I clientTrackingRange
	p ()I updateInterval
	q ()Z trackDeltas
	r ()Lhd$c; builtInRegistryHolder
net/minecraft/world/entity/EntityTypes$Builder net/minecraft/world/entity/EntityType$Builder
	a factory
	b category
	c immuneTo
	d serialize
	e summon
	f fireImmune
	g canSpawnFarFromPlayer
	h clientTrackingRange
	i updateInterval
	j dimensions
	k requiredFeatures
	a ()Lnet/minecraft/world/entity/EntityTypes$Builder; noSummon
	a (FF)Lnet/minecraft/world/entity/EntityTypes$Builder; sized
	a (I)Lnet/minecraft/world/entity/EntityTypes$Builder; clientTrackingRange
	a (Lbfl$b;Lnet/minecraft/world/entity/EnumCreatureType;)Lnet/minecraft/world/entity/EntityTypes$Builder; of
	a (Ljava/lang/String;)Lnet/minecraft/world/entity/EntityTypes; build
	a (Lnet/minecraft/world/entity/EnumCreatureType;)Lnet/minecraft/world/entity/EntityTypes$Builder; createNothing
	a ([Lnet/minecraft/world/flag/FeatureFlag;)Lnet/minecraft/world/entity/EntityTypes$Builder; requiredFeatures
	a ([Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/entity/EntityTypes$Builder; immuneTo
	b ()Lnet/minecraft/world/entity/EntityTypes$Builder; noSave
	b (I)Lnet/minecraft/world/entity/EntityTypes$Builder; updateInterval
	c ()Lnet/minecraft/world/entity/EntityTypes$Builder; fireImmune
	d ()Lnet/minecraft/world/entity/EntityTypes$Builder; canSpawnFarFromPlayer
net/minecraft/world/entity/EnumCreatureType net/minecraft/world/entity/MobCategory
	a MONSTER
	b CREATURE
	c AMBIENT
	d AXOLOTLS
	e UNDERGROUND_WATER_CREATURE
	f WATER_CREATURE
	g WATER_AMBIENT
	h MISC
	i CODEC
	j max
	k isFriendly
	l isPersistent
	m name
	n noDespawnDistance
	o despawnDistance
	p $VALUES
	a ()Ljava/lang/String; getName
	b ()I getMaxInstancesPerChunk
	c ()Ljava/lang/String; getSerializedName
	d ()Z isFriendly
	e ()Z isPersistent
	f ()I getDespawnDistance
	g ()I getNoDespawnDistance
	h ()[Lnet/minecraft/world/entity/EnumCreatureType; $values
net/minecraft/world/entity/EnumItemSlot net/minecraft/world/entity/EquipmentSlot
	a MAINHAND
	b OFFHAND
	c FEET
	d LEGS
	e CHEST
	f HEAD
	g type
	h index
	i filterFlag
	j name
	k $VALUES
	a ()Lnet/minecraft/world/entity/EnumItemSlot$Function; getType
	a (I)I getIndex
	a (Ljava/lang/String;)Lnet/minecraft/world/entity/EnumItemSlot; byName
	a (Lnet/minecraft/world/entity/EnumItemSlot$Function;I)Lnet/minecraft/world/entity/EnumItemSlot; byTypeAndIndex
	b ()I getIndex
	c ()I getFilterFlag
	d ()Ljava/lang/String; getName
	e ()Z isArmor
	f ()[Lnet/minecraft/world/entity/EnumItemSlot; $values
net/minecraft/world/entity/EnumItemSlot$Function net/minecraft/world/entity/EquipmentSlot$Type
	a HAND
	b ARMOR
	c $VALUES
	a ()[Lnet/minecraft/world/entity/EnumItemSlot$Function; $values
net/minecraft/world/entity/EnumMainHand net/minecraft/world/entity/HumanoidArm
	a LEFT
	b RIGHT
	c id
	d name
	e $VALUES
	a ()I getId
	b ()Ljava/lang/String; getKey
	d ()Lnet/minecraft/world/entity/EnumMainHand; getOpposite
	e ()[Lnet/minecraft/world/entity/EnumMainHand; $values
net/minecraft/world/entity/EnumMobSpawn net/minecraft/world/entity/MobSpawnType
	a NATURAL
	b CHUNK_GENERATION
	c SPAWNER
	d STRUCTURE
	e BREEDING
	f MOB_SUMMONED
	g JOCKEY
	h EVENT
	i CONVERSION
	j REINFORCEMENT
	k TRIGGERED
	l BUCKET
	m SPAWN_EGG
	n COMMAND
	o DISPENSER
	p PATROL
	q $VALUES
	a ()[Lnet/minecraft/world/entity/EnumMobSpawn; $values
net/minecraft/world/entity/EnumMonsterType net/minecraft/world/entity/MobType
	a UNDEFINED
	b UNDEAD
	c ARTHROPOD
	d ILLAGER
	e WATER
net/minecraft/world/entity/EnumMoveType net/minecraft/world/entity/MoverType
	a SELF
	b PLAYER
	c PISTON
	d SHULKER_BOX
	e SHULKER
	f $VALUES
	a ()[Lnet/minecraft/world/entity/EnumMoveType; $values
net/minecraft/world/entity/GroupDataEntity net/minecraft/world/entity/SpawnGroupData
net/minecraft/world/entity/IEntityAngerable net/minecraft/world/entity/NeutralMob
	a_ TAG_ANGER_TIME
	b_ TAG_ANGRY_AT
	N_ ()V stopBeingAngry
	P_ ()Lnet/minecraft/world/entity/EntityLiving; getTarget
	R_ ()Z isAngry
	S_ ()V forgetCurrentTargetAndRefreshUniversalAnger
	a ()I getRemainingPersistentAngerTime
	a (I)V setRemainingPersistentAngerTime
	a (Ljava/util/UUID;)V setPersistentAngerTarget
	a (Lnet/minecraft/server/level/WorldServer;Z)V updatePersistentAnger
	a (Lnet/minecraft/world/entity/EntityLiving;)V setLastHurtByMob
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/nbt/NBTTagCompound;)V readPersistentAngerSaveData
	a_ (Lnet/minecraft/world/entity/EntityLiving;)Z isAngryAt
	a_ (Lnet/minecraft/world/entity/player/EntityHuman;)V playerDied
	b ()Ljava/util/UUID; getPersistentAngerTarget
	b (Lnet/minecraft/world/level/World;)Z isAngryAtAllPlayers
	c ()V startPersistentAngerTimer
	c (Lnet/minecraft/nbt/NBTTagCompound;)V addPersistentAngerSaveData
	c (Lnet/minecraft/world/entity/EntityLiving;)Z canAttack
	c (Lnet/minecraft/world/entity/player/EntityHuman;)V setLastHurtByPlayer
	ea ()Lnet/minecraft/world/entity/EntityLiving; getLastHurtByMob
	i (Lnet/minecraft/world/entity/EntityLiving;)V setTarget
net/minecraft/world/entity/IEntitySelector net/minecraft/world/entity/EntitySelector
	a ENTITY_STILL_ALIVE
	b LIVING_ENTITY_STILL_ALIVE
	c ENTITY_NOT_BEING_RIDDEN
	d CONTAINER_ENTITY_SELECTOR
	e NO_CREATIVE_OR_SPECTATOR
	f NO_SPECTATORS
	g CAN_BE_COLLIDED_WITH
	a (DDDD)Ljava/util/function/Predicate; withinDistance
	a (Lnet/minecraft/world/entity/Entity;)Ljava/util/function/Predicate; pushableBy
	b (Lnet/minecraft/world/entity/Entity;)Ljava/util/function/Predicate; notRiding
net/minecraft/world/entity/IEntitySelector$EntitySelectorEquipable net/minecraft/world/entity/EntitySelector$MobCanWearArmorEntitySelector
	a itemStack
	a (Lnet/minecraft/world/entity/Entity;)Z test
net/minecraft/world/entity/IJumpable net/minecraft/world/entity/PlayerRideableJumping
	V_ ()I getJumpCooldown
	a ()Z canJump
	b ()V handleStopJump
	b (I)V onPlayerJump
	c (I)V handleStartJump
net/minecraft/world/entity/ISaddleable net/minecraft/world/entity/Saddleable
	Q_ ()Lnet/minecraft/sounds/SoundEffect; getSaddleSoundEvent
	a (Lnet/minecraft/sounds/SoundCategory;)V equipSaddle
	g ()Z isSaddleable
	i ()Z isSaddled
net/minecraft/world/entity/IShearable net/minecraft/world/entity/Shearable
	a ()Z readyForShearing
	a (Lnet/minecraft/sounds/SoundCategory;)V shear
net/minecraft/world/entity/ISteerable net/minecraft/world/entity/ItemSteerable
	a ()Z boost
net/minecraft/world/entity/ReputationHandler net/minecraft/world/entity/ReputationEventHandler
	a (Lnet/minecraft/world/entity/ai/village/ReputationEvent;Lnet/minecraft/world/entity/Entity;)V onReputationEventFrom
net/minecraft/world/entity/SaddleStorage net/minecraft/world/entity/ItemBasedSteering
	a MIN_BOOST_TIME
	b MAX_BOOST_TIME
	c entityData
	d boostTimeAccessor
	e hasSaddleAccessor
	f boosting
	g boostTime
	a ()V onSynced
	a (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	a (Lnet/minecraft/util/RandomSource;)Z boost
	a (Z)V setSaddle
	b ()V tickBoost
	b (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	c ()F boostFactor
	d ()Z hasSaddle
	e ()I boostTimeTotal
net/minecraft/world/entity/ai/BehaviorController net/minecraft/world/entity/ai/Brain
	a LOGGER
	b codec
	c SCHEDULE_UPDATE_DELAY
	d memories
	e sensors
	f availableBehaviorsByPriority
	g schedule
	h activityRequirements
	i activityMemoriesToEraseWhenStopped
	j coreActivities
	k activeActivities
	l defaultActivity
	m lastScheduleUpdate
	a ()V clearMemories
	a (ILcom/google/common/collect/ImmutableList;)Lcom/google/common/collect/ImmutableList; createPriorityPairs
	a (JJ)V updateActivityFromSchedule
	a (Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/DataResult; serializeStart
	a (Ljava/lang/Object;)Z isEmptyCollection
	a (Ljava/util/Collection;Ljava/util/Collection;)Lbgy$b; provider
	a (Ljava/util/List;)V setActiveActivityToFirstValid
	a (Ljava/util/Set;)V setCoreActivities
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)V tick
	a (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Z hasMemoryValue
	a (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/lang/Object;)V setMemory
	a (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/lang/Object;J)V setMemoryWithExpiry
	a (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/util/Optional;)V setMemory
	a (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Lnet/minecraft/world/entity/ai/memory/MemoryStatus;)Z checkMemory
	a (Lnet/minecraft/world/entity/schedule/Activity;)V setActiveActivityIfPossible
	a (Lnet/minecraft/world/entity/schedule/Activity;ILcom/google/common/collect/ImmutableList;)V addActivity
	a (Lnet/minecraft/world/entity/schedule/Activity;ILcom/google/common/collect/ImmutableList;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)V addActivityAndRemoveMemoryWhenStopped
	a (Lnet/minecraft/world/entity/schedule/Activity;Lcom/google/common/collect/ImmutableList;)V addActivity
	a (Lnet/minecraft/world/entity/schedule/Activity;Lcom/google/common/collect/ImmutableList;Ljava/util/Set;)V addActivityWithConditions
	a (Lnet/minecraft/world/entity/schedule/Activity;Lcom/google/common/collect/ImmutableList;Ljava/util/Set;Ljava/util/Set;)V addActivityAndRemoveMemoriesWhenStopped
	a (Lnet/minecraft/world/entity/schedule/Schedule;)V setSchedule
	b ()Ljava/util/Map; getMemories
	b (Ljava/util/Collection;Ljava/util/Collection;)Lcom/mojang/serialization/Codec; codec
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)V stopAll
	b (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)V eraseMemory
	b (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/lang/Object;)Z isMemoryValue
	b (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/util/Optional;)V setMemoryInternal
	b (Lnet/minecraft/world/entity/schedule/Activity;)V setDefaultActivity
	c ()Lnet/minecraft/world/entity/schedule/Schedule; getSchedule
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)V tickSensors
	c (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Ljava/util/Optional; getMemory
	c (Lnet/minecraft/world/entity/schedule/Activity;)Z isActive
	d ()Ljava/util/Set; getActiveActivities
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)V startEachNonRunningBehavior
	d (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Ljava/util/Optional; getMemoryInternal
	d (Lnet/minecraft/world/entity/schedule/Activity;)V setActiveActivity
	e ()Ljava/util/List; getRunningBehaviors
	e (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)V tickEachRunningBehavior
	e (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)J getTimeUntilExpiry
	e (Lnet/minecraft/world/entity/schedule/Activity;)V eraseMemoriesForOtherActivitesThan
	f ()V useDefaultActivity
	f (Lnet/minecraft/world/entity/schedule/Activity;)Z activityRequirementsAreMet
	g ()Ljava/util/Optional; getActiveNonCoreActivity
	h ()V removeAllBehaviors
	i ()Lnet/minecraft/world/entity/ai/BehaviorController; copyWithoutBehaviors
	j ()Ljava/util/stream/Stream; memories
	k ()V forgetOutdatedMemories
net/minecraft/world/entity/ai/attributes/AttributeBase net/minecraft/world/entity/ai/attributes/Attribute
	a MAX_NAME_LENGTH
	b defaultValue
	c syncable
	d descriptionId
	a ()D getDefaultValue
	a (D)D sanitizeValue
	a (Z)Lnet/minecraft/world/entity/ai/attributes/AttributeBase; setSyncable
	b ()Z isClientSyncable
	c ()Ljava/lang/String; getDescriptionId
net/minecraft/world/entity/ai/attributes/AttributeDefaults net/minecraft/world/entity/ai/attributes/DefaultAttributes
	a LOGGER
	b SUPPLIERS
	a ()V validate
	a (Lnet/minecraft/world/entity/EntityTypes;)Lnet/minecraft/world/entity/ai/attributes/AttributeProvider; getSupplier
	b (Lnet/minecraft/world/entity/EntityTypes;)Z hasSupplier
net/minecraft/world/entity/ai/attributes/AttributeMapBase net/minecraft/world/entity/ai/attributes/AttributeMap
	a LOGGER
	b attributes
	c dirtyAttributes
	d supplier
	a ()Ljava/util/Set; getDirtyAttributes
	a (Lcom/google/common/collect/Multimap;)V removeAttributeModifiers
	a (Lnet/minecraft/core/Holder;)Lnet/minecraft/world/entity/ai/attributes/AttributeModifiable; getInstance
	a (Lnet/minecraft/core/Holder;Ljava/util/UUID;)Z hasModifier
	a (Lnet/minecraft/nbt/NBTTagList;)V load
	a (Lnet/minecraft/world/entity/ai/attributes/AttributeBase;)Lnet/minecraft/world/entity/ai/attributes/AttributeModifiable; getInstance
	a (Lnet/minecraft/world/entity/ai/attributes/AttributeBase;Ljava/util/UUID;)Z hasModifier
	a (Lnet/minecraft/world/entity/ai/attributes/AttributeMapBase;)V assignValues
	a (Lnet/minecraft/world/entity/ai/attributes/AttributeModifiable;)V onAttributeModified
	b ()Ljava/util/Collection; getSyncableAttributes
	b (Lcom/google/common/collect/Multimap;)V addTransientAttributeModifiers
	b (Lnet/minecraft/core/Holder;)Z hasAttribute
	b (Lnet/minecraft/core/Holder;Ljava/util/UUID;)D getModifierValue
	b (Lnet/minecraft/world/entity/ai/attributes/AttributeBase;)Z hasAttribute
	b (Lnet/minecraft/world/entity/ai/attributes/AttributeBase;Ljava/util/UUID;)D getModifierValue
	c ()Lnet/minecraft/nbt/NBTTagList; save
	c (Lnet/minecraft/world/entity/ai/attributes/AttributeBase;)D getValue
	d (Lnet/minecraft/world/entity/ai/attributes/AttributeBase;)D getBaseValue
net/minecraft/world/entity/ai/attributes/AttributeModifiable net/minecraft/world/entity/ai/attributes/AttributeInstance
	a attribute
	b modifiersByOperation
	c modifierById
	d permanentModifiers
	e baseValue
	f dirty
	g cachedValue
	h onDirty
	a ()Lnet/minecraft/world/entity/ai/attributes/AttributeBase; getAttribute
	a (D)V setBaseValue
	a (Ljava/util/UUID;)Lnet/minecraft/world/entity/ai/attributes/AttributeModifier; getModifier
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/world/entity/ai/attributes/AttributeModifiable;)V replaceFrom
	a (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation;)Ljava/util/Set; getModifiers
	a (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier;)Z hasModifier
	b ()D getBaseValue
	b (Ljava/util/UUID;)V removeModifier
	b (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation;)Ljava/util/Collection; getModifiersOrEmpty
	b (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier;)V addTransientModifier
	c ()Ljava/util/Set; getModifiers
	c (Ljava/util/UUID;)Z removePermanentModifier
	c (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier;)V addPermanentModifier
	d ()V setDirty
	d (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier;)V removeModifier
	e ()V removeModifiers
	e (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier;)V addModifier
	f ()D getValue
	g ()Lnet/minecraft/nbt/NBTTagCompound; save
	h ()D calculateValue
net/minecraft/world/entity/ai/attributes/AttributeProvider net/minecraft/world/entity/ai/attributes/AttributeSupplier
	a instances
	a ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; builder
	a (Ljava/util/function/Consumer;Lnet/minecraft/world/entity/ai/attributes/AttributeBase;)Lnet/minecraft/world/entity/ai/attributes/AttributeModifiable; createInstance
	a (Lnet/minecraft/world/entity/ai/attributes/AttributeBase;)D getValue
	a (Lnet/minecraft/world/entity/ai/attributes/AttributeBase;Ljava/util/UUID;)D getModifierValue
	b (Lnet/minecraft/world/entity/ai/attributes/AttributeBase;)D getBaseValue
	b (Lnet/minecraft/world/entity/ai/attributes/AttributeBase;Ljava/util/UUID;)Z hasModifier
	c (Lnet/minecraft/world/entity/ai/attributes/AttributeBase;)Z hasAttribute
	d (Lnet/minecraft/world/entity/ai/attributes/AttributeBase;)Lnet/minecraft/world/entity/ai/attributes/AttributeModifiable; getAttributeInstance
net/minecraft/world/entity/ai/attributes/AttributeProvider$Builder net/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder
	a builder
	b instanceFrozen
	a ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider; build
	a (Lnet/minecraft/world/entity/ai/attributes/AttributeBase;)Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; add
	a (Lnet/minecraft/world/entity/ai/attributes/AttributeBase;D)Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; add
	b (Lnet/minecraft/world/entity/ai/attributes/AttributeBase;)Lnet/minecraft/world/entity/ai/attributes/AttributeModifiable; create
net/minecraft/world/entity/ai/attributes/AttributeRanged net/minecraft/world/entity/ai/attributes/RangedAttribute
	b minValue
	c maxValue
	a (D)D sanitizeValue
	d ()D getMinValue
	e ()D getMaxValue
net/minecraft/world/entity/ai/attributes/GenericAttributes net/minecraft/world/entity/ai/attributes/Attributes
	a MAX_HEALTH
	b FOLLOW_RANGE
	c KNOCKBACK_RESISTANCE
	d MOVEMENT_SPEED
	e FLYING_SPEED
	f ATTACK_DAMAGE
	g ATTACK_KNOCKBACK
	h ATTACK_SPEED
	i ARMOR
	j ARMOR_TOUGHNESS
	k LUCK
	l SPAWN_REINFORCEMENTS_CHANCE
	m JUMP_STRENGTH
	a (Ljava/lang/String;Lnet/minecraft/world/entity/ai/attributes/AttributeBase;)Lnet/minecraft/world/entity/ai/attributes/AttributeBase; register
net/minecraft/world/entity/ai/behavior/BehaviorAttack net/minecraft/world/entity/ai/behavior/MeleeAttack
	a (I)Lnet/minecraft/world/entity/ai/behavior/OneShot; create
	a (Lnet/minecraft/world/entity/EntityInsentient;)Z isHoldingUsableProjectileWeapon
net/minecraft/world/entity/ai/behavior/BehaviorAttackTargetForget net/minecraft/world/entity/ai/behavior/StopAttackingIfTargetInvalid
	a TIMEOUT_TO_GET_WITHIN_ATTACK_RANGE
	a ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
	a (Ljava/util/function/BiConsumer;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
	a (Ljava/util/function/Predicate;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
	a (Ljava/util/function/Predicate;Ljava/util/function/BiConsumer;Z)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
	a (Lnet/minecraft/world/entity/EntityLiving;Ljava/util/Optional;)Z isTiredOfTryingToReachTarget
net/minecraft/world/entity/ai/behavior/BehaviorAttackTargetSet net/minecraft/world/entity/ai/behavior/StartAttacking
	a (Ljava/util/function/Function;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
	a (Ljava/util/function/Predicate;Ljava/util/function/Function;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/BehaviorBedJump net/minecraft/world/entity/ai/behavior/JumpOnBed
	c MAX_TIME_TO_REACH_BED
	d MIN_JUMPS
	e MAX_JUMPS
	f COOLDOWN_BETWEEN_JUMPS
	g speedModifier
	h targetBed
	i remainingTimeToReachBed
	j remainingJumps
	k remainingCooldownUntilNextJump
	a (J)Z timedOut
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;)Z isBed
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;J)V start
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/world/entity/EntityInsentient;)Ljava/util/Optional; getNearestBed
	a (Lnet/minecraft/world/entity/EntityInsentient;Lnet/minecraft/core/BlockPosition;)V startWalkingTowardsBed
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;)Z nearBed
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;J)V stop
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;)Z onOrOverBed
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;J)Z canStillUse
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tick
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;)Z onBedSurface
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;J)V tick
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
	e (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;)Z tiredOfWalking
	f (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;)Z tiredOfJumping
net/minecraft/world/entity/ai/behavior/BehaviorBell net/minecraft/world/entity/ai/behavior/SocializeAtBell
	a SPEED_MODIFIER
	a ()Lnet/minecraft/world/entity/ai/behavior/OneShot; create
net/minecraft/world/entity/ai/behavior/BehaviorBellAlert net/minecraft/world/entity/ai/behavior/ReactToBell
	a ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/BehaviorBellRing net/minecraft/world/entity/ai/behavior/RingBell
	a RING_BELL_FROM_DISTANCE
	b BELL_RING_CHANCE
	a ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/BehaviorBetterJob net/minecraft/world/entity/ai/behavior/PoiCompetitorScan
	a ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
	a (Lnet/minecraft/core/GlobalPos;Lnet/minecraft/core/Holder;Lnet/minecraft/world/entity/npc/EntityVillager;)Z competesForSameJobsite
	a (Lnet/minecraft/core/Holder;Lnet/minecraft/world/entity/npc/VillagerProfession;)Z hasMatchingProfession
	a (Lnet/minecraft/world/entity/npc/EntityVillager;Lnet/minecraft/world/entity/npc/EntityVillager;)Lnet/minecraft/world/entity/npc/EntityVillager; selectWinner
net/minecraft/world/entity/ai/behavior/BehaviorBonemeal net/minecraft/world/entity/ai/behavior/UseBonemeal
	c BONEMEALING_DURATION
	d nextWorkCycleTime
	e lastBonemealingSession
	f timeWorkedSoFar
	g cropPos
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/server/level/WorldServer;)Z validPos
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)Z canStillUse
	a (Lnet/minecraft/world/entity/npc/EntityVillager;)V setCurrentCropAsTarget
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;)Ljava/util/Optional; pickNextTarget
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)V start
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tick
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)V stop
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)V tick
net/minecraft/world/entity/ai/behavior/BehaviorCareer net/minecraft/world/entity/ai/behavior/AssignProfessionFromJobSite
	a ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/BehaviorCelebrate net/minecraft/world/entity/ai/behavior/CelebrateVillagersSurvivedRaid
	c currentRaid
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)Z canStillUse
	a (Lnet/minecraft/world/item/EnumColor;I)Lnet/minecraft/world/item/ItemStack; getFirework
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)V stop
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tick
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)V tick
net/minecraft/world/entity/ai/behavior/BehaviorCelebrateDeath net/minecraft/world/entity/ai/behavior/StartCelebratingIfTargetDead
	a (ILjava/util/function/BiPredicate;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/BehaviorCooldown net/minecraft/world/entity/ai/behavior/VillagerCalmDown
	a SAFE_DISTANCE_FROM_DANGER
	a ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/BehaviorCrossbowAttack net/minecraft/world/entity/ai/behavior/CrossbowAttack
	c TIMEOUT
	d attackDelay
	e crossbowState
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/world/entity/EntityInsentient;Lnet/minecraft/world/entity/EntityLiving;)V crossbowAttack
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;J)V tick
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	b (Lnet/minecraft/world/entity/EntityInsentient;Lnet/minecraft/world/entity/EntityLiving;)V lookAtTarget
	b (Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/entity/EntityLiving; getAttackTarget
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;J)V stop
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tick
net/minecraft/world/entity/ai/behavior/BehaviorCrossbowAttack$BowState net/minecraft/world/entity/ai/behavior/CrossbowAttack$CrossbowState
	a UNCHARGED
	b CHARGING
	c CHARGED
	d READY_TO_ATTACK
	e $VALUES
	a ()[Lnet/minecraft/world/entity/ai/behavior/BehaviorCrossbowAttack$BowState; $values
net/minecraft/world/entity/ai/behavior/BehaviorExpirableMemory net/minecraft/world/entity/ai/behavior/CopyMemoryWithExpiry
	a (Ljava/util/function/Predicate;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Lnet/minecraft/util/valueproviders/UniformInt;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/BehaviorFarm net/minecraft/world/entity/ai/behavior/HarvestFarmland
	c SPEED_MODIFIER
	d HARVEST_DURATION
	e aboveFarmlandPos
	f nextOkStartTime
	g timeWorkedSoFar
	h validFarmlandAroundVillager
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/server/level/WorldServer;)Z validPos
	a (Lnet/minecraft/server/level/WorldServer;)Lnet/minecraft/core/BlockPosition; getValidFarmland
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)V start
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)V stop
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tick
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)V tick
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)Z canStillUse
net/minecraft/world/entity/ai/behavior/BehaviorFindAdmirableItem net/minecraft/world/entity/ai/behavior/GoToWantedItem
	a (FZI)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
	a (Ljava/util/function/Predicate;FZI)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/BehaviorFindPosition net/minecraft/world/entity/ai/behavior/AcquirePoi
	a SCAN_RANGE
	a (Ljava/util/function/Predicate;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;ZLjava/util/Optional;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
	a (Ljava/util/function/Predicate;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;ZLjava/util/Optional;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
	a (Lnet/minecraft/world/entity/EntityInsentient;Ljava/util/Set;)Lnet/minecraft/world/level/pathfinder/PathEntity; findPathToPois
net/minecraft/world/entity/ai/behavior/BehaviorFollowAdult net/minecraft/world/entity/ai/behavior/BabyFollowAdult
	a (Lnet/minecraft/util/valueproviders/UniformInt;F)Lnet/minecraft/world/entity/ai/behavior/OneShot; create
	a (Lnet/minecraft/util/valueproviders/UniformInt;Ljava/util/function/Function;)Lnet/minecraft/world/entity/ai/behavior/OneShot; create
net/minecraft/world/entity/ai/behavior/BehaviorForgetAnger net/minecraft/world/entity/ai/behavior/StopBeingAngryIfTargetDead
	a ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/BehaviorGate net/minecraft/world/entity/ai/behavior/GateBehavior
	a entryCondition
	b exitErasedMemories
	c orderPolicy
	d runningPolicy
	e behaviors
	f status
	a ()Lnet/minecraft/world/entity/ai/behavior/Behavior$Status; getStatus
	a (Lnet/minecraft/world/entity/EntityLiving;)Z hasRequiredMemories
	b ()Ljava/lang/String; debugString
	e (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z tryStart
	f (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tickOrStop
	g (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V doStop
net/minecraft/world/entity/ai/behavior/BehaviorGate$Execution net/minecraft/world/entity/ai/behavior/GateBehavior$RunningPolicy
	a RUN_ONE
	b TRY_ALL
	c $VALUES
	a ()[Lnet/minecraft/world/entity/ai/behavior/BehaviorGate$Execution; $values
	a (Ljava/util/stream/Stream;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V apply
net/minecraft/world/entity/ai/behavior/BehaviorGate$Order net/minecraft/world/entity/ai/behavior/GateBehavior$OrderPolicy
	a ORDERED
	b SHUFFLED
	c consumer
	d $VALUES
	a ()[Lnet/minecraft/world/entity/ai/behavior/BehaviorGate$Order; $values
	a (Lnet/minecraft/world/entity/ai/behavior/ShufflingList;)V apply
net/minecraft/world/entity/ai/behavior/BehaviorGateSingle net/minecraft/world/entity/ai/behavior/RunOne
net/minecraft/world/entity/ai/behavior/BehaviorHide net/minecraft/world/entity/ai/behavior/SetHiddenState
	a HIDE_TIMEOUT
	a (II)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/BehaviorHome net/minecraft/world/entity/ai/behavior/LocateHidingPlace
	a (IFI)Lnet/minecraft/world/entity/ai/behavior/OneShot; create
net/minecraft/world/entity/ai/behavior/BehaviorInteract net/minecraft/world/entity/ai/behavior/InteractWith
	a (Lnet/minecraft/world/entity/EntityTypes;ILjava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;FI)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; of
	a (Lnet/minecraft/world/entity/EntityTypes;ILnet/minecraft/world/entity/ai/memory/MemoryModuleType;FI)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; of
net/minecraft/world/entity/ai/behavior/BehaviorInteractDoor net/minecraft/world/entity/ai/behavior/InteractWithDoor
	a COOLDOWN_BEFORE_RERUNNING_IN_SAME_NODE
	b SKIP_CLOSING_DOOR_IF_FURTHER_AWAY_THAN
	c MAX_DISTANCE_TO_HOLD_DOOR_OPEN_FOR_OTHER_MOBS
	a ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/core/GlobalPos;)Z isDoorTooFarAway
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/level/pathfinder/PathPoint;Lnet/minecraft/world/level/pathfinder/PathPoint;Ljava/util/Set;Ljava/util/Optional;)V closeDoorsThatIHaveOpenedOrPassedThrough
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/core/BlockPosition;Ljava/util/Optional;)Z areOtherMobsComingThroughDoor
	a (Lnet/minecraft/world/entity/ai/BehaviorController;Lnet/minecraft/core/BlockPosition;)Z isMobComingThroughDoor
	a (Lnet/minecraft/world/entity/ai/behavior/declarative/MemoryAccessor;Ljava/util/Optional;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;)Ljava/util/Optional; rememberDoorToClose
net/minecraft/world/entity/ai/behavior/BehaviorInteractPlayer net/minecraft/world/entity/ai/behavior/LookAndFollowTradingPlayerSink
	c speedModifier
	a (J)Z timedOut
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)Z canStillUse
	a (Lnet/minecraft/world/entity/npc/EntityVillager;)V followPlayer
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)V start
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tick
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)V stop
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)V tick
net/minecraft/world/entity/ai/behavior/BehaviorLeaveJob net/minecraft/world/entity/ai/behavior/YieldJobSite
	a (F)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
	a (Lnet/minecraft/core/Holder;Lnet/minecraft/world/entity/npc/EntityVillager;Lnet/minecraft/core/BlockPosition;)Z nearbyWantsJobsite
	a (Lnet/minecraft/world/entity/EntityCreature;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/ai/village/poi/VillagePlaceType;)Z canReachPos
net/minecraft/world/entity/ai/behavior/BehaviorLook net/minecraft/world/entity/ai/behavior/LookAtTargetSink
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;J)V stop
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;J)V tick
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tick
net/minecraft/world/entity/ai/behavior/BehaviorLookInteract net/minecraft/world/entity/ai/behavior/SetLookAndInteract
	a (Lnet/minecraft/world/entity/EntityTypes;I)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/BehaviorLookTarget net/minecraft/world/entity/ai/behavior/SetEntityLookTarget
	a (F)Lnet/minecraft/world/entity/ai/behavior/OneShot; create
	a (Ljava/util/function/Predicate;F)Lnet/minecraft/world/entity/ai/behavior/OneShot; create
	a (Lnet/minecraft/world/entity/EntityTypes;F)Lnet/minecraft/world/entity/ai/behavior/OneShot; create
	a (Lnet/minecraft/world/entity/EnumCreatureType;F)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/BehaviorLookWalk net/minecraft/world/entity/ai/behavior/SetWalkTargetFromLookTarget
	a (FI)Lnet/minecraft/world/entity/ai/behavior/OneShot; create
	a (Ljava/util/function/Predicate;Ljava/util/function/Function;I)Lnet/minecraft/world/entity/ai/behavior/OneShot; create
net/minecraft/world/entity/ai/behavior/BehaviorMakeLove net/minecraft/world/entity/ai/behavior/VillagerMakeLove
	c INTERACT_DIST_SQR
	d SPEED_MODIFIER
	e birthTimestamp
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;Lnet/minecraft/core/BlockPosition;)V giveBedToChild
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;Lnet/minecraft/world/entity/npc/EntityVillager;)V tryToGiveBirth
	a (Lnet/minecraft/world/entity/npc/EntityVillager;)Z isBreedingPossible
	a (Lnet/minecraft/world/entity/npc/EntityVillager;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/Holder;)Z canReach
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;)Ljava/util/Optional; takeVacantBed
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)V start
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;Lnet/minecraft/world/entity/npc/EntityVillager;)Ljava/util/Optional; breed
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tick
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)V tick
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)V stop
net/minecraft/world/entity/ai/behavior/BehaviorMakeLoveAnimal net/minecraft/world/entity/ai/behavior/AnimalMakeLove
	c BREED_RANGE
	d MIN_DURATION
	e MAX_DURATION
	f partnerType
	g speedModifier
	h spawnChildAtTime
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/EntityAnimal;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/EntityAnimal;J)V start
	a (Lnet/minecraft/world/entity/animal/EntityAnimal;)Lnet/minecraft/world/entity/animal/EntityAnimal; getBreedTarget
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/EntityAnimal;J)Z canStillUse
	b (Lnet/minecraft/world/entity/animal/EntityAnimal;)Z hasBreedTargetOfRightType
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tick
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/EntityAnimal;J)V tick
	c (Lnet/minecraft/world/entity/animal/EntityAnimal;)Ljava/util/Optional; findValidBreedPartner
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/EntityAnimal;J)V stop
net/minecraft/world/entity/ai/behavior/BehaviorNearestVillage net/minecraft/world/entity/ai/behavior/GoToClosestVillage
	a (FI)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/BehaviorNop net/minecraft/world/entity/ai/behavior/DoNothing
	a minDuration
	b maxDuration
	c status
	d endTimestamp
	a ()Lnet/minecraft/world/entity/ai/behavior/Behavior$Status; getStatus
	b ()Ljava/lang/String; debugString
	e (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z tryStart
	f (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tickOrStop
	g (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V doStop
net/minecraft/world/entity/ai/behavior/BehaviorOutside net/minecraft/world/entity/ai/behavior/MoveToSkySeeingSpot
	a (F)Lnet/minecraft/world/entity/ai/behavior/OneShot; create
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/phys/Vec3D; getOutdoorPosition
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/core/BlockPosition;)Z hasNoBlocksAbove
net/minecraft/world/entity/ai/behavior/BehaviorPacify net/minecraft/world/entity/ai/behavior/BecomePassiveIfMemoryPresent
	a (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;I)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/BehaviorPanic net/minecraft/world/entity/ai/behavior/VillagerPanicTrigger
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)Z canStillUse
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)V start
	b (Lnet/minecraft/world/entity/EntityLiving;)Z hasHostile
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tick
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)V tick
	c (Lnet/minecraft/world/entity/EntityLiving;)Z isHurt
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
net/minecraft/world/entity/ai/behavior/BehaviorPlay net/minecraft/world/entity/ai/behavior/PlayTagWithOtherKids
	a MAX_FLEE_XZ_DIST
	b MAX_FLEE_Y_DIST
	c FLEE_SPEED_MODIFIER
	d CHASE_SPEED_MODIFIER
	e MAX_CHASERS_PER_TARGET
	f AVERAGE_WAIT_TIME_BETWEEN_RUNS
	a ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
	a (Ljava/util/List;)Ljava/util/Optional; findSomeoneBeingChased
	a (Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/entity/EntityLiving; whoAreYouChasing
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityLiving;)Z isFriendChasingMe
	a (Lnet/minecraft/world/entity/ai/behavior/declarative/MemoryAccessor;Lnet/minecraft/world/entity/ai/behavior/declarative/MemoryAccessor;Lnet/minecraft/world/entity/ai/behavior/declarative/MemoryAccessor;Lnet/minecraft/world/entity/EntityLiving;)V chaseKid
	b (Ljava/util/List;)Ljava/util/Map; checkHowManyChasersEachFriendHas
	b (Lnet/minecraft/world/entity/EntityLiving;)Z isChasingSomeone
net/minecraft/world/entity/ai/behavior/BehaviorPosition net/minecraft/world/entity/ai/behavior/PositionTracker
	a ()Lnet/minecraft/world/phys/Vec3D; currentPosition
	a (Lnet/minecraft/world/entity/EntityLiving;)Z isVisibleBy
	b ()Lnet/minecraft/core/BlockPosition; currentBlockPosition
net/minecraft/world/entity/ai/behavior/BehaviorPositionEntity net/minecraft/world/entity/ai/behavior/EntityTracker
	a entity
	b trackEyeHeight
	a ()Lnet/minecraft/world/phys/Vec3D; currentPosition
	a (Lnet/minecraft/world/entity/EntityLiving;)Z isVisibleBy
	b ()Lnet/minecraft/core/BlockPosition; currentBlockPosition
	c ()Lnet/minecraft/world/entity/Entity; getEntity
net/minecraft/world/entity/ai/behavior/BehaviorPositionValidate net/minecraft/world/entity/ai/behavior/ValidateNearbyPoi
	a MAX_DISTANCE
	a (Ljava/util/function/Predicate;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/EntityLiving;)Z bedIsOccupied
net/minecraft/world/entity/ai/behavior/BehaviorPotentialJobSite net/minecraft/world/entity/ai/behavior/GoToPotentialJobSite
	c speedModifier
	d TICKS_UNTIL_TIMEOUT
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)Z canStillUse
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)V tick
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tick
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)V stop
net/minecraft/world/entity/ai/behavior/BehaviorProfession net/minecraft/world/entity/ai/behavior/ResetProfession
	a ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/BehaviorRaid net/minecraft/world/entity/ai/behavior/SetRaidStatus
	a ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/BehaviorRaidReset net/minecraft/world/entity/ai/behavior/ResetRaidStatus
	a ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/BehaviorRemoveMemory net/minecraft/world/entity/ai/behavior/EraseMemoryIf
	a (Ljava/util/function/Predicate;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/BehaviorRetreat net/minecraft/world/entity/ai/behavior/BackUpIfTooClose
	a (IF)Lnet/minecraft/world/entity/ai/behavior/OneShot; create
net/minecraft/world/entity/ai/behavior/BehaviorSchedule net/minecraft/world/entity/ai/behavior/UpdateActivityFromSchedule
	a ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/BehaviorSleep net/minecraft/world/entity/ai/behavior/SleepInBed
	c COOLDOWN_AFTER_BEING_WOKEN
	d nextOkStartTime
	a (J)Z timedOut
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
net/minecraft/world/entity/ai/behavior/BehaviorStartRiding net/minecraft/world/entity/ai/behavior/Mount
	a CLOSE_ENOUGH_TO_START_RIDING_DIST
	a (F)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/BehaviorStopRiding net/minecraft/world/entity/ai/behavior/DismountOrSkipMounting
	a (ILjava/util/function/BiPredicate;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/Entity;I)Z isVehicleValid
net/minecraft/world/entity/ai/behavior/BehaviorStrollInside net/minecraft/world/entity/ai/behavior/InsideBrownianWalk
	a (F)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/BehaviorStrollPlace net/minecraft/world/entity/ai/behavior/StrollToPoi
	a (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;FII)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/BehaviorStrollPlaceList net/minecraft/world/entity/ai/behavior/StrollToPoiList
	a (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;FIILnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/BehaviorStrollPosition net/minecraft/world/entity/ai/behavior/StrollAroundPoi
	a MIN_TIME_BETWEEN_STROLLS
	b STROLL_MAX_XZ_DIST
	c STROLL_MAX_Y_DIST
	a (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;FI)Lnet/minecraft/world/entity/ai/behavior/OneShot; create
net/minecraft/world/entity/ai/behavior/BehaviorStrollRandom net/minecraft/world/entity/ai/behavior/VillageBoundRandomStroll
	a MAX_XZ_DIST
	b MAX_Y_DIST
	a (F)Lnet/minecraft/world/entity/ai/behavior/OneShot; create
	a (FII)Lnet/minecraft/world/entity/ai/behavior/OneShot; create
net/minecraft/world/entity/ai/behavior/BehaviorStrollRandomUnconstrained net/minecraft/world/entity/ai/behavior/RandomStroll
	a MAX_XZ_DIST
	b MAX_Y_DIST
	c SWIM_XY_DISTANCE_TIERS
	a (F)Lnet/minecraft/world/entity/ai/behavior/OneShot; stroll
	a (FII)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; stroll
	a (FLjava/util/function/Function;Ljava/util/function/Predicate;)Lnet/minecraft/world/entity/ai/behavior/OneShot; strollFlyOrSwim
	a (FZ)Lnet/minecraft/world/entity/ai/behavior/OneShot; stroll
	a (Lnet/minecraft/world/entity/EntityCreature;)Lnet/minecraft/world/phys/Vec3D; getTargetSwimPos
	a (Lnet/minecraft/world/entity/EntityCreature;II)Lnet/minecraft/world/phys/Vec3D; getTargetFlyPos
	b (F)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; fly
	c (F)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; swim
net/minecraft/world/entity/ai/behavior/BehaviorSwim net/minecraft/world/entity/ai/behavior/Swim
	c chance
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;J)V tick
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tick
net/minecraft/world/entity/ai/behavior/BehaviorTarget net/minecraft/world/entity/ai/behavior/BlockPosTracker
	a blockPos
	b centerPosition
	a ()Lnet/minecraft/world/phys/Vec3D; currentPosition
	a (Lnet/minecraft/world/entity/EntityLiving;)Z isVisibleBy
	b ()Lnet/minecraft/core/BlockPosition; currentBlockPosition
net/minecraft/world/entity/ai/behavior/BehaviorTradePlayer net/minecraft/world/entity/ai/behavior/ShowTradesToPlayer
	c MAX_LOOK_TIME
	d STARTING_LOOK_TIME
	e playerItemStack
	f displayItems
	g cycleCounter
	h displayIndex
	i lookTime
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)Z canStillUse
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/npc/EntityVillager;)V findItemsToDisplay
	a (Lnet/minecraft/world/entity/npc/EntityVillager;)V displayFirstItem
	a (Lnet/minecraft/world/entity/npc/EntityVillager;Lnet/minecraft/world/item/ItemStack;)V displayAsHeldItem
	a (Lnet/minecraft/world/item/trading/MerchantRecipe;)Z playerItemStackMatchesCostOfOffer
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)V start
	b (Lnet/minecraft/world/entity/npc/EntityVillager;)V updateDisplayItems
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tick
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)V tick
	c (Lnet/minecraft/world/entity/npc/EntityVillager;)V clearHeldItem
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)V stop
	d (Lnet/minecraft/world/entity/npc/EntityVillager;)Lnet/minecraft/world/entity/EntityLiving; lookAtTarget
	e (Lnet/minecraft/world/entity/npc/EntityVillager;)V displayCyclingItems
net/minecraft/world/entity/ai/behavior/BehaviorTradeVillager net/minecraft/world/entity/ai/behavior/TradeWithVillager
	c INTERACT_DIST_SQR
	d SPEED_MODIFIER
	e trades
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)Z canStillUse
	a (Lnet/minecraft/world/entity/npc/EntityVillager;Ljava/util/Set;Lnet/minecraft/world/entity/EntityLiving;)V throwHalfStack
	a (Lnet/minecraft/world/entity/npc/EntityVillager;Lnet/minecraft/world/entity/npc/EntityVillager;)Ljava/util/Set; figureOutWhatIAmWillingToTrade
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)V start
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tick
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)V tick
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)V stop
net/minecraft/world/entity/ai/behavior/BehaviorUtil net/minecraft/world/entity/ai/behavior/BehaviorUtils
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/SectionPosition;I)Lnet/minecraft/core/SectionPosition; findSectionClosestToVillage
	a (Lnet/minecraft/world/entity/EntityCreature;II)Lnet/minecraft/world/phys/Vec3D; getRandomSwimmablePos
	a (Lnet/minecraft/world/entity/EntityInsentient;Lnet/minecraft/world/entity/EntityLiving;I)Z isWithinAttackRange
	a (Lnet/minecraft/world/entity/EntityLiving;)Z isBreeding
	a (Lnet/minecraft/world/entity/EntityLiving;Ljava/util/Optional;Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/entity/EntityLiving; getNearestTarget
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/core/BlockPosition;FI)V setWalkAndLookTargetMemories
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/Entity;FI)V setWalkAndLookTargetMemories
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityLiving;)V lookAtEntity
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityLiving;D)Z isOtherTargetMuchFurtherAwayThanCurrentAttackTarget
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityLiving;F)V lockGazeAndWalkToEachOther
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/entity/EntityLiving; getTargetNearestMe
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/ai/behavior/BehaviorPosition;FI)V setWalkAndLookTargetMemories
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Ljava/util/Optional; getLivingEntityFromUUIDMemory
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/phys/Vec3D;)V throwItem
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/phys/Vec3D;F)V throwItem
	a (Lnet/minecraft/world/entity/ai/BehaviorController;Lnet/minecraft/world/entity/EntityLiving;)Z entityIsVisible
	a (Lnet/minecraft/world/entity/ai/BehaviorController;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/util/function/Predicate;)Z targetIsValid
	a (Lnet/minecraft/world/entity/ai/BehaviorController;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Lnet/minecraft/world/entity/EntityTypes;)Z targetIsValid
	b (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityLiving;)Z canSee
	b (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityLiving;F)V setWalkAndLookTargetMemoriesToEachOther
	c (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityLiving;)V lookAtEachOther
net/minecraft/world/entity/ai/behavior/BehaviorVillageHeroGift net/minecraft/world/entity/ai/behavior/GiveGiftToHero
	c THROW_GIFT_AT_DISTANCE
	d MIN_TIME_BETWEEN_GIFTS
	e MAX_TIME_BETWEEN_GIFTS
	f TIME_TO_DELAY_FOR_HEAD_TO_FINISH_TURNING
	g GIFTS
	h SPEED_MODIFIER
	i timeUntilNextGift
	j giftGivenDuringThisRun
	k timeSinceStart
	a (Lnet/minecraft/server/level/WorldServer;)I calculateTimeUntilNextGift
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)V start
	a (Lnet/minecraft/world/entity/npc/EntityVillager;)Ljava/util/List; getItemToThrow
	a (Lnet/minecraft/world/entity/npc/EntityVillager;Lnet/minecraft/world/entity/EntityLiving;)V throwGift
	a (Lnet/minecraft/world/entity/npc/EntityVillager;Lnet/minecraft/world/entity/player/EntityHuman;)Z isWithinThrowingDistance
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z isHero
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)Z canStillUse
	b (Lnet/minecraft/world/entity/npc/EntityVillager;)Z isHeroVisible
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tick
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)V tick
	c (Lnet/minecraft/world/entity/npc/EntityVillager;)Ljava/util/Optional; getNearestTargetableHero
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)V stop
net/minecraft/world/entity/ai/behavior/BehaviorWake net/minecraft/world/entity/ai/behavior/WakeUp
	a ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/BehaviorWalkAway net/minecraft/world/entity/ai/behavior/SetWalkTargetAwayFrom
	a (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;FIZ)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; pos
	a (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;FIZLjava/util/function/Function;)Lnet/minecraft/world/entity/ai/behavior/OneShot; create
	b (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;FIZ)Lnet/minecraft/world/entity/ai/behavior/OneShot; entity
net/minecraft/world/entity/ai/behavior/BehaviorWalkAwayBlock net/minecraft/world/entity/ai/behavior/SetWalkTargetFromBlockMemory
	a (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;FIII)Lnet/minecraft/world/entity/ai/behavior/OneShot; create
net/minecraft/world/entity/ai/behavior/BehaviorWalkAwayOutOfRange net/minecraft/world/entity/ai/behavior/SetWalkTargetFromAttackTargetIfTargetOutOfReach
	a PROJECTILE_ATTACK_RANGE_BUFFER
	a (F)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
	a (Ljava/util/function/Function;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/BehaviorWalkHome net/minecraft/world/entity/ai/behavior/SetClosestHomeAsWalkTarget
	a CACHE_TIMEOUT
	b BATCH_SIZE
	c RATE
	d OK_DISTANCE_SQR
	a (F)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/BehaviorWork net/minecraft/world/entity/ai/behavior/WorkAtPoi
	c CHECK_COOLDOWN
	d DISTANCE
	e lastCheck
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;)V useWorkstation
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)V start
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;)Z checkExtraStartConditions
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)Z canStillUse
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
net/minecraft/world/entity/ai/behavior/BehaviorWorkComposter net/minecraft/world/entity/ai/behavior/WorkAtComposter
	c COMPOSTABLE_ITEMS
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;)V useWorkstation
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;Lnet/minecraft/core/GlobalPos;Lnet/minecraft/world/level/block/state/IBlockData;)V compostItems
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V spawnComposterFillEffects
	a (Lnet/minecraft/world/entity/npc/EntityVillager;)V makeBread
net/minecraft/world/entity/ai/behavior/Behaviors net/minecraft/world/entity/ai/behavior/VillagerGoalPackages
	a STROLL_SPEED_MODIFIER
	a ()Lcom/mojang/datafixers/util/Pair; getFullLookBehavior
	a (F)Lcom/google/common/collect/ImmutableList; getPlayPackage
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z raidExistsAndActive
	a (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; getCorePackage
	b ()Lcom/mojang/datafixers/util/Pair; getMinimalLookBehavior
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z raidExistsAndNotVictory
	b (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; getWorkPackage
	c (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; getRestPackage
	d (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; getMeetPackage
	e (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; getIdlePackage
	f (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; getPanicPackage
	g (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; getPreRaidPackage
	h (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; getRaidPackage
	i (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; getHidePackage
net/minecraft/world/entity/ai/behavior/BehavorMove net/minecraft/world/entity/ai/behavior/MoveToTargetSink
	c MAX_COOLDOWN_BEFORE_RETRYING
	d remainingCooldown
	e path
	f lastTargetPos
	g speedModifier
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/world/entity/EntityInsentient;Lnet/minecraft/world/entity/ai/memory/MemoryTarget;)Z reachedTarget
	a (Lnet/minecraft/world/entity/EntityInsentient;Lnet/minecraft/world/entity/ai/memory/MemoryTarget;J)Z tryComputePath
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;J)V stop
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;J)V start
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tick
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;J)V tick
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
net/minecraft/world/entity/ai/control/ControllerJump net/minecraft/world/entity/ai/control/JumpControl
	a jump
	b mob
	a ()V jump
	b ()V tick
net/minecraft/world/entity/ai/control/ControllerLook net/minecraft/world/entity/ai/control/LookControl
	a mob
	b yMaxRotSpeed
	c xMaxRotAngle
	d lookAtCooldown
	e wantedX
	f wantedY
	g wantedZ
	a ()V tick
	a (DDD)V setLookAt
	a (DDDFF)V setLookAt
	a (FFF)F rotateTowards
	a (Lnet/minecraft/world/entity/Entity;)V setLookAt
	a (Lnet/minecraft/world/entity/Entity;FF)V setLookAt
	a (Lnet/minecraft/world/phys/Vec3D;)V setLookAt
	b ()V clampHeadRotationToBody
	b (Lnet/minecraft/world/entity/Entity;)D getWantedY
	c ()Z resetXRotOnTick
	d ()Z isLookingAtTarget
	e ()D getWantedX
	f ()D getWantedY
	g ()D getWantedZ
	h ()Ljava/util/Optional; getXRotD
	i ()Ljava/util/Optional; getYRotD
net/minecraft/world/entity/ai/control/ControllerMove net/minecraft/world/entity/ai/control/MoveControl
	a MIN_SPEED
	b MIN_SPEED_SQR
	c MAX_TURN
	d mob
	e wantedX
	f wantedY
	g wantedZ
	h speedModifier
	i strafeForwards
	j strafeRight
	k operation
	a ()V tick
	a (DDDD)V setWantedPosition
	a (FF)V strafe
	a (FFF)F rotlerp
	b ()Z hasWanted
	b (FF)Z isWalkable
	c ()D getSpeedModifier
	d ()D getWantedX
	e ()D getWantedY
	f ()D getWantedZ
net/minecraft/world/entity/ai/control/ControllerMove$Operation net/minecraft/world/entity/ai/control/MoveControl$Operation
	a WAIT
	b MOVE_TO
	c STRAFE
	d JUMPING
	e $VALUES
	a ()[Lnet/minecraft/world/entity/ai/control/ControllerMove$Operation; $values
net/minecraft/world/entity/ai/control/ControllerMoveFlying net/minecraft/world/entity/ai/control/FlyingMoveControl
	l maxTurn
	m hoversInPlace
	a ()V tick
net/minecraft/world/entity/ai/control/EntityAIBodyControl net/minecraft/world/entity/ai/control/BodyRotationControl
	a mob
	b HEAD_STABLE_ANGLE
	c DELAY_UNTIL_STARTING_TO_FACE_FORWARD
	d HOW_LONG_IT_TAKES_TO_FACE_FORWARD
	e headStableTime
	f lastStableYHeadRot
	a ()V clientTick
	b ()V rotateBodyIfNecessary
	c ()V rotateHeadIfNecessary
	d ()V rotateHeadTowardsFront
	e ()Z notCarryingMobPassengers
	f ()Z isMoving
net/minecraft/world/entity/ai/goal/PathfinderGoal net/minecraft/world/entity/ai/goal/Goal
	a flags
	I_ ()Z isInterruptable
	J_ ()Z requiresUpdateEveryTick
	a ()Z canUse
	a (I)I adjustedTickDelay
	a (Ljava/util/EnumSet;)V setFlags
	b ()Z canContinueToUse
	b (I)I reducedTickDelay
	c ()V start
	d ()V stop
	e ()V tick
	j ()Ljava/util/EnumSet; getFlags
net/minecraft/world/entity/ai/goal/PathfinderGoal$Type net/minecraft/world/entity/ai/goal/Goal$Flag
	a MOVE
	b LOOK
	c JUMP
	d TARGET
	e $VALUES
	a ()[Lnet/minecraft/world/entity/ai/goal/PathfinderGoal$Type; $values
net/minecraft/world/entity/ai/goal/PathfinderGoalArrowAttack net/minecraft/world/entity/ai/goal/RangedAttackGoal
	a mob
	b rangedAttackMob
	c target
	d attackTime
	e speedModifier
	f seeTime
	g attackIntervalMin
	h attackIntervalMax
	i attackRadius
	j attackRadiusSqr
	J_ ()Z requiresUpdateEveryTick
	a ()Z canUse
	b ()Z canContinueToUse
	d ()V stop
	e ()V tick
net/minecraft/world/entity/ai/goal/PathfinderGoalAvoidTarget net/minecraft/world/entity/ai/goal/AvoidEntityGoal
	a mob
	b toAvoid
	c maxDist
	d path
	e pathNav
	f avoidClass
	g avoidPredicate
	h predicateOnAvoidEntity
	i walkSpeedModifier
	j sprintSpeedModifier
	k avoidEntityTargeting
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/world/entity/ai/goal/PathfinderGoalBeg net/minecraft/world/entity/ai/goal/BegGoal
	a wolf
	b player
	c level
	d lookDistance
	e lookTime
	f begTargeting
	a ()Z canUse
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z playerHoldingInteresting
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/world/entity/ai/goal/PathfinderGoalBoat net/minecraft/world/entity/ai/goal/BoatGoals
	a GO_TO_BOAT
	b GO_IN_BOAT_DIRECTION
	c $VALUES
	a ()[Lnet/minecraft/world/entity/ai/goal/PathfinderGoalBoat; $values
net/minecraft/world/entity/ai/goal/PathfinderGoalBowShoot net/minecraft/world/entity/ai/goal/RangedBowAttackGoal
	a mob
	b speedModifier
	c attackIntervalMin
	d attackRadiusSqr
	e attackTime
	f seeTime
	g strafingClockwise
	h strafingBackwards
	i strafingTime
	J_ ()Z requiresUpdateEveryTick
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	c (I)V setMinAttackInterval
	d ()V stop
	e ()V tick
	h ()Z isHoldingBow
net/minecraft/world/entity/ai/goal/PathfinderGoalBreakDoor net/minecraft/world/entity/ai/goal/BreakDoorGoal
	a breakTime
	b lastBreakProgress
	c doorBreakTime
	g DEFAULT_DOOR_BREAK_TIME
	h validDifficulties
	a ()Z canUse
	a (Lnet/minecraft/world/EnumDifficulty;)Z isValidDifficulty
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	f ()I getDoorBreakTime
net/minecraft/world/entity/ai/goal/PathfinderGoalBreath net/minecraft/world/entity/ai/goal/BreathAirGoal
	a mob
	I_ ()Z isInterruptable
	a ()Z canUse
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z givesAir
	b ()Z canContinueToUse
	c ()V start
	e ()V tick
	h ()V findAirPosition
net/minecraft/world/entity/ai/goal/PathfinderGoalBreed net/minecraft/world/entity/ai/goal/BreedGoal
	a animal
	b level
	c partner
	d PARTNER_TARGETING
	e partnerClass
	f loveTime
	g speedModifier
	a ()Z canUse
	b ()Z canContinueToUse
	d ()V stop
	e ()V tick
	g ()V breed
	h ()Lnet/minecraft/world/entity/animal/EntityAnimal; getFreePartner
net/minecraft/world/entity/ai/goal/PathfinderGoalCatSitOnBed net/minecraft/world/entity/ai/goal/CatLieOnBedGoal
	g cat
	a ()Z canUse
	a (Lnet/minecraft/world/entity/EntityCreature;)I nextStartTick
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z isValidTarget
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/world/entity/ai/goal/PathfinderGoalCrossbowAttack net/minecraft/world/entity/ai/goal/RangedCrossbowAttackGoal
	a PATHFINDING_DELAY_RANGE
	b mob
	c crossbowState
	d speedModifier
	e attackRadiusSqr
	f seeTime
	g attackDelay
	h updatePathDelay
	J_ ()Z requiresUpdateEveryTick
	a ()Z canUse
	b ()Z canContinueToUse
	d ()V stop
	e ()V tick
	h ()Z isHoldingCrossbow
	i ()Z isValidTarget
	k ()Z canRun
net/minecraft/world/entity/ai/goal/PathfinderGoalCrossbowAttack$State net/minecraft/world/entity/ai/goal/RangedCrossbowAttackGoal$CrossbowState
	a UNCHARGED
	b CHARGING
	c CHARGED
	d READY_TO_ATTACK
	e $VALUES
	a ()[Lnet/minecraft/world/entity/ai/goal/PathfinderGoalCrossbowAttack$State; $values
net/minecraft/world/entity/ai/goal/PathfinderGoalDoorInteract net/minecraft/world/entity/ai/goal/DoorInteractGoal
	a passed
	b doorOpenDirX
	c doorOpenDirZ
	d mob
	e doorPos
	f hasDoor
	J_ ()Z requiresUpdateEveryTick
	a ()Z canUse
	a (Z)V setOpen
	b ()Z canContinueToUse
	c ()V start
	e ()V tick
	h ()Z isOpen
net/minecraft/world/entity/ai/goal/PathfinderGoalDoorOpen net/minecraft/world/entity/ai/goal/OpenDoorGoal
	a closeDoor
	b forgetTime
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/world/entity/ai/goal/PathfinderGoalEatTile net/minecraft/world/entity/ai/goal/EatBlockGoal
	a EAT_ANIMATION_TICKS
	b IS_TALL_GRASS
	c mob
	d level
	e eatAnimationTick
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	h ()I getEatAnimationTick
net/minecraft/world/entity/ai/goal/PathfinderGoalFishSchool net/minecraft/world/entity/ai/goal/FollowFlockLeaderGoal
	a INTERVAL_TICKS
	b mob
	c timeToRecalcPath
	d nextStartTick
	a ()Z canUse
	a (Lnet/minecraft/world/entity/animal/EntityFishSchool;)I nextStartTick
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/world/entity/ai/goal/PathfinderGoalFleeSun net/minecraft/world/entity/ai/goal/FleeSunGoal
	a mob
	b wantedX
	c wantedY
	d wantedZ
	e speedModifier
	f level
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	h ()Z setWantedPos
	i ()Lnet/minecraft/world/phys/Vec3D; getHidePos
net/minecraft/world/entity/ai/goal/PathfinderGoalFloat net/minecraft/world/entity/ai/goal/FloatGoal
	a mob
	J_ ()Z requiresUpdateEveryTick
	a ()Z canUse
	e ()V tick
net/minecraft/world/entity/ai/goal/PathfinderGoalFollowBoat net/minecraft/world/entity/ai/goal/FollowBoatGoal
	a timeToRecalcPath
	b mob
	c following
	d currentGoal
	I_ ()Z isInterruptable
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/world/entity/ai/goal/PathfinderGoalFollowEntity net/minecraft/world/entity/ai/goal/FollowMobGoal
	a mob
	b followPredicate
	c followingMob
	d speedModifier
	e navigation
	f timeToRecalcPath
	g stopDistance
	h oldWaterCost
	i areaSize
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/world/entity/ai/goal/PathfinderGoalFollowOwner net/minecraft/world/entity/ai/goal/FollowOwnerGoal
	a TELEPORT_WHEN_DISTANCE_IS
	b MIN_HORIZONTAL_DISTANCE_FROM_PLAYER_WHEN_TELEPORTING
	c MAX_HORIZONTAL_DISTANCE_FROM_PLAYER_WHEN_TELEPORTING
	d MAX_VERTICAL_DISTANCE_FROM_PLAYER_WHEN_TELEPORTING
	e tamable
	f owner
	g level
	h speedModifier
	i navigation
	j timeToRecalcPath
	k stopDistance
	l startDistance
	m oldWaterCost
	n canFly
	a ()Z canUse
	a (II)I randomIntInclusive
	a (III)Z maybeTeleportTo
	a (Lnet/minecraft/core/BlockPosition;)Z canTeleportTo
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	h ()Z unableToMove
	i ()V teleportToOwner
net/minecraft/world/entity/ai/goal/PathfinderGoalFollowParent net/minecraft/world/entity/ai/goal/FollowParentGoal
	a HORIZONTAL_SCAN_RANGE
	b VERTICAL_SCAN_RANGE
	c DONT_FOLLOW_IF_CLOSER_THAN
	d animal
	e parent
	f speedModifier
	g timeToRecalcPath
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/world/entity/ai/goal/PathfinderGoalGotoTarget net/minecraft/world/entity/ai/goal/MoveToBlockGoal
	a mob
	b speedModifier
	c nextStartTick
	d tryTicks
	e blockPos
	f verticalSearchStart
	g GIVE_UP_TICKS
	h STAY_TICKS
	i INTERVAL_TICKS
	j maxStayTicks
	k reachedTarget
	l searchRange
	m verticalSearchRange
	J_ ()Z requiresUpdateEveryTick
	a ()Z canUse
	a (Lnet/minecraft/world/entity/EntityCreature;)I nextStartTick
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z isValidTarget
	b ()Z canContinueToUse
	c ()V start
	e ()V tick
	h ()V moveMobToBlock
	i ()D acceptedDistance
	k ()Lnet/minecraft/core/BlockPosition; getMoveToTarget
	l ()Z shouldRecalculatePath
	m ()Z isReachedTarget
	n ()Z findNearestBlock
net/minecraft/world/entity/ai/goal/PathfinderGoalInteract net/minecraft/world/entity/ai/goal/InteractGoal
net/minecraft/world/entity/ai/goal/PathfinderGoalJumpOnBlock net/minecraft/world/entity/ai/goal/CatSitOnBlockGoal
	g cat
	a ()Z canUse
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z isValidTarget
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/world/entity/ai/goal/PathfinderGoalLeapAtTarget net/minecraft/world/entity/ai/goal/LeapAtTargetGoal
	a mob
	b target
	c yd
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
net/minecraft/world/entity/ai/goal/PathfinderGoalLlamaFollow net/minecraft/world/entity/ai/goal/LlamaFollowCaravanGoal
	a llama
	b speedModifier
	c CARAVAN_LIMIT
	d distCheckCounter
	a ()Z canUse
	a (Lnet/minecraft/world/entity/animal/horse/EntityLlama;I)Z firstIsLeashed
	b ()Z canContinueToUse
	d ()V stop
	e ()V tick
net/minecraft/world/entity/ai/goal/PathfinderGoalLookAtPlayer net/minecraft/world/entity/ai/goal/LookAtPlayerGoal
	a DEFAULT_PROBABILITY
	b mob
	c lookAt
	d lookDistance
	e probability
	f lookAtType
	g lookAtContext
	h lookTime
	i onlyHorizontal
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/world/entity/ai/goal/PathfinderGoalLookAtTradingPlayer net/minecraft/world/entity/ai/goal/LookAtTradingPlayerGoal
	h villager
	a ()Z canUse
net/minecraft/world/entity/ai/goal/PathfinderGoalMeleeAttack net/minecraft/world/entity/ai/goal/MeleeAttackGoal
	a mob
	b speedModifier
	c followingTargetEvenIfNotSeen
	d path
	e pathedTargetX
	f pathedTargetY
	g pathedTargetZ
	h ticksUntilNextPathRecalculation
	i ticksUntilNextAttack
	j attackInterval
	k lastCanUseCheck
	l COOLDOWN_BETWEEN_CAN_USE_CHECKS
	J_ ()Z requiresUpdateEveryTick
	a ()Z canUse
	a (Lnet/minecraft/world/entity/EntityLiving;)D getAttackReachSqr
	a (Lnet/minecraft/world/entity/EntityLiving;D)V checkAndPerformAttack
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	h ()V resetAttackCooldown
	i ()Z isTimeToAttack
	k ()I getTicksUntilNextAttack
	l ()I getAttackInterval
net/minecraft/world/entity/ai/goal/PathfinderGoalMoveThroughVillage net/minecraft/world/entity/ai/goal/MoveThroughVillageGoal
	a mob
	b speedModifier
	c path
	d poiPos
	e onlyAtNight
	f visited
	g distanceToPoi
	h canDealWithDoors
	a ()Z canUse
	a (Lnet/minecraft/core/BlockPosition;)Z hasNotVisited
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	h ()V updateVisited
net/minecraft/world/entity/ai/goal/PathfinderGoalMoveTowardsRestriction net/minecraft/world/entity/ai/goal/MoveTowardsRestrictionGoal
	a mob
	b wantedX
	c wantedY
	d wantedZ
	e speedModifier
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
net/minecraft/world/entity/ai/goal/PathfinderGoalMoveTowardsTarget net/minecraft/world/entity/ai/goal/MoveTowardsTargetGoal
	a mob
	b target
	c wantedX
	d wantedY
	e wantedZ
	f speedModifier
	g within
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
net/minecraft/world/entity/ai/goal/PathfinderGoalNearestVillage net/minecraft/world/entity/ai/goal/StrollThroughVillageGoal
	a DISTANCE_THRESHOLD
	b mob
	c interval
	d wantedPos
	a ()Z canUse
	b ()Z canContinueToUse
	e ()V tick
	h ()V moveRandomly
net/minecraft/world/entity/ai/goal/PathfinderGoalOcelotAttack net/minecraft/world/entity/ai/goal/OcelotAttackGoal
	a mob
	b target
	c attackTime
	J_ ()Z requiresUpdateEveryTick
	a ()Z canUse
	b ()Z canContinueToUse
	d ()V stop
	e ()V tick
net/minecraft/world/entity/ai/goal/PathfinderGoalOfferFlower net/minecraft/world/entity/ai/goal/OfferFlowerGoal
	a OFFER_TICKS
	b OFFER_TARGER_CONTEXT
	c golem
	d villager
	e tick
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/world/entity/ai/goal/PathfinderGoalPanic net/minecraft/world/entity/ai/goal/PanicGoal
	a WATER_CHECK_DISTANCE_VERTICAL
	b mob
	c speedModifier
	d posX
	e posY
	f posZ
	g isRunning
	a ()Z canUse
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/core/BlockPosition; lookForWater
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	h ()Z shouldPanic
	i ()Z findRandomPosition
	k ()Z isRunning
net/minecraft/world/entity/ai/goal/PathfinderGoalPerch net/minecraft/world/entity/ai/goal/LandOnOwnersShoulderGoal
	a entity
	b owner
	c isSittingOnShoulder
	I_ ()Z isInterruptable
	a ()Z canUse
	c ()V start
	e ()V tick
net/minecraft/world/entity/ai/goal/PathfinderGoalRaid net/minecraft/world/entity/ai/goal/PathfindToRaidGoal
	a RECRUITMENT_SEARCH_TICK_DELAY
	b SPEED_MODIFIER
	c mob
	d recruitmentTick
	a ()Z canUse
	a (Lnet/minecraft/world/entity/raid/Raid;)V recruitNearby
	b ()Z canContinueToUse
	e ()V tick
net/minecraft/world/entity/ai/goal/PathfinderGoalRandomFly net/minecraft/world/entity/ai/goal/WaterAvoidingRandomFlyingGoal
	h ()Lnet/minecraft/world/phys/Vec3D; getPosition
net/minecraft/world/entity/ai/goal/PathfinderGoalRandomLookaround net/minecraft/world/entity/ai/goal/RandomLookAroundGoal
	a mob
	b relX
	c relZ
	d lookTime
	J_ ()Z requiresUpdateEveryTick
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	e ()V tick
net/minecraft/world/entity/ai/goal/PathfinderGoalRandomStroll net/minecraft/world/entity/ai/goal/RandomStrollGoal
	a DEFAULT_INTERVAL
	b mob
	c wantedX
	d wantedY
	e wantedZ
	f speedModifier
	g interval
	h forceTrigger
	i checkNoActionTime
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	c (I)V setInterval
	d ()V stop
	h ()Lnet/minecraft/world/phys/Vec3D; getPosition
	i ()V trigger
net/minecraft/world/entity/ai/goal/PathfinderGoalRandomStrollLand net/minecraft/world/entity/ai/goal/WaterAvoidingRandomStrollGoal
	i PROBABILITY
	j probability
	h ()Lnet/minecraft/world/phys/Vec3D; getPosition
net/minecraft/world/entity/ai/goal/PathfinderGoalRandomSwim net/minecraft/world/entity/ai/goal/RandomSwimmingGoal
	h ()Lnet/minecraft/world/phys/Vec3D; getPosition
net/minecraft/world/entity/ai/goal/PathfinderGoalRemoveBlock net/minecraft/world/entity/ai/goal/RemoveBlockGoal
	g blockToRemove
	h removerMob
	i ticksSinceReachedGoal
	j WAIT_AFTER_BLOCK_FOUND
	a ()Z canUse
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/IBlockAccess;)Lnet/minecraft/core/BlockPosition; getPosWithBlock
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)V playDestroyProgressSound
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z isValidTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V playBreakSound
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/world/entity/ai/goal/PathfinderGoalRestrictSun net/minecraft/world/entity/ai/goal/RestrictSunGoal
	a mob
	a ()Z canUse
	c ()V start
	d ()V stop
net/minecraft/world/entity/ai/goal/PathfinderGoalSelector net/minecraft/world/entity/ai/goal/GoalSelector
	a LOGGER
	b NO_GOAL
	c lockedFlags
	d availableGoals
	e profiler
	f disabledFlags
	g tickCount
	h newGoalRate
	a ()V tick
	a (I)V setNewGoalRate
	a (ILnet/minecraft/world/entity/ai/goal/PathfinderGoal;)V addGoal
	a (Ljava/util/function/Predicate;)V removeAllGoals
	a (Lnet/minecraft/world/entity/ai/goal/PathfinderGoal$Type;)V disableControlFlag
	a (Lnet/minecraft/world/entity/ai/goal/PathfinderGoal$Type;Z)V setControlFlag
	a (Lnet/minecraft/world/entity/ai/goal/PathfinderGoal;)V removeGoal
	a (Lnet/minecraft/world/entity/ai/goal/PathfinderGoalWrapped;Ljava/util/EnumSet;)Z goalContainsAnyFlags
	a (Lnet/minecraft/world/entity/ai/goal/PathfinderGoalWrapped;Ljava/util/Map;)Z goalCanBeReplacedForAllFlags
	a (Z)V tickRunningGoals
	b ()Ljava/util/Set; getAvailableGoals
	b (Lnet/minecraft/world/entity/ai/goal/PathfinderGoal$Type;)V enableControlFlag
	c ()Ljava/util/stream/Stream; getRunningGoals
net/minecraft/world/entity/ai/goal/PathfinderGoalSit net/minecraft/world/entity/ai/goal/SitWhenOrderedToGoal
	a mob
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
net/minecraft/world/entity/ai/goal/PathfinderGoalStrollVillage net/minecraft/world/entity/ai/goal/MoveBackToVillageGoal
	i MAX_XZ_DIST
	j MAX_Y_DIST
	a ()Z canUse
	h ()Lnet/minecraft/world/phys/Vec3D; getPosition
net/minecraft/world/entity/ai/goal/PathfinderGoalStrollVillageGolem net/minecraft/world/entity/ai/goal/GolemRandomStrollInVillageGoal
	i POI_SECTION_SCAN_RADIUS
	j VILLAGER_SCAN_RADIUS
	k RANDOM_POS_XY_DISTANCE
	l RANDOM_POS_Y_DISTANCE
	a (Lnet/minecraft/core/SectionPosition;)Lnet/minecraft/core/BlockPosition; getRandomPoiWithinSection
	a (Lnet/minecraft/world/entity/npc/EntityVillager;)Z doesVillagerWantGolem
	h ()Lnet/minecraft/world/phys/Vec3D; getPosition
	k ()Lnet/minecraft/world/phys/Vec3D; getPositionTowardsAnywhere
	l ()Lnet/minecraft/world/phys/Vec3D; getPositionTowardsVillagerWhoWantsGolem
	m ()Lnet/minecraft/world/phys/Vec3D; getPositionTowardsPoi
	n ()Lnet/minecraft/core/SectionPosition; getRandomVillageSection
net/minecraft/world/entity/ai/goal/PathfinderGoalSwell net/minecraft/world/entity/ai/goal/SwellGoal
	a creeper
	b target
	J_ ()Z requiresUpdateEveryTick
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/world/entity/ai/goal/PathfinderGoalTame net/minecraft/world/entity/ai/goal/RunAroundLikeCrazyGoal
	a horse
	b speedModifier
	c posX
	d posY
	e posZ
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	e ()V tick
net/minecraft/world/entity/ai/goal/PathfinderGoalTempt net/minecraft/world/entity/ai/goal/TemptGoal
	a mob
	b player
	c TEMP_TARGETING
	d targetingConditions
	e speedModifier
	f px
	g py
	h pz
	i pRotX
	j pRotY
	k calmDown
	l isRunning
	m items
	n canScare
	a ()Z canUse
	a (Lnet/minecraft/world/entity/EntityLiving;)Z shouldFollow
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	h ()Z canScare
	i ()Z isRunning
net/minecraft/world/entity/ai/goal/PathfinderGoalTradeWithPlayer net/minecraft/world/entity/ai/goal/TradeWithPlayerGoal
	a mob
	a ()Z canUse
	c ()V start
	d ()V stop
net/minecraft/world/entity/ai/goal/PathfinderGoalUseItem net/minecraft/world/entity/ai/goal/UseItemGoal
	a mob
	b item
	c canUseSelector
	d finishUsingSound
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
net/minecraft/world/entity/ai/goal/PathfinderGoalWater net/minecraft/world/entity/ai/goal/TryFindWaterGoal
	a mob
	a ()Z canUse
	c ()V start
net/minecraft/world/entity/ai/goal/PathfinderGoalWaterJump net/minecraft/world/entity/ai/goal/DolphinJumpGoal
	a STEPS_TO_CHECK
	b dolphin
	c interval
	d breached
	I_ ()Z isInterruptable
	a ()Z canUse
	a (Lnet/minecraft/core/BlockPosition;III)Z waterIsClear
	b ()Z canContinueToUse
	b (Lnet/minecraft/core/BlockPosition;III)Z surfaceIsClear
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/world/entity/ai/goal/PathfinderGoalWaterJumpAbstract net/minecraft/world/entity/ai/goal/JumpGoal
net/minecraft/world/entity/ai/goal/PathfinderGoalWrapped net/minecraft/world/entity/ai/goal/WrappedGoal
	a goal
	b priority
	c isRunning
	I_ ()Z isInterruptable
	J_ ()Z requiresUpdateEveryTick
	a ()Z canUse
	a (I)I adjustedTickDelay
	a (Ljava/util/EnumSet;)V setFlags
	a (Lnet/minecraft/world/entity/ai/goal/PathfinderGoalWrapped;)Z canBeReplacedBy
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	h ()Z isRunning
	i ()I getPriority
	j ()Ljava/util/EnumSet; getFlags
	k ()Lnet/minecraft/world/entity/ai/goal/PathfinderGoal; getGoal
net/minecraft/world/entity/ai/goal/PathfinderGoalZombieAttack net/minecraft/world/entity/ai/goal/ZombieAttackGoal
	b zombie
	c raiseArmTicks
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/world/entity/ai/goal/target/PathfinderGoalDefendVillage net/minecraft/world/entity/ai/goal/target/DefendVillageTargetGoal
	a golem
	b potentialTarget
	c attackTargeting
	a ()Z canUse
	c ()V start
net/minecraft/world/entity/ai/goal/target/PathfinderGoalHurtByTarget net/minecraft/world/entity/ai/goal/target/HurtByTargetGoal
	a HURT_BY_TARGETING
	b ALERT_RANGE_Y
	c alertSameType
	d timestamp
	i toIgnoreDamage
	j toIgnoreAlert
	a ()Z canUse
	a (Lnet/minecraft/world/entity/EntityInsentient;Lnet/minecraft/world/entity/EntityLiving;)V alertOther
	a ([Ljava/lang/Class;)Lnet/minecraft/world/entity/ai/goal/target/PathfinderGoalHurtByTarget; setAlertOthers
	c ()V start
	h ()V alertOthers
net/minecraft/world/entity/ai/goal/target/PathfinderGoalNearestAttackableTarget net/minecraft/world/entity/ai/goal/target/NearestAttackableTargetGoal
	a targetType
	b randomInterval
	c target
	d targetConditions
	i DEFAULT_RANDOM_INTERVAL
	a ()Z canUse
	a (D)Lnet/minecraft/world/phys/AxisAlignedBB; getTargetSearchArea
	a (Lnet/minecraft/world/entity/EntityLiving;)V setTarget
	c ()V start
	h ()V findTarget
net/minecraft/world/entity/ai/goal/target/PathfinderGoalNearestAttackableTargetWitch net/minecraft/world/entity/ai/goal/target/NearestAttackableWitchTargetGoal
	i canAttack
	a ()Z canUse
	a (Z)V setCanAttack
net/minecraft/world/entity/ai/goal/target/PathfinderGoalNearestHealableRaider net/minecraft/world/entity/ai/goal/target/NearestHealableRaiderTargetGoal
	i DEFAULT_COOLDOWN
	j cooldown
	a ()Z canUse
	c ()V start
	i ()I getCooldown
	k ()V decrementCooldown
net/minecraft/world/entity/ai/goal/target/PathfinderGoalOwnerHurtByTarget net/minecraft/world/entity/ai/goal/target/OwnerHurtByTargetGoal
	a tameAnimal
	b ownerLastHurtBy
	c timestamp
	a ()Z canUse
	c ()V start
net/minecraft/world/entity/ai/goal/target/PathfinderGoalOwnerHurtTarget net/minecraft/world/entity/ai/goal/target/OwnerHurtTargetGoal
	a tameAnimal
	b ownerLastHurt
	c timestamp
	a ()Z canUse
	c ()V start
net/minecraft/world/entity/ai/goal/target/PathfinderGoalRandomTargetNonTamed net/minecraft/world/entity/ai/goal/target/NonTameRandomTargetGoal
	i tamableMob
	a ()Z canUse
	b ()Z canContinueToUse
net/minecraft/world/entity/ai/goal/target/PathfinderGoalTarget net/minecraft/world/entity/ai/goal/target/TargetGoal
	a EMPTY_REACH_CACHE
	b CAN_REACH_CACHE
	c CANT_REACH_CACHE
	d mustReach
	e mob
	f mustSee
	g targetMob
	h unseenMemoryTicks
	i reachCache
	j reachCacheTime
	k unseenTicks
	a (Lnet/minecraft/world/entity/EntityLiving;)Z canReach
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/ai/targeting/PathfinderTargetCondition;)Z canAttack
	b ()Z canContinueToUse
	c ()V start
	c (I)Lnet/minecraft/world/entity/ai/goal/target/PathfinderGoalTarget; setUnseenMemoryTicks
	d ()V stop
	l ()D getFollowDistance
net/minecraft/world/entity/ai/goal/target/PathfinderGoalUniversalAngerReset net/minecraft/world/entity/ai/goal/target/ResetUniversalAngerTargetGoal
	a ALERT_RANGE_Y
	b mob
	c alertOthersOfSameType
	d lastHurtByPlayerTimestamp
	a ()Z canUse
	c ()V start
	h ()Z wasHurtByPlayer
	i ()Ljava/util/List; getNearbyMobsOfSameType
net/minecraft/world/entity/ai/gossip/Reputation net/minecraft/world/entity/ai/gossip/GossipContainer
	a DISCARD_THRESHOLD
	b LOGGER
	c gossips
	a ()Ljava/util/Map; getGossipEntries
	a (II)I mergeValuesForTransfer
	a (Lcom/mojang/serialization/Dynamic;)V update
	a (Lcom/mojang/serialization/DynamicOps;)Ljava/lang/Object; store
	a (Ljava/util/UUID;)Lbov$a; getOrCreate
	a (Ljava/util/UUID;Ljava/util/function/Predicate;)I getReputation
	a (Ljava/util/UUID;Lnet/minecraft/world/entity/ai/gossip/ReputationType;)V remove
	a (Ljava/util/UUID;Lnet/minecraft/world/entity/ai/gossip/ReputationType;I)V add
	a (Lnet/minecraft/util/RandomSource;I)Ljava/util/Collection; selectGossipsForTransfer
	a (Lnet/minecraft/world/entity/ai/gossip/Reputation;Lnet/minecraft/util/RandomSource;I)V transferFrom
	a (Lnet/minecraft/world/entity/ai/gossip/ReputationType;)V remove
	a (Lnet/minecraft/world/entity/ai/gossip/ReputationType;II)I mergeValuesForAddition
	a (Lnet/minecraft/world/entity/ai/gossip/ReputationType;Ljava/util/function/DoublePredicate;)J getCountForType
	b ()V decay
	b (Ljava/util/UUID;Lnet/minecraft/world/entity/ai/gossip/ReputationType;I)V remove
	c ()Ljava/util/stream/Stream; unpack
net/minecraft/world/entity/ai/gossip/ReputationType net/minecraft/world/entity/ai/gossip/GossipType
	a MAJOR_NEGATIVE
	b MINOR_NEGATIVE
	c MINOR_POSITIVE
	d MAJOR_POSITIVE
	e TRADING
	f REPUTATION_CHANGE_PER_EVENT
	g REPUTATION_CHANGE_PER_EVERLASTING_MEMORY
	h REPUTATION_CHANGE_PER_TRADE
	i id
	j weight
	k max
	l decayPerDay
	m decayPerTransfer
	n CODEC
	o $VALUES
	a ()[Lnet/minecraft/world/entity/ai/gossip/ReputationType; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/entity/ai/memory/ExpirableMemory net/minecraft/world/entity/ai/memory/ExpirableValue
	a value
	b timeToLive
	a ()V tick
	a (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; codec
	a (Ljava/lang/Object;)Lnet/minecraft/world/entity/ai/memory/ExpirableMemory; of
	a (Ljava/lang/Object;J)Lnet/minecraft/world/entity/ai/memory/ExpirableMemory; of
	b ()J getTimeToLive
	c ()Ljava/lang/Object; getValue
	d ()Z hasExpired
	e ()Z canExpire
net/minecraft/world/entity/ai/memory/MemoryTarget net/minecraft/world/entity/ai/memory/WalkTarget
	a target
	b speedModifier
	c closeEnoughDist
	a ()Lnet/minecraft/world/entity/ai/behavior/BehaviorPosition; getTarget
	b ()F getSpeedModifier
	c ()I getCloseEnoughDist
net/minecraft/world/entity/ai/navigation/Navigation net/minecraft/world/entity/ai/navigation/GroundPathNavigation
	p avoidSun
	K_ ()V trimPath
	a ()Z canUpdatePath
	a (I)Lnet/minecraft/world/level/pathfinder/Pathfinder; createPathFinder
	a (Lnet/minecraft/core/BlockPosition;I)Lnet/minecraft/world/level/pathfinder/PathEntity; createPath
	a (Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/world/level/pathfinder/PathEntity; createPath
	a (Lnet/minecraft/world/level/pathfinder/PathType;)Z hasValidPathType
	b ()Lnet/minecraft/world/phys/Vec3D; getTempMobPos
	b (Z)V setCanOpenDoors
	c (Z)V setCanPassDoors
	d (Z)V setAvoidSun
	e ()Z canPassDoors
	e (Z)V setCanWalkOverFences
	f ()Z canOpenDoors
	t ()I getSurfaceY
net/minecraft/world/entity/ai/navigation/NavigationAbstract net/minecraft/world/entity/ai/navigation/PathNavigation
	a mob
	b level
	c path
	d speedModifier
	e tick
	f lastStuckCheck
	g lastStuckCheckPos
	h timeoutCachedNode
	i timeoutTimer
	j lastTimeoutCheck
	k timeoutLimit
	l maxDistanceToWaypoint
	m hasDelayedRecomputation
	n timeLastRecompute
	o nodeEvaluator
	p MAX_TIME_RECOMPUTE
	q STUCK_CHECK_INTERVAL
	r STUCK_THRESHOLD_DISTANCE_FACTOR
	s targetPos
	t reachRange
	u maxVisitedNodesMultiplier
	v pathFinder
	w isStuck
	K_ ()V trimPath
	a ()Z canUpdatePath
	a (D)V setSpeedModifier
	a (DDDD)Z moveTo
	a (DDDI)Lnet/minecraft/world/level/pathfinder/PathEntity; createPath
	a (F)V setMaxVisitedNodesMultiplier
	a (I)Lnet/minecraft/world/level/pathfinder/Pathfinder; createPathFinder
	a (Ljava/util/Set;I)Lnet/minecraft/world/level/pathfinder/PathEntity; createPath
	a (Ljava/util/Set;IZI)Lnet/minecraft/world/level/pathfinder/PathEntity; createPath
	a (Ljava/util/Set;IZIF)Lnet/minecraft/world/level/pathfinder/PathEntity; createPath
	a (Ljava/util/stream/Stream;I)Lnet/minecraft/world/level/pathfinder/PathEntity; createPath
	a (Lnet/minecraft/core/BlockPosition;)Z isStableDestination
	a (Lnet/minecraft/core/BlockPosition;I)Lnet/minecraft/world/level/pathfinder/PathEntity; createPath
	a (Lnet/minecraft/core/BlockPosition;II)Lnet/minecraft/world/level/pathfinder/PathEntity; createPath
	a (Lnet/minecraft/world/entity/Entity;D)Z moveTo
	a (Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/world/level/pathfinder/PathEntity; createPath
	a (Lnet/minecraft/world/entity/EntityInsentient;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/phys/Vec3D;Z)Z isClearForMovementBetween
	a (Lnet/minecraft/world/level/pathfinder/PathEntity;D)Z moveTo
	a (Lnet/minecraft/world/phys/Vec3D;)D getGroundY
	a (Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/phys/Vec3D;)Z canMoveDirectly
	a (Z)V setCanFloat
	b ()Lnet/minecraft/world/phys/Vec3D; getTempMobPos
	b (Lnet/minecraft/core/BlockPosition;)Z shouldRecomputePath
	b (Lnet/minecraft/world/level/pathfinder/PathType;)Z canCutCorner
	b (Lnet/minecraft/world/phys/Vec3D;)V doStuckDetection
	c ()V tick
	c (Lnet/minecraft/world/phys/Vec3D;)Z shouldTargetNextNodeInDirection
	e ()V timeoutPath
	f ()V resetStuckTimeout
	g ()V resetMaxVisitedNodesMultiplier
	h ()Lnet/minecraft/core/BlockPosition; getTargetPos
	i ()V recomputePath
	j ()Lnet/minecraft/world/level/pathfinder/PathEntity; getPath
	k ()V followThePath
	l ()Z isDone
	m ()Z isInProgress
	n ()V stop
	o ()Z isInLiquid
	p ()Lnet/minecraft/world/level/pathfinder/PathfinderAbstract; getNodeEvaluator
	q ()Z canFloat
	r ()F getMaxDistanceToWaypoint
	s ()Z isStuck
net/minecraft/world/entity/ai/navigation/NavigationFlying net/minecraft/world/entity/ai/navigation/FlyingPathNavigation
	a ()Z canUpdatePath
	a (I)Lnet/minecraft/world/level/pathfinder/Pathfinder; createPathFinder
	a (Lnet/minecraft/core/BlockPosition;)Z isStableDestination
	a (Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/world/level/pathfinder/PathEntity; createPath
	a (Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/phys/Vec3D;)Z canMoveDirectly
	b ()Lnet/minecraft/world/phys/Vec3D; getTempMobPos
	b (Z)V setCanOpenDoors
	c ()V tick
	c (Z)V setCanPassDoors
	d ()Z canPassDoors
	e ()Z canOpenDoors
net/minecraft/world/entity/ai/navigation/NavigationGuardian net/minecraft/world/entity/ai/navigation/WaterBoundPathNavigation
	p allowBreaching
	a ()Z canUpdatePath
	a (I)Lnet/minecraft/world/level/pathfinder/Pathfinder; createPathFinder
	a (Lnet/minecraft/core/BlockPosition;)Z isStableDestination
	a (Lnet/minecraft/world/phys/Vec3D;)D getGroundY
	a (Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/phys/Vec3D;)Z canMoveDirectly
	a (Z)V setCanFloat
	b ()Lnet/minecraft/world/phys/Vec3D; getTempMobPos
net/minecraft/world/entity/ai/navigation/NavigationSpider net/minecraft/world/entity/ai/navigation/WallClimberNavigation
	p pathToPosition
	a (Lnet/minecraft/core/BlockPosition;I)Lnet/minecraft/world/level/pathfinder/PathEntity; createPath
	a (Lnet/minecraft/world/entity/Entity;D)Z moveTo
	a (Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/world/level/pathfinder/PathEntity; createPath
	c ()V tick
net/minecraft/world/entity/ai/sensing/EntitySenses net/minecraft/world/entity/ai/sensing/Sensing
	a mob
	b seen
	c unseen
	a ()V tick
	a (Lnet/minecraft/world/entity/Entity;)Z hasLineOfSight
net/minecraft/world/entity/ai/sensing/SensorAdult net/minecraft/world/entity/ai/sensing/AdultSensor
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)V doTick
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)V doTick
	a (Lnet/minecraft/world/entity/EntityAgeable;Lnet/minecraft/world/entity/ai/memory/NearestVisibleLivingEntities;)V setNearestVisibleAdult
net/minecraft/world/entity/ai/sensing/SensorDummy net/minecraft/world/entity/ai/sensing/DummySensor
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)V doTick
net/minecraft/world/entity/ai/sensing/SensorGolemLastSeen net/minecraft/world/entity/ai/sensing/GolemSensor
	a GOLEM_SCAN_RATE
	c MEMORY_TIME_TO_LIVE
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)V doTick
	a (Lnet/minecraft/world/entity/EntityLiving;)V checkForNearbyGolem
	b (Lnet/minecraft/world/entity/EntityLiving;)V golemDetected
net/minecraft/world/entity/ai/sensing/SensorHoglinSpecific net/minecraft/world/entity/ai/sensing/HoglinSpecificSensor
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)V doTick
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/monster/hoglin/EntityHoglin;)V doTick
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/monster/hoglin/EntityHoglin;)Ljava/util/Optional; findNearestRepellent
net/minecraft/world/entity/ai/sensing/SensorHurtBy net/minecraft/world/entity/ai/sensing/HurtBySensor
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)V doTick
net/minecraft/world/entity/ai/sensing/SensorNearestBed net/minecraft/world/entity/ai/sensing/NearestBedSensor
	a CACHE_TIMEOUT
	c BATCH_SIZE
	d RATE
	e batchCache
	f triedCount
	g lastUpdate
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;)V doTick
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)V doTick
net/minecraft/world/entity/ai/sensing/SensorNearestItems net/minecraft/world/entity/ai/sensing/NearestItemSensor
	a MAX_DISTANCE_TO_WANTED_ITEM
	c XZ_RANGE
	d Y_RANGE
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;)V doTick
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)V doTick
net/minecraft/world/entity/ai/sensing/SensorNearestLivingEntities net/minecraft/world/entity/ai/sensing/NearestLivingEntitySensor
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)V doTick
	b ()I radiusXZ
	c ()I radiusY
net/minecraft/world/entity/ai/sensing/SensorNearestPlayers net/minecraft/world/entity/ai/sensing/PlayerSensor
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)V doTick
net/minecraft/world/entity/ai/sensing/SensorPiglinBruteSpecific net/minecraft/world/entity/ai/sensing/PiglinBruteSpecificSensor
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)V doTick
net/minecraft/world/entity/ai/sensing/SensorPiglinSpecific net/minecraft/world/entity/ai/sensing/PiglinSpecificSensor
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;)Z isValidRepellent
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)V doTick
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Ljava/util/Optional; findNearestRepellent
net/minecraft/world/entity/ai/sensing/SensorSecondaryPlaces net/minecraft/world/entity/ai/sensing/SecondaryPoiSensor
	a SCAN_RATE
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)V doTick
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;)V doTick
net/minecraft/world/entity/ai/sensing/SensorVillagerBabies net/minecraft/world/entity/ai/sensing/VillagerBabiesSensor
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)V doTick
	a (Lnet/minecraft/world/entity/EntityLiving;)Ljava/util/List; getNearestVillagerBabies
	b (Lnet/minecraft/world/entity/EntityLiving;)Z isVillagerBaby
	c (Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/entity/ai/memory/NearestVisibleLivingEntities; getVisibleEntities
net/minecraft/world/entity/ai/sensing/SensorVillagerHostiles net/minecraft/world/entity/ai/sensing/VillagerHostilesSensor
	a ACCEPTABLE_DISTANCE_FROM_HOSTILES
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityLiving;)Z isMatchingEntity
	b ()Lnet/minecraft/world/entity/ai/memory/MemoryModuleType; getMemory
	b (Lnet/minecraft/world/entity/EntityLiving;)Z isHostile
	e (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityLiving;)Z isClose
net/minecraft/world/entity/ai/targeting/PathfinderTargetCondition net/minecraft/world/entity/ai/targeting/TargetingConditions
	a DEFAULT
	b MIN_VISIBILITY_DISTANCE_FOR_INVISIBLE_TARGET
	c isCombat
	d range
	e checkLineOfSight
	f testInvisible
	g selector
	a ()Lnet/minecraft/world/entity/ai/targeting/PathfinderTargetCondition; forCombat
	a (D)Lnet/minecraft/world/entity/ai/targeting/PathfinderTargetCondition; range
	a (Ljava/util/function/Predicate;)Lnet/minecraft/world/entity/ai/targeting/PathfinderTargetCondition; selector
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityLiving;)Z test
	b ()Lnet/minecraft/world/entity/ai/targeting/PathfinderTargetCondition; forNonCombat
	c ()Lnet/minecraft/world/entity/ai/targeting/PathfinderTargetCondition; copy
	d ()Lnet/minecraft/world/entity/ai/targeting/PathfinderTargetCondition; ignoreLineOfSight
	e ()Lnet/minecraft/world/entity/ai/targeting/PathfinderTargetCondition; ignoreInvisibilityTesting
net/minecraft/world/entity/ai/util/PathfinderGoalUtil net/minecraft/world/entity/ai/util/GoalUtils
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/EntityCreature;)Z isOutsideLimits
	a (Lnet/minecraft/world/entity/EntityCreature;I)Z mobRestricted
	a (Lnet/minecraft/world/entity/EntityCreature;Lnet/minecraft/core/BlockPosition;)Z isWater
	a (Lnet/minecraft/world/entity/EntityInsentient;)Z hasGroundPathNavigation
	a (Lnet/minecraft/world/entity/ai/navigation/NavigationAbstract;Lnet/minecraft/core/BlockPosition;)Z isNotStable
	a (ZLnet/minecraft/world/entity/EntityCreature;Lnet/minecraft/core/BlockPosition;)Z isRestricted
	b (Lnet/minecraft/world/entity/EntityCreature;Lnet/minecraft/core/BlockPosition;)Z hasMalus
	c (Lnet/minecraft/world/entity/EntityCreature;Lnet/minecraft/core/BlockPosition;)Z isSolid
net/minecraft/world/entity/ai/util/RandomPositionGenerator net/minecraft/world/entity/ai/util/RandomPos
	a RANDOM_POS_ATTEMPTS
	a (Ljava/util/function/Supplier;Ljava/util/function/ToDoubleFunction;)Lnet/minecraft/world/phys/Vec3D; generateRandomPos
	a (Lnet/minecraft/core/BlockPosition;IILjava/util/function/Predicate;)Lnet/minecraft/core/BlockPosition; moveUpToAboveSolid
	a (Lnet/minecraft/core/BlockPosition;ILjava/util/function/Predicate;)Lnet/minecraft/core/BlockPosition; moveUpOutOfSolid
	a (Lnet/minecraft/util/RandomSource;II)Lnet/minecraft/core/BlockPosition; generateRandomDirection
	a (Lnet/minecraft/util/RandomSource;IIIDDD)Lnet/minecraft/core/BlockPosition; generateRandomDirectionWithinRadians
	a (Lnet/minecraft/world/entity/EntityCreature;ILnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/core/BlockPosition; generateRandomPosTowardDirection
	a (Lnet/minecraft/world/entity/EntityCreature;Ljava/util/function/Supplier;)Lnet/minecraft/world/phys/Vec3D; generateRandomPos
net/minecraft/world/entity/ai/village/ReputationEvent net/minecraft/world/entity/ai/village/ReputationEventType
	a ZOMBIE_VILLAGER_CURED
	b GOLEM_KILLED
	c VILLAGER_HURT
	d VILLAGER_KILLED
	e TRADE
	a (Ljava/lang/String;)Lnet/minecraft/world/entity/ai/village/ReputationEvent; register
net/minecraft/world/entity/ai/village/poi/VillagePlace net/minecraft/world/entity/ai/village/poi/PoiManager
	a MAX_VILLAGE_DISTANCE
	b VILLAGE_SECTION_SIZE
	d distanceTracker
	e loadedChunks
	a (J)V setDirty
	a (Ljava/util/function/BooleanSupplier;)V tick
	a (Ljava/util/function/Predicate;Ljava/util/function/BiPredicate;Lnet/minecraft/core/BlockPosition;I)Ljava/util/Optional; take
	a (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPosition;ILnet/minecraft/world/entity/ai/village/poi/VillagePlace$Occupancy;)Ljava/util/stream/Stream; findAll
	a (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/world/entity/ai/village/poi/VillagePlace$Occupancy;Lnet/minecraft/core/BlockPosition;ILnet/minecraft/util/RandomSource;)Ljava/util/Optional; getRandom
	a (Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPosition;ILnet/minecraft/world/entity/ai/village/poi/VillagePlace$Occupancy;)J getCountInRange
	a (Ljava/util/function/Predicate;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/world/entity/ai/village/poi/VillagePlace$Occupancy;)Ljava/util/stream/Stream; getInChunk
	a (Lnet/minecraft/core/BlockPosition;)V remove
	a (Lnet/minecraft/core/BlockPosition;Ljava/util/function/Predicate;)Z exists
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/Holder;)V add
	a (Lnet/minecraft/core/SectionPosition;)I sectionsToVillage
	a (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/BlockPosition;)Z existsAtPosition
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/world/level/chunk/ChunkSection;)V checkConsistencyWithBlocks
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;I)V ensureLoadedAndValid
	a (Lnet/minecraft/world/level/chunk/ChunkSection;)Z mayHavePoi
	a (Lnet/minecraft/world/level/chunk/ChunkSection;Lnet/minecraft/core/SectionPosition;Ljava/util/function/BiConsumer;)V updateFromSection
	b (J)V onSectionLoad
	b (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPosition;ILnet/minecraft/world/entity/ai/village/poi/VillagePlace$Occupancy;)Ljava/util/stream/Stream; findAllWithType
	b (Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPosition;ILnet/minecraft/world/entity/ai/village/poi/VillagePlace$Occupancy;)Ljava/util/stream/Stream; getInSquare
	b (Lnet/minecraft/core/BlockPosition;)Z release
	c (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPosition;ILnet/minecraft/world/entity/ai/village/poi/VillagePlace$Occupancy;)Ljava/util/stream/Stream; findAllClosestFirstWithType
	c (Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPosition;ILnet/minecraft/world/entity/ai/village/poi/VillagePlace$Occupancy;)Ljava/util/stream/Stream; getInRange
	c (Lnet/minecraft/core/BlockPosition;)Ljava/util/Optional; getType
	d (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPosition;ILnet/minecraft/world/entity/ai/village/poi/VillagePlace$Occupancy;)Ljava/util/Optional; find
	d (Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPosition;ILnet/minecraft/world/entity/ai/village/poi/VillagePlace$Occupancy;)Ljava/util/Optional; findClosest
	d (Lnet/minecraft/core/BlockPosition;)I getFreeTickets
	e (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPosition;ILnet/minecraft/world/entity/ai/village/poi/VillagePlace$Occupancy;)Ljava/util/Optional; findClosest
	e (Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPosition;ILnet/minecraft/world/entity/ai/village/poi/VillagePlace$Occupancy;)Ljava/util/Optional; findClosestWithType
	g (J)Z isVillageCenter
net/minecraft/world/entity/ai/village/poi/VillagePlace$Occupancy net/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy
	a HAS_SPACE
	b IS_OCCUPIED
	c ANY
	d test
	e $VALUES
	a ()Ljava/util/function/Predicate; getTest
	b ()[Lnet/minecraft/world/entity/ai/village/poi/VillagePlace$Occupancy; $values
net/minecraft/world/entity/ai/village/poi/VillagePlaceRecord net/minecraft/world/entity/ai/village/poi/PoiRecord
	a pos
	b poiType
	c freeTickets
	d setDirty
	a ()I getFreeTickets
	a (Ljava/lang/Runnable;)Lcom/mojang/serialization/Codec; codec
	b ()Z acquireTicket
	c ()Z releaseTicket
	d ()Z hasSpace
	e ()Z isOccupied
	f ()Lnet/minecraft/core/BlockPosition; getPos
	g ()Lnet/minecraft/core/Holder; getPoiType
net/minecraft/world/entity/ai/village/poi/VillagePlaceSection net/minecraft/world/entity/ai/village/poi/PoiSection
	a LOGGER
	b records
	c byType
	d setDirty
	e isValid
	a ()Z isValid
	a (Ljava/lang/Runnable;)Lcom/mojang/serialization/Codec; codec
	a (Ljava/util/function/Consumer;)V refresh
	a (Ljava/util/function/Predicate;Lnet/minecraft/world/entity/ai/village/poi/VillagePlace$Occupancy;)Ljava/util/stream/Stream; getRecords
	a (Lnet/minecraft/core/BlockPosition;)V remove
	a (Lnet/minecraft/core/BlockPosition;Ljava/util/function/Predicate;)Z exists
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/Holder;)V add
	a (Lnet/minecraft/world/entity/ai/village/poi/VillagePlaceRecord;)Z add
	b ()V clear
	b (Lnet/minecraft/core/BlockPosition;)I getFreeTickets
	c (Lnet/minecraft/core/BlockPosition;)Z release
	d (Lnet/minecraft/core/BlockPosition;)Ljava/util/Optional; getType
	e (Lnet/minecraft/core/BlockPosition;)Ljava/util/Optional; getPoiRecord
net/minecraft/world/entity/ai/village/poi/VillagePlaceType net/minecraft/world/entity/ai/village/poi/PoiType
	a NONE
	b matchingStates
	c maxTickets
	d validRange
	a ()Ljava/util/Set; matchingStates
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z is
	b ()I maxTickets
	c ()I validRange
net/minecraft/world/entity/ambient/EntityAmbient net/minecraft/world/entity/ambient/AmbientCreature
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z canBeLeashed
net/minecraft/world/entity/ambient/EntityBat net/minecraft/world/entity/ambient/Bat
	b FLAP_DEGREES_PER_TICK
	bR BAT_RESTING_TARGETING
	bS targetPosition
	c TICKS_PER_FLAP
	d DATA_ID_FLAGS
	e FLAG_RESTING
	A (Lnet/minecraft/world/entity/Entity;)V doPush
	U ()V customServerAiStep
	a (DZLnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;)V checkFallDamage
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	aN ()Z isFlapping
	aQ ()Lnet/minecraft/world/entity/Entity$MovementEmission; getMovementEmission
	a_ ()V defineSynchedData
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkBatSpawnRules
	bn ()Z isPushable
	cq ()Z isIgnoringBlockTriggers
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	eN ()F getSoundVolume
	eO ()F getVoicePitch
	eZ ()V pushEntities
	l ()V tick
	q ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	r ()Z isResting
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w ()Z isHalloween
	w (Z)V setResting
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
net/minecraft/world/entity/animal/EntityAnimal net/minecraft/world/entity/animal/Animal
	bS inLove
	bT loveCause
	bU PARENT_AGE_AFTER_BREEDING
	K ()I getAmbientSoundInterval
	U ()V customServerAiStep
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/IWorldReader;)F getWalkTargetValue
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/EntityAnimal;)V spawnChildFromBreeding
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/entity/animal/EntityAnimal;)Z canMate
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/item/ItemStack;)V usePlayerItem
	a (Lnet/minecraft/world/level/IBlockLightAccess;Lnet/minecraft/core/BlockPosition;)Z isBrightEnoughToSpawn
	b (B)V handleEntityEvent
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkAnimalSpawnRules
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	b_ ()V aiStep
	bu ()D getMyRidingOffset
	dX ()I getExperienceReward
	f (Lnet/minecraft/world/entity/player/EntityHuman;)V setInLove
	fT ()Z canFallInLove
	fU ()I getInLoveTime
	fV ()Lnet/minecraft/server/level/EntityPlayer; getLoveCause
	fW ()Z isInLove
	fX ()V resetLove
	h (D)Z removeWhenFarAway
	m (Lnet/minecraft/world/item/ItemStack;)Z isFood
	r (I)V setInLoveTime
net/minecraft/world/entity/animal/EntityBee net/minecraft/world/entity/animal/Bee
	bS FLAP_DEGREES_PER_TICK
	bT TICKS_PER_FLAP
	bV TAG_CROPS_GROWN_SINCE_POLLINATION
	bW TAG_CANNOT_ENTER_HIVE_TICKS
	bX TAG_TICKS_SINCE_POLLINATION
	bY TAG_HAS_STUNG
	bZ TAG_HAS_NECTAR
	cA COOLDOWN_BEFORE_LOCATING_NEW_HIVE
	cB remainingCooldownBeforeLocatingNewHive
	cC COOLDOWN_BEFORE_LOCATING_NEW_FLOWER
	cD remainingCooldownBeforeLocatingNewFlower
	cE savedFlowerPos
	cF hivePos
	cG beePollinateGoal
	cH goToHiveGoal
	cI goToKnownFlowerGoal
	cJ underWaterTicks
	ca TAG_FLOWER_POS
	cb TAG_HIVE_POS
	cc DATA_FLAGS_ID
	cd DATA_REMAINING_ANGER_TIME
	ce FLAG_ROLL
	cf FLAG_HAS_STUNG
	cg FLAG_HAS_NECTAR
	ch STING_DEATH_COUNTDOWN
	ci TICKS_BEFORE_GOING_TO_KNOWN_FLOWER
	cj TICKS_WITHOUT_NECTAR_BEFORE_GOING_HOME
	ck MIN_ATTACK_DIST
	cl MAX_CROPS_GROWABLE
	cm POISON_SECONDS_NORMAL
	cn POISON_SECONDS_HARD
	co TOO_FAR_DISTANCE
	cp HIVE_CLOSE_ENOUGH_DISTANCE
	cq PATHFIND_TO_HIVE_WHEN_CLOSER_THAN
	cr HIVE_SEARCH_DISTANCE
	cs PERSISTENT_ANGER_TIME
	ct persistentAngerTarget
	cu rollAmount
	cv rollAmountO
	cw timeSinceSting
	cx ticksWithoutNectarSinceExitingHive
	cy stayOutOfHiveCountdown
	cz numCropsGrownSincePollination
	C (F)F getRollAmount
	T ()V sendDebugPackets
	U ()V customServerAiStep
	a ()I getRemainingPersistentAngerTime
	a (DZLnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;)V checkFallDamage
	a (I)V setRemainingPersistentAngerTime
	a (Ljava/util/UUID;)V setPersistentAngerTarget
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/IWorldReader;)F getWalkTargetValue
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/level/World;)Lnet/minecraft/world/entity/ai/navigation/NavigationAbstract; createNavigation
	a (Lnet/minecraft/world/level/World;DDDDDLnet/minecraft/core/particles/ParticleParam;)V spawnFluidParticle
	aN ()Z isFlapping
	a_ ()V defineSynchedData
	b ()Ljava/util/UUID; getPersistentAngerTarget
	b (Lnet/minecraft/core/BlockPosition;I)Z closerThan
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/animal/EntityBee; getBreedOffspring
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b_ ()V aiStep
	c ()V startPersistentAngerTimer
	c (Lnet/minecraft/tags/TagKey;)V jumpInLiquid
	cF ()Lnet/minecraft/world/phys/Vec3D; getLeashOffset
	d (IZ)V setFlag
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	eJ ()Lnet/minecraft/world/entity/EnumMonsterType; getMobType
	eN ()F getSoundVolume
	fS ()Ljava/util/List; getBlacklistedHives
	fY ()V resetTicksWithoutNectarSinceExitingHive
	fZ ()Z hasHive
	g (Lnet/minecraft/core/BlockPosition;)V setSavedFlowerPos
	ga ()Lnet/minecraft/core/BlockPosition; getHivePos
	gb ()Lnet/minecraft/world/entity/ai/goal/PathfinderGoalSelector; getGoalSelector
	gc ()Z hasNectar
	gd ()Z hasStung
	ge ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	gf ()Z isFlying
	gg ()V dropOffNectar
	gh ()Z isTiredOfLookingForNectar
	gi ()Z wantsToEnterHive
	gj ()V updateRollAmount
	gk ()Z isHiveNearFire
	gl ()I getCropsGrownSincePollination
	gm ()V resetNumCropsGrownSincePollination
	gn ()V incrementNumCropsGrownSincePollination
	go ()Z isHiveValid
	gp ()Z isRolling
	h (Lnet/minecraft/core/BlockPosition;)V pathfindRandomlyTowards
	i (Lnet/minecraft/core/BlockPosition;)Z doesHiveHaveSpace
	j (Lnet/minecraft/core/BlockPosition;)Z isTooFarAway
	k (Lnet/minecraft/core/BlockPosition;)Z isFlowerValid
	l ()V tick
	m (Lnet/minecraft/world/item/ItemStack;)Z isFood
	q ()Lnet/minecraft/core/BlockPosition; getSavedFlowerPos
	r ()Z hasSavedFlowerPos
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	s (I)V setStayOutOfHiveCountdown
	t (I)Z getFlag
	w ()I getTravellingTicks
	w (Z)V setHasNectar
	x ()V registerGoals
	x (Z)V setHasStung
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	y (Z)V setRolling
	z (Lnet/minecraft/world/entity/Entity;)Z doHurtTarget
net/minecraft/world/entity/animal/EntityBird net/minecraft/world/entity/animal/FlyingAnimal
	gf ()Z isFlying
net/minecraft/world/entity/animal/EntityCat net/minecraft/world/entity/animal/Cat
	bV TEMPT_SPEED_MOD
	bW WALK_SPEED_MOD
	bX SPRINT_SPEED_MOD
	bY TEMPT_INGREDIENT
	bZ DATA_VARIANT_ID
	ca IS_LYING
	cb RELAX_STATE_ONE
	cc DATA_COLLAR_COLOR
	cd avoidPlayersGoal
	ce temptGoal
	cf lieDownAmount
	cg lieDownAmountO
	ch lieDownAmountTail
	ci lieDownAmountOTail
	cj relaxStateOneAmount
	ck relaxStateOneAmountO
	A (Z)V setLying
	B (Z)V setRelaxStateOne
	C (F)F getLieDownAmount
	D (F)F getLieDownAmountTail
	E (F)F getRelaxStateOneAmount
	K ()I getAmbientSoundInterval
	U ()V customServerAiStep
	a (Ljava/lang/Object;)V setVariant
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/world/entity/animal/CatVariant;)V setVariant
	a (Lnet/minecraft/world/entity/animal/EntityAnimal;)Z canMate
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/item/ItemStack;)V usePlayerItem
	a (Lnet/minecraft/world/item/EnumColor;)V setCollarColor
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	a_ ()V defineSynchedData
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/animal/EntityCat; getBreedOffspring
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	bP ()Z isSteppingCarefully
	c ()Ljava/lang/Object; getVariant
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	fY ()Lnet/minecraft/resources/MinecraftKey; getResourceLocation
	fZ ()Lnet/minecraft/world/entity/animal/CatVariant; getVariant
	ga ()Z isLying
	gb ()Z isRelaxStateOne
	gc ()Lnet/minecraft/world/item/EnumColor; getCollarColor
	gd ()V hiss
	ge ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	gf ()F getAttackDamage
	gg ()V handleLieDown
	gh ()V updateLieDownAmount
	gi ()V updateRelaxStateOneAmount
	h (D)Z removeWhenFarAway
	l ()V tick
	m (Lnet/minecraft/world/item/ItemStack;)Z isFood
	r ()V reassessTameGoals
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	x ()V registerGoals
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	z (Lnet/minecraft/world/entity/Entity;)Z doHurtTarget
net/minecraft/world/entity/animal/EntityCat$PathfinderGoalTemptChance net/minecraft/world/entity/animal/Cat$CatTemptGoal
	c selectedPlayer
	d cat
	a ()Z canUse
	e ()V tick
	h ()Z canScare
net/minecraft/world/entity/animal/EntityChicken net/minecraft/world/entity/animal/Chicken
	bS flap
	bT flapSpeed
	bV oFlapSpeed
	bW oFlap
	bX flapping
	bY eggTime
	bZ isChickenJockey
	ca FOOD_ITEMS
	cb nextFlap
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	aM ()V onFlap
	aN ()Z isFlapping
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/animal/EntityChicken; getBreedOffspring
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b_ ()V aiStep
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	dX ()I getExperienceReward
	h (D)Z removeWhenFarAway
	i (Lnet/minecraft/world/entity/Entity;)V positionRider
	m (Lnet/minecraft/world/item/ItemStack;)Z isFood
	q ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	r ()Z isChickenJockey
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w (Z)V setChickenJockey
	x ()V registerGoals
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
net/minecraft/world/entity/animal/EntityCod net/minecraft/world/entity/animal/Cod
	b ()Lnet/minecraft/world/item/ItemStack; getBucketItemStack
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	fT ()Lnet/minecraft/sounds/SoundEffect; getFlopSound
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
net/minecraft/world/entity/animal/EntityCow net/minecraft/world/entity/animal/Cow
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/animal/EntityCow; getBreedOffspring
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	eN ()F getSoundVolume
	q ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	x ()V registerGoals
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
net/minecraft/world/entity/animal/EntityDolphin net/minecraft/world/entity/animal/Dolphin
	b TOTAL_AIR_SUPPLY
	bS MOISTNESS_LEVEL
	bT SWIM_WITH_PLAYER_TARGETING
	bU TOTAL_MOISTNESS_LEVEL
	c ALLOWED_ITEMS
	d TREASURE_POS
	e GOT_FISH
	V ()I getMaxHeadXRot
	W ()I getMaxHeadYRot
	a (Lnet/minecraft/core/particles/ParticleParam;)V addParticlesAroundSelf
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z canBeLeashed
	a (Lnet/minecraft/world/level/World;)Lnet/minecraft/world/entity/ai/navigation/NavigationAbstract; createNavigation
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	aI ()Lnet/minecraft/sounds/SoundEffect; getSwimSound
	aJ ()Lnet/minecraft/sounds/SoundEffect; getSwimSplashSound
	a_ ()V defineSynchedData
	b (B)V handleEntityEvent
	b (I)V handleAirSupply
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/world/entity/item/EntityItem;)V pickUpItem
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	c (I)V setMoisntessLevel
	cc ()I getMaxAirSupply
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	dK ()Z canBreatheUnderwater
	f (Lnet/minecraft/world/item/ItemStack;)Z canTakeItem
	fS ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	fT ()Z closeToNextPos
	g (Lnet/minecraft/core/BlockPosition;)V setTreasurePos
	h (Lnet/minecraft/world/phys/Vec3D;)V travel
	l ()V tick
	l (Lnet/minecraft/world/entity/Entity;)Z canRide
	m (I)I increaseAirSupply
	q ()Lnet/minecraft/core/BlockPosition; getTreasurePos
	r ()Z gotFish
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w ()I getMoistnessLevel
	w (Z)V setGotFish
	x ()V registerGoals
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	z (Lnet/minecraft/world/entity/Entity;)Z doHurtTarget
net/minecraft/world/entity/animal/EntityFish net/minecraft/world/entity/animal/AbstractFish
	b FROM_BUCKET
	Q ()Z requiresCustomPersistence
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/level/World;)Lnet/minecraft/world/entity/ai/navigation/NavigationAbstract; createNavigation
	aI ()Lnet/minecraft/sounds/SoundEffect; getSwimSound
	a_ ()V defineSynchedData
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	b_ ()V aiStep
	c (Lnet/minecraft/nbt/NBTTagCompound;)V loadFromBucketTag
	fS ()Z canRandomSwim
	fT ()Lnet/minecraft/sounds/SoundEffect; getFlopSound
	fy ()I getMaxSpawnClusterSize
	h (D)Z removeWhenFarAway
	h (Lnet/minecraft/world/phys/Vec3D;)V travel
	l (Lnet/minecraft/world/item/ItemStack;)V saveToBucketTag
	q ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	r ()Z fromBucket
	w ()Lnet/minecraft/sounds/SoundEffect; getPickupSound
	w (Z)V setFromBucket
	x ()V registerGoals
net/minecraft/world/entity/animal/EntityFishSchool net/minecraft/world/entity/animal/AbstractSchoolingFish
	b leader
	c schoolSize
	a (Ljava/util/stream/Stream;)V addFollowers
	a (Lnet/minecraft/world/entity/animal/EntityFishSchool;)Lnet/minecraft/world/entity/animal/EntityFishSchool; startFollowing
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	fS ()Z canRandomSwim
	fU ()I getMaxSchoolSize
	fV ()Z isFollower
	fW ()V stopFollowing
	fX ()Z canBeFollowed
	fY ()Z hasFollowers
	fZ ()Z inRangeOfLeader
	fy ()I getMaxSpawnClusterSize
	ga ()V pathToLeader
	gb ()V addFollower
	gc ()V removeFollower
	l ()V tick
	x ()V registerGoals
net/minecraft/world/entity/animal/EntityFox net/minecraft/world/entity/animal/Fox
	bS FLAG_CROUCHING
	bT FLAG_INTERESTED
	bV FLAG_POUNCING
	bW DATA_TYPE_ID
	bX DATA_FLAGS_ID
	bY FLAG_SITTING
	bZ FLAG_SLEEPING
	ca FLAG_FACEPLANTED
	cb FLAG_DEFENDING
	cc DATA_TRUSTED_ID_0
	cd DATA_TRUSTED_ID_1
	ce ALLOWED_ITEMS
	cf TRUSTED_TARGET_SELECTOR
	cg STALKABLE_PREY
	ch AVOID_PLAYERS
	ci MIN_TICKS_BEFORE_EAT
	cj landTargetGoal
	ck turtleEggTargetGoal
	cl fishTargetGoal
	cm interestedAngle
	cn interestedAngleO
	co crouchAmount
	cp crouchAmountO
	cq ticksSinceEaten
	A (Z)V setFaceplanted
	B (Z)V setDefending
	C (F)F getHeadRollAngle
	C (Z)V setSleeping
	D (F)F getCrouchAmount
	L ()V playAmbientSound
	a (Ljava/lang/Object;)V setVariant
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyDamageScaler;)V populateDefaultEquipmentSlots
	a (Lnet/minecraft/world/entity/animal/EntityFox$Type;)V setVariant
	a (Lnet/minecraft/world/entity/animal/EntityFox;Lnet/minecraft/world/entity/EntityLiving;)Z isPathClear
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/item/ItemStack;)V usePlayerItem
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/entity/EntityInsentient;)V onOffspringSpawnedFromEgg
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	a_ ()V defineSynchedData
	b (B)V handleEntityEvent
	b (Ljava/util/UUID;)V addTrustedUUID
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/animal/EntityFox; getBreedOffspring
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/world/entity/item/EntityItem;)V pickUpItem
	bT ()Z isCrouching
	b_ ()V aiStep
	c ()Ljava/lang/Object; getVariant
	c (Ljava/util/UUID;)Z trusts
	c (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkFoxSpawnRules
	cF ()Lnet/minecraft/world/phys/Vec3D; getLeashOffset
	d (FF)I calculateFallDamage
	d (IZ)V setFlag
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	d (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/sounds/SoundEffect; getEatingSound
	eP ()Z isImmobile
	f (Lnet/minecraft/world/item/ItemStack;)Z canTakeItem
	fS ()Z isFaceplanted
	fY ()Z isPouncing
	fZ ()Z isJumping
	fu ()Z isSleeping
	g (Lnet/minecraft/world/damagesource/DamageSource;)V dropAllDeathLoot
	ga ()Z isFullyCrouched
	gb ()Z isInterested
	gc ()V setTargetGoals
	gd ()Ljava/util/List; getTrustedUUIDs
	ge ()Z isDefending
	gf ()V wakeUp
	gg ()V clearStates
	gh ()Z canMove
	i (Lnet/minecraft/world/entity/EntityLiving;)V setTarget
	j (Lnet/minecraft/world/item/ItemStack;)Z canHoldItem
	l ()V tick
	l (Lnet/minecraft/world/item/ItemStack;)Z canEat
	m (Lnet/minecraft/world/item/ItemStack;)Z isFood
	n (Lnet/minecraft/world/item/ItemStack;)V spitOutItem
	o (Lnet/minecraft/world/item/ItemStack;)V dropItemStack
	q ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	r ()Lnet/minecraft/world/entity/animal/EntityFox$Type; getVariant
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	s (I)Z getFlag
	w ()Z isSitting
	w (Z)V setSitting
	x ()V registerGoals
	x (Z)V setIsPouncing
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	y (Z)V setIsCrouching
	z (Z)V setIsInterested
net/minecraft/world/entity/animal/EntityFox$Type net/minecraft/world/entity/animal/Fox$Type
	a RED
	b SNOW
	c CODEC
	d BY_ID
	e id
	f name
	g $VALUES
	a ()I getId
	a (I)Lnet/minecraft/world/entity/animal/EntityFox$Type; byId
	a (Ljava/lang/String;)Lnet/minecraft/world/entity/animal/EntityFox$Type; byName
	a (Lnet/minecraft/core/Holder;)Lnet/minecraft/world/entity/animal/EntityFox$Type; byBiome
	b ()[Lnet/minecraft/world/entity/animal/EntityFox$Type; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/entity/animal/EntityGolem net/minecraft/world/entity/animal/AbstractGolem
	K ()I getAmbientSoundInterval
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	h (D)Z removeWhenFarAway
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
net/minecraft/world/entity/animal/EntityIronGolem net/minecraft/world/entity/animal/IronGolem
	bS offerFlowerTick
	bT PERSISTENT_ANGER_TIME
	bU remainingPersistentAngerTime
	bV persistentAngerTarget
	c DATA_FLAGS_ID
	d IRON_INGOT_HEAL_AMOUNT
	e attackAnimationTick
	A (Lnet/minecraft/world/entity/Entity;)V doPush
	a ()I getRemainingPersistentAngerTime
	a (I)V setRemainingPersistentAngerTime
	a (Ljava/util/UUID;)V setPersistentAngerTarget
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/damagesource/DamageSource;)V die
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/entity/EntityTypes;)Z canAttackType
	a (Lnet/minecraft/world/level/IWorldReader;)Z checkSpawnObstruction
	a_ ()V defineSynchedData
	b ()Ljava/util/UUID; getPersistentAngerTarget
	b (B)V handleEntityEvent
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	b_ ()V aiStep
	c ()V startPersistentAngerTimer
	cF ()Lnet/minecraft/world/phys/Vec3D; getLeashOffset
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	fS ()I getOfferFlowerTick
	fT ()Z isPlayerCreated
	fU ()F getAttackDamage
	l (I)I decreaseAirSupply
	q ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	r ()Lnet/minecraft/world/entity/animal/EntityIronGolem$CrackLevel; getCrackiness
	w ()I getAttackAnimationTick
	w (Z)V offerFlower
	x ()V registerGoals
	x (Z)V setPlayerCreated
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	z (Lnet/minecraft/world/entity/Entity;)Z doHurtTarget
net/minecraft/world/entity/animal/EntityIronGolem$CrackLevel net/minecraft/world/entity/animal/IronGolem$Crackiness
	a NONE
	b LOW
	c MEDIUM
	d HIGH
	e BY_DAMAGE
	f fraction
	g $VALUES
	a ()[Lnet/minecraft/world/entity/animal/EntityIronGolem$CrackLevel; $values
	a (F)Lnet/minecraft/world/entity/animal/EntityIronGolem$CrackLevel; byFraction
net/minecraft/world/entity/animal/EntityMushroomCow net/minecraft/world/entity/animal/MushroomCow
	bS DATA_TYPE
	bT MUTATE_CHANCE
	bV effect
	bW effectDuration
	bX lastLightningBoltUUID
	a ()Z readyForShearing
	a (Ljava/lang/Object;)V setVariant
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/IWorldReader;)F getWalkTargetValue
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLightning;)V thunderHit
	a (Lnet/minecraft/sounds/SoundCategory;)V shear
	a (Lnet/minecraft/world/entity/animal/EntityMushroomCow$Type;)V setVariant
	a (Lnet/minecraft/world/entity/animal/EntityMushroomCow;)Lnet/minecraft/world/entity/animal/EntityMushroomCow$Type; getOffspringType
	a_ ()V defineSynchedData
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/animal/EntityCow; getBreedOffspring
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	c ()Ljava/lang/Object; getVariant
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/animal/EntityMushroomCow; getBreedOffspring
	c (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkMushroomSpawnRules
	l (Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; getEffectFromItemStack
	r ()Lnet/minecraft/world/entity/animal/EntityMushroomCow$Type; getVariant
net/minecraft/world/entity/animal/EntityMushroomCow$Type net/minecraft/world/entity/animal/MushroomCow$MushroomType
	a RED
	b BROWN
	c CODEC
	d type
	e blockState
	f $VALUES
	a ()Lnet/minecraft/world/level/block/state/IBlockData; getBlockState
	a (Ljava/lang/String;)Lnet/minecraft/world/entity/animal/EntityMushroomCow$Type; byType
	b ()[Lnet/minecraft/world/entity/animal/EntityMushroomCow$Type; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/entity/animal/EntityOcelot net/minecraft/world/entity/animal/Ocelot
	bS CROUCH_SPEED_MOD
	bT WALK_SPEED_MOD
	bV SPRINT_SPEED_MOD
	bW TEMPT_INGREDIENT
	bX DATA_TRUSTING
	bY ocelotAvoidPlayersGoal
	bZ temptGoal
	K ()I getAmbientSoundInterval
	U ()V customServerAiStep
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/world/level/IWorldReader;)Z checkSpawnObstruction
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	a_ ()V defineSynchedData
	b (B)V handleEntityEvent
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/animal/EntityOcelot; getBreedOffspring
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	bP ()Z isSteppingCarefully
	c (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkOcelotSpawnRules
	cF ()Lnet/minecraft/world/phys/Vec3D; getLeashOffset
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	fS ()F getAttackDamage
	h (D)Z removeWhenFarAway
	m (Lnet/minecraft/world/item/ItemStack;)Z isFood
	q ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	r ()V reassessTrustingGoals
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w ()Z isTrusting
	w (Z)V setTrusting
	x ()V registerGoals
	x (Z)V spawnTrustingParticles
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	z (Lnet/minecraft/world/entity/Entity;)Z doHurtTarget
net/minecraft/world/entity/animal/EntityPanda net/minecraft/world/entity/animal/Panda
	bS TOTAL_ROLL_STEPS
	bT rollCounter
	bV UNHAPPY_COUNTER
	bW SNEEZE_COUNTER
	bX EAT_COUNTER
	bY MAIN_GENE_ID
	bZ HIDDEN_GENE_ID
	ca DATA_ID_FLAGS
	cb BREED_TARGETING
	cc FLAG_SNEEZE
	cd FLAG_ROLL
	ce FLAG_SIT
	cf FLAG_ON_BACK
	cg EAT_TICK_INTERVAL
	ch TOTAL_UNHAPPY_TIME
	ci gotBamboo
	cj didBite
	ck rollDelta
	cl sitAmount
	cm sitAmountO
	cn onBackAmount
	co onBackAmountO
	cp rollAmount
	cq rollAmountO
	cr lookAtPlayerGoal
	cs PANDA_ITEMS
	A (Z)V roll
	C (F)F getSitAmount
	D (F)F getLieOnBackAmount
	E (F)F getRollAmount
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/entity/animal/EntityPanda$Gene;)V setMainGene
	a (Lnet/minecraft/world/entity/animal/EntityPanda;Lnet/minecraft/world/entity/animal/EntityPanda;)V setGeneFromParents
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z canBeLeashed
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	a_ ()V defineSynchedData
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/animal/EntityPanda$Gene;)V setHiddenGene
	b (Lnet/minecraft/world/entity/item/EntityItem;)V pickUpItem
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	d (IZ)V setFlag
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	f (Lnet/minecraft/world/item/ItemStack;)Z canTakeItem
	fM ()Z isAggressive
	fS ()Z isOnBack
	fY ()Z isEating
	fZ ()I getSneezeCounter
	ga ()Lnet/minecraft/world/entity/animal/EntityPanda$Gene; getMainGene
	gb ()Lnet/minecraft/world/entity/animal/EntityPanda$Gene; getHiddenGene
	gc ()Z isRolling
	gd ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	ge ()Lnet/minecraft/world/entity/animal/EntityPanda$Gene; getVariant
	gf ()Z isLazy
	gg ()Z isWorried
	gh ()Z isPlayful
	gi ()Z isBrown
	gj ()Z isWeak
	gk ()Z isScared
	gl ()V setAttributes
	gm ()Z canPerformAction
	gn ()I getEatCounter
	go ()V handleEating
	gp ()V addEatingParticles
	gq ()V updateSitAmount
	gr ()V updateOnBackAnimation
	gs ()V updateRollAmount
	gt ()V handleRoll
	gu ()V afterSneeze
	gv ()Lnet/minecraft/world/entity/animal/EntityPanda$Gene; getOneOfGenesRandomly
	gw ()V tryToSit
	l ()V tick
	l (Lnet/minecraft/world/item/ItemStack;)Z isFoodOrCake
	m (Lnet/minecraft/world/item/ItemStack;)Z isFood
	q ()I getUnhappyCounter
	r ()Z isSneezing
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	s (I)V setUnhappyCounter
	t (I)V setSneezeCounter
	u (I)V setEatCounter
	v (I)Z getFlag
	w ()Z isSitting
	w (Z)V sit
	x ()V registerGoals
	x (Z)V setOnBack
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	y (Z)V eat
	z (Lnet/minecraft/world/entity/Entity;)Z doHurtTarget
	z (Z)V sneeze
net/minecraft/world/entity/animal/EntityPanda$Gene net/minecraft/world/entity/animal/Panda$Gene
	a NORMAL
	b LAZY
	c WORRIED
	d PLAYFUL
	e BROWN
	f WEAK
	g AGGRESSIVE
	h CODEC
	i BY_ID
	j MAX_GENE
	k id
	l name
	m isRecessive
	n $VALUES
	a ()I getId
	a (I)Lnet/minecraft/world/entity/animal/EntityPanda$Gene; byId
	a (Ljava/lang/String;)Lnet/minecraft/world/entity/animal/EntityPanda$Gene; byName
	a (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/entity/animal/EntityPanda$Gene; getRandom
	a (Lnet/minecraft/world/entity/animal/EntityPanda$Gene;Lnet/minecraft/world/entity/animal/EntityPanda$Gene;)Lnet/minecraft/world/entity/animal/EntityPanda$Gene; getVariantFromGenes
	b ()Z isRecessive
	c ()Ljava/lang/String; getSerializedName
	d ()[Lnet/minecraft/world/entity/animal/EntityPanda$Gene; $values
net/minecraft/world/entity/animal/EntityParrot net/minecraft/world/entity/animal/Parrot
	bV flap
	bW flapSpeed
	bX oFlapSpeed
	bY oFlap
	bZ DATA_VARIANT_ID
	ca NOT_PARROT_PREDICATE
	cb POISONOUS_FOOD
	cc TAME_FOOD
	cd MOB_SOUND_MAP
	ce flapping
	cf nextFlap
	cg partyParrot
	ch jukebox
	A (Lnet/minecraft/world/entity/Entity;)V doPush
	a (DZLnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;)V checkFallDamage
	a (Ljava/lang/Object;)V setVariant
	a (Lnet/minecraft/core/BlockPosition;Z)V setRecordPlayingNearby
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/util/RandomSource;)F getPitch
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/entity/animal/EntityAnimal;)Z canMate
	a (Lnet/minecraft/world/entity/animal/EntityParrot$Variant;)V setVariant
	a (Lnet/minecraft/world/level/World;)Lnet/minecraft/world/entity/ai/navigation/NavigationAbstract; createNavigation
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/sounds/SoundEffect; getAmbient
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/Entity;)Z imitateNearbyMobs
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	aM ()V onFlap
	aN ()Z isFlapping
	a_ ()V defineSynchedData
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/world/entity/EntityTypes;)Lnet/minecraft/sounds/SoundEffect; getImitatedSound
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	b_ ()V aiStep
	bn ()Z isPushable
	c ()Ljava/lang/Object; getVariant
	c (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkParrotSpawnRules
	cF ()Lnet/minecraft/world/phys/Vec3D; getLeashOffset
	cX ()Lnet/minecraft/sounds/SoundCategory; getSoundSource
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	eO ()F getVoicePitch
	fY ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	fZ ()Z isPartyParrot
	ga ()Lnet/minecraft/world/entity/animal/EntityParrot$Variant; getVariant
	gc ()V calculateFlapping
	gf ()Z isFlying
	m (Lnet/minecraft/world/item/ItemStack;)Z isFood
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	x ()V registerGoals
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	y_ ()Z isBaby
	z (Lnet/minecraft/world/entity/Entity;)Z doHurtTarget
net/minecraft/world/entity/animal/EntityParrot$Variant net/minecraft/world/entity/animal/Parrot$Variant
	a RED_BLUE
	b BLUE
	c GREEN
	d YELLOW_BLUE
	e GRAY
	f CODEC
	g BY_ID
	h id
	i name
	j $VALUES
	a ()I getId
	a (I)Lnet/minecraft/world/entity/animal/EntityParrot$Variant; byId
	b ()[Lnet/minecraft/world/entity/animal/EntityParrot$Variant; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/entity/animal/EntityPerchable net/minecraft/world/entity/animal/ShoulderRidingEntity
	bV RIDE_COOLDOWN
	bW rideCooldownCounter
	b (Lnet/minecraft/server/level/EntityPlayer;)Z setEntityOnShoulder
	gb ()Z canSitOnShoulder
	l ()V tick
net/minecraft/world/entity/animal/EntityPig net/minecraft/world/entity/animal/Pig
	bS DATA_SADDLE_ID
	bT DATA_BOOST_TIME
	bV FOOD_ITEMS
	bW steering
	a ()Z boost
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLightning;)V thunderHit
	a (Lnet/minecraft/sounds/SoundCategory;)V equipSaddle
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/phys/Vec3D;)V tickRidden
	a_ ()V defineSynchedData
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/animal/EntityPig; getBreedOffspring
	b (Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/phys/Vec3D; getDismountLocationForPassenger
	b (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/phys/Vec3D; getRiddenInput
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	cF ()Lnet/minecraft/world/phys/Vec3D; getLeashOffset
	cK ()Lnet/minecraft/world/entity/EntityLiving; getControllingPassenger
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	er ()V dropEquipment
	g ()Z isSaddleable
	g (Lnet/minecraft/world/entity/EntityLiving;)F getRiddenSpeed
	i ()Z isSaddled
	m (Lnet/minecraft/world/item/ItemStack;)Z isFood
	q ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	x ()V registerGoals
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
net/minecraft/world/entity/animal/EntityPolarBear net/minecraft/world/entity/animal/PolarBear
	bS DATA_STANDING_ID
	bT STAND_ANIMATION_TICKS
	bV clientSideStandAnimationO
	bW clientSideStandAnimation
	bX warningSoundTicks
	bY PERSISTENT_ANGER_TIME
	bZ remainingPersistentAngerTime
	ca persistentAngerTarget
	C (F)F getStandingAnimationScale
	a ()I getRemainingPersistentAngerTime
	a (I)V setRemainingPersistentAngerTime
	a (Ljava/util/UUID;)V setPersistentAngerTarget
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/world/entity/EntityPose;)Lnet/minecraft/world/entity/EntitySize; getDimensions
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	a_ ()V defineSynchedData
	b ()Ljava/util/UUID; getPersistentAngerTarget
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	c ()V startPersistentAngerTimer
	c (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkPolarBearSpawnRules
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	eU ()F getWaterSlowDown
	l ()V tick
	m (Lnet/minecraft/world/item/ItemStack;)Z isFood
	q ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	r ()V playWarningSound
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w ()Z isStanding
	w (Z)V setStanding
	x ()V registerGoals
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	z (Lnet/minecraft/world/entity/Entity;)Z doHurtTarget
net/minecraft/world/entity/animal/EntityPufferFish net/minecraft/world/entity/animal/Pufferfish
	b STATE_SMALL
	bS inflateCounter
	bT deflateTimer
	bU SCARY_MOB
	bV targetingConditions
	c STATE_MID
	d STATE_FULL
	e PUFF_STATE
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/world/entity/EntityInsentient;)V touch
	a (Lnet/minecraft/world/entity/EntityPose;)Lnet/minecraft/world/entity/EntitySize; getDimensions
	a_ ()V defineSynchedData
	b ()Lnet/minecraft/world/item/ItemStack; getBucketItemStack
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b_ ()V aiStep
	b_ (Lnet/minecraft/world/entity/player/EntityHuman;)V playerTouch
	c (I)V setPuffState
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	fT ()Lnet/minecraft/sounds/SoundEffect; getFlopSound
	fU ()I getPuffState
	l ()V tick
	r (I)F getScale
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	x ()V registerGoals
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
net/minecraft/world/entity/animal/EntityRabbit net/minecraft/world/entity/animal/Rabbit
	bS STROLL_SPEED_MOD
	bT BREED_SPEED_MOD
	bV FOLLOW_SPEED_MOD
	bW FLEE_SPEED_MOD
	bX ATTACK_SPEED_MOD
	bY EVIL_ATTACK_POWER
	bZ EVIL_ARMOR_VALUE
	ca DATA_TYPE_ID
	cb KILLER_BUNNY
	cc MORE_CARROTS_DELAY
	cd jumpTicks
	ce jumpDuration
	cf wasOnGround
	cg jumpDelayTicks
	ch moreCarrotTicks
	C (F)F getJumpCompletion
	U ()V customServerAiStep
	a (Ljava/lang/Object;)V setVariant
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/world/entity/animal/EntityRabbit$Variant;)V setVariant
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/entity/animal/EntityRabbit$Variant; getRandomRabbitVariant
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	a_ ()V defineSynchedData
	b (B)V handleEntityEvent
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/animal/EntityRabbit; getBreedOffspring
	b_ ()V aiStep
	be ()Z canSpawnSprintParticle
	c ()Ljava/lang/Object; getVariant
	c (DD)V facePoint
	c (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkRabbitSpawnRules
	cF ()Lnet/minecraft/world/phys/Vec3D; getLeashOffset
	cX ()Lnet/minecraft/sounds/SoundCategory; getSoundSource
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	eQ ()F getJumpPower
	eS ()V jumpFromGround
	fS ()Lnet/minecraft/world/entity/animal/EntityRabbit$Variant; getVariant
	fY ()V enableJumpControl
	fZ ()V disableJumpControl
	ga ()V setLandingDelay
	gb ()V checkLandingDelay
	gc ()Z wantsMoreFood
	i (D)V setSpeedModifier
	l (Lnet/minecraft/world/item/ItemStack;)Z isTemptingItem
	m (Lnet/minecraft/world/item/ItemStack;)Z isFood
	q ()V startJumping
	r ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	r (Z)V setJumping
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w ()Lnet/minecraft/sounds/SoundEffect; getJumpSound
	x ()V registerGoals
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	z (Lnet/minecraft/world/entity/Entity;)Z doHurtTarget
net/minecraft/world/entity/animal/EntityRabbit$ControllerJumpRabbit net/minecraft/world/entity/animal/Rabbit$RabbitJumpControl
	b rabbit
	c canJump
	a (Z)V setCanJump
	b ()V tick
	c ()Z wantJump
	d ()Z canJump
net/minecraft/world/entity/animal/EntityRabbit$ControllerMoveRabbit net/minecraft/world/entity/animal/Rabbit$RabbitMoveControl
	l rabbit
	m nextJumpSpeed
	a ()V tick
	a (DDDD)V setWantedPosition
net/minecraft/world/entity/animal/EntityRabbit$GroupDataRabbit net/minecraft/world/entity/animal/Rabbit$RabbitGroupData
	a variant
net/minecraft/world/entity/animal/EntityRabbit$PathfinderGoalEatCarrots net/minecraft/world/entity/animal/Rabbit$RaidGardenGoal
	g rabbit
	h wantsToRaid
	i canRaid
	a ()Z canUse
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z isValidTarget
	b ()Z canContinueToUse
	e ()V tick
net/minecraft/world/entity/animal/EntityRabbit$PathfinderGoalKillerRabbitMeleeAttack net/minecraft/world/entity/animal/Rabbit$EvilRabbitAttackGoal
	a (Lnet/minecraft/world/entity/EntityLiving;)D getAttackReachSqr
net/minecraft/world/entity/animal/EntityRabbit$PathfinderGoalRabbitAvoidTarget net/minecraft/world/entity/animal/Rabbit$RabbitAvoidEntityGoal
	i rabbit
	a ()Z canUse
net/minecraft/world/entity/animal/EntityRabbit$PathfinderGoalRabbitPanic net/minecraft/world/entity/animal/Rabbit$RabbitPanicGoal
	h rabbit
	e ()V tick
net/minecraft/world/entity/animal/EntityRabbit$Variant net/minecraft/world/entity/animal/Rabbit$Variant
	a BROWN
	b WHITE
	c BLACK
	d WHITE_SPLOTCHED
	e GOLD
	f SALT
	g EVIL
	h CODEC
	i BY_ID
	j id
	k name
	l $VALUES
	a ()I id
	a (I)Lnet/minecraft/world/entity/animal/EntityRabbit$Variant; byId
	b ()[Lnet/minecraft/world/entity/animal/EntityRabbit$Variant; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/entity/animal/EntitySalmon net/minecraft/world/entity/animal/Salmon
	b ()Lnet/minecraft/world/item/ItemStack; getBucketItemStack
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	fT ()Lnet/minecraft/sounds/SoundEffect; getFlopSound
	fU ()I getMaxSchoolSize
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
net/minecraft/world/entity/animal/EntitySheep net/minecraft/world/entity/animal/Sheep
	bS EAT_ANIMATION_TICKS
	bT DATA_WOOL_ID
	bV ITEM_BY_DYE
	bW COLORARRAY_BY_COLOR
	bX eatAnimationTick
	bY eatBlockGoal
	C (F)F getHeadEatPositionScale
	D (F)F getHeadEatAngleScale
	J ()V ate
	O ()Lnet/minecraft/resources/MinecraftKey; getDefaultLootTable
	U ()V customServerAiStep
	a ()Z readyForShearing
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/sounds/SoundCategory;)V shear
	a (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/EnumColor; getRandomSheepColor
	a (Lnet/minecraft/world/entity/animal/EntityAnimal;Lnet/minecraft/world/entity/animal/EntityAnimal;)Lnet/minecraft/world/item/EnumColor; getOffspringColor
	a (Lnet/minecraft/world/item/EnumColor;)[F getColorArray
	a (Lnet/minecraft/world/item/EnumColor;Lnet/minecraft/world/item/EnumColor;)Lnet/minecraft/world/inventory/InventoryCrafting; makeContainer
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	a_ ()V defineSynchedData
	b (B)V handleEntityEvent
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/animal/EntitySheep; getBreedOffspring
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	b (Lnet/minecraft/world/item/EnumColor;)V setColor
	b_ ()V aiStep
	c (Lnet/minecraft/world/item/EnumColor;)[F createSheepColor
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	q ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	r ()Lnet/minecraft/world/item/EnumColor; getColor
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w ()Z isSheared
	w (Z)V setSheared
	x ()V registerGoals
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
net/minecraft/world/entity/animal/EntitySnowman net/minecraft/world/entity/animal/SnowGolem
	b DATA_PUMPKIN_ID
	c PUMPKIN_FLAG
	d EYE_HEIGHT
	a ()Z readyForShearing
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/sounds/SoundCategory;)V shear
	a (Lnet/minecraft/world/entity/EntityLiving;F)V performRangedAttack
	a_ ()V defineSynchedData
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	b_ ()V aiStep
	cF ()Lnet/minecraft/world/phys/Vec3D; getLeashOffset
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	eX ()Z isSensitiveToWater
	q ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	r ()Z hasPumpkin
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w (Z)V setPumpkin
	x ()V registerGoals
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
net/minecraft/world/entity/animal/EntitySquid net/minecraft/world/entity/animal/Squid
	b xBodyRot
	bS tentacleMovement
	bT oldTentacleMovement
	bU tentacleAngle
	bV oldTentacleAngle
	bW speed
	bX tentacleSpeed
	bY rotateSpeed
	bZ tx
	c xBodyRotO
	ca ty
	cb tz
	d zBodyRot
	e zBodyRotO
	a (FFF)V setMovementVector
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z canBeLeashed
	aQ ()Lnet/minecraft/world/entity/Entity$MovementEmission; getMovementEmission
	b (B)V handleEntityEvent
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b_ ()V aiStep
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	eN ()F getSoundVolume
	fS ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	fT ()Z hasMovementVector
	h (Lnet/minecraft/world/phys/Vec3D;)V travel
	j (Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/phys/Vec3D; rotateVector
	q ()Lnet/minecraft/core/particles/ParticleParam; getInkParticle
	r ()Lnet/minecraft/sounds/SoundEffect; getSquirtSound
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w ()V spawnInk
	x ()V registerGoals
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
net/minecraft/world/entity/animal/EntitySquid$PathfinderGoalSquid net/minecraft/world/entity/animal/Squid$SquidRandomMovementGoal
	b squid
	a ()Z canUse
	e ()V tick
net/minecraft/world/entity/animal/EntityTropicalFish net/minecraft/world/entity/animal/TropicalFish
	b BUCKET_VARIANT_TAG
	c COMMON_VARIANTS
	d DATA_ID_TYPE_VARIANT
	e isSchool
	a (Ljava/lang/Object;)V setVariant
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/entity/animal/EntityTropicalFish$Variant;)V setVariant
	a (Lnet/minecraft/world/entity/animal/EntityTropicalFish$Variant;Lnet/minecraft/world/item/EnumColor;Lnet/minecraft/world/item/EnumColor;)I packVariant
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	a_ ()V defineSynchedData
	b ()Lnet/minecraft/world/item/ItemStack; getBucketItemStack
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkTropicalFishSpawnRules
	c ()Ljava/lang/Object; getVariant
	c (I)Ljava/lang/String; getPredefinedName
	d (I)Z isMaxGroupSizeReached
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	fT ()Lnet/minecraft/sounds/SoundEffect; getFlopSound
	gb ()Lnet/minecraft/world/item/EnumColor; getBaseColor
	gc ()Lnet/minecraft/world/item/EnumColor; getPatternColor
	gd ()Lnet/minecraft/world/entity/animal/EntityTropicalFish$Variant; getVariant
	ge ()I getPackedVariant
	l (Lnet/minecraft/world/item/ItemStack;)V saveToBucketTag
	r (I)Lnet/minecraft/world/item/EnumColor; getBaseColor
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	s (I)Lnet/minecraft/world/item/EnumColor; getPatternColor
	t (I)Lnet/minecraft/world/entity/animal/EntityTropicalFish$Variant; getPattern
	u (I)V setPackedVariant
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
net/minecraft/world/entity/animal/EntityTropicalFish$Base net/minecraft/world/entity/animal/TropicalFish$Base
	a SMALL
	b LARGE
	c id
	d $VALUES
	a ()[Lnet/minecraft/world/entity/animal/EntityTropicalFish$Base; $values
net/minecraft/world/entity/animal/EntityTropicalFish$Variant net/minecraft/world/entity/animal/TropicalFish$Pattern
	a KOB
	b SUNSTREAK
	c SNOOPER
	d DASHER
	e BRINELY
	f SPOTTY
	g FLOPPER
	h STRIPEY
	i GLITTER
	j BLOCKFISH
	k BETTY
	l CLAYFISH
	m CODEC
	n BY_ID
	o name
	p displayName
	q base
	r packedId
	s $VALUES
	a ()Lnet/minecraft/world/entity/animal/EntityTropicalFish$Base; base
	a (I)Lnet/minecraft/world/entity/animal/EntityTropicalFish$Variant; byId
	b ()I getPackedId
	c ()Ljava/lang/String; getSerializedName
	d ()Lnet/minecraft/network/chat/IChatBaseComponent; displayName
	e ()[Lnet/minecraft/world/entity/animal/EntityTropicalFish$Variant; $values
net/minecraft/world/entity/animal/EntityTurtle net/minecraft/world/entity/animal/Turtle
	bS FOOD_ITEMS
	bT BABY_ON_LAND_SELECTOR
	bV HOME_POS
	bW HAS_EGG
	bX LAYING_EGG
	bY TRAVEL_POS
	bZ GOING_HOME
	ca TRAVELLING
	cb layEggCounter
	K ()I getAmbientSoundInterval
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/IWorldReader;)F getWalkTargetValue
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLightning;)V thunderHit
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z canBeLeashed
	a (Lnet/minecraft/world/level/World;)Lnet/minecraft/world/entity/ai/navigation/NavigationAbstract; createNavigation
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	aH ()F nextStep
	aI ()Lnet/minecraft/sounds/SoundEffect; getSwimSound
	a_ ()V defineSynchedData
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b_ ()V aiStep
	c (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkTurtleSpawnRules
	cv ()Z isPushedByFluid
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	dK ()Z canBreatheUnderwater
	dS ()F getScale
	eJ ()Lnet/minecraft/world/entity/EnumMonsterType; getMobType
	fS ()Lnet/minecraft/core/BlockPosition; getHomePos
	fT ()Z canFallInLove
	fY ()Lnet/minecraft/core/BlockPosition; getTravelPos
	fZ ()Z isGoingHome
	g (Lnet/minecraft/core/BlockPosition;)V setHomePos
	ga ()Z isTravelling
	h (Lnet/minecraft/core/BlockPosition;)V setTravelPos
	h (Lnet/minecraft/world/phys/Vec3D;)V travel
	i (F)V playSwimSound
	m ()V ageBoundaryReached
	m (Lnet/minecraft/world/item/ItemStack;)Z isFood
	q ()Z hasEgg
	r ()Z isLayingEgg
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	w (Z)V setHasEgg
	x ()V registerGoals
	x (Z)V setLayingEgg
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	y (Z)V setGoingHome
	z (Z)V setTravelling
net/minecraft/world/entity/animal/EntityWaterAnimal net/minecraft/world/entity/animal/WaterAnimal
	K ()I getAmbientSoundInterval
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z canBeLeashed
	a (Lnet/minecraft/world/level/IWorldReader;)Z checkSpawnObstruction
	ao ()V baseTick
	b (I)V handleAirSupply
	c (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkSurfaceWaterAnimalSpawnRules
	cv ()Z isPushedByFluid
	dK ()Z canBreatheUnderwater
	dX ()I getExperienceReward
	eJ ()Lnet/minecraft/world/entity/EnumMonsterType; getMobType
net/minecraft/world/entity/animal/EntityWolf net/minecraft/world/entity/animal/Wolf
	bV PREY_SELECTOR
	bW DATA_INTERESTED_ID
	bX DATA_COLLAR_COLOR
	bY DATA_REMAINING_ANGER_TIME
	bZ START_HEALTH
	ca TAME_HEALTH
	cb interestedAngle
	cc interestedAngleO
	cd isWet
	ce isShaking
	cf shakeAnim
	cg shakeAnimO
	ch PERSISTENT_ANGER_TIME
	ci persistentAngerTarget
	A (Z)V setIsInterested
	C (F)F getWetShade
	D (F)F getHeadRollAngle
	V ()I getMaxHeadXRot
	a ()I getRemainingPersistentAngerTime
	a (I)V setRemainingPersistentAngerTime
	a (Ljava/util/UUID;)V setPersistentAngerTarget
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/world/damagesource/DamageSource;)V die
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityLiving;)Z wantsToAttack
	a (Lnet/minecraft/world/entity/animal/EntityAnimal;)Z canMate
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z canBeLeashed
	a (Lnet/minecraft/world/item/EnumColor;)V setCollarColor
	a_ ()V defineSynchedData
	b ()Ljava/util/UUID; getPersistentAngerTarget
	b (B)V handleEntityEvent
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/animal/EntityWolf; getBreedOffspring
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	b_ ()V aiStep
	c ()V startPersistentAngerTimer
	c (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkWolfSpawnRules
	cF ()Lnet/minecraft/world/phys/Vec3D; getLeashOffset
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	eN ()F getSoundVolume
	f (FF)F getBodyRollAngle
	fY ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	fZ ()Z isWet
	fy ()I getMaxSpawnClusterSize
	ga ()F getTailAngle
	gb ()Lnet/minecraft/world/item/EnumColor; getCollarColor
	gc ()Z isInterested
	gd ()V cancelShake
	l ()V tick
	m (Lnet/minecraft/world/item/ItemStack;)Z isFood
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	x ()V registerGoals
	x (Z)V setTame
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	z (Lnet/minecraft/world/entity/Entity;)Z doHurtTarget
net/minecraft/world/entity/animal/horse/EntityHorse net/minecraft/world/entity/animal/horse/Horse
	bS ARMOR_MODIFIER_UUID
	bT DATA_ID_TYPE_VARIANT
	a (Ljava/lang/Object;)V setVariant
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/util/RandomSource;)V randomizeAttributes
	a (Lnet/minecraft/world/IInventory;)V containerChanged
	a (Lnet/minecraft/world/entity/animal/EntityAnimal;)Z canMate
	a (Lnet/minecraft/world/entity/animal/horse/HorseColor;)V setVariant
	a (Lnet/minecraft/world/entity/animal/horse/HorseColor;Lnet/minecraft/world/entity/animal/horse/HorseStyle;)V setVariantAndMarkings
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/world/level/block/SoundEffectType;)V playGallopSound
	a_ ()V defineSynchedData
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	c ()Ljava/lang/Object; getVariant
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	fS ()Lnet/minecraft/world/entity/animal/horse/HorseStyle; getMarkings
	fZ ()Lnet/minecraft/sounds/SoundEffect; getEatingSound
	gB ()Z canWearArmor
	ga ()I getTypeVariant
	gp ()V updateContainerEquipment
	gr ()Lnet/minecraft/sounds/SoundEffect; getAngrySound
	l (Lnet/minecraft/world/item/ItemStack;)Z isArmor
	n (Lnet/minecraft/world/item/ItemStack;)V setArmor
	o (Lnet/minecraft/world/item/ItemStack;)V setArmorEquipment
	q ()Lnet/minecraft/world/item/ItemStack; getArmor
	r ()Lnet/minecraft/world/entity/animal/horse/HorseColor; getVariant
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	v (I)V setTypeVariant
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
net/minecraft/world/entity/animal/horse/EntityHorseAbstract net/minecraft/world/entity/animal/horse/AbstractHorse
	bS MIN_MOVEMENT_SPEED
	bT MAX_MOVEMENT_SPEED
	bV MIN_JUMP_STRENGTH
	bW MAX_JUMP_STRENGTH
	bX MIN_HEALTH
	bY MAX_HEALTH
	bZ BACKWARDS_MOVE_SPEED_FACTOR
	cA FLAG_OPEN_MOUTH
	cB eatingCounter
	cC mouthCounter
	cD standCounter
	cE eatAnim
	cF eatAnimO
	cG standAnim
	cH standAnimO
	cI mouthAnim
	cJ mouthAnimO
	cK owner
	ca SIDEWAYS_MOVE_SPEED_FACTOR
	cb PARENT_HORSE_SELECTOR
	cc MOMMY_TARGETING
	cd EQUIPMENT_SLOT_OFFSET
	ce CHEST_SLOT_OFFSET
	cf INVENTORY_SLOT_OFFSET
	cg BREEDING_CROSS_FACTOR
	ch INV_SLOT_SADDLE
	ci INV_SLOT_ARMOR
	cj INV_BASE_COUNT
	ck tailCounter
	cl sprintCounter
	cm isJumping
	cn inventory
	co temper
	cp playerJumpPendingScale
	cq allowStandSliding
	cr canGallop
	cs gallopSoundCounter
	ct FOOD_ITEMS
	cu DATA_ID_FLAGS
	cv FLAG_TAME
	cw FLAG_SADDLE
	cx FLAG_BRED
	cy FLAG_EATING
	cz FLAG_STANDING
	A (Z)V setEating
	B (F)V onLeashDistance
	B (Z)V setStanding
	C (F)F getEatAnim
	C (Z)V spawnTamingParticles
	D (F)F getStandAnim
	E (F)F getMouthAnim
	K ()I getAmbientSoundInterval
	T_ ()Ljava/util/UUID; getOwnerUUID
	U_ ()I getInventorySize
	a ()Z canJump
	a (DDDDLnet/minecraft/util/RandomSource;)D createOffspringAttribute
	a (FFLnet/minecraft/world/damagesource/DamageSource;)Z causeFallDamage
	a (ILjava/util/function/Predicate;)Lnet/minecraft/world/entity/SlotAccess; createEquipmentSlotAccess
	a (Ljava/util/function/DoubleSupplier;)D generateJumpStrength
	a (Ljava/util/function/IntUnaryOperator;)F generateMaxHealth
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/sounds/SoundCategory;)V equipSaddle
	a (Lnet/minecraft/util/RandomSource;)V randomizeAttributes
	a (Lnet/minecraft/world/IInventory;)V containerChanged
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/entity/EntityAgeable;Lnet/minecraft/world/entity/animal/horse/EntityHorseAbstract;)V setOffspringAttributes
	a (Lnet/minecraft/world/entity/EntityAgeable;Lnet/minecraft/world/entity/animal/horse/EntityHorseAbstract;Lnet/minecraft/world/entity/ai/attributes/AttributeBase;DD)V setOffspringAttribute
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/phys/Vec3D;)V tickRidden
	a (Lnet/minecraft/world/entity/animal/EntityAnimal;)Z canMate
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/item/ItemStack;)Z handleEating
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/world/level/block/SoundEffectType;)V playGallopSound
	a (Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/phys/Vec3D; getDismountLocationInDirection
	a_ ()V defineSynchedData
	a_ (I)Lnet/minecraft/world/entity/SlotAccess; getSlot
	b ()V handleStopJump
	b (B)V handleEntityEvent
	b (FLnet/minecraft/world/phys/Vec3D;)V executeRidersJump
	b (I)V onPlayerJump
	b (Ljava/util/UUID;)V setOwnerUUID
	b (Ljava/util/function/DoubleSupplier;)D generateSpeed
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/IInventory;)Z hasInventoryChanged
	b (Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/phys/Vec3D; getDismountLocationForPassenger
	b (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/phys/Vec3D; getRiddenInput
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/world/entity/player/EntityHuman;)V openCustomInventoryScreen
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/item/ItemStack;)V equipArmor
	b_ ()V aiStep
	bn ()Z isPushable
	c (I)V handleStartJump
	c (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/EnumInteractionResult; fedFood
	cK ()Lnet/minecraft/world/entity/EntityLiving; getControllingPassenger
	d (FF)I calculateFallDamage
	d (IZ)V setFlag
	e ()Lnet/minecraft/world/level/IEntityAccess; getLevel
	e (Lnet/minecraft/world/entity/player/EntityHuman;)V doPlayerRide
	eN ()F getSoundVolume
	eP ()Z isImmobile
	er ()V dropEquipment
	fS ()V openMouth
	fY ()Z canPerformRearing
	fZ ()Lnet/minecraft/sounds/SoundEffect; getEatingSound
	fy ()I getMaxSpawnClusterSize
	g ()Z isSaddleable
	g (Lnet/minecraft/world/entity/EntityLiving;)F getRiddenSpeed
	g (Lnet/minecraft/world/entity/player/EntityHuman;)Z tameWithName
	gA ()Z canParent
	gB ()Z canWearArmor
	gC ()Z isWearingArmor
	gD ()I getAmbientStandInterval
	gh ()Z isTamed
	gi ()V addBehaviourGoals
	gj ()Z isJumping
	gk ()Z isEating
	gl ()Z isStanding
	gm ()Z isBred
	gn ()I getTemper
	go ()V createInventory
	gp ()V updateContainerEquipment
	gq ()D getCustomJump
	gr ()Lnet/minecraft/sounds/SoundEffect; getAngrySound
	gs ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createBaseHorseAttributes
	gt ()I getMaxTemper
	gu ()V followMommy
	gv ()Z canEatGrass
	gw ()Lnet/minecraft/sounds/SoundEffect; getAmbientStandSound
	gx ()V standIfPossible
	gy ()V makeMad
	gz ()V playJumpSound
	i ()Z isSaddled
	i (Lnet/minecraft/world/entity/Entity;)V positionRider
	l ()V tick
	l (Lnet/minecraft/world/item/ItemStack;)Z isArmor
	m (Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/phys/Vec2F; getRiddenRotation
	m (Lnet/minecraft/world/item/ItemStack;)Z isFood
	q ()V eating
	r ()V moveTail
	s (I)Z getFlag
	t (I)V setTemper
	u (I)I modifyTemper
	x ()V registerGoals
	x (Z)V setTamed
	y (Z)V setIsJumping
	z (Z)V setBred
	z_ ()Z onClimbable
net/minecraft/world/entity/animal/horse/EntityHorseChestedAbstract net/minecraft/world/entity/animal/horse/AbstractChestedHorse
	bS INV_CHEST_COUNT
	bT DATA_ID_CHEST
	U_ ()I getInventorySize
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/util/RandomSource;)V randomizeAttributes
	a_ ()V defineSynchedData
	a_ (I)Lnet/minecraft/world/entity/SlotAccess; getSlot
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	bv ()D getPassengersRidingOffset
	d (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/item/ItemStack;)V equipChest
	er ()V dropEquipment
	fS ()V playChestEquipsSound
	ga ()I getInventoryColumns
	q ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createBaseChestedHorseAttributes
	r ()Z hasChest
	w (Z)V setChest
net/minecraft/world/entity/animal/horse/EntityHorseDonkey net/minecraft/world/entity/animal/horse/Donkey
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/world/entity/animal/EntityAnimal;)Z canMate
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	fZ ()Lnet/minecraft/sounds/SoundEffect; getEatingSound
	gr ()Lnet/minecraft/sounds/SoundEffect; getAngrySound
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
net/minecraft/world/entity/animal/horse/EntityHorseMule net/minecraft/world/entity/animal/horse/Mule
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	fS ()V playChestEquipsSound
	fZ ()Lnet/minecraft/sounds/SoundEffect; getEatingSound
	gr ()Lnet/minecraft/sounds/SoundEffect; getAngrySound
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
net/minecraft/world/entity/animal/horse/EntityHorseSkeleton net/minecraft/world/entity/animal/horse/SkeletonHorse
	bS skeletonTrapGoal
	bT TRAP_MAX_LIFE
	bV isTrap
	bW trapTime
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/util/RandomSource;)V randomizeAttributes
	aI ()Lnet/minecraft/sounds/SoundEffect; getSwimSound
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	b_ ()V aiStep
	bv ()D getPassengersRidingOffset
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	eJ ()Lnet/minecraft/world/entity/EnumMonsterType; getMobType
	eU ()F getWaterSlowDown
	gi ()V addBehaviourGoals
	gz ()V playJumpSound
	i (F)V playSwimSound
	q ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	r ()Z isTrap
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w (Z)V setTrap
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
net/minecraft/world/entity/animal/horse/EntityHorseZombie net/minecraft/world/entity/animal/horse/ZombieHorse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/util/RandomSource;)V randomizeAttributes
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	eJ ()Lnet/minecraft/world/entity/EnumMonsterType; getMobType
	gi ()V addBehaviourGoals
	q ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
net/minecraft/world/entity/animal/horse/EntityLlama net/minecraft/world/entity/animal/horse/Llama
	bT MAX_STRENGTH
	bV FOOD_ITEMS
	bW DATA_STRENGTH_ID
	bX DATA_SWAG_ID
	bY DATA_VARIANT_ID
	bZ didSpit
	ca caravanHead
	cb caravanTail
	D (Z)V setDidSpit
	U_ ()I getInventorySize
	a (FFLnet/minecraft/world/damagesource/DamageSource;)Z causeFallDamage
	a (Ljava/lang/Object;)V setVariant
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/world/IInventory;)V containerChanged
	a (Lnet/minecraft/world/entity/EntityLiving;F)V performRangedAttack
	a (Lnet/minecraft/world/entity/animal/EntityAnimal;)Z canMate
	a (Lnet/minecraft/world/entity/animal/horse/EntityLlama$Variant;)V setVariant
	a (Lnet/minecraft/world/entity/animal/horse/EntityLlama;)V joinCaravan
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/item/ItemStack;)Z handleEating
	a (Lnet/minecraft/world/item/EnumColor;)V setSwag
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	a_ ()V defineSynchedData
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/animal/horse/EntityLlama; getBreedOffspring
	b (Lnet/minecraft/util/RandomSource;)V setRandomStrength
	bv ()D getPassengersRidingOffset
	c ()Ljava/lang/Object; getVariant
	cF ()Lnet/minecraft/world/phys/Vec3D; getLeashOffset
	cK ()Lnet/minecraft/world/entity/EntityLiving; getControllingPassenger
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	eP ()Z isImmobile
	fR ()D followLeashSpeed
	fS ()V playChestEquipsSound
	fY ()Z canPerformRearing
	fZ ()Lnet/minecraft/sounds/SoundEffect; getEatingSound
	g ()Z isSaddleable
	gB ()Z canWearArmor
	gC ()Z isWearingArmor
	gE ()V leaveCaravan
	gF ()Z hasCaravanTail
	gG ()Z inCaravan
	gH ()Lnet/minecraft/world/entity/animal/horse/EntityLlama; getCaravanHead
	ga ()I getInventoryColumns
	gb ()Z isTraderLlama
	gc ()I getStrength
	gd ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	ge ()Lnet/minecraft/world/entity/animal/horse/EntityLlama$Variant; getVariant
	gf ()Lnet/minecraft/world/item/EnumColor; getSwag
	gg ()Lnet/minecraft/world/entity/animal/horse/EntityLlama; makeNewLlama
	gp ()V updateContainerEquipment
	gr ()Lnet/minecraft/sounds/SoundEffect; getAngrySound
	gt ()I getMaxTemper
	gu ()V followMommy
	gv ()Z canEatGrass
	i (Lnet/minecraft/world/entity/Entity;)V positionRider
	l (Lnet/minecraft/world/item/ItemStack;)Z isArmor
	m (Lnet/minecraft/world/item/ItemStack;)Z isFood
	n (Lnet/minecraft/world/entity/EntityLiving;)V spit
	n (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/EnumColor; getDyeColor
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	v (I)V setStrength
	x ()V registerGoals
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
net/minecraft/world/entity/animal/horse/EntityLlama$Variant net/minecraft/world/entity/animal/horse/Llama$Variant
	a CREAMY
	b WHITE
	c BROWN
	d GRAY
	e CODEC
	f BY_ID
	g id
	h name
	i $VALUES
	a ()I getId
	a (I)Lnet/minecraft/world/entity/animal/horse/EntityLlama$Variant; byId
	b ()[Lnet/minecraft/world/entity/animal/horse/EntityLlama$Variant; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/entity/animal/horse/EntityLlamaTrader net/minecraft/world/entity/animal/horse/TraderLlama
	bT despawnDelay
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b_ ()V aiStep
	e (Lnet/minecraft/world/entity/player/EntityHuman;)V doPlayerRide
	gI ()V maybeDespawn
	gJ ()Z canDespawn
	gK ()Z isLeashedToWanderingTrader
	gL ()Z isLeashedToSomethingOtherThanTheWanderingTrader
	gb ()Z isTraderLlama
	gg ()Lnet/minecraft/world/entity/animal/horse/EntityLlama; makeNewLlama
	v (I)V setDespawnDelay
	x ()V registerGoals
net/minecraft/world/entity/animal/horse/HorseColor net/minecraft/world/entity/animal/horse/Variant
	a WHITE
	b CREAMY
	c CHESTNUT
	d BROWN
	e BLACK
	f GRAY
	g DARK_BROWN
	h CODEC
	i BY_ID
	j id
	k name
	l $VALUES
	a ()I getId
	a (I)Lnet/minecraft/world/entity/animal/horse/HorseColor; byId
	b ()[Lnet/minecraft/world/entity/animal/horse/HorseColor; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/entity/animal/horse/HorseStyle net/minecraft/world/entity/animal/horse/Markings
	a NONE
	b WHITE
	c WHITE_FIELD
	d WHITE_DOTS
	e BLACK_DOTS
	f BY_ID
	g id
	h $VALUES
	a ()I getId
	a (I)Lnet/minecraft/world/entity/animal/horse/HorseStyle; byId
	b ()[Lnet/minecraft/world/entity/animal/horse/HorseStyle; $values
net/minecraft/world/entity/animal/horse/PathfinderGoalHorseTrap net/minecraft/world/entity/animal/horse/SkeletonTrapGoal
	a horse
	a ()Z canUse
	a (Lnet/minecraft/world/DifficultyDamageScaler;)Lnet/minecraft/world/entity/animal/horse/EntityHorseAbstract; createHorse
	a (Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/animal/horse/EntityHorseAbstract;)Lnet/minecraft/world/entity/monster/EntitySkeleton; createSkeleton
	a (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; disenchant
	e ()V tick
net/minecraft/world/entity/boss/EntityComplexPart net/minecraft/world/entity/boss/EnderDragonPart
	b parentMob
	c name
	d size
	S ()Lnet/minecraft/network/protocol/Packet; getAddEntityPacket
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/entity/EntityPose;)Lnet/minecraft/world/entity/EntitySize; getDimensions
	a_ ()V defineSynchedData
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	bm ()Z isPickable
	dE ()Z shouldBeSaved
	dt ()Lnet/minecraft/world/item/ItemStack; getPickResult
	q (Lnet/minecraft/world/entity/Entity;)Z is
net/minecraft/world/entity/boss/enderdragon/EntityEnderCrystal net/minecraft/world/entity/boss/enderdragon/EndCrystal
	b time
	c DATA_BEAM_TARGET
	d DATA_SHOW_BOTTOM
	a (D)Z shouldRenderAtSqrDistance
	a (Lnet/minecraft/core/BlockPosition;)V setBeamTarget
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/damagesource/DamageSource;)V onDestroyedBy
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Z)V setShowBottom
	aQ ()Lnet/minecraft/world/entity/Entity$MovementEmission; getMovementEmission
	a_ ()V defineSynchedData
	ah ()V kill
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	bm ()Z isPickable
	dt ()Lnet/minecraft/world/item/ItemStack; getPickResult
	i ()Lnet/minecraft/core/BlockPosition; getBeamTarget
	j ()Z showsBottom
	l ()V tick
net/minecraft/world/entity/boss/enderdragon/EntityEnderDragon net/minecraft/world/entity/boss/enderdragon/EnderDragon
	b DATA_PHASE
	bR oFlapTime
	bS flapTime
	bT inWall
	bU dragonDeathTime
	bV yRotA
	bW nearestCrystal
	bX LOGGER
	bY CRYSTAL_DESTROY_TARGETING
	bZ GROWL_INTERVAL_MIN
	c positions
	ca GROWL_INTERVAL_MAX
	cb SITTING_ALLOWED_DAMAGE_PERCENTAGE
	cc DRAGON_DEATH_TIME_KEY
	cd DRAGON_PHASE_KEY
	ce subEntities
	cf neck
	cg body
	ch tail1
	ci tail2
	cj tail3
	ck wing1
	cl wing2
	cm dragonFight
	cn phaseManager
	co growlTime
	cp sittingDamageReceived
	cq nodes
	cr nodeAdjacency
	cs openSet
	d posPointer
	e head
	B (F)Lnet/minecraft/world/phys/Vec3D; getHeadLookVector
	a (IF)[D getLatencyPos
	a (IILnet/minecraft/world/level/pathfinder/PathPoint;)Lnet/minecraft/world/level/pathfinder/PathEntity; findPath
	a (I[D[D)F getHeadPartYOffset
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutSpawnEntity;)V recreateFromPacket
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/entity/boss/EntityComplexPart;DDD)V tickPart
	a (Lnet/minecraft/world/entity/boss/EntityComplexPart;Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/entity/boss/enderdragon/EntityEnderCrystal;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/damagesource/DamageSource;)V onCrystalDestroyed
	a (Lnet/minecraft/world/level/pathfinder/PathPoint;Lnet/minecraft/world/level/pathfinder/PathPoint;)Lnet/minecraft/world/level/pathfinder/PathEntity; reconstructPath
	aM ()V onFlap
	aN ()Z isFlapping
	a_ ()V defineSynchedData
	ah ()V kill
	b (Ljava/util/List;)V knockBack
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/effect/MobEffect;Lnet/minecraft/world/entity/Entity;)Z addEffect
	b (Lnet/minecraft/world/phys/AxisAlignedBB;)Z checkWalls
	b_ ()V aiStep
	bm ()Z isPickable
	bv ()D getPassengersRidingOffset
	c (Ljava/util/List;)V hurt
	c (Lnet/minecraft/world/entity/EntityLiving;)Z canAttack
	cX ()Lnet/minecraft/sounds/SoundCategory; getSoundSource
	co ()Z canChangeDimensions
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	dU ()V tickDeath
	ds ()V checkDespawn
	eN ()F getSoundVolume
	fP ()Lnet/minecraft/world/entity/boss/enderdragon/phases/DragonControllerManager; getPhaseManager
	fQ ()Lnet/minecraft/world/level/dimension/end/EnderDragonBattle; getDragonFight
	fR ()F getHeadYOffset
	fS ()V checkCrystals
	g (Lnet/minecraft/world/damagesource/DamageSource;F)Z reallyHurt
	i (D)F rotWrap
	l (Lnet/minecraft/world/entity/Entity;)Z canRide
	q ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	r ()I findClosestNode
	r (DDD)I findClosestNode
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w ()[Lnet/minecraft/world/entity/boss/EntityComplexPart; getSubEntities
net/minecraft/world/entity/boss/enderdragon/phases/AbstractDragonController net/minecraft/world/entity/boss/enderdragon/phases/AbstractDragonPhaseInstance
	a dragon
	a ()Z isSitting
	a (Lnet/minecraft/world/damagesource/DamageSource;F)F onHurt
	a (Lnet/minecraft/world/entity/boss/enderdragon/EntityEnderCrystal;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/entity/player/EntityHuman;)V onCrystalDestroyed
	b ()V doClientTick
	c ()V doServerTick
	d ()V begin
	e ()V end
	f ()F getFlySpeed
	g ()Lnet/minecraft/world/phys/Vec3D; getFlyTargetLocation
	h ()F getTurnSpeed
net/minecraft/world/entity/boss/enderdragon/phases/AbstractDragonControllerLanded net/minecraft/world/entity/boss/enderdragon/phases/AbstractDragonSittingPhase
	a ()Z isSitting
	a (Lnet/minecraft/world/damagesource/DamageSource;F)F onHurt
net/minecraft/world/entity/boss/enderdragon/phases/DragonControllerCharge net/minecraft/world/entity/boss/enderdragon/phases/DragonChargePlayerPhase
	b LOGGER
	c CHARGE_RECOVERY_TIME
	d targetLocation
	e timeSinceCharge
	a (Lnet/minecraft/world/phys/Vec3D;)V setTarget
	c ()V doServerTick
	d ()V begin
	f ()F getFlySpeed
	g ()Lnet/minecraft/world/phys/Vec3D; getFlyTargetLocation
	i ()Lnet/minecraft/world/entity/boss/enderdragon/phases/DragonControllerPhase; getPhase
net/minecraft/world/entity/boss/enderdragon/phases/DragonControllerDying net/minecraft/world/entity/boss/enderdragon/phases/DragonDeathPhase
	b targetLocation
	c time
	b ()V doClientTick
	c ()V doServerTick
	d ()V begin
	f ()F getFlySpeed
	g ()Lnet/minecraft/world/phys/Vec3D; getFlyTargetLocation
	i ()Lnet/minecraft/world/entity/boss/enderdragon/phases/DragonControllerPhase; getPhase
net/minecraft/world/entity/boss/enderdragon/phases/DragonControllerFly net/minecraft/world/entity/boss/enderdragon/phases/DragonTakeoffPhase
	b firstTick
	c currentPath
	d targetLocation
	c ()V doServerTick
	d ()V begin
	g ()Lnet/minecraft/world/phys/Vec3D; getFlyTargetLocation
	i ()Lnet/minecraft/world/entity/boss/enderdragon/phases/DragonControllerPhase; getPhase
	j ()V findNewTarget
	k ()V navigateToNextPathNode
net/minecraft/world/entity/boss/enderdragon/phases/DragonControllerHold net/minecraft/world/entity/boss/enderdragon/phases/DragonHoldingPatternPhase
	b NEW_TARGET_TARGETING
	c currentPath
	d targetLocation
	e clockwise
	a (Lnet/minecraft/world/entity/boss/enderdragon/EntityEnderCrystal;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/entity/player/EntityHuman;)V onCrystalDestroyed
	a (Lnet/minecraft/world/entity/player/EntityHuman;)V strafePlayer
	c ()V doServerTick
	d ()V begin
	g ()Lnet/minecraft/world/phys/Vec3D; getFlyTargetLocation
	i ()Lnet/minecraft/world/entity/boss/enderdragon/phases/DragonControllerPhase; getPhase
	j ()V findNewTarget
	k ()V navigateToNextPathNode
net/minecraft/world/entity/boss/enderdragon/phases/DragonControllerHover net/minecraft/world/entity/boss/enderdragon/phases/DragonHoverPhase
	b targetLocation
	a ()Z isSitting
	c ()V doServerTick
	d ()V begin
	f ()F getFlySpeed
	g ()Lnet/minecraft/world/phys/Vec3D; getFlyTargetLocation
	i ()Lnet/minecraft/world/entity/boss/enderdragon/phases/DragonControllerPhase; getPhase
net/minecraft/world/entity/boss/enderdragon/phases/DragonControllerLandedAttack net/minecraft/world/entity/boss/enderdragon/phases/DragonSittingAttackingPhase
	b ROAR_DURATION
	c attackingTicks
	b ()V doClientTick
	c ()V doServerTick
	d ()V begin
	i ()Lnet/minecraft/world/entity/boss/enderdragon/phases/DragonControllerPhase; getPhase
net/minecraft/world/entity/boss/enderdragon/phases/DragonControllerLandedFlame net/minecraft/world/entity/boss/enderdragon/phases/DragonSittingFlamingPhase
	b FLAME_DURATION
	c SITTING_FLAME_ATTACKS_COUNT
	d WARMUP_TIME
	e flameTicks
	f flameCount
	g flame
	b ()V doClientTick
	c ()V doServerTick
	d ()V begin
	e ()V end
	i ()Lnet/minecraft/world/entity/boss/enderdragon/phases/DragonControllerPhase; getPhase
	j ()V resetFlameCount
net/minecraft/world/entity/boss/enderdragon/phases/DragonControllerLandedSearch net/minecraft/world/entity/boss/enderdragon/phases/DragonSittingScanningPhase
	b SITTING_SCANNING_IDLE_TICKS
	c SITTING_ATTACK_Y_VIEW_RANGE
	d SITTING_ATTACK_VIEW_RANGE
	e SITTING_CHARGE_VIEW_RANGE
	f CHARGE_TARGETING
	g scanTargeting
	h scanningTime
	c ()V doServerTick
	d ()V begin
	i ()Lnet/minecraft/world/entity/boss/enderdragon/phases/DragonControllerPhase; getPhase
net/minecraft/world/entity/boss/enderdragon/phases/DragonControllerLanding net/minecraft/world/entity/boss/enderdragon/phases/DragonLandingPhase
	b targetLocation
	b ()V doClientTick
	c ()V doServerTick
	d ()V begin
	f ()F getFlySpeed
	g ()Lnet/minecraft/world/phys/Vec3D; getFlyTargetLocation
	h ()F getTurnSpeed
	i ()Lnet/minecraft/world/entity/boss/enderdragon/phases/DragonControllerPhase; getPhase
net/minecraft/world/entity/boss/enderdragon/phases/DragonControllerLandingFly net/minecraft/world/entity/boss/enderdragon/phases/DragonLandingApproachPhase
	b NEAR_EGG_TARGETING
	c currentPath
	d targetLocation
	c ()V doServerTick
	d ()V begin
	g ()Lnet/minecraft/world/phys/Vec3D; getFlyTargetLocation
	i ()Lnet/minecraft/world/entity/boss/enderdragon/phases/DragonControllerPhase; getPhase
	j ()V findNewTarget
	k ()V navigateToNextPathNode
net/minecraft/world/entity/boss/enderdragon/phases/DragonControllerManager net/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhaseManager
	a LOGGER
	b dragon
	c phases
	d currentPhase
	a ()Lnet/minecraft/world/entity/boss/enderdragon/phases/IDragonController; getCurrentPhase
	a (Lnet/minecraft/world/entity/boss/enderdragon/phases/DragonControllerPhase;)V setPhase
	b (Lnet/minecraft/world/entity/boss/enderdragon/phases/DragonControllerPhase;)Lnet/minecraft/world/entity/boss/enderdragon/phases/IDragonController; getPhase
net/minecraft/world/entity/boss/enderdragon/phases/DragonControllerPhase net/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase
	a HOLDING_PATTERN
	b STRAFE_PLAYER
	c LANDING_APPROACH
	d LANDING
	e TAKEOFF
	f SITTING_FLAMING
	g SITTING_SCANNING
	h SITTING_ATTACKING
	i CHARGING_PLAYER
	j DYING
	k HOVERING
	l phases
	m instanceClass
	n id
	o name
	a ()Ljava/lang/reflect/Constructor; getConstructor
	a (I)Lnet/minecraft/world/entity/boss/enderdragon/phases/DragonControllerPhase; getById
	a (Ljava/lang/Class;Ljava/lang/String;)Lnet/minecraft/world/entity/boss/enderdragon/phases/DragonControllerPhase; create
	a (Lnet/minecraft/world/entity/boss/enderdragon/EntityEnderDragon;)Lnet/minecraft/world/entity/boss/enderdragon/phases/IDragonController; createInstance
	b ()I getId
	c ()I getCount
net/minecraft/world/entity/boss/enderdragon/phases/DragonControllerStrafe net/minecraft/world/entity/boss/enderdragon/phases/DragonStrafePlayerPhase
	b LOGGER
	c FIREBALL_CHARGE_AMOUNT
	d fireballCharge
	e currentPath
	f targetLocation
	g attackTarget
	h holdingPatternClockwise
	a (Lnet/minecraft/world/entity/EntityLiving;)V setTarget
	c ()V doServerTick
	d ()V begin
	g ()Lnet/minecraft/world/phys/Vec3D; getFlyTargetLocation
	i ()Lnet/minecraft/world/entity/boss/enderdragon/phases/DragonControllerPhase; getPhase
	j ()V findNewTarget
	k ()V navigateToNextPathNode
net/minecraft/world/entity/boss/enderdragon/phases/IDragonController net/minecraft/world/entity/boss/enderdragon/phases/DragonPhaseInstance
	a ()Z isSitting
	a (Lnet/minecraft/world/damagesource/DamageSource;F)F onHurt
	a (Lnet/minecraft/world/entity/boss/enderdragon/EntityEnderCrystal;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/entity/player/EntityHuman;)V onCrystalDestroyed
	b ()V doClientTick
	c ()V doServerTick
	d ()V begin
	e ()V end
	f ()F getFlySpeed
	g ()Lnet/minecraft/world/phys/Vec3D; getFlyTargetLocation
	h ()F getTurnSpeed
	i ()Lnet/minecraft/world/entity/boss/enderdragon/phases/DragonControllerPhase; getPhase
net/minecraft/world/entity/boss/wither/EntityWither net/minecraft/world/entity/boss/wither/WitherBoss
	b DATA_TARGET_A
	bS DATA_ID_INV
	bT INVULNERABLE_TICKS
	bU xRotHeads
	bV yRotHeads
	bW xRotOHeads
	bX yRotOHeads
	bY nextHeadUpdate
	bZ idleHeadUpdates
	c DATA_TARGET_B
	ca destroyBlocksTick
	cb bossEvent
	cc LIVING_ENTITY_SELECTOR
	cd TARGETING_CONDITIONS
	d DATA_TARGET_C
	e DATA_TARGETS
	U ()V customServerAiStep
	a ()Z isPowered
	a (FFF)F rotlerp
	a (IDDDZ)V performRangedAttack
	a (II)V setAlternativeTarget
	a (ILnet/minecraft/world/entity/EntityLiving;)V performRangedAttack
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/damagesource/DamageSource;IZ)V dropCustomDeathLoot
	a (Lnet/minecraft/world/entity/EntityLiving;F)V performRangedAttack
	a (Lnet/minecraft/world/level/World;)Lnet/minecraft/world/entity/ai/navigation/NavigationAbstract; createNavigation
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/phys/Vec3D;)V makeStuckInBlock
	a_ ()V defineSynchedData
	b (I)F getHeadYRot
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/network/chat/IChatBaseComponent;)V setCustomName
	b (Lnet/minecraft/world/effect/MobEffect;Lnet/minecraft/world/entity/Entity;)Z addEffect
	b_ ()V aiStep
	c (I)F getHeadXRot
	c (Lnet/minecraft/server/level/EntityPlayer;)V startSeenByPlayer
	c (Lnet/minecraft/world/effect/MobEffect;)Z canBeAffected
	c (Lnet/minecraft/world/level/block/state/IBlockData;)Z canDestroy
	co ()Z canChangeDimensions
	d (Lnet/minecraft/server/level/EntityPlayer;)V stopSeenByPlayer
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	ds ()V checkDespawn
	eJ ()Lnet/minecraft/world/entity/EnumMonsterType; getMobType
	l (Lnet/minecraft/world/entity/Entity;)Z canRide
	q ()V makeInvulnerable
	r ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	r (I)V setInvulnerableTicks
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	s (I)I getAlternativeTarget
	t (I)D getHeadX
	u (I)D getHeadY
	v (I)D getHeadZ
	w ()I getInvulnerableTicks
	x ()V registerGoals
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
net/minecraft/world/entity/decoration/EntityArmorStand net/minecraft/world/entity/decoration/ArmorStand
	b WOBBLE_TIME
	bA CLIENT_FLAG_MARKER
	bB DATA_CLIENT_FLAGS
	bC DATA_HEAD_POSE
	bD DATA_BODY_POSE
	bE DATA_LEFT_ARM_POSE
	bF DATA_RIGHT_ARM_POSE
	bG DATA_LEFT_LEG_POSE
	bH DATA_RIGHT_LEG_POSE
	bI lastHit
	bJ ENABLE_ARMS
	bK DEFAULT_HEAD_POSE
	bL DEFAULT_BODY_POSE
	bM DEFAULT_LEFT_ARM_POSE
	bN DEFAULT_RIGHT_ARM_POSE
	bO DEFAULT_LEFT_LEG_POSE
	bP DEFAULT_RIGHT_LEG_POSE
	bQ MARKER_DIMENSIONS
	bR BABY_DIMENSIONS
	bS FEET_OFFSET
	bT CHEST_OFFSET
	bU LEGS_OFFSET
	bV HEAD_OFFSET
	bW RIDABLE_MINECARTS
	bX handItems
	bY armorItems
	bZ invisible
	bz CLIENT_FLAG_NO_BASEPLATE
	c DISABLE_TAKING_OFFSET
	ca disabledSlots
	cb headPose
	cc bodyPose
	cd leftArmPose
	ce rightArmPose
	cf leftLegPose
	cg rightLegPose
	d DISABLE_PUTTING_OFFSET
	e CLIENT_FLAG_SMALL
	f CLIENT_FLAG_SHOW_ARMS
	A ()Lnet/minecraft/core/Vector3f; getRightArmPose
	A (Lnet/minecraft/world/entity/Entity;)V doPush
	C ()Lnet/minecraft/core/Vector3f; getLeftLegPose
	C_ ()Lnet/minecraft/world/level/material/EnumPistonReaction; getPistonPushReaction
	D ()Lnet/minecraft/core/Vector3f; getRightLegPose
	E ()Z hasPhysics
	F ()V updateInvisibilityStatus
	G ()Lnet/minecraft/nbt/NBTTagCompound; writePose
	I ()V showBreakingParticles
	J ()V playBrokenSound
	a (BIZ)B setBit
	a (D)Z shouldRenderAtSqrDistance
	a (Lnet/minecraft/core/Vector3f;)V setHeadPose
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLightning;)V thunderHit
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/entity/EntityPose;)Lnet/minecraft/world/entity/EntitySize; getDimensions
	a (Lnet/minecraft/world/entity/EnumItemSlot;Lnet/minecraft/world/item/ItemStack;)V setItemSlot
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/entity/EnumItemSlot;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/EnumHand;)Z swapItem
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; interactAt
	a (Z)V setShowArms
	a_ ()V defineSynchedData
	ah ()V kill
	b (B)V handleEntityEvent
	b (Lnet/minecraft/core/Vector3f;)V setBodyPose
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	bH ()Ljava/lang/Iterable; getHandSlots
	bI ()Ljava/lang/Iterable; getArmorSlots
	bm ()Z isPickable
	bn ()Z isPushable
	bu ()D getMyRidingOffset
	c (Lnet/minecraft/core/Vector3f;)V setLeftArmPose
	c (Lnet/minecraft/nbt/NBTTagCompound;)V readPose
	c (Lnet/minecraft/world/entity/EnumItemSlot;)Lnet/minecraft/world/item/ItemStack; getItemBySlot
	cI ()Z ignoreExplosion
	cU ()Z isEffectiveAi
	c_ ()V refreshDimensions
	d (Lnet/minecraft/core/Vector3f;)V setRightArmPose
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	dt ()Lnet/minecraft/world/item/ItemStack; getPickResult
	e (FF)F tickHeadTurn
	e (Lnet/minecraft/core/Vector3f;)V setLeftLegPose
	e (Lnet/minecraft/world/entity/EnumItemSlot;)Z isDisabled
	eZ ()V pushEntities
	ei ()Z canBeSeenByAnyone
	ey ()Lbfx$a; getFallSounds
	f (Lnet/minecraft/core/Vector3f;)V setRightLegPose
	f (Lnet/minecraft/world/item/ItemStack;)Z canTakeItem
	fd ()Lnet/minecraft/world/entity/EnumMainHand; getMainArm
	fp ()Z isAffectedByPotions
	fq ()Z attackable
	g (Lnet/minecraft/world/damagesource/DamageSource;F)V causeDamage
	h (Lnet/minecraft/world/damagesource/DamageSource;)V brokenByPlayer
	h (Lnet/minecraft/world/phys/Vec3D;)V travel
	i (Lnet/minecraft/world/damagesource/DamageSource;)V brokenByAnything
	j (Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/entity/EnumItemSlot; getClickedSlot
	j (Z)V setInvisible
	l ()V tick
	o (F)Lnet/minecraft/world/phys/Vec3D; getLightProbePosition
	q ()Z isSmall
	r ()Z isShowArms
	r (F)V setYHeadRot
	r (Lnet/minecraft/world/entity/Entity;)Z skipAttackInteraction
	s ()Z isNoBasePlate
	s (F)V setYBodyRot
	s (Z)V setNoBasePlate
	t (Z)V setSmall
	u (Z)V setMarker
	v (Z)Lnet/minecraft/world/entity/EntitySize; getDimensionsMarker
	w ()Z isMarker
	x ()Lnet/minecraft/core/Vector3f; getHeadPose
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	y ()Lnet/minecraft/core/Vector3f; getBodyPose
	y_ ()Z isBaby
	z ()Lnet/minecraft/core/Vector3f; getLeftArmPose
net/minecraft/world/entity/decoration/EntityHanging net/minecraft/world/entity/decoration/HangingEntity
	b HANGING_ENTITY
	c pos
	d direction
	e LOGGER
	f checkInterval
	a (Lnet/minecraft/core/EnumDirection;)V setDirection
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLightning;)V thunderHit
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/entity/Entity;)V dropItem
	a (Lnet/minecraft/world/entity/EnumMoveType;Lnet/minecraft/world/phys/Vec3D;)V move
	a (Lnet/minecraft/world/item/ItemStack;F)Lnet/minecraft/world/entity/item/EntityItem; spawnAtLocation
	a (Lnet/minecraft/world/level/block/EnumBlockMirror;)F mirror
	a (Lnet/minecraft/world/level/block/EnumBlockRotation;)F rotate
	a_ ()V defineSynchedData
	b (I)D offs
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	bm ()Z isPickable
	bo ()Z repositionEntityAfterLoad
	cA ()Lnet/minecraft/core/EnumDirection; getDirection
	c_ ()V refreshDimensions
	e (DDD)V setPos
	j (DDD)V push
	l ()V tick
	r ()V recalculateBoundingBox
	r (Lnet/minecraft/world/entity/Entity;)Z skipAttackInteraction
	s ()Z survives
	t ()I getWidth
	v ()I getHeight
	w ()V playPlacementSound
	x ()Lnet/minecraft/core/BlockPosition; getPos
net/minecraft/world/entity/decoration/EntityItemFrame net/minecraft/world/entity/decoration/ItemFrame
	e NUM_ROTATIONS
	f LOGGER
	g DATA_ITEM
	h DATA_ROTATION
	i dropChance
	j fixed
	A ()Z hasFramedMap
	C ()I getRotation
	D ()I getAnalogOutput
	S ()Lnet/minecraft/network/protocol/Packet; getAddEntityPacket
	a (D)Z shouldRenderAtSqrDistance
	a (IZ)V setRotation
	a (Lnet/minecraft/core/EnumDirection;)V setDirection
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutSpawnEntity;)V recreateFromPacket
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/entity/Entity;)V dropItem
	a (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getEyeHeight
	a (Lnet/minecraft/world/entity/EnumMoveType;Lnet/minecraft/world/phys/Vec3D;)V move
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; interact
	a (Lnet/minecraft/world/item/ItemStack;)V setItem
	a (Lnet/minecraft/world/item/ItemStack;Z)V setItem
	a_ ()V defineSynchedData
	a_ (I)Lnet/minecraft/world/entity/SlotAccess; getSlot
	ah ()V kill
	b (I)V setRotation
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/Entity;Z)V dropItem
	bB ()F getPickRadius
	c (Lnet/minecraft/world/item/ItemStack;)V removeFramedMap
	d (Lnet/minecraft/world/item/ItemStack;)V onItemChanged
	dt ()Lnet/minecraft/world/item/ItemStack; getPickResult
	dx ()F getVisualRotationYInDegrees
	i ()Lnet/minecraft/sounds/SoundEffect; getRemoveItemSound
	j ()Lnet/minecraft/sounds/SoundEffect; getBreakSound
	j (DDD)V push
	k ()Lnet/minecraft/sounds/SoundEffect; getPlaceSound
	o ()Lnet/minecraft/sounds/SoundEffect; getAddItemSound
	p ()Lnet/minecraft/sounds/SoundEffect; getRotateItemSound
	q ()Lnet/minecraft/world/item/ItemStack; getFrameItemStack
	r ()V recalculateBoundingBox
	s ()Z survives
	t ()I getWidth
	v ()I getHeight
	w ()V playPlacementSound
	y ()Lnet/minecraft/world/item/ItemStack; getItem
	z ()Ljava/util/OptionalInt; getFramedMapId
net/minecraft/world/entity/decoration/EntityLeash net/minecraft/world/entity/decoration/LeashFenceKnotEntity
	e OFFSET_Y
	S ()Lnet/minecraft/network/protocol/Packet; getAddEntityPacket
	a (D)Z shouldRenderAtSqrDistance
	a (Lnet/minecraft/core/EnumDirection;)V setDirection
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/entity/Entity;)V dropItem
	a (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getEyeHeight
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; interact
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/entity/decoration/EntityLeash; getOrCreateKnot
	dt ()Lnet/minecraft/world/item/ItemStack; getPickResult
	r ()V recalculateBoundingBox
	s ()Z survives
	t ()I getWidth
	u (F)Lnet/minecraft/world/phys/Vec3D; getRopeHoldPosition
	v ()I getHeight
	w ()V playPlacementSound
net/minecraft/world/entity/decoration/EntityPainting net/minecraft/world/entity/decoration/Painting
	e VARIANT_TAG
	f DATA_PAINTING_VARIANT_ID
	g DEFAULT_VARIANT
	S ()Lnet/minecraft/network/protocol/Packet; getAddEntityPacket
	a (DDDFFIZ)V lerpTo
	a (Ljava/lang/Object;)V setVariant
	a (Lnet/minecraft/core/Holder;)V setVariant
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/nbt/NBTTagCompound;Lnet/minecraft/core/Holder;)V storeVariant
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutSpawnEntity;)V recreateFromPacket
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/world/entity/Entity;)V dropItem
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Ljava/util/Optional; create
	a_ ()V defineSynchedData
	b (DDDFF)V moveTo
	b (Lnet/minecraft/core/Holder;)I variantArea
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	c ()Ljava/lang/Object; getVariant
	c (Lnet/minecraft/nbt/NBTTagCompound;)Ljava/util/Optional; loadVariant
	df ()Lnet/minecraft/world/phys/Vec3D; trackingPosition
	dt ()Lnet/minecraft/world/item/ItemStack; getPickResult
	i ()Lnet/minecraft/core/Holder; getVariant
	j ()Lnet/minecraft/core/Holder; getDefaultVariant
	t ()I getWidth
	v ()I getHeight
	w ()V playPlacementSound
net/minecraft/world/entity/item/EntityFallingBlock net/minecraft/world/entity/item/FallingBlockEntity
	b time
	c dropItem
	d blockData
	e DATA_START_POS
	f LOGGER
	g blockState
	h cancelDrop
	i hurtEntities
	j fallDamageMax
	k fallDamagePerDistance
	S ()Lnet/minecraft/network/protocol/Packet; getAddEntityPacket
	a (FFLnet/minecraft/world/damagesource/DamageSource;)Z causeFallDamage
	a (Lnet/minecraft/CrashReportSystemDetails;)V fillCrashReportCategory
	a (Lnet/minecraft/core/BlockPosition;)V setStartPos
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutSpawnEntity;)V recreateFromPacket
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/entity/item/EntityFallingBlock; fall
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;)V callOnBrokenAfterFall
	aQ ()Lnet/minecraft/world/entity/Entity$MovementEmission; getMovementEmission
	a_ ()V defineSynchedData
	b (FI)V setHurtsEntities
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	bm ()Z isPickable
	cJ ()Z onlyOpCanSetNbt
	cj ()Lnet/minecraft/network/chat/IChatBaseComponent; getTypeName
	cl ()Z isAttackable
	cr ()Z displayFireAnimation
	i ()Lnet/minecraft/core/BlockPosition; getStartPos
	j ()V disableDrop
	k ()Lnet/minecraft/world/level/block/state/IBlockData; getBlockState
	l ()V tick
net/minecraft/world/entity/item/EntityItem net/minecraft/world/entity/item/ItemEntity
	b bobOffs
	c DATA_ITEM
	d LIFETIME
	e INFINITE_PICKUP_DELAY
	f INFINITE_LIFETIME
	g age
	h pickupDelay
	i health
	j thrower
	k target
	A ()Z isMergable
	Z ()Lnet/minecraft/network/chat/IChatBaseComponent; getName
	a (F)F getSpin
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/entity/item/EntityItem;)V tryToMerge
	a (Lnet/minecraft/world/entity/item/EntityItem;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/item/EntityItem;Lnet/minecraft/world/item/ItemStack;)V merge
	a (Lnet/minecraft/world/entity/item/EntityItem;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V merge
	a (Lnet/minecraft/world/item/ItemStack;)V setItem
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z areMergable
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;I)Lnet/minecraft/world/item/ItemStack; merge
	aQ ()Lnet/minecraft/world/entity/Entity$MovementEmission; getMovementEmission
	aR ()Z dampensVibrations
	aS ()Z fireImmune
	a_ ()V defineSynchedData
	b (I)V setPickUpDelay
	b (Ljava/util/UUID;)V setTarget
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/level/WorldServer;)Lnet/minecraft/world/entity/Entity; changeDimension
	b_ (Lnet/minecraft/world/entity/player/EntityHuman;)V playerTouch
	c (Ljava/util/UUID;)V setThrower
	cX ()Lnet/minecraft/sounds/SoundCategory; getSoundSource
	cl ()Z isAttackable
	dx ()F getVisualRotationYInDegrees
	i ()Lnet/minecraft/world/item/ItemStack; getItem
	j ()I getAge
	k ()V setDefaultPickUpDelay
	l ()V tick
	o ()V setNoPickUpDelay
	p ()V setNeverPickUp
	q ()Z hasPickUpDelay
	r ()V setUnlimitedLifetime
	s ()V setExtendedLifetime
	t ()V makeFakeItem
	v ()Lnet/minecraft/world/entity/Entity; getOwner
	w ()Lnet/minecraft/world/entity/item/EntityItem; copy
	x ()V setUnderwaterMovement
	y ()V setUnderLavaMovement
	z ()V mergeWithNeighbours
net/minecraft/world/entity/item/EntityTNTPrimed net/minecraft/world/entity/item/PrimedTnt
	b DATA_FUSE_ID
	c DEFAULT_FUSE_TIME
	d owner
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getEyeHeight
	aQ ()Lnet/minecraft/world/entity/Entity$MovementEmission; getMovementEmission
	a_ ()V defineSynchedData
	b (I)V setFuse
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	bm ()Z isPickable
	i ()Lnet/minecraft/world/entity/EntityLiving; getOwner
	j ()I getFuse
	k ()V explode
	l ()V tick
	v ()Lnet/minecraft/world/entity/Entity; getOwner
net/minecraft/world/entity/monster/EntityBlaze net/minecraft/world/entity/monster/Blaze
	b allowedHeightOffset
	c nextHeightOffsetChangeTick
	d DATA_FLAGS_ID
	U ()V customServerAiStep
	a_ ()V defineSynchedData
	bK ()Z isOnFire
	b_ ()V aiStep
	bh ()F getLightLevelDependentMagicValue
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	eX ()Z isSensitiveToWater
	q ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	r ()Z isCharged
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w (Z)V setCharged
	x ()V registerGoals
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
net/minecraft/world/entity/monster/EntityBlaze$PathfinderGoalBlazeFireball net/minecraft/world/entity/monster/Blaze$BlazeAttackGoal
	a blaze
	b attackStep
	c attackTime
	d lastSeen
	J_ ()Z requiresUpdateEveryTick
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
	h ()D getFollowDistance
net/minecraft/world/entity/monster/EntityCaveSpider net/minecraft/world/entity/monster/CaveSpider
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	q ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createCaveSpider
	z (Lnet/minecraft/world/entity/Entity;)Z doHurtTarget
net/minecraft/world/entity/monster/EntityCreeper net/minecraft/world/entity/monster/Creeper
	b DATA_SWELL_DIR
	bS swell
	bT maxSwell
	bU explosionRadius
	bV droppedSkulls
	c DATA_IS_POWERED
	d DATA_IS_IGNITED
	e oldSwell
	C (F)F getSwelling
	a ()Z isPowered
	a (FFLnet/minecraft/world/damagesource/DamageSource;)Z causeFallDamage
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLightning;)V thunderHit
	a (Lnet/minecraft/world/damagesource/DamageSource;IZ)V dropCustomDeathLoot
	a_ ()V defineSynchedData
	b (I)V setSwellDir
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	cp ()I getMaxFallDistance
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	fS ()V ignite
	fT ()Z canDropMobsSkull
	fU ()V increaseDroppedSkulls
	fV ()V explodeCreeper
	fW ()V spawnLingeringCloud
	i (Lnet/minecraft/world/entity/EntityLiving;)V setTarget
	l ()V tick
	q ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	r ()I getSwellDir
	w ()Z isIgnited
	x ()V registerGoals
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	z (Lnet/minecraft/world/entity/Entity;)Z doHurtTarget
net/minecraft/world/entity/monster/EntityDrowned net/minecraft/world/entity/monster/Drowned
	b NAUTILUS_SHELL_CHANCE
	bW searchingForLand
	c waterNavigation
	d groundNavigation
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyDamageScaler;)V populateDefaultEquipmentSlots
	a (Lnet/minecraft/world/entity/EntityLiving;F)V performRangedAttack
	a (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkDrownedSpawnRules
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)Z isDeepEnoughToSpawn
	a (Lnet/minecraft/world/level/IWorldReader;)Z checkSpawnObstruction
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	aI ()Lnet/minecraft/sounds/SoundEffect; getSwimSound
	aY ()V updateSwimming
	b (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z canReplaceCurrentItem
	bW ()Z isVisuallySwimming
	cv ()Z isPushedByFluid
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	fS ()Lnet/minecraft/world/item/ItemStack; getSkull
	fT ()Z convertsInWater
	fU ()Z closeToNextPos
	gc ()Z wantsToSwim
	h (Lnet/minecraft/world/phys/Vec3D;)V travel
	m (Lnet/minecraft/world/entity/EntityLiving;)Z okTarget
	q ()V addBehaviourGoals
	r ()Z supportsBreakDoorGoal
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w ()Lnet/minecraft/sounds/SoundEffect; getStepSound
	w (Z)V setSearchingForLand
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
net/minecraft/world/entity/monster/EntityEnderman net/minecraft/world/entity/monster/EnderMan
	bS MIN_DEAGGRESSION_TIME
	bT DATA_CARRY_STATE
	bU DATA_CREEPY
	bV DATA_STARED_AT
	bW lastStareSound
	bX targetChangeTime
	bY PERSISTENT_ANGER_TIME
	bZ remainingPersistentAngerTime
	c SPEED_MODIFIER_ATTACKING_UUID
	ca persistentAngerTarget
	d SPEED_MODIFIER_ATTACKING
	e DELAY_BETWEEN_CREEPY_STARE_SOUND
	Q ()Z requiresCustomPersistence
	U ()V customServerAiStep
	a ()I getRemainingPersistentAngerTime
	a (I)V setRemainingPersistentAngerTime
	a (Ljava/util/UUID;)V setPersistentAngerTarget
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/damagesource/DamageSource;IZ)V dropCustomDeathLoot
	a (Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/entity/projectile/EntityPotion;F)Z hurtWithCleanWater
	a (Lnet/minecraft/world/entity/Entity;)Z teleportTowards
	a_ ()V defineSynchedData
	b ()Ljava/util/UUID; getPersistentAngerTarget
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b_ ()V aiStep
	c ()V startPersistentAngerTimer
	c (Lnet/minecraft/world/level/block/state/IBlockData;)V setCarriedBlock
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	eX ()Z isSensitiveToWater
	f (Lnet/minecraft/world/entity/player/EntityHuman;)Z isLookingAtMe
	fS ()Lnet/minecraft/world/level/block/state/IBlockData; getCarriedBlock
	fT ()Z isCreepy
	fU ()Z hasBeenStaredAt
	fV ()V setBeingStaredAt
	i (Lnet/minecraft/world/entity/EntityLiving;)V setTarget
	q ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	r ()V playStareSound
	r (DDD)Z teleport
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w ()Z teleport
	x ()V registerGoals
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
net/minecraft/world/entity/monster/EntityEnderman$PathfinderGoalEndermanPickupBlock net/minecraft/world/entity/monster/EnderMan$EndermanTakeBlockGoal
	a enderman
	a ()Z canUse
	e ()V tick
net/minecraft/world/entity/monster/EntityEnderman$PathfinderGoalEndermanPlaceBlock net/minecraft/world/entity/monster/EnderMan$EndermanLeaveBlockGoal
	a enderman
	a ()Z canUse
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;)Z canPlaceBlock
	e ()V tick
net/minecraft/world/entity/monster/EntityEnderman$PathfinderGoalPlayerWhoLookedAtTarget net/minecraft/world/entity/monster/EnderMan$EndermanLookForPlayerGoal
	i enderman
	j pendingTarget
	k aggroTime
	l teleportTime
	m startAggroTargetConditions
	n continueAggroTargetConditions
	o isAngerInducing
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/world/entity/monster/EntityEndermite net/minecraft/world/entity/monster/Endermite
	b MAX_LIFE
	c life
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	aQ ()Lnet/minecraft/world/entity/Entity$MovementEmission; getMovementEmission
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkEndermiteSpawnRules
	b_ ()V aiStep
	bu ()D getMyRidingOffset
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	eJ ()Lnet/minecraft/world/entity/EnumMonsterType; getMobType
	l ()V tick
	q ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	s (F)V setYBodyRot
	x ()V registerGoals
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
net/minecraft/world/entity/monster/EntityEvoker net/minecraft/world/entity/monster/Evoker
	e wololoTarget
	U ()V customServerAiStep
	X_ ()Lnet/minecraft/sounds/SoundEffect; getCelebrateSound
	a (IZ)V applyRaidBuffs
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/entity/animal/EntitySheep;)V setWololoTarget
	a_ ()V defineSynchedData
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	fS ()Lnet/minecraft/sounds/SoundEffect; getCastingSoundEvent
	gl ()Lnet/minecraft/world/entity/animal/EntitySheep; getWololoTarget
	p (Lnet/minecraft/world/entity/Entity;)Z isAlliedTo
	r ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	x ()V registerGoals
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
net/minecraft/world/entity/monster/EntityGhast net/minecraft/world/entity/monster/Ghast
	b DATA_IS_CHARGING
	c explosionPower
	R ()Z shouldDespawnInPeaceful
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a_ ()V defineSynchedData
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/damagesource/DamageSource;)Z isInvulnerableTo
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkGhastSpawnRules
	cX ()Lnet/minecraft/sounds/SoundCategory; getSoundSource
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	eN ()F getSoundVolume
	fy ()I getMaxSpawnClusterSize
	h (Lnet/minecraft/world/damagesource/DamageSource;)Z isReflectedFireball
	q ()Z isCharging
	r ()I getExplosionPower
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	w (Z)V setCharging
	x ()V registerGoals
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
net/minecraft/world/entity/monster/EntityGhast$ControllerGhast net/minecraft/world/entity/monster/Ghast$GhastMoveControl
	l ghast
	m floatDuration
	a ()V tick
	a (Lnet/minecraft/world/phys/Vec3D;I)Z canReach
net/minecraft/world/entity/monster/EntityGhast$PathfinderGoalGhastAttackTarget net/minecraft/world/entity/monster/Ghast$GhastShootFireballGoal
	a chargeTime
	b ghast
	J_ ()Z requiresUpdateEveryTick
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/world/entity/monster/EntityGhast$PathfinderGoalGhastIdleMove net/minecraft/world/entity/monster/Ghast$RandomFloatAroundGoal
	a ghast
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
net/minecraft/world/entity/monster/EntityGhast$PathfinderGoalGhastMoveTowardsTarget net/minecraft/world/entity/monster/Ghast$GhastLookGoal
	a ghast
	J_ ()Z requiresUpdateEveryTick
	a ()Z canUse
	e ()V tick
net/minecraft/world/entity/monster/EntityGiantZombie net/minecraft/world/entity/monster/Giant
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/IWorldReader;)F getWalkTargetValue
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	q ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
net/minecraft/world/entity/monster/EntityGuardian net/minecraft/world/entity/monster/Guardian
	b DATA_ID_MOVING
	bS clientSideTailAnimation
	bT clientSideTailAnimationO
	bU clientSideTailAnimationSpeed
	bV clientSideSpikesAnimation
	bW clientSideSpikesAnimationO
	bX clientSideCachedAttackTarget
	bY clientSideAttackTime
	bZ clientSideTouchedGround
	c ATTACK_TIME
	d randomStrollGoal
	e DATA_ID_ATTACK_TARGET
	C (F)F getTailAnimation
	D (F)F getSpikesAnimation
	E (F)F getAttackAnimationScale
	K ()I getAmbientSoundInterval
	V ()I getMaxHeadXRot
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/IWorldReader;)F getWalkTargetValue
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/level/IWorldReader;)Z checkSpawnObstruction
	a (Lnet/minecraft/world/level/World;)Lnet/minecraft/world/entity/ai/navigation/NavigationAbstract; createNavigation
	aQ ()Lnet/minecraft/world/entity/Entity$MovementEmission; getMovementEmission
	a_ ()V defineSynchedData
	b (I)V setActiveAttackTarget
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkGuardianSpawnRules
	b_ ()V aiStep
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	dK ()Z canBreatheUnderwater
	eJ ()Lnet/minecraft/world/entity/EnumMonsterType; getMobType
	fS ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	fT ()Z isMoving
	fU ()Z hasActiveAttackTarget
	fV ()Lnet/minecraft/world/entity/EntityLiving; getActiveAttackTarget
	fW ()F getClientSideAttackTime
	h (Lnet/minecraft/world/phys/Vec3D;)V travel
	r ()I getAttackDuration
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w ()Lnet/minecraft/sounds/SoundEffect; getFlopSound
	w (Z)V setMoving
	x ()V registerGoals
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
net/minecraft/world/entity/monster/EntityGuardian$ControllerMoveGuardian net/minecraft/world/entity/monster/Guardian$GuardianMoveControl
	l guardian
	a ()V tick
net/minecraft/world/entity/monster/EntityGuardian$EntitySelectorGuardianTargetHumanSquid net/minecraft/world/entity/monster/Guardian$GuardianAttackSelector
	a guardian
	a (Lnet/minecraft/world/entity/EntityLiving;)Z test
net/minecraft/world/entity/monster/EntityGuardian$PathfinderGoalGuardianAttack net/minecraft/world/entity/monster/Guardian$GuardianAttackGoal
	a guardian
	b attackTime
	c elder
	J_ ()Z requiresUpdateEveryTick
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/world/entity/monster/EntityGuardianElder net/minecraft/world/entity/monster/ElderGuardian
	b ELDER_SIZE_SCALE
	bS EFFECT_RADIUS
	bT EFFECT_DURATION
	bU EFFECT_AMPLIFIER
	bV EFFECT_DISPLAY_LIMIT
	e EFFECT_INTERVAL
	U ()V customServerAiStep
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	q ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	r ()I getAttackDuration
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w ()Lnet/minecraft/sounds/SoundEffect; getFlopSound
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
net/minecraft/world/entity/monster/EntityIllagerAbstract net/minecraft/world/entity/monster/AbstractIllager
	c (Lnet/minecraft/world/entity/EntityLiving;)Z canAttack
	eJ ()Lnet/minecraft/world/entity/EnumMonsterType; getMobType
	q ()Lbvi$a; getArmPose
	x ()V registerGoals
net/minecraft/world/entity/monster/EntityIllagerIllusioner net/minecraft/world/entity/monster/Illusioner
	bS ILLUSION_TRANSITION_TICKS
	bT ILLUSION_SPREAD
	bU clientSideIllusionTicks
	bV clientSideIllusionOffsets
	e NUM_ILLUSIONS
	A_ ()Lnet/minecraft/world/phys/AxisAlignedBB; getBoundingBoxForCulling
	C (F)[Lnet/minecraft/world/phys/Vec3D; getIllusionOffsets
	X_ ()Lnet/minecraft/sounds/SoundEffect; getCelebrateSound
	a (IZ)V applyRaidBuffs
	a (Lnet/minecraft/world/entity/EntityLiving;F)V performRangedAttack
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	a_ ()V defineSynchedData
	b_ ()V aiStep
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	fS ()Lnet/minecraft/sounds/SoundEffect; getCastingSoundEvent
	p (Lnet/minecraft/world/entity/Entity;)Z isAlliedTo
	q ()Lbvi$a; getArmPose
	r ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	x ()V registerGoals
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
net/minecraft/world/entity/monster/EntityIllagerWizard net/minecraft/world/entity/monster/SpellcasterIllager
	b spellCastingTickCount
	bS currentSpell
	e DATA_SPELL_CASTING_ID
	U ()V customServerAiStep
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/entity/monster/EntityIllagerWizard$Spell;)V setIsCastingSpell
	a_ ()V defineSynchedData
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	fS ()Lnet/minecraft/sounds/SoundEffect; getCastingSoundEvent
	gc ()Z isCastingSpell
	gd ()Lnet/minecraft/world/entity/monster/EntityIllagerWizard$Spell; getCurrentSpell
	ge ()I getSpellCastingTime
	l ()V tick
	q ()Lbvi$a; getArmPose
net/minecraft/world/entity/monster/EntityIllagerWizard$PathfinderGoalCastSpell net/minecraft/world/entity/monster/SpellcasterIllager$SpellcasterUseSpellGoal
	b attackWarmupDelay
	c nextAttackTickCount
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	e ()V tick
	h ()I getCastingTime
	i ()I getCastingInterval
	k ()V performSpellCasting
	l ()Lnet/minecraft/sounds/SoundEffect; getSpellPrepareSound
	m ()Lnet/minecraft/world/entity/monster/EntityIllagerWizard$Spell; getSpell
	n ()I getCastWarmupTime
net/minecraft/world/entity/monster/EntityIllagerWizard$Spell net/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell
	a NONE
	b SUMMON_VEX
	c FANGS
	d WOLOLO
	e DISAPPEAR
	f BLINDNESS
	g BY_ID
	h id
	i spellColor
	j $VALUES
	a ()[Lnet/minecraft/world/entity/monster/EntityIllagerWizard$Spell; $values
	a (I)Lnet/minecraft/world/entity/monster/EntityIllagerWizard$Spell; byId
net/minecraft/world/entity/monster/EntityMagmaCube net/minecraft/world/entity/monster/MagmaCube
	a (IZ)V setSize
	a (Lnet/minecraft/world/level/IWorldReader;)Z checkSpawnObstruction
	b (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkMagmaCubeSpawnRules
	bK ()Z isOnFire
	bh ()F getLightLevelDependentMagicValue
	c (Lnet/minecraft/tags/TagKey;)V jumpInLiquid
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	eS ()V jumpFromGround
	fP ()V decreaseSquish
	fQ ()Z isDealsDamage
	fR ()F getAttackDamage
	fS ()Lnet/minecraft/sounds/SoundEffect; getSquishSound
	fT ()Lnet/minecraft/sounds/SoundEffect; getJumpSound
	q ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	r ()Lnet/minecraft/core/particles/ParticleParam; getParticleType
	w ()I getJumpDelay
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
net/minecraft/world/entity/monster/EntityMonster net/minecraft/world/entity/monster/Monster
	R ()Z shouldDespawnInPeaceful
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/IWorldReader;)F getWalkTargetValue
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z isDarkEnoughToSpawn
	aI ()Lnet/minecraft/sounds/SoundEffect; getSwimSound
	aJ ()Lnet/minecraft/sounds/SoundEffect; getSwimSplashSound
	b (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkMonsterSpawnRules
	b_ ()V aiStep
	c (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkAnyLightMonsterSpawnRules
	cX ()Lnet/minecraft/sounds/SoundCategory; getSoundSource
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	dV ()Z shouldDropExperience
	dW ()Z shouldDropLoot
	e (Lnet/minecraft/world/entity/player/EntityHuman;)Z isPreventingPlayerRest
	ey ()Lbfx$a; getFallSounds
	fX ()V updateNoActionTime
	fY ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createMonsterAttributes
	g (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; getProjectile
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
net/minecraft/world/entity/monster/EntityMonsterPatrolling net/minecraft/world/entity/monster/PatrollingMonster
	b patrolTarget
	c patrolLeader
	d patrolling
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkPatrollingMonsterSpawnRules
	bu ()D getMyRidingOffset
	fT ()Z canBeLeader
	fU ()Lnet/minecraft/core/BlockPosition; getPatrolTarget
	fV ()Z hasPatrolTarget
	fW ()Z isPatrolLeader
	fZ ()Z canJoinPatrol
	g (Lnet/minecraft/core/BlockPosition;)V setPatrolTarget
	ga ()V findPatrolTarget
	gb ()Z isPatrolling
	h (D)Z removeWhenFarAway
	w (Z)V setPatrolLeader
	x ()V registerGoals
	x (Z)V setPatrolling
net/minecraft/world/entity/monster/EntityPhantom net/minecraft/world/entity/monster/Phantom
	b FLAP_DEGREES_PER_TICK
	bR anchorPoint
	bS attackPhase
	c TICKS_PER_FLAP
	d ID_SIZE
	e moveTargetPoint
	A ()Lnet/minecraft/world/entity/ai/control/EntityAIBodyControl; createBodyControl
	R ()Z shouldDespawnInPeaceful
	U ()V customServerAiStep
	a (D)Z shouldRenderAtSqrDistance
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/world/entity/EntityPose;)Lnet/minecraft/world/entity/EntitySize; getDimensions
	a (Lnet/minecraft/world/entity/EntityTypes;)Z canAttackType
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	aN ()Z isFlapping
	a_ ()V defineSynchedData
	b (I)V setPhantomSize
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b_ ()V aiStep
	bv ()D getPassengersRidingOffset
	cX ()Lnet/minecraft/sounds/SoundCategory; getSoundSource
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	eJ ()Lnet/minecraft/world/entity/EnumMonsterType; getMobType
	eN ()F getSoundVolume
	l ()V tick
	q ()I getPhantomSize
	r ()I getUniqueFlapTickOffset
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w ()V updatePhantomSizeInfo
	x ()V registerGoals
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
net/minecraft/world/entity/monster/EntityPhantom$AttackPhase net/minecraft/world/entity/monster/Phantom$AttackPhase
	a CIRCLE
	b SWOOP
	c $VALUES
	a ()[Lnet/minecraft/world/entity/monster/EntityPhantom$AttackPhase; $values
net/minecraft/world/entity/monster/EntityPigZombie net/minecraft/world/entity/monster/ZombifiedPiglin
	bW FIRST_ANGER_SOUND_DELAY
	bX playFirstAngerSoundIn
	bY PERSISTENT_ANGER_TIME
	bZ remainingPersistentAngerTime
	c SPEED_MODIFIER_ATTACKING_UUID
	ca persistentAngerTarget
	cb ALERT_RANGE_Y
	cc ALERT_INTERVAL
	cd ticksUntilNextAlert
	ce ZOMBIFIED_PIGLIN_EYE_HEIGHT
	cf ZOMBIFIED_PIGLIN_BABY_EYE_HEIGHT_ADJUSTMENT
	d SPEED_MODIFIER_ATTACKING
	U ()V customServerAiStep
	a ()I getRemainingPersistentAngerTime
	a (I)V setRemainingPersistentAngerTime
	a (Ljava/util/UUID;)V setPersistentAngerTarget
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyDamageScaler;)V populateDefaultEquipmentSlots
	a (Lnet/minecraft/world/level/IWorldReader;)Z checkSpawnObstruction
	b ()Ljava/util/UUID; getPersistentAngerTarget
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkZombifiedPiglinSpawnRules
	bu ()D getMyRidingOffset
	c ()V startPersistentAngerTimer
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	e (Lnet/minecraft/world/entity/player/EntityHuman;)Z isPreventingPlayerRest
	fS ()Lnet/minecraft/world/item/ItemStack; getSkull
	fT ()Z convertsInWater
	gb ()V randomizeReinforcementsChance
	gc ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	gd ()V maybePlayFirstAngerSound
	ge ()V maybeAlertOthers
	gf ()V alertOthers
	gg ()V playAngerSound
	i (Lnet/minecraft/world/entity/EntityLiving;)V setTarget
	k (Lnet/minecraft/world/item/ItemStack;)Z wantsToPickUp
	q ()V addBehaviourGoals
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
net/minecraft/world/entity/monster/EntityPillager net/minecraft/world/entity/monster/Pillager
	b IS_CHARGING_CROSSBOW
	bS SLOT_OFFSET
	bT CROSSBOW_POWER
	bU inventory
	e INVENTORY_SIZE
	X_ ()Lnet/minecraft/sounds/SoundEffect; getCelebrateSound
	a ()V onCrossbowAttackPerformed
	a (IZ)V applyRaidBuffs
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/IWorldReader;)F getWalkTargetValue
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/util/RandomSource;F)V enchantSpawnedWeapon
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyDamageScaler;)V populateDefaultEquipmentSlots
	a (Lnet/minecraft/world/entity/EntityLiving;F)V performRangedAttack
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/projectile/IProjectile;F)V shootCrossbowProjectile
	a (Lnet/minecraft/world/item/ItemProjectileWeapon;)Z canFireProjectileWeapon
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	a_ ()V defineSynchedData
	a_ (I)Lnet/minecraft/world/entity/SlotAccess; getSlot
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/item/EntityItem;)V pickUpItem
	b (Z)V setChargingCrossbow
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	fS ()Z isChargingCrossbow
	fy ()I getMaxSpawnClusterSize
	l (Lnet/minecraft/world/item/ItemStack;)Z wantsItem
	p (Lnet/minecraft/world/entity/Entity;)Z isAlliedTo
	q ()Lbvi$a; getArmPose
	r ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w ()Lnet/minecraft/world/InventorySubcontainer; getInventory
	x ()V registerGoals
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
net/minecraft/world/entity/monster/EntityRavager net/minecraft/world/entity/monster/Ravager
	b STUN_DURATION
	bS BASE_MOVEMENT_SPEED
	bT ATTACK_MOVEMENT_SPEED
	bU STUNNED_COLOR
	bV STUNNED_COLOR_BLUE
	bW STUNNED_COLOR_GREEN
	bX STUNNED_COLOR_RED
	bY ATTACK_DURATION
	bZ attackTick
	ca stunnedTick
	cb roarTick
	e NO_RAVAGER_AND_ALIVE
	B (Lnet/minecraft/world/entity/Entity;)Z hasLineOfSight
	N ()V updateControlFlags
	W ()I getMaxHeadYRot
	X_ ()Lnet/minecraft/sounds/SoundEffect; getCelebrateSound
	a (IZ)V applyRaidBuffs
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/entity/Entity;)V strongKnockback
	a (Lnet/minecraft/world/level/IWorldReader;)Z checkSpawnObstruction
	b (B)V handleEntityEvent
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b_ ()V aiStep
	bv ()D getPassengersRidingOffset
	cK ()Lnet/minecraft/world/entity/EntityLiving; getControllingPassenger
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	e (Lnet/minecraft/world/entity/EntityLiving;)V blockedByShield
	eP ()Z isImmobile
	fS ()I getStunnedTick
	fT ()Z canBeLeader
	gc ()I getRoarTick
	gd ()V stunEffect
	ge ()V roar
	q ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	r ()I getAttackTick
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	x ()V registerGoals
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	z (Lnet/minecraft/world/entity/Entity;)Z doHurtTarget
net/minecraft/world/entity/monster/EntityShulker net/minecraft/world/entity/monster/Shulker
	b DATA_ATTACH_FACE_ID
	bS COVERED_ARMOR_MODIFIER
	bT TELEPORT_STEPS
	bU NO_COLOR
	bV DEFAULT_COLOR
	bW MAX_TELEPORT_DISTANCE
	bX OTHER_SHULKER_SCAN_RADIUS
	bY OTHER_SHULKER_LIMIT
	bZ PEEK_PER_TICK
	c DATA_PEEK_ID
	ca FORWARD
	cb currentPeekAmountO
	cc currentPeekAmount
	cd clientOldAttachPosition
	ce clientSideTeleportInterpolation
	cf MAX_LID_OPEN
	d DATA_COLOR_ID
	e COVERED_ARMOR_MODIFIER_UUID
	A ()Lnet/minecraft/world/entity/ai/control/EntityAIBodyControl; createBodyControl
	C (F)F getClientPeekAmount
	D (F)Ljava/util/Optional; getRenderPosition
	E (F)F getPhysicalPeek
	L ()V playAmbientSound
	V ()I getMaxHeadXRot
	W ()I getMaxHeadYRot
	a (DDDFFIZ)V lerpTo
	a (Ljava/lang/Object;)V setVariant
	a (Ljava/util/Optional;)V setVariant
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Z canStayAt
	a (Lnet/minecraft/core/EnumDirection;)V setAttachFace
	a (Lnet/minecraft/core/EnumDirection;F)Lnet/minecraft/world/phys/AxisAlignedBB; getProgressAabb
	a (Lnet/minecraft/core/EnumDirection;FF)Lnet/minecraft/world/phys/AxisAlignedBB; getProgressDeltaAabb
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutSpawnEntity;)V recreateFromPacket
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/entity/Entity;Z)Z startRiding
	a (Lnet/minecraft/world/entity/EnumMoveType;Lnet/minecraft/world/phys/Vec3D;)V move
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	aQ ()Lnet/minecraft/world/entity/Entity$MovementEmission; getMovementEmission
	a_ ()V defineSynchedData
	am ()Lnet/minecraft/world/phys/AxisAlignedBB; makeBoundingBox
	b (I)V setRawPeekAmount
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	bB ()F getPickRadius
	bs ()Z canBeCollidedWith
	bu ()D getMyRidingOffset
	bz ()V stopRiding
	c ()Ljava/lang/Object; getVariant
	cX ()Lnet/minecraft/sounds/SoundCategory; getSoundSource
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	dj ()Lnet/minecraft/world/phys/Vec3D; getDeltaMovement
	e (DDD)V setPos
	f (Lnet/minecraft/world/phys/Vec3D;)V setDeltaMovement
	fS ()Ljava/util/Optional; getVariant
	fT ()Lnet/minecraft/world/item/EnumColor; getColor
	fU ()V findNewAttachment
	fV ()Z updatePeekAmount
	fW ()V onPeekAmountChange
	fX ()Z isClosed
	fY ()V hitByShulkerBullet
	fZ ()I getRawPeekAmount
	g (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/core/EnumDirection; findAttachableSurface
	g (Lnet/minecraft/world/entity/Entity;)V push
	h (Lnet/minecraft/core/BlockPosition;)Z isPositionBlocked
	l ()V tick
	q ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	r ()Z teleportSomewhere
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w ()Lnet/minecraft/core/EnumDirection; getAttachFace
	x ()V registerGoals
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
net/minecraft/world/entity/monster/EntitySilverfish net/minecraft/world/entity/monster/Silverfish
	b friendsGoal
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/IWorldReader;)F getWalkTargetValue
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	aQ ()Lnet/minecraft/world/entity/Entity$MovementEmission; getMovementEmission
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkSilverfishSpawnRules
	bu ()D getMyRidingOffset
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	eJ ()Lnet/minecraft/world/entity/EnumMonsterType; getMobType
	l ()V tick
	q ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	s (F)V setYBodyRot
	x ()V registerGoals
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
net/minecraft/world/entity/monster/EntitySilverfish$PathfinderGoalSilverfishHideInBlock net/minecraft/world/entity/monster/Silverfish$SilverfishMergeWithStoneGoal
	i selectedDirection
	j doMerge
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
net/minecraft/world/entity/monster/EntitySilverfish$PathfinderGoalSilverfishWakeOthers net/minecraft/world/entity/monster/Silverfish$SilverfishWakeUpFriendsGoal
	a silverfish
	b lookForFriends
	a ()Z canUse
	e ()V tick
	h ()V notifyHurt
net/minecraft/world/entity/monster/EntitySkeleton net/minecraft/world/entity/monster/Skeleton
	b CONVERSION_TAG
	bS conversionTime
	c TOTAL_CONVERSION_TIME
	d DATA_STRAY_CONVERSION_ID
	e inPowderSnowTime
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/damagesource/DamageSource;IZ)V dropCustomDeathLoot
	a_ ()V defineSynchedData
	b (I)V startFreezeConversion
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	du ()Z canFreeze
	fS ()Z isShaking
	fT ()Z isFreezeConverting
	fU ()V doFreezeConversion
	l ()V tick
	r ()Lnet/minecraft/sounds/SoundEffect; getStepSound
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w (Z)V setFreezeConverting
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
net/minecraft/world/entity/monster/EntitySkeletonAbstract net/minecraft/world/entity/monster/AbstractSkeleton
	b bowGoal
	c meleeGoal
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyDamageScaler;)V populateDefaultEquipmentSlots
	a (Lnet/minecraft/world/entity/EntityLiving;F)V performRangedAttack
	a (Lnet/minecraft/world/entity/EnumItemSlot;Lnet/minecraft/world/item/ItemStack;)V setItemSlot
	a (Lnet/minecraft/world/item/ItemProjectileWeapon;)Z canFireProjectileWeapon
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/world/item/ItemStack;F)Lnet/minecraft/world/entity/projectile/EntityArrow; getArrow
	b_ ()V aiStep
	bt ()V rideTick
	bu ()D getMyRidingOffset
	eJ ()Lnet/minecraft/world/entity/EnumMonsterType; getMobType
	fS ()Z isShaking
	q ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	r ()Lnet/minecraft/sounds/SoundEffect; getStepSound
	w ()V reassessWeaponGoal
	x ()V registerGoals
net/minecraft/world/entity/monster/EntitySkeletonStray net/minecraft/world/entity/monster/Stray
	a (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkStraySpawnRules
	b (Lnet/minecraft/world/item/ItemStack;F)Lnet/minecraft/world/entity/projectile/EntityArrow; getArrow
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	r ()Lnet/minecraft/sounds/SoundEffect; getStepSound
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
net/minecraft/world/entity/monster/EntitySkeletonWither net/minecraft/world/entity/monster/WitherSkeleton
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyDamageScaler;)V populateDefaultEquipmentSlots
	a (Lnet/minecraft/world/damagesource/DamageSource;IZ)V dropCustomDeathLoot
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	b (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyDamageScaler;)V populateDefaultEquipmentEnchantments
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/world/item/ItemStack;F)Lnet/minecraft/world/entity/projectile/EntityArrow; getArrow
	c (Lnet/minecraft/world/effect/MobEffect;)Z canBeAffected
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	r ()Lnet/minecraft/sounds/SoundEffect; getStepSound
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	x ()V registerGoals
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	z (Lnet/minecraft/world/entity/Entity;)Z doHurtTarget
net/minecraft/world/entity/monster/EntitySlime net/minecraft/world/entity/monster/Slime
	b MIN_SIZE
	bR oSquish
	bS ID_SIZE
	bT wasOnGround
	c MAX_SIZE
	d targetSquish
	e squish
	R ()Z shouldDespawnInPeaceful
	V ()I getMaxHeadXRot
	a (IZ)V setSize
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/world/entity/Entity$RemovalReason;)V remove
	a (Lnet/minecraft/world/entity/EntityPose;)Lnet/minecraft/world/entity/EntitySize; getDimensions
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	a_ ()V defineSynchedData
	ae ()Lnet/minecraft/world/entity/EntityTypes; getType
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b_ (Lnet/minecraft/world/entity/player/EntityHuman;)V playerTouch
	c (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkSlimeSpawnRules
	c_ ()V refreshDimensions
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	eN ()F getSoundVolume
	eS ()V jumpFromGround
	fP ()V decreaseSquish
	fQ ()Z isDealsDamage
	fR ()F getAttackDamage
	fS ()Lnet/minecraft/sounds/SoundEffect; getSquishSound
	fT ()Lnet/minecraft/sounds/SoundEffect; getJumpSound
	fU ()I getSize
	fV ()Z isTiny
	fW ()Z doPlayJumpSound
	g (Lnet/minecraft/world/entity/Entity;)V push
	l ()V tick
	m (Lnet/minecraft/world/entity/EntityLiving;)V dealDamage
	q ()F getSoundPitch
	r ()Lnet/minecraft/core/particles/ParticleParam; getParticleType
	w ()I getJumpDelay
	x ()V registerGoals
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
net/minecraft/world/entity/monster/EntitySlime$ControllerMoveSlime net/minecraft/world/entity/monster/Slime$SlimeMoveControl
	l yRot
	m jumpDelay
	n slime
	o isAggressive
	a ()V tick
	a (D)V setWantedMovement
	a (FZ)V setDirection
net/minecraft/world/entity/monster/EntitySlime$PathfinderGoalSlimeIdle net/minecraft/world/entity/monster/Slime$SlimeKeepOnJumpingGoal
	a slime
	a ()Z canUse
	e ()V tick
net/minecraft/world/entity/monster/EntitySlime$PathfinderGoalSlimeNearestPlayer net/minecraft/world/entity/monster/Slime$SlimeAttackGoal
	a slime
	b growTiredTimer
	J_ ()Z requiresUpdateEveryTick
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	e ()V tick
net/minecraft/world/entity/monster/EntitySlime$PathfinderGoalSlimeRandomDirection net/minecraft/world/entity/monster/Slime$SlimeRandomDirectionGoal
	a slime
	b chosenDegrees
	c nextRandomizeTime
	a ()Z canUse
	e ()V tick
net/minecraft/world/entity/monster/EntitySlime$PathfinderGoalSlimeRandomJump net/minecraft/world/entity/monster/Slime$SlimeFloatGoal
	a slime
	J_ ()Z requiresUpdateEveryTick
	a ()Z canUse
	e ()V tick
net/minecraft/world/entity/monster/EntitySpider net/minecraft/world/entity/monster/Spider
	b DATA_FLAGS_ID
	c SPIDER_SPECIAL_EFFECT_CHANCE
	a (Lnet/minecraft/world/level/World;)Lnet/minecraft/world/entity/ai/navigation/NavigationAbstract; createNavigation
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/phys/Vec3D;)V makeStuckInBlock
	a_ ()V defineSynchedData
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	bv ()D getPassengersRidingOffset
	c (Lnet/minecraft/world/effect/MobEffect;)Z canBeAffected
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	eJ ()Lnet/minecraft/world/entity/EnumMonsterType; getMobType
	l ()V tick
	r ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w ()Z isClimbing
	w (Z)V setClimbing
	x ()V registerGoals
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	z_ ()Z onClimbable
net/minecraft/world/entity/monster/EntitySpider$GroupDataSpider net/minecraft/world/entity/monster/Spider$SpiderEffectsGroupData
	a effect
	a (Lnet/minecraft/util/RandomSource;)V setRandomEffect
net/minecraft/world/entity/monster/EntitySpider$PathfinderGoalSpiderMeleeAttack net/minecraft/world/entity/monster/Spider$SpiderAttackGoal
	a ()Z canUse
	a (Lnet/minecraft/world/entity/EntityLiving;)D getAttackReachSqr
	b ()Z canContinueToUse
net/minecraft/world/entity/monster/EntitySpider$PathfinderGoalSpiderNearestAttackableTarget net/minecraft/world/entity/monster/Spider$SpiderTargetGoal
	a ()Z canUse
net/minecraft/world/entity/monster/EntityStrider net/minecraft/world/entity/monster/Strider
	bS SUFFOCATING_MODIFIER_UUID
	bT SUFFOCATING_MODIFIER
	bV SUFFOCATE_STEERING_MODIFIER
	bW STEERING_MODIFIER
	bX FOOD_ITEMS
	bY TEMPT_ITEMS
	bZ DATA_BOOST_TIME
	ca DATA_SUFFOCATING
	cb DATA_SADDLE_ID
	cc steering
	cd temptGoal
	ce panicGoal
	a ()Z boost
	a (DZLnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;)V checkFallDamage
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/IWorldReader;)F getWalkTargetValue
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/sounds/SoundCategory;)V equipSaddle
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/phys/Vec3D;)V tickRidden
	a (Lnet/minecraft/world/level/IWorldReader;)Z checkSpawnObstruction
	a (Lnet/minecraft/world/level/World;)Lnet/minecraft/world/entity/ai/navigation/NavigationAbstract; createNavigation
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EntityInsentient;Lnet/minecraft/world/entity/GroupDataEntity;)Lnet/minecraft/world/entity/GroupDataEntity; spawnJockey
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/world/level/material/Fluid;)Z canStandOnFluid
	aH ()F nextStep
	a_ ()V defineSynchedData
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/monster/EntityStrider; getBreedOffspring
	b (Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/phys/Vec3D; getDismountLocationForPassenger
	b (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/phys/Vec3D; getRiddenInput
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	bK ()Z isOnFire
	bv ()D getPassengersRidingOffset
	c (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkStriderSpawnRules
	cF ()Lnet/minecraft/world/phys/Vec3D; getLeashOffset
	cK ()Lnet/minecraft/world/entity/EntityLiving; getControllingPassenger
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	eX ()Z isSensitiveToWater
	er ()V dropEquipment
	fS ()Z isBeingTempted
	fY ()V floatStrider
	g ()Z isSaddleable
	g (Lnet/minecraft/world/entity/EntityLiving;)F getRiddenSpeed
	i ()Z isSaddled
	l ()V tick
	m (Lnet/minecraft/world/item/ItemStack;)Z isFood
	o (Lnet/minecraft/world/entity/Entity;)Z canAddPassenger
	q ()Z isSuffocating
	r ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w ()Z isPanicking
	w (Z)V setSuffocating
	x ()V registerGoals
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	z ()Z shouldPassengersInheritMalus
net/minecraft/world/entity/monster/EntityVex net/minecraft/world/entity/monster/Vex
	b FLAP_DEGREES_PER_TICK
	bS RIDING_OFFSET
	bT owner
	bU boundOrigin
	bV hasLimitedLife
	bW limitedLifeTicks
	c TICKS_PER_FLAP
	d DATA_FLAGS_ID
	e FLAG_IS_CHARGING
	a (IZ)V setVexFlag
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyDamageScaler;)V populateDefaultEquipmentSlots
	a (Lnet/minecraft/world/entity/EntityInsentient;)V setOwner
	a (Lnet/minecraft/world/entity/EnumMoveType;Lnet/minecraft/world/phys/Vec3D;)V move
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	aN ()Z isFlapping
	a_ ()V defineSynchedData
	b (I)V setLimitedLife
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	bh ()F getLightLevelDependentMagicValue
	bu ()D getMyRidingOffset
	c (I)Z getVexFlag
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	fS ()Z isCharging
	g (Lnet/minecraft/core/BlockPosition;)V setBoundOrigin
	l ()V tick
	q ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	r ()Lnet/minecraft/world/entity/EntityInsentient; getOwner
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	v ()Lnet/minecraft/world/entity/Entity; getOwner
	w ()Lnet/minecraft/core/BlockPosition; getBoundOrigin
	w (Z)V setIsCharging
	x ()V registerGoals
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
net/minecraft/world/entity/monster/EntityVindicator net/minecraft/world/entity/monster/Vindicator
	b TAG_JOHNNY
	bS isJohnny
	e DOOR_BREAKING_PREDICATE
	U ()V customServerAiStep
	X_ ()Lnet/minecraft/sounds/SoundEffect; getCelebrateSound
	a (IZ)V applyRaidBuffs
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyDamageScaler;)V populateDefaultEquipmentSlots
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/network/chat/IChatBaseComponent;)V setCustomName
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	p (Lnet/minecraft/world/entity/Entity;)Z isAlliedTo
	q ()Lbvi$a; getArmPose
	r ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	x ()V registerGoals
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
net/minecraft/world/entity/monster/EntityWitch net/minecraft/world/entity/monster/Witch
	b SPEED_MODIFIER_DRINKING_UUID
	bS DATA_USING_ITEM
	bT usingTime
	bU healRaidersGoal
	bV attackPlayersGoal
	e SPEED_MODIFIER_DRINKING
	X_ ()Lnet/minecraft/sounds/SoundEffect; getCelebrateSound
	a (IZ)V applyRaidBuffs
	a (Lnet/minecraft/world/entity/EntityLiving;F)V performRangedAttack
	a_ ()V defineSynchedData
	b (B)V handleEntityEvent
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b_ ()V aiStep
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	e (Lnet/minecraft/world/damagesource/DamageSource;F)F getDamageAfterMagicAbsorb
	fT ()Z canBeLeader
	q ()Z isDrinkingPotion
	r ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	x ()V registerGoals
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	y (Z)V setUsingItem
net/minecraft/world/entity/monster/EntityZoglin net/minecraft/world/entity/monster/Zoglin
	b SENSOR_TYPES
	bS ATTACK_KNOCKBACK
	bT KNOCKBACK_RESISTANCE
	bU ATTACK_DAMAGE
	bV BABY_ATTACK_DAMAGE
	bW ATTACK_INTERVAL
	bX BABY_ATTACK_INTERVAL
	bY ATTACK_DURATION
	bZ MOVEMENT_SPEED_WHEN_FIGHTING
	c MEMORY_TYPES
	ca SPEED_MULTIPLIER_WHEN_IDLING
	cb attackAnimationRemainingTicks
	d DATA_BABY_ID
	e MAX_HEALTH
	T ()V sendDebugPackets
	U ()V customServerAiStep
	a (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/BehaviorController; makeBrain
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/entity/ai/BehaviorController;)V initCoreActivity
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z canBeLeashed
	a (Z)V setBaby
	a_ ()V defineSynchedData
	b (B)V handleEntityEvent
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/ai/BehaviorController;)V initIdleActivity
	b_ ()V aiStep
	bv ()D getPassengersRidingOffset
	c (Lnet/minecraft/world/entity/ai/BehaviorController;)V initFightActivity
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	dH ()Lnet/minecraft/world/entity/ai/BehaviorController; getBrain
	dI ()Lbgy$b; brainProvider
	e (Lnet/minecraft/world/entity/EntityLiving;)V blockedByShield
	eJ ()Lnet/minecraft/world/entity/EnumMonsterType; getMobType
	fS ()I getAttackAnimationRemainingTicks
	fT ()V playAngrySound
	fU ()Ljava/util/Optional; findNearestValidAttackTarget
	m (Lnet/minecraft/world/entity/EntityLiving;)Z isTargetable
	n (Lnet/minecraft/world/entity/EntityLiving;)V setAttackTarget
	q ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	r ()Z isAdult
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w ()V updateActivity
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	y_ ()Z isBaby
	z (Lnet/minecraft/world/entity/Entity;)Z doHurtTarget
net/minecraft/world/entity/monster/EntityZombie net/minecraft/world/entity/monster/Zombie
	b SPEED_MODIFIER_BABY_UUID
	bS REINFORCEMENT_ATTEMPTS
	bT REINFORCEMENT_RANGE_MAX
	bU REINFORCEMENT_RANGE_MIN
	bV BABY_EYE_HEIGHT_ADJUSTMENT
	bW DATA_SPECIAL_TYPE_ID
	bX DATA_DROWNED_CONVERSION_ID
	bY BREAK_DOOR_CHANCE
	bZ DOOR_BREAKING_PREDICATE
	c SPEED_MODIFIER_BABY
	ca breakDoorGoal
	cb canBreakDoors
	cc inWaterTime
	cd conversionTime
	d DATA_BABY_ID
	e ZOMBIE_LEADER_CHANCE
	C (F)V handleAttributes
	W_ ()Z isSunSensitive
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z wasKilled
	a (Lnet/minecraft/util/RandomSource;)Z getSpawnAsBabyOdds
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyDamageScaler;)V populateDefaultEquipmentSlots
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/damagesource/DamageSource;IZ)V dropCustomDeathLoot
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	a (Z)V setBaby
	a_ ()V defineSynchedData
	b (I)V startUnderWaterConversion
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/world/entity/EntityTypes;)V convertToZombieType
	b_ ()V aiStep
	bu ()D getMyRidingOffset
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	dX ()I getExperienceReward
	eJ ()Lnet/minecraft/world/entity/EnumMonsterType; getMobType
	fS ()Lnet/minecraft/world/item/ItemStack; getSkull
	fT ()Z convertsInWater
	fV ()V doUnderWaterConversion
	fW ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	fZ ()Z isUnderWaterConverting
	ga ()Z canBreakDoors
	gb ()V randomizeReinforcementsChance
	j (Lnet/minecraft/world/item/ItemStack;)Z canHoldItem
	k (Lnet/minecraft/world/item/ItemStack;)Z wantsToPickUp
	l ()V tick
	q ()V addBehaviourGoals
	r ()Z supportsBreakDoorGoal
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w ()Lnet/minecraft/sounds/SoundEffect; getStepSound
	x ()V registerGoals
	x (Z)V setCanBreakDoors
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	y_ ()Z isBaby
	z (Lnet/minecraft/world/entity/Entity;)Z doHurtTarget
net/minecraft/world/entity/monster/EntityZombie$GroupDataZombie net/minecraft/world/entity/monster/Zombie$ZombieGroupData
	a isBaby
	b canSpawnJockey
net/minecraft/world/entity/monster/EntityZombieHusk net/minecraft/world/entity/monster/Husk
	W_ ()Z isSunSensitive
	a (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkHuskSpawnRules
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	fS ()Lnet/minecraft/world/item/ItemStack; getSkull
	fT ()Z convertsInWater
	fV ()V doUnderWaterConversion
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w ()Lnet/minecraft/sounds/SoundEffect; getStepSound
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	z (Lnet/minecraft/world/entity/Entity;)Z doHurtTarget
net/minecraft/world/entity/monster/EntityZombieVillager net/minecraft/world/entity/monster/ZombieVillager
	b LOGGER
	bW VILLAGER_CONVERSION_WAIT_MIN
	bX VILLAGER_CONVERSION_WAIT_MAX
	bY MAX_SPECIAL_BLOCKS_COUNT
	bZ SPECIAL_BLOCK_RADIUS
	c DATA_CONVERTING_ID
	ca villagerConversionTime
	cb conversionStarter
	cc gossips
	cd tradeOffers
	ce villagerXp
	d DATA_VILLAGER_DATA
	a (Ljava/util/UUID;I)V startConverting
	a (Lnet/minecraft/nbt/NBTBase;)V setGossips
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/entity/npc/VillagerData;)V setVillagerData
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	a_ ()V defineSynchedData
	b (B)V handleEntityEvent
	b (I)V setVillagerXp
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	c (Lnet/minecraft/nbt/NBTTagCompound;)V setTradeOffers
	c (Lnet/minecraft/server/level/WorldServer;)V finishConversion
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	eO ()F getVoicePitch
	fS ()Lnet/minecraft/world/item/ItemStack; getSkull
	fT ()Z convertsInWater
	gc ()Z isConverting
	gd ()Lnet/minecraft/world/entity/npc/VillagerData; getVillagerData
	ge ()I getVillagerXp
	gf ()I getConversionProgress
	h (D)Z removeWhenFarAway
	l ()V tick
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w ()Lnet/minecraft/sounds/SoundEffect; getStepSound
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
net/minecraft/world/entity/monster/ICrossbow net/minecraft/world/entity/monster/CrossbowAttackMob
	P_ ()Lnet/minecraft/world/entity/EntityLiving; getTarget
	a ()V onCrossbowAttackPerformed
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/projectile/IProjectile;FF)V shootCrossbowProjectile
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/projectile/IProjectile;F)V shootCrossbowProjectile
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/phys/Vec3D;F)Lorg/joml/Vector3f; getProjectileShotVector
	b (Lnet/minecraft/world/entity/EntityLiving;F)V performCrossbowAttack
	b (Z)V setChargingCrossbow
net/minecraft/world/entity/monster/IMonster net/minecraft/world/entity/monster/Enemy
	d_ XP_REWARD_NONE
	e_ XP_REWARD_SMALL
	f_ XP_REWARD_MEDIUM
	g_ XP_REWARD_LARGE
	h_ XP_REWARD_HUGE
	i_ XP_REWARD_BOSS
net/minecraft/world/entity/monster/IRangedEntity net/minecraft/world/entity/monster/RangedAttackMob
	a (Lnet/minecraft/world/entity/EntityLiving;F)V performRangedAttack
net/minecraft/world/entity/monster/hoglin/EntityHoglin net/minecraft/world/entity/monster/hoglin/Hoglin
	bS SENSOR_TYPES
	bT MEMORY_TYPES
	bV DATA_IMMUNE_TO_ZOMBIFICATION
	bW PROBABILITY_OF_SPAWNING_AS_BABY
	bX MAX_HEALTH
	bY MOVEMENT_SPEED_WHEN_FIGHTING
	bZ ATTACK_KNOCKBACK
	ca KNOCKBACK_RESISTANCE
	cb ATTACK_DAMAGE
	cc BABY_ATTACK_DAMAGE
	cd CONVERSION_TIME
	ce attackAnimationRemainingTicks
	cf timeInOverworld
	cg cannotBeHunted
	T ()V sendDebugPackets
	U ()V customServerAiStep
	a (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/BehaviorController; makeBrain
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/IWorldReader;)F getWalkTargetValue
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z canBeLeashed
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	aI ()Lnet/minecraft/sounds/SoundEffect; getSwimSound
	aJ ()Lnet/minecraft/sounds/SoundEffect; getSwimSplashSound
	a_ ()V defineSynchedData
	b (B)V handleEntityEvent
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/sounds/SoundEffect;)V playSoundEvent
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	b_ ()V aiStep
	bv ()D getPassengersRidingOffset
	c (Lnet/minecraft/server/level/WorldServer;)V finishConversion
	c (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkHoglinSpawnRules
	cX ()Lnet/minecraft/sounds/SoundCategory; getSoundSource
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	dH ()Lnet/minecraft/world/entity/ai/BehaviorController; getBrain
	dI ()Lbgy$b; brainProvider
	dV ()Z shouldDropExperience
	dX ()I getExperienceReward
	e (Lnet/minecraft/world/entity/EntityLiving;)V blockedByShield
	fS ()I getAttackAnimationRemainingTicks
	fT ()Z canFallInLove
	fY ()Z canBeHunted
	fZ ()Z isImmuneToZombification
	h (D)Z removeWhenFarAway
	m ()V ageBoundaryReached
	m (Lnet/minecraft/world/item/ItemStack;)Z isFood
	q ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	r ()Z isAdult
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w ()Z isConverting
	w (Z)V setImmuneToZombification
	x (Z)V setCannotBeHunted
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	z (Lnet/minecraft/world/entity/Entity;)Z doHurtTarget
net/minecraft/world/entity/monster/hoglin/HoglinAI net/minecraft/world/entity/monster/hoglin/HoglinAi
	a REPELLENT_DETECTION_RANGE_HORIZONTAL
	b REPELLENT_DETECTION_RANGE_VERTICAL
	c RETREAT_DURATION
	d ATTACK_DURATION
	e DESIRED_DISTANCE_FROM_PIGLIN_WHEN_IDLING
	f DESIRED_DISTANCE_FROM_PIGLIN_WHEN_RETREATING
	g ATTACK_INTERVAL
	h BABY_ATTACK_INTERVAL
	i REPELLENT_PACIFY_TIME
	j ADULT_FOLLOW_RANGE
	k SPEED_MULTIPLIER_WHEN_AVOIDING_REPELLENT
	l SPEED_MULTIPLIER_WHEN_RETREATING
	m SPEED_MULTIPLIER_WHEN_MAKING_LOVE
	n SPEED_MULTIPLIER_WHEN_IDLING
	o SPEED_MULTIPLIER_WHEN_FOLLOWING_ADULT
	a ()Lnet/minecraft/world/entity/ai/behavior/BehaviorGateSingle; createIdleMovementBehaviors
	a (Lnet/minecraft/world/entity/ai/BehaviorController;)Lnet/minecraft/world/entity/ai/BehaviorController; makeBrain
	a (Lnet/minecraft/world/entity/monster/hoglin/EntityHoglin;)V updateActivity
	a (Lnet/minecraft/world/entity/monster/hoglin/EntityHoglin;Lnet/minecraft/core/BlockPosition;)Z isPosNearNearestRepellent
	a (Lnet/minecraft/world/entity/monster/hoglin/EntityHoglin;Lnet/minecraft/world/entity/EntityLiving;)V onHitTarget
	a (Lnet/minecraft/world/entity/monster/hoglin/EntityHoglin;Lnet/minecraft/world/entity/schedule/Activity;)Lnet/minecraft/sounds/SoundEffect; getSoundForActivity
	b (Lnet/minecraft/world/entity/ai/BehaviorController;)V initCoreActivity
	b (Lnet/minecraft/world/entity/monster/hoglin/EntityHoglin;)Ljava/util/Optional; getSoundForCurrentActivity
	b (Lnet/minecraft/world/entity/monster/hoglin/EntityHoglin;Lnet/minecraft/world/entity/EntityLiving;)V wasHurtBy
	c (Lnet/minecraft/world/entity/ai/BehaviorController;)V initIdleActivity
	c (Lnet/minecraft/world/entity/monster/hoglin/EntityHoglin;)Z isPacified
	c (Lnet/minecraft/world/entity/monster/hoglin/EntityHoglin;Lnet/minecraft/world/entity/EntityLiving;)V broadcastRetreat
	d (Lnet/minecraft/world/entity/ai/BehaviorController;)V initFightActivity
	d (Lnet/minecraft/world/entity/monster/hoglin/EntityHoglin;)Ljava/util/Optional; findNearestValidAttackTarget
	d (Lnet/minecraft/world/entity/monster/hoglin/EntityHoglin;Lnet/minecraft/world/entity/EntityLiving;)V retreatFromNearestTarget
	e (Lnet/minecraft/world/entity/ai/BehaviorController;)V initRetreatActivity
	e (Lnet/minecraft/world/entity/monster/hoglin/EntityHoglin;)Z wantsToStopFleeing
	e (Lnet/minecraft/world/entity/monster/hoglin/EntityHoglin;Lnet/minecraft/world/entity/EntityLiving;)V setAvoidTarget
	f (Lnet/minecraft/world/entity/monster/hoglin/EntityHoglin;)Z piglinsOutnumberHoglins
	f (Lnet/minecraft/world/entity/monster/hoglin/EntityHoglin;Lnet/minecraft/world/entity/EntityLiving;)V maybeRetaliate
	g (Lnet/minecraft/world/entity/monster/hoglin/EntityHoglin;)Ljava/util/List; getVisibleAdultHoglins
	g (Lnet/minecraft/world/entity/monster/hoglin/EntityHoglin;Lnet/minecraft/world/entity/EntityLiving;)V setAttackTarget
	h (Lnet/minecraft/world/entity/monster/hoglin/EntityHoglin;)Z isNearRepellent
	h (Lnet/minecraft/world/entity/monster/hoglin/EntityHoglin;Lnet/minecraft/world/entity/EntityLiving;)V broadcastAttackTarget
	i (Lnet/minecraft/world/entity/monster/hoglin/EntityHoglin;)Z isBreeding
	i (Lnet/minecraft/world/entity/monster/hoglin/EntityHoglin;Lnet/minecraft/world/entity/EntityLiving;)V setAttackTargetIfCloserThanCurrent
net/minecraft/world/entity/monster/hoglin/IOglin net/minecraft/world/entity/monster/hoglin/HoglinBase
	j_ ATTACK_ANIMATION_DURATION
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityLiving;)Z hurtAndThrowTarget
	b (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityLiving;)V throwTarget
	fS ()I getAttackAnimationRemainingTicks
net/minecraft/world/entity/monster/piglin/BehaviorAdmireTimeout net/minecraft/world/entity/monster/piglin/StopAdmiringIfTiredOfTryingToReachItem
	a (II)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/monster/piglin/BehaviorHuntHoglin net/minecraft/world/entity/monster/piglin/StartHuntingHoglin
	a ()Lnet/minecraft/world/entity/ai/behavior/OneShot; create
	a (Lnet/minecraft/world/entity/monster/piglin/EntityPiglinAbstract;)Z hasHuntedRecently
net/minecraft/world/entity/monster/piglin/BehaviorRememberHuntedHoglin net/minecraft/world/entity/monster/piglin/RememberIfHoglinWasKilled
	a ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/monster/piglin/BehaviorStartAdmiringItem net/minecraft/world/entity/monster/piglin/StartAdmiringItemIfSeen
	a (I)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/monster/piglin/BehaviorStopAdmiring net/minecraft/world/entity/monster/piglin/StopHoldingItemIfNoLongerAdmiring
	a ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/monster/piglin/BehaviorStopAdmiringItem net/minecraft/world/entity/monster/piglin/StopAdmiringIfItemTooFarAway
	a (I)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/monster/piglin/EntityPiglin net/minecraft/world/entity/monster/piglin/Piglin
	bS SENSOR_TYPES
	bT MEMORY_TYPES
	bU DATA_BABY_ID
	bV DATA_IS_CHARGING_CROSSBOW
	bW DATA_IS_DANCING
	bX SPEED_MODIFIER_BABY_UUID
	bY SPEED_MODIFIER_BABY
	bZ MAX_HEALTH
	ca MOVEMENT_SPEED_WHEN_FIGHTING
	cb ATTACK_DAMAGE
	cc CROSSBOW_POWER
	cd CHANCE_OF_WEARING_EACH_ARMOUR_ITEM
	ce MAX_PASSENGERS_ON_ONE_HOGLIN
	cf PROBABILITY_OF_SPAWNING_AS_BABY
	cg BABY_EYE_HEIGHT_ADJUSTMENT
	ch PROBABILITY_OF_SPAWNING_WITH_CROSSBOW_INSTEAD_OF_SWORD
	ci inventory
	cj cannotHunt
	R ()Z shouldDespawnInPeaceful
	U ()V customServerAiStep
	a ()V onCrossbowAttackPerformed
	a (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/BehaviorController; makeBrain
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyDamageScaler;)V populateDefaultEquipmentSlots
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/damagesource/DamageSource;IZ)V dropCustomDeathLoot
	a (Lnet/minecraft/world/entity/Entity;Z)Z startRiding
	a (Lnet/minecraft/world/entity/EntityLiving;F)V performRangedAttack
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/projectile/IProjectile;F)V shootCrossbowProjectile
	a (Lnet/minecraft/world/entity/EnumItemSlot;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/util/RandomSource;)V maybeWearArmor
	a (Lnet/minecraft/world/item/ItemProjectileWeapon;)Z canFireProjectileWeapon
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	a (Z)V setBaby
	a_ ()V defineSynchedData
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/sounds/SoundEffect;)V playSoundEvent
	b (Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/world/entity/Entity; getTopPassenger
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkPiglinSpawnRules
	b (Lnet/minecraft/world/entity/item/EntityItem;)V pickUpItem
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	b (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z canReplaceCurrentItem
	b (Z)V setChargingCrossbow
	bv ()D getPassengersRidingOffset
	c (Lnet/minecraft/server/level/WorldServer;)V finishConversion
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	dH ()Lnet/minecraft/world/entity/ai/BehaviorController; getBrain
	dI ()Lbgy$b; brainProvider
	dX ()I getExperienceReward
	fU ()Lnet/minecraft/world/entity/monster/piglin/EntityPiglinArmPose; getArmPose
	fW ()V playConvertedSound
	fZ ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	ga ()Z isDancing
	gb ()Lnet/minecraft/world/item/ItemStack; createSpawnWeapon
	gc ()Z isChargingCrossbow
	h (D)Z removeWhenFarAway
	k (Lnet/minecraft/world/item/ItemStack;)Z wantsToPickUp
	l (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; addToInventory
	m (Lnet/minecraft/world/item/ItemStack;)Z canAddToInventory
	n (Lnet/minecraft/world/item/ItemStack;)V holdInMainHand
	o (Lnet/minecraft/world/item/ItemStack;)V holdInOffHand
	p (Lnet/minecraft/world/item/ItemStack;)Z canReplaceCurrentItem
	q ()Z canHunt
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w ()Lnet/minecraft/world/InventorySubcontainer; getInventory
	x (Z)V setDancing
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	y (Z)V setCannotHunt
	y_ ()Z isBaby
net/minecraft/world/entity/monster/piglin/EntityPiglinAbstract net/minecraft/world/entity/monster/piglin/AbstractPiglin
	b DATA_IMMUNE_TO_ZOMBIFICATION
	c CONVERSION_TIME
	d PIGLIN_EYE_HEIGHT
	e timeInOverworld
	L ()V playAmbientSound
	P_ ()Lnet/minecraft/world/entity/EntityLiving; getTarget
	T ()V sendDebugPackets
	U ()V customServerAiStep
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a_ ()V defineSynchedData
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	bu ()D getMyRidingOffset
	c (Lnet/minecraft/server/level/WorldServer;)V finishConversion
	fS ()Z isConverting
	fT ()Z isAdult
	fU ()Lnet/minecraft/world/entity/monster/piglin/EntityPiglinArmPose; getArmPose
	fV ()Z isHoldingMeleeWeapon
	fW ()V playConvertedSound
	q ()Z canHunt
	r ()Z isImmuneToZombification
	w ()V applyOpenDoorsAbility
	w (Z)V setImmuneToZombification
net/minecraft/world/entity/monster/piglin/EntityPiglinArmPose net/minecraft/world/entity/monster/piglin/PiglinArmPose
	a ATTACKING_WITH_MELEE_WEAPON
	b CROSSBOW_HOLD
	c CROSSBOW_CHARGE
	d ADMIRING_ITEM
	e DANCING
	f DEFAULT
	g $VALUES
	a ()[Lnet/minecraft/world/entity/monster/piglin/EntityPiglinArmPose; $values
net/minecraft/world/entity/monster/piglin/EntityPiglinBrute net/minecraft/world/entity/monster/piglin/PiglinBrute
	bS SENSOR_TYPES
	bT MEMORY_TYPES
	bU MAX_HEALTH
	bV MOVEMENT_SPEED_WHEN_FIGHTING
	bW ATTACK_DAMAGE
	U ()V customServerAiStep
	a (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/BehaviorController; makeBrain
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyDamageScaler;)V populateDefaultEquipmentSlots
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	dH ()Lnet/minecraft/world/entity/ai/BehaviorController; getBrain
	dI ()Lbgy$b; brainProvider
	fU ()Lnet/minecraft/world/entity/monster/piglin/EntityPiglinArmPose; getArmPose
	fW ()V playConvertedSound
	fZ ()V playAngrySound
	k (Lnet/minecraft/world/item/ItemStack;)Z wantsToPickUp
	q ()Z canHunt
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
net/minecraft/world/entity/monster/piglin/PiglinAI net/minecraft/world/entity/monster/piglin/PiglinAi
	A AVOID_ZOMBIFIED_DURATION
	B BABY_AVOID_NEMESIS_DURATION
	C PROBABILITY_OF_CELEBRATION_DANCE
	D SPEED_MULTIPLIER_WHEN_AVOIDING
	E SPEED_MULTIPLIER_WHEN_RETREATING
	F SPEED_MULTIPLIER_WHEN_MOUNTING
	G SPEED_MULTIPLIER_WHEN_GOING_TO_WANTED_ITEM
	H SPEED_MULTIPLIER_WHEN_GOING_TO_CELEBRATE_LOCATION
	I SPEED_MULTIPLIER_WHEN_DANCING
	J SPEED_MULTIPLIER_WHEN_IDLING
	a REPELLENT_DETECTION_RANGE_HORIZONTAL
	b REPELLENT_DETECTION_RANGE_VERTICAL
	c BARTERING_ITEM
	d TIME_BETWEEN_HUNTS
	e PLAYER_ANGER_RANGE
	f ANGER_DURATION
	g ADMIRE_DURATION
	h MAX_DISTANCE_TO_WALK_TO_ITEM
	i MAX_TIME_TO_WALK_TO_ITEM
	j HOW_LONG_TIME_TO_DISABLE_ADMIRE_WALKING_IF_CANT_REACH_ITEM
	k CELEBRATION_TIME
	l BABY_FLEE_DURATION_AFTER_GETTING_HIT
	m HIT_BY_PLAYER_MEMORY_TIMEOUT
	n MAX_WALK_DISTANCE_TO_START_RIDING
	o RIDE_START_INTERVAL
	p RIDE_DURATION
	q RETREAT_DURATION
	r MELEE_ATTACK_COOLDOWN
	s EAT_COOLDOWN
	t DESIRED_DISTANCE_FROM_ENTITY_WHEN_AVOIDING
	u MAX_LOOK_DIST
	v MAX_LOOK_DIST_FOR_PLAYER_HOLDING_LOVED_ITEM
	w INTERACTION_RANGE
	x MIN_DESIRED_DIST_FROM_TARGET_WHEN_HOLDING_CROSSBOW
	y SPEED_WHEN_STRAFING_BACK_FROM_TARGET
	z DESIRED_DISTANCE_FROM_ZOMBIFIED
	a ()Lcom/google/common/collect/ImmutableList; createLookBehaviors
	a (Lnet/minecraft/world/entity/EntityLiving;)Z isWearingGold
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityLiving;)Z wantsToDance
	a (Lnet/minecraft/world/entity/EntityTypes;)Z isZombified
	a (Lnet/minecraft/world/entity/ai/BehaviorController;)V initCoreActivity
	a (Lnet/minecraft/world/entity/item/EntityItem;)Lnet/minecraft/world/item/ItemStack; removeOneItemFromItemEntity
	a (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;)V updateActivity
	a (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;Ljava/util/List;)V throwItems
	a (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;Ljava/util/List;Lnet/minecraft/world/phys/Vec3D;)V throwItemsTowardPos
	a (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;Lnet/minecraft/util/RandomSource;)V initMemories
	a (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;Lnet/minecraft/world/entity/Entity;)Z wantsToStopRiding
	a (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;Lnet/minecraft/world/entity/EntityLiving;)V wasHurtBy
	a (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;Lnet/minecraft/world/entity/ai/BehaviorController;)Lnet/minecraft/world/entity/ai/BehaviorController; makeBrain
	a (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;Lnet/minecraft/world/entity/item/EntityItem;)V pickUpItem
	a (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;Lnet/minecraft/world/entity/player/EntityHuman;Ljava/util/List;)V throwItemsTowardPlayer
	a (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	a (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;Lnet/minecraft/world/entity/schedule/Activity;)Lnet/minecraft/sounds/SoundEffect; getSoundForActivity
	a (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;Lnet/minecraft/world/item/ItemStack;)Z wantsToPickup
	a (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;Z)V stopHoldingOffHandItem
	a (Lnet/minecraft/world/entity/monster/piglin/EntityPiglinAbstract;)V broadcastUniversalAnger
	a (Lnet/minecraft/world/entity/monster/piglin/EntityPiglinAbstract;Lnet/minecraft/world/entity/EntityLiving;)V maybeRetaliate
	a (Lnet/minecraft/world/entity/player/EntityHuman;Z)V angerNearbyPiglins
	a (Lnet/minecraft/world/item/ItemStack;)Z isLovedItem
	b ()Lnet/minecraft/world/entity/ai/behavior/BehaviorGateSingle; createIdleLookBehaviors
	b (Lnet/minecraft/world/entity/EntityLiving;)Z isPlayerHoldingLovedItem
	b (Lnet/minecraft/world/entity/ai/BehaviorController;)V initIdleActivity
	b (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;)V cancelAdmiring
	b (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;Ljava/util/List;)V throwItemsTowardRandomPos
	b (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;Lnet/minecraft/world/entity/EntityLiving;)Z isNearestValidAttackTarget
	b (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;Lnet/minecraft/world/entity/ai/BehaviorController;)V initFightActivity
	b (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;Lnet/minecraft/world/item/ItemStack;)Z canAdmire
	b (Lnet/minecraft/world/entity/monster/piglin/EntityPiglinAbstract;)Ljava/util/Optional; getNearestVisibleTargetablePlayer
	b (Lnet/minecraft/world/entity/monster/piglin/EntityPiglinAbstract;Lnet/minecraft/world/entity/EntityLiving;)V broadcastAngerTarget
	b (Lnet/minecraft/world/item/ItemStack;)Z isBarterCurrency
	c ()Lnet/minecraft/world/entity/ai/behavior/BehaviorGateSingle; createIdleMovementBehaviors
	c (Lnet/minecraft/world/entity/EntityLiving;)Z hasCrossbow
	c (Lnet/minecraft/world/entity/ai/BehaviorController;)V initCelebrateActivity
	c (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;)Ljava/util/Optional; getSoundForCurrentActivity
	c (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;Lnet/minecraft/world/entity/EntityLiving;)V broadcastRetreat
	c (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;Lnet/minecraft/world/item/ItemStack;)V holdInOffhand
	c (Lnet/minecraft/world/entity/monster/piglin/EntityPiglinAbstract;)V dontKillAnyMoreHoglinsForAWhile
	c (Lnet/minecraft/world/entity/monster/piglin/EntityPiglinAbstract;Lnet/minecraft/world/entity/EntityLiving;)V setAngerTarget
	c (Lnet/minecraft/world/item/ItemStack;)Z isFood
	d ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; avoidRepellent
	d (Lnet/minecraft/world/entity/EntityLiving;)V admireGoldItem
	d (Lnet/minecraft/world/entity/ai/BehaviorController;)V initAdmireItemActivity
	d (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;)Ljava/util/List; getVisibleAdultPiglins
	d (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;Lnet/minecraft/world/entity/EntityLiving;)V retreatFromNearestTarget
	d (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;Lnet/minecraft/world/item/ItemStack;)V putInInventory
	d (Lnet/minecraft/world/entity/monster/piglin/EntityPiglinAbstract;)Z isIdle
	d (Lnet/minecraft/world/entity/monster/piglin/EntityPiglinAbstract;Lnet/minecraft/world/entity/EntityLiving;)V setAngerTargetToNearestTargetablePlayerIfFound
	e ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; babyAvoidNemesis
	e (Lnet/minecraft/world/entity/EntityLiving;)Z seesPlayerHoldingLovedItem
	e (Lnet/minecraft/world/entity/ai/BehaviorController;)V initRetreatActivity
	e (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;)Ljava/util/Optional; getAvoidTarget
	e (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;Lnet/minecraft/world/entity/EntityLiving;)V setAvoidTargetAndDontHuntForAWhile
	e (Lnet/minecraft/world/entity/monster/piglin/EntityPiglinAbstract;)Ljava/util/List; getAdultPiglins
	e (Lnet/minecraft/world/entity/monster/piglin/EntityPiglinAbstract;Lnet/minecraft/world/entity/EntityLiving;)V setAngerTargetIfCloserThanCurrent
	f ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; avoidZombified
	f (Lnet/minecraft/world/entity/EntityLiving;)Z doesntSeeAnyPlayerHoldingLovedItem
	f (Lnet/minecraft/world/entity/ai/BehaviorController;)V initRideHoglinActivity
	f (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;)Z isBabyRidingBaby
	f (Lnet/minecraft/world/entity/monster/piglin/EntityPiglinAbstract;)Ljava/util/Optional; getAngerTarget
	g ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; babySometimesRideBabyHoglin
	g (Lnet/minecraft/world/entity/EntityLiving;)Z wasHurtRecently
	g (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;)Ljava/util/List; getBarterResponseItems
	h (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;)Z isNearZombified
	i (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;)Ljava/util/Optional; findNearestValidAttackTarget
	j (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;)Z isNearAvoidTarget
	k (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;)V stopWalking
	l (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;)Z wantsToStopFleeing
	m (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;)Z piglinsEqualOrOutnumberHoglins
	n (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;)Z hoglinsOutnumberPiglins
	o (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;)V eat
	p (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;)Lnet/minecraft/world/phys/Vec3D; getRandomNearbyPos
	q (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;)Z hasEatenRecently
	r (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;)Z isAdmiringItem
	s (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;)Z isNearRepellent
	t (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;)Z isAdmiringDisabled
	u (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;)Z isHoldingItemInOffHand
	v (Lnet/minecraft/world/entity/monster/piglin/EntityPiglin;)Z isNotHoldingLovedItemInOffHand
net/minecraft/world/entity/monster/piglin/PiglinBruteAI net/minecraft/world/entity/monster/piglin/PiglinBruteAi
	a ANGER_DURATION
	b MELEE_ATTACK_COOLDOWN
	c ACTIVITY_SOUND_LIKELIHOOD_PER_TICK
	d MAX_LOOK_DIST
	e INTERACTION_RANGE
	f TARGETING_RANGE
	g SPEED_MULTIPLIER_WHEN_IDLING
	h HOME_CLOSE_ENOUGH_DISTANCE
	i HOME_TOO_FAR_DISTANCE
	j HOME_STROLL_AROUND_DISTANCE
	a ()Lnet/minecraft/world/entity/ai/behavior/BehaviorGateSingle; createIdleLookBehaviors
	a (Lnet/minecraft/world/entity/monster/piglin/EntityPiglinAbstract;)Ljava/util/Optional; findNearestValidAttackTarget
	a (Lnet/minecraft/world/entity/monster/piglin/EntityPiglinAbstract;Lnet/minecraft/world/entity/EntityLiving;)Z isNearestValidAttackTarget
	a (Lnet/minecraft/world/entity/monster/piglin/EntityPiglinAbstract;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Ljava/util/Optional; getTargetIfWithinRange
	a (Lnet/minecraft/world/entity/monster/piglin/EntityPiglinBrute;)V initMemories
	a (Lnet/minecraft/world/entity/monster/piglin/EntityPiglinBrute;Lnet/minecraft/world/entity/EntityLiving;)V wasHurtBy
	a (Lnet/minecraft/world/entity/monster/piglin/EntityPiglinBrute;Lnet/minecraft/world/entity/ai/BehaviorController;)Lnet/minecraft/world/entity/ai/BehaviorController; makeBrain
	b ()Lnet/minecraft/world/entity/ai/behavior/BehaviorGateSingle; createIdleMovementBehaviors
	b (Lnet/minecraft/world/entity/monster/piglin/EntityPiglinBrute;)V updateActivity
	b (Lnet/minecraft/world/entity/monster/piglin/EntityPiglinBrute;Lnet/minecraft/world/entity/EntityLiving;)V setAngerTarget
	b (Lnet/minecraft/world/entity/monster/piglin/EntityPiglinBrute;Lnet/minecraft/world/entity/ai/BehaviorController;)V initCoreActivity
	c (Lnet/minecraft/world/entity/monster/piglin/EntityPiglinBrute;)V maybePlayActivitySound
	c (Lnet/minecraft/world/entity/monster/piglin/EntityPiglinBrute;Lnet/minecraft/world/entity/ai/BehaviorController;)V initIdleActivity
	d (Lnet/minecraft/world/entity/monster/piglin/EntityPiglinBrute;)V playActivitySound
	d (Lnet/minecraft/world/entity/monster/piglin/EntityPiglinBrute;Lnet/minecraft/world/entity/ai/BehaviorController;)V initFightActivity
net/minecraft/world/entity/npc/EntityVillager net/minecraft/world/entity/npc/Villager
	bU BREEDING_FOOD_THRESHOLD
	bV FOOD_POINTS
	bW SPEED_MODIFIER
	bX POI_MEMORIES
	bY LOGGER
	bZ DATA_VILLAGER_DATA
	ca TRADES_PER_LEVEL
	cb WANTED_ITEMS
	cc MAX_GOSSIP_TOPICS
	cd GOSSIP_COOLDOWN
	ce GOSSIP_DECAY_INTERVAL
	cf REPUTATION_CHANGE_PER_EVENT
	cg HOW_FAR_AWAY_TO_TALK_TO_OTHER_VILLAGERS_ABOUT_GOLEMS
	ch HOW_MANY_VILLAGERS_NEED_TO_AGREE_TO_SPAWN_A_GOLEM
	ci TIME_SINCE_SLEEPING_FOR_GOLEM_SPAWNING
	cj updateMerchantTimer
	ck increaseProfessionLevelOnUpdate
	cl lastTradedPlayer
	cm chasing
	cn foodLevel
	co gossips
	cp lastGossipTime
	cq lastGossipDecayTime
	cr villagerXp
	cs lastRestockGameTime
	ct numberOfRestocksToday
	cu lastRestockCheckDayTime
	cv assignProfessionWhenSpawned
	cw MEMORY_TYPES
	cx SENSOR_TYPES
	O_ ()Z canBreed
	T ()V sendDebugPackets
	U ()V customServerAiStep
	a (J)Z wantsToSpawnGolem
	a (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/BehaviorController; makeBrain
	a (Lnet/minecraft/nbt/NBTBase;)V setGossips
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/level/WorldServer;JI)V spawnGolemIfNeeded
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLightning;)V thunderHit
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillager;J)V gossip
	a (Lnet/minecraft/world/damagesource/DamageSource;)V die
	a (Lnet/minecraft/world/entity/Entity;)V tellWitnessesThatIWasMurdered
	a (Lnet/minecraft/world/entity/EntityLiving;)V setLastHurtByMob
	a (Lnet/minecraft/world/entity/ai/BehaviorController;)V registerBrainGoals
	a (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)V releasePoi
	a (Lnet/minecraft/world/entity/ai/village/ReputationEvent;Lnet/minecraft/world/entity/Entity;)V onReputationEventFrom
	a (Lnet/minecraft/world/entity/npc/VillagerData;)V setVillagerData
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	a_ ()V defineSynchedData
	b (B)V handleEntityEvent
	b (J)Z golemSpawnConditionsMet
	b (Lnet/minecraft/core/BlockPosition;)V startSleeping
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/npc/EntityVillager; getBreedOffspring
	b (Lnet/minecraft/world/entity/item/EntityItem;)V pickUpItem
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	b (Lnet/minecraft/world/item/trading/MerchantRecipe;)V rewardTradeXp
	b (Lnet/minecraft/world/item/trading/MerchantRecipeList;)V setOffers
	c (Lnet/minecraft/server/level/WorldServer;)V refreshBrain
	cj ()Lnet/minecraft/network/chat/IChatBaseComponent; getTypeName
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	dH ()Lnet/minecraft/world/entity/ai/BehaviorController; getBrain
	dI ()Lbgy$b; brainProvider
	e (Lnet/minecraft/world/entity/player/EntityHuman;)V setTradingPlayer
	f (Lnet/minecraft/world/entity/player/EntityHuman;)I getPlayerReputation
	fY ()V stopTrading
	fZ ()V updateTrades
	fv ()V stopSleeping
	g (Lnet/minecraft/world/entity/player/EntityHuman;)V startTrading
	gA ()I countFoodPointsInInventory
	gB ()V maybeDecayGossip
	gC ()V resetNumberOfRestocks
	ga ()Z isClientSide
	gb ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	gc ()Z assignProfessionWhenSpawned
	gd ()Lnet/minecraft/world/entity/npc/VillagerData; getVillagerData
	ge ()Z canRestock
	gf ()V restock
	gg ()Z shouldRestock
	gh ()V playWorkSound
	gi ()Z isChasing
	gj ()V eatAndDigestFood
	gk ()Z hasExcessFood
	gl ()Z wantsMoreFood
	gm ()Z hasFarmSeeds
	gn ()Lnet/minecraft/world/entity/ai/gossip/Reputation; getGossips
	go ()V setUnhappy
	gp ()V resetSpecialPrices
	gq ()V resendOffersToTradingPlayer
	gr ()Z needsToRestock
	gs ()Z allowedToRestock
	gt ()V catchUpDemand
	gu ()V updateDemand
	gv ()V releaseAllPois
	gw ()Z hungry
	gx ()V eatUntilFull
	gy ()Z shouldIncreaseLevel
	gz ()V increaseMerchantCareer
	h (D)Z removeWhenFarAway
	h (Lnet/minecraft/world/entity/player/EntityHuman;)V updateSpecialPrices
	k (Lnet/minecraft/world/item/ItemStack;)Z wantsToPickUp
	l ()V tick
	m ()V ageBoundaryReached
	r ()I getVillagerXp
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	t (I)V setVillagerXp
	u (I)V digestFood
	x (Z)V setChasing
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
net/minecraft/world/entity/npc/EntityVillagerAbstract net/minecraft/world/entity/npc/AbstractVillager
	bS VILLAGER_SLOT_OFFSET
	bT offers
	bU DATA_UNHAPPY_COUNTER
	bV VILLAGER_INVENTORY_SIZE
	bW tradingPlayer
	bX inventory
	a (Lnet/minecraft/core/particles/ParticleParam;)V addParticlesAroundSelf
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/damagesource/DamageSource;)V die
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z canBeLeashed
	a (Lnet/minecraft/world/item/trading/MerchantRecipe;)V notifyTrade
	a (Lnet/minecraft/world/item/trading/MerchantRecipeList;)V overrideOffers
	a (Lnet/minecraft/world/item/trading/MerchantRecipeList;[Lnet/minecraft/world/entity/npc/VillagerTrades$IMerchantRecipeOption;I)V addOffersFromItemListings
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	a_ ()V defineSynchedData
	a_ (I)Lnet/minecraft/world/entity/SlotAccess; getSlot
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/level/WorldServer;)Lnet/minecraft/world/entity/Entity; changeDimension
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/world/item/trading/MerchantRecipe;)V rewardTradeXp
	e (Lnet/minecraft/world/entity/player/EntityHuman;)V setTradingPlayer
	fS ()Lnet/minecraft/world/entity/player/EntityHuman; getTradingPlayer
	fT ()Z isTrading
	fU ()Lnet/minecraft/world/item/trading/MerchantRecipeList; getOffers
	fV ()Z showProgressBar
	fW ()Lnet/minecraft/sounds/SoundEffect; getNotifyTradeSound
	fX ()V playCelebrateSound
	fY ()V stopTrading
	fZ ()V updateTrades
	ga ()Z isClientSide
	l (Lnet/minecraft/world/item/ItemStack;)V notifyTradeUpdated
	q ()I getUnhappyCounter
	r ()I getVillagerXp
	r (I)V setUnhappyCounter
	s (I)V overrideXp
	u (F)Lnet/minecraft/world/phys/Vec3D; getRopeHoldPosition
	w ()Lnet/minecraft/world/InventorySubcontainer; getInventory
	w (Z)Lnet/minecraft/sounds/SoundEffect; getTradeUpdatedSound
net/minecraft/world/entity/npc/EntityVillagerTrader net/minecraft/world/entity/npc/WanderingTrader
	bU NUMBER_OF_TRADE_OFFERS
	bV wanderTarget
	bW despawnDelay
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	b (Lnet/minecraft/world/item/trading/MerchantRecipe;)V rewardTradeXp
	b_ ()V aiStep
	c (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/sounds/SoundEffect; getDrinkingSound
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	fV ()Z showProgressBar
	fW ()Lnet/minecraft/sounds/SoundEffect; getNotifyTradeSound
	fZ ()V updateTrades
	g (Lnet/minecraft/core/BlockPosition;)V setWanderTarget
	gb ()I getDespawnDelay
	gc ()V maybeDespawn
	gd ()Lnet/minecraft/core/BlockPosition; getWanderTarget
	h (D)Z removeWhenFarAway
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	t (I)V setDespawnDelay
	w (Z)Lnet/minecraft/sounds/SoundEffect; getTradeUpdatedSound
	x ()V registerGoals
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
net/minecraft/world/entity/npc/MerchantWrapper net/minecraft/world/entity/npc/ClientSideMerchant
	a source
	b offers
	c xp
	a (Lnet/minecraft/world/item/trading/MerchantRecipe;)V notifyTrade
	a (Lnet/minecraft/world/item/trading/MerchantRecipeList;)V overrideOffers
	e (Lnet/minecraft/world/entity/player/EntityHuman;)V setTradingPlayer
	fS ()Lnet/minecraft/world/entity/player/EntityHuman; getTradingPlayer
	fU ()Lnet/minecraft/world/item/trading/MerchantRecipeList; getOffers
	fV ()Z showProgressBar
	fW ()Lnet/minecraft/sounds/SoundEffect; getNotifyTradeSound
	ga ()Z isClientSide
	l (Lnet/minecraft/world/item/ItemStack;)V notifyTradeUpdated
	r ()I getVillagerXp
	s (I)V overrideXp
net/minecraft/world/entity/npc/MobSpawnerCat net/minecraft/world/entity/npc/CatSpawner
	a TICK_DELAY
	b nextTick
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/server/level/WorldServer;)I spawnCat
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;)I spawnInVillage
	a (Lnet/minecraft/server/level/WorldServer;ZZ)I tick
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;)I spawnInHut
net/minecraft/world/entity/npc/MobSpawnerTrader net/minecraft/world/entity/npc/WanderingTraderSpawner
	a DEFAULT_SPAWN_DELAY
	b DEFAULT_TICK_DELAY
	c MIN_SPAWN_CHANCE
	d MAX_SPAWN_CHANCE
	e SPAWN_CHANCE_INCREASE
	f SPAWN_ONE_IN_X_CHANCE
	g NUMBER_OF_SPAWN_ATTEMPTS
	h random
	i serverLevelData
	j tickDelay
	k spawnDelay
	l spawnChance
	a (Lnet/minecraft/server/level/WorldServer;)Z spawn
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/npc/EntityVillagerTrader;I)V tryToSpawnLlamaFor
	a (Lnet/minecraft/server/level/WorldServer;ZZ)I tick
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z hasEnoughSpace
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;I)Lnet/minecraft/core/BlockPosition; findSpawnPositionNear
net/minecraft/world/entity/npc/NPC net/minecraft/world/entity/npc/Npc
net/minecraft/world/entity/npc/VillagerTrades$IMerchantRecipeOption net/minecraft/world/entity/npc/VillagerTrades$ItemListing
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/trading/MerchantRecipe; getOffer
net/minecraft/world/entity/player/AutoRecipeStackManager net/minecraft/world/entity/player/StackedContents
	a contents
	b EMPTY
	a ()V clear
	a (I)Lnet/minecraft/world/item/ItemStack; fromStackingIndex
	a (II)I take
	a (Lnet/minecraft/world/item/ItemStack;)V accountSimpleStack
	a (Lnet/minecraft/world/item/ItemStack;I)V accountStack
	a (Lnet/minecraft/world/item/crafting/IRecipe;ILit/unimi/dsi/fastutil/ints/IntList;)I getBiggestCraftableStack
	a (Lnet/minecraft/world/item/crafting/IRecipe;Lit/unimi/dsi/fastutil/ints/IntList;)Z canCraft
	a (Lnet/minecraft/world/item/crafting/IRecipe;Lit/unimi/dsi/fastutil/ints/IntList;I)Z canCraft
	b (I)Z has
	b (II)V put
	b (Lnet/minecraft/world/item/ItemStack;)V accountStack
	b (Lnet/minecraft/world/item/crafting/IRecipe;Lit/unimi/dsi/fastutil/ints/IntList;)I getBiggestCraftableStack
	c (Lnet/minecraft/world/item/ItemStack;)I getStackingIndex
net/minecraft/world/entity/player/EntityHuman net/minecraft/world/entity/player/Player
	b LOGGER
	bA MAX_HEALTH
	bB SLEEP_DURATION
	bC WAKE_UP_DURATION
	bD ENDER_SLOT_OFFSET
	bE CROUCH_BB_HEIGHT
	bF SWIMMING_BB_WIDTH
	bG SWIMMING_BB_HEIGHT
	bH DEFAULT_EYE_HEIGHT
	bI STANDING_DIMENSIONS
	bJ DATA_PLAYER_MODE_CUSTOMISATION
	bK DATA_PLAYER_MAIN_HAND
	bL DATA_SHOULDER_LEFT
	bM DATA_SHOULDER_RIGHT
	bN enderChestInventory
	bO inventoryMenu
	bP containerMenu
	bQ foodData
	bR jumpTriggerTime
	bS oBob
	bT bob
	bU takeXpDelay
	bV xCloakO
	bW yCloakO
	bX zCloakO
	bY xCloak
	bZ yCloak
	bz MAX_NAME_LENGTH
	c POSES
	ca zCloak
	cb wasUnderwater
	cc experienceLevel
	cd totalExperience
	ce experienceProgress
	cf enchantmentSeed
	cg defaultFlySpeed
	ch fishing
	ci hurtDir
	cj timeEntitySatOnShoulder
	ck inventory
	cl sleepCounter
	cm abilities
	cn lastLevelUpTime
	co gameProfile
	cp reducedDebugInfo
	cq lastItemInMainHand
	cr cooldowns
	cs lastDeathLocation
	d FLY_ACHIEVEMENT_SPEED
	e DATA_PLAYER_ABSORPTION_ID
	f DATA_SCORE_ID
	F_ ()Z isSpectator
	G_ ()Lnet/minecraft/network/chat/IChatBaseComponent; getDisplayName
	U ()Z isTextFilteringEnabled
	W ()Ljava/util/Optional; getWardenSpawnTracker
	Z ()Lnet/minecraft/network/chat/IChatBaseComponent; getName
	a (FFLnet/minecraft/world/damagesource/DamageSource;)Z causeFallDamage
	a (ILnet/minecraft/world/item/trading/MerchantRecipeList;IIZZ)V sendMerchantOffers
	a (Ljava/util/Collection;)I awardRecipes
	a (Ljava/util/Optional;)V setLastDeathLocation
	a (Lnet/minecraft/core/BlockPosition;)Lcom/mojang/datafixers/util/Either; startSleepInBed
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/item/ItemStack;)Z mayUseItemAt
	a (Lnet/minecraft/core/particles/ParticleParam;)V addParticlesAroundSelf
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Z)V displayClientMessage
	a (Lnet/minecraft/network/chat/IChatMutableComponent;)Lnet/minecraft/network/chat/IChatMutableComponent; decorateDisplayNameComponent
	a (Lnet/minecraft/resources/MinecraftKey;)V awardStat
	a (Lnet/minecraft/resources/MinecraftKey;I)V awardStat
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;FZZ)Ljava/util/Optional; findRespawnPositionAndUseSpawnBlock
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z wasKilled
	a (Lnet/minecraft/sounds/SoundEffect;FF)V playSound
	a (Lnet/minecraft/sounds/SoundEffect;Lnet/minecraft/sounds/SoundCategory;FF)V playNotifySound
	a (Lnet/minecraft/stats/Statistic;)V resetStat
	a (Lnet/minecraft/stats/Statistic;I)V awardStat
	a (Lnet/minecraft/world/ITileInventory;)Ljava/util/OptionalInt; openMenu
	a (Lnet/minecraft/world/damagesource/DamageSource;)V die
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/entity/Entity$RemovalReason;)V remove
	a (Lnet/minecraft/world/entity/Entity;)V crit
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; interactOn
	a (Lnet/minecraft/world/entity/EntityPose;)Lnet/minecraft/world/entity/EntitySize; getDimensions
	a (Lnet/minecraft/world/entity/EnumItemSlot;)Z doesEmitEquipEvent
	a (Lnet/minecraft/world/entity/EnumItemSlot;Lnet/minecraft/world/item/ItemStack;)V setItemSlot
	a (Lnet/minecraft/world/entity/EnumMainHand;)V setMainArm
	a (Lnet/minecraft/world/entity/animal/horse/EntityHorseAbstract;Lnet/minecraft/world/IInventory;)V openHorseInventory
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z canHarmPlayer
	a (Lnet/minecraft/world/entity/player/PlayerModelPart;)Z isModelPartShown
	a (Lnet/minecraft/world/item/ItemStack;I)V onEnchantmentPerformed
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/EnumHand;)V openItemGui
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/ClickAction;)V updateTutorialInventoryAction
	a (Lnet/minecraft/world/item/ItemStack;Z)Lnet/minecraft/world/entity/item/EntityItem; drop
	a (Lnet/minecraft/world/item/ItemStack;ZZ)Lnet/minecraft/world/entity/item/EntityItem; drop
	a (Lnet/minecraft/world/level/CommandBlockListenerAbstract;)V openMinecartCommandBlock
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/EnumGamemode;)Z blockActionRestricted
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; eat
	a (Lnet/minecraft/world/level/block/entity/TileEntityCommand;)V openCommandBlock
	a (Lnet/minecraft/world/level/block/entity/TileEntityJigsaw;)V openJigsawBlock
	a (Lnet/minecraft/world/level/block/entity/TileEntitySign;)V openTextEdit
	a (Lnet/minecraft/world/level/block/entity/TileEntityStructure;)V openStructureBlock
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/phys/Vec3D;)V makeStuckInBlock
	a (Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/entity/EnumMoveType;)Lnet/minecraft/world/phys/Vec3D; maybeBackOffFromEdge
	a (ZZ)V stopSleepInBed
	a ([Lnet/minecraft/resources/MinecraftKey;)V awardRecipesByKey
	aF ()F getBlockSpeedFactor
	aI ()Lnet/minecraft/sounds/SoundEffect; getSwimSound
	aJ ()Lnet/minecraft/sounds/SoundEffect; getSwimSplashSound
	aK ()Lnet/minecraft/sounds/SoundEffect; getSwimHighSpeedSplashSound
	aQ ()Lnet/minecraft/world/entity/Entity$MovementEmission; getMovementEmission
	aY ()V updateSwimming
	a_ ()V defineSynchedData
	a_ (I)Lnet/minecraft/world/entity/SlotAccess; getSlot
	as ()I getPortalWaitTime
	b (B)V handleEntityEvent
	b (Ljava/util/Collection;)I resetRecipes
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/stats/Statistic;)V awardStat
	b (Lnet/minecraft/world/damagesource/DamageSource;)Z isInvulnerableTo
	b (Lnet/minecraft/world/damagesource/DamageSource;F)V hurtArmor
	b (Lnet/minecraft/world/entity/Entity;)V magicCrit
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/world/level/block/state/IBlockData;)Z shouldRemoveSoulSpeed
	bG ()I getDimensionChangingDelay
	bH ()Ljava/lang/Iterable; getHandSlots
	bI ()Ljava/lang/Iterable; getArmorSlots
	bV ()Z isSwimming
	b_ ()V aiStep
	bb ()V doWaterSplashEffect
	bl ()Z canBeHitByProjectile
	bt ()V rideTick
	bu ()D getMyRidingOffset
	by ()V removeVehicle
	c (I)V giveExperienceLevels
	c (Lnet/minecraft/nbt/NBTTagCompound;)V playShoulderEntityAmbientSound
	c (Lnet/minecraft/world/damagesource/DamageSource;F)V hurtHelmet
	c (Lnet/minecraft/world/entity/Entity;)V touch
	c (Lnet/minecraft/world/entity/EnumItemSlot;)Lnet/minecraft/world/item/ItemStack; getItemBySlot
	c (Lnet/minecraft/world/level/block/state/IBlockData;)F getDestroySpeed
	cX ()Lnet/minecraft/sounds/SoundCategory; getSoundSource
	cY ()I getFireImmuneTicks
	cu ()Ljava/lang/String; getScoreboardName
	cv ()Z isPushedByFluid
	cy ()Z shouldShowName
	d (F)V hurtCurrentlyUsedShield
	d (I)V giveExperiencePoints
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	d (Lnet/minecraft/world/entity/Entity;)V attack
	d (Lnet/minecraft/world/entity/EntityLiving;)V blockUsingShield
	d (Lnet/minecraft/world/level/block/state/IBlockData;)Z hasCorrectToolForDrops
	dE ()Z shouldBeSaved
	dF ()Z isAlwaysTicking
	dN ()Z onSoulSpeedBlock
	dT ()Z isAffectedByFluids
	dX ()I getExperienceReward
	dY ()Z isAlwaysExperienceDropper
	dz ()Z canSprint
	eP ()Z isImmobile
	eS ()V jumpFromGround
	eV ()F getFlyingSpeed
	eW ()F getSpeed
	eY ()V serverAiStep
	eh ()Z canBeSeenAsEnemy
	er ()V dropEquipment
	ex ()F getHurtDir
	ey ()Lbfx$a; getFallSounds
	f ()Z isCreative
	f (Lnet/minecraft/core/BlockPosition;)Z freeAt
	f (Lnet/minecraft/world/damagesource/DamageSource;F)V actuallyHurt
	f (Lnet/minecraft/world/item/ItemStack;)Z canTakeItem
	fA ()Z wantsToStopRiding
	fB ()Z isStayingOnGroundSurface
	fC ()Z updateIsUnderwater
	fD ()V updatePlayerPose
	fE ()I getScore
	fF ()V destroyVanishingCursedItems
	fG ()V sweepAttack
	fH ()V respawn
	fI ()Lcom/mojang/authlib/GameProfile; getGameProfile
	fJ ()Lnet/minecraft/world/entity/player/PlayerInventory; getInventory
	fK ()Lnet/minecraft/world/entity/player/PlayerAbilities; getAbilities
	fL ()Z hasContainerOpen
	fM ()Z isSleepingLongEnough
	fN ()I getSleepTimer
	fO ()Z tryToStartFallFlying
	fP ()V startFallFlying
	fQ ()V stopFallFlying
	fR ()I getEnchantmentSeed
	fS ()I getXpNeededForNextLevel
	fT ()Lnet/minecraft/world/food/FoodMetaData; getFoodData
	fU ()Z isHurt
	fV ()Z mayBuild
	fW ()Lnet/minecraft/world/inventory/InventoryEnderChest; getEnderChestInventory
	fX ()V removeEntitiesOnShoulder
	fY ()Lnet/minecraft/world/scores/Scoreboard; getScoreboard
	fZ ()Z isReducedDebugInfo
	fb ()F getAbsorptionAmount
	fd ()Lnet/minecraft/world/entity/EnumMainHand; getMainArm
	fr ()Lcom/google/common/collect/ImmutableList; getDismountPoses
	fv ()V stopSleeping
	fy ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	fz ()Z isSecondaryUseActive
	g ()Z isLocalPlayer
	g (I)V setRemainingFireTicks
	g (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; getProjectile
	ga ()Lnet/minecraft/nbt/NBTTagCompound; getShoulderEntityLeft
	gb ()Lnet/minecraft/nbt/NBTTagCompound; getShoulderEntityRight
	gc ()F getCurrentItemAttackStrengthDelay
	gd ()V resetAttackStrengthTicker
	ge ()Lnet/minecraft/world/item/ItemCooldown; getCooldowns
	gf ()F getLuck
	gg ()Z canUseGameMasterBlocks
	gh ()Z isScoping
	gi ()Ljava/util/Optional; getLastDeathLocation
	h (Lnet/minecraft/nbt/NBTTagCompound;)Z setEntityOnShoulder
	h (Lnet/minecraft/world/entity/EntityLiving;)V doAutoAttackOnTouch
	h (Lnet/minecraft/world/phys/Vec3D;)V travel
	i (Lnet/minecraft/nbt/NBTTagCompound;)V setShoulderEntityLeft
	i (Lnet/minecraft/world/item/ItemStack;)Z addItem
	j (Lnet/minecraft/nbt/NBTTagCompound;)V setShoulderEntityRight
	k ()Lnet/minecraft/world/item/ItemCooldown; createItemCooldowns
	k (Lnet/minecraft/nbt/NBTTagCompound;)V respawnEntityOnShoulder
	l ()V tick
	q ()V closeContainer
	q (F)V animateHurt
	q (I)V setScore
	r ()V doCloseContainer
	r (DDD)V checkMovementStatistics
	r (I)V increaseScore
	s ()V turtleHelmetTick
	s (DDD)V checkRidingStatistics
	s (I)V startAutoSpinAttack
	s (Z)V disableShield
	t (Z)Z canEat
	u (F)Lnet/minecraft/world/phys/Vec3D; getRopeHoldPosition
	u (Z)V setReducedDebugInfo
	w ()V onUpdateAbilities
	x ()V moveCloak
	x (F)V setAbsorptionAmount
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	y ()Z isAboveGround
	y (F)V causeFoodExhaustion
	z (F)F getAttackStrengthScale
net/minecraft/world/entity/player/EntityHuman$EnumBedResult net/minecraft/world/entity/player/Player$BedSleepingProblem
	a NOT_POSSIBLE_HERE
	b NOT_POSSIBLE_NOW
	c TOO_FAR_AWAY
	d OBSTRUCTED
	e OTHER_PROBLEM
	f NOT_SAFE
	g message
	h $VALUES
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getMessage
	b ()[Lnet/minecraft/world/entity/player/EntityHuman$EnumBedResult; $values
net/minecraft/world/entity/player/EnumChatVisibility net/minecraft/world/entity/player/ChatVisiblity
	a FULL
	b SYSTEM
	c HIDDEN
	d BY_ID
	e id
	f key
	g $VALUES
	a ()I getId
	a (I)Lnet/minecraft/world/entity/player/EnumChatVisibility; byId
	b ()Ljava/lang/String; getKey
	d ()[Lnet/minecraft/world/entity/player/EnumChatVisibility; $values
net/minecraft/world/entity/player/PlayerAbilities net/minecraft/world/entity/player/Abilities
	a invulnerable
	b flying
	c mayfly
	d instabuild
	e mayBuild
	f flyingSpeed
	g walkingSpeed
	a ()F getFlyingSpeed
	a (F)V setFlyingSpeed
	a (Lnet/minecraft/nbt/NBTTagCompound;)V addSaveData
	b ()F getWalkingSpeed
	b (F)V setWalkingSpeed
	b (Lnet/minecraft/nbt/NBTTagCompound;)V loadSaveData
net/minecraft/world/entity/player/PlayerInventory net/minecraft/world/entity/player/Inventory
	c POP_TIME_DURATION
	d INVENTORY_SIZE
	e SLOT_OFFHAND
	f NOT_FOUND_INDEX
	g ALL_ARMOR_SLOTS
	h HELMET_SLOT_ONLY
	i items
	j armor
	k offhand
	l selected
	m player
	n SELECTION_SIZE
	o compartments
	p timesChanged
	Z ()Lnet/minecraft/network/chat/IChatBaseComponent; getName
	a ()V clearContent
	a (D)V swapPaint
	a (I)Lnet/minecraft/world/item/ItemStack; getItem
	a (II)Lnet/minecraft/world/item/ItemStack; removeItem
	a (ILnet/minecraft/world/item/ItemStack;)V setItem
	a (Ljava/util/function/Predicate;ILnet/minecraft/world/IInventory;)I clearOrCountMatchingItems
	a (Lnet/minecraft/nbt/NBTTagList;)Lnet/minecraft/nbt/NBTTagList; save
	a (Lnet/minecraft/tags/TagKey;)Z contains
	a (Lnet/minecraft/world/damagesource/DamageSource;F[I)V hurtArmor
	a (Lnet/minecraft/world/entity/player/AutoRecipeStackManager;)V fillStackedContents
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	a (Lnet/minecraft/world/entity/player/PlayerInventory;)V replaceWith
	a (Lnet/minecraft/world/item/ItemStack;)V setPickedItem
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z hasRemainingSpaceForItem
	a (Lnet/minecraft/world/item/ItemStack;Z)V placeItemBackInInventory
	a (Lnet/minecraft/world/level/block/state/IBlockData;)F getDestroySpeed
	a (Z)Lnet/minecraft/world/item/ItemStack; removeFromSelected
	aa_ ()Z isEmpty
	b ()I getContainerSize
	b (I)Lnet/minecraft/world/item/ItemStack; removeItemNoUpdate
	b (Lnet/minecraft/nbt/NBTTagList;)V load
	b (Lnet/minecraft/world/item/ItemStack;)I findSlotMatchingItem
	c (I)V pickSlot
	c (ILnet/minecraft/world/item/ItemStack;)Z add
	c (Lnet/minecraft/world/item/ItemStack;)I findSlotMatchingUnusedItem
	d (I)Z isHotbarSlot
	d (ILnet/minecraft/world/item/ItemStack;)I addResource
	d (Lnet/minecraft/world/item/ItemStack;)I getSlotWithRemainingSpace
	e ()V setChanged
	e (I)Lnet/minecraft/world/item/ItemStack; getArmor
	e (Lnet/minecraft/world/item/ItemStack;)Z add
	f ()Lnet/minecraft/world/item/ItemStack; getSelected
	f (Lnet/minecraft/world/item/ItemStack;)V placeItemBackInInventory
	g ()I getSelectionSize
	g (Lnet/minecraft/world/item/ItemStack;)V removeItem
	h ()I getFreeSlot
	h (Lnet/minecraft/world/item/ItemStack;)Z contains
	i ()I getSuitableHotbarSlot
	i (Lnet/minecraft/world/item/ItemStack;)I addResource
	j ()V tick
	k ()V dropAll
	l ()I getTimesChanged
net/minecraft/world/entity/projectile/EntityArrow net/minecraft/world/entity/projectile/AbstractArrow
	b inGround
	c inGroundTime
	d pickup
	e shakeTime
	f ARROW_BASE_DAMAGE
	g ID_FLAGS
	h PIERCE_LEVEL
	i FLAG_CRIT
	j FLAG_NOPHYSICS
	k FLAG_CROSSBOW
	l lastState
	m life
	n baseDamage
	o knockback
	p soundEvent
	q piercingIgnoreEntityIds
	r piercedAndKilledEntities
	C ()V startFalling
	D ()V resetPiercedEntities
	a (B)V setPierceLevel
	a (D)Z shouldRenderAtSqrDistance
	a (DDDFFIZ)V lerpTo
	a (IZ)V setFlag
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/entity/Entity;)Z canHitEntity
	a (Lnet/minecraft/world/entity/EntityLiving;)V doPostHurtEffects
	a (Lnet/minecraft/world/entity/EntityLiving;F)V setEnchantmentEffectsFromEntity
	a (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getEyeHeight
	a (Lnet/minecraft/world/entity/EnumMoveType;Lnet/minecraft/world/phys/Vec3D;)V move
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z tryPickup
	a (Lnet/minecraft/world/phys/MovingObjectPositionBlock;)V onHitBlock
	a (Lnet/minecraft/world/phys/MovingObjectPositionEntity;)V onHitEntity
	a (Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/phys/MovingObjectPositionEntity; findHitEntity
	a (Z)V setCritArrow
	aQ ()Lnet/minecraft/world/entity/Entity$MovementEmission; getMovementEmission
	a_ ()V defineSynchedData
	b (I)V setKnockback
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/sounds/SoundEffect;)V setSoundEvent
	b (Lnet/minecraft/world/entity/Entity;)V setOwner
	b_ (Lnet/minecraft/world/entity/player/EntityHuman;)V playerTouch
	c (DDDFF)V shoot
	cl ()Z isAttackable
	h (D)V setBaseDamage
	i ()V tickDespawn
	j ()Lnet/minecraft/sounds/SoundEffect; getDefaultHitGroundSoundEvent
	k ()Lnet/minecraft/sounds/SoundEffect; getHitGroundSoundEvent
	l ()V tick
	l (DDD)V lerpMotion
	o ()Lnet/minecraft/world/item/ItemStack; getPickupItem
	p ()D getBaseDamage
	p (Z)V setNoPhysics
	q ()I getKnockback
	q (Z)V setShotFromCrossbow
	r ()Z isCritArrow
	s ()Z shotFromCrossbow
	t ()B getPierceLevel
	w ()F getWaterInertia
	x ()Z isNoPhysics
	y ()Z shouldFall
net/minecraft/world/entity/projectile/EntityArrow$PickupStatus net/minecraft/world/entity/projectile/AbstractArrow$Pickup
	a DISALLOWED
	b ALLOWED
	c CREATIVE_ONLY
	d $VALUES
	a ()[Lnet/minecraft/world/entity/projectile/EntityArrow$PickupStatus; $values
	a (I)Lnet/minecraft/world/entity/projectile/EntityArrow$PickupStatus; byOrdinal
net/minecraft/world/entity/projectile/EntityDragonFireball net/minecraft/world/entity/projectile/DragonFireball
	e SPLASH_RANGE
	Z_ ()Z shouldBurn
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/phys/MovingObjectPosition;)V onHit
	bm ()Z isPickable
	j ()Lnet/minecraft/core/particles/ParticleParam; getTrailParticle
net/minecraft/world/entity/projectile/EntityEgg net/minecraft/world/entity/projectile/ThrownEgg
	a (Lnet/minecraft/world/phys/MovingObjectPosition;)V onHit
	a (Lnet/minecraft/world/phys/MovingObjectPositionEntity;)V onHitEntity
	b (B)V handleEntityEvent
	j ()Lnet/minecraft/world/item/Item; getDefaultItem
net/minecraft/world/entity/projectile/EntityEnderPearl net/minecraft/world/entity/projectile/ThrownEnderpearl
	a (Lnet/minecraft/world/phys/MovingObjectPosition;)V onHit
	a (Lnet/minecraft/world/phys/MovingObjectPositionEntity;)V onHitEntity
	b (Lnet/minecraft/server/level/WorldServer;)Lnet/minecraft/world/entity/Entity; changeDimension
	j ()Lnet/minecraft/world/item/Item; getDefaultItem
	l ()V tick
net/minecraft/world/entity/projectile/EntityEnderSignal net/minecraft/world/entity/projectile/EyeOfEnder
	b DATA_ITEM_STACK
	c tx
	d ty
	e tz
	f life
	g surviveAfterDeath
	a (D)Z shouldRenderAtSqrDistance
	a (Lnet/minecraft/core/BlockPosition;)V signalTo
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/item/ItemStack;)V setItem
	a_ ()V defineSynchedData
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	bh ()F getLightLevelDependentMagicValue
	cl ()Z isAttackable
	i ()Lnet/minecraft/world/item/ItemStack; getItem
	j ()Lnet/minecraft/world/item/ItemStack; getItemRaw
	l ()V tick
	l (DDD)V lerpMotion
net/minecraft/world/entity/projectile/EntityEvokerFangs net/minecraft/world/entity/projectile/EvokerFangs
	b ATTACK_DURATION
	c LIFE_OFFSET
	d ATTACK_TRIGGER_TICKS
	e warmupDelayTicks
	f sentSpikeEvent
	g lifeTicks
	h clientSideAttackStarted
	i owner
	j ownerUUID
	a (F)F getAnimationProgress
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/entity/EntityLiving;)V setOwner
	a_ ()V defineSynchedData
	b (B)V handleEntityEvent
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	c (Lnet/minecraft/world/entity/EntityLiving;)V dealDamageTo
	i ()Lnet/minecraft/world/entity/EntityLiving; getOwner
	l ()V tick
	v ()Lnet/minecraft/world/entity/Entity; getOwner
net/minecraft/world/entity/projectile/EntityFireball net/minecraft/world/entity/projectile/AbstractHurtingProjectile
	b xPower
	c yPower
	d zPower
	S ()Lnet/minecraft/network/protocol/Packet; getAddEntityPacket
	Z_ ()Z shouldBurn
	a (D)Z shouldRenderAtSqrDistance
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutSpawnEntity;)V recreateFromPacket
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/entity/Entity;)Z canHitEntity
	a_ ()V defineSynchedData
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	bB ()F getPickRadius
	bh ()F getLightLevelDependentMagicValue
	bm ()Z isPickable
	j ()Lnet/minecraft/core/particles/ParticleParam; getTrailParticle
	k ()F getInertia
	l ()V tick
net/minecraft/world/entity/projectile/EntityFireballFireball net/minecraft/world/entity/projectile/Fireball
	e DATA_ITEM_STACK
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/item/ItemStack;)V setItem
	a_ ()V defineSynchedData
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	i ()Lnet/minecraft/world/item/ItemStack; getItem
	o ()Lnet/minecraft/world/item/ItemStack; getItemRaw
net/minecraft/world/entity/projectile/EntityFireworks net/minecraft/world/entity/projectile/FireworkRocketEntity
	b DATA_ID_FIREWORKS_ITEM
	c DATA_ATTACHED_TO_TARGET
	d DATA_SHOT_AT_ANGLE
	e life
	f lifetime
	g attachedToEntity
	a (D)Z shouldRenderAtSqrDistance
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/phys/MovingObjectPositionBlock;)V onHitBlock
	a (Lnet/minecraft/world/phys/MovingObjectPositionEntity;)V onHitEntity
	a_ ()V defineSynchedData
	b (B)V handleEntityEvent
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	cl ()Z isAttackable
	i ()Lnet/minecraft/world/item/ItemStack; getItem
	j ()Z isShotAtAngle
	k ()V explode
	k (DDD)Z shouldRender
	l ()V tick
	o ()Z hasExplosion
	p ()V dealExplosionDamage
	q ()Z isAttachedToEntity
net/minecraft/world/entity/projectile/EntityFishingHook net/minecraft/world/entity/projectile/FishingHook
	b LOGGER
	c syncronizedRandom
	d biting
	e outOfWaterTime
	f MAX_OUT_OF_WATER_TIME
	g DATA_HOOKED_ENTITY
	h DATA_BITING
	i life
	j nibble
	k timeUntilLured
	l timeUntilHooked
	m fishAngle
	n openWater
	o hookedIn
	p currentState
	q luck
	r lureSpeed
	S ()Lnet/minecraft/network/protocol/Packet; getAddEntityPacket
	a (D)Z shouldRenderAtSqrDistance
	a (DDDFFIZ)V lerpTo
	a (Lnet/minecraft/core/BlockPosition;)V catchingFish
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/entity/projectile/EntityFishingHook$WaterPosition; getOpenWaterTypeForArea
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutSpawnEntity;)V recreateFromPacket
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/world/entity/Entity$RemovalReason;)V remove
	a (Lnet/minecraft/world/entity/Entity;)Z canHitEntity
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z shouldStopFishing
	a (Lnet/minecraft/world/entity/projectile/EntityFishingHook;)V updateOwnerInfo
	a (Lnet/minecraft/world/item/ItemStack;)I retrieve
	a (Lnet/minecraft/world/phys/MovingObjectPositionBlock;)V onHitBlock
	a (Lnet/minecraft/world/phys/MovingObjectPositionEntity;)V onHitEntity
	aQ ()Lnet/minecraft/world/entity/Entity$MovementEmission; getMovementEmission
	a_ ()V defineSynchedData
	ak ()V onClientRemoval
	b (B)V handleEntityEvent
	b (Lnet/minecraft/core/BlockPosition;)Z calculateOpenWater
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/Entity;)V setOwner
	c (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/entity/projectile/EntityFishingHook$WaterPosition; getOpenWaterTypeForBlock
	c (Lnet/minecraft/world/entity/Entity;)V pullEntity
	co ()Z canChangeDimensions
	i ()Z isOpenWaterFishing
	j ()Lnet/minecraft/world/entity/player/EntityHuman; getPlayerOwner
	k ()Lnet/minecraft/world/entity/Entity; getHookedIn
	l ()V tick
	o ()V checkCollision
	x (Lnet/minecraft/world/entity/Entity;)V setHookedEntity
net/minecraft/world/entity/projectile/EntityFishingHook$HookState net/minecraft/world/entity/projectile/FishingHook$FishHookState
	a FLYING
	b HOOKED_IN_ENTITY
	c BOBBING
	d $VALUES
	a ()[Lnet/minecraft/world/entity/projectile/EntityFishingHook$HookState; $values
net/minecraft/world/entity/projectile/EntityFishingHook$WaterPosition net/minecraft/world/entity/projectile/FishingHook$OpenWaterType
	a ABOVE_WATER
	b INSIDE_WATER
	c INVALID
	d $VALUES
	a ()[Lnet/minecraft/world/entity/projectile/EntityFishingHook$WaterPosition; $values
net/minecraft/world/entity/projectile/EntityLargeFireball net/minecraft/world/entity/projectile/LargeFireball
	e explosionPower
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/phys/MovingObjectPosition;)V onHit
	a (Lnet/minecraft/world/phys/MovingObjectPositionEntity;)V onHitEntity
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
net/minecraft/world/entity/projectile/EntityLlamaSpit net/minecraft/world/entity/projectile/LlamaSpit
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutSpawnEntity;)V recreateFromPacket
	a (Lnet/minecraft/world/phys/MovingObjectPositionBlock;)V onHitBlock
	a (Lnet/minecraft/world/phys/MovingObjectPositionEntity;)V onHitEntity
	a_ ()V defineSynchedData
	l ()V tick
net/minecraft/world/entity/projectile/EntityPotion net/minecraft/world/entity/projectile/ThrownPotion
	b SPLASH_RANGE
	c WATER_SENSITIVE_OR_ON_FIRE
	d SPLASH_RANGE_SQ
	a (Ljava/util/List;Lnet/minecraft/world/entity/Entity;)V applySplash
	a (Lnet/minecraft/core/BlockPosition;)V dowseFire
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/alchemy/PotionRegistry;)V makeAreaOfEffectCloud
	a (Lnet/minecraft/world/phys/MovingObjectPosition;)V onHit
	a (Lnet/minecraft/world/phys/MovingObjectPositionBlock;)V onHitBlock
	j ()Lnet/minecraft/world/item/Item; getDefaultItem
	o ()F getGravity
	p ()V applyWater
	q ()Z isLingering
net/minecraft/world/entity/projectile/EntityProjectile net/minecraft/world/entity/projectile/ThrowableProjectile
	a (D)Z shouldRenderAtSqrDistance
	l ()V tick
	o ()F getGravity
net/minecraft/world/entity/projectile/EntityProjectileThrowable net/minecraft/world/entity/projectile/ThrowableItemProjectile
	b DATA_ITEM_STACK
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/item/ItemStack;)V setItem
	a_ ()V defineSynchedData
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	i ()Lnet/minecraft/world/item/ItemStack; getItem
	j ()Lnet/minecraft/world/item/Item; getDefaultItem
	k ()Lnet/minecraft/world/item/ItemStack; getItemRaw
net/minecraft/world/entity/projectile/EntityShulkerBullet net/minecraft/world/entity/projectile/ShulkerBullet
	b SPEED
	c finalTarget
	d currentMoveDirection
	e flightSteps
	f targetDeltaX
	g targetDeltaY
	h targetDeltaZ
	i targetId
	a (D)Z shouldRenderAtSqrDistance
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;)V selectNextMoveDirection
	a (Lnet/minecraft/core/EnumDirection;)V setMoveDirection
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutSpawnEntity;)V recreateFromPacket
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/entity/Entity;)Z canHitEntity
	a (Lnet/minecraft/world/phys/MovingObjectPosition;)V onHit
	a (Lnet/minecraft/world/phys/MovingObjectPositionBlock;)V onHitBlock
	a (Lnet/minecraft/world/phys/MovingObjectPositionEntity;)V onHitEntity
	a_ ()V defineSynchedData
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	bK ()Z isOnFire
	bh ()F getLightLevelDependentMagicValue
	bm ()Z isPickable
	cX ()Lnet/minecraft/sounds/SoundCategory; getSoundSource
	ds ()V checkDespawn
	i ()Lnet/minecraft/core/EnumDirection; getMoveDirection
	j ()V destroy
	l ()V tick
net/minecraft/world/entity/projectile/EntitySmallFireball net/minecraft/world/entity/projectile/SmallFireball
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/phys/MovingObjectPosition;)V onHit
	a (Lnet/minecraft/world/phys/MovingObjectPositionBlock;)V onHitBlock
	a (Lnet/minecraft/world/phys/MovingObjectPositionEntity;)V onHitEntity
	bm ()Z isPickable
net/minecraft/world/entity/projectile/EntitySnowball net/minecraft/world/entity/projectile/Snowball
	a (Lnet/minecraft/world/phys/MovingObjectPosition;)V onHit
	a (Lnet/minecraft/world/phys/MovingObjectPositionEntity;)V onHitEntity
	b (B)V handleEntityEvent
	j ()Lnet/minecraft/world/item/Item; getDefaultItem
	p ()Lnet/minecraft/core/particles/ParticleParam; getParticle
net/minecraft/world/entity/projectile/EntitySpectralArrow net/minecraft/world/entity/projectile/SpectralArrow
	f duration
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/entity/EntityLiving;)V doPostHurtEffects
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	l ()V tick
	o ()Lnet/minecraft/world/item/ItemStack; getPickupItem
net/minecraft/world/entity/projectile/EntityThrownExpBottle net/minecraft/world/entity/projectile/ThrownExperienceBottle
	a (Lnet/minecraft/world/phys/MovingObjectPosition;)V onHit
	j ()Lnet/minecraft/world/item/Item; getDefaultItem
	o ()F getGravity
net/minecraft/world/entity/projectile/EntityThrownTrident net/minecraft/world/entity/projectile/ThrownTrident
	f clientSideReturnTridentTickCount
	g ID_LOYALTY
	h ID_FOIL
	i tridentItem
	j dealtDamage
	C ()Z isChanneling
	D ()Z isAcceptibleReturnOwner
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z tryPickup
	a (Lnet/minecraft/world/phys/MovingObjectPositionEntity;)V onHitEntity
	a (Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/phys/MovingObjectPositionEntity; findHitEntity
	a_ ()V defineSynchedData
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b_ (Lnet/minecraft/world/entity/player/EntityHuman;)V playerTouch
	i ()V tickDespawn
	j ()Lnet/minecraft/sounds/SoundEffect; getDefaultHitGroundSoundEvent
	k (DDD)Z shouldRender
	l ()V tick
	o ()Lnet/minecraft/world/item/ItemStack; getPickupItem
	w ()F getWaterInertia
	y ()Z isFoil
net/minecraft/world/entity/projectile/EntityTippedArrow net/minecraft/world/entity/projectile/Arrow
	f EXPOSED_POTION_DECAY_TIME
	g NO_EFFECT_COLOR
	h ID_EFFECT_COLOR
	i EVENT_POTION_PUFF
	j potion
	k effects
	l fixedColor
	C ()V updateColor
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/effect/MobEffect;)V addEffect
	a (Lnet/minecraft/world/entity/EntityLiving;)V doPostHurtEffects
	a (Lnet/minecraft/world/item/ItemStack;)V setEffectsFromItem
	a_ ()V defineSynchedData
	b (B)V handleEntityEvent
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	c (I)V makeParticle
	c (Lnet/minecraft/world/item/ItemStack;)I getCustomColor
	d (I)V setFixedColor
	l ()V tick
	o ()Lnet/minecraft/world/item/ItemStack; getPickupItem
	y ()I getColor
net/minecraft/world/entity/projectile/EntityWitherSkull net/minecraft/world/entity/projectile/WitherSkull
	e DATA_DANGEROUS
	Z_ ()Z shouldBurn
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/Fluid;F)F getBlockExplosionResistance
	a (Lnet/minecraft/world/phys/MovingObjectPosition;)V onHit
	a (Lnet/minecraft/world/phys/MovingObjectPositionEntity;)V onHitEntity
	a (Z)V setDangerous
	a_ ()V defineSynchedData
	bK ()Z isOnFire
	bm ()Z isPickable
	k ()F getInertia
	o ()Z isDangerous
net/minecraft/world/entity/projectile/IProjectile net/minecraft/world/entity/projectile/Projectile
	b ownerUUID
	c cachedOwner
	d leftOwner
	e hasBeenShot
	A ()V updateRotation
	S ()Lnet/minecraft/network/protocol/Packet; getAddEntityPacket
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutSpawnEntity;)V recreateFromPacket
	a (Lnet/minecraft/world/entity/Entity;)Z canHitEntity
	a (Lnet/minecraft/world/entity/Entity;FFFFF)V shootFromRotation
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Z mayInteract
	a (Lnet/minecraft/world/phys/MovingObjectPosition;)V onHit
	a (Lnet/minecraft/world/phys/MovingObjectPositionBlock;)V onHitBlock
	a (Lnet/minecraft/world/phys/MovingObjectPositionEntity;)V onHitEntity
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/Entity;)V setOwner
	c (DDDFF)V shoot
	d (FF)F lerpRotation
	d (Lnet/minecraft/world/entity/Entity;)Z ownedBy
	j ()Z checkLeftOwner
	l ()V tick
	l (DDD)V lerpMotion
	v ()Lnet/minecraft/world/entity/Entity; getOwner
	z ()Lnet/minecraft/world/entity/Entity; getEffectSource
net/minecraft/world/entity/projectile/ProjectileHelper net/minecraft/world/entity/projectile/ProjectileUtil
	a (Lnet/minecraft/world/entity/Entity;F)V rotateTowardsMovement
	a (Lnet/minecraft/world/entity/Entity;Ljava/util/function/Predicate;)Lnet/minecraft/world/phys/MovingObjectPosition; getHitResult
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/phys/AxisAlignedBB;Ljava/util/function/Predicate;D)Lnet/minecraft/world/phys/MovingObjectPositionEntity; getEntityHitResult
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/EnumHand; getWeaponHoldingHand
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;F)Lnet/minecraft/world/entity/projectile/EntityArrow; getMobArrow
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/phys/AxisAlignedBB;Ljava/util/function/Predicate;)Lnet/minecraft/world/phys/MovingObjectPositionEntity; getEntityHitResult
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/phys/AxisAlignedBB;Ljava/util/function/Predicate;F)Lnet/minecraft/world/phys/MovingObjectPositionEntity; getEntityHitResult
net/minecraft/world/entity/raid/EntityRaider net/minecraft/world/entity/raid/Raider
	b ALLOWED_ITEMS
	bS canJoinRaid
	bT ticksOutsideRaid
	c IS_CELEBRATING
	d raid
	e wave
	A (Z)V setCelebrating
	Q ()Z requiresCustomPersistence
	X_ ()Lnet/minecraft/sounds/SoundEffect; getCelebrateSound
	a (IZ)V applyRaidBuffs
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/damagesource/DamageSource;)V die
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/entity/raid/Raid;)V setCurrentRaid
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	a_ ()V defineSynchedData
	b (I)V setWave
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/item/EntityItem;)V pickUpItem
	b_ ()V aiStep
	c (I)V setTicksOutsideRaid
	fX ()V updateNoActionTime
	fZ ()Z canJoinPatrol
	gf ()Z canJoinRaid
	gg ()Lnet/minecraft/world/entity/raid/Raid; getCurrentRaid
	gh ()Z hasActiveRaid
	gi ()I getWave
	gj ()Z isCelebrating
	gk ()I getTicksOutsideRaid
	h (D)Z removeWhenFarAway
	x ()V registerGoals
	z (Z)V setCanJoinRaid
net/minecraft/world/entity/raid/PersistentRaid net/minecraft/world/entity/raid/Raids
	a RAID_FILE_ID
	b raidMap
	c level
	d nextAvailableID
	e tick
	a ()V tick
	a (I)Lnet/minecraft/world/entity/raid/Raid; get
	a (Lnet/minecraft/core/BlockPosition;I)Lnet/minecraft/world/entity/raid/Raid; getNearbyRaid
	a (Lnet/minecraft/core/Holder;)Ljava/lang/String; getFileId
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; save
	a (Lnet/minecraft/server/level/EntityPlayer;)Lnet/minecraft/world/entity/raid/Raid; createOrExtendRaid
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/entity/raid/Raid; getOrCreateRaid
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/raid/PersistentRaid; load
	a (Lnet/minecraft/world/entity/raid/EntityRaider;Lnet/minecraft/world/entity/raid/Raid;)Z canJoinRaid
	d ()I getUniqueId
net/minecraft/world/entity/raid/Raid$Status net/minecraft/world/entity/raid/Raid$RaidStatus
	a ONGOING
	b VICTORY
	c LOSS
	d STOPPED
	e VALUES
	f $VALUES
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lnet/minecraft/world/entity/raid/Raid$Status; getByName
	b ()[Lnet/minecraft/world/entity/raid/Raid$Status; $values
net/minecraft/world/entity/raid/Raid$Wave net/minecraft/world/entity/raid/Raid$RaiderType
	a VINDICATOR
	b EVOKER
	c PILLAGER
	d WITCH
	e RAVAGER
	f VALUES
	g entityType
	h spawnsPerWaveBeforeBonus
	i $VALUES
	a ()[Lnet/minecraft/world/entity/raid/Raid$Wave; $values
net/minecraft/world/entity/schedule/ActivityFrame net/minecraft/world/entity/schedule/Keyframe
	a timeStamp
	b value
	a ()I getTimeStamp
	b ()F getValue
net/minecraft/world/entity/schedule/ScheduleActivity net/minecraft/world/entity/schedule/Timeline
	a keyframes
	b previousIndex
	a ()Lcom/google/common/collect/ImmutableList; getKeyframes
	a (I)F getValueAt
	a (IF)Lnet/minecraft/world/entity/schedule/ScheduleActivity; addKeyframe
	a (Ljava/util/Collection;)Lnet/minecraft/world/entity/schedule/ScheduleActivity; addKeyframes
	b ()V sortAndDeduplicateKeyframes
net/minecraft/world/entity/vehicle/DismountUtil net/minecraft/world/entity/vehicle/DismountHelper
	a (D)Z isBlockFloorValid
	a (Lnet/minecraft/core/BlockPosition;ILjava/util/function/Function;)D findCeilingFrom
	a (Lnet/minecraft/core/EnumDirection;)[[I offsetsForDirection
	a (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/ICollisionAccess;Lnet/minecraft/core/BlockPosition;Z)Lnet/minecraft/world/phys/Vec3D; findSafeDismountLocation
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; nonClimbableShape
	a (Lnet/minecraft/world/level/ICollisionAccess;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/phys/AxisAlignedBB;)Z canDismountTo
	a (Lnet/minecraft/world/level/ICollisionAccess;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityPose;)Z canDismountTo
net/minecraft/world/entity/vehicle/EntityBoat net/minecraft/world/entity/vehicle/Boat
	aC lerpZ
	aD lerpYRot
	aE lerpXRot
	aF inputLeft
	aG inputRight
	aH inputUp
	aI inputDown
	aJ waterLevel
	aK landFriction
	aL status
	aM oldStatus
	aN lastYd
	aO isAboveBubbleColumn
	aP bubbleColumnDirectionIsDown
	aQ bubbleMultiplier
	aR bubbleAngle
	aS bubbleAngleO
	b PADDLE_LEFT
	c PADDLE_RIGHT
	d PADDLE_SOUND_TIME
	e BUBBLE_TIME
	f DATA_ID_HURT
	g DATA_ID_HURTDIR
	h DATA_ID_DAMAGE
	i DATA_ID_TYPE
	j DATA_ID_PADDLE_LEFT
	k DATA_ID_PADDLE_RIGHT
	l DATA_ID_BUBBLE_TIME
	m TIME_TO_EJECT
	n PADDLE_SPEED
	o paddlePositions
	p invFriction
	q outOfControlTicks
	r deltaRotation
	s lerpSteps
	t lerpX
	u lerpY
	A ()Lnet/minecraft/world/entity/vehicle/EntityBoat$EnumStatus; isUnderwater
	C ()V floatBoat
	D ()V controlBoat
	E ()I getBubbleTime
	a (DDDFFIZ)V lerpTo
	a (DZLnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;)V checkFallDamage
	a (F)V setDamage
	a (IF)F getRowingTime
	a (Ljava/lang/Object;)V setVariant
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;Lnet/minecraft/BlockUtil$Rectangle;)Lnet/minecraft/world/phys/Vec3D; getRelativePortalPosition
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/damagesource/DamageSource;)V destroy
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/entity/Entity;)Z hasEnoughSpaceFor
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)Z canVehicleCollide
	a (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getEyeHeight
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; interact
	a (Lnet/minecraft/world/entity/vehicle/EntityBoat$EnumBoatType;)V setVariant
	a (ZZ)V setPaddleState
	a (ZZZZ)V setInput
	aQ ()Lnet/minecraft/world/entity/Entity$MovementEmission; getMovementEmission
	aX ()Z isUnderWater
	a_ ()V defineSynchedData
	b (F)F getBubbleAngle
	b (I)V setBubbleTime
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/Entity;)V clampRotation
	b (Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/phys/Vec3D; getDismountLocationForPassenger
	bm ()Z isPickable
	bn ()Z isPushable
	bs ()Z canBeCollidedWith
	bv ()D getPassengersRidingOffset
	c ()Ljava/lang/Object; getVariant
	c (I)Z getPaddleState
	cB ()Lnet/minecraft/core/EnumDirection; getMotionDirection
	cK ()Lnet/minecraft/world/entity/EntityLiving; getControllingPassenger
	d (I)V setHurtTime
	dt ()Lnet/minecraft/world/item/ItemStack; getPickResult
	g (Lnet/minecraft/world/entity/Entity;)V push
	h (Lnet/minecraft/world/entity/Entity;)Z canCollideWith
	i ()Lnet/minecraft/world/item/Item; getDropItem
	i (Lnet/minecraft/world/entity/Entity;)V positionRider
	j ()Lnet/minecraft/sounds/SoundEffect; getPaddleSound
	j (Lnet/minecraft/world/entity/Entity;)V onPassengerTurned
	k ()F getWaterLevelAbove
	k (Z)V onAboveBubbleCol
	l ()V tick
	l (I)V setHurtDir
	o ()F getGroundFriction
	o (Lnet/minecraft/world/entity/Entity;)Z canAddPassenger
	p ()F getSinglePassengerXOffset
	q ()F getDamage
	q (F)V animateHurt
	r ()I getHurtTime
	s ()I getHurtDir
	t ()Lnet/minecraft/world/entity/vehicle/EntityBoat$EnumBoatType; getVariant
	v ()I getMaxPassengers
	w ()V tickBubbleColumn
	x ()V tickLerp
	y ()Lnet/minecraft/world/entity/vehicle/EntityBoat$EnumStatus; getStatus
	z ()Z checkInWater
net/minecraft/world/entity/vehicle/EntityBoat$EnumBoatType net/minecraft/world/entity/vehicle/Boat$Type
	a OAK
	b SPRUCE
	c BIRCH
	d JUNGLE
	e ACACIA
	f CHERRY
	g DARK_OAK
	h MANGROVE
	i BAMBOO
	j CODEC
	k name
	l planks
	m BY_ID
	n $VALUES
	a ()Ljava/lang/String; getName
	a (I)Lnet/minecraft/world/entity/vehicle/EntityBoat$EnumBoatType; byId
	a (Ljava/lang/String;)Lnet/minecraft/world/entity/vehicle/EntityBoat$EnumBoatType; byName
	b ()Lnet/minecraft/world/level/block/Block; getPlanks
	c ()Ljava/lang/String; getSerializedName
	d ()[Lnet/minecraft/world/entity/vehicle/EntityBoat$EnumBoatType; $values
net/minecraft/world/entity/vehicle/EntityBoat$EnumStatus net/minecraft/world/entity/vehicle/Boat$Status
	a IN_WATER
	b UNDER_WATER
	c UNDER_FLOWING_WATER
	d ON_LAND
	e IN_AIR
	f $VALUES
	a ()[Lnet/minecraft/world/entity/vehicle/EntityBoat$EnumStatus; $values
net/minecraft/world/entity/vehicle/EntityMinecartAbstract net/minecraft/world/entity/vehicle/AbstractMinecart
	b WATER_SLOWDOWN_FACTOR
	c DATA_ID_HURT
	d DATA_ID_HURTDIR
	e DATA_ID_DAMAGE
	f DATA_ID_DISPLAY_BLOCK
	g DATA_ID_DISPLAY_OFFSET
	h DATA_ID_CUSTOM_DISPLAY
	i POSE_DISMOUNT_HEIGHTS
	j flipped
	k EXITS
	l lSteps
	m lx
	n ly
	o lz
	p lyr
	q lxr
	r lxd
	s lyd
	t lzd
	A_ ()Lnet/minecraft/world/phys/AxisAlignedBB; getBoundingBoxForCulling
	a (DDDD)Lnet/minecraft/world/phys/Vec3D; getPosOffs
	a (DDDFFIZ)V lerpTo
	a (F)V setDamage
	a (IIIZ)V activateMinecart
	a (Lnet/minecraft/core/BlockPosition;)Z isRedstoneConductor
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;Lnet/minecraft/BlockUtil$Rectangle;)Lnet/minecraft/world/phys/Vec3D; getRelativePortalPosition
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/damagesource/DamageSource;)V destroy
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/level/World;DDDLnet/minecraft/world/entity/vehicle/EntityMinecartAbstract$EnumMinecartType;)Lnet/minecraft/world/entity/vehicle/EntityMinecartAbstract; createMinecart
	a (Lnet/minecraft/world/level/block/state/properties/BlockPropertyTrackPosition;)Lcom/mojang/datafixers/util/Pair; exits
	a (Z)V setCustomDisplay
	aF ()F getBlockSpeedFactor
	aQ ()Lnet/minecraft/world/entity/Entity$MovementEmission; getMovementEmission
	a_ ()V defineSynchedData
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/phys/Vec3D; getDismountLocationForPassenger
	b (Lnet/minecraft/world/level/block/state/IBlockData;)V setDisplayBlockState
	bm ()Z isPickable
	bn ()Z isPushable
	bv ()D getPassengersRidingOffset
	c (I)V setHurtTime
	c (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V moveAlongTrack
	cB ()Lnet/minecraft/core/EnumDirection; getMotionDirection
	d (I)V setHurtDir
	dt ()Lnet/minecraft/world/item/ItemStack; getPickResult
	g (Lnet/minecraft/world/entity/Entity;)V push
	h (Lnet/minecraft/world/entity/Entity;)Z canCollideWith
	i ()Lnet/minecraft/world/item/Item; getDropItem
	j ()D getMaxSpeed
	k ()V comeOffTrack
	l ()V tick
	l (DDD)V lerpMotion
	l (I)V setDisplayOffset
	o ()V applyNaturalSlowdown
	p ()F getDamage
	q ()I getHurtTime
	q (DDD)Lnet/minecraft/world/phys/Vec3D; getPos
	q (F)V animateHurt
	r ()I getHurtDir
	s ()Lnet/minecraft/world/entity/vehicle/EntityMinecartAbstract$EnumMinecartType; getMinecartType
	t ()Lnet/minecraft/world/level/block/state/IBlockData; getDisplayBlockState
	v ()Lnet/minecraft/world/level/block/state/IBlockData; getDefaultDisplayBlockState
	w ()I getDisplayOffset
	x ()I getDefaultDisplayOffset
	y ()Z hasCustomDisplay
net/minecraft/world/entity/vehicle/EntityMinecartAbstract$EnumMinecartType net/minecraft/world/entity/vehicle/AbstractMinecart$Type
	a RIDEABLE
	b CHEST
	c FURNACE
	d TNT
	e SPAWNER
	f HOPPER
	g COMMAND_BLOCK
	h $VALUES
	a ()[Lnet/minecraft/world/entity/vehicle/EntityMinecartAbstract$EnumMinecartType; $values
net/minecraft/world/entity/vehicle/EntityMinecartChest net/minecraft/world/entity/vehicle/MinecartChest
	a (ILnet/minecraft/world/entity/player/PlayerInventory;)Lnet/minecraft/world/inventory/Container; createMenu
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; interact
	b ()I getContainerSize
	c (Lnet/minecraft/world/entity/player/EntityHuman;)V stopOpen
	i ()Lnet/minecraft/world/item/Item; getDropItem
	s ()Lnet/minecraft/world/entity/vehicle/EntityMinecartAbstract$EnumMinecartType; getMinecartType
	v ()Lnet/minecraft/world/level/block/state/IBlockData; getDefaultDisplayBlockState
	x ()I getDefaultDisplayOffset
net/minecraft/world/entity/vehicle/EntityMinecartCommandBlock net/minecraft/world/entity/vehicle/MinecartCommandBlock
	c DATA_ID_COMMAND_NAME
	d DATA_ID_LAST_OUTPUT
	e commandBlock
	f ACTIVATION_DELAY
	g lastActivated
	a (IIIZ)V activateMinecart
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; interact
	a_ ()V defineSynchedData
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	cJ ()Z onlyOpCanSetNbt
	i ()Lnet/minecraft/world/item/Item; getDropItem
	s ()Lnet/minecraft/world/entity/vehicle/EntityMinecartAbstract$EnumMinecartType; getMinecartType
	v ()Lnet/minecraft/world/level/block/state/IBlockData; getDefaultDisplayBlockState
	z ()Lnet/minecraft/world/level/CommandBlockListenerAbstract; getCommandBlock
net/minecraft/world/entity/vehicle/EntityMinecartContainer net/minecraft/world/entity/vehicle/AbstractMinecartContainer
	c itemStacks
	d lootTable
	e lootTableSeed
	A ()J getLootTableSeed
	C ()Lnet/minecraft/core/NonNullList; getItemStacks
	D ()V clearItemStacks
	a ()V clearContent
	a (I)Lnet/minecraft/world/item/ItemStack; getItem
	a (II)Lnet/minecraft/world/item/ItemStack; removeItem
	a (ILnet/minecraft/world/entity/player/PlayerInventory;)Lnet/minecraft/world/inventory/Container; createMenu
	a (ILnet/minecraft/world/item/ItemStack;)V setItem
	a (J)V setLootTableSeed
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/resources/MinecraftKey;)V setLootTable
	a (Lnet/minecraft/resources/MinecraftKey;J)V setLootTable
	a (Lnet/minecraft/world/damagesource/DamageSource;)V destroy
	a (Lnet/minecraft/world/entity/Entity$RemovalReason;)V remove
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; interact
	a_ (I)Lnet/minecraft/world/entity/SlotAccess; getSlot
	b (I)Lnet/minecraft/world/item/ItemStack; removeItemNoUpdate
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	e ()V setChanged
	o ()V applyNaturalSlowdown
	z ()Lnet/minecraft/resources/MinecraftKey; getLootTable
net/minecraft/world/entity/vehicle/EntityMinecartFurnace net/minecraft/world/entity/vehicle/MinecartFurnace
	c xPush
	d zPush
	e DATA_ID_FUEL
	f fuel
	g INGREDIENT
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; interact
	a_ ()V defineSynchedData
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	c (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V moveAlongTrack
	i ()Lnet/minecraft/world/item/Item; getDropItem
	j ()D getMaxSpeed
	l ()V tick
	o ()V applyNaturalSlowdown
	p (Z)V setHasFuel
	s ()Lnet/minecraft/world/entity/vehicle/EntityMinecartAbstract$EnumMinecartType; getMinecartType
	v ()Lnet/minecraft/world/level/block/state/IBlockData; getDefaultDisplayBlockState
	z ()Z hasFuel
net/minecraft/world/entity/vehicle/EntityMinecartHopper net/minecraft/world/entity/vehicle/MinecartHopper
	f enabled
	E ()Z isEnabled
	F ()D getLevelX
	G ()D getLevelY
	I ()D getLevelZ
	J ()Z suckInItems
	a (IIIZ)V activateMinecart
	a (ILnet/minecraft/world/entity/player/PlayerInventory;)Lnet/minecraft/world/inventory/Container; createMenu
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	b ()I getContainerSize
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	i ()Lnet/minecraft/world/item/Item; getDropItem
	l ()V tick
	p (Z)V setEnabled
	s ()Lnet/minecraft/world/entity/vehicle/EntityMinecartAbstract$EnumMinecartType; getMinecartType
	v ()Lnet/minecraft/world/level/block/state/IBlockData; getDefaultDisplayBlockState
	x ()I getDefaultDisplayOffset
net/minecraft/world/entity/vehicle/EntityMinecartMobSpawner net/minecraft/world/entity/vehicle/MinecartSpawner
	c spawner
	d ticker
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/level/World;)Ljava/lang/Runnable; createTicker
	b (B)V handleEntityEvent
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	cJ ()Z onlyOpCanSetNbt
	i ()Lnet/minecraft/world/item/Item; getDropItem
	l ()V tick
	s ()Lnet/minecraft/world/entity/vehicle/EntityMinecartAbstract$EnumMinecartType; getMinecartType
	v ()Lnet/minecraft/world/level/block/state/IBlockData; getDefaultDisplayBlockState
	z ()Lnet/minecraft/world/level/MobSpawnerAbstract; getSpawner
net/minecraft/world/entity/vehicle/EntityMinecartRideable net/minecraft/world/entity/vehicle/Minecart
	a (IIIZ)V activateMinecart
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; interact
	i ()Lnet/minecraft/world/item/Item; getDropItem
	s ()Lnet/minecraft/world/entity/vehicle/EntityMinecartAbstract$EnumMinecartType; getMinecartType
net/minecraft/world/entity/vehicle/EntityMinecartTNT net/minecraft/world/entity/vehicle/MinecartTNT
	c EVENT_PRIME
	d fuse
	A ()I getFuse
	C ()Z isPrimed
	a (FFLnet/minecraft/world/damagesource/DamageSource;)Z causeFallDamage
	a (IIIZ)V activateMinecart
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/damagesource/DamageSource;)V destroy
	a (Lnet/minecraft/world/damagesource/DamageSource;D)V explode
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;F)Z shouldBlockExplode
	a (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/Fluid;F)F getBlockExplosionResistance
	b (B)V handleEntityEvent
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	h (D)V explode
	i ()Lnet/minecraft/world/item/Item; getDropItem
	l ()V tick
	s ()Lnet/minecraft/world/entity/vehicle/EntityMinecartAbstract$EnumMinecartType; getMinecartType
	v ()Lnet/minecraft/world/level/block/state/IBlockData; getDefaultDisplayBlockState
	z ()V primeFuse
net/minecraft/world/food/FoodInfo net/minecraft/world/food/FoodProperties
	a nutrition
	b saturationModifier
	c isMeat
	d canAlwaysEat
	e fastFood
	f effects
	a ()I getNutrition
	b ()F getSaturationModifier
	c ()Z isMeat
	d ()Z canAlwaysEat
	e ()Z isFastFood
	f ()Ljava/util/List; getEffects
net/minecraft/world/food/FoodMetaData net/minecraft/world/food/FoodData
	a foodLevel
	b saturationLevel
	c exhaustionLevel
	d tickTimer
	e lastFoodLevel
	a ()I getFoodLevel
	a (F)V addExhaustion
	a (I)V setFoodLevel
	a (IF)V eat
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/entity/player/EntityHuman;)V tick
	a (Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/ItemStack;)V eat
	b ()I getLastFoodLevel
	b (F)V setSaturation
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	c ()Z needsFood
	c (F)V setExhaustion
	d ()F getExhaustionLevel
	e ()F getSaturationLevel
net/minecraft/world/inventory/AutoRecipeOutput net/minecraft/world/inventory/StackedContentsCompatible
	a (Lnet/minecraft/world/entity/player/AutoRecipeStackManager;)V fillStackedContents
net/minecraft/world/inventory/Container net/minecraft/world/inventory/AbstractContainerMenu
	a SLOT_CLICKED_OUTSIDE
	b QUICKCRAFT_TYPE_CHARITABLE
	c QUICKCRAFT_TYPE_GREEDY
	d QUICKCRAFT_TYPE_CLONE
	e QUICKCRAFT_HEADER_START
	f QUICKCRAFT_HEADER_CONTINUE
	g QUICKCRAFT_HEADER_END
	h CARRIED_SLOT_SIZE
	i slots
	j containerId
	k LOGGER
	l lastSlots
	m dataSlots
	n carried
	o remoteSlots
	p remoteDataSlots
	q remoteCarried
	r stateId
	s menuType
	t quickcraftType
	u quickcraftStatus
	v quickcraftSlots
	w containerListeners
	x synchronizer
	y suppressRemoteUpdates
	a ()Lnet/minecraft/world/inventory/Containers; getType
	a (I)Z isValidSlotIndex
	a (II)V setData
	a (IILnet/minecraft/world/inventory/InventoryClickType;Lnet/minecraft/world/entity/player/EntityHuman;)V clicked
	a (IILnet/minecraft/world/item/ItemStack;)V setItem
	a (ILjava/util/List;Lnet/minecraft/world/item/ItemStack;)V initializeContents
	a (ILnet/minecraft/world/entity/player/EntityHuman;)Z isValidQuickcraftType
	a (ILnet/minecraft/world/item/ItemStack;)V setRemoteSlot
	a (ILnet/minecraft/world/item/ItemStack;Ljava/util/function/Supplier;)V triggerSlotListeners
	a (Ljava/util/Set;ILnet/minecraft/world/item/ItemStack;I)V getQuickCraftSlotCount
	a (Lnet/minecraft/world/IInventory;)V slotsChanged
	a (Lnet/minecraft/world/IInventory;I)V checkContainerSize
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	a (Lnet/minecraft/world/entity/player/EntityHuman;I)Lnet/minecraft/world/item/ItemStack; quickMoveStack
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/IInventory;)V clearContainer
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/inventory/ClickAction;Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z tryItemClickBehaviourOverride
	a (Lnet/minecraft/world/inventory/Container;)V transferState
	a (Lnet/minecraft/world/inventory/ContainerAccess;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/block/Block;)Z stillValid
	a (Lnet/minecraft/world/inventory/ContainerProperty;)Lnet/minecraft/world/inventory/ContainerProperty; addDataSlot
	a (Lnet/minecraft/world/inventory/ContainerSynchronizer;)V setSynchronizer
	a (Lnet/minecraft/world/inventory/IContainerProperties;)V addDataSlots
	a (Lnet/minecraft/world/inventory/IContainerProperties;I)V checkContainerDataCount
	a (Lnet/minecraft/world/inventory/ICrafting;)V addSlotListener
	a (Lnet/minecraft/world/inventory/Slot;)Lnet/minecraft/world/inventory/Slot; addSlot
	a (Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/item/ItemStack;Z)Z canItemQuickReplace
	a (Lnet/minecraft/world/item/ItemStack;)V setRemoteCarried
	a (Lnet/minecraft/world/item/ItemStack;IIZ)Z moveItemStackTo
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z canTakeItemForPickAll
	a (Lnet/minecraft/world/level/block/entity/TileEntity;)I getRedstoneSignalFromBlockEntity
	b ()V sendAllDataToRemote
	b (I)Lnet/minecraft/world/inventory/Slot; getSlot
	b (II)I getQuickcraftMask
	b (IILnet/minecraft/world/inventory/InventoryClickType;Lnet/minecraft/world/entity/player/EntityHuman;)V doClick
	b (ILnet/minecraft/world/item/ItemStack;)V setRemoteSlotNoCopy
	b (ILnet/minecraft/world/item/ItemStack;Ljava/util/function/Supplier;)V synchronizeSlotToRemote
	b (Lnet/minecraft/world/IInventory;)I getRedstoneSignalFromContainer
	b (Lnet/minecraft/world/IInventory;I)Ljava/util/OptionalInt; findSlot
	b (Lnet/minecraft/world/entity/player/EntityHuman;)V removed
	b (Lnet/minecraft/world/entity/player/EntityHuman;I)Z clickMenuButton
	b (Lnet/minecraft/world/inventory/ICrafting;)V removeSlotListener
	b (Lnet/minecraft/world/inventory/Slot;)Z canDragTo
	b (Lnet/minecraft/world/item/ItemStack;)V setCarried
	c ()Lnet/minecraft/core/NonNullList; getItems
	c (I)I getQuickcraftType
	c (II)V updateDataSlotListeners
	d ()V broadcastChanges
	d (I)I getQuickcraftHeader
	d (II)V synchronizeDataSlotToRemote
	e ()V broadcastFullState
	f ()V resetQuickCraft
	g ()Lnet/minecraft/world/item/ItemStack; getCarried
	h ()V suppressRemoteUpdates
	i ()V resumeRemoteUpdates
	j ()I getStateId
	k ()I incrementStateId
	l ()V synchronizeCarriedToRemote
	m ()Lnet/minecraft/world/entity/SlotAccess; createCarriedSlotAccess
net/minecraft/world/inventory/ContainerAccess net/minecraft/world/inventory/ContainerLevelAccess
	a NULL
	a (Ljava/util/function/BiConsumer;)V execute
	a (Ljava/util/function/BiFunction;)Ljava/util/Optional; evaluate
	a (Ljava/util/function/BiFunction;Ljava/lang/Object;)Ljava/lang/Object; evaluate
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/inventory/ContainerAccess; create
net/minecraft/world/inventory/ContainerAnvil net/minecraft/world/inventory/AnvilMenu
	A COST_REPAIR_MATERIAL
	B COST_REPAIR_SACRIFICE
	C COST_INCOMPATIBLE_PENALTY
	D COST_RENAME
	E INPUT_SLOT_X_PLACEMENT
	F ADDITIONAL_SLOT_X_PLACEMENT
	G RESULT_SLOT_X_PLACEMENT
	H SLOT_Y_PLACEMENT
	k INPUT_SLOT
	l ADDITIONAL_SLOT
	m RESULT_SLOT
	n MAX_NAME_LENGTH
	s LOGGER
	t DEBUG_COST
	u repairItemCountCost
	v itemName
	w cost
	x COST_FAIL
	y COST_BASE
	z COST_ADDED_BASE
	a (Ljava/lang/String;)V setItemName
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/item/ItemStack;)V onTake
	a (Lnet/minecraft/world/entity/player/EntityHuman;Z)Z mayPickup
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z isValidBlock
	e (I)I calculateIncreasedRepairCost
	l ()Lnet/minecraft/world/inventory/ItemCombinerMenuSlotDefinition; createInputSlotDefinitions
	m ()V createResult
	n ()I getCost
net/minecraft/world/inventory/ContainerAnvilAbstract net/minecraft/world/inventory/ItemCombinerMenu
	k INVENTORY_SLOTS_PER_ROW
	l INVENTORY_SLOTS_PER_COLUMN
	m inputSlotIndexes
	n resultSlotIndex
	o access
	p player
	q inputSlots
	r resultSlots
	a (Lnet/minecraft/world/IInventory;)V slotsChanged
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	a (Lnet/minecraft/world/entity/player/EntityHuman;I)Lnet/minecraft/world/item/ItemStack; quickMoveStack
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/item/ItemStack;)V onTake
	a (Lnet/minecraft/world/entity/player/EntityHuman;Z)Z mayPickup
	a (Lnet/minecraft/world/entity/player/PlayerInventory;)V createInventorySlots
	a (Lnet/minecraft/world/inventory/ItemCombinerMenuSlotDefinition;)V createInputSlots
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z isValidBlock
	b (Lnet/minecraft/world/entity/player/EntityHuman;)V removed
	b (Lnet/minecraft/world/inventory/ItemCombinerMenuSlotDefinition;)V createResultSlot
	c (Lnet/minecraft/world/item/ItemStack;)Z canMoveIntoInputSlots
	d (Lnet/minecraft/world/item/ItemStack;)I getSlotToQuickMoveTo
	e (I)Lnet/minecraft/world/InventorySubcontainer; createContainer
	l ()Lnet/minecraft/world/inventory/ItemCombinerMenuSlotDefinition; createInputSlotDefinitions
	m ()V createResult
	n ()I getInventorySlotStart
	o ()I getResultSlot
	p ()I getInventorySlotEnd
	q ()I getUseRowStart
	r ()I getUseRowEnd
net/minecraft/world/inventory/ContainerBeacon net/minecraft/world/inventory/BeaconMenu
	k PAYMENT_SLOT
	l SLOT_COUNT
	m DATA_COUNT
	n INV_SLOT_START
	o INV_SLOT_END
	p USE_ROW_SLOT_START
	q USE_ROW_SLOT_END
	r beacon
	s paymentSlot
	t access
	u beaconData
	a (II)V setData
	a (Ljava/util/Optional;Ljava/util/Optional;)V updateEffects
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	a (Lnet/minecraft/world/entity/player/EntityHuman;I)Lnet/minecraft/world/item/ItemStack; quickMoveStack
	b (Lnet/minecraft/world/entity/player/EntityHuman;)V removed
	l ()I getLevels
	m ()Lnet/minecraft/world/effect/MobEffectList; getPrimaryEffect
	n ()Lnet/minecraft/world/effect/MobEffectList; getSecondaryEffect
	o ()Z hasPayment
net/minecraft/world/inventory/ContainerBeacon$SlotBeacon net/minecraft/world/inventory/BeaconMenu$PaymentSlot
	a ()I getMaxStackSize
	a (Lnet/minecraft/world/item/ItemStack;)Z mayPlace
net/minecraft/world/inventory/ContainerBlastFurnace net/minecraft/world/inventory/BlastFurnaceMenu
net/minecraft/world/inventory/ContainerBrewingStand net/minecraft/world/inventory/BrewingStandMenu
	k BOTTLE_SLOT_START
	l BOTTLE_SLOT_END
	m INGREDIENT_SLOT
	n FUEL_SLOT
	o SLOT_COUNT
	p DATA_COUNT
	q INV_SLOT_START
	r INV_SLOT_END
	s USE_ROW_SLOT_START
	t USE_ROW_SLOT_END
	u brewingStand
	v brewingStandData
	w ingredientSlot
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	a (Lnet/minecraft/world/entity/player/EntityHuman;I)Lnet/minecraft/world/item/ItemStack; quickMoveStack
	l ()I getFuel
	m ()I getBrewingTicks
net/minecraft/world/inventory/ContainerBrewingStand$SlotBrewing net/minecraft/world/inventory/BrewingStandMenu$IngredientsSlot
	a ()I getMaxStackSize
	a (Lnet/minecraft/world/item/ItemStack;)Z mayPlace
net/minecraft/world/inventory/ContainerBrewingStand$SlotPotionBottle net/minecraft/world/inventory/BrewingStandMenu$PotionSlot
	a ()I getMaxStackSize
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/item/ItemStack;)V onTake
	a (Lnet/minecraft/world/item/ItemStack;)Z mayPlace
	b (Lnet/minecraft/world/item/ItemStack;)Z mayPlaceItem
net/minecraft/world/inventory/ContainerCartography net/minecraft/world/inventory/CartographyTableMenu
	k MAP_SLOT
	l ADDITIONAL_SLOT
	m RESULT_SLOT
	n container
	o INV_SLOT_START
	p INV_SLOT_END
	q USE_ROW_SLOT_START
	r USE_ROW_SLOT_END
	s access
	t lastSoundTime
	u resultContainer
	a (Lnet/minecraft/world/IInventory;)V slotsChanged
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	a (Lnet/minecraft/world/entity/player/EntityHuman;I)Lnet/minecraft/world/item/ItemStack; quickMoveStack
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z canTakeItemForPickAll
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V setupResultSlot
	b (Lnet/minecraft/world/entity/player/EntityHuman;)V removed
net/minecraft/world/inventory/ContainerChest net/minecraft/world/inventory/ChestMenu
	k SLOTS_PER_ROW
	l container
	m containerRows
	a (ILnet/minecraft/world/entity/player/PlayerInventory;)Lnet/minecraft/world/inventory/ContainerChest; oneRow
	a (ILnet/minecraft/world/entity/player/PlayerInventory;Lnet/minecraft/world/IInventory;)Lnet/minecraft/world/inventory/ContainerChest; threeRows
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	a (Lnet/minecraft/world/entity/player/EntityHuman;I)Lnet/minecraft/world/item/ItemStack; quickMoveStack
	b (ILnet/minecraft/world/entity/player/PlayerInventory;)Lnet/minecraft/world/inventory/ContainerChest; twoRows
	b (ILnet/minecraft/world/entity/player/PlayerInventory;Lnet/minecraft/world/IInventory;)Lnet/minecraft/world/inventory/ContainerChest; sixRows
	b (Lnet/minecraft/world/entity/player/EntityHuman;)V removed
	c (ILnet/minecraft/world/entity/player/PlayerInventory;)Lnet/minecraft/world/inventory/ContainerChest; threeRows
	d (ILnet/minecraft/world/entity/player/PlayerInventory;)Lnet/minecraft/world/inventory/ContainerChest; fourRows
	e (ILnet/minecraft/world/entity/player/PlayerInventory;)Lnet/minecraft/world/inventory/ContainerChest; fiveRows
	f (ILnet/minecraft/world/entity/player/PlayerInventory;)Lnet/minecraft/world/inventory/ContainerChest; sixRows
	l ()Lnet/minecraft/world/IInventory; getContainer
	m ()I getRowCount
net/minecraft/world/inventory/ContainerDispenser net/minecraft/world/inventory/DispenserMenu
	k SLOT_COUNT
	l INV_SLOT_START
	m INV_SLOT_END
	n USE_ROW_SLOT_START
	o USE_ROW_SLOT_END
	p dispenser
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	a (Lnet/minecraft/world/entity/player/EntityHuman;I)Lnet/minecraft/world/item/ItemStack; quickMoveStack
	b (Lnet/minecraft/world/entity/player/EntityHuman;)V removed
net/minecraft/world/inventory/ContainerEnchantTable net/minecraft/world/inventory/EnchantmentMenu
	k costs
	l enchantClue
	m levelClue
	n enchantSlots
	o access
	p random
	q enchantmentSeed
	a (Lnet/minecraft/world/IInventory;)V slotsChanged
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	a (Lnet/minecraft/world/entity/player/EntityHuman;I)Lnet/minecraft/world/item/ItemStack; quickMoveStack
	a (Lnet/minecraft/world/item/ItemStack;II)Ljava/util/List; getEnchantmentList
	b (Lnet/minecraft/world/entity/player/EntityHuman;)V removed
	b (Lnet/minecraft/world/entity/player/EntityHuman;I)Z clickMenuButton
	l ()I getGoldCount
	m ()I getEnchantmentSeed
net/minecraft/world/inventory/ContainerFurnace net/minecraft/world/inventory/AbstractFurnaceMenu
	k INGREDIENT_SLOT
	l FUEL_SLOT
	m RESULT_SLOT
	n SLOT_COUNT
	o DATA_COUNT
	p level
	q INV_SLOT_START
	r INV_SLOT_END
	s USE_ROW_SLOT_START
	t USE_ROW_SLOT_END
	u container
	v data
	w recipeType
	x recipeBookType
	a (Lnet/minecraft/world/entity/player/AutoRecipeStackManager;)V fillCraftSlotsStackedContents
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	a (Lnet/minecraft/world/entity/player/EntityHuman;I)Lnet/minecraft/world/item/ItemStack; quickMoveStack
	a (Lnet/minecraft/world/item/crafting/IRecipe;)Z recipeMatches
	c (Lnet/minecraft/world/item/ItemStack;)Z canSmelt
	d (Lnet/minecraft/world/item/ItemStack;)Z isFuel
	e (I)Z shouldMoveToInventory
	l ()V clearCraftingContent
	m ()I getResultSlotIndex
	n ()I getGridWidth
	o ()I getGridHeight
	p ()I getSize
	q ()I getBurnProgress
	r ()I getLitProgress
	s ()Z isLit
	t ()Lnet/minecraft/world/inventory/RecipeBookType; getRecipeBookType
net/minecraft/world/inventory/ContainerFurnaceFurnace net/minecraft/world/inventory/FurnaceMenu
net/minecraft/world/inventory/ContainerGrindstone net/minecraft/world/inventory/GrindstoneMenu
	k MAX_NAME_LENGTH
	l INPUT_SLOT
	m ADDITIONAL_SLOT
	n RESULT_SLOT
	o INV_SLOT_START
	p INV_SLOT_END
	q USE_ROW_SLOT_START
	r USE_ROW_SLOT_END
	s resultSlots
	t repairSlots
	u access
	a (Lnet/minecraft/world/IInventory;)V slotsChanged
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	a (Lnet/minecraft/world/entity/player/EntityHuman;I)Lnet/minecraft/world/item/ItemStack; quickMoveStack
	a (Lnet/minecraft/world/item/ItemStack;II)Lnet/minecraft/world/item/ItemStack; removeNonCurses
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; mergeEnchants
	b (Lnet/minecraft/world/entity/player/EntityHuman;)V removed
	l ()V createResult
net/minecraft/world/inventory/ContainerHopper net/minecraft/world/inventory/HopperMenu
	k CONTAINER_SIZE
	l hopper
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	a (Lnet/minecraft/world/entity/player/EntityHuman;I)Lnet/minecraft/world/item/ItemStack; quickMoveStack
	b (Lnet/minecraft/world/entity/player/EntityHuman;)V removed
net/minecraft/world/inventory/ContainerHorse net/minecraft/world/inventory/HorseInventoryMenu
	k horseContainer
	l horse
	a (Lnet/minecraft/world/entity/animal/horse/EntityHorseAbstract;)Z hasChest
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	a (Lnet/minecraft/world/entity/player/EntityHuman;I)Lnet/minecraft/world/item/ItemStack; quickMoveStack
	b (Lnet/minecraft/world/entity/player/EntityHuman;)V removed
net/minecraft/world/inventory/ContainerLectern net/minecraft/world/inventory/LecternMenu
	k BUTTON_PREV_PAGE
	l BUTTON_NEXT_PAGE
	m BUTTON_TAKE_BOOK
	n BUTTON_PAGE_JUMP_RANGE_START
	o DATA_COUNT
	p SLOT_COUNT
	q lectern
	r lecternData
	a (II)V setData
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	a (Lnet/minecraft/world/entity/player/EntityHuman;I)Lnet/minecraft/world/item/ItemStack; quickMoveStack
	b (Lnet/minecraft/world/entity/player/EntityHuman;I)Z clickMenuButton
	l ()Lnet/minecraft/world/item/ItemStack; getBook
	m ()I getPage
net/minecraft/world/inventory/ContainerLoom net/minecraft/world/inventory/LoomMenu
	k PATTERN_NOT_SET
	l INV_SLOT_START
	m INV_SLOT_END
	n USE_ROW_SLOT_START
	o USE_ROW_SLOT_END
	p access
	q selectedBannerPatternIndex
	r selectablePatterns
	s slotUpdateListener
	t bannerSlot
	u dyeSlot
	v patternSlot
	w resultSlot
	x lastSoundTime
	y inputContainer
	z outputContainer
	a (Ljava/lang/Runnable;)V registerUpdateListener
	a (Lnet/minecraft/core/Holder;)V setupResultSlot
	a (Lnet/minecraft/world/IInventory;)V slotsChanged
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	a (Lnet/minecraft/world/entity/player/EntityHuman;I)Lnet/minecraft/world/item/ItemStack; quickMoveStack
	b (Lnet/minecraft/world/entity/player/EntityHuman;)V removed
	b (Lnet/minecraft/world/entity/player/EntityHuman;I)Z clickMenuButton
	c (Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; getSelectablePatterns
	e (I)Z isValidPatternIndex
	l ()Ljava/util/List; getSelectablePatterns
	m ()I getSelectedBannerPatternIndex
	n ()Lnet/minecraft/world/inventory/Slot; getBannerSlot
	o ()Lnet/minecraft/world/inventory/Slot; getDyeSlot
	p ()Lnet/minecraft/world/inventory/Slot; getPatternSlot
	q ()Lnet/minecraft/world/inventory/Slot; getResultSlot
net/minecraft/world/inventory/ContainerMerchant net/minecraft/world/inventory/MerchantMenu
	k PAYMENT1_SLOT
	l PAYMENT2_SLOT
	m RESULT_SLOT
	n INV_SLOT_START
	o INV_SLOT_END
	p USE_ROW_SLOT_START
	q USE_ROW_SLOT_END
	r SELLSLOT1_X
	s SELLSLOT2_X
	t BUYSLOT_X
	u ROW_Y
	v trader
	w tradeContainer
	x merchantLevel
	y showProgressBar
	z canRestock
	a (Lnet/minecraft/world/IInventory;)V slotsChanged
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	a (Lnet/minecraft/world/entity/player/EntityHuman;I)Lnet/minecraft/world/item/ItemStack; quickMoveStack
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z canTakeItemForPickAll
	a (Lnet/minecraft/world/item/trading/MerchantRecipeList;)V setOffers
	a (Z)V setShowProgressBar
	b (Lnet/minecraft/world/entity/player/EntityHuman;)V removed
	b (Z)V setCanRestock
	c (ILnet/minecraft/world/item/ItemStack;)V moveFromInventoryToPaymentSlot
	e (I)V setSelectionHint
	f (I)V setXp
	g (I)V setMerchantLevel
	h (I)V tryMoveItems
	l ()I getTraderXp
	m ()I getFutureTraderXp
	n ()I getTraderLevel
	o ()Z canRestock
	p ()Lnet/minecraft/world/item/trading/MerchantRecipeList; getOffers
	q ()Z showProgressBar
	r ()V playTradeSound
net/minecraft/world/inventory/ContainerPlayer net/minecraft/world/inventory/InventoryMenu
	A EMPTY_ARMOR_SLOT_SHIELD
	B active
	C TEXTURE_EMPTY_SLOTS
	D SLOT_IDS
	E craftSlots
	F resultSlots
	G owner
	k CONTAINER_ID
	l RESULT_SLOT
	m CRAFT_SLOT_START
	n CRAFT_SLOT_END
	o ARMOR_SLOT_START
	p ARMOR_SLOT_END
	q INV_SLOT_START
	r INV_SLOT_END
	s USE_ROW_SLOT_START
	t USE_ROW_SLOT_END
	u SHIELD_SLOT
	v BLOCK_ATLAS
	w EMPTY_ARMOR_SLOT_HELMET
	x EMPTY_ARMOR_SLOT_CHESTPLATE
	y EMPTY_ARMOR_SLOT_LEGGINGS
	z EMPTY_ARMOR_SLOT_BOOTS
	a (Lnet/minecraft/world/IInventory;)V slotsChanged
	a (Lnet/minecraft/world/entity/player/AutoRecipeStackManager;)V fillCraftSlotsStackedContents
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	a (Lnet/minecraft/world/entity/player/EntityHuman;I)Lnet/minecraft/world/item/ItemStack; quickMoveStack
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/entity/EnumItemSlot;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V onEquipItem
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z canTakeItemForPickAll
	a (Lnet/minecraft/world/item/crafting/IRecipe;)Z recipeMatches
	b (Lnet/minecraft/world/entity/player/EntityHuman;)V removed
	e (I)Z shouldMoveToInventory
	f (I)Z isHotbarSlot
	l ()V clearCraftingContent
	m ()I getResultSlotIndex
	n ()I getGridWidth
	o ()I getGridHeight
	p ()I getSize
	q ()Lnet/minecraft/world/inventory/InventoryCrafting; getCraftSlots
	t ()Lnet/minecraft/world/inventory/RecipeBookType; getRecipeBookType
net/minecraft/world/inventory/ContainerProperties net/minecraft/world/inventory/SimpleContainerData
	a ints
	a ()I getCount
	a (I)I get
	a (II)V set
net/minecraft/world/inventory/ContainerProperty net/minecraft/world/inventory/DataSlot
	a prevValue
	a ()Lnet/minecraft/world/inventory/ContainerProperty; standalone
	a (I)V set
	a (Lnet/minecraft/world/inventory/IContainerProperties;I)Lnet/minecraft/world/inventory/ContainerProperty; forContainer
	a ([II)Lnet/minecraft/world/inventory/ContainerProperty; shared
	b ()I get
	c ()Z checkAndClearUpdateFlag
net/minecraft/world/inventory/ContainerRecipeBook net/minecraft/world/inventory/RecipeBookMenu
	a (Lnet/minecraft/world/entity/player/AutoRecipeStackManager;)V fillCraftSlotsStackedContents
	a (Lnet/minecraft/world/item/crafting/IRecipe;)Z recipeMatches
	a (ZLnet/minecraft/world/item/crafting/IRecipe;Lnet/minecraft/server/level/EntityPlayer;)V handlePlacement
	e (I)Z shouldMoveToInventory
	l ()V clearCraftingContent
	m ()I getResultSlotIndex
	n ()I getGridWidth
	o ()I getGridHeight
	p ()I getSize
	t ()Lnet/minecraft/world/inventory/RecipeBookType; getRecipeBookType
net/minecraft/world/inventory/ContainerShulkerBox net/minecraft/world/inventory/ShulkerBoxMenu
	k CONTAINER_SIZE
	l container
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	a (Lnet/minecraft/world/entity/player/EntityHuman;I)Lnet/minecraft/world/item/ItemStack; quickMoveStack
	b (Lnet/minecraft/world/entity/player/EntityHuman;)V removed
net/minecraft/world/inventory/ContainerSmithing net/minecraft/world/inventory/SmithingMenu
	k TEMPLATE_SLOT
	l BASE_SLOT
	m ADDITIONAL_SLOT
	n RESULT_SLOT
	s TEMPLATE_SLOT_X_PLACEMENT
	t BASE_SLOT_X_PLACEMENT
	u ADDITIONAL_SLOT_X_PLACEMENT
	v SLOT_Y_PLACEMENT
	w RESULT_SLOT_X_PLACEMENT
	x level
	y selectedRecipe
	z recipes
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/item/ItemStack;)V onTake
	a (Lnet/minecraft/world/entity/player/EntityHuman;Z)Z mayPickup
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z canTakeItemForPickAll
	a (Lnet/minecraft/world/item/crafting/SmithingRecipe;Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; findSlotMatchingIngredient
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z isValidBlock
	c (Lnet/minecraft/world/item/ItemStack;)Z canMoveIntoInputSlots
	d (Lnet/minecraft/world/item/ItemStack;)I getSlotToQuickMoveTo
	e (I)V shrinkStackInSlot
	l ()Lnet/minecraft/world/inventory/ItemCombinerMenuSlotDefinition; createInputSlotDefinitions
	m ()V createResult
net/minecraft/world/inventory/ContainerSmoker net/minecraft/world/inventory/SmokerMenu
net/minecraft/world/inventory/ContainerStonecutter net/minecraft/world/inventory/StonecutterMenu
	A resultContainer
	k INPUT_SLOT
	l RESULT_SLOT
	m inputSlot
	n resultSlot
	o container
	p INV_SLOT_START
	q INV_SLOT_END
	r USE_ROW_SLOT_START
	s USE_ROW_SLOT_END
	t access
	u selectedRecipeIndex
	v level
	w recipes
	x input
	y lastSoundTime
	z slotUpdateListener
	a ()Lnet/minecraft/world/inventory/Containers; getType
	a (Ljava/lang/Runnable;)V registerUpdateListener
	a (Lnet/minecraft/world/IInventory;)V slotsChanged
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/world/item/ItemStack;)V setupRecipeList
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	a (Lnet/minecraft/world/entity/player/EntityHuman;I)Lnet/minecraft/world/item/ItemStack; quickMoveStack
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z canTakeItemForPickAll
	b (Lnet/minecraft/world/entity/player/EntityHuman;)V removed
	b (Lnet/minecraft/world/entity/player/EntityHuman;I)Z clickMenuButton
	e (I)Z isValidRecipeIndex
	l ()I getSelectedRecipeIndex
	m ()Ljava/util/List; getRecipes
	n ()I getNumRecipes
	o ()Z hasInputItem
	p ()V setupResultSlot
net/minecraft/world/inventory/ContainerWorkbench net/minecraft/world/inventory/CraftingMenu
	k RESULT_SLOT
	l CRAFT_SLOT_START
	m CRAFT_SLOT_END
	n INV_SLOT_START
	o INV_SLOT_END
	p USE_ROW_SLOT_START
	q USE_ROW_SLOT_END
	r craftSlots
	s resultSlots
	t access
	u player
	a (Lnet/minecraft/world/IInventory;)V slotsChanged
	a (Lnet/minecraft/world/entity/player/AutoRecipeStackManager;)V fillCraftSlotsStackedContents
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	a (Lnet/minecraft/world/entity/player/EntityHuman;I)Lnet/minecraft/world/item/ItemStack; quickMoveStack
	a (Lnet/minecraft/world/inventory/Container;Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/world/inventory/InventoryCraftResult;)V slotChangedCraftingGrid
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z canTakeItemForPickAll
	a (Lnet/minecraft/world/item/crafting/IRecipe;)Z recipeMatches
	b (Lnet/minecraft/world/entity/player/EntityHuman;)V removed
	e (I)Z shouldMoveToInventory
	l ()V clearCraftingContent
	m ()I getResultSlotIndex
	n ()I getGridWidth
	o ()I getGridHeight
	p ()I getSize
	t ()Lnet/minecraft/world/inventory/RecipeBookType; getRecipeBookType
net/minecraft/world/inventory/Containers net/minecraft/world/inventory/MenuType
	A constructor
	a GENERIC_9x1
	b GENERIC_9x2
	c GENERIC_9x3
	d GENERIC_9x4
	e GENERIC_9x5
	f GENERIC_9x6
	g GENERIC_3x3
	h ANVIL
	i BEACON
	j BLAST_FURNACE
	k BREWING_STAND
	l CRAFTING
	m ENCHANTMENT
	n FURNACE
	o GRINDSTONE
	p HOPPER
	q LECTERN
	r LOOM
	s MERCHANT
	t SHULKER_BOX
	u LEGACY_SMITHING
	v SMITHING
	w SMOKER
	x CARTOGRAPHY_TABLE
	y STONECUTTER
	z requiredFeatures
	a (ILnet/minecraft/world/entity/player/PlayerInventory;)Lnet/minecraft/world/inventory/Container; create
	a (Ljava/lang/String;Lnet/minecraft/world/inventory/Containers$Supplier;)Lnet/minecraft/world/inventory/Containers; register
	a (Ljava/lang/String;Lnet/minecraft/world/inventory/Containers$Supplier;[Lnet/minecraft/world/flag/FeatureFlag;)Lnet/minecraft/world/inventory/Containers; register
	m ()Lnet/minecraft/world/flag/FeatureFlagSet; requiredFeatures
net/minecraft/world/inventory/Containers$Supplier net/minecraft/world/inventory/MenuType$MenuSupplier
net/minecraft/world/inventory/IContainerProperties net/minecraft/world/inventory/ContainerData
	a ()I getCount
	a (I)I get
	a (II)V set
net/minecraft/world/inventory/ICrafting net/minecraft/world/inventory/ContainerListener
	a (Lnet/minecraft/world/inventory/Container;II)V dataChanged
	a (Lnet/minecraft/world/inventory/Container;ILnet/minecraft/world/item/ItemStack;)V slotChanged
net/minecraft/world/inventory/ITileEntityContainer net/minecraft/world/inventory/MenuConstructor
net/minecraft/world/inventory/InventoryClickType net/minecraft/world/inventory/ClickType
	a PICKUP
	b QUICK_MOVE
	c SWAP
	d CLONE
	e THROW
	f QUICK_CRAFT
	g PICKUP_ALL
	h $VALUES
	a ()[Lnet/minecraft/world/inventory/InventoryClickType; $values
net/minecraft/world/inventory/InventoryCraftResult net/minecraft/world/inventory/ResultContainer
	c itemStacks
	d recipeUsed
	a ()V clearContent
	a (I)Lnet/minecraft/world/item/ItemStack; getItem
	a (II)Lnet/minecraft/world/item/ItemStack; removeItem
	a (ILnet/minecraft/world/item/ItemStack;)V setItem
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	a (Lnet/minecraft/world/item/crafting/IRecipe;)V setRecipeUsed
	aa_ ()Z isEmpty
	b ()I getContainerSize
	b (I)Lnet/minecraft/world/item/ItemStack; removeItemNoUpdate
	d ()Lnet/minecraft/world/item/crafting/IRecipe; getRecipeUsed
	e ()V setChanged
net/minecraft/world/inventory/InventoryCrafting net/minecraft/world/inventory/CraftingContainer
	c items
	d width
	e height
	f menu
	a ()V clearContent
	a (I)Lnet/minecraft/world/item/ItemStack; getItem
	a (II)Lnet/minecraft/world/item/ItemStack; removeItem
	a (ILnet/minecraft/world/item/ItemStack;)V setItem
	a (Lnet/minecraft/world/entity/player/AutoRecipeStackManager;)V fillStackedContents
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	aa_ ()Z isEmpty
	b ()I getContainerSize
	b (I)Lnet/minecraft/world/item/ItemStack; removeItemNoUpdate
	e ()V setChanged
	f ()I getHeight
	g ()I getWidth
net/minecraft/world/inventory/InventoryEnderChest net/minecraft/world/inventory/PlayerEnderChestContainer
	c activeChest
	a (Lnet/minecraft/nbt/NBTTagList;)V fromTag
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	a (Lnet/minecraft/world/level/block/entity/TileEntityEnderChest;)V setActiveChest
	b (Lnet/minecraft/world/level/block/entity/TileEntityEnderChest;)Z isActiveChest
	c (Lnet/minecraft/world/entity/player/EntityHuman;)V stopOpen
	d_ (Lnet/minecraft/world/entity/player/EntityHuman;)V startOpen
	g ()Lnet/minecraft/nbt/NBTTagList; createTag
net/minecraft/world/inventory/InventoryMerchant net/minecraft/world/inventory/MerchantContainer
	c merchant
	d itemStacks
	e activeOffer
	f selectionHint
	g futureXp
	a ()V clearContent
	a (I)Lnet/minecraft/world/item/ItemStack; getItem
	a (II)Lnet/minecraft/world/item/ItemStack; removeItem
	a (ILnet/minecraft/world/item/ItemStack;)V setItem
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	aa_ ()Z isEmpty
	b ()I getContainerSize
	b (I)Lnet/minecraft/world/item/ItemStack; removeItemNoUpdate
	c (I)V setSelectionHint
	d (I)Z isPaymentSlot
	e ()V setChanged
	f ()V updateSellItem
	g ()Lnet/minecraft/world/item/trading/MerchantRecipe; getActiveOffer
	h ()I getFutureXp
net/minecraft/world/inventory/SlotFurnaceFuel net/minecraft/world/inventory/FurnaceFuelSlot
	a menu
	a (Lnet/minecraft/world/item/ItemStack;)Z mayPlace
	a_ (Lnet/minecraft/world/item/ItemStack;)I getMaxStackSize
	c (Lnet/minecraft/world/item/ItemStack;)Z isBucket
net/minecraft/world/inventory/SlotFurnaceResult net/minecraft/world/inventory/FurnaceResultSlot
	a player
	b removeCount
	a (I)Lnet/minecraft/world/item/ItemStack; remove
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/item/ItemStack;)V onTake
	a (Lnet/minecraft/world/item/ItemStack;)Z mayPlace
	a (Lnet/minecraft/world/item/ItemStack;I)V onQuickCraft
	b_ (Lnet/minecraft/world/item/ItemStack;)V checkTakeAchievements
net/minecraft/world/inventory/SlotMerchantResult net/minecraft/world/inventory/MerchantResultSlot
	a slots
	b player
	c removeCount
	h merchant
	a (I)Lnet/minecraft/world/item/ItemStack; remove
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/item/ItemStack;)V onTake
	a (Lnet/minecraft/world/item/ItemStack;)Z mayPlace
	a (Lnet/minecraft/world/item/ItemStack;I)V onQuickCraft
	b_ (Lnet/minecraft/world/item/ItemStack;)V checkTakeAchievements
net/minecraft/world/inventory/SlotResult net/minecraft/world/inventory/ResultSlot
	a craftSlots
	b player
	c removeCount
	a (I)Lnet/minecraft/world/item/ItemStack; remove
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/item/ItemStack;)V onTake
	a (Lnet/minecraft/world/item/ItemStack;)Z mayPlace
	a (Lnet/minecraft/world/item/ItemStack;I)V onQuickCraft
	b (I)V onSwapCraft
	b_ (Lnet/minecraft/world/item/ItemStack;)V checkTakeAchievements
net/minecraft/world/inventory/SlotShulkerBox net/minecraft/world/inventory/ShulkerBoxSlot
	a (Lnet/minecraft/world/item/ItemStack;)Z mayPlace
net/minecraft/world/item/EnumAnimation net/minecraft/world/item/UseAnim
	a NONE
	b EAT
	c DRINK
	d BLOCK
	e BOW
	f SPEAR
	g CROSSBOW
	h SPYGLASS
	i TOOT_HORN
	j BRUSH
	k $VALUES
	a ()[Lnet/minecraft/world/item/EnumAnimation; $values
net/minecraft/world/item/EnumArmorMaterial net/minecraft/world/item/ArmorMaterials
	a LEATHER
	b CHAIN
	c IRON
	d GOLD
	e DIAMOND
	f TURTLE
	g NETHERITE
	h CODEC
	i HEALTH_FUNCTION_FOR_TYPE
	j name
	k durabilityMultiplier
	l protectionFunctionForType
	m enchantmentValue
	n sound
	o toughness
	p knockbackResistance
	q repairIngredient
	r $VALUES
	a ()I getEnchantmentValue
	a (Lcdh$a;)I getDurabilityForType
	b ()Lnet/minecraft/sounds/SoundEffect; getEquipSound
	b (Lcdh$a;)I getDefenseForType
	c ()Ljava/lang/String; getSerializedName
	d ()Lnet/minecraft/world/item/crafting/RecipeItemStack; getRepairIngredient
	e ()Ljava/lang/String; getName
	f ()F getToughness
	g ()F getKnockbackResistance
	o ()[Lnet/minecraft/world/item/EnumArmorMaterial; $values
net/minecraft/world/item/EnumColor net/minecraft/world/item/DyeColor
	a WHITE
	b ORANGE
	c MAGENTA
	d LIGHT_BLUE
	e YELLOW
	f LIME
	g PINK
	h GRAY
	i LIGHT_GRAY
	j CYAN
	k PURPLE
	l BLUE
	m BROWN
	n GREEN
	o RED
	p BLACK
	q CODEC
	r BY_ID
	s BY_FIREWORK_COLOR
	t id
	u name
	v color
	w textureDiffuseColors
	x fireworkColor
	y textColor
	z $VALUES
	a ()I getId
	a (I)Lnet/minecraft/world/item/EnumColor; byId
	a (Ljava/lang/String;Lnet/minecraft/world/item/EnumColor;)Lnet/minecraft/world/item/EnumColor; byName
	b ()Ljava/lang/String; getName
	b (I)Lnet/minecraft/world/item/EnumColor; byFireworkColor
	c ()Ljava/lang/String; getSerializedName
	d ()[F getTextureDiffuseColors
	e ()Lnet/minecraft/world/level/material/MaterialMapColor; getMaterialColor
	f ()I getFireworkColor
	g ()I getTextColor
	h ()[Lnet/minecraft/world/item/EnumColor; $values
net/minecraft/world/item/EnumItemRarity net/minecraft/world/item/Rarity
	a COMMON
	b UNCOMMON
	c RARE
	d EPIC
	e color
	f $VALUES
	a ()[Lnet/minecraft/world/item/EnumItemRarity; $values
net/minecraft/world/item/EnumToolMaterial net/minecraft/world/item/Tiers
	a WOOD
	b STONE
	c IRON
	d DIAMOND
	e GOLD
	f NETHERITE
	g level
	h uses
	i speed
	j damage
	k enchantmentValue
	l repairIngredient
	m $VALUES
	a ()I getUses
	b ()F getSpeed
	c ()F getAttackDamageBonus
	d ()I getLevel
	e ()I getEnchantmentValue
	f ()Lnet/minecraft/world/item/crafting/RecipeItemStack; getRepairIngredient
	m ()[Lnet/minecraft/world/item/EnumToolMaterial; $values
net/minecraft/world/item/IDyeable net/minecraft/world/item/DyeableLeatherItem
	m_ TAG_COLOR
	n_ TAG_DISPLAY
	o_ DEFAULT_LEATHER_COLOR
	a (Lnet/minecraft/world/item/ItemStack;)Z hasCustomColor
	a (Lnet/minecraft/world/item/ItemStack;I)V setColor
	a (Lnet/minecraft/world/item/ItemStack;Ljava/util/List;)Lnet/minecraft/world/item/ItemStack; dyeArmor
	e_ (Lnet/minecraft/world/item/ItemStack;)I getColor
	f_ (Lnet/minecraft/world/item/ItemStack;)V clearColor
net/minecraft/world/item/Item$Info net/minecraft/world/item/Item$Properties
	a maxStackSize
	b maxDamage
	c craftingRemainingItem
	d rarity
	e foodProperties
	f isFireResistant
	g requiredFeatures
	a ()Lnet/minecraft/world/item/Item$Info; fireResistant
	a (I)Lnet/minecraft/world/item/Item$Info; stacksTo
	a (Lnet/minecraft/world/food/FoodInfo;)Lnet/minecraft/world/item/Item$Info; food
	a (Lnet/minecraft/world/item/EnumItemRarity;)Lnet/minecraft/world/item/Item$Info; rarity
	a (Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/item/Item$Info; craftRemainder
	a ([Lnet/minecraft/world/flag/FeatureFlag;)Lnet/minecraft/world/item/Item$Info; requiredFeatures
	b (I)Lnet/minecraft/world/item/Item$Info; defaultDurability
	c (I)Lnet/minecraft/world/item/Item$Info; durability
net/minecraft/world/item/ItemAir net/minecraft/world/item/AirItem
	a block
	a ()Ljava/lang/String; getDescriptionId
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V appendHoverText
net/minecraft/world/item/ItemArmor net/minecraft/world/item/ArmorItem
	a DISPENSE_ITEM_BEHAVIOR
	b type
	c knockbackResistance
	d material
	e ARMOR_MODIFIER_UUID_PER_TYPE
	f defense
	g toughness
	h defaultModifiers
	a (Lnet/minecraft/core/ISourceBlock;Lnet/minecraft/world/item/ItemStack;)Z dispenseArmor
	a (Lnet/minecraft/world/entity/EnumItemSlot;)Lcom/google/common/collect/Multimap; getDefaultAttributeModifiers
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z isValidRepairItem
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
	ak_ ()Lnet/minecraft/sounds/SoundEffect; getEquipSound
	b ()Lcdh$a; getType
	c ()I getEnchantmentValue
	d ()Lnet/minecraft/world/item/ArmorMaterial; getMaterial
	e ()I getDefense
	f ()F getToughness
	g ()Lnet/minecraft/world/entity/EnumItemSlot; getEquipmentSlot
net/minecraft/world/item/ItemArmorColorable net/minecraft/world/item/DyeableArmorItem
net/minecraft/world/item/ItemArmorStand net/minecraft/world/item/ArmorStandItem
	a (Lnet/minecraft/world/item/context/ItemActionContext;)Lnet/minecraft/world/EnumInteractionResult; useOn
net/minecraft/world/item/ItemArrow net/minecraft/world/item/ArrowItem
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/entity/projectile/EntityArrow; createArrow
net/minecraft/world/item/ItemAxe net/minecraft/world/item/AxeItem
	a STRIPPABLES
	a (Lnet/minecraft/world/item/context/ItemActionContext;)Lnet/minecraft/world/EnumInteractionResult; useOn
	b (Lnet/minecraft/world/level/block/state/IBlockData;)Ljava/util/Optional; getStripped
net/minecraft/world/item/ItemBanner net/minecraft/world/item/BannerItem
	c PATTERN_PREFIX
	a (Lnet/minecraft/world/item/ItemStack;Ljava/util/List;)V appendHoverTextFromBannerBlockEntityTag
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V appendHoverText
	b ()Lnet/minecraft/world/item/EnumColor; getColor
net/minecraft/world/item/ItemBannerPattern net/minecraft/world/item/BannerPatternItem
	a bannerPattern
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V appendHoverText
	b ()Lnet/minecraft/tags/TagKey; getBannerPattern
	d ()Lnet/minecraft/network/chat/IChatMutableComponent; getDisplayName
net/minecraft/world/item/ItemBed net/minecraft/world/item/BedItem
	a (Lnet/minecraft/world/item/context/BlockActionContext;Lnet/minecraft/world/level/block/state/IBlockData;)Z placeBlock
net/minecraft/world/item/ItemBisected net/minecraft/world/item/DoubleHighBlockItem
	a (Lnet/minecraft/world/item/context/BlockActionContext;Lnet/minecraft/world/level/block/state/IBlockData;)Z placeBlock
net/minecraft/world/item/ItemBlock net/minecraft/world/item/BlockItem
	a BLOCK_ENTITY_TAG
	b BLOCK_STATE_TAG
	c block
	a ()Ljava/lang/String; getDescriptionId
	a (Ljava/util/Map;Lnet/minecraft/world/item/Item;)V registerBlocks
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/IBlockData;)Z updateCustomBlockEntityTag
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/World;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/state/IBlockData; updateBlockStateFromTag
	a (Lnet/minecraft/world/entity/item/EntityItem;)V onDestroyed
	a (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/nbt/NBTTagCompound; getBlockEntityData
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V appendHoverText
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/entity/TileEntityTypes;Lnet/minecraft/nbt/NBTTagCompound;)V setBlockEntityData
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/EnumInteractionResult; place
	a (Lnet/minecraft/world/item/context/BlockActionContext;Lnet/minecraft/world/level/block/state/IBlockData;)Z placeBlock
	a (Lnet/minecraft/world/item/context/ItemActionContext;)Lnet/minecraft/world/EnumInteractionResult; useOn
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/item/ItemStack;)Z updateCustomBlockEntityTag
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/sounds/SoundEffect; getPlaceSound
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/properties/IBlockState;Ljava/lang/String;)Lnet/minecraft/world/level/block/state/IBlockData; updateState
	ag_ ()Z canFitInsideContainerItems
	b (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/item/context/BlockActionContext; updatePlacementContext
	b (Lnet/minecraft/world/item/context/BlockActionContext;Lnet/minecraft/world/level/block/state/IBlockData;)Z canPlace
	c (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getPlacementState
	d ()Z mustSurvive
	e ()Lnet/minecraft/world/level/block/Block; getBlock
	m ()Lnet/minecraft/world/flag/FeatureFlagSet; requiredFeatures
net/minecraft/world/item/ItemBlockWallable net/minecraft/world/item/StandingAndWallBlockItem
	c attachmentDirection
	d wallBlock
	a (Ljava/util/Map;Lnet/minecraft/world/item/Item;)V registerBlocks
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;)Z canPlace
	c (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getPlacementState
net/minecraft/world/item/ItemBoat net/minecraft/world/item/BoatItem
	a ENTITY_PREDICATE
	b type
	c hasChest
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/phys/MovingObjectPosition;)Lnet/minecraft/world/entity/vehicle/EntityBoat; getBoat
net/minecraft/world/item/ItemBoneMeal net/minecraft/world/item/BoneMealItem
	a GRASS_SPREAD_WIDTH
	b GRASS_SPREAD_HEIGHT
	c GRASS_COUNT_MULTIPLIER
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Z growCrop
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Z growWaterPlant
	a (Lnet/minecraft/world/item/context/ItemActionContext;)Lnet/minecraft/world/EnumInteractionResult; useOn
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;I)V addGrowthParticles
net/minecraft/world/item/ItemBook net/minecraft/world/item/BookItem
	c ()I getEnchantmentValue
	d_ (Lnet/minecraft/world/item/ItemStack;)Z isEnchantable
net/minecraft/world/item/ItemBookAndQuill net/minecraft/world/item/WritableBookItem
	a (Lnet/minecraft/nbt/NBTTagCompound;)Z makeSureTagIsValid
	a (Lnet/minecraft/world/item/context/ItemActionContext;)Lnet/minecraft/world/EnumInteractionResult; useOn
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
net/minecraft/world/item/ItemBow net/minecraft/world/item/BowItem
	a MAX_DRAW_DURATION
	b DEFAULT_RANGE
	a (I)F getPowerForTime
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/EntityLiving;I)V releaseUsing
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
	b ()Ljava/util/function/Predicate; getAllSupportedProjectiles
	b (Lnet/minecraft/world/item/ItemStack;)I getUseDuration
	c (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/EnumAnimation; getUseAnimation
	d ()I getDefaultProjectileRange
net/minecraft/world/item/ItemBucket net/minecraft/world/item/BucketItem
	a content
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)V playEmptySound
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Z emptyContents
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/World;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPosition;)V checkExtraContent
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/EntityHuman;)Lnet/minecraft/world/item/ItemStack; getEmptySuccessItem
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
net/minecraft/world/item/ItemCarrotStick net/minecraft/world/item/FoodOnAStickItem
	a canInteractWith
	b consumeItemDamage
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
net/minecraft/world/item/ItemChorusFruit net/minecraft/world/item/ChorusFruitItem
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/item/ItemStack; finishUsingItem
net/minecraft/world/item/ItemCompass net/minecraft/world/item/CompassItem
	a TAG_LODESTONE_POS
	b TAG_LODESTONE_DIMENSION
	c TAG_LODESTONE_TRACKED
	d LOGGER
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/core/GlobalPos; getLodestonePosition
	a (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/nbt/NBTTagCompound;)V addLodestoneTags
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/Entity;IZ)V inventoryTick
	a (Lnet/minecraft/world/item/context/ItemActionContext;)Lnet/minecraft/world/EnumInteractionResult; useOn
	a (Lnet/minecraft/world/level/World;)Lnet/minecraft/core/GlobalPos; getSpawnPosition
	c (Lnet/minecraft/nbt/NBTTagCompound;)Ljava/util/Optional; getLodestoneDimension
	d (Lnet/minecraft/world/item/ItemStack;)Z isLodestoneCompass
	i (Lnet/minecraft/world/item/ItemStack;)Z isFoil
	j (Lnet/minecraft/world/item/ItemStack;)Ljava/lang/String; getDescriptionId
net/minecraft/world/item/ItemCooldown net/minecraft/world/item/ItemCooldowns
	a cooldowns
	b tickCount
	a ()V tick
	a (Lnet/minecraft/world/item/Item;)Z isOnCooldown
	a (Lnet/minecraft/world/item/Item;F)F getCooldownPercent
	a (Lnet/minecraft/world/item/Item;I)V addCooldown
	b (Lnet/minecraft/world/item/Item;)V removeCooldown
	b (Lnet/minecraft/world/item/Item;I)V onCooldownStarted
	c (Lnet/minecraft/world/item/Item;)V onCooldownEnded
net/minecraft/world/item/ItemCooldown$Info net/minecraft/world/item/ItemCooldowns$CooldownInstance
	a startTime
	b endTime
net/minecraft/world/item/ItemCooldownPlayer net/minecraft/world/item/ServerItemCooldowns
	a player
	b (Lnet/minecraft/world/item/Item;I)V onCooldownStarted
	c (Lnet/minecraft/world/item/Item;)V onCooldownEnded
net/minecraft/world/item/ItemCrossbow net/minecraft/world/item/CrossbowItem
	a DEFAULT_RANGE
	b TAG_CHARGED
	e TAG_CHARGED_PROJECTILES
	f MAX_CHARGE_DURATION
	g startSoundPlayed
	h midLoadSoundPlayed
	i START_SOUND_PERCENT
	j MID_SOUND_PERCENT
	k ARROW_POWER
	r FIREWORK_POWER
	a (I)Lnet/minecraft/sounds/SoundEffect; getStartSound
	a (ILnet/minecraft/world/item/ItemStack;)F getPowerForTime
	a (Lnet/minecraft/util/RandomSource;)[F getShotPitches
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;)Z tryLoadProjectiles
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;ZZ)Z loadProjectile
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/Item;)Z containsChargedProjectile
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V appendHoverText
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/EntityLiving;I)V releaseUsing
	a (Lnet/minecraft/world/item/ItemStack;Z)V setCharged
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/item/ItemStack;FF)V performShooting
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;FZFFF)V shootProjectile
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;)V onCrossbowShot
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;I)V onUseTick
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/entity/projectile/EntityArrow; getArrow
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
	a (ZLnet/minecraft/util/RandomSource;)F getRandomShotPitch
	b ()Ljava/util/function/Predicate; getAllSupportedProjectiles
	b (Lnet/minecraft/world/item/ItemStack;)I getUseDuration
	b (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V addChargedProjectile
	c (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/EnumAnimation; getUseAnimation
	d ()I getDefaultProjectileRange
	d (Lnet/minecraft/world/item/ItemStack;)Z isCharged
	e ()Ljava/util/function/Predicate; getSupportedHeldProjectiles
	k (Lnet/minecraft/world/item/ItemStack;)I getChargeDuration
	l (Lnet/minecraft/world/item/ItemStack;)Z useOnRelease
	o (Lnet/minecraft/world/item/ItemStack;)F getShootingPower
	p (Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; getChargedProjectiles
	q (Lnet/minecraft/world/item/ItemStack;)V clearChargedProjectiles
net/minecraft/world/item/ItemDebugStick net/minecraft/world/item/DebugStickItem
	a (Ljava/lang/Iterable;Ljava/lang/Object;Z)Ljava/lang/Object; getRelative
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/network/chat/IChatBaseComponent;)V message
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;ZLnet/minecraft/world/item/ItemStack;)Z handleInteraction
	a (Lnet/minecraft/world/item/context/ItemActionContext;)Lnet/minecraft/world/EnumInteractionResult; useOn
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;)Z canAttackBlock
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/properties/IBlockState;)Ljava/lang/String; getNameHelper
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/properties/IBlockState;Z)Lnet/minecraft/world/level/block/state/IBlockData; cycleState
	i (Lnet/minecraft/world/item/ItemStack;)Z isFoil
net/minecraft/world/item/ItemDye net/minecraft/world/item/DyeItem
	a ITEM_BY_COLOR
	b dyeColor
	a (Lnet/minecraft/world/item/EnumColor;)Lnet/minecraft/world/item/ItemDye; byColor
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; interactLivingEntity
	d ()Lnet/minecraft/world/item/EnumColor; getDyeColor
net/minecraft/world/item/ItemEgg net/minecraft/world/item/EggItem
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
net/minecraft/world/item/ItemElytra net/minecraft/world/item/ElytraItem
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z isValidRepairItem
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
	ak_ ()Lnet/minecraft/sounds/SoundEffect; getEquipSound
	d (Lnet/minecraft/world/item/ItemStack;)Z isFlyEnabled
	g ()Lnet/minecraft/world/entity/EnumItemSlot; getEquipmentSlot
net/minecraft/world/item/ItemEnchantedBook net/minecraft/world/item/EnchantedBookItem
	a TAG_STORED_ENCHANTMENTS
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/enchantment/WeightedRandomEnchant;)V addEnchantment
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V appendHoverText
	a (Lnet/minecraft/world/item/enchantment/WeightedRandomEnchant;)Lnet/minecraft/world/item/ItemStack; createForEnchantment
	d (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/nbt/NBTTagList; getEnchantments
	d_ (Lnet/minecraft/world/item/ItemStack;)Z isEnchantable
	i (Lnet/minecraft/world/item/ItemStack;)Z isFoil
net/minecraft/world/item/ItemEndCrystal net/minecraft/world/item/EndCrystalItem
	a (Lnet/minecraft/world/item/context/ItemActionContext;)Lnet/minecraft/world/EnumInteractionResult; useOn
	i (Lnet/minecraft/world/item/ItemStack;)Z isFoil
net/minecraft/world/item/ItemEnderEye net/minecraft/world/item/EnderEyeItem
	a (Lnet/minecraft/world/item/context/ItemActionContext;)Lnet/minecraft/world/EnumInteractionResult; useOn
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
net/minecraft/world/item/ItemEnderPearl net/minecraft/world/item/EnderpearlItem
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
net/minecraft/world/item/ItemExpBottle net/minecraft/world/item/ExperienceBottleItem
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
	i (Lnet/minecraft/world/item/ItemStack;)Z isFoil
net/minecraft/world/item/ItemFireball net/minecraft/world/item/FireChargeItem
	a (Lnet/minecraft/world/item/context/ItemActionContext;)Lnet/minecraft/world/EnumInteractionResult; useOn
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V playSound
net/minecraft/world/item/ItemFireworks net/minecraft/world/item/FireworkRocketItem
	a CRAFTABLE_DURATIONS
	b TAG_FIREWORKS
	c TAG_EXPLOSION
	d TAG_EXPLOSIONS
	e TAG_FLIGHT
	f TAG_EXPLOSION_TYPE
	g TAG_EXPLOSION_TRAIL
	h TAG_EXPLOSION_FLICKER
	i TAG_EXPLOSION_COLORS
	j TAG_EXPLOSION_FADECOLORS
	k ROCKET_PLACEMENT_OFFSET
	a (Lnet/minecraft/world/item/ItemStack;B)V setDuration
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V appendHoverText
	a (Lnet/minecraft/world/item/context/ItemActionContext;)Lnet/minecraft/world/EnumInteractionResult; useOn
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
	ad_ ()Lnet/minecraft/world/item/ItemStack; getDefaultInstance
net/minecraft/world/item/ItemFireworks$EffectType net/minecraft/world/item/FireworkRocketItem$Shape
	a SMALL_BALL
	b LARGE_BALL
	c STAR
	d CREEPER
	e BURST
	f BY_ID
	g id
	h name
	i $VALUES
	a ()I getId
	a (I)Lnet/minecraft/world/item/ItemFireworks$EffectType; byId
	b ()Ljava/lang/String; getName
	c ()[Lnet/minecraft/world/item/ItemFireworks$EffectType; $values
net/minecraft/world/item/ItemFireworksCharge net/minecraft/world/item/FireworkStarItem
	a (I)Lnet/minecraft/network/chat/IChatBaseComponent; getColorName
	a (Lnet/minecraft/nbt/NBTTagCompound;Ljava/util/List;)V appendHoverText
	a (Lnet/minecraft/network/chat/IChatMutableComponent;[I)Lnet/minecraft/network/chat/IChatBaseComponent; appendColors
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V appendHoverText
net/minecraft/world/item/ItemFishingRod net/minecraft/world/item/FishingRodItem
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
	c ()I getEnchantmentValue
net/minecraft/world/item/ItemFlintAndSteel net/minecraft/world/item/FlintAndSteelItem
	a (Lnet/minecraft/world/item/context/ItemActionContext;)Lnet/minecraft/world/EnumInteractionResult; useOn
net/minecraft/world/item/ItemGlassBottle net/minecraft/world/item/BottleItem
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; turnBottleIntoItem
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
net/minecraft/world/item/ItemGoldenAppleEnchanted net/minecraft/world/item/EnchantedGoldenAppleItem
	i (Lnet/minecraft/world/item/ItemStack;)Z isFoil
net/minecraft/world/item/ItemHanging net/minecraft/world/item/HangingEntityItem
	a TOOLTIP_RANDOM_VARIANT
	b type
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPosition;)Z mayPlace
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V appendHoverText
	a (Lnet/minecraft/world/item/context/ItemActionContext;)Lnet/minecraft/world/EnumInteractionResult; useOn
net/minecraft/world/item/ItemHoe net/minecraft/world/item/HoeItem
	a TILLABLES
	a (Lnet/minecraft/world/item/context/ItemActionContext;)Lnet/minecraft/world/EnumInteractionResult; useOn
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IMaterial;)Ljava/util/function/Consumer; changeIntoStateAndDropItem
	b (Lnet/minecraft/world/item/context/ItemActionContext;)Z onlyIfAirAbove
	b (Lnet/minecraft/world/level/block/state/IBlockData;)Ljava/util/function/Consumer; changeIntoState
net/minecraft/world/item/ItemHoneyBottle net/minecraft/world/item/HoneyBottleItem
	a DRINK_DURATION
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/item/ItemStack; finishUsingItem
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
	ae_ ()Lnet/minecraft/sounds/SoundEffect; getDrinkingSound
	af_ ()Lnet/minecraft/sounds/SoundEffect; getEatingSound
	b (Lnet/minecraft/world/item/ItemStack;)I getUseDuration
	c (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/EnumAnimation; getUseAnimation
net/minecraft/world/item/ItemHorseArmor net/minecraft/world/item/HorseArmorItem
	a TEX_FOLDER
	b protection
	c texture
	h ()Lnet/minecraft/resources/MinecraftKey; getTexture
	i ()I getProtection
net/minecraft/world/item/ItemHorseArmorDyeable net/minecraft/world/item/DyeableHorseArmorItem
net/minecraft/world/item/ItemItemFrame net/minecraft/world/item/ItemFrameItem
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPosition;)Z mayPlace
net/minecraft/world/item/ItemKnowledgeBook net/minecraft/world/item/KnowledgeBookItem
	a RECIPE_TAG
	b LOGGER
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
net/minecraft/world/item/ItemLeash net/minecraft/world/item/LeadItem
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/EnumInteractionResult; bindPlayerMobs
	a (Lnet/minecraft/world/item/context/ItemActionContext;)Lnet/minecraft/world/EnumInteractionResult; useOn
net/minecraft/world/item/ItemLingeringPotion net/minecraft/world/item/LingeringPotionItem
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V appendHoverText
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
net/minecraft/world/item/ItemLiquidUtil net/minecraft/world/item/ItemUtils
	a (Lnet/minecraft/world/entity/item/EntityItem;Ljava/util/stream/Stream;)V onContainerDestroyed
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; createFilledResult
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/item/ItemStack;Z)Lnet/minecraft/world/item/ItemStack; createFilledResult
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; startUsingInstantly
net/minecraft/world/item/ItemMapEmpty net/minecraft/world/item/EmptyMapItem
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
net/minecraft/world/item/ItemMilkBucket net/minecraft/world/item/MilkBucketItem
	a DRINK_DURATION
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/item/ItemStack; finishUsingItem
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
	b (Lnet/minecraft/world/item/ItemStack;)I getUseDuration
	c (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/EnumAnimation; getUseAnimation
net/minecraft/world/item/ItemMinecart net/minecraft/world/item/MinecartItem
	a DISPENSE_ITEM_BEHAVIOR
	b type
	a (Lnet/minecraft/world/item/context/ItemActionContext;)Lnet/minecraft/world/EnumInteractionResult; useOn
net/minecraft/world/item/ItemMonsterEgg net/minecraft/world/item/SpawnEggItem
	a BY_ID
	b backgroundColor
	c highlightColor
	d defaultType
	a (I)I getColor
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/EntityTypes; getType
	a (Lnet/minecraft/nbt/NBTTagCompound;Lnet/minecraft/world/entity/EntityTypes;)Z spawnsEntity
	a (Lnet/minecraft/world/entity/EntityTypes;)Lnet/minecraft/world/item/ItemMonsterEgg; byId
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/entity/EntityInsentient;Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; spawnOffspringFromSpawnEgg
	a (Lnet/minecraft/world/item/context/ItemActionContext;)Lnet/minecraft/world/EnumInteractionResult; useOn
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
	h ()Ljava/lang/Iterable; eggs
	m ()Lnet/minecraft/world/flag/FeatureFlagSet; requiredFeatures
net/minecraft/world/item/ItemNameTag net/minecraft/world/item/NameTagItem
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; interactLivingEntity
net/minecraft/world/item/ItemNamedBlock net/minecraft/world/item/ItemNameBlockItem
	a ()Ljava/lang/String; getDescriptionId
net/minecraft/world/item/ItemNetherStar net/minecraft/world/item/SimpleFoiledItem
	i (Lnet/minecraft/world/item/ItemStack;)Z isFoil
net/minecraft/world/item/ItemPickaxe net/minecraft/world/item/PickaxeItem
net/minecraft/world/item/ItemPotion net/minecraft/world/item/PotionItem
	a DRINK_DURATION
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V appendHoverText
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/item/ItemStack; finishUsingItem
	a (Lnet/minecraft/world/item/context/ItemActionContext;)Lnet/minecraft/world/EnumInteractionResult; useOn
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
	ad_ ()Lnet/minecraft/world/item/ItemStack; getDefaultInstance
	b (Lnet/minecraft/world/item/ItemStack;)I getUseDuration
	c (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/EnumAnimation; getUseAnimation
	j (Lnet/minecraft/world/item/ItemStack;)Ljava/lang/String; getDescriptionId
net/minecraft/world/item/ItemPotionThrowable net/minecraft/world/item/ThrowablePotionItem
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
net/minecraft/world/item/ItemProjectileWeapon net/minecraft/world/item/ProjectileWeaponItem
	c ARROW_ONLY
	d ARROW_OR_FIREWORK
	a (Lnet/minecraft/world/entity/EntityLiving;Ljava/util/function/Predicate;)Lnet/minecraft/world/item/ItemStack; getHeldProjectile
	b ()Ljava/util/function/Predicate; getAllSupportedProjectiles
	c ()I getEnchantmentValue
	d ()I getDefaultProjectileRange
	e ()Ljava/util/function/Predicate; getSupportedHeldProjectiles
net/minecraft/world/item/ItemRecord net/minecraft/world/item/RecordItem
	a BY_NAME
	b analogOutput
	c sound
	d lengthInTicks
	a (Lnet/minecraft/sounds/SoundEffect;)Lnet/minecraft/world/item/ItemRecord; getBySound
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V appendHoverText
	a (Lnet/minecraft/world/item/context/ItemActionContext;)Lnet/minecraft/world/EnumInteractionResult; useOn
	h ()I getAnalogOutput
	i ()Lnet/minecraft/network/chat/IChatMutableComponent; getDisplayName
	x ()Lnet/minecraft/sounds/SoundEffect; getSound
	y ()I getLengthInTicks
net/minecraft/world/item/ItemRestricted net/minecraft/world/item/GameMasterBlockItem
	c (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getPlacementState
net/minecraft/world/item/ItemSaddle net/minecraft/world/item/SaddleItem
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; interactLivingEntity
net/minecraft/world/item/ItemScaffolding net/minecraft/world/item/ScaffoldingBlockItem
	b (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/item/context/BlockActionContext; updatePlacementContext
	d ()Z mustSurvive
net/minecraft/world/item/ItemShears net/minecraft/world/item/ShearsItem
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/EntityLiving;)Z mineBlock
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/IBlockData;)F getDestroySpeed
	a (Lnet/minecraft/world/item/context/ItemActionContext;)Lnet/minecraft/world/EnumInteractionResult; useOn
	a_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isCorrectToolForDrops
net/minecraft/world/item/ItemShield net/minecraft/world/item/ShieldItem
	a EFFECTIVE_BLOCK_DELAY
	b MINIMUM_DURABILITY_DAMAGE
	c TAG_BASE_COLOR
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z isValidRepairItem
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V appendHoverText
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
	b (Lnet/minecraft/world/item/ItemStack;)I getUseDuration
	c (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/EnumAnimation; getUseAnimation
	d (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/EnumColor; getColor
	g ()Lnet/minecraft/world/entity/EnumItemSlot; getEquipmentSlot
	j (Lnet/minecraft/world/item/ItemStack;)Ljava/lang/String; getDescriptionId
net/minecraft/world/item/ItemSign net/minecraft/world/item/SignItem
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/IBlockData;)Z updateCustomBlockEntityTag
net/minecraft/world/item/ItemSkullPlayer net/minecraft/world/item/PlayerHeadItem
	c TAG_SKULL_OWNER
	b (Lnet/minecraft/nbt/NBTTagCompound;)V verifyTagAfterLoad
	m (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/network/chat/IChatBaseComponent; getName
net/minecraft/world/item/ItemSnowball net/minecraft/world/item/SnowballItem
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
net/minecraft/world/item/ItemSoup net/minecraft/world/item/BowlFoodItem
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/item/ItemStack; finishUsingItem
net/minecraft/world/item/ItemSpade net/minecraft/world/item/ShovelItem
	a FLATTENABLES
	a (Lnet/minecraft/world/item/context/ItemActionContext;)Lnet/minecraft/world/EnumInteractionResult; useOn
net/minecraft/world/item/ItemSpectralArrow net/minecraft/world/item/SpectralArrowItem
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/entity/projectile/EntityArrow; createArrow
net/minecraft/world/item/ItemSplashPotion net/minecraft/world/item/SplashPotionItem
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
net/minecraft/world/item/ItemStack$HideFlags net/minecraft/world/item/ItemStack$TooltipPart
	a ENCHANTMENTS
	b MODIFIERS
	c UNBREAKABLE
	d CAN_DESTROY
	e CAN_PLACE
	f ADDITIONAL
	g DYE
	h UPGRADES
	i mask
	j $VALUES
	a ()I getMask
	b ()[Lnet/minecraft/world/item/ItemStack$HideFlags; $values
net/minecraft/world/item/ItemSuspiciousStew net/minecraft/world/item/SuspiciousStewItem
	a EFFECTS_TAG
	b EFFECT_ID_TAG
	c EFFECT_DURATION_TAG
	d DEFAULT_DURATION
	a (Lnet/minecraft/world/item/ItemStack;Ljava/util/function/Consumer;)V listPotionEffects
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/effect/MobEffectList;I)V saveMobEffect
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V appendHoverText
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/item/ItemStack; finishUsingItem
net/minecraft/world/item/ItemSword net/minecraft/world/item/SwordItem
	a attackDamage
	b defaultModifiers
	a (Lnet/minecraft/world/entity/EnumItemSlot;)Lcom/google/common/collect/Multimap; getDefaultAttributeModifiers
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityLiving;)Z hurtEnemy
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/EntityLiving;)Z mineBlock
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/IBlockData;)F getDestroySpeed
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;)Z canAttackBlock
	a_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isCorrectToolForDrops
	h ()F getDamage
net/minecraft/world/item/ItemTippedArrow net/minecraft/world/item/TippedArrowItem
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V appendHoverText
	ad_ ()Lnet/minecraft/world/item/ItemStack; getDefaultInstance
	j (Lnet/minecraft/world/item/ItemStack;)Ljava/lang/String; getDescriptionId
net/minecraft/world/item/ItemTool net/minecraft/world/item/DiggerItem
	a blocks
	b speed
	c attackDamageBaseline
	d defaultModifiers
	a (Lnet/minecraft/world/entity/EnumItemSlot;)Lcom/google/common/collect/Multimap; getDefaultAttributeModifiers
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityLiving;)Z hurtEnemy
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/EntityLiving;)Z mineBlock
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/IBlockData;)F getDestroySpeed
	a_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isCorrectToolForDrops
	d ()F getAttackDamage
net/minecraft/world/item/ItemToolMaterial net/minecraft/world/item/TieredItem
	a tier
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z isValidRepairItem
	c ()I getEnchantmentValue
	i ()Lnet/minecraft/world/item/ToolMaterial; getTier
net/minecraft/world/item/ItemTrident net/minecraft/world/item/TridentItem
	a THROW_THRESHOLD_TIME
	b BASE_DAMAGE
	c SHOOT_POWER
	d defaultModifiers
	a (Lnet/minecraft/world/entity/EnumItemSlot;)Lcom/google/common/collect/Multimap; getDefaultAttributeModifiers
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityLiving;)Z hurtEnemy
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/EntityLiving;I)V releaseUsing
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/EntityLiving;)Z mineBlock
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;)Z canAttackBlock
	b (Lnet/minecraft/world/item/ItemStack;)I getUseDuration
	c ()I getEnchantmentValue
	c (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/EnumAnimation; getUseAnimation
net/minecraft/world/item/ItemVanishable net/minecraft/world/item/Vanishable
net/minecraft/world/item/ItemWorldMap net/minecraft/world/item/MapItem
	a IMAGE_WIDTH
	b IMAGE_HEIGHT
	c MAP_SCALE_TAG
	d MAP_LOCK_TAG
	e DEFAULT_MAP_COLOR
	f TAG_MAP
	a (I)Ljava/lang/String; makeKey
	a (Ljava/lang/Integer;Lnet/minecraft/world/level/World;)Lnet/minecraft/world/level/saveddata/maps/WorldMap; getSavedData
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/item/ItemStack;)V renderBiomePreviewMap
	a (Lnet/minecraft/world/item/ItemStack;I)V storeMapData
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;)Lnet/minecraft/world/level/saveddata/maps/WorldMap; getSavedData
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;I)V scaleMap
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;IIIZZLnet/minecraft/resources/ResourceKey;)V createAndStoreSavedData
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V appendHoverText
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/Entity;IZ)V inventoryTick
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;)Lnet/minecraft/network/protocol/Packet; getUpdatePacket
	a (Lnet/minecraft/world/item/context/ItemActionContext;)Lnet/minecraft/world/EnumInteractionResult; useOn
	a (Lnet/minecraft/world/level/World;IIBZZ)Lnet/minecraft/world/item/ItemStack; create
	a (Lnet/minecraft/world/level/World;IIIZZLnet/minecraft/resources/ResourceKey;)I createNewSavedData
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/saveddata/maps/WorldMap;)V update
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/item/ItemStack;)V lockMap
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; getCorrectStateForFluidBlock
	a ([ZII)Z isBiomeWatery
	b (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;)V onCraftedBy
	d (Lnet/minecraft/world/item/ItemStack;)Ljava/lang/Integer; getMapId
	k (Lnet/minecraft/world/item/ItemStack;)I getColor
net/minecraft/world/item/ItemWorldMapBase net/minecraft/world/item/ComplexItem
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;)Lnet/minecraft/network/protocol/Packet; getUpdatePacket
	ac_ ()Z isComplex
net/minecraft/world/item/ItemWrittenBook net/minecraft/world/item/WrittenBookItem
	a TITLE_LENGTH
	b TITLE_MAX_LENGTH
	c PAGE_EDIT_LENGTH
	d PAGE_LENGTH
	e MAX_PAGES
	f MAX_GENERATION
	g TAG_TITLE
	h TAG_FILTERED_TITLE
	i TAG_AUTHOR
	j TAG_PAGES
	k TAG_FILTERED_PAGES
	r TAG_GENERATION
	s TAG_RESOLVED
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/entity/player/EntityHuman;Ljava/lang/String;)Ljava/lang/String; resolvePage
	a (Lnet/minecraft/nbt/NBTTagCompound;)Z makeSureTagIsValid
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/entity/player/EntityHuman;)Z resolveBookComponents
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V appendHoverText
	a (Lnet/minecraft/world/item/context/ItemActionContext;)Lnet/minecraft/world/EnumInteractionResult; useOn
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
	d (Lnet/minecraft/world/item/ItemStack;)I getGeneration
	i (Lnet/minecraft/world/item/ItemStack;)Z isFoil
	k (Lnet/minecraft/world/item/ItemStack;)I getPageCount
	m (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/network/chat/IChatBaseComponent; getName
net/minecraft/world/item/ToolMaterial net/minecraft/world/item/Tier
	a ()I getUses
	b ()F getSpeed
	c ()F getAttackDamageBonus
	d ()I getLevel
	e ()I getEnchantmentValue
	f ()Lnet/minecraft/world/item/crafting/RecipeItemStack; getRepairIngredient
net/minecraft/world/item/alchemy/PotionBrewer net/minecraft/world/item/alchemy/PotionBrewing
	a BREWING_TIME_SECONDS
	b POTION_MIXES
	c CONTAINER_MIXES
	d ALLOWED_CONTAINERS
	e ALLOWED_CONTAINER
	a ()V bootStrap
	a (Lnet/minecraft/world/item/Item;)V addContainer
	a (Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/Item;)V addContainerRecipe
	a (Lnet/minecraft/world/item/ItemStack;)Z isIngredient
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z hasMix
	a (Lnet/minecraft/world/item/alchemy/PotionRegistry;)Z isBrewablePotion
	a (Lnet/minecraft/world/item/alchemy/PotionRegistry;Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/alchemy/PotionRegistry;)V addMix
	b (Lnet/minecraft/world/item/ItemStack;)Z isContainerIngredient
	b (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z hasContainerMix
	c (Lnet/minecraft/world/item/ItemStack;)Z isPotionIngredient
	c (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z hasPotionMix
	d (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; mix
net/minecraft/world/item/alchemy/PotionBrewer$PredicatedCombination net/minecraft/world/item/alchemy/PotionBrewing$Mix
	a from
	b ingredient
	c to
net/minecraft/world/item/alchemy/PotionRegistry net/minecraft/world/item/alchemy/Potion
	a name
	b effects
	a ()Ljava/util/List; getEffects
	a (Ljava/lang/String;)Lnet/minecraft/world/item/alchemy/PotionRegistry; byName
	b ()Z hasInstantEffects
	b (Ljava/lang/String;)Ljava/lang/String; getName
net/minecraft/world/item/alchemy/PotionUtil net/minecraft/world/item/alchemy/PotionUtils
	a TAG_CUSTOM_POTION_EFFECTS
	b TAG_CUSTOM_POTION_COLOR
	c TAG_POTION
	d EMPTY_COLOR
	e NO_EFFECT
	a (Ljava/util/Collection;)I getColor
	a (Ljava/util/List;Ljava/util/List;F)V addPotionTooltip
	a (Lnet/minecraft/nbt/NBTTagCompound;)Ljava/util/List; getAllEffects
	a (Lnet/minecraft/nbt/NBTTagCompound;Ljava/util/List;)V getCustomEffects
	a (Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; getMobEffects
	a (Lnet/minecraft/world/item/ItemStack;Ljava/util/Collection;)Lnet/minecraft/world/item/ItemStack; setCustomEffects
	a (Lnet/minecraft/world/item/ItemStack;Ljava/util/List;F)V addPotionTooltip
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/alchemy/PotionRegistry;)Lnet/minecraft/world/item/ItemStack; setPotion
	a (Lnet/minecraft/world/item/alchemy/PotionRegistry;)I getColor
	a (Lnet/minecraft/world/item/alchemy/PotionRegistry;Ljava/util/Collection;)Ljava/util/List; getAllEffects
	b (Lnet/minecraft/nbt/NBTTagCompound;)Ljava/util/List; getCustomEffects
	b (Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; getCustomEffects
	c (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/item/alchemy/PotionRegistry; getPotion
	c (Lnet/minecraft/world/item/ItemStack;)I getColor
	d (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/alchemy/PotionRegistry; getPotion
net/minecraft/world/item/context/BlockActionContext net/minecraft/world/item/context/BlockPlaceContext
	a replaceClicked
	b relativePos
	a ()Lnet/minecraft/core/BlockPosition; getClickedPos
	a (Lnet/minecraft/world/item/context/BlockActionContext;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/world/item/context/BlockActionContext; at
	b ()Z canPlace
	c ()Z replacingClickedOnBlock
	d ()Lnet/minecraft/core/EnumDirection; getNearestLookingDirection
	e ()Lnet/minecraft/core/EnumDirection; getNearestLookingVerticalDirection
	f ()[Lnet/minecraft/core/EnumDirection; getNearestLookingDirections
net/minecraft/world/item/context/BlockActionContextDirectional net/minecraft/world/item/context/DirectionalPlaceContext
	b direction
	a ()Lnet/minecraft/core/BlockPosition; getClickedPos
	b ()Z canPlace
	c ()Z replacingClickedOnBlock
	d ()Lnet/minecraft/core/EnumDirection; getNearestLookingDirection
	f ()[Lnet/minecraft/core/EnumDirection; getNearestLookingDirections
	g ()Lnet/minecraft/core/EnumDirection; getHorizontalDirection
	h ()Z isSecondaryUseActive
	i ()F getRotation
net/minecraft/world/item/context/ItemActionContext net/minecraft/world/item/context/UseOnContext
	a player
	b hand
	c hitResult
	d level
	e itemStack
	a ()Lnet/minecraft/core/BlockPosition; getClickedPos
	g ()Lnet/minecraft/core/EnumDirection; getHorizontalDirection
	h ()Z isSecondaryUseActive
	i ()F getRotation
	j ()Lnet/minecraft/world/phys/MovingObjectPositionBlock; getHitResult
	k ()Lnet/minecraft/core/EnumDirection; getClickedFace
	l ()Lnet/minecraft/world/phys/Vec3D; getClickLocation
	m ()Z isInside
	n ()Lnet/minecraft/world/item/ItemStack; getItemInHand
	o ()Lnet/minecraft/world/entity/player/EntityHuman; getPlayer
	p ()Lnet/minecraft/world/EnumHand; getHand
	q ()Lnet/minecraft/world/level/World; getLevel
net/minecraft/world/item/crafting/CraftingManager net/minecraft/world/item/crafting/RecipeManager
	a GSON
	b LOGGER
	c recipes
	d byName
	e hasErrors
	a ()Z hadErrorsLoading
	a (Ljava/lang/Iterable;)V replaceRecipes
	a (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)V apply
	a (Ljava/util/Map;Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)V apply
	a (Lnet/minecraft/resources/MinecraftKey;)Ljava/util/Optional; byKey
	a (Lnet/minecraft/resources/MinecraftKey;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/IRecipe; fromJson
	a (Lnet/minecraft/world/item/crafting/Recipes;)Ljava/util/List; getAllRecipesFor
	a (Lnet/minecraft/world/item/crafting/Recipes;Lnet/minecraft/world/IInventory;Lnet/minecraft/world/level/World;)Ljava/util/Optional; getRecipeFor
	a (Lnet/minecraft/world/item/crafting/Recipes;Lnet/minecraft/world/IInventory;Lnet/minecraft/world/level/World;Lnet/minecraft/resources/MinecraftKey;)Ljava/util/Optional; getRecipeFor
	b ()Ljava/util/Collection; getRecipes
	b (Lnet/minecraft/world/item/crafting/Recipes;)Lciz$a; createCheck
	b (Lnet/minecraft/world/item/crafting/Recipes;Lnet/minecraft/world/IInventory;Lnet/minecraft/world/level/World;)Ljava/util/List; getRecipesFor
	c (Lnet/minecraft/world/item/crafting/Recipes;)Ljava/util/Map; byType
	c (Lnet/minecraft/world/item/crafting/Recipes;Lnet/minecraft/world/IInventory;Lnet/minecraft/world/level/World;)Lnet/minecraft/core/NonNullList; getRemainingItemsFor
	d ()Ljava/util/stream/Stream; getRecipeIds
net/minecraft/world/item/crafting/FurnaceRecipe net/minecraft/world/item/crafting/SmeltingRecipe
	ai_ ()Lnet/minecraft/world/item/crafting/RecipeSerializer; getSerializer
	h ()Lnet/minecraft/world/item/ItemStack; getToastSymbol
net/minecraft/world/item/crafting/IRecipe net/minecraft/world/item/crafting/Recipe
	a ()Lnet/minecraft/core/NonNullList; getIngredients
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; getResultItem
	a (Lnet/minecraft/world/IInventory;)Lnet/minecraft/core/NonNullList; getRemainingItems
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/world/level/World;)Z matches
	ah_ ()Z isSpecial
	ai_ ()Lnet/minecraft/world/item/crafting/RecipeSerializer; getSerializer
	aj_ ()Z isIncomplete
	c ()Ljava/lang/String; getGroup
	e ()Lnet/minecraft/resources/MinecraftKey; getId
	f ()Lnet/minecraft/world/item/crafting/Recipes; getType
	h ()Lnet/minecraft/world/item/ItemStack; getToastSymbol
	i ()Z showNotification
net/minecraft/world/item/crafting/IRecipeComplex net/minecraft/world/item/crafting/CustomRecipe
	a id
	b category
	a (Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; getResultItem
	ah_ ()Z isSpecial
	d ()Lnet/minecraft/world/item/crafting/CraftingBookCategory; category
	e ()Lnet/minecraft/resources/MinecraftKey; getId
net/minecraft/world/item/crafting/RecipeArmorDye net/minecraft/world/item/crafting/ArmorDyeRecipe
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/world/level/World;)Z matches
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/world/level/World;)Z matches
	ai_ ()Lnet/minecraft/world/item/crafting/RecipeSerializer; getSerializer
net/minecraft/world/item/crafting/RecipeBannerDuplicate net/minecraft/world/item/crafting/BannerDuplicateRecipe
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/world/IInventory;)Lnet/minecraft/core/NonNullList; getRemainingItems
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/world/level/World;)Z matches
	a (Lnet/minecraft/world/inventory/InventoryCrafting;)Lnet/minecraft/core/NonNullList; getRemainingItems
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/world/level/World;)Z matches
	ai_ ()Lnet/minecraft/world/item/crafting/RecipeSerializer; getSerializer
net/minecraft/world/item/crafting/RecipeBlasting net/minecraft/world/item/crafting/BlastingRecipe
	ai_ ()Lnet/minecraft/world/item/crafting/RecipeSerializer; getSerializer
	h ()Lnet/minecraft/world/item/ItemStack; getToastSymbol
net/minecraft/world/item/crafting/RecipeBookClone net/minecraft/world/item/crafting/BookCloningRecipe
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/world/IInventory;)Lnet/minecraft/core/NonNullList; getRemainingItems
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/world/level/World;)Z matches
	a (Lnet/minecraft/world/inventory/InventoryCrafting;)Lnet/minecraft/core/NonNullList; getRemainingItems
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/world/level/World;)Z matches
	ai_ ()Lnet/minecraft/world/item/crafting/RecipeSerializer; getSerializer
net/minecraft/world/item/crafting/RecipeCampfire net/minecraft/world/item/crafting/CampfireCookingRecipe
	ai_ ()Lnet/minecraft/world/item/crafting/RecipeSerializer; getSerializer
	h ()Lnet/minecraft/world/item/ItemStack; getToastSymbol
net/minecraft/world/item/crafting/RecipeCooking net/minecraft/world/item/crafting/AbstractCookingRecipe
	a type
	b id
	c group
	d ingredient
	e result
	f experience
	g cookingTime
	h category
	a ()Lnet/minecraft/core/NonNullList; getIngredients
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; getResultItem
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/world/level/World;)Z matches
	b ()F getExperience
	c ()Ljava/lang/String; getGroup
	d ()I getCookingTime
	e ()Lnet/minecraft/resources/MinecraftKey; getId
	f ()Lnet/minecraft/world/item/crafting/Recipes; getType
	g ()Lnet/minecraft/world/item/crafting/CookingBookCategory; category
net/minecraft/world/item/crafting/RecipeCrafting net/minecraft/world/item/crafting/CraftingRecipe
	d ()Lnet/minecraft/world/item/crafting/CraftingBookCategory; category
	f ()Lnet/minecraft/world/item/crafting/Recipes; getType
net/minecraft/world/item/crafting/RecipeFireworks net/minecraft/world/item/crafting/FireworkRocketRecipe
	a PAPER_INGREDIENT
	b GUNPOWDER_INGREDIENT
	c STAR_INGREDIENT
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; getResultItem
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/world/level/World;)Z matches
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/world/level/World;)Z matches
	ai_ ()Lnet/minecraft/world/item/crafting/RecipeSerializer; getSerializer
net/minecraft/world/item/crafting/RecipeFireworksFade net/minecraft/world/item/crafting/FireworkStarFadeRecipe
	a STAR_INGREDIENT
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/world/level/World;)Z matches
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/world/level/World;)Z matches
	ai_ ()Lnet/minecraft/world/item/crafting/RecipeSerializer; getSerializer
net/minecraft/world/item/crafting/RecipeFireworksStar net/minecraft/world/item/crafting/FireworkStarRecipe
	a SHAPE_INGREDIENT
	b TRAIL_INGREDIENT
	c FLICKER_INGREDIENT
	d SHAPE_BY_ITEM
	e GUNPOWDER_INGREDIENT
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; getResultItem
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/world/level/World;)Z matches
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/world/level/World;)Z matches
	ai_ ()Lnet/minecraft/world/item/crafting/RecipeSerializer; getSerializer
net/minecraft/world/item/crafting/RecipeItemStack net/minecraft/world/item/crafting/Ingredient
	a EMPTY
	b values
	c itemStacks
	d stackingIds
	a ()[Lnet/minecraft/world/item/ItemStack; getItems
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/world/item/crafting/RecipeItemStack; fromJson
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/RecipeItemStack$Provider; valueFromJson
	a (Ljava/util/stream/Stream;)Lnet/minecraft/world/item/crafting/RecipeItemStack; of
	a (Lnet/minecraft/network/PacketDataSerializer;)V toNetwork
	a (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/world/item/crafting/RecipeItemStack; of
	a (Lnet/minecraft/world/item/ItemStack;)Z test
	a ([Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/crafting/RecipeItemStack; of
	a ([Lnet/minecraft/world/level/IMaterial;)Lnet/minecraft/world/item/crafting/RecipeItemStack; of
	b ()Lit/unimi/dsi/fastutil/ints/IntList; getStackingIds
	b (Ljava/util/stream/Stream;)Lnet/minecraft/world/item/crafting/RecipeItemStack; fromValues
	b (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/world/item/crafting/RecipeItemStack; fromNetwork
	c ()Lcom/google/gson/JsonElement; toJson
	d ()Z isEmpty
	e ()Lnet/minecraft/world/item/crafting/RecipeItemStack; of
net/minecraft/world/item/crafting/RecipeItemStack$Provider net/minecraft/world/item/crafting/Ingredient$Value
	a ()Ljava/util/Collection; getItems
	b ()Lcom/google/gson/JsonObject; serialize
net/minecraft/world/item/crafting/RecipeItemStack$StackProvider net/minecraft/world/item/crafting/Ingredient$ItemValue
	a item
	a ()Ljava/util/Collection; getItems
	b ()Lcom/google/gson/JsonObject; serialize
net/minecraft/world/item/crafting/RecipeMapClone net/minecraft/world/item/crafting/MapCloningRecipe
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/world/level/World;)Z matches
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/world/level/World;)Z matches
	ai_ ()Lnet/minecraft/world/item/crafting/RecipeSerializer; getSerializer
net/minecraft/world/item/crafting/RecipeMapExtend net/minecraft/world/item/crafting/MapExtendingRecipe
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/world/level/World;)Z matches
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/world/level/World;)Z matches
	ah_ ()Z isSpecial
	ai_ ()Lnet/minecraft/world/item/crafting/RecipeSerializer; getSerializer
net/minecraft/world/item/crafting/RecipeRepair net/minecraft/world/item/crafting/RepairItemRecipe
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/world/level/World;)Z matches
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/world/level/World;)Z matches
	ai_ ()Lnet/minecraft/world/item/crafting/RecipeSerializer; getSerializer
net/minecraft/world/item/crafting/RecipeSerializerCooking net/minecraft/world/item/crafting/SimpleCookingSerializer
	y defaultCookingTime
	z factory
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/world/item/crafting/IRecipe;)V toNetwork
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/world/item/crafting/RecipeCooking;)V toNetwork
	a (Lnet/minecraft/resources/MinecraftKey;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/RecipeCooking; fromJson
	a (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/world/item/crafting/RecipeCooking; fromNetwork
	b (Lnet/minecraft/resources/MinecraftKey;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/IRecipe; fromJson
	b (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/world/item/crafting/IRecipe; fromNetwork
net/minecraft/world/item/crafting/RecipeShulkerBox net/minecraft/world/item/crafting/ShulkerBoxColoring
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/world/level/World;)Z matches
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/world/level/World;)Z matches
	ai_ ()Lnet/minecraft/world/item/crafting/RecipeSerializer; getSerializer
net/minecraft/world/item/crafting/RecipeSingleItem net/minecraft/world/item/crafting/SingleItemRecipe
	a ingredient
	b result
	c id
	d group
	e type
	f serializer
	a ()Lnet/minecraft/core/NonNullList; getIngredients
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; getResultItem
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	ai_ ()Lnet/minecraft/world/item/crafting/RecipeSerializer; getSerializer
	c ()Ljava/lang/String; getGroup
	e ()Lnet/minecraft/resources/MinecraftKey; getId
	f ()Lnet/minecraft/world/item/crafting/Recipes; getType
net/minecraft/world/item/crafting/RecipeSmoking net/minecraft/world/item/crafting/SmokingRecipe
	ai_ ()Lnet/minecraft/world/item/crafting/RecipeSerializer; getSerializer
	h ()Lnet/minecraft/world/item/ItemStack; getToastSymbol
net/minecraft/world/item/crafting/RecipeStonecutting net/minecraft/world/item/crafting/StonecutterRecipe
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/world/level/World;)Z matches
	h ()Lnet/minecraft/world/item/ItemStack; getToastSymbol
net/minecraft/world/item/crafting/RecipeSuspiciousStew net/minecraft/world/item/crafting/SuspiciousStewRecipe
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/world/level/World;)Z matches
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/world/level/World;)Z matches
	ai_ ()Lnet/minecraft/world/item/crafting/RecipeSerializer; getSerializer
net/minecraft/world/item/crafting/RecipeTippedArrow net/minecraft/world/item/crafting/TippedArrowRecipe
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/world/level/World;)Z matches
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/world/level/World;)Z matches
	ai_ ()Lnet/minecraft/world/item/crafting/RecipeSerializer; getSerializer
net/minecraft/world/item/crafting/Recipes net/minecraft/world/item/crafting/RecipeType
	a CRAFTING
	b SMELTING
	c BLASTING
	d SMOKING
	e CAMPFIRE_COOKING
	f STONECUTTING
	g SMITHING
	a (Ljava/lang/String;)Lnet/minecraft/world/item/crafting/Recipes; register
net/minecraft/world/item/crafting/RecipiesShield net/minecraft/world/item/crafting/ShieldDecorationRecipe
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/world/level/World;)Z matches
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/world/level/World;)Z matches
	ai_ ()Lnet/minecraft/world/item/crafting/RecipeSerializer; getSerializer
net/minecraft/world/item/crafting/ShapedRecipes net/minecraft/world/item/crafting/ShapedRecipe
	a width
	b height
	c recipeItems
	d result
	e id
	f group
	g category
	h showNotification
	a ()Lnet/minecraft/core/NonNullList; getIngredients
	a (II)Z canCraftInDimensions
	a (Lcom/google/gson/JsonArray;)[Ljava/lang/String; patternFromJson
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/ItemStack; itemStackFromJson
	a (Ljava/lang/String;)I firstNonSpace
	a (Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; getResultItem
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/world/level/World;)Z matches
	a (Lnet/minecraft/world/inventory/InventoryCrafting;IIZ)Z matches
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/world/level/World;)Z matches
	a ([Ljava/lang/String;)[Ljava/lang/String; shrink
	a ([Ljava/lang/String;Ljava/util/Map;II)Lnet/minecraft/core/NonNullList; dissolvePattern
	ai_ ()Lnet/minecraft/world/item/crafting/RecipeSerializer; getSerializer
	aj_ ()Z isIncomplete
	b (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/Item; itemFromJson
	b (Ljava/lang/String;)I lastNonSpace
	c ()Ljava/lang/String; getGroup
	c (Lcom/google/gson/JsonObject;)Ljava/util/Map; keyFromJson
	d ()Lnet/minecraft/world/item/crafting/CraftingBookCategory; category
	e ()Lnet/minecraft/resources/MinecraftKey; getId
	i ()Z showNotification
	j ()I getWidth
	k ()I getHeight
net/minecraft/world/item/crafting/ShapelessRecipes net/minecraft/world/item/crafting/ShapelessRecipe
	a id
	b group
	c category
	d result
	e ingredients
	a ()Lnet/minecraft/core/NonNullList; getIngredients
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; getResultItem
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/world/level/World;)Z matches
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/world/level/World;)Z matches
	ai_ ()Lnet/minecraft/world/item/crafting/RecipeSerializer; getSerializer
	c ()Ljava/lang/String; getGroup
	d ()Lnet/minecraft/world/item/crafting/CraftingBookCategory; category
	e ()Lnet/minecraft/resources/MinecraftKey; getId
net/minecraft/world/item/enchantment/EnchantmentArrowDamage net/minecraft/world/item/enchantment/ArrowDamageEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	b (I)I getMaxCost
net/minecraft/world/item/enchantment/EnchantmentArrowKnockback net/minecraft/world/item/enchantment/ArrowKnockbackEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	b (I)I getMaxCost
net/minecraft/world/item/enchantment/EnchantmentBinding net/minecraft/world/item/enchantment/BindingCurseEnchantment
	a (I)I getMinCost
	a (Lnet/minecraft/world/item/ItemStack;)Z canEnchant
	b ()Z isTreasureOnly
	b (I)I getMaxCost
	c ()Z isCurse
net/minecraft/world/item/enchantment/EnchantmentDepthStrider net/minecraft/world/item/enchantment/WaterWalkerEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	a (Lnet/minecraft/world/item/enchantment/Enchantment;)Z checkCompatibility
	b (I)I getMaxCost
net/minecraft/world/item/enchantment/EnchantmentDigging net/minecraft/world/item/enchantment/DiggingEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	a (Lnet/minecraft/world/item/ItemStack;)Z canEnchant
	b (I)I getMaxCost
net/minecraft/world/item/enchantment/EnchantmentDurability net/minecraft/world/item/enchantment/DigDurabilityEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	a (Lnet/minecraft/world/item/ItemStack;)Z canEnchant
	a (Lnet/minecraft/world/item/ItemStack;ILnet/minecraft/util/RandomSource;)Z shouldIgnoreDurabilityDrop
	b (I)I getMaxCost
net/minecraft/world/item/enchantment/EnchantmentFire net/minecraft/world/item/enchantment/FireAspectEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	b (I)I getMaxCost
net/minecraft/world/item/enchantment/EnchantmentFlameArrows net/minecraft/world/item/enchantment/ArrowFireEnchantment
	a (I)I getMinCost
	b (I)I getMaxCost
net/minecraft/world/item/enchantment/EnchantmentFrostWalker net/minecraft/world/item/enchantment/FrostWalkerEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;I)V onEntityMoved
	a (Lnet/minecraft/world/item/enchantment/Enchantment;)Z checkCompatibility
	b ()Z isTreasureOnly
	b (I)I getMaxCost
net/minecraft/world/item/enchantment/EnchantmentInfiniteArrows net/minecraft/world/item/enchantment/ArrowInfiniteEnchantment
	a (I)I getMinCost
	a (Lnet/minecraft/world/item/enchantment/Enchantment;)Z checkCompatibility
	b (I)I getMaxCost
net/minecraft/world/item/enchantment/EnchantmentKnockback net/minecraft/world/item/enchantment/KnockbackEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	b (I)I getMaxCost
net/minecraft/world/item/enchantment/EnchantmentLootBonus net/minecraft/world/item/enchantment/LootBonusEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	a (Lnet/minecraft/world/item/enchantment/Enchantment;)Z checkCompatibility
	b (I)I getMaxCost
net/minecraft/world/item/enchantment/EnchantmentLure net/minecraft/world/item/enchantment/FishingSpeedEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	b (I)I getMaxCost
net/minecraft/world/item/enchantment/EnchantmentManager net/minecraft/world/item/enchantment/EnchantmentHelper
	a TAG_ENCH_ID
	b TAG_ENCH_LEVEL
	c SWIFT_SNEAK_EXTRA_FACTOR
	a (ILnet/minecraft/world/item/ItemStack;Z)Ljava/util/List; getAvailableEnchantmentResults
	a (Lcke$a;Ljava/lang/Iterable;)V runIterationOnInventory
	a (Lcke$a;Lnet/minecraft/world/item/ItemStack;)V runIterationOnItem
	a (Ljava/lang/Iterable;Lnet/minecraft/world/damagesource/DamageSource;)I getDamageProtection
	a (Ljava/util/Collection;Lnet/minecraft/world/item/enchantment/Enchantment;)Z isEnchantmentCompatible
	a (Ljava/util/List;Lnet/minecraft/world/item/enchantment/WeightedRandomEnchant;)V filterCompatibleEnchantments
	a (Ljava/util/Map;Lnet/minecraft/world/item/ItemStack;)V setEnchantments
	a (Lnet/minecraft/nbt/NBTTagCompound;)I getEnchantmentLevel
	a (Lnet/minecraft/nbt/NBTTagCompound;I)V setEnchantmentLevel
	a (Lnet/minecraft/nbt/NBTTagList;)Ljava/util/Map; deserializeEnchantments
	a (Lnet/minecraft/resources/MinecraftKey;I)Lnet/minecraft/nbt/NBTTagCompound; storeEnchantment
	a (Lnet/minecraft/util/RandomSource;IILnet/minecraft/world/item/ItemStack;)I getEnchantmentCost
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/item/ItemStack;IZ)Lnet/minecraft/world/item/ItemStack; enchantItem
	a (Lnet/minecraft/world/entity/EntityLiving;)F getSweepingDamageRatio
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/Entity;)V doPostHurtEffects
	a (Lnet/minecraft/world/item/ItemStack;)Ljava/util/Map; getEnchantments
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/EnumMonsterType;)F getDamageBonus
	a (Lnet/minecraft/world/item/enchantment/Enchantment;)Lnet/minecraft/resources/MinecraftKey; getEnchantmentId
	a (Lnet/minecraft/world/item/enchantment/Enchantment;Lnet/minecraft/world/entity/EntityLiving;)I getEnchantmentLevel
	a (Lnet/minecraft/world/item/enchantment/Enchantment;Lnet/minecraft/world/entity/EntityLiving;Ljava/util/function/Predicate;)Ljava/util/Map$Entry; getRandomItemWith
	a (Lnet/minecraft/world/item/enchantment/Enchantment;Lnet/minecraft/world/item/ItemStack;)I getItemEnchantmentLevel
	b (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/resources/MinecraftKey; getEnchantmentId
	b (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/item/ItemStack;IZ)Ljava/util/List; selectEnchantment
	b (Lnet/minecraft/world/entity/EntityLiving;)F getSneakingSpeedBonus
	b (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/Entity;)V doPostDamageEffects
	b (Lnet/minecraft/world/item/ItemStack;)I getFishingLuckBonus
	b (Lnet/minecraft/world/item/enchantment/Enchantment;Lnet/minecraft/world/entity/EntityLiving;)Ljava/util/Map$Entry; getRandomItemWith
	c (Lnet/minecraft/world/entity/EntityLiving;)I getKnockbackBonus
	c (Lnet/minecraft/world/item/ItemStack;)I getFishingSpeedBonus
	d (Lnet/minecraft/world/entity/EntityLiving;)I getFireAspect
	d (Lnet/minecraft/world/item/ItemStack;)Z hasBindingCurse
	e (Lnet/minecraft/world/entity/EntityLiving;)I getRespiration
	e (Lnet/minecraft/world/item/ItemStack;)Z hasVanishingCurse
	f (Lnet/minecraft/world/entity/EntityLiving;)I getDepthStrider
	f (Lnet/minecraft/world/item/ItemStack;)Z hasSilkTouch
	g (Lnet/minecraft/world/entity/EntityLiving;)I getBlockEfficiency
	g (Lnet/minecraft/world/item/ItemStack;)I getLoyalty
	h (Lnet/minecraft/world/entity/EntityLiving;)I getMobLooting
	h (Lnet/minecraft/world/item/ItemStack;)I getRiptide
	i (Lnet/minecraft/world/entity/EntityLiving;)Z hasAquaAffinity
	i (Lnet/minecraft/world/item/ItemStack;)Z hasChanneling
	j (Lnet/minecraft/world/entity/EntityLiving;)Z hasFrostWalker
	k (Lnet/minecraft/world/entity/EntityLiving;)Z hasSoulSpeed
net/minecraft/world/item/enchantment/EnchantmentMending net/minecraft/world/item/enchantment/MendingEnchantment
	a (I)I getMinCost
	b ()Z isTreasureOnly
	b (I)I getMaxCost
net/minecraft/world/item/enchantment/EnchantmentMultishot net/minecraft/world/item/enchantment/MultiShotEnchantment
	a (I)I getMinCost
	a (Lnet/minecraft/world/item/enchantment/Enchantment;)Z checkCompatibility
	b (I)I getMaxCost
net/minecraft/world/item/enchantment/EnchantmentOxygen net/minecraft/world/item/enchantment/OxygenEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	b (I)I getMaxCost
net/minecraft/world/item/enchantment/EnchantmentPiercing net/minecraft/world/item/enchantment/ArrowPiercingEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	a (Lnet/minecraft/world/item/enchantment/Enchantment;)Z checkCompatibility
	b (I)I getMaxCost
net/minecraft/world/item/enchantment/EnchantmentProtection net/minecraft/world/item/enchantment/ProtectionEnchantment
	a type
	a ()I getMaxLevel
	a (I)I getMinCost
	a (ILnet/minecraft/world/damagesource/DamageSource;)I getDamageProtection
	a (Lnet/minecraft/world/entity/EntityLiving;D)D getExplosionKnockbackAfterDampener
	a (Lnet/minecraft/world/entity/EntityLiving;I)I getFireAfterDampener
	a (Lnet/minecraft/world/item/enchantment/Enchantment;)Z checkCompatibility
	b (I)I getMaxCost
net/minecraft/world/item/enchantment/EnchantmentProtection$DamageType net/minecraft/world/item/enchantment/ProtectionEnchantment$Type
	a ALL
	b FIRE
	c FALL
	d EXPLOSION
	e PROJECTILE
	f minCost
	g levelCost
	h $VALUES
	a ()I getMinCost
	b ()I getLevelCost
	c ()[Lnet/minecraft/world/item/enchantment/EnchantmentProtection$DamageType; $values
net/minecraft/world/item/enchantment/EnchantmentQuickCharge net/minecraft/world/item/enchantment/QuickChargeEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	b (I)I getMaxCost
net/minecraft/world/item/enchantment/EnchantmentSilkTouch net/minecraft/world/item/enchantment/UntouchingEnchantment
	a (I)I getMinCost
	a (Lnet/minecraft/world/item/enchantment/Enchantment;)Z checkCompatibility
	b (I)I getMaxCost
net/minecraft/world/item/enchantment/EnchantmentSlotType net/minecraft/world/item/enchantment/EnchantmentCategory
	a ARMOR
	b ARMOR_FEET
	c ARMOR_LEGS
	d ARMOR_CHEST
	e ARMOR_HEAD
	f WEAPON
	g DIGGER
	h FISHING_ROD
	i TRIDENT
	j BREAKABLE
	k BOW
	l WEARABLE
	m CROSSBOW
	n VANISHABLE
	o $VALUES
	a ()[Lnet/minecraft/world/item/enchantment/EnchantmentSlotType; $values
	a (Lnet/minecraft/world/item/Item;)Z canEnchant
net/minecraft/world/item/enchantment/EnchantmentSoulSpeed net/minecraft/world/item/enchantment/SoulSpeedEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	b ()Z isTreasureOnly
	b (I)I getMaxCost
	h ()Z isTradeable
	i ()Z isDiscoverable
net/minecraft/world/item/enchantment/EnchantmentSweeping net/minecraft/world/item/enchantment/SweepingEdgeEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	b (I)I getMaxCost
	e (I)F getSweepingDamageRatio
net/minecraft/world/item/enchantment/EnchantmentThorns net/minecraft/world/item/enchantment/ThornsEnchantment
	a CHANCE_PER_LEVEL
	a ()I getMaxLevel
	a (I)I getMinCost
	a (ILnet/minecraft/util/RandomSource;)Z shouldHit
	a (Lnet/minecraft/world/item/ItemStack;)Z canEnchant
	b (I)I getMaxCost
	b (ILnet/minecraft/util/RandomSource;)I getDamage
	b (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/Entity;I)V doPostHurt
net/minecraft/world/item/enchantment/EnchantmentTridentChanneling net/minecraft/world/item/enchantment/TridentChannelingEnchantment
	a (I)I getMinCost
	b (I)I getMaxCost
net/minecraft/world/item/enchantment/EnchantmentTridentImpaling net/minecraft/world/item/enchantment/TridentImpalerEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	a (ILnet/minecraft/world/entity/EnumMonsterType;)F getDamageBonus
	b (I)I getMaxCost
net/minecraft/world/item/enchantment/EnchantmentTridentLoyalty net/minecraft/world/item/enchantment/TridentLoyaltyEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	b (I)I getMaxCost
net/minecraft/world/item/enchantment/EnchantmentTridentRiptide net/minecraft/world/item/enchantment/TridentRiptideEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	a (Lnet/minecraft/world/item/enchantment/Enchantment;)Z checkCompatibility
	b (I)I getMaxCost
net/minecraft/world/item/enchantment/EnchantmentVanishing net/minecraft/world/item/enchantment/VanishingCurseEnchantment
	a (I)I getMinCost
	b ()Z isTreasureOnly
	b (I)I getMaxCost
	c ()Z isCurse
net/minecraft/world/item/enchantment/EnchantmentWaterWorker net/minecraft/world/item/enchantment/WaterWorkerEnchantment
	a (I)I getMinCost
	b (I)I getMaxCost
net/minecraft/world/item/enchantment/EnchantmentWeaponDamage net/minecraft/world/item/enchantment/DamageEnchantment
	a ALL
	b UNDEAD
	c ARTHROPODS
	d type
	g NAMES
	h MIN_COST
	i LEVEL_COST
	j LEVEL_COST_SPAN
	a ()I getMaxLevel
	a (I)I getMinCost
	a (ILnet/minecraft/world/entity/EnumMonsterType;)F getDamageBonus
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/Entity;I)V doPostAttack
	a (Lnet/minecraft/world/item/ItemStack;)Z canEnchant
	a (Lnet/minecraft/world/item/enchantment/Enchantment;)Z checkCompatibility
	b (I)I getMaxCost
net/minecraft/world/item/enchantment/WeightedRandomEnchant net/minecraft/world/item/enchantment/EnchantmentInstance
	a enchantment
	b level
net/minecraft/world/item/trading/IMerchant net/minecraft/world/item/trading/Merchant
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/network/chat/IChatBaseComponent;I)V openTradingScreen
	a (Lnet/minecraft/world/item/trading/MerchantRecipe;)V notifyTrade
	a (Lnet/minecraft/world/item/trading/MerchantRecipeList;)V overrideOffers
	e (Lnet/minecraft/world/entity/player/EntityHuman;)V setTradingPlayer
	fS ()Lnet/minecraft/world/entity/player/EntityHuman; getTradingPlayer
	fU ()Lnet/minecraft/world/item/trading/MerchantRecipeList; getOffers
	fV ()Z showProgressBar
	fW ()Lnet/minecraft/sounds/SoundEffect; getNotifyTradeSound
	ga ()Z isClientSide
	ge ()Z canRestock
	l (Lnet/minecraft/world/item/ItemStack;)V notifyTradeUpdated
	r ()I getVillagerXp
	s (I)V overrideXp
net/minecraft/world/item/trading/MerchantRecipe net/minecraft/world/item/trading/MerchantOffer
	a baseCostA
	b costB
	c result
	d uses
	e maxUses
	f rewardExp
	g specialPriceDiff
	h demand
	i priceMultiplier
	j xp
	a ()Lnet/minecraft/world/item/ItemStack; getBaseCostA
	a (I)V addToSpecialPriceDiff
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z satisfiedBy
	b ()Lnet/minecraft/world/item/ItemStack; getCostA
	b (I)V setSpecialPriceDiff
	b (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z take
	c ()Lnet/minecraft/world/item/ItemStack; getCostB
	c (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z isRequiredItem
	d ()Lnet/minecraft/world/item/ItemStack; getResult
	e ()V updateDemand
	f ()Lnet/minecraft/world/item/ItemStack; assemble
	g ()I getUses
	h ()V resetUses
	i ()I getMaxUses
	j ()V increaseUses
	k ()I getDemand
	l ()V resetSpecialPriceDiff
	m ()I getSpecialPriceDiff
	n ()F getPriceMultiplier
	o ()I getXp
	p ()Z isOutOfStock
	q ()V setToOutOfStock
	r ()Z needsRestock
	s ()Z shouldRewardExp
	t ()Lnet/minecraft/nbt/NBTTagCompound; createTag
net/minecraft/world/item/trading/MerchantRecipeList net/minecraft/world/item/trading/MerchantOffers
	a ()Lnet/minecraft/nbt/NBTTagCompound; createTag
	a (Lnet/minecraft/network/PacketDataSerializer;)V writeToStream
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;I)Lnet/minecraft/world/item/trading/MerchantRecipe; getRecipeFor
	b (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/world/item/trading/MerchantRecipeList; createFromStream
net/minecraft/world/level/BlockAccessAir net/minecraft/world/level/EmptyBlockGetter
	a INSTANCE
	b $VALUES
	a ()[Lnet/minecraft/world/level/BlockAccessAir; $values
	a_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; getBlockState
	b_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	c_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/entity/TileEntity; getBlockEntity
	v_ ()I getMinBuildHeight
	w_ ()I getHeight
net/minecraft/world/level/BlockActionData net/minecraft/world/level/BlockEventData
	a pos
	b block
	c paramA
	d paramB
	a ()Lnet/minecraft/core/BlockPosition; pos
	b ()Lnet/minecraft/world/level/block/Block; block
	c ()I paramA
	d ()I paramB
net/minecraft/world/level/BlockColumn net/minecraft/world/level/NoiseColumn
	a minY
	b column
	a (I)Lnet/minecraft/world/level/block/state/IBlockData; getBlock
	a (ILnet/minecraft/world/level/block/state/IBlockData;)V setBlock
net/minecraft/world/level/ChunkCache net/minecraft/world/level/PathNavigationRegion
	a centerX
	b centerZ
	c chunks
	d allEmpty
	e level
	f plains
	a ()Lnet/minecraft/util/profiling/GameProfilerFiller; getProfiler
	a (II)Lnet/minecraft/world/level/chunk/IChunkAccess; getChunk
	a_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; getBlockState
	b (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AxisAlignedBB;)Ljava/util/List; getEntityCollisions
	b_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	c (II)Lnet/minecraft/world/level/IBlockAccess; getChunkForCollisions
	c_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/entity/TileEntity; getBlockEntity
	d (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/chunk/IChunkAccess; getChunk
	p_ ()Lnet/minecraft/world/level/border/WorldBorder; getWorldBorder
	v_ ()I getMinBuildHeight
	w_ ()I getHeight
net/minecraft/world/level/ChunkCoordIntPair net/minecraft/world/level/ChunkPos
	a INVALID_CHUNK_POS
	b ZERO
	c REGION_SIZE
	d REGION_MAX_INDEX
	e x
	f z
	g SAFETY_MARGIN
	h COORD_BITS
	i COORD_MASK
	j REGION_BITS
	k REGION_MASK
	l HASH_A
	m HASH_C
	n HASH_Z_XOR
	a ()J toLong
	a (I)I getBlockX
	a (II)Lnet/minecraft/world/level/ChunkCoordIntPair; minFromRegion
	a (III)Lnet/minecraft/core/BlockPosition; getBlockAt
	a (J)I getX
	a (Lnet/minecraft/core/BlockPosition;)J asLong
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;)I getChessboardDistance
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;I)Ljava/util/stream/Stream; rangeClosed
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/world/level/ChunkCoordIntPair;)Ljava/util/stream/Stream; rangeClosed
	b ()I getMiddleBlockX
	b (I)I getBlockZ
	b (II)Lnet/minecraft/world/level/ChunkCoordIntPair; maxFromRegion
	b (J)I getZ
	c ()I getMiddleBlockZ
	c (I)Lnet/minecraft/core/BlockPosition; getMiddleBlockPosition
	c (II)J asLong
	d ()I getMinBlockX
	d (II)I hash
	e ()I getMinBlockZ
	f ()I getMaxBlockX
	g ()I getMaxBlockZ
	h ()I getRegionX
	i ()I getRegionZ
	j ()I getRegionLocalX
	k ()I getRegionLocalZ
	l ()Lnet/minecraft/core/BlockPosition; getWorldPosition
net/minecraft/world/level/CommandBlockListenerAbstract net/minecraft/world/level/BaseCommandBlock
	b TIME_FORMAT
	c DEFAULT_NAME
	d lastExecution
	e updateLastExecution
	f successCount
	g trackOutput
	h lastOutput
	i command
	j name
	M_ ()Z shouldInformAdmins
	a (I)V setSuccessCount
	a (Ljava/lang/String;)V setCommand
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; save
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V sendSystemMessage
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Lnet/minecraft/world/EnumInteractionResult; usedBy
	a (Lnet/minecraft/world/level/World;)Z performCommand
	a (Z)V setTrackOutput
	b (Lnet/minecraft/nbt/NBTTagCompound;)V load
	b (Lnet/minecraft/network/chat/IChatBaseComponent;)V setName
	c (Lnet/minecraft/network/chat/IChatBaseComponent;)V setLastOutput
	d_ ()Z acceptsSuccess
	e ()Lnet/minecraft/server/level/WorldServer; getLevel
	f ()V onUpdated
	g ()Lnet/minecraft/world/phys/Vec3D; getPosition
	i ()Lnet/minecraft/commands/CommandListenerWrapper; createCommandSourceStack
	j ()I getSuccessCount
	j_ ()Z acceptsFailure
	k ()Lnet/minecraft/network/chat/IChatBaseComponent; getLastOutput
	l ()Ljava/lang/String; getCommand
	m ()Lnet/minecraft/network/chat/IChatBaseComponent; getName
	n ()Z isTrackOutput
net/minecraft/world/level/DataPackConfiguration net/minecraft/world/level/DataPackConfig
	a DEFAULT
	b CODEC
	c enabled
	d disabled
	a ()Ljava/util/List; getEnabled
	b ()Ljava/util/List; getDisabled
net/minecraft/world/level/EnumGamemode net/minecraft/world/level/GameType
	a SURVIVAL
	b CREATIVE
	c ADVENTURE
	d SPECTATOR
	e DEFAULT_MODE
	f CODEC
	g BY_ID
	h NOT_SET
	i id
	j name
	k shortName
	l longName
	m $VALUES
	a ()I getId
	a (I)Lnet/minecraft/world/level/EnumGamemode; byId
	a (Ljava/lang/String;)Lnet/minecraft/world/level/EnumGamemode; byName
	a (Ljava/lang/String;Lnet/minecraft/world/level/EnumGamemode;)Lnet/minecraft/world/level/EnumGamemode; byName
	a (Lnet/minecraft/world/entity/player/PlayerAbilities;)V updatePlayerAbilities
	a (Lnet/minecraft/world/level/EnumGamemode;)I getNullableId
	b ()Ljava/lang/String; getName
	b (I)Lnet/minecraft/world/level/EnumGamemode; byNullableId
	c ()Ljava/lang/String; getSerializedName
	d ()Lnet/minecraft/network/chat/IChatBaseComponent; getLongDisplayName
	e ()Lnet/minecraft/network/chat/IChatBaseComponent; getShortDisplayName
	f ()Z isBlockPlacingRestricted
	g ()Z isCreative
	h ()Z isSurvival
	i ()[Lnet/minecraft/world/level/EnumGamemode; $values
net/minecraft/world/level/EnumSkyBlock net/minecraft/world/level/LightLayer
	a SKY
	b BLOCK
	c surrounding
	d $VALUES
	a ()[Lnet/minecraft/world/level/EnumSkyBlock; $values
net/minecraft/world/level/Explosion$Effect net/minecraft/world/level/Explosion$BlockInteraction
	a KEEP
	b DESTROY
	c DESTROY_WITH_DECAY
	d $VALUES
	a ()[Lnet/minecraft/world/level/Explosion$Effect; $values
net/minecraft/world/level/ExplosionDamageCalculatorEntity net/minecraft/world/level/EntityBasedExplosionDamageCalculator
	a source
	a (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;F)Z shouldBlockExplode
	a (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/Fluid;)Ljava/util/Optional; getBlockExplosionResistance
net/minecraft/world/level/ForcedChunk net/minecraft/world/level/ForcedChunksSavedData
	a FILE_ID
	b TAG_FORCED
	c chunks
	a ()Lit/unimi/dsi/fastutil/longs/LongSet; getChunks
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; save
	b (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/level/ForcedChunk; load
net/minecraft/world/level/GameRules$GameRuleBoolean net/minecraft/world/level/GameRules$BooleanValue
	b value
	a ()Z get
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V updateFromArgument
	a (Ljava/lang/String;)V deserialize
	a (Lnet/minecraft/world/level/GameRules$GameRuleBoolean;Lnet/minecraft/server/MinecraftServer;)V setFrom
	a (Lnet/minecraft/world/level/GameRules$GameRuleValue;Lnet/minecraft/server/MinecraftServer;)V setFrom
	a (Z)Lnet/minecraft/world/level/GameRules$GameRuleDefinition; create
	a (ZLjava/util/function/BiConsumer;)Lnet/minecraft/world/level/GameRules$GameRuleDefinition; create
	a (ZLnet/minecraft/server/MinecraftServer;)V set
	b ()Ljava/lang/String; serialize
	c ()I getCommandResult
	d ()Lnet/minecraft/world/level/GameRules$GameRuleBoolean; getSelf
	e ()Lnet/minecraft/world/level/GameRules$GameRuleBoolean; copy
	f ()Lnet/minecraft/world/level/GameRules$GameRuleValue; copy
	g ()Lnet/minecraft/world/level/GameRules$GameRuleValue; getSelf
net/minecraft/world/level/GameRules$GameRuleCategory net/minecraft/world/level/GameRules$Category
	a PLAYER
	b MOBS
	c SPAWNING
	d DROPS
	e UPDATES
	f CHAT
	g MISC
	h descriptionId
	i $VALUES
	a ()Ljava/lang/String; getDescriptionId
	b ()[Lnet/minecraft/world/level/GameRules$GameRuleCategory; $values
net/minecraft/world/level/GameRules$GameRuleDefinition net/minecraft/world/level/GameRules$Type
	a argument
	b constructor
	c callback
	d visitorCaller
	a ()Lnet/minecraft/world/level/GameRules$GameRuleValue; createRule
	a (Ljava/lang/String;)Lcom/mojang/brigadier/builder/RequiredArgumentBuilder; createArgument
	a (Lnet/minecraft/world/level/GameRules$GameRuleVisitor;Lnet/minecraft/world/level/GameRules$GameRuleKey;)V callVisitor
net/minecraft/world/level/GameRules$GameRuleInt net/minecraft/world/level/GameRules$IntegerValue
	b value
	a ()I get
	a (I)Lnet/minecraft/world/level/GameRules$GameRuleDefinition; create
	a (ILjava/util/function/BiConsumer;)Lnet/minecraft/world/level/GameRules$GameRuleDefinition; create
	a (ILnet/minecraft/server/MinecraftServer;)V set
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V updateFromArgument
	a (Ljava/lang/String;)V deserialize
	a (Lnet/minecraft/world/level/GameRules$GameRuleInt;Lnet/minecraft/server/MinecraftServer;)V setFrom
	a (Lnet/minecraft/world/level/GameRules$GameRuleValue;Lnet/minecraft/server/MinecraftServer;)V setFrom
	b ()Ljava/lang/String; serialize
	b (Ljava/lang/String;)Z tryDeserialize
	c ()I getCommandResult
	c (Ljava/lang/String;)I safeParse
	d ()Lnet/minecraft/world/level/GameRules$GameRuleInt; getSelf
	e ()Lnet/minecraft/world/level/GameRules$GameRuleInt; copy
	f ()Lnet/minecraft/world/level/GameRules$GameRuleValue; copy
	g ()Lnet/minecraft/world/level/GameRules$GameRuleValue; getSelf
net/minecraft/world/level/GameRules$GameRuleKey net/minecraft/world/level/GameRules$Key
	a id
	b category
	a ()Ljava/lang/String; getId
	b ()Ljava/lang/String; getDescriptionId
	c ()Lnet/minecraft/world/level/GameRules$GameRuleCategory; getCategory
net/minecraft/world/level/GameRules$GameRuleValue net/minecraft/world/level/GameRules$Value
	a type
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V updateFromArgument
	a (Ljava/lang/String;)V deserialize
	a (Lnet/minecraft/server/MinecraftServer;)V onChanged
	a (Lnet/minecraft/world/level/GameRules$GameRuleValue;Lnet/minecraft/server/MinecraftServer;)V setFrom
	b ()Ljava/lang/String; serialize
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V setFromArgument
	c ()I getCommandResult
	f ()Lnet/minecraft/world/level/GameRules$GameRuleValue; copy
	g ()Lnet/minecraft/world/level/GameRules$GameRuleValue; getSelf
net/minecraft/world/level/GameRules$GameRuleVisitor net/minecraft/world/level/GameRules$GameRuleTypeVisitor
	a (Lnet/minecraft/world/level/GameRules$GameRuleKey;Lnet/minecraft/world/level/GameRules$GameRuleDefinition;)V visit
	b (Lnet/minecraft/world/level/GameRules$GameRuleKey;Lnet/minecraft/world/level/GameRules$GameRuleDefinition;)V visitBoolean
	c (Lnet/minecraft/world/level/GameRules$GameRuleKey;Lnet/minecraft/world/level/GameRules$GameRuleDefinition;)V visitInteger
net/minecraft/world/level/GeneratorAccess net/minecraft/world/level/LevelAccessor
	I ()Lnet/minecraft/world/level/chunk/IChunkProvider; getChunkSource
	J ()Lnet/minecraft/world/ticks/LevelTickAccess; getFluidTicks
	K ()Lnet/minecraft/world/ticks/LevelTickAccess; getBlockTicks
	a (Lnet/minecraft/core/BlockPosition;Ljava/lang/Object;I)Lnet/minecraft/world/ticks/NextTickListEntry; createTick
	a (Lnet/minecraft/core/BlockPosition;Ljava/lang/Object;ILnet/minecraft/world/ticks/TickListPriority;)Lnet/minecraft/world/ticks/NextTickListEntry; createTick
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;I)V scheduleTick
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;ILnet/minecraft/world/ticks/TickListPriority;)V scheduleTick
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/material/FluidType;I)V scheduleTick
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/material/FluidType;ILnet/minecraft/world/ticks/TickListPriority;)V scheduleTick
	a (Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;II)V neighborShapeChanged
	a (Lnet/minecraft/core/particles/ParticleParam;DDDDDD)V addParticle
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/core/BlockPosition;)V gameEvent
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/phys/Vec3D;)V gameEvent
	a (Lnet/minecraft/world/entity/player/EntityHuman;ILnet/minecraft/core/BlockPosition;I)V levelEvent
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/sounds/SoundEffect;Lnet/minecraft/sounds/SoundCategory;)V playSound
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/sounds/SoundEffect;Lnet/minecraft/sounds/SoundCategory;FF)V playSound
	a (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/core/BlockPosition;Ldga$a;)V gameEvent
	a (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/phys/Vec3D;Ldga$a;)V gameEvent
	ag ()J dayTime
	ah ()Lnet/minecraft/world/EnumDifficulty; getDifficulty
	b (II)Z hasChunk
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;)V blockUpdated
	c (ILnet/minecraft/core/BlockPosition;I)V levelEvent
	d_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/DifficultyDamageScaler; getCurrentDifficultyAt
	n ()Lnet/minecraft/server/MinecraftServer; getServer
	n_ ()Lnet/minecraft/world/level/storage/WorldData; getLevelData
	r_ ()Lnet/minecraft/util/RandomSource; getRandom
	t_ ()J nextSubTickCount
net/minecraft/world/level/GeneratorAccessSeed net/minecraft/world/level/WorldGenLevel
	A ()J getSeed
	a (Ljava/util/function/Supplier;)V setCurrentlyGenerating
	e_ (Lnet/minecraft/core/BlockPosition;)Z ensureCanWrite
net/minecraft/world/level/IBlockAccess net/minecraft/world/level/BlockGetter
	L ()I getMaxLightLevel
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Ljava/util/Optional; getBlockEntity
	a (Lnet/minecraft/world/level/ClipBlockStateContext;)Lnet/minecraft/world/phys/MovingObjectPositionBlock; isBlockInLine
	a (Lnet/minecraft/world/level/RayTrace;)Lnet/minecraft/world/phys/MovingObjectPositionBlock; clip
	a (Lnet/minecraft/world/phys/AxisAlignedBB;)Ljava/util/stream/Stream; getBlockStates
	a (Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/phys/Vec3D;Ljava/lang/Object;Ljava/util/function/BiFunction;Ljava/util/function/Function;)Ljava/lang/Object; traverseBlocks
	a (Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/phys/MovingObjectPositionBlock; clipWithInteractionOverride
	a (Lnet/minecraft/world/phys/shapes/VoxelShape;Ljava/util/function/Supplier;)D getBlockFloorHeight
	a_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; getBlockState
	b_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	c_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/entity/TileEntity; getBlockEntity
	h (Lnet/minecraft/core/BlockPosition;)I getLightEmission
	i (Lnet/minecraft/core/BlockPosition;)D getBlockFloorHeight
net/minecraft/world/level/IBlockLightAccess net/minecraft/world/level/BlockAndTintGetter
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/ColorResolver;)I getBlockTint
	a (Lnet/minecraft/core/EnumDirection;Z)F getShade
	a (Lnet/minecraft/world/level/EnumSkyBlock;Lnet/minecraft/core/BlockPosition;)I getBrightness
	b (Lnet/minecraft/core/BlockPosition;I)I getRawBrightness
	g (Lnet/minecraft/core/BlockPosition;)Z canSeeSky
	l_ ()Lnet/minecraft/world/level/lighting/LightEngine; getLightEngine
net/minecraft/world/level/ICollisionAccess net/minecraft/world/level/CollisionGetter
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AxisAlignedBB;)Z noCollision
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/shapes/VoxelShape;)Z isUnobstructed
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/Vec3D;DDD)Ljava/util/Optional; findFreePosition
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Z isUnobstructed
	b (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AxisAlignedBB;)Ljava/util/List; getEntityCollisions
	b (Lnet/minecraft/world/phys/AxisAlignedBB;)Z noCollision
	c (II)Lnet/minecraft/world/level/IBlockAccess; getChunkForCollisions
	c (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AxisAlignedBB;)Ljava/lang/Iterable; getCollisions
	d (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AxisAlignedBB;)Ljava/lang/Iterable; getBlockCollisions
	e (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AxisAlignedBB;)Z collidesWithSuffocatingBlock
	f (Lnet/minecraft/world/entity/Entity;)Z isUnobstructed
	f (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AxisAlignedBB;)Lnet/minecraft/world/phys/shapes/VoxelShape; borderCollision
	g (Lnet/minecraft/world/entity/Entity;)Z noCollision
	p_ ()Lnet/minecraft/world/level/border/WorldBorder; getWorldBorder
net/minecraft/world/level/ICombinedAccess net/minecraft/world/level/CommonLevelAccessor
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Ljava/util/Optional; getBlockEntity
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/shapes/VoxelShape;)Z isUnobstructed
	a (Lnet/minecraft/world/level/levelgen/HeightMap$Type;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/core/BlockPosition; getHeightmapPos
	b (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AxisAlignedBB;)Ljava/util/List; getEntityCollisions
net/minecraft/world/level/IEntityAccess net/minecraft/world/level/EntityGetter
	a (DDDD)Z hasNearbyAlivePlayer
	a (DDDDLjava/util/function/Predicate;)Lnet/minecraft/world/entity/player/EntityHuman; getNearestPlayer
	a (DDDDZ)Lnet/minecraft/world/entity/player/EntityHuman; getNearestPlayer
	a (Ljava/lang/Class;Lnet/minecraft/world/entity/ai/targeting/PathfinderTargetCondition;Lnet/minecraft/world/entity/EntityLiving;DDDLnet/minecraft/world/phys/AxisAlignedBB;)Lnet/minecraft/world/entity/EntityLiving; getNearestEntity
	a (Ljava/lang/Class;Lnet/minecraft/world/entity/ai/targeting/PathfinderTargetCondition;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/phys/AxisAlignedBB;)Ljava/util/List; getNearbyEntities
	a (Ljava/lang/Class;Lnet/minecraft/world/phys/AxisAlignedBB;)Ljava/util/List; getEntitiesOfClass
	a (Ljava/lang/Class;Lnet/minecraft/world/phys/AxisAlignedBB;Ljava/util/function/Predicate;)Ljava/util/List; getEntitiesOfClass
	a (Ljava/util/List;Lnet/minecraft/world/entity/ai/targeting/PathfinderTargetCondition;Lnet/minecraft/world/entity/EntityLiving;DDD)Lnet/minecraft/world/entity/EntityLiving; getNearestEntity
	a (Lnet/minecraft/world/entity/Entity;D)Lnet/minecraft/world/entity/player/EntityHuman; getNearestPlayer
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AxisAlignedBB;Ljava/util/function/Predicate;)Ljava/util/List; getEntities
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/shapes/VoxelShape;)Z isUnobstructed
	a (Lnet/minecraft/world/entity/ai/targeting/PathfinderTargetCondition;DDD)Lnet/minecraft/world/entity/player/EntityHuman; getNearestPlayer
	a (Lnet/minecraft/world/entity/ai/targeting/PathfinderTargetCondition;Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/entity/player/EntityHuman; getNearestPlayer
	a (Lnet/minecraft/world/entity/ai/targeting/PathfinderTargetCondition;Lnet/minecraft/world/entity/EntityLiving;DDD)Lnet/minecraft/world/entity/player/EntityHuman; getNearestPlayer
	a (Lnet/minecraft/world/entity/ai/targeting/PathfinderTargetCondition;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/phys/AxisAlignedBB;)Ljava/util/List; getNearbyPlayers
	a (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/world/phys/AxisAlignedBB;Ljava/util/function/Predicate;)Ljava/util/List; getEntities
	a_ (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AxisAlignedBB;)Ljava/util/List; getEntities
	b (Ljava/util/UUID;)Lnet/minecraft/world/entity/player/EntityHuman; getPlayerByUUID
	b (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AxisAlignedBB;)Ljava/util/List; getEntityCollisions
	v ()Ljava/util/List; players
net/minecraft/world/level/IMaterial net/minecraft/world/level/ItemLike
	k ()Lnet/minecraft/world/item/Item; asItem
net/minecraft/world/level/IWorldReader net/minecraft/world/level/LevelReader
	A (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/chunk/IChunkAccess; getChunk
	B (Lnet/minecraft/core/BlockPosition;)Z isWaterAt
	C (Lnet/minecraft/core/BlockPosition;)I getMaxLocalRawBrightness
	D (Lnet/minecraft/core/BlockPosition;)Z hasChunkAt
	G ()Lnet/minecraft/world/flag/FeatureFlagSet; enabledFeatures
	a (II)Lnet/minecraft/world/level/chunk/IChunkAccess; getChunk
	a (III)Lnet/minecraft/core/Holder; getUncachedNoiseBiome
	a (IIIIII)Z hasChunksAt
	a (IILnet/minecraft/world/level/chunk/ChunkStatus;)Lnet/minecraft/world/level/chunk/IChunkAccess; getChunk
	a (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/IChunkAccess; getChunk
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Z hasChunksAt
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/ColorResolver;)I getBlockTint
	a (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/core/HolderLookup; holderLookup
	a (Lnet/minecraft/world/level/levelgen/HeightMap$Type;II)I getHeight
	a (Lnet/minecraft/world/level/levelgen/HeightMap$Type;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/core/BlockPosition; getHeightmapPos
	b (II)Z hasChunk
	b (IIII)Z hasChunksAt
	c (II)Lnet/minecraft/world/level/IBlockAccess; getChunkForCollisions
	c (Lnet/minecraft/core/BlockPosition;I)I getMaxLocalRawBrightness
	c (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getDirectSignal
	c (Lnet/minecraft/world/phys/AxisAlignedBB;)Ljava/util/stream/Stream; getBlockStatesIfLoaded
	d (Lnet/minecraft/world/phys/AxisAlignedBB;)Z containsAnyLiquid
	f (II)Z hasChunkAt
	k_ ()Z isClientSide
	m_ ()I getSeaLevel
	o_ ()I getSkyDarken
	q_ ()Lnet/minecraft/world/level/dimension/DimensionManager; dimensionType
	s_ ()Lnet/minecraft/world/level/biome/BiomeManager; getBiomeManager
	u_ ()Lnet/minecraft/core/IRegistryCustom; registryAccess
	v (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/core/Holder; getBiome
	v_ ()I getMinBuildHeight
	w (Lnet/minecraft/core/BlockPosition;)Z isEmptyBlock
	w_ ()I getHeight
	x (Lnet/minecraft/core/BlockPosition;)Z canSeeSkyFromBelowWater
	y (Lnet/minecraft/core/BlockPosition;)F getPathfindingCostFromLightLevels
	z (Lnet/minecraft/core/BlockPosition;)F getLightLevelDependentMagicValue
net/minecraft/world/level/IWorldTime net/minecraft/world/level/LevelTimeAccess
	ag ()J dayTime
	am ()F getMoonBrightness
	an ()I getMoonPhase
	f (F)F getTimeOfDay
net/minecraft/world/level/IWorldWriter net/minecraft/world/level/LevelWriter
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;I)Z setBlock
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;II)Z setBlock
	a (Lnet/minecraft/core/BlockPosition;Z)Z removeBlock
	a (Lnet/minecraft/core/BlockPosition;ZLnet/minecraft/world/entity/Entity;)Z destroyBlock
	a (Lnet/minecraft/core/BlockPosition;ZLnet/minecraft/world/entity/Entity;I)Z destroyBlock
	b (Lnet/minecraft/core/BlockPosition;Z)Z destroyBlock
	b (Lnet/minecraft/world/entity/Entity;)Z addFreshEntity
net/minecraft/world/level/MobSpawner net/minecraft/world/level/CustomSpawner
	a (Lnet/minecraft/server/level/WorldServer;ZZ)I tick
net/minecraft/world/level/MobSpawnerAbstract net/minecraft/world/level/BaseSpawner
	a LOGGER
	b SPAWN_DATA_TAG
	c EVENT_SPAWN
	d spawnDelay
	e spawnPotentials
	f nextSpawnData
	g spin
	h oSpin
	i minSpawnDelay
	j maxSpawnDelay
	k spawnCount
	l displayEntity
	m maxNearbyEntities
	n requiredPlayerRange
	o spawnRange
	a ()D getSpin
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; save
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;)V serverTick
	a (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)V setEntityId
	a (Lnet/minecraft/world/level/World;I)Z onEventTriggered
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V clientTick
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;I)V broadcastEvent
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/MobSpawnerData;)V setNextSpawnData
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/entity/Entity; getOrCreateDisplayEntity
	b ()D getoSpin
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Z isNearPlayer
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/MobSpawnerData; getOrCreateNextSpawnData
	c (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V delay
net/minecraft/world/level/MobSpawnerData net/minecraft/world/level/SpawnData
	a ENTITY_TAG
	b CODEC
	c LIST_CODEC
	d entityToSpawn
	e customSpawnRules
	a ()Lnet/minecraft/nbt/NBTTagCompound; getEntityToSpawn
	b ()Ljava/util/Optional; getCustomSpawnRules
	c ()Lnet/minecraft/nbt/NBTTagCompound; entityToSpawn
	d ()Ljava/util/Optional; customSpawnRules
net/minecraft/world/level/RayTrace net/minecraft/world/level/ClipContext
	a from
	b to
	c block
	d fluid
	e collisionContext
	a ()Lnet/minecraft/world/phys/Vec3D; getTo
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getBlockShape
	a (Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getFluidShape
	b ()Lnet/minecraft/world/phys/Vec3D; getFrom
net/minecraft/world/level/RayTrace$BlockCollisionOption net/minecraft/world/level/ClipContext$Block
	a COLLIDER
	b OUTLINE
	c VISUAL
	d FALLDAMAGE_RESETTING
	e shapeGetter
	f $VALUES
	a ()[Lnet/minecraft/world/level/RayTrace$BlockCollisionOption; $values
net/minecraft/world/level/RayTrace$FluidCollisionOption net/minecraft/world/level/ClipContext$Fluid
	a NONE
	b SOURCE_ONLY
	c ANY
	d WATER
	e canPick
	f $VALUES
	a ()[Lnet/minecraft/world/level/RayTrace$FluidCollisionOption; $values
	a (Lnet/minecraft/world/level/material/Fluid;)Z canPick
net/minecraft/world/level/SpawnerCreature net/minecraft/world/level/NaturalSpawner
	a SPAWN_DISTANCE_CHUNK
	b SPAWN_DISTANCE_BLOCK
	c LOGGER
	d MIN_SPAWN_DISTANCE
	e MAGIC_NUMBER
	f SPAWNING_CATEGORIES
	a (ILjava/lang/Iterable;Lcmt$b;Lnet/minecraft/world/level/LocalMobCapCalculator;)Lcmt$d; createState
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EnumCreatureType;Lnet/minecraft/world/level/StructureManager;)Z isInNetherFortressBounds
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/chunk/IChunkAccess;)Lnet/minecraft/world/level/biome/BiomeBase; getRoughBiome
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;D)Z isValidPositionForMob
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityTypes;)Lnet/minecraft/world/entity/EntityInsentient; getMobForSpawn
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EnumCreatureType;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lcnr$c;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;D)Z isValidSpawnPostitionForType
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/entity/EnumCreatureType;Lcnr$c;Lnet/minecraft/core/BlockPosition;)Z canSpawnMobAt
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/entity/EnumCreatureType;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/Holder;)Lnet/minecraft/util/random/WeightedRandomList; mobsAt
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/entity/EnumCreatureType;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Ljava/util/Optional; getRandomSpawnMobAt
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/chunk/Chunk;Lcmt$d;ZZZ)V spawnForChunk
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/chunk/IChunkAccess;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;D)Z isRightDistanceToPlayerAndSpawnPoint
	a (Lnet/minecraft/world/entity/EntityPositionTypes$Surface;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/EntityTypes;)Z isSpawnPositionOk
	a (Lnet/minecraft/world/entity/EnumCreatureType;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;)V spawnCategoryForPosition
	a (Lnet/minecraft/world/entity/EnumCreatureType;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/chunk/Chunk;Lcmt$c;Lcmt$a;)V spawnCategoryForChunk
	a (Lnet/minecraft/world/entity/EnumCreatureType;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/chunk/IChunkAccess;Lnet/minecraft/core/BlockPosition;Lcmt$c;Lcmt$a;)V spawnCategoryForPosition
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/world/entity/EntityTypes;)Z isValidEmptySpawnBlock
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/world/entity/EntityTypes;II)Lnet/minecraft/core/BlockPosition; getTopNonCollidingPos
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/chunk/Chunk;)Lnet/minecraft/core/BlockPosition; getRandomPosWithin
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/core/Holder;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/util/RandomSource;)V spawnMobsForChunkGeneration
net/minecraft/world/level/SpawnerCreatureProbabilities net/minecraft/world/level/PotentialCalculator
	a charges
	a (Lnet/minecraft/core/BlockPosition;D)V addCharge
	b (Lnet/minecraft/core/BlockPosition;D)D getPotentialEnergyChange
net/minecraft/world/level/VirtualLevelReadable net/minecraft/world/level/LevelSimulatedReader
	a (Lnet/minecraft/core/BlockPosition;Ljava/util/function/Predicate;)Z isStateAtPosition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Ljava/util/Optional; getBlockEntity
	a (Lnet/minecraft/world/level/levelgen/HeightMap$Type;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/core/BlockPosition; getHeightmapPos
	b (Lnet/minecraft/core/BlockPosition;Ljava/util/function/Predicate;)Z isFluidAtPosition
net/minecraft/world/level/VirtualLevelWritable net/minecraft/world/level/LevelSimulatedRW
net/minecraft/world/level/VoxelShapeSpliterator net/minecraft/world/level/BlockCollisions
	a box
	b context
	c cursor
	d pos
	e entityShape
	f collisionGetter
	g onlySuffocatingBlocks
	h cachedBlockGetter
	i cachedBlockGetterPos
	a ()Lnet/minecraft/world/phys/shapes/VoxelShape; computeNext
	a (II)Lnet/minecraft/world/level/IBlockAccess; getChunk
net/minecraft/world/level/World net/minecraft/world/level/Level
	A levelData
	B isClientSide
	C threadSafeRandom
	D dimensionTypeId
	E dimensionTypeRegistration
	F profiler
	G worldBorder
	H biomeManager
	I dimension
	J registryAccess
	K damageSources
	L subTickCount
	a DIRECTIONS
	b pendingBlockEntityTickers
	c tickingBlockEntities
	d thread
	e isDebug
	f skyDarken
	g RESOURCE_KEY_CODEC
	h OVERWORLD
	i NETHER
	j END
	k MAX_LEVEL_SIZE
	l LONG_PARTICLE_CLIP_RANGE
	m SHORT_PARTICLE_CLIP_RANGE
	n MAX_BRIGHTNESS
	o TICKS_PER_DAY
	p MAX_ENTITY_SPAWN_Y
	q MIN_ENTITY_SPAWN_Y
	r blockEntityTickers
	s neighborUpdater
	t randValue
	u addend
	v oRainLevel
	w rainLevel
	x oThunderLevel
	y thunderLevel
	z random
	E ()Lnet/minecraft/world/level/entity/LevelEntityGetter; getEntities
	E (Lnet/minecraft/core/BlockPosition;)Z isInWorldBoundsHorizontal
	F ()Ljava/lang/String; gatherChunkSourceStats
	H ()Lnet/minecraft/world/scores/Scoreboard; getScoreboard
	M ()Z isDay
	N ()Z isNight
	O ()V tickBlockEntities
	P ()V updateSkyBrightness
	Q ()Lnet/minecraft/core/BlockPosition; getSharedSpawnPos
	R ()F getSharedSpawnAngle
	S ()V prepareWeather
	T ()V disconnect
	U ()J getGameTime
	V ()J getDayTime
	W ()Lnet/minecraft/world/level/GameRules; getGameRules
	X ()Z isThundering
	Y ()Z isRaining
	Z ()Lnet/minecraft/resources/ResourceKey; dimensionTypeId
	a (DDDDDDLnet/minecraft/nbt/NBTTagCompound;)V createFireworks
	a (DDDLnet/minecraft/sounds/SoundEffect;Lnet/minecraft/sounds/SoundCategory;FFZ)V playLocalSound
	a (F)F getSunAngle
	a (I)Lnet/minecraft/world/entity/Entity; getEntity
	a (II)Lnet/minecraft/world/level/chunk/IChunkAccess; getChunk
	a (IIII)Lnet/minecraft/core/BlockPosition; getBlockRandomPos
	a (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/IChunkAccess; getChunk
	a (ILnet/minecraft/core/BlockPosition;I)V destroyBlockProgress
	a (J)Z shouldTickBlocksAt
	a (Ljava/lang/String;)Lnet/minecraft/world/level/saveddata/maps/WorldMap; getMapData
	a (Ljava/lang/String;Lnet/minecraft/world/level/saveddata/maps/WorldMap;)V setMapData
	a (Ljava/util/function/Consumer;Lnet/minecraft/world/entity/Entity;)V guardEntityTick
	a (Lnet/minecraft/CrashReport;)Lnet/minecraft/CrashReportSystemDetails; fillReportDetails
	a (Lnet/minecraft/core/BlockPosition;Ljava/util/function/Predicate;)Z isStateAtPosition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Z hasSignal
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/sounds/SoundEffect;Lnet/minecraft/sounds/SoundCategory;FFZ)V playLocalSound
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;)Z loadedAndEntityCanStandOn
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/EnumDirection;)Z loadedAndEntityCanStandOnFace
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;)V updateNeighborsAt
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;II)V blockEvent
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;)V neighborChanged
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/EnumDirection;)V updateNeighborsAtExceptFromFacing
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V addDestroyBlockEffect
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;I)Z setBlock
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;II)Z setBlock
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;)V onBlockStateChange
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;I)V sendBlockUpdated
	a (Lnet/minecraft/core/BlockPosition;Z)Z removeBlock
	a (Lnet/minecraft/core/BlockPosition;ZLnet/minecraft/world/entity/Entity;I)Z destroyBlock
	a (Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;II)V neighborShapeChanged
	a (Lnet/minecraft/core/particles/ParticleParam;DDDDDD)V addParticle
	a (Lnet/minecraft/core/particles/ParticleParam;ZDDDDDD)V addParticle
	a (Lnet/minecraft/network/protocol/Packet;)V sendPacketToServer
	a (Lnet/minecraft/world/entity/Entity;B)V broadcastEntityEvent
	a (Lnet/minecraft/world/entity/Entity;DDDFLcmi$a;)Lnet/minecraft/world/level/Explosion; explode
	a (Lnet/minecraft/world/entity/Entity;DDDFZLcmi$a;)Lnet/minecraft/world/level/Explosion; explode
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/sounds/SoundEffect;Lnet/minecraft/sounds/SoundCategory;FF)V playSound
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/damagesource/DamageSource;)V broadcastDamageEvent
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/level/ExplosionDamageCalculator;DDDFZLcmi$a;)Lnet/minecraft/world/level/Explosion; explode
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/level/ExplosionDamageCalculator;DDDFZLcmi$a;Z)Lnet/minecraft/world/level/Explosion; explode
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/level/ExplosionDamageCalculator;Lnet/minecraft/world/phys/Vec3D;FZLcmi$a;)Lnet/minecraft/world/level/Explosion; explode
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AxisAlignedBB;Ljava/util/function/Predicate;)Ljava/util/List; getEntities
	a (Lnet/minecraft/world/entity/player/EntityHuman;DDDLnet/minecraft/core/Holder;Lnet/minecraft/sounds/SoundCategory;FFJ)V playSeededSound
	a (Lnet/minecraft/world/entity/player/EntityHuman;DDDLnet/minecraft/sounds/SoundEffect;Lnet/minecraft/sounds/SoundCategory;FF)V playSound
	a (Lnet/minecraft/world/entity/player/EntityHuman;DDDLnet/minecraft/sounds/SoundEffect;Lnet/minecraft/sounds/SoundCategory;FFJ)V playSeededSound
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/core/BlockPosition;)Z mayInteract
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/sounds/SoundEffect;Lnet/minecraft/sounds/SoundCategory;FF)V playSound
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Holder;Lnet/minecraft/sounds/SoundCategory;FFJ)V playSeededSound
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/sounds/SoundEffect;Lnet/minecraft/sounds/SoundCategory;FF)V playSound
	a (Lnet/minecraft/world/level/GameRules$GameRuleKey;)Lnet/minecraft/world/level/Explosion$Effect; getDestroyType
	a (Lnet/minecraft/world/level/block/entity/TickingBlockEntity;)V addBlockEntityTicker
	a (Lnet/minecraft/world/level/block/entity/TileEntity;)V setBlockEntity
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/world/phys/AxisAlignedBB;Ljava/util/function/Predicate;)Ljava/util/List; getEntities
	a (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/world/phys/AxisAlignedBB;Ljava/util/function/Predicate;Ljava/util/List;)V getEntities
	a (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/world/phys/AxisAlignedBB;Ljava/util/function/Predicate;Ljava/util/List;I)V getEntities
	a (Lnet/minecraft/world/level/levelgen/HeightMap$Type;II)I getHeight
	a_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; getBlockState
	aa ()Lnet/minecraft/core/Holder; dimensionTypeRegistration
	ab ()Lnet/minecraft/resources/ResourceKey; dimension
	ac ()Lnet/minecraft/util/profiling/GameProfilerFiller; getProfiler
	ad ()Ljava/util/function/Supplier; getProfilerSupplier
	ae ()Z isDebug
	af ()Lnet/minecraft/world/damagesource/DamageSources; damageSources
	b (F)F getThunderLevel
	b (I)Z isOutsideSpawnableHeight
	b (ILnet/minecraft/core/BlockPosition;I)V globalLevelEvent
	b (Lnet/minecraft/core/BlockPosition;Ljava/util/function/Predicate;)Z isFluidAtPosition
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getSignal
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z setBlockAndUpdate
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;)V setBlocksDirty
	b (Lnet/minecraft/core/particles/ParticleParam;DDDDDD)V addAlwaysVisibleParticle
	b (Lnet/minecraft/core/particles/ParticleParam;ZDDDDDD)V addAlwaysVisibleParticle
	b (ZZ)V setSpawnSettings
	b_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	c (F)V setThunderLevel
	c (I)V setSkyFlashTime
	c (II)Lnet/minecraft/world/level/IBlockAccess; getChunkForCollisions
	c (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;)V updateNeighbourForOutputSignal
	c_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/entity/TileEntity; getBlockEntity
	d (F)F getRainLevel
	d (II)Lnet/minecraft/world/level/chunk/Chunk; getChunk
	d_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/DifficultyDamageScaler; getCurrentDifficultyAt
	e (F)V setRainLevel
	h (Lnet/minecraft/world/entity/Entity;)Z shouldTickDeath
	j (Lnet/minecraft/core/BlockPosition;)Z isInWorldBounds
	k (Lnet/minecraft/core/BlockPosition;)Z isInSpawnableBounds
	k_ ()Z isClientSide
	l (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/chunk/Chunk; getChunkAt
	l_ ()Lnet/minecraft/world/level/lighting/LightEngine; getLightEngine
	m (Lnet/minecraft/core/BlockPosition;)Z shouldTickBlocksAt
	m_ ()I getSeaLevel
	n ()Lnet/minecraft/server/MinecraftServer; getServer
	n (Lnet/minecraft/core/BlockPosition;)V removeBlockEntity
	n_ ()Lnet/minecraft/world/level/storage/WorldData; getLevelData
	o (Lnet/minecraft/core/BlockPosition;)Z isLoaded
	o_ ()I getSkyDarken
	p (Lnet/minecraft/core/BlockPosition;)V blockEntityChanged
	p_ ()Lnet/minecraft/world/level/border/WorldBorder; getWorldBorder
	q ()Lnet/minecraft/world/item/crafting/CraftingManager; getRecipeManager
	q (Lnet/minecraft/core/BlockPosition;)I getDirectSignalTo
	q_ ()Lnet/minecraft/world/level/dimension/DimensionManager; dimensionType
	r ()Z noSave
	r (Lnet/minecraft/core/BlockPosition;)Z hasNeighborSignal
	r_ ()Lnet/minecraft/util/RandomSource; getRandom
	s (Lnet/minecraft/core/BlockPosition;)I getBestNeighborSignal
	s_ ()Lnet/minecraft/world/level/biome/BiomeManager; getBiomeManager
	t ()I getFreeMapId
	t (Lnet/minecraft/core/BlockPosition;)Z isRainingAt
	t_ ()J nextSubTickCount
	u_ ()Lnet/minecraft/core/IRegistryCustom; registryAccess
net/minecraft/world/level/WorldAccess net/minecraft/world/level/ServerLevelAccessor
	C ()Lnet/minecraft/server/level/WorldServer; getLevel
	a_ (Lnet/minecraft/world/entity/Entity;)V addFreshEntityWithPassengers
net/minecraft/world/level/WorldSettings net/minecraft/world/level/LevelSettings
	a levelName
	b gameType
	c hardcore
	d difficulty
	e allowCommands
	f gameRules
	g dataConfiguration
	a ()Ljava/lang/String; levelName
	a (Lcom/mojang/serialization/Dynamic;Lnet/minecraft/world/level/WorldDataConfiguration;)Lnet/minecraft/world/level/WorldSettings; parse
	a (Lnet/minecraft/world/EnumDifficulty;)Lnet/minecraft/world/level/WorldSettings; withDifficulty
	a (Lnet/minecraft/world/level/EnumGamemode;)Lnet/minecraft/world/level/WorldSettings; withGameType
	a (Lnet/minecraft/world/level/WorldDataConfiguration;)Lnet/minecraft/world/level/WorldSettings; withDataConfiguration
	b ()Lnet/minecraft/world/level/EnumGamemode; gameType
	c ()Z hardcore
	d ()Lnet/minecraft/world/EnumDifficulty; difficulty
	e ()Z allowCommands
	f ()Lnet/minecraft/world/level/GameRules; gameRules
	g ()Lnet/minecraft/world/level/WorldDataConfiguration; getDataConfiguration
	h ()Lnet/minecraft/world/level/WorldSettings; copy
net/minecraft/world/level/biome/BiomeBase net/minecraft/world/level/biome/Biome
	a DIRECT_CODEC
	b NETWORK_CODEC
	c CODEC
	d LIST_CODEC
	e BIOME_INFO_NOISE
	f TEMPERATURE_NOISE
	g FROZEN_TEMPERATURE_NOISE
	h TEMPERATURE_CACHE_SIZE
	i climateSettings
	j generationSettings
	k mobSettings
	l specialEffects
	m temperatureCache
	a ()I getSkyColor
	a (DD)I getGrassColor
	a (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/biome/BiomeBase$Precipitation; getPrecipitationAt
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z shouldFreeze
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Z)Z shouldFreeze
	b ()Lnet/minecraft/world/level/biome/BiomeSettingsMobs; getMobSettings
	b (Lnet/minecraft/core/BlockPosition;)Z coldEnoughToSnow
	b (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z shouldSnow
	c ()Z hasPrecipitation
	c (Lnet/minecraft/core/BlockPosition;)Z warmEnoughToRain
	d ()Lnet/minecraft/world/level/biome/BiomeSettingsGeneration; getGenerationSettings
	d (Lnet/minecraft/core/BlockPosition;)Z shouldMeltFrozenOceanIcebergSlightly
	e ()I getFogColor
	e (Lnet/minecraft/core/BlockPosition;)F getHeightAdjustedTemperature
	f ()I getFoliageColor
	f (Lnet/minecraft/core/BlockPosition;)F getTemperature
	g ()F getBaseTemperature
	h ()Lnet/minecraft/world/level/biome/BiomeFog; getSpecialEffects
	i ()I getWaterColor
	j ()I getWaterFogColor
	k ()Ljava/util/Optional; getAmbientParticle
	l ()Ljava/util/Optional; getAmbientLoop
	m ()Ljava/util/Optional; getAmbientMood
	n ()Ljava/util/Optional; getAmbientAdditions
	o ()Ljava/util/Optional; getBackgroundMusic
	p ()I getGrassColorFromTexture
	q ()I getFoliageColorFromTexture
net/minecraft/world/level/biome/BiomeBase$ClimateSettings net/minecraft/world/level/biome/Biome$ClimateSettings
	a CODEC
	b hasPrecipitation
	c temperature
	d temperatureModifier
	e downfall
	a ()Z hasPrecipitation
	b ()F temperature
	c ()Lnet/minecraft/world/level/biome/BiomeBase$TemperatureModifier; temperatureModifier
	d ()F downfall
net/minecraft/world/level/biome/BiomeBase$Precipitation net/minecraft/world/level/biome/Biome$Precipitation
	a NONE
	b RAIN
	c SNOW
	d $VALUES
	a ()[Lnet/minecraft/world/level/biome/BiomeBase$Precipitation; $values
net/minecraft/world/level/biome/BiomeBase$TemperatureModifier net/minecraft/world/level/biome/Biome$TemperatureModifier
	a NONE
	b FROZEN
	c CODEC
	d name
	e $VALUES
	a ()Ljava/lang/String; getName
	a (Lnet/minecraft/core/BlockPosition;F)F modifyTemperature
	b ()[Lnet/minecraft/world/level/biome/BiomeBase$TemperatureModifier; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/level/biome/BiomeFog net/minecraft/world/level/biome/BiomeSpecialEffects
	a CODEC
	b fogColor
	c waterColor
	d waterFogColor
	e skyColor
	f foliageColorOverride
	g grassColorOverride
	h grassColorModifier
	i ambientParticleSettings
	j ambientLoopSoundEvent
	k ambientMoodSettings
	l ambientAdditionsSettings
	m backgroundMusic
	a ()I getFogColor
	b ()I getWaterColor
	c ()I getWaterFogColor
	d ()I getSkyColor
	e ()Ljava/util/Optional; getFoliageColorOverride
	f ()Ljava/util/Optional; getGrassColorOverride
	g ()Lnet/minecraft/world/level/biome/BiomeFog$GrassColor; getGrassColorModifier
	h ()Ljava/util/Optional; getAmbientParticleSettings
	i ()Ljava/util/Optional; getAmbientLoopSoundEvent
	j ()Ljava/util/Optional; getAmbientMoodSettings
	k ()Ljava/util/Optional; getAmbientAdditionsSettings
	l ()Ljava/util/Optional; getBackgroundMusic
net/minecraft/world/level/biome/BiomeFog$GrassColor net/minecraft/world/level/biome/BiomeSpecialEffects$GrassColorModifier
	a NONE
	b DARK_FOREST
	c SWAMP
	d CODEC
	e name
	f $VALUES
	a ()Ljava/lang/String; getName
	a (DDI)I modifyColor
	b ()[Lnet/minecraft/world/level/biome/BiomeFog$GrassColor; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/level/biome/BiomeManager$Provider net/minecraft/world/level/biome/BiomeManager$NoiseBiomeSource
net/minecraft/world/level/biome/BiomeParticles net/minecraft/world/level/biome/AmbientParticleSettings
	a CODEC
	b options
	c probability
	a ()Lnet/minecraft/core/particles/ParticleParam; getOptions
	a (Lnet/minecraft/util/RandomSource;)Z canSpawn
net/minecraft/world/level/biome/BiomeSettingsGeneration net/minecraft/world/level/biome/BiomeGenerationSettings
	a EMPTY
	b CODEC
	c LOGGER
	d carvers
	e features
	f flowerFeatures
	g featureSet
	a ()Ljava/util/List; getFlowerFeatures
	a (Lnet/minecraft/world/level/levelgen/WorldGenStage$Features;)Ljava/lang/Iterable; getCarvers
	a (Lnet/minecraft/world/level/levelgen/placement/PlacedFeature;)Z hasFeature
	b ()Ljava/util/List; features
net/minecraft/world/level/biome/BiomeSettingsMobs net/minecraft/world/level/biome/MobSpawnSettings
	a EMPTY_MOB_LIST
	b EMPTY
	c CODEC
	d LOGGER
	e DEFAULT_CREATURE_SPAWN_PROBABILITY
	f creatureGenerationProbability
	g spawners
	h mobSpawnCosts
	a ()F getCreatureProbability
	a (Lnet/minecraft/world/entity/EntityTypes;)Lcnr$b; getMobSpawnCost
	a (Lnet/minecraft/world/entity/EnumCreatureType;)Lnet/minecraft/util/random/WeightedRandomList; getMobs
net/minecraft/world/level/biome/CaveSound net/minecraft/world/level/biome/AmbientAdditionsSettings
	a CODEC
	b soundEvent
	c tickChance
	a ()Lnet/minecraft/core/Holder; getSoundEvent
	b ()D getTickChance
net/minecraft/world/level/biome/CaveSoundSettings net/minecraft/world/level/biome/AmbientMoodSettings
	a CODEC
	b LEGACY_CAVE_SETTINGS
	c soundEvent
	d tickDelay
	e blockSearchExtent
	f soundPositionOffset
	a ()Lnet/minecraft/core/Holder; getSoundEvent
	b ()I getTickDelay
	c ()I getBlockSearchExtent
	d ()D getSoundPositionOffset
net/minecraft/world/level/biome/WorldChunkManager net/minecraft/world/level/biome/BiomeSource
	a CODEC
	b possibleBiomes
	a ()Lcom/mojang/serialization/Codec; codec
	a (IIIIILjava/util/function/Predicate;Lnet/minecraft/util/RandomSource;ZLnet/minecraft/world/level/biome/Climate$Sampler;)Lcom/mojang/datafixers/util/Pair; findBiomeHorizontal
	a (IIIILjava/util/function/Predicate;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/biome/Climate$Sampler;)Lcom/mojang/datafixers/util/Pair; findBiomeHorizontal
	a (IIIILnet/minecraft/world/level/biome/Climate$Sampler;)Ljava/util/Set; getBiomesWithin
	a (Ljava/util/List;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/biome/Climate$Sampler;)V addDebugInfo
	a (Lnet/minecraft/core/BlockPosition;IIILjava/util/function/Predicate;Lnet/minecraft/world/level/biome/Climate$Sampler;Lnet/minecraft/world/level/IWorldReader;)Lcom/mojang/datafixers/util/Pair; findClosestBiome3d
	b ()Ljava/util/stream/Stream; collectPossibleBiomes
	c ()Ljava/util/Set; possibleBiomes
net/minecraft/world/level/biome/WorldChunkManagerCheckerBoard net/minecraft/world/level/biome/CheckerboardColumnBiomeSource
	b CODEC
	c allowedBiomes
	d bitShift
	e size
	a ()Lcom/mojang/serialization/Codec; codec
	b ()Ljava/util/stream/Stream; collectPossibleBiomes
net/minecraft/world/level/biome/WorldChunkManagerHell net/minecraft/world/level/biome/FixedBiomeSource
	b CODEC
	c biome
	a ()Lcom/mojang/serialization/Codec; codec
	a (IIIIILjava/util/function/Predicate;Lnet/minecraft/util/RandomSource;ZLnet/minecraft/world/level/biome/Climate$Sampler;)Lcom/mojang/datafixers/util/Pair; findBiomeHorizontal
	a (IIIILnet/minecraft/world/level/biome/Climate$Sampler;)Ljava/util/Set; getBiomesWithin
	a (Lnet/minecraft/core/BlockPosition;IIILjava/util/function/Predicate;Lnet/minecraft/world/level/biome/Climate$Sampler;Lnet/minecraft/world/level/IWorldReader;)Lcom/mojang/datafixers/util/Pair; findClosestBiome3d
	b ()Ljava/util/stream/Stream; collectPossibleBiomes
net/minecraft/world/level/biome/WorldChunkManagerMultiNoise net/minecraft/world/level/biome/MultiNoiseBiomeSource
	b DIRECT_CODEC
	c CODEC
	d ENTRY_CODEC
	e PRESET_CODEC
	f parameters
	a ()Lcom/mojang/serialization/Codec; codec
	a (Lcno$c;)Lnet/minecraft/world/level/biome/WorldChunkManagerMultiNoise; createFromList
	a (Lcno$h;)Lnet/minecraft/core/Holder; getNoiseBiome
	a (Ljava/util/List;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/biome/Climate$Sampler;)V addDebugInfo
	a (Lnet/minecraft/core/Holder;)Lnet/minecraft/world/level/biome/WorldChunkManagerMultiNoise; createFromPreset
	a (Lnet/minecraft/resources/ResourceKey;)Z stable
	b ()Ljava/util/stream/Stream; collectPossibleBiomes
	d ()Lcno$c; parameters
net/minecraft/world/level/biome/WorldChunkManagerTheEnd net/minecraft/world/level/biome/TheEndBiomeSource
	b CODEC
	c end
	d highlands
	e midlands
	f islands
	g barrens
	a ()Lcom/mojang/serialization/Codec; codec
	a (Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/WorldChunkManagerTheEnd; create
	b ()Ljava/util/stream/Stream; collectPossibleBiomes
net/minecraft/world/level/block/BlockAir net/minecraft/world/level/block/AirBlock
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
net/minecraft/world/level/block/BlockAnvil net/minecraft/world/level/block/AnvilBlock
	a FACING
	b BASE
	c X_LEG1
	d X_LEG2
	e X_TOP
	f Z_LEG1
	g Z_LEG2
	h Z_TOP
	i X_AXIS_AABB
	j Z_AXIS_AABB
	k CONTAINER_TITLE
	l FALL_DAMAGE_PER_DISTANCE
	m FALL_DAMAGE_MAX
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; getFallDamageSource
	a (Lnet/minecraft/world/entity/item/EntityFallingBlock;)V falling
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/item/EntityFallingBlock;)V onBrokenAfterFall
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/item/EntityFallingBlock;)V onLand
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/ITileInventory; getMenuProvider
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)I getDustColor
	e (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/state/IBlockData; damage
net/minecraft/world/level/block/BlockAttachable net/minecraft/world/level/block/FaceAttachedHorizontalDirectionalBlock
	J FACE
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	b (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Z canAttach
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/core/EnumDirection; getConnectedDirection
net/minecraft/world/level/block/BlockBamboo net/minecraft/world/level/block/BambooStalkBlock
	a SMALL_LEAVES_AABB_OFFSET
	b LARGE_LEAVES_AABB_OFFSET
	c COLLISION_AABB_OFFSET
	d SMALL_SHAPE
	e LARGE_SHAPE
	f COLLISION_SHAPE
	g AGE
	h LEAVES
	i STAGE
	j MAX_HEIGHT
	k STAGE_GROWING
	l STAGE_DONE_GROWING
	m AGE_THIN_BAMBOO
	n AGE_THICK_BAMBOO
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V performBonemeal
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)I getHeightAboveUpToMax
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)F getDestroyProgress
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;I)V growBamboo
	a_ (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z isCollisionShapeFullBlock
	b (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)I getHeightBelowUpToMax
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z propagatesSkylightDown
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getCollisionShape
	e_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isRandomlyTicking
net/minecraft/world/level/block/BlockBambooSapling net/minecraft/world/level/block/BambooSaplingBlock
	a SAPLING_AABB_OFFSET
	b SAPLING_SHAPE
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V performBonemeal
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/item/ItemStack; getCloneItemStack
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V growBamboo
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)F getDestroyProgress
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
net/minecraft/world/level/block/BlockBanner net/minecraft/world/level/block/BannerBlock
	a ROTATION
	b BY_COLOR
	c SHAPE
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/EnumColor;)Lnet/minecraft/world/level/block/Block; byColor
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
net/minecraft/world/level/block/BlockBannerAbstract net/minecraft/world/level/block/AbstractBannerBlock
	a color
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/item/ItemStack; getCloneItemStack
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;)V setPlacedBy
	ao_ ()Z isPossibleToRespawnInThis
	b ()Lnet/minecraft/world/item/EnumColor; getColor
net/minecraft/world/level/block/BlockBannerWall net/minecraft/world/level/block/WallBannerBlock
	a FACING
	b SHAPES
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	h ()Ljava/lang/String; getDescriptionId
net/minecraft/world/level/block/BlockBarrel net/minecraft/world/level/block/BarrelBlock
	a FACING
	b OPEN
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;)V setPlacedBy
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onRemove
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
	d_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z hasAnalogOutputSignal
net/minecraft/world/level/block/BlockBarrier net/minecraft/world/level/block/BarrierBlock
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)F getShadeBrightness
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z propagatesSkylightDown
net/minecraft/world/level/block/BlockBeacon net/minecraft/world/level/block/BeaconBlock
	a ()Lnet/minecraft/world/item/EnumColor; getColor
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;)V setPlacedBy
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; getTicker
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
net/minecraft/world/level/block/BlockBed net/minecraft/world/level/block/BedBlock
	a PART
	b OCCUPIED
	c HEIGHT
	d BASE
	e LEG_NORTH_WEST
	f LEG_SOUTH_WEST
	g LEG_NORTH_EAST
	h LEG_SOUTH_EAST
	i NORTH_SHAPE
	j SOUTH_SHAPE
	k WEST_SHAPE
	l EAST_SHAPE
	m LEG_WIDTH
	n color
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/core/EnumDirection;)[[I bedAboveStandUpOffsets
	a (Lnet/minecraft/core/EnumDirection;Lnet/minecraft/core/EnumDirection;)[[I bedStandUpOffsets
	a (Lnet/minecraft/world/entity/Entity;)V bounceUp
	a (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/ICollisionAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;F)Ljava/util/Optional; findStandUpPosition
	a (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/ICollisionAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/core/EnumDirection;)Ljava/util/Optional; findBunkBedStandUpPosition
	a (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/ICollisionAccess;Lnet/minecraft/core/BlockPosition;[[IZ)Ljava/util/Optional; findStandUpPositionAtOffset
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/core/EnumDirection; getBedOrientation
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/world/entity/Entity;)V updateEntityAfterFallOn
	a (Lnet/minecraft/world/level/World;)Z canSetSpawn
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Z kickVillagerOutOfBed
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;)V setPlacedBy
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/player/EntityHuman;)V playerWillDestroy
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;F)V fallOn
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;)J getSeed
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/properties/BlockPropertyBedPart;Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/core/EnumDirection; getNeighbourDirection
	b ()Lnet/minecraft/world/item/EnumColor; getColor
	b (Lnet/minecraft/core/EnumDirection;Lnet/minecraft/core/EnumDirection;)[[I bedSurroundStandUpOffsets
	b (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z isBunkBed
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
	d (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/EnumPistonReaction; getPistonPushReaction
	g (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/core/EnumDirection; getConnectedDirection
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/DoubleBlockFinder$BlockType; getBlockType
net/minecraft/world/level/block/BlockBeehive net/minecraft/world/level/block/BeehiveBlock
	a FACING
	b HONEY_LEVEL
	c MAX_HONEY_LEVELS
	d SHEARED_HONEYCOMB_COUNT
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/World;DDDDD)V spawnFluidParticle
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V dropHoneycomb
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V trySpawnDripParticles
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/player/EntityHuman;)V playerWillDestroy
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShape;D)V spawnParticle
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntity;Lnet/minecraft/world/item/ItemStack;)V playerDestroy
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;)V resetHoneyLevel
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/block/entity/TileEntityBeehive$ReleaseStatus;)V releaseBeesAndResetHoneyLevel
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; getTicker
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/storage/loot/LootTableInfo$Builder;)Ljava/util/List; getDrops
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V angerNearbyBees
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
	c (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Z hiveContainsBees
	d_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z hasAnalogOutputSignal
net/minecraft/world/level/block/BlockBeetroot net/minecraft/world/level/block/BeetrootBlock
	a MAX_AGE
	b AGE
	e SHAPE_BY_AGE
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/level/World;)I getBonemealAgeIncrease
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	b ()Lnet/minecraft/world/level/block/state/properties/BlockStateInteger; getAgeProperty
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	c ()I getMaxAge
	d ()Lnet/minecraft/world/level/IMaterial; getBaseSeedId
net/minecraft/world/level/block/BlockBell net/minecraft/world/level/block/BellBlock
	E TO_SOUTH
	F CEILING_SHAPE
	a FACING
	b ATTACHMENT
	c POWERED
	d EVENT_BELL_RING
	e NORTH_SOUTH_FLOOR_SHAPE
	f EAST_WEST_FLOOR_SHAPE
	g BELL_TOP_SHAPE
	h BELL_BOTTOM_SHAPE
	i BELL_SHAPE
	j NORTH_SOUTH_BETWEEN
	k EAST_WEST_BETWEEN
	l TO_WEST
	m TO_EAST
	n TO_NORTH
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Z attemptToRing
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Z attemptToRing
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; getTicker
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/phys/MovingObjectPositionBlock;Lnet/minecraft/world/entity/player/EntityHuman;Z)Z onHit
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/phys/MovingObjectPositionBlock;Lnet/minecraft/world/entity/projectile/IProjectile;)V onProjectileHit
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;D)Z isProperHit
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;Z)V neighborChanged
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getCollisionShape
	d (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/EnumPistonReaction; getPistonPushReaction
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/phys/shapes/VoxelShape; getVoxelShape
	n (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/core/EnumDirection; getConnectedDirection
net/minecraft/world/level/block/BlockBlastFurnace net/minecraft/world/level/block/BlastFurnaceBlock
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;)V openContainer
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; getTicker
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
net/minecraft/world/level/block/BlockBrewingStand net/minecraft/world/level/block/BrewingStandBlock
	a HAS_BOTTLE
	b SHAPE
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;)V setPlacedBy
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; getTicker
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onRemove
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
	d_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z hasAnalogOutputSignal
net/minecraft/world/level/block/BlockBubbleColumn net/minecraft/world/level/block/BubbleColumnBlock
	a DRAG_DOWN
	b CHECK_PERIOD
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;)V updateColumn
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;)V entityInside
	an_ ()Ljava/util/Optional; getPickupSound
	b (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V updateColumn
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
	c (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/item/ItemStack; pickupBlock
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Z canExistIn
	n (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/state/IBlockData; getColumnState
net/minecraft/world/level/block/BlockButtonAbstract net/minecraft/world/level/block/ButtonBlock
	E PRESSED_FLOOR_AABB_Z
	F PRESSED_NORTH_AABB
	G PRESSED_SOUTH_AABB
	H PRESSED_WEST_AABB
	I PRESSED_EAST_AABB
	K PRESSED_DEPTH
	L UNPRESSED_DEPTH
	M type
	N ticksToStayPressed
	O arrowsCanPress
	a POWERED
	b HALF_AABB_HEIGHT
	c HALF_AABB_WIDTH
	d CEILING_AABB_X
	e CEILING_AABB_Z
	f FLOOR_AABB_X
	g FLOOR_AABB_Z
	h NORTH_AABB
	i SOUTH_AABB
	j WEST_AABB
	k EAST_AABB
	l PRESSED_CEILING_AABB_X
	m PRESSED_CEILING_AABB_Z
	n PRESSED_FLOOR_AABB_X
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Z)V playSound
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;)V entityInside
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onRemove
	a (Z)Lnet/minecraft/sounds/SoundEffect; getSound
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getDirectSignal
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V press
	e (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V checkPressed
	f (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V updateNeighbours
	f_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isSignalSource
net/minecraft/world/level/block/BlockCactus net/minecraft/world/level/block/CactusBlock
	a AGE
	b MAX_AGE
	c AABB_OFFSET
	d COLLISION_SHAPE
	e OUTLINE_SHAPE
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;)V entityInside
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getCollisionShape
net/minecraft/world/level/block/BlockCake net/minecraft/world/level/block/CakeBlock
	a MAX_BITES
	b BITES
	c FULL_CAKE_SIGNAL
	d AABB_OFFSET
	e AABB_SIZE_PER_BITE
	f SHAPE_BY_BITE
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/player/EntityHuman;)Lnet/minecraft/world/EnumInteractionResult; eat
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	b (I)I getOutputSignal
	d_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z hasAnalogOutputSignal
net/minecraft/world/level/block/BlockCampfire net/minecraft/world/level/block/CampfireBlock
	a SHAPE
	b LIT
	c SIGNAL_FIRE
	d WATERLOGGED
	e FACING
	f VIRTUAL_FENCE_POST
	g SMOKE_DISTANCE
	h spawnParticles
	i fireDamage
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V dowse
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/Fluid;)Z placeLiquid
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Z isSmokeyPos
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;ZZ)V makeParticles
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; getTicker
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/phys/MovingObjectPositionBlock;Lnet/minecraft/world/entity/projectile/IProjectile;)V onProjectileHit
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;)V entityInside
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onRemove
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	g (Lnet/minecraft/world/level/block/state/IBlockData;)Z isLitCampfire
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Z canLight
	n (Lnet/minecraft/world/level/block/state/IBlockData;)Z isSmokeSource
net/minecraft/world/level/block/BlockCarpet net/minecraft/world/level/block/WoolCarpetBlock
	b color
	b ()Lnet/minecraft/world/item/EnumColor; getColor
net/minecraft/world/level/block/BlockCarrots net/minecraft/world/level/block/CarrotBlock
	a SHAPE_BY_AGE
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	d ()Lnet/minecraft/world/level/IMaterial; getBaseSeedId
net/minecraft/world/level/block/BlockCartographyTable net/minecraft/world/level/block/CartographyTableBlock
	a CONTAINER_TITLE
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/ITileInventory; getMenuProvider
net/minecraft/world/level/block/BlockCauldron net/minecraft/world/level/block/CauldronBlock
	c RAIN_FILL_CHANCE
	d POWDER_SNOW_FILL_CHANCE
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/biome/BiomeBase$Precipitation;)Z shouldHandlePrecipitation
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/biome/BiomeBase$Precipitation;)V handlePrecipitation
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/material/FluidType;)V receiveStalactiteDrip
	a (Lnet/minecraft/world/level/material/FluidType;)Z canReceiveStalactiteDrip
	c (Lnet/minecraft/world/level/block/state/IBlockData;)Z isFull
net/minecraft/world/level/block/BlockChain net/minecraft/world/level/block/ChainBlock
	a WATERLOGGED
	b AABB_MIN
	c AABB_MAX
	d Y_AXIS_AABB
	e Z_AXIS_AABB
	f X_AXIS_AABB
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
net/minecraft/world/level/block/BlockChest net/minecraft/world/level/block/ChestBlock
	b FACING
	c TYPE
	d WATERLOGGED
	e EVENT_SET_OPEN_COUNT
	f AABB_OFFSET
	g AABB_HEIGHT
	h NORTH_AABB
	i SOUTH_AABB
	j WEST_AABB
	k EAST_AABB
	l AABB
	m CHEST_COMBINER
	n MENU_PROVIDER_COMBINER
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/item/context/BlockActionContext;Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/core/EnumDirection; candidatePartnerFacing
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)Z isChestBlockedAt
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z isBlockedChestByBlock
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;)V setPlacedBy
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; getTicker
	a (Lnet/minecraft/world/level/block/BlockChest;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Z)Lnet/minecraft/world/IInventory; getContainer
	a (Lnet/minecraft/world/level/block/entity/LidBlockEntity;)Lnet/minecraft/world/level/block/DoubleBlockFinder$Combiner; opennessCombiner
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onRemove
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Z)Lnet/minecraft/world/level/block/DoubleBlockFinder$Result; combine
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	b (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)Z isCatSittingOnChest
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/ITileInventory; getMenuProvider
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
	c ()Lnet/minecraft/stats/Statistic; getOpenChestStat
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	d ()Lnet/minecraft/world/level/block/entity/TileEntityTypes; blockEntityType
	d_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z hasAnalogOutputSignal
	g (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/DoubleBlockFinder$BlockType; getBlockType
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/core/EnumDirection; getConnectedDirection
net/minecraft/world/level/block/BlockChestAbstract net/minecraft/world/level/block/AbstractChestBlock
	a blockEntityType
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Z)Lnet/minecraft/world/level/block/DoubleBlockFinder$Result; combine
net/minecraft/world/level/block/BlockChestTrapped net/minecraft/world/level/block/TrappedChestBlock
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getSignal
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getDirectSignal
	c ()Lnet/minecraft/stats/Statistic; getOpenChestStat
	f_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isSignalSource
net/minecraft/world/level/block/BlockChorusFlower net/minecraft/world/level/block/ChorusFlowerBlock
	a DEAD_AGE
	b AGE
	c plant
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;I)V generatePlant
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;II)V growTreeRecursive
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V placeDeadFlower
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;I)V placeGrownFlower
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/phys/MovingObjectPositionBlock;Lnet/minecraft/world/entity/projectile/IProjectile;)V onProjectileHit
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	b (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Z allNeighborsEmpty
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	e_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isRandomlyTicking
net/minecraft/world/level/block/BlockChorusFruit net/minecraft/world/level/block/ChorusPlantBlock
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
net/minecraft/world/level/block/BlockCobbleWall net/minecraft/world/level/block/WallBlock
	E POST_TEST
	F NORTH_TEST
	G SOUTH_TEST
	H WEST_TEST
	I EAST_TEST
	a UP
	b EAST_WALL
	c NORTH_WALL
	d SOUTH_WALL
	e WEST_WALL
	f WATERLOGGED
	g shapeByIndex
	h collisionShapeByIndex
	i WALL_WIDTH
	j WALL_HEIGHT
	k POST_WIDTH
	l POST_COVER_WIDTH
	m WALL_COVER_START
	n WALL_COVER_END
	a (FFFFFF)Ljava/util/Map; makeShapes
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/world/level/block/state/IBlockData; sideUpdate
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/state/IBlockData; topUpdate
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;ZZZZ)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/phys/shapes/VoxelShape;)Z shouldRaisePost
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/properties/IBlockState;)Z isConnected
	a (Lnet/minecraft/world/level/block/state/IBlockData;ZLnet/minecraft/core/EnumDirection;)Z connectsTo
	a (Lnet/minecraft/world/level/block/state/IBlockData;ZZZZLnet/minecraft/world/phys/shapes/VoxelShape;)Lnet/minecraft/world/level/block/state/IBlockData; updateSides
	a (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/level/block/state/properties/BlockPropertyWallHeight;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)Lnet/minecraft/world/phys/shapes/VoxelShape; applyWallShape
	a (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)Z isCovered
	a (ZLnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)Lnet/minecraft/world/level/block/state/properties/BlockPropertyWallHeight; makeWallState
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z propagatesSkylightDown
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getCollisionShape
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
net/minecraft/world/level/block/BlockCocoa net/minecraft/world/level/block/CocoaBlock
	E SOUTH_AABB
	a MAX_AGE
	b AGE
	c AGE_0_WIDTH
	d AGE_0_HEIGHT
	e AGE_0_HALFWIDTH
	f AGE_1_WIDTH
	g AGE_1_HEIGHT
	h AGE_1_HALFWIDTH
	i AGE_2_WIDTH
	j AGE_2_HEIGHT
	k AGE_2_HALFWIDTH
	l EAST_AABB
	m WEST_AABB
	n NORTH_AABB
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V performBonemeal
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	e_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isRandomlyTicking
net/minecraft/world/level/block/BlockCommand net/minecraft/world/level/block/CommandBlock
	a FACING
	b CONDITIONAL
	c LOGGER
	d automatic
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)V executeChain
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;)V setPlacedBy
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/CommandBlockListenerAbstract;Z)V execute
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
	d_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z hasAnalogOutputSignal
net/minecraft/world/level/block/BlockComposter net/minecraft/world/level/block/ComposterBlock
	a READY
	b MIN_LEVEL
	c MAX_LEVEL
	d LEVEL
	e COMPOSTABLES
	f AABB_SIDE_THICKNESS
	g OUTER_SHAPE
	h SHAPES
	a (FLnet/minecraft/world/level/IMaterial;)V add
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; insertItem
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; empty
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/level/block/state/IBlockData; addItem
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; extractProduce
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Z)V handleFill
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/IWorldInventory; getContainer
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getInteractionShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	b ()V bootStrap
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getCollisionShape
	d_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z hasAnalogOutputSignal
net/minecraft/world/level/block/BlockComposter$ContainerEmpty net/minecraft/world/level/block/ComposterBlock$EmptyContainer
	a (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/EnumDirection;)Z canPlaceItemThroughFace
	a (Lnet/minecraft/core/EnumDirection;)[I getSlotsForFace
	b (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/EnumDirection;)Z canTakeItemThroughFace
net/minecraft/world/level/block/BlockComposter$ContainerInput net/minecraft/world/level/block/ComposterBlock$InputContainer
	c state
	d level
	e pos
	f changed
	a (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/EnumDirection;)Z canPlaceItemThroughFace
	a (Lnet/minecraft/core/EnumDirection;)[I getSlotsForFace
	ab_ ()I getMaxStackSize
	b (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/EnumDirection;)Z canTakeItemThroughFace
	e ()V setChanged
net/minecraft/world/level/block/BlockComposter$ContainerOutput net/minecraft/world/level/block/ComposterBlock$OutputContainer
	c state
	d level
	e pos
	f changed
	a (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/EnumDirection;)Z canPlaceItemThroughFace
	a (Lnet/minecraft/core/EnumDirection;)[I getSlotsForFace
	ab_ ()I getMaxStackSize
	b (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/EnumDirection;)Z canTakeItemThroughFace
	e ()V setChanged
net/minecraft/world/level/block/BlockConcretePowder net/minecraft/world/level/block/ConcretePowderBlock
	a concrete
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z touchesLiquid
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/item/EntityFallingBlock;)V onLand
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	b (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z shouldSolidify
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)I getDustColor
	n (Lnet/minecraft/world/level/block/state/IBlockData;)Z canSolidify
net/minecraft/world/level/block/BlockConduit net/minecraft/world/level/block/ConduitBlock
	a WATERLOGGED
	b SHAPE
	c SIZE
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;)V setPlacedBy
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; getTicker
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
net/minecraft/world/level/block/BlockCoral net/minecraft/world/level/block/CoralBlock
	a deadBlock
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z scanForWater
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
net/minecraft/world/level/block/BlockCoralBase net/minecraft/world/level/block/BaseCoralPlantTypeBlock
	a AABB
	c WATERLOGGED
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)V tryScheduleDieTick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	e (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z scanForWater
net/minecraft/world/level/block/BlockCoralDead net/minecraft/world/level/block/BaseCoralPlantBlock
	a AABB_OFFSET
	b SHAPE
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
net/minecraft/world/level/block/BlockCoralFan net/minecraft/world/level/block/CoralFanBlock
	a deadBlock
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
net/minecraft/world/level/block/BlockCoralFanAbstract net/minecraft/world/level/block/BaseCoralFanBlock
	a AABB
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
net/minecraft/world/level/block/BlockCoralFanWall net/minecraft/world/level/block/CoralWallFanBlock
	b deadBlock
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
net/minecraft/world/level/block/BlockCoralFanWallAbstract net/minecraft/world/level/block/BaseCoralWallFanBlock
	a FACING
	b SHAPES
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
net/minecraft/world/level/block/BlockCoralPlant net/minecraft/world/level/block/CoralPlantBlock
	a AABB_OFFSET
	b SHAPE
	d deadBlock
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
net/minecraft/world/level/block/BlockCrops net/minecraft/world/level/block/CropBlock
	a SHAPE_BY_AGE
	c MAX_AGE
	d AGE
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V performBonemeal
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/item/ItemStack; getCloneItemStack
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/world/level/World;)I getBonemealAgeIncrease
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V growCrops
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)F getGrowthSpeed
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;)V entityInside
	b ()Lnet/minecraft/world/level/block/state/properties/BlockStateInteger; getAgeProperty
	b (I)Lnet/minecraft/world/level/block/state/IBlockData; getStateForAge
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	c ()I getMaxAge
	d ()Lnet/minecraft/world/level/IMaterial; getBaseSeedId
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z mayPlaceOn
	e_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isRandomlyTicking
	g (Lnet/minecraft/world/level/block/state/IBlockData;)I getAge
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Z isMaxAge
net/minecraft/world/level/block/BlockCryingObsidian net/minecraft/world/level/block/CryingObsidianBlock
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
net/minecraft/world/level/block/BlockDaylightDetector net/minecraft/world/level/block/DaylightDetectorBlock
	a POWER
	b INVERTED
	c SHAPE
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityLightDetector;)V tickEntity
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; getTicker
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V updateSignalStrength
	f_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isSignalSource
	g_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z useShapeForLightOcclusion
net/minecraft/world/level/block/BlockDeadBush net/minecraft/world/level/block/DeadBushBlock
	a AABB_OFFSET
	b SHAPE
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z mayPlaceOn
net/minecraft/world/level/block/BlockDiodeAbstract net/minecraft/world/level/block/DiodeBlock
	b SHAPE
	c POWERED
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isLocked
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z shouldTurnOn
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;)V setPlacedBy
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onRemove
	b (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)I getOutputSignal
	b (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getAlternateSignalAt
	b (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)I getAlternateSignal
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)I getInputSignal
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getDirectSignal
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
	c (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z shouldPrioritize
	c (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V checkTickOnNeighbor
	d (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V updateNeighborsInFront
	f_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isSignalSource
	g (Lnet/minecraft/world/level/block/state/IBlockData;)I getDelay
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Z isAlternateInput
	n (Lnet/minecraft/world/level/block/state/IBlockData;)Z isDiode
net/minecraft/world/level/block/BlockDirectional net/minecraft/world/level/block/DirectionalBlock
	a FACING
net/minecraft/world/level/block/BlockDirtSnow net/minecraft/world/level/block/SnowyDirtBlock
	a SNOWY
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Z isSnowySetting
net/minecraft/world/level/block/BlockDirtSnowSpreadable net/minecraft/world/level/block/SpreadingSnowyDirtBlock
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canBeGrass
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canPropagate
net/minecraft/world/level/block/BlockDispenser net/minecraft/world/level/block/DispenserBlock
	a FACING
	b TRIGGERED
	c DISPENSER_REGISTRY
	d TRIGGER_DURATION
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/core/ISourceBlock;)Lnet/minecraft/core/IPosition; getDispensePosition
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;)V dispenseFrom
	a (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/core/dispenser/IDispenseBehavior; getDispenseMethod
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/IMaterial;Lnet/minecraft/core/dispenser/IDispenseBehavior;)V registerBehavior
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;)V setPlacedBy
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onRemove
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
	d_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z hasAnalogOutputSignal
net/minecraft/world/level/block/BlockDoor net/minecraft/world/level/block/DoorBlock
	a FACING
	b OPEN
	c HINGE
	d POWERED
	e HALF
	f AABB_DOOR_THICKNESS
	g SOUTH_AABB
	h NORTH_AABB
	i WEST_AABB
	j EAST_AABB
	k type
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Z)V playSound
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Z)V setOpen
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Z isWoodenDoor
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;)V setPlacedBy
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/player/EntityHuman;)V playerWillDestroy
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;)J getSeed
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	b (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/properties/BlockPropertyDoorHinge; getHinge
	d (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/EnumPistonReaction; getPistonPushReaction
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Z isOpen
	n (Lnet/minecraft/world/level/block/state/IBlockData;)Z isWoodenDoor
net/minecraft/world/level/block/BlockDragonEgg net/minecraft/world/level/block/DragonEggBlock
	a SHAPE
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;)V attack
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	b ()I getDelayAfterPlace
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V teleport
net/minecraft/world/level/block/BlockDropper net/minecraft/world/level/block/DropperBlock
	c DISPENSE_BEHAVIOUR
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;)V dispenseFrom
	a (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/core/dispenser/IDispenseBehavior; getDispenseMethod
net/minecraft/world/level/block/BlockEnchantmentTable net/minecraft/world/level/block/EnchantmentTableBlock
	a SHAPE
	b BOOKSHELF_OFFSETS
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Z isValidBookShelf
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;)V setPlacedBy
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; getTicker
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/ITileInventory; getMenuProvider
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
	g_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z useShapeForLightOcclusion
net/minecraft/world/level/block/BlockEndGateway net/minecraft/world/level/block/EndGatewayBlock
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/item/ItemStack; getCloneItemStack
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; getTicker
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/FluidType;)Z canBeReplaced
net/minecraft/world/level/block/BlockEndRod net/minecraft/world/level/block/EndRodBlock
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
	d (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/EnumPistonReaction; getPistonPushReaction
net/minecraft/world/level/block/BlockEnderChest net/minecraft/world/level/block/EnderChestBlock
	b FACING
	c WATERLOGGED
	d SHAPE
	e CONTAINER_TITLE
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; getTicker
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Z)Lnet/minecraft/world/level/block/DoubleBlockFinder$Result; combine
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
net/minecraft/world/level/block/BlockEnderPortal net/minecraft/world/level/block/EndPortalBlock
	a SHAPE
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/item/ItemStack; getCloneItemStack
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;)V entityInside
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/FluidType;)Z canBeReplaced
net/minecraft/world/level/block/BlockEnderPortalFrame net/minecraft/world/level/block/EndPortalFrameBlock
	a FACING
	b HAS_EYE
	c BASE_SHAPE
	d EYE_SHAPE
	e FULL_SHAPE
	f portalShape
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	b ()Lnet/minecraft/world/level/block/state/pattern/ShapeDetector; getOrCreatePortalShape
	d_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z hasAnalogOutputSignal
	g_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z useShapeForLightOcclusion
net/minecraft/world/level/block/BlockFacingHorizontal net/minecraft/world/level/block/HorizontalDirectionalBlock
	aD FACING
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
net/minecraft/world/level/block/BlockFalling net/minecraft/world/level/block/FallingBlock
	a (Lnet/minecraft/world/entity/item/EntityFallingBlock;)V falling
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
	b ()I getDelayAfterPlace
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)I getDustColor
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Z isFree
net/minecraft/world/level/block/BlockFence net/minecraft/world/level/block/FenceBlock
	i occlusionByIndex
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;ZLnet/minecraft/core/EnumDirection;)Z connectsTo
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getVisualShape
	f (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getOcclusionShape
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Z isSameFence
net/minecraft/world/level/block/BlockFenceGate net/minecraft/world/level/block/FenceGateBlock
	E X_OCCLUSION_SHAPE_LOW
	F type
	a OPEN
	b POWERED
	c IN_WALL
	d Z_SHAPE
	e X_SHAPE
	f Z_SHAPE_LOW
	g X_SHAPE_LOW
	h Z_COLLISION_SHAPE
	i X_COLLISION_SHAPE
	j Z_SUPPORT_SHAPE
	k X_SUPPORT_SHAPE
	l Z_OCCLUSION_SHAPE
	m X_OCCLUSION_SHAPE
	n Z_OCCLUSION_SHAPE_LOW
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;)Z connectsToDirection
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;Z)V neighborChanged
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getBlockSupportShape
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getCollisionShape
	f (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getOcclusionShape
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Z isWall
net/minecraft/world/level/block/BlockFire net/minecraft/world/level/block/FireBlock
	E SOUTH_AABB
	F shapesCache
	G IGNITE_INSTANT
	H IGNITE_EASY
	I IGNITE_MEDIUM
	J IGNITE_HARD
	K BURN_INSTANT
	L BURN_EASY
	M BURN_MEDIUM
	N BURN_HARD
	O igniteOdds
	P burnOdds
	c MAX_AGE
	d AGE
	e NORTH
	f EAST
	g SOUTH
	h WEST
	i UP
	j PROPERTY_BY_DIRECTION
	k UP_AABB
	l WEST_AABB
	m EAST_AABB
	n NORTH_AABB
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/util/RandomSource;)I getFireTickDelay
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;I)Lnet/minecraft/world/level/block/state/IBlockData; getStateWithAge
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)I getIgniteOdds
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Z isNearRain
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;ILnet/minecraft/util/RandomSource;I)V checkBurnOut
	a (Lnet/minecraft/world/level/block/Block;II)V setFlammable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	b ()V bootStrap
	b (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
	d (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z isValidFireLocation
	f (Lnet/minecraft/world/level/block/state/IBlockData;)Z canBurn
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/phys/shapes/VoxelShape; calculateShape
	n (Lnet/minecraft/world/level/block/state/IBlockData;)I getBurnOdds
	o (Lnet/minecraft/world/level/block/state/IBlockData;)I getIgniteOdds
net/minecraft/world/level/block/BlockFireAbstract net/minecraft/world/level/block/BaseFireBlock
	a AABB_OFFSET
	b DOWN_AABB
	c SECONDS_ON_FIRE
	d fireDamage
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; getState
	a (Lnet/minecraft/world/level/World;)Z inPortalDimension
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Z canBePlacedAt
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/player/EntityHuman;)V playerWillDestroy
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V spawnDestroyParticles
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;)V entityInside
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Z isPortal
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
	f (Lnet/minecraft/world/level/block/state/IBlockData;)Z canBurn
net/minecraft/world/level/block/BlockFletchingTable net/minecraft/world/level/block/FletchingTableBlock
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
net/minecraft/world/level/block/BlockFloorSign net/minecraft/world/level/block/StandingSignBlock
	a ROTATION
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
net/minecraft/world/level/block/BlockFlowerPot net/minecraft/world/level/block/FlowerPotBlock
	a AABB_SIZE
	b SHAPE
	c POTTED_BY_CONTENT
	d content
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/item/ItemStack; getCloneItemStack
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	b ()Lnet/minecraft/world/level/block/Block; getContent
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
	g ()Z isEmpty
net/minecraft/world/level/block/BlockFlowers net/minecraft/world/level/block/FlowerBlock
	a AABB_OFFSET
	b SHAPE
	c suspiciousStewEffect
	d effectDuration
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	b ()Lnet/minecraft/world/effect/MobEffectList; getSuspiciousEffect
	c ()I getEffectDuration
net/minecraft/world/level/block/BlockFluids net/minecraft/world/level/block/LiquidBlock
	a LEVEL
	b fluid
	c STABLE_SHAPE
	d POSSIBLE_FLOW_DIRECTIONS
	e stateCache
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)V fizz
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z shouldSpreadLiquid
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;)Z skipRendering
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/storage/loot/LootTableInfo$Builder;)Ljava/util/List; getDrops
	an_ ()Ljava/util/Optional; getPickupSound
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
	c (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/item/ItemStack; pickupBlock
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z propagatesSkylightDown
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getCollisionShape
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	e_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isRandomlyTicking
net/minecraft/world/level/block/BlockFungi net/minecraft/world/level/block/FungusBlock
	a SHAPE
	b BONEMEAL_SUCCESS_PROBABILITY
	c requiredBlock
	d feature
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V performBonemeal
	a (Lnet/minecraft/world/level/IWorldReader;)Ljava/util/Optional; getFeature
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z mayPlaceOn
net/minecraft/world/level/block/BlockFurnace net/minecraft/world/level/block/AbstractFurnaceBlock
	a FACING
	b LIT
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;)V openContainer
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;)V setPlacedBy
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/entity/TileEntityTypes;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; createFurnaceTicker
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onRemove
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
	d_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z hasAnalogOutputSignal
net/minecraft/world/level/block/BlockFurnaceFurace net/minecraft/world/level/block/FurnaceBlock
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;)V openContainer
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; getTicker
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
net/minecraft/world/level/block/BlockGlass net/minecraft/world/level/block/GlassBlock
net/minecraft/world/level/block/BlockGlassAbstract net/minecraft/world/level/block/AbstractGlassBlock
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)F getShadeBrightness
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getVisualShape
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z propagatesSkylightDown
net/minecraft/world/level/block/BlockGlazedTerracotta net/minecraft/world/level/block/GlazedTerracottaBlock
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	d (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/EnumPistonReaction; getPistonPushReaction
net/minecraft/world/level/block/BlockGrass net/minecraft/world/level/block/GrassBlock
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V performBonemeal
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isBonemealSuccess
net/minecraft/world/level/block/BlockGrassPath net/minecraft/world/level/block/DirtPathBlock
	a SHAPE
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	g_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z useShapeForLightOcclusion
net/minecraft/world/level/block/BlockGravel net/minecraft/world/level/block/GravelBlock
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)I getDustColor
net/minecraft/world/level/block/BlockGrindstone net/minecraft/world/level/block/GrindstoneBlock
	E FLOOR_EAST_WEST_ALL_LEGS
	F FLOOR_EAST_WEST_GRINDSTONE
	G WALL_SOUTH_LEFT_POST
	H WALL_SOUTH_RIGHT_POST
	I WALL_SOUTH_LEFT_PIVOT
	K WALL_SOUTH_RIGHT_PIVOT
	L WALL_SOUTH_LEFT_LEG
	M WALL_SOUTH_RIGHT_LEG
	N WALL_SOUTH_ALL_LEGS
	O WALL_SOUTH_GRINDSTONE
	P WALL_NORTH_LEFT_POST
	Q WALL_NORTH_RIGHT_POST
	R WALL_NORTH_LEFT_PIVOT
	S WALL_NORTH_RIGHT_PIVOT
	T WALL_NORTH_LEFT_LEG
	U WALL_NORTH_RIGHT_LEG
	V WALL_NORTH_ALL_LEGS
	W WALL_NORTH_GRINDSTONE
	X WALL_WEST_LEFT_POST
	Y WALL_WEST_RIGHT_POST
	Z WALL_WEST_LEFT_PIVOT
	a FLOOR_NORTH_SOUTH_LEFT_POST
	aA CEILING_EAST_WEST_RIGHT_LEG
	aB CEILING_EAST_WEST_ALL_LEGS
	aC CEILING_EAST_WEST_GRINDSTONE
	aR CONTAINER_TITLE
	aa WALL_WEST_RIGHT_PIVOT
	ab WALL_WEST_LEFT_LEG
	ac WALL_WEST_RIGHT_LEG
	ad WALL_WEST_ALL_LEGS
	ae WALL_WEST_GRINDSTONE
	af WALL_EAST_LEFT_POST
	ag WALL_EAST_RIGHT_POST
	ah WALL_EAST_LEFT_PIVOT
	ai WALL_EAST_RIGHT_PIVOT
	aj WALL_EAST_LEFT_LEG
	ak WALL_EAST_RIGHT_LEG
	al WALL_EAST_ALL_LEGS
	am WALL_EAST_GRINDSTONE
	an CEILING_NORTH_SOUTH_LEFT_POST
	ao CEILING_NORTH_SOUTH_RIGHT_POST
	ap CEILING_NORTH_SOUTH_LEFT_PIVOT
	aq CEILING_NORTH_SOUTH_RIGHT_PIVOT
	ar CEILING_NORTH_SOUTH_LEFT_LEG
	as CEILING_NORTH_SOUTH_RIGHT_LEG
	at CEILING_NORTH_SOUTH_ALL_LEGS
	au CEILING_NORTH_SOUTH_GRINDSTONE
	av CEILING_EAST_WEST_LEFT_POST
	aw CEILING_EAST_WEST_RIGHT_POST
	ax CEILING_EAST_WEST_LEFT_PIVOT
	ay CEILING_EAST_WEST_RIGHT_PIVOT
	az CEILING_EAST_WEST_LEFT_LEG
	b FLOOR_NORTH_SOUTH_RIGHT_POST
	c FLOOR_NORTH_SOUTH_LEFT_PIVOT
	d FLOOR_NORTH_SOUTH_RIGHT_PIVOT
	e FLOOR_NORTH_SOUTH_LEFT_LEG
	f FLOOR_NORTH_SOUTH_RIGHT_LEG
	g FLOOR_NORTH_SOUTH_ALL_LEGS
	h FLOOR_NORTH_SOUTH_GRINDSTONE
	i FLOOR_EAST_WEST_LEFT_POST
	j FLOOR_EAST_WEST_RIGHT_POST
	k FLOOR_EAST_WEST_LEFT_PIVOT
	l FLOOR_EAST_WEST_RIGHT_PIVOT
	m FLOOR_EAST_WEST_LEFT_LEG
	n FLOOR_EAST_WEST_RIGHT_LEG
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/ITileInventory; getMenuProvider
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getCollisionShape
	n (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/phys/shapes/VoxelShape; getVoxelShape
net/minecraft/world/level/block/BlockGrowingAbstract net/minecraft/world/level/block/GrowingPlantBlock
	a growthDirection
	b scheduleFluidTicks
	c shape
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/GeneratorAccess;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	b ()Lnet/minecraft/world/level/block/Block; getBodyBlock
	c ()Lnet/minecraft/world/level/block/BlockGrowingTop; getHeadBlock
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Z canAttachTo
net/minecraft/world/level/block/BlockGrowingStem net/minecraft/world/level/block/GrowingPlantBodyBlock
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V performBonemeal
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;)Ljava/util/Optional; getHeadPos
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/item/ItemStack; getCloneItemStack
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/item/context/BlockActionContext;)Z canBeReplaced
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/state/IBlockData; updateHeadAfterConvertedFromBody
	b ()Lnet/minecraft/world/level/block/Block; getBodyBlock
net/minecraft/world/level/block/BlockGrowingTop net/minecraft/world/level/block/GrowingPlantHeadBlock
	d AGE
	e MAX_AGE
	f growPerTickProbability
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V performBonemeal
	a (Lnet/minecraft/util/RandomSource;)I getBlocksToGrowWhenBonemealed
	a (Lnet/minecraft/world/level/GeneratorAccess;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/block/state/IBlockData; getGrowIntoState
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/state/IBlockData; updateBodyAfterConvertedFromHead
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	c ()Lnet/minecraft/world/level/block/BlockGrowingTop; getHeadBlock
	e_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isRandomlyTicking
	g (Lnet/minecraft/world/level/block/state/IBlockData;)Z canGrowInto
	n (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/state/IBlockData; getMaxAgeState
	o (Lnet/minecraft/world/level/block/state/IBlockData;)Z isMaxAge
net/minecraft/world/level/block/BlockHalfTransparent net/minecraft/world/level/block/HalfTransparentBlock
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;)Z skipRendering
net/minecraft/world/level/block/BlockHay net/minecraft/world/level/block/HayBlock
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;F)V fallOn
net/minecraft/world/level/block/BlockHoney net/minecraft/world/level/block/HoneyBlock
	a SHAPE
	b SLIDE_STARTS_WHEN_VERTICAL_SPEED_IS_AT_LEAST
	c MIN_FALL_SPEED_TO_BE_CONSIDERED_SLIDING
	d THROTTLE_SLIDE_SPEED_TO
	e SLIDE_ADVANCEMENT_CHECK_INTERVAL
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;)Z isSlidingDown
	a (Lnet/minecraft/world/entity/Entity;)V showSlideParticles
	a (Lnet/minecraft/world/entity/Entity;I)V showParticles
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPosition;)V maybeDoSlideAchievement
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/Entity;)V maybeDoSlideEffects
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;F)V fallOn
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;)V entityInside
	b (Lnet/minecraft/world/entity/Entity;)V showJumpParticles
	c (Lnet/minecraft/world/entity/Entity;)Z doesEntityDoHoneyBlockSlideEffects
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getCollisionShape
	d (Lnet/minecraft/world/entity/Entity;)V doSlideMovement
net/minecraft/world/level/block/BlockHopper net/minecraft/world/level/block/HopperBlock
	E SOUTH_INTERACTION_SHAPE
	F WEST_INTERACTION_SHAPE
	a FACING
	b ENABLED
	c TOP
	d FUNNEL
	e CONVEX_BASE
	f BASE
	g DOWN_SHAPE
	h EAST_SHAPE
	i NORTH_SHAPE
	j SOUTH_SHAPE
	k WEST_SHAPE
	l DOWN_INTERACTION_SHAPE
	m EAST_INTERACTION_SHAPE
	n NORTH_INTERACTION_SHAPE
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;I)V checkPoweredState
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;)V setPlacedBy
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; getTicker
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getInteractionShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;)V entityInside
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onRemove
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
	d_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z hasAnalogOutputSignal
net/minecraft/world/level/block/BlockHugeMushroom net/minecraft/world/level/block/HugeMushroomBlock
	a NORTH
	b EAST
	c SOUTH
	d WEST
	e UP
	f DOWN
	g PROPERTY_BY_DIRECTION
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
net/minecraft/world/level/block/BlockIce net/minecraft/world/level/block/IceBlock
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntity;Lnet/minecraft/world/item/ItemStack;)V playerDestroy
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	d (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/EnumPistonReaction; getPistonPushReaction
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V melt
net/minecraft/world/level/block/BlockIceFrost net/minecraft/world/level/block/FrostedIceBlock
	a MAX_AGE
	b AGE
	c NEIGHBORS_TO_AGE
	d NEIGHBORS_TO_MELT
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;I)Z fewerNeigboursThan
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/item/ItemStack; getCloneItemStack
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;Z)V neighborChanged
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	e (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Z slightlyMelt
net/minecraft/world/level/block/BlockIronBars net/minecraft/world/level/block/IronBarsBlock
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;)Z skipRendering
	a (Lnet/minecraft/world/level/block/state/IBlockData;Z)Z attachsTo
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getVisualShape
net/minecraft/world/level/block/BlockJigsaw net/minecraft/world/level/block/JigsawBlock
	a ORIENTATION
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo;)Z canAttach
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/core/EnumDirection; getFrontFacing
	n (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/core/EnumDirection; getTopFacing
net/minecraft/world/level/block/BlockJukeBox net/minecraft/world/level/block/JukeboxBlock
	a HAS_RECORD
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;)V setPlacedBy
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; getTicker
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onRemove
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
	d_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z hasAnalogOutputSignal
	f_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isSignalSource
net/minecraft/world/level/block/BlockKelp net/minecraft/world/level/block/KelpBlock
	f SHAPE
	g GROW_PER_TICK_PROBABILITY
	a (Lnet/minecraft/util/RandomSource;)I getBlocksToGrowWhenBonemealed
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/Fluid;)Z placeLiquid
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/FluidType;)Z canPlaceLiquid
	b ()Lnet/minecraft/world/level/block/Block; getBodyBlock
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	g (Lnet/minecraft/world/level/block/state/IBlockData;)Z canGrowInto
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Z canAttachTo
net/minecraft/world/level/block/BlockKelpPlant net/minecraft/world/level/block/KelpPlantBlock
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/Fluid;)Z placeLiquid
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/FluidType;)Z canPlaceLiquid
	c ()Lnet/minecraft/world/level/block/BlockGrowingTop; getHeadBlock
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Z canAttachTo
net/minecraft/world/level/block/BlockLadder net/minecraft/world/level/block/LadderBlock
	a FACING
	b WATERLOGGED
	c AABB_OFFSET
	d EAST_AABB
	e WEST_AABB
	f SOUTH_AABB
	g NORTH_AABB
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Z canAttachTo
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
net/minecraft/world/level/block/BlockLantern net/minecraft/world/level/block/LanternBlock
	a HANGING
	b WATERLOGGED
	c AABB
	d HANGING_AABB
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	d (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/EnumPistonReaction; getPistonPushReaction
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/core/EnumDirection; getConnectedDirection
net/minecraft/world/level/block/BlockLeaves net/minecraft/world/level/block/LeavesBlock
	a DECAY_DISTANCE
	b DISTANCE
	c PERSISTENT
	d WATERLOGGED
	e TICK_DELAY
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateDistance
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getBlockSupportShape
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	e_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isRandomlyTicking
	g (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)I getLightBlock
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Z decaying
	n (Lnet/minecraft/world/level/block/state/IBlockData;)I getDistanceAt
net/minecraft/world/level/block/BlockLectern net/minecraft/world/level/block/LecternBlock
	a FACING
	b POWERED
	c HAS_BOOK
	d SHAPE_BASE
	e SHAPE_POST
	f SHAPE_COMMON
	g SHAPE_TOP_PLATE
	h SHAPE_COLLISION
	i SHAPE_WEST
	j SHAPE_NORTH
	k SHAPE_EAST
	l SHAPE_SOUTH
	m PAGE_CHANGE_IMPULSE_TICKS
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/item/ItemStack;)Z tryPlaceBook
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V resetBookState
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;)V openScreen
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V signalPageChange
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V changePowered
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onRemove
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	b (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/item/ItemStack;)V placeBook
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V updateBelow
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getDirectSignal
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/ITileInventory; getMenuProvider
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getCollisionShape
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V popBook
	d_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z hasAnalogOutputSignal
	f (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getOcclusionShape
	f_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isSignalSource
	g_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z useShapeForLightOcclusion
net/minecraft/world/level/block/BlockLever net/minecraft/world/level/block/LeverBlock
	a POWERED
	b DEPTH
	c WIDTH
	d HEIGHT
	e NORTH_AABB
	f SOUTH_AABB
	g WEST_AABB
	h EAST_AABB
	i UP_AABB_Z
	j UP_AABB_X
	k DOWN_AABB_Z
	l DOWN_AABB_X
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;F)V makeParticle
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onRemove
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getDirectSignal
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; pull
	e (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V updateNeighbours
	f_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isSignalSource
net/minecraft/world/level/block/BlockLongGrass net/minecraft/world/level/block/TallGrassBlock
	a AABB_OFFSET
	b SHAPE
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V performBonemeal
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
net/minecraft/world/level/block/BlockLoom net/minecraft/world/level/block/LoomBlock
	a CONTAINER_TITLE
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/ITileInventory; getMenuProvider
net/minecraft/world/level/block/BlockMagma net/minecraft/world/level/block/MagmaBlock
	a BUBBLE_COLUMN_CHECK_DELAY
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/Entity;)V stepOn
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
net/minecraft/world/level/block/BlockMelon net/minecraft/world/level/block/MelonBlock
	b ()Lnet/minecraft/world/level/block/BlockStem; getStem
	c ()Lnet/minecraft/world/level/block/BlockStemAttached; getAttachedStem
net/minecraft/world/level/block/BlockMinecartDetector net/minecraft/world/level/block/DetectorRailBlock
	d SHAPE
	e POWERED
	f PRESSED_CHECK_PERIOD
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/AxisAlignedBB; getSearchBB
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Ljava/lang/Class;Ljava/util/function/Predicate;)Ljava/util/List; getInteractingMinecartOfType
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V checkPressed
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;)V entityInside
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V updatePowerToConnected
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getDirectSignal
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
	c ()Lnet/minecraft/world/level/block/state/properties/IBlockState; getShapeProperty
	d_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z hasAnalogOutputSignal
	f_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isSignalSource
net/minecraft/world/level/block/BlockMinecartTrack net/minecraft/world/level/block/RailBlock
	d SHAPE
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;)V updateState
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	c ()Lnet/minecraft/world/level/block/state/properties/IBlockState; getShapeProperty
net/minecraft/world/level/block/BlockMinecartTrackAbstract net/minecraft/world/level/block/BaseRailBlock
	a FLAT_AABB
	b HALF_BLOCK_AABB
	c WATERLOGGED
	d isStraight
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/properties/BlockPropertyTrackPosition;)Z shouldBeRemoved
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Z isRail
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)Lnet/minecraft/world/level/block/state/IBlockData; updateDir
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;)V updateState
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onRemove
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Z)Lnet/minecraft/world/level/block/state/IBlockData; updateState
	b ()Z isStraight
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
	c ()Lnet/minecraft/world/level/block/state/properties/IBlockState; getShapeProperty
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	d (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/EnumPistonReaction; getPistonPushReaction
	g (Lnet/minecraft/world/level/block/state/IBlockData;)Z isRail
net/minecraft/world/level/block/BlockMobSpawner net/minecraft/world/level/block/SpawnerBlock
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; getSpawnEntityDisplayName
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/IBlockAccess;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V appendHoverText
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; getTicker
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/item/ItemStack;Z)V spawnAfterBreak
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
net/minecraft/world/level/block/BlockMonsterEggs net/minecraft/world/level/block/InfestedBlock
	a hostBlock
	b BLOCK_BY_HOST_BLOCK
	c HOST_TO_INFESTED_STATES
	d INFESTED_TO_HOST_STATES
	a (Ljava/util/Map;Lnet/minecraft/world/level/block/state/IBlockData;Ljava/util/function/Supplier;)Lnet/minecraft/world/level/block/state/IBlockData; getNewStateWithProperties
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;)V spawnInfestation
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/item/ItemStack;Z)V spawnAfterBreak
	b ()Lnet/minecraft/world/level/block/Block; getHostBlock
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Z isCompatibleHostBlock
	n (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/state/IBlockData; infestedStateByHost
	o (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/state/IBlockData; hostStateByInfested
net/minecraft/world/level/block/BlockMushroom net/minecraft/world/level/block/MushroomBlock
	a AABB_OFFSET
	b SHAPE
	c feature
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/util/RandomSource;)Z growMushroom
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V performBonemeal
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z mayPlaceOn
net/minecraft/world/level/block/BlockMycel net/minecraft/world/level/block/MyceliumBlock
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
net/minecraft/world/level/block/BlockNetherSprouts net/minecraft/world/level/block/NetherSproutsBlock
	a SHAPE
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z mayPlaceOn
net/minecraft/world/level/block/BlockNetherVinesUtil net/minecraft/world/level/block/NetherVines
	a GROW_PER_TICK_PROBABILITY
	b BONEMEAL_GROW_PROBABILITY_DECREASE_RATE
	a (Lnet/minecraft/util/RandomSource;)I getBlocksToGrowWhenBonemealed
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z isValidGrowthState
net/minecraft/world/level/block/BlockNetherWart net/minecraft/world/level/block/NetherWartBlock
	a MAX_AGE
	b AGE
	c SHAPE_BY_AGE
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/item/ItemStack; getCloneItemStack
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z mayPlaceOn
	e_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isRandomlyTicking
net/minecraft/world/level/block/BlockNetherrack net/minecraft/world/level/block/NetherrackBlock
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V performBonemeal
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isBonemealSuccess
net/minecraft/world/level/block/BlockNote net/minecraft/world/level/block/NoteBlock
	a INSTRUMENT
	b POWERED
	c NOTE
	d NOTE_VOLUME
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V playNote
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/GeneratorAccess;)Z isFeatureFlagEnabled
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/resources/MinecraftKey; getCustomSoundId
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;II)Z triggerEvent
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;)V attack
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;Z)V neighborChanged
	b (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/state/IBlockData; setInstrument
net/minecraft/world/level/block/BlockNylium net/minecraft/world/level/block/NyliumBlock
	a (Lnet/minecraft/core/IRegistry;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)V place
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V performBonemeal
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isBonemealSuccess
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canBeNylium
net/minecraft/world/level/block/BlockObserver net/minecraft/world/level/block/ObserverBlock
	b POWERED
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)V startSignal
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V updateNeighborsInFront
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onRemove
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getDirectSignal
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
	f_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isSignalSource
net/minecraft/world/level/block/BlockPlant net/minecraft/world/level/block/BushBlock
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z propagatesSkylightDown
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z mayPlaceOn
net/minecraft/world/level/block/BlockPortal net/minecraft/world/level/block/NetherPortalBlock
	a AXIS
	b AABB_OFFSET
	c X_AXIS_AABB
	d Z_AXIS_AABB
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/item/ItemStack; getCloneItemStack
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;)V entityInside
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
net/minecraft/world/level/block/BlockPotatoes net/minecraft/world/level/block/PotatoBlock
	a SHAPE_BY_AGE
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	d ()Lnet/minecraft/world/level/IMaterial; getBaseSeedId
net/minecraft/world/level/block/BlockPowered net/minecraft/world/level/block/PoweredBlock
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getSignal
	f_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isSignalSource
net/minecraft/world/level/block/BlockPoweredRail net/minecraft/world/level/block/PoweredRailBlock
	d SHAPE
	e POWERED
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;ZI)Z findPoweredRailSignal
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;ZILnet/minecraft/world/level/block/state/properties/BlockPropertyTrackPosition;)Z isSameRailWithPower
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;)V updateState
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	c ()Lnet/minecraft/world/level/block/state/properties/IBlockState; getShapeProperty
net/minecraft/world/level/block/BlockPressurePlateAbstract net/minecraft/world/level/block/BasePressurePlateBlock
	a PRESSED_AABB
	b AABB
	c TOUCH_AABB
	d type
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;I)V checkPressed
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V updateNeighbours
	a (Lnet/minecraft/world/level/block/state/IBlockData;I)Lnet/minecraft/world/level/block/state/IBlockData; setSignalForState
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;)V entityInside
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onRemove
	ao_ ()Z isPossibleToRespawnInThis
	b ()I getPressedTime
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)I getSignalStrength
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getDirectSignal
	d (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/EnumPistonReaction; getPistonPushReaction
	f_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isSignalSource
	g (Lnet/minecraft/world/level/block/state/IBlockData;)I getSignalForState
net/minecraft/world/level/block/BlockPressurePlateBinary net/minecraft/world/level/block/PressurePlateBlock
	d POWERED
	e sensitivity
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/level/block/state/IBlockData;I)Lnet/minecraft/world/level/block/state/IBlockData; setSignalForState
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)I getSignalStrength
	g (Lnet/minecraft/world/level/block/state/IBlockData;)I getSignalForState
net/minecraft/world/level/block/BlockPressurePlateBinary$EnumMobType net/minecraft/world/level/block/PressurePlateBlock$Sensitivity
	a EVERYTHING
	b MOBS
	c $VALUES
	a ()[Lnet/minecraft/world/level/block/BlockPressurePlateBinary$EnumMobType; $values
net/minecraft/world/level/block/BlockPressurePlateWeighted net/minecraft/world/level/block/WeightedPressurePlateBlock
	d POWER
	e maxWeight
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/level/block/state/IBlockData;I)Lnet/minecraft/world/level/block/state/IBlockData; setSignalForState
	b ()I getPressedTime
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)I getSignalStrength
	g (Lnet/minecraft/world/level/block/state/IBlockData;)I getSignalForState
net/minecraft/world/level/block/BlockPumpkin net/minecraft/world/level/block/PumpkinBlock
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	b ()Lnet/minecraft/world/level/block/BlockStem; getStem
	c ()Lnet/minecraft/world/level/block/BlockStemAttached; getAttachedStem
net/minecraft/world/level/block/BlockPumpkinCarved net/minecraft/world/level/block/CarvedPumpkinBlock
	a FACING
	b snowGolemBase
	c snowGolemFull
	d ironGolemBase
	e ironGolemFull
	f PUMPKINS_PREDICATE
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSpawnGolem
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V trySpawnGolem
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/pattern/ShapeDetector$ShapeDetectorCollection;)V clearPatternBlocks
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/pattern/ShapeDetector$ShapeDetectorCollection;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPosition;)V spawnGolemInWorld
	b ()Lnet/minecraft/world/level/block/state/pattern/ShapeDetector; getOrCreateSnowGolemBase
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/pattern/ShapeDetector$ShapeDetectorCollection;)V updatePatternBlocks
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
	g ()Lnet/minecraft/world/entity/EnumItemSlot; getEquipmentSlot
	v ()Lnet/minecraft/world/level/block/state/pattern/ShapeDetector; getOrCreateSnowGolemFull
	w ()Lnet/minecraft/world/level/block/state/pattern/ShapeDetector; getOrCreateIronGolemBase
	x ()Lnet/minecraft/world/level/block/state/pattern/ShapeDetector; getOrCreateIronGolemFull
net/minecraft/world/level/block/BlockRedstoneComparator net/minecraft/world/level/block/ComparatorBlock
	a MODE
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z shouldTurnOn
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/entity/decoration/EntityItemFrame; getItemFrame
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;II)Z triggerEvent
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	b (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)I getOutputSignal
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)I getInputSignal
	c (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V checkTickOnNeighbor
	e (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)I calculateOutputSignal
	f (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V refreshOutputState
	g (Lnet/minecraft/world/level/block/state/IBlockData;)I getDelay
net/minecraft/world/level/block/BlockRedstoneLamp net/minecraft/world/level/block/RedstoneLampBlock
	a LIT
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;Z)V neighborChanged
net/minecraft/world/level/block/BlockRedstoneOre net/minecraft/world/level/block/RedStoneOreBlock
	a LIT
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V spawnParticles
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/Entity;)V stepOn
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/item/ItemStack;Z)V spawnAfterBreak
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;)V attack
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V interact
	e_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isRandomlyTicking
net/minecraft/world/level/block/BlockRedstoneTorch net/minecraft/world/level/block/RedstoneTorchBlock
	a LIT
	b RECENT_TOGGLE_TIMER
	c MAX_RECENT_TOGGLES
	d RESTART_DELAY
	e RECENT_TOGGLES
	f TOGGLE_DELAY
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z hasNeighborSignal
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Z)Z isToggledTooFrequently
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onRemove
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getDirectSignal
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
	f_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isSignalSource
net/minecraft/world/level/block/BlockRedstoneTorch$RedstoneUpdateInfo net/minecraft/world/level/block/RedstoneTorchBlock$Toggle
	a pos
	b when
net/minecraft/world/level/block/BlockRedstoneTorchWall net/minecraft/world/level/block/RedstoneWallTorchBlock
	e FACING
	f LIT
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z hasNeighborSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	h ()Ljava/lang/String; getDescriptionId
net/minecraft/world/level/block/BlockRedstoneWire net/minecraft/world/level/block/RedStoneWireBlock
	E SHAPES_CACHE
	F COLORS
	G PARTICLE_DENSITY
	H crossState
	I shouldSignal
	a NORTH
	b EAST
	c SOUTH
	d WEST
	e POWER
	f PROPERTY_BY_DIRECTION
	g H
	h W
	i E
	j N
	k S
	l SHAPE_DOT
	m SHAPES_FLOOR
	n SHAPES_UP
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/world/level/block/state/properties/BlockPropertyRedstoneSide; getConnectingSide
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;Z)Lnet/minecraft/world/level/block/state/properties/BlockPropertyRedstoneSide; getConnectingSide
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; getConnectionState
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)I calculateTargetStrength
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V updatePowerStrength
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;)V updatesOnShapeChange
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/core/EnumDirection;FF)V spawnParticlesAlongLine
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;)Z shouldConnectTo
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;II)V updateIndirectNeighbourShapes
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onRemove
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	b (I)I getColorForPower
	b (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z canSurviveOn
	b (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; getMissingConnections
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V checkCornerChangeAt
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getDirectSignal
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
	c (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V updateNeighborsOfNeighboringWires
	f_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isSignalSource
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Z shouldConnectTo
	n (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/phys/shapes/VoxelShape; calculateShape
	o (Lnet/minecraft/world/level/block/state/IBlockData;)Z isCross
	p (Lnet/minecraft/world/level/block/state/IBlockData;)Z isDot
	q (Lnet/minecraft/world/level/block/state/IBlockData;)I getWireSignal
net/minecraft/world/level/block/BlockReed net/minecraft/world/level/block/SugarCaneBlock
	a AGE
	b AABB_OFFSET
	c SHAPE
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
net/minecraft/world/level/block/BlockRepeater net/minecraft/world/level/block/RepeaterBlock
	a LOCKED
	d DELAY
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isLocked
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	g (Lnet/minecraft/world/level/block/state/IBlockData;)I getDelay
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Z isAlternateInput
net/minecraft/world/level/block/BlockRespawnAnchor net/minecraft/world/level/block/RespawnAnchorBlock
	a MIN_CHARGES
	b MAX_CHARGES
	c CHARGE
	d RESPAWN_HORIZONTAL_OFFSETS
	e RESPAWN_OFFSETS
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/World;)Z isWaterThatWouldFlow
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V charge
	a (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/ICollisionAccess;Lnet/minecraft/core/BlockPosition;)Ljava/util/Optional; findStandUpPosition
	a (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/ICollisionAccess;Lnet/minecraft/core/BlockPosition;Z)Ljava/util/Optional; findStandUpPosition
	a (Lnet/minecraft/world/item/ItemStack;)Z isRespawnFuel
	a (Lnet/minecraft/world/level/World;)Z canSetSpawn
	a (Lnet/minecraft/world/level/block/state/IBlockData;I)I getScaledChargeLevel
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V explode
	d_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z hasAnalogOutputSignal
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Z canBeCharged
net/minecraft/world/level/block/BlockRoots net/minecraft/world/level/block/RootsBlock
	a AABB_OFFSET
	b SHAPE
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z mayPlaceOn
net/minecraft/world/level/block/BlockRotatable net/minecraft/world/level/block/RotatedPillarBlock
	g AXIS
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotatePillar
net/minecraft/world/level/block/BlockSand net/minecraft/world/level/block/SandBlock
	a dustColor
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)I getDustColor
net/minecraft/world/level/block/BlockSapling net/minecraft/world/level/block/SaplingBlock
	a treeGrower
	d STAGE
	e AABB_OFFSET
	f SHAPE
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/util/RandomSource;)V advanceTree
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V performBonemeal
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
net/minecraft/world/level/block/BlockScaffolding net/minecraft/world/level/block/ScaffoldingBlock
	a STABILITY_MAX_DISTANCE
	b DISTANCE
	c WATERLOGGED
	d BOTTOM
	e TICK_DELAY
	f STABLE_SHAPE
	g UNSTABLE_SHAPE
	h UNSTABLE_SHAPE_BOTTOM
	i BELOW_BLOCK
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)I getDistance
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;I)Z isBottom
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/item/context/BlockActionContext;)Z canBeReplaced
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getInteractionShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getCollisionShape
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
net/minecraft/world/level/block/BlockSeaPickle net/minecraft/world/level/block/SeaPickleBlock
	a MAX_PICKLES
	b PICKLES
	c WATERLOGGED
	d ONE_AABB
	e TWO_AABB
	f THREE_AABB
	g FOUR_AABB
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V performBonemeal
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/item/context/BlockActionContext;)Z canBeReplaced
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z mayPlaceOn
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Z isDead
net/minecraft/world/level/block/BlockShulkerBox net/minecraft/world/level/block/ShulkerBoxBlock
	a FACING
	b CONTENTS
	c OPEN_AABB_SIZE
	d UP_OPEN_AABB
	e DOWN_OPEN_AABB
	f WES_OPEN_AABB
	g EAST_OPEN_AABB
	h NORTH_OPEN_AABB
	i SOUTH_OPEN_AABB
	j OPEN_SHAPE_BY_DIRECTION
	k color
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/item/EnumColor;)Lnet/minecraft/world/level/block/Block; getBlockByColor
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/IBlockAccess;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V appendHoverText
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/item/ItemStack; getCloneItemStack
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;)V setPlacedBy
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/player/EntityHuman;)V playerWillDestroy
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; getTicker
	a (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/item/EnumColor; getColorFromBlock
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/entity/TileEntityShulkerBox;)Z canOpen
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onRemove
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/storage/loot/LootTableInfo$Builder;)Ljava/util/List; getDrops
	b ()Lnet/minecraft/world/item/EnumColor; getColor
	b (Lnet/minecraft/world/item/EnumColor;)Lnet/minecraft/world/item/ItemStack; getColoredItemStack
	b (Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/item/EnumColor; getColorFromItem
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getBlockSupportShape
	d (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/EnumPistonReaction; getPistonPushReaction
	d_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z hasAnalogOutputSignal
net/minecraft/world/level/block/BlockSign net/minecraft/world/level/block/SignBlock
	a type
	e WATERLOGGED
	f AABB_OFFSET
	g SHAPE
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/state/properties/BlockPropertyWood; getWoodType
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	ao_ ()Z isPossibleToRespawnInThis
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	d ()Lnet/minecraft/world/level/block/state/properties/BlockPropertyWood; type
net/minecraft/world/level/block/BlockSkull net/minecraft/world/level/block/SkullBlock
	a MAX
	b ROTATION
	c SHAPE
	d PIGLIN_SHAPE
	e ROTATIONS
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	f (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getOcclusionShape
net/minecraft/world/level/block/BlockSkull$Type net/minecraft/world/level/block/SkullBlock$Types
	a SKELETON
	b WITHER_SKELETON
	c PLAYER
	d ZOMBIE
	e CREEPER
	f PIGLIN
	g DRAGON
	h $VALUES
	a ()[Lnet/minecraft/world/level/block/BlockSkull$Type; $values
net/minecraft/world/level/block/BlockSkullAbstract net/minecraft/world/level/block/AbstractSkullBlock
	a type
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; getTicker
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	b ()Lcwg$a; getType
	g ()Lnet/minecraft/world/entity/EnumItemSlot; getEquipmentSlot
net/minecraft/world/level/block/BlockSkullPlayer net/minecraft/world/level/block/PlayerHeadBlock
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;)V setPlacedBy
net/minecraft/world/level/block/BlockSkullPlayerWall net/minecraft/world/level/block/PlayerWallHeadBlock
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;)V setPlacedBy
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/storage/loot/LootTableInfo$Builder;)Ljava/util/List; getDrops
net/minecraft/world/level/block/BlockSkullWall net/minecraft/world/level/block/WallSkullBlock
	a FACING
	b AABBS
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	h ()Ljava/lang/String; getDescriptionId
net/minecraft/world/level/block/BlockSlime net/minecraft/world/level/block/SlimeBlock
	a (Lnet/minecraft/world/entity/Entity;)V bounceUp
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/world/entity/Entity;)V updateEntityAfterFallOn
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/Entity;)V stepOn
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;F)V fallOn
net/minecraft/world/level/block/BlockSlowSand net/minecraft/world/level/block/SoulSandBlock
	a SHAPE
	b BUBBLE_COLUMN_CHECK_DELAY
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)F getShadeBrightness
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getVisualShape
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getBlockSupportShape
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getCollisionShape
net/minecraft/world/level/block/BlockSmithingTable net/minecraft/world/level/block/SmithingTableBlock
	a CONTAINER_TITLE
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/ITileInventory; getMenuProvider
net/minecraft/world/level/block/BlockSmoker net/minecraft/world/level/block/SmokerBlock
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;)V openContainer
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; getTicker
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
net/minecraft/world/level/block/BlockSnow net/minecraft/world/level/block/SnowLayerBlock
	a MAX_HEIGHT
	b LAYERS
	c SHAPE_BY_LAYER
	d HEIGHT_IMPASSABLE
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/item/context/BlockActionContext;)Z canBeReplaced
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)F getShadeBrightness
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getVisualShape
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getBlockSupportShape
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getCollisionShape
	g_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z useShapeForLightOcclusion
net/minecraft/world/level/block/BlockSoil net/minecraft/world/level/block/FarmBlock
	a MOISTURE
	b SHAPE
	c MAX_MOISTURE
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V turnToDirt
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z isUnderCrops
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z isNearWater
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;F)V fallOn
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	g_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z useShapeForLightOcclusion
net/minecraft/world/level/block/BlockSoulFire net/minecraft/world/level/block/SoulFireBlock
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	f (Lnet/minecraft/world/level/block/state/IBlockData;)Z canBurn
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Z canSurviveOnBlock
net/minecraft/world/level/block/BlockSponge net/minecraft/world/level/block/SpongeBlock
	a MAX_DEPTH
	b MAX_COUNT
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V tryAbsorbWater
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;Z)V neighborChanged
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Z removeWaterBreadthFirstSearch
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
net/minecraft/world/level/block/BlockSprawling net/minecraft/world/level/block/PipeBlock
	a NORTH
	b EAST
	c SOUTH
	d WEST
	e UP
	f DOWN
	g PROPERTY_BY_DIRECTION
	h shapeByIndex
	i DIRECTIONS
	a (F)[Lnet/minecraft/world/phys/shapes/VoxelShape; makeShapes
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z propagatesSkylightDown
	h (Lnet/minecraft/world/level/block/state/IBlockData;)I getAABBIndex
net/minecraft/world/level/block/BlockStainedGlass net/minecraft/world/level/block/StainedGlassBlock
	a color
	a ()Lnet/minecraft/world/item/EnumColor; getColor
net/minecraft/world/level/block/BlockStainedGlassPane net/minecraft/world/level/block/StainedGlassPaneBlock
	i color
	a ()Lnet/minecraft/world/item/EnumColor; getColor
net/minecraft/world/level/block/BlockStairs net/minecraft/world/level/block/StairBlock
	E TOP_SHAPES
	F BOTTOM_SHAPES
	G SHAPE_BY_STATE
	H base
	I baseState
	a FACING
	b HALF
	c SHAPE
	d WATERLOGGED
	e TOP_AABB
	f BOTTOM_AABB
	g OCTET_NNN
	h OCTET_NNP
	i OCTET_NPN
	j OCTET_NPP
	k OCTET_PNN
	l OCTET_PNP
	m OCTET_PPN
	n OCTET_PPP
	a (ILnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)Lnet/minecraft/world/phys/shapes/VoxelShape; makeStairShape
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V destroy
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/Explosion;)V wasExploded
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/Entity;)V stepOn
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;)V attack
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onRemove
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	a (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)[Lnet/minecraft/world/phys/shapes/VoxelShape; makeShapes
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Z canTakeShape
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	e ()F getExplosionResistance
	e_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isRandomlyTicking
	g_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z useShapeForLightOcclusion
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Z isStairs
	i (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/properties/BlockPropertyStairsShape; getStairsShape
	n (Lnet/minecraft/world/level/block/state/IBlockData;)I getShapeIndex
net/minecraft/world/level/block/BlockStem net/minecraft/world/level/block/StemBlock
	a MAX_AGE
	b AGE
	c AABB_OFFSET
	d SHAPE_BY_AGE
	e fruit
	f seedSupplier
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V performBonemeal
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/item/ItemStack; getCloneItemStack
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	b ()Lnet/minecraft/world/level/block/BlockStemmed; getFruit
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z mayPlaceOn
net/minecraft/world/level/block/BlockStemAttached net/minecraft/world/level/block/AttachedStemBlock
	a FACING
	b AABB_OFFSET
	c AABBS
	d fruit
	e seedSupplier
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/item/ItemStack; getCloneItemStack
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z mayPlaceOn
net/minecraft/world/level/block/BlockStemmed net/minecraft/world/level/block/StemGrownBlock
	b ()Lnet/minecraft/world/level/block/BlockStem; getStem
	c ()Lnet/minecraft/world/level/block/BlockStemAttached; getAttachedStem
net/minecraft/world/level/block/BlockStepAbstract net/minecraft/world/level/block/SlabBlock
	a TYPE
	b WATERLOGGED
	c BOTTOM_AABB
	d TOP_AABB
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/Fluid;)Z placeLiquid
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/FluidType;)Z canPlaceLiquid
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/item/context/BlockActionContext;)Z canBeReplaced
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	g_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z useShapeForLightOcclusion
net/minecraft/world/level/block/BlockStonecutter net/minecraft/world/level/block/StonecutterBlock
	a FACING
	b SHAPE
	c CONTAINER_TITLE
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/ITileInventory; getMenuProvider
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
	g_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z useShapeForLightOcclusion
net/minecraft/world/level/block/BlockStructure net/minecraft/world/level/block/StructureBlock
	a MODE
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/block/entity/TileEntityStructure;)V trigger
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;)V setPlacedBy
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;Z)V neighborChanged
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
net/minecraft/world/level/block/BlockStructureVoid net/minecraft/world/level/block/StructureVoidBlock
	a SIZE
	b SHAPE
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)F getShadeBrightness
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
	d (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/EnumPistonReaction; getPistonPushReaction
net/minecraft/world/level/block/BlockSweetBerryBush net/minecraft/world/level/block/SweetBerryBushBlock
	a MAX_AGE
	b AGE
	c HURT_SPEED_THRESHOLD
	d SAPLING_SHAPE
	e MID_GROWTH_SHAPE
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V performBonemeal
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/item/ItemStack; getCloneItemStack
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;)V entityInside
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	e_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isRandomlyTicking
net/minecraft/world/level/block/BlockTNT net/minecraft/world/level/block/TntBlock
	a UNSTABLE
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/level/Explosion;)Z dropFromExplosion
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V explode
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/EntityLiving;)V explode
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/Explosion;)V wasExploded
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/player/EntityHuman;)V playerWillDestroy
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/phys/MovingObjectPositionBlock;Lnet/minecraft/world/entity/projectile/IProjectile;)V onProjectileHit
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;Z)V neighborChanged
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
net/minecraft/world/level/block/BlockTall net/minecraft/world/level/block/CrossCollisionBlock
	a NORTH
	b EAST
	c SOUTH
	d WEST
	e WATERLOGGED
	f PROPERTY_BY_DIRECTION
	g collisionShapeByIndex
	h shapeByIndex
	i stateToIndex
	a (FFFFF)[Lnet/minecraft/world/phys/shapes/VoxelShape; makeShapes
	a (Lnet/minecraft/core/EnumDirection;)I indexFor
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z propagatesSkylightDown
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getCollisionShape
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	g (Lnet/minecraft/world/level/block/state/IBlockData;)I getAABBIndex
net/minecraft/world/level/block/BlockTallPlant net/minecraft/world/level/block/DoublePlantBlock
	a HALF
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;I)V placeAt
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/state/IBlockData; copyWaterloggedFrom
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;)V setPlacedBy
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/player/EntityHuman;)V playerWillDestroy
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntity;Lnet/minecraft/world/item/ItemStack;)V playerDestroy
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;)J getSeed
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/player/EntityHuman;)V preventCreativeDropFromBottomPart
net/minecraft/world/level/block/BlockTallPlantFlower net/minecraft/world/level/block/TallFlowerBlock
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V performBonemeal
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/item/context/BlockActionContext;)Z canBeReplaced
net/minecraft/world/level/block/BlockTarget net/minecraft/world/level/block/TargetBlock
	a OUTPUT_POWER
	b ACTIVATION_TICKS_ARROWS
	c ACTIVATION_TICKS_OTHER
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/level/block/state/IBlockData;ILnet/minecraft/core/BlockPosition;I)V setOutputPower
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/phys/MovingObjectPositionBlock;Lnet/minecraft/world/entity/Entity;)I updateRedstoneOutput
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/phys/MovingObjectPositionBlock;Lnet/minecraft/world/entity/projectile/IProjectile;)V onProjectileHit
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getSignal
	a (Lnet/minecraft/world/phys/MovingObjectPositionBlock;Lnet/minecraft/world/phys/Vec3D;)I getRedstoneStrength
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
	f_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isSignalSource
net/minecraft/world/level/block/BlockTileEntity net/minecraft/world/level/block/BaseEntityBlock
	a (Lnet/minecraft/world/level/block/entity/TileEntityTypes;Lnet/minecraft/world/level/block/entity/TileEntityTypes;Lnet/minecraft/world/level/block/entity/BlockEntityTicker;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; createTickerHelper
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;II)Z triggerEvent
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/ITileInventory; getMenuProvider
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
net/minecraft/world/level/block/BlockTorch net/minecraft/world/level/block/TorchBlock
	g AABB_STANDING_OFFSET
	h AABB
	i flameParticle
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
net/minecraft/world/level/block/BlockTorchWall net/minecraft/world/level/block/WallTorchBlock
	a FACING
	b AABB_OFFSET
	c AABBS
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	h ()Ljava/lang/String; getDescriptionId
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
net/minecraft/world/level/block/BlockTrapdoor net/minecraft/world/level/block/TrapDoorBlock
	a OPEN
	b HALF
	c POWERED
	d WATERLOGGED
	e AABB_THICKNESS
	f EAST_OPEN_AABB
	g WEST_OPEN_AABB
	h SOUTH_OPEN_AABB
	i NORTH_OPEN_AABB
	j BOTTOM_AABB
	k TOP_AABB
	l type
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Z)V playSound
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;Z)V neighborChanged
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
net/minecraft/world/level/block/BlockTripwire net/minecraft/world/level/block/TripWireBlock
	a POWERED
	b ATTACHED
	c DISARMED
	d NORTH
	e EAST
	f SOUTH
	g WEST
	h AABB
	i NOT_ATTACHED_AABB
	j PROPERTY_BY_DIRECTION
	k RECHECK_PERIOD
	l hook
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V checkPressed
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V updateSource
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/player/EntityHuman;)V playerWillDestroy
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;)Z shouldConnectTo
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;)V entityInside
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onRemove
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
net/minecraft/world/level/block/BlockTripwireHook net/minecraft/world/level/block/TripWireHookBlock
	a FACING
	b POWERED
	c ATTACHED
	d WIRE_DIST_MIN
	e WIRE_DIST_MAX
	f AABB_OFFSET
	g NORTH_AABB
	h SOUTH_AABB
	i WEST_AABB
	j EAST_AABB
	k RECHECK_PERIOD
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)V notifyNeighbors
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;)V setPlacedBy
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;ZZILnet/minecraft/world/level/block/state/IBlockData;)V calculateState
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;ZZZZ)V emitState
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onRemove
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getDirectSignal
	f_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isSignalSource
net/minecraft/world/level/block/BlockTurtleEgg net/minecraft/world/level/block/TurtleEggBlock
	a MAX_HATCH_LEVEL
	b MIN_EGGS
	c MAX_EGGS
	d HATCH
	e EGGS
	f ONE_EGG_AABB
	g MULTIPLE_EGGS_AABB
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z onSand
	a (Lnet/minecraft/world/level/World;)Z shouldUpdateHatchLevel
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V decreaseEggs
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/Entity;)V stepOn
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/Entity;)Z canDestroyEgg
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntity;Lnet/minecraft/world/item/ItemStack;)V playerDestroy
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;F)V fallOn
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;I)V destroyEgg
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/item/context/BlockActionContext;)Z canBeReplaced
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	b (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z isSand
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
net/minecraft/world/level/block/BlockTwistingVines net/minecraft/world/level/block/TwistingVinesBlock
	f SHAPE
	a (Lnet/minecraft/util/RandomSource;)I getBlocksToGrowWhenBonemealed
	b ()Lnet/minecraft/world/level/block/Block; getBodyBlock
	g (Lnet/minecraft/world/level/block/state/IBlockData;)Z canGrowInto
net/minecraft/world/level/block/BlockTwistingVinesPlant net/minecraft/world/level/block/TwistingVinesPlantBlock
	d SHAPE
	c ()Lnet/minecraft/world/level/block/BlockGrowingTop; getHeadBlock
net/minecraft/world/level/block/BlockVine net/minecraft/world/level/block/VineBlock
	a UP
	b NORTH
	c EAST
	d SOUTH
	e WEST
	f PROPERTY_BY_DIRECTION
	g AABB_OFFSET
	h UP_AABB
	i WEST_AABB
	j EAST_AABB
	k NORTH_AABB
	l SOUTH_AABB
	m shapesCache
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/world/level/block/state/properties/BlockStateBoolean; getPropertyForFace
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z canSpread
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Z isAcceptableNeighbour
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/item/context/BlockActionContext;)Z canBeReplaced
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/block/state/IBlockData; copyRandomFaces
	b (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Z canSupportAtFace
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z propagatesSkylightDown
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/phys/shapes/VoxelShape; calculateShape
	i (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; getUpdatedState
	n (Lnet/minecraft/world/level/block/state/IBlockData;)Z hasFaces
	o (Lnet/minecraft/world/level/block/state/IBlockData;)I countFaces
	p (Lnet/minecraft/world/level/block/state/IBlockData;)Z hasHorizontalConnection
net/minecraft/world/level/block/BlockWallSign net/minecraft/world/level/block/WallSignBlock
	a FACING
	b AABB_THICKNESS
	c AABB_BOTTOM
	d AABB_TOP
	h AABBS
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	h ()Ljava/lang/String; getDescriptionId
net/minecraft/world/level/block/BlockWaterLily net/minecraft/world/level/block/WaterlilyBlock
	a AABB
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;)V entityInside
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z mayPlaceOn
net/minecraft/world/level/block/BlockWeb net/minecraft/world/level/block/WebBlock
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;)V entityInside
net/minecraft/world/level/block/BlockWeepingVines net/minecraft/world/level/block/WeepingVinesBlock
	f SHAPE
	a (Lnet/minecraft/util/RandomSource;)I getBlocksToGrowWhenBonemealed
	b ()Lnet/minecraft/world/level/block/Block; getBodyBlock
	g (Lnet/minecraft/world/level/block/state/IBlockData;)Z canGrowInto
net/minecraft/world/level/block/BlockWeepingVinesPlant net/minecraft/world/level/block/WeepingVinesPlantBlock
	d SHAPE
	c ()Lnet/minecraft/world/level/block/BlockGrowingTop; getHeadBlock
net/minecraft/world/level/block/BlockWetSponge net/minecraft/world/level/block/WetSpongeBlock
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
net/minecraft/world/level/block/BlockWitherRose net/minecraft/world/level/block/WitherRoseBlock
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;)V entityInside
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z mayPlaceOn
net/minecraft/world/level/block/BlockWitherSkull net/minecraft/world/level/block/WitherSkullBlock
	e witherPatternFull
	f witherPatternBase
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/entity/TileEntitySkull;)V checkSpawn
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;)V setPlacedBy
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/item/ItemStack;)Z canSpawnMob
	v ()Lnet/minecraft/world/level/block/state/pattern/ShapeDetector; getOrCreateWitherFull
	w ()Lnet/minecraft/world/level/block/state/pattern/ShapeDetector; getOrCreateWitherBase
net/minecraft/world/level/block/BlockWitherSkullWall net/minecraft/world/level/block/WitherWallSkullBlock
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;)V setPlacedBy
net/minecraft/world/level/block/BlockWorkbench net/minecraft/world/level/block/CraftingTableBlock
	a CONTAINER_TITLE
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/ITileInventory; getMenuProvider
net/minecraft/world/level/block/DoubleBlockFinder net/minecraft/world/level/block/DoubleBlockCombiner
	a (Lnet/minecraft/world/level/block/entity/TileEntityTypes;Ljava/util/function/Function;Ljava/util/function/Function;Lnet/minecraft/world/level/block/state/properties/BlockStateDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Ljava/util/function/BiPredicate;)Lnet/minecraft/world/level/block/DoubleBlockFinder$Result; combineWithNeigbour
net/minecraft/world/level/block/DoubleBlockFinder$BlockType net/minecraft/world/level/block/DoubleBlockCombiner$BlockType
	a SINGLE
	b FIRST
	c SECOND
	d $VALUES
	a ()[Lnet/minecraft/world/level/block/DoubleBlockFinder$BlockType; $values
net/minecraft/world/level/block/DoubleBlockFinder$Combiner net/minecraft/world/level/block/DoubleBlockCombiner$Combiner
	a (Ljava/lang/Object;)Ljava/lang/Object; acceptSingle
	a (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; acceptDouble
	b ()Ljava/lang/Object; acceptNone
net/minecraft/world/level/block/DoubleBlockFinder$Result net/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult
net/minecraft/world/level/block/DoubleBlockFinder$Result$Double net/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult$Double
	a first
	b second
net/minecraft/world/level/block/DoubleBlockFinder$Result$Single net/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult$Single
	a single
net/minecraft/world/level/block/EnumBlockMirror net/minecraft/world/level/block/Mirror
	a NONE
	b LEFT_RIGHT
	c FRONT_BACK
	d CODEC
	e id
	f symbol
	g rotation
	h $VALUES
	a ()Lcom/mojang/math/PointGroupO; rotation
	a (II)I mirror
	a (Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/world/level/block/EnumBlockRotation; getRotation
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; symbol
	b (Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/core/EnumDirection; mirror
	c ()Ljava/lang/String; getSerializedName
	d ()[Lnet/minecraft/world/level/block/EnumBlockMirror; $values
net/minecraft/world/level/block/EnumBlockRotation net/minecraft/world/level/block/Rotation
	a NONE
	b CLOCKWISE_90
	c CLOCKWISE_180
	d COUNTERCLOCKWISE_90
	e CODEC
	f id
	g rotation
	h $VALUES
	a ()Lcom/mojang/math/PointGroupO; rotation
	a (II)I rotate
	a (Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/core/EnumDirection; rotate
	a (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/block/EnumBlockRotation; getRandom
	a (Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/EnumBlockRotation; getRotated
	b ()[Lnet/minecraft/world/level/block/EnumBlockRotation; $values
	b (Lnet/minecraft/util/RandomSource;)Ljava/util/List; getShuffled
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/level/block/EnumBlockSupport net/minecraft/world/level/block/SupportType
	a FULL
	b CENTER
	c RIGID
	d $VALUES
	a ()[Lnet/minecraft/world/level/block/EnumBlockSupport; $values
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Z isSupporting
net/minecraft/world/level/block/EnumRenderType net/minecraft/world/level/block/RenderShape
	a INVISIBLE
	b ENTITYBLOCK_ANIMATED
	c MODEL
	d $VALUES
	a ()[Lnet/minecraft/world/level/block/EnumRenderType; $values
net/minecraft/world/level/block/IBeaconBeam net/minecraft/world/level/block/BeaconBeamBlock
	a ()Lnet/minecraft/world/item/EnumColor; getColor
net/minecraft/world/level/block/IBlockFragilePlantElement net/minecraft/world/level/block/BonemealableBlock
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V performBonemeal
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isBonemealSuccess
net/minecraft/world/level/block/IBlockWaterlogged net/minecraft/world/level/block/SimpleWaterloggedBlock
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/Fluid;)Z placeLiquid
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/FluidType;)Z canPlaceLiquid
	an_ ()Ljava/util/Optional; getPickupSound
	c (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/item/ItemStack; pickupBlock
net/minecraft/world/level/block/IFluidContainer net/minecraft/world/level/block/LiquidBlockContainer
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/Fluid;)Z placeLiquid
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/FluidType;)Z canPlaceLiquid
net/minecraft/world/level/block/IFluidSource net/minecraft/world/level/block/BucketPickup
	an_ ()Ljava/util/Optional; getPickupSound
	c (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/item/ItemStack; pickupBlock
net/minecraft/world/level/block/ITileEntity net/minecraft/world/level/block/EntityBlock
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/block/entity/TileEntity;)Lnet/minecraft/world/level/gameevent/GameEventListener; getListener
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; getTicker
net/minecraft/world/level/block/MinecartTrackLogic net/minecraft/world/level/block/RailState
	a level
	b pos
	c block
	d state
	e isStraight
	f connections
	a ()Ljava/util/List; getConnections
	a (Lnet/minecraft/core/BlockPosition;)Z hasRail
	a (Lnet/minecraft/world/level/block/MinecartTrackLogic;)Z connectsTo
	a (Lnet/minecraft/world/level/block/state/properties/BlockPropertyTrackPosition;)V updateConnections
	a (ZZLnet/minecraft/world/level/block/state/properties/BlockPropertyTrackPosition;)Lnet/minecraft/world/level/block/MinecartTrackLogic; place
	b ()I countPotentialConnections
	b (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/MinecartTrackLogic; getRail
	b (Lnet/minecraft/world/level/block/MinecartTrackLogic;)Z canConnectTo
	c ()Lnet/minecraft/world/level/block/state/IBlockData; getState
	c (Lnet/minecraft/core/BlockPosition;)Z hasConnection
	c (Lnet/minecraft/world/level/block/MinecartTrackLogic;)V connectTo
	d ()V removeSoftConnections
	d (Lnet/minecraft/core/BlockPosition;)Z hasNeighborRail
net/minecraft/world/level/block/SoundEffectType net/minecraft/world/level/block/SoundType
	A STEM
	B NYLIUM
	C FUNGUS
	D ROOTS
	E SHROOMLIGHT
	F WEEPING_VINES
	G TWISTING_VINES
	H SOUL_SAND
	I SOUL_SOIL
	J BASALT
	K WART_BLOCK
	L NETHERRACK
	M NETHER_BRICKS
	N NETHER_SPROUTS
	O NETHER_ORE
	P BONE_BLOCK
	Q NETHERITE_BLOCK
	R ANCIENT_DEBRIS
	S LODESTONE
	T CHAIN
	U NETHER_GOLD_ORE
	V GILDED_BLACKSTONE
	W CANDLE
	X AMETHYST
	Y AMETHYST_CLUSTER
	Z SMALL_AMETHYST_BUD
	a WOOD
	aA DEEPSLATE_BRICKS
	aB DEEPSLATE_TILES
	aC POLISHED_DEEPSLATE
	aD FROGLIGHT
	aE FROGSPAWN
	aF MANGROVE_ROOTS
	aG MUDDY_MANGROVE_ROOTS
	aH MUD
	aI MUD_BRICKS
	aJ PACKED_MUD
	aK HANGING_SIGN
	aL NETHER_WOOD_HANGING_SIGN
	aM BAMBOO_WOOD_HANGING_SIGN
	aN BAMBOO_WOOD
	aO NETHER_WOOD
	aP CHERRY_WOOD
	aQ CHERRY_SAPLING
	aR CHERRY_LEAVES
	aS CHERRY_WOOD_HANGING_SIGN
	aT CHISELED_BOOKSHELF
	aU SUSPICIOUS_SAND
	aV DECORATED_POT
	aW volume
	aX pitch
	aY breakSound
	aZ stepSound
	aa MEDIUM_AMETHYST_BUD
	ab LARGE_AMETHYST_BUD
	ac TUFF
	ad CALCITE
	ae DRIPSTONE_BLOCK
	af POINTED_DRIPSTONE
	ag COPPER
	ah CAVE_VINES
	ai SPORE_BLOSSOM
	aj AZALEA
	ak FLOWERING_AZALEA
	al MOSS_CARPET
	am PINK_PETALS
	an MOSS
	ao BIG_DRIPLEAF
	ap SMALL_DRIPLEAF
	aq ROOTED_DIRT
	ar HANGING_ROOTS
	as AZALEA_LEAVES
	at SCULK_SENSOR
	au SCULK_CATALYST
	av SCULK
	aw SCULK_VEIN
	ax SCULK_SHRIEKER
	ay GLOW_LICHEN
	az DEEPSLATE
	b GRAVEL
	ba placeSound
	bb hitSound
	bc fallSound
	c GRASS
	d LILY_PAD
	e STONE
	f METAL
	g GLASS
	h WOOL
	i SAND
	j SNOW
	k POWDER_SNOW
	l LADDER
	m ANVIL
	n SLIME_BLOCK
	o HONEY_BLOCK
	p WET_GRASS
	q CORAL_BLOCK
	r BAMBOO
	s BAMBOO_SAPLING
	t SCAFFOLDING
	u SWEET_BERRY_BUSH
	v CROP
	w HARD_CROP
	x VINE
	y NETHER_WART
	z LANTERN
	a ()F getVolume
	b ()F getPitch
	c ()Lnet/minecraft/sounds/SoundEffect; getBreakSound
	d ()Lnet/minecraft/sounds/SoundEffect; getStepSound
	e ()Lnet/minecraft/sounds/SoundEffect; getPlaceSound
	f ()Lnet/minecraft/sounds/SoundEffect; getHitSound
	g ()Lnet/minecraft/sounds/SoundEffect; getFallSound
net/minecraft/world/level/block/entity/EnumBannerPatternType net/minecraft/world/level/block/entity/BannerPattern
	a hashname
	a ()Ljava/lang/String; getHashname
	a (Ljava/lang/String;)Lnet/minecraft/core/Holder; byHash
	a (Lnet/minecraft/resources/ResourceKey;Z)Lnet/minecraft/resources/MinecraftKey; location
net/minecraft/world/level/block/entity/IHopper net/minecraft/world/level/block/entity/Hopper
	c INSIDE
	v_ ABOVE
	w_ SUCK
	F ()D getLevelX
	G ()D getLevelY
	I ()D getLevelZ
	as_ ()Lnet/minecraft/world/phys/shapes/VoxelShape; getSuckShape
net/minecraft/world/level/block/entity/TileEntity net/minecraft/world/level/block/entity/BlockEntity
	c LOGGER
	d type
	e blockState
	o level
	p worldPosition
	q remove
	a (Lnet/minecraft/CrashReportSystemDetails;)V fillCrashReportCategory
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/level/block/entity/TileEntity; loadStatic
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/nbt/NBTTagCompound;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)V addEntityType
	a (Lnet/minecraft/world/level/World;)V setLevel
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V setChanged
	a_ (II)Z triggerEvent
	aq_ ()Lnet/minecraft/nbt/NBTTagCompound; getUpdateTag
	ar_ ()V setRemoved
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
	b (Lnet/minecraft/world/level/block/state/IBlockData;)V setBlockState
	c (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/core/BlockPosition; getPosFromTag
	d (Lnet/minecraft/nbt/NBTTagCompound;)V saveId
	e ()V setChanged
	e (Lnet/minecraft/nbt/NBTTagCompound;)V saveMetadata
	e (Lnet/minecraft/world/item/ItemStack;)V saveToItem
	h ()Lnet/minecraft/network/protocol/Packet; getUpdatePacket
	k ()Lnet/minecraft/world/level/World; getLevel
	l ()Z hasLevel
	m ()Lnet/minecraft/nbt/NBTTagCompound; saveWithFullMetadata
	n ()Lnet/minecraft/nbt/NBTTagCompound; saveWithId
	o ()Lnet/minecraft/nbt/NBTTagCompound; saveWithoutMetadata
	p ()Lnet/minecraft/core/BlockPosition; getBlockPos
	q ()Lnet/minecraft/world/level/block/state/IBlockData; getBlockState
	r ()Z isRemoved
	s ()V clearRemoved
	t ()Z onlyOpCanSetNbt
	u ()Lnet/minecraft/world/level/block/entity/TileEntityTypes; getType
net/minecraft/world/level/block/entity/TileEntityBanner net/minecraft/world/level/block/entity/BannerBlockEntity
	a MAX_PATTERNS
	b TAG_PATTERNS
	c TAG_PATTERN
	d TAG_COLOR
	e name
	f baseColor
	g itemPatterns
	h patterns
	Z ()Lnet/minecraft/network/chat/IChatBaseComponent; getName
	a ()Lnet/minecraft/network/protocol/game/PacketPlayOutTileEntityData; getUpdatePacket
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V setCustomName
	a (Lnet/minecraft/world/item/EnumColor;Lnet/minecraft/nbt/NBTTagList;)Ljava/util/List; createPatterns
	a (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/nbt/NBTTagList; getItemPatterns
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/EnumColor;)V fromItem
	ab ()Lnet/minecraft/network/chat/IChatBaseComponent; getCustomName
	aq_ ()Lnet/minecraft/nbt/NBTTagCompound; getUpdateTag
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
	b (Lnet/minecraft/world/item/ItemStack;)V fromItem
	c ()Ljava/util/List; getPatterns
	c (Lnet/minecraft/world/item/ItemStack;)I getPatternCount
	d (Lnet/minecraft/world/item/ItemStack;)V removeLastPattern
	f ()Lnet/minecraft/world/item/ItemStack; getItem
	g ()Lnet/minecraft/world/item/EnumColor; getBaseColor
	h ()Lnet/minecraft/network/protocol/Packet; getUpdatePacket
net/minecraft/world/level/block/entity/TileEntityBarrel net/minecraft/world/level/block/entity/BarrelBlockEntity
	c items
	f openersCounter
	a (ILnet/minecraft/world/entity/player/PlayerInventory;)Lnet/minecraft/world/inventory/Container; createMenu
	a (Lnet/minecraft/core/NonNullList;)V setItems
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/sounds/SoundEffect;)V playSound
	a (Lnet/minecraft/world/level/block/state/IBlockData;Z)V updateBlockState
	b ()I getContainerSize
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
	c (Lnet/minecraft/world/entity/player/EntityHuman;)V stopOpen
	d_ (Lnet/minecraft/world/entity/player/EntityHuman;)V startOpen
	f ()Lnet/minecraft/core/NonNullList; getItems
	g ()Lnet/minecraft/network/chat/IChatBaseComponent; getDefaultName
	i ()V recheckOpen
net/minecraft/world/level/block/entity/TileEntityBeacon net/minecraft/world/level/block/entity/BeaconBlockEntity
	a BEACON_EFFECTS
	b DATA_LEVELS
	c DATA_PRIMARY
	d DATA_SECONDARY
	e NUM_DATA_VALUES
	f MAX_LEVELS
	g VALID_EFFECTS
	h BLOCKS_CHECK_PER_TICK
	i DEFAULT_NAME
	j beamSections
	k checkingBeamSections
	l levels
	m lastCheckY
	n primaryPower
	r secondaryPower
	s name
	t lockKey
	u dataAccess
	G_ ()Lnet/minecraft/network/chat/IChatBaseComponent; getDisplayName
	Z ()Lnet/minecraft/network/chat/IChatBaseComponent; getName
	a (I)Lnet/minecraft/world/effect/MobEffectList; getValidEffectById
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V setCustomName
	a (Lnet/minecraft/world/level/World;)V setLevel
	a (Lnet/minecraft/world/level/World;III)I updateBase
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;ILnet/minecraft/world/effect/MobEffectList;Lnet/minecraft/world/effect/MobEffectList;)V applyEffects
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/sounds/SoundEffect;)V playSound
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityBeacon;)V tick
	ab ()Lnet/minecraft/network/chat/IChatBaseComponent; getCustomName
	aq_ ()Lnet/minecraft/nbt/NBTTagCompound; getUpdateTag
	ar_ ()V setRemoved
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
	c ()Ljava/util/List; getBeamSections
	f ()Lnet/minecraft/network/protocol/game/PacketPlayOutTileEntityData; getUpdatePacket
	h ()Lnet/minecraft/network/protocol/Packet; getUpdatePacket
net/minecraft/world/level/block/entity/TileEntityBeacon$BeaconColorTracker net/minecraft/world/level/block/entity/BeaconBlockEntity$BeaconBeamSection
	a color
	b height
	a ()V increaseHeight
	b ()[F getColor
	c ()I getHeight
net/minecraft/world/level/block/entity/TileEntityBed net/minecraft/world/level/block/entity/BedBlockEntity
	a color
	a (Lnet/minecraft/world/item/EnumColor;)V setColor
	c ()Lnet/minecraft/network/protocol/game/PacketPlayOutTileEntityData; getUpdatePacket
	d ()Lnet/minecraft/world/item/EnumColor; getColor
	h ()Lnet/minecraft/network/protocol/Packet; getUpdatePacket
net/minecraft/world/level/block/entity/TileEntityBeehive net/minecraft/world/level/block/entity/BeehiveBlockEntity
	a TAG_FLOWER_POS
	b MIN_OCCUPATION_TICKS
	c ENTITY_DATA
	d TICKS_IN_HIVE
	e HAS_NECTAR
	f BEES
	g MAX_OCCUPANTS
	h MIN_OCCUPATION_TICKS_NECTARLESS
	i IGNORED_BEE_TAGS
	j MIN_TICKS_BEFORE_REENTERING_HIVE
	k MIN_OCCUPATION_TICKS_NECTAR
	l stored
	m savedFlowerPos
	a (ILnet/minecraft/world/entity/animal/EntityBee;)V setBeeReleaseData
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/nbt/NBTTagCompound;IZ)V storeBee
	a (Lnet/minecraft/world/entity/Entity;Z)V addOccupant
	a (Lnet/minecraft/world/entity/Entity;ZI)V addOccupantWithPresetTicks
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityBeehive$ReleaseStatus;)V emptyAllLivingFromHive
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Ljava/util/List;Lnet/minecraft/core/BlockPosition;)V tickOccupants
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityBeehive$HiveBee;Ljava/util/List;Lnet/minecraft/world/level/block/entity/TileEntityBeehive$ReleaseStatus;Lnet/minecraft/core/BlockPosition;)Z releaseOccupant
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityBeehive;)V serverTick
	a (Lnet/minecraft/world/level/block/state/IBlockData;)I getHoneyLevel
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityBeehive$ReleaseStatus;)Ljava/util/List; releaseAllOccupants
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
	c ()Z isFireNearby
	d ()Z isEmpty
	d (Lnet/minecraft/nbt/NBTTagCompound;)V removeIgnoredBeeTags
	e ()V setChanged
	f ()Z isFull
	g ()I getOccupantCount
	i ()Z isSedated
	j ()Lnet/minecraft/nbt/NBTTagList; writeBees
	v ()Z hasSavedFlowerPos
net/minecraft/world/level/block/entity/TileEntityBeehive$HiveBee net/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeData
	a entityData
	b ticksInHive
	c minOccupationTicks
net/minecraft/world/level/block/entity/TileEntityBeehive$ReleaseStatus net/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeReleaseStatus
	a HONEY_DELIVERED
	b BEE_RELEASED
	c EMERGENCY
	d $VALUES
	a ()[Lnet/minecraft/world/level/block/entity/TileEntityBeehive$ReleaseStatus; $values
net/minecraft/world/level/block/entity/TileEntityBell net/minecraft/world/level/block/entity/BellBlockEntity
	a ticks
	b shaking
	c clickDirection
	d DURATION
	e GLOW_DURATION
	f MIN_TICKS_BETWEEN_SEARCHES
	g MAX_RESONATION_TICKS
	h TICKS_BEFORE_RESONATION
	i SEARCH_RADIUS
	j HEAR_BELL_RADIUS
	k HIGHLIGHT_RAIDERS_RADIUS
	l lastRingTimestamp
	m nearbyEntities
	n resonating
	r resonationTicks
	a (Lnet/minecraft/core/BlockPosition;Ljava/util/List;)Z areRaidersNearby
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/EntityLiving;)Z isRaiderWithinRange
	a (Lnet/minecraft/core/EnumDirection;)V onHit
	a (Lnet/minecraft/world/entity/EntityLiving;)V glow
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Ljava/util/List;)V makeRaidersGlow
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityBell;)V clientTick
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityBell;Lczc$a;)V tick
	a_ (II)Z triggerEvent
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Ljava/util/List;)V showBellParticles
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityBell;)V serverTick
	c ()V updateEntities
net/minecraft/world/level/block/entity/TileEntityBlastFurnace net/minecraft/world/level/block/entity/BlastFurnaceBlockEntity
	a (ILnet/minecraft/world/entity/player/PlayerInventory;)Lnet/minecraft/world/inventory/Container; createMenu
	a (Lnet/minecraft/world/item/ItemStack;)I getBurnDuration
	g ()Lnet/minecraft/network/chat/IChatBaseComponent; getDefaultName
net/minecraft/world/level/block/entity/TileEntityBrewingStand net/minecraft/world/level/block/entity/BrewingStandBlockEntity
	c FUEL_USES
	d DATA_BREW_TIME
	e DATA_FUEL_USES
	f NUM_DATA_VALUES
	g dataAccess
	h INGREDIENT_SLOT
	i FUEL_SLOT
	j SLOTS_FOR_UP
	k SLOTS_FOR_DOWN
	l SLOTS_FOR_SIDES
	m items
	n brewTime
	r lastPotionCount
	s ingredient
	t fuel
	a ()V clearContent
	a (I)Lnet/minecraft/world/item/ItemStack; getItem
	a (II)Lnet/minecraft/world/item/ItemStack; removeItem
	a (ILnet/minecraft/world/entity/player/PlayerInventory;)Lnet/minecraft/world/inventory/Container; createMenu
	a (ILnet/minecraft/world/item/ItemStack;)V setItem
	a (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/EnumDirection;)Z canPlaceItemThroughFace
	a (Lnet/minecraft/core/EnumDirection;)[I getSlotsForFace
	a (Lnet/minecraft/core/NonNullList;)Z isBrewable
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/NonNullList;)V doBrew
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityBrewingStand;)V serverTick
	aa_ ()Z isEmpty
	b ()I getContainerSize
	b (I)Lnet/minecraft/world/item/ItemStack; removeItemNoUpdate
	b (ILnet/minecraft/world/item/ItemStack;)Z canPlaceItem
	b (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/EnumDirection;)Z canTakeItemThroughFace
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
	f ()[Z getPotionBits
	g ()Lnet/minecraft/network/chat/IChatBaseComponent; getDefaultName
net/minecraft/world/level/block/entity/TileEntityCampfire net/minecraft/world/level/block/entity/CampfireBlockEntity
	a BURN_COOL_SPEED
	b NUM_SLOTS
	c items
	d cookingProgress
	e cookingTime
	f quickCheck
	a ()V clearContent
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/item/ItemStack;I)Z placeFood
	a (Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; getCookableRecipe
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityCampfire;)V cookTick
	aq_ ()Lnet/minecraft/nbt/NBTTagCompound; getUpdateTag
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityCampfire;)V cooldownTick
	c ()Lnet/minecraft/core/NonNullList; getItems
	c (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityCampfire;)V particleTick
	d ()Lnet/minecraft/network/protocol/game/PacketPlayOutTileEntityData; getUpdatePacket
	f ()V dowse
	g ()V markUpdated
	h ()Lnet/minecraft/network/protocol/Packet; getUpdatePacket
net/minecraft/world/level/block/entity/TileEntityChest net/minecraft/world/level/block/entity/ChestBlockEntity
	c EVENT_SET_OPEN_COUNT
	f items
	g openersCounter
	j chestLidController
	a (F)F getOpenNess
	a (ILnet/minecraft/world/entity/player/PlayerInventory;)Lnet/minecraft/world/inventory/Container; createMenu
	a (Lnet/minecraft/core/NonNullList;)V setItems
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)I getOpenCount
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;II)V signalOpenCount
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/sounds/SoundEffect;)V playSound
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityChest;)V lidAnimateTick
	a (Lnet/minecraft/world/level/block/entity/TileEntityChest;Lnet/minecraft/world/level/block/entity/TileEntityChest;)V swapContents
	a_ (II)Z triggerEvent
	b ()I getContainerSize
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
	c (Lnet/minecraft/world/entity/player/EntityHuman;)V stopOpen
	d_ (Lnet/minecraft/world/entity/player/EntityHuman;)V startOpen
	f ()Lnet/minecraft/core/NonNullList; getItems
	g ()Lnet/minecraft/network/chat/IChatBaseComponent; getDefaultName
	i ()V recheckOpen
net/minecraft/world/level/block/entity/TileEntityChestTrapped net/minecraft/world/level/block/entity/TrappedChestBlockEntity
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;II)V signalOpenCount
net/minecraft/world/level/block/entity/TileEntityCommand net/minecraft/world/level/block/entity/CommandBlockEntity
	a powered
	b auto
	c conditionMet
	d commandBlock
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Z)V setPowered
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
	b (Z)V setAutomatic
	c ()Lnet/minecraft/world/level/CommandBlockListenerAbstract; getCommandBlock
	d ()Z isPowered
	f ()Z isAutomatic
	g ()V onModeSwitch
	i ()Z wasConditionMet
	j ()Z markConditionMet
	t ()Z onlyOpCanSetNbt
	v ()Lnet/minecraft/world/level/block/entity/TileEntityCommand$Type; getMode
	w ()Z isConditional
	x ()V scheduleTick
net/minecraft/world/level/block/entity/TileEntityCommand$Type net/minecraft/world/level/block/entity/CommandBlockEntity$Mode
	a SEQUENCE
	b AUTO
	c REDSTONE
	d $VALUES
	a ()[Lnet/minecraft/world/level/block/entity/TileEntityCommand$Type; $values
net/minecraft/world/level/block/entity/TileEntityComparator net/minecraft/world/level/block/entity/ComparatorBlockEntity
	a output
	a (I)V setOutputSignal
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
	c ()I getOutputSignal
net/minecraft/world/level/block/entity/TileEntityConduit net/minecraft/world/level/block/entity/ConduitBlockEntity
	a tickCount
	b BLOCK_REFRESH_RATE
	c EFFECT_DURATION
	d ROTATION_SPEED
	e MIN_ACTIVE_SIZE
	f MIN_KILL_SIZE
	g KILL_RANGE
	h VALID_BLOCKS
	i activeRotation
	j isActive
	k isHunting
	l effectBlocks
	m destroyTarget
	n destroyTargetUUID
	r nextAmbientSoundActivation
	a (F)F getActiveRotation
	a (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/AxisAlignedBB; getDestroyRangeAABB
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Ljava/util/List;)Z updateShape
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Ljava/util/List;Lnet/minecraft/world/entity/Entity;I)V animationTick
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Ljava/util/UUID;)Lnet/minecraft/world/entity/EntityLiving; findDestroyTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/entity/TileEntityConduit;)V updateClientTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Ljava/util/List;Lnet/minecraft/world/level/block/entity/TileEntityConduit;)V updateDestroyTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityConduit;)V clientTick
	a (Lnet/minecraft/world/level/block/entity/TileEntityConduit;Ljava/util/List;)V updateHunting
	a (Z)V setHunting
	aq_ ()Lnet/minecraft/nbt/NBTTagCompound; getUpdateTag
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Ljava/util/List;)V applyEffects
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityConduit;)V serverTick
	c ()Lnet/minecraft/network/protocol/game/PacketPlayOutTileEntityData; getUpdatePacket
	d ()Z isActive
	f ()Z isHunting
	h ()Lnet/minecraft/network/protocol/Packet; getUpdatePacket
net/minecraft/world/level/block/entity/TileEntityContainer net/minecraft/world/level/block/entity/BaseContainerBlockEntity
	c lockKey
	d name
	G_ ()Lnet/minecraft/network/chat/IChatBaseComponent; getDisplayName
	Z ()Lnet/minecraft/network/chat/IChatBaseComponent; getName
	a (ILnet/minecraft/world/entity/player/PlayerInventory;)Lnet/minecraft/world/inventory/Container; createMenu
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V setCustomName
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/ChestLock;Lnet/minecraft/network/chat/IChatBaseComponent;)Z canUnlock
	ab ()Lnet/minecraft/network/chat/IChatBaseComponent; getCustomName
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
	d (Lnet/minecraft/world/entity/player/EntityHuman;)Z canOpen
	g ()Lnet/minecraft/network/chat/IChatBaseComponent; getDefaultName
net/minecraft/world/level/block/entity/TileEntityDispenser net/minecraft/world/level/block/entity/DispenserBlockEntity
	c CONTAINER_SIZE
	f items
	a (ILnet/minecraft/world/entity/player/PlayerInventory;)Lnet/minecraft/world/inventory/Container; createMenu
	a (Lnet/minecraft/core/NonNullList;)V setItems
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/util/RandomSource;)I getRandomSlot
	a (Lnet/minecraft/world/item/ItemStack;)I addItem
	b ()I getContainerSize
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
	f ()Lnet/minecraft/core/NonNullList; getItems
	g ()Lnet/minecraft/network/chat/IChatBaseComponent; getDefaultName
net/minecraft/world/level/block/entity/TileEntityDropper net/minecraft/world/level/block/entity/DropperBlockEntity
	g ()Lnet/minecraft/network/chat/IChatBaseComponent; getDefaultName
net/minecraft/world/level/block/entity/TileEntityEnchantTable net/minecraft/world/level/block/entity/EnchantmentTableBlockEntity
	a time
	b flip
	c oFlip
	d flipT
	e flipA
	f open
	g oOpen
	h rot
	i oRot
	j tRot
	k RANDOM
	l name
	Z ()Lnet/minecraft/network/chat/IChatBaseComponent; getName
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V setCustomName
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityEnchantTable;)V bookAnimationTick
	ab ()Lnet/minecraft/network/chat/IChatBaseComponent; getCustomName
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
net/minecraft/world/level/block/entity/TileEntityEndGateway net/minecraft/world/level/block/entity/TheEndGatewayBlockEntity
	a LOGGER
	b SPAWN_TIME
	c COOLDOWN_TIME
	d ATTENTION_INTERVAL
	e EVENT_COOLDOWN
	f GATEWAY_HEIGHT_ABOVE_SURFACE
	g age
	h teleportCooldown
	i exitPortal
	j exactTeleport
	a (F)F getSpawnPercent
	a (Lnet/minecraft/core/BlockPosition;Z)V setExitPosition
	a (Lnet/minecraft/core/EnumDirection;)Z shouldRenderFace
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/core/BlockPosition; findOrCreateValidTeleportPos
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenEndGatewayConfiguration;)V spawnGatewayPortal
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/phys/Vec3D;)Z isChunkEmpty
	a (Lnet/minecraft/world/entity/Entity;)Z canEntityTeleport
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;IZ)Lnet/minecraft/core/BlockPosition; findTallestBlock
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/core/BlockPosition; findExitPosition
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/block/entity/TileEntityEndGateway;)V teleportEntity
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityEndGateway;)V beamAnimationTick
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/level/chunk/Chunk; getChunk
	a (Lnet/minecraft/world/level/chunk/Chunk;)Lnet/minecraft/core/BlockPosition; findValidSpawnInChunk
	a_ (II)Z triggerEvent
	aq_ ()Lnet/minecraft/nbt/NBTTagCompound; getUpdateTag
	b (F)F getCooldownPercent
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/Vec3D; findExitPortalXZPosTentative
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityEndGateway;)V teleportTick
	c ()Z isSpawning
	c (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityEndGateway;)V triggerCooldown
	d ()Z isCoolingDown
	f ()Lnet/minecraft/network/protocol/game/PacketPlayOutTileEntityData; getUpdatePacket
	g ()I getParticleAmount
	h ()Lnet/minecraft/network/protocol/Packet; getUpdatePacket
net/minecraft/world/level/block/entity/TileEntityEnderChest net/minecraft/world/level/block/entity/EnderChestBlockEntity
	a chestLidController
	b openersCounter
	a (F)F getOpenNess
	a (Lnet/minecraft/world/entity/player/EntityHuman;)V startOpen
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityEnderChest;)V lidAnimateTick
	a_ (II)Z triggerEvent
	b (Lnet/minecraft/world/entity/player/EntityHuman;)V stopOpen
	c ()V recheckOpen
	c (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
net/minecraft/world/level/block/entity/TileEntityEnderPortal net/minecraft/world/level/block/entity/TheEndPortalBlockEntity
	a (Lnet/minecraft/core/EnumDirection;)Z shouldRenderFace
net/minecraft/world/level/block/entity/TileEntityFurnace net/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity
	c SLOT_INPUT
	d SLOT_FUEL
	e SLOT_RESULT
	f DATA_LIT_TIME
	g DATA_LIT_DURATION
	h DATA_COOKING_PROGRESS
	i DATA_COOKING_TOTAL_TIME
	j NUM_DATA_VALUES
	k BURN_TIME_STANDARD
	l BURN_COOL_SPEED
	m items
	n dataAccess
	r SLOTS_FOR_UP
	s SLOTS_FOR_DOWN
	t SLOTS_FOR_SIDES
	u litTime
	v litDuration
	w cookingProgress
	x cookingTotalTime
	y recipesUsed
	z quickCheck
	a ()V clearContent
	a (I)Lnet/minecraft/world/item/ItemStack; getItem
	a (II)Lnet/minecraft/world/item/ItemStack; removeItem
	a (ILnet/minecraft/world/item/ItemStack;)V setItem
	a (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/EnumDirection;)Z canPlaceItemThroughFace
	a (Ljava/util/Map;Lnet/minecraft/tags/TagKey;I)V add
	a (Ljava/util/Map;Lnet/minecraft/world/level/IMaterial;I)V add
	a (Lnet/minecraft/core/EnumDirection;)[I getSlotsForFace
	a (Lnet/minecraft/core/IRegistryCustom;Lnet/minecraft/world/item/crafting/IRecipe;Lnet/minecraft/core/NonNullList;I)Z canBurn
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/server/level/EntityPlayer;)V awardUsedRecipesAndPopExperience
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/phys/Vec3D;)Ljava/util/List; getRecipesToAwardAndPopExperience
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/phys/Vec3D;IF)V createExperience
	a (Lnet/minecraft/world/entity/player/AutoRecipeStackManager;)V fillStackedContents
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	a (Lnet/minecraft/world/item/ItemStack;)I getBurnDuration
	a (Lnet/minecraft/world/item/crafting/IRecipe;)V setRecipeUsed
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityFurnace;)V serverTick
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/entity/TileEntityFurnace;)I getTotalCookTime
	aa_ ()Z isEmpty
	b ()I getContainerSize
	b (I)Lnet/minecraft/world/item/ItemStack; removeItemNoUpdate
	b (ILnet/minecraft/world/item/ItemStack;)Z canPlaceItem
	b (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/EnumDirection;)Z canTakeItemThroughFace
	b (Lnet/minecraft/core/IRegistryCustom;Lnet/minecraft/world/item/crafting/IRecipe;Lnet/minecraft/core/NonNullList;I)Z burn
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
	b (Lnet/minecraft/world/entity/player/EntityHuman;)V awardUsedRecipes
	b (Lnet/minecraft/world/item/Item;)Z isNeverAFurnaceFuel
	b (Lnet/minecraft/world/item/ItemStack;)Z isFuel
	d ()Lnet/minecraft/world/item/crafting/IRecipe; getRecipeUsed
	f ()Ljava/util/Map; getFuel
	i ()Z isLit
net/minecraft/world/level/block/entity/TileEntityFurnaceFurnace net/minecraft/world/level/block/entity/FurnaceBlockEntity
	a (ILnet/minecraft/world/entity/player/PlayerInventory;)Lnet/minecraft/world/inventory/Container; createMenu
	g ()Lnet/minecraft/network/chat/IChatBaseComponent; getDefaultName
net/minecraft/world/level/block/entity/TileEntityHopper net/minecraft/world/level/block/entity/HopperBlockEntity
	f MOVE_ITEM_SPEED
	g HOPPER_CONTAINER_SIZE
	j items
	k cooldownTime
	l tickedGameTime
	F ()D getLevelX
	G ()D getLevelY
	I ()D getLevelZ
	a (II)Lnet/minecraft/world/item/ItemStack; removeItem
	a (ILnet/minecraft/world/entity/player/PlayerInventory;)Lnet/minecraft/world/inventory/Container; createMenu
	a (ILnet/minecraft/world/item/ItemStack;)V setItem
	a (Lnet/minecraft/core/NonNullList;)V setItems
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/core/EnumDirection;)Ljava/util/stream/IntStream; getSlots
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/world/IInventory;Lnet/minecraft/world/item/ItemStack;ILnet/minecraft/core/EnumDirection;)Z canTakeItemFromContainer
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/world/IInventory;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/world/item/ItemStack; addItem
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/world/entity/item/EntityItem;)Z addItem
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/world/item/ItemStack;ILnet/minecraft/core/EnumDirection;)Z canPlaceItemInContainer
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z canMergeItems
	a (Lnet/minecraft/world/level/World;DDD)Lnet/minecraft/world/IInventory; getContainerAt
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/IInventory; getContainerAt
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/IInventory;)Z ejectItems
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/block/entity/TileEntityHopper;)V entityInside
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityHopper;)V pushItemsTick
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityHopper;Ljava/util/function/BooleanSupplier;)Z tryMoveItems
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/entity/IHopper;)Z suckInItems
	a (Lnet/minecraft/world/level/block/entity/IHopper;Lnet/minecraft/world/IInventory;ILnet/minecraft/core/EnumDirection;)Z tryTakeInItemFromSlot
	b ()I getContainerSize
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
	b (Lnet/minecraft/world/IInventory;Lnet/minecraft/core/EnumDirection;)Z isFullContainer
	b (Lnet/minecraft/world/IInventory;Lnet/minecraft/world/IInventory;Lnet/minecraft/world/item/ItemStack;ILnet/minecraft/core/EnumDirection;)Lnet/minecraft/world/item/ItemStack; tryMoveInItem
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/IInventory; getAttachedContainer
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/entity/IHopper;)Ljava/util/List; getItemsAtAndAbove
	c (I)V setCooldown
	c (Lnet/minecraft/world/IInventory;Lnet/minecraft/core/EnumDirection;)Z isEmptyContainer
	c (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/entity/IHopper;)Lnet/minecraft/world/IInventory; getSourceContainer
	f ()Lnet/minecraft/core/NonNullList; getItems
	g ()Lnet/minecraft/network/chat/IChatBaseComponent; getDefaultName
	i ()Z inventoryFull
	j ()Z isOnCooldown
	v ()Z isOnCustomCooldown
net/minecraft/world/level/block/entity/TileEntityJigsaw net/minecraft/world/level/block/entity/JigsawBlockEntity
	a TARGET
	b POOL
	c JOINT
	d NAME
	e FINAL_STATE
	f name
	g target
	h pool
	i joint
	j finalState
	a (Ljava/lang/String;)V setFinalState
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/resources/MinecraftKey;)V setName
	a (Lnet/minecraft/resources/ResourceKey;)V setPool
	a (Lnet/minecraft/server/level/WorldServer;IZ)V generate
	a (Lnet/minecraft/world/level/block/entity/TileEntityJigsaw$JointType;)V setJoint
	aq_ ()Lnet/minecraft/nbt/NBTTagCompound; getUpdateTag
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
	b (Lnet/minecraft/resources/MinecraftKey;)V setTarget
	c ()Lnet/minecraft/resources/MinecraftKey; getName
	d ()Lnet/minecraft/resources/MinecraftKey; getTarget
	f ()Lnet/minecraft/resources/ResourceKey; getPool
	g ()Ljava/lang/String; getFinalState
	h ()Lnet/minecraft/network/protocol/Packet; getUpdatePacket
	i ()Lnet/minecraft/world/level/block/entity/TileEntityJigsaw$JointType; getJoint
	j ()Lnet/minecraft/network/protocol/game/PacketPlayOutTileEntityData; getUpdatePacket
net/minecraft/world/level/block/entity/TileEntityJigsaw$JointType net/minecraft/world/level/block/entity/JigsawBlockEntity$JointType
	a ROLLABLE
	b ALIGNED
	c name
	d $VALUES
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getTranslatedName
	a (Ljava/lang/String;)Ljava/util/Optional; byName
	b ()[Lnet/minecraft/world/level/block/entity/TileEntityJigsaw$JointType; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/level/block/entity/TileEntityJukeBox net/minecraft/world/level/block/entity/JukeboxBlockEntity
	c SONG_END_PADDING
	d items
	e ticksSinceLastEvent
	f tickCount
	g recordStartedTick
	h isPlaying
	a (I)Lnet/minecraft/world/item/ItemStack; getItem
	a (II)Lnet/minecraft/world/item/ItemStack; removeItem
	a (ILnet/minecraft/world/item/ItemStack;)V setItem
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/world/IInventory;ILnet/minecraft/world/item/ItemStack;)Z canTakeItem
	a (Lnet/minecraft/world/entity/Entity;Z)V setHasRecordBlockState
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	a (Lnet/minecraft/world/item/ItemRecord;)Z shouldRecordStopPlaying
	a (Lnet/minecraft/world/item/ItemStack;)V setRecordWithoutPlaying
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V spawnMusicParticles
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityJukeBox;)V playRecordTick
	ab_ ()I getMaxStackSize
	b (ILnet/minecraft/world/item/ItemStack;)Z canPlaceItem
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V tick
	f ()Z isRecordPlaying
	g ()V startPlaying
	i ()V popOutRecord
	v ()V stopPlaying
	w ()Z shouldSendJukeboxPlayingEvent
net/minecraft/world/level/block/entity/TileEntityLectern net/minecraft/world/level/block/entity/LecternBlockEntity
	a DATA_PAGE
	b NUM_DATA
	c SLOT_BOOK
	d NUM_SLOTS
	e bookAccess
	f dataAccess
	g book
	h page
	i pageCount
	G_ ()Lnet/minecraft/network/chat/IChatBaseComponent; getDisplayName
	a ()V clearContent
	a (I)V setPage
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Lnet/minecraft/commands/CommandListenerWrapper; createCommandSourceStack
	a (Lnet/minecraft/world/item/ItemStack;)V setBook
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/EntityHuman;)V setBook
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
	b (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/EntityHuman;)Lnet/minecraft/world/item/ItemStack; resolveBook
	c ()Lnet/minecraft/world/item/ItemStack; getBook
	f ()Z hasBook
	g ()I getPage
	i ()I getRedstoneSignal
	j ()V onBookItemRemove
	t ()Z onlyOpCanSetNbt
net/minecraft/world/level/block/entity/TileEntityLightDetector net/minecraft/world/level/block/entity/DaylightDetectorBlockEntity
net/minecraft/world/level/block/entity/TileEntityLootable net/minecraft/world/level/block/entity/RandomizableContainerBlockEntity
	d LOOT_TABLE_TAG
	e LOOT_TABLE_SEED_TAG
	h lootTable
	i lootTableSeed
	a ()V clearContent
	a (I)Lnet/minecraft/world/item/ItemStack; getItem
	a (II)Lnet/minecraft/world/item/ItemStack; removeItem
	a (ILnet/minecraft/world/item/ItemStack;)V setItem
	a (Lnet/minecraft/core/NonNullList;)V setItems
	a (Lnet/minecraft/resources/MinecraftKey;J)V setLootTable
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/resources/MinecraftKey;)V setLootTable
	aa_ ()Z isEmpty
	b (I)Lnet/minecraft/world/item/ItemStack; removeItemNoUpdate
	d (Lnet/minecraft/nbt/NBTTagCompound;)Z tryLoadLootTable
	d (Lnet/minecraft/world/entity/player/EntityHuman;)Z canOpen
	e (Lnet/minecraft/nbt/NBTTagCompound;)Z trySaveLootTable
	e (Lnet/minecraft/world/entity/player/EntityHuman;)V unpackLootTable
	f ()Lnet/minecraft/core/NonNullList; getItems
net/minecraft/world/level/block/entity/TileEntityMobSpawner net/minecraft/world/level/block/entity/SpawnerBlockEntity
	a spawner
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/util/RandomSource;)V setEntityId
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityMobSpawner;)V clientTick
	a_ (II)Z triggerEvent
	aq_ ()Lnet/minecraft/nbt/NBTTagCompound; getUpdateTag
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityMobSpawner;)V serverTick
	c ()Lnet/minecraft/network/protocol/game/PacketPlayOutTileEntityData; getUpdatePacket
	d ()Lnet/minecraft/world/level/MobSpawnerAbstract; getSpawner
	h ()Lnet/minecraft/network/protocol/Packet; getUpdatePacket
	t ()Z onlyOpCanSetNbt
net/minecraft/world/level/block/entity/TileEntityShulkerBox net/minecraft/world/level/block/entity/ShulkerBoxBlockEntity
	c COLUMNS
	f ROWS
	g CONTAINER_SIZE
	j EVENT_SET_OPEN_COUNT
	k OPENING_TICK_LENGTH
	l MAX_LID_HEIGHT
	m MAX_LID_ROTATION
	n ITEMS_TAG
	r SLOTS
	s itemStacks
	t openCount
	u animationStatus
	v progress
	w progressOld
	x color
	a (F)F getProgress
	a (ILnet/minecraft/world/entity/player/PlayerInventory;)Lnet/minecraft/world/inventory/Container; createMenu
	a (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/EnumDirection;)Z canPlaceItemThroughFace
	a (Lnet/minecraft/core/EnumDirection;)[I getSlotsForFace
	a (Lnet/minecraft/core/NonNullList;)V setItems
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityShulkerBox;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/phys/AxisAlignedBB; getBoundingBox
	a_ (II)Z triggerEvent
	b ()I getContainerSize
	b (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/EnumDirection;)Z canTakeItemThroughFace
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V updateAnimation
	c (Lnet/minecraft/world/entity/player/EntityHuman;)V stopOpen
	c (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V moveCollidedEntities
	d (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V doNeighborUpdates
	d_ (Lnet/minecraft/world/entity/player/EntityHuman;)V startOpen
	f ()Lnet/minecraft/core/NonNullList; getItems
	f (Lnet/minecraft/nbt/NBTTagCompound;)V loadFromTag
	g ()Lnet/minecraft/network/chat/IChatBaseComponent; getDefaultName
	i ()Lnet/minecraft/world/level/block/entity/TileEntityShulkerBox$AnimationPhase; getAnimationStatus
	j ()Lnet/minecraft/world/item/EnumColor; getColor
	v ()Z isClosed
net/minecraft/world/level/block/entity/TileEntityShulkerBox$AnimationPhase net/minecraft/world/level/block/entity/ShulkerBoxBlockEntity$AnimationStatus
	a CLOSED
	b OPENING
	c OPENED
	d CLOSING
	e $VALUES
	a ()[Lnet/minecraft/world/level/block/entity/TileEntityShulkerBox$AnimationPhase; $values
net/minecraft/world/level/block/entity/TileEntitySign net/minecraft/world/level/block/entity/SignBlockEntity
	a LINES
	b MAX_TEXT_LINE_WIDTH
	c TEXT_LINE_HEIGHT
	d RAW_TEXT_FIELD_NAMES
	e FILTERED_TEXT_FIELD_NAMES
	f messages
	g filteredMessages
	h isEditable
	i playerWhoMayEdit
	j renderMessages
	k renderMessagedFiltered
	l color
	m hasGlowingText
	a (ILnet/minecraft/network/chat/IChatBaseComponent;)V setMessage
	a (ILnet/minecraft/network/chat/IChatBaseComponent;Lnet/minecraft/network/chat/IChatBaseComponent;)V setMessage
	a (IZ)Lnet/minecraft/network/chat/IChatBaseComponent; getMessage
	a (Ljava/lang/String;)Lnet/minecraft/network/chat/IChatBaseComponent; loadLine
	a (Ljava/util/UUID;)V setAllowedPlayerEditor
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/server/level/EntityPlayer;)Z executeClickCommands
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z hasAnyClickCommands
	a (Lnet/minecraft/world/item/EnumColor;)Z setColor
	a (Z)V setEditable
	a (ZLjava/util/function/Function;)[Lnet/minecraft/util/FormattedString; getRenderMessages
	aq_ ()Lnet/minecraft/nbt/NBTTagCompound; getUpdateTag
	b (Ljava/lang/String;)Lnet/minecraft/network/chat/IChatBaseComponent; deserializeTextSafe
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
	b (Lnet/minecraft/server/level/EntityPlayer;)Lnet/minecraft/commands/CommandListenerWrapper; createCommandSourceStack
	b (Z)Z setHasGlowingText
	c ()I getTextLineHeight
	c (Z)[Lnet/minecraft/network/chat/IChatBaseComponent; getMessages
	d ()I getMaxTextLineWidth
	f ()Lnet/minecraft/network/protocol/game/PacketPlayOutTileEntityData; getUpdatePacket
	g ()Z isEditable
	h ()Lnet/minecraft/network/protocol/Packet; getUpdatePacket
	i ()Ljava/util/UUID; getPlayerWhoMayEdit
	j ()Lnet/minecraft/world/item/EnumColor; getColor
	t ()Z onlyOpCanSetNbt
	v ()Z hasGlowingText
	w ()V markUpdated
net/minecraft/world/level/block/entity/TileEntitySkull net/minecraft/world/level/block/entity/SkullBlockEntity
	a TAG_SKULL_OWNER
	b TAG_NOTE_BLOCK_SOUND
	c profileCache
	d sessionService
	e mainThreadExecutor
	f owner
	g noteBlockSound
	h animationTickCount
	i isAnimating
	a (F)F getAnimation
	a (Lcom/mojang/authlib/GameProfile;)V setOwner
	a (Lcom/mojang/authlib/GameProfile;Ljava/util/function/Consumer;)V updateGameprofile
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/server/Services;Ljava/util/concurrent/Executor;)V setup
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntitySkull;)V animation
	aq_ ()Lnet/minecraft/nbt/NBTTagCompound; getUpdateTag
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
	c ()V clear
	d ()Lcom/mojang/authlib/GameProfile; getOwnerProfile
	f ()Lnet/minecraft/resources/MinecraftKey; getNoteBlockSound
	g ()Lnet/minecraft/network/protocol/game/PacketPlayOutTileEntityData; getUpdatePacket
	h ()Lnet/minecraft/network/protocol/Packet; getUpdatePacket
	i ()V updateOwnerProfile
net/minecraft/world/level/block/entity/TileEntitySmoker net/minecraft/world/level/block/entity/SmokerBlockEntity
	a (ILnet/minecraft/world/entity/player/PlayerInventory;)Lnet/minecraft/world/inventory/Container; createMenu
	a (Lnet/minecraft/world/item/ItemStack;)I getBurnDuration
	g ()Lnet/minecraft/network/chat/IChatBaseComponent; getDefaultName
net/minecraft/world/level/block/entity/TileEntityStructure net/minecraft/world/level/block/entity/StructureBlockEntity
	a MAX_OFFSET_PER_AXIS
	b MAX_SIZE_PER_AXIS
	c AUTHOR_TAG
	d SCAN_CORNER_BLOCKS_RANGE
	e structureName
	f author
	g metaData
	h structurePos
	i structureSize
	j mirror
	k rotation
	l mode
	m ignoreEntities
	n powered
	r showAir
	s showBoundingBox
	t integrity
	u seed
	A ()F getIntegrity
	B ()J getSeed
	C ()Z detectSize
	D ()Z saveStructure
	E ()V unloadStructure
	F ()Z isStructureLoadable
	G ()Z isPowered
	H ()Z getShowAir
	I ()Z getShowBoundingBox
	J ()V updateBlockState
	a (F)V setIntegrity
	a (J)V setSeed
	a (Ljava/lang/String;)V setStructureName
	a (Lnet/minecraft/core/BaseBlockPosition;)V setStructureSize
	a (Lnet/minecraft/core/BlockPosition;)V setStructurePos
	a (Lnet/minecraft/core/BlockPosition;Ljava/util/stream/Stream;)Ljava/util/Optional; calculateEnclosingBoundingBox
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Ljava/util/stream/Stream; getRelatedCorners
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/resources/MinecraftKey;)V setStructureName
	a (Lnet/minecraft/server/level/WorldServer;)Z loadStructure
	a (Lnet/minecraft/server/level/WorldServer;Z)Z loadStructure
	a (Lnet/minecraft/server/level/WorldServer;ZLnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure;)Z loadStructure
	a (Lnet/minecraft/world/entity/EntityLiving;)V createdBy
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z usedBy
	a (Lnet/minecraft/world/level/block/EnumBlockMirror;)V setMirror
	a (Lnet/minecraft/world/level/block/EnumBlockRotation;)V setRotation
	a (Lnet/minecraft/world/level/block/state/properties/BlockPropertyStructureMode;)V setMode
	a (Z)V setIgnoreEntities
	aq_ ()Lnet/minecraft/nbt/NBTTagCompound; getUpdateTag
	b (J)Lnet/minecraft/util/RandomSource; createRandom
	b (Ljava/lang/String;)V setMetaData
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
	b (Z)Z saveStructure
	c ()Lnet/minecraft/network/protocol/game/PacketPlayOutTileEntityData; getUpdatePacket
	c (Z)V setPowered
	d ()Ljava/lang/String; getStructureName
	d (Z)V setShowAir
	e (Z)V setShowBoundingBox
	f ()Ljava/lang/String; getStructurePath
	g ()Z hasStructureName
	h ()Lnet/minecraft/network/protocol/Packet; getUpdatePacket
	i ()Lnet/minecraft/core/BlockPosition; getStructurePos
	j ()Lnet/minecraft/core/BaseBlockPosition; getStructureSize
	v ()Lnet/minecraft/world/level/block/EnumBlockMirror; getMirror
	w ()Lnet/minecraft/world/level/block/EnumBlockRotation; getRotation
	x ()Ljava/lang/String; getMetaData
	y ()Lnet/minecraft/world/level/block/state/properties/BlockPropertyStructureMode; getMode
	z ()Z isIgnoreEntities
net/minecraft/world/level/block/entity/TileEntityStructure$UpdateType net/minecraft/world/level/block/entity/StructureBlockEntity$UpdateType
	a UPDATE_DATA
	b SAVE_AREA
	c LOAD_AREA
	d SCAN_AREA
	e $VALUES
	a ()[Lnet/minecraft/world/level/block/entity/TileEntityStructure$UpdateType; $values
net/minecraft/world/level/block/entity/TileEntityTypes net/minecraft/world/level/block/entity/BlockEntityType
	A BARREL
	B SMOKER
	C BLAST_FURNACE
	D LECTERN
	E BELL
	F JIGSAW
	G CAMPFIRE
	H BEEHIVE
	I SCULK_SENSOR
	J SCULK_CATALYST
	K SCULK_SHRIEKER
	L CHISELED_BOOKSHELF
	M SUSPICIOUS_SAND
	N DECORATED_POT
	O LOGGER
	P factory
	Q validBlocks
	R dataType
	a FURNACE
	b CHEST
	c TRAPPED_CHEST
	d ENDER_CHEST
	e JUKEBOX
	f DISPENSER
	g DROPPER
	h SIGN
	i HANGING_SIGN
	j MOB_SPAWNER
	k PISTON
	l BREWING_STAND
	m ENCHANTING_TABLE
	n END_PORTAL
	o BEACON
	p SKULL
	q DAYLIGHT_DETECTOR
	r HOPPER
	s COMPARATOR
	t BANNER
	u STRUCTURE_BLOCK
	v END_GATEWAY
	w COMMAND_BLOCK
	x SHULKER_BOX
	y BED
	z CONDUIT
	a (Ljava/lang/String;Lczg$b;)Lnet/minecraft/world/level/block/entity/TileEntityTypes; register
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; create
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/entity/TileEntity; getBlockEntity
	a (Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Lnet/minecraft/resources/MinecraftKey; getKey
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z isValid
net/minecraft/world/level/block/grower/WorldGenMegaTreeProvider net/minecraft/world/level/block/grower/AbstractMegaTreeGrower
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/util/RandomSource;)Z growTree
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/util/RandomSource;II)Z placeMega
	a (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/resources/ResourceKey; getConfiguredMegaFeature
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;II)Z isTwoByTwoSapling
net/minecraft/world/level/block/grower/WorldGenMegaTreeProviderDarkOak net/minecraft/world/level/block/grower/DarkOakTreeGrower
	a (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/resources/ResourceKey; getConfiguredMegaFeature
	a (Lnet/minecraft/util/RandomSource;Z)Lnet/minecraft/resources/ResourceKey; getConfiguredFeature
net/minecraft/world/level/block/grower/WorldGenMegaTreeProviderJungle net/minecraft/world/level/block/grower/JungleTreeGrower
	a (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/resources/ResourceKey; getConfiguredMegaFeature
	a (Lnet/minecraft/util/RandomSource;Z)Lnet/minecraft/resources/ResourceKey; getConfiguredFeature
net/minecraft/world/level/block/grower/WorldGenTreeProvider net/minecraft/world/level/block/grower/AbstractTreeGrower
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/util/RandomSource;)Z growTree
	a (Lnet/minecraft/util/RandomSource;Z)Lnet/minecraft/resources/ResourceKey; getConfiguredFeature
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)Z hasFlowers
net/minecraft/world/level/block/grower/WorldGenTreeProviderAcacia net/minecraft/world/level/block/grower/AcaciaTreeGrower
	a (Lnet/minecraft/util/RandomSource;Z)Lnet/minecraft/resources/ResourceKey; getConfiguredFeature
net/minecraft/world/level/block/grower/WorldGenTreeProviderBirch net/minecraft/world/level/block/grower/BirchTreeGrower
	a (Lnet/minecraft/util/RandomSource;Z)Lnet/minecraft/resources/ResourceKey; getConfiguredFeature
net/minecraft/world/level/block/grower/WorldGenTreeProviderOak net/minecraft/world/level/block/grower/OakTreeGrower
	a (Lnet/minecraft/util/RandomSource;Z)Lnet/minecraft/resources/ResourceKey; getConfiguredFeature
net/minecraft/world/level/block/grower/WorldGenTreeProviderSpruce net/minecraft/world/level/block/grower/SpruceTreeGrower
	a (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/resources/ResourceKey; getConfiguredMegaFeature
	a (Lnet/minecraft/util/RandomSource;Z)Lnet/minecraft/resources/ResourceKey; getConfiguredFeature
net/minecraft/world/level/block/piston/BlockPiston net/minecraft/world/level/block/piston/PistonBaseBlock
	b EXTENDED
	c TRIGGER_EXTEND
	d TRIGGER_CONTRACT
	e TRIGGER_DROP
	f PLATFORM_THICKNESS
	g EAST_AABB
	h WEST_AABB
	i SOUTH_AABB
	j NORTH_AABB
	k UP_AABB
	l DOWN_AABB
	m isSticky
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Z getNeighborSignal
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;Z)Z moveBlocks
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V checkIfExtend
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;)V setPlacedBy
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;II)Z triggerEvent
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;ZLnet/minecraft/core/EnumDirection;)Z isPushable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
	g_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z useShapeForLightOcclusion
net/minecraft/world/level/block/piston/BlockPistonExtension net/minecraft/world/level/block/piston/PistonHeadBlock
	E DOWN_ARM_AABB
	F SOUTH_ARM_AABB
	G NORTH_ARM_AABB
	H EAST_ARM_AABB
	I WEST_ARM_AABB
	J SHORT_UP_ARM_AABB
	K SHORT_DOWN_ARM_AABB
	L SHORT_SOUTH_ARM_AABB
	M SHORT_NORTH_ARM_AABB
	N SHORT_EAST_ARM_AABB
	O SHORT_WEST_ARM_AABB
	P SHAPES_SHORT
	Q SHAPES_LONG
	b TYPE
	c SHORT
	d PLATFORM
	e EAST_AABB
	f WEST_AABB
	g SOUTH_AABB
	h NORTH_AABB
	i UP_AABB
	j DOWN_AABB
	k AABB_OFFSET
	l EDGE_MIN
	m EDGE_MAX
	n UP_ARM_AABB
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/EnumDirection;Z)Lnet/minecraft/world/phys/shapes/VoxelShape; calculateShape
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/item/ItemStack; getCloneItemStack
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/player/EntityHuman;)V playerWillDestroy
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onRemove
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;)Z isFittingBase
	a (Z)[Lnet/minecraft/world/phys/shapes/VoxelShape; makeShapes
	g_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z useShapeForLightOcclusion
net/minecraft/world/level/block/piston/BlockPistonMoving net/minecraft/world/level/block/piston/MovingPistonBlock
	a FACING
	b TYPE
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;ZZ)Lnet/minecraft/world/level/block/entity/TileEntity; newMovingBlockEntity
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V destroy
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/piston/TileEntityPiston; getBlockEntity
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/item/ItemStack; getCloneItemStack
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; getTicker
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onRemove
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/storage/loot/LootTableInfo$Builder;)Ljava/util/List; getDrops
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getCollisionShape
net/minecraft/world/level/block/piston/PistonExtendsChecker net/minecraft/world/level/block/piston/PistonStructureResolver
	a MAX_PUSH_DEPTH
	b level
	c pistonPos
	d extending
	e startPos
	f pushDirection
	g toPush
	h toDestroy
	i pistonDirection
	a ()Z resolve
	a (II)V reorderListAtCollision
	a (Lnet/minecraft/core/BlockPosition;)Z addBranchingBlocks
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Z addBlockLine
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z isSticky
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;)Z canStickToEachOther
	b ()Lnet/minecraft/core/EnumDirection; getPushDirection
	c ()Ljava/util/List; getToPush
	d ()Ljava/util/List; getToDestroy
net/minecraft/world/level/block/piston/PistonUtil net/minecraft/world/level/block/piston/PistonMath
	a (Lnet/minecraft/world/phys/AxisAlignedBB;Lnet/minecraft/core/EnumDirection;D)Lnet/minecraft/world/phys/AxisAlignedBB; getMovementArea
net/minecraft/world/level/block/piston/TileEntityPiston net/minecraft/world/level/block/piston/PistonMovingBlockEntity
	a TICK_MOVEMENT
	b TICKS_TO_EXTEND
	c PUSH_OFFSET
	d movedState
	e direction
	f extending
	g isSourcePiston
	h NOCLIP
	i progress
	j progressO
	k lastTicked
	l deathTicks
	a (F)F getProgress
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/EnumDirection;D)V fixEntityWithinPistonBase
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/AxisAlignedBB;Lnet/minecraft/world/level/block/piston/TileEntityPiston;)Lnet/minecraft/world/phys/AxisAlignedBB; moveByPositionAndProgress
	a (Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/entity/Entity;DLnet/minecraft/core/EnumDirection;)V moveEntityByPiston
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getCollisionShape
	a (Lnet/minecraft/world/level/World;)V setLevel
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;FLnet/minecraft/world/level/block/piston/TileEntityPiston;)V moveCollidedEntities
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/piston/TileEntityPiston;)V tick
	a (Lnet/minecraft/world/phys/AxisAlignedBB;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/phys/AxisAlignedBB;)D getMovement
	a (Lnet/minecraft/world/phys/AxisAlignedBB;Lnet/minecraft/world/entity/Entity;)Z matchesStickyCritera
	aq_ ()Lnet/minecraft/nbt/NBTTagCompound; getUpdateTag
	b (F)F getXOff
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;FLnet/minecraft/world/level/block/piston/TileEntityPiston;)V moveStuckEntities
	c ()Z isExtending
	c (F)F getYOff
	d ()Lnet/minecraft/core/EnumDirection; getDirection
	d (F)F getZOff
	e (F)F getExtendedProgress
	f ()Z isSourcePiston
	g ()Lnet/minecraft/core/EnumDirection; getMovementDirection
	i ()Lnet/minecraft/world/level/block/state/IBlockData; getMovedState
	j ()V finalTick
	v ()J getLastTicked
	w ()Lnet/minecraft/world/level/block/state/IBlockData; getCollisionRelatedBlockState
	x ()Z isStickyForEntities
net/minecraft/world/level/block/state/BlockBase net/minecraft/world/level/block/state/BlockBehaviour
	aE UPDATE_SHAPE_ORDER
	aF material
	aG hasCollision
	aH explosionResistance
	aI isRandomlyTicking
	aJ soundType
	aK friction
	aL speedFactor
	aM jumpFactor
	aN dynamicShape
	aO requiredFeatures
	aP properties
	aQ drops
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/phys/MovingObjectPositionBlock;Lnet/minecraft/world/entity/projectile/IProjectile;)V onProjectileHit
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;)J getSeed
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/item/ItemStack;Z)V spawnAfterBreak
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)F getDestroyProgress
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/item/context/BlockActionContext;)Z canBeReplaced
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;II)V updateIndirectNeighbourShapes
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getInteractionShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;II)Z triggerEvent
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;)V entityInside
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;)V attack
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onRemove
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;)Z skipRendering
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/FluidType;)Z canBeReplaced
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/storage/loot/LootTableInfo$Builder;)Ljava/util/List; getDrops
	a_ (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z isCollisionShapeFullBlock
	am_ ()F getMaxHorizontalOffset
	ap_ ()F getMaxVerticalOffset
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)F getShadeBrightness
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getDirectSignal
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getVisualShape
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/ITileInventory; getMenuProvider
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getBlockSupportShape
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getCollisionShape
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	d (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/EnumPistonReaction; getPistonPushReaction
	d_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z hasAnalogOutputSignal
	f (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getOcclusionShape
	f_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isSignalSource
	g (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)I getLightBlock
	g_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z useShapeForLightOcclusion
	h (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z isOcclusionShapeFullBlock
	k ()Lnet/minecraft/world/item/Item; asItem
	m ()Lnet/minecraft/world/flag/FeatureFlagSet; requiredFeatures
	q ()Lnet/minecraft/world/level/block/Block; asBlock
	s ()Lnet/minecraft/resources/MinecraftKey; getLootTable
	t ()Lnet/minecraft/world/level/material/MaterialMapColor; defaultMaterialColor
	u ()F defaultDestroyTime
net/minecraft/world/level/block/state/BlockBase$BlockData net/minecraft/world/level/block/state/BlockBehaviour$BlockStateBase
	a cache
	b lightEmission
	g useShapeForLightOcclusion
	h isAir
	i material
	j materialColor
	k destroySpeed
	l requiresCorrectToolForDrops
	m canOcclude
	n isRedstoneConductor
	o isSuffocating
	p isViewBlocking
	q hasPostProcess
	r emissiveRendering
	s offsetFunction
	t spawnParticlesOnBreak
	u fluidState
	v isRandomlyTicking
	a ()V initCache
	a (Lnet/minecraft/core/BlockPosition;)J getSeed
	a (Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/core/HolderSet;)Z is
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/item/ItemStack;Z)V spawnAfterBreak
	a (Lnet/minecraft/tags/TagKey;)Z is
	a (Lnet/minecraft/tags/TagKey;Ljava/util/function/Predicate;)Z is
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)F getDestroyProgress
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Z canBeReplaced
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;I)V updateNeighbourShapes
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;II)V updateNeighbourShapes
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z propagatesSkylightDown
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/world/phys/shapes/VoxelShape; getFaceOcclusionShape
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/EnumBlockSupport;)Z isFaceSturdy
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;)Z entityCanStandOn
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/EnumDirection;)Z entityCanStandOnFace
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/EntityTypes;)Z isValidSpawn
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;II)Z triggerEvent
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;)V entityInside
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;)V attack
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; getTicker
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/phys/MovingObjectPositionBlock;Lnet/minecraft/world/entity/projectile/IProjectile;)V onProjectileHit
	a (Lnet/minecraft/world/level/block/Block;)Z is
	a (Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;)Z skipRendering
	a (Lnet/minecraft/world/level/material/FluidType;)Z canBeReplaced
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo$Builder;)Ljava/util/List; getDrops
	b ()Lnet/minecraft/world/level/block/Block; getBlock
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	b (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;I)V updateIndirectNeighbourShapes
	b (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;II)V updateIndirectNeighbourShapes
	b (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)I getLightBlock
	b (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getSignal
	b (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getCollisionShape
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/ITileInventory; getMenuProvider
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onRemove
	c ()Lnet/minecraft/core/Holder; getBlockHolder
	c (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getOcclusionShape
	c (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getDirectSignal
	c (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getVisualShape
	d ()Lnet/minecraft/world/level/material/Material; getMaterial
	d (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/material/MaterialMapColor; getMapColor
	d (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Z isFaceSturdy
	e ()Z hasLargeCollisionShape
	e (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z emissiveRendering
	f ()Z useShapeForLightOcclusion
	f (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)F getShadeBrightness
	g ()I getLightEmission
	g (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z isRedstoneConductor
	h ()Z isAir
	h (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)F getDestroySpeed
	i ()Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
	i (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z isSolidRender
	j ()Z isSignalSource
	j (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	k ()Z hasAnalogOutputSignal
	k (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getCollisionShape
	l ()Lnet/minecraft/world/level/material/EnumPistonReaction; getPistonPushReaction
	l (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getBlockSupportShape
	m ()Z canOcclude
	m (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getInteractionShape
	n ()Z hasOffsetFunction
	n (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/Vec3D; getOffset
	o ()Z canBeReplaced
	o (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z isSuffocating
	p ()Ljava/util/stream/Stream; getTags
	p (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z isViewBlocking
	q ()Z hasBlockEntity
	q (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z hasPostProcess
	r ()Lnet/minecraft/world/level/material/Fluid; getFluidState
	r (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z isCollisionShapeFullBlock
	s ()Z isRandomlyTicking
	t ()Lnet/minecraft/world/level/block/SoundEffectType; getSoundType
	u ()Lnet/minecraft/world/level/block/state/IBlockData; asState
	v ()Z requiresCorrectToolForDrops
	w ()Z shouldSpawnParticlesOnBreak
net/minecraft/world/level/block/state/BlockBase$BlockData$Cache net/minecraft/world/level/block/state/BlockBehaviour$BlockStateBase$Cache
	a solidRender
	b collisionShape
	c largeCollisionShape
	d isCollisionShapeFullBlock
	e DIRECTIONS
	f SUPPORT_TYPE_COUNT
	g propagatesSkylightDown
	h lightBlock
	i occlusionShapes
	j faceSturdy
	a (Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/EnumBlockSupport;)Z isFaceSturdy
	b (Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/EnumBlockSupport;)I getFaceSupportIndex
net/minecraft/world/level/block/state/BlockBase$EnumRandomOffset net/minecraft/world/level/block/state/BlockBehaviour$OffsetType
	a NONE
	b XZ
	c XYZ
	d $VALUES
	a ()[Lnet/minecraft/world/level/block/state/BlockBase$EnumRandomOffset; $values
net/minecraft/world/level/block/state/BlockBase$Info net/minecraft/world/level/block/state/BlockBehaviour$Properties
	a material
	b materialColor
	c hasCollision
	d soundType
	e lightEmission
	f explosionResistance
	g destroyTime
	h requiresCorrectToolForDrops
	i isRandomlyTicking
	j friction
	k speedFactor
	l jumpFactor
	m drops
	n canOcclude
	o isAir
	p spawnParticlesOnBreak
	q isValidSpawn
	r isRedstoneConductor
	s isSuffocating
	t isViewBlocking
	u hasPostProcess
	v emissiveRendering
	w dynamicShape
	x requiredFeatures
	y offsetFunction
	a ()Lnet/minecraft/world/level/block/state/BlockBase$Info; noCollission
	a (F)Lnet/minecraft/world/level/block/state/BlockBase$Info; friction
	a (FF)Lnet/minecraft/world/level/block/state/BlockBase$Info; strength
	a (Ldbp$e;)Lnet/minecraft/world/level/block/state/BlockBase$Info; isValidSpawn
	a (Ldbp$f;)Lnet/minecraft/world/level/block/state/BlockBase$Info; isRedstoneConductor
	a (Ljava/util/function/ToIntFunction;)Lnet/minecraft/world/level/block/state/BlockBase$Info; lightLevel
	a (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/state/BlockBase$Info; dropsLike
	a (Lnet/minecraft/world/level/block/SoundEffectType;)Lnet/minecraft/world/level/block/state/BlockBase$Info; sound
	a (Lnet/minecraft/world/level/block/state/BlockBase$EnumRandomOffset;)Lnet/minecraft/world/level/block/state/BlockBase$Info; offsetType
	a (Lnet/minecraft/world/level/block/state/BlockBase;)Lnet/minecraft/world/level/block/state/BlockBase$Info; copy
	a (Lnet/minecraft/world/level/material/Material;)Lnet/minecraft/world/level/block/state/BlockBase$Info; of
	a (Lnet/minecraft/world/level/material/Material;Ljava/util/function/Function;)Lnet/minecraft/world/level/block/state/BlockBase$Info; of
	a (Lnet/minecraft/world/level/material/Material;Lnet/minecraft/world/item/EnumColor;)Lnet/minecraft/world/level/block/state/BlockBase$Info; of
	a (Lnet/minecraft/world/level/material/Material;Lnet/minecraft/world/level/material/MaterialMapColor;)Lnet/minecraft/world/level/block/state/BlockBase$Info; of
	a (Lnet/minecraft/world/level/material/MaterialMapColor;)Lnet/minecraft/world/level/block/state/BlockBase$Info; color
	a ([Lnet/minecraft/world/flag/FeatureFlag;)Lnet/minecraft/world/level/block/state/BlockBase$Info; requiredFeatures
	b ()Lnet/minecraft/world/level/block/state/BlockBase$Info; noOcclusion
	b (F)Lnet/minecraft/world/level/block/state/BlockBase$Info; speedFactor
	b (Ldbp$f;)Lnet/minecraft/world/level/block/state/BlockBase$Info; isSuffocating
	c ()Lnet/minecraft/world/level/block/state/BlockBase$Info; instabreak
	c (F)Lnet/minecraft/world/level/block/state/BlockBase$Info; jumpFactor
	c (Ldbp$f;)Lnet/minecraft/world/level/block/state/BlockBase$Info; isViewBlocking
	d ()Lnet/minecraft/world/level/block/state/BlockBase$Info; randomTicks
	d (F)Lnet/minecraft/world/level/block/state/BlockBase$Info; strength
	d (Ldbp$f;)Lnet/minecraft/world/level/block/state/BlockBase$Info; hasPostProcess
	e ()Lnet/minecraft/world/level/block/state/BlockBase$Info; dynamicShape
	e (F)Lnet/minecraft/world/level/block/state/BlockBase$Info; destroyTime
	e (Ldbp$f;)Lnet/minecraft/world/level/block/state/BlockBase$Info; emissiveRendering
	f ()Lnet/minecraft/world/level/block/state/BlockBase$Info; noLootTable
	f (F)Lnet/minecraft/world/level/block/state/BlockBase$Info; explosionResistance
	g ()Lnet/minecraft/world/level/block/state/BlockBase$Info; air
	h ()Lnet/minecraft/world/level/block/state/BlockBase$Info; requiresCorrectToolForDrops
	i ()Lnet/minecraft/world/level/block/state/BlockBase$Info; noParticlesOnBreak
net/minecraft/world/level/block/state/BlockStateList net/minecraft/world/level/block/state/StateDefinition
	a NAME_PATTERN
	b owner
	c propertiesByName
	d states
	a ()Lcom/google/common/collect/ImmutableList; getPossibleStates
	a (Lcom/mojang/serialization/MapCodec;Ljava/util/function/Supplier;Ljava/lang/String;Lnet/minecraft/world/level/block/state/properties/IBlockState;)Lcom/mojang/serialization/MapCodec; appendPropertyCodec
	a (Ljava/lang/String;)Lnet/minecraft/world/level/block/state/properties/IBlockState; getProperty
	b ()Lnet/minecraft/world/level/block/state/IBlockDataHolder; any
	c ()Ljava/lang/Object; getOwner
	d ()Ljava/util/Collection; getProperties
net/minecraft/world/level/block/state/IBlockData net/minecraft/world/level/block/state/BlockState
	b CODEC
	u ()Lnet/minecraft/world/level/block/state/IBlockData; asState
net/minecraft/world/level/block/state/IBlockDataHolder net/minecraft/world/level/block/state/StateHolder
	a PROPERTY_ENTRY_TO_STRING_FUNCTION
	b values
	c NAME_TAG
	d PROPERTIES_TAG
	e owner
	f propertiesCodec
	g neighbours
	a (Lcom/mojang/serialization/Codec;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; codec
	a (Ljava/util/Collection;Ljava/lang/Object;)Ljava/lang/Object; findNextInCollection
	a (Ljava/util/Map;)V populateNeighbours
	a (Lnet/minecraft/world/level/block/state/properties/IBlockState;)Ljava/lang/Object; cycle
	a (Lnet/minecraft/world/level/block/state/properties/IBlockState;Ljava/lang/Comparable;)Ljava/lang/Object; setValue
	b (Lnet/minecraft/world/level/block/state/properties/IBlockState;)Z hasProperty
	b (Lnet/minecraft/world/level/block/state/properties/IBlockState;Ljava/lang/Comparable;)Ljava/lang/Object; trySetValue
	c (Lnet/minecraft/world/level/block/state/properties/IBlockState;)Ljava/lang/Comparable; getValue
	c (Lnet/minecraft/world/level/block/state/properties/IBlockState;Ljava/lang/Comparable;)Ljava/util/Map; makeNeighbourValues
	d (Lnet/minecraft/world/level/block/state/properties/IBlockState;)Ljava/util/Optional; getOptionalValue
	x ()Ljava/util/Collection; getProperties
	y ()Lcom/google/common/collect/ImmutableMap; getValues
net/minecraft/world/level/block/state/pattern/ShapeDetector net/minecraft/world/level/block/state/pattern/BlockPattern
	a pattern
	b depth
	c height
	d width
	a ()I getDepth
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/core/EnumDirection;III)Lnet/minecraft/core/BlockPosition; translateAndRotate
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/core/EnumDirection;Lcom/google/common/cache/LoadingCache;)Lnet/minecraft/world/level/block/state/pattern/ShapeDetector$ShapeDetectorCollection; matches
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/pattern/ShapeDetector$ShapeDetectorCollection; find
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/world/level/block/state/pattern/ShapeDetector$ShapeDetectorCollection; matches
	a (Lnet/minecraft/world/level/IWorldReader;Z)Lcom/google/common/cache/LoadingCache; createLevelCache
	b ()I getHeight
	c ()I getWidth
	d ()[[[Ljava/util/function/Predicate; getPattern
net/minecraft/world/level/block/state/pattern/ShapeDetector$BlockLoader net/minecraft/world/level/block/state/pattern/BlockPattern$BlockCacheLoader
	a level
	b loadChunks
	a (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/pattern/ShapeDetectorBlock; load
net/minecraft/world/level/block/state/pattern/ShapeDetector$ShapeDetectorCollection net/minecraft/world/level/block/state/pattern/BlockPattern$BlockPatternMatch
	a frontTopLeft
	b forwards
	c up
	d cache
	e width
	f height
	g depth
	a ()Lnet/minecraft/core/BlockPosition; getFrontTopLeft
	a (III)Lnet/minecraft/world/level/block/state/pattern/ShapeDetectorBlock; getBlock
	b ()Lnet/minecraft/core/EnumDirection; getForwards
	c ()Lnet/minecraft/core/EnumDirection; getUp
	d ()I getWidth
	e ()I getHeight
	f ()I getDepth
net/minecraft/world/level/block/state/pattern/ShapeDetectorBlock net/minecraft/world/level/block/state/pattern/BlockInWorld
	a level
	b pos
	c loadChunks
	d state
	e entity
	f cachedEntity
	a ()Lnet/minecraft/world/level/block/state/IBlockData; getState
	a (Ljava/util/function/Predicate;)Ljava/util/function/Predicate; hasState
	b ()Lnet/minecraft/world/level/block/entity/TileEntity; getEntity
	c ()Lnet/minecraft/world/level/IWorldReader; getLevel
	d ()Lnet/minecraft/core/BlockPosition; getPos
net/minecraft/world/level/block/state/pattern/ShapeDetectorBuilder net/minecraft/world/level/block/state/pattern/BlockPatternBuilder
	a COMMA_JOINED
	b pattern
	c lookup
	d height
	e width
	a ()Lnet/minecraft/world/level/block/state/pattern/ShapeDetectorBuilder; start
	a (CLjava/util/function/Predicate;)Lnet/minecraft/world/level/block/state/pattern/ShapeDetectorBuilder; where
	a ([Ljava/lang/String;)Lnet/minecraft/world/level/block/state/pattern/ShapeDetectorBuilder; aisle
	b ()Lnet/minecraft/world/level/block/state/pattern/ShapeDetector; build
	c ()[[[Ljava/util/function/Predicate; createPattern
	d ()V ensureAllCharactersMatched
net/minecraft/world/level/block/state/predicate/MaterialPredicate net/minecraft/world/level/block/state/predicate/BlockMaterialPredicate
	a AIR
	b material
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z test
	a (Lnet/minecraft/world/level/material/Material;)Lnet/minecraft/world/level/block/state/predicate/MaterialPredicate; forMaterial
net/minecraft/world/level/block/state/properties/BlockProperties net/minecraft/world/level/block/state/properties/BlockStateProperties
	A TRIGGERED
	B UNSTABLE
	C WATERLOGGED
	D BERRIES
	E BLOOM
	F SHRIEKING
	G CAN_SUMMON
	H HORIZONTAL_AXIS
	I AXIS
	J UP
	K DOWN
	L NORTH
	M EAST
	N SOUTH
	O WEST
	P FACING
	Q FACING_HOPPER
	R HORIZONTAL_FACING
	S FLOWER_AMOUNT
	T ORIENTATION
	U ATTACH_FACE
	V BELL_ATTACHMENT
	W EAST_WALL
	X NORTH_WALL
	Y SOUTH_WALL
	Z WEST_WALL
	a ATTACHED
	aA DELAY
	aB MAX_DISTANCE
	aC DISTANCE
	aD EGGS
	aE HATCH
	aF LAYERS
	aG MIN_LEVEL
	aH MIN_LEVEL_CAULDRON
	aI MAX_LEVEL_3
	aJ MAX_LEVEL_8
	aK LEVEL_CAULDRON
	aL LEVEL_COMPOSTER
	aM LEVEL_FLOWING
	aN LEVEL_HONEY
	aO MAX_LEVEL_15
	aP LEVEL
	aQ MOISTURE
	aR NOTE
	aS PICKLES
	aT POWER
	aU STAGE
	aV STABILITY_MAX_DISTANCE
	aW STABILITY_DISTANCE
	aX MIN_RESPAWN_ANCHOR_CHARGES
	aY MAX_RESPAWN_ANCHOR_CHARGES
	aZ RESPAWN_ANCHOR_CHARGES
	aa EAST_REDSTONE
	ab NORTH_REDSTONE
	ac SOUTH_REDSTONE
	ad WEST_REDSTONE
	ae DOUBLE_BLOCK_HALF
	af HALF
	ag RAIL_SHAPE
	ah RAIL_SHAPE_STRAIGHT
	ai MAX_AGE_1
	aj MAX_AGE_2
	ak MAX_AGE_3
	al MAX_AGE_4
	am MAX_AGE_5
	an MAX_AGE_7
	ao MAX_AGE_15
	ap MAX_AGE_25
	aq AGE_1
	ar AGE_2
	as AGE_3
	at AGE_4
	au AGE_5
	av AGE_7
	aw AGE_15
	ax AGE_25
	ay BITES
	az CANDLES
	b BOTTOM
	ba ROTATION_16
	bb BED_PART
	bc CHEST_TYPE
	bd MODE_COMPARATOR
	be DOOR_HINGE
	bf NOTEBLOCK_INSTRUMENT
	bg PISTON_TYPE
	bh SLAB_TYPE
	bi STAIRS_SHAPE
	bj STRUCTUREBLOCK_MODE
	bk BAMBOO_LEAVES
	bl TILT
	bm VERTICAL_DIRECTION
	bn DRIPSTONE_THICKNESS
	bo SCULK_SENSOR_PHASE
	bp CHISELED_BOOKSHELF_SLOT_0_OCCUPIED
	bq CHISELED_BOOKSHELF_SLOT_1_OCCUPIED
	br CHISELED_BOOKSHELF_SLOT_2_OCCUPIED
	bs CHISELED_BOOKSHELF_SLOT_3_OCCUPIED
	bt CHISELED_BOOKSHELF_SLOT_4_OCCUPIED
	bu CHISELED_BOOKSHELF_SLOT_5_OCCUPIED
	bv DUSTED
	c CONDITIONAL
	d DISARMED
	e DRAG
	f ENABLED
	g EXTENDED
	h EYE
	i FALLING
	j HANGING
	k HAS_BOTTLE_0
	l HAS_BOTTLE_1
	m HAS_BOTTLE_2
	n HAS_RECORD
	o HAS_BOOK
	p INVERTED
	q IN_WALL
	r LIT
	s LOCKED
	t OCCUPIED
	u OPEN
	v PERSISTENT
	w POWERED
	x SHORT
	y SIGNAL_FIRE
	z SNOWY
net/minecraft/world/level/block/state/properties/BlockPropertyAttachPosition net/minecraft/world/level/block/state/properties/AttachFace
	a FLOOR
	b WALL
	c CEILING
	d name
	e $VALUES
	a ()[Lnet/minecraft/world/level/block/state/properties/BlockPropertyAttachPosition; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/level/block/state/properties/BlockPropertyBambooSize net/minecraft/world/level/block/state/properties/BambooLeaves
	a NONE
	b SMALL
	c LARGE
	d name
	e $VALUES
	a ()[Lnet/minecraft/world/level/block/state/properties/BlockPropertyBambooSize; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/level/block/state/properties/BlockPropertyBedPart net/minecraft/world/level/block/state/properties/BedPart
	a HEAD
	b FOOT
	c name
	d $VALUES
	a ()[Lnet/minecraft/world/level/block/state/properties/BlockPropertyBedPart; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/level/block/state/properties/BlockPropertyBellAttach net/minecraft/world/level/block/state/properties/BellAttachType
	a FLOOR
	b CEILING
	c SINGLE_WALL
	d DOUBLE_WALL
	e name
	f $VALUES
	a ()[Lnet/minecraft/world/level/block/state/properties/BlockPropertyBellAttach; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/level/block/state/properties/BlockPropertyChestType net/minecraft/world/level/block/state/properties/ChestType
	a SINGLE
	b LEFT
	c RIGHT
	d name
	e $VALUES
	a ()Lnet/minecraft/world/level/block/state/properties/BlockPropertyChestType; getOpposite
	b ()[Lnet/minecraft/world/level/block/state/properties/BlockPropertyChestType; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/level/block/state/properties/BlockPropertyComparatorMode net/minecraft/world/level/block/state/properties/ComparatorMode
	a COMPARE
	b SUBTRACT
	c name
	d $VALUES
	a ()[Lnet/minecraft/world/level/block/state/properties/BlockPropertyComparatorMode; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/level/block/state/properties/BlockPropertyDoorHinge net/minecraft/world/level/block/state/properties/DoorHingeSide
	a LEFT
	b RIGHT
	c $VALUES
	a ()[Lnet/minecraft/world/level/block/state/properties/BlockPropertyDoorHinge; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/level/block/state/properties/BlockPropertyDoubleBlockHalf net/minecraft/world/level/block/state/properties/DoubleBlockHalf
	a UPPER
	b LOWER
	c $VALUES
	a ()[Lnet/minecraft/world/level/block/state/properties/BlockPropertyDoubleBlockHalf; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/level/block/state/properties/BlockPropertyHalf net/minecraft/world/level/block/state/properties/Half
	a TOP
	b BOTTOM
	c name
	d $VALUES
	a ()[Lnet/minecraft/world/level/block/state/properties/BlockPropertyHalf; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/level/block/state/properties/BlockPropertyInstrument net/minecraft/world/level/block/state/properties/NoteBlockInstrument
	A $VALUES
	a HARP
	b BASEDRUM
	c SNARE
	d HAT
	e BASS
	f FLUTE
	g BELL
	h GUITAR
	i CHIME
	j XYLOPHONE
	k IRON_XYLOPHONE
	l COW_BELL
	m DIDGERIDOO
	n BIT
	o BANJO
	p PLING
	q ZOMBIE
	r SKELETON
	s CREEPER
	t DRAGON
	u WITHER_SKELETON
	v PIGLIN
	w CUSTOM_HEAD
	x name
	y soundEvent
	z type
	a ()Lnet/minecraft/core/Holder; getSoundEvent
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Ljava/util/Optional; byStateAbove
	b ()Z isTunable
	b (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/state/properties/BlockPropertyInstrument; byStateBelow
	c ()Ljava/lang/String; getSerializedName
	d ()Z hasCustomSound
	e ()Z requiresAirAbove
	f ()[Lnet/minecraft/world/level/block/state/properties/BlockPropertyInstrument; $values
net/minecraft/world/level/block/state/properties/BlockPropertyPistonType net/minecraft/world/level/block/state/properties/PistonType
	a DEFAULT
	b STICKY
	c name
	d $VALUES
	a ()[Lnet/minecraft/world/level/block/state/properties/BlockPropertyPistonType; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/level/block/state/properties/BlockPropertyRedstoneSide net/minecraft/world/level/block/state/properties/RedstoneSide
	a UP
	b SIDE
	c NONE
	d name
	e $VALUES
	a ()Z isConnected
	b ()[Lnet/minecraft/world/level/block/state/properties/BlockPropertyRedstoneSide; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/level/block/state/properties/BlockPropertySlabType net/minecraft/world/level/block/state/properties/SlabType
	a TOP
	b BOTTOM
	c DOUBLE
	d name
	e $VALUES
	a ()[Lnet/minecraft/world/level/block/state/properties/BlockPropertySlabType; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/level/block/state/properties/BlockPropertyStairsShape net/minecraft/world/level/block/state/properties/StairsShape
	a STRAIGHT
	b INNER_LEFT
	c INNER_RIGHT
	d OUTER_LEFT
	e OUTER_RIGHT
	f name
	g $VALUES
	a ()[Lnet/minecraft/world/level/block/state/properties/BlockPropertyStairsShape; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/level/block/state/properties/BlockPropertyStructureMode net/minecraft/world/level/block/state/properties/StructureMode
	a SAVE
	b LOAD
	c CORNER
	d DATA
	e name
	f displayName
	g $VALUES
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getDisplayName
	b ()[Lnet/minecraft/world/level/block/state/properties/BlockPropertyStructureMode; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/level/block/state/properties/BlockPropertyTrackPosition net/minecraft/world/level/block/state/properties/RailShape
	a NORTH_SOUTH
	b EAST_WEST
	c ASCENDING_EAST
	d ASCENDING_WEST
	e ASCENDING_NORTH
	f ASCENDING_SOUTH
	g SOUTH_EAST
	h SOUTH_WEST
	i NORTH_WEST
	j NORTH_EAST
	k name
	l $VALUES
	a ()Ljava/lang/String; getName
	b ()Z isAscending
	c ()Ljava/lang/String; getSerializedName
	d ()[Lnet/minecraft/world/level/block/state/properties/BlockPropertyTrackPosition; $values
net/minecraft/world/level/block/state/properties/BlockPropertyWallHeight net/minecraft/world/level/block/state/properties/WallSide
	a NONE
	b LOW
	c TALL
	d name
	e $VALUES
	a ()[Lnet/minecraft/world/level/block/state/properties/BlockPropertyWallHeight; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/level/block/state/properties/BlockPropertyWood net/minecraft/world/level/block/state/properties/WoodType
	a OAK
	b SPRUCE
	c BIRCH
	d ACACIA
	e CHERRY
	f JUNGLE
	g DARK_OAK
	h CRIMSON
	i WARPED
	j MANGROVE
	k BAMBOO
	l name
	m setType
	n soundType
	o hangingSignSoundType
	p fenceGateClose
	q fenceGateOpen
	r VALUES
	a ()Ljava/util/stream/Stream; values
	a (Lnet/minecraft/world/level/block/state/properties/BlockPropertyWood;)Lnet/minecraft/world/level/block/state/properties/BlockPropertyWood; register
	b ()Ljava/lang/String; name
	c ()Lnet/minecraft/world/level/block/state/properties/BlockSetType; setType
	d ()Lnet/minecraft/world/level/block/SoundEffectType; soundType
	e ()Lnet/minecraft/world/level/block/SoundEffectType; hangingSignSoundType
	f ()Lnet/minecraft/sounds/SoundEffect; fenceGateClose
	g ()Lnet/minecraft/sounds/SoundEffect; fenceGateOpen
net/minecraft/world/level/block/state/properties/BlockStateBoolean net/minecraft/world/level/block/state/properties/BooleanProperty
	a values
	a ()Ljava/util/Collection; getPossibleValues
	a (Ljava/lang/Boolean;)Ljava/lang/String; getName
	a (Ljava/lang/Comparable;)Ljava/lang/String; getName
	a (Ljava/lang/String;)Lnet/minecraft/world/level/block/state/properties/BlockStateBoolean; create
	b ()I generateHashCode
	b (Ljava/lang/String;)Ljava/util/Optional; getValue
net/minecraft/world/level/block/state/properties/BlockStateDirection net/minecraft/world/level/block/state/properties/DirectionProperty
	a (Ljava/lang/String;)Lnet/minecraft/world/level/block/state/properties/BlockStateDirection; create
	a (Ljava/lang/String;Ljava/util/Collection;)Lnet/minecraft/world/level/block/state/properties/BlockStateDirection; create
	a (Ljava/lang/String;Ljava/util/function/Predicate;)Lnet/minecraft/world/level/block/state/properties/BlockStateDirection; create
	a (Ljava/lang/String;[Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/world/level/block/state/properties/BlockStateDirection; create
net/minecraft/world/level/block/state/properties/BlockStateEnum net/minecraft/world/level/block/state/properties/EnumProperty
	a values
	b names
	a ()Ljava/util/Collection; getPossibleValues
	a (Ljava/lang/Comparable;)Ljava/lang/String; getName
	a (Ljava/lang/Enum;)Ljava/lang/String; getName
	a (Ljava/lang/String;Ljava/lang/Class;)Lnet/minecraft/world/level/block/state/properties/BlockStateEnum; create
	a (Ljava/lang/String;Ljava/lang/Class;Ljava/util/Collection;)Lnet/minecraft/world/level/block/state/properties/BlockStateEnum; create
	a (Ljava/lang/String;Ljava/lang/Class;Ljava/util/function/Predicate;)Lnet/minecraft/world/level/block/state/properties/BlockStateEnum; create
	a (Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Enum;)Lnet/minecraft/world/level/block/state/properties/BlockStateEnum; create
	b ()I generateHashCode
	b (Ljava/lang/String;)Ljava/util/Optional; getValue
net/minecraft/world/level/block/state/properties/BlockStateInteger net/minecraft/world/level/block/state/properties/IntegerProperty
	a values
	b min
	c max
	a ()Ljava/util/Collection; getPossibleValues
	a (Ljava/lang/Comparable;)Ljava/lang/String; getName
	a (Ljava/lang/Integer;)Ljava/lang/String; getName
	a (Ljava/lang/String;II)Lnet/minecraft/world/level/block/state/properties/BlockStateInteger; create
	b ()I generateHashCode
	b (Ljava/lang/String;)Ljava/util/Optional; getValue
net/minecraft/world/level/block/state/properties/IBlockState net/minecraft/world/level/block/state/properties/Property
	a clazz
	b name
	c hashCode
	d codec
	e valueCodec
	a ()Ljava/util/Collection; getPossibleValues
	a (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/world/level/block/state/IBlockDataHolder;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; parseValue
	a (Ljava/lang/Comparable;)Ljava/lang/String; getName
	a (Lnet/minecraft/world/level/block/state/IBlockDataHolder;)Ldcu$a; value
	b ()I generateHashCode
	b (Ljava/lang/Comparable;)Ldcu$a; value
	b (Ljava/lang/String;)Ljava/util/Optional; getValue
	c ()Ljava/util/stream/Stream; getAllValues
	d ()Lcom/mojang/serialization/Codec; codec
	e ()Lcom/mojang/serialization/Codec; valueCodec
	f ()Ljava/lang/String; getName
	g ()Ljava/lang/Class; getValueClass
net/minecraft/world/level/border/IWorldBorderListener net/minecraft/world/level/border/BorderChangeListener
	a (Lnet/minecraft/world/level/border/WorldBorder;D)V onBorderSizeSet
	a (Lnet/minecraft/world/level/border/WorldBorder;DD)V onBorderCenterSet
	a (Lnet/minecraft/world/level/border/WorldBorder;DDJ)V onBorderSizeLerping
	a (Lnet/minecraft/world/level/border/WorldBorder;I)V onBorderSetWarningTime
	b (Lnet/minecraft/world/level/border/WorldBorder;D)V onBorderSetDamagePerBlock
	b (Lnet/minecraft/world/level/border/WorldBorder;I)V onBorderSetWarningBlocks
	c (Lnet/minecraft/world/level/border/WorldBorder;D)V onBorderSetDamageSafeZOne
net/minecraft/world/level/chunk/Chunk net/minecraft/world/level/chunk/LevelChunk
	l LOGGER
	m NULL_TICKER
	n tickersInLevel
	o loaded
	p clientLightReady
	q level
	r fullStatus
	s postLoad
	t gameEventListenerRegistrySections
	u blockTicks
	v fluidTicks
	A ()Z isEmpty
	B ()Lnet/minecraft/server/level/PlayerChunk$State; getFullStatus
	C ()V runPostLoad
	D ()Lnet/minecraft/world/level/World; getLevel
	E ()Ljava/util/Map; getBlockEntities
	F ()V postProcessGeneration
	G ()V clearAllBlockEntities
	H ()V registerAllBlockEntitiesAfterLevelLoad
	I ()Z isClientLightReady
	J ()Z isInLevel
	a (I)Lnet/minecraft/world/level/gameevent/GameEventListenerRegistry; getListenerRegistry
	a (III)Lnet/minecraft/world/level/material/Fluid; getFluidState
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/level/block/entity/TileEntity; promotePendingBlockEntity
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)Lnet/minecraft/world/level/block/state/IBlockData; setBlockState
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/chunk/Chunk$EnumTileEntityState;)Lnet/minecraft/world/level/block/entity/TileEntity; getBlockEntity
	a (Lnet/minecraft/network/PacketDataSerializer;)V replaceBiomes
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/nbt/NBTTagCompound;Ljava/util/function/Consumer;)V replaceWithPacketData
	a (Lnet/minecraft/server/level/WorldServer;)V registerTickContainerInLevel
	a (Lnet/minecraft/world/entity/Entity;)V addEntity
	a (Lnet/minecraft/world/level/block/entity/TileEntity;)V setBlockEntity
	a (Lnet/minecraft/world/level/block/entity/TileEntity;Lnet/minecraft/server/level/WorldServer;)V removeGameEventListener
	a (Lnet/minecraft/world/level/block/entity/TileEntity;Lnet/minecraft/world/level/block/entity/BlockEntityTicker;)Lnet/minecraft/world/level/block/entity/TickingBlockEntity; createTicker
	a_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; getBlockState
	b (Ljava/util/function/Supplier;)V setFullStatus
	b (Lnet/minecraft/server/level/WorldServer;)V unregisterTickContainerFromLevel
	b (Lnet/minecraft/world/level/block/entity/TileEntity;)V addAndRegisterBlockEntity
	b (Lnet/minecraft/world/level/block/entity/TileEntity;Lnet/minecraft/server/level/WorldServer;)V addGameEventListener
	b_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	c (J)V unpackTicks
	c (Lnet/minecraft/world/level/block/entity/TileEntity;)V updateBlockEntityTicker
	c (Z)V setLoaded
	c_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/entity/TileEntity; getBlockEntity
	d (Lnet/minecraft/core/BlockPosition;)V removeBlockEntity
	d (Z)V setClientLightReady
	g (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/nbt/NBTTagCompound; getBlockEntityNbtForSaving
	j ()Lnet/minecraft/world/level/chunk/ChunkStatus; getStatus
	j (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/entity/TileEntity; createBlockEntity
	k (Lnet/minecraft/core/BlockPosition;)Z isTicking
	l (Lnet/minecraft/core/BlockPosition;)V removeBlockEntityTicker
	n ()Ljava/util/stream/Stream; getLights
	o ()Lnet/minecraft/world/ticks/TickContainerAccess; getBlockTicks
	p ()Lnet/minecraft/world/ticks/TickContainerAccess; getFluidTicks
	q ()Lddn$a; getTicksForSerialization
net/minecraft/world/level/chunk/Chunk$EnumTileEntityState net/minecraft/world/level/chunk/LevelChunk$EntityCreationType
	a IMMEDIATE
	b QUEUED
	c CHECK
	d $VALUES
	a ()[Lnet/minecraft/world/level/chunk/Chunk$EnumTileEntityState; $values
net/minecraft/world/level/chunk/ChunkConverter net/minecraft/world/level/chunk/UpgradeData
	a EMPTY
	b LOGGER
	c TAG_INDICES
	d DIRECTIONS
	e sides
	f neighborBlockTicks
	g neighborFluidTicks
	h index
	i MAP
	j CHUNKY_FIXERS
	a ()Z isEmpty
	a (Lnet/minecraft/nbt/NBTTagCompound;Ljava/lang/String;Ljava/util/function/Function;Ljava/util/List;)V loadTicks
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateState
	a (Lnet/minecraft/world/level/chunk/Chunk;)V upgrade
	a (Lnet/minecraft/world/level/chunk/Chunk;Lnet/minecraft/core/EnumDirection8;)V upgradeSides
	b ()Lnet/minecraft/nbt/NBTTagCompound; write
	b (Lnet/minecraft/world/level/chunk/Chunk;)V upgradeInside
net/minecraft/world/level/chunk/ChunkConverter$Type net/minecraft/world/level/chunk/UpgradeData$BlockFixers
	a BLACKLIST
	b DEFAULT
	c CHEST
	d LEAVES
	e STEM_BLOCK
	f DIRECTIONS
	g $VALUES
	a ()[Lnet/minecraft/world/level/chunk/ChunkConverter$Type; $values
net/minecraft/world/level/chunk/ChunkEmpty net/minecraft/world/level/chunk/EmptyLevelChunk
	l biome
	A ()Z isEmpty
	B ()Lnet/minecraft/server/level/PlayerChunk$State; getFullStatus
	a (II)Z isYSpaceEmpty
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)Lnet/minecraft/world/level/block/state/IBlockData; setBlockState
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/chunk/Chunk$EnumTileEntityState;)Lnet/minecraft/world/level/block/entity/TileEntity; getBlockEntity
	a (Lnet/minecraft/world/level/block/entity/TileEntity;)V setBlockEntity
	a_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; getBlockState
	b (Lnet/minecraft/world/level/block/entity/TileEntity;)V addAndRegisterBlockEntity
	b_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	d (Lnet/minecraft/core/BlockPosition;)V removeBlockEntity
	h (Lnet/minecraft/core/BlockPosition;)I getLightEmission
net/minecraft/world/level/chunk/ChunkSection net/minecraft/world/level/chunk/LevelChunkSection
	a SECTION_WIDTH
	b SECTION_HEIGHT
	c SECTION_SIZE
	d BIOME_CONTAINER_BITS
	e bottomBlockY
	f nonEmptyBlockCount
	g tickingBlockCount
	h tickingFluidCount
	i states
	j biomes
	a ()V acquire
	a (I)I getBottomBlockY
	a (III)Lnet/minecraft/world/level/block/state/IBlockData; getBlockState
	a (IIILnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/state/IBlockData; setBlockState
	a (IIILnet/minecraft/world/level/block/state/IBlockData;Z)Lnet/minecraft/world/level/block/state/IBlockData; setBlockState
	a (Ljava/util/function/Predicate;)Z maybeHas
	a (Lnet/minecraft/network/PacketDataSerializer;)V read
	a (Lnet/minecraft/world/level/biome/BiomeResolver;Lnet/minecraft/world/level/biome/Climate$Sampler;II)V fillBiomesFromNoise
	b ()V release
	b (III)Lnet/minecraft/world/level/material/Fluid; getFluidState
	b (Lnet/minecraft/network/PacketDataSerializer;)V readBiomes
	c ()Z hasOnlyAir
	c (III)Lnet/minecraft/core/Holder; getNoiseBiome
	c (Lnet/minecraft/network/PacketDataSerializer;)V write
	d ()Z isRandomlyTicking
	e ()Z isRandomlyTickingBlocks
	f ()Z isRandomlyTickingFluids
	g ()I bottomBlockY
	h ()V recalcBlockCounts
	i ()Lnet/minecraft/world/level/chunk/DataPaletteBlock; getStates
	j ()Lnet/minecraft/world/level/chunk/PalettedContainerRO; getBiomes
	k ()I getSerializedSize
net/minecraft/world/level/chunk/ChunkStatus$Type net/minecraft/world/level/chunk/ChunkStatus$ChunkType
	a PROTOCHUNK
	b LEVELCHUNK
	c $VALUES
	a ()[Lnet/minecraft/world/level/chunk/ChunkStatus$Type; $values
net/minecraft/world/level/chunk/DataPalette net/minecraft/world/level/chunk/Palette
	a ()I getSerializedSize
	a (I)Ljava/lang/Object; valueFor
	a (Ljava/lang/Object;)I idFor
	a (Ljava/util/function/Predicate;)Z maybeHas
	a (Lnet/minecraft/network/PacketDataSerializer;)V read
	b ()I getSize
	b (Lnet/minecraft/network/PacketDataSerializer;)V write
	c ()Lnet/minecraft/world/level/chunk/DataPalette; copy
net/minecraft/world/level/chunk/DataPaletteBlock net/minecraft/world/level/chunk/PalettedContainer
	a MIN_PALETTE_BITS
	b dummyPaletteResize
	c registry
	d data
	e strategy
	f threadingDetector
	a ()V acquire
	a (I)Ljava/lang/Object; get
	a (III)Ljava/lang/Object; get
	a (IIILjava/lang/Object;)Ljava/lang/Object; getAndSet
	a (ILjava/lang/Object;)Ljava/lang/Object; getAndSet
	a (Ldef$b;)V count
	a (Ldef$c;I)Ldef$c; createOrReuseData
	a (Ljava/util/function/Consumer;)V getAll
	a (Ljava/util/function/Predicate;)Z maybeHas
	a (Lnet/minecraft/core/Registry;Lcom/mojang/serialization/Codec;Ldef$d;Ljava/lang/Object;)Lcom/mojang/serialization/Codec; codecRW
	a (Lnet/minecraft/core/Registry;Lcom/mojang/serialization/Codec;Ldef$d;Ljava/lang/Object;Ldeg$b;)Lcom/mojang/serialization/Codec; codec
	a (Lnet/minecraft/core/Registry;Ldef$d;)Ldeg$a; pack
	a (Lnet/minecraft/core/Registry;Ldef$d;Ldeg$a;)Lcom/mojang/serialization/DataResult; unpack
	a (Lnet/minecraft/network/PacketDataSerializer;)V read
	a ([ILjava/util/function/IntUnaryOperator;)V swapPalette
	b ()V release
	b (IIILjava/lang/Object;)Ljava/lang/Object; getAndSetUnchecked
	b (ILjava/lang/Object;)V set
	b (Lnet/minecraft/core/Registry;Lcom/mojang/serialization/Codec;Ldef$d;Ljava/lang/Object;)Lcom/mojang/serialization/Codec; codecRO
	b (Lnet/minecraft/network/PacketDataSerializer;)V write
	c ()I getSerializedSize
	c (IIILjava/lang/Object;)V set
	d ()Lnet/minecraft/world/level/chunk/DataPaletteBlock; copy
	e ()Lnet/minecraft/world/level/chunk/DataPaletteBlock; recreate
net/minecraft/world/level/chunk/DataPaletteExpandable net/minecraft/world/level/chunk/PaletteResize
net/minecraft/world/level/chunk/DataPaletteGlobal net/minecraft/world/level/chunk/GlobalPalette
	a registry
	a ()I getSerializedSize
	a (I)Ljava/lang/Object; valueFor
	a (ILnet/minecraft/core/Registry;Lnet/minecraft/world/level/chunk/DataPaletteExpandable;Ljava/util/List;)Lnet/minecraft/world/level/chunk/DataPalette; create
	a (Ljava/lang/Object;)I idFor
	a (Ljava/util/function/Predicate;)Z maybeHas
	a (Lnet/minecraft/network/PacketDataSerializer;)V read
	b ()I getSize
	b (Lnet/minecraft/network/PacketDataSerializer;)V write
	c ()Lnet/minecraft/world/level/chunk/DataPalette; copy
net/minecraft/world/level/chunk/DataPaletteHash net/minecraft/world/level/chunk/HashMapPalette
	a registry
	b values
	c resizeHandler
	d bits
	a ()I getSerializedSize
	a (I)Ljava/lang/Object; valueFor
	a (ILnet/minecraft/core/Registry;Lnet/minecraft/world/level/chunk/DataPaletteExpandable;Ljava/util/List;)Lnet/minecraft/world/level/chunk/DataPalette; create
	a (Ljava/lang/Object;)I idFor
	a (Ljava/util/function/Predicate;)Z maybeHas
	a (Lnet/minecraft/network/PacketDataSerializer;)V read
	b ()I getSize
	b (Lnet/minecraft/network/PacketDataSerializer;)V write
	c ()Lnet/minecraft/world/level/chunk/DataPalette; copy
	d ()Ljava/util/List; getEntries
net/minecraft/world/level/chunk/DataPaletteLinear net/minecraft/world/level/chunk/LinearPalette
	a registry
	b values
	c resizeHandler
	d bits
	e size
	a ()I getSerializedSize
	a (I)Ljava/lang/Object; valueFor
	a (ILnet/minecraft/core/Registry;Lnet/minecraft/world/level/chunk/DataPaletteExpandable;Ljava/util/List;)Lnet/minecraft/world/level/chunk/DataPalette; create
	a (Ljava/lang/Object;)I idFor
	a (Ljava/util/function/Predicate;)Z maybeHas
	a (Lnet/minecraft/network/PacketDataSerializer;)V read
	b ()I getSize
	b (Lnet/minecraft/network/PacketDataSerializer;)V write
	c ()Lnet/minecraft/world/level/chunk/DataPalette; copy
net/minecraft/world/level/chunk/IChunkAccess net/minecraft/world/level/chunk/ChunkAccess
	a postProcessing
	b unsaved
	c chunkPos
	d noiseChunk
	e upgradeData
	f blendingData
	g heightmaps
	h pendingBlockEntities
	i blockEntities
	j levelHeightAccessor
	k sections
	l LOGGER
	m EMPTY_REFERENCE_SET
	n isLightCorrect
	o inhabitedTime
	p carverBiomeSettings
	q structureStarts
	r structuresRefences
	a ()Lnet/minecraft/world/level/chunk/ChunkSection; getHighestSection
	a (I)Lnet/minecraft/world/level/gameevent/GameEventListenerRegistry; getListenerRegistry
	a (II)Z isYSpaceEmpty
	a (J)V incrementInhabitedTime
	a (Ljava/util/Map;)V setAllStarts
	a (Ljava/util/function/Function;)Lnet/minecraft/world/level/levelgen/NoiseChunk; getOrCreateNoiseChunk
	a (Ljava/util/function/Supplier;)Lnet/minecraft/world/level/biome/BiomeSettingsGeneration; carverBiome
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)Lnet/minecraft/world/level/block/state/IBlockData; setBlockState
	a (Lnet/minecraft/nbt/NBTTagCompound;)V setBlockEntityNbt
	a (Lnet/minecraft/world/entity/Entity;)V addEntity
	a (Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/core/IRegistry;[Lnet/minecraft/world/level/chunk/ChunkSection;)V replaceMissingSections
	a (Lnet/minecraft/world/level/biome/BiomeResolver;Lnet/minecraft/world/level/biome/Climate$Sampler;)V fillBiomesFromNoise
	a (Lnet/minecraft/world/level/block/entity/TileEntity;)V setBlockEntity
	a (Lnet/minecraft/world/level/levelgen/HeightMap$Type;)Lnet/minecraft/world/level/levelgen/HeightMap; getOrCreateHeightmapUnprimed
	a (Lnet/minecraft/world/level/levelgen/HeightMap$Type;II)I getHeight
	a (Lnet/minecraft/world/level/levelgen/HeightMap$Type;[J)V setHeightmap
	a (Lnet/minecraft/world/level/levelgen/blending/BlendingData;)V setBlendingData
	a (Lnet/minecraft/world/level/levelgen/structure/Structure;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; getStartForStructure
	a (Lnet/minecraft/world/level/levelgen/structure/Structure;J)V addReferenceForStructure
	a (Lnet/minecraft/world/level/levelgen/structure/Structure;Lnet/minecraft/world/level/levelgen/structure/StructureStart;)V setStartForStructure
	a (SI)V addPackedPostProcess
	a (Z)V setUnsaved
	a ([Lit/unimi/dsi/fastutil/shorts/ShortList;I)Lit/unimi/dsi/fastutil/shorts/ShortList; getOrCreateOffsetList
	b ()I getHighestSectionPosition
	b (I)Lnet/minecraft/world/level/chunk/ChunkSection; getSection
	b (J)V setInhabitedTime
	b (Ljava/util/Map;)V setAllReferences
	b (Lnet/minecraft/world/level/levelgen/HeightMap$Type;)Z hasPrimedHeightmap
	b (Lnet/minecraft/world/level/levelgen/structure/Structure;)Lit/unimi/dsi/fastutil/longs/LongSet; getReferencesForStructure
	b (Z)V setLightCorrect
	c ()Ljava/util/Set; getBlockEntitiesPos
	d ()[Lnet/minecraft/world/level/chunk/ChunkSection; getSections
	d (Lnet/minecraft/core/BlockPosition;)V removeBlockEntity
	e ()Ljava/util/Collection; getHeightmaps
	e (Lnet/minecraft/core/BlockPosition;)V markPosForPostprocessing
	f ()Lnet/minecraft/world/level/ChunkCoordIntPair; getPos
	f (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/nbt/NBTTagCompound; getBlockEntityNbt
	g ()Ljava/util/Map; getAllStarts
	g (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/nbt/NBTTagCompound; getBlockEntityNbtForSaving
	h ()Ljava/util/Map; getAllReferences
	i ()Z isUnsaved
	j ()Lnet/minecraft/world/level/chunk/ChunkStatus; getStatus
	k ()[Lit/unimi/dsi/fastutil/shorts/ShortList; getPostProcessing
	n ()Ljava/util/stream/Stream; getLights
	o ()Lnet/minecraft/world/ticks/TickContainerAccess; getBlockTicks
	p ()Lnet/minecraft/world/ticks/TickContainerAccess; getFluidTicks
	q ()Lddn$a; getTicksForSerialization
	r ()Lnet/minecraft/world/level/chunk/ChunkConverter; getUpgradeData
	s ()Z isOldNoiseGeneration
	t ()Lnet/minecraft/world/level/levelgen/blending/BlendingData; getBlendingData
	u ()J getInhabitedTime
	v ()Z isLightCorrect
	v_ ()I getMinBuildHeight
	w ()Z hasAnyStructureReferences
	w_ ()I getHeight
	x ()Lnet/minecraft/world/level/levelgen/BelowZeroRetrogen; getBelowZeroRetrogen
	y ()Z isUpgrading
	z ()Lnet/minecraft/world/level/LevelHeightAccessor; getHeightAccessorForGeneration
net/minecraft/world/level/chunk/IChunkProvider net/minecraft/world/level/chunk/ChunkSource
	a (II)Lnet/minecraft/world/level/chunk/Chunk; getChunkNow
	a (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/IChunkAccess; getChunk
	a (IIZ)Lnet/minecraft/world/level/chunk/Chunk; getChunk
	a (Ljava/util/function/BooleanSupplier;Z)V tick
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Z)V updateChunkForced
	a (ZZ)V setSpawnSettings
	b (II)Z hasChunk
	c (II)Lnet/minecraft/world/level/IBlockAccess; getChunkForLighting
	e ()Ljava/lang/String; gatherStats
	j ()I getLoadedChunksCount
	p ()Lnet/minecraft/world/level/lighting/LightEngine; getLightEngine
net/minecraft/world/level/chunk/ILightAccess net/minecraft/world/level/chunk/LightChunkGetter
	a (Lnet/minecraft/world/level/EnumSkyBlock;Lnet/minecraft/core/SectionPosition;)V onLightUpdate
	c (II)Lnet/minecraft/world/level/IBlockAccess; getChunkForLighting
	q ()Lnet/minecraft/world/level/IBlockAccess; getLevel
net/minecraft/world/level/chunk/NibbleArray net/minecraft/world/level/chunk/DataLayer
	a LAYER_COUNT
	b LAYER_SIZE
	c SIZE
	d data
	e NIBBLE_SIZE
	a ()[B getData
	a (I)Ljava/lang/String; layerToString
	a (II)V set
	a (III)I get
	a (IIII)V set
	b ()Lnet/minecraft/world/level/chunk/NibbleArray; copy
	b (I)I get
	b (III)I getIndex
	c ()Z isEmpty
	c (I)I getNibbleIndex
	d (I)I getByteIndex
net/minecraft/world/level/chunk/ProtoChunkExtension net/minecraft/world/level/chunk/ImposterProtoChunk
	l wrapped
	m allowWrites
	A ()Lnet/minecraft/world/level/chunk/Chunk; getWrapped
	L ()I getMaxLightLevel
	a (Ljava/util/Map;)V setAllStarts
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)Lnet/minecraft/world/level/block/state/IBlockData; setBlockState
	a (Lnet/minecraft/nbt/NBTTagCompound;)V setBlockEntityNbt
	a (Lnet/minecraft/world/entity/Entity;)V addEntity
	a (Lnet/minecraft/world/level/biome/BiomeResolver;Lnet/minecraft/world/level/biome/Climate$Sampler;)V fillBiomesFromNoise
	a (Lnet/minecraft/world/level/block/entity/TileEntity;)V setBlockEntity
	a (Lnet/minecraft/world/level/chunk/ChunkStatus;)V setStatus
	a (Lnet/minecraft/world/level/levelgen/HeightMap$Type;)Lnet/minecraft/world/level/levelgen/HeightMap; getOrCreateHeightmapUnprimed
	a (Lnet/minecraft/world/level/levelgen/HeightMap$Type;II)I getHeight
	a (Lnet/minecraft/world/level/levelgen/HeightMap$Type;[J)V setHeightmap
	a (Lnet/minecraft/world/level/levelgen/WorldGenStage$Features;)Lnet/minecraft/world/level/chunk/CarvingMask; getCarvingMask
	a (Lnet/minecraft/world/level/levelgen/blending/BlendingData;)V setBlendingData
	a (Lnet/minecraft/world/level/levelgen/structure/Structure;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; getStartForStructure
	a (Lnet/minecraft/world/level/levelgen/structure/Structure;J)V addReferenceForStructure
	a (Lnet/minecraft/world/level/levelgen/structure/Structure;Lnet/minecraft/world/level/levelgen/structure/StructureStart;)V setStartForStructure
	a (Z)V setUnsaved
	a_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; getBlockState
	b (I)Lnet/minecraft/world/level/chunk/ChunkSection; getSection
	b (Ljava/util/Map;)V setAllReferences
	b (Lnet/minecraft/world/level/levelgen/WorldGenStage$Features;)Lnet/minecraft/world/level/chunk/CarvingMask; getOrCreateCarvingMask
	b (Lnet/minecraft/world/level/levelgen/structure/Structure;)Lit/unimi/dsi/fastutil/longs/LongSet; getReferencesForStructure
	b (Z)V setLightCorrect
	b_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	c (Lnet/minecraft/world/level/levelgen/HeightMap$Type;)Lnet/minecraft/world/level/levelgen/HeightMap$Type; fixType
	c_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/entity/TileEntity; getBlockEntity
	d ()[Lnet/minecraft/world/level/chunk/ChunkSection; getSections
	d (Lnet/minecraft/core/BlockPosition;)V removeBlockEntity
	e (Lnet/minecraft/core/BlockPosition;)V markPosForPostprocessing
	f ()Lnet/minecraft/world/level/ChunkCoordIntPair; getPos
	f (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/nbt/NBTTagCompound; getBlockEntityNbt
	g ()Ljava/util/Map; getAllStarts
	g (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/nbt/NBTTagCompound; getBlockEntityNbtForSaving
	h ()Ljava/util/Map; getAllReferences
	i ()Z isUnsaved
	j ()Lnet/minecraft/world/level/chunk/ChunkStatus; getStatus
	n ()Ljava/util/stream/Stream; getLights
	o ()Lnet/minecraft/world/ticks/TickContainerAccess; getBlockTicks
	p ()Lnet/minecraft/world/ticks/TickContainerAccess; getFluidTicks
	q ()Lddn$a; getTicksForSerialization
	t ()Lnet/minecraft/world/level/levelgen/blending/BlendingData; getBlendingData
	v ()Z isLightCorrect
net/minecraft/world/level/chunk/storage/ChunkRegionLoader net/minecraft/world/level/chunk/storage/ChunkSerializer
	a X_POS_TAG
	b Z_POS_TAG
	c HEIGHTMAPS_TAG
	d IS_LIGHT_ON_TAG
	e SECTIONS_TAG
	f BLOCK_LIGHT_TAG
	g SKY_LIGHT_TAG
	h BLOCK_STATE_CODEC
	i LOGGER
	j TAG_UPGRADE_DATA
	k BLOCK_TICKS_TAG
	l FLUID_TICKS_TAG
	a (Lnet/minecraft/core/IRegistry;)Lcom/mojang/serialization/Codec; makeBiomeCodec
	a (Lnet/minecraft/core/IRegistryCustom;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/nbt/NBTTagCompound;)Ljava/util/Map; unpackStructureReferences
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/level/chunk/ChunkStatus$Type; getChunkTypeFromTag
	a (Lnet/minecraft/nbt/NBTTagCompound;Ljava/lang/String;)Lnet/minecraft/nbt/NBTTagList; getListOfCompoundsOrNull
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/nbt/NBTTagCompound;)Lddy$c; postLoadChunk
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/nbt/NBTTagCompound;Lddn$a;)V saveTicks
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/ai/village/poi/VillagePlace;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/level/chunk/ProtoChunk; read
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/chunk/IChunkAccess;)Lnet/minecraft/nbt/NBTTagCompound; write
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;ILjava/lang/String;)V logErrors
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;J)Ljava/util/Map; unpackStructureStart
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/world/level/ChunkCoordIntPair;Ljava/util/Map;Ljava/util/Map;)Lnet/minecraft/nbt/NBTTagCompound; packStructureData
	a ([Lit/unimi/dsi/fastutil/shorts/ShortList;)Lnet/minecraft/nbt/NBTTagList; packOffsets
net/minecraft/world/level/chunk/storage/IChunkLoader net/minecraft/world/level/chunk/storage/ChunkStorage
	a worker
	b legacyStructureHandler
	d LAST_MONOLYTH_STRUCTURE_DATA_VERSION
	e fixerUpper
	a (Lnet/minecraft/nbt/NBTTagCompound;)I getVersion
	a (Lnet/minecraft/nbt/NBTTagCompound;Lnet/minecraft/resources/ResourceKey;Ljava/util/Optional;)V injectDatafixingContext
	a (Lnet/minecraft/resources/ResourceKey;Ljava/util/function/Supplier;)Lnet/minecraft/world/level/levelgen/structure/PersistentStructureLegacy; getLegacyStructureHandler
	a (Lnet/minecraft/resources/ResourceKey;Ljava/util/function/Supplier;Lnet/minecraft/nbt/NBTTagCompound;Ljava/util/Optional;)Lnet/minecraft/nbt/NBTTagCompound; upgradeChunkTag
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;I)Z isOldChunkAround
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/nbt/NBTTagCompound;)V write
	f (Lnet/minecraft/world/level/ChunkCoordIntPair;)Ljava/util/concurrent/CompletableFuture; read
	o ()V flushWorker
	p ()Lnet/minecraft/world/level/chunk/storage/ChunkScanAccess; chunkScanner
net/minecraft/world/level/chunk/storage/RegionFileBitSet net/minecraft/world/level/chunk/storage/RegionBitmap
	a used
	a ()Lit/unimi/dsi/fastutil/ints/IntSet; getUsed
	a (I)I allocate
	a (II)V force
	b (II)V free
net/minecraft/world/level/chunk/storage/RegionFileCache net/minecraft/world/level/chunk/storage/RegionFileStorage
	a ANVIL_EXTENSION
	b MAX_CACHE_SIZE
	c regionCache
	d folder
	e sync
	a ()V flush
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;)Lnet/minecraft/nbt/NBTTagCompound; read
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/nbt/NBTTagCompound;)V write
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/nbt/StreamTagVisitor;)V scanChunk
	b (Lnet/minecraft/world/level/ChunkCoordIntPair;)Lnet/minecraft/world/level/chunk/storage/RegionFile; getRegionFile
net/minecraft/world/level/chunk/storage/RegionFileCompression net/minecraft/world/level/chunk/storage/RegionFileVersion
	a VERSION_GZIP
	b VERSION_DEFLATE
	c VERSION_NONE
	d VERSIONS
	e id
	f inputWrapper
	g outputWrapper
	a ()I getId
	a (I)Lnet/minecraft/world/level/chunk/storage/RegionFileCompression; fromId
	a (Ljava/io/InputStream;)Ljava/io/InputStream; wrap
	a (Ljava/io/OutputStream;)Ljava/io/OutputStream; wrap
	a (Lnet/minecraft/world/level/chunk/storage/RegionFileCompression;)Lnet/minecraft/world/level/chunk/storage/RegionFileCompression; register
	b (I)Z isValidVersion
net/minecraft/world/level/chunk/storage/RegionFileSection net/minecraft/world/level/chunk/storage/SectionStorage
	a LOGGER
	b SECTIONS_TAG
	c levelHeightAccessor
	d worker
	e storage
	f dirty
	g codec
	h factory
	i fixerUpper
	j type
	k registryAccess
	a ()Z hasWork
	a (J)V setDirty
	a (Lcom/mojang/serialization/Dynamic;)I getVersion
	a (Ljava/util/function/BooleanSupplier;)V tick
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;)V flush
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;I)J getKey
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; writeColumn
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)V readColumn
	b (J)V onSectionLoad
	b (Lnet/minecraft/world/level/ChunkCoordIntPair;)V readColumn
	c (J)Ljava/util/Optional; get
	c (Lnet/minecraft/world/level/ChunkCoordIntPair;)Ljava/util/concurrent/CompletableFuture; tryRead
	d (J)Ljava/util/Optional; getOrLoad
	d (Lnet/minecraft/world/level/ChunkCoordIntPair;)V writeColumn
	e (J)Z outsideStoredRange
	f (J)Ljava/lang/Object; getOrCreate
net/minecraft/world/level/dimension/DimensionManager net/minecraft/world/level/dimension/DimensionType
	a BITS_FOR_Y
	b MIN_HEIGHT
	c Y_SIZE
	d MAX_Y
	e MIN_Y
	f WAY_ABOVE_MAX_Y
	g WAY_BELOW_MIN_Y
	h DIRECT_CODEC
	i MOON_BRIGHTNESS_PER_PHASE
	j CODEC
	k fixedTime
	l hasSkyLight
	m hasCeiling
	n ultraWarm
	o natural
	p coordinateScale
	q bedWorks
	r respawnAnchorWorks
	s minY
	t height
	u logicalHeight
	v infiniburn
	w effectsLocation
	x ambientLight
	y monsterSettings
	z MOON_PHASES
	a ()Z hasFixedTime
	a (J)F timeOfDay
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult; parseLegacy
	a (Lnet/minecraft/resources/ResourceKey;Ljava/nio/file/Path;)Ljava/nio/file/Path; getStorageFolder
	a (Lnet/minecraft/world/level/dimension/DimensionManager;Lnet/minecraft/world/level/dimension/DimensionManager;)D getTeleportationScale
	b ()Z piglinSafe
	b (J)I moonPhase
	c ()Z hasRaids
	d ()Lnet/minecraft/util/valueproviders/IntProvider; monsterSpawnLightTest
	e ()I monsterSpawnBlockLightLimit
	f ()Ljava/util/OptionalLong; fixedTime
	g ()Z hasSkyLight
	h ()Z hasCeiling
	i ()Z ultraWarm
	j ()Z natural
	k ()D coordinateScale
	l ()Z bedWorks
	m ()Z respawnAnchorWorks
	n ()I minY
	o ()I height
	p ()I logicalHeight
	q ()Lnet/minecraft/tags/TagKey; infiniburn
	r ()Lnet/minecraft/resources/MinecraftKey; effectsLocation
	s ()F ambientLight
	t ()Ldez$a; monsterSettings
net/minecraft/world/level/dimension/WorldDimension net/minecraft/world/level/dimension/LevelStem
	a CODEC
	b OVERWORLD
	c NETHER
	d END
	e type
	f generator
	a ()Lnet/minecraft/core/Holder; type
	b ()Lnet/minecraft/world/level/chunk/ChunkGenerator; generator
net/minecraft/world/level/dimension/end/EnderDragonBattle net/minecraft/world/level/dimension/end/EndDragonFight
	a ARENA_TICKET_LEVEL
	b DRAGON_SPAWN_Y
	c LOGGER
	d MAX_TICKS_BEFORE_DRAGON_RESPAWN
	e TIME_BETWEEN_CRYSTAL_SCANS
	f TIME_BETWEEN_PLAYER_SCANS
	g ARENA_SIZE_CHUNKS
	h GATEWAY_COUNT
	i GATEWAY_DISTANCE
	j VALID_PLAYER
	k dragonEvent
	l level
	m gateways
	n exitPortalPattern
	o ticksSinceDragonSeen
	p crystalsAlive
	q ticksSinceCrystalsScanned
	r ticksSinceLastPlayerScan
	s dragonKilled
	t previouslyKilled
	u dragonUUID
	v needsStateScanning
	w portalLocation
	x respawnStage
	y respawnTime
	z respawnCrystals
	a ()Lnet/minecraft/nbt/NBTTagCompound; saveData
	a (Ljava/util/List;)V respawnDragon
	a (Lnet/minecraft/core/BlockPosition;)V spawnNewGateway
	a (Lnet/minecraft/world/entity/boss/enderdragon/EntityEnderCrystal;Lnet/minecraft/world/damagesource/DamageSource;)V onCrystalDestroyed
	a (Lnet/minecraft/world/entity/boss/enderdragon/EntityEnderDragon;)V setDragonKilled
	a (Lnet/minecraft/world/level/dimension/end/EnumDragonRespawn;)V setRespawnStage
	a (Z)V spawnExitPortal
	b ()V tick
	b (Lnet/minecraft/world/entity/boss/enderdragon/EntityEnderDragon;)V updateDragon
	c ()I getCrystalsAlive
	d ()Z hasPreviouslyKilledDragon
	e ()V tryRespawn
	f ()V resetSpikeCrystals
	g ()V scanState
	h ()V findOrCreateDragon
	i ()Z hasActiveExitPortal
	j ()Lnet/minecraft/world/level/block/state/pattern/ShapeDetector$ShapeDetectorCollection; findExitPortal
	k ()Z isArenaLoaded
	l ()V updatePlayers
	m ()V updateCrystalCount
	n ()V spawnNewGateway
	o ()Lnet/minecraft/world/entity/boss/enderdragon/EntityEnderDragon; createNewDragon
net/minecraft/world/level/dimension/end/EnumDragonRespawn net/minecraft/world/level/dimension/end/DragonRespawnAnimation
	a START
	b PREPARING_TO_SUMMON_PILLARS
	c SUMMONING_PILLARS
	d SUMMONING_DRAGON
	e END
	f $VALUES
	a ()[Lnet/minecraft/world/level/dimension/end/EnumDragonRespawn; $values
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/dimension/end/EnderDragonBattle;Ljava/util/List;ILnet/minecraft/core/BlockPosition;)V tick
net/minecraft/world/level/levelgen/ChunkGeneratorAbstract net/minecraft/world/level/levelgen/NoiseBasedChunkGenerator
	c CODEC
	d AIR
	e settings
	f globalFluidPicker
	a ()Lcom/mojang/serialization/Codec; codec
	a (IILnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;)Lnet/minecraft/world/level/BlockColumn; getBaseColumn
	a (IILnet/minecraft/world/level/levelgen/HeightMap$Type;Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;)I getBaseHeight
	a (Ljava/util/List;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/core/BlockPosition;)V addDebugScreenInfo
	a (Ljava/util/concurrent/Executor;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/levelgen/blending/Blender;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/IChunkAccess;)Ljava/util/concurrent/CompletableFuture; createBiomes
	a (Ljava/util/concurrent/Executor;Lnet/minecraft/world/level/levelgen/blending/Blender;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/IChunkAccess;)Ljava/util/concurrent/CompletableFuture; fillFromNoise
	a (Lnet/minecraft/resources/ResourceKey;)Z stable
	a (Lnet/minecraft/server/level/RegionLimitedWorldAccess;)V spawnOriginalMobs
	a (Lnet/minecraft/server/level/RegionLimitedWorldAccess;JLnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/biome/BiomeManager;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/IChunkAccess;Lnet/minecraft/world/level/levelgen/WorldGenStage$Features;)V applyCarvers
	a (Lnet/minecraft/server/level/RegionLimitedWorldAccess;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/chunk/IChunkAccess;)V buildSurface
	a (Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;IILorg/apache/commons/lang3/mutable/MutableObject;Ljava/util/function/Predicate;)Ljava/util/OptionalInt; iterateNoiseColumn
	a (Lnet/minecraft/world/level/chunk/IChunkAccess;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/levelgen/blending/Blender;Lnet/minecraft/world/level/levelgen/RandomState;)Lnet/minecraft/world/level/levelgen/NoiseChunk; createNoiseChunk
	a (Lnet/minecraft/world/level/chunk/IChunkAccess;Lnet/minecraft/world/level/levelgen/WorldGenerationContext;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/biome/BiomeManager;Lnet/minecraft/core/IRegistry;Lnet/minecraft/world/level/levelgen/blending/Blender;)V buildSurface
	a (Lnet/minecraft/world/level/levelgen/GeneratorSettingBase;)Ldgl$a; createFluidPicker
	a (Lnet/minecraft/world/level/levelgen/NoiseChunk;IIILnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/state/IBlockData; debugPreliminarySurfaceLevel
	a (Lnet/minecraft/world/level/levelgen/blending/Blender;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/chunk/IChunkAccess;II)Lnet/minecraft/world/level/chunk/IChunkAccess; doFill
	a (Lnet/minecraft/world/level/levelgen/blending/Blender;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/IChunkAccess;)V doCreateBiomes
	d ()I getGenDepth
	e ()I getSeaLevel
	f ()I getMinY
	g ()Lnet/minecraft/core/Holder; generatorSettings
net/minecraft/world/level/levelgen/ChunkProviderDebug net/minecraft/world/level/levelgen/DebugLevelSource
	c CODEC
	d AIR
	e BARRIER
	f HEIGHT
	g BARRIER_HEIGHT
	h BLOCK_MARGIN
	i ALL_BLOCKS
	j GRID_WIDTH
	k GRID_HEIGHT
	a ()Lcom/mojang/serialization/Codec; codec
	a (II)Lnet/minecraft/world/level/block/state/IBlockData; getBlockStateFor
	a (IILnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;)Lnet/minecraft/world/level/BlockColumn; getBaseColumn
	a (IILnet/minecraft/world/level/levelgen/HeightMap$Type;Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;)I getBaseHeight
	a (Ljava/util/List;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/core/BlockPosition;)V addDebugScreenInfo
	a (Ljava/util/concurrent/Executor;Lnet/minecraft/world/level/levelgen/blending/Blender;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/IChunkAccess;)Ljava/util/concurrent/CompletableFuture; fillFromNoise
	a (Lnet/minecraft/server/level/RegionLimitedWorldAccess;)V spawnOriginalMobs
	a (Lnet/minecraft/server/level/RegionLimitedWorldAccess;JLnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/biome/BiomeManager;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/IChunkAccess;Lnet/minecraft/world/level/levelgen/WorldGenStage$Features;)V applyCarvers
	a (Lnet/minecraft/server/level/RegionLimitedWorldAccess;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/chunk/IChunkAccess;)V buildSurface
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/chunk/IChunkAccess;Lnet/minecraft/world/level/StructureManager;)V applyBiomeDecoration
	d ()I getGenDepth
	e ()I getSeaLevel
	f ()I getMinY
net/minecraft/world/level/levelgen/ChunkProviderFlat net/minecraft/world/level/levelgen/FlatLevelSource
	c CODEC
	d settings
	a ()Lcom/mojang/serialization/Codec; codec
	a (IILnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;)Lnet/minecraft/world/level/BlockColumn; getBaseColumn
	a (IILnet/minecraft/world/level/levelgen/HeightMap$Type;Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;)I getBaseHeight
	a (Ljava/util/List;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/core/BlockPosition;)V addDebugScreenInfo
	a (Ljava/util/concurrent/Executor;Lnet/minecraft/world/level/levelgen/blending/Blender;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/IChunkAccess;)Ljava/util/concurrent/CompletableFuture; fillFromNoise
	a (Lnet/minecraft/core/HolderLookup;Lnet/minecraft/world/level/levelgen/RandomState;J)Lnet/minecraft/world/level/chunk/ChunkGeneratorStructureState; createState
	a (Lnet/minecraft/server/level/RegionLimitedWorldAccess;)V spawnOriginalMobs
	a (Lnet/minecraft/server/level/RegionLimitedWorldAccess;JLnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/biome/BiomeManager;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/IChunkAccess;Lnet/minecraft/world/level/levelgen/WorldGenStage$Features;)V applyCarvers
	a (Lnet/minecraft/server/level/RegionLimitedWorldAccess;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/chunk/IChunkAccess;)V buildSurface
	a (Lnet/minecraft/world/level/LevelHeightAccessor;)I getSpawnHeight
	d ()I getGenDepth
	e ()I getSeaLevel
	f ()I getMinY
	g ()Lnet/minecraft/world/level/levelgen/flat/GeneratorSettingsFlat; settings
net/minecraft/world/level/levelgen/GeneratorSettingBase net/minecraft/world/level/levelgen/NoiseGeneratorSettings
	a DIRECT_CODEC
	b CODEC
	c OVERWORLD
	d LARGE_BIOMES
	e AMPLIFIED
	f NETHER
	g END
	h CAVES
	i FLOATING_ISLANDS
	j noiseSettings
	k defaultBlock
	l defaultFluid
	m noiseRouter
	n surfaceRule
	o spawnTarget
	p seaLevel
	q disableMobGeneration
	r aquifersEnabled
	s oreVeinsEnabled
	t useLegacyRandomSource
	a ()Z disableMobGeneration
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
	a (Lnet/minecraft/data/worldgen/BootstapContext;ZZ)Lnet/minecraft/world/level/levelgen/GeneratorSettingBase; overworld
	b ()Z isAquifersEnabled
	b (Lnet/minecraft/data/worldgen/BootstapContext;)Lnet/minecraft/world/level/levelgen/GeneratorSettingBase; end
	c ()Z oreVeinsEnabled
	c (Lnet/minecraft/data/worldgen/BootstapContext;)Lnet/minecraft/world/level/levelgen/GeneratorSettingBase; nether
	d ()Ldhy$a; getRandomSource
	d (Lnet/minecraft/data/worldgen/BootstapContext;)Lnet/minecraft/world/level/levelgen/GeneratorSettingBase; caves
	e ()Lnet/minecraft/world/level/levelgen/GeneratorSettingBase; dummy
	e (Lnet/minecraft/data/worldgen/BootstapContext;)Lnet/minecraft/world/level/levelgen/GeneratorSettingBase; floatingIslands
	f ()Lnet/minecraft/world/level/levelgen/NoiseSettings; noiseSettings
	g ()Lnet/minecraft/world/level/block/state/IBlockData; defaultBlock
	h ()Lnet/minecraft/world/level/block/state/IBlockData; defaultFluid
	i ()Lnet/minecraft/world/level/levelgen/NoiseRouter; noiseRouter
	j ()Ldhq$o; surfaceRule
	k ()Ljava/util/List; spawnTarget
	l ()I seaLevel
	m ()Z aquifersEnabled
	n ()Z useLegacyRandomSource
net/minecraft/world/level/levelgen/GeneratorSettings net/minecraft/world/level/levelgen/WorldGenSettings
	a CODEC
	b options
	c dimensions
	a ()Lnet/minecraft/world/level/levelgen/WorldOptions; options
	a (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/world/level/levelgen/WorldOptions;Lnet/minecraft/core/IRegistryCustom;)Lcom/mojang/serialization/DataResult; encode
	a (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/world/level/levelgen/WorldOptions;Lnet/minecraft/world/level/levelgen/WorldDimensions;)Lcom/mojang/serialization/DataResult; encode
	b ()Lnet/minecraft/world/level/levelgen/WorldDimensions; dimensions
net/minecraft/world/level/levelgen/HeightMap net/minecraft/world/level/levelgen/Heightmap
	a LOGGER
	b NOT_AIR
	c MATERIAL_MOTION_BLOCKING
	d data
	e isOpaque
	f chunk
	a ()[J getRawData
	a (I)I getFirstAvailable
	a (II)I getFirstAvailable
	a (III)V setHeight
	a (IIILnet/minecraft/world/level/block/state/IBlockData;)Z update
	a (Lnet/minecraft/world/level/chunk/IChunkAccess;Ljava/util/Set;)V primeHeightmaps
	a (Lnet/minecraft/world/level/chunk/IChunkAccess;Lnet/minecraft/world/level/levelgen/HeightMap$Type;[J)V setRawData
	b (II)I getHighestTaken
	c (II)I getIndex
net/minecraft/world/level/levelgen/HeightMap$Type net/minecraft/world/level/levelgen/Heightmap$Types
	a WORLD_SURFACE_WG
	b WORLD_SURFACE
	c OCEAN_FLOOR_WG
	d OCEAN_FLOOR
	e MOTION_BLOCKING
	f MOTION_BLOCKING_NO_LEAVES
	g CODEC
	h serializationKey
	i usage
	j isOpaque
	k $VALUES
	a ()Ljava/lang/String; getSerializationKey
	b ()Z sendToClient
	c ()Ljava/lang/String; getSerializedName
	d ()Z keepAfterWorldgen
	e ()Ljava/util/function/Predicate; isOpaque
	f ()[Lnet/minecraft/world/level/levelgen/HeightMap$Type; $values
net/minecraft/world/level/levelgen/HeightMap$Use net/minecraft/world/level/levelgen/Heightmap$Usage
	a WORLDGEN
	b LIVE_WORLD
	c CLIENT
	d $VALUES
	a ()[Lnet/minecraft/world/level/levelgen/HeightMap$Use; $values
net/minecraft/world/level/levelgen/MobSpawnerPatrol net/minecraft/world/level/levelgen/PatrolSpawner
	a nextTick
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;Z)Z spawnPatrolMember
	a (Lnet/minecraft/server/level/WorldServer;ZZ)I tick
net/minecraft/world/level/levelgen/MobSpawnerPhantom net/minecraft/world/level/levelgen/PhantomSpawner
	a nextTick
	a (Lnet/minecraft/server/level/WorldServer;ZZ)I tick
net/minecraft/world/level/levelgen/SeededRandom net/minecraft/world/level/levelgen/WorldgenRandom
	d randomSource
	e count
	a (IIJJ)Lnet/minecraft/util/RandomSource; seedSlimeChunk
	a (JII)J setDecorationSeed
	a (JIII)V setLargeFeatureWithSalt
	b (J)V setSeed
	b (JII)V setFeatureSeed
	c (I)I next
	c (JII)V setLargeFeatureSeed
	d ()Lnet/minecraft/util/RandomSource; fork
	e ()Lnet/minecraft/world/level/levelgen/PositionalRandomFactory; forkPositional
	l ()I getCount
net/minecraft/world/level/levelgen/WorldGenStage net/minecraft/world/level/levelgen/GenerationStep
net/minecraft/world/level/levelgen/WorldGenStage$Decoration net/minecraft/world/level/levelgen/GenerationStep$Decoration
	a RAW_GENERATION
	b LAKES
	c LOCAL_MODIFICATIONS
	d UNDERGROUND_STRUCTURES
	e SURFACE_STRUCTURES
	f STRONGHOLDS
	g UNDERGROUND_ORES
	h UNDERGROUND_DECORATION
	i FLUID_SPRINGS
	j VEGETAL_DECORATION
	k TOP_LAYER_MODIFICATION
	l CODEC
	m name
	n $VALUES
	a ()Ljava/lang/String; getName
	b ()[Lnet/minecraft/world/level/levelgen/WorldGenStage$Decoration; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/level/levelgen/WorldGenStage$Features net/minecraft/world/level/levelgen/GenerationStep$Carving
	a AIR
	b LIQUID
	c CODEC
	d name
	e $VALUES
	a ()Ljava/lang/String; getName
	b ()[Lnet/minecraft/world/level/levelgen/WorldGenStage$Features; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/level/levelgen/carver/WorldGenCanyon net/minecraft/world/level/levelgen/carver/CanyonWorldCarver
	a (Lnet/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration;Lnet/minecraft/util/RandomSource;)Z isStartChunk
	a (Lnet/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration;Lnet/minecraft/util/RandomSource;DFF)D updateVerticalRadius
	a (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration;Lnet/minecraft/util/RandomSource;)[F initWidthFactors
	a (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration;Lnet/minecraft/world/level/chunk/IChunkAccess;Ljava/util/function/Function;JLnet/minecraft/world/level/levelgen/Aquifer;DDDFFFIIDLnet/minecraft/world/level/chunk/CarvingMask;)V doCarve
	a (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration;Lnet/minecraft/world/level/chunk/IChunkAccess;Ljava/util/function/Function;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/Aquifer;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/world/level/chunk/CarvingMask;)Z carve
	a (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/WorldGenCarverConfiguration;Lnet/minecraft/world/level/chunk/IChunkAccess;Ljava/util/function/Function;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/Aquifer;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/world/level/chunk/CarvingMask;)Z carve
	a (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;[FDDDI)Z shouldSkip
	a (Lnet/minecraft/world/level/levelgen/carver/WorldGenCarverConfiguration;Lnet/minecraft/util/RandomSource;)Z isStartChunk
net/minecraft/world/level/levelgen/carver/WorldGenCarverAbstract net/minecraft/world/level/levelgen/carver/WorldCarver
	a CAVE
	b NETHER_CAVE
	c CANYON
	d AIR
	e CAVE_AIR
	f WATER
	g LAVA
	h liquids
	i configuredCodec
	a (Ljava/lang/String;Lnet/minecraft/world/level/levelgen/carver/WorldGenCarverAbstract;)Lnet/minecraft/world/level/levelgen/carver/WorldGenCarverAbstract; register
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;DDIIF)Z canReach
	a (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/WorldGenCarverConfiguration;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/Aquifer;)Lnet/minecraft/world/level/block/state/IBlockData; getCarveState
	a (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/WorldGenCarverConfiguration;Lnet/minecraft/world/level/chunk/IChunkAccess;Ljava/util/function/Function;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/Aquifer;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/world/level/chunk/CarvingMask;)Z carve
	a (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/WorldGenCarverConfiguration;Lnet/minecraft/world/level/chunk/IChunkAccess;Ljava/util/function/Function;Lnet/minecraft/world/level/chunk/CarvingMask;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;Lnet/minecraft/world/level/levelgen/Aquifer;Lorg/apache/commons/lang3/mutable/MutableBoolean;)Z carveBlock
	a (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/WorldGenCarverConfiguration;Lnet/minecraft/world/level/chunk/IChunkAccess;Ljava/util/function/Function;Lnet/minecraft/world/level/levelgen/Aquifer;DDDDDLnet/minecraft/world/level/chunk/CarvingMask;Ldje$a;)Z carveEllipsoid
	a (Lnet/minecraft/world/level/levelgen/carver/WorldGenCarverConfiguration;)Lnet/minecraft/world/level/levelgen/carver/WorldGenCarverWrapper; configured
	a (Lnet/minecraft/world/level/levelgen/carver/WorldGenCarverConfiguration;Lnet/minecraft/util/RandomSource;)Z isStartChunk
	a (Lnet/minecraft/world/level/levelgen/carver/WorldGenCarverConfiguration;Lnet/minecraft/world/level/block/state/IBlockData;)Z canReplaceBlock
	b (Lnet/minecraft/world/level/levelgen/carver/WorldGenCarverConfiguration;)Z isDebugEnabled
	b (Lnet/minecraft/world/level/levelgen/carver/WorldGenCarverConfiguration;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/state/IBlockData; getDebugState
	c ()Lcom/mojang/serialization/Codec; configuredCodec
	d ()I getRange
net/minecraft/world/level/levelgen/carver/WorldGenCarverConfiguration net/minecraft/world/level/levelgen/carver/CarverConfiguration
	d CODEC
	e y
	f yScale
	g lavaLevel
	h debugSettings
	i replaceable
net/minecraft/world/level/levelgen/carver/WorldGenCarverWrapper net/minecraft/world/level/levelgen/carver/ConfiguredWorldCarver
	a DIRECT_CODEC
	b CODEC
	c LIST_CODEC
	d worldCarver
	e config
	a ()Lnet/minecraft/world/level/levelgen/carver/WorldGenCarverAbstract; worldCarver
	a (Lnet/minecraft/util/RandomSource;)Z isStartChunk
	a (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/chunk/IChunkAccess;Ljava/util/function/Function;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/Aquifer;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/world/level/chunk/CarvingMask;)Z carve
	b ()Lnet/minecraft/world/level/levelgen/carver/WorldGenCarverConfiguration; config
net/minecraft/world/level/levelgen/carver/WorldGenCaves net/minecraft/world/level/levelgen/carver/CaveWorldCarver
	a ()I getCaveBound
	a (DDDD)Z shouldSkip
	a (Lnet/minecraft/util/RandomSource;)F getThickness
	a (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CaveCarverConfiguration;Lnet/minecraft/world/level/chunk/IChunkAccess;Ljava/util/function/Function;JLnet/minecraft/world/level/levelgen/Aquifer;DDDDDFFFIIDLnet/minecraft/world/level/chunk/CarvingMask;Ldje$a;)V createTunnel
	a (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CaveCarverConfiguration;Lnet/minecraft/world/level/chunk/IChunkAccess;Ljava/util/function/Function;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/Aquifer;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/world/level/chunk/CarvingMask;)Z carve
	a (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CaveCarverConfiguration;Lnet/minecraft/world/level/chunk/IChunkAccess;Ljava/util/function/Function;Lnet/minecraft/world/level/levelgen/Aquifer;DDDFDLnet/minecraft/world/level/chunk/CarvingMask;Ldje$a;)V createRoom
	a (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/WorldGenCarverConfiguration;Lnet/minecraft/world/level/chunk/IChunkAccess;Ljava/util/function/Function;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/Aquifer;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/world/level/chunk/CarvingMask;)Z carve
	a (Lnet/minecraft/world/level/levelgen/carver/CaveCarverConfiguration;Lnet/minecraft/util/RandomSource;)Z isStartChunk
	a (Lnet/minecraft/world/level/levelgen/carver/WorldGenCarverConfiguration;Lnet/minecraft/util/RandomSource;)Z isStartChunk
	b ()D getYScale
net/minecraft/world/level/levelgen/carver/WorldGenCavesHell net/minecraft/world/level/levelgen/carver/NetherWorldCarver
	a ()I getCaveBound
	a (Lnet/minecraft/util/RandomSource;)F getThickness
	a (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CaveCarverConfiguration;Lnet/minecraft/world/level/chunk/IChunkAccess;Ljava/util/function/Function;Lnet/minecraft/world/level/chunk/CarvingMask;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;Lnet/minecraft/world/level/levelgen/Aquifer;Lorg/apache/commons/lang3/mutable/MutableBoolean;)Z carveBlock
	a (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/WorldGenCarverConfiguration;Lnet/minecraft/world/level/chunk/IChunkAccess;Ljava/util/function/Function;Lnet/minecraft/world/level/chunk/CarvingMask;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;Lnet/minecraft/world/level/levelgen/Aquifer;Lorg/apache/commons/lang3/mutable/MutableBoolean;)Z carveBlock
	b ()D getYScale
net/minecraft/world/level/levelgen/feature/WorldGenBonusChest net/minecraft/world/level/levelgen/feature/BonusChestFeature
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenDesertWell net/minecraft/world/level/levelgen/feature/DesertWellFeature
	a IS_SAND
	b sandSlab
	c sandstone
	d water
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V placeSandFloor
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenDungeons net/minecraft/world/level/levelgen/feature/MonsterRoomFeature
	a LOGGER
	b MOBS
	c AIR
	a (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/entity/EntityTypes; randomEntityId
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenEndGateway net/minecraft/world/level/levelgen/feature/EndGatewayFeature
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenEndIsland net/minecraft/world/level/levelgen/feature/EndIslandFeature
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenEndTrophy net/minecraft/world/level/levelgen/feature/EndPodiumFeature
	a PODIUM_RADIUS
	ao active
	b PODIUM_PILLAR_HEIGHT
	c RIM_RADIUS
	d CORNER_ROUNDING
	e END_PODIUM_LOCATION
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenEnder net/minecraft/world/level/levelgen/feature/SpikeFeature
	a NUMBER_OF_SPIKES
	b SPIKE_DISTANCE
	c SPIKE_CACHE
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;)Ljava/util/List; getSpikesForLevel
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureEndSpikeConfiguration;Lnet/minecraft/world/level/levelgen/feature/WorldGenEnder$Spike;)V placeSpike
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenEnder$Spike net/minecraft/world/level/levelgen/feature/SpikeFeature$EndSpike
	a CODEC
	b centerX
	c centerZ
	d radius
	e height
	f guarded
	g topBoundingBox
	a ()I getCenterX
	a (Lnet/minecraft/core/BlockPosition;)Z isCenterWithinChunk
	b ()I getCenterZ
	c ()I getRadius
	d ()I getHeight
	e ()Z isGuarded
	f ()Lnet/minecraft/world/phys/AxisAlignedBB; getTopBoundingBox
net/minecraft/world/level/levelgen/feature/WorldGenFeatureBamboo net/minecraft/world/level/levelgen/feature/BambooFeature
	a BAMBOO_TRUNK
	b BAMBOO_FINAL_LARGE
	c BAMBOO_TOP_LARGE
	d BAMBOO_TOP_SMALL
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenFeatureBasaltColumns net/minecraft/world/level/levelgen/feature/BasaltColumnsFeature
	a CANNOT_PLACE_ON
	b CLUSTERED_REACH
	c CLUSTERED_SIZE
	d UNCLUSTERED_REACH
	e UNCLUSTERED_SIZE
	a (Lnet/minecraft/world/level/GeneratorAccess;ILnet/minecraft/core/BlockPosition$MutableBlockPosition;)Z canPlaceAt
	a (Lnet/minecraft/world/level/GeneratorAccess;ILnet/minecraft/core/BlockPosition$MutableBlockPosition;I)Lnet/minecraft/core/BlockPosition; findSurface
	a (Lnet/minecraft/world/level/GeneratorAccess;ILnet/minecraft/core/BlockPosition;)Z isAirOrLavaOcean
	a (Lnet/minecraft/world/level/GeneratorAccess;ILnet/minecraft/core/BlockPosition;II)Z placeColumn
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;I)Lnet/minecraft/core/BlockPosition; findAir
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenFeatureBasaltPillar net/minecraft/world/level/levelgen/feature/BasaltPillarFeature
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)V placeBaseHangOff
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
	b (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Z placeHangOff
net/minecraft/world/level/levelgen/feature/WorldGenFeatureBlock net/minecraft/world/level/levelgen/feature/SimpleBlockFeature
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenFeatureBlockPile net/minecraft/world/level/levelgen/feature/BlockPileFeature
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z mayPlaceOn
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureBlockPileConfiguration;)V tryPlaceBlock
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenFeatureBlueIce net/minecraft/world/level/levelgen/feature/BlueIceFeature
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenFeatureChoice net/minecraft/world/level/levelgen/feature/RandomBooleanSelectorFeature
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenFeatureChorusPlant net/minecraft/world/level/levelgen/feature/ChorusPlantFeature
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenFeatureConfigured net/minecraft/world/level/levelgen/feature/ConfiguredFeature
	a DIRECT_CODEC
	b CODEC
	c LIST_CODEC
	d feature
	e config
	a ()Ljava/util/stream/Stream; getFeatures
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Z place
	b ()Lnet/minecraft/world/level/levelgen/feature/WorldGenerator; feature
	c ()Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureConfiguration; config
net/minecraft/world/level/levelgen/feature/WorldGenFeatureCoral net/minecraft/world/level/levelgen/feature/CoralFeature
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z placeFeature
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
	b (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z placeCoralBlock
net/minecraft/world/level/levelgen/feature/WorldGenFeatureCoralClaw net/minecraft/world/level/levelgen/feature/CoralClawFeature
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z placeFeature
net/minecraft/world/level/levelgen/feature/WorldGenFeatureCoralMushroom net/minecraft/world/level/levelgen/feature/CoralMushroomFeature
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z placeFeature
net/minecraft/world/level/levelgen/feature/WorldGenFeatureCoralTree net/minecraft/world/level/levelgen/feature/CoralTreeFeature
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z placeFeature
net/minecraft/world/level/levelgen/feature/WorldGenFeatureDelta net/minecraft/world/level/levelgen/feature/DeltaFeature
	a CANNOT_REPLACE
	b DIRECTIONS
	c RIM_SPAWN_CHANCE
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureDeltaConfiguration;)Z isClear
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenFeatureEmpty net/minecraft/world/level/levelgen/feature/NoOpFeature
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenFeatureEndPlatform net/minecraft/world/level/levelgen/feature/VoidStartPlatformFeature
	a PLATFORM_OFFSET
	b PLATFORM_ORIGIN_CHUNK
	c PLATFORM_RADIUS
	d PLATFORM_RADIUS_CHUNKS
	a (IIII)I checkerboardDistance
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenFeatureFill net/minecraft/world/level/levelgen/feature/FillLayerFeature
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenFeatureHugeFungi net/minecraft/world/level/levelgen/feature/HugeFungusFeature
	a HUGE_PROBABILITY
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/util/RandomSource;)V tryPlaceWeepingVines
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Z)Z isReplaceable
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V placeHatDropBlock
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/WorldGenFeatureHugeFungiConfiguration;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;FFF)V placeHatBlock
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/WorldGenFeatureHugeFungiConfiguration;Lnet/minecraft/core/BlockPosition;IZ)V placeStem
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
	b (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/WorldGenFeatureHugeFungiConfiguration;Lnet/minecraft/core/BlockPosition;IZ)V placeHat
net/minecraft/world/level/levelgen/feature/WorldGenFeatureHugeFungiConfiguration net/minecraft/world/level/levelgen/feature/HugeFungusConfiguration
	a CODEC
	b validBaseState
	c stemState
	d hatState
	e decorState
	f planted
net/minecraft/world/level/levelgen/feature/WorldGenFeatureIceSnow net/minecraft/world/level/levelgen/feature/SnowAndFreezeFeature
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenFeatureIceburg net/minecraft/world/level/levelgen/feature/IcebergFeature
	a (III)I getEllipseC
	a (IILnet/minecraft/core/BlockPosition;IID)D signedDistanceEllipse
	a (IILnet/minecraft/core/BlockPosition;ILnet/minecraft/util/RandomSource;)D signedDistanceCircle
	a (IILnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/GeneratorAccess;ZDLnet/minecraft/core/BlockPosition;II)V carve
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/util/RandomSource;IIZZLnet/minecraft/world/level/block/state/IBlockData;)V setIcebergBlock
	a (Lnet/minecraft/util/RandomSource;III)I heightDependentRadiusRound
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/GeneratorAccess;IILnet/minecraft/core/BlockPosition;ZIDI)V generateCutOut
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)V removeFloatingSnowLayer
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;IIZI)V smooth
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;IIIIIIZIDZLnet/minecraft/world/level/block/state/IBlockData;)V generateIcebergBlock
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z belowIsAir
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
	b (III)I heightDependentRadiusEllipse
	b (Lnet/minecraft/util/RandomSource;III)I heightDependentRadiusSteep
	c (Lnet/minecraft/world/level/block/state/IBlockData;)Z isIcebergState
net/minecraft/world/level/levelgen/feature/WorldGenFeatureKelp net/minecraft/world/level/levelgen/feature/KelpFeature
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenFeatureNetherForestVegetation net/minecraft/world/level/levelgen/feature/NetherForestVegetationFeature
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenFeatureNetherrackReplaceBlobs net/minecraft/world/level/levelgen/feature/ReplaceBlobsFeature
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/core/BlockPosition; findTarget
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenFeatureRandom2Configuration net/minecraft/world/level/levelgen/feature/SimpleRandomSelectorFeature
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenFeatureRandomChoice net/minecraft/world/level/levelgen/feature/RandomSelectorFeature
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenFeatureRandomPatch net/minecraft/world/level/levelgen/feature/RandomPatchFeature
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenFeatureReplaceBlock net/minecraft/world/level/levelgen/feature/ReplaceBlockFeature
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenFeatureSeaGrass net/minecraft/world/level/levelgen/feature/SeagrassFeature
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenFeatureSeaPickel net/minecraft/world/level/levelgen/feature/SeaPickleFeature
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenFeatureTwistingVines net/minecraft/world/level/levelgen/feature/TwistingVinesFeature
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;)Z findFirstAirBlockAboveGround
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)Z isInvalidPlacementLocation
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;III)V placeWeepingVinesColumn
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenFeatureWeepingVines net/minecraft/world/level/levelgen/feature/WeepingVinesFeature
	a DIRECTIONS
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;III)V placeWeepingVinesColumn
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)V placeRoofNetherWart
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
	b (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)V placeRoofWeepingVines
net/minecraft/world/level/levelgen/feature/WorldGenFossils net/minecraft/world/level/levelgen/feature/FossilFeature
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)I countEmptyCorners
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenHugeMushroomBrown net/minecraft/world/level/levelgen/feature/HugeBrownMushroomFeature
	a (IIII)I getTreeRadiusForHeight
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;ILnet/minecraft/core/BlockPosition$MutableBlockPosition;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureMushroomConfiguration;)V makeCap
net/minecraft/world/level/levelgen/feature/WorldGenHugeMushroomRed net/minecraft/world/level/levelgen/feature/HugeRedMushroomFeature
	a (IIII)I getTreeRadiusForHeight
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;ILnet/minecraft/core/BlockPosition$MutableBlockPosition;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureMushroomConfiguration;)V makeCap
net/minecraft/world/level/levelgen/feature/WorldGenLakes net/minecraft/world/level/levelgen/feature/LakeFeature
	a AIR
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
	c (Lnet/minecraft/world/level/block/state/IBlockData;)Z canReplaceBlock
net/minecraft/world/level/levelgen/feature/WorldGenLightStone1 net/minecraft/world/level/levelgen/feature/GlowstoneFeature
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenLiquids net/minecraft/world/level/levelgen/feature/SpringFeature
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenMinable net/minecraft/world/level/levelgen/feature/OreFeature
	a (Lnet/minecraft/util/RandomSource;F)Z shouldSkipAirCheck
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureOreConfiguration;DDDDDDIIIII)Z doPlace
	a (Lnet/minecraft/world/level/block/state/IBlockData;Ljava/util/function/Function;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureOreConfiguration;Ldmp$a;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;)Z canPlaceOre
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenMushrooms net/minecraft/world/level/levelgen/feature/AbstractHugeMushroomFeature
	a (IIII)I getTreeRadiusForHeight
	a (Lnet/minecraft/util/RandomSource;)I getTreeHeight
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;ILnet/minecraft/core/BlockPosition$MutableBlockPosition;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureMushroomConfiguration;)Z isValidPosition
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;ILnet/minecraft/core/BlockPosition$MutableBlockPosition;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureMushroomConfiguration;)V makeCap
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureMushroomConfiguration;ILnet/minecraft/core/BlockPosition$MutableBlockPosition;)V placeTrunk
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenPackedIce2 net/minecraft/world/level/levelgen/feature/IceSpikeFeature
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenTaigaStructure net/minecraft/world/level/levelgen/feature/BlockBlobFeature
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenTrees net/minecraft/world/level/levelgen/feature/TreeFeature
	a BLOCK_UPDATE_FLAGS
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;)Lnet/minecraft/world/phys/shapes/VoxelShapeDiscrete; updateLeaves
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Ljava/util/function/BiConsumer;Ljava/util/function/BiConsumer;Ldnt$b;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;)Z doPlace
	a (Lnet/minecraft/world/level/IWorldWriter;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V setBlock
	a (Lnet/minecraft/world/level/VirtualLevelReadable;ILnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;)I getMaxFreeTreeHeight
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
	b (Lnet/minecraft/world/level/IWorldWriter;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V setBlockKnownShape
	b (Lnet/minecraft/world/level/VirtualLevelReadable;Lnet/minecraft/core/BlockPosition;)Z isBlockWater
	c (Lnet/minecraft/world/level/VirtualLevelReadable;Lnet/minecraft/core/BlockPosition;)Z isAirOrLeaves
	d (Lnet/minecraft/world/level/VirtualLevelReadable;Lnet/minecraft/core/BlockPosition;)Z validTreePos
	e (Lnet/minecraft/world/level/VirtualLevelReadable;Lnet/minecraft/core/BlockPosition;)Z isVine
	f (Lnet/minecraft/world/level/VirtualLevelReadable;Lnet/minecraft/core/BlockPosition;)Z isReplaceablePlant
net/minecraft/world/level/levelgen/feature/WorldGenVines net/minecraft/world/level/levelgen/feature/VinesFeature
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WorldGenerator net/minecraft/world/level/levelgen/feature/Feature
	A ROOT_SYSTEM
	B MULTIFACE_GROWTH
	C UNDERWATER_MAGMA
	D MONSTER_ROOM
	E BLUE_ICE
	F ICEBERG
	G FOREST_ROCK
	H DISK
	I LAKE
	J ORE
	K END_SPIKE
	L END_ISLAND
	M END_GATEWAY
	N SEAGRASS
	O KELP
	P CORAL_TREE
	Q CORAL_MUSHROOM
	R CORAL_CLAW
	S SEA_PICKLE
	T SIMPLE_BLOCK
	U BAMBOO
	V HUGE_FUNGUS
	W NETHER_FOREST_VEGETATION
	X WEEPING_VINES
	Y TWISTING_VINES
	Z BASALT_COLUMNS
	a configuredCodec
	aa DELTA_FEATURE
	ab REPLACE_BLOBS
	ac FILL_LAYER
	ad BONUS_CHEST
	ae BASALT_PILLAR
	af SCATTERED_ORE
	ag RANDOM_SELECTOR
	ah SIMPLE_RANDOM_SELECTOR
	ai RANDOM_BOOLEAN_SELECTOR
	aj GEODE
	ak DRIPSTONE_CLUSTER
	al LARGE_DRIPSTONE
	am POINTED_DRIPSTONE
	an SCULK_PATCH
	f NO_OP
	g TREE
	h FLOWER
	i NO_BONEMEAL_FLOWER
	j RANDOM_PATCH
	k BLOCK_PILE
	l SPRING
	m CHORUS_PLANT
	n REPLACE_SINGLE_BLOCK
	o VOID_START_PLATFORM
	p DESERT_WELL
	q FOSSIL
	r HUGE_RED_MUSHROOM
	s HUGE_BROWN_MUSHROOM
	t ICE_SPIKE
	u GLOWSTONE_BLOB
	v FREEZE_TOP_LAYER
	w VINES
	x BLOCK_COLUMN
	y VEGETATION_PATCH
	z WATERLOGGED_VEGETATION_PATCH
	a ()Lcom/mojang/serialization/Codec; configuredCodec
	a (Ljava/lang/String;Lnet/minecraft/world/level/levelgen/feature/WorldGenerator;)Lnet/minecraft/world/level/levelgen/feature/WorldGenerator; register
	a (Ljava/util/function/Function;Lnet/minecraft/core/BlockPosition;)Z isAdjacentToAir
	a (Ljava/util/function/Function;Lnet/minecraft/core/BlockPosition;Ljava/util/function/Predicate;)Z checkNeighbors
	a (Lnet/minecraft/tags/TagKey;)Ljava/util/function/Predicate; isReplaceable
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/core/BlockPosition;)V markAboveForPostProcessing
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Ljava/util/function/Predicate;)V safeSetBlock
	a (Lnet/minecraft/world/level/IWorldWriter;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V setBlock
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Lnet/minecraft/core/BlockPosition;)Z isGrassOrDirt
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z isStone
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
	a (Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureConfiguration;Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Z place
	b (Lnet/minecraft/world/level/block/state/IBlockData;)Z isDirt
net/minecraft/world/level/levelgen/feature/configurations/WorldGenDecoratorFrequencyConfiguration net/minecraft/world/level/levelgen/feature/configurations/CountConfiguration
	a CODEC
	b count
	a ()Lnet/minecraft/util/valueproviders/IntProvider; count
net/minecraft/world/level/levelgen/feature/configurations/WorldGenEndGatewayConfiguration net/minecraft/world/level/levelgen/feature/configurations/EndGatewayConfiguration
	a CODEC
	b exit
	c exact
	a ()Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenEndGatewayConfiguration; delayedExitSearch
	a (Lnet/minecraft/core/BlockPosition;Z)Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenEndGatewayConfiguration; knownExit
	b ()Ljava/util/Optional; getExit
	c ()Z isExitExact
net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureBasaltColumnsConfiguration net/minecraft/world/level/levelgen/feature/configurations/ColumnFeatureConfiguration
	a CODEC
	b reach
	c height
	a ()Lnet/minecraft/util/valueproviders/IntProvider; reach
	b ()Lnet/minecraft/util/valueproviders/IntProvider; height
net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureBlockConfiguration net/minecraft/world/level/levelgen/feature/configurations/SimpleBlockConfiguration
	a CODEC
	b toPlace
	a ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProvider; toPlace
net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureBlockPileConfiguration net/minecraft/world/level/levelgen/feature/configurations/BlockPileConfiguration
	a CODEC
	b stateProvider
net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureChoiceConfiguration net/minecraft/world/level/levelgen/feature/configurations/RandomBooleanFeatureConfiguration
	a CODEC
	b featureTrue
	c featureFalse
	e ()Ljava/util/stream/Stream; getFeatures
net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureCircleConfiguration net/minecraft/world/level/levelgen/feature/configurations/DiskConfiguration
	a CODEC
	b stateProvider
	c target
	d radius
	e halfHeight
	a ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/RuleBasedBlockStateProvider; stateProvider
	b ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; target
	c ()Lnet/minecraft/util/valueproviders/IntProvider; radius
	d ()I halfHeight
net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureConfiguration net/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration
	m NONE
	e ()Ljava/util/stream/Stream; getFeatures
net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureConfigurationChance net/minecraft/world/level/levelgen/feature/configurations/ProbabilityFeatureConfiguration
	k CODEC
	l probability
net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureDeltaConfiguration net/minecraft/world/level/levelgen/feature/configurations/DeltaFeatureConfiguration
	a CODEC
	b contents
	c rim
	d size
	e rimSize
	a ()Lnet/minecraft/world/level/block/state/IBlockData; contents
	b ()Lnet/minecraft/world/level/block/state/IBlockData; rim
	c ()Lnet/minecraft/util/valueproviders/IntProvider; size
	d ()Lnet/minecraft/util/valueproviders/IntProvider; rimSize
net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureEmptyConfiguration net/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration
	a CODEC
	b INSTANCE
net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureEndSpikeConfiguration net/minecraft/world/level/levelgen/feature/configurations/SpikeConfiguration
	a CODEC
	b crystalInvulnerable
	c spikes
	d crystalBeamTarget
	a ()Z isCrystalInvulnerable
	b ()Ljava/util/List; getSpikes
	c ()Lnet/minecraft/core/BlockPosition; getCrystalBeamTarget
net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureFillConfiguration net/minecraft/world/level/levelgen/feature/configurations/LayerConfiguration
	a CODEC
	b height
	c state
net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureHellFlowingLavaConfiguration net/minecraft/world/level/levelgen/feature/configurations/SpringConfiguration
	a CODEC
	b state
	c requiresBlockBelow
	d rockCount
	e holeCount
	f validBlocks
net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureLakeConfiguration net/minecraft/world/level/levelgen/feature/configurations/BlockStateConfiguration
	a CODEC
	b state
net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureMushroomConfiguration net/minecraft/world/level/levelgen/feature/configurations/HugeMushroomFeatureConfiguration
	a CODEC
	b capProvider
	c stemProvider
	d foliageRadius
net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureOreConfiguration net/minecraft/world/level/levelgen/feature/configurations/OreConfiguration
	a CODEC
	b targetStates
	c size
	d discardChanceOnAirExposure
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureRuleTest;Lnet/minecraft/world/level/block/state/IBlockData;)Ldmp$a; target
net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureRadiusConfiguration net/minecraft/world/level/levelgen/feature/configurations/ReplaceSphereConfiguration
	a CODEC
	b targetState
	c replaceState
	d radius
	a ()Lnet/minecraft/util/valueproviders/IntProvider; radius
net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureRandom2 net/minecraft/world/level/levelgen/feature/configurations/SimpleRandomFeatureConfiguration
	a CODEC
	b features
	e ()Ljava/util/stream/Stream; getFeatures
net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureRandomChoiceConfiguration net/minecraft/world/level/levelgen/feature/configurations/RandomFeatureConfiguration
	a CODEC
	b features
	c defaultFeature
	e ()Ljava/util/stream/Stream; getFeatures
net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureRandomPatchConfiguration net/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration
	a CODEC
	b tries
	c xzSpread
	d ySpread
	e feature
	a ()I tries
	b ()I xzSpread
	c ()I ySpread
	d ()Lnet/minecraft/core/Holder; feature
net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureReplaceBlockConfiguration net/minecraft/world/level/levelgen/feature/configurations/ReplaceBlockConfiguration
	a CODEC
	b targetStates
net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration net/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration
	a CODEC
	b trunkProvider
	c dirtProvider
	d trunkPlacer
	e foliageProvider
	f foliagePlacer
	g rootPlacer
	h minimumSize
	i decorators
	j ignoreVines
	k forceDirt
net/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeThreeLayers net/minecraft/world/level/levelgen/feature/featuresize/ThreeLayersFeatureSize
	d CODEC
	e limit
	f upperLimit
	g lowerSize
	h middleSize
	i upperSize
	a (II)I getSizeAtHeight
	b ()Lnet/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeType; type
net/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeTwoLayers net/minecraft/world/level/levelgen/feature/featuresize/TwoLayersFeatureSize
	d CODEC
	e limit
	f lowerSize
	g upperSize
	a (II)I getSizeAtHeight
	b ()Lnet/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeType; type
net/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacer net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer
	d CODEC
	e radius
	f offset
	a ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacers; type
	a (Lnet/minecraft/util/RandomSource;)I offset
	a (Lnet/minecraft/util/RandomSource;I)I foliageRadius
	a (Lnet/minecraft/util/RandomSource;IIIIZ)Z shouldSkipLocation
	a (Lnet/minecraft/util/RandomSource;ILnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;)I foliageHeight
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ldnt$b;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;ILdnt$a;II)V createFoliage
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ldnt$b;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;ILdnt$a;III)V createFoliage
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ldnt$b;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;Lnet/minecraft/core/BlockPosition;)Z tryPlaceLeaf
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ldnt$b;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;Lnet/minecraft/core/BlockPosition;IIZ)V placeLeavesRow
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ldnt$b;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;Lnet/minecraft/core/BlockPosition;IIZFF)V placeLeavesRowWithHangingLeavesBelow
	b (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P2; foliagePlacerParts
	b (Lnet/minecraft/util/RandomSource;IIIIZ)Z shouldSkipLocationSigned
net/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacerAcacia net/minecraft/world/level/levelgen/feature/foliageplacers/AcaciaFoliagePlacer
	a CODEC
	a ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacers; type
	a (Lnet/minecraft/util/RandomSource;IIIIZ)Z shouldSkipLocation
	a (Lnet/minecraft/util/RandomSource;ILnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;)I foliageHeight
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ldnt$b;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;ILdnt$a;III)V createFoliage
net/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacerBlob net/minecraft/world/level/levelgen/feature/foliageplacers/BlobFoliagePlacer
	a CODEC
	b height
	a ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacers; type
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P3; blobParts
	a (Lnet/minecraft/util/RandomSource;IIIIZ)Z shouldSkipLocation
	a (Lnet/minecraft/util/RandomSource;ILnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;)I foliageHeight
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ldnt$b;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;ILdnt$a;III)V createFoliage
net/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacerBush net/minecraft/world/level/levelgen/feature/foliageplacers/BushFoliagePlacer
	c CODEC
	a ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacers; type
	a (Lnet/minecraft/util/RandomSource;IIIIZ)Z shouldSkipLocation
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ldnt$b;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;ILdnt$a;III)V createFoliage
net/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacerDarkOak net/minecraft/world/level/levelgen/feature/foliageplacers/DarkOakFoliagePlacer
	a CODEC
	a ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacers; type
	a (Lnet/minecraft/util/RandomSource;IIIIZ)Z shouldSkipLocation
	a (Lnet/minecraft/util/RandomSource;ILnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;)I foliageHeight
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ldnt$b;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;ILdnt$a;III)V createFoliage
	b (Lnet/minecraft/util/RandomSource;IIIIZ)Z shouldSkipLocationSigned
net/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacerFancy net/minecraft/world/level/levelgen/feature/foliageplacers/FancyFoliagePlacer
	c CODEC
	a ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacers; type
	a (Lnet/minecraft/util/RandomSource;IIIIZ)Z shouldSkipLocation
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ldnt$b;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;ILdnt$a;III)V createFoliage
net/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacerJungle net/minecraft/world/level/levelgen/feature/foliageplacers/MegaJungleFoliagePlacer
	a CODEC
	b height
	a ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacers; type
	a (Lnet/minecraft/util/RandomSource;IIIIZ)Z shouldSkipLocation
	a (Lnet/minecraft/util/RandomSource;ILnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;)I foliageHeight
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ldnt$b;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;ILdnt$a;III)V createFoliage
net/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacerMegaPine net/minecraft/world/level/levelgen/feature/foliageplacers/MegaPineFoliagePlacer
	a CODEC
	b crownHeight
	a ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacers; type
	a (Lnet/minecraft/util/RandomSource;IIIIZ)Z shouldSkipLocation
	a (Lnet/minecraft/util/RandomSource;ILnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;)I foliageHeight
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ldnt$b;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;ILdnt$a;III)V createFoliage
net/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacerPine net/minecraft/world/level/levelgen/feature/foliageplacers/PineFoliagePlacer
	a CODEC
	b height
	a ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacers; type
	a (Lnet/minecraft/util/RandomSource;I)I foliageRadius
	a (Lnet/minecraft/util/RandomSource;IIIIZ)Z shouldSkipLocation
	a (Lnet/minecraft/util/RandomSource;ILnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;)I foliageHeight
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ldnt$b;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;ILdnt$a;III)V createFoliage
net/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacerSpruce net/minecraft/world/level/levelgen/feature/foliageplacers/SpruceFoliagePlacer
	a CODEC
	b trunkHeight
	a ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacers; type
	a (Lnet/minecraft/util/RandomSource;IIIIZ)Z shouldSkipLocation
	a (Lnet/minecraft/util/RandomSource;ILnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;)I foliageHeight
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ldnt$b;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;ILdnt$a;III)V createFoliage
net/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacers net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType
	a BLOB_FOLIAGE_PLACER
	b SPRUCE_FOLIAGE_PLACER
	c PINE_FOLIAGE_PLACER
	d ACACIA_FOLIAGE_PLACER
	e BUSH_FOLIAGE_PLACER
	f FANCY_FOLIAGE_PLACER
	g MEGA_JUNGLE_FOLIAGE_PLACER
	h MEGA_PINE_FOLIAGE_PLACER
	i DARK_OAK_FOLIAGE_PLACER
	j RANDOM_SPREAD_FOLIAGE_PLACER
	k CHERRY_FOLIAGE_PLACER
	l codec
	a ()Lcom/mojang/serialization/Codec; codec
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacers; register
net/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProvider net/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider
	a CODEC
	a ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProviders; type
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; getState
	a (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProviderSimpl; simple
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProviderSimpl; simple
net/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProviderRotatedBlock net/minecraft/world/level/levelgen/feature/stateproviders/RotatedBlockProvider
	b CODEC
	c block
	a ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProviders; type
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; getState
net/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProviderSimpl net/minecraft/world/level/levelgen/feature/stateproviders/SimpleStateProvider
	b CODEC
	c state
	a ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProviders; type
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; getState
net/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProviderWeighted net/minecraft/world/level/levelgen/feature/stateproviders/WeightedStateProvider
	b CODEC
	c weightedList
	a ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProviders; type
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; getState
	a (Lnet/minecraft/util/random/SimpleWeightedRandomList;)Lcom/mojang/serialization/DataResult; create
net/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProviders net/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType
	a SIMPLE_STATE_PROVIDER
	b WEIGHTED_STATE_PROVIDER
	c NOISE_THRESHOLD_PROVIDER
	d NOISE_PROVIDER
	e DUAL_NOISE_PROVIDER
	f ROTATED_BLOCK_PROVIDER
	g RANDOMIZED_INT_STATE_PROVIDER
	h codec
	a ()Lcom/mojang/serialization/Codec; codec
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProviders; register
net/minecraft/world/level/levelgen/feature/treedecorators/WorldGenFeatureTree net/minecraft/world/level/levelgen/feature/treedecorators/TreeDecorator
	h CODEC
	a ()Lnet/minecraft/world/level/levelgen/feature/treedecorators/WorldGenFeatureTrees; type
	a (Ldoz$a;)V place
net/minecraft/world/level/levelgen/feature/treedecorators/WorldGenFeatureTreeAlterGround net/minecraft/world/level/levelgen/feature/treedecorators/AlterGroundDecorator
	a CODEC
	b provider
	a ()Lnet/minecraft/world/level/levelgen/feature/treedecorators/WorldGenFeatureTrees; type
	a (Ldoz$a;)V place
	a (Ldoz$a;Lnet/minecraft/core/BlockPosition;)V placeCircle
	b (Ldoz$a;Lnet/minecraft/core/BlockPosition;)V placeBlockAt
net/minecraft/world/level/levelgen/feature/treedecorators/WorldGenFeatureTreeBeehive net/minecraft/world/level/levelgen/feature/treedecorators/BeehiveDecorator
	a CODEC
	b WORLDGEN_FACING
	c SPAWN_DIRECTIONS
	d probability
	a ()Lnet/minecraft/world/level/levelgen/feature/treedecorators/WorldGenFeatureTrees; type
	a (Ldoz$a;)V place
net/minecraft/world/level/levelgen/feature/treedecorators/WorldGenFeatureTreeCocoa net/minecraft/world/level/levelgen/feature/treedecorators/CocoaDecorator
	a CODEC
	b probability
	a ()Lnet/minecraft/world/level/levelgen/feature/treedecorators/WorldGenFeatureTrees; type
	a (Ldoz$a;)V place
net/minecraft/world/level/levelgen/feature/treedecorators/WorldGenFeatureTreeVineLeaves net/minecraft/world/level/levelgen/feature/treedecorators/LeaveVineDecorator
	a CODEC
	b probability
	a ()Lnet/minecraft/world/level/levelgen/feature/treedecorators/WorldGenFeatureTrees; type
	a (Ldoz$a;)V place
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/properties/BlockStateBoolean;Ldoz$a;)V addHangingVine
net/minecraft/world/level/levelgen/feature/treedecorators/WorldGenFeatureTreeVineTrunk net/minecraft/world/level/levelgen/feature/treedecorators/TrunkVineDecorator
	a CODEC
	b INSTANCE
	a ()Lnet/minecraft/world/level/levelgen/feature/treedecorators/WorldGenFeatureTrees; type
	a (Ldoz$a;)V place
net/minecraft/world/level/levelgen/feature/treedecorators/WorldGenFeatureTrees net/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType
	a TRUNK_VINE
	b LEAVE_VINE
	c COCOA
	d BEEHIVE
	e ALTER_GROUND
	f ATTACHED_TO_LEAVES
	g codec
	a ()Lcom/mojang/serialization/Codec; codec
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/feature/treedecorators/WorldGenFeatureTrees; register
net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerDarkOak net/minecraft/world/level/levelgen/feature/trunkplacers/DarkOakTrunkPlacer
	a CODEC
	a ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacers; type
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;ILnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;)Ljava/util/List; placeTrunk
net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerFancy net/minecraft/world/level/levelgen/feature/trunkplacers/FancyTrunkPlacer
	a CODEC
	b TRUNK_HEIGHT_SCALE
	h CLUSTER_DENSITY_MAGIC
	i BRANCH_SLOPE
	j BRANCH_LENGTH_MAGIC
	a ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacers; type
	a (II)Z trimBranches
	a (Lnet/minecraft/core/BlockPosition;)I getSteps
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/core/EnumDirection$EnumAxis; getLogAxis
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;ILnet/minecraft/core/BlockPosition;Ljava/util/List;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;)V makeBranches
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;ILnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;)Ljava/util/List; placeTrunk
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;ZLnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;)Z makeLimb
	b (II)F treeShape
net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerForking net/minecraft/world/level/levelgen/feature/trunkplacers/ForkingTrunkPlacer
	a CODEC
	a ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacers; type
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;ILnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;)Ljava/util/List; placeTrunk
net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerGiant net/minecraft/world/level/levelgen/feature/trunkplacers/GiantTrunkPlacer
	a CODEC
	a ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacers; type
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;ILnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;)Ljava/util/List; placeTrunk
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;Lnet/minecraft/core/BlockPosition;III)V placeLogIfFreeWithOffset
net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerMegaJungle net/minecraft/world/level/levelgen/feature/trunkplacers/MegaJungleTrunkPlacer
	b CODEC
	a ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacers; type
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;ILnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;)Ljava/util/List; placeTrunk
net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerStraight net/minecraft/world/level/levelgen/feature/trunkplacers/StraightTrunkPlacer
	a CODEC
	a ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacers; type
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;ILnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;)Ljava/util/List; placeTrunk
net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacers net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType
	a STRAIGHT_TRUNK_PLACER
	b FORKING_TRUNK_PLACER
	c GIANT_TRUNK_PLACER
	d MEGA_JUNGLE_TRUNK_PLACER
	e DARK_OAK_TRUNK_PLACER
	f FANCY_TRUNK_PLACER
	g BENDING_TRUNK_PLACER
	h UPWARDS_BRANCHING_TRUNK_PLACER
	i CHERRY_TRUNK_PLACER
	j codec
	a ()Lcom/mojang/serialization/Codec; codec
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacers; register
net/minecraft/world/level/levelgen/flat/GeneratorSettingsFlat net/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings
	a CODEC
	b LOGGER
	c structureOverrides
	d layersInfo
	e biome
	f layers
	g voidGen
	h decoration
	i addLakes
	j lakes
	a ()V setDecoration
	a (Ljava/util/List;Ljava/util/Optional;Lnet/minecraft/core/Holder;)Lnet/minecraft/world/level/levelgen/flat/GeneratorSettingsFlat; withBiomeAndLayers
	a (Ljava/util/Optional;Lnet/minecraft/core/Holder;)Lnet/minecraft/core/Holder; getBiome
	a (Lnet/minecraft/core/Holder;)Lnet/minecraft/world/level/biome/BiomeSettingsGeneration; adjustGenerationSettings
	a (Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/core/Holder; getDefaultBiome
	a (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/levelgen/flat/GeneratorSettingsFlat; getDefault
	a (Lnet/minecraft/world/level/levelgen/flat/GeneratorSettingsFlat;)Lcom/mojang/serialization/DataResult; validateHeight
	b ()V setAddLakes
	b (Lnet/minecraft/core/HolderGetter;)Ljava/util/List; createLakesList
	c ()Ljava/util/Optional; structureOverrides
	d ()Lnet/minecraft/core/Holder; getBiome
	e ()Ljava/util/List; getLayersInfo
	f ()Ljava/util/List; getLayers
	g ()V updateLayers
net/minecraft/world/level/levelgen/flat/WorldGenFlatLayerInfo net/minecraft/world/level/levelgen/flat/FlatLayerInfo
	a CODEC
	b block
	c height
	a ()I getHeight
	b ()Lnet/minecraft/world/level/block/state/IBlockData; getBlockState
net/minecraft/world/level/levelgen/structure/DefinedStructurePiece net/minecraft/world/level/levelgen/structure/TemplateStructurePiece
	a templateName
	b template
	c placeSettings
	d templatePosition
	h LOGGER
	a ()Lnet/minecraft/world/level/block/EnumBlockRotation; getRotation
	a (III)V move
	a (Ljava/lang/String;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)V handleDataMarker
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b ()Lnet/minecraft/resources/MinecraftKey; makeTemplateLocation
	c ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure; template
	d ()Lnet/minecraft/core/BlockPosition; templatePosition
	e ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo; placeSettings
net/minecraft/world/level/levelgen/structure/PersistentIndexed net/minecraft/world/level/levelgen/structure/StructureFeatureIndexSavedData
	a TAG_REMAINING_INDEXES
	b TAG_All_INDEXES
	c all
	d remaining
	a ()Lit/unimi/dsi/fastutil/longs/LongSet; getAll
	a (J)V addIndex
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; save
	b (J)Z hasStartIndex
	b (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/level/levelgen/structure/PersistentIndexed; load
	c (J)Z hasUnhandledIndex
	d (J)V removeIndex
net/minecraft/world/level/levelgen/structure/PersistentStructureLegacy net/minecraft/world/level/levelgen/structure/LegacyStructureDataHandler
	a CURRENT_TO_LEGACY_MAP
	b LEGACY_TO_CURRENT_MAP
	c OLD_STRUCTURE_REGISTRY_KEYS
	d hasLegacyData
	e dataMap
	f indexMap
	g legacyKeys
	h currentKeys
	a (II)Z isUnhandledStructureStart
	a (IILjava/lang/String;)Z hasLegacyStart
	a (J)V removeIndex
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; updateFromLegacy
	a (Lnet/minecraft/nbt/NBTTagCompound;Lnet/minecraft/world/level/ChunkCoordIntPair;)Lnet/minecraft/nbt/NBTTagCompound; updateStructureStart
	a (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/level/storage/WorldPersistentData;)Lnet/minecraft/world/level/levelgen/structure/PersistentStructureLegacy; getLegacyStructureHandler
	a (Lnet/minecraft/world/level/storage/WorldPersistentData;)V populateCaches
net/minecraft/world/level/levelgen/structure/StructureBoundingBox net/minecraft/world/level/levelgen/structure/BoundingBox
	a CODEC
	b LOGGER
	c minX
	d minY
	e minZ
	f maxX
	g maxY
	h maxZ
	a ()Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; infinite
	a (I)Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; inflatedBy
	a (III)Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; move
	a (IIII)Z intersects
	a (IIIIIIIIILnet/minecraft/core/EnumDirection;)Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; orientBox
	a (Ljava/lang/Iterable;)Ljava/util/Optional; encapsulatingPositions
	a (Ljava/util/function/Consumer;)V forAllCorners
	a (Lnet/minecraft/core/BaseBlockPosition;)Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; move
	a (Lnet/minecraft/core/BaseBlockPosition;Lnet/minecraft/core/BaseBlockPosition;)Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; fromCorners
	a (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; encapsulate
	a (Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)Z intersects
	b ()Lnet/minecraft/core/BaseBlockPosition; getLength
	b (III)Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; moved
	b (Ljava/lang/Iterable;)Ljava/util/Optional; encapsulatingBoxes
	b (Lnet/minecraft/core/BaseBlockPosition;)Z isInside
	b (Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; encapsulate
	c ()I getXSpan
	c (III)Z isInside
	d ()I getYSpan
	e ()I getZSpan
	f ()Lnet/minecraft/core/BlockPosition; getCenter
	g ()I minX
	h ()I minY
	i ()I minZ
	j ()I maxX
	k ()I maxY
	l ()I maxZ
net/minecraft/world/level/levelgen/structure/StructurePiece$StructurePieceBlockSelector net/minecraft/world/level/levelgen/structure/StructurePiece$BlockSelector
	a next
	a ()Lnet/minecraft/world/level/block/state/IBlockData; getNext
	a (Lnet/minecraft/util/RandomSource;IIIZ)V next
net/minecraft/world/level/levelgen/structure/WorldGenFeaturePillagerOutpostPoolPiece net/minecraft/world/level/levelgen/structure/PoolElementStructurePiece
	a element
	b position
	c rotation
	d LOGGER
	h groundLevelDelta
	i junctions
	j structureTemplateManager
	a ()Lnet/minecraft/world/level/block/EnumBlockRotation; getRotation
	a (III)V move
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/core/BlockPosition;Z)V place
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	a (Lnet/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructureJigsawJunction;)V addJunction
	b ()Lnet/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePoolStructure; getElement
	c ()Lnet/minecraft/core/BlockPosition; getPosition
	d ()I getGroundLevelDelta
	e ()Ljava/util/List; getJunctions
net/minecraft/world/level/levelgen/structure/WorldGenScatteredPiece net/minecraft/world/level/levelgen/structure/ScatteredFeaturePiece
	a width
	b height
	c depth
	d heightPosition
	a (Lnet/minecraft/world/level/GeneratorAccess;I)Z updateHeightPositionToLowestGroundHeight
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;I)Z updateAverageGroundHeight
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
net/minecraft/world/level/levelgen/structure/pieces/WorldGenFeatureStructurePieceType net/minecraft/world/level/levelgen/structure/pieces/StructurePieceType
	A STRONGHOLD_RIGHT_TURN
	B STRONGHOLD_ROOM_CROSSING
	C STRONGHOLD_STAIRS_DOWN
	D STRONGHOLD_START
	E STRONGHOLD_STRAIGHT
	F STRONGHOLD_STRAIGHT_STAIRS_DOWN
	G JUNGLE_PYRAMID_PIECE
	H OCEAN_RUIN
	I IGLOO
	J RUINED_PORTAL
	K SWAMPLAND_HUT
	L DESERT_PYRAMID_PIECE
	M OCEAN_MONUMENT_BUILDING
	N OCEAN_MONUMENT_CORE_ROOM
	O OCEAN_MONUMENT_DOUBLE_X_ROOM
	P OCEAN_MONUMENT_DOUBLE_XY_ROOM
	Q OCEAN_MONUMENT_DOUBLE_Y_ROOM
	R OCEAN_MONUMENT_DOUBLE_YZ_ROOM
	S OCEAN_MONUMENT_DOUBLE_Z_ROOM
	T OCEAN_MONUMENT_ENTRY_ROOM
	U OCEAN_MONUMENT_PENTHOUSE
	V OCEAN_MONUMENT_SIMPLE_ROOM
	W OCEAN_MONUMENT_SIMPLE_TOP_ROOM
	X OCEAN_MONUMENT_WING_ROOM
	Y END_CITY_PIECE
	Z WOODLAND_MANSION_PIECE
	a MINE_SHAFT_CORRIDOR
	aa BURIED_TREASURE_PIECE
	ab SHIPWRECK_PIECE
	ac NETHER_FOSSIL
	ad JIGSAW
	b MINE_SHAFT_CROSSING
	c MINE_SHAFT_ROOM
	d MINE_SHAFT_STAIRS
	e NETHER_FORTRESS_BRIDGE_CROSSING
	f NETHER_FORTRESS_BRIDGE_END_FILLER
	g NETHER_FORTRESS_BRIDGE_STRAIGHT
	h NETHER_FORTRESS_CASTLE_CORRIDOR_STAIRS
	i NETHER_FORTRESS_CASTLE_CORRIDOR_T_BALCONY
	j NETHER_FORTRESS_CASTLE_ENTRANCE
	k NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_CROSSING
	l NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_LEFT_TURN
	m NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR
	n NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_RIGHT_TURN
	o NETHER_FORTRESS_CASTLE_STALK_ROOM
	p NETHER_FORTRESS_MONSTER_THRONE
	q NETHER_FORTRESS_ROOM_CROSSING
	r NETHER_FORTRESS_STAIRS_ROOM
	s NETHER_FORTRESS_START
	t STRONGHOLD_CHEST_CORRIDOR
	u STRONGHOLD_FILLER_CORRIDOR
	v STRONGHOLD_FIVE_CROSSING
	w STRONGHOLD_LEFT_TURN
	x STRONGHOLD_LIBRARY
	y STRONGHOLD_PORTAL_ROOM
	z STRONGHOLD_PRISON_HALL
	a (Ldsg$a;Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/structure/pieces/WorldGenFeatureStructurePieceType; setPieceId
	a (Ldsg$b;Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/structure/pieces/WorldGenFeatureStructurePieceType; setTemplatePieceId
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/WorldGenFeatureStructurePieceType;Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/structure/pieces/WorldGenFeatureStructurePieceType; setFullContextPieceId
net/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructureJigsawJunction net/minecraft/world/level/levelgen/structure/pools/JigsawJunction
	a sourceX
	b sourceGroundY
	c sourceZ
	d deltaY
	e destProjection
	a ()I getSourceX
	a (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructureJigsawJunction; deserialize
	a (Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; serialize
	b ()I getSourceGroundY
	c ()I getSourceZ
	d ()I getDeltaY
	e ()Lnet/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePoolTemplate$Matching; getDestProjection
net/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructureJigsawPlacement net/minecraft/world/level/levelgen/structure/pools/JigsawPlacement
	a LOGGER
	a (Ldrp$a;Lnet/minecraft/core/Holder;Ljava/util/Optional;ILnet/minecraft/core/BlockPosition;ZLjava/util/Optional;I)Ljava/util/Optional; addPieces
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/Holder;Lnet/minecraft/resources/MinecraftKey;ILnet/minecraft/core/BlockPosition;Z)Z generateJigsaw
	a (Lnet/minecraft/world/level/levelgen/RandomState;IZLnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/IRegistry;Lnet/minecraft/world/level/levelgen/structure/WorldGenFeaturePillagerOutpostPoolPiece;Ljava/util/List;Lnet/minecraft/world/phys/shapes/VoxelShape;)V addPieces
	a (Lnet/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePoolStructure;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/levelgen/SeededRandom;)Ljava/util/Optional; getRandomNamedJigsaw
net/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePoolEmpty net/minecraft/world/level/levelgen/structure/pools/EmptyPoolElement
	a CODEC
	b INSTANCE
	a ()Lnet/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePools; getType
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; getBoundingBox
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/util/RandomSource;)Ljava/util/List; getShuffledJigsawBlocks
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/util/RandomSource;Z)Z place
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/core/BaseBlockPosition; getSize
net/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePoolFeature net/minecraft/world/level/levelgen/structure/pools/FeaturePoolElement
	a CODEC
	b feature
	c defaultJigsawNBT
	a ()Lnet/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePools; getType
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; getBoundingBox
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/util/RandomSource;)Ljava/util/List; getShuffledJigsawBlocks
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/util/RandomSource;Z)Z place
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/core/BaseBlockPosition; getSize
	b ()Lnet/minecraft/nbt/NBTTagCompound; fillDefaultJigsawNBT
net/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePoolLegacySingle net/minecraft/world/level/levelgen/structure/pools/LegacySinglePoolElement
	a CODEC
	a ()Lnet/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePools; getType
	a (Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Z)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo; getSettings
net/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePoolList net/minecraft/world/level/levelgen/structure/pools/ListPoolElement
	a CODEC
	b elements
	a ()Lnet/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePools; getType
	a (Lnet/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePoolTemplate$Matching;)Lnet/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePoolStructure; setProjection
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; getBoundingBox
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/util/RandomSource;)Ljava/util/List; getShuffledJigsawBlocks
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/util/RandomSource;Z)Z place
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/core/BaseBlockPosition; getSize
	b (Lnet/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePoolTemplate$Matching;)V setProjectionOnEachElement
net/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePoolSingle net/minecraft/world/level/levelgen/structure/pools/SinglePoolElement
	a TEMPLATE_CODEC
	b CODEC
	c template
	d processors
	a ()Lnet/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePools; getType
	a (Lcom/mojang/datafixers/util/Either;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; encodeTemplate
	a (Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Z)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo; getSettings
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure; getTemplate
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; getBoundingBox
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/util/RandomSource;)Ljava/util/List; getShuffledJigsawBlocks
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Z)Ljava/util/List; getDataMarkers
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/util/RandomSource;Z)Z place
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/core/BaseBlockPosition; getSize
	b ()Lcom/mojang/serialization/codecs/RecordCodecBuilder; processorsCodec
	c ()Lcom/mojang/serialization/codecs/RecordCodecBuilder; templateCodec
net/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePoolStructure net/minecraft/world/level/levelgen/structure/pools/StructurePoolElement
	a EMPTY
	b projection
	e CODEC
	a ()Lnet/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePools; getType
	a (Ljava/lang/String;)Ljava/util/function/Function; legacy
	a (Ljava/lang/String;Lnet/minecraft/core/Holder;)Ljava/util/function/Function; legacy
	a (Ljava/util/List;)Ljava/util/function/Function; list
	a (Lnet/minecraft/core/Holder;)Ljava/util/function/Function; feature
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)V handleDataMarker
	a (Lnet/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePoolTemplate$Matching;)Lnet/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePoolStructure; setProjection
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; getBoundingBox
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/util/RandomSource;)Ljava/util/List; getShuffledJigsawBlocks
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/util/RandomSource;Z)Z place
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/core/BaseBlockPosition; getSize
	b (Ljava/lang/String;)Ljava/util/function/Function; single
	b (Ljava/lang/String;Lnet/minecraft/core/Holder;)Ljava/util/function/Function; single
	d ()Lcom/mojang/serialization/codecs/RecordCodecBuilder; projectionCodec
	e ()Lnet/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePoolTemplate$Matching; getProjection
	f ()I getGroundLevelDelta
	g ()Ljava/util/function/Function; empty
net/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePoolTemplate net/minecraft/world/level/levelgen/structure/pools/StructureTemplatePool
	a DIRECT_CODEC
	b CODEC
	c SIZE_UNSET
	d CODEC_REFERENCE
	e rawTemplates
	f templates
	g fallback
	h maxSize
	a ()Lnet/minecraft/core/Holder; getFallback
	a (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePoolStructure; getRandomTemplate
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;)I getMaxSize
	b ()I size
	b (Lnet/minecraft/util/RandomSource;)Ljava/util/List; getShuffledTemplates
net/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePoolTemplate$Matching net/minecraft/world/level/levelgen/structure/pools/StructureTemplatePool$Projection
	a TERRAIN_MATCHING
	b RIGID
	c CODEC
	d name
	e processors
	f $VALUES
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePoolTemplate$Matching; byName
	b ()Lcom/google/common/collect/ImmutableList; getProcessors
	c ()Ljava/lang/String; getSerializedName
	d ()[Lnet/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePoolTemplate$Matching; $values
net/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePools net/minecraft/world/level/levelgen/structure/pools/StructurePoolElementType
	a SINGLE
	b LIST
	c FEATURE
	d EMPTY
	e LEGACY
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePools; register
net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate
	a PALETTE_TAG
	b PALETTE_LIST_TAG
	c ENTITIES_TAG
	d BLOCKS_TAG
	e BLOCK_TAG_POS
	f BLOCK_TAG_STATE
	g BLOCK_TAG_NBT
	h ENTITY_TAG_POS
	i ENTITY_TAG_BLOCKPOS
	j ENTITY_TAG_NBT
	k SIZE_TAG
	l palettes
	m entityInfoList
	n size
	o author
	a ()Lnet/minecraft/core/BaseBlockPosition; getSize
	a (Ljava/lang/String;)V setAuthor
	a (Ljava/util/List;Ljava/util/List;Ljava/util/List;)Ljava/util/List; buildInfoList
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockMirror;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/core/BlockPosition; getZeroPositionWithTransform
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockMirror;Lnet/minecraft/world/level/block/EnumBlockRotation;II)Lnet/minecraft/core/BlockPosition; getZeroPositionWithTransform
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockMirror;Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/core/BlockPosition; transform
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; getBoundingBox
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockMirror;Lnet/minecraft/core/BaseBlockPosition;)Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; getBoundingBox
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo;Lnet/minecraft/world/level/block/Block;)Ljava/util/List; filterBlocks
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo;Lnet/minecraft/world/level/block/Block;Z)Lit/unimi/dsi/fastutil/objects/ObjectArrayList; filterBlocks
	a (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/nbt/NBTTagList;Lnet/minecraft/nbt/NBTTagList;)V loadPalette
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; save
	a (Lnet/minecraft/world/level/GeneratorAccess;ILnet/minecraft/world/phys/shapes/VoxelShapeDiscrete;III)V updateShapeAtEdge
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo;Ljava/util/List;)Ljava/util/List; processBlockInfos
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BaseBlockPosition;ZLnet/minecraft/world/level/block/Block;)V fillFromWorld
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)V fillEntityList
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo;Lnet/minecraft/util/RandomSource;I)Z placeInWorld
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockMirror;Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Z)V placeEntities
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/nbt/NBTTagCompound;)Ljava/util/Optional; createEntityIgnoreException
	a (Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/core/BaseBlockPosition; getSize
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V addToLists
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/core/BlockPosition; calculateRelativePosition
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/core/BlockPosition; calculateConnectedPosition
	a (Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/level/block/EnumBlockMirror;Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/Vec3D; transform
	a ([D)Lnet/minecraft/nbt/NBTTagList; newDoubleList
	a ([I)Lnet/minecraft/nbt/NBTTagList; newIntegerList
	b ()Ljava/lang/String; getAuthor
	b (Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; getBoundingBox
net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo
	a pos
	b state
	c nbt
net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$EntityInfo net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureEntityInfo
	a pos
	b blockPos
	c nbt
net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo net/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings
	a mirror
	b rotation
	c rotationPivot
	d ignoreEntities
	e boundingBox
	f keepLiquids
	g random
	h palette
	i processors
	j knownShape
	k finalizeEntities
	a ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo; copy
	a (Ljava/util/List;Lnet/minecraft/core/BlockPosition;)Ldvh$a; getRandomPalette
	a (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo; setRotationPivot
	a (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo; setRandom
	a (Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo; setMirror
	a (Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo; setRotation
	a (Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo; setBoundingBox
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureProcessor;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo; addProcessor
	a (Z)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo; setIgnoreEntities
	b ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo; clearProcessors
	b (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/util/RandomSource; getRandom
	b (Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureProcessor;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo; popProcessor
	b (Z)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo; setKeepLiquids
	c ()Lnet/minecraft/world/level/block/EnumBlockMirror; getMirror
	c (Z)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo; setKnownShape
	d ()Lnet/minecraft/world/level/block/EnumBlockRotation; getRotation
	d (Z)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo; setFinalizeEntities
	e ()Lnet/minecraft/core/BlockPosition; getRotationPivot
	f ()Z isIgnoreEntities
	g ()Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; getBoundingBox
	h ()Z getKnownShape
	i ()Ljava/util/List; getProcessors
	j ()Z shouldKeepLiquids
	k ()Z shouldFinalizeEntities
net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureProcessor net/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessor
	a ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureStructureProcessorType; getType
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo;Ljava/util/List;)V finalizeStructure
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo; processBlock
net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureProcessorBlackstoneReplace net/minecraft/world/level/levelgen/structure/templatesystem/BlackstoneReplaceProcessor
	a CODEC
	b INSTANCE
	c replacements
	a ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureStructureProcessorType; getType
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo; processBlock
net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureProcessorBlockAge net/minecraft/world/level/levelgen/structure/templatesystem/BlockAgeProcessor
	a CODEC
	b PROBABILITY_OF_REPLACING_FULL_BLOCK
	c PROBABILITY_OF_REPLACING_STAIRS
	d PROBABILITY_OF_REPLACING_OBSIDIAN
	e NON_MOSSY_REPLACEMENTS
	f mossiness
	a ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureStructureProcessorType; getType
	a (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/block/state/IBlockData; maybeReplaceFullStoneBlock
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/state/IBlockData; getRandomFacingStairs
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/state/IBlockData; maybeReplaceStairs
	a (Lnet/minecraft/util/RandomSource;[Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/state/IBlockData; getRandomBlock
	a (Lnet/minecraft/util/RandomSource;[Lnet/minecraft/world/level/block/state/IBlockData;[Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/state/IBlockData; getRandomBlock
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo; processBlock
	b (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/block/state/IBlockData; maybeReplaceSlab
	c (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/block/state/IBlockData; maybeReplaceWall
	d (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/block/state/IBlockData; maybeReplaceObsidian
net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureProcessorBlockIgnore net/minecraft/world/level/levelgen/structure/templatesystem/BlockIgnoreProcessor
	a CODEC
	b STRUCTURE_BLOCK
	c AIR
	d STRUCTURE_AND_AIR
	e toIgnore
	a ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureStructureProcessorType; getType
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo; processBlock
net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureProcessorGravity net/minecraft/world/level/levelgen/structure/templatesystem/GravityProcessor
	a CODEC
	b heightmap
	c offset
	a ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureStructureProcessorType; getType
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo; processBlock
net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureProcessorJigsawReplacement net/minecraft/world/level/levelgen/structure/templatesystem/JigsawReplacementProcessor
	a CODEC
	b INSTANCE
	a ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureStructureProcessorType; getType
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo; processBlock
net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureProcessorLavaSubmergedBlock net/minecraft/world/level/levelgen/structure/templatesystem/LavaSubmergedBlockProcessor
	a CODEC
	b INSTANCE
	a ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureStructureProcessorType; getType
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo; processBlock
net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureProcessorNop net/minecraft/world/level/levelgen/structure/templatesystem/NopProcessor
	a CODEC
	b INSTANCE
	a ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureStructureProcessorType; getType
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo; processBlock
net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureProcessorPredicates net/minecraft/world/level/levelgen/structure/templatesystem/ProcessorRule
	a CODEC
	b inputPredicate
	c locPredicate
	d posPredicate
	e outputState
	f outputTag
	a ()Lnet/minecraft/world/level/block/state/IBlockData; getOutputState
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z test
	b ()Lnet/minecraft/nbt/NBTTagCompound; getOutputTag
net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureProcessorRotation net/minecraft/world/level/levelgen/structure/templatesystem/BlockRotProcessor
	a CODEC
	b rottableBlocks
	c integrity
	a ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureStructureProcessorType; getType
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo; processBlock
net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureProcessorRule net/minecraft/world/level/levelgen/structure/templatesystem/RuleProcessor
	a CODEC
	b rules
	a ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureStructureProcessorType; getType
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo; processBlock
net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureRuleTest net/minecraft/world/level/levelgen/structure/templatesystem/RuleTest
	c CODEC
	a ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureRuleTestType; getType
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/util/RandomSource;)Z test
net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureRuleTestType net/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType
	a ALWAYS_TRUE_TEST
	b BLOCK_TEST
	c BLOCKSTATE_TEST
	d TAG_TEST
	e RANDOM_BLOCK_TEST
	f RANDOM_BLOCKSTATE_TEST
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureRuleTestType; register
net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureStructureProcessorType net/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType
	a BLOCK_IGNORE
	b BLOCK_ROT
	c GRAVITY
	d JIGSAW_REPLACEMENT
	e RULE
	f NOP
	g BLOCK_AGE
	h BLACKSTONE_REPLACE
	i LAVA_SUBMERGED_BLOCK
	j PROTECTED_BLOCKS
	k SINGLE_CODEC
	l LIST_OBJECT_CODEC
	m DIRECT_CODEC
	n LIST_CODEC
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureStructureProcessorType; register
net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureTestBlock net/minecraft/world/level/levelgen/structure/templatesystem/BlockMatchTest
	a CODEC
	b block
	a ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureRuleTestType; getType
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/util/RandomSource;)Z test
net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureTestBlockState net/minecraft/world/level/levelgen/structure/templatesystem/BlockStateMatchTest
	a CODEC
	b blockState
	a ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureRuleTestType; getType
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/util/RandomSource;)Z test
net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureTestRandomBlock net/minecraft/world/level/levelgen/structure/templatesystem/RandomBlockMatchTest
	a CODEC
	b block
	d probability
	a ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureRuleTestType; getType
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/util/RandomSource;)Z test
net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureTestRandomBlockState net/minecraft/world/level/levelgen/structure/templatesystem/RandomBlockStateMatchTest
	a CODEC
	b blockState
	d probability
	a ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureRuleTestType; getType
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/util/RandomSource;)Z test
net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureTestTag net/minecraft/world/level/levelgen/structure/templatesystem/TagMatchTest
	a CODEC
	b tag
	a ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureRuleTestType; getType
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/util/RandomSource;)Z test
net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureTestTrue net/minecraft/world/level/levelgen/structure/templatesystem/AlwaysTrueTest
	a CODEC
	b INSTANCE
	a ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureRuleTestType; getType
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/util/RandomSource;)Z test
net/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestAxisAlignedLinear net/minecraft/world/level/levelgen/structure/templatesystem/AxisAlignedLinearPosTest
	a CODEC
	b minChance
	d maxChance
	e minDist
	f maxDist
	g axis
	a ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType; getType
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z test
net/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestLinear net/minecraft/world/level/levelgen/structure/templatesystem/LinearPosTest
	a CODEC
	b minChance
	d maxChance
	e minDist
	f maxDist
	a ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType; getType
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z test
net/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestTrue net/minecraft/world/level/levelgen/structure/templatesystem/PosAlwaysTrueTest
	a CODEC
	b INSTANCE
	a ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType; getType
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z test
net/minecraft/world/level/levelgen/structure/templatesystem/ProcessorList net/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorList
	a list
	a ()Ljava/util/List; list
net/minecraft/world/level/levelgen/synth/NoiseGenerator3 net/minecraft/world/level/levelgen/synth/PerlinSimplexNoise
	a noiseLevels
	b highestFreqValueFactor
	c highestFreqInputFactor
	a (DDZ)D getValue
net/minecraft/world/level/levelgen/synth/NoiseGenerator3Handler net/minecraft/world/level/levelgen/synth/SimplexNoise
	a GRADIENT
	b xo
	c yo
	d zo
	e SQRT_3
	f F2
	g G2
	h p
	a (DD)D getValue
	a (DDD)D getValue
	a (I)I p
	a (IDDDD)D getCornerNoise3D
	a ([IDDD)D dot
net/minecraft/world/level/levelgen/synth/NoiseGeneratorNormal net/minecraft/world/level/levelgen/synth/NormalNoise
	a INPUT_FACTOR
	b TARGET_DEVIATION
	c valueFactor
	d first
	e second
	f maxValue
	g parameters
	a ()D maxValue
	a (DDD)D getValue
	a (I)D expectedDeviation
	a (Ljava/lang/StringBuilder;)V parityConfigString
	a (Lnet/minecraft/util/RandomSource;I[D)Lnet/minecraft/world/level/levelgen/synth/NoiseGeneratorNormal; create
	a (Lnet/minecraft/util/RandomSource;Ldvo$a;)Lnet/minecraft/world/level/levelgen/synth/NoiseGeneratorNormal; createLegacyNetherBiome
	b ()Ldvo$a; parameters
	b (Lnet/minecraft/util/RandomSource;Ldvo$a;)Lnet/minecraft/world/level/levelgen/synth/NoiseGeneratorNormal; create
net/minecraft/world/level/levelgen/synth/NoiseGeneratorOctaves net/minecraft/world/level/levelgen/synth/PerlinNoise
	a ROUND_OFF
	b noiseLevels
	c firstOctave
	d amplitudes
	e lowestFreqValueFactor
	f lowestFreqInputFactor
	g maxValue
	a ()D maxValue
	a (D)D maxBrokenValue
	a (DDD)D getValue
	a (DDDDDZ)D getValue
	a (I)Lnet/minecraft/world/level/levelgen/synth/NoiseGeneratorPerlin; getOctaveNoise
	a (Lit/unimi/dsi/fastutil/ints/IntSortedSet;)Lcom/mojang/datafixers/util/Pair; makeAmplitudes
	a (Ljava/lang/StringBuilder;)V parityConfigString
	a (Lnet/minecraft/util/RandomSource;)V skipOctave
	a (Lnet/minecraft/util/RandomSource;ID[D)Lnet/minecraft/world/level/levelgen/synth/NoiseGeneratorOctaves; create
	a (Lnet/minecraft/util/RandomSource;ILit/unimi/dsi/fastutil/doubles/DoubleList;)Lnet/minecraft/world/level/levelgen/synth/NoiseGeneratorOctaves; createLegacyForLegacyNetherBiome
	a (Lnet/minecraft/util/RandomSource;Ljava/util/List;)Lnet/minecraft/world/level/levelgen/synth/NoiseGeneratorOctaves; create
	a (Lnet/minecraft/util/RandomSource;Ljava/util/stream/IntStream;)Lnet/minecraft/world/level/levelgen/synth/NoiseGeneratorOctaves; createLegacyForBlendedNoise
	b ()I firstOctave
	b (D)D wrap
	b (Lnet/minecraft/util/RandomSource;ILit/unimi/dsi/fastutil/doubles/DoubleList;)Lnet/minecraft/world/level/levelgen/synth/NoiseGeneratorOctaves; create
	b (Lnet/minecraft/util/RandomSource;Ljava/util/stream/IntStream;)Lnet/minecraft/world/level/levelgen/synth/NoiseGeneratorOctaves; create
	c ()Lit/unimi/dsi/fastutil/doubles/DoubleList; amplitudes
	c (D)D edgeValue
net/minecraft/world/level/levelgen/synth/NoiseGeneratorPerlin net/minecraft/world/level/levelgen/synth/ImprovedNoise
	a xo
	b yo
	c zo
	d SHIFT_UP_EPSILON
	e p
	a (DDD)D noise
	a (DDDDD)D noise
	a (DDD[D)D noiseWithDerivative
	a (I)I p
	a (IDDD)D gradDot
	a (IIIDDDD)D sampleAndLerp
	a (IIIDDD[D)D sampleWithDerivative
	a (Ljava/lang/StringBuilder;)V parityConfigString
net/minecraft/world/level/lighting/ILightEngine net/minecraft/world/level/lighting/LightEventListener
	D_ ()Z hasLightWork
	a (IZZ)I runUpdates
	a (Lnet/minecraft/core/BlockPosition;)V checkBlock
	a (Lnet/minecraft/core/BlockPosition;I)V onBlockEmissionIncrease
	a (Lnet/minecraft/core/BlockPosition;Z)V updateSectionStatus
	a (Lnet/minecraft/core/SectionPosition;Z)V updateSectionStatus
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Z)V enableLightSources
net/minecraft/world/level/lighting/LightEngine net/minecraft/world/level/lighting/LevelLightEngine
	a MAX_SOURCE_LEVEL
	b LIGHT_SECTION_PADDING
	c levelHeightAccessor
	d blockEngine
	e skyEngine
	D_ ()Z hasLightWork
	a (IZZ)I runUpdates
	a (Lnet/minecraft/core/BlockPosition;)V checkBlock
	a (Lnet/minecraft/core/BlockPosition;I)V onBlockEmissionIncrease
	a (Lnet/minecraft/core/SectionPosition;Z)V updateSectionStatus
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Z)V enableLightSources
	a (Lnet/minecraft/world/level/EnumSkyBlock;)Lnet/minecraft/world/level/lighting/LightEngineLayerEventListener; getLayerListener
	a (Lnet/minecraft/world/level/EnumSkyBlock;Lnet/minecraft/core/SectionPosition;)Ljava/lang/String; getDebugData
	a (Lnet/minecraft/world/level/EnumSkyBlock;Lnet/minecraft/core/SectionPosition;Lnet/minecraft/world/level/chunk/NibbleArray;Z)V queueSectionData
	b ()I getLightSectionCount
	b (Lnet/minecraft/core/BlockPosition;I)I getRawBrightness
	b (Lnet/minecraft/world/level/ChunkCoordIntPair;Z)V retainData
	c ()I getMinLightSection
	d ()I getMaxLightSection
net/minecraft/world/level/lighting/LightEngineBlock net/minecraft/world/level/lighting/BlockLightEngine
	f DIRECTIONS
	g pos
	a (JIZ)V checkNeighborsAfterUpdate
	a (JJI)I getComputedLevel
	a (Lnet/minecraft/core/BlockPosition;I)V onBlockEmissionIncrease
	b (JJI)I computeLevelFromNeighbor
	d (J)I getLightEmission
net/minecraft/world/level/lighting/LightEngineGraph net/minecraft/world/level/lighting/DynamicGraphMinFixedPoint
	a NO_COMPUTED_LEVEL
	b levelCount
	c queues
	d computedLevels
	e firstQueuedLevel
	f hasWork
	a (I)V checkFirstQueuedLevel
	a (II)I getKey
	a (J)Z isSource
	a (JI)V setLevel
	a (JII)V enqueue
	a (JIIZ)V dequeue
	a (JIZ)V checkNeighborsAfterUpdate
	a (JJI)I getComputedLevel
	a (JJIIIZ)V checkEdge
	a (JJIZ)V checkEdge
	a (Ljava/util/function/LongPredicate;)V removeIf
	b ()Z hasWork
	b (I)I runUpdates
	b (JJI)I computeLevelFromNeighbor
	b (JJIZ)V checkNeighbor
	c ()I getQueueSize
	c (J)I getLevel
	e (J)V removeFromQueue
	f (J)V checkNode
net/minecraft/world/level/lighting/LightEngineLayer net/minecraft/world/level/lighting/LayerLightEngine
	a SELF_SOURCE
	b chunkSource
	c layer
	d storage
	e pos
	f DIRECTIONS
	g runningLightUpdates
	h CACHE_SIZE
	i lastChunkPos
	j lastChunk
	D_ ()Z hasLightWork
	a (II)Lnet/minecraft/world/level/IBlockAccess; getChunk
	a (IZZ)I runUpdates
	a (J)Z isSource
	a (JI)V setLevel
	a (JJI)I getComputedLevel
	a (JLnet/minecraft/world/level/chunk/NibbleArray;Z)V queueSectionData
	a (JLorg/apache/commons/lang3/mutable/MutableInt;)Lnet/minecraft/world/level/block/state/IBlockData; getStateAndOpacity
	a (Lnet/minecraft/core/BlockPosition;)V checkBlock
	a (Lnet/minecraft/core/BlockPosition;I)V onBlockEmissionIncrease
	a (Lnet/minecraft/core/SectionPosition;)Lnet/minecraft/world/level/chunk/NibbleArray; getDataLayerData
	a (Lnet/minecraft/core/SectionPosition;Z)V updateSectionStatus
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Z)V enableLightSources
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;I)I getLightBlockInto
	a (Lnet/minecraft/world/level/block/state/IBlockData;JLnet/minecraft/core/EnumDirection;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/chunk/NibbleArray;J)I getLevel
	b (J)Ljava/lang/String; getDebugData
	b (JJI)I computeLevelFromNeighbor
	b (Lnet/minecraft/core/BlockPosition;)I getLightValue
	b (Lnet/minecraft/world/level/ChunkCoordIntPair;Z)V retainData
	c (J)I getLevel
	d ()V clearCache
	f (J)V checkNode
net/minecraft/world/level/lighting/LightEngineLayerEventListener net/minecraft/world/level/lighting/LayerLightEventListener
	a (Lnet/minecraft/core/SectionPosition;)Lnet/minecraft/world/level/chunk/NibbleArray; getDataLayerData
	b (Lnet/minecraft/core/BlockPosition;)I getLightValue
net/minecraft/world/level/lighting/LightEngineLayerEventListener$Void net/minecraft/world/level/lighting/LayerLightEventListener$DummyLightLayerEventListener
	a INSTANCE
	b $VALUES
	D_ ()Z hasLightWork
	a (IZZ)I runUpdates
	a (Lnet/minecraft/core/BlockPosition;)V checkBlock
	a (Lnet/minecraft/core/BlockPosition;I)V onBlockEmissionIncrease
	a (Lnet/minecraft/core/SectionPosition;)Lnet/minecraft/world/level/chunk/NibbleArray; getDataLayerData
	a (Lnet/minecraft/core/SectionPosition;Z)V updateSectionStatus
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Z)V enableLightSources
	b ()[Lnet/minecraft/world/level/lighting/LightEngineLayerEventListener$Void; $values
	b (Lnet/minecraft/core/BlockPosition;)I getLightValue
net/minecraft/world/level/lighting/LightEngineSky net/minecraft/world/level/lighting/SkyLightEngine
	f DIRECTIONS
	g HORIZONTALS
	a (JIZ)V checkNeighborsAfterUpdate
	a (JJI)I getComputedLevel
	b (J)Ljava/lang/String; getDebugData
	b (JJI)I computeLevelFromNeighbor
	f (J)V checkNode
net/minecraft/world/level/lighting/LightEngineStorage net/minecraft/world/level/lighting/LayerLightSectionStorage
	a LIGHT_AND_DATA
	b LIGHT_ONLY
	c EMPTY
	d EMPTY_DATA
	e dataSectionSet
	f toMarkNoData
	g toMarkData
	h visibleSectionData
	i updatingSectionData
	j changedSections
	k sectionsAffectedByLightUpdates
	l queuedSections
	m hasToRemove
	n DIRECTIONS
	o layer
	p chunkSource
	q untrustedSections
	r columnsToRetainQueuedDataFor
	s toRemove
	a ()Z hasInconsistencies
	a (JI)V setLevel
	a (JLnet/minecraft/world/level/chunk/NibbleArray;Z)V queueSectionData
	a (JZ)Lnet/minecraft/world/level/chunk/NibbleArray; getDataLayer
	a (Lnet/minecraft/world/level/lighting/LightEngineLayer;J)V clearQueuedSectionBlocks
	a (Lnet/minecraft/world/level/lighting/LightEngineLayer;ZZ)V markNewInconsistencies
	a (Lnet/minecraft/world/level/lighting/LightEngineStorageArray;J)Lnet/minecraft/world/level/chunk/NibbleArray; getDataLayer
	b (J)I getLevelFromSource
	b (JI)V setStoredLevel
	b (JZ)V enableLightSources
	b (Lnet/minecraft/world/level/lighting/LightEngineLayer;J)V checkEdgesForSection
	c (J)I getLevel
	c (JZ)V retainData
	d ()V runAllUpdates
	d (J)I getLightValue
	d (JZ)V updateSectionStatus
	e ()V swapSectionMap
	g (J)Z storingLightForSection
	h (J)Lnet/minecraft/world/level/chunk/NibbleArray; getDataLayerData
	i (J)I getStoredLevel
	j (J)Lnet/minecraft/world/level/chunk/NibbleArray; createDataLayer
	k (J)V onNodeAdded
	l (J)V onNodeRemoved
net/minecraft/world/level/lighting/LightEngineStorageArray net/minecraft/world/level/lighting/DataLayerStorageMap
	a map
	b CACHE_SIZE
	c lastSectionKeys
	d lastSections
	e cacheEnabled
	a (J)V copyDataLayer
	a (JLnet/minecraft/world/level/chunk/NibbleArray;)V setLayer
	b ()Lnet/minecraft/world/level/lighting/LightEngineStorageArray; copy
	b (J)Z hasLayer
	c ()V clearCache
	c (J)Lnet/minecraft/world/level/chunk/NibbleArray; getLayer
	d ()V disableCache
	d (J)Lnet/minecraft/world/level/chunk/NibbleArray; removeLayer
net/minecraft/world/level/lighting/LightEngineStorageBlock net/minecraft/world/level/lighting/BlockLightSectionStorage
	d (J)I getLightValue
net/minecraft/world/level/lighting/LightEngineStorageSky net/minecraft/world/level/lighting/SkyLightSectionStorage
	n HORIZONTALS
	o sectionsWithSources
	p sectionsToAddSourcesTo
	q sectionsToRemoveSourcesFrom
	r columnsWithSkySources
	s hasSourceInconsistencies
	a ()Z hasInconsistencies
	a (I)Z hasSectionsBelow
	a (Lnet/minecraft/world/level/chunk/NibbleArray;)Lnet/minecraft/world/level/chunk/NibbleArray; repeatFirstLayer
	a (Lnet/minecraft/world/level/lighting/LightEngineLayer;ZZ)V markNewInconsistencies
	b (JZ)V enableLightSources
	d (J)I getLightValue
	e (JZ)I getLightValue
	f ()V recheckInconsistencyFlag
	j (J)Lnet/minecraft/world/level/chunk/NibbleArray; createDataLayer
	k (J)V onNodeAdded
	l (J)V onNodeRemoved
	m (J)Z isAboveData
	n (J)Z lightOnInSection
	o (J)V queueRemoveSource
	p (J)V queueAddSource
net/minecraft/world/level/material/EnumPistonReaction net/minecraft/world/level/material/PushReaction
	a NORMAL
	b DESTROY
	c BLOCK
	d IGNORE
	e PUSH_ONLY
	f $VALUES
	a ()[Lnet/minecraft/world/level/material/EnumPistonReaction; $values
net/minecraft/world/level/material/Fluid net/minecraft/world/level/material/FluidState
	a CODEC
	b AMOUNT_MAX
	g AMOUNT_FULL
	a ()Lnet/minecraft/world/level/material/FluidType; getType
	a (Lnet/minecraft/core/HolderSet;)Z is
	a (Lnet/minecraft/tags/TagKey;)Z is
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)F getHeight
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/material/FluidType;Lnet/minecraft/core/EnumDirection;)Z canBeReplacedWith
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V tick
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
	a (Lnet/minecraft/world/level/material/FluidType;)Z isSourceOfType
	b ()Z isSource
	b (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z shouldRenderBackwardUpFace
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	b (Lnet/minecraft/world/level/material/FluidType;)Z is
	c ()Z isEmpty
	c (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/Vec3D; getFlow
	d ()F getOwnHeight
	d (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	e ()I getAmount
	f ()Z isRandomlyTicking
	g ()Lnet/minecraft/world/level/block/state/IBlockData; createLegacyBlock
	h ()Lnet/minecraft/core/particles/ParticleParam; getDripParticle
	i ()F getExplosionResistance
	j ()Lnet/minecraft/core/Holder; holder
	k ()Ljava/util/stream/Stream; getTags
net/minecraft/world/level/material/FluidType net/minecraft/world/level/material/Fluid
	a defaultFluidState
	b builtInRegistryHolder
	c FLUID_STATE_REGISTRY
	d stateDefinition
	a ()Lnet/minecraft/world/item/Item; getBucket
	a (Ldbr$a;)V createFluidStateDefinition
	a (Lnet/minecraft/tags/TagKey;)Z is
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/material/Fluid;)Lnet/minecraft/world/phys/Vec3D; getFlow
	a (Lnet/minecraft/world/level/IWorldReader;)I getTickDelay
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/util/RandomSource;)V animateTick
	a (Lnet/minecraft/world/level/material/Fluid;)F getOwnHeight
	a (Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)F getHeight
	a (Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/material/FluidType;Lnet/minecraft/core/EnumDirection;)Z canBeReplacedWith
	a (Lnet/minecraft/world/level/material/FluidType;)Z isSame
	b ()Z isEmpty
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/material/Fluid;)V tick
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/util/RandomSource;)V randomTick
	b (Lnet/minecraft/world/level/material/Fluid;)Lnet/minecraft/world/level/block/state/IBlockData; createLegacyBlock
	b (Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	c ()F getExplosionResistance
	c (Lnet/minecraft/world/level/material/Fluid;)Z isSource
	d (Lnet/minecraft/world/level/material/Fluid;)I getAmount
	f ()Lnet/minecraft/world/level/block/state/BlockStateList; getStateDefinition
	f (Lnet/minecraft/world/level/material/Fluid;)V registerDefaultState
	g ()Lnet/minecraft/world/level/material/Fluid; defaultFluidState
	h ()Lnet/minecraft/core/particles/ParticleParam; getDripParticle
	i ()Z isRandomlyTicking
	j ()Ljava/util/Optional; getPickupSound
	k ()Lhd$c; builtInRegistryHolder
net/minecraft/world/level/material/FluidTypeEmpty net/minecraft/world/level/material/EmptyFluid
	a ()Lnet/minecraft/world/item/Item; getBucket
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/material/Fluid;)Lnet/minecraft/world/phys/Vec3D; getFlow
	a (Lnet/minecraft/world/level/IWorldReader;)I getTickDelay
	a (Lnet/minecraft/world/level/material/Fluid;)F getOwnHeight
	a (Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)F getHeight
	a (Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/material/FluidType;Lnet/minecraft/core/EnumDirection;)Z canBeReplacedWith
	b ()Z isEmpty
	b (Lnet/minecraft/world/level/material/Fluid;)Lnet/minecraft/world/level/block/state/IBlockData; createLegacyBlock
	b (Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	c ()F getExplosionResistance
	c (Lnet/minecraft/world/level/material/Fluid;)Z isSource
	d (Lnet/minecraft/world/level/material/Fluid;)I getAmount
net/minecraft/world/level/material/FluidTypeFlowing net/minecraft/world/level/material/FlowingFluid
	a FALLING
	b LEVEL
	e CACHE_SIZE
	f OCCLUSION_CACHE
	g shapes
	a (IZ)Lnet/minecraft/world/level/material/Fluid; getFlowing
	a (Ldbr$a;)V createFluidStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)S getCacheKey
	a (Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z canPassThroughWall
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V beforeDestroyingBlock
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/material/Fluid;)V spreadTo
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Z isSolidFace
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/world/level/material/FluidType;)Z canSpreadTo
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/FluidType;)Z canHoldFluid
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/material/Fluid;)Lnet/minecraft/world/phys/Vec3D; getFlow
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/world/level/material/FluidType;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isWaterHole
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/world/level/material/FluidType;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/Fluid;)Z canPassThrough
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)I sourceNeighborCount
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;ILnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lit/unimi/dsi/fastutil/shorts/Short2ObjectMap;Lit/unimi/dsi/fastutil/shorts/Short2BooleanMap;)I getSlopeDistance
	a (Lnet/minecraft/world/level/World;)Z canConvertToSource
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getNewLiquid
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/material/Fluid;)V spread
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/world/level/block/state/IBlockData;)V spreadToSides
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/world/level/material/Fluid;)I getSpreadDelay
	a (Lnet/minecraft/world/level/material/Fluid;)F getOwnHeight
	a (Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)F getHeight
	a (Z)Lnet/minecraft/world/level/material/Fluid; getSource
	b (Lnet/minecraft/world/level/IWorldReader;)I getSlopeFindDistance
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Ljava/util/Map; getSpread
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/material/Fluid;)V tick
	b (Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	c (Lnet/minecraft/world/level/IWorldReader;)I getDropOff
	c (Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z hasSameAbove
	d ()Lnet/minecraft/world/level/material/FluidType; getFlowing
	d (Lnet/minecraft/world/level/material/Fluid;)I getAmount
	e ()Lnet/minecraft/world/level/material/FluidType; getSource
	e (Lnet/minecraft/world/level/material/Fluid;)I getLegacyLevel
	g (Lnet/minecraft/world/level/material/Fluid;)Z affectsFlow
	h (Lnet/minecraft/world/level/material/Fluid;)Z isSourceBlockOfThisType
net/minecraft/world/level/material/FluidTypeLava net/minecraft/world/level/material/LavaFluid
	e MIN_LEVEL_CUTOFF
	a ()Lnet/minecraft/world/item/Item; getBucket
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)V fizz
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V beforeDestroyingBlock
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/material/Fluid;)V spreadTo
	a (Lnet/minecraft/world/level/IWorldReader;)I getTickDelay
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z hasFlammableNeighbours
	a (Lnet/minecraft/world/level/World;)Z canConvertToSource
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/util/RandomSource;)V animateTick
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/world/level/material/Fluid;)I getSpreadDelay
	a (Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/material/FluidType;Lnet/minecraft/core/EnumDirection;)Z canBeReplacedWith
	a (Lnet/minecraft/world/level/material/FluidType;)Z isSame
	b (Lnet/minecraft/world/level/IWorldReader;)I getSlopeFindDistance
	b (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z isFlammable
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/util/RandomSource;)V randomTick
	b (Lnet/minecraft/world/level/material/Fluid;)Lnet/minecraft/world/level/block/state/IBlockData; createLegacyBlock
	c ()F getExplosionResistance
	c (Lnet/minecraft/world/level/IWorldReader;)I getDropOff
	d ()Lnet/minecraft/world/level/material/FluidType; getFlowing
	e ()Lnet/minecraft/world/level/material/FluidType; getSource
	h ()Lnet/minecraft/core/particles/ParticleParam; getDripParticle
	i ()Z isRandomlyTicking
	j ()Ljava/util/Optional; getPickupSound
net/minecraft/world/level/material/FluidTypeWater net/minecraft/world/level/material/WaterFluid
	a ()Lnet/minecraft/world/item/Item; getBucket
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V beforeDestroyingBlock
	a (Lnet/minecraft/world/level/IWorldReader;)I getTickDelay
	a (Lnet/minecraft/world/level/World;)Z canConvertToSource
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/util/RandomSource;)V animateTick
	a (Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/material/FluidType;Lnet/minecraft/core/EnumDirection;)Z canBeReplacedWith
	a (Lnet/minecraft/world/level/material/FluidType;)Z isSame
	b (Lnet/minecraft/world/level/IWorldReader;)I getSlopeFindDistance
	b (Lnet/minecraft/world/level/material/Fluid;)Lnet/minecraft/world/level/block/state/IBlockData; createLegacyBlock
	c ()F getExplosionResistance
	c (Lnet/minecraft/world/level/IWorldReader;)I getDropOff
	d ()Lnet/minecraft/world/level/material/FluidType; getFlowing
	e ()Lnet/minecraft/world/level/material/FluidType; getSource
	h ()Lnet/minecraft/core/particles/ParticleParam; getDripParticle
	j ()Ljava/util/Optional; getPickupSound
net/minecraft/world/level/material/FluidTypes net/minecraft/world/level/material/Fluids
	a EMPTY
	b FLOWING_WATER
	c WATER
	d FLOWING_LAVA
	e LAVA
	a (Ljava/lang/String;Lnet/minecraft/world/level/material/FluidType;)Lnet/minecraft/world/level/material/FluidType; register
net/minecraft/world/level/material/MaterialMapColor net/minecraft/world/level/material/MaterialColor
	A COLOR_BROWN
	B COLOR_GREEN
	C COLOR_RED
	D COLOR_BLACK
	E GOLD
	F DIAMOND
	G LAPIS
	H EMERALD
	I PODZOL
	J NETHER
	K TERRACOTTA_WHITE
	L TERRACOTTA_ORANGE
	M TERRACOTTA_MAGENTA
	N TERRACOTTA_LIGHT_BLUE
	O TERRACOTTA_YELLOW
	P TERRACOTTA_LIGHT_GREEN
	Q TERRACOTTA_PINK
	R TERRACOTTA_GRAY
	S TERRACOTTA_LIGHT_GRAY
	T TERRACOTTA_CYAN
	U TERRACOTTA_PURPLE
	V TERRACOTTA_BLUE
	W TERRACOTTA_BROWN
	X TERRACOTTA_GREEN
	Y TERRACOTTA_RED
	Z TERRACOTTA_BLACK
	a NONE
	aa CRIMSON_NYLIUM
	ab CRIMSON_STEM
	ac CRIMSON_HYPHAE
	ad WARPED_NYLIUM
	ae WARPED_STEM
	af WARPED_HYPHAE
	ag WARPED_WART_BLOCK
	ah DEEPSLATE
	ai RAW_IRON
	aj GLOW_LICHEN
	ak col
	al id
	am MATERIAL_COLORS
	b GRASS
	c SAND
	d WOOL
	e FIRE
	f ICE
	g METAL
	h PLANT
	i SNOW
	j CLAY
	k DIRT
	l STONE
	m WATER
	n WOOD
	o QUARTZ
	p COLOR_ORANGE
	q COLOR_MAGENTA
	r COLOR_LIGHT_BLUE
	s COLOR_YELLOW
	t COLOR_LIGHT_GREEN
	u COLOR_PINK
	v COLOR_GRAY
	w COLOR_LIGHT_GRAY
	x COLOR_CYAN
	y COLOR_PURPLE
	z COLOR_BLUE
	a (I)Lnet/minecraft/world/level/material/MaterialMapColor; byId
	a (Ldwo$a;)I calculateRGBColor
	b (I)I getColorFromPackedId
	b (Ldwo$a;)B getPackedId
	c (I)Lnet/minecraft/world/level/material/MaterialMapColor; byIdUnsafe
net/minecraft/world/level/pathfinder/Path net/minecraft/world/level/pathfinder/BinaryHeap
	a heap
	b size
	a ()V clear
	a (I)V upHeap
	a (Lnet/minecraft/world/level/pathfinder/PathPoint;)Lnet/minecraft/world/level/pathfinder/PathPoint; insert
	a (Lnet/minecraft/world/level/pathfinder/PathPoint;F)V changeCost
	b ()Lnet/minecraft/world/level/pathfinder/PathPoint; peek
	b (I)V downHeap
	b (Lnet/minecraft/world/level/pathfinder/PathPoint;)V remove
	c ()Lnet/minecraft/world/level/pathfinder/PathPoint; pop
	d ()I size
	e ()Z isEmpty
	f ()[Lnet/minecraft/world/level/pathfinder/PathPoint; getHeap
net/minecraft/world/level/pathfinder/PathDestination net/minecraft/world/level/pathfinder/Target
	m bestHeuristic
	n bestNode
	o reached
	a (FLnet/minecraft/world/level/pathfinder/PathPoint;)V updateBest
	c (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/world/level/pathfinder/PathDestination; createFromStream
	d ()Lnet/minecraft/world/level/pathfinder/PathPoint; getBestNode
	e ()V setReached
	f ()Z isReached
net/minecraft/world/level/pathfinder/PathEntity net/minecraft/world/level/pathfinder/Path
	a nodes
	b openSet
	c closedSet
	d targetNodes
	e nextNodeIndex
	f target
	g distToTarget
	h reached
	a ()V advance
	a (I)Lnet/minecraft/world/level/pathfinder/PathPoint; getNode
	a (ILnet/minecraft/world/level/pathfinder/PathPoint;)V replaceNode
	a (Lnet/minecraft/network/PacketDataSerializer;)V writeToStream
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/phys/Vec3D; getNextEntityPos
	a (Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/world/phys/Vec3D; getEntityPosAtNode
	a (Lnet/minecraft/world/level/pathfinder/PathEntity;)Z sameAs
	a ([Lnet/minecraft/world/level/pathfinder/PathPoint;[Lnet/minecraft/world/level/pathfinder/PathPoint;Ljava/util/Set;)V setDebug
	b ()Z notStarted
	b (I)V truncateNodes
	b (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/world/level/pathfinder/PathEntity; createFromStream
	c ()Z isDone
	c (I)V setNextNodeIndex
	d ()Lnet/minecraft/world/level/pathfinder/PathPoint; getEndNode
	d (I)Lnet/minecraft/core/BlockPosition; getNodePos
	e ()I getNodeCount
	f ()I getNextNodeIndex
	g ()Lnet/minecraft/core/BlockPosition; getNextNodePos
	h ()Lnet/minecraft/world/level/pathfinder/PathPoint; getNextNode
	i ()Lnet/minecraft/world/level/pathfinder/PathPoint; getPreviousNode
	j ()Z canReach
	k ()[Lnet/minecraft/world/level/pathfinder/PathPoint; getOpenSet
	l ()[Lnet/minecraft/world/level/pathfinder/PathPoint; getClosedSet
	m ()Lnet/minecraft/core/BlockPosition; getTarget
	n ()F getDistToTarget
net/minecraft/world/level/pathfinder/PathMode net/minecraft/world/level/pathfinder/PathComputationType
	a LAND
	b WATER
	c AIR
	d $VALUES
	a ()[Lnet/minecraft/world/level/pathfinder/PathMode; $values
net/minecraft/world/level/pathfinder/PathPoint net/minecraft/world/level/pathfinder/Node
	a x
	b y
	c z
	d heapIdx
	e g
	f h
	g f
	h cameFrom
	i closed
	j walkedDistance
	k costMalus
	l type
	m hash
	a ()Lnet/minecraft/core/BlockPosition; asBlockPos
	a (III)Lnet/minecraft/world/level/pathfinder/PathPoint; cloneAndMove
	a (Lnet/minecraft/core/BlockPosition;)F distanceTo
	a (Lnet/minecraft/network/PacketDataSerializer;)V writeToStream
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/world/level/pathfinder/PathPoint;)V readContents
	a (Lnet/minecraft/world/level/pathfinder/PathPoint;)F distanceTo
	b ()Lnet/minecraft/world/phys/Vec3D; asVec3
	b (III)I createHash
	b (Lnet/minecraft/core/BlockPosition;)F distanceToSqr
	b (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/world/level/pathfinder/PathPoint; createFromStream
	b (Lnet/minecraft/world/level/pathfinder/PathPoint;)F distanceToXZ
	c ()Z inOpenSet
	c (Lnet/minecraft/core/BlockPosition;)F distanceManhattan
	c (Lnet/minecraft/world/level/pathfinder/PathPoint;)F distanceToSqr
	d (Lnet/minecraft/world/level/pathfinder/PathPoint;)F distanceManhattan
net/minecraft/world/level/pathfinder/PathType net/minecraft/world/level/pathfinder/BlockPathTypes
	a BLOCKED
	b OPEN
	c WALKABLE
	d WALKABLE_DOOR
	e TRAPDOOR
	f POWDER_SNOW
	g DANGER_POWDER_SNOW
	h FENCE
	i LAVA
	j WATER
	k WATER_BORDER
	l RAIL
	m UNPASSABLE_RAIL
	n DANGER_FIRE
	o DAMAGE_FIRE
	p DANGER_OTHER
	q DAMAGE_OTHER
	r DOOR_OPEN
	s DOOR_WOOD_CLOSED
	t DOOR_IRON_CLOSED
	u BREACH
	v LEAVES
	w STICKY_HONEY
	x COCOA
	y malus
	z $VALUES
	a ()F getMalus
	b ()[Lnet/minecraft/world/level/pathfinder/PathType; $values
net/minecraft/world/level/pathfinder/Pathfinder net/minecraft/world/level/pathfinder/PathFinder
	a FUDGING
	b neighbors
	c maxVisitedNodes
	d nodeEvaluator
	e DEBUG
	f openSet
	a (Lnet/minecraft/util/profiling/GameProfilerFiller;Lnet/minecraft/world/level/pathfinder/PathPoint;Ljava/util/Map;FIF)Lnet/minecraft/world/level/pathfinder/PathEntity; findPath
	a (Lnet/minecraft/world/level/ChunkCache;Lnet/minecraft/world/entity/EntityInsentient;Ljava/util/Set;FIF)Lnet/minecraft/world/level/pathfinder/PathEntity; findPath
	a (Lnet/minecraft/world/level/pathfinder/PathPoint;Ljava/util/Set;)F getBestH
	a (Lnet/minecraft/world/level/pathfinder/PathPoint;Lnet/minecraft/core/BlockPosition;Z)Lnet/minecraft/world/level/pathfinder/PathEntity; reconstructPath
	a (Lnet/minecraft/world/level/pathfinder/PathPoint;Lnet/minecraft/world/level/pathfinder/PathPoint;)F distance
net/minecraft/world/level/pathfinder/PathfinderAbstract net/minecraft/world/level/pathfinder/NodeEvaluator
	a level
	b mob
	c nodes
	d entityWidth
	e entityHeight
	f entityDepth
	g canPassDoors
	h canOpenDoors
	i canFloat
	j canWalkOverFences
	a ()Lnet/minecraft/world/level/pathfinder/PathPoint; getStart
	a (DDD)Lnet/minecraft/world/level/pathfinder/PathDestination; getGoal
	a (Lnet/minecraft/world/level/ChunkCache;Lnet/minecraft/world/entity/EntityInsentient;)V prepare
	a (Lnet/minecraft/world/level/IBlockAccess;III)Lnet/minecraft/world/level/pathfinder/PathType; getBlockPathType
	a (Lnet/minecraft/world/level/IBlockAccess;IIILnet/minecraft/world/entity/EntityInsentient;)Lnet/minecraft/world/level/pathfinder/PathType; getBlockPathType
	a (Lnet/minecraft/world/level/pathfinder/PathPoint;)Lnet/minecraft/world/level/pathfinder/PathDestination; getTargetFromNode
	a (Z)V setCanPassDoors
	a ([Lnet/minecraft/world/level/pathfinder/PathPoint;Lnet/minecraft/world/level/pathfinder/PathPoint;)I getNeighbors
	b ()V done
	b (III)Lnet/minecraft/world/level/pathfinder/PathPoint; getNode
	b (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/pathfinder/PathPoint; getNode
	b (Z)V setCanOpenDoors
	c (Z)V setCanFloat
	d ()Z canPassDoors
	d (Z)V setCanWalkOverFences
	e ()Z canOpenDoors
	f ()Z canFloat
	g ()Z canWalkOverFences
net/minecraft/world/level/pathfinder/PathfinderFlying net/minecraft/world/level/pathfinder/FlyNodeEvaluator
	m pathTypeByPosCache
	n SMALL_MOB_INFLATED_START_NODE_BOUNDING_BOX
	o MAX_START_NODE_CANDIDATES
	a ()Lnet/minecraft/world/level/pathfinder/PathPoint; getStart
	a (DDD)Lnet/minecraft/world/level/pathfinder/PathDestination; getGoal
	a (III)Lnet/minecraft/world/level/pathfinder/PathPoint; findAcceptedNode
	a (Lnet/minecraft/core/BlockPosition;)Z canStartAt
	a (Lnet/minecraft/world/entity/EntityInsentient;)Ljava/lang/Iterable; iteratePathfindingStartNodeCandidatePositions
	a (Lnet/minecraft/world/level/ChunkCache;Lnet/minecraft/world/entity/EntityInsentient;)V prepare
	a (Lnet/minecraft/world/level/IBlockAccess;III)Lnet/minecraft/world/level/pathfinder/PathType; getBlockPathType
	a (Lnet/minecraft/world/level/IBlockAccess;IIILnet/minecraft/world/entity/EntityInsentient;)Lnet/minecraft/world/level/pathfinder/PathType; getBlockPathType
	a ([Lnet/minecraft/world/level/pathfinder/PathPoint;Lnet/minecraft/world/level/pathfinder/PathPoint;)I getNeighbors
	b ()V done
	b (Lnet/minecraft/world/level/pathfinder/PathPoint;)Z hasMalus
	c (III)Lnet/minecraft/world/level/pathfinder/PathType; getCachedBlockPathType
	c (Lnet/minecraft/world/level/pathfinder/PathPoint;)Z isOpen
net/minecraft/world/level/pathfinder/PathfinderNormal net/minecraft/world/level/pathfinder/WalkNodeEvaluator
	k SPACE_BETWEEN_WALL_POSTS
	l oldWaterCost
	m DEFAULT_MOB_JUMP_HEIGHT
	n pathTypesByPosCache
	o collisionCache
	a ()Lnet/minecraft/world/level/pathfinder/PathPoint; getStart
	a (DDD)Lnet/minecraft/world/level/pathfinder/PathDestination; getGoal
	a (III)Lnet/minecraft/world/level/pathfinder/PathPoint; getBlockedNode
	a (IIIIDLnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/pathfinder/PathType;)Lnet/minecraft/world/level/pathfinder/PathPoint; findAcceptedNode
	a (IIILnet/minecraft/world/level/pathfinder/PathType;F)Lnet/minecraft/world/level/pathfinder/PathPoint; getNodeAndUpdateCostToMax
	a (Lnet/minecraft/core/BlockPosition;)Z canStartAt
	a (Lnet/minecraft/world/entity/EntityInsentient;III)Lnet/minecraft/world/level/pathfinder/PathType; getCachedBlockType
	a (Lnet/minecraft/world/entity/EntityInsentient;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/pathfinder/PathType; getBlockPathType
	a (Lnet/minecraft/world/level/ChunkCache;Lnet/minecraft/world/entity/EntityInsentient;)V prepare
	a (Lnet/minecraft/world/level/IBlockAccess;III)Lnet/minecraft/world/level/pathfinder/PathType; getBlockPathType
	a (Lnet/minecraft/world/level/IBlockAccess;IIILjava/util/EnumSet;Lnet/minecraft/world/level/pathfinder/PathType;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/pathfinder/PathType; getBlockPathTypes
	a (Lnet/minecraft/world/level/IBlockAccess;IIILnet/minecraft/world/entity/EntityInsentient;)Lnet/minecraft/world/level/pathfinder/PathType; getBlockPathType
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;)Lnet/minecraft/world/level/pathfinder/PathType; getBlockPathTypeStatic
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;Lnet/minecraft/world/level/pathfinder/PathType;)Lnet/minecraft/world/level/pathfinder/PathType; checkNeighbourBlocks
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)D getFloorLevel
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathType;)Lnet/minecraft/world/level/pathfinder/PathType; evaluateBlockPathType
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z isBurningBlock
	a (Lnet/minecraft/world/level/pathfinder/PathPoint;Lnet/minecraft/world/level/pathfinder/PathPoint;)Z isNeighborValid
	a (Lnet/minecraft/world/level/pathfinder/PathPoint;Lnet/minecraft/world/level/pathfinder/PathPoint;Lnet/minecraft/world/level/pathfinder/PathPoint;Lnet/minecraft/world/level/pathfinder/PathPoint;)Z isDiagonalValid
	a (Lnet/minecraft/world/level/pathfinder/PathType;)Z doesBlockHavePartialCollision
	a (Lnet/minecraft/world/phys/AxisAlignedBB;)Z hasCollisions
	a ([Lnet/minecraft/world/level/pathfinder/PathPoint;Lnet/minecraft/world/level/pathfinder/PathPoint;)I getNeighbors
	b ()V done
	b (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/pathfinder/PathType; getBlockPathTypeRaw
	b (Lnet/minecraft/world/level/pathfinder/PathPoint;)Z canReachWithoutCollision
	c ()Z isAmphibious
	c (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/pathfinder/PathPoint; getStartNode
	d (Lnet/minecraft/core/BlockPosition;)D getFloorLevel
	h ()D getMobJumpHeight
net/minecraft/world/level/pathfinder/PathfinderWater net/minecraft/world/level/pathfinder/SwimNodeEvaluator
	k allowBreaching
	l pathTypesByPosCache
	a ()Lnet/minecraft/world/level/pathfinder/PathPoint; getStart
	a (DDD)Lnet/minecraft/world/level/pathfinder/PathDestination; getGoal
	a (III)Lnet/minecraft/world/level/pathfinder/PathPoint; findAcceptedNode
	a (Lnet/minecraft/world/level/ChunkCache;Lnet/minecraft/world/entity/EntityInsentient;)V prepare
	a (Lnet/minecraft/world/level/IBlockAccess;III)Lnet/minecraft/world/level/pathfinder/PathType; getBlockPathType
	a (Lnet/minecraft/world/level/IBlockAccess;IIILnet/minecraft/world/entity/EntityInsentient;)Lnet/minecraft/world/level/pathfinder/PathType; getBlockPathType
	a (Lnet/minecraft/world/level/pathfinder/PathPoint;Lnet/minecraft/world/level/pathfinder/PathPoint;Lnet/minecraft/world/level/pathfinder/PathPoint;)Z isDiagonalNodeValid
	a ([Lnet/minecraft/world/level/pathfinder/PathPoint;Lnet/minecraft/world/level/pathfinder/PathPoint;)I getNeighbors
	b ()V done
	b (Lnet/minecraft/world/level/pathfinder/PathPoint;)Z isNodeValid
	c (III)Lnet/minecraft/world/level/pathfinder/PathType; getCachedBlockType
net/minecraft/world/level/portal/BlockPortalShape net/minecraft/world/level/portal/PortalShape
	a MAX_WIDTH
	b MAX_HEIGHT
	c MIN_WIDTH
	d MIN_HEIGHT
	e FRAME
	f SAFE_TRAVEL_MAX_ENTITY_XY
	g SAFE_TRAVEL_MAX_VERTICAL_DELTA
	h level
	i axis
	j rightDir
	k numPortalBlocks
	l bottomLeft
	m height
	n width
	a ()Z isValid
	a (Lnet/minecraft/BlockUtil$Rectangle;Lnet/minecraft/core/EnumDirection$EnumAxis;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/entity/EntitySize;)Lnet/minecraft/world/phys/Vec3D; getRelativePosition
	a (Lnet/minecraft/core/BlockPosition$MutableBlockPosition;)I getDistanceUntilTop
	a (Lnet/minecraft/core/BlockPosition$MutableBlockPosition;I)Z hasTopFrame
	a (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/core/BlockPosition; calculateBottomLeft
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getDistanceUntilEdgeAboveFrame
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/BlockUtil$Rectangle;Lnet/minecraft/core/EnumDirection$EnumAxis;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/Vec3D;FF)Lnet/minecraft/world/level/portal/ShapeDetectorShape; createPortalInfo
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Ljava/util/function/Predicate;Lnet/minecraft/core/EnumDirection$EnumAxis;)Ljava/util/Optional; findPortalShape
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection$EnumAxis;)Ljava/util/Optional; findEmptyPortalShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z isEmpty
	a (Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntitySize;)Lnet/minecraft/world/phys/Vec3D; findCollisionFreePosition
	b ()V createPortalBlocks
	c ()Z isComplete
	d ()I calculateWidth
	e ()I calculateHeight
net/minecraft/world/level/portal/PortalTravelAgent net/minecraft/world/level/portal/PortalForcer
	a TICKET_RADIUS
	b SEARCH_RADIUS
	c CREATE_RADIUS
	d FRAME_HEIGHT
	e FRAME_WIDTH
	f FRAME_BOX
	g FRAME_HEIGHT_START
	h FRAME_HEIGHT_END
	i FRAME_WIDTH_START
	j FRAME_WIDTH_END
	k FRAME_BOX_START
	l FRAME_BOX_END
	m NOTHING_FOUND
	n level
	a (Lnet/minecraft/core/BlockPosition$MutableBlockPosition;)Z canPortalReplaceBlock
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;Lnet/minecraft/core/EnumDirection;I)Z canHostFrame
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection$EnumAxis;)Ljava/util/Optional; createPortal
	a (Lnet/minecraft/core/BlockPosition;ZLnet/minecraft/world/level/border/WorldBorder;)Ljava/util/Optional; findPortalAround
net/minecraft/world/level/portal/ShapeDetectorShape net/minecraft/world/level/portal/PortalInfo
	a pos
	b speed
	c yRot
	d xRot
net/minecraft/world/level/saveddata/PersistentBase net/minecraft/world/level/saveddata/SavedData
	a LOGGER
	b dirty
	a (Ljava/io/File;)V save
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; save
	a (Z)V setDirty
	b ()V setDirty
	c ()Z isDirty
net/minecraft/world/level/saveddata/maps/MapIcon net/minecraft/world/level/saveddata/maps/MapDecoration
	a type
	b x
	c y
	d rot
	e name
	a ()B getImage
	b ()Lnet/minecraft/world/level/saveddata/maps/MapIcon$Type; getType
	c ()B getX
	d ()B getY
	e ()B getRot
	f ()Z renderOnFrame
	g ()Lnet/minecraft/network/chat/IChatBaseComponent; getName
net/minecraft/world/level/saveddata/maps/MapIcon$Type net/minecraft/world/level/saveddata/maps/MapDecoration$Type
	A RED_X
	B icon
	C renderedOnFrame
	D mapColor
	E trackCount
	F $VALUES
	a PLAYER
	b FRAME
	c RED_MARKER
	d BLUE_MARKER
	e TARGET_X
	f TARGET_POINT
	g PLAYER_OFF_MAP
	h PLAYER_OFF_LIMITS
	i MANSION
	j MONUMENT
	k BANNER_WHITE
	l BANNER_ORANGE
	m BANNER_MAGENTA
	n BANNER_LIGHT_BLUE
	o BANNER_YELLOW
	p BANNER_LIME
	q BANNER_PINK
	r BANNER_GRAY
	s BANNER_LIGHT_GRAY
	t BANNER_CYAN
	u BANNER_PURPLE
	v BANNER_BLUE
	w BANNER_BROWN
	x BANNER_GREEN
	y BANNER_RED
	z BANNER_BLACK
	a ()B getIcon
	a (B)Lnet/minecraft/world/level/saveddata/maps/MapIcon$Type; byIcon
	b ()Z isRenderedOnFrame
	c ()Z hasMapColor
	d ()I getMapColor
	e ()Z shouldTrackCount
	f ()[Lnet/minecraft/world/level/saveddata/maps/MapIcon$Type; $values
net/minecraft/world/level/saveddata/maps/MapIconBanner net/minecraft/world/level/saveddata/maps/MapBanner
	a pos
	b color
	c name
	a ()Lnet/minecraft/core/BlockPosition; getPos
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/level/saveddata/maps/MapIconBanner; load
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/saveddata/maps/MapIconBanner; fromWorld
	b ()Lnet/minecraft/world/item/EnumColor; getColor
	c ()Lnet/minecraft/world/level/saveddata/maps/MapIcon$Type; getDecoration
	d ()Lnet/minecraft/network/chat/IChatBaseComponent; getName
	e ()Lnet/minecraft/nbt/NBTTagCompound; save
	f ()Ljava/lang/String; getId
net/minecraft/world/level/saveddata/maps/PersistentIdCounts net/minecraft/world/level/saveddata/maps/MapIndex
	a FILE_NAME
	b usedAuxIds
	a ()I getFreeAuxValueForMap
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; save
	b (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/level/saveddata/maps/PersistentIdCounts; load
net/minecraft/world/level/saveddata/maps/WorldMap net/minecraft/world/level/saveddata/maps/MapItemSavedData
	a MAX_SCALE
	b TRACKED_DECORATION_LIMIT
	c centerX
	d centerZ
	e dimension
	f scale
	g colors
	h locked
	i LOGGER
	j MAP_SIZE
	k HALF_MAP_SIZE
	l trackingPosition
	m unlimitedTracking
	n carriedBy
	o carriedByPlayers
	p bannerMarkers
	q decorations
	r frameMarkers
	s trackedDecorationCount
	a ()Lnet/minecraft/world/level/saveddata/maps/WorldMap; locked
	a (BZLnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/level/saveddata/maps/WorldMap; createForClient
	a (DDBZZLnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/level/saveddata/maps/WorldMap; createFresh
	a (I)Lnet/minecraft/world/level/saveddata/maps/WorldMap; scaled
	a (II)V setColorsDirty
	a (IIB)Z updateColor
	a (ILnet/minecraft/world/entity/player/EntityHuman;)Lnet/minecraft/network/protocol/Packet; getUpdatePacket
	a (Ljava/lang/String;)V removeDecoration
	a (Ljava/util/List;)V addClientSideDecorations
	a (Lnet/minecraft/core/BlockPosition;I)V removedFromFrame
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; save
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Lnet/minecraft/world/level/saveddata/maps/WorldMap$WorldMapHumanTracker; getHoldingPlayer
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/item/ItemStack;)V tickCarriedBy
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPosition;Ljava/lang/String;Lnet/minecraft/world/level/saveddata/maps/MapIcon$Type;)V addTargetDecoration
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)Z toggleBanner
	a (Lnet/minecraft/world/level/IBlockAccess;II)V checkBanners
	a (Lnet/minecraft/world/level/saveddata/maps/MapIcon$Type;Lnet/minecraft/world/level/GeneratorAccess;Ljava/lang/String;DDDLnet/minecraft/network/chat/IChatBaseComponent;)V addDecoration
	b (I)Z isTrackedCountOverLimit
	b (IIB)V setColor
	b (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/level/saveddata/maps/WorldMap; load
	d ()Ljava/util/Collection; getBanners
	e ()Z isExplorationMap
	f ()Ljava/lang/Iterable; getDecorations
	g ()V setDecorationsDirty
net/minecraft/world/level/saveddata/maps/WorldMap$WorldMapHumanTracker net/minecraft/world/level/saveddata/maps/MapItemSavedData$HoldingPlayer
	a player
	b step
	d dirtyData
	e minDirtyX
	f minDirtyY
	g maxDirtyX
	h maxDirtyY
	i dirtyDecorations
	j tick
	a ()Ldxu$b; createPatch
	a (I)Lnet/minecraft/network/protocol/Packet; nextUpdatePacket
	a (II)V markColorsDirty
	b ()V markDecorationsDirty
net/minecraft/world/level/saveddata/maps/WorldMapFrame net/minecraft/world/level/saveddata/maps/MapFrame
	a pos
	b rotation
	c entityId
	a ()Lnet/minecraft/nbt/NBTTagCompound; save
	a (Lnet/minecraft/core/BlockPosition;)Ljava/lang/String; frameId
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/level/saveddata/maps/WorldMapFrame; load
	b ()Lnet/minecraft/core/BlockPosition; getPos
	c ()I getRotation
	d ()I getEntityId
	e ()Ljava/lang/String; getId
net/minecraft/world/level/storage/Convertable net/minecraft/world/level/storage/LevelStorageSource
	a LOGGER
	b FORMATTER
	c OLD_SETTINGS_KEYS
	d TAG_DATA
	e baseDir
	f backupDir
	g fixerUpper
	a ()Ljava/lang/String; getName
	a (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/level/WorldDataConfiguration; readDataConfig
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/DataFixer;I)Lcom/mojang/serialization/DataResult; readWorldGenSettings
	a (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/world/level/WorldDataConfiguration;Lnet/minecraft/core/IRegistry;Lcom/mojang/serialization/Lifecycle;)Ljava/util/function/BiFunction; getLevelData
	a (Ldye$a;)Ljava/util/concurrent/CompletableFuture; loadLevelSummaries
	a (Ldye$b;Ljava/util/function/BiFunction;)Ljava/lang/Object; readLevelData
	a (Ldye$b;Z)Ljava/util/function/BiFunction; levelSummaryReader
	a (Ljava/lang/String;)Z isNewLevelIdAcceptable
	a (Ljava/nio/file/Path;)Lnet/minecraft/world/level/storage/Convertable; createDefault
	a (Ljava/nio/file/Path;Lcom/mojang/datafixers/DataFixer;)Lnet/minecraft/world/level/WorldDataConfiguration; getDataConfiguration
	b ()Ldye$a; findLevelCandidates
	b (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/flag/FeatureFlagSet; parseFeatureFlagsFromSummary
	b (Ljava/lang/String;)Z levelExists
	b (Ljava/nio/file/Path;)Lnet/minecraft/nbt/NBTBase; readLightweightData
	c ()Ljava/nio/file/Path; getBaseDir
	c (Ljava/lang/String;)Lnet/minecraft/world/level/storage/Convertable$ConversionSession; createAccess
	d ()Ljava/nio/file/Path; getBackupPath
	e ()I getStorageVersion
net/minecraft/world/level/storage/Convertable$ConversionSession net/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess
	b lock
	c levelDirectory
	d levelId
	e resources
	a ()Ljava/lang/String; getLevelId
	a (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/world/level/WorldDataConfiguration;Lnet/minecraft/core/IRegistry;Lcom/mojang/serialization/Lifecycle;)Lcom/mojang/datafixers/util/Pair; getDataTag
	a (Ljava/lang/String;)V renameLevel
	a (Lnet/minecraft/core/IRegistryCustom;Lnet/minecraft/world/level/storage/SaveData;)V saveDataTag
	a (Lnet/minecraft/core/IRegistryCustom;Lnet/minecraft/world/level/storage/SaveData;Lnet/minecraft/nbt/NBTTagCompound;)V saveDataTag
	a (Lnet/minecraft/resources/ResourceKey;)Ljava/nio/file/Path; getDimensionPath
	a (Lnet/minecraft/world/level/storage/SavedFile;)Ljava/nio/file/Path; getLevelPath
	b ()Lnet/minecraft/world/level/storage/WorldNBTStorage; createPlayerStorage
	c ()Lnet/minecraft/world/level/storage/WorldInfo; getSummary
	d ()Lnet/minecraft/world/level/WorldDataConfiguration; getDataConfiguration
	e ()Ljava/util/Optional; getIconFile
	f ()V deleteLevel
	g ()J makeWorldBackup
	h ()V checkLock
net/minecraft/world/level/storage/IWorldDataServer net/minecraft/world/level/storage/ServerLevelData
	a (I)V setClearWeatherTime
	a (J)V setGameTime
	a (Lddi$c;)V setWorldBorder
	a (Ljava/util/UUID;)V setWanderingTraderId
	a (Lnet/minecraft/CrashReportSystemDetails;Lnet/minecraft/world/level/LevelHeightAccessor;)V fillCrashReportCategory
	a (Lnet/minecraft/world/level/EnumGamemode;)V setGameType
	a (Z)V setThundering
	b (J)V setDayTime
	c (Z)V setInitialized
	e (I)V setThunderTime
	f (I)V setRainTime
	g ()Ljava/lang/String; getLevelName
	g (I)V setWanderingTraderSpawnDelay
	h ()I getClearWeatherTime
	h (I)V setWanderingTraderSpawnChance
	j ()I getThunderTime
	l ()I getRainTime
	m ()Lnet/minecraft/world/level/EnumGamemode; getGameType
	o ()Z getAllowCommands
	p ()Z isInitialized
	r ()Lddi$c; getWorldBorder
	u ()Lnet/minecraft/world/level/timers/CustomFunctionCallbackTimerQueue; getScheduledEvents
	v ()I getWanderingTraderSpawnDelay
	w ()I getWanderingTraderSpawnChance
	x ()Ljava/util/UUID; getWanderingTraderId
net/minecraft/world/level/storage/PersistentCommandStorage net/minecraft/world/level/storage/CommandStorage
	a ID_PREFIX
	b namespaces
	c storage
	a ()Ljava/util/stream/Stream; keys
	a (Ljava/lang/String;)Ldxx$a; newStorage
	a (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/nbt/NBTTagCompound; get
	a (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/nbt/NBTTagCompound;)V set
	b (Ljava/lang/String;)Ljava/lang/String; createId
net/minecraft/world/level/storage/SaveData net/minecraft/world/level/storage/WorldData
	c ANVIL_VERSION_ID
	d MCREGION_VERSION_ID
	A ()Lnet/minecraft/world/level/levelgen/WorldOptions; worldGenOptions
	B ()Z isFlatWorld
	C ()Z isDebugWorld
	D ()Lcom/mojang/serialization/Lifecycle; worldGenSettingsLifecycle
	E ()Lnet/minecraft/nbt/NBTTagCompound; endDragonFightData
	F ()Lnet/minecraft/world/level/WorldDataConfiguration; getDataConfiguration
	G ()Lnet/minecraft/nbt/NBTTagCompound; getCustomBossEvents
	H ()Z wasModded
	I ()Ljava/util/Set; getKnownServerBrands
	J ()Lnet/minecraft/world/level/storage/IWorldDataServer; overworldData
	K ()Lnet/minecraft/world/level/WorldSettings; getLevelSettings
	L ()Lnet/minecraft/world/flag/FeatureFlagSet; enabledFeatures
	a (Ljava/lang/String;Z)V setModdedInfo
	a (Lnet/minecraft/CrashReportSystemDetails;)V fillCrashReportCategory
	a (Lnet/minecraft/core/IRegistryCustom;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; createTag
	a (Lnet/minecraft/nbt/NBTTagCompound;)V setEndDragonFightData
	a (Lnet/minecraft/world/EnumDifficulty;)V setDifficulty
	a (Lnet/minecraft/world/level/EnumGamemode;)V setGameType
	a (Lnet/minecraft/world/level/WorldDataConfiguration;)V setDataConfiguration
	b (Lnet/minecraft/nbt/NBTTagCompound;)V setCustomBossEvents
	d (Z)V setDifficultyLocked
	g ()Ljava/lang/String; getLevelName
	i (I)Ljava/lang/String; getStorageVersionName
	m ()Lnet/minecraft/world/level/EnumGamemode; getGameType
	n ()Z isHardcore
	o ()Z getAllowCommands
	q ()Lnet/minecraft/world/level/GameRules; getGameRules
	s ()Lnet/minecraft/world/EnumDifficulty; getDifficulty
	t ()Z isDifficultyLocked
	y ()Lnet/minecraft/nbt/NBTTagCompound; getLoadedPlayerTag
	z ()I getVersion
net/minecraft/world/level/storage/SavedFile net/minecraft/world/level/storage/LevelResource
	a PLAYER_ADVANCEMENTS_DIR
	b PLAYER_STATS_DIR
	c PLAYER_DATA_DIR
	d PLAYER_OLD_DATA_DIR
	e LEVEL_DATA_FILE
	f OLD_LEVEL_DATA_FILE
	g ICON_FILE
	h LOCK_FILE
	i GENERATED_DIR
	j DATAPACK_DIR
	k MAP_RESOURCE_FILE
	l ROOT
	m id
	a ()Ljava/lang/String; getId
net/minecraft/world/level/storage/SecondaryWorldData net/minecraft/world/level/storage/DerivedLevelData
	a worldData
	b wrapped
	a ()I getXSpawn
	a (F)V setSpawnAngle
	a (I)V setClearWeatherTime
	a (J)V setGameTime
	a (Lddi$c;)V setWorldBorder
	a (Ljava/util/UUID;)V setWanderingTraderId
	a (Lnet/minecraft/CrashReportSystemDetails;Lnet/minecraft/world/level/LevelHeightAccessor;)V fillCrashReportCategory
	a (Lnet/minecraft/core/BlockPosition;F)V setSpawn
	a (Lnet/minecraft/world/level/EnumGamemode;)V setGameType
	a (Z)V setThundering
	b ()I getYSpawn
	b (I)V setXSpawn
	b (J)V setDayTime
	b (Z)V setRaining
	c ()I getZSpawn
	c (I)V setYSpawn
	c (Z)V setInitialized
	d ()F getSpawnAngle
	d (I)V setZSpawn
	e ()J getGameTime
	e (I)V setThunderTime
	f ()J getDayTime
	f (I)V setRainTime
	g ()Ljava/lang/String; getLevelName
	g (I)V setWanderingTraderSpawnDelay
	h ()I getClearWeatherTime
	h (I)V setWanderingTraderSpawnChance
	i ()Z isThundering
	j ()I getThunderTime
	k ()Z isRaining
	l ()I getRainTime
	m ()Lnet/minecraft/world/level/EnumGamemode; getGameType
	n ()Z isHardcore
	o ()Z getAllowCommands
	p ()Z isInitialized
	q ()Lnet/minecraft/world/level/GameRules; getGameRules
	r ()Lddi$c; getWorldBorder
	s ()Lnet/minecraft/world/EnumDifficulty; getDifficulty
	t ()Z isDifficultyLocked
	u ()Lnet/minecraft/world/level/timers/CustomFunctionCallbackTimerQueue; getScheduledEvents
	v ()I getWanderingTraderSpawnDelay
	w ()I getWanderingTraderSpawnChance
	x ()Ljava/util/UUID; getWanderingTraderId
net/minecraft/world/level/storage/WorldData net/minecraft/world/level/storage/LevelData
	a ()I getXSpawn
	a (Lnet/minecraft/CrashReportSystemDetails;Lnet/minecraft/world/level/LevelHeightAccessor;)V fillCrashReportCategory
	b ()I getYSpawn
	b (Z)V setRaining
	c ()I getZSpawn
	d ()F getSpawnAngle
	e ()J getGameTime
	f ()J getDayTime
	i ()Z isThundering
	k ()Z isRaining
	n ()Z isHardcore
	q ()Lnet/minecraft/world/level/GameRules; getGameRules
	s ()Lnet/minecraft/world/EnumDifficulty; getDifficulty
	t ()Z isDifficultyLocked
net/minecraft/world/level/storage/WorldDataMutable net/minecraft/world/level/storage/WritableLevelData
	a (F)V setSpawnAngle
	a (Lnet/minecraft/core/BlockPosition;F)V setSpawn
	b (I)V setXSpawn
	c (I)V setYSpawn
	d (I)V setZSpawn
net/minecraft/world/level/storage/WorldDataServer net/minecraft/world/level/storage/PrimaryLevelData
	A difficultyLocked
	B worldBorder
	C endDragonFightData
	D customBossEvents
	E wanderingTraderSpawnDelay
	F wanderingTraderSpawnChance
	G wanderingTraderId
	H knownServerBrands
	I wasModded
	J scheduledEvents
	a PLAYER
	b WORLD_GEN_SETTINGS
	e LOGGER
	f settings
	g worldOptions
	h specialWorldProperty
	i worldGenSettingsLifecycle
	j xSpawn
	k ySpawn
	l zSpawn
	m spawnAngle
	n gameTime
	o dayTime
	p fixerUpper
	q playerDataVersion
	r upgradedPlayerTag
	s loadedPlayerTag
	t version
	u clearWeatherTime
	v raining
	w rainTime
	x thundering
	y thunderTime
	z initialized
	A ()Lnet/minecraft/world/level/levelgen/WorldOptions; worldGenOptions
	B ()Z isFlatWorld
	C ()Z isDebugWorld
	D ()Lcom/mojang/serialization/Lifecycle; worldGenSettingsLifecycle
	E ()Lnet/minecraft/nbt/NBTTagCompound; endDragonFightData
	F ()Lnet/minecraft/world/level/WorldDataConfiguration; getDataConfiguration
	G ()Lnet/minecraft/nbt/NBTTagCompound; getCustomBossEvents
	H ()Z wasModded
	I ()Ljava/util/Set; getKnownServerBrands
	J ()Lnet/minecraft/world/level/storage/IWorldDataServer; overworldData
	K ()Lnet/minecraft/world/level/WorldSettings; getLevelSettings
	M ()V updatePlayerTag
	a ()I getXSpawn
	a (F)V setSpawnAngle
	a (I)V setClearWeatherTime
	a (J)V setGameTime
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/DataFixer;ILnet/minecraft/nbt/NBTTagCompound;Lnet/minecraft/world/level/WorldSettings;Lnet/minecraft/world/level/storage/LevelVersion;Ldyi$a;Lnet/minecraft/world/level/levelgen/WorldOptions;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/world/level/storage/WorldDataServer; parse
	a (Lddi$c;)V setWorldBorder
	a (Ljava/lang/String;Z)V setModdedInfo
	a (Ljava/util/UUID;)V setWanderingTraderId
	a (Lnet/minecraft/CrashReportSystemDetails;Lnet/minecraft/world/level/LevelHeightAccessor;)V fillCrashReportCategory
	a (Lnet/minecraft/core/BlockPosition;F)V setSpawn
	a (Lnet/minecraft/core/IRegistryCustom;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; createTag
	a (Lnet/minecraft/core/IRegistryCustom;Lnet/minecraft/nbt/NBTTagCompound;Lnet/minecraft/nbt/NBTTagCompound;)V setTagData
	a (Lnet/minecraft/nbt/NBTTagCompound;)V setEndDragonFightData
	a (Lnet/minecraft/world/EnumDifficulty;)V setDifficulty
	a (Lnet/minecraft/world/level/EnumGamemode;)V setGameType
	a (Lnet/minecraft/world/level/WorldDataConfiguration;)V setDataConfiguration
	a (Z)V setThundering
	b ()I getYSpawn
	b (I)V setXSpawn
	b (J)V setDayTime
	b (Lnet/minecraft/nbt/NBTTagCompound;)V setCustomBossEvents
	b (Z)V setRaining
	c ()I getZSpawn
	c (I)V setYSpawn
	c (Z)V setInitialized
	d ()F getSpawnAngle
	d (I)V setZSpawn
	d (Z)V setDifficultyLocked
	e ()J getGameTime
	e (I)V setThunderTime
	f ()J getDayTime
	f (I)V setRainTime
	g ()Ljava/lang/String; getLevelName
	g (I)V setWanderingTraderSpawnDelay
	h ()I getClearWeatherTime
	h (I)V setWanderingTraderSpawnChance
	i ()Z isThundering
	j ()I getThunderTime
	k ()Z isRaining
	l ()I getRainTime
	m ()Lnet/minecraft/world/level/EnumGamemode; getGameType
	n ()Z isHardcore
	o ()Z getAllowCommands
	p ()Z isInitialized
	q ()Lnet/minecraft/world/level/GameRules; getGameRules
	r ()Lddi$c; getWorldBorder
	s ()Lnet/minecraft/world/EnumDifficulty; getDifficulty
	t ()Z isDifficultyLocked
	u ()Lnet/minecraft/world/level/timers/CustomFunctionCallbackTimerQueue; getScheduledEvents
	v ()I getWanderingTraderSpawnDelay
	w ()I getWanderingTraderSpawnChance
	x ()Ljava/util/UUID; getWanderingTraderId
	y ()Lnet/minecraft/nbt/NBTTagCompound; getLoadedPlayerTag
	z ()I getVersion
net/minecraft/world/level/storage/WorldInfo net/minecraft/world/level/storage/LevelSummary
	a settings
	b levelVersion
	c levelId
	d requiresManualConversion
	e locked
	f experimental
	g icon
	h info
	a ()Ljava/lang/String; getLevelId
	a (Lnet/minecraft/world/level/storage/WorldInfo;)I compareTo
	b ()Ljava/lang/String; getLevelName
	c ()Ljava/nio/file/Path; getIcon
	d ()Z requiresManualConversion
	e ()Z isExperimental
	f ()J getLastPlayed
	g ()Lnet/minecraft/world/level/WorldSettings; getSettings
	h ()Lnet/minecraft/world/level/EnumGamemode; getGameMode
	i ()Z isHardcore
	j ()Z hasCheats
	k ()Lnet/minecraft/network/chat/IChatMutableComponent; getWorldVersionName
	l ()Lnet/minecraft/world/level/storage/LevelVersion; levelVersion
	m ()Z markVersionInList
	n ()Z askToOpenWorld
	o ()Ldyf$a; backupStatus
	p ()Z isLocked
	q ()Z isDisabled
	r ()Z isCompatible
	s ()Lnet/minecraft/network/chat/IChatBaseComponent; getInfo
	t ()Lnet/minecraft/network/chat/IChatBaseComponent; createInfo
net/minecraft/world/level/storage/WorldNBTStorage net/minecraft/world/level/storage/PlayerDataStorage
	a fixerUpper
	b LOGGER
	c playerDir
	a ()[Ljava/lang/String; getSeenPlayers
	a (Lnet/minecraft/world/entity/player/EntityHuman;)V save
	b (Lnet/minecraft/world/entity/player/EntityHuman;)Lnet/minecraft/nbt/NBTTagCompound; load
net/minecraft/world/level/storage/WorldPersistentData net/minecraft/world/level/storage/DimensionDataStorage
	a LOGGER
	b cache
	c fixerUpper
	d dataFolder
	a ()V save
	a (Ljava/io/PushbackInputStream;)Z isGzip
	a (Ljava/lang/String;)Ljava/io/File; getDataFile
	a (Ljava/lang/String;I)Lnet/minecraft/nbt/NBTTagCompound; readTagFromDisk
	a (Ljava/lang/String;Lnet/minecraft/world/level/saveddata/PersistentBase;)V set
	a (Ljava/util/function/Function;Ljava/lang/String;)Lnet/minecraft/world/level/saveddata/PersistentBase; get
	a (Ljava/util/function/Function;Ljava/util/function/Supplier;Ljava/lang/String;)Lnet/minecraft/world/level/saveddata/PersistentBase; computeIfAbsent
	b (Ljava/util/function/Function;Ljava/lang/String;)Lnet/minecraft/world/level/saveddata/PersistentBase; readSavedData
net/minecraft/world/level/storage/loot/JsonRegistry net/minecraft/world/level/storage/loot/GsonAdapterFactory
	a (Lnet/minecraft/core/IRegistry;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Function;)Ldyo$a; builder
net/minecraft/world/level/storage/loot/LootCollector net/minecraft/world/level/storage/loot/ValidationContext
	a problems
	b context
	c params
	d conditionResolver
	e visitedConditions
	f tableResolver
	g visitedTables
	h contextCache
	a ()Lcom/google/common/collect/Multimap; getProblems
	a (Ljava/lang/String;)V reportProblem
	a (Ljava/lang/String;Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/world/level/storage/loot/LootCollector; enterTable
	a (Lnet/minecraft/resources/MinecraftKey;)Z hasVisitedTable
	a (Lnet/minecraft/world/level/storage/loot/LootItemUser;)V validateUser
	a (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParameterSet;)Lnet/minecraft/world/level/storage/loot/LootCollector; setParams
	b ()Ljava/lang/String; getContext
	b (Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/LootCollector; forChild
	b (Ljava/lang/String;Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/world/level/storage/loot/LootCollector; enterCondition
	b (Lnet/minecraft/resources/MinecraftKey;)Z hasVisitedCondition
	c (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/world/level/storage/loot/LootTable; resolveLootTable
	d (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition; resolveCondition
net/minecraft/world/level/storage/loot/LootItemUser net/minecraft/world/level/storage/loot/LootContextUser
	a (Lnet/minecraft/world/level/storage/loot/LootCollector;)V validate
	b ()Ljava/util/Set; getReferencedContextParams
net/minecraft/world/level/storage/loot/LootPredicateManager net/minecraft/world/level/storage/loot/PredicateManager
	a LOGGER
	b GSON
	c conditions
	a ()Ljava/util/Set; getKeys
	a (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)V apply
	a (Ljava/util/Map;Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)V apply
	a (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition; get
net/minecraft/world/level/storage/loot/LootSelector net/minecraft/world/level/storage/loot/LootPool
	a entries
	b conditions
	c compositeCondition
	d functions
	e compositeFunction
	f rolls
	g bonusRolls
	a ()Ldyt$a; lootPool
	a (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)V addRandomItems
	a (Lnet/minecraft/world/level/storage/loot/LootCollector;)V validate
	b (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)V addRandomItem
net/minecraft/world/level/storage/loot/LootSerialization net/minecraft/world/level/storage/loot/Deserializers
	a ()Lcom/google/gson/GsonBuilder; createConditionSerializer
	b ()Lcom/google/gson/GsonBuilder; createFunctionSerializer
	c ()Lcom/google/gson/GsonBuilder; createLootTableSerializer
net/minecraft/world/level/storage/loot/LootSerializer net/minecraft/world/level/storage/loot/Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
net/minecraft/world/level/storage/loot/LootSerializerType net/minecraft/world/level/storage/loot/SerializerType
	a serializer
	a ()Lnet/minecraft/world/level/storage/loot/LootSerializer; getSerializer
net/minecraft/world/level/storage/loot/LootTableInfo net/minecraft/world/level/storage/loot/LootContext
	a random
	b luck
	c level
	d lootTables
	e visitedTables
	f conditions
	g visitedConditions
	h params
	i dynamicDrops
	a ()Lnet/minecraft/util/RandomSource; getRandom
	a (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/world/level/storage/loot/LootTable; getLootTable
	a (Lnet/minecraft/resources/MinecraftKey;Ljava/util/function/Consumer;)V addDynamicDrops
	a (Lnet/minecraft/world/level/storage/loot/LootTable;)Z addVisitedTable
	a (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParameter;)Z hasParam
	a (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Z addVisitedCondition
	b ()F getLuck
	b (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition; getCondition
	b (Lnet/minecraft/world/level/storage/loot/LootTable;)V removeVisitedTable
	b (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParameter;)Ljava/lang/Object; getParam
	b (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)V removeVisitedCondition
	c ()Lnet/minecraft/server/level/WorldServer; getLevel
	c (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParameter;)Ljava/lang/Object; getParamOrNull
net/minecraft/world/level/storage/loot/LootTableInfo$Builder net/minecraft/world/level/storage/loot/LootContext$Builder
	a level
	b params
	c dynamicDrops
	d random
	e luck
	a ()Lnet/minecraft/server/level/WorldServer; getLevel
	a (F)Lnet/minecraft/world/level/storage/loot/LootTableInfo$Builder; withLuck
	a (J)Lnet/minecraft/world/level/storage/loot/LootTableInfo$Builder; withOptionalRandomSeed
	a (JLnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/storage/loot/LootTableInfo$Builder; withOptionalRandomSeed
	a (Lnet/minecraft/resources/MinecraftKey;Ldyr$b;)Lnet/minecraft/world/level/storage/loot/LootTableInfo$Builder; withDynamicDrop
	a (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/storage/loot/LootTableInfo$Builder; withRandom
	a (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParameter;)Ljava/lang/Object; getParameter
	a (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParameter;Ljava/lang/Object;)Lnet/minecraft/world/level/storage/loot/LootTableInfo$Builder; withParameter
	a (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParameterSet;)Lnet/minecraft/world/level/storage/loot/LootTableInfo; create
	b (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParameter;)Ljava/lang/Object; getOptionalParameter
	b (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParameter;Ljava/lang/Object;)Lnet/minecraft/world/level/storage/loot/LootTableInfo$Builder; withOptionalParameter
net/minecraft/world/level/storage/loot/LootTableInfo$EntityTarget net/minecraft/world/level/storage/loot/LootContext$EntityTarget
	a THIS
	b KILLER
	c DIRECT_KILLER
	d KILLER_PLAYER
	e name
	f param
	g $VALUES
	a ()Lnet/minecraft/world/level/storage/loot/parameters/LootContextParameter; getParam
	a (Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/LootTableInfo$EntityTarget; getByName
	b ()[Lnet/minecraft/world/level/storage/loot/LootTableInfo$EntityTarget; $values
net/minecraft/world/level/storage/loot/LootTableRegistry net/minecraft/world/level/storage/loot/LootTables
	a LOGGER
	b GSON
	c tables
	d predicateManager
	a ()Ljava/util/Set; getIds
	a (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)V apply
	a (Ljava/util/Map;Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)V apply
	a (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/world/level/storage/loot/LootTable; get
	a (Lnet/minecraft/world/level/storage/loot/LootCollector;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/world/level/storage/loot/LootTable;)V validate
	a (Lnet/minecraft/world/level/storage/loot/LootTable;)Lcom/google/gson/JsonElement; serialize
net/minecraft/world/level/storage/loot/LootTables net/minecraft/world/level/storage/loot/BuiltInLootTables
	A JUNGLE_TEMPLE
	B JUNGLE_TEMPLE_DISPENSER
	C IGLOO_CHEST
	D WOODLAND_MANSION
	E UNDERWATER_RUIN_SMALL
	F UNDERWATER_RUIN_BIG
	G BURIED_TREASURE
	H SHIPWRECK_MAP
	I SHIPWRECK_SUPPLY
	J SHIPWRECK_TREASURE
	K PILLAGER_OUTPOST
	L BASTION_TREASURE
	M BASTION_OTHER
	N BASTION_BRIDGE
	O BASTION_HOGLIN_STABLE
	P ANCIENT_CITY
	Q ANCIENT_CITY_ICE_BOX
	R RUINED_PORTAL
	S SHEEP_WHITE
	T SHEEP_ORANGE
	U SHEEP_MAGENTA
	V SHEEP_LIGHT_BLUE
	W SHEEP_YELLOW
	X SHEEP_LIME
	Y SHEEP_PINK
	Z SHEEP_GRAY
	a EMPTY
	aA PIGLIN_BARTERING
	aB LOCATIONS
	aC IMMUTABLE_LOCATIONS
	aa SHEEP_LIGHT_GRAY
	ab SHEEP_CYAN
	ac SHEEP_PURPLE
	ad SHEEP_BLUE
	ae SHEEP_BROWN
	af SHEEP_GREEN
	ag SHEEP_RED
	ah SHEEP_BLACK
	ai FISHING
	aj FISHING_JUNK
	ak FISHING_TREASURE
	al FISHING_FISH
	am CAT_MORNING_GIFT
	an ARMORER_GIFT
	ao BUTCHER_GIFT
	ap CARTOGRAPHER_GIFT
	aq CLERIC_GIFT
	ar FARMER_GIFT
	as FISHERMAN_GIFT
	at FLETCHER_GIFT
	au LEATHERWORKER_GIFT
	av LIBRARIAN_GIFT
	aw MASON_GIFT
	ax SHEPHERD_GIFT
	ay TOOLSMITH_GIFT
	az WEAPONSMITH_GIFT
	b SPAWN_BONUS_CHEST
	c END_CITY_TREASURE
	d SIMPLE_DUNGEON
	e VILLAGE_WEAPONSMITH
	f VILLAGE_TOOLSMITH
	g VILLAGE_ARMORER
	h VILLAGE_CARTOGRAPHER
	i VILLAGE_MASON
	j VILLAGE_SHEPHERD
	k VILLAGE_BUTCHER
	l VILLAGE_FLETCHER
	m VILLAGE_FISHER
	n VILLAGE_TANNERY
	o VILLAGE_TEMPLE
	p VILLAGE_DESERT_HOUSE
	q VILLAGE_PLAINS_HOUSE
	r VILLAGE_TAIGA_HOUSE
	s VILLAGE_SNOWY_HOUSE
	t VILLAGE_SAVANNA_HOUSE
	u ABANDONED_MINESHAFT
	v NETHER_BRIDGE
	w STRONGHOLD_LIBRARY
	x STRONGHOLD_CROSSING
	y STRONGHOLD_CORRIDOR
	z DESERT_PYRAMID
	a ()Ljava/util/Set; all
	a (Ljava/lang/String;)Lnet/minecraft/resources/MinecraftKey; register
	a (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/resources/MinecraftKey; register
net/minecraft/world/level/storage/loot/entries/LootEntries net/minecraft/world/level/storage/loot/entries/LootPoolEntries
	a EMPTY
	b ITEM
	c REFERENCE
	d DYNAMIC
	e TAG
	f ALTERNATIVES
	g SEQUENCE
	h GROUP
	a ()Ljava/lang/Object; createGsonAdapter
	a (Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/LootSerializer;)Lnet/minecraft/world/level/storage/loot/entries/LootEntryType; register
net/minecraft/world/level/storage/loot/entries/LootEntry net/minecraft/world/level/storage/loot/entries/LootPoolEntry
	a (F)I getWeight
	a (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)V createItemStack
net/minecraft/world/level/storage/loot/entries/LootEntryAbstract net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer
	c compositeCondition
	d conditions
	a ()Lnet/minecraft/world/level/storage/loot/entries/LootEntryType; getType
	a (Lnet/minecraft/world/level/storage/loot/LootCollector;)V validate
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Z canRun
net/minecraft/world/level/storage/loot/entries/LootEntryAbstract$Serializer net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootEntryAbstract;Lcom/google/gson/JsonSerializationContext;)V serializeCustom
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/entries/LootEntryAbstract; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/entries/LootEntryAbstract; deserializeCustom
	b (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootEntryAbstract;Lcom/google/gson/JsonSerializationContext;)V serialize
net/minecraft/world/level/storage/loot/entries/LootEntryAlternatives net/minecraft/world/level/storage/loot/entries/AlternativesEntry
	a ()Lnet/minecraft/world/level/storage/loot/entries/LootEntryType; getType
	a (Ljava/util/Collection;Ljava/util/function/Function;)Ldza$a; alternatives
	a (Lnet/minecraft/world/level/storage/loot/LootCollector;)V validate
	a ([Ldzj$a;)Ldza$a; alternatives
	a ([Lnet/minecraft/world/level/storage/loot/entries/LootEntryChildren;)Lnet/minecraft/world/level/storage/loot/entries/LootEntryChildren; compose
net/minecraft/world/level/storage/loot/entries/LootEntryChildren net/minecraft/world/level/storage/loot/entries/ComposableEntryContainer
	a ALWAYS_FALSE
	b ALWAYS_TRUE
net/minecraft/world/level/storage/loot/entries/LootEntryChildrenAbstract net/minecraft/world/level/storage/loot/entries/CompositeEntryBase
	c children
	e composedChildren
	a (Ldzc$a;)Lnet/minecraft/world/level/storage/loot/entries/LootEntryAbstract$Serializer; createSerializer
	a (Lnet/minecraft/world/level/storage/loot/LootCollector;)V validate
	a ([Lnet/minecraft/world/level/storage/loot/entries/LootEntryChildren;)Lnet/minecraft/world/level/storage/loot/entries/LootEntryChildren; compose
net/minecraft/world/level/storage/loot/entries/LootEntryGroup net/minecraft/world/level/storage/loot/entries/EntryGroup
	a ()Lnet/minecraft/world/level/storage/loot/entries/LootEntryType; getType
	a ([Ldzj$a;)Ldzf$a; list
	a ([Lnet/minecraft/world/level/storage/loot/entries/LootEntryChildren;)Lnet/minecraft/world/level/storage/loot/entries/LootEntryChildren; compose
net/minecraft/world/level/storage/loot/entries/LootEntrySequence net/minecraft/world/level/storage/loot/entries/SequentialEntry
	a ()Lnet/minecraft/world/level/storage/loot/entries/LootEntryType; getType
	a ([Ldzj$a;)Ldzn$a; sequential
	a ([Lnet/minecraft/world/level/storage/loot/entries/LootEntryChildren;)Lnet/minecraft/world/level/storage/loot/entries/LootEntryChildren; compose
net/minecraft/world/level/storage/loot/entries/LootEntryType net/minecraft/world/level/storage/loot/entries/LootPoolEntryType
net/minecraft/world/level/storage/loot/entries/LootSelectorDynamic net/minecraft/world/level/storage/loot/entries/DynamicLoot
	i name
	a ()Lnet/minecraft/world/level/storage/loot/entries/LootEntryType; getType
	a (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)V createItemStack
	a (Lnet/minecraft/resources/MinecraftKey;)Ldzl$a; dynamicEntry
net/minecraft/world/level/storage/loot/entries/LootSelectorEmpty net/minecraft/world/level/storage/loot/entries/EmptyLootItem
	a ()Lnet/minecraft/world/level/storage/loot/entries/LootEntryType; getType
	a (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)V createItemStack
	b ()Ldzl$a; emptyItem
net/minecraft/world/level/storage/loot/entries/LootSelectorEntry net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer
	c DEFAULT_WEIGHT
	e DEFAULT_QUALITY
	f weight
	g quality
	h functions
	i compositeFunction
	j entry
	a (Ldzl$d;)Ldzl$a; simpleBuilder
	a (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)V createItemStack
	a (Lnet/minecraft/world/level/storage/loot/LootCollector;)V validate
net/minecraft/world/level/storage/loot/entries/LootSelectorLootTable net/minecraft/world/level/storage/loot/entries/LootTableReference
	i name
	a ()Lnet/minecraft/world/level/storage/loot/entries/LootEntryType; getType
	a (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)V createItemStack
	a (Lnet/minecraft/resources/MinecraftKey;)Ldzl$a; lootTableReference
	a (Lnet/minecraft/world/level/storage/loot/LootCollector;)V validate
net/minecraft/world/level/storage/loot/entries/LootSelectorTag net/minecraft/world/level/storage/loot/entries/TagEntry
	i tag
	j expand
	a ()Lnet/minecraft/world/level/storage/loot/entries/LootEntryType; getType
	a (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)V createItemStack
	a (Lnet/minecraft/tags/TagKey;)Ldzl$a; tagContents
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;Ljava/util/function/Consumer;)Z expandTag
	b (Lnet/minecraft/tags/TagKey;)Ldzl$a; expandTag
net/minecraft/world/level/storage/loot/functions/LootEnchantFunction net/minecraft/world/level/storage/loot/functions/LootingEnchantFunction
	a NO_LIMIT
	b value
	c limit
	a ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; getType
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/world/item/ItemStack; run
	a (Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Leaf$a; lootingMultiplier
	b ()Ljava/util/Set; getReferencedContextParams
	c ()Z hasLimit
net/minecraft/world/level/storage/loot/functions/LootEnchantLevel net/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction
	a levels
	b treasure
	a ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; getType
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/world/item/ItemStack; run
	a (Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Ldzw$a; enchantWithLevels
	b ()Ljava/util/Set; getReferencedContextParams
net/minecraft/world/level/storage/loot/functions/LootItemFunctionApplyBonus net/minecraft/world/level/storage/loot/functions/ApplyBonusCount
	a FORMULAS
	b enchantment
	c formula
	a ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; getType
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/world/item/ItemStack; run
	a (Lnet/minecraft/world/item/enchantment/Enchantment;)Leab$a; addOreBonusCount
	a (Lnet/minecraft/world/item/enchantment/Enchantment;FI)Leab$a; addBonusBinomialDistributionCount
	a (Lnet/minecraft/world/item/enchantment/Enchantment;I)Leab$a; addUniformBonusCount
	b ()Ljava/util/Set; getReferencedContextParams
	b (Lnet/minecraft/world/item/enchantment/Enchantment;)Leab$a; addUniformBonusCount
net/minecraft/world/level/storage/loot/functions/LootItemFunctionConditional net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction
	a compositePredicates
	g predicates
	a (Ljava/util/function/Function;)Leab$a; simpleBuilder
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/world/item/ItemStack; run
	a (Lnet/minecraft/world/level/storage/loot/LootCollector;)V validate
	b (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/world/item/ItemStack; apply
net/minecraft/world/level/storage/loot/functions/LootItemFunctionCopyNBT net/minecraft/world/level/storage/loot/functions/CopyNbtFunction
	a source
	b operations
	a ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; getType
	a (Ljava/lang/String;)Leg$g; compileNbtPath
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/world/item/ItemStack; run
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo$EntityTarget;)Ldzu$a; copyData
	a (Lnet/minecraft/world/level/storage/loot/providers/nbt/NbtProvider;)Ldzu$a; copyData
	b ()Ljava/util/Set; getReferencedContextParams
net/minecraft/world/level/storage/loot/functions/LootItemFunctionCopyNBT$Action net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$MergeStrategy
	a REPLACE
	b APPEND
	c MERGE
	d name
	e $VALUES
	a ()[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionCopyNBT$Action; $values
	a (Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionCopyNBT$Action; getByName
	a (Lnet/minecraft/nbt/NBTBase;Leg$g;Ljava/util/List;)V merge
net/minecraft/world/level/storage/loot/functions/LootItemFunctionCopyName net/minecraft/world/level/storage/loot/functions/CopyNameFunction
	a source
	a ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; getType
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/world/item/ItemStack; run
	a (Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionCopyName$Source;)Leab$a; copyName
	b ()Ljava/util/Set; getReferencedContextParams
net/minecraft/world/level/storage/loot/functions/LootItemFunctionCopyName$Source net/minecraft/world/level/storage/loot/functions/CopyNameFunction$NameSource
	a THIS
	b KILLER
	c KILLER_PLAYER
	d BLOCK_ENTITY
	e name
	f param
	g $VALUES
	a ()[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionCopyName$Source; $values
	a (Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionCopyName$Source; getByName
net/minecraft/world/level/storage/loot/functions/LootItemFunctionCopyState net/minecraft/world/level/storage/loot/functions/CopyBlockState
	a block
	b properties
	a ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; getType
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/world/item/ItemStack; run
	a (Lnet/minecraft/world/level/block/Block;)Ldzs$a; copyState
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/properties/IBlockState;)Ljava/lang/String; serialize
	b ()Ljava/util/Set; getReferencedContextParams
net/minecraft/world/level/storage/loot/functions/LootItemFunctionEnchant net/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction
	a LOGGER
	b enchantments
	a ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; getType
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/enchantment/Enchantment;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/ItemStack; enchantItem
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/world/item/ItemStack; run
	c ()Ldzv$a; randomEnchantment
	d ()Leab$a; randomApplicableEnchantment
net/minecraft/world/level/storage/loot/functions/LootItemFunctionExplorationMap net/minecraft/world/level/storage/loot/functions/ExplorationMapFunction
	a DEFAULT_DESTINATION
	b DEFAULT_DECORATION_NAME
	c DEFAULT_DECORATION
	d DEFAULT_ZOOM
	e DEFAULT_SEARCH_RADIUS
	f DEFAULT_SKIP_EXISTING
	h LOGGER
	i destination
	j mapDecoration
	k zoom
	l searchRadius
	m skipKnownStructures
	a ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; getType
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/world/item/ItemStack; run
	b ()Ljava/util/Set; getReferencedContextParams
	c ()Ldzx$a; makeExplorationMap
net/minecraft/world/level/storage/loot/functions/LootItemFunctionExplosionDecay net/minecraft/world/level/storage/loot/functions/ApplyExplosionDecay
	a ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; getType
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/world/item/ItemStack; run
	c ()Leab$a; explosionDecay
net/minecraft/world/level/storage/loot/functions/LootItemFunctionFillPlayerHead net/minecraft/world/level/storage/loot/functions/FillPlayerHead
	a entityTarget
	a ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; getType
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/world/item/ItemStack; run
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo$EntityTarget;)Leab$a; fillPlayerHead
	b ()Ljava/util/Set; getReferencedContextParams
net/minecraft/world/level/storage/loot/functions/LootItemFunctionLimitCount net/minecraft/world/level/storage/loot/functions/LimitCount
	a limiter
	a ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; getType
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/world/item/ItemStack; run
	a (Lnet/minecraft/world/level/storage/loot/IntRange;)Leab$a; limitCount
	b ()Ljava/util/Set; getReferencedContextParams
net/minecraft/world/level/storage/loot/functions/LootItemFunctionSetAttribute net/minecraft/world/level/storage/loot/functions/SetAttributesFunction
	a modifiers
	a ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; getType
	a (Ljava/lang/String;Lnet/minecraft/world/entity/ai/attributes/AttributeBase;Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation;Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Leag$c; modifier
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/world/item/ItemStack; run
	b ()Ljava/util/Set; getReferencedContextParams
	c ()Leag$a; setAttributes
net/minecraft/world/level/storage/loot/functions/LootItemFunctionSetContents net/minecraft/world/level/storage/loot/functions/SetContainerContents
	a entries
	b type
	a ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; getType
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/world/item/ItemStack; run
	a (Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Leai$a; setContents
	a (Lnet/minecraft/world/level/storage/loot/LootCollector;)V validate
net/minecraft/world/level/storage/loot/functions/LootItemFunctionSetCount net/minecraft/world/level/storage/loot/functions/SetItemCountFunction
	a value
	b add
	a ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; getType
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/world/item/ItemStack; run
	a (Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Leab$a; setCount
	a (Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;Z)Leab$a; setCount
	b ()Ljava/util/Set; getReferencedContextParams
net/minecraft/world/level/storage/loot/functions/LootItemFunctionSetDamage net/minecraft/world/level/storage/loot/functions/SetItemDamageFunction
	a LOGGER
	b damage
	c add
	a ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; getType
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/world/item/ItemStack; run
	a (Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Leab$a; setDamage
	a (Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;Z)Leab$a; setDamage
	b ()Ljava/util/Set; getReferencedContextParams
net/minecraft/world/level/storage/loot/functions/LootItemFunctionSetLore net/minecraft/world/level/storage/loot/functions/SetLoreFunction
	a replace
	b lore
	c resolutionContext
	a ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; getType
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/world/item/ItemStack; run
	a (Lnet/minecraft/world/item/ItemStack;Z)Lnet/minecraft/nbt/NBTTagList; getLoreTag
	b ()Ljava/util/Set; getReferencedContextParams
	c ()Leao$a; setLore
net/minecraft/world/level/storage/loot/functions/LootItemFunctionSetName net/minecraft/world/level/storage/loot/functions/SetNameFunction
	a LOGGER
	b name
	c resolutionContext
	a ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; getType
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)Leab$a; setName
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Lnet/minecraft/world/level/storage/loot/LootTableInfo$EntityTarget;)Leab$a; setName
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/world/item/ItemStack; run
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;Lnet/minecraft/world/level/storage/loot/LootTableInfo$EntityTarget;)Ljava/util/function/UnaryOperator; createResolver
	b ()Ljava/util/Set; getReferencedContextParams
net/minecraft/world/level/storage/loot/functions/LootItemFunctionSetStewEffect net/minecraft/world/level/storage/loot/functions/SetStewEffectFunction
	a effectDurationMap
	a ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; getType
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/world/item/ItemStack; run
	b ()Ljava/util/Set; getReferencedContextParams
	c ()Leas$a; stewEffect
net/minecraft/world/level/storage/loot/functions/LootItemFunctionSetTable net/minecraft/world/level/storage/loot/functions/SetContainerLootTable
	a name
	b seed
	c type
	a ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; getType
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/world/item/ItemStack; run
	a (Lnet/minecraft/world/level/block/entity/TileEntityTypes;Lnet/minecraft/resources/MinecraftKey;)Leab$a; withLootTable
	a (Lnet/minecraft/world/level/block/entity/TileEntityTypes;Lnet/minecraft/resources/MinecraftKey;J)Leab$a; withLootTable
	a (Lnet/minecraft/world/level/storage/loot/LootCollector;)V validate
net/minecraft/world/level/storage/loot/functions/LootItemFunctionSetTag net/minecraft/world/level/storage/loot/functions/SetNbtFunction
	a tag
	a ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; getType
	a (Lnet/minecraft/nbt/NBTTagCompound;)Leab$a; setTag
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/world/item/ItemStack; run
net/minecraft/world/level/storage/loot/functions/LootItemFunctionSmelt net/minecraft/world/level/storage/loot/functions/SmeltItemFunction
	a LOGGER
	a ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; getType
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/world/item/ItemStack; run
	c ()Leab$a; smelted
net/minecraft/world/level/storage/loot/functions/LootItemFunctionUser net/minecraft/world/level/storage/loot/functions/FunctionUserBuilder
	a (Ljava/lang/Iterable;Ljava/util/function/Function;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionUser; apply
	a ([Ljava/lang/Object;Ljava/util/function/Function;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionUser; apply
	b (Leac$a;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionUser; apply
	c ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionUser; unwrap
net/minecraft/world/level/storage/loot/parameters/LootContextParameter net/minecraft/world/level/storage/loot/parameters/LootContextParam
	a name
	a ()Lnet/minecraft/resources/MinecraftKey; getName
net/minecraft/world/level/storage/loot/parameters/LootContextParameterSet net/minecraft/world/level/storage/loot/parameters/LootContextParamSet
	a required
	b all
	a ()Ljava/util/Set; getRequired
	a (Lnet/minecraft/world/level/storage/loot/LootCollector;Lnet/minecraft/world/level/storage/loot/LootItemUser;)V validateUser
	a (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParameter;)Z isAllowed
	b ()Ljava/util/Set; getAllowed
	c ()Lnet/minecraft/world/level/storage/loot/parameters/LootContextParameterSet$Builder; builder
net/minecraft/world/level/storage/loot/parameters/LootContextParameterSet$Builder net/minecraft/world/level/storage/loot/parameters/LootContextParamSet$Builder
	a required
	b optional
	a ()Lnet/minecraft/world/level/storage/loot/parameters/LootContextParameterSet; build
	a (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParameter;)Lnet/minecraft/world/level/storage/loot/parameters/LootContextParameterSet$Builder; required
	b (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParameter;)Lnet/minecraft/world/level/storage/loot/parameters/LootContextParameterSet$Builder; optional
net/minecraft/world/level/storage/loot/parameters/LootContextParameterSets net/minecraft/world/level/storage/loot/parameters/LootContextParamSets
	a EMPTY
	b CHEST
	c COMMAND
	d SELECTOR
	e FISHING
	f ENTITY
	g ARCHAEOLOGY
	h GIFT
	i PIGLIN_BARTER
	j ADVANCEMENT_REWARD
	k ADVANCEMENT_ENTITY
	l ALL_PARAMS
	m BLOCK
	n REGISTRY
	a (Ljava/lang/String;Ljava/util/function/Consumer;)Lnet/minecraft/world/level/storage/loot/parameters/LootContextParameterSet; register
	a (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/world/level/storage/loot/parameters/LootContextParameterSet; get
	a (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParameterSet;)Lnet/minecraft/resources/MinecraftKey; getKey
net/minecraft/world/level/storage/loot/parameters/LootContextParameters net/minecraft/world/level/storage/loot/parameters/LootContextParams
	a THIS_ENTITY
	b LAST_DAMAGE_PLAYER
	c DAMAGE_SOURCE
	d KILLER_ENTITY
	e DIRECT_KILLER_ENTITY
	f ORIGIN
	g BLOCK_STATE
	h BLOCK_ENTITY
	i TOOL
	j EXPLOSION_RADIUS
	a (Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/parameters/LootContextParameter; create
net/minecraft/world/level/storage/loot/predicates/LootItemConditionAlternative net/minecraft/world/level/storage/loot/predicates/AlternativeLootItemCondition
	a terms
	b composedPredicate
	a ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; getType
	a (Lnet/minecraft/world/level/storage/loot/LootCollector;)V validate
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Z test
	a ([Lebl$a;)Lebb$a; alternative
net/minecraft/world/level/storage/loot/predicates/LootItemConditionBlockStateProperty net/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition
	a block
	b properties
	a ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; getType
	a (Lnet/minecraft/world/level/block/Block;)Lebk$a; hasBlockStateProperties
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Z test
	b ()Ljava/util/Set; getReferencedContextParams
net/minecraft/world/level/storage/loot/predicates/LootItemConditionDamageSourceProperties net/minecraft/world/level/storage/loot/predicates/DamageSourceCondition
	a predicate
	a ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; getType
	a (Lbc$a;)Lebl$a; hasDamageSource
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Z test
	b ()Ljava/util/Set; getReferencedContextParams
net/minecraft/world/level/storage/loot/predicates/LootItemConditionEntityProperty net/minecraft/world/level/storage/loot/predicates/LootItemEntityPropertyCondition
	a predicate
	b entityTarget
	a ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; getType
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo$EntityTarget;)Lebl$a; entityPresent
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo$EntityTarget;Lbn$a;)Lebl$a; hasProperties
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo$EntityTarget;Lnet/minecraft/advancements/critereon/CriterionConditionEntity;)Lebl$a; hasProperties
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Z test
	b ()Ljava/util/Set; getReferencedContextParams
net/minecraft/world/level/storage/loot/predicates/LootItemConditionEntityScore net/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition
	a scores
	b entityTarget
	a ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; getType
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo$EntityTarget;)Lebg$a; hasScores
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Z test
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/scores/Scoreboard;Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/IntRange;)Z hasScore
	b ()Ljava/util/Set; getReferencedContextParams
net/minecraft/world/level/storage/loot/predicates/LootItemConditionInverted net/minecraft/world/level/storage/loot/predicates/InvertedLootItemCondition
	a term
	a ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; getType
	a (Lebl$a;)Lebl$a; invert
	a (Lnet/minecraft/world/level/storage/loot/LootCollector;)V validate
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Z test
	b ()Ljava/util/Set; getReferencedContextParams
net/minecraft/world/level/storage/loot/predicates/LootItemConditionKilledByPlayer net/minecraft/world/level/storage/loot/predicates/LootItemKilledByPlayerCondition
	a INSTANCE
	a ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; getType
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Z test
	b ()Ljava/util/Set; getReferencedContextParams
	c ()Lebl$a; killedByPlayer
net/minecraft/world/level/storage/loot/predicates/LootItemConditionLocationCheck net/minecraft/world/level/storage/loot/predicates/LocationCheck
	a predicate
	b offset
	a ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; getType
	a (Lcg$a;)Lebl$a; checkLocation
	a (Lcg$a;Lnet/minecraft/core/BlockPosition;)Lebl$a; checkLocation
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Z test
net/minecraft/world/level/storage/loot/predicates/LootItemConditionMatchTool net/minecraft/world/level/storage/loot/predicates/MatchTool
	a predicate
	a ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; getType
	a (Lbz$a;)Lebl$a; toolMatches
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Z test
	b ()Ljava/util/Set; getReferencedContextParams
net/minecraft/world/level/storage/loot/predicates/LootItemConditionRandomChance net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceCondition
	a probability
	a ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; getType
	a (F)Lebl$a; randomChance
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Z test
net/minecraft/world/level/storage/loot/predicates/LootItemConditionRandomChanceWithLooting net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceWithLootingCondition
	a percent
	b lootingMultiplier
	a ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; getType
	a (FF)Lebl$a; randomChanceAndLootingBoost
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Z test
	b ()Ljava/util/Set; getReferencedContextParams
net/minecraft/world/level/storage/loot/predicates/LootItemConditionReference net/minecraft/world/level/storage/loot/predicates/ConditionReference
	a LOGGER
	b name
	a ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; getType
	a (Lnet/minecraft/resources/MinecraftKey;)Lebl$a; conditionReference
	a (Lnet/minecraft/world/level/storage/loot/LootCollector;)V validate
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Z test
net/minecraft/world/level/storage/loot/predicates/LootItemConditionSurvivesExplosion net/minecraft/world/level/storage/loot/predicates/ExplosionCondition
	a INSTANCE
	a ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; getType
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Z test
	b ()Ljava/util/Set; getReferencedContextParams
	c ()Lebl$a; survivesExplosion
net/minecraft/world/level/storage/loot/predicates/LootItemConditionTableBonus net/minecraft/world/level/storage/loot/predicates/BonusLevelTableCondition
	a enchantment
	b values
	a ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; getType
	a (Lnet/minecraft/world/item/enchantment/Enchantment;[F)Lebl$a; bonusLevelFlatChance
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Z test
	b ()Ljava/util/Set; getReferencedContextParams
net/minecraft/world/level/storage/loot/predicates/LootItemConditionTimeCheck net/minecraft/world/level/storage/loot/predicates/TimeCheck
	a period
	b value
	a ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; getType
	a (Lnet/minecraft/world/level/storage/loot/IntRange;)Lebt$a; time
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Z test
	b ()Ljava/util/Set; getReferencedContextParams
net/minecraft/world/level/storage/loot/predicates/LootItemConditionUser net/minecraft/world/level/storage/loot/predicates/ConditionUserBuilder
	a_ (Ljava/lang/Iterable;Ljava/util/function/Function;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionUser; when
	b (Lebl$a;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionUser; when
	d ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionUser; unwrap
net/minecraft/world/level/storage/loot/predicates/LootItemConditionWeatherCheck net/minecraft/world/level/storage/loot/predicates/WeatherCheck
	a isRaining
	b isThundering
	a ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; getType
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Z test
	c ()Lebv$a; weather
net/minecraft/world/level/timers/CustomFunctionCallback net/minecraft/world/level/timers/FunctionCallback
	a functionId
	a (Lnet/minecraft/server/MinecraftServer;Lnet/minecraft/world/level/timers/CustomFunctionCallbackTimerQueue;J)V handle
net/minecraft/world/level/timers/CustomFunctionCallbackTag net/minecraft/world/level/timers/FunctionTagCallback
	a tagId
	a (Lnet/minecraft/server/MinecraftServer;Lnet/minecraft/world/level/timers/CustomFunctionCallbackTimerQueue;J)V handle
net/minecraft/world/level/timers/CustomFunctionCallbackTimer net/minecraft/world/level/timers/TimerCallback
net/minecraft/world/level/timers/CustomFunctionCallbackTimerQueue net/minecraft/world/level/timers/TimerQueue
	a LOGGER
	b CALLBACK_DATA_TAG
	c TIMER_NAME_TAG
	d TIMER_TRIGGER_TIME_TAG
	e callbacksRegistry
	f queue
	g sequentialId
	h events
	a ()Ljava/util/Set; getEventsIds
	a (Lecw$a;)Lnet/minecraft/nbt/NBTTagCompound; storeEvent
	a (Ljava/lang/Object;J)V tick
	a (Ljava/lang/String;)I remove
	a (Ljava/lang/String;JLnet/minecraft/world/level/timers/CustomFunctionCallbackTimer;)V schedule
	a (Lnet/minecraft/nbt/NBTTagCompound;)V loadEvent
	b ()Lnet/minecraft/nbt/NBTTagList; store
	c ()Ljava/util/Comparator; createComparator
net/minecraft/world/level/timers/CustomFunctionCallbackTimers net/minecraft/world/level/timers/TimerCallbacks
	a SERVER_CALLBACKS
	b LOGGER
	c idToSerializer
	d classToSerializer
	a (Lecu$a;)Lnet/minecraft/world/level/timers/CustomFunctionCallbackTimers; register
	a (Ljava/lang/Class;)Lecu$a; getSerializer
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/level/timers/CustomFunctionCallbackTimer; deserialize
	a (Lnet/minecraft/world/level/timers/CustomFunctionCallbackTimer;)Lnet/minecraft/nbt/NBTTagCompound; serialize
net/minecraft/world/phys/AxisAlignedBB net/minecraft/world/phys/AABB
	a minX
	b minY
	c minZ
	d maxX
	e maxY
	f maxZ
	g EPSILON
	a ()D getSize
	a (D)Lnet/minecraft/world/phys/AxisAlignedBB; setMinX
	a (DDD)Lnet/minecraft/world/phys/AxisAlignedBB; contract
	a (DDDDDD)Z intersects
	a (Ljava/lang/Iterable;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/MovingObjectPositionBlock; clip
	a (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/AxisAlignedBB; move
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;)D min
	a (Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)Lnet/minecraft/world/phys/AxisAlignedBB; of
	a (Lnet/minecraft/world/phys/AxisAlignedBB;)Lnet/minecraft/world/phys/AxisAlignedBB; intersect
	a (Lnet/minecraft/world/phys/AxisAlignedBB;Lnet/minecraft/world/phys/Vec3D;[DLnet/minecraft/core/EnumDirection;DDD)Lnet/minecraft/core/EnumDirection; getDirection
	a (Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/phys/AxisAlignedBB; unitCubeFromLowerCorner
	a (Lnet/minecraft/world/phys/Vec3D;DDD)Lnet/minecraft/world/phys/AxisAlignedBB; ofSize
	a (Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/phys/Vec3D;)Z intersects
	a ([DLnet/minecraft/core/EnumDirection;DDDDDDDDLnet/minecraft/core/EnumDirection;DDD)Lnet/minecraft/core/EnumDirection; clipPoint
	b ()D getXsize
	b (D)Lnet/minecraft/world/phys/AxisAlignedBB; setMinY
	b (DDD)Lnet/minecraft/world/phys/AxisAlignedBB; expandTowards
	b (Lnet/minecraft/core/EnumDirection$EnumAxis;)D max
	b (Lnet/minecraft/world/phys/AxisAlignedBB;)Lnet/minecraft/world/phys/AxisAlignedBB; minmax
	b (Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/phys/AxisAlignedBB; expandTowards
	b (Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/phys/Vec3D;)Ljava/util/Optional; clip
	c ()D getYsize
	c (D)Lnet/minecraft/world/phys/AxisAlignedBB; setMinZ
	c (DDD)Lnet/minecraft/world/phys/AxisAlignedBB; inflate
	c (Lnet/minecraft/world/phys/AxisAlignedBB;)Z intersects
	c (Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/phys/AxisAlignedBB; move
	d ()D getZsize
	d (D)Lnet/minecraft/world/phys/AxisAlignedBB; setMaxX
	d (DDD)Lnet/minecraft/world/phys/AxisAlignedBB; move
	d (Lnet/minecraft/world/phys/Vec3D;)Z contains
	e ()Z hasNaN
	e (D)Lnet/minecraft/world/phys/AxisAlignedBB; setMaxY
	e (DDD)Z contains
	e (Lnet/minecraft/world/phys/Vec3D;)D distanceToSqr
	f ()Lnet/minecraft/world/phys/Vec3D; getCenter
	f (D)Lnet/minecraft/world/phys/AxisAlignedBB; setMaxZ
	f (DDD)Lnet/minecraft/world/phys/AxisAlignedBB; deflate
	g (D)Lnet/minecraft/world/phys/AxisAlignedBB; inflate
	h (D)Lnet/minecraft/world/phys/AxisAlignedBB; deflate
net/minecraft/world/phys/MovingObjectPosition net/minecraft/world/phys/HitResult
	a location
	a (Lnet/minecraft/world/entity/Entity;)D distanceTo
	c ()Lnet/minecraft/world/phys/MovingObjectPosition$EnumMovingObjectType; getType
	e ()Lnet/minecraft/world/phys/Vec3D; getLocation
net/minecraft/world/phys/MovingObjectPosition$EnumMovingObjectType net/minecraft/world/phys/HitResult$Type
	a MISS
	b BLOCK
	c ENTITY
	d $VALUES
	a ()[Lnet/minecraft/world/phys/MovingObjectPosition$EnumMovingObjectType; $values
net/minecraft/world/phys/MovingObjectPositionBlock net/minecraft/world/phys/BlockHitResult
	b direction
	c blockPos
	d miss
	e inside
	a ()Lnet/minecraft/core/BlockPosition; getBlockPos
	a (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/MovingObjectPositionBlock; withPosition
	a (Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/world/phys/MovingObjectPositionBlock; withDirection
	a (Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/MovingObjectPositionBlock; miss
	b ()Lnet/minecraft/core/EnumDirection; getDirection
	c ()Lnet/minecraft/world/phys/MovingObjectPosition$EnumMovingObjectType; getType
	d ()Z isInside
net/minecraft/world/phys/MovingObjectPositionEntity net/minecraft/world/phys/EntityHitResult
	b entity
	a ()Lnet/minecraft/world/entity/Entity; getEntity
	c ()Lnet/minecraft/world/phys/MovingObjectPosition$EnumMovingObjectType; getType
net/minecraft/world/phys/Vec2F net/minecraft/world/phys/Vec2
	a ZERO
	b ONE
	c UNIT_X
	d NEG_UNIT_X
	e UNIT_Y
	f NEG_UNIT_Y
	g MAX
	h MIN
	i x
	j y
	a ()Lnet/minecraft/world/phys/Vec2F; normalized
	a (F)Lnet/minecraft/world/phys/Vec2F; scale
	a (Lnet/minecraft/world/phys/Vec2F;)F dot
	b ()F length
	b (F)Lnet/minecraft/world/phys/Vec2F; add
	b (Lnet/minecraft/world/phys/Vec2F;)Lnet/minecraft/world/phys/Vec2F; add
	c ()F lengthSquared
	c (Lnet/minecraft/world/phys/Vec2F;)Z equals
	d ()Lnet/minecraft/world/phys/Vec2F; negated
	d (Lnet/minecraft/world/phys/Vec2F;)F distanceToSqr
net/minecraft/world/phys/Vec3D net/minecraft/world/phys/Vec3
	a CODEC
	b ZERO
	c x
	d y
	e z
	a ()D x
	a (D)Lnet/minecraft/world/phys/Vec3D; scale
	a (DDD)Lnet/minecraft/world/phys/Vec3D; subtract
	a (F)Lnet/minecraft/world/phys/Vec3D; xRot
	a (FF)Lnet/minecraft/world/phys/Vec3D; directionFromRotation
	a (I)Lnet/minecraft/world/phys/Vec3D; fromRGB24
	a (Ljava/util/EnumSet;)Lnet/minecraft/world/phys/Vec3D; align
	a (Lnet/minecraft/core/BaseBlockPosition;)Lnet/minecraft/world/phys/Vec3D; atLowerCornerOf
	a (Lnet/minecraft/core/BaseBlockPosition;D)Lnet/minecraft/world/phys/Vec3D; upFromBottomCenterOf
	a (Lnet/minecraft/core/BaseBlockPosition;DDD)Lnet/minecraft/world/phys/Vec3D; atLowerCornerWithOffset
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;)D get
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;D)Lnet/minecraft/world/phys/Vec3D; with
	a (Lnet/minecraft/core/EnumDirection;D)Lnet/minecraft/world/phys/Vec3D; relative
	a (Lnet/minecraft/core/IPosition;D)Z closerThan
	a (Lnet/minecraft/util/RandomSource;F)Lnet/minecraft/world/phys/Vec3D; offsetRandom
	a (Lnet/minecraft/world/phys/Vec2F;)Lnet/minecraft/world/phys/Vec3D; directionFromRotation
	a (Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/phys/Vec3D; vectorTo
	a (Lnet/minecraft/world/phys/Vec3D;D)Lnet/minecraft/world/phys/Vec3D; lerp
	b ()D y
	b (DDD)Lnet/minecraft/world/phys/Vec3D; add
	b (F)Lnet/minecraft/world/phys/Vec3D; yRot
	b (Lnet/minecraft/core/BaseBlockPosition;)Lnet/minecraft/world/phys/Vec3D; atCenterOf
	b (Lnet/minecraft/world/phys/Vec3D;)D dot
	c ()D z
	c (DDD)D distanceToSqr
	c (F)Lnet/minecraft/world/phys/Vec3D; zRot
	c (Lnet/minecraft/core/BaseBlockPosition;)Lnet/minecraft/world/phys/Vec3D; atBottomCenterOf
	c (Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/phys/Vec3D; cross
	d ()Lnet/minecraft/world/phys/Vec3D; normalize
	d (DDD)Lnet/minecraft/world/phys/Vec3D; multiply
	d (Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/phys/Vec3D; subtract
	e ()Lnet/minecraft/world/phys/Vec3D; reverse
	e (Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/phys/Vec3D; add
	f ()D length
	f (Lnet/minecraft/world/phys/Vec3D;)D distanceTo
	g ()D lengthSqr
	g (Lnet/minecraft/world/phys/Vec3D;)D distanceToSqr
	h ()D horizontalDistance
	h (Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/phys/Vec3D; multiply
	i ()D horizontalDistanceSqr
	j ()Lorg/joml/Vector3f; toVector3f
net/minecraft/world/phys/shapes/DoubleListOffset net/minecraft/world/phys/shapes/OffsetDoubleList
	a delegate
	b offset
net/minecraft/world/phys/shapes/OperatorBoolean net/minecraft/world/phys/shapes/BooleanOp
	a FALSE
	b NOT_OR
	c ONLY_SECOND
	d NOT_FIRST
	e ONLY_FIRST
	f NOT_SECOND
	g NOT_SAME
	h NOT_AND
	i AND
	j SAME
	k SECOND
	l CAUSES
	m FIRST
	n CAUSED_BY
	o OR
	p TRUE
net/minecraft/world/phys/shapes/VoxelShapeArray net/minecraft/world/phys/shapes/ArrayVoxelShape
	b xs
	c ys
	d zs
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;)Lit/unimi/dsi/fastutil/doubles/DoubleList; getCoords
net/minecraft/world/phys/shapes/VoxelShapeBitSet net/minecraft/world/phys/shapes/BitSetDiscreteVoxelShape
	d storage
	e xMin
	f yMin
	g zMin
	h xMax
	i yMax
	j zMax
	a ()Z isEmpty
	a (III)I getIndex
	a (IIII)Z isZStripFull
	a (IIIII)Z isXZRectangleFull
	a (IIIIIIIII)Lnet/minecraft/world/phys/shapes/VoxelShapeBitSet; withFilledBounds
	a (IIIZ)V fillUpdateBounds
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;)I firstFull
	a (Lnet/minecraft/world/phys/shapes/VoxelShapeDiscrete;Ledn$b;Z)V forAllBoxes
	a (Lnet/minecraft/world/phys/shapes/VoxelShapeDiscrete;Lnet/minecraft/world/phys/shapes/VoxelShapeDiscrete;Lnet/minecraft/world/phys/shapes/VoxelShapeMerger;Lnet/minecraft/world/phys/shapes/VoxelShapeMerger;Lnet/minecraft/world/phys/shapes/VoxelShapeMerger;Lnet/minecraft/world/phys/shapes/OperatorBoolean;)Lnet/minecraft/world/phys/shapes/VoxelShapeBitSet; join
	b (III)Z isFull
	b (IIII)V clearZStrip
	b (Lnet/minecraft/core/EnumDirection$EnumAxis;)I lastFull
	c (III)V fill
net/minecraft/world/phys/shapes/VoxelShapeCollision net/minecraft/world/phys/shapes/CollisionContext
	a ()Lnet/minecraft/world/phys/shapes/VoxelShapeCollision; empty
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/phys/shapes/VoxelShapeCollision; of
	a (Lnet/minecraft/world/item/Item;)Z isHoldingItem
	a (Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/world/level/material/Fluid;)Z canStandOnFluid
	a (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/core/BlockPosition;Z)Z isAbove
	b ()Z isDescending
net/minecraft/world/phys/shapes/VoxelShapeCollisionEntity net/minecraft/world/phys/shapes/EntityCollisionContext
	a EMPTY
	b descending
	c entityBottom
	d heldItem
	e canStandOnFluid
	f entity
	a (Lnet/minecraft/world/item/Item;)Z isHoldingItem
	a (Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/world/level/material/Fluid;)Z canStandOnFluid
	a (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/core/BlockPosition;Z)Z isAbove
	b ()Z isDescending
	c ()Lnet/minecraft/world/entity/Entity; getEntity
net/minecraft/world/phys/shapes/VoxelShapeCube net/minecraft/world/phys/shapes/CubeVoxelShape
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;)Lit/unimi/dsi/fastutil/doubles/DoubleList; getCoords
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;D)I findIndex
net/minecraft/world/phys/shapes/VoxelShapeCubeMerger net/minecraft/world/phys/shapes/DiscreteCubeMerger
	a result
	b firstDiv
	c secondDiv
	a ()Lit/unimi/dsi/fastutil/doubles/DoubleList; getList
	a (Ledq$a;)Z forMergedIndexes
net/minecraft/world/phys/shapes/VoxelShapeCubePoint net/minecraft/world/phys/shapes/CubePointRange
	a parts
net/minecraft/world/phys/shapes/VoxelShapeDiscrete net/minecraft/world/phys/shapes/DiscreteVoxelShape
	a xSize
	b ySize
	c zSize
	d AXIS_VALUES
	a ()Z isEmpty
	a (Ledn$a;)V forAllFaces
	a (Ledn$a;Lnet/minecraft/core/EnumAxisCycle;)V forAllAxisFaces
	a (Ledn$b;Lnet/minecraft/core/EnumAxisCycle;Z)V forAllAxisEdges
	a (Ledn$b;Z)V forAllEdges
	a (Lnet/minecraft/core/EnumAxisCycle;III)Z isFullWide
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;)I firstFull
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;II)I firstFull
	b ()I getXSize
	b (III)Z isFull
	b (Ledn$b;Z)V forAllBoxes
	b (Lnet/minecraft/core/EnumAxisCycle;III)Z isFull
	b (Lnet/minecraft/core/EnumDirection$EnumAxis;)I lastFull
	b (Lnet/minecraft/core/EnumDirection$EnumAxis;II)I lastFull
	c ()I getYSize
	c (III)V fill
	c (Lnet/minecraft/core/EnumDirection$EnumAxis;)I getSize
	d ()I getZSize
	d (III)Z isFullWide
net/minecraft/world/phys/shapes/VoxelShapeDiscreteSlice net/minecraft/world/phys/shapes/SubShape
	d parent
	e startX
	f startY
	g startZ
	h endX
	i endY
	j endZ
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;)I firstFull
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;I)I clampToShape
	b (III)Z isFull
	b (Lnet/minecraft/core/EnumDirection$EnumAxis;)I lastFull
	c (III)V fill
net/minecraft/world/phys/shapes/VoxelShapeMerger net/minecraft/world/phys/shapes/IndexMerger
	a ()Lit/unimi/dsi/fastutil/doubles/DoubleList; getList
	a (Ledq$a;)Z forMergedIndexes
net/minecraft/world/phys/shapes/VoxelShapeMergerDisjoint net/minecraft/world/phys/shapes/NonOverlappingMerger
	a lower
	b upper
	c swap
	a ()Lit/unimi/dsi/fastutil/doubles/DoubleList; getList
	a (Ledq$a;)Z forMergedIndexes
	b (Ledq$a;)Z forNonSwappedIndexes
net/minecraft/world/phys/shapes/VoxelShapeMergerIdentical net/minecraft/world/phys/shapes/IdenticalMerger
	a coords
	a ()Lit/unimi/dsi/fastutil/doubles/DoubleList; getList
	a (Ledq$a;)Z forMergedIndexes
net/minecraft/world/phys/shapes/VoxelShapeMergerList net/minecraft/world/phys/shapes/IndirectMerger
	a EMPTY
	b result
	c firstIndices
	d secondIndices
	e resultLength
	a ()Lit/unimi/dsi/fastutil/doubles/DoubleList; getList
	a (Ledq$a;)Z forMergedIndexes
net/minecraft/world/phys/shapes/VoxelShapeSlice net/minecraft/world/phys/shapes/SliceShape
	b delegate
	c axis
	d SLICE_COORDS
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;)Lit/unimi/dsi/fastutil/doubles/DoubleList; getCoords
	a (Lnet/minecraft/world/phys/shapes/VoxelShapeDiscrete;Lnet/minecraft/core/EnumDirection$EnumAxis;I)Lnet/minecraft/world/phys/shapes/VoxelShapeDiscrete; makeSlice
net/minecraft/world/phys/shapes/VoxelShapes net/minecraft/world/phys/shapes/Shapes
	a EPSILON
	b BIG_EPSILON
	c INFINITY
	d BLOCK
	e EMPTY
	a ()Lnet/minecraft/world/phys/shapes/VoxelShape; empty
	a (DD)I findBits
	a (DDDDDD)Lnet/minecraft/world/phys/shapes/VoxelShape; box
	a (II)J lcm
	a (ILit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;ZZ)Lnet/minecraft/world/phys/shapes/VoxelShapeMerger; createIndexMerger
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;Lnet/minecraft/world/phys/AxisAlignedBB;Ljava/lang/Iterable;D)D collide
	a (Lnet/minecraft/world/phys/AxisAlignedBB;)Lnet/minecraft/world/phys/shapes/VoxelShape; create
	a (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/world/phys/shapes/VoxelShape; getFaceShape
	a (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)Lnet/minecraft/world/phys/shapes/VoxelShape; or
	a (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/core/EnumDirection;)Z blockOccudes
	a (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/OperatorBoolean;)Lnet/minecraft/world/phys/shapes/VoxelShape; join
	a (Lnet/minecraft/world/phys/shapes/VoxelShape;[Lnet/minecraft/world/phys/shapes/VoxelShape;)Lnet/minecraft/world/phys/shapes/VoxelShape; or
	a (Lnet/minecraft/world/phys/shapes/VoxelShapeMerger;Lnet/minecraft/world/phys/shapes/VoxelShapeMerger;Lnet/minecraft/world/phys/shapes/VoxelShapeMerger;Lnet/minecraft/world/phys/shapes/VoxelShapeDiscrete;Lnet/minecraft/world/phys/shapes/VoxelShapeDiscrete;Lnet/minecraft/world/phys/shapes/OperatorBoolean;)Z joinIsNotEmpty
	b ()Lnet/minecraft/world/phys/shapes/VoxelShape; block
	b (DDDDDD)Lnet/minecraft/world/phys/shapes/VoxelShape; create
	b (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)Z faceShapeOccludes
	b (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/core/EnumDirection;)Z mergedFaceOccludes
	b (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/OperatorBoolean;)Lnet/minecraft/world/phys/shapes/VoxelShape; joinUnoptimized
	c (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/OperatorBoolean;)Z joinIsNotEmpty
net/minecraft/world/scores/PersistentScoreboard net/minecraft/world/scores/ScoreboardSaveData
	a FILE_ID
	b scoreboard
	a ()Lnet/minecraft/nbt/NBTTagList; saveTeams
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; save
	a (Lnet/minecraft/nbt/NBTTagList;)V loadTeams
	a (Lnet/minecraft/world/scores/ScoreboardTeam;Lnet/minecraft/nbt/NBTTagList;)V loadTeamPlayers
	b (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/scores/PersistentScoreboard; load
	b (Lnet/minecraft/nbt/NBTTagList;)V loadObjectives
	c (Lnet/minecraft/nbt/NBTTagCompound;)V loadDisplaySlots
	d ()Lnet/minecraft/nbt/NBTTagList; saveObjectives
	d (Lnet/minecraft/nbt/NBTTagCompound;)V saveDisplaySlots
net/minecraft/world/scores/ScoreboardObjective net/minecraft/world/scores/Objective
	a scoreboard
	b name
	c criteria
	d displayName
	e formattedDisplayName
	f renderType
	a ()Lnet/minecraft/world/scores/Scoreboard; getScoreboard
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V setDisplayName
	a (Lnet/minecraft/world/scores/criteria/IScoreboardCriteria$EnumScoreboardHealthDisplay;)V setRenderType
	b ()Ljava/lang/String; getName
	c ()Lnet/minecraft/world/scores/criteria/IScoreboardCriteria; getCriteria
	d ()Lnet/minecraft/network/chat/IChatBaseComponent; getDisplayName
	e ()Lnet/minecraft/network/chat/IChatBaseComponent; getFormattedDisplayName
	f ()Lnet/minecraft/world/scores/criteria/IScoreboardCriteria$EnumScoreboardHealthDisplay; getRenderType
	g ()Lnet/minecraft/network/chat/IChatBaseComponent; createFormattedDisplayName
net/minecraft/world/scores/ScoreboardScore net/minecraft/world/scores/Score
	a SCORE_COMPARATOR
	b scoreboard
	c objective
	d owner
	e count
	f locked
	g forceUpdate
	a ()V increment
	a (I)V add
	a (Z)V setLocked
	b ()I getScore
	b (I)V setScore
	c ()V reset
	d ()Lnet/minecraft/world/scores/ScoreboardObjective; getObjective
	e ()Ljava/lang/String; getOwner
	f ()Lnet/minecraft/world/scores/Scoreboard; getScoreboard
	g ()Z isLocked
net/minecraft/world/scores/ScoreboardTeam net/minecraft/world/scores/PlayerTeam
	a BIT_FRIENDLY_FIRE
	b BIT_SEE_INVISIBLES
	c scoreboard
	d name
	e players
	f displayName
	g playerPrefix
	h playerSuffix
	i allowFriendlyFire
	j seeFriendlyInvisibles
	k nameTagVisibility
	l deathMessageVisibility
	m color
	n collisionRule
	o displayNameStyle
	a ()Lnet/minecraft/world/scores/Scoreboard; getScoreboard
	a (I)V unpackOptions
	a (Lnet/minecraft/EnumChatFormat;)V setColor
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V setDisplayName
	a (Lnet/minecraft/world/scores/ScoreboardTeamBase$EnumNameTagVisibility;)V setNameTagVisibility
	a (Lnet/minecraft/world/scores/ScoreboardTeamBase$EnumTeamPush;)V setCollisionRule
	a (Lnet/minecraft/world/scores/ScoreboardTeamBase;Lnet/minecraft/network/chat/IChatBaseComponent;)Lnet/minecraft/network/chat/IChatMutableComponent; formatNameForTeam
	a (Z)V setAllowFriendlyFire
	b ()Ljava/lang/String; getName
	b (Lnet/minecraft/network/chat/IChatBaseComponent;)V setPlayerPrefix
	b (Lnet/minecraft/world/scores/ScoreboardTeamBase$EnumNameTagVisibility;)V setDeathMessageVisibility
	b (Z)V setSeeFriendlyInvisibles
	c ()Lnet/minecraft/network/chat/IChatBaseComponent; getDisplayName
	c (Lnet/minecraft/network/chat/IChatBaseComponent;)V setPlayerSuffix
	d ()Lnet/minecraft/network/chat/IChatMutableComponent; getFormattedDisplayName
	d (Lnet/minecraft/network/chat/IChatBaseComponent;)Lnet/minecraft/network/chat/IChatMutableComponent; getFormattedName
	e ()Lnet/minecraft/network/chat/IChatBaseComponent; getPlayerPrefix
	f ()Lnet/minecraft/network/chat/IChatBaseComponent; getPlayerSuffix
	g ()Ljava/util/Collection; getPlayers
	h ()Z isAllowFriendlyFire
	i ()Z canSeeFriendlyInvisibles
	j ()Lnet/minecraft/world/scores/ScoreboardTeamBase$EnumNameTagVisibility; getNameTagVisibility
	k ()Lnet/minecraft/world/scores/ScoreboardTeamBase$EnumNameTagVisibility; getDeathMessageVisibility
	l ()Lnet/minecraft/world/scores/ScoreboardTeamBase$EnumTeamPush; getCollisionRule
	m ()I packOptions
	n ()Lnet/minecraft/EnumChatFormat; getColor
net/minecraft/world/scores/ScoreboardTeamBase net/minecraft/world/scores/Team
	a (Lnet/minecraft/world/scores/ScoreboardTeamBase;)Z isAlliedTo
	b ()Ljava/lang/String; getName
	d (Lnet/minecraft/network/chat/IChatBaseComponent;)Lnet/minecraft/network/chat/IChatMutableComponent; getFormattedName
	g ()Ljava/util/Collection; getPlayers
	h ()Z isAllowFriendlyFire
	i ()Z canSeeFriendlyInvisibles
	j ()Lnet/minecraft/world/scores/ScoreboardTeamBase$EnumNameTagVisibility; getNameTagVisibility
	k ()Lnet/minecraft/world/scores/ScoreboardTeamBase$EnumNameTagVisibility; getDeathMessageVisibility
	l ()Lnet/minecraft/world/scores/ScoreboardTeamBase$EnumTeamPush; getCollisionRule
	n ()Lnet/minecraft/EnumChatFormat; getColor
net/minecraft/world/scores/ScoreboardTeamBase$EnumNameTagVisibility net/minecraft/world/scores/Team$Visibility
	a ALWAYS
	b NEVER
	c HIDE_FOR_OTHER_TEAMS
	d HIDE_FOR_OWN_TEAM
	e name
	f id
	g BY_NAME
	h $VALUES
	a ()[Ljava/lang/String; getAllNames
	a (Ljava/lang/String;)Lnet/minecraft/world/scores/ScoreboardTeamBase$EnumNameTagVisibility; byName
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; getDisplayName
	c ()[Lnet/minecraft/world/scores/ScoreboardTeamBase$EnumNameTagVisibility; $values
net/minecraft/world/scores/ScoreboardTeamBase$EnumTeamPush net/minecraft/world/scores/Team$CollisionRule
	a ALWAYS
	b NEVER
	c PUSH_OTHER_TEAMS
	d PUSH_OWN_TEAM
	e name
	f id
	g BY_NAME
	h $VALUES
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getDisplayName
	a (Ljava/lang/String;)Lnet/minecraft/world/scores/ScoreboardTeamBase$EnumTeamPush; byName
	b ()[Lnet/minecraft/world/scores/ScoreboardTeamBase$EnumTeamPush; $values
net/minecraft/world/scores/criteria/IScoreboardCriteria net/minecraft/world/scores/criteria/ObjectiveCriteria
	a DUMMY
	b TRIGGER
	c DEATH_COUNT
	d KILL_COUNT_PLAYERS
	e KILL_COUNT_ALL
	f HEALTH
	g FOOD
	h AIR
	i ARMOR
	j EXPERIENCE
	k LEVEL
	l TEAM_KILL
	m KILLED_BY_TEAM
	n CUSTOM_CRITERIA
	o CRITERIA_CACHE
	p name
	q readOnly
	r renderType
	a (Ljava/lang/String;)Ljava/util/Optional; byName
	a (Ljava/lang/String;ZLnet/minecraft/world/scores/criteria/IScoreboardCriteria$EnumScoreboardHealthDisplay;)Lnet/minecraft/world/scores/criteria/IScoreboardCriteria; registerCustom
	a (Lnet/minecraft/stats/StatisticWrapper;Lnet/minecraft/resources/MinecraftKey;)Ljava/util/Optional; getStat
	b (Ljava/lang/String;)Lnet/minecraft/world/scores/criteria/IScoreboardCriteria; registerCustom
	c ()Ljava/util/Set; getCustomCriteriaNames
	d ()Ljava/lang/String; getName
	e ()Z isReadOnly
	f ()Lnet/minecraft/world/scores/criteria/IScoreboardCriteria$EnumScoreboardHealthDisplay; getDefaultRenderType
net/minecraft/world/scores/criteria/IScoreboardCriteria$EnumScoreboardHealthDisplay net/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType
	a INTEGER
	b HEARTS
	c CODEC
	d id
	e $VALUES
	a ()Ljava/lang/String; getId
	a (Ljava/lang/String;)Lnet/minecraft/world/scores/criteria/IScoreboardCriteria$EnumScoreboardHealthDisplay; byId
	b ()[Lnet/minecraft/world/scores/criteria/IScoreboardCriteria$EnumScoreboardHealthDisplay; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/ticks/NextTickListEntry net/minecraft/world/ticks/ScheduledTick
	a DRAIN_ORDER
	b INTRA_TICK_DRAIN_ORDER
	c UNIQUE_TICK_HASH
	d type
	e pos
	f triggerTick
	g priority
	h subTickOrder
	a ()Ljava/lang/Object; type
	a (Ljava/lang/Object;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/ticks/NextTickListEntry; probe
	b ()Lnet/minecraft/core/BlockPosition; pos
	c ()J triggerTick
	d ()Lnet/minecraft/world/ticks/TickListPriority; priority
	e ()J subTickOrder
net/minecraft/world/ticks/ProtoChunkTickList net/minecraft/world/ticks/ProtoChunkTicks
	a ticks
	b ticksPerPosition
	a ()I count
	a (Lnet/minecraft/core/BlockPosition;Ljava/lang/Object;)Z hasScheduledTick
	a (Lnet/minecraft/nbt/NBTTagList;Ljava/util/function/Function;Lnet/minecraft/world/level/ChunkCoordIntPair;)Lnet/minecraft/world/ticks/ProtoChunkTickList; load
	a (Lnet/minecraft/world/ticks/NextTickListEntry;)V schedule
	a (Lnet/minecraft/world/ticks/TickListChunk;)V schedule
	b ()Ljava/util/List; scheduledTicks
	b (JLjava/util/function/Function;)Lnet/minecraft/nbt/NBTBase; save
net/minecraft/world/ticks/TickList net/minecraft/world/ticks/TickAccess
	a ()I count
	a (Lnet/minecraft/core/BlockPosition;Ljava/lang/Object;)Z hasScheduledTick
	a (Lnet/minecraft/world/ticks/NextTickListEntry;)V schedule
net/minecraft/world/ticks/TickListChunk net/minecraft/world/ticks/SavedTick
	a UNIQUE_TICK_HASH
	b type
	c pos
	d delay
	e priority
	f TAG_ID
	g TAG_X
	h TAG_Y
	i TAG_Z
	j TAG_DELAY
	k TAG_PRIORITY
	a ()Ljava/lang/Object; type
	a (JJ)Lnet/minecraft/world/ticks/NextTickListEntry; unpack
	a (Ljava/lang/Object;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/ticks/TickListChunk; probe
	a (Ljava/lang/String;Lnet/minecraft/core/BlockPosition;ILnet/minecraft/world/ticks/TickListPriority;)Lnet/minecraft/nbt/NBTTagCompound; saveTick
	a (Ljava/util/function/Function;)Lnet/minecraft/nbt/NBTTagCompound; save
	a (Lnet/minecraft/nbt/NBTTagCompound;Ljava/util/function/Function;)Ljava/util/Optional; loadTick
	a (Lnet/minecraft/nbt/NBTTagList;Ljava/util/function/Function;Lnet/minecraft/world/level/ChunkCoordIntPair;Ljava/util/function/Consumer;)V loadTickList
	a (Lnet/minecraft/world/ticks/NextTickListEntry;Ljava/util/function/Function;J)Lnet/minecraft/nbt/NBTTagCompound; saveTick
	b ()Lnet/minecraft/core/BlockPosition; pos
	c ()I delay
	d ()Lnet/minecraft/world/ticks/TickListPriority; priority
net/minecraft/world/ticks/TickListEmpty net/minecraft/world/ticks/BlackholeTickAccess
	a CONTAINER_BLACKHOLE
	b LEVEL_BLACKHOLE
	a ()Lnet/minecraft/world/ticks/TickContainerAccess; emptyContainer
	b ()Lnet/minecraft/world/ticks/LevelTickAccess; emptyLevelList
net/minecraft/world/ticks/TickListPriority net/minecraft/world/ticks/TickPriority
	a EXTREMELY_HIGH
	b VERY_HIGH
	c HIGH
	d NORMAL
	e LOW
	f VERY_LOW
	g EXTREMELY_LOW
	h value
	i $VALUES
	a ()I getValue
	a (I)Lnet/minecraft/world/ticks/TickListPriority; byValue
	b ()[Lnet/minecraft/world/ticks/TickListPriority; $values
net/minecraft/world/ticks/TickListServer net/minecraft/world/ticks/LevelTicks
	a CONTAINER_DRAIN_ORDER
	b tickCheck
	c profiler
	d allContainers
	e nextTickForContainer
	f containersToTick
	g toRunThisTick
	h alreadyRunThisTick
	i toRunThisTickSet
	j chunkScheduleUpdater
	a ()I count
	a (I)Z canScheduleMoreTicks
	a (J)V sortContainersToTick
	a (JI)V drainContainers
	a (JILjava/util/function/BiConsumer;)V tick
	a (JILnet/minecraft/util/profiling/GameProfilerFiller;)V collectTicks
	a (Ljava/util/Queue;Lnet/minecraft/world/ticks/LevelChunkTicks;JI)V drainFromCurrentContainer
	a (Ljava/util/function/BiConsumer;)V runCollectedTicks
	a (Lnet/minecraft/core/BlockPosition;Ljava/lang/Object;)Z hasScheduledTick
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;)V removeContainer
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/world/ticks/LevelChunkTicks;)V addContainer
	a (Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)V clearArea
	a (Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Leem$a;)V forContainersInArea
	a (Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/core/BaseBlockPosition;)V copyArea
	a (Lnet/minecraft/world/ticks/NextTickListEntry;)V schedule
	a (Lnet/minecraft/world/ticks/TickListServer;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/core/BaseBlockPosition;)V copyAreaFrom
	b ()V rescheduleLeftoverContainers
	b (Lnet/minecraft/core/BlockPosition;Ljava/lang/Object;)Z willTickThisTick
	b (Lnet/minecraft/world/ticks/NextTickListEntry;)V updateContainerScheduling
	c ()V cleanupAfterTick
	c (Lnet/minecraft/world/ticks/NextTickListEntry;)V scheduleForThisTick
	d ()V calculateTickSetIfNeeded
net/minecraft/world/ticks/TickListWorldGen net/minecraft/world/ticks/WorldGenTickAccess
	a containerGetter
	a ()I count
	a (Lnet/minecraft/core/BlockPosition;Ljava/lang/Object;)Z hasScheduledTick
	a (Lnet/minecraft/world/ticks/NextTickListEntry;)V schedule
	b (Lnet/minecraft/core/BlockPosition;Ljava/lang/Object;)Z willTickThisTick
nf net/minecraft/data/tags/ItemTagsProvider
	d blockTags
	g tagsToCopy
	a (Lnet/minecraft/tags/TagKey;Lnet/minecraft/tags/TagKey;)V copy
	b ()Ljava/util/concurrent/CompletableFuture; createContentsProvider
ng net/minecraft/data/tags/PaintingVariantTagsProvider
	a (Lhf$b;)V addTags
nh net/minecraft/data/tags/PoiTypeTagsProvider
	a (Lhf$b;)V addTags
ni net/minecraft/data/tags/StructureTagsProvider
	a (Lhf$b;)V addTags
nj net/minecraft/data/tags/TagsProvider
	d LOGGER
	e pathProvider
	f registryKey
	g lookupProvider
	h contentsDone
	i parentProvider
	j builders
	a ()Ljava/lang/String; getName
	a (Lhf$b;)V addTags
	a (Lnet/minecraft/data/CachedOutput;)Ljava/util/concurrent/CompletableFuture; run
	b ()Ljava/util/concurrent/CompletableFuture; createContentsProvider
	b (Lnet/minecraft/tags/TagKey;)Lnj$b; tag
	c ()Ljava/util/concurrent/CompletableFuture; contentsGetter
	c (Lnet/minecraft/tags/TagKey;)Lans; getOrCreateRawBuilder
nj$b net/minecraft/data/tags/TagsProvider$TagAppender
	a builder
	a (Lnet/minecraft/resources/MinecraftKey;)Lnj$b; addOptional
	a (Lnet/minecraft/resources/ResourceKey;)Lnj$b; add
	a ([Lnet/minecraft/resources/ResourceKey;)Lnj$b; add
	b (Lnet/minecraft/resources/MinecraftKey;)Lnj$b; addOptionalTag
	b (Lnet/minecraft/tags/TagKey;)Lnj$b; addTag
nj$c net/minecraft/data/tags/TagsProvider$TagLookup
nk net/minecraft/data/tags/UpdateOneTwentyBiomeTagsProvider
	a (Lhf$b;)V addTags
nl net/minecraft/data/tags/UpdateOneTwentyBlockTagsProvider
	a (Lhf$b;)V addTags
nm net/minecraft/data/tags/UpdateOneTwentyItemTagsProvider
	a (Lhf$b;)V addTags
nn net/minecraft/data/tags/VanillaBlockTagsProvider
	a (Lhf$b;)V addTags
no net/minecraft/data/tags/VanillaItemTagsProvider
	a (Lhf$b;)V addTags
np net/minecraft/data/tags/WorldPresetTagsProvider
	a (Lhf$b;)V addTags
qi$a net/minecraft/gametest/framework/GameTestSequence$Condition
	b NOT_TRIGGERED
	c triggerTime
	a ()V assertTriggeredThisTick
	a (J)V trigger
qj net/minecraft/gametest/framework/GameTestServer
	n LOGGER
	o PROGRESS_REPORT_INTERVAL
	p NO_SERVICES
	q testBatches
	r spawnPos
	s TEST_GAME_RULES
	t WORLD_OPTIONS
	u testTracker
	M_ ()Z shouldInformAdmins
	a (Lcom/mojang/authlib/GameProfile;)Z isSingleplayerOwner
	a (Ljava/lang/Thread;Lnet/minecraft/world/level/storage/Convertable$ConversionSession;Lnet/minecraft/server/packs/repository/ResourcePackRepository;Ljava/util/Collection;Lnet/minecraft/core/BlockPosition;)Lqj; create
	a (Ljava/util/function/BooleanSupplier;)V tickServer
	a (Lnet/minecraft/CrashReport;)V onServerCrash
	a (Lnet/minecraft/SystemReport;)Lnet/minecraft/SystemReport; fillServerSystemReport
	b (Lnet/minecraft/server/level/WorldServer;)V startTests
	bh ()Z haveTestsStarted
	e ()Z initServer
	g ()V onServerExit
	h ()Z isHardcore
	i ()I getOperatorUserPermissionLevel
	i_ ()V waitUntilNextTick
	j ()I getFunctionCompilationLevel
	k ()Z shouldRconBroadcast
	l ()Z isDedicatedServer
	m ()I getRateLimitPacketsPerSecond
	n ()Z isEpollEnabled
	o ()Z isCommandBlockEnabled
	p ()Z isPublished
qn net/minecraft/gametest/framework/JUnitLikeTestReporter
	a document
	b testSuite
	c stopwatch
	d destination
	a ()V finish
	a (Ljava/io/File;)V save
	a (Lnet/minecraft/gametest/framework/GameTestHarnessInfo;)V onTestFailed
	a (Lnet/minecraft/gametest/framework/GameTestHarnessInfo;Ljava/lang/String;)Lorg/w3c/dom/Element; createTestCase
	b (Lnet/minecraft/gametest/framework/GameTestHarnessInfo;)V onTestSuccess
qs net/minecraft/gametest/framework/TeamcityTestReporter
	a LOGGER
	b ESCAPER
	a (Lnet/minecraft/gametest/framework/GameTestHarnessInfo;)V onTestFailed
	b (Lnet/minecraft/gametest/framework/GameTestHarnessInfo;)V onTestSuccess
qu$a net/minecraft/gametest/framework/TestCommand$TestSummaryDisplayer
	a level
	b tracker
	a (Lnet/minecraft/gametest/framework/GameTestHarnessInfo;)V testStructureLoaded
	b (Lnet/minecraft/gametest/framework/GameTestHarnessInfo;)V testPassed
	c (Lnet/minecraft/gametest/framework/GameTestHarnessInfo;)V testFailed
rc$a net/minecraft/nbt/ByteTag$Cache
	a cache
rj$a net/minecraft/nbt/IntTag$Cache
	a cache
	b HIGH
	c LOW
rm$a net/minecraft/nbt/LongTag$Cache
	a cache
	b HIGH
	c LOW
rp$a net/minecraft/nbt/NbtOps$ByteListCollector
	a values
	a ()Lnet/minecraft/nbt/NBTBase; result
	a (Lnet/minecraft/nbt/NBTBase;)Lrp$f; accept
rp$b net/minecraft/nbt/NbtOps$HeterogenousListCollector
	a result
	a ()Lnet/minecraft/nbt/NBTBase; result
	a (Lnet/minecraft/nbt/NBTBase;)Lrp$f; accept
	a (Lnet/minecraft/nbt/NBTTagCompound;)Z isWrapper
	b (Lnet/minecraft/nbt/NBTBase;)Lnet/minecraft/nbt/NBTBase; wrapIfNeeded
	c (Lnet/minecraft/nbt/NBTBase;)Lnet/minecraft/nbt/NBTTagCompound; wrapElement
rp$c net/minecraft/nbt/NbtOps$HomogenousListCollector
	a result
	a ()Lnet/minecraft/nbt/NBTBase; result
	a (Lnet/minecraft/nbt/NBTBase;)Lrp$f; accept
rp$d net/minecraft/nbt/NbtOps$InitialListCollector
	a INSTANCE
	a ()Lnet/minecraft/nbt/NBTBase; result
	a (Lnet/minecraft/nbt/NBTBase;)Lrp$f; accept
rp$e net/minecraft/nbt/NbtOps$IntListCollector
	a values
	a ()Lnet/minecraft/nbt/NBTBase; result
	a (Lnet/minecraft/nbt/NBTBase;)Lrp$f; accept
rp$f net/minecraft/nbt/NbtOps$ListCollector
	a ()Lnet/minecraft/nbt/NBTBase; result
	a (Ljava/lang/Iterable;)Lrp$f; acceptAll
	a (Ljava/util/stream/Stream;)Lrp$f; acceptAll
	a (Lnet/minecraft/nbt/NBTBase;)Lrp$f; accept
rp$g net/minecraft/nbt/NbtOps$LongListCollector
	a values
	a ()Lnet/minecraft/nbt/NBTBase; result
	a (Lnet/minecraft/nbt/NBTBase;)Lrp$f; accept
rp$h net/minecraft/nbt/NbtOps$NbtRecordBuilder
	a ()Lnet/minecraft/nbt/NBTTagCompound; initBuilder
	a (Ljava/lang/String;Lnet/minecraft/nbt/NBTBase;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; append
	a (Lnet/minecraft/nbt/NBTTagCompound;Lnet/minecraft/nbt/NBTBase;)Lcom/mojang/serialization/DataResult; build
rs$a net/minecraft/nbt/ShortTag$Cache
	a cache
	b HIGH
	c LOW
ru$a net/minecraft/nbt/StreamTagVisitor$EntryResult
	a ENTER
	b SKIP
	c BREAK
	d HALT
	e $VALUES
	a ()[Lru$a; $values
ru$b net/minecraft/nbt/StreamTagVisitor$ValueResult
	a CONTINUE
	b BREAK
	c HALT
	d $VALUES
	a ()[Lru$b; $values
rz$a net/minecraft/nbt/TagType$StaticSize
	a (Ljava/io/DataInput;)V skip
	a (Ljava/io/DataInput;I)V skip
	c ()I size
rz$b net/minecraft/nbt/TagType$VariableSize
	a (Ljava/io/DataInput;I)V skip
si net/minecraft/nbt/visitors/SkipAll
	a INSTANCE
	a ()Lru$b; visitEnd
	a (B)Lru$b; visit
	a (D)Lru$b; visit
	a (F)Lru$b; visit
	a (I)Lru$b; visit
	a (J)Lru$b; visit
	a (Ljava/lang/String;)Lru$b; visit
	a (Lnet/minecraft/nbt/NBTTagType;)Lru$a; visitEntry
	a (Lnet/minecraft/nbt/NBTTagType;I)Lru$b; visitList
	a (Lnet/minecraft/nbt/NBTTagType;Ljava/lang/String;)Lru$a; visitEntry
	a (S)Lru$b; visit
	a ([B)Lru$b; visit
	a ([I)Lru$b; visit
	a ([J)Lru$b; visit
	b ()Lru$b; visitContainerEnd
	b (Lnet/minecraft/nbt/NBTTagType;)Lru$b; visitRootEntry
	b (Lnet/minecraft/nbt/NBTTagType;I)Lru$a; visitElement
sr$a net/minecraft/network/ConnectionProtocol$PacketSet
	a LOGGER
	b classToId
	c idToDeserializer
	d bundlerInfo
	e extraClasses
	a ()Lnet/minecraft/network/protocol/BundlerInfo; bundlerInfo
	a (ILnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/network/protocol/Packet; createPacket
	a (Ljava/lang/Class;)I getId
	a (Ljava/lang/Class;Ljava/util/function/Function;)Lsr$a; addPacket
	a (Ljava/util/function/Consumer;)V listAllPackets
	b (Ljava/lang/Class;Ljava/util/function/Function;)Lsr$a; withBundlePacket
sr$b net/minecraft/network/ConnectionProtocol$ProtocolBuilder
	a flows
	a (Lnet/minecraft/network/protocol/EnumProtocolDirection;Lsr$a;)Lsr$b; addFlow
ss$a net/minecraft/network/FriendlyByteBuf$Reader
ss$b net/minecraft/network/FriendlyByteBuf$Writer
tf$a net/minecraft/network/chat/ChatType$Bound
	a chatType
	b name
	c targetName
	a ()Lnet/minecraft/network/chat/ChatMessageType; chatType
	a (Lnet/minecraft/core/IRegistryCustom;)Ltf$b; toNetwork
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)Lnet/minecraft/network/chat/IChatBaseComponent; decorate
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; name
	b (Lnet/minecraft/network/chat/IChatBaseComponent;)Lnet/minecraft/network/chat/IChatBaseComponent; decorateNarration
	c ()Lnet/minecraft/network/chat/IChatBaseComponent; targetName
	c (Lnet/minecraft/network/chat/IChatBaseComponent;)Ltf$a; withTargetName
tf$b net/minecraft/network/chat/ChatType$BoundNetwork
	a chatType
	b name
	c targetName
	a ()I chatType
	a (Lnet/minecraft/core/IRegistryCustom;)Ljava/util/Optional; resolve
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; name
	c ()Lnet/minecraft/network/chat/IChatBaseComponent; targetName
tg$a net/minecraft/network/chat/ChatTypeDecoration$Parameter
	a SENDER
	b TARGET
	c CONTENT
	d CODEC
	e name
	f selector
	g $VALUES
	a ()[Ltg$a; $values
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Ltf$a;)Lnet/minecraft/network/chat/IChatBaseComponent; select
	c ()Ljava/lang/String; getSerializedName
tg$a$a net/minecraft/network/chat/ChatTypeDecoration$Parameter$Selector
tm$a net/minecraft/network/chat/FilterMask$Type
	a PASS_THROUGH
	b FULLY_FILTERED
	c PARTIALLY_FILTERED
	d serializedName
	e codec
	f $VALUES
	a ()Lcom/mojang/serialization/Codec; codec
	c ()Ljava/lang/String; getSerializedName
	f ()[Ltm$a; $values
tn$a net/minecraft/network/chat/FormattedText$ContentConsumer
tn$b net/minecraft/network/chat/FormattedText$StyledContentConsumer
to$b net/minecraft/network/chat/HoverEvent$EntityTooltipInfo
	a type
	b id
	c name
	d linesCache
	a ()Lcom/google/gson/JsonElement; serialize
	a (Lcom/google/gson/JsonElement;)Lto$b; create
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)Lto$b; create
	b ()Ljava/util/List; getTooltipLines
to$c net/minecraft/network/chat/HoverEvent$ItemStackInfo
	a item
	b count
	c tag
	d itemStack
	a ()Lnet/minecraft/world/item/ItemStack; getItemStack
	a (Lcom/google/gson/JsonElement;)Lto$c; create
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)Lto$c; create
	b ()Lcom/google/gson/JsonElement; serialize
tp$a net/minecraft/network/chat/LastSeenMessages$Packed
	a EMPTY
	b entries
	a ()Ljava/util/List; entries
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/chat/MessageSignatureCache;)Ljava/util/Optional; unpack
tp$b net/minecraft/network/chat/LastSeenMessages$Update
	a offset
	b acknowledged
	a ()I offset
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	b ()Ljava/util/BitSet; acknowledged
tq net/minecraft/network/chat/LastSeenMessagesTracker
	a trackedMessages
	b tail
	c offset
	d lastTrackedMessage
	a ()I getAndClearOffset
	a (Lnet/minecraft/network/chat/LastSeenTrackedEntry;)V addEntry
	a (Lnet/minecraft/network/chat/MessageSignature;)V ignorePending
	a (Lnet/minecraft/network/chat/MessageSignature;Z)Z addPending
	b ()Ltq$a; generateAndApplyUpdate
	c ()I offset
tq$a net/minecraft/network/chat/LastSeenMessagesTracker$Update
	a lastSeen
	b update
	a ()Lnet/minecraft/network/chat/LastSeenMessages; lastSeen
	b ()Ltp$b; update
tt net/minecraft/network/chat/LocalChatSession
	a sessionId
	b keyPair
	a ()Lnet/minecraft/network/chat/RemoteChatSession; asRemote
	a (Lbyo;)Ltt; create
	a (Ljava/util/UUID;)Luc$c; createMessageEncoder
	b ()Ljava/util/UUID; sessionId
	c ()Lbyo; keyPair
tu$a net/minecraft/network/chat/MessageSignature$Packed
	a FULL_SIGNATURE
	b id
	c fullSignature
	a ()I id
	a (Lnet/minecraft/network/PacketDataSerializer;)Ltu$a; read
	a (Lnet/minecraft/network/PacketDataSerializer;Ltu$a;)V write
	a (Lnet/minecraft/network/chat/MessageSignatureCache;)Ljava/util/Optional; unpack
	b ()Lnet/minecraft/network/chat/MessageSignature; fullSignature
tx$a net/minecraft/network/chat/OutgoingChatMessage$Disguised
	a content
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; content
	a (Lnet/minecraft/server/level/EntityPlayer;ZLtf$a;)V sendToPlayer
tx$b net/minecraft/network/chat/OutgoingChatMessage$Player
	a message
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; content
	a (Lnet/minecraft/server/level/EntityPlayer;ZLtf$a;)V sendToPlayer
	b ()Lnet/minecraft/network/chat/PlayerChatMessage; message
tz$a net/minecraft/network/chat/RemoteChatSession$Data
	a sessionId
	b profilePublicKey
	a ()Ljava/util/UUID; sessionId
	a (Lcom/mojang/authlib/GameProfile;Lnet/minecraft/util/SignatureValidator;Ljava/time/Duration;)Lnet/minecraft/network/chat/RemoteChatSession; validate
	a (Lnet/minecraft/network/PacketDataSerializer;)Ltz$a; read
	a (Lnet/minecraft/network/PacketDataSerializer;Ltz$a;)V write
	b ()Lbyp$a; profilePublicKey
u net/minecraft/FieldsAreNonnullByDefault
ua$a net/minecraft/network/chat/SignableCommand$Argument
	a node
	b value
	a ()Ljava/lang/String; name
	b ()Lcom/mojang/brigadier/tree/ArgumentCommandNode; node
	c ()Ljava/lang/String; value
ub$a net/minecraft/network/chat/SignedMessageBody$Packed
	a content
	b timeStamp
	c salt
	d lastSeen
	a ()Ljava/lang/String; content
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/chat/MessageSignatureCache;)Ljava/util/Optional; unpack
	b ()Ljava/time/Instant; timeStamp
	c ()J salt
	d ()Ltp$a; lastSeen
uc$a net/minecraft/network/chat/SignedMessageChain$DecodeException
	a shouldDisconnect
	a ()Z shouldDisconnect
uc$b net/minecraft/network/chat/SignedMessageChain$Decoder
	a REJECT_ALL
uc$c net/minecraft/network/chat/SignedMessageChain$Encoder
	a UNSIGNED
ue$a net/minecraft/network/chat/SignedMessageValidator$KeyBased
	c validator
	d lastMessage
	e isChainValid
	a (Lnet/minecraft/network/chat/PlayerChatMessage;)Z validateChain
ug net/minecraft/network/chat/SubStringSource
	a plainText
	b charStyles
	c reverseCharModifier
	a ()Ljava/lang/String; getPlainText
	a (IIZ)Ljava/util/List; substring
	a (Lnet/minecraft/network/chat/IChatFormatted;)Lug; create
	a (Lnet/minecraft/network/chat/IChatFormatted;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;Ljava/util/function/UnaryOperator;)Lug; create
va$a net/minecraft/network/protocol/BundlerInfo$Bundler
	a (Lnet/minecraft/network/protocol/Packet;)Lnet/minecraft/network/protocol/Packet; addPacket
va$b net/minecraft/network/protocol/BundlerInfo$Provider
	a (Lnet/minecraft/network/protocol/EnumProtocolDirection;)Lnet/minecraft/network/protocol/BundlerInfo; getBundlerInfo
vp$a net/minecraft/network/protocol/game/ClientboundBossEventPacket$AddOperation
	a name
	b progress
	c color
	d overlay
	e darkenScreen
	f playMusic
	g createWorldFog
	a ()Lvp$d; getType
	a (Ljava/util/UUID;Lvp$b;)V dispatch
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
vp$b net/minecraft/network/protocol/game/ClientboundBossEventPacket$Handler
	a (Ljava/util/UUID;)V remove
	a (Ljava/util/UUID;F)V updateProgress
	a (Ljava/util/UUID;Lnet/minecraft/network/chat/IChatBaseComponent;)V updateName
	a (Ljava/util/UUID;Lnet/minecraft/network/chat/IChatBaseComponent;FLnet/minecraft/world/BossBattle$BarColor;Lnet/minecraft/world/BossBattle$BarStyle;ZZZ)V add
	a (Ljava/util/UUID;Lnet/minecraft/world/BossBattle$BarColor;Lnet/minecraft/world/BossBattle$BarStyle;)V updateStyle
	a (Ljava/util/UUID;ZZZ)V updateProperties
vp$d net/minecraft/network/protocol/game/ClientboundBossEventPacket$OperationType
	a ADD
	b REMOVE
	c UPDATE_PROGRESS
	d UPDATE_NAME
	e UPDATE_STYLE
	f UPDATE_PROPERTIES
	g reader
	h $VALUES
	a ()[Lvp$d; $values
vp$e net/minecraft/network/protocol/game/ClientboundBossEventPacket$UpdateNameOperation
	a name
	a ()Lvp$d; getType
	a (Ljava/util/UUID;Lvp$b;)V dispatch
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
vp$f net/minecraft/network/protocol/game/ClientboundBossEventPacket$UpdateProgressOperation
	a progress
	a ()Lvp$d; getType
	a (Ljava/util/UUID;Lvp$b;)V dispatch
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
vp$g net/minecraft/network/protocol/game/ClientboundBossEventPacket$UpdatePropertiesOperation
	a darkenScreen
	b playMusic
	c createWorldFog
	a ()Lvp$d; getType
	a (Ljava/util/UUID;Lvp$b;)V dispatch
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
vp$h net/minecraft/network/protocol/game/ClientboundBossEventPacket$UpdateStyleOperation
	a color
	b overlay
	a ()Lvp$d; getType
	a (Ljava/util/UUID;Lvp$b;)V dispatch
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
vs$a net/minecraft/network/protocol/game/ClientboundChunksBiomesPacket$ChunkBiomeData
	a pos
	b buffer
	a ()Lnet/minecraft/network/PacketDataSerializer; getReadBuffer
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/world/level/chunk/Chunk;)V extractChunkData
	a (Lnet/minecraft/world/level/chunk/Chunk;)I calculateChunkSize
	b ()Lnet/minecraft/world/level/ChunkCoordIntPair; pos
	c ()[B buffer
	d ()Lio/netty/buffer/ByteBuf; getWriteBuffer
vv$a net/minecraft/network/protocol/game/ClientboundCommandsPacket$ArgumentNodeStub
	a id
	b argumentType
	c suggestionId
	a (Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lnet/minecraft/resources/MinecraftKey; getSuggestionId
	a (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/builder/ArgumentBuilder; build
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketDataSerializer;Lgf$a;)V serializeCap
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/commands/synchronization/ArgumentTypeInfo;Lgf$a;)V serializeCap
vv$b net/minecraft/network/protocol/game/ClientboundCommandsPacket$Entry
	a stub
	b flags
	c redirect
	d children
	a (Lit/unimi/dsi/fastutil/ints/IntSet;)Z canBuild
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	b (Lit/unimi/dsi/fastutil/ints/IntSet;)Z canResolve
vv$c net/minecraft/network/protocol/game/ClientboundCommandsPacket$LiteralNodeStub
	a id
	a (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/builder/ArgumentBuilder; build
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
vv$d net/minecraft/network/protocol/game/ClientboundCommandsPacket$NodeResolver
	a context
	b entries
	c nodes
	a (I)Lcom/mojang/brigadier/tree/CommandNode; resolve
vv$e net/minecraft/network/protocol/game/ClientboundCommandsPacket$NodeStub
	a (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/builder/ArgumentBuilder; build
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
w net/minecraft/MethodsReturnNonnullByDefault
wk$a net/minecraft/network/protocol/game/ClientboundGameEventPacket$Type
	a TYPES
	b id
wp$a net/minecraft/network/protocol/game/ClientboundLevelChunkPacketData$BlockEntityInfo
	a packedXZ
	b y
	c type
	d tag
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/world/level/block/entity/TileEntity;)Lwp$a; create
wp$b net/minecraft/network/protocol/game/ClientboundLevelChunkPacketData$BlockEntityTagOutput
xl$a net/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket$Action
	a ADD_PLAYER
	b INITIALIZE_CHAT
	c UPDATE_GAME_MODE
	d UPDATE_LISTED
	e UPDATE_LATENCY
	f UPDATE_DISPLAY_NAME
	g reader
	h writer
	i $VALUES
	a ()[Lxl$a; $values
xl$a$a net/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket$Action$Reader
xl$a$b net/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket$Action$Writer
xl$b net/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket$Entry
	a profileId
	b profile
	c listed
	d latency
	e gameMode
	f displayName
	g chatSession
	a ()Ljava/util/UUID; profileId
	b ()Lcom/mojang/authlib/GameProfile; profile
	c ()Z listed
	d ()I latency
	e ()Lnet/minecraft/world/level/EnumGamemode; gameMode
	f ()Lnet/minecraft/network/chat/IChatBaseComponent; displayName
	g ()Ltz$a; chatSession
xl$c net/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket$EntryBuilder
	a profileId
	b profile
	c listed
	d latency
	e gameMode
	f displayName
	g chatSession
	a ()Lxl$b; build
yr$a net/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket$Action
	a ADD
	b REMOVE
	c $VALUES
	a ()[Lyr$a; $values
yr$b net/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket$Parameters
	a displayName
	b playerPrefix
	c playerSuffix
	d nametagVisibility
	e collisionRule
	f color
	g options
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getDisplayName
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	b ()I getOptions
	c ()Lnet/minecraft/EnumChatFormat; getColor
	d ()Ljava/lang/String; getNametagVisibility
	e ()Ljava/lang/String; getCollisionRule
	f ()Lnet/minecraft/network/chat/IChatBaseComponent; getPlayerPrefix
	g ()Lnet/minecraft/network/chat/IChatBaseComponent; getPlayerSuffix
com/mojang/math/GivensParameters com/mojang/math/GivensParameters
	a sinHalf
	b cosHalf
	a ()Lcom/mojang/math/GivensParameters; inverse
	a (F)Lcom/mojang/math/GivensParameters; fromPositiveAngle
	a (FF)Lcom/mojang/math/GivensParameters; fromUnnormalized
	a (Lorg/joml/Matrix3f;)Lorg/joml/Matrix3f; aroundX
	a (Lorg/joml/Quaternionf;)Lorg/joml/Quaternionf; aroundX
	b ()F cos
	b (Lorg/joml/Matrix3f;)Lorg/joml/Matrix3f; aroundY
	b (Lorg/joml/Quaternionf;)Lorg/joml/Quaternionf; aroundY
	c ()F sin
	c (Lorg/joml/Matrix3f;)Lorg/joml/Matrix3f; aroundZ
	c (Lorg/joml/Quaternionf;)Lorg/joml/Quaternionf; aroundZ
	d ()F sinHalf
	e ()F cosHalf
com/mojang/math/MatrixUtil com/mojang/math/MatrixUtil
	a G
	b PI_4
	a (FF)Lcom/mojang/math/GivensParameters; qrGivensQuat
	a (FFF)Lcom/mojang/math/GivensParameters; approxGivensQuat
	a (Lorg/joml/Matrix3f;)Lorg/apache/commons/lang3/tuple/Triple; svdDecompose
	a (Lorg/joml/Matrix3f;I)Lorg/joml/Quaternionf; eigenvalueJacobi
	a (Lorg/joml/Matrix3f;Lorg/joml/Matrix3f;)V similarityTransform
	a (Lorg/joml/Matrix3f;Lorg/joml/Matrix3f;Lorg/joml/Quaternionf;Lorg/joml/Quaternionf;)V stepJacobi
	a (Lorg/joml/Matrix4f;F)Lorg/joml/Matrix4f; mulComponentWise
com/mojang/math/Transformation com/mojang/math/Transformation
	a CODEC
	b EXTENDED_CODEC
	c matrix
	d decomposed
	e translation
	f leftRotation
	g scale
	h rightRotation
	i IDENTITY
	a ()Lcom/mojang/math/Transformation; identity
	a (Lcom/mojang/math/Transformation;)Lcom/mojang/math/Transformation; compose
	a (Lcom/mojang/math/Transformation;F)Lcom/mojang/math/Transformation; slerp
	a (Lorg/joml/Vector3f;Lorg/joml/Quaternionf;Lorg/joml/Vector3f;Lorg/joml/Quaternionf;)Lorg/joml/Matrix4f; compose
	b ()Lcom/mojang/math/Transformation; inverse
	c ()Lorg/joml/Matrix4f; getMatrix
	d ()Lorg/joml/Vector3f; getTranslation
	e ()Lorg/joml/Quaternionf; getLeftRotation
	f ()Lorg/joml/Vector3f; getScale
	g ()Lorg/joml/Quaternionf; getRightRotation
	h ()V ensureDecomposed
net/minecraft/BlockUtil$IntBounds net/minecraft/BlockUtil$IntBounds
	a min
	b max
net/minecraft/CrashReport net/minecraft/CrashReport
	a LOGGER
	b DATE_TIME_FORMATTER
	c title
	d exception
	e details
	f saveFile
	g trackingStackTrace
	h uncategorizedStackTrace
	i systemReport
	a ()Ljava/lang/String; getTitle
	a (Ljava/io/File;)Z saveToFile
	a (Ljava/lang/String;)Lnet/minecraft/CrashReportSystemDetails; addCategory
	a (Ljava/lang/String;I)Lnet/minecraft/CrashReportSystemDetails; addCategory
	a (Ljava/lang/StringBuilder;)V getDetails
	a (Ljava/lang/Throwable;Ljava/lang/String;)Lnet/minecraft/CrashReport; forThrowable
	b ()Ljava/lang/Throwable; getException
	c ()Ljava/lang/String; getDetails
	d ()Ljava/lang/String; getExceptionMessage
	e ()Ljava/lang/String; getFriendlyReport
	f ()Ljava/io/File; getSaveFile
	g ()Lnet/minecraft/SystemReport; getSystemReport
	h ()V preload
	i ()Ljava/lang/String; getErrorComment
net/minecraft/DefaultUncaughtExceptionHandler net/minecraft/DefaultUncaughtExceptionHandler
	a logger
net/minecraft/ReportedException net/minecraft/ReportedException
	a report
	a ()Lnet/minecraft/CrashReport; getReport
net/minecraft/SharedConstants net/minecraft/SharedConstants
	A DEBUG_COLLISION
	B DEBUG_SHAPES
	C DEBUG_NEIGHBORSUPDATE
	D DEBUG_STRUCTURES
	E DEBUG_LIGHT
	F DEBUG_WORLDGENATTEMPT
	G DEBUG_SOLID_FACE
	H DEBUG_CHUNKS
	I DEBUG_GAME_EVENT_LISTENERS
	J DEBUG_DUMP_TEXTURE_ATLAS
	K DEBUG_DUMP_INTERPOLATED_TEXTURE_FRAMES
	L DEBUG_STRUCTURE_EDIT_MODE
	M DEBUG_SAVE_STRUCTURES_AS_SNBT
	N DEBUG_SYNCHRONOUS_GL_LOGS
	O DEBUG_VERBOSE_SERVER_EVENTS
	P DEBUG_NAMED_RUNNABLES
	Q DEBUG_GOAL_SELECTOR
	R DEBUG_VILLAGE_SECTIONS
	S DEBUG_BRAIN
	T DEBUG_BEES
	U DEBUG_RAIDS
	V DEBUG_BLOCK_BREAK
	W DEBUG_RESOURCE_LOAD_TIMES
	X DEBUG_MONITOR_TICK_TIMES
	Y DEBUG_KEEP_JIGSAW_BLOCKS_DURING_STRUCTURE_GEN
	Z DEBUG_DONT_SAVE_WORLD
	a SNAPSHOT
	aA INGAME_DEBUG_OUTPUT
	aB DEBUG_SUBTITLES
	aC FAKE_MS_LATENCY
	aD FAKE_MS_JITTER
	aE NETTY_LEAK_DETECTION
	aF COMMAND_STACK_TRACES
	aG DEBUG_WORLD_RECREATE
	aH DEBUG_SHOW_SERVER_DEBUG_VALUES
	aI DEBUG_STORE_CHUNK_STACKTRACES
	aJ DEBUG_FEATURE_COUNT
	aK DEBUG_RESOURCE_GENERATION_OVERRIDE
	aL DEBUG_FORCE_TELEMETRY
	aM MAXIMUM_TICK_TIME_NANOS
	aN CHECK_DATA_FIXER_SCHEMA
	aO IS_RUNNING_IN_IDE
	aP DATA_FIX_TYPES_TO_OPTIMIZE
	aQ WORLD_RESOLUTION
	aR MAX_CHAT_LENGTH
	aS MAX_COMMAND_LENGTH
	aT MAX_CHAINED_NEIGHBOR_UPDATES
	aU MAX_RENDER_DISTANCE
	aV ILLEGAL_FILE_CHARACTERS
	aW TICKS_PER_SECOND
	aX TICKS_PER_MINUTE
	aY TICKS_PER_GAME_DAY
	aZ AVERAGE_GAME_TICKS_PER_RANDOM_TICK_PER_BLOCK
	aa DEBUG_LARGE_DRIPSTONE
	ab DEBUG_PACKET_SERIALIZATION
	ac DEBUG_CARVERS
	ad DEBUG_ORE_VEINS
	ae DEBUG_SCULK_CATALYST
	af DEBUG_BYPASS_REALMS_VERSION_CHECK
	ag DEBUG_SOCIAL_INTERACTIONS
	ah DEBUG_VALIDATE_RESOURCE_PATH_CASE
	ai DEBUG_IGNORE_LOCAL_MOB_CAP
	aj DEBUG_SMALL_SPAWN
	ak DEBUG_DISABLE_LIQUID_SPREADING
	al DEBUG_AQUIFERS
	am DEBUG_JFR_PROFILING_ENABLE_LEVEL_LOADING
	an debugGenerateSquareTerrainWithoutNoise
	ao debugGenerateStripedTerrainWithoutNoise
	ap DEBUG_ONLY_GENERATE_HALF_THE_WORLD
	aq DEBUG_DISABLE_FLUID_GENERATION
	ar DEBUG_DISABLE_AQUIFERS
	as DEBUG_DISABLE_SURFACE
	at DEBUG_DISABLE_CARVERS
	au DEBUG_DISABLE_STRUCTURES
	av DEBUG_DISABLE_FEATURES
	aw DEBUG_DISABLE_ORE_VEINS
	ax DEBUG_DISABLE_BLENDING
	ay DEBUG_DISABLE_BELOW_ZERO_RETROGENERATION
	az DEFAULT_MINECRAFT_PORT
	b WORLD_VERSION
	ba AVERAGE_RANDOM_TICKS_PER_BLOCK_PER_MINUTE
	bb AVERAGE_RANDOM_TICKS_PER_BLOCK_PER_GAME_DAY
	bc SNAPSHOT_PROTOCOL_BIT
	bd CURRENT_VERSION
	c SERIES
	d VERSION_STRING
	e RELEASE_NETWORK_PROTOCOL_VERSION
	f SNAPSHOT_NETWORK_PROTOCOL_VERSION
	g SNBT_NAG_VERSION
	h THROW_ON_TASK_FAILURE
	i RESOURCE_PACK_FORMAT
	j DATA_PACK_FORMAT
	k LANGUAGE_FORMAT
	l REPORT_FORMAT_VERSION
	m DATA_VERSION_TAG
	n USE_NEW_RENDERSYSTEM
	o MULTITHREADED_RENDERING
	p FIX_TNT_DUPE
	q FIX_SAND_DUPE
	r USE_DEBUG_FEATURES
	s DEBUG_OPEN_INCOMPATIBLE_WORLDS
	t DEBUG_ALLOW_LOW_SIM_DISTANCE
	u DEBUG_HOTKEYS
	v DEBUG_UI_NARRATION
	w DEBUG_RENDER
	x DEBUG_PATHFINDING
	y DEBUG_WATER
	z DEBUG_HEIGHTMAP
	a ()V tryDetectVersion
	a (C)Z isAllowedChatCharacter
	a (Ljava/lang/String;)Ljava/lang/String; filterText
	a (Ljava/lang/String;Z)Ljava/lang/String; filterText
	a (Lnet/minecraft/WorldVersion;)V setVersion
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;)Z debugVoidTerrain
	b ()Lnet/minecraft/WorldVersion; getCurrentVersion
	c ()I getProtocolVersion
	d ()V enableDataFixerOptimizations
net/minecraft/SystemReport net/minecraft/SystemReport
	a BYTES_PER_MEBIBYTE
	b ONE_GIGA
	c LOGGER
	d OPERATING_SYSTEM
	e JAVA_VERSION
	f JAVA_VM_VERSION
	g entries
	a ()Ljava/lang/String; toLineSeparatedString
	a (Ljava/lang/String;Ljava/lang/Runnable;)V ignoreErrors
	a (Ljava/lang/String;Ljava/lang/String;)V setDetail
	a (Ljava/lang/String;Ljava/util/function/Supplier;)V setDetail
	a (Ljava/lang/StringBuilder;)V appendToCrashReportString
	a (Ljava/util/List;)V putPhysicalMemory
	a (Loshi/SystemInfo;)V putHardware
	a (Loshi/hardware/CentralProcessor;)V putProcessor
	a (Loshi/hardware/GlobalMemory;)V putMemory
	a (Loshi/hardware/VirtualMemory;)V putVirtualMemory
	b (Ljava/util/List;)V putGraphics
net/minecraft/advancements/Advancement net/minecraft/advancements/Advancement
	a parent
	b display
	c rewards
	d id
	e criteria
	f requirements
	g children
	h chatComponent
	a ()Lnet/minecraft/advancements/Advancement$SerializedAdvancement; deconstruct
	a (Lnet/minecraft/advancements/Advancement;)Lnet/minecraft/advancements/Advancement; getRoot
	b ()Lnet/minecraft/advancements/Advancement; getParent
	b (Lnet/minecraft/advancements/Advancement;)V addChild
	c ()Lnet/minecraft/advancements/Advancement; getRoot
	d ()Lnet/minecraft/advancements/AdvancementDisplay; getDisplay
	e ()Lnet/minecraft/advancements/AdvancementRewards; getRewards
	f ()Ljava/lang/Iterable; getChildren
	g ()Ljava/util/Map; getCriteria
	h ()I getMaxCriteraRequired
	i ()Lnet/minecraft/resources/MinecraftKey; getId
	j ()[[Ljava/lang/String; getRequirements
	k ()Lnet/minecraft/network/chat/IChatBaseComponent; getChatComponent
net/minecraft/advancements/AdvancementProgress net/minecraft/advancements/AdvancementProgress
	a criteria
	b requirements
	a ()Z isDone
	a (Ljava/lang/String;)Z grantProgress
	a (Ljava/util/Map;[[Ljava/lang/String;)V update
	a (Lnet/minecraft/advancements/AdvancementProgress;)I compareTo
	a (Lnet/minecraft/network/PacketDataSerializer;)V serializeToNetwork
	b ()Z hasProgress
	b (Ljava/lang/String;)Z revokeProgress
	b (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/advancements/AdvancementProgress; fromNetwork
	c ()F getPercent
	c (Ljava/lang/String;)Lnet/minecraft/advancements/CriterionProgress; getCriterion
	d ()Ljava/lang/String; getProgressText
	e ()Ljava/lang/Iterable; getRemainingCriteria
	f ()Ljava/lang/Iterable; getCompletedCriteria
	g ()Ljava/util/Date; getFirstProgressDate
	h ()I countCompletedRequirements
net/minecraft/advancements/AdvancementRewards net/minecraft/advancements/AdvancementRewards
	a EMPTY
	b experience
	c loot
	d recipes
	e function
	a ()[Lnet/minecraft/resources/MinecraftKey; getRecipes
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/advancements/AdvancementRewards; deserialize
	a (Lnet/minecraft/server/level/EntityPlayer;)V grant
	b ()Lcom/google/gson/JsonElement; serializeToJson
net/minecraft/advancements/Criterion net/minecraft/advancements/Criterion
	a trigger
	a ()Lnet/minecraft/advancements/CriterionInstance; getTrigger
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lnet/minecraft/advancements/Criterion; criterionFromJson
	a (Ljava/util/Map;Lnet/minecraft/network/PacketDataSerializer;)V serializeToNetwork
	a (Lnet/minecraft/network/PacketDataSerializer;)V serializeToNetwork
	b ()Lcom/google/gson/JsonElement; serializeToJson
	b (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Ljava/util/Map; criteriaFromJson
	b (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/advancements/Criterion; criterionFromNetwork
	c (Lnet/minecraft/network/PacketDataSerializer;)Ljava/util/Map; criteriaFromNetwork
net/minecraft/advancements/CriterionProgress net/minecraft/advancements/CriterionProgress
	a DATE_FORMAT
	b obtained
	a ()Z isDone
	a (Ljava/lang/String;)Lnet/minecraft/advancements/CriterionProgress; fromJson
	a (Lnet/minecraft/network/PacketDataSerializer;)V serializeToNetwork
	b ()V grant
	b (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/advancements/CriterionProgress; fromNetwork
	c ()V revoke
	d ()Ljava/util/Date; getObtained
	e ()Lcom/google/gson/JsonElement; serializeToJson
net/minecraft/advancements/critereon/DistanceTrigger net/minecraft/advancements/critereon/DistanceTrigger
	a id
	a ()Lnet/minecraft/resources/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lbf$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/phys/Vec3D;)V trigger
	b (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lnet/minecraft/advancements/critereon/CriterionInstanceAbstract; createInstance
net/minecraft/advancements/critereon/EntitySubPredicate net/minecraft/advancements/critereon/EntitySubPredicate
	a ANY
	a ()Lcom/google/gson/JsonObject; serializeCustomData
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/EntitySubPredicate; fromJson
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/phys/Vec3D;)Z matches
	a (Lnet/minecraft/world/entity/animal/CatVariant;)Lnet/minecraft/advancements/critereon/EntitySubPredicate; variant
	a (Lnet/minecraft/world/entity/animal/FrogVariant;)Lnet/minecraft/advancements/critereon/EntitySubPredicate; variant
	b ()Lcom/google/gson/JsonElement; serialize
	c ()Lbo$a; type
net/minecraft/advancements/critereon/EntityVariantPredicate net/minecraft/advancements/critereon/EntityVariantPredicate
	a VARIANT_KEY
	b variantCodec
	c getter
	d type
	a ()Lbo$a; type
	a (Lcom/mojang/serialization/Codec;Ljava/util/function/Function;)Lnet/minecraft/advancements/critereon/EntityVariantPredicate; create
	a (Ljava/lang/Object;)Lnet/minecraft/advancements/critereon/EntitySubPredicate; createPredicate
	a (Lnet/minecraft/core/IRegistry;Ljava/util/function/Function;)Lnet/minecraft/advancements/critereon/EntityVariantPredicate; create
net/minecraft/advancements/critereon/ItemInteractWithBlockTrigger net/minecraft/advancements/critereon/ItemInteractWithBlockTrigger
	a id
	a ()Lnet/minecraft/resources/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lby$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/item/ItemStack;)V trigger
	b (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lnet/minecraft/advancements/critereon/CriterionInstanceAbstract; createInstance
net/minecraft/advancements/critereon/LighthingBoltPredicate net/minecraft/advancements/critereon/LighthingBoltPredicate
	b BLOCKS_SET_ON_FIRE_KEY
	c ENTITY_STRUCK_KEY
	d blocksSetOnFire
	e entityStruck
	a ()Lcom/google/gson/JsonObject; serializeCustomData
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/advancements/critereon/LighthingBoltPredicate; fromJson
	a (Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange;)Lnet/minecraft/advancements/critereon/LighthingBoltPredicate; blockSetOnFire
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/phys/Vec3D;)Z matches
	c ()Lbo$a; type
net/minecraft/advancements/critereon/LightningStrikeTrigger net/minecraft/advancements/critereon/LightningStrikeTrigger
	a ID
	a ()Lnet/minecraft/resources/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lcf$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/entity/EntityLightning;Ljava/util/List;)V trigger
	b (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lnet/minecraft/advancements/critereon/CriterionInstanceAbstract; createInstance
net/minecraft/advancements/critereon/PickedUpItemTrigger net/minecraft/advancements/critereon/PickedUpItemTrigger
	a id
	a ()Lnet/minecraft/resources/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lcl$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/Entity;)V trigger
	b (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lnet/minecraft/advancements/critereon/CriterionInstanceAbstract; createInstance
net/minecraft/advancements/critereon/PlayerTrigger net/minecraft/advancements/critereon/PlayerTrigger
	a id
	a ()Lnet/minecraft/resources/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lcq$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;)V trigger
	b (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lnet/minecraft/advancements/critereon/CriterionInstanceAbstract; createInstance
net/minecraft/advancements/critereon/SlimePredicate net/minecraft/advancements/critereon/SlimePredicate
	b size
	a ()Lcom/google/gson/JsonObject; serializeCustomData
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/advancements/critereon/SlimePredicate; fromJson
	a (Lnet/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange;)Lnet/minecraft/advancements/critereon/SlimePredicate; sized
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/phys/Vec3D;)Z matches
	c ()Lbo$a; type
net/minecraft/advancements/critereon/StartRidingTrigger net/minecraft/advancements/critereon/StartRidingTrigger
	a ID
	a ()Lnet/minecraft/resources/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lcx$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;)V trigger
	b (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lnet/minecraft/advancements/critereon/CriterionInstanceAbstract; createInstance
net/minecraft/advancements/critereon/TagPredicate net/minecraft/advancements/critereon/TagPredicate
	a tag
	b expected
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/advancements/critereon/TagPredicate; fromJson
	a (Lnet/minecraft/core/Holder;)Z matches
	a (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/advancements/critereon/TagPredicate; is
	b (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/advancements/critereon/TagPredicate; isNot
net/minecraft/advancements/critereon/UsingItemTrigger net/minecraft/advancements/critereon/UsingItemTrigger
	a ID
	a ()Lnet/minecraft/resources/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Ldg$a; createInstance
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/item/ItemStack;)V trigger
	b (Lcom/google/gson/JsonObject;Lbn$b;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lnet/minecraft/advancements/critereon/CriterionInstanceAbstract; createInstance
net/minecraft/client/ClientBrandRetriever net/minecraft/client/ClientBrandRetriever
	a VANILLA_NAME
net/minecraft/client/main/Main net/minecraft/client/main/Main
	a LOGGER
	a (Ljava/lang/Integer;)Ljava/util/OptionalInt; ofNullable
	a (Ljava/lang/String;)Ljava/util/Optional; emptyStringToEmptyOptional
	a (Ljoptsimple/OptionSet;Ljoptsimple/OptionSpec;)Ljava/lang/Object; parseArgument
	b (Ljava/lang/String;)Z stringHasValue
net/minecraft/commands/CommandSigningContext net/minecraft/commands/CommandSigningContext
	a ANONYMOUS
	a (Ljava/lang/String;)Lnet/minecraft/network/chat/PlayerChatMessage; getArgument
net/minecraft/commands/arguments/ArgumentSignatures net/minecraft/commands/arguments/ArgumentSignatures
	a EMPTY
	b entries
	c MAX_ARGUMENT_COUNT
	d MAX_ARGUMENT_NAME_LENGTH
	a ()Ljava/util/List; entries
	a (Ljava/lang/String;)Lnet/minecraft/network/chat/MessageSignature; get
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/chat/SignableCommand;Ldv$b;)Lnet/minecraft/commands/arguments/ArgumentSignatures; signCommand
net/minecraft/commands/arguments/GameModeArgument net/minecraft/commands/arguments/GameModeArgument
	a EXAMPLES
	b VALUES
	c ERROR_INVALID
	a ()Lnet/minecraft/commands/arguments/GameModeArgument; gameMode
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/world/level/EnumGamemode; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/level/EnumGamemode; getGameMode
net/minecraft/commands/arguments/HeightmapTypeArgument net/minecraft/commands/arguments/HeightmapTypeArgument
	a LOWER_CASE_CODEC
	a ()Lnet/minecraft/commands/arguments/HeightmapTypeArgument; heightmap
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/HeightMap$Type; getHeightmap
	a (Ljava/lang/String;)Ljava/lang/String; convertId
	b ()[Lnet/minecraft/world/level/levelgen/HeightMap$Type; keptTypes
net/minecraft/commands/arguments/ResourceArgument net/minecraft/commands/arguments/ResourceArgument
	a ERROR_UNKNOWN_RESOURCE
	b ERROR_INVALID_RESOURCE_TYPE
	c EXAMPLES
	d ERROR_NOT_SUMMONABLE_ENTITY
	e registryKey
	f registryLookup
	a (Lcom/mojang/brigadier/StringReader;)Lhd$c; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lhd$c; getAttribute
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Lnet/minecraft/resources/ResourceKey;)Lhd$c; getResource
	a (Lnet/minecraft/commands/CommandBuildContext;Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/commands/arguments/ResourceArgument; resource
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lhd$c; getConfiguredFeature
	c (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lhd$c; getStructure
	d (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lhd$c; getEntityType
	e (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lhd$c; getSummonableEntityType
	f (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lhd$c; getMobEffect
	g (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lhd$c; getEnchantment
net/minecraft/commands/arguments/ResourceKeyArgument net/minecraft/commands/arguments/ResourceKeyArgument
	a EXAMPLES
	b ERROR_INVALID_FEATURE
	c ERROR_INVALID_STRUCTURE
	d ERROR_INVALID_TEMPLATE_POOL
	e registryKey
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/resources/ResourceKey; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lhd$c; getConfiguredFeature
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Lnet/minecraft/resources/ResourceKey;Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;)Lnet/minecraft/resources/ResourceKey; getRegistryKey
	a (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/core/IRegistry; getRegistry
	a (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/commands/arguments/ResourceKeyArgument; key
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lhd$c; getStructure
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Lnet/minecraft/resources/ResourceKey;Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;)Lhd$c; resolveKey
	c (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lhd$c; getStructureTemplatePool
net/minecraft/commands/arguments/ResourceOrTagArgument net/minecraft/commands/arguments/ResourceOrTagArgument
	a EXAMPLES
	b ERROR_UNKNOWN_TAG
	c ERROR_INVALID_TAG_TYPE
	d registryLookup
	e registryKey
	a (Lcom/mojang/brigadier/StringReader;)Leq$c; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Lnet/minecraft/resources/ResourceKey;)Leq$c; getResourceOrTag
	a (Lnet/minecraft/commands/CommandBuildContext;Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/commands/arguments/ResourceOrTagArgument; resourceOrTag
net/minecraft/commands/arguments/ResourceOrTagKeyArgument net/minecraft/commands/arguments/ResourceOrTagKeyArgument
	a EXAMPLES
	b registryKey
	a (Lcom/mojang/brigadier/StringReader;)Ler$c; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Lnet/minecraft/resources/ResourceKey;Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;)Ler$c; getResourceOrTagKey
	a (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/commands/arguments/ResourceOrTagKeyArgument; resourceOrTagKey
net/minecraft/commands/arguments/StringRepresentableArgument net/minecraft/commands/arguments/StringRepresentableArgument
	a ERROR_INVALID_VALUE
	b codec
	c values
	a (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Enum; parse
	a (Ljava/lang/String;)Ljava/lang/String; convertId
net/minecraft/commands/arguments/selector/EntitySelector net/minecraft/commands/arguments/selector/EntitySelector
	a INFINITE
	b ORDER_ARBITRARY
	c ANY_TYPE
	d maxResults
	e includesEntities
	f worldLimited
	g predicate
	h range
	i position
	j aabb
	k order
	l currentEntity
	m playerName
	n entityUUID
	o type
	p usesSelector
	a ()I getMaxResults
	a (Ljava/util/List;)Lnet/minecraft/network/chat/IChatBaseComponent; joinNames
	a (Ljava/util/List;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/phys/Vec3D;Ljava/util/function/Predicate;)V addEntities
	a (Lnet/minecraft/commands/CommandListenerWrapper;)Lnet/minecraft/world/entity/Entity; findSingleEntity
	a (Lnet/minecraft/world/phys/Vec3D;)Ljava/util/function/Predicate; getPredicate
	a (Lnet/minecraft/world/phys/Vec3D;Ljava/util/List;)Ljava/util/List; sortAndLimit
	b ()Z includesEntities
	b (Lnet/minecraft/commands/CommandListenerWrapper;)Ljava/util/List; findEntities
	c ()Z isSelfSelector
	c (Lnet/minecraft/commands/CommandListenerWrapper;)Lnet/minecraft/server/level/EntityPlayer; findSinglePlayer
	d ()Z isWorldLimited
	d (Lnet/minecraft/commands/CommandListenerWrapper;)Ljava/util/List; findPlayers
	e ()Z usesSelector
	e (Lnet/minecraft/commands/CommandListenerWrapper;)V checkPermissions
	f ()I getResultLimit
	f (Lnet/minecraft/commands/CommandListenerWrapper;)Ljava/util/List; findEntitiesRaw
net/minecraft/commands/synchronization/ArgumentTypeInfos net/minecraft/commands/synchronization/ArgumentTypeInfos
	a BY_CLASS
	a (Lcom/mojang/brigadier/arguments/ArgumentType;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; byClass
	a (Ljava/lang/Class;)Z isClassRecognized
	a (Lnet/minecraft/core/IRegistry;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; bootstrap
	a (Lnet/minecraft/core/IRegistry;Ljava/lang/String;Ljava/lang/Class;Lnet/minecraft/commands/synchronization/ArgumentTypeInfo;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; register
	b (Lcom/mojang/brigadier/arguments/ArgumentType;)Lgf$a; unpack
	b (Ljava/lang/Class;)Ljava/lang/Class; fixClassType
net/minecraft/commands/synchronization/ArgumentUtils net/minecraft/commands/synchronization/ArgumentUtils
	a LOGGER
	b NUMBER_FLAG_MIN
	c NUMBER_FLAG_MAX
	a (B)Z numberHasMin
	a (Lcom/google/gson/JsonObject;Lcom/mojang/brigadier/arguments/ArgumentType;)V serializeArgumentToJson
	a (Lcom/google/gson/JsonObject;Lgf$a;)V serializeCap
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/commands/synchronization/ArgumentTypeInfo;Lgf$a;)V serializeCap
	a (Lcom/mojang/brigadier/CommandDispatcher;Lcom/mojang/brigadier/tree/CommandNode;)Lcom/google/gson/JsonObject; serializeNodeToJson
	a (Lcom/mojang/brigadier/tree/CommandNode;)Ljava/util/Set; findUsedArgumentTypes
	a (Lcom/mojang/brigadier/tree/CommandNode;Ljava/util/Set;Ljava/util/Set;)V findUsedArgumentTypes
	a (ZZ)I createNumberFlags
	b (B)Z numberHasMax
net/minecraft/commands/synchronization/SingletonArgumentInfo net/minecraft/commands/synchronization/SingletonArgumentInfo
	a template
	a (Lcom/mojang/brigadier/arguments/ArgumentType;)Lgf$a; unpack
	a (Lgf$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lgf$a;Lnet/minecraft/network/PacketDataSerializer;)V serializeToNetwork
	a (Lgi$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lgi$a;Lnet/minecraft/network/PacketDataSerializer;)V serializeToNetwork
	a (Ljava/util/function/Function;)Lnet/minecraft/commands/synchronization/SingletonArgumentInfo; contextAware
	a (Ljava/util/function/Supplier;)Lnet/minecraft/commands/synchronization/SingletonArgumentInfo; contextFree
	a (Lnet/minecraft/network/PacketDataSerializer;)Lgi$a; deserializeFromNetwork
	b (Lcom/mojang/brigadier/arguments/ArgumentType;)Lgi$a; unpack
	b (Lnet/minecraft/network/PacketDataSerializer;)Lgf$a; deserializeFromNetwork
net/minecraft/core/DefaultedMappedRegistry net/minecraft/core/DefaultedMappedRegistry
	b defaultKey
	c defaultValue
	a ()Lnet/minecraft/resources/MinecraftKey; getDefaultKey
	a (I)Ljava/lang/Object; byId
	a (ILnet/minecraft/resources/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lhd$c; registerMapping
	a (Ljava/lang/Object;)I getId
	a (Lnet/minecraft/resources/MinecraftKey;)Ljava/lang/Object; get
	a (Lnet/minecraft/util/RandomSource;)Ljava/util/Optional; getRandom
	b (ILnet/minecraft/resources/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/core/Holder; registerMapping
	b (Ljava/lang/Object;)Lnet/minecraft/resources/MinecraftKey; getKey
	b (Lnet/minecraft/resources/MinecraftKey;)Ljava/util/Optional; getOptional
net/minecraft/core/GlobalPos net/minecraft/core/GlobalPos
	a CODEC
	b dimension
	c pos
	a ()Lnet/minecraft/resources/ResourceKey; dimension
	a (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/core/GlobalPos; of
	b ()Lnet/minecraft/core/BlockPosition; pos
net/minecraft/core/HolderSet$Named net/minecraft/core/HolderSet$Named
	a owner
	b key
	c contents
	a (Lnet/minecraft/core/Holder;)Z contains
	a (Lnet/minecraft/core/HolderOwner;)Z canSerializeIn
	b (Ljava/util/List;)V bind
	c ()Lcom/mojang/datafixers/util/Either; unwrap
	d ()Ljava/util/Optional; unwrapKey
	e ()Ljava/util/List; contents
	f ()Lnet/minecraft/tags/TagKey; key
net/minecraft/core/LayeredRegistryAccess net/minecraft/core/LayeredRegistryAccess
	a keys
	b values
	c composite
	a ()Lnet/minecraft/core/IRegistryCustom$Dimension; compositeAccess
	a (II)Lnet/minecraft/core/IRegistryCustom$Dimension; getCompositeAccessForLayers
	a (Ljava/lang/Object;)Lnet/minecraft/core/IRegistryCustom$Dimension; getLayer
	a (Ljava/lang/Object;Ljava/util/List;)Lnet/minecraft/core/LayeredRegistryAccess; replaceFrom
	a (Ljava/lang/Object;[Lnet/minecraft/core/IRegistryCustom$Dimension;)Lnet/minecraft/core/LayeredRegistryAccess; replaceFrom
	a (Ljava/util/stream/Stream;)Ljava/util/Map; collectRegistries
	b (Ljava/lang/Object;)Lnet/minecraft/core/IRegistryCustom$Dimension; getAccessForLoading
	c (Ljava/lang/Object;)Lnet/minecraft/core/IRegistryCustom$Dimension; getAccessFrom
	d (Ljava/lang/Object;)I getLayerIndexOrThrow
net/minecraft/core/NonNullList net/minecraft/core/NonNullList
	a list
	b defaultValue
	a ()Lnet/minecraft/core/NonNullList; create
	a (I)Lnet/minecraft/core/NonNullList; createWithCapacity
	a (ILjava/lang/Object;)Lnet/minecraft/core/NonNullList; withSize
	a (Ljava/lang/Object;[Ljava/lang/Object;)Lnet/minecraft/core/NonNullList; of
net/minecraft/core/QuartPos net/minecraft/core/QuartPos
	a BITS
	b SIZE
	c MASK
	d SECTION_TO_QUARTS_BITS
	a (I)I fromBlock
	b (I)I quartLocal
	c (I)I toBlock
	d (I)I fromSection
	e (I)I toSection
net/minecraft/core/RegistrySetBuilder net/minecraft/core/RegistrySetBuilder
	a entries
	a (Lhf$c;)Lnet/minecraft/core/HolderGetter; wrapContextLookup
	a (Lnet/minecraft/core/IRegistryCustom;)Lhf$b; build
	a (Lnet/minecraft/core/IRegistryCustom;Lhf$b;)Lhf$b; buildPatch
	a (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Lifecycle;Lht$e;)Lnet/minecraft/core/RegistrySetBuilder; add
	a (Lnet/minecraft/resources/ResourceKey;Lht$e;)Lnet/minecraft/core/RegistrySetBuilder; add
	b (Lnet/minecraft/core/IRegistryCustom;)Lht$a; createState
net/minecraft/core/RegistrySynchronization net/minecraft/core/RegistrySynchronization
	a NETWORK_CODEC
	b NETWORKABLE_REGISTRIES
	a ()Lcom/mojang/serialization/Codec; makeNetworkCodec
	a (Lcom/google/common/collect/ImmutableMap$Builder;Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Codec;)V put
	a (Lcom/mojang/serialization/codecs/UnboundedMapCodec;)Lcom/mojang/serialization/Codec; captureMap
	a (Lnet/minecraft/core/IRegistryCustom;)Ljava/util/stream/Stream; ownedNetworkableRegistries
	a (Lnet/minecraft/core/LayeredRegistryAccess;)Ljava/util/stream/Stream; networkedRegistries
	a (Lnet/minecraft/resources/ResourceKey;)Lcom/mojang/serialization/DataResult; getNetworkCodec
	b (Lnet/minecraft/core/LayeredRegistryAccess;)Ljava/util/stream/Stream; networkSafeRegistries
net/minecraft/core/UUIDUtil net/minecraft/core/UUIDUtil
	a CODEC
	b STRING_CODEC
	c AUTHLIB_CODEC
	d UUID_BYTES
	e UUID_PREFIX_OFFLINE_PLAYER
	a (JJ)[I leastMostToIntArray
	a (Lcom/mojang/authlib/GameProfile;)Ljava/util/UUID; getOrCreatePlayerUUID
	a (Lcom/mojang/serialization/Dynamic;)Ljava/util/UUID; readUUID
	a (Ljava/lang/String;)Ljava/util/UUID; createOfflinePlayerUUID
	a (Ljava/util/UUID;)[I uuidToIntArray
	a ([I)Ljava/util/UUID; uuidFromIntArray
	b (Ljava/util/UUID;)[B uuidToByteArray
net/minecraft/core/cauldron/CauldronInteraction net/minecraft/core/cauldron/CauldronInteraction
	a EMPTY
	b WATER
	c LAVA
	d POWDER_SNOW
	e FILL_WATER
	f FILL_LAVA
	g FILL_POWDER_SNOW
	h SHULKER_BOX
	i BANNER
	j DYED_ITEM
	a ()Lit/unimi/dsi/fastutil/objects/Object2ObjectOpenHashMap; newInteractionMap
	a (Ljava/util/Map;)V addDefaultInteractions
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/sounds/SoundEffect;)Lnet/minecraft/world/EnumInteractionResult; emptyBucket
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Ljava/util/function/Predicate;Lnet/minecraft/sounds/SoundEffect;)Lnet/minecraft/world/EnumInteractionResult; fillBucket
	b ()V bootStrap
net/minecraft/core/particles/DustColorTransitionOptions net/minecraft/core/particles/DustColorTransitionOptions
	a SCULK_PARTICLE_COLOR
	b SCULK_TO_REDSTONE
	c CODEC
	d DESERIALIZER
	i toColor
	a ()Ljava/lang/String; writeToString
	a (Lnet/minecraft/network/PacketDataSerializer;)V writeToNetwork
	b ()Lnet/minecraft/core/particles/Particle; getType
	c ()Lorg/joml/Vector3f; getFromColor
	d ()Lorg/joml/Vector3f; getToColor
net/minecraft/core/particles/DustParticleOptionsBase net/minecraft/core/particles/DustParticleOptionsBase
	e MIN_SCALE
	f MAX_SCALE
	g color
	h scale
	a ()Ljava/lang/String; writeToString
	a (Lcom/mojang/brigadier/StringReader;)Lorg/joml/Vector3f; readVector3f
	a (Lnet/minecraft/network/PacketDataSerializer;)V writeToNetwork
	b (Lnet/minecraft/network/PacketDataSerializer;)Lorg/joml/Vector3f; readVector3f
	e ()Lorg/joml/Vector3f; getColor
	f ()F getScale
net/minecraft/core/particles/SculkChargeParticleOptions net/minecraft/core/particles/SculkChargeParticleOptions
	a CODEC
	b DESERIALIZER
	c roll
	a ()Ljava/lang/String; writeToString
	a (Lnet/minecraft/network/PacketDataSerializer;)V writeToNetwork
	b ()Lnet/minecraft/core/particles/Particle; getType
	c ()F roll
net/minecraft/core/particles/ShriekParticleOption net/minecraft/core/particles/ShriekParticleOption
	a CODEC
	b DESERIALIZER
	c delay
	a ()Ljava/lang/String; writeToString
	a (Lnet/minecraft/network/PacketDataSerializer;)V writeToNetwork
	b ()Lnet/minecraft/core/particles/Particle; getType
	c ()I getDelay
net/minecraft/core/particles/VibrationParticleOption net/minecraft/core/particles/VibrationParticleOption
	a CODEC
	b DESERIALIZER
	c destination
	d arrivalInTicks
	a ()Ljava/lang/String; writeToString
	a (Lnet/minecraft/network/PacketDataSerializer;)V writeToNetwork
	b ()Lnet/minecraft/core/particles/Particle; getType
	c ()Lnet/minecraft/world/level/gameevent/PositionSource; getDestination
	d ()I getArrivalInTicks
net/minecraft/core/registries/BuiltInRegistries net/minecraft/core/registries/BuiltInRegistries
	A POINT_OF_INTEREST_TYPE
	B MEMORY_MODULE_TYPE
	C SENSOR_TYPE
	D SCHEDULE
	E ACTIVITY
	F LOOT_POOL_ENTRY_TYPE
	G LOOT_FUNCTION_TYPE
	H LOOT_CONDITION_TYPE
	I LOOT_NUMBER_PROVIDER_TYPE
	J LOOT_NBT_PROVIDER_TYPE
	K LOOT_SCORE_PROVIDER_TYPE
	L FLOAT_PROVIDER_TYPE
	M INT_PROVIDER_TYPE
	N HEIGHT_PROVIDER_TYPE
	O BLOCK_PREDICATE_TYPE
	P CARVER
	Q FEATURE
	R STRUCTURE_PLACEMENT
	S STRUCTURE_PIECE
	T STRUCTURE_TYPE
	U PLACEMENT_MODIFIER_TYPE
	V BLOCKSTATE_PROVIDER_TYPE
	W FOLIAGE_PLACER_TYPE
	X TRUNK_PLACER_TYPE
	Y ROOT_PLACER_TYPE
	Z TREE_DECORATOR_TYPE
	a ROOT_REGISTRY_NAME
	aa FEATURE_SIZE_TYPE
	ab BIOME_SOURCE
	ac CHUNK_GENERATOR
	ad MATERIAL_CONDITION
	ae MATERIAL_RULE
	af DENSITY_FUNCTION_TYPE
	ag STRUCTURE_PROCESSOR
	ah STRUCTURE_POOL_ELEMENT
	ai CAT_VARIANT
	aj FROG_VARIANT
	ak BANNER_PATTERN
	al INSTRUMENT
	am DECORATED_POT_PATTERNS
	an REGISTRY
	ao LOGGER
	ap LOADERS
	aq WRITABLE_REGISTRY
	b GAME_EVENT
	c SOUND_EVENT
	d FLUID
	e MOB_EFFECT
	f BLOCK
	g ENCHANTMENT
	h ENTITY_TYPE
	i ITEM
	j POTION
	k PARTICLE_TYPE
	l BLOCK_ENTITY_TYPE
	m PAINTING_VARIANT
	n CUSTOM_STAT
	o CHUNK_STATUS
	p RULE_TEST
	q POS_RULE_TEST
	r MENU
	s RECIPE_TYPE
	t RECIPE_SERIALIZER
	u ATTRIBUTE
	v POSITION_SOURCE_TYPE
	w COMMAND_ARGUMENT_TYPE
	x STAT_TYPE
	y VILLAGER_TYPE
	z VILLAGER_PROFESSION
	a ()V bootStrap
	a (Lnet/minecraft/core/IRegistry;)V validate
	a (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Lifecycle;Lja$a;)Lnet/minecraft/core/IRegistry; registerSimple
	a (Lnet/minecraft/resources/ResourceKey;Lja$a;)Lnet/minecraft/core/IRegistry; registerSimple
	a (Lnet/minecraft/resources/ResourceKey;Ljava/lang/String;Lcom/mojang/serialization/Lifecycle;Lja$a;)Lnet/minecraft/core/RegistryBlocks; registerDefaulted
	a (Lnet/minecraft/resources/ResourceKey;Ljava/lang/String;Lja$a;)Lnet/minecraft/core/RegistryBlocks; registerDefaulted
	a (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/IRegistryWritable;Lja$a;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/core/IRegistryWritable; internalRegister
	b ()V createContents
	b (Lnet/minecraft/resources/ResourceKey;Ljava/lang/String;Lcom/mojang/serialization/Lifecycle;Lja$a;)Lnet/minecraft/core/RegistryBlocks; registerDefaultedWithIntrusiveHolders
	b (Lnet/minecraft/resources/ResourceKey;Ljava/lang/String;Lja$a;)Lnet/minecraft/core/RegistryBlocks; registerDefaultedWithIntrusiveHolders
	c ()V freeze
net/minecraft/core/registries/Registries net/minecraft/core/registries/Registries
	A INSTRUMENT
	B INT_PROVIDER_TYPE
	C ITEM
	D LOOT_CONDITION_TYPE
	E LOOT_FUNCTION_TYPE
	F LOOT_NBT_PROVIDER_TYPE
	G LOOT_NUMBER_PROVIDER_TYPE
	H LOOT_POOL_ENTRY_TYPE
	I LOOT_SCORE_PROVIDER_TYPE
	J MATERIAL_CONDITION
	K MATERIAL_RULE
	L MEMORY_MODULE_TYPE
	M MENU
	N MOB_EFFECT
	O PAINTING_VARIANT
	P PARTICLE_TYPE
	Q PLACEMENT_MODIFIER_TYPE
	R POINT_OF_INTEREST_TYPE
	S POSITION_SOURCE_TYPE
	T POS_RULE_TEST
	U POTION
	V RECIPE_SERIALIZER
	W RECIPE_TYPE
	X ROOT_PLACER_TYPE
	Y RULE_TEST
	Z SCHEDULE
	a ACTIVITY
	aA TEMPLATE_POOL
	aB TRIM_MATERIAL
	aC TRIM_PATTERN
	aD WORLD_PRESET
	aE MULTI_NOISE_BIOME_SOURCE_PARAMETER_LIST
	aF DIMENSION
	aG LEVEL_STEM
	aa SENSOR_TYPE
	ab SOUND_EVENT
	ac STAT_TYPE
	ad STRUCTURE_PIECE
	ae STRUCTURE_PLACEMENT
	af STRUCTURE_POOL_ELEMENT
	ag STRUCTURE_PROCESSOR
	ah STRUCTURE_TYPE
	ai TREE_DECORATOR_TYPE
	aj TRUNK_PLACER_TYPE
	ak VILLAGER_PROFESSION
	al VILLAGER_TYPE
	am DECORATED_POT_PATTERNS
	an BIOME
	ao CHAT_TYPE
	ap CONFIGURED_CARVER
	aq CONFIGURED_FEATURE
	ar DENSITY_FUNCTION
	as DIMENSION_TYPE
	at FLAT_LEVEL_GENERATOR_PRESET
	au NOISE_SETTINGS
	av NOISE
	aw PLACED_FEATURE
	ax STRUCTURE
	ay PROCESSOR_LIST
	az STRUCTURE_SET
	b ATTRIBUTE
	c BANNER_PATTERN
	d BIOME_SOURCE
	e BLOCK
	f BLOCK_ENTITY_TYPE
	g BLOCK_PREDICATE_TYPE
	h BLOCK_STATE_PROVIDER_TYPE
	i CARVER
	j CAT_VARIANT
	k CHUNK_GENERATOR
	l CHUNK_STATUS
	m COMMAND_ARGUMENT_TYPE
	n CUSTOM_STAT
	o DAMAGE_TYPE
	p DENSITY_FUNCTION_TYPE
	q ENCHANTMENT
	r ENTITY_TYPE
	s FEATURE
	t FEATURE_SIZE_TYPE
	u FLOAT_PROVIDER_TYPE
	v FLUID
	w FOLIAGE_PLACER_TYPE
	x FROG_VARIANT
	y GAME_EVENT
	z HEIGHT_PROVIDER_TYPE
	a (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; createRegistryKey
	a (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/resources/ResourceKey; levelStemToLevel
	b (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/resources/ResourceKey; levelToLevelStem
net/minecraft/data/CachedOutput net/minecraft/data/CachedOutput
	a NO_CACHE
net/minecraft/data/PackOutput net/minecraft/data/PackOutput
	a outputFolder
	a ()Ljava/nio/file/Path; getOutputFolder
	a (Ljj$b;)Ljava/nio/file/Path; getOutputFolder
	a (Ljj$b;Ljava/lang/String;)Ljj$a; createPathProvider
net/minecraft/data/loot/packs/UpdateOneTwentyBuiltInLootTables net/minecraft/data/loot/packs/UpdateOneTwentyBuiltInLootTables
	a DESERT_WELL_ARCHAEOLOGY
	b DESERT_PYRAMID_ARCHAEOLOGY
	c LOCATIONS
	d IMMUTABLE_LOCATIONS
	a ()Ljava/util/Set; all
	a (Ljava/lang/String;)Lnet/minecraft/resources/MinecraftKey; register
	a (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/resources/MinecraftKey; register
net/minecraft/data/registries/VanillaRegistries net/minecraft/data/registries/VanillaRegistries
	a BUILDER
	a ()Lhf$b; createLookup
	a (Lhf$b;)V validateThatAllBiomeFeaturesHaveBiomeFilter
	a (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderLookup;)V validateThatAllBiomeFeaturesHaveBiomeFilter
	a (Lnet/minecraft/world/level/levelgen/placement/PlacedFeature;)Z validatePlacedFeature
net/minecraft/data/structures/SnbtToNbt net/minecraft/data/structures/SnbtToNbt
	d DUMP_SNBT_TO
	e LOGGER
	f output
	g inputFolders
	h filters
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; applyFilters
	a (Ljava/nio/file/Path;Ljava/lang/String;)Lms$c; readStructure
	a (Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/lang/String; getName
	a (Lms$a;)Lnet/minecraft/data/structures/SnbtToNbt; addFilter
	a (Lnet/minecraft/data/CachedOutput;)Ljava/util/concurrent/CompletableFuture; run
	a (Lnet/minecraft/data/CachedOutput;Lms$c;Ljava/nio/file/Path;)V storeStructureIfChanged
net/minecraft/data/structures/StructureUpdater net/minecraft/data/structures/StructureUpdater
	a LOGGER
	a (Ljava/lang/String;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; update
net/minecraft/data/worldgen/AncientCityStructurePieces net/minecraft/data/worldgen/AncientCityStructurePieces
	a START
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/NoiseData net/minecraft/data/worldgen/NoiseData
	a DEFAULT_SHIFT
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
	a (Lnet/minecraft/data/worldgen/BootstapContext;ILnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;)V registerBiomeNoises
	a (Lnet/minecraft/data/worldgen/BootstapContext;Lnet/minecraft/resources/ResourceKey;ID[D)V register
net/minecraft/data/worldgen/ProcessorLists net/minecraft/data/worldgen/ProcessorLists
	A ROOF
	B HIGH_WALL
	C HIGH_RAMPART
	D FOSSIL_ROT
	E FOSSIL_COAL
	F FOSSIL_DIAMONDS
	G ANCIENT_CITY_START_DEGRADATION
	H ANCIENT_CITY_GENERIC_DEGRADATION
	I ANCIENT_CITY_WALLS_DEGRADATION
	J EMPTY
	a ZOMBIE_PLAINS
	b ZOMBIE_SAVANNA
	c ZOMBIE_SNOWY
	d ZOMBIE_TAIGA
	e ZOMBIE_DESERT
	f MOSSIFY_10_PERCENT
	g MOSSIFY_20_PERCENT
	h MOSSIFY_70_PERCENT
	i STREET_PLAINS
	j STREET_SAVANNA
	k STREET_SNOWY_OR_TAIGA
	l FARM_PLAINS
	m FARM_SAVANNA
	n FARM_SNOWY
	o FARM_TAIGA
	p FARM_DESERT
	q OUTPOST_ROT
	r BOTTOM_RAMPART
	s TREASURE_ROOMS
	t HOUSING
	u SIDE_WALL_DEGRADATION
	v STABLE_DEGRADATION
	w BASTION_GENERIC_DEGRADATION
	x RAMPART_DEGRADATION
	y ENTRANCE_REPLACEMENT
	z BRIDGE
	a (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; createKey
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
	a (Lnet/minecraft/data/worldgen/BootstapContext;Lnet/minecraft/resources/ResourceKey;Ljava/util/List;)V register
net/minecraft/data/worldgen/SurfaceRuleData net/minecraft/data/worldgen/SurfaceRuleData
	A SOUL_SAND
	B SOUL_SOIL
	C BASALT
	D BLACKSTONE
	E WARPED_WART_BLOCK
	F WARPED_NYLIUM
	G NETHER_WART_BLOCK
	H CRIMSON_NYLIUM
	I ENDSTONE
	a AIR
	b BEDROCK
	c WHITE_TERRACOTTA
	d ORANGE_TERRACOTTA
	e TERRACOTTA
	f RED_SAND
	g RED_SANDSTONE
	h STONE
	i DEEPSLATE
	j DIRT
	k PODZOL
	l COARSE_DIRT
	m MYCELIUM
	n GRASS_BLOCK
	o CALCITE
	p GRAVEL
	q SAND
	r SANDSTONE
	s PACKED_ICE
	t SNOW_BLOCK
	u MUD
	v POWDER_SNOW
	w ICE
	x WATER
	y LAVA
	z NETHERRACK
	a ()Ldhq$o; overworld
	a (D)Ldhq$f; surfaceNoiseAbove
	a (Lnet/minecraft/world/level/block/Block;)Ldhq$o; makeStateRule
	a (ZZZ)Ldhq$o; overworldLike
	b ()Ldhq$o; nether
	c ()Ldhq$o; end
	d ()Ldhq$o; air
net/minecraft/data/worldgen/TerrainProvider net/minecraft/data/worldgen/TerrainProvider
	a DEEP_OCEAN_CONTINENTALNESS
	b OCEAN_CONTINENTALNESS
	c PLAINS_CONTINENTALNESS
	d BEACH_CONTINENTALNESS
	e NO_TRANSFORM
	f AMPLIFIED_OFFSET
	g AMPLIFIED_FACTOR
	h AMPLIFIED_JAGGEDNESS
	a (F)F calculateMountainRidgeZeroContinentalnessPoint
	a (FFF)F mountainContinentalness
	a (FFFF)F calculateSlope
	a (Lnet/minecraft/util/ToFloatFunction;FFFFFFLnet/minecraft/util/ToFloatFunction;)Lnet/minecraft/util/CubicSpline; ridgeSpline
	a (Lnet/minecraft/util/ToFloatFunction;FLnet/minecraft/util/ToFloatFunction;)Lnet/minecraft/util/CubicSpline; buildWeirdnessJaggednessSpline
	a (Lnet/minecraft/util/ToFloatFunction;FZLnet/minecraft/util/ToFloatFunction;)Lnet/minecraft/util/CubicSpline; buildMountainRidgeSplineWithPoints
	a (Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;FFFFFFZZLnet/minecraft/util/ToFloatFunction;)Lnet/minecraft/util/CubicSpline; buildErosionOffsetSpline
	a (Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;FFLnet/minecraft/util/ToFloatFunction;)Lnet/minecraft/util/CubicSpline; buildRidgeJaggednessSpline
	a (Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;FFFFLnet/minecraft/util/ToFloatFunction;)Lnet/minecraft/util/CubicSpline; buildErosionJaggednessSpline
	a (Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;FZLnet/minecraft/util/ToFloatFunction;)Lnet/minecraft/util/CubicSpline; getErosionFactor
	a (Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;Z)Lnet/minecraft/util/CubicSpline; overworldFactor
	a (Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;Z)Lnet/minecraft/util/CubicSpline; overworldOffset
	b (Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;Z)Lnet/minecraft/util/CubicSpline; overworldJaggedness
net/minecraft/data/worldgen/biome/OverworldBiomes net/minecraft/data/worldgen/biome/OverworldBiomes
	a NORMAL_WATER_COLOR
	b NORMAL_WATER_FOG_COLOR
	c OVERWORLD_FOG_COLOR
	d NORMAL_MUSIC
	a (F)I calculateSkyColor
	a (Lcng$a;)V globalOverworldGeneration
	a (Lcnr$a;IILcng$a;)Lnet/minecraft/world/level/biome/BiomeBase; baseOcean
	a (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/BiomeBase; sparseJungle
	a (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;FZZZLcnr$a;)Lnet/minecraft/world/level/biome/BiomeBase; baseJungle
	a (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Z)Lnet/minecraft/world/level/biome/BiomeBase; oldGrowthTaiga
	a (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;ZZ)Lnet/minecraft/world/level/biome/BiomeBase; savanna
	a (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;ZZZ)Lnet/minecraft/world/level/biome/BiomeBase; plains
	a (ZFFIILjava/lang/Integer;Ljava/lang/Integer;Lcnr$a;Lcng$a;Lnet/minecraft/sounds/Music;)Lnet/minecraft/world/level/biome/BiomeBase; biome
	a (ZFFLcnr$a;Lcng$a;Lnet/minecraft/sounds/Music;)Lnet/minecraft/world/level/biome/BiomeBase; biome
	b (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/BiomeBase; jungle
	b (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Z)Lnet/minecraft/world/level/biome/BiomeBase; windsweptHills
	b (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;ZZ)Lnet/minecraft/world/level/biome/BiomeBase; beach
	b (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;ZZZ)Lnet/minecraft/world/level/biome/BiomeBase; forest
	c (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/BiomeBase; bambooJungle
	c (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Z)Lnet/minecraft/world/level/biome/BiomeBase; badlands
	d (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/BiomeBase; desert
	d (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Z)Lnet/minecraft/world/level/biome/BiomeBase; coldOcean
	e (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/BiomeBase; mushroomFields
	e (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Z)Lnet/minecraft/world/level/biome/BiomeBase; ocean
	f (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/BiomeBase; warmOcean
	f (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Z)Lnet/minecraft/world/level/biome/BiomeBase; lukeWarmOcean
	g (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/BiomeBase; darkForest
	g (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Z)Lnet/minecraft/world/level/biome/BiomeBase; frozenOcean
	h (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/BiomeBase; swamp
	h (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Z)Lnet/minecraft/world/level/biome/BiomeBase; taiga
	i (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/BiomeBase; mangroveSwamp
	i (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Z)Lnet/minecraft/world/level/biome/BiomeBase; river
	j (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/BiomeBase; theVoid
	j (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Z)Lnet/minecraft/world/level/biome/BiomeBase; meadowOrCherryGrove
	k (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/BiomeBase; frozenPeaks
	l (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/BiomeBase; jaggedPeaks
	m (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/BiomeBase; stonyPeaks
	n (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/BiomeBase; snowySlopes
	o (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/BiomeBase; grove
	p (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/BiomeBase; lushCaves
	q (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/BiomeBase; dripstoneCaves
	r (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/BiomeBase; deepDark
	s (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lcng$a; baseOceanGeneration
net/minecraft/data/worldgen/features/AquaticFeatures net/minecraft/data/worldgen/features/AquaticFeatures
	a SEAGRASS_SHORT
	b SEAGRASS_SLIGHTLY_LESS_SHORT
	c SEAGRASS_MID
	d SEAGRASS_TALL
	e SEA_PICKLE
	f SEAGRASS_SIMPLE
	g KELP
	h WARM_OCEAN_VEGETATION
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/features/CaveFeatures net/minecraft/data/worldgen/features/CaveFeatures
	a MONSTER_ROOM
	b FOSSIL_COAL
	c FOSSIL_DIAMONDS
	d DRIPSTONE_CLUSTER
	e LARGE_DRIPSTONE
	f POINTED_DRIPSTONE
	g UNDERWATER_MAGMA
	h GLOW_LICHEN
	i ROOTED_AZALEA_TREE
	j CAVE_VINE
	k CAVE_VINE_IN_MOSS
	l MOSS_VEGETATION
	m MOSS_PATCH
	n MOSS_PATCH_BONEMEAL
	o DRIPLEAF
	p CLAY_WITH_DRIPLEAVES
	q CLAY_POOL_WITH_DRIPLEAVES
	r LUSH_CAVES_CLAY
	s MOSS_PATCH_CEILING
	t SPORE_BLOSSOM
	u AMETHYST_GEODE
	v SCULK_PATCH_DEEP_DARK
	w SCULK_PATCH_ANCIENT_CITY
	x SCULK_VEIN
	a ()Lnet/minecraft/core/Holder; makeSmallDripleaf
	a (Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/core/Holder; makeDripleaf
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/features/EndFeatures net/minecraft/data/worldgen/features/EndFeatures
	a END_SPIKE
	b END_GATEWAY_RETURN
	c END_GATEWAY_DELAYED
	d CHORUS_PLANT
	e END_ISLAND
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/features/MiscOverworldFeatures net/minecraft/data/worldgen/features/MiscOverworldFeatures
	a ICE_SPIKE
	b ICE_PATCH
	c FOREST_ROCK
	d ICEBERG_PACKED
	e ICEBERG_BLUE
	f BLUE_ICE
	g LAKE_LAVA
	h DISK_CLAY
	i DISK_GRAVEL
	j DISK_SAND
	k FREEZE_TOP_LAYER
	l DISK_GRASS
	m BONUS_CHEST
	n VOID_START_PLATFORM
	o DESERT_WELL
	p SPRING_LAVA_OVERWORLD
	q SPRING_LAVA_FROZEN
	r SPRING_WATER
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/features/NetherFeatures net/minecraft/data/worldgen/features/NetherFeatures
	a DELTA
	b SMALL_BASALT_COLUMNS
	c LARGE_BASALT_COLUMNS
	d BASALT_BLOBS
	e BLACKSTONE_BLOBS
	f GLOWSTONE_EXTRA
	g CRIMSON_FOREST_VEGETATION
	h CRIMSON_FOREST_VEGETATION_BONEMEAL
	i WARPED_FOREST_VEGETION
	j WARPED_FOREST_VEGETATION_BONEMEAL
	k NETHER_SPROUTS
	l NETHER_SPROUTS_BONEMEAL
	m TWISTING_VINES
	n TWISTING_VINES_BONEMEAL
	o WEEPING_VINES
	p PATCH_CRIMSON_ROOTS
	q BASALT_PILLAR
	r SPRING_LAVA_NETHER
	s SPRING_NETHER_CLOSED
	t SPRING_NETHER_OPEN
	u PATCH_FIRE
	v PATCH_SOUL_FIRE
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/features/OreFeatures net/minecraft/data/worldgen/features/OreFeatures
	A ORE_ANCIENT_DEBRIS_LARGE
	B ORE_ANCIENT_DEBRIS_SMALL
	C ORE_COPPPER_SMALL
	D ORE_COPPER_LARGE
	E ORE_CLAY
	a ORE_MAGMA
	b ORE_SOUL_SAND
	c ORE_NETHER_GOLD
	d ORE_QUARTZ
	e ORE_GRAVEL_NETHER
	f ORE_BLACKSTONE
	g ORE_DIRT
	h ORE_GRAVEL
	i ORE_GRANITE
	j ORE_DIORITE
	k ORE_ANDESITE
	l ORE_TUFF
	m ORE_COAL
	n ORE_COAL_BURIED
	o ORE_IRON
	p ORE_IRON_SMALL
	q ORE_GOLD
	r ORE_GOLD_BURIED
	s ORE_REDSTONE
	t ORE_DIAMOND_SMALL
	u ORE_DIAMOND_LARGE
	v ORE_DIAMOND_BURIED
	w ORE_LAPIS
	x ORE_LAPIS_BURIED
	y ORE_INFESTED
	z ORE_EMERALD
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/features/PileFeatures net/minecraft/data/worldgen/features/PileFeatures
	a PILE_HAY
	b PILE_MELON
	c PILE_SNOW
	d PILE_ICE
	e PILE_PUMPKIN
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/features/TreeFeatures net/minecraft/data/worldgen/features/TreeFeatures
	A OAK_BEES_0002
	B OAK_BEES_002
	C OAK_BEES_005
	D BIRCH_BEES_0002
	E BIRCH_BEES_002
	F BIRCH_BEES_005
	G FANCY_OAK_BEES_0002
	H FANCY_OAK_BEES_002
	I FANCY_OAK_BEES_005
	J FANCY_OAK_BEES
	K CHERRY_BEES_005
	a CRIMSON_FUNGUS
	b CRIMSON_FUNGUS_PLANTED
	c WARPED_FUNGUS
	d WARPED_FUNGUS_PLANTED
	e HUGE_BROWN_MUSHROOM
	f HUGE_RED_MUSHROOM
	g OAK
	h DARK_OAK
	i BIRCH
	j ACACIA
	k SPRUCE
	l PINE
	m JUNGLE_TREE
	n FANCY_OAK
	o JUNGLE_TREE_NO_VINE
	p MEGA_JUNGLE_TREE
	q MEGA_SPRUCE
	r MEGA_PINE
	s SUPER_BIRCH_BEES_0002
	t SUPER_BIRCH_BEES
	u SWAMP_OAK
	v JUNGLE_BUSH
	w AZALEA_TREE
	x MANGROVE
	y TALL_MANGROVE
	z CHERRY
	a ()Ldnd$a; createOak
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;IIII)Ldnd$a; createStraightBlobTree
	b ()Ldnd$a; createBirch
	c ()Ldnd$a; createSuperBirch
	d ()Ldnd$a; createJungleTree
	e ()Ldnd$a; createFancyOak
	f ()Ldnd$a; cherry
net/minecraft/data/worldgen/features/VegetationFeatures net/minecraft/data/worldgen/features/VegetationFeatures
	A DARK_FOREST_VEGETATION
	B TREES_FLOWER_FOREST
	C MEADOW_TREES
	D TREES_TAIGA
	E TREES_GROVE
	F TREES_SAVANNA
	G BIRCH_TALL
	H TREES_WINDSWEPT_HILLS
	I TREES_WATER
	J TREES_BIRCH_AND_OAK
	K TREES_PLAINS
	L TREES_SPARSE_JUNGLE
	M TREES_OLD_GROWTH_SPRUCE_TAIGA
	N TREES_OLD_GROWTH_PINE_TAIGA
	O TREES_JUNGLE
	P BAMBOO_VEGETATION
	Q MUSHROOM_ISLAND_VEGETATION
	R MANGROVE_VEGETATION
	a BAMBOO_NO_PODZOL
	b BAMBOO_SOME_PODZOL
	c VINES
	d PATCH_BROWN_MUSHROOM
	e PATCH_RED_MUSHROOM
	f PATCH_SUNFLOWER
	g PATCH_PUMPKIN
	h PATCH_BERRY_BUSH
	i PATCH_TAIGA_GRASS
	j PATCH_GRASS
	k PATCH_GRASS_JUNGLE
	l SINGLE_PIECE_OF_GRASS
	m PATCH_DEAD_BUSH
	n PATCH_MELON
	o PATCH_WATERLILY
	p PATCH_TALL_GRASS
	q PATCH_LARGE_FERN
	r PATCH_CACTUS
	s PATCH_SUGAR_CANE
	t FLOWER_DEFAULT
	u FLOWER_FLOWER_FOREST
	v FLOWER_SWAMP
	w FLOWER_PLAIN
	x FLOWER_MEADOW
	y FLOWER_CHERRY
	z FOREST_FLOWERS
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
	a (Lnet/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProvider;I)Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureRandomPatchConfiguration; grassPatch
net/minecraft/data/worldgen/placement/AquaticPlacements net/minecraft/data/worldgen/placement/AquaticPlacements
	a SEAGRASS_WARM
	b SEAGRASS_NORMAL
	c SEAGRASS_COLD
	d SEAGRASS_RIVER
	e SEAGRASS_SWAMP
	f SEAGRASS_DEEP_WARM
	g SEAGRASS_DEEP
	h SEAGRASS_DEEP_COLD
	i SEAGRASS_SIMPLE
	j SEA_PICKLE
	k KELP_COLD
	l KELP_WARM
	m WARM_OCEAN_VEGETATION
	a (I)Ljava/util/List; seagrassPlacement
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/placement/CavePlacements net/minecraft/data/worldgen/placement/CavePlacements
	a MONSTER_ROOM
	b MONSTER_ROOM_DEEP
	c FOSSIL_UPPER
	d FOSSIL_LOWER
	e DRIPSTONE_CLUSTER
	f LARGE_DRIPSTONE
	g POINTED_DRIPSTONE
	h UNDERWATER_MAGMA
	i GLOW_LICHEN
	j ROOTED_AZALEA_TREE
	k CAVE_VINES
	l LUSH_CAVES_VEGETATION
	m LUSH_CAVES_CLAY
	n LUSH_CAVES_CEILING_VEGETATION
	o SPORE_BLOSSOM
	p CLASSIC_VINES
	q AMETHYST_GEODE
	r SCULK_PATCH_DEEP_DARK
	s SCULK_PATCH_ANCIENT_CITY
	t SCULK_VEIN
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/placement/EndPlacements net/minecraft/data/worldgen/placement/EndPlacements
	a END_SPIKE
	b END_GATEWAY_RETURN
	c CHORUS_PLANT
	d END_ISLAND_DECORATED
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/placement/MiscOverworldPlacements net/minecraft/data/worldgen/placement/MiscOverworldPlacements
	a ICE_SPIKE
	b ICE_PATCH
	c FOREST_ROCK
	d ICEBERG_PACKED
	e ICEBERG_BLUE
	f BLUE_ICE
	g LAKE_LAVA_UNDERGROUND
	h LAKE_LAVA_SURFACE
	i DISK_CLAY
	j DISK_GRAVEL
	k DISK_SAND
	l DISK_GRASS
	m FREEZE_TOP_LAYER
	n VOID_START_PLATFORM
	o DESERT_WELL
	p SPRING_LAVA
	q SPRING_LAVA_FROZEN
	r SPRING_WATER
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/placement/NetherPlacements net/minecraft/data/worldgen/placement/NetherPlacements
	a DELTA
	b SMALL_BASALT_COLUMNS
	c LARGE_BASALT_COLUMNS
	d BASALT_BLOBS
	e BLACKSTONE_BLOBS
	f GLOWSTONE_EXTRA
	g GLOWSTONE
	h CRIMSON_FOREST_VEGETATION
	i WARPED_FOREST_VEGETATION
	j NETHER_SPROUTS
	k TWISTING_VINES
	l WEEPING_VINES
	m PATCH_CRIMSON_ROOTS
	n BASALT_PILLAR
	o SPRING_DELTA
	p SPRING_CLOSED
	q SPRING_CLOSED_DOUBLE
	r SPRING_OPEN
	s PATCH_SOUL_FIRE
	t PATCH_FIRE
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/placement/OrePlacements net/minecraft/data/worldgen/placement/OrePlacements
	A ORE_REDSTONE_LOWER
	B ORE_DIAMOND
	C ORE_DIAMOND_LARGE
	D ORE_DIAMOND_BURIED
	E ORE_LAPIS
	F ORE_LAPIS_BURIED
	G ORE_INFESTED
	H ORE_EMERALD
	I ORE_ANCIENT_DEBRIS_LARGE
	J ORE_ANCIENT_DEBRIS_SMALL
	K ORE_COPPER
	L ORE_COPPER_LARGE
	M ORE_CLAY
	a ORE_MAGMA
	b ORE_SOUL_SAND
	c ORE_GOLD_DELTAS
	d ORE_QUARTZ_DELTAS
	e ORE_GOLD_NETHER
	f ORE_QUARTZ_NETHER
	g ORE_GRAVEL_NETHER
	h ORE_BLACKSTONE
	i ORE_DIRT
	j ORE_GRAVEL
	k ORE_GRANITE_UPPER
	l ORE_GRANITE_LOWER
	m ORE_DIORITE_UPPER
	n ORE_DIORITE_LOWER
	o ORE_ANDESITE_UPPER
	p ORE_ANDESITE_LOWER
	q ORE_TUFF
	r ORE_COAL_UPPER
	s ORE_COAL_LOWER
	t ORE_IRON_UPPER
	u ORE_IRON_MIDDLE
	v ORE_IRON_SMALL
	w ORE_GOLD_EXTRA
	x ORE_GOLD
	y ORE_GOLD_LOWER
	z ORE_REDSTONE
	a (ILnet/minecraft/world/level/levelgen/placement/PlacementModifier;)Ljava/util/List; commonOrePlacement
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
	a (Lnet/minecraft/world/level/levelgen/placement/PlacementModifier;Lnet/minecraft/world/level/levelgen/placement/PlacementModifier;)Ljava/util/List; orePlacement
	b (ILnet/minecraft/world/level/levelgen/placement/PlacementModifier;)Ljava/util/List; rareOrePlacement
net/minecraft/data/worldgen/placement/PlacementUtils net/minecraft/data/worldgen/placement/PlacementUtils
	a HEIGHTMAP
	b HEIGHTMAP_TOP_SOLID
	c HEIGHTMAP_WORLD_SURFACE
	d HEIGHTMAP_OCEAN_FLOOR
	e FULL_RANGE
	f RANGE_10_10
	g RANGE_8_8
	h RANGE_4_4
	i RANGE_BOTTOM_TO_MAX_TERRAIN_HEIGHT
	a ()Lnet/minecraft/world/level/levelgen/placement/PlacementFilter; isEmpty
	a (IFI)Lnet/minecraft/world/level/levelgen/placement/PlacementModifier; countExtra
	a (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; createKey
	a (Lnet/minecraft/core/Holder;[Lnet/minecraft/world/level/levelgen/placement/PlacementModifier;)Lnet/minecraft/core/Holder; inlinePlaced
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
	a (Lnet/minecraft/data/worldgen/BootstapContext;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/Holder;Ljava/util/List;)V register
	a (Lnet/minecraft/data/worldgen/BootstapContext;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/Holder;[Lnet/minecraft/world/level/levelgen/placement/PlacementModifier;)V register
	a (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/levelgen/placement/BlockPredicateFilter; filteredByBlockSurvival
	a (Lnet/minecraft/world/level/levelgen/feature/WorldGenerator;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureConfiguration;)Lnet/minecraft/core/Holder; onlyWhenEmpty
	a (Lnet/minecraft/world/level/levelgen/feature/WorldGenerator;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureConfiguration;Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;)Lnet/minecraft/core/Holder; filtered
	a (Lnet/minecraft/world/level/levelgen/feature/WorldGenerator;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureConfiguration;[Lnet/minecraft/world/level/levelgen/placement/PlacementModifier;)Lnet/minecraft/core/Holder; inlinePlaced
net/minecraft/data/worldgen/placement/TreePlacements net/minecraft/data/worldgen/placement/TreePlacements
	A FANCY_OAK_BEES_002
	B FANCY_OAK_BEES
	C CHERRY_BEES_005
	a CRIMSON_FUNGI
	b WARPED_FUNGI
	c OAK_CHECKED
	d DARK_OAK_CHECKED
	e BIRCH_CHECKED
	f ACACIA_CHECKED
	g SPRUCE_CHECKED
	h MANGROVE_CHECKED
	i CHERRY_CHECKED
	j PINE_ON_SNOW
	k SPRUCE_ON_SNOW
	l PINE_CHECKED
	m JUNGLE_TREE_CHECKED
	n FANCY_OAK_CHECKED
	o MEGA_JUNGLE_TREE_CHECKED
	p MEGA_SPRUCE_CHECKED
	q MEGA_PINE_CHECKED
	r TALL_MANGROVE_CHECKED
	s JUNGLE_BUSH
	t SUPER_BIRCH_BEES_0002
	u SUPER_BIRCH_BEES
	v OAK_BEES_0002
	w OAK_BEES_002
	x BIRCH_BEES_0002_PLACED
	y BIRCH_BEES_002
	z FANCY_OAK_BEES_0002
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/placement/VegetationPlacements net/minecraft/data/worldgen/placement/VegetationPlacements
	A PATCH_CACTUS_DECORATED
	B PATCH_SUGAR_CANE_SWAMP
	C PATCH_SUGAR_CANE_DESERT
	D PATCH_SUGAR_CANE_BADLANDS
	E PATCH_SUGAR_CANE
	F BROWN_MUSHROOM_NETHER
	G RED_MUSHROOM_NETHER
	H BROWN_MUSHROOM_NORMAL
	I RED_MUSHROOM_NORMAL
	J BROWN_MUSHROOM_TAIGA
	K RED_MUSHROOM_TAIGA
	L BROWN_MUSHROOM_OLD_GROWTH
	M RED_MUSHROOM_OLD_GROWTH
	N BROWN_MUSHROOM_SWAMP
	O RED_MUSHROOM_SWAMP
	P FLOWER_WARM
	Q FLOWER_DEFAULT
	R FLOWER_FLOWER_FOREST
	S FLOWER_SWAMP
	T FLOWER_PLAINS
	U FLOWER_MEADOW
	V FLOWER_CHERRY
	W TREES_PLAINS
	X DARK_FOREST_VEGETATION
	Y FLOWER_FOREST_FLOWERS
	Z FOREST_FLOWERS
	a BAMBOO_LIGHT
	aa TREES_FLOWER_FOREST
	ab TREES_MEADOW
	ac TREES_CHERRY
	ad TREES_TAIGA
	ae TREES_GROVE
	af TREES_BADLANDS
	ag TREES_SNOWY
	ah TREES_SWAMP
	ai TREES_WINDSWEPT_SAVANNA
	aj TREES_SAVANNA
	ak BIRCH_TALL
	al TREES_BIRCH
	am TREES_WINDSWEPT_FOREST
	an TREES_WINDSWEPT_HILLS
	ao TREES_WATER
	ap TREES_BIRCH_AND_OAK
	aq TREES_SPARSE_JUNGLE
	ar TREES_OLD_GROWTH_SPRUCE_TAIGA
	as TREES_OLD_GROWTH_PINE_TAIGA
	at TREES_JUNGLE
	au BAMBOO_VEGETATION
	av MUSHROOM_ISLAND_VEGETATION
	aw TREES_MANGROVE
	ax TREE_THRESHOLD
	b BAMBOO
	c VINES
	d PATCH_SUNFLOWER
	e PATCH_PUMPKIN
	f PATCH_GRASS_PLAIN
	g PATCH_GRASS_FOREST
	h PATCH_GRASS_BADLANDS
	i PATCH_GRASS_SAVANNA
	j PATCH_GRASS_NORMAL
	k PATCH_GRASS_TAIGA_2
	l PATCH_GRASS_TAIGA
	m PATCH_GRASS_JUNGLE
	n GRASS_BONEMEAL
	o PATCH_DEAD_BUSH_2
	p PATCH_DEAD_BUSH
	q PATCH_DEAD_BUSH_BADLANDS
	r PATCH_MELON
	s PATCH_MELON_SPARSE
	t PATCH_BERRY_COMMON
	u PATCH_BERRY_RARE
	v PATCH_WATERLILY
	w PATCH_TALL_GRASS_2
	x PATCH_TALL_GRASS
	y PATCH_LARGE_FERN
	z PATCH_CACTUS_DESERT
	a (I)Ljava/util/List; worldSurfaceSquaredWithCount
	a (ILnet/minecraft/world/level/levelgen/placement/PlacementModifier;)Ljava/util/List; getMushroomPlacement
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
	a (Lnet/minecraft/world/level/levelgen/placement/PlacementModifier;)Ljava/util/List; treePlacement
	a (Lnet/minecraft/world/level/levelgen/placement/PlacementModifier;Lnet/minecraft/world/level/block/Block;)Ljava/util/List; treePlacement
	b (Lnet/minecraft/world/level/levelgen/placement/PlacementModifier;)Lcom/google/common/collect/ImmutableList$Builder; treePlacementBase
net/minecraft/data/worldgen/placement/VillagePlacements net/minecraft/data/worldgen/placement/VillagePlacements
	a PILE_HAY_VILLAGE
	b PILE_MELON_VILLAGE
	c PILE_SNOW_VILLAGE
	d PILE_ICE_VILLAGE
	e PILE_PUMPKIN_VILLAGE
	f OAK_VILLAGE
	g ACACIA_VILLAGE
	h SPRUCE_VILLAGE
	i PINE_VILLAGE
	j PATCH_CACTUS_VILLAGE
	k FLOWER_PLAIN_VILLAGE
	l PATCH_TAIGA_GRASS_VILLAGE
	m PATCH_BERRY_BUSH_VILLAGE
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/gametest/framework/GlobalTestReporter net/minecraft/gametest/framework/GlobalTestReporter
	a DELEGATE
	a ()V finish
	a (Lnet/minecraft/gametest/framework/GameTestHarnessITestReporter;)V replaceWith
	a (Lnet/minecraft/gametest/framework/GameTestHarnessInfo;)V onTestFailed
	b (Lnet/minecraft/gametest/framework/GameTestHarnessInfo;)V onTestSuccess
net/minecraft/gametest/framework/ReportGameListener net/minecraft/gametest/framework/ReportGameListener
	a attempts
	b successes
	c originalTestInfo
	d testTicker
	e structurePos
	a ()V rerunTest
	a (Ljava/lang/String;ZLjava/lang/String;)Lnet/minecraft/world/item/ItemStack; createBook
	a (Lnet/minecraft/gametest/framework/GameTestHarnessInfo;)V testStructureLoaded
	a (Lnet/minecraft/gametest/framework/GameTestHarnessInfo;Ljava/lang/String;)V reportPassed
	a (Lnet/minecraft/gametest/framework/GameTestHarnessInfo;Ljava/lang/Throwable;)V reportFailure
	a (Lnet/minecraft/gametest/framework/GameTestHarnessInfo;Lnet/minecraft/world/level/block/Block;)V spawnBeacon
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/EnumChatFormat;Ljava/lang/String;)V say
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Ljava/lang/String;)V showRedBox
	b (Lnet/minecraft/gametest/framework/GameTestHarnessInfo;)V testPassed
	b (Lnet/minecraft/gametest/framework/GameTestHarnessInfo;Ljava/lang/String;)V visualizePassedTest
	b (Lnet/minecraft/gametest/framework/GameTestHarnessInfo;Ljava/lang/Throwable;)V visualizeFailedTest
	c (Lnet/minecraft/gametest/framework/GameTestHarnessInfo;)V testFailed
	c (Lnet/minecraft/gametest/framework/GameTestHarnessInfo;Ljava/lang/String;)V spawnLectern
net/minecraft/nbt/SnbtPrinterTagVisitor net/minecraft/nbt/SnbtPrinterTagVisitor
	a KEY_ORDER
	b NO_INDENTATION
	c SIMPLE_VALUE
	d NAME_VALUE_SEPARATOR
	e ELEMENT_SEPARATOR
	f LIST_OPEN
	g LIST_CLOSE
	h LIST_TYPE_SEPARATOR
	i ELEMENT_SPACING
	j STRUCT_OPEN
	k STRUCT_CLOSE
	l NEWLINE
	m indentation
	n depth
	o path
	p result
	a ()Ljava/lang/String; pathString
	a (Ljava/lang/String;)Ljava/lang/String; handleEscapePretty
	a (Lnet/minecraft/nbt/NBTBase;)Ljava/lang/String; visit
	a (Lnet/minecraft/nbt/NBTTagByte;)V visitByte
	a (Lnet/minecraft/nbt/NBTTagByteArray;)V visitByteArray
	a (Lnet/minecraft/nbt/NBTTagCompound;)V visitCompound
	a (Lnet/minecraft/nbt/NBTTagDouble;)V visitDouble
	a (Lnet/minecraft/nbt/NBTTagEnd;)V visitEnd
	a (Lnet/minecraft/nbt/NBTTagFloat;)V visitFloat
	a (Lnet/minecraft/nbt/NBTTagInt;)V visitInt
	a (Lnet/minecraft/nbt/NBTTagIntArray;)V visitIntArray
	a (Lnet/minecraft/nbt/NBTTagList;)V visitList
	a (Lnet/minecraft/nbt/NBTTagLong;)V visitLong
	a (Lnet/minecraft/nbt/NBTTagLongArray;)V visitLongArray
	a (Lnet/minecraft/nbt/NBTTagShort;)V visitShort
	a (Lnet/minecraft/nbt/NBTTagString;)V visitString
	b ()V popPath
	b (Ljava/lang/String;)V pushPath
	b (Lnet/minecraft/nbt/NBTTagCompound;)Ljava/util/List; getKeys
net/minecraft/nbt/StringTagVisitor net/minecraft/nbt/StringTagVisitor
	a SIMPLE_VALUE
	b builder
	a (Ljava/lang/String;)Ljava/lang/String; handleEscape
	a (Lnet/minecraft/nbt/NBTBase;)Ljava/lang/String; visit
	a (Lnet/minecraft/nbt/NBTTagByte;)V visitByte
	a (Lnet/minecraft/nbt/NBTTagByteArray;)V visitByteArray
	a (Lnet/minecraft/nbt/NBTTagCompound;)V visitCompound
	a (Lnet/minecraft/nbt/NBTTagDouble;)V visitDouble
	a (Lnet/minecraft/nbt/NBTTagEnd;)V visitEnd
	a (Lnet/minecraft/nbt/NBTTagFloat;)V visitFloat
	a (Lnet/minecraft/nbt/NBTTagInt;)V visitInt
	a (Lnet/minecraft/nbt/NBTTagIntArray;)V visitIntArray
	a (Lnet/minecraft/nbt/NBTTagList;)V visitList
	a (Lnet/minecraft/nbt/NBTTagLong;)V visitLong
	a (Lnet/minecraft/nbt/NBTTagLongArray;)V visitLongArray
	a (Lnet/minecraft/nbt/NBTTagShort;)V visitShort
	a (Lnet/minecraft/nbt/NBTTagString;)V visitString
net/minecraft/nbt/TextComponentTagVisitor net/minecraft/nbt/TextComponentTagVisitor
	a LOGGER
	b INLINE_LIST_THRESHOLD
	c INLINE_ELEMENT_TYPES
	d SYNTAX_HIGHLIGHTING_KEY
	e SYNTAX_HIGHLIGHTING_STRING
	f SYNTAX_HIGHLIGHTING_NUMBER
	g SYNTAX_HIGHLIGHTING_NUMBER_TYPE
	h SIMPLE_VALUE
	i NAME_VALUE_SEPARATOR
	j ELEMENT_SEPARATOR
	k LIST_OPEN
	l LIST_CLOSE
	m LIST_TYPE_SEPARATOR
	n ELEMENT_SPACING
	o STRUCT_OPEN
	p STRUCT_CLOSE
	q NEWLINE
	r indentation
	s depth
	t result
	a (Ljava/lang/String;)Lnet/minecraft/network/chat/IChatBaseComponent; handleEscapePretty
	a (Lnet/minecraft/nbt/NBTBase;)Lnet/minecraft/network/chat/IChatBaseComponent; visit
	a (Lnet/minecraft/nbt/NBTTagByte;)V visitByte
	a (Lnet/minecraft/nbt/NBTTagByteArray;)V visitByteArray
	a (Lnet/minecraft/nbt/NBTTagCompound;)V visitCompound
	a (Lnet/minecraft/nbt/NBTTagDouble;)V visitDouble
	a (Lnet/minecraft/nbt/NBTTagEnd;)V visitEnd
	a (Lnet/minecraft/nbt/NBTTagFloat;)V visitFloat
	a (Lnet/minecraft/nbt/NBTTagInt;)V visitInt
	a (Lnet/minecraft/nbt/NBTTagIntArray;)V visitIntArray
	a (Lnet/minecraft/nbt/NBTTagList;)V visitList
	a (Lnet/minecraft/nbt/NBTTagLong;)V visitLong
	a (Lnet/minecraft/nbt/NBTTagLongArray;)V visitLongArray
	a (Lnet/minecraft/nbt/NBTTagShort;)V visitShort
	a (Lnet/minecraft/nbt/NBTTagString;)V visitString
net/minecraft/nbt/visitors/CollectFields net/minecraft/nbt/visitors/CollectFields
	a fieldsToGetCount
	b wantedTypes
	c stack
	a (Lnet/minecraft/nbt/NBTTagType;)Lru$a; visitEntry
	a (Lnet/minecraft/nbt/NBTTagType;Ljava/lang/String;)Lru$a; visitEntry
	b ()Lru$b; visitContainerEnd
	b (Lnet/minecraft/nbt/NBTTagType;)Lru$b; visitRootEntry
	c ()I getMissingFieldCount
net/minecraft/nbt/visitors/CollectToTag net/minecraft/nbt/visitors/CollectToTag
	a lastId
	b rootTag
	c consumerStack
	a ()Lru$b; visitEnd
	a (B)Lru$b; visit
	a (D)Lru$b; visit
	a (F)Lru$b; visit
	a (I)Lru$b; visit
	a (J)Lru$b; visit
	a (Ljava/lang/String;)Lru$b; visit
	a (Lnet/minecraft/nbt/NBTBase;)V appendEntry
	a (Lnet/minecraft/nbt/NBTTagType;)Lru$a; visitEntry
	a (Lnet/minecraft/nbt/NBTTagType;I)Lru$b; visitList
	a (Lnet/minecraft/nbt/NBTTagType;Ljava/lang/String;)Lru$a; visitEntry
	a (S)Lru$b; visit
	a ([B)Lru$b; visit
	a ([I)Lru$b; visit
	a ([J)Lru$b; visit
	b ()Lru$b; visitContainerEnd
	b (Lnet/minecraft/nbt/NBTTagType;)Lru$b; visitRootEntry
	b (Lnet/minecraft/nbt/NBTTagType;I)Lru$a; visitElement
	c (Lnet/minecraft/nbt/NBTTagType;)V enterContainerIfNeeded
	d ()Lnet/minecraft/nbt/NBTBase; getResult
	e ()I depth
net/minecraft/nbt/visitors/FieldSelector net/minecraft/nbt/visitors/FieldSelector
	a path
	b type
	c name
	a ()Ljava/util/List; path
	b ()Lnet/minecraft/nbt/NBTTagType; type
	c ()Ljava/lang/String; name
net/minecraft/nbt/visitors/FieldTree net/minecraft/nbt/visitors/FieldTree
	a depth
	b selectedFields
	c fieldsToRecurse
	a ()Lnet/minecraft/nbt/visitors/FieldTree; createRoot
	a (Lnet/minecraft/nbt/NBTTagType;Ljava/lang/String;)Z isSelected
	a (Lnet/minecraft/nbt/visitors/FieldSelector;)V addEntry
	b ()I depth
	c ()Ljava/util/Map; selectedFields
	d ()Ljava/util/Map; fieldsToRecurse
net/minecraft/nbt/visitors/SkipFields net/minecraft/nbt/visitors/SkipFields
	a stack
	a (Lnet/minecraft/nbt/NBTTagType;Ljava/lang/String;)Lru$a; visitEntry
	b ()Lru$b; visitContainerEnd
net/minecraft/network/PacketBundlePacker net/minecraft/network/PacketBundlePacker
	a currentBundler
	b infoForCurrentBundler
	c flow
	a (Lio/netty/channel/ChannelHandlerContext;Lnet/minecraft/network/protocol/Packet;Ljava/util/List;)V decode
net/minecraft/network/PacketBundleUnpacker net/minecraft/network/PacketBundleUnpacker
	a flow
	a (Lio/netty/channel/ChannelHandlerContext;Lnet/minecraft/network/protocol/Packet;Ljava/util/List;)V encode
net/minecraft/network/PacketDecoder net/minecraft/network/PacketDecoder
	a LOGGER
	b flow
net/minecraft/network/PacketEncoder net/minecraft/network/PacketEncoder
	a LOGGER
	b flow
	a (Lio/netty/channel/ChannelHandlerContext;Lnet/minecraft/network/protocol/Packet;Lio/netty/buffer/ByteBuf;)V encode
net/minecraft/network/chat/ChatDecorator net/minecraft/network/chat/ChatDecorator
	a PLAIN
net/minecraft/network/chat/CommonComponents net/minecraft/network/chat/CommonComponents
	a EMPTY
	b OPTION_ON
	c OPTION_OFF
	d GUI_DONE
	e GUI_CANCEL
	f GUI_YES
	g GUI_NO
	h GUI_PROCEED
	i GUI_CONTINUE
	j GUI_BACK
	k GUI_TO_TITLE
	l GUI_ACKNOWLEDGE
	m CONNECT_FAILED
	n NEW_LINE
	o NARRATION_SEPARATOR
	p ELLIPSIS
	q SPACE
	a ()Lnet/minecraft/network/chat/IChatMutableComponent; space
	a (J)Lnet/minecraft/network/chat/IChatMutableComponent; days
	a (Ljava/util/Collection;)Lnet/minecraft/network/chat/IChatBaseComponent; joinLines
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Lnet/minecraft/network/chat/IChatBaseComponent;)Lnet/minecraft/network/chat/IChatMutableComponent; optionNameValue
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Z)Lnet/minecraft/network/chat/IChatMutableComponent; optionStatus
	a (Z)Lnet/minecraft/network/chat/IChatBaseComponent; optionStatus
	a ([Lnet/minecraft/network/chat/IChatBaseComponent;)Lnet/minecraft/network/chat/IChatMutableComponent; joinForNarration
	b (J)Lnet/minecraft/network/chat/IChatMutableComponent; hours
	b ([Lnet/minecraft/network/chat/IChatBaseComponent;)Lnet/minecraft/network/chat/IChatBaseComponent; joinLines
	c (J)Lnet/minecraft/network/chat/IChatMutableComponent; minutes
net/minecraft/network/chat/ComponentContents net/minecraft/network/chat/ComponentContents
	a EMPTY
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/network/chat/IChatMutableComponent; resolve
	a (Ltn$a;)Ljava/util/Optional; visit
	a (Ltn$b;Lnet/minecraft/network/chat/ChatModifier;)Ljava/util/Optional; visit
net/minecraft/network/chat/FilterMask net/minecraft/network/chat/FilterMask
	a CODEC
	b FULLY_FILTERED
	c PASS_THROUGH
	d FILTERED_STYLE
	e PASS_THROUGH_CODEC
	f FULLY_FILTERED_CODEC
	g PARTIALLY_FILTERED_CODEC
	h HASH
	i mask
	j type
	a ()Z isEmpty
	a (I)V setFiltered
	a (Ljava/lang/String;)Ljava/lang/String; apply
	a (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/network/chat/FilterMask; read
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/network/chat/FilterMask;)V write
	b ()Z isFullyFiltered
	b (Ljava/lang/String;)Lnet/minecraft/network/chat/IChatBaseComponent; applyWithFormatting
	c ()Ltm$a; type
	d ()Ljava/util/BitSet; mask
net/minecraft/network/chat/LastSeenMessages net/minecraft/network/chat/LastSeenMessages
	a CODEC
	b EMPTY
	c LAST_SEEN_MESSAGES_MAX_LENGTH
	d entries
	a ()Ljava/util/List; entries
	a (Lapr$a;)V updateSignature
	a (Lnet/minecraft/network/chat/MessageSignatureCache;)Ltp$a; pack
net/minecraft/network/chat/LastSeenMessagesValidator net/minecraft/network/chat/LastSeenMessagesValidator
	a lastSeenCount
	b trackedMessages
	c lastPendingMessage
	a ()I trackedMessagesCount
	a (I)Z applyOffset
	a (Lnet/minecraft/network/chat/MessageSignature;)V addPending
	a (Ltp$b;)Ljava/util/Optional; applyUpdate
net/minecraft/network/chat/LastSeenTrackedEntry net/minecraft/network/chat/LastSeenTrackedEntry
	a signature
	b pending
	a ()Lnet/minecraft/network/chat/LastSeenTrackedEntry; acknowledge
	b ()Lnet/minecraft/network/chat/MessageSignature; signature
	c ()Z pending
net/minecraft/network/chat/MessageSignature net/minecraft/network/chat/MessageSignature
	a CODEC
	b BYTES
	c bytes
	a ()Ljava/nio/ByteBuffer; asByteBuffer
	a (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/network/chat/MessageSignature; read
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/network/chat/MessageSignature;)V write
	a (Lnet/minecraft/network/chat/MessageSignatureCache;)Ltu$a; pack
	a (Lnet/minecraft/util/SignatureValidator;Lnet/minecraft/util/SignatureUpdater;)Z verify
	b ()[B bytes
net/minecraft/network/chat/MessageSignatureCache net/minecraft/network/chat/MessageSignatureCache
	a NOT_FOUND
	b DEFAULT_CAPACITY
	c entries
	a ()Lnet/minecraft/network/chat/MessageSignatureCache; createDefault
	a (I)Lnet/minecraft/network/chat/MessageSignature; unpack
	a (Ljava/util/ArrayDeque;)V push
	a (Ljava/util/List;)V push
	a (Lnet/minecraft/network/chat/MessageSignature;)I pack
	a (Lnet/minecraft/network/chat/PlayerChatMessage;)V push
net/minecraft/network/chat/PlayerChatMessage net/minecraft/network/chat/PlayerChatMessage
	a MAP_CODEC
	b MESSAGE_EXPIRES_AFTER_SERVER
	c MESSAGE_EXPIRES_AFTER_CLIENT
	d link
	e signature
	f signedBody
	g unsignedContent
	h filterMask
	i SYSTEM_SENDER
	a ()Lnet/minecraft/network/chat/PlayerChatMessage; removeUnsignedContent
	a (Lapr$a;Lnet/minecraft/network/chat/SignedMessageLink;Lnet/minecraft/network/chat/SignedMessageBody;)V updateSignature
	a (Ljava/lang/String;)Lnet/minecraft/network/chat/PlayerChatMessage; system
	a (Ljava/time/Instant;)Z hasExpiredServer
	a (Ljava/util/UUID;)Z hasSignatureFrom
	a (Ljava/util/UUID;Ljava/lang/String;)Lnet/minecraft/network/chat/PlayerChatMessage; unsigned
	a (Lnet/minecraft/network/chat/FilterMask;)Lnet/minecraft/network/chat/PlayerChatMessage; filter
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)Lnet/minecraft/network/chat/PlayerChatMessage; withUnsignedContent
	a (Lnet/minecraft/util/SignatureValidator;)Z verify
	a (Z)Lnet/minecraft/network/chat/PlayerChatMessage; filter
	b ()Ljava/lang/String; signedContent
	b (Ljava/time/Instant;)Z hasExpiredClient
	c ()Lnet/minecraft/network/chat/IChatBaseComponent; decoratedContent
	d ()Ljava/time/Instant; timeStamp
	e ()J salt
	f ()Ljava/util/UUID; sender
	g ()Z isSystem
	h ()Z hasSignature
	i ()Z isFullyFiltered
	j ()Lnet/minecraft/network/chat/SignedMessageLink; link
	k ()Lnet/minecraft/network/chat/MessageSignature; signature
	l ()Lnet/minecraft/network/chat/SignedMessageBody; signedBody
	m ()Lnet/minecraft/network/chat/IChatBaseComponent; unsignedContent
	n ()Lnet/minecraft/network/chat/FilterMask; filterMask
net/minecraft/network/chat/RemoteChatSession net/minecraft/network/chat/RemoteChatSession
	a sessionId
	b profilePublicKey
	a ()Lnet/minecraft/network/chat/SignedMessageValidator; createMessageValidator
	a (Ljava/util/UUID;)Luc$b; createMessageDecoder
	b ()Ltz$a; asData
	c ()Ljava/util/UUID; sessionId
	d ()Lnet/minecraft/world/entity/player/ProfilePublicKey; profilePublicKey
net/minecraft/network/chat/SignableCommand net/minecraft/network/chat/SignableCommand
	a arguments
	a ()Ljava/util/List; arguments
	a (Lcom/mojang/brigadier/ParseResults;)Lnet/minecraft/network/chat/SignableCommand; of
	a (Ljava/lang/String;Lcom/mojang/brigadier/context/CommandContextBuilder;)Ljava/util/List; collectArguments
net/minecraft/network/chat/SignedMessageBody net/minecraft/network/chat/SignedMessageBody
	a MAP_CODEC
	b content
	c timeStamp
	d salt
	e lastSeen
	a ()Ljava/lang/String; content
	a (Lapr$a;)V updateSignature
	a (Ljava/lang/String;)Lnet/minecraft/network/chat/SignedMessageBody; unsigned
	a (Lnet/minecraft/network/chat/MessageSignatureCache;)Lub$a; pack
	b ()Ljava/time/Instant; timeStamp
	c ()J salt
	d ()Lnet/minecraft/network/chat/LastSeenMessages; lastSeen
net/minecraft/network/chat/SignedMessageChain net/minecraft/network/chat/SignedMessageChain
	a LOGGER
	b nextLink
	a ()Lnet/minecraft/network/chat/SignedMessageLink; advanceLink
	a (Lnet/minecraft/util/Signer;)Luc$c; encoder
	a (Lnet/minecraft/world/entity/player/ProfilePublicKey;)Luc$b; decoder
net/minecraft/network/chat/SignedMessageLink net/minecraft/network/chat/SignedMessageLink
	a CODEC
	b index
	c sender
	d sessionId
	a ()Lnet/minecraft/network/chat/SignedMessageLink; advance
	a (Lapr$a;)V updateSignature
	a (Ljava/util/UUID;)Lnet/minecraft/network/chat/SignedMessageLink; unsigned
	a (Ljava/util/UUID;Ljava/util/UUID;)Lnet/minecraft/network/chat/SignedMessageLink; root
	a (Lnet/minecraft/network/chat/SignedMessageLink;)Z isDescendantOf
	b ()I index
	c ()Ljava/util/UUID; sender
	d ()Ljava/util/UUID; sessionId
net/minecraft/network/chat/SignedMessageValidator net/minecraft/network/chat/SignedMessageValidator
	a ACCEPT_UNSIGNED
	b REJECT_ALL
net/minecraft/network/chat/ThrowingComponent net/minecraft/network/chat/ThrowingComponent
	a component
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; getComponent
net/minecraft/network/chat/contents/BlockDataSource net/minecraft/network/chat/contents/BlockDataSource
	a posPattern
	b compiledPos
	a ()Ljava/lang/String; posPattern
	a (Ljava/lang/String;)Lnet/minecraft/commands/arguments/coordinates/IVectorPosition; compilePos
	b ()Lnet/minecraft/commands/arguments/coordinates/IVectorPosition; compiledPos
net/minecraft/network/chat/contents/EntityDataSource net/minecraft/network/chat/contents/EntityDataSource
	a selectorPattern
	b compiledSelector
	a ()Ljava/lang/String; selectorPattern
	a (Ljava/lang/String;)Lnet/minecraft/commands/arguments/selector/EntitySelector; compileSelector
	b ()Lnet/minecraft/commands/arguments/selector/EntitySelector; compiledSelector
net/minecraft/network/chat/contents/KeybindContents net/minecraft/network/chat/contents/KeybindContents
	b name
	c nameResolver
	a ()Ljava/lang/String; getName
	a (Ltn$a;)Ljava/util/Optional; visit
	a (Ltn$b;Lnet/minecraft/network/chat/ChatModifier;)Ljava/util/Optional; visit
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; getNestedComponent
net/minecraft/network/chat/contents/KeybindResolver net/minecraft/network/chat/contents/KeybindResolver
	a keyResolver
	a (Ljava/util/function/Function;)V setKeyResolver
net/minecraft/network/chat/contents/LiteralContents net/minecraft/network/chat/contents/LiteralContents
	b text
	a ()Ljava/lang/String; text
	a (Ltn$a;)Ljava/util/Optional; visit
	a (Ltn$b;Lnet/minecraft/network/chat/ChatModifier;)Ljava/util/Optional; visit
net/minecraft/network/chat/contents/NbtContents net/minecraft/network/chat/contents/NbtContents
	b compiledNbtPath
	c LOGGER
	d interpreting
	e separator
	f nbtPathPattern
	g dataSource
	a ()Ljava/lang/String; getNbtPath
	a (Ljava/lang/String;)Leg$g; compileNbtPath
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/network/chat/IChatMutableComponent; resolve
	b ()Z isInterpreting
	c ()Ljava/util/Optional; getSeparator
	d ()Lnet/minecraft/network/chat/contents/DataSource; getDataSource
net/minecraft/network/chat/contents/ScoreContents net/minecraft/network/chat/contents/ScoreContents
	b SCORER_PLACEHOLDER
	c name
	d selector
	e objective
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lnet/minecraft/commands/arguments/selector/EntitySelector; parseSelector
	a (Ljava/lang/String;Lnet/minecraft/commands/CommandListenerWrapper;)Ljava/lang/String; getScore
	a (Lnet/minecraft/commands/CommandListenerWrapper;)Ljava/lang/String; findTargetName
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/network/chat/IChatMutableComponent; resolve
	b ()Lnet/minecraft/commands/arguments/selector/EntitySelector; getSelector
	c ()Ljava/lang/String; getObjective
net/minecraft/network/chat/contents/SelectorContents net/minecraft/network/chat/contents/SelectorContents
	b separator
	c LOGGER
	d pattern
	e selector
	a ()Ljava/lang/String; getPattern
	a (Ljava/lang/String;)Lnet/minecraft/commands/arguments/selector/EntitySelector; parseSelector
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/network/chat/IChatMutableComponent; resolve
	a (Ltn$a;)Ljava/util/Optional; visit
	a (Ltn$b;Lnet/minecraft/network/chat/ChatModifier;)Ljava/util/Optional; visit
	b ()Lnet/minecraft/commands/arguments/selector/EntitySelector; getSelector
	c ()Ljava/util/Optional; getSeparator
net/minecraft/network/chat/contents/StorageDataSource net/minecraft/network/chat/contents/StorageDataSource
	a id
	a ()Lnet/minecraft/resources/MinecraftKey; id
net/minecraft/network/chat/contents/TranslatableContents net/minecraft/network/chat/contents/TranslatableContents
	b NO_ARGS
	c TEXT_PERCENT
	d TEXT_NULL
	e key
	f fallback
	g args
	h decomposedWith
	i decomposedParts
	j FORMAT_PATTERN
	a ()Ljava/lang/String; getKey
	a (I)Lnet/minecraft/network/chat/IChatFormatted; getArgument
	a (Ljava/lang/String;Ljava/util/function/Consumer;)V decomposeTemplate
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/network/chat/IChatMutableComponent; resolve
	a (Ltn$a;)Ljava/util/Optional; visit
	a (Ltn$b;Lnet/minecraft/network/chat/ChatModifier;)Ljava/util/Optional; visit
	b ()Ljava/lang/String; getFallback
	c ()[Ljava/lang/Object; getArgs
	d ()V decompose
net/minecraft/network/protocol/BundlePacket net/minecraft/network/protocol/BundlePacket
	a packets
	a ()Ljava/lang/Iterable; subPackets
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
net/minecraft/network/protocol/BundlerInfo net/minecraft/network/protocol/BundlerInfo
	a BUNDLER_PROVIDER
	b BUNDLE_SIZE_LIMIT
	c EMPTY
	a (Ljava/lang/Class;Ljava/util/function/Function;Lnet/minecraft/network/protocol/BundleDelimiterPacket;)Lnet/minecraft/network/protocol/BundlerInfo; createForPacket
	a (Lnet/minecraft/network/protocol/Packet;)Lva$a; startPacketBundling
	a (Lnet/minecraft/network/protocol/Packet;Ljava/util/function/Consumer;)V unbundlePacket
net/minecraft/network/protocol/game/ClientboundBlockChangedAckPacket net/minecraft/network/protocol/game/ClientboundBlockChangedAckPacket
	a sequence
	a ()I sequence
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
net/minecraft/network/protocol/game/ClientboundChunksBiomesPacket net/minecraft/network/protocol/game/ClientboundChunksBiomesPacket
	a chunkBiomeData
	b TWO_MEGABYTES
	a ()Ljava/util/List; chunkBiomeData
	a (Ljava/util/List;)Lnet/minecraft/network/protocol/game/ClientboundChunksBiomesPacket; forChunks
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
net/minecraft/network/protocol/game/ClientboundClearTitlesPacket net/minecraft/network/protocol/game/ClientboundClearTitlesPacket
	a resetTimes
	a ()Z shouldResetTimes
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
net/minecraft/network/protocol/game/ClientboundCustomChatCompletionsPacket$Action net/minecraft/network/protocol/game/ClientboundCustomChatCompletionsPacket$Action
	a ADD
	b REMOVE
	c SET
	d $VALUES
	a ()[Lnet/minecraft/network/protocol/game/ClientboundCustomChatCompletionsPacket$Action; $values
net/minecraft/network/protocol/game/ClientboundCustomChatCompletionsPacket net/minecraft/network/protocol/game/ClientboundCustomChatCompletionsPacket
	a action
	b entries
	a ()Lnet/minecraft/network/protocol/game/ClientboundCustomChatCompletionsPacket$Action; action
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	c ()Ljava/util/List; entries
net/minecraft/network/protocol/game/ClientboundDamageEventPacket net/minecraft/network/protocol/game/ClientboundDamageEventPacket
	a entityId
	b sourceTypeId
	c sourceCauseId
	d sourceDirectId
	e sourcePosition
	a ()I entityId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketDataSerializer;I)V writeOptionalEntityId
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	a (Lnet/minecraft/world/level/World;)Lnet/minecraft/world/damagesource/DamageSource; getSource
	b (Lnet/minecraft/network/PacketDataSerializer;)I readOptionalEntityId
	c ()I sourceTypeId
	d ()I sourceCauseId
	e ()I sourceDirectId
	f ()Ljava/util/Optional; sourcePosition
net/minecraft/network/protocol/game/ClientboundDeleteChatPacket net/minecraft/network/protocol/game/ClientboundDeleteChatPacket
	a messageSignature
	a ()Ltu$a; messageSignature
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
net/minecraft/network/protocol/game/ClientboundDisguisedChatPacket net/minecraft/network/protocol/game/ClientboundDisguisedChatPacket
	a message
	b chatType
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; message
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	b ()Z isSkippable
	c ()Ltf$b; chatType
net/minecraft/network/protocol/game/ClientboundHurtAnimationPacket net/minecraft/network/protocol/game/ClientboundHurtAnimationPacket
	a id
	b yaw
	a ()I id
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	c ()F yaw
net/minecraft/network/protocol/game/ClientboundInitializeBorderPacket net/minecraft/network/protocol/game/ClientboundInitializeBorderPacket
	a newCenterX
	b newCenterZ
	c oldSize
	d newSize
	e lerpTime
	f newAbsoluteMaxSize
	g warningBlocks
	h warningTime
	a ()D getNewCenterX
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	c ()D getNewCenterZ
	d ()D getNewSize
	e ()D getOldSize
	f ()J getLerpTime
	g ()I getNewAbsoluteMaxSize
	h ()I getWarningTime
	i ()I getWarningBlocks
net/minecraft/network/protocol/game/ClientboundLevelChunkPacketData net/minecraft/network/protocol/game/ClientboundLevelChunkPacketData
	a TWO_MEGABYTES
	b heightmaps
	c buffer
	d blockEntitiesData
	a ()Lnet/minecraft/network/PacketDataSerializer; getReadBuffer
	a (II)Ljava/util/function/Consumer; getBlockEntitiesTagsConsumer
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/world/level/chunk/Chunk;)V extractChunkData
	a (Lnet/minecraft/world/level/chunk/Chunk;)I calculateChunkSize
	a (Lwp$b;II)V getBlockEntitiesTags
	b ()Lnet/minecraft/nbt/NBTTagCompound; getHeightmaps
	c ()Lio/netty/buffer/ByteBuf; getWriteBuffer
net/minecraft/network/protocol/game/ClientboundLevelChunkWithLightPacket net/minecraft/network/protocol/game/ClientboundLevelChunkWithLightPacket
	a x
	b z
	c chunkData
	d lightData
	a ()I getX
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	c ()I getZ
	d ()Lnet/minecraft/network/protocol/game/ClientboundLevelChunkPacketData; getChunkData
	e ()Lnet/minecraft/network/protocol/game/ClientboundLightUpdatePacketData; getLightData
net/minecraft/network/protocol/game/ClientboundLightUpdatePacketData net/minecraft/network/protocol/game/ClientboundLightUpdatePacketData
	a skyYMask
	b blockYMask
	c emptySkyYMask
	d emptyBlockYMask
	e skyUpdates
	f blockUpdates
	g trustEdges
	a ()Ljava/util/BitSet; getSkyYMask
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/world/level/lighting/LightEngine;Lnet/minecraft/world/level/EnumSkyBlock;ILjava/util/BitSet;Ljava/util/BitSet;Ljava/util/List;)V prepareSectionData
	b ()Ljava/util/BitSet; getEmptySkyYMask
	c ()Ljava/util/List; getSkyUpdates
	d ()Ljava/util/BitSet; getBlockYMask
	e ()Ljava/util/BitSet; getEmptyBlockYMask
	f ()Ljava/util/List; getBlockUpdates
	g ()Z getTrustEdges
net/minecraft/network/protocol/game/ClientboundPingPacket net/minecraft/network/protocol/game/ClientboundPingPacket
	a id
	a ()I getId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
net/minecraft/network/protocol/game/ClientboundPlayerChatPacket net/minecraft/network/protocol/game/ClientboundPlayerChatPacket
	a sender
	b index
	c signature
	d body
	e unsignedContent
	f filterMask
	g chatType
	a ()Ljava/util/UUID; sender
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	b ()Z isSkippable
	c ()I index
	d ()Lnet/minecraft/network/chat/MessageSignature; signature
	e ()Lub$a; body
	f ()Lnet/minecraft/network/chat/IChatBaseComponent; unsignedContent
	g ()Lnet/minecraft/network/chat/FilterMask; filterMask
	h ()Ltf$b; chatType
net/minecraft/network/protocol/game/ClientboundPlayerCombatEndPacket net/minecraft/network/protocol/game/ClientboundPlayerCombatEndPacket
	a killerId
	b duration
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
net/minecraft/network/protocol/game/ClientboundPlayerCombatKillPacket net/minecraft/network/protocol/game/ClientboundPlayerCombatKillPacket
	a playerId
	b killerId
	c message
	a ()I getKillerId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	b ()Z isSkippable
	c ()I getPlayerId
	d ()Lnet/minecraft/network/chat/IChatBaseComponent; getMessage
net/minecraft/network/protocol/game/ClientboundPlayerInfoRemovePacket net/minecraft/network/protocol/game/ClientboundPlayerInfoRemovePacket
	a profileIds
	a ()Ljava/util/List; profileIds
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
net/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket net/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket
	a actions
	b entries
	a ()Ljava/util/EnumSet; actions
	a (Ljava/util/Collection;)Lnet/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket; createPlayerInitializing
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	c ()Ljava/util/List; entries
	d ()Ljava/util/List; newEntries
net/minecraft/network/protocol/game/ClientboundServerDataPacket net/minecraft/network/protocol/game/ClientboundServerDataPacket
	a motd
	b iconBytes
	c enforcesSecureChat
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getMotd
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	c ()Ljava/util/Optional; getIconBytes
	d ()Z enforcesSecureChat
net/minecraft/network/protocol/game/ClientboundSetActionBarTextPacket net/minecraft/network/protocol/game/ClientboundSetActionBarTextPacket
	a text
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getText
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
net/minecraft/network/protocol/game/ClientboundSetBorderCenterPacket net/minecraft/network/protocol/game/ClientboundSetBorderCenterPacket
	a newCenterX
	b newCenterZ
	a ()D getNewCenterZ
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	c ()D getNewCenterX
net/minecraft/network/protocol/game/ClientboundSetBorderLerpSizePacket net/minecraft/network/protocol/game/ClientboundSetBorderLerpSizePacket
	a oldSize
	b newSize
	c lerpTime
	a ()D getOldSize
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	c ()D getNewSize
	d ()J getLerpTime
net/minecraft/network/protocol/game/ClientboundSetBorderSizePacket net/minecraft/network/protocol/game/ClientboundSetBorderSizePacket
	a size
	a ()D getSize
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
net/minecraft/network/protocol/game/ClientboundSetBorderWarningDelayPacket net/minecraft/network/protocol/game/ClientboundSetBorderWarningDelayPacket
	a warningDelay
	a ()I getWarningDelay
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
net/minecraft/network/protocol/game/ClientboundSetBorderWarningDistancePacket net/minecraft/network/protocol/game/ClientboundSetBorderWarningDistancePacket
	a warningBlocks
	a ()I getWarningBlocks
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
net/minecraft/network/protocol/game/ClientboundSetSimulationDistancePacket net/minecraft/network/protocol/game/ClientboundSetSimulationDistancePacket
	a simulationDistance
	a ()I simulationDistance
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
net/minecraft/network/protocol/game/ClientboundSetSubtitleTextPacket net/minecraft/network/protocol/game/ClientboundSetSubtitleTextPacket
	a text
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getText
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
net/minecraft/network/protocol/game/ClientboundSetTitleTextPacket net/minecraft/network/protocol/game/ClientboundSetTitleTextPacket
	a text
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getText
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
net/minecraft/network/protocol/game/ClientboundSetTitlesAnimationPacket net/minecraft/network/protocol/game/ClientboundSetTitlesAnimationPacket
	a fadeIn
	b stay
	c fadeOut
	a ()I getFadeIn
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	c ()I getStay
	d ()I getFadeOut
net/minecraft/network/protocol/game/ClientboundSystemChatPacket net/minecraft/network/protocol/game/ClientboundSystemChatPacket
	a content
	b overlay
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; content
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
	b ()Z isSkippable
	c ()Z overlay
net/minecraft/network/protocol/game/ClientboundUpdateEnabledFeaturesPacket net/minecraft/network/protocol/game/ClientboundUpdateEnabledFeaturesPacket
	a features
	a ()Ljava/util/Set; features
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
net/minecraft/network/protocol/game/DebugEntityNameGenerator net/minecraft/network/protocol/game/DebugEntityNameGenerator
	a NAMES_FIRST_PART
	b NAMES_SECOND_PART
	a (Ljava/util/UUID;)Ljava/lang/String; getEntityName
	a (Lnet/minecraft/util/RandomSource;[Ljava/lang/String;)Ljava/lang/String; getRandomString
	a (Lnet/minecraft/world/entity/Entity;)Ljava/lang/String; getEntityName
	b (Ljava/util/UUID;)Lnet/minecraft/util/RandomSource; getRandom
net/minecraft/network/protocol/game/ServerboundChatAckPacket net/minecraft/network/protocol/game/ServerboundChatAckPacket
	a offset
	a ()I offset
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
net/minecraft/network/protocol/game/ServerboundChatCommandPacket net/minecraft/network/protocol/game/ServerboundChatCommandPacket
	a command
	b timeStamp
	c salt
	d argumentSignatures
	e lastSeenMessages
	a ()Ljava/lang/String; command
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
	c ()Ljava/time/Instant; timeStamp
	d ()J salt
	e ()Lnet/minecraft/commands/arguments/ArgumentSignatures; argumentSignatures
	f ()Ltp$b; lastSeenMessages
net/minecraft/network/protocol/game/ServerboundChatSessionUpdatePacket net/minecraft/network/protocol/game/ServerboundChatSessionUpdatePacket
	a chatSession
	a ()Ltz$a; chatSession
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
net/minecraft/network/protocol/game/ServerboundPongPacket net/minecraft/network/protocol/game/ServerboundPongPacket
	a id
	a ()I getId
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayIn;)V handle
net/minecraft/network/protocol/game/VecDeltaCodec net/minecraft/network/protocol/game/VecDeltaCodec
	a TRUNCATION_STEPS
	b base
	a (D)J encode
	a (J)D decode
	a (JJJ)Lnet/minecraft/world/phys/Vec3D; decode
	a (Lnet/minecraft/world/phys/Vec3D;)J encodeX
	b (Lnet/minecraft/world/phys/Vec3D;)J encodeY
	c (Lnet/minecraft/world/phys/Vec3D;)J encodeZ
	d (Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/phys/Vec3D; delta
	e (Lnet/minecraft/world/phys/Vec3D;)V setBase
net/minecraft/resources/FileToIdConverter net/minecraft/resources/FileToIdConverter
	a prefix
	b extension
	a (Ljava/lang/String;)Lnet/minecraft/resources/FileToIdConverter; json
	a (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/resources/MinecraftKey; idToFile
	a (Lnet/minecraft/server/packs/resources/IResourceManager;)Ljava/util/Map; listMatchingResources
	b (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/resources/MinecraftKey; fileToId
	b (Lnet/minecraft/server/packs/resources/IResourceManager;)Ljava/util/Map; listMatchingResourceStacks
net/minecraft/resources/HolderSetCodec net/minecraft/resources/HolderSetCodec
	a registryKey
	b elementCodec
	c homogenousListCodec
	d registryAwareCodec
	a (Lcom/mojang/serialization/Codec;Z)Lcom/mojang/serialization/Codec; homogenousList
	a (Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; decodeWithoutRegistry
	a (Lnet/minecraft/core/HolderSet;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; encode
	a (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Codec;Z)Lcom/mojang/serialization/Codec; create
	b (Lnet/minecraft/core/HolderSet;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; encodeWithoutRegistry
net/minecraft/resources/RegistryDataLoader net/minecraft/resources/RegistryDataLoader
	a WORLDGEN_REGISTRIES
	b DIMENSION_REGISTRIES
	c LOGGER
	a (Ladb$b;Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/IRegistryWritable;Lcom/mojang/serialization/Decoder;Ljava/util/Map;)V loadRegistryContents
	a (Ljava/util/Map;)V logErrors
	a (Lnet/minecraft/core/IRegistry;)Ladb$a; createInfoForContextRegistry
	a (Lnet/minecraft/core/IRegistryCustom;Ljava/util/List;)Ladb$b; createContext
	a (Lnet/minecraft/core/IRegistryWritable;)Ladb$a; createInfoForNewRegistry
	a (Lnet/minecraft/resources/MinecraftKey;)Ljava/lang/String; registryDirPath
	a (Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/core/IRegistryCustom;Ljava/util/List;)Lnet/minecraft/core/IRegistryCustom$Dimension; load
net/minecraft/resources/RegistryFileCodec net/minecraft/resources/RegistryFileCodec
	a registryKey
	b elementCodec
	c allowInline
	a (Lnet/minecraft/core/Holder;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; encode
	a (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Codec;)Lnet/minecraft/resources/RegistryFileCodec; create
	a (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Codec;Z)Lnet/minecraft/resources/RegistryFileCodec; create
net/minecraft/resources/RegistryFixedCodec net/minecraft/resources/RegistryFixedCodec
	a registryKey
	a (Lnet/minecraft/core/Holder;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; encode
	a (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/resources/RegistryFixedCodec; create
net/minecraft/resources/RegistryOps net/minecraft/resources/RegistryOps
	b lookupProvider
	a (Ladb$b;)Ladb$b; memoizeLookup
	a (Lcom/mojang/serialization/DynamicOps;Ladb$b;)Lnet/minecraft/resources/RegistryOps; create
	a (Lcom/mojang/serialization/DynamicOps;Lhf$b;)Lnet/minecraft/resources/RegistryOps; create
	a (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; owner
	b (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; getter
	c (Lnet/minecraft/resources/ResourceKey;)Lcom/mojang/serialization/codecs/RecordCodecBuilder; retrieveGetter
	d (Lnet/minecraft/resources/ResourceKey;)Lcom/mojang/serialization/codecs/RecordCodecBuilder; retrieveElement
net/minecraft/resources/ResourceKey net/minecraft/resources/ResourceKey
	a VALUES
	b registryName
	c location
	a ()Lnet/minecraft/resources/MinecraftKey; location
	a (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/resources/ResourceKey; createRegistryKey
	a (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/resources/ResourceKey; create
	a (Lnet/minecraft/resources/ResourceKey;)Lcom/mojang/serialization/Codec; codec
	a (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/resources/ResourceKey; create
	b ()Lnet/minecraft/resources/MinecraftKey; registry
	b (Lnet/minecraft/resources/ResourceKey;)Z isFor
	c (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; cast
net/minecraft/server/Main net/minecraft/server/Main
	a LOGGER
	a (Ljava/nio/file/Path;)V writePidFile
	a (Lnet/minecraft/server/dedicated/DedicatedServerProperties;Lnet/minecraft/world/level/storage/Convertable$ConversionSession;ZLnet/minecraft/server/packs/repository/ResourcePackRepository;)Ladw$c; loadOrCreateConfig
	a (Lnet/minecraft/world/level/storage/Convertable$ConversionSession;Lcom/mojang/datafixers/DataFixer;ZLjava/util/function/BooleanSupplier;Lnet/minecraft/core/IRegistry;)V forceUpgrade
net/minecraft/server/MinecraftServer$ReloadableResources net/minecraft/server/MinecraftServer$ReloadableResources
	a resourceManager
	b managers
	a ()Lnet/minecraft/server/packs/resources/IReloadableResourceManager; resourceManager
	b ()Lnet/minecraft/server/DataPackResources; managers
net/minecraft/server/MinecraftServer$ServerResourcePackInfo net/minecraft/server/MinecraftServer$ServerResourcePackInfo
	a url
	b hash
	c isRequired
	d prompt
	a ()Ljava/lang/String; url
	b ()Ljava/lang/String; hash
	c ()Z isRequired
	d ()Lnet/minecraft/network/chat/IChatBaseComponent; prompt
net/minecraft/server/MinecraftServer$TimeProfiler net/minecraft/server/MinecraftServer$TimeProfiler
	a startNanos
	b startTick
	a (JI)Lnet/minecraft/util/profiling/MethodProfilerResults; stop
net/minecraft/server/MinecraftServer net/minecraft/server/MinecraftServer
	A profiler
	B onMetricsRecordingStopped
	C onMetricsRecordingFinished
	D willStartRecordingMetrics
	E debugCommandProfiler
	F debugCommandProfilerDelayStart
	G connection
	H progressListenerFactory
	I status
	J statusIcon
	K random
	L fixerUpper
	M localIp
	N port
	O registries
	P levels
	Q playerList
	R running
	S stopped
	T tickCount
	U onlineMode
	V preventProxyConnections
	W pvp
	X allowFlight
	Y motd
	Z playerIdleTimeout
	aa keyPair
	ab singleplayerProfile
	ac isDemo
	ad isReady
	ae lastOverloadWarning
	af lastServerStatus
	ag serverThread
	ah nextTickTime
	ai delayedTasksMaxNextTickTime
	aj mayHaveDelayedTasks
	ak packRepository
	al scoreboard
	am commandStorage
	an customBossEvents
	ao functionManager
	ap frameTimer
	aq enforceWhitelist
	ar averageTickTime
	as executor
	at serverId
	au resources
	av structureTemplateManager
	aw isSaving
	b VANILLA_BRAND
	c MS_PER_TICK
	d START_CHUNK_RADIUS
	e ABSOLUTE_MAX_WORLD_SIZE
	f DEMO_SETTINGS
	g ANONYMOUS_PLAYER_PROFILE
	h storageSource
	i playerDataStorage
	j proxy
	k tickTimes
	l services
	m worldData
	n LOGGER
	o AVERAGE_TICK_TIME_SMOOTHING
	p TICK_STATS_SPAN
	q OVERLOADED_THRESHOLD
	r OVERLOADED_WARNING_INTERVAL
	s STATUS_EXPIRE_TIME_NS
	t MAX_STATUS_PLAYER_SAMPLE
	u START_TICKING_CHUNK_COUNT
	v AUTOSAVE_INTERVAL
	w MAX_TICK_LATENCY
	x DELAYED_TASKS_TICK_EXTENSION
	y tickables
	z metricsRecorder
	A ()V forceTimeSynchronization
	B ()Z isNetherEnabled
	C ()Z isShutdown
	D ()Lnet/minecraft/server/level/WorldServer; overworld
	E ()Ljava/util/Set; levelKeys
	F ()Ljava/lang/Iterable; getAllLevels
	G ()Ljava/lang/String; getServerVersion
	H ()I getPlayerCount
	I ()I getMaxPlayers
	J ()[Ljava/lang/String; getPlayerNames
	K ()Lnet/minecraft/util/ModCheck; getModdedStatus
	L ()Ljava/security/KeyPair; getKeyPair
	M ()I getPort
	M_ ()Z shouldInformAdmins
	N ()Lcom/mojang/authlib/GameProfile; getSingleplayerProfile
	O ()Z isSingleplayer
	P ()V initializeKeyPair
	Q ()Z isSpawningMonsters
	R ()Z isDemo
	S ()Ljava/util/Optional; getServerResourcePack
	T ()Z isResourcePackRequired
	U ()Z usesAuthentication
	V ()Z getPreventProxyConnections
	W ()Z isSpawningAnimals
	X ()Z areNpcsEnabled
	Y ()Z isPvpAllowed
	Z ()Z isFlightAllowed
	a (I)V setPort
	a (Lcom/mojang/authlib/GameProfile;)Z isSingleplayerOwner
	a (Ljava/lang/Runnable;)Lnet/minecraft/server/TickTask; wrapRunnable
	a (Ljava/lang/Throwable;)Lnet/minecraft/CrashReport; constructOrExtractCrashReport
	a (Ljava/nio/file/Path;)V dumpServerProperties
	a (Ljava/util/Collection;)Ljava/util/concurrent/CompletableFuture; reloadResources
	a (Ljava/util/function/BooleanSupplier;)V tickServer
	a (Ljava/util/function/Consumer;Ljava/util/function/Consumer;)V startRecordingMetrics
	a (Ljava/util/function/Function;)Lnet/minecraft/server/MinecraftServer; spin
	a (Lnet/minecraft/CrashReport;)V onServerCrash
	a (Lnet/minecraft/SystemReport;)Lnet/minecraft/SystemReport; fillServerSystemReport
	a (Lnet/minecraft/commands/CommandListenerWrapper;)V kickUnlistedPlayers
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V sendSystemMessage
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Ltf$a;Ljava/lang/String;)V logChatMessage
	a (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/server/level/WorldServer; getLevel
	a (Lnet/minecraft/server/TickTask;)Z shouldRun
	a (Lnet/minecraft/server/level/EntityPlayer;)Lnet/minecraft/server/network/ITextFilter; createTextFilterForPlayer
	a (Lnet/minecraft/server/level/WorldServer;)I getSpawnRadius
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;)Z isUnderSpawnProtection
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/storage/IWorldDataServer;ZZ)V setInitialSpawn
	a (Lnet/minecraft/server/level/progress/WorldLoadListener;)V createLevels
	a (Lnet/minecraft/server/packs/repository/ResourcePackRepository;)Lnet/minecraft/world/level/DataPackConfiguration; getSelectedPacks
	a (Lnet/minecraft/server/packs/repository/ResourcePackRepository;Lnet/minecraft/world/level/DataPackConfiguration;ZLnet/minecraft/world/flag/FeatureFlagSet;)Lnet/minecraft/world/level/WorldDataConfiguration; configurePackRepository
	a (Lnet/minecraft/server/players/PlayerList;)V setPlayerList
	a (Lnet/minecraft/world/EnumDifficulty;Z)V setDifficulty
	a (Lnet/minecraft/world/level/EnumGamemode;)V setDefaultGameType
	a (Lnet/minecraft/world/level/EnumGamemode;ZI)Z publishServer
	a (Lnet/minecraft/world/level/storage/SaveData;)V setupDebugLevel
	a (Lnet/minecraft/world/level/storage/SavedFile;)Ljava/nio/file/Path; getWorldPath
	a (Lnet/minecraft/world/level/storage/WorldPersistentData;)V readScoreboard
	a (Z)V halt
	a (ZZZ)Z saveAllChunks
	aA ()Lnet/minecraft/server/CustomFunctionData; getFunctions
	aB ()Lnet/minecraft/server/packs/repository/ResourcePackRepository; getPackRepository
	aC ()Lnet/minecraft/commands/CommandDispatcher; getCommands
	aD ()Lnet/minecraft/commands/CommandListenerWrapper; createCommandSourceStack
	aE ()Lnet/minecraft/world/item/crafting/CraftingManager; getRecipeManager
	aF ()Lnet/minecraft/server/ScoreboardServer; getScoreboard
	aG ()Lnet/minecraft/world/level/storage/PersistentCommandStorage; getCommandStorage
	aH ()Lnet/minecraft/world/level/storage/loot/LootTableRegistry; getLootTables
	aI ()Lnet/minecraft/world/level/storage/loot/LootPredicateManager; getPredicateManager
	aJ ()Lnet/minecraft/world/level/storage/loot/ItemModifierManager; getItemModifierManager
	aK ()Lnet/minecraft/world/level/GameRules; getGameRules
	aL ()Lnet/minecraft/server/bossevents/BossBattleCustomData; getCustomBossEvents
	aM ()Z isEnforceWhitelist
	aN ()F getAverageTickTime
	aO ()Lnet/minecraft/util/CircularTimer; getFrameTimer
	aP ()Lnet/minecraft/util/profiling/GameProfilerFiller; getProfiler
	aQ ()Z isRecordingMetrics
	aR ()V stopRecordingMetrics
	aS ()V finishRecordingMetrics
	aT ()V cancelRecordingMetrics
	aU ()Z forceSynchronousWrites
	aV ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager; getStructureManager
	aW ()Lnet/minecraft/world/level/storage/SaveData; getWorldData
	aX ()Lnet/minecraft/core/IRegistryCustom$Dimension; registryAccess
	aY ()Lnet/minecraft/core/LayeredRegistryAccess; registries
	aZ ()Lnet/minecraft/world/level/EnumGamemode; getForcedGameType
	a_ (Ljava/lang/String;)V setLocalIp
	aa ()Ljava/lang/String; getMotd
	ab ()Z isStopped
	ac ()Lnet/minecraft/server/players/PlayerList; getPlayerList
	ad ()Lnet/minecraft/server/network/ServerConnection; getConnection
	ae ()Z isReady
	af ()Z hasGui
	ag ()I getTickCount
	ah ()I getSpawnProtectionRadius
	ai ()Z repliesToStatus
	aj ()Z hidesOnlinePlayers
	ak ()Ljava/net/Proxy; getProxy
	al ()I getPlayerIdleTimeout
	am ()Lcom/mojang/authlib/minecraft/MinecraftSessionService; getSessionService
	an ()Lnet/minecraft/util/SignatureValidator; getServiceSignatureValidator
	ao ()Lcom/mojang/authlib/GameProfileRepository; getProfileRepository
	ap ()Lnet/minecraft/server/players/UserCache; getProfileCache
	aq ()Lnet/minecraft/network/protocol/status/ServerPing; getStatus
	ar ()V invalidateStatus
	as ()I getAbsoluteMaxWorldSize
	at ()Z scheduleExecutables
	au ()Ljava/lang/Thread; getRunningThread
	av ()I getCompressionThreshold
	aw ()Z enforceSecureProfile
	ax ()J getNextTickTime
	ay ()Lcom/mojang/datafixers/DataFixer; getFixerUpper
	az ()Lnet/minecraft/server/AdvancementDataWorld; getAdvancements
	b (I)I getScaledTrackingDistance
	b (Lcom/mojang/authlib/GameProfile;)V setSingleplayerProfile
	b (Ljava/lang/Runnable;)V addTickable
	b (Ljava/lang/String;)V setId
	b (Ljava/nio/file/Path;)V saveDebugReport
	b (Ljava/util/function/BooleanSupplier;)V tickChildren
	b (Lnet/minecraft/SystemReport;)Lnet/minecraft/SystemReport; fillSystemReport
	b (Lnet/minecraft/server/TickTask;)V doRunTask
	b (Lnet/minecraft/server/level/EntityPlayer;)Lnet/minecraft/server/level/PlayerInteractManager; createGameModeForPlayer
	b (Lnet/minecraft/server/level/WorldServer;)V synchronizeTime
	b (Lnet/minecraft/server/level/progress/WorldLoadListener;)V prepareLevels
	b (Z)V setDifficultyLocked
	b (ZZZ)Z saveEverything
	ba ()Lnet/minecraft/server/packs/resources/IResourceManager; getResourceManager
	bb ()Z isCurrentlySaving
	bc ()Z isTimeProfilerRunning
	bd ()V startTimeProfiler
	be ()Lnet/minecraft/util/profiling/MethodProfilerResults; stopTimeProfiler
	bf ()I getMaxChainedNeighborUpdates
	bg ()Lnet/minecraft/network/chat/ChatDecorator; getChatDecorator
	bh ()Z haveTime
	bi ()Z pollTaskInternal
	bj ()Ljava/util/Optional; loadStatusIcon
	bk ()Lnet/minecraft/network/protocol/status/ServerPing; buildServerStatus
	bl ()Lnet/minecraft/network/protocol/status/ServerPing$ServerPingPlayerSample; buildPlayerStatus
	bu ()V updateMobSpawningFlags
	bv ()V startMetricsRecordingTick
	bw ()V endMetricsRecordingTick
	c (I)V setPlayerIdleTimeout
	c (Lcom/mojang/authlib/GameProfile;)I getProfilePermissions
	c (Ljava/lang/Runnable;)V executeIfPossible
	c (Ljava/lang/String;)Ljava/io/File; getFile
	c (Ljava/nio/file/Path;)V dumpMiscStats
	c (Lnet/minecraft/server/level/EntityPlayer;)V sendDifficultyUpdate
	c (Z)V setDemo
	d (Ljava/lang/Runnable;)V doRunTask
	d (Ljava/lang/String;)V setMotd
	d (Ljava/nio/file/Path;)V dumpGameRules
	d (Z)V setUsesAuthentication
	d_ ()Z acceptsSuccess
	e ()Z initServer
	e (Ljava/lang/Runnable;)Z shouldRun
	e (Ljava/nio/file/Path;)V dumpClasspath
	e (Z)V setPreventProxyConnections
	f (Ljava/lang/Runnable;)Ljava/lang/Runnable; wrapRunnable
	f (Ljava/nio/file/Path;)V dumpThreads
	f (Z)V setPvpAllowed
	g ()V onServerExit
	g (Ljava/nio/file/Path;)V dumpNativeModules
	g (Z)V setFlightAllowed
	g_ ()V loadLevel
	h ()Z isHardcore
	h (Z)V setEnforceWhitelist
	h_ ()Lnet/minecraft/world/level/EnumGamemode; getDefaultGameType
	i ()I getOperatorUserPermissionLevel
	i_ ()V waitUntilNextTick
	j ()I getFunctionCompilationLevel
	j_ ()Z acceptsFailure
	k ()Z shouldRconBroadcast
	l ()Z isDedicatedServer
	m ()I getRateLimitPacketsPerSecond
	n ()Z isEpollEnabled
	o ()Z isCommandBlockEnabled
	p ()Z isPublished
	r ()V forceDifficulty
	t ()V stopServer
	u ()Ljava/lang/String; getLocalIp
	v ()Z isRunning
	w ()V runServer
	x ()Z pollTask
	y ()Ljava/util/Optional; getWorldScreenshotFile
	z ()Ljava/io/File; getServerDirectory
net/minecraft/server/RegistryLayer net/minecraft/server/RegistryLayer
	a STATIC
	b WORLDGEN
	c DIMENSIONS
	d RELOADABLE
	e VALUES
	f STATIC_ACCESS
	g $VALUES
	a ()Lnet/minecraft/core/LayeredRegistryAccess; createRegistryAccess
	b ()[Lnet/minecraft/server/RegistryLayer; $values
net/minecraft/server/Services net/minecraft/server/Services
	a sessionService
	b serviceSignatureValidator
	c profileRepository
	d profileCache
	e USERID_CACHE_FILE
	a ()Lcom/mojang/authlib/minecraft/MinecraftSessionService; sessionService
	a (Lcom/mojang/authlib/yggdrasil/YggdrasilAuthenticationService;Ljava/io/File;)Lnet/minecraft/server/Services; create
	b ()Lnet/minecraft/util/SignatureValidator; serviceSignatureValidator
	c ()Lcom/mojang/authlib/GameProfileRepository; profileRepository
	d ()Lnet/minecraft/server/players/UserCache; profileCache
net/minecraft/server/TickTask net/minecraft/server/TickTask
	a tick
	b runnable
	a ()I getTick
net/minecraft/server/WorldLoader net/minecraft/server/WorldLoader
	a LOGGER
	a (Ladw$c;Ladw$f;Ladw$e;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; load
	a (Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/core/LayeredRegistryAccess;Lnet/minecraft/server/RegistryLayer;Ljava/util/List;)Lnet/minecraft/core/IRegistryCustom$Dimension; loadLayer
	b (Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/core/LayeredRegistryAccess;Lnet/minecraft/server/RegistryLayer;Ljava/util/List;)Lnet/minecraft/core/LayeredRegistryAccess; loadAndReplaceLayer
net/minecraft/server/WorldStem net/minecraft/server/WorldStem
	a resourceManager
	b dataPackResources
	c registries
	d worldData
	a ()Lnet/minecraft/server/packs/resources/IReloadableResourceManager; resourceManager
	b ()Lnet/minecraft/server/DataPackResources; dataPackResources
	c ()Lnet/minecraft/core/LayeredRegistryAccess; registries
	d ()Lnet/minecraft/world/level/storage/SaveData; worldData
net/minecraft/server/advancements/AdvancementVisibilityEvaluator net/minecraft/server/advancements/AdvancementVisibilityEvaluator
	a VISIBILITY_DEPTH
	a (Lit/unimi/dsi/fastutil/Stack;)Z evaluateVisiblityForUnfinishedNode
	a (Lnet/minecraft/advancements/Advancement;Lit/unimi/dsi/fastutil/Stack;Ljava/util/function/Predicate;Lady$a;)Z evaluateVisibility
	a (Lnet/minecraft/advancements/Advancement;Ljava/util/function/Predicate;Lady$a;)V evaluateVisibility
	a (Lnet/minecraft/advancements/Advancement;Z)Lady$b; evaluateVisibilityRule
net/minecraft/server/commands/DamageCommand net/minecraft/server/commands/DamageCommand
	a ERROR_INVULNERABLE
	a (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/entity/Entity;FLnet/minecraft/world/damagesource/DamageSource;)I damage
net/minecraft/server/commands/FillBiomeCommand net/minecraft/server/commands/FillBiomeCommand
	a ERROR_NOT_LOADED
	b ERROR_VOLUME_TOO_LARGE
	a (I)I quantize
	a (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lhd$c;Ljava/util/function/Predicate;)I fill
	a (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/core/BlockPosition; quantize
	a (Lorg/apache/commons/lang3/mutable/MutableInt;Lnet/minecraft/world/level/chunk/IChunkAccess;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/core/Holder;Ljava/util/function/Predicate;)Lnet/minecraft/world/level/biome/BiomeResolver; makeResolver
net/minecraft/server/commands/ItemCommands net/minecraft/server/commands/ItemCommands
	a ERROR_TARGET_NOT_A_CONTAINER
	b ERROR_TARGET_INAPPLICABLE_SLOT
	c ERROR_SOURCE_NOT_A_CONTAINER
	d ERROR_SOURCE_INAPPLICABLE_SLOT
	e ERROR_TARGET_NO_CHANGES
	f ERROR_TARGET_NO_CHANGES_KNOWN_ITEM
	g SUGGEST_MODIFIER
	a (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;ILnet/minecraft/world/item/ItemStack;)I setEntityItem
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/util/Collection;ILnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)I modifyEntityItem
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/core/BlockPosition;I)Lnet/minecraft/world/item/ItemStack; getBlockItem
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/core/BlockPosition;ILjava/util/Collection;I)I blockToEntities
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/core/BlockPosition;ILjava/util/Collection;ILnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)I blockToEntities
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/core/BlockPosition;ILnet/minecraft/core/BlockPosition;I)I blockToBlock
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/core/BlockPosition;ILnet/minecraft/core/BlockPosition;ILnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)I blockToBlock
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/core/BlockPosition;ILnet/minecraft/world/item/ItemStack;)I setBlockItem
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/core/BlockPosition;ILnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)I modifyBlockItem
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/core/BlockPosition;Lcom/mojang/brigadier/exceptions/Dynamic3CommandExceptionType;)Lnet/minecraft/world/IInventory; getContainer
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/entity/Entity;ILjava/util/Collection;I)I entityToEntities
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/entity/Entity;ILjava/util/Collection;ILnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)I entityToEntities
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/entity/Entity;ILnet/minecraft/core/BlockPosition;I)I entityToBlock
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/entity/Entity;ILnet/minecraft/core/BlockPosition;ILnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)I entityToBlock
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; applyModifier
	a (Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/world/item/ItemStack; getEntityItem
net/minecraft/server/commands/JfrCommand net/minecraft/server/commands/JfrCommand
	a START_FAILED
	b DUMP_FAILED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;)I startJfr
	b (Lnet/minecraft/commands/CommandListenerWrapper;)I stopJfr
net/minecraft/server/commands/PerfCommand net/minecraft/server/commands/PerfCommand
	a LOGGER
	b ERROR_NOT_RUNNING
	c ERROR_ALREADY_RUNNING
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;)I startProfilingDedicatedServer
	a (Lnet/minecraft/commands/CommandListenerWrapper;Ljava/nio/file/Path;Lnet/minecraft/server/MinecraftServer;)V saveResults
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/util/profiling/MethodProfilerResults;)V whenStopped
	b (Lnet/minecraft/commands/CommandListenerWrapper;)I stopProfilingDedicatedServer
net/minecraft/server/commands/PlaceCommand net/minecraft/server/commands/PlaceCommand
	a ERROR_FEATURE_FAILED
	b ERROR_JIGSAW_FAILED
	c ERROR_STRUCTURE_FAILED
	d ERROR_TEMPLATE_INVALID
	e ERROR_TEMPLATE_FAILED
	f SUGGEST_TEMPLATES
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lhd$c;Lnet/minecraft/core/BlockPosition;)I placeFeature
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/core/Holder;Lnet/minecraft/resources/MinecraftKey;ILnet/minecraft/core/BlockPosition;)I placeJigsaw
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/world/level/block/EnumBlockMirror;FI)I placeTemplate
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/world/level/ChunkCoordIntPair;)V checkLoaded
	b (Lnet/minecraft/commands/CommandListenerWrapper;Lhd$c;Lnet/minecraft/core/BlockPosition;)I placeStructure
net/minecraft/server/commands/RideCommand net/minecraft/server/commands/RideCommand
	a ERROR_NOT_RIDING
	b ERROR_ALREADY_RIDING
	c ERROR_MOUNT_FAILED
	d ERROR_MOUNTING_PLAYER
	e ERROR_MOUNTING_LOOP
	f ERROR_WRONG_DIMENSION
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/entity/Entity;)I dismount
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)I mount
net/minecraft/server/commands/SpawnArmorTrimsCommand net/minecraft/server/commands/SpawnArmorTrimsCommand
	a MATERIAL_AND_SLOT_TO_ITEM
	b VANILLA_TRIM_PATTERNS
	c VANILLA_TRIM_MATERIALS
	d TRIM_PATTERN_ORDER
	e TRIM_MATERIAL_ORDER
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/commands/CommandListenerWrapper;Lnet/minecraft/world/entity/player/EntityHuman;)I spawnArmorTrims
net/minecraft/server/dedicated/DedicatedPlayerList net/minecraft/server/dedicated/DedicatedPlayerList
	a LOGGER
	A ()V loadOps
	B ()V saveOps
	C ()V loadWhiteList
	D ()V saveWhiteList
	a ()V reloadWhiteList
	a (Lcom/mojang/authlib/GameProfile;)V op
	a (Z)V setUsingWhiteList
	b ()Lnet/minecraft/server/dedicated/DedicatedServer; getServer
	b (Lcom/mojang/authlib/GameProfile;)V deop
	c ()Lnet/minecraft/server/MinecraftServer; getServer
	c (Lcom/mojang/authlib/GameProfile;)Z isWhiteListed
	d (Lcom/mojang/authlib/GameProfile;)Z canBypassPlayerLimit
	w ()V saveIpBanList
	x ()V saveUserBanList
	y ()V loadIpBanList
	z ()V loadUserBanList
net/minecraft/server/dedicated/DedicatedServer net/minecraft/server/dedicated/DedicatedServer
	n LOGGER
	o CONVERSION_RETRY_DELAY_MS
	p CONVERSION_RETRIES
	q consoleInput
	r queryThreadGs4
	s rconConsoleSource
	t rconThread
	u settings
	v gui
	w textFilterClient
	B ()Z isNetherEnabled
	M_ ()Z shouldInformAdmins
	Q ()Z isSpawningMonsters
	S ()Ljava/util/Optional; getServerResourcePack
	W ()Z isSpawningAnimals
	X ()Z areNpcsEnabled
	a ()Lnet/minecraft/server/dedicated/DedicatedServerProperties; getProperties
	a (Lcom/mojang/authlib/GameProfile;)Z isSingleplayerOwner
	a (Ljava/lang/String;)Ljava/lang/String; runCommand
	a (Ljava/lang/String;Lnet/minecraft/commands/CommandListenerWrapper;)V handleConsoleInput
	a (Ljava/nio/file/Path;)V dumpServerProperties
	a (Lnet/minecraft/SystemReport;)Lnet/minecraft/SystemReport; fillServerSystemReport
	a (Lnet/minecraft/server/level/EntityPlayer;)Lnet/minecraft/server/network/ITextFilter; createTextFilterForPlayer
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;)Z isUnderSpawnProtection
	aU ()Z forceSynchronousWrites
	aZ ()Lnet/minecraft/world/level/EnumGamemode; getForcedGameType
	ac ()Lnet/minecraft/server/players/PlayerList; getPlayerList
	af ()Z hasGui
	ah ()I getSpawnProtectionRadius
	ai ()Z repliesToStatus
	aj ()Z hidesOnlinePlayers
	as ()I getAbsoluteMaxWorldSize
	av ()I getCompressionThreshold
	aw ()Z enforceSecureProfile
	b ()Ljava/lang/String; getServerIp
	b (I)I getScaledTrackingDistance
	b (Ljava/util/function/BooleanSupplier;)V tickChildren
	bf ()I getMaxChainedNeighborUpdates
	bh ()V handleConsoleInputs
	bi ()Lnet/minecraft/server/dedicated/DedicatedPlayerList; getPlayerList
	bj ()V showGui
	bk ()Z convertOldUsers
	bl ()J getMaxTickLength
	bu ()V waitForRetry
	c (I)V setPlayerIdleTimeout
	d ()I getServerPort
	e ()Z initServer
	f ()Ljava/lang/String; getServerName
	g ()V onServerExit
	h ()Z isHardcore
	i ()I getOperatorUserPermissionLevel
	i (Z)V storeUsingWhiteList
	j ()I getFunctionCompilationLevel
	k ()Z shouldRconBroadcast
	l ()Z isDedicatedServer
	m ()I getRateLimitPacketsPerSecond
	n ()Z isEpollEnabled
	o ()Z isCommandBlockEnabled
	p ()Z isPublished
	q ()Ljava/lang/String; getLevelIdName
	r ()V forceDifficulty
	s ()Ljava/lang/String; getPluginNames
	t ()V stopServer
net/minecraft/server/dedicated/DedicatedServerProperties$WorldDimensionData net/minecraft/server/dedicated/DedicatedServerProperties$WorldDimensionData
	a generatorSettings
	b levelType
	c LEGACY_PRESET_NAMES
	a ()Lcom/google/gson/JsonObject; generatorSettings
	a (Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/level/levelgen/WorldDimensions; create
	b ()Ljava/lang/String; levelType
net/minecraft/server/dedicated/DedicatedServerProperties net/minecraft/server/dedicated/DedicatedServerProperties
	A opPermissionLevel
	B functionPermissionLevel
	C maxTickTime
	D maxChainedNeighborUpdates
	E rateLimitPacketsPerSecond
	F viewDistance
	G simulationDistance
	H maxPlayers
	I networkCompressionThreshold
	J broadcastRconToOps
	K broadcastConsoleToOps
	L maxWorldSize
	M syncChunkWrites
	N enableJmxMonitoring
	O enableStatus
	P hideOnlinePlayers
	Q entityBroadcastRangePercentage
	R textFilteringConfig
	S serverResourcePackInfo
	T initialDataPackConfiguration
	U playerIdleTimeout
	V whiteList
	W enforceSecureProfile
	X worldOptions
	Z LOGGER
	a onlineMode
	aa SHA1
	ab COMMA_SPLITTER
	ac worldDimensionData
	b preventProxyConnections
	c serverIp
	d spawnAnimals
	e spawnNpcs
	f pvp
	g allowFlight
	h motd
	i forceGameMode
	j enforceWhitelist
	k difficulty
	l gamemode
	m levelName
	n serverPort
	o announcePlayerAchievements
	p enableQuery
	q queryPort
	r enableRcon
	s rconPort
	t rconPassword
	u hardcore
	v allowNether
	w spawnMonsters
	x useNativeTransport
	y enableCommandBlock
	z spawnProtection
	a (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Ljava/util/Optional; getServerPackInfo
	a (Ljava/nio/file/Path;)Lnet/minecraft/server/dedicated/DedicatedServerProperties; fromFile
	a (Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/level/levelgen/WorldDimensions; createDimensions
	a (Lnet/minecraft/core/IRegistryCustom;Ljava/util/Properties;)Lnet/minecraft/server/dedicated/DedicatedServerProperties; reload
	b (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/world/level/DataPackConfiguration; getDatapackConfig
	b (Lnet/minecraft/core/IRegistryCustom;Ljava/util/Properties;)Lnet/minecraft/server/dedicated/PropertyManager; reload
	c (Ljava/lang/String;)Lnet/minecraft/network/chat/IChatBaseComponent; parseResourcePackPrompt
	d (Ljava/lang/String;)Lnet/minecraft/world/flag/FeatureFlagSet; getFeatures
net/minecraft/server/dedicated/DedicatedServerSettings net/minecraft/server/dedicated/DedicatedServerSettings
	a source
	b properties
	a ()Lnet/minecraft/server/dedicated/DedicatedServerProperties; getProperties
	a (Ljava/util/function/UnaryOperator;)Lnet/minecraft/server/dedicated/DedicatedServerSettings; update
	b ()V forceSave
net/minecraft/server/level/PlayerMap net/minecraft/server/level/PlayerMap
	a players
	a (J)Ljava/util/Set; getPlayers
	a (JJLnet/minecraft/server/level/EntityPlayer;)V updatePlayer
	a (JLnet/minecraft/server/level/EntityPlayer;)V removePlayer
	a (JLnet/minecraft/server/level/EntityPlayer;Z)V addPlayer
	a (Lnet/minecraft/server/level/EntityPlayer;)V ignorePlayer
	b (Lnet/minecraft/server/level/EntityPlayer;)V unIgnorePlayer
	c (Lnet/minecraft/server/level/EntityPlayer;)Z ignoredOrUnknown
	d (Lnet/minecraft/server/level/EntityPlayer;)Z ignored
net/minecraft/server/level/Ticket net/minecraft/server/level/Ticket
	a type
	b ticketLevel
	c key
	d createdTick
	a ()Lnet/minecraft/server/level/TicketType; getType
	a (J)V setCreatedTick
	a (Lnet/minecraft/server/level/Ticket;)I compareTo
	b ()I getTicketLevel
	b (J)Z timedOut
net/minecraft/server/level/TicketType net/minecraft/server/level/TicketType
	a START
	b DRAGON
	c PLAYER
	d FORCED
	e LIGHT
	f PORTAL
	g POST_TELEPORT
	h UNKNOWN
	i name
	j comparator
	k timeout
	a ()Ljava/util/Comparator; getComparator
	a (Ljava/lang/String;Ljava/util/Comparator;)Lnet/minecraft/server/level/TicketType; create
	a (Ljava/lang/String;Ljava/util/Comparator;I)Lnet/minecraft/server/level/TicketType; create
	b ()J timeout
net/minecraft/server/level/TickingTracker net/minecraft/server/level/TickingTracker
	a chunks
	b INITIAL_TICKET_LIST_CAPACITY
	c tickets
	a ()V runAllUpdates
	a (I)V replacePlayerTicketsLevel
	a (JI)V setLevel
	a (JLnet/minecraft/server/level/Ticket;)V addTicket
	a (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkCoordIntPair;ILjava/lang/Object;)V addTicket
	a (Lnet/minecraft/util/ArraySetSorted;)I getTicketLevelAt
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;)I getLevel
	b (J)I getLevelFromSource
	b (JLnet/minecraft/server/level/Ticket;)V removeTicket
	b (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkCoordIntPair;ILjava/lang/Object;)V removeTicket
	c (J)I getLevel
	d (J)Ljava/lang/String; getTicketDebugString
	g (J)Lnet/minecraft/util/ArraySetSorted; getTickets
net/minecraft/server/network/FilteredText net/minecraft/server/network/FilteredText
	a EMPTY
	b raw
	c mask
	a ()Ljava/lang/String; filtered
	a (Ljava/lang/String;)Lnet/minecraft/server/network/FilteredText; passThrough
	b ()Ljava/lang/String; filteredOrEmpty
	b (Ljava/lang/String;)Lnet/minecraft/server/network/FilteredText; fullyFiltered
	c ()Z isFiltered
	d ()Ljava/lang/String; raw
	e ()Lnet/minecraft/network/chat/FilterMask; mask
net/minecraft/server/network/MemoryServerHandshakePacketListenerImpl net/minecraft/server/network/MemoryServerHandshakePacketListenerImpl
	a server
	b connection
	a ()Z isAcceptingMessages
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V onDisconnect
	a (Lnet/minecraft/network/protocol/handshake/PacketHandshakingInSetProtocol;)V handleIntention
net/minecraft/server/packs/BuiltInMetadata net/minecraft/server/packs/BuiltInMetadata
	a EMPTY
	b values
	a ()Lnet/minecraft/server/packs/BuiltInMetadata; of
	a (Lnet/minecraft/server/packs/metadata/ResourcePackMetaParser;)Ljava/lang/Object; get
	a (Lnet/minecraft/server/packs/metadata/ResourcePackMetaParser;Ljava/lang/Object;)Lnet/minecraft/server/packs/BuiltInMetadata; of
	a (Lnet/minecraft/server/packs/metadata/ResourcePackMetaParser;Ljava/lang/Object;Lnet/minecraft/server/packs/metadata/ResourcePackMetaParser;Ljava/lang/Object;)Lnet/minecraft/server/packs/BuiltInMetadata; of
net/minecraft/server/packs/FeatureFlagsMetadataSection net/minecraft/server/packs/FeatureFlagsMetadataSection
	a TYPE
	b flags
	c CODEC
	a ()Lnet/minecraft/world/flag/FeatureFlagSet; flags
net/minecraft/server/packs/PathPackResources net/minecraft/server/packs/PathPackResources
	a LOGGER
	d PATH_JOINER
	e root
	a (Ljava/lang/String;Ljava/nio/file/Path;Ljava/util/List;Lajv$a;)V listPath
	a (Ljava/nio/file/Path;)Z validatePath
	a (Lnet/minecraft/resources/MinecraftKey;Ljava/nio/file/Path;)Lnet/minecraft/server/packs/resources/IoSupplier; getResource
	a (Lnet/minecraft/server/packs/EnumResourcePackType;)Ljava/util/Set; getNamespaces
	a (Lnet/minecraft/server/packs/EnumResourcePackType;Ljava/lang/String;Ljava/lang/String;Lajv$a;)V listResources
	a (Lnet/minecraft/server/packs/EnumResourcePackType;Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/server/packs/resources/IoSupplier; getResource
	a ([Ljava/lang/String;)Lnet/minecraft/server/packs/resources/IoSupplier; getRootResource
	b (Ljava/nio/file/Path;)Lnet/minecraft/server/packs/resources/IoSupplier; returnFileIfExists
net/minecraft/server/packs/VanillaPackResourcesBuilder net/minecraft/server/packs/VanillaPackResourcesBuilder
	a developmentConfig
	b LOGGER
	c ROOT_DIR_BY_TYPE
	d rootPaths
	e pathsForType
	f metadata
	g namespaces
	a ()Lnet/minecraft/server/packs/VanillaPackResourcesBuilder; pushJarResources
	a (Ljava/net/URI;)Ljava/nio/file/Path; safeGetPath
	a (Ljava/nio/file/Path;)Lnet/minecraft/server/packs/VanillaPackResourcesBuilder; pushUniversalPath
	a (Ljava/util/Collection;)Ljava/util/List; copyAndReverse
	a (Lnet/minecraft/server/packs/BuiltInMetadata;)Lnet/minecraft/server/packs/VanillaPackResourcesBuilder; setMetadata
	a (Lnet/minecraft/server/packs/EnumResourcePackType;Ljava/lang/Class;)Lnet/minecraft/server/packs/VanillaPackResourcesBuilder; pushClasspathResources
	a (Lnet/minecraft/server/packs/EnumResourcePackType;Ljava/nio/file/Path;)Lnet/minecraft/server/packs/VanillaPackResourcesBuilder; pushAssetPath
	a ([Ljava/lang/String;)Lnet/minecraft/server/packs/VanillaPackResourcesBuilder; exposeNamespace
	b ()Lnet/minecraft/server/packs/VanillaPackResourcesBuilder; applyDevelopmentConfig
	b (Ljava/nio/file/Path;)Z validateDirPath
	b (Lnet/minecraft/server/packs/EnumResourcePackType;Ljava/nio/file/Path;)V pushPathForType
	c ()Lnet/minecraft/server/packs/ResourcePackVanilla; build
	c (Ljava/nio/file/Path;)V pushRootPath
net/minecraft/server/packs/linkfs/DummyFileAttributes net/minecraft/server/packs/linkfs/DummyFileAttributes
	a EPOCH
net/minecraft/server/packs/linkfs/LinkFSFileStore net/minecraft/server/packs/linkfs/LinkFSFileStore
	a name
net/minecraft/server/packs/linkfs/LinkFSPath net/minecraft/server/packs/linkfs/LinkFSPath
	a DIRECTORY_ATTRIBUTES
	b FILE_ATTRIBUTES
	c PATH_COMPARATOR
	d name
	e fileSystem
	f parent
	g pathToRoot
	h pathString
	i pathContents
	a ()Lnet/minecraft/server/packs/linkfs/LinkFileSystem; getFileSystem
	a (I)Lnet/minecraft/server/packs/linkfs/LinkFSPath; getName
	a (II)Lnet/minecraft/server/packs/linkfs/LinkFSPath; subpath
	a (Ljava/lang/String;)Lnet/minecraft/server/packs/linkfs/LinkFSPath; resolveName
	a (Ljava/nio/file/Path;)Lnet/minecraft/server/packs/linkfs/LinkFSPath; resolve
	a (Ljava/util/List;)Lnet/minecraft/server/packs/linkfs/LinkFSPath; resolve
	a (Lnet/minecraft/server/packs/linkfs/LinkFSPath;Ljava/lang/String;)Lnet/minecraft/server/packs/linkfs/LinkFSPath; createRelativePath
	a (Lnet/minecraft/server/packs/linkfs/PathContents;)Z isRelativeOrMissing
	a ([Ljava/nio/file/LinkOption;)Lnet/minecraft/server/packs/linkfs/LinkFSPath; toRealPath
	b ()Lnet/minecraft/server/packs/linkfs/LinkFSPath; getRoot
	b (Ljava/nio/file/Path;)Lnet/minecraft/server/packs/linkfs/LinkFSPath; relativize
	c ()Lnet/minecraft/server/packs/linkfs/LinkFSPath; getFileName
	c (Ljava/nio/file/Path;)Lnet/minecraft/server/packs/linkfs/LinkFSPath; toLinkPath
	d ()Lnet/minecraft/server/packs/linkfs/LinkFSPath; getParent
	e ()Lnet/minecraft/server/packs/linkfs/LinkFSPath; normalize
	f ()Lnet/minecraft/server/packs/linkfs/LinkFSPath; toAbsolutePath
	g ()Z exists
	h ()Ljava/nio/file/Path; getTargetPath
	i ()Lakf$a; getDirectoryContents
	j ()Ljava/nio/file/attribute/BasicFileAttributeView; getBasicAttributeView
	k ()Ljava/nio/file/attribute/BasicFileAttributes; getBasicAttributes
	l ()Ljava/util/List; pathToRoot
	m ()Z hasRealContents
	n ()Ljava/lang/String; pathToString
net/minecraft/server/packs/linkfs/LinkFSProvider net/minecraft/server/packs/linkfs/LinkFSProvider
	a SCHEME
	a (Ljava/nio/file/Path;)Lnet/minecraft/server/packs/linkfs/LinkFSPath; toLinkPath
net/minecraft/server/packs/linkfs/LinkFileSystem net/minecraft/server/packs/linkfs/LinkFileSystem
	a PATH_SEPARATOR
	b VIEWS
	c PATH_SPLITTER
	d store
	e provider
	f root
	a ()Ljava/nio/file/FileStore; store
	a (Lake$b;Lnet/minecraft/server/packs/linkfs/LinkFileSystem;Ljava/lang/String;Lnet/minecraft/server/packs/linkfs/LinkFSPath;)Lnet/minecraft/server/packs/linkfs/LinkFSPath; buildPath
	b ()Lnet/minecraft/server/packs/linkfs/LinkFSPath; rootPath
	c ()Lake$a; builder
net/minecraft/server/packs/linkfs/PathContents net/minecraft/server/packs/linkfs/PathContents
	a MISSING
	b RELATIVE
net/minecraft/server/packs/repository/BuiltInPackSource net/minecraft/server/packs/repository/BuiltInPackSource
	a VANILLA_ID
	b LOGGER
	c packType
	d vanillaPack
	e packDir
	a ()Lnet/minecraft/server/packs/ResourcePackVanilla; getVanillaPack
	a (Ljava/lang/String;)Lnet/minecraft/network/chat/IChatBaseComponent; getPackTitle
	a (Ljava/lang/String;Lakq$c;Lnet/minecraft/network/chat/IChatBaseComponent;)Lnet/minecraft/server/packs/repository/ResourcePackLoader; createBuiltinPack
	a (Ljava/nio/file/Path;)Ljava/lang/String; pathToId
	a (Ljava/nio/file/Path;Ljava/util/function/BiConsumer;)V discoverPacksInPath
	a (Ljava/util/function/BiConsumer;)V populatePackList
	a (Ljava/util/function/Consumer;)V loadPacks
	a (Lnet/minecraft/server/packs/IResourcePack;)Lnet/minecraft/server/packs/repository/ResourcePackLoader; createVanillaPack
	b (Ljava/util/function/Consumer;)V listBundledPacks
net/minecraft/server/packs/repository/PackSource net/minecraft/server/packs/repository/PackSource
	a NO_DECORATION
	b DEFAULT
	c BUILT_IN
	d FEATURE
	e WORLD
	f SERVER
	a ()Z shouldAddAutomatically
	a (Ljava/lang/String;)Ljava/util/function/UnaryOperator; decorateWithSource
	a (Ljava/util/function/UnaryOperator;Z)Lnet/minecraft/server/packs/repository/PackSource; create
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)Lnet/minecraft/network/chat/IChatBaseComponent; decorate
net/minecraft/server/packs/resources/ResourceFilterSection net/minecraft/server/packs/resources/ResourceFilterSection
	a TYPE
	b CODEC
	c blockList
	a (Ljava/lang/String;)Z isNamespaceFiltered
	b (Ljava/lang/String;)Z isPathFiltered
net/minecraft/server/packs/resources/ResourceMetadata net/minecraft/server/packs/resources/ResourceMetadata
	a EMPTY
	b EMPTY_SUPPLIER
	a (Ljava/io/InputStream;)Lnet/minecraft/server/packs/resources/ResourceMetadata; fromJsonStream
	a (Lnet/minecraft/server/packs/metadata/ResourcePackMetaParser;)Ljava/util/Optional; getSection
net/minecraft/server/players/PlayerList net/minecraft/server/players/PlayerList
	A sendAllPlayerInfoIn
	a LOGGER
	b USERBANLIST_FILE
	c IPBANLIST_FILE
	d OPLIST_FILE
	e WHITELIST_FILE
	f CHAT_FILTERED_FULL
	g maxPlayers
	h SEND_PLAYER_INFO_INTERVAL
	i BAN_DATE_FORMAT
	j server
	k players
	l playersByUUID
	m bans
	n ipBans
	o ops
	p whitelist
	q stats
	r advancements
	s playerIo
	t doWhiteList
	u registries
	v synchronizedRegistries
	w viewDistance
	x simulationDistance
	y allowCheatsForAllPlayers
	z ALLOW_LOGOUTIVATOR
	a ()V reloadWhiteList
	a (I)V setViewDistance
	a (Lcom/mojang/authlib/GameProfile;)V op
	a (Ljava/lang/String;)Lnet/minecraft/server/level/EntityPlayer; getPlayerByName
	a (Ljava/net/SocketAddress;Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/network/chat/IChatBaseComponent; canPlayerLogin
	a (Ljava/util/UUID;)Lnet/minecraft/server/level/EntityPlayer; getPlayer
	a (Lnet/minecraft/network/NetworkManager;Lnet/minecraft/server/level/EntityPlayer;)V placeNewPlayer
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Ljava/util/function/Function;Z)V broadcastSystemMessage
	a (Lnet/minecraft/network/chat/IChatBaseComponent;Z)V broadcastSystemMessage
	a (Lnet/minecraft/network/chat/PlayerChatMessage;)Z verifyChatTrusted
	a (Lnet/minecraft/network/chat/PlayerChatMessage;Ljava/util/function/Predicate;Lnet/minecraft/server/level/EntityPlayer;Ltf$a;)V broadcastChatMessage
	a (Lnet/minecraft/network/chat/PlayerChatMessage;Lnet/minecraft/commands/CommandListenerWrapper;Ltf$a;)V broadcastChatMessage
	a (Lnet/minecraft/network/chat/PlayerChatMessage;Lnet/minecraft/server/level/EntityPlayer;Ltf$a;)V broadcastChatMessage
	a (Lnet/minecraft/network/protocol/Packet;)V broadcastAll
	a (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/resources/ResourceKey;)V broadcastAll
	a (Lnet/minecraft/server/ScoreboardServer;Lnet/minecraft/server/level/EntityPlayer;)V updateEntireScoreboard
	a (Lnet/minecraft/server/level/EntityPlayer;)Lnet/minecraft/nbt/NBTTagCompound; load
	a (Lnet/minecraft/server/level/EntityPlayer;I)V sendPlayerPermissionLevel
	a (Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/server/level/WorldServer;)V sendLevelInfo
	a (Lnet/minecraft/server/level/EntityPlayer;Z)Lnet/minecraft/server/level/EntityPlayer; respawn
	a (Lnet/minecraft/server/level/WorldServer;)V addWorldborderListener
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Lnet/minecraft/stats/ServerStatisticManager; getPlayerStats
	a (Lnet/minecraft/world/entity/player/EntityHuman;DDDDLnet/minecraft/resources/ResourceKey;Lnet/minecraft/network/protocol/Packet;)V broadcast
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/network/chat/IChatBaseComponent;)V broadcastSystemToTeam
	a (Z)V setUsingWhiteList
	b (I)V setSimulationDistance
	b (Lcom/mojang/authlib/GameProfile;)V deop
	b (Ljava/lang/String;)Ljava/util/List; getPlayersWithAddress
	b (Lnet/minecraft/server/level/EntityPlayer;)V save
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/network/chat/IChatBaseComponent;)V broadcastSystemToAllExceptTeam
	b (Z)V setAllowCheatsForAllPlayers
	c ()Lnet/minecraft/server/MinecraftServer; getServer
	c (Lcom/mojang/authlib/GameProfile;)Z isWhiteListed
	c (Lnet/minecraft/server/level/EntityPlayer;)V remove
	d ()V tick
	d (Lcom/mojang/authlib/GameProfile;)Z canBypassPlayerLimit
	d (Lnet/minecraft/server/level/EntityPlayer;)V sendPlayerPermissionLevel
	e ()[Ljava/lang/String; getPlayerNamesArray
	e (Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/server/level/EntityPlayer; getPlayerForLogin
	e (Lnet/minecraft/server/level/EntityPlayer;)V sendAllPlayerInfo
	f ()Lnet/minecraft/server/players/GameProfileBanList; getBans
	f (Lcom/mojang/authlib/GameProfile;)Z isOp
	f (Lnet/minecraft/server/level/EntityPlayer;)Lnet/minecraft/server/AdvancementDataPlayer; getPlayerAdvancements
	g ()Lnet/minecraft/server/players/IpBanList; getIpBans
	h ()V saveAll
	i ()Lnet/minecraft/server/players/WhiteList; getWhiteList
	j ()[Ljava/lang/String; getWhiteListNames
	k ()Lnet/minecraft/server/players/OpList; getOps
	l ()[Ljava/lang/String; getOpNames
	m ()I getPlayerCount
	n ()I getMaxPlayers
	o ()Z isUsingWhitelist
	p ()I getViewDistance
	q ()I getSimulationDistance
	r ()Lnet/minecraft/nbt/NBTTagCompound; getSingleplayerData
	s ()V removeAll
	t ()Ljava/util/List; getPlayers
	u ()V reloadResources
	v ()Z isAllowCheatsForAllPlayers
net/minecraft/server/players/SleepStatus net/minecraft/server/players/SleepStatus
	a activePlayers
	b sleepingPlayers
	a ()V removeAllSleepers
	a (I)Z areEnoughSleeping
	a (ILjava/util/List;)Z areEnoughDeepSleeping
	a (Ljava/util/List;)Z update
	b ()I amountSleeping
	b (I)I sleepersNeeded
net/minecraft/sounds/Music net/minecraft/sounds/Music
	a CODEC
	b event
	c minDelay
	d maxDelay
	e replaceCurrentMusic
	a ()Lnet/minecraft/core/Holder; getEvent
	b ()I getMinDelay
	c ()I getMaxDelay
	d ()Z replaceCurrentMusic
net/minecraft/sounds/Musics net/minecraft/sounds/Musics
	a MENU
	b CREATIVE
	c CREDITS
	d END_BOSS
	e END
	f UNDER_WATER
	g GAME
	h ONE_SECOND
	i THIRTY_SECONDS
	j TEN_MINUTES
	k TWENTY_MINUTES
	l FIVE_MINUTES
	a (Lnet/minecraft/core/Holder;)Lnet/minecraft/sounds/Music; createGameMusic
net/minecraft/stats/RecipeBook net/minecraft/stats/RecipeBook
	a known
	b highlight
	c bookSettings
	a ()Lnet/minecraft/stats/RecipeBookSettings; getBookSettings
	a (Lnet/minecraft/resources/MinecraftKey;)V add
	a (Lnet/minecraft/stats/RecipeBook;)V copyOverData
	a (Lnet/minecraft/stats/RecipeBookSettings;)V setBookSettings
	a (Lnet/minecraft/world/inventory/ContainerRecipeBook;)Z isFiltering
	a (Lnet/minecraft/world/inventory/RecipeBookType;)Z isOpen
	a (Lnet/minecraft/world/inventory/RecipeBookType;Z)V setOpen
	a (Lnet/minecraft/world/inventory/RecipeBookType;ZZ)V setBookSetting
	a (Lnet/minecraft/world/item/crafting/IRecipe;)V add
	b (Lnet/minecraft/resources/MinecraftKey;)Z contains
	b (Lnet/minecraft/world/inventory/RecipeBookType;)Z isFiltering
	b (Lnet/minecraft/world/inventory/RecipeBookType;Z)V setFiltering
	b (Lnet/minecraft/world/item/crafting/IRecipe;)Z contains
	c (Lnet/minecraft/resources/MinecraftKey;)V remove
	c (Lnet/minecraft/world/item/crafting/IRecipe;)V remove
	d (Lnet/minecraft/resources/MinecraftKey;)V addHighlight
	d (Lnet/minecraft/world/item/crafting/IRecipe;)Z willHighlight
	e (Lnet/minecraft/world/item/crafting/IRecipe;)V removeHighlight
	f (Lnet/minecraft/world/item/crafting/IRecipe;)V addHighlight
net/minecraft/stats/RecipeBookSettings net/minecraft/stats/RecipeBookSettings
	a TAG_FIELDS
	b states
	a ()Lnet/minecraft/stats/RecipeBookSettings; copy
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/stats/RecipeBookSettings; read
	a (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/stats/RecipeBookSettings; read
	a (Lnet/minecraft/stats/RecipeBookSettings;)V replaceFrom
	a (Lnet/minecraft/world/inventory/RecipeBookType;)Z isOpen
	a (Lnet/minecraft/world/inventory/RecipeBookType;Z)V setOpen
	b (Lnet/minecraft/nbt/NBTTagCompound;)V write
	b (Lnet/minecraft/network/PacketDataSerializer;)V write
	b (Lnet/minecraft/world/inventory/RecipeBookType;)Z isFiltering
	b (Lnet/minecraft/world/inventory/RecipeBookType;Z)V setFiltering
net/minecraft/tags/BannerPatternTags net/minecraft/tags/BannerPatternTags
	a NO_ITEM_REQUIRED
	b PATTERN_ITEM_FLOWER
	c PATTERN_ITEM_CREEPER
	d PATTERN_ITEM_SKULL
	e PATTERN_ITEM_MOJANG
	f PATTERN_ITEM_GLOBE
	g PATTERN_ITEM_PIGLIN
	a (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; create
net/minecraft/tags/BiomeTags net/minecraft/tags/BiomeTags
	A HAS_RUINED_PORTAL_JUNGLE
	B HAS_RUINED_PORTAL_OCEAN
	C HAS_RUINED_PORTAL_SWAMP
	D HAS_RUINED_PORTAL_MOUNTAIN
	E HAS_RUINED_PORTAL_STANDARD
	F HAS_SHIPWRECK_BEACHED
	G HAS_SHIPWRECK
	H HAS_STRONGHOLD
	I HAS_SWAMP_HUT
	J HAS_VILLAGE_DESERT
	K HAS_VILLAGE_PLAINS
	L HAS_VILLAGE_SAVANNA
	M HAS_VILLAGE_SNOWY
	N HAS_VILLAGE_TAIGA
	O HAS_WOODLAND_MANSION
	P HAS_NETHER_FORTRESS
	Q HAS_NETHER_FOSSIL
	R HAS_BASTION_REMNANT
	S HAS_ANCIENT_CITY
	T HAS_RUINED_PORTAL_NETHER
	U HAS_END_CITY
	V REQUIRED_OCEAN_MONUMENT_SURROUNDING
	W MINESHAFT_BLOCKING
	X PLAYS_UNDERWATER_MUSIC
	Y HAS_CLOSER_WATER_FOG
	Z WATER_ON_MAP_OUTLINES
	a IS_DEEP_OCEAN
	aa PRODUCES_CORALS_FROM_BONEMEAL
	ab INCREASED_FIRE_BURNOUT
	ac SNOW_GOLEM_MELTS
	ad WITHOUT_ZOMBIE_SIEGES
	ae WITHOUT_PATROL_SPAWNS
	af WITHOUT_WANDERING_TRADER_SPAWNS
	ag SPAWNS_COLD_VARIANT_FROGS
	ah SPAWNS_WARM_VARIANT_FROGS
	ai SPAWNS_GOLD_RABBITS
	aj SPAWNS_WHITE_RABBITS
	ak REDUCED_WATER_AMBIENT_SPAWNS
	al ALLOWS_TROPICAL_FISH_SPAWNS_AT_ANY_HEIGHT
	am POLAR_BEARS_SPAWN_ON_ALTERNATE_BLOCKS
	an MORE_FREQUENT_DROWNED_SPAWNS
	ao ALLOWS_SURFACE_SLIME_SPAWNS
	ap SPAWNS_SNOW_FOXES
	b IS_OCEAN
	c IS_BEACH
	d IS_RIVER
	e IS_MOUNTAIN
	f IS_BADLANDS
	g IS_HILL
	h IS_TAIGA
	i IS_JUNGLE
	j IS_FOREST
	k IS_SAVANNA
	l IS_OVERWORLD
	m IS_NETHER
	n IS_END
	o STRONGHOLD_BIASED_TO
	p HAS_BURIED_TREASURE
	q HAS_DESERT_PYRAMID
	r HAS_IGLOO
	s HAS_JUNGLE_TEMPLE
	t HAS_MINESHAFT
	u HAS_MINESHAFT_MESA
	v HAS_OCEAN_MONUMENT
	w HAS_OCEAN_RUIN_COLD
	x HAS_OCEAN_RUIN_WARM
	y HAS_PILLAGER_OUTPOST
	z HAS_RUINED_PORTAL_DESERT
	a (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; create
net/minecraft/tags/CatVariantTags net/minecraft/tags/CatVariantTags
	a DEFAULT_SPAWNS
	b FULL_MOON_SPAWNS
	a (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; create
net/minecraft/tags/DamageTypeTags net/minecraft/tags/DamageTypeTags
	a DAMAGES_HELMET
	b BYPASSES_ARMOR
	c BYPASSES_SHIELD
	d BYPASSES_INVULNERABILITY
	e BYPASSES_COOLDOWN
	f BYPASSES_EFFECTS
	g BYPASSES_RESISTANCE
	h BYPASSES_ENCHANTMENTS
	i IS_FIRE
	j IS_PROJECTILE
	k WITCH_RESISTANT_TO
	l IS_EXPLOSION
	m IS_FALL
	n IS_DROWNING
	o IS_FREEZING
	p IS_LIGHTNING
	q NO_ANGER
	r NO_IMPACT
	s ALWAYS_MOST_SIGNIFICANT_FALL
	t WITHER_IMMUNE_TO
	u IGNITES_ARMOR_STANDS
	v BURNS_ARMOR_STANDS
	w AVOIDS_GUARDIAN_THORNS
	x ALWAYS_TRIGGERS_SILVERFISH
	y ALWAYS_HURTS_ENDER_DRAGONS
	a (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; create
net/minecraft/tags/GameEventTags net/minecraft/tags/GameEventTags
	a VIBRATIONS
	b WARDEN_CAN_LISTEN
	c SHRIEKER_CAN_LISTEN
	d IGNORE_VIBRATIONS_SNEAKING
	e ALLAY_CAN_LISTEN
	a (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; create
net/minecraft/tags/InstrumentTags net/minecraft/tags/InstrumentTags
	a REGULAR_GOAT_HORNS
	b SCREAMING_GOAT_HORNS
	c GOAT_HORNS
	a (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; create
net/minecraft/tags/PaintingVariantTags net/minecraft/tags/PaintingVariantTags
	a PLACEABLE
	a (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; create
net/minecraft/tags/PoiTypeTags net/minecraft/tags/PoiTypeTags
	a ACQUIRABLE_JOB_SITE
	b VILLAGE
	c BEE_HOME
	a (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; create
net/minecraft/tags/StructureTags net/minecraft/tags/StructureTags
	a EYE_OF_ENDER_LOCATED
	b DOLPHIN_LOCATED
	c ON_WOODLAND_EXPLORER_MAPS
	d ON_OCEAN_EXPLORER_MAPS
	e ON_TREASURE_MAPS
	f CATS_SPAWN_IN
	g CATS_SPAWN_AS_BLACK
	h VILLAGE
	i MINESHAFT
	j SHIPWRECK
	k RUINED_PORTAL
	l OCEAN_RUIN
	a (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; create
net/minecraft/tags/TagEntry net/minecraft/tags/TagEntry
	a CODEC
	b FULL_CODEC
	c id
	d tag
	e required
	a ()Laor$d; elementOrTag
	a (Lant$a;Ljava/util/function/Consumer;)Z build
	a (Ljava/util/function/Consumer;)V visitRequiredDependencies
	a (Ljava/util/function/Predicate;Ljava/util/function/Predicate;)Z verifyIfPresent
	a (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/tags/TagEntry; element
	b (Ljava/util/function/Consumer;)V visitOptionalDependencies
	b (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/tags/TagEntry; optionalElement
	c (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/tags/TagEntry; tag
	d (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/tags/TagEntry; optionalTag
net/minecraft/tags/TagFile net/minecraft/tags/TagFile
	a CODEC
	b entries
	c replace
	a ()Ljava/util/List; entries
	b ()Z replace
net/minecraft/tags/TagKey net/minecraft/tags/TagKey
	a registry
	b location
	c VALUES
	a ()Lnet/minecraft/resources/ResourceKey; registry
	a (Lnet/minecraft/resources/ResourceKey;)Lcom/mojang/serialization/Codec; codec
	a (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/tags/TagKey; create
	b ()Lnet/minecraft/resources/MinecraftKey; location
	b (Lnet/minecraft/resources/ResourceKey;)Lcom/mojang/serialization/Codec; hashedCodec
	c (Lnet/minecraft/resources/ResourceKey;)Z isFor
	d (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; cast
net/minecraft/util/Brightness net/minecraft/util/Brightness
	a LIGHT_VALUE_CODEC
	b CODEC
	c FULL_BRIGHT
	d block
	e sky
	a ()I pack
	a (I)Lnet/minecraft/util/Brightness; unpack
	b ()I block
	c ()I sky
net/minecraft/util/DebugBuffer net/minecraft/util/DebugBuffer
	a data
	b index
	a ()Ljava/util/List; dump
	a (Ljava/lang/Object;)V push
net/minecraft/util/ExtraCodecs net/minecraft/util/ExtraCodecs
	a JSON
	b COMPONENT
	c VECTOR3F
	d QUATERNIONF_COMPONENTS
	e AXISANGLE4F
	f QUATERNIONF
	g MATRIX4F
	h NON_NEGATIVE_INT
	i POSITIVE_INT
	j POSITIVE_FLOAT
	k PATTERN
	l INSTANT_ISO8601
	m BASE64_STRING
	n TAG_OR_ELEMENT_ID
	o toOptionalLong
	p fromOptionalLong
	q BIT_SET
	r PROPERTY_MAP
	s GAME_PROFILE
	t NON_EMPTY_STRING
	u PROPERTY
	a (FFLjava/util/function/Function;)Lcom/mojang/serialization/Codec; floatRangeMinExclusiveWithMessage
	a (II)Lcom/mojang/serialization/Codec; intRange
	a (IILjava/util/function/Function;)Lcom/mojang/serialization/Codec; intRangeWithMessage
	a (Lcom/mojang/authlib/GameProfile;)Lcom/mojang/serialization/DataResult; mapGameProfileToIdName
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/serialization/DataResult; mapIdNameToGameProfile
	a (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; nonEmptyList
	a (Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; xor
	a (Lcom/mojang/serialization/Codec;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/BiFunction;Ljava/util/function/Function;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; intervalCodec
	a (Lcom/mojang/serialization/Codec;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; validate
	a (Lcom/mojang/serialization/Codec;Ljava/util/function/Function;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; overrideLifecycle
	a (Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec; asOptionalLong
	a (Ljava/lang/Object;)Lcom/mojang/serialization/Codec$ResultFunction; orElsePartial
	a (Ljava/time/format/DateTimeFormatter;)Lcom/mojang/serialization/Codec; instantCodec
	a (Ljava/util/function/Function;)Lcom/mojang/serialization/MapCodec; retrieveContext
	a (Ljava/util/function/Function;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; stringResolverCodec
	a (Ljava/util/function/Supplier;)Lcom/mojang/serialization/Codec; lazyInitializedCodec
	a (Ljava/util/function/ToIntFunction;Ljava/util/function/IntFunction;I)Lcom/mojang/serialization/Codec; idResolverCodec
	b (II)Lcom/mojang/serialization/Codec; sizeLimitedString
	b (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; nonEmptyHolderSet
	b (Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; orCompressed
	b (Ljava/util/function/Function;)Ljava/util/function/Function; ensureHomogenous
	c (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; catchDecoderException
net/minecraft/util/FastBufferedInputStream net/minecraft/util/FastBufferedInputStream
	a DEFAULT_BUFFER_SIZE
	b in
	c buffer
	d limit
	e position
	a ()I bytesInBuffer
	b ()V fill
net/minecraft/util/FileZipper net/minecraft/util/FileZipper
	a LOGGER
	b outputFile
	c tempFile
	d fs
	a (Ljava/nio/file/Path;)V add
	a (Ljava/nio/file/Path;Ljava/io/File;)V add
	a (Ljava/nio/file/Path;Ljava/lang/String;)V add
net/minecraft/util/FutureChain net/minecraft/util/FutureChain
	b LOGGER
	c head
	d checkedExecutor
	e closed
net/minecraft/util/InclusiveRange net/minecraft/util/InclusiveRange
	a INT
	b minInclusive
	c maxInclusive
	a ()Ljava/lang/Comparable; minInclusive
	a (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; codec
	a (Lcom/mojang/serialization/Codec;Ljava/lang/Comparable;Ljava/lang/Comparable;)Lcom/mojang/serialization/Codec; codec
	a (Ljava/lang/Comparable;)Z isValueInRange
	a (Ljava/lang/Comparable;Ljava/lang/Comparable;)Lcom/mojang/serialization/DataResult; create
	a (Lnet/minecraft/util/InclusiveRange;)Z contains
	b ()Ljava/lang/Comparable; maxInclusive
net/minecraft/util/KeyDispatchDataCodec net/minecraft/util/KeyDispatchDataCodec
	a codec
	a ()Lcom/mojang/serialization/Codec; codec
	a (Lcom/mojang/serialization/Codec;)Lnet/minecraft/util/KeyDispatchDataCodec; of
	a (Lcom/mojang/serialization/MapCodec;)Lnet/minecraft/util/KeyDispatchDataCodec; of
net/minecraft/util/LinearCongruentialGenerator net/minecraft/util/LinearCongruentialGenerator
	a MULTIPLIER
	b INCREMENT
	a (JJ)J next
net/minecraft/util/MemoryReserve net/minecraft/util/MemoryReserve
	a reserve
	a ()V allocate
	b ()V release
net/minecraft/util/ModCheck net/minecraft/util/ModCheck
	a confidence
	b description
	a ()Z shouldReportAsModified
	a (Ljava/lang/String;Ljava/util/function/Supplier;Ljava/lang/String;Ljava/lang/Class;)Lnet/minecraft/util/ModCheck; identify
	a (Lnet/minecraft/util/ModCheck;)Lnet/minecraft/util/ModCheck; merge
	b ()Ljava/lang/String; fullDescription
	c ()Lapi$a; confidence
	d ()Ljava/lang/String; description
net/minecraft/util/NativeModuleLister net/minecraft/util/NativeModuleLister
	a LOGGER
	b LANG_MASK
	c DEFAULT_LANG
	d CODEPAGE_MASK
	e DEFAULT_CODEPAGE
	a ()Ljava/util/List; listModules
	a (Lcom/sun/jna/Pointer;Ljava/lang/String;Lcom/sun/jna/ptr/IntByReference;)Lcom/sun/jna/Pointer; queryVersionValue
	a (Ljava/lang/String;)Ljava/util/Optional; tryGetVersion
	a (Ljava/lang/String;II)Ljava/lang/String; langTableKey
	a (Lnet/minecraft/CrashReportSystemDetails;)V addCrashSection
	a ([I)Ljava/util/OptionalInt; findLangAndCodepage
	b (Lcom/sun/jna/Pointer;Ljava/lang/String;Lcom/sun/jna/ptr/IntByReference;)Ljava/lang/String; queryVersionString
net/minecraft/util/RandomSource net/minecraft/util/RandomSource
	a GAUSSIAN_SPREAD_FACTOR
	a ()Lnet/minecraft/util/RandomSource; create
	a (DD)D triangle
	a (I)I nextInt
	a (II)I nextIntBetweenInclusive
	a (J)Lnet/minecraft/util/RandomSource; create
	b ()Lnet/minecraft/util/RandomSource; createThreadSafe
	b (I)V consumeCount
	b (II)I nextInt
	b (J)V setSeed
	c ()Lnet/minecraft/util/RandomSource; createNewThreadLocalInstance
	d ()Lnet/minecraft/util/RandomSource; fork
	e ()Lnet/minecraft/world/level/levelgen/PositionalRandomFactory; forkPositional
	f ()I nextInt
	g ()J nextLong
	h ()Z nextBoolean
	i ()F nextFloat
	j ()D nextDouble
	k ()D nextGaussian
net/minecraft/util/ResourceLocationPattern net/minecraft/util/ResourceLocationPattern
	a CODEC
	b namespacePattern
	c namespacePredicate
	d pathPattern
	e pathPredicate
	f locationPredicate
	a ()Ljava/util/function/Predicate; namespacePredicate
	b ()Ljava/util/function/Predicate; pathPredicate
	c ()Ljava/util/function/Predicate; locationPredicate
net/minecraft/util/SegmentedAnglePrecision net/minecraft/util/SegmentedAnglePrecision
	a mask
	b precision
	c degreeToAngle
	d angleToDegree
	a ()I getMask
	a (F)I fromDegreesWithTurns
	a (I)F toDegreesWithTurns
	a (II)Z isSameAxis
	a (Lnet/minecraft/core/EnumDirection;)I fromDirection
	b (F)I fromDegrees
	b (I)F toDegrees
	c (I)I normalize
net/minecraft/util/SignatureValidator net/minecraft/util/SignatureValidator
	a NO_VALIDATION
	b LOGGER
	a (Lcom/mojang/authlib/yggdrasil/ServicesKeyInfo;)Lnet/minecraft/util/SignatureValidator; from
	a (Ljava/security/PublicKey;Ljava/lang/String;)Lnet/minecraft/util/SignatureValidator; from
	a (Lnet/minecraft/util/SignatureUpdater;[BLjava/security/Signature;)Z verifySignature
	a ([B[B)Z validate
net/minecraft/util/Signer net/minecraft/util/Signer
	a LOGGER
	a (Ljava/security/PrivateKey;Ljava/lang/String;)Lnet/minecraft/util/Signer; from
	a ([B)[B sign
net/minecraft/util/SimpleBitStorage net/minecraft/util/SimpleBitStorage
	a MAGIC
	b data
	c bits
	d mask
	e size
	f valuesPerLong
	g divideMul
	h divideAdd
	i divideShift
	a ()[J getRaw
	a (I)I get
	a (II)I getAndSet
	a (Ljava/util/function/IntConsumer;)V getAll
	a ([I)V unpack
	b ()I getSize
	b (I)I cellIndex
	b (II)V set
	c ()I getBits
	d ()Lnet/minecraft/util/DataBits; copy
net/minecraft/util/SingleKeyCache net/minecraft/util/SingleKeyCache
	a computeValue
	b cacheKey
	c cachedValue
	a (Ljava/lang/Object;)Ljava/lang/Object; getValue
net/minecraft/util/StringDecomposer net/minecraft/util/StringDecomposer
	a REPLACEMENT_CHAR
	b STOP_ITERATION
	a (Ljava/lang/String;)Ljava/lang/String; filterBrokenSurrogates
	a (Ljava/lang/String;ILnet/minecraft/network/chat/ChatModifier;Lnet/minecraft/network/chat/ChatModifier;Lnet/minecraft/util/FormattedStringEmpty;)Z iterateFormatted
	a (Ljava/lang/String;ILnet/minecraft/network/chat/ChatModifier;Lnet/minecraft/util/FormattedStringEmpty;)Z iterateFormatted
	a (Ljava/lang/String;Lnet/minecraft/network/chat/ChatModifier;Lnet/minecraft/util/FormattedStringEmpty;)Z iterate
	a (Lnet/minecraft/network/chat/ChatModifier;Lnet/minecraft/util/FormattedStringEmpty;IC)Z feedChar
	a (Lnet/minecraft/network/chat/IChatFormatted;)Ljava/lang/String; getPlainText
	a (Lnet/minecraft/network/chat/IChatFormatted;Lnet/minecraft/network/chat/ChatModifier;Lnet/minecraft/util/FormattedStringEmpty;)Z iterateFormatted
	b (Ljava/lang/String;Lnet/minecraft/network/chat/ChatModifier;Lnet/minecraft/util/FormattedStringEmpty;)Z iterateBackwards
	c (Ljava/lang/String;Lnet/minecraft/network/chat/ChatModifier;Lnet/minecraft/util/FormattedStringEmpty;)Z iterateFormatted
net/minecraft/util/TaskChainer net/minecraft/util/TaskChainer
	a LOGGER
net/minecraft/util/ThreadingDetector net/minecraft/util/ThreadingDetector
	a LOGGER
	b name
	c lock
	d stackTraceLock
	e threadThatFailedToAcquire
	f fullException
	a ()V checkAndLock
	a (Ljava/lang/String;Ljava/lang/Thread;)Lnet/minecraft/ReportedException; makeThreadingException
	a (Ljava/lang/Thread;)Ljava/lang/String; stackTrace
	b ()V checkAndUnlock
net/minecraft/util/ToFloatFunction net/minecraft/util/ToFloatFunction
	a IDENTITY
	a (Lit/unimi/dsi/fastutil/floats/Float2FloatFunction;)Lnet/minecraft/util/ToFloatFunction; createUnlimited
	a (Ljava/lang/Object;)F apply
	a (Ljava/util/function/Function;)Lnet/minecraft/util/ToFloatFunction; comap
	b ()F minValue
	c ()F maxValue
net/minecraft/util/Unit net/minecraft/util/Unit
	a INSTANCE
	b $VALUES
	a ()[Lnet/minecraft/util/Unit; $values
net/minecraft/util/ZeroBitStorage net/minecraft/util/ZeroBitStorage
	a RAW
	b size
	a ()[J getRaw
	a (I)I get
	a (II)I getAndSet
	a (Ljava/util/function/IntConsumer;)V getAll
	a ([I)V unpack
	b ()I getSize
	b (II)V set
	c ()I getBits
	d ()Lnet/minecraft/util/DataBits; copy
net/minecraft/util/datafix/DataFixTypes net/minecraft/util/datafix/DataFixTypes
	a LEVEL
	b PLAYER
	c CHUNK
	d HOTBAR
	e OPTIONS
	f STRUCTURE
	g STATS
	h SAVED_DATA
	i ADVANCEMENTS
	j POI_CHUNK
	k WORLD_GEN_SETTINGS
	l ENTITY_CHUNK
	m TYPES_FOR_LEVEL_LIST
	n type
	o $VALUES
	a ()I currentVersion
	a (Lcom/mojang/datafixers/DataFixer;Lcom/mojang/serialization/Dynamic;I)Lcom/mojang/serialization/Dynamic; updateToCurrentVersion
	a (Lcom/mojang/datafixers/DataFixer;Lcom/mojang/serialization/Dynamic;II)Lcom/mojang/serialization/Dynamic; update
	a (Lcom/mojang/datafixers/DataFixer;Lnet/minecraft/nbt/NBTTagCompound;I)Lnet/minecraft/nbt/NBTTagCompound; updateToCurrentVersion
	a (Lcom/mojang/datafixers/DataFixer;Lnet/minecraft/nbt/NBTTagCompound;II)Lnet/minecraft/nbt/NBTTagCompound; update
	b ()[Lnet/minecraft/util/datafix/DataFixTypes; $values
net/minecraft/util/datafix/fixes/AbstractPoiSectionFix net/minecraft/util/datafix/fixes/AbstractPoiSectionFix
	a name
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; cap
	a (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; processRecords
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; processSection
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; processSectionRecords
net/minecraft/util/datafix/fixes/AddFlagIfNotPresentFix net/minecraft/util/datafix/fixes/AddFlagIfNotPresentFix
	a name
	b flagValue
	c flagKey
	d typeReference
net/minecraft/util/datafix/fixes/BlendingDataFix net/minecraft/util/datafix/fixes/BlendingDataFix
	a name
	b STATUSES_TO_SKIP_BLENDING
	a (Lcom/mojang/serialization/Dynamic;II)Lcom/mojang/serialization/Dynamic; updateBlendingData
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/OptionalDynamic;)Lcom/mojang/serialization/Dynamic; updateChunkTag
net/minecraft/util/datafix/fixes/BlockRenameFixWithJigsaw net/minecraft/util/datafix/fixes/BlockRenameFixWithJigsaw
	a name
	b (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/DataFix; create
net/minecraft/util/datafix/fixes/CavesAndCliffsRenames net/minecraft/util/datafix/fixes/CavesAndCliffsRenames
	a RENAMES
net/minecraft/util/datafix/fixes/ChunkHeightAndBiomeFix net/minecraft/util/datafix/fixes/ChunkHeightAndBiomeFix
	a DATAFIXER_CONTEXT_TAG
	b BLOCKS_PER_SECTION
	c DEFAULT_BIOME
	d NAME
	e OLD_SECTION_COUNT
	f NEW_SECTION_COUNT
	g NEW_MIN_SECTION_Y
	h LONGS_PER_SECTION
	i HEIGHTMAP_BITS
	j HEIGHTMAP_MASK
	k HEIGHTMAP_OFFSET
	l HEIGHTMAP_TYPES
	m STATUS_IS_OR_AFTER_SURFACE
	n STATUS_IS_OR_AFTER_NOISE
	o BLOCKS_BEFORE_FEATURE_STATUS
	p BIOME_CONTAINER_LAYER_SIZE
	q BIOME_CONTAINER_SIZE
	r BIOME_CONTAINER_TOP_LAYER_OFFSET
	s BIOMES_BY_ID
	a (I)I ceillog2
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; shiftUpgradeData
	a (Lcom/mojang/serialization/Dynamic;II)Lcom/mojang/serialization/Dynamic; updateCarvingMasks
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; makePalettedContainer
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;Ljava/util/List;)Lcom/mojang/serialization/Dynamic; padPaletteEntries
	a (Lcom/mojang/serialization/Dynamic;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;)Lcom/mojang/serialization/Dynamic; makeBiomeContainer
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; addPaddingEntries
	a (Lcom/mojang/serialization/Dynamic;Ljava/util/Set;)Lcom/mojang/serialization/Dynamic; predictChunkStatusBeforeSurface
	a (Lcom/mojang/serialization/Dynamic;ZILorg/apache/commons/lang3/mutable/MutableBoolean;)[Lcom/mojang/serialization/Dynamic; getBiomeContainers
	a (Lcom/mojang/serialization/Dynamic;ZZZLjava/util/function/Supplier;)Lcom/mojang/serialization/Dynamic; updateChunkTag
	a ([II)I getOldBiome
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateHeightmaps
	b (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; makeOptimizedPalettedContainer
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; getFixedHeightmap
	d (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; makePalettedContainer
net/minecraft/util/datafix/fixes/ChunkProtoTickListFix net/minecraft/util/datafix/fixes/ChunkProtoTickListFix
	a SECTION_WIDTH
	b ALWAYS_WATERLOGGED
	a (Lcom/mojang/serialization/Dynamic;)Ljava/lang/String; getBlock
	a (Lcom/mojang/serialization/Dynamic;Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;BIILjava/lang/String;Ljava/util/function/Function;)Lcom/mojang/serialization/Dynamic; makeTickList
	a (Lcom/mojang/serialization/Dynamic;Ljava/util/function/Supplier;IIIILjava/util/function/Function;)Lcom/mojang/serialization/Dynamic; createTick
	b (Lcom/mojang/serialization/Dynamic;)Ljava/lang/String; getLiquid
net/minecraft/util/datafix/fixes/CriteriaRenameFix net/minecraft/util/datafix/fixes/CriteriaRenameFix
	a name
	b advancementId
	c conversions
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixAdvancements
net/minecraft/util/datafix/fixes/EffectDurationFix net/minecraft/util/datafix/fixes/EffectDurationFix
	a ITEM_TYPES
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixEffect
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fix
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateEntity
net/minecraft/util/datafix/fixes/EntityVariantFix net/minecraft/util/datafix/fixes/EntityVariantFix
	a fieldName
	b idConversions
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/serialization/Dynamic; updateAndRename
net/minecraft/util/datafix/fixes/GoatHornIdFix net/minecraft/util/datafix/fixes/GoatHornIdFix
	a INSTRUMENTS
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixItemStackTag
net/minecraft/util/datafix/fixes/ItemRemoveBlockEntityTagFix net/minecraft/util/datafix/fixes/ItemRemoveBlockEntityTagFix
	a items
net/minecraft/util/datafix/fixes/ItemStackTagFix net/minecraft/util/datafix/fixes/ItemStackTagFix
	a name
	b idFilter
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixItemStackTag
net/minecraft/util/datafix/fixes/PoiTypeRemoveFix net/minecraft/util/datafix/fixes/PoiTypeRemoveFix
	a typesToKeep
	a (Lcom/mojang/serialization/Dynamic;)Z shouldKeepRecord
	a (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; processRecords
net/minecraft/util/datafix/fixes/PoiTypeRenameFix net/minecraft/util/datafix/fixes/PoiTypeRenameFix
	a renamer
	a (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; processRecords
net/minecraft/util/datafix/fixes/SavedDataFeaturePoolElementFix net/minecraft/util/datafix/fixes/SavedDataFeaturePoolElementFix
	a INDEX_PATTERN
	b PIECE_TYPE
	c FEATURES
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixFeature
	a (Lcom/mojang/serialization/Dynamic;[Ljava/lang/String;)Lcom/mojang/serialization/OptionalDynamic; get
	a (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional; getReplacement
	a (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; updateChildren
	b (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	c (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateChildren
net/minecraft/util/datafix/fixes/SimpleRenameFix net/minecraft/util/datafix/fixes/SimpleRenameFix
	a fixerName
	b nameMapping
	c typeReference
net/minecraft/util/datafix/fixes/StatsRenameFix net/minecraft/util/datafix/fixes/StatsRenameFix
	a name
	b renames
	a ()Lcom/mojang/datafixers/TypeRewriteRule; createCriteriaRule
	b ()Lcom/mojang/datafixers/TypeRewriteRule; createStatRule
net/minecraft/util/datafix/fixes/StructuresBecomeConfiguredFix net/minecraft/util/datafix/fixes/StructuresBecomeConfiguredFix
	a CONVERSION_MAP
	a (Lcom/mojang/datafixers/util/Pair;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; updateStart
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fix
	a (Lcom/mojang/serialization/Dynamic;Lawp$a;)Ljava/util/Optional; guessConfiguration
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateStarts
	b (Lcom/mojang/datafixers/util/Pair;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; updateReference
	b (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateReferences
	c (Lcom/mojang/datafixers/util/Pair;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; findUpdatedStructureType
net/minecraft/util/datafix/fixes/VariantRenameFix net/minecraft/util/datafix/fixes/VariantRenameFix
	a renames
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
net/minecraft/util/datafix/fixes/WorldGenSettingsHeightAndBiomeFix net/minecraft/util/datafix/fixes/WorldGenSettingsHeightAndBiomeFix
	a WAS_PREVIOUSLY_INCREASED_KEY
	b NAME
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updateLayers
net/minecraft/util/profiling/jfr/Environment net/minecraft/util/profiling/jfr/Environment
	a CLIENT
	b SERVER
	c description
	d $VALUES
	a ()Ljava/lang/String; getDescription
	a (Lnet/minecraft/server/MinecraftServer;)Lnet/minecraft/util/profiling/jfr/Environment; from
	b ()[Lnet/minecraft/util/profiling/jfr/Environment; $values
net/minecraft/util/profiling/jfr/JfrProfiler net/minecraft/util/profiling/jfr/JfrProfiler
	a ROOT_CATEGORY
	b WORLD_GEN_CATEGORY
	c TICK_CATEGORY
	d NETWORK_CATEGORY
	f LOGGER
	g CUSTOM_EVENTS
	h FLIGHT_RECORDER_CONFIG
	i DATE_TIME_FORMATTER
	j INSTANCE
	k recording
	l currentAverageTickTime
	m networkTrafficByAddress
	a ()Lnet/minecraft/util/profiling/jfr/JfrProfiler; getInstance
	a (F)V onServerTick
	a (IILjava/net/SocketAddress;I)V onPacketReceived
	a (Ljava/io/Reader;Lnet/minecraft/util/profiling/jfr/Environment;)Z start
	a (Ljava/net/SocketAddress;)Lnet/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$b; networkStatFor
	a (Lnet/minecraft/util/profiling/jfr/Environment;)Z start
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/resources/ResourceKey;Ljava/lang/String;)Lnet/minecraft/util/profiling/jfr/callback/ProfiledDuration; onChunkGenerate
	b ()Ljava/nio/file/Path; stop
	b (IILjava/net/SocketAddress;I)V onPacketSent
	c ()Z isRunning
	d ()Z isAvailable
	e ()Lnet/minecraft/util/profiling/jfr/callback/ProfiledDuration; onWorldLoadedStarted
	f ()V setupSummaryListener
net/minecraft/util/profiling/jfr/JvmProfiler net/minecraft/util/profiling/jfr/JvmProfiler
	e INSTANCE
	a (F)V onServerTick
	a (IILjava/net/SocketAddress;I)V onPacketReceived
	a (Lnet/minecraft/util/profiling/jfr/Environment;)Z start
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/resources/ResourceKey;Ljava/lang/String;)Lnet/minecraft/util/profiling/jfr/callback/ProfiledDuration; onChunkGenerate
	b ()Ljava/nio/file/Path; stop
	b (IILjava/net/SocketAddress;I)V onPacketSent
	c ()Z isRunning
	d ()Z isAvailable
	e ()Lnet/minecraft/util/profiling/jfr/callback/ProfiledDuration; onWorldLoadedStarted
net/minecraft/util/profiling/jfr/Percentiles net/minecraft/util/profiling/jfr/Percentiles
	a DEFAULT_INDEXES
	a (Ljava/util/Map;)Ljava/util/Map; sorted
	a ([D)Ljava/util/Map; evaluate
	a ([J)Ljava/util/Map; evaluate
net/minecraft/util/profiling/jfr/SummaryReporter net/minecraft/util/profiling/jfr/SummaryReporter
	a LOGGER
	b onDeregistration
	a (Ljava/nio/file/Path;)V recordingStopped
	a (Ljava/util/function/Supplier;)V infoWithFallback
	a (Ljava/util/function/Supplier;Ljava/lang/Throwable;)V warnWithFallback
net/minecraft/util/profiling/jfr/parse/JfrStatsParser net/minecraft/util/profiling/jfr/parse/JfrStatsParser
	a recordingStarted
	b recordingEnded
	c chunkGenStats
	d cpuLoadStat
	e receivedPackets
	f sentPackets
	g fileWrites
	h fileReads
	i garbageCollections
	j gcTotalDuration
	k gcHeapStats
	l threadAllocationStats
	m tickTimes
	n worldCreationDuration
	a ()Lnet/minecraft/util/profiling/jfr/parse/JfrStatsResult; results
	a (Ljava/nio/file/Path;)Lnet/minecraft/util/profiling/jfr/parse/JfrStatsResult; parse
	a (Ljava/time/Duration;Ljava/util/Map;)Lnet/minecraft/util/profiling/jfr/stats/NetworkPacketSummary; collectPacketStats
	a (Ljava/util/stream/Stream;)V capture
	a (Ljdk/jfr/consumer/RecordedEvent;ILjava/util/Map;)V incrementPacket
	a (Ljdk/jfr/consumer/RecordedEvent;Ljava/util/List;Ljava/lang/String;)V appendFileIO
net/minecraft/util/profiling/jfr/parse/JfrStatsResult net/minecraft/util/profiling/jfr/parse/JfrStatsResult
	a recordingStarted
	b recordingEnded
	c recordingDuration
	d worldCreationDuration
	e tickTimes
	f cpuLoadStats
	g heapSummary
	h threadAllocationSummary
	i receivedPacketsSummary
	j sentPacketsSummary
	k fileWrites
	l fileReads
	m chunkGenStats
	a ()Ljava/util/List; chunkGenSummary
	b ()Ljava/lang/String; asJson
	c ()Ljava/time/Instant; recordingStarted
	d ()Ljava/time/Instant; recordingEnded
	e ()Ljava/time/Duration; recordingDuration
	f ()Ljava/time/Duration; worldCreationDuration
	g ()Ljava/util/List; tickTimes
	h ()Ljava/util/List; cpuLoadStats
	i ()Lbbk$a; heapSummary
	j ()Lbbm$a; threadAllocationSummary
	k ()Lnet/minecraft/util/profiling/jfr/stats/NetworkPacketSummary; receivedPacketsSummary
	l ()Lnet/minecraft/util/profiling/jfr/stats/NetworkPacketSummary; sentPacketsSummary
	m ()Lbbj$a; fileWrites
	n ()Lbbj$a; fileReads
	o ()Ljava/util/List; chunkGenStats
net/minecraft/util/profiling/jfr/serialize/JfrResultJsonSerializer net/minecraft/util/profiling/jfr/serialize/JfrResultJsonSerializer
	a gson
	b BYTES_PER_SECOND
	c COUNT
	d DURATION_NANOS_TOTAL
	e TOTAL_BYTES
	f COUNT_PER_SECOND
	a (Lbbj$a;)Lcom/google/gson/JsonElement; fileIoSummary
	a (Lbbk$a;)Lcom/google/gson/JsonElement; heap
	a (Lbbm$a;)Lcom/google/gson/JsonElement; threadAllocations
	a (Ljava/util/List;)Lcom/google/gson/JsonElement; chunkGen
	a (Lnet/minecraft/util/profiling/jfr/parse/JfrStatsResult;)Ljava/lang/String; format
	a (Lnet/minecraft/util/profiling/jfr/stats/NetworkPacketSummary;)Lcom/google/gson/JsonElement; packets
	b (Ljava/util/List;)Lcom/google/gson/JsonElement; serverTicks
	b (Lnet/minecraft/util/profiling/jfr/parse/JfrStatsResult;)Lcom/google/gson/JsonElement; fileIO
	c (Ljava/util/List;)Lcom/google/gson/JsonElement; cpu
	c (Lnet/minecraft/util/profiling/jfr/parse/JfrStatsResult;)Lcom/google/gson/JsonElement; network
net/minecraft/util/profiling/jfr/stats/ChunkGenStat net/minecraft/util/profiling/jfr/stats/ChunkGenStat
	a duration
	b chunkPos
	c worldPos
	d status
	e level
	a ()Ljava/time/Duration; duration
	a (Ljdk/jfr/consumer/RecordedEvent;)Lnet/minecraft/util/profiling/jfr/stats/ChunkGenStat; from
	b ()Lnet/minecraft/world/level/ChunkCoordIntPair; chunkPos
	c ()Lnet/minecraft/server/level/BlockPosition2D; worldPos
	d ()Lnet/minecraft/world/level/chunk/ChunkStatus; status
	e ()Ljava/lang/String; level
net/minecraft/util/profiling/jfr/stats/CpuLoadStat net/minecraft/util/profiling/jfr/stats/CpuLoadStat
	a jvm
	b userJvm
	c system
	a ()D jvm
	a (Ljdk/jfr/consumer/RecordedEvent;)Lnet/minecraft/util/profiling/jfr/stats/CpuLoadStat; from
	b ()D userJvm
	c ()D system
net/minecraft/util/profiling/jfr/stats/FileIOStat net/minecraft/util/profiling/jfr/stats/FileIOStat
	a duration
	b path
	c bytes
	a ()Ljava/time/Duration; duration
	a (Ljava/time/Duration;Ljava/util/List;)Lbbj$a; summary
	b ()Ljava/lang/String; path
	c ()J bytes
net/minecraft/util/profiling/jfr/stats/GcHeapStat net/minecraft/util/profiling/jfr/stats/GcHeapStat
	a timestamp
	b heapUsed
	c timing
	a ()Ljava/time/Instant; timestamp
	a (Ljava/time/Duration;Ljava/util/List;Ljava/time/Duration;I)Lbbk$a; summary
	a (Ljava/util/List;)D calculateAllocationRatePerSecond
	a (Ljdk/jfr/consumer/RecordedEvent;)Lnet/minecraft/util/profiling/jfr/stats/GcHeapStat; from
	b ()J heapUsed
	c ()Lbbk$b; timing
net/minecraft/util/profiling/jfr/stats/NetworkPacketSummary net/minecraft/util/profiling/jfr/stats/NetworkPacketSummary
	a totalPacketCountAndSize
	b largestSizeContributors
	c recordingDuration
	a ()D getCountsPerSecond
	b ()D getSizePerSecond
	c ()J getTotalCount
	d ()J getTotalSize
	e ()Ljava/util/List; largestSizeContributors
net/minecraft/util/profiling/jfr/stats/ThreadAllocationStat net/minecraft/util/profiling/jfr/stats/ThreadAllocationStat
	a timestamp
	b threadName
	c totalBytes
	d UNKNOWN_THREAD
	a ()Ljava/time/Instant; timestamp
	a (Ljava/util/List;)Lbbm$a; summary
	a (Ljdk/jfr/consumer/RecordedEvent;)Lnet/minecraft/util/profiling/jfr/stats/ThreadAllocationStat; from
	b ()Ljava/lang/String; threadName
	c ()J totalBytes
net/minecraft/util/profiling/jfr/stats/TickTimeStat net/minecraft/util/profiling/jfr/stats/TickTimeStat
	a timestamp
	b currentAverage
	a ()Ljava/time/Instant; timestamp
	a (Ljdk/jfr/consumer/RecordedEvent;)Lnet/minecraft/util/profiling/jfr/stats/TickTimeStat; from
	b ()Ljava/time/Duration; currentAverage
net/minecraft/util/profiling/jfr/stats/TimedStatSummary net/minecraft/util/profiling/jfr/stats/TimedStatSummary
	a fastest
	b slowest
	c secondSlowest
	d count
	e percentilesNanos
	f totalDuration
	a ()Lnet/minecraft/util/profiling/jfr/stats/TimedStat; fastest
	a (Ljava/util/List;)Lnet/minecraft/util/profiling/jfr/stats/TimedStatSummary; summary
	b ()Lnet/minecraft/util/profiling/jfr/stats/TimedStat; slowest
	c ()Lnet/minecraft/util/profiling/jfr/stats/TimedStat; secondSlowest
	d ()I count
	e ()Ljava/util/Map; percentilesNanos
	f ()Ljava/time/Duration; totalDuration
net/minecraft/util/profiling/metrics/MetricCategory net/minecraft/util/profiling/metrics/MetricCategory
	a PATH_FINDING
	b EVENT_LOOPS
	c MAIL_BOXES
	d TICK_LOOP
	e JVM
	f CHUNK_RENDERING
	g CHUNK_RENDERING_DISPATCHING
	h CPU
	i GPU
	j description
	k $VALUES
	a ()Ljava/lang/String; getDescription
	b ()[Lnet/minecraft/util/profiling/metrics/MetricCategory; $values
net/minecraft/util/profiling/metrics/MetricSampler net/minecraft/util/profiling/metrics/MetricSampler
	a thresholdTest
	b name
	c category
	d sampler
	e ticks
	f values
	g isRunning
	h beforeTick
	i currentValue
	a ()V onStartTick
	a (I)V onEndTick
	a (Ljava/lang/String;Lnet/minecraft/util/profiling/metrics/MetricCategory;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lnet/minecraft/util/profiling/metrics/MetricSampler; create
	a (Ljava/lang/String;Lnet/minecraft/util/profiling/metrics/MetricCategory;Ljava/util/function/DoubleSupplier;)Lnet/minecraft/util/profiling/metrics/MetricSampler; create
	a (Ljava/lang/String;Lnet/minecraft/util/profiling/metrics/MetricCategory;Ljava/util/function/ToDoubleFunction;Ljava/lang/Object;)Lbbt$a; builder
	b ()V onFinished
	c ()Ljava/util/function/DoubleSupplier; getSampler
	d ()Ljava/lang/String; getName
	e ()Lnet/minecraft/util/profiling/metrics/MetricCategory; getCategory
	f ()Lbbt$b; result
	g ()Z triggersThreshold
	h ()V verifyRunning
net/minecraft/util/profiling/metrics/MetricsRegistry net/minecraft/util/profiling/metrics/MetricsRegistry
	a INSTANCE
	b measuredInstances
	a ()Ljava/util/List; getRegisteredSamplers
	a (Ljava/util/Map;)Ljava/util/List; aggregateDuplicates
	a (Lnet/minecraft/util/profiling/metrics/ProfilerMeasured;)V add
net/minecraft/util/profiling/metrics/profiling/ActiveMetricsRecorder net/minecraft/util/profiling/metrics/profiling/ActiveMetricsRecorder
	a PROFILING_MAX_DURATION_SECONDS
	b globalOnReportFinished
	c deviationsBySampler
	d taskProfiler
	e ioExecutor
	f metricsPersister
	g onProfilingEnd
	h onReportFinished
	i metricsSamplerProvider
	j wallTimeSource
	k deadlineNano
	l currentTick
	m singleTickProfiler
	n killSwitch
	o thisTickSamplers
	a ()V end
	a (Ljava/util/Collection;)V cleanup
	a (Ljava/util/function/Consumer;)V registerGlobalCompletionCallback
	a (Lnet/minecraft/util/profiling/MethodProfilerResults;)V scheduleSaveResults
	a (Lnet/minecraft/util/profiling/metrics/MetricsSamplerProvider;Ljava/util/function/LongSupplier;Ljava/util/concurrent/Executor;Lnet/minecraft/util/profiling/metrics/storage/MetricsPersister;Ljava/util/function/Consumer;Ljava/util/function/Consumer;)Lnet/minecraft/util/profiling/metrics/profiling/ActiveMetricsRecorder; createStarted
	b ()V cancel
	c ()V startTick
	d ()V endTick
	e ()Z isRecording
	f ()Lnet/minecraft/util/profiling/GameProfilerFiller; getProfiler
	g ()V verifyStarted
net/minecraft/util/profiling/metrics/profiling/InactiveMetricsRecorder net/minecraft/util/profiling/metrics/profiling/InactiveMetricsRecorder
	a INSTANCE
	a ()V end
	b ()V cancel
	c ()V startTick
	d ()V endTick
	e ()Z isRecording
	f ()Lnet/minecraft/util/profiling/GameProfilerFiller; getProfiler
net/minecraft/util/profiling/metrics/profiling/ProfilerSamplerAdapter net/minecraft/util/profiling/metrics/profiling/ProfilerSamplerAdapter
	a previouslyFoundSamplerNames
	a (Ljava/util/function/Supplier;)Ljava/util/Set; newSamplersFoundInProfiler
	a (Ljava/util/function/Supplier;Ljava/lang/String;Lnet/minecraft/util/profiling/metrics/MetricCategory;)Lnet/minecraft/util/profiling/metrics/MetricSampler; samplerForProfilingPath
net/minecraft/util/profiling/metrics/profiling/ServerMetricsSamplersProvider net/minecraft/util/profiling/metrics/profiling/ServerMetricsSamplersProvider
	a LOGGER
	b samplers
	c samplerFactory
	a ()Ljava/util/Set; runtimeIndependentSamplers
	a (Ljava/util/function/LongSupplier;)Lnet/minecraft/util/profiling/metrics/MetricSampler; tickTimeSampler
	a (Ljava/util/function/Supplier;)Ljava/util/Set; samplers
net/minecraft/util/profiling/metrics/storage/MetricsPersister net/minecraft/util/profiling/metrics/storage/MetricsPersister
	a PROFILING_RESULTS_DIR
	b METRICS_DIR_NAME
	c DEVIATIONS_DIR_NAME
	d PROFILING_RESULT_FILENAME
	e LOGGER
	f rootFolderName
	a (Ljava/util/Map;Ljava/nio/file/Path;)V saveDeviations
	a (Ljava/util/Set;Ljava/nio/file/Path;)V saveMetrics
	a (Ljava/util/Set;Ljava/util/Map;Lnet/minecraft/util/profiling/MethodProfilerResults;)Ljava/nio/file/Path; saveReports
	a (Lnet/minecraft/util/profiling/MethodProfilerResults;Ljava/nio/file/Path;)V saveProfilingTaskExecutionResult
	a (Lnet/minecraft/util/profiling/metrics/MetricCategory;Ljava/util/List;Ljava/nio/file/Path;)V saveCategory
net/minecraft/util/profiling/metrics/storage/RecordedDeviation net/minecraft/util/profiling/metrics/storage/RecordedDeviation
	a timestamp
	b tick
	c profilerResultAtTick
net/minecraft/util/random/Weight net/minecraft/util/random/Weight
	a CODEC
	b ONE
	c LOGGER
	d value
	a ()I asInt
	a (I)Lnet/minecraft/util/random/Weight; of
	b (I)V validateWeight
net/minecraft/util/random/WeightedRandomList net/minecraft/util/random/WeightedRandomList
	a totalWeight
	b items
	a (Ljava/util/List;)Lnet/minecraft/util/random/WeightedRandomList; create
	a ([Lnet/minecraft/util/random/WeightedEntry;)Lnet/minecraft/util/random/WeightedRandomList; create
	b (Lnet/minecraft/util/RandomSource;)Ljava/util/Optional; getRandom
	c ()Lnet/minecraft/util/random/WeightedRandomList; create
	c (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; codec
	d ()Z isEmpty
	e ()Ljava/util/List; unwrap
net/minecraft/util/valueproviders/BiasedToBottomInt net/minecraft/util/valueproviders/BiasedToBottomInt
	a CODEC
	b minInclusive
	f maxInclusive
	a ()I getMinValue
	a (II)Lnet/minecraft/util/valueproviders/BiasedToBottomInt; of
	a (Lnet/minecraft/util/RandomSource;)I sample
	b ()I getMaxValue
	c ()Lnet/minecraft/util/valueproviders/IntProviderType; getType
net/minecraft/util/valueproviders/ClampedInt net/minecraft/util/valueproviders/ClampedInt
	a CODEC
	b source
	f minInclusive
	g maxInclusive
	a ()I getMinValue
	a (Lnet/minecraft/util/RandomSource;)I sample
	a (Lnet/minecraft/util/valueproviders/IntProvider;II)Lnet/minecraft/util/valueproviders/ClampedInt; of
	b ()I getMaxValue
	c ()Lnet/minecraft/util/valueproviders/IntProviderType; getType
net/minecraft/util/valueproviders/ClampedNormalFloat net/minecraft/util/valueproviders/ClampedNormalFloat
	a CODEC
	b mean
	d deviation
	e min
	f max
	a ()F getMinValue
	a (FFFF)Lnet/minecraft/util/valueproviders/ClampedNormalFloat; of
	a (Lnet/minecraft/util/RandomSource;)F sample
	a (Lnet/minecraft/util/RandomSource;FFFF)F sample
	b ()F getMaxValue
	c ()Lnet/minecraft/util/valueproviders/FloatProviderType; getType
net/minecraft/util/valueproviders/ClampedNormalInt net/minecraft/util/valueproviders/ClampedNormalInt
	a CODEC
	b mean
	f deviation
	g min_inclusive
	h max_inclusive
	a ()I getMinValue
	a (FFII)Lnet/minecraft/util/valueproviders/ClampedNormalInt; of
	a (Lnet/minecraft/util/RandomSource;)I sample
	a (Lnet/minecraft/util/RandomSource;FFFF)I sample
	b ()I getMaxValue
	c ()Lnet/minecraft/util/valueproviders/IntProviderType; getType
net/minecraft/util/valueproviders/ConstantFloat net/minecraft/util/valueproviders/ConstantFloat
	a ZERO
	b CODEC
	d value
	a ()F getMinValue
	a (F)Lnet/minecraft/util/valueproviders/ConstantFloat; of
	a (Lnet/minecraft/util/RandomSource;)F sample
	b ()F getMaxValue
	c ()Lnet/minecraft/util/valueproviders/FloatProviderType; getType
	d ()F getValue
net/minecraft/util/valueproviders/ConstantInt net/minecraft/util/valueproviders/ConstantInt
	a ZERO
	b CODEC
	f value
	a ()I getMinValue
	a (I)Lnet/minecraft/util/valueproviders/ConstantInt; of
	a (Lnet/minecraft/util/RandomSource;)I sample
	b ()I getMaxValue
	c ()Lnet/minecraft/util/valueproviders/IntProviderType; getType
	d ()I getValue
net/minecraft/util/valueproviders/FloatProvider net/minecraft/util/valueproviders/FloatProvider
	a CONSTANT_OR_DISPATCH_CODEC
	c CODEC
	a ()F getMinValue
	a (FF)Lcom/mojang/serialization/Codec; codec
	b ()F getMaxValue
	c ()Lnet/minecraft/util/valueproviders/FloatProviderType; getType
net/minecraft/util/valueproviders/FloatProviderType net/minecraft/util/valueproviders/FloatProviderType
	a CONSTANT
	b UNIFORM
	c CLAMPED_NORMAL
	d TRAPEZOID
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/util/valueproviders/FloatProviderType; register
net/minecraft/util/valueproviders/IntProvider net/minecraft/util/valueproviders/IntProvider
	a CONSTANT_OR_DISPATCH_CODEC
	c CODEC
	d NON_NEGATIVE_CODEC
	e POSITIVE_CODEC
	a ()I getMinValue
	a (IILcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; codec
	a (Lnet/minecraft/util/RandomSource;)I sample
	b ()I getMaxValue
	b (II)Lcom/mojang/serialization/Codec; codec
	c ()Lnet/minecraft/util/valueproviders/IntProviderType; getType
net/minecraft/util/valueproviders/IntProviderType net/minecraft/util/valueproviders/IntProviderType
	a CONSTANT
	b UNIFORM
	c BIASED_TO_BOTTOM
	d CLAMPED
	e WEIGHTED_LIST
	f CLAMPED_NORMAL
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/util/valueproviders/IntProviderType; register
net/minecraft/util/valueproviders/TrapezoidFloat net/minecraft/util/valueproviders/TrapezoidFloat
	a CODEC
	b min
	d max
	e plateau
	a ()F getMinValue
	a (FFF)Lnet/minecraft/util/valueproviders/TrapezoidFloat; of
	a (Lnet/minecraft/util/RandomSource;)F sample
	b ()F getMaxValue
	c ()Lnet/minecraft/util/valueproviders/FloatProviderType; getType
net/minecraft/util/valueproviders/UniformFloat net/minecraft/util/valueproviders/UniformFloat
	a CODEC
	b minInclusive
	d maxExclusive
	a ()F getMinValue
	a (Lnet/minecraft/util/RandomSource;)F sample
	b ()F getMaxValue
	b (FF)Lnet/minecraft/util/valueproviders/UniformFloat; of
	c ()Lnet/minecraft/util/valueproviders/FloatProviderType; getType
net/minecraft/util/valueproviders/UniformInt net/minecraft/util/valueproviders/UniformInt
	a CODEC
	b minInclusive
	f maxInclusive
	a ()I getMinValue
	a (II)Lnet/minecraft/util/valueproviders/UniformInt; of
	a (Lnet/minecraft/util/RandomSource;)I sample
	b ()I getMaxValue
	c ()Lnet/minecraft/util/valueproviders/IntProviderType; getType
net/minecraft/util/valueproviders/WeightedListInt net/minecraft/util/valueproviders/WeightedListInt
	a CODEC
	b distribution
	f minValue
	g maxValue
	a ()I getMinValue
	a (Lnet/minecraft/util/RandomSource;)I sample
	b ()I getMaxValue
	c ()Lnet/minecraft/util/valueproviders/IntProviderType; getType
net/minecraft/util/worldupdate/WorldUpgrader net/minecraft/util/worldupdate/WorldUpgrader
	a LOGGER
	b THREAD_FACTORY
	c dimensions
	d levels
	e eraseCache
	f levelStorage
	g thread
	h dataFixer
	i running
	j finished
	k progress
	l totalChunks
	m converted
	n skipped
	o progressMap
	p status
	q REGEX
	r overworldDataStorage
	a ()V cancel
	a (Lnet/minecraft/resources/ResourceKey;)F dimensionProgress
	b ()Z isFinished
	b (Lnet/minecraft/resources/ResourceKey;)Ljava/util/List; getAllChunkPos
	c ()Ljava/util/Set; levels
	d ()F getProgress
	e ()I getTotalChunks
	f ()I getConverted
	g ()I getSkipped
	h ()Lnet/minecraft/network/chat/IChatBaseComponent; getStatus
	i ()V work
net/minecraft/world/damagesource/CombatEntry net/minecraft/world/damagesource/CombatEntry
	a source
	b time
	c damage
	d health
	e location
	f fallDistance
	a ()Lnet/minecraft/world/damagesource/DamageSource; getSource
	b ()I getTime
	c ()F getDamage
	d ()F getHealthBeforeDamage
	e ()F getHealthAfterDamage
	f ()Z isCombatRelated
	g ()Ljava/lang/String; getLocation
	h ()Lnet/minecraft/network/chat/IChatBaseComponent; getAttackerName
	i ()Lnet/minecraft/world/entity/Entity; getAttacker
	j ()F getFallDistance
net/minecraft/world/damagesource/CombatTracker net/minecraft/world/damagesource/CombatTracker
	a RESET_DAMAGE_STATUS_TIME
	b RESET_COMBAT_STATUS_TIME
	c INTENTIONAL_GAME_DESIGN_STYLE
	d entries
	e mob
	f lastDamageTime
	g combatStartTime
	h combatEndTime
	i inCombat
	j takingDamage
	k nextLocation
	a ()V prepareForDamage
	a (Lnet/minecraft/world/damagesource/CombatEntry;)Ljava/lang/String; getFallLocation
	a (Lnet/minecraft/world/damagesource/DamageSource;FF)V recordDamage
	b ()Lnet/minecraft/network/chat/IChatBaseComponent; getDeathMessage
	c ()Lnet/minecraft/world/entity/EntityLiving; getKiller
	d ()Z isTakingDamage
	e ()Z isInCombat
	f ()I getCombatDuration
	g ()V recheckStatus
	h ()Lnet/minecraft/world/entity/EntityLiving; getMob
	i ()Lnet/minecraft/world/damagesource/CombatEntry; getLastEntry
	j ()I getKillerId
	k ()Lnet/minecraft/world/damagesource/CombatEntry; getMostSignificantFall
	l ()V resetPreparedStatus
net/minecraft/world/damagesource/DamageEffects net/minecraft/world/damagesource/DamageEffects
	a HURT
	b THORNS
	c DROWNING
	d BURNING
	e POKING
	f FREEZING
	g CODEC
	h id
	i sound
	j $VALUES
	a ()Lnet/minecraft/sounds/SoundEffect; sound
	b ()[Lnet/minecraft/world/damagesource/DamageEffects; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/damagesource/DamageScaling net/minecraft/world/damagesource/DamageScaling
	a NEVER
	b WHEN_CAUSED_BY_LIVING_NON_PLAYER
	c ALWAYS
	d CODEC
	e id
	f $VALUES
	a ()[Lnet/minecraft/world/damagesource/DamageScaling; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/damagesource/DamageSource net/minecraft/world/damagesource/DamageSource
	a type
	b causingEntity
	c directEntity
	d damageSourcePosition
	a ()F getFoodExhaustion
	a (Lnet/minecraft/resources/ResourceKey;)Z is
	a (Lnet/minecraft/tags/TagKey;)Z is
	a (Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/network/chat/IChatBaseComponent; getLocalizedDeathMessage
	b ()Z isIndirect
	c ()Lnet/minecraft/world/entity/Entity; getDirectEntity
	d ()Lnet/minecraft/world/entity/Entity; getEntity
	e ()Ljava/lang/String; getMsgId
	f ()Z scalesWithDifficulty
	g ()Z isCreativePlayer
	h ()Lnet/minecraft/world/phys/Vec3D; getSourcePosition
	i ()Lnet/minecraft/world/phys/Vec3D; sourcePositionRaw
	j ()Lnet/minecraft/world/damagesource/DamageType; type
	k ()Lnet/minecraft/core/Holder; typeHolder
net/minecraft/world/damagesource/DamageSources net/minecraft/world/damagesource/DamageSources
	a damageTypes
	b inFire
	c lightningBolt
	d onFire
	e lava
	f hotFloor
	g inWall
	h cramming
	i drown
	j starve
	k cactus
	l fall
	m flyIntoWall
	n outOfWorld
	o generic
	p magic
	q wither
	r dragonBreath
	s dryOut
	t sweetBerryBush
	u freeze
	v stalagmite
	a ()Lnet/minecraft/world/damagesource/DamageSource; inFire
	a (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/damagesource/DamageSource; source
	a (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; source
	a (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; source
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; fallingBlock
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; trident
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/damagesource/DamageSource; mobProjectile
	a (Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/damagesource/DamageSource; sting
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Lnet/minecraft/world/damagesource/DamageSource; playerAttack
	a (Lnet/minecraft/world/entity/projectile/EntityArrow;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; arrow
	a (Lnet/minecraft/world/entity/projectile/EntityFireballFireball;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; fireball
	a (Lnet/minecraft/world/entity/projectile/EntityFireworks;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; fireworks
	a (Lnet/minecraft/world/entity/projectile/EntityWitherSkull;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; witherSkull
	a (Lnet/minecraft/world/level/Explosion;)Lnet/minecraft/world/damagesource/DamageSource; explosion
	a (Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/damagesource/DamageSource; badRespawnPointExplosion
	b ()Lnet/minecraft/world/damagesource/DamageSource; lightningBolt
	b (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; anvil
	b (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; thrown
	b (Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/damagesource/DamageSource; mobAttack
	c ()Lnet/minecraft/world/damagesource/DamageSource; onFire
	c (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; fallingStalactite
	c (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; indirectMagic
	c (Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/damagesource/DamageSource; noAggroMobAttack
	d ()Lnet/minecraft/world/damagesource/DamageSource; lava
	d (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; thorns
	d (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; explosion
	e ()Lnet/minecraft/world/damagesource/DamageSource; hotFloor
	e (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; sonicBoom
	f ()Lnet/minecraft/world/damagesource/DamageSource; inWall
	g ()Lnet/minecraft/world/damagesource/DamageSource; cramming
	h ()Lnet/minecraft/world/damagesource/DamageSource; drown
	i ()Lnet/minecraft/world/damagesource/DamageSource; starve
	j ()Lnet/minecraft/world/damagesource/DamageSource; cactus
	k ()Lnet/minecraft/world/damagesource/DamageSource; fall
	l ()Lnet/minecraft/world/damagesource/DamageSource; flyIntoWall
	m ()Lnet/minecraft/world/damagesource/DamageSource; outOfWorld
	n ()Lnet/minecraft/world/damagesource/DamageSource; generic
	o ()Lnet/minecraft/world/damagesource/DamageSource; magic
	p ()Lnet/minecraft/world/damagesource/DamageSource; wither
	q ()Lnet/minecraft/world/damagesource/DamageSource; dragonBreath
	r ()Lnet/minecraft/world/damagesource/DamageSource; dryOut
	s ()Lnet/minecraft/world/damagesource/DamageSource; sweetBerryBush
	t ()Lnet/minecraft/world/damagesource/DamageSource; freeze
	u ()Lnet/minecraft/world/damagesource/DamageSource; stalagmite
net/minecraft/world/damagesource/DamageType net/minecraft/world/damagesource/DamageType
	a CODEC
	b msgId
	c scaling
	d exhaustion
	e effects
	f deathMessageType
	a ()Ljava/lang/String; msgId
	b ()Lnet/minecraft/world/damagesource/DamageScaling; scaling
	c ()F exhaustion
	d ()Lnet/minecraft/world/damagesource/DamageEffects; effects
	e ()Lnet/minecraft/world/damagesource/DeathMessageType; deathMessageType
net/minecraft/world/damagesource/DamageTypes net/minecraft/world/damagesource/DamageTypes
	A MOB_ATTACK_NO_AGGRO
	B PLAYER_ATTACK
	C ARROW
	D TRIDENT
	E MOB_PROJECTILE
	F FIREWORKS
	G FIREBALL
	H UNATTRIBUTED_FIREBALL
	I WITHER_SKULL
	J THROWN
	K INDIRECT_MAGIC
	L THORNS
	M EXPLOSION
	N PLAYER_EXPLOSION
	O SONIC_BOOM
	P BAD_RESPAWN_POINT
	a IN_FIRE
	b LIGHTNING_BOLT
	c ON_FIRE
	d LAVA
	e HOT_FLOOR
	f IN_WALL
	g CRAMMING
	h DROWN
	i STARVE
	j CACTUS
	k FALL
	l FLY_INTO_WALL
	m OUT_OF_WORLD
	n GENERIC
	o MAGIC
	p WITHER
	q DRAGON_BREATH
	r DRY_OUT
	s SWEET_BERRY_BUSH
	t FREEZE
	u STALAGMITE
	v FALLING_BLOCK
	w FALLING_ANVIL
	x FALLING_STALACTITE
	y STING
	z MOB_ATTACK
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/world/damagesource/DeathMessageType net/minecraft/world/damagesource/DeathMessageType
	a DEFAULT
	b FALL_VARIANTS
	c INTENTIONAL_GAME_DESIGN
	d CODEC
	e id
	f $VALUES
	a ()[Lnet/minecraft/world/damagesource/DeathMessageType; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/effect/MobEffects net/minecraft/world/effect/MobEffects
	A UNLUCK
	B SLOW_FALLING
	C CONDUIT_POWER
	D DOLPHINS_GRACE
	E BAD_OMEN
	F HERO_OF_THE_VILLAGE
	G DARKNESS
	H DARKNESS_EFFECT_FACTOR_PADDING_DURATION_TICKS
	a MOVEMENT_SPEED
	b MOVEMENT_SLOWDOWN
	c DIG_SPEED
	d DIG_SLOWDOWN
	e DAMAGE_BOOST
	f HEAL
	g HARM
	h JUMP
	i CONFUSION
	j REGENERATION
	k DAMAGE_RESISTANCE
	l FIRE_RESISTANCE
	m WATER_BREATHING
	n INVISIBILITY
	o BLINDNESS
	p NIGHT_VISION
	q HUNGER
	r WEAKNESS
	s POISON
	t WITHER
	u HEALTH_BOOST
	v ABSORPTION
	w SATURATION
	x GLOWING
	y LEVITATION
	z LUCK
	a (ILjava/lang/String;Lnet/minecraft/world/effect/MobEffectList;)Lnet/minecraft/world/effect/MobEffectList; register
net/minecraft/world/entity/AnimationState net/minecraft/world/entity/AnimationState
	a STOPPED
	b lastTime
	c accumulatedTime
	a ()V stop
	a (FF)V updateTime
	a (I)V start
	a (Ljava/util/function/Consumer;)V ifStarted
	a (ZI)V animateWhen
	b ()J getAccumulatedTime
	b (I)V startIfStopped
	c ()Z isStarted
net/minecraft/world/entity/Display$BillboardConstraints net/minecraft/world/entity/Display$BillboardConstraints
	a FIXED
	b VERTICAL
	c HORIZONTAL
	d CENTER
	e CODEC
	f BY_ID
	g id
	h name
	i $VALUES
	a ()B getId
	b ()[Lnet/minecraft/world/entity/Display$BillboardConstraints; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/entity/Display$BlockDisplay net/minecraft/world/entity/Display$BlockDisplay
	o TAG_BLOCK_STATE
	p DATA_BLOCK_STATE_ID
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a_ ()V defineSynchedData
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/level/block/state/IBlockData;)V setBlockState
	o ()Lnet/minecraft/world/level/block/state/IBlockData; getBlockState
net/minecraft/world/entity/Display$Interpolator net/minecraft/world/entity/Display$Interpolator
	b lastValue
	c currentValue
	a (FLjava/lang/Object;)V updateValue
	c (F)Ljava/lang/Object; getGeneric
net/minecraft/world/entity/Display$InterpolatorSet net/minecraft/world/entity/Display$InterpolatorSet
	a interpolatedData
	b updaters
	a (FLnet/minecraft/network/syncher/DataWatcher;)V updateValues
	a (I)Z shouldTriggerUpdate
	a (Ljava/util/Set;Lnet/minecraft/world/entity/Display$IntepolatorUpdater;)V addEntry
	a (Lnet/minecraft/network/syncher/DataWatcherObject;Lnet/minecraft/world/entity/Display$Interpolator;)V addEntry
net/minecraft/world/entity/Display$ItemDisplay net/minecraft/world/entity/Display$ItemDisplay
	o TAG_ITEM
	p TAG_ITEM_DISPLAY
	q DATA_ITEM_STACK_ID
	r DATA_ITEM_DISPLAY_ID
	s slot
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/item/ItemDisplayContext;)V setItemTransform
	a (Lnet/minecraft/world/item/ItemStack;)V setItemStack
	a_ ()V defineSynchedData
	a_ (I)Lnet/minecraft/world/entity/SlotAccess; getSlot
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	o ()Lnet/minecraft/world/item/ItemStack; getItemStack
	p ()Lnet/minecraft/world/item/ItemDisplayContext; getItemTransform
net/minecraft/world/entity/Display$TextDisplay$Align net/minecraft/world/entity/Display$TextDisplay$Align
	a CENTER
	b LEFT
	c RIGHT
	d CODEC
	e name
	f $VALUES
	a ()[Lnet/minecraft/world/entity/Display$TextDisplay$Align; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/entity/Display$TextDisplay$CachedInfo net/minecraft/world/entity/Display$TextDisplay$CachedInfo
	a lines
	b width
	a ()Ljava/util/List; lines
	b ()I width
net/minecraft/world/entity/Display$TextDisplay$CachedLine net/minecraft/world/entity/Display$TextDisplay$CachedLine
	a contents
	b width
	a ()Lnet/minecraft/util/FormattedString; contents
	b ()I width
net/minecraft/world/entity/Display$TextDisplay net/minecraft/world/entity/Display$TextDisplay
	aC TAG_LINE_WIDTH
	aD TAG_TEXT_OPACITY
	aE TAG_BACKGROUND_COLOR
	aF TAG_SHADOW
	aG TAG_SEE_THROUGH
	aH TAG_USE_DEFAULT_BACKGROUND
	aI TAG_ALIGNMENT
	aJ INITIAL_TEXT_OPACITY
	aK DATA_TEXT_ID
	aL DATA_LINE_WIDTH_ID
	aM DATA_BACKGROUND_COLOR_ID
	aN DATA_TEXT_OPACITY_ID
	aO DATA_STYLE_FLAGS_ID
	aP textOpacity
	aQ backgroundColor
	aR clientDisplayCache
	o TAG_TEXT
	p FLAG_SHADOW
	q FLAG_SEE_THROUGH
	r FLAG_USE_DEFAULT_BACKGROUND
	s FLAG_ALIGN_LEFT
	t FLAG_ALIGN_RIGHT
	u INITIAL_BACKGROUND
	a (B)Lnet/minecraft/world/entity/Display$TextDisplay$Align; getAlign
	a (BLnet/minecraft/nbt/NBTTagCompound;Ljava/lang/String;B)B loadFlag
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/world/entity/Display$TextDisplay$LineSplitter;)Lnet/minecraft/world/entity/Display$TextDisplay$CachedInfo; cacheDisplay
	a_ ()V defineSynchedData
	b (BLnet/minecraft/nbt/NBTTagCompound;Ljava/lang/String;B)V storeFlag
	b (I)V setLineWidth
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	c (B)V setTextOpacity
	c (I)V setBackgroundColor
	c (Lnet/minecraft/network/chat/IChatBaseComponent;)V setText
	d (B)V setFlags
	g (F)B getTextOpacity
	h (F)I getBackgroundColor
	o ()Lnet/minecraft/network/chat/IChatBaseComponent; getText
	p ()I getLineWidth
	q ()B getFlags
	r ()B getTextOpacity
	s ()I getBackgroundColor
net/minecraft/world/entity/Display net/minecraft/world/entity/Display
	aC DATA_RIGHT_ROTATION_ID
	aD DATA_BILLBOARD_RENDER_CONSTRAINTS_ID
	aE DATA_BRIGHTNESS_OVERRIDE_ID
	aF DATA_VIEW_RANGE_ID
	aG DATA_SHADOW_RADIUS_ID
	aH DATA_SHADOW_STRENGTH_ID
	aI DATA_WIDTH_ID
	aJ DATA_HEIGHT_ID
	aK DATA_GLOW_COLOR_OVERRIDE_ID
	aL INITIAL_SHADOW_RADIUS
	aM INITIAL_SHADOW_STRENGTH
	aN NO_GLOW_COLOR_OVERRIDE
	aO transformation
	aP shadowRadius
	aQ shadowStrength
	aR orientation
	aS interpolationStartClientTick
	aT lastProgress
	aU cullingBoundingBox
	aV updateInterpolators
	aW updateTime
	b NO_BRIGHTNESS_OVERRIDE
	c TAG_INTERPOLATION_DURATION
	d TAG_START_INTERPOLATION
	e TAG_TRANSFORMATION
	f TAG_BILLBOARD
	g TAG_BRIGHTNESS
	h TAG_VIEW_RANGE
	i TAG_SHADOW_RADIUS
	j TAG_SHADOW_STRENGTH
	k TAG_WIDTH
	l TAG_HEIGHT
	m TAG_GLOW_COLOR_OVERRIDE
	n interpolators
	o LOGGER
	p INITIAL_UPDATE_PROGRESS
	q DATA_INTERPOLATION_START_DELTA_TICKS_ID
	r DATA_INTERPOLATION_DURATION_ID
	s DATA_TRANSLATION_ID
	t DATA_SCALE_ID
	u DATA_LEFT_ROTATION_ID
	A_ ()Lnet/minecraft/world/phys/AxisAlignedBB; getBoundingBoxForCulling
	B_ ()I getTeamColor
	C_ ()Lnet/minecraft/world/level/material/EnumPistonReaction; getPistonPushReaction
	S ()Lnet/minecraft/network/protocol/Packet; getAddEntityPacket
	a (D)Z shouldRenderAtSqrDistance
	a (F)Lcom/mojang/math/Transformation; transformation
	a (Lcom/mojang/math/Transformation;)V setTransformation
	a (Ljava/util/List;)V onSyncedDataUpdated
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/syncher/DataWatcher;)Lcom/mojang/math/Transformation; createTransformation
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/util/Brightness;)V setBrightnessOverride
	a (Lnet/minecraft/world/entity/Display$BillboardConstraints;)V setBillboardConstraints
	a_ ()V defineSynchedData
	b (F)F getShadowRadius
	b (I)V setInterpolationDuration
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	c (F)F getShadowStrength
	c (I)V setInterpolationDelay
	d (F)F calculateInterpolationProgress
	d (I)V setGlowColorOverride
	e (DDD)V setPos
	e (F)V setXRot
	f (F)V setYRot
	g (F)V setViewRange
	h (F)V setShadowRadius
	i ()Lorg/joml/Quaternionf; orientation
	j ()Lnet/minecraft/world/entity/Display$BillboardConstraints; getBillboardConstraints
	k ()I getPackedBrightnessOverride
	l ()V tick
	o ()I getInterpolationDuration
	p ()I getInterpolationDelay
	q ()Lnet/minecraft/util/Brightness; getBrightnessOverride
	r ()F getViewRange
	s ()F getShadowRadius
	t ()F getShadowStrength
	v ()F getWidth
	w ()I getGlowColorOverride
	w (F)V setShadowStrength
	x ()F getHeight
	x (F)V setWidth
	y ()V updateCulling
	y (F)V setHeight
	z ()V updateOrientation
net/minecraft/world/entity/Entity$MovementEmission net/minecraft/world/entity/Entity$MovementEmission
	a NONE
	b SOUNDS
	c EVENTS
	d ALL
	e sounds
	f events
	g $VALUES
	a ()Z emitsAnything
	b ()Z emitsEvents
	c ()Z emitsSounds
	d ()[Lnet/minecraft/world/entity/Entity$MovementEmission; $values
net/minecraft/world/entity/Entity$RemovalReason net/minecraft/world/entity/Entity$RemovalReason
	a KILLED
	b DISCARDED
	c UNLOADED_TO_CHUNK
	d UNLOADED_WITH_PLAYER
	e CHANGED_DIMENSION
	f destroy
	g save
	h $VALUES
	a ()Z shouldDestroy
	b ()Z shouldSave
	c ()[Lnet/minecraft/world/entity/Entity$RemovalReason; $values
net/minecraft/world/entity/Entity net/minecraft/world/entity/Entity
	A DELTA_AFFECTED_BY_BLOCKS_BELOW
	B BREATHING_DISTANCE_BELOW_EYES
	C BASE_TICKS_REQUIRED_TO_FREEZE
	D FREEZE_HURT_FREQUENCY
	E UUID_TAG
	F blocksBuilding
	G boardingCooldown
	H level
	I xo
	J yo
	K zo
	L yRotO
	M xRotO
	N onGround
	O horizontalCollision
	P verticalCollision
	Q verticalCollisionBelow
	R minorHorizontalCollision
	S hurtMarked
	T stuckSpeedMultiplier
	U DEFAULT_BB_WIDTH
	V DEFAULT_BB_HEIGHT
	W walkDistO
	X walkDist
	Y moveDist
	Z flyDist
	aA wasInPowderSnow
	aB wasOnFire
	aC chunkPosition
	aD deltaMovement
	aE yRot
	aF xRot
	aG bb
	aH removalReason
	aI nextStep
	aJ maxUpStep
	aK remainingFireTicks
	aL fluidOnEyes
	aM FLAG_SHIFT_KEY_DOWN
	aN FLAG_SPRINTING
	aO FLAG_SWIMMING
	aP FLAG_INVISIBLE
	aQ DATA_AIR_SUPPLY_ID
	aR DATA_CUSTOM_NAME
	aS DATA_CUSTOM_NAME_VISIBLE
	aT DATA_SILENT
	aU DATA_NO_GRAVITY
	aV DATA_TICKS_FROZEN
	aW levelCallback
	aX packetPositionCodec
	aY portalCooldown
	aZ invulnerable
	aa fallDistance
	ab xOld
	ac yOld
	ad zOld
	ae noPhysics
	af random
	ag tickCount
	ah wasTouchingWater
	ai fluidHeight
	aj wasEyeInWater
	ak invulnerableTime
	al firstTick
	am entityData
	an DATA_SHARED_FLAGS_ID
	ao FLAG_ONFIRE
	ap FLAG_GLOWING
	aq FLAG_FALL_FLYING
	ar DATA_POSE
	as noCulling
	at hasImpulse
	au isInsidePortal
	av portalTime
	aw portalEntrancePos
	ax uuid
	ay stringUUID
	az isInPowderSnow
	ba hasGlowingTag
	bb tags
	bc pistonDeltas
	bd pistonDeltasGameTime
	be dimensions
	bf eyeHeight
	bg crystalSoundIntensity
	bh lastCrystalSoundPlayTick
	bi hasVisualFire
	bj feetBlockState
	c LOGGER
	d ENTITY_COUNTER
	e EMPTY_LIST
	k INITIAL_AABB
	l WATER_FLOW_SCALE
	m LAVA_FAST_FLOW_SCALE
	n LAVA_SLOW_FLOW_SCALE
	o viewScale
	p type
	q id
	r passengers
	s vehicle
	t position
	u blockPosition
	v ID_TAG
	w PASSENGERS_TAG
	x BOARDING_COOLDOWN
	y TOTAL_AIR_SUPPLY
	z MAX_ENTITY_TAG_COUNT
	A_ ()Lnet/minecraft/world/phys/AxisAlignedBB; getBoundingBoxForCulling
	B ()I getPermissionLevel
	B_ ()I getTeamColor
	C_ ()Lnet/minecraft/world/level/material/EnumPistonReaction; getPistonPushReaction
	F_ ()Z isSpectator
	G_ ()Lnet/minecraft/network/chat/IChatBaseComponent; getDisplayName
	H ()V processPortalCooldown
	M_ ()Z shouldInformAdmins
	S ()Lnet/minecraft/network/protocol/Packet; getAddEntityPacket
	Y ()Lnet/minecraft/world/level/World; getLevel
	Z ()Lnet/minecraft/network/chat/IChatBaseComponent; getName
	a (D)Z shouldRenderAtSqrDistance
	a (DDD)V dismountTo
	a (DDDFF)V absMoveTo
	a (DDDFFIZ)V lerpTo
	a (DDF)Lnet/minecraft/world/phys/Vec3D; getCollisionHorizontalEscapeVector
	a (DFZ)Lnet/minecraft/world/phys/MovingObjectPosition; pick
	a (DZLnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;)V checkFallDamage
	a (F)Lnet/minecraft/core/BlockPosition; getOnPos
	a (FF)V setRot
	a (FFLnet/minecraft/world/damagesource/DamageSource;)Z causeFallDamage
	a (FI)V lerpHeadTo
	a (FLnet/minecraft/world/phys/Vec3D;)V moveRelative
	a (Ljava/lang/String;)Z addTag
	a (Ljava/util/List;)V onSyncedDataUpdated
	a (Ljava/util/function/BiConsumer;)V updateDynamicGameEventListener
	a (Ljava/util/function/Predicate;)Z hasPassenger
	a (Lnet/minecraft/CrashReportSystemDetails;)V fillCrashReportCategory
	a (Lnet/minecraft/commands/arguments/ArgumentAnchor$Anchor;Lnet/minecraft/world/phys/Vec3D;)V lookAt
	a (Lnet/minecraft/core/BlockPosition;FF)V moveTo
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isColliding
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;D)D applyPistonMovementRestriction
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;Lnet/minecraft/BlockUtil$Rectangle;)Lnet/minecraft/world/phys/Vec3D; getRelativePortalPosition
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V sendSystemMessage
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutSpawnEntity;)V recreateFromPacket
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/level/EntityPlayer;)Z broadcastToPlayer
	a (Lnet/minecraft/server/level/WorldServer;)Lnet/minecraft/world/level/portal/ShapeDetectorShape; findDimensionEntryPoint
	a (Lnet/minecraft/server/level/WorldServer;DDDLjava/util/Set;FF)Z teleportTo
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;ZLnet/minecraft/world/level/border/WorldBorder;)Ljava/util/Optional; getExitPortal
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLightning;)V thunderHit
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z wasKilled
	a (Lnet/minecraft/sounds/SoundEffect;)V playSound
	a (Lnet/minecraft/sounds/SoundEffect;FF)V playSound
	a (Lnet/minecraft/tags/TagKey;)Z isEyeInFluid
	a (Lnet/minecraft/tags/TagKey;D)Z updateFluidHeightAndDoFluidPushing
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/entity/Entity$RemovalReason;)V remove
	a (Lnet/minecraft/world/entity/Entity;D)Z closerThan
	a (Lnet/minecraft/world/entity/Entity;DD)Z closerThan
	a (Lnet/minecraft/world/entity/Entity;ILnet/minecraft/world/damagesource/DamageSource;)V awardKillScore
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity$MoveFunction;)V positionRider
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/phys/AxisAlignedBB;Lnet/minecraft/world/level/World;Ljava/util/List;)Lnet/minecraft/world/phys/Vec3D; collideBoundingBox
	a (Lnet/minecraft/world/entity/Entity;Z)Z startRiding
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/Entity;)V doEnchantDamageEffects
	a (Lnet/minecraft/world/entity/EntityPose;)Lnet/minecraft/world/entity/EntitySize; getDimensions
	a (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getEyeHeight
	a (Lnet/minecraft/world/entity/EnumItemSlot;Lnet/minecraft/world/item/ItemStack;)V setItemSlot
	a (Lnet/minecraft/world/entity/EnumMoveType;Lnet/minecraft/world/phys/Vec3D;)V move
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; interact
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; interactAt
	a (Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/phys/Vec3D; getHandHoldingItemAngle
	a (Lnet/minecraft/world/item/ItemStack;F)Lnet/minecraft/world/entity/item/EntityItem; spawnAtLocation
	a (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;F)Z shouldBlockExplode
	a (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/Fluid;F)F getBlockExplosionResistance
	a (Lnet/minecraft/world/level/IMaterial;)Lnet/minecraft/world/entity/item/EntityItem; spawnAtLocation
	a (Lnet/minecraft/world/level/IMaterial;I)Lnet/minecraft/world/entity/item/EntityItem; spawnAtLocation
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Z mayInteract
	a (Lnet/minecraft/world/level/block/EnumBlockMirror;)F mirror
	a (Lnet/minecraft/world/level/block/EnumBlockRotation;)F rotate
	a (Lnet/minecraft/world/level/block/state/IBlockData;)V onInsideBlock
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/phys/Vec3D;)V makeStuckInBlock
	a (Lnet/minecraft/world/level/entity/EntityInLevelCallback;)V setLevelCallback
	a (Lnet/minecraft/world/level/gameevent/GameEvent;)V gameEvent
	a (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/entity/Entity;)V gameEvent
	a (Lnet/minecraft/world/phys/AxisAlignedBB;)V setBoundingBox
	a (Lnet/minecraft/world/phys/Vec3D;)V setPos
	a (Lnet/minecraft/world/phys/Vec3D;FF)Lnet/minecraft/world/phys/Vec3D; getInputVector
	a (Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/entity/EnumMoveType;)Lnet/minecraft/world/phys/Vec3D; maybeBackOffFromEdge
	a (Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/phys/AxisAlignedBB;Ljava/util/List;)Lnet/minecraft/world/phys/Vec3D; collideWithShapes
	a (Lnet/minecraft/world/scores/ScoreboardTeamBase;)Z isAlliedTo
	a ([D)Lnet/minecraft/nbt/NBTTagList; newDoubleList
	a ([F)Lnet/minecraft/nbt/NBTTagList; newFloatList
	aA ()V extinguishFire
	aB ()V processFlappingMovement
	aC ()Lnet/minecraft/core/BlockPosition; getOnPosLegacy
	aD ()Lnet/minecraft/core/BlockPosition; getOnPos
	aE ()F getBlockJumpFactor
	aF ()F getBlockSpeedFactor
	aG ()Lnet/minecraft/core/BlockPosition; getBlockPosBelowThatAffectsMyMovement
	aH ()F nextStep
	aI ()Lnet/minecraft/sounds/SoundEffect; getSwimSound
	aJ ()Lnet/minecraft/sounds/SoundEffect; getSwimSplashSound
	aK ()Lnet/minecraft/sounds/SoundEffect; getSwimHighSpeedSplashSound
	aL ()V checkInsideBlocks
	aM ()V onFlap
	aN ()Z isFlapping
	aO ()Z isSilent
	aP ()Z isNoGravity
	aQ ()Lnet/minecraft/world/entity/Entity$MovementEmission; getMovementEmission
	aR ()Z dampensVibrations
	aS ()Z fireImmune
	aT ()Z isInWater
	aU ()Z isInWaterOrRain
	aV ()Z isInWaterRainOrBubble
	aW ()Z isInWaterOrBubble
	aX ()Z isUnderWater
	aY ()V updateSwimming
	aZ ()Z updateInWaterStateAndDoFluidPushing
	a_ ()V defineSynchedData
	a_ (I)Lnet/minecraft/world/entity/SlotAccess; getSlot
	a_ (Ljava/util/UUID;)V setUUID
	a_ (Z)V setSharedFlagOnFire
	aa ()Z hasCustomName
	ab ()Lnet/minecraft/network/chat/IChatBaseComponent; getCustomName
	ac ()V unRide
	ad ()Lnet/minecraft/network/protocol/game/VecDeltaCodec; getPositionCodec
	ae ()Lnet/minecraft/world/entity/EntityTypes; getType
	af ()I getId
	ag ()Ljava/util/Set; getTags
	ah ()V kill
	ai ()V discard
	aj ()Lnet/minecraft/network/syncher/DataWatcher; getEntityData
	ak ()V onClientRemoval
	al ()Lnet/minecraft/world/entity/EntityPose; getPose
	am ()Lnet/minecraft/world/phys/AxisAlignedBB; makeBoundingBox
	an ()V reapplyPosition
	ao ()V baseTick
	ap ()V checkOutOfWorld
	aq ()V setPortalCooldown
	ar ()Z isOnPortalCooldown
	as ()I getPortalWaitTime
	at ()V lavaHurt
	au ()I getRemainingFireTicks
	av ()V clearFire
	aw ()V outOfWorld
	ax ()Z isOnGround
	ay ()V tryCheckInsideBlocks
	az ()V playEntityOnFireExtinguishedSound
	b (B)V handleEntityEvent
	b (D)V setViewScale
	b (DD)V turn
	b (DDD)V teleportTo
	b (DDDFF)V moveTo
	b (FF)Lnet/minecraft/world/phys/Vec3D; calculateViewVector
	b (IZ)V setSharedFlag
	b (Ljava/lang/String;)Z removeTag
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/network/chat/IChatBaseComponent;)V setCustomName
	b (Lnet/minecraft/server/level/WorldServer;)Lnet/minecraft/world/entity/Entity; changeDimension
	b (Lnet/minecraft/tags/TagKey;)D getFluidHeight
	b (Lnet/minecraft/world/damagesource/DamageSource;)Z isInvulnerableTo
	b (Lnet/minecraft/world/entity/Entity$RemovalReason;)V setRemoved
	b (Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/phys/Vec3D; getDismountLocationForPassenger
	b (Lnet/minecraft/world/entity/EntityPose;)V setPose
	b (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/entity/item/EntityItem; spawnAtLocation
	b (Lnet/minecraft/world/level/block/state/IBlockData;)V playAmethystStepSound
	b (Lnet/minecraft/world/phys/AxisAlignedBB;)Z isFree
	b (Lnet/minecraft/world/phys/Vec3D;)Z isHorizontalCollisionMinor
	bA ()Z couldAcceptPassenger
	bB ()F getPickRadius
	bC ()Lnet/minecraft/world/phys/Vec3D; getLookAngle
	bD ()Lnet/minecraft/world/phys/Vec2F; getRotationVector
	bE ()Lnet/minecraft/world/phys/Vec3D; getForward
	bF ()V handleNetherPortal
	bG ()I getDimensionChangingDelay
	bH ()Ljava/lang/Iterable; getHandSlots
	bI ()Ljava/lang/Iterable; getArmorSlots
	bJ ()Ljava/lang/Iterable; getAllSlots
	bK ()Z isOnFire
	bL ()Z isPassenger
	bM ()Z isVehicle
	bN ()Z dismountsUnderwater
	bO ()Z isShiftKeyDown
	bP ()Z isSteppingCarefully
	bQ ()Z isSuppressingBounce
	bR ()Z isDiscrete
	bS ()Z isDescending
	bT ()Z isCrouching
	bU ()Z isSprinting
	bV ()Z isSwimming
	bW ()Z isVisuallySwimming
	bX ()Z isVisuallyCrawling
	bY ()Z hasGlowingTag
	bZ ()Z isCurrentlyGlowing
	b_ (Lnet/minecraft/world/entity/player/EntityHuman;)V playerTouch
	ba ()V updateInWaterStateAndDoWaterCurrentPushing
	bb ()V doWaterSplashEffect
	bc ()Lnet/minecraft/world/level/block/state/IBlockData; getBlockStateOnLegacy
	bd ()Lnet/minecraft/world/level/block/state/IBlockData; getBlockStateOn
	be ()Z canSpawnSprintParticle
	bf ()V spawnSprintParticle
	bg ()Z isInLava
	bh ()F getLightLevelDependentMagicValue
	bi ()V setOldPosAndRot
	bj ()V markHurt
	bk ()Lnet/minecraft/world/phys/Vec3D; getEyePosition
	bl ()Z canBeHitByProjectile
	bm ()Z isPickable
	bn ()Z isPushable
	bo ()Z repositionEntityAfterLoad
	bp ()Ljava/lang/String; getEncodeId
	bq ()Z isAlive
	br ()Z isInWall
	bs ()Z canBeCollidedWith
	bt ()V rideTick
	bu ()D getMyRidingOffset
	bv ()D getPassengersRidingOffset
	bw ()Z showVehicleHealth
	bx ()V ejectPassengers
	by ()V removeVehicle
	bz ()V stopRiding
	c (D)D getX
	c (DDD)V teleportRelative
	c (FF)Lnet/minecraft/world/phys/Vec3D; calculateUpVector
	c (Lnet/minecraft/network/chat/IChatBaseComponent;)Lnet/minecraft/network/chat/IChatBaseComponent; removeAction
	c (Lnet/minecraft/server/level/EntityPlayer;)V startSeenByPlayer
	c (Lnet/minecraft/world/damagesource/DamageSource;)V handleDamageEvent
	c (Lnet/minecraft/world/entity/EntityPose;)Z hasPose
	c (Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/phys/Vec3D; limitPistonMovement
	c (Z)V setOnGround
	cA ()Lnet/minecraft/core/EnumDirection; getDirection
	cB ()Lnet/minecraft/core/EnumDirection; getMotionDirection
	cC ()Lnet/minecraft/network/chat/ChatHoverable; createHoverEvent
	cD ()Lnet/minecraft/world/phys/AxisAlignedBB; getBoundingBox
	cE ()F getEyeHeight
	cF ()Lnet/minecraft/world/phys/Vec3D; getLeashOffset
	cG ()Lnet/minecraft/world/level/World; getCommandSenderWorld
	cH ()Lnet/minecraft/server/MinecraftServer; getServer
	cI ()Z ignoreExplosion
	cJ ()Z onlyOpCanSetNbt
	cK ()Lnet/minecraft/world/entity/EntityLiving; getControllingPassenger
	cL ()Z hasControllingPassenger
	cM ()Ljava/util/List; getPassengers
	cN ()Lnet/minecraft/world/entity/Entity; getFirstPassenger
	cO ()Ljava/util/stream/Stream; getSelfAndPassengers
	cP ()Ljava/util/stream/Stream; getPassengersAndSelf
	cQ ()Ljava/lang/Iterable; getIndirectPassengers
	cR ()Z hasExactlyOnePlayerPassenger
	cS ()Lnet/minecraft/world/entity/Entity; getRootVehicle
	cT ()Z isControlledByLocalInstance
	cU ()Z isEffectiveAi
	cV ()Lnet/minecraft/world/entity/Entity; getVehicle
	cW ()Lnet/minecraft/world/entity/Entity; getControlledVehicle
	cX ()Lnet/minecraft/sounds/SoundCategory; getSoundSource
	cY ()I getFireImmuneTicks
	cZ ()Lnet/minecraft/commands/CommandListenerWrapper; createCommandSourceStack
	c_ ()V refreshDimensions
	ca ()Z isInvisible
	cb ()Lnet/minecraft/world/scores/ScoreboardTeamBase; getTeam
	cc ()I getMaxAirSupply
	cd ()I getAirSupply
	ce ()I getTicksFrozen
	cf ()F getPercentFrozen
	cg ()Z isFullyFrozen
	ch ()I getTicksRequiredToFreeze
	ci ()V checkSlowFallDistance
	cj ()Lnet/minecraft/network/chat/IChatBaseComponent; getTypeName
	ck ()F getYHeadRot
	cl ()Z isAttackable
	cm ()Z isInvulnerable
	cn ()V removeAfterChangingDimensions
	co ()Z canChangeDimensions
	cp ()I getMaxFallDistance
	cq ()Z isIgnoringBlockTriggers
	cr ()Z displayFireAnimation
	cs ()Ljava/util/UUID; getUUID
	ct ()Ljava/lang/String; getStringUUID
	cu ()Ljava/lang/String; getScoreboardName
	cv ()Z isPushedByFluid
	cw ()D getViewScale
	cx ()Z isCustomNameVisible
	cy ()Z shouldShowName
	cz ()V fixupDimensions
	d (D)D getRandomX
	d (DDD)V moveTo
	d (Lnet/minecraft/core/BlockPosition;)V handleInsidePortal
	d (Lnet/minecraft/nbt/NBTTagCompound;)Z saveAsPassenger
	d (Lnet/minecraft/server/level/EntityPlayer;)V stopSeenByPlayer
	d (Lnet/minecraft/world/entity/EntityPose;)Z canEnterPose
	d (Lnet/minecraft/world/entity/player/EntityHuman;)Z isInvisibleTo
	d (Lnet/minecraft/world/phys/Vec3D;)V moveTo
	d (Z)V setSilent
	dA ()F maxUpStep
	dB ()Z isRemoved
	dC ()Lnet/minecraft/world/entity/Entity$RemovalReason; getRemovalReason
	dD ()V unsetRemoved
	dE ()Z shouldBeSaved
	dF ()Z isAlwaysTicking
	dG ()Lnet/minecraft/world/damagesource/DamageSources; damageSources
	d_ ()Z acceptsSuccess
	da ()Z touchingUnloadedChunk
	db ()D getFluidJumpThreshold
	dc ()F getBbWidth
	dd ()F getBbHeight
	de ()Lnet/minecraft/world/phys/Vec3D; position
	df ()Lnet/minecraft/world/phys/Vec3D; trackingPosition
	dg ()Lnet/minecraft/core/BlockPosition; blockPosition
	dh ()Lnet/minecraft/world/level/block/state/IBlockData; getFeetBlockState
	di ()Lnet/minecraft/world/level/ChunkCoordIntPair; chunkPosition
	dj ()Lnet/minecraft/world/phys/Vec3D; getDeltaMovement
	dk ()I getBlockX
	dl ()D getX
	dm ()I getBlockY
	dn ()D getY
	do ()D getRandomY
	dp ()D getEyeY
	dq ()I getBlockZ
	dr ()D getZ
	ds ()V checkDespawn
	dt ()Lnet/minecraft/world/item/ItemStack; getPickResult
	du ()Z canFreeze
	dv ()Z isFreezing
	dw ()F getYRot
	dx ()F getVisualRotationYInDegrees
	dy ()F getXRot
	dz ()Z canSprint
	e (D)D getY
	e (DDD)V setPos
	e (F)V setXRot
	e (I)V setId
	e (Lnet/minecraft/nbt/NBTTagCompound;)Z save
	e (Lnet/minecraft/world/entity/Entity;)F distanceTo
	e (Lnet/minecraft/world/entity/EntityPose;)Lnet/minecraft/world/phys/AxisAlignedBB; getBoundingBoxForPose
	e (Lnet/minecraft/world/phys/Vec3D;)D distanceToSqr
	e (Z)V setNoGravity
	f (D)D getZ
	f (DDD)V syncPacketPositionCodec
	f (F)V setYRot
	f (I)V setSecondsOnFire
	f (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; saveWithoutId
	f (Lnet/minecraft/world/entity/Entity;)D distanceToSqr
	f (Lnet/minecraft/world/entity/EntityPose;)F getEyeHeight
	f (Lnet/minecraft/world/phys/Vec3D;)V setDeltaMovement
	f (Z)V setShiftKeyDown
	g (D)D getRandomZ
	g (DDD)Z isFree
	g (I)V setRemainingFireTicks
	g (Lnet/minecraft/nbt/NBTTagCompound;)V load
	g (Lnet/minecraft/world/entity/Entity;)V push
	g (Lnet/minecraft/world/phys/Vec3D;)V addDeltaMovement
	g (Z)V setSprinting
	h (DDD)V absMoveTo
	h (I)Z getSharedFlag
	h (Lnet/minecraft/world/entity/Entity;)Z canCollideWith
	h (Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/phys/Vec3D; collide
	h (Z)V setSwimming
	i (DDD)D distanceToSqr
	i (F)V playSwimSound
	i (I)V setAirSupply
	i (Lnet/minecraft/world/entity/Entity;)V positionRider
	i (Z)V setGlowingTag
	j ()Z isInRain
	j (DDD)V push
	j (F)Lnet/minecraft/world/phys/Vec3D; getViewVector
	j (I)V setTicksFrozen
	j (Lnet/minecraft/world/entity/Entity;)V onPassengerTurned
	j (Z)V setInvisible
	j_ ()Z acceptsFailure
	k ()Z isInBubbleColumn
	k (DDD)Z shouldRender
	k (F)F getViewXRot
	k (I)Z hasPermissions
	k (Lnet/minecraft/world/entity/Entity;)Z startRiding
	k (Z)V onAboveBubbleCol
	l ()V tick
	l (DDD)V lerpMotion
	l (F)F getViewYRot
	l (Lnet/minecraft/world/entity/Entity;)Z canRide
	l (Z)V onInsideBubbleColumn
	m (DDD)V moveTowardsClosestSpace
	m (F)Lnet/minecraft/world/phys/Vec3D; getUpVector
	m (Lnet/minecraft/world/entity/Entity;)V addPassenger
	m (Z)V setInvulnerable
	n ()V resetFallDistance
	n (DDD)V teleportToWithTicket
	n (F)Lnet/minecraft/world/phys/Vec3D; getEyePosition
	n (Lnet/minecraft/world/entity/Entity;)V removePassenger
	n (Z)V setCustomNameVisible
	o ()V updateFluidOnEyes
	o (DDD)V setDeltaMovement
	o (F)Lnet/minecraft/world/phys/Vec3D; getLightProbePosition
	o (Lnet/minecraft/world/entity/Entity;)Z canAddPassenger
	o (Z)V setIsInPowderSnow
	p ()Ljava/util/stream/Stream; getIndirectPassengersStream
	p (DDD)V setPosRaw
	p (F)Lnet/minecraft/world/phys/Vec3D; getPosition
	p (Lnet/minecraft/world/entity/Entity;)Z isAlliedTo
	q (F)V animateHurt
	q (Lnet/minecraft/world/entity/Entity;)Z is
	r (F)V setYHeadRot
	r (Lnet/minecraft/world/entity/Entity;)Z skipAttackInteraction
	s (F)V setYBodyRot
	s (Lnet/minecraft/world/entity/Entity;)V copyPosition
	t (F)Lnet/minecraft/world/phys/Vec3D; getLeashOffset
	t (Lnet/minecraft/world/entity/Entity;)V restoreFrom
	u (F)Lnet/minecraft/world/phys/Vec3D; getRopeHoldPosition
	u (Lnet/minecraft/world/entity/Entity;)Z hasPassenger
	v (F)V setMaxUpStep
	v (Lnet/minecraft/world/entity/Entity;)Z isPassengerOfSameVehicle
	w (Lnet/minecraft/world/entity/Entity;)Z hasIndirectPassenger
net/minecraft/world/entity/GlowSquid net/minecraft/world/entity/GlowSquid
	bW DATA_DARK_TICKS_REMAINING
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkGlowSquideSpawnRules
	a_ ()V defineSynchedData
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b_ ()V aiStep
	c (I)V setDarkTicks
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	q ()Lnet/minecraft/core/particles/ParticleParam; getInkParticle
	r ()Lnet/minecraft/sounds/SoundEffect; getSquirtSound
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w ()I getDarkTicksRemaining
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
net/minecraft/world/entity/Interaction$PlayerAction net/minecraft/world/entity/Interaction$PlayerAction
	a CODEC
	b player
	c timestamp
	a ()Ljava/util/UUID; player
	b ()J timestamp
net/minecraft/world/entity/Interaction net/minecraft/world/entity/Interaction
	b LOGGER
	c DATA_WIDTH_ID
	d DATA_HEIGHT_ID
	e DATA_RESPONSE_ID
	f TAG_WIDTH
	g TAG_HEIGHT
	h TAG_ATTACK
	i TAG_INTERACTION
	j TAG_RESPONSE
	k attack
	l interaction
	C_ ()Lnet/minecraft/world/level/material/EnumPistonReaction; getPistonPushReaction
	L_ ()Lnet/minecraft/world/entity/EntityLiving; getLastAttacker
	P_ ()Lnet/minecraft/world/entity/EntityLiving; getTarget
	a (F)V setWidth
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/world/entity/EntityPose;)Lnet/minecraft/world/entity/EntitySize; getDimensions
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; interact
	a (Z)V setResponse
	a_ ()V defineSynchedData
	am ()Lnet/minecraft/world/phys/AxisAlignedBB; makeBoundingBox
	b (F)V setHeight
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	bl ()Z canBeHitByProjectile
	bm ()Z isPickable
	j ()F getWidth
	k ()F getHeight
	l ()V tick
	o ()Z getResponse
	p ()Lnet/minecraft/world/entity/EntitySize; getDimensions
	r (Lnet/minecraft/world/entity/Entity;)Z skipAttackInteraction
net/minecraft/world/entity/Marker net/minecraft/world/entity/Marker
	b DATA_TAG
	c data
	C_ ()Lnet/minecraft/world/level/material/EnumPistonReaction; getPistonPushReaction
	S ()Lnet/minecraft/network/protocol/Packet; getAddEntityPacket
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a_ ()V defineSynchedData
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	bA ()Z couldAcceptPassenger
	l ()V tick
	m (Lnet/minecraft/world/entity/Entity;)V addPassenger
	o (Lnet/minecraft/world/entity/Entity;)Z canAddPassenger
net/minecraft/world/entity/RelativeMovement net/minecraft/world/entity/RelativeMovement
	a X
	b Y
	c Z
	d Y_ROT
	e X_ROT
	f ALL
	g ROTATION
	h bit
	i $VALUES
	a ()I getMask
	a (I)Ljava/util/Set; unpack
	a (Ljava/util/Set;)I pack
	b ()[Lnet/minecraft/world/entity/RelativeMovement; $values
	b (I)Z isSet
net/minecraft/world/entity/SlotAccess net/minecraft/world/entity/SlotAccess
	b NULL
	a ()Lnet/minecraft/world/item/ItemStack; get
	a (Lnet/minecraft/world/IInventory;I)Lnet/minecraft/world/entity/SlotAccess; forContainer
	a (Lnet/minecraft/world/IInventory;ILjava/util/function/Predicate;)Lnet/minecraft/world/entity/SlotAccess; forContainer
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EnumItemSlot;)Lnet/minecraft/world/entity/SlotAccess; forEquipmentSlot
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EnumItemSlot;Ljava/util/function/Predicate;)Lnet/minecraft/world/entity/SlotAccess; forEquipmentSlot
	a (Lnet/minecraft/world/item/ItemStack;)Z set
net/minecraft/world/entity/WalkAnimationState net/minecraft/world/entity/WalkAnimationState
	a speedOld
	b speed
	c position
	a ()F speed
	a (F)V setSpeed
	a (FF)V update
	b ()F position
	b (F)F speed
	c ()Z isMoving
	c (F)F position
net/minecraft/world/entity/ai/attributes/AttributeModifier$Operation net/minecraft/world/entity/ai/attributes/AttributeModifier$Operation
	a ADDITION
	b MULTIPLY_BASE
	c MULTIPLY_TOTAL
	d OPERATIONS
	e value
	f $VALUES
	a ()I toValue
	a (I)Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation; fromValue
	b ()[Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation; $values
net/minecraft/world/entity/ai/attributes/AttributeModifier net/minecraft/world/entity/ai/attributes/AttributeModifier
	a LOGGER
	b amount
	c operation
	d nameGetter
	e id
	a ()Ljava/util/UUID; getId
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/ai/attributes/AttributeModifier; load
	b ()Ljava/lang/String; getName
	c ()Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation; getOperation
	d ()D getAmount
	e ()Lnet/minecraft/nbt/NBTTagCompound; save
net/minecraft/world/entity/ai/behavior/AnimalPanic net/minecraft/world/entity/ai/behavior/AnimalPanic
	c PANIC_MIN_DURATION
	d PANIC_MAX_DURATION
	e PANIC_DISTANCE_HORIZONTAL
	f PANIC_DISTANCE_VERTICAL
	g DEFAULT_SHOULD_PANIC_PREDICATE
	h speedMultiplier
	i shouldPanic
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityCreature;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityCreature;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/world/entity/EntityCreature;Lnet/minecraft/server/level/WorldServer;)Lnet/minecraft/world/phys/Vec3D; getPanicPos
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/world/entity/Entity;)Ljava/util/Optional; lookForWater
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityCreature;J)V start
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityCreature;J)V stop
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tick
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityCreature;J)V tick
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
net/minecraft/world/entity/ai/behavior/Behavior$Status net/minecraft/world/entity/ai/behavior/Behavior$Status
	a STOPPED
	b RUNNING
	c $VALUES
	a ()[Lnet/minecraft/world/entity/ai/behavior/Behavior$Status; $values
net/minecraft/world/entity/ai/behavior/Behavior net/minecraft/world/entity/ai/behavior/Behavior
	a DEFAULT_DURATION
	b entryCondition
	c status
	d endTimestamp
	e minDuration
	f maxDuration
	a ()Lnet/minecraft/world/entity/ai/behavior/Behavior$Status; getStatus
	a (J)Z timedOut
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/world/entity/EntityLiving;)Z hasRequiredMemories
	b ()Ljava/lang/String; debugString
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tick
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
	e (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z tryStart
	f (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tickOrStop
	g (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V doStop
net/minecraft/world/entity/ai/behavior/CountDownCooldownTicks net/minecraft/world/entity/ai/behavior/CountDownCooldownTicks
	c cooldownTicks
	a (J)Z timedOut
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	b (Lnet/minecraft/world/entity/EntityLiving;)Ljava/util/Optional; getCooldownTickMemory
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tick
net/minecraft/world/entity/ai/behavior/Croak net/minecraft/world/entity/ai/behavior/Croak
	c CROAK_TICKS
	d TIME_OUT_DURATION
	e croakCounter
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/frog/Frog;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/frog/Frog;J)Z canStillUse
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/frog/Frog;J)V start
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tick
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/frog/Frog;J)V stop
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/frog/Frog;J)V tick
net/minecraft/world/entity/ai/behavior/FollowTemptation net/minecraft/world/entity/ai/behavior/FollowTemptation
	c TEMPTATION_COOLDOWN
	d CLOSE_ENOUGH_DIST
	e speedModifier
	a (J)Z timedOut
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityCreature;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/world/entity/EntityCreature;)F getSpeedModifier
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityCreature;J)V start
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	b (Lnet/minecraft/world/entity/EntityCreature;)Ljava/util/Optional; getTemptingPlayer
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityCreature;J)V stop
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tick
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityCreature;J)V tick
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
net/minecraft/world/entity/ai/behavior/GoAndGiveItemsToTarget net/minecraft/world/entity/ai/behavior/GoAndGiveItemsToTarget
	c CLOSE_ENOUGH_DISTANCE_TO_TARGET
	d ITEM_PICKUP_COOLDOWN_AFTER_THROWING
	e targetPositionGetter
	f speedModifier
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/phys/Vec3D;)V throwItem
	a (Lnet/minecraft/world/entity/ai/behavior/BehaviorPosition;)Lnet/minecraft/world/phys/Vec3D; getThrowPosition
	a (Lnet/minecraft/world/entity/ai/behavior/BehaviorPosition;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/server/level/EntityPlayer;)V triggerDropItemOnBlock
	b (Lnet/minecraft/world/entity/EntityLiving;)Z canThrowItemToTarget
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tick
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
net/minecraft/world/entity/ai/behavior/LongJumpMidJump net/minecraft/world/entity/ai/behavior/LongJumpMidJump
	c TIME_OUT_DURATION
	d timeBetweenLongJumps
	e landingSound
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;J)V start
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;J)V stop
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
net/minecraft/world/entity/ai/behavior/LongJumpToPreferredBlock net/minecraft/world/entity/ai/behavior/LongJumpToPreferredBlock
	m preferredBlockTag
	n preferredBlocksChance
	o notPrefferedJumpCandidates
	p currentlyWantingPreferredOnes
	a (Lnet/minecraft/server/level/WorldServer;)Ljava/util/Optional; getJumpCandidate
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;J)V start
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
net/minecraft/world/entity/ai/behavior/LongJumpToRandomPos net/minecraft/world/entity/ai/behavior/LongJumpToRandomPos
	c FIND_JUMP_TRIES
	d MIN_PATHFIND_DISTANCE_TO_VALID_JUMP
	e maxLongJumpHeight
	f maxLongJumpWidth
	g maxJumpVelocity
	h jumpCandidates
	i initialPosition
	j chosenJump
	k findJumpTries
	l prepareJumpStart
	m PREPARE_JUMP_DURATION
	n TIME_OUT_DURATION
	o ALLOWED_ANGLES
	p timeBetweenLongJumps
	q getJumpSound
	r acceptableLandingSpot
	a (Lnet/minecraft/server/level/WorldServer;)Ljava/util/Optional; getJumpCandidate
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;J)V start
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;Lnet/minecraft/core/BlockPosition;)Z isAcceptableLandingPosition
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/world/entity/EntityInsentient;Lnet/minecraft/core/BlockPosition;)Z defaultAcceptableLandingSpot
	a (Lnet/minecraft/world/entity/EntityInsentient;Lnet/minecraft/world/entity/EntitySize;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/phys/Vec3D;)Z isClearTransition
	a (Lnet/minecraft/world/entity/EntityInsentient;Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/phys/Vec3D; calculateOptimalJumpVector
	a (Lnet/minecraft/world/entity/EntityInsentient;Lnet/minecraft/world/phys/Vec3D;I)Lnet/minecraft/world/phys/Vec3D; calculateJumpVectorForAngle
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;J)Z canStillUse
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;J)V tick
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tick
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;J)V pickCandidate
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
net/minecraft/world/entity/ai/behavior/OneShot net/minecraft/world/entity/ai/behavior/OneShot
	a status
	a ()Lnet/minecraft/world/entity/ai/behavior/Behavior$Status; getStatus
	b ()Ljava/lang/String; debugString
	e (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z tryStart
	f (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tickOrStop
	g (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V doStop
net/minecraft/world/entity/ai/behavior/PrepareRamNearestTarget net/minecraft/world/entity/ai/behavior/PrepareRamNearestTarget
	c TIME_OUT_DURATION
	d getCooldownOnFail
	e minRamDistance
	f maxRamDistance
	g walkSpeed
	h ramTargeting
	i ramPrepareTime
	j getPrepareRamSound
	k reachedRamPositionTimestamp
	l ramCandidate
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/Vec3D; getEdgeOfBlock
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityCreature;J)V start
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/world/entity/EntityCreature;Lnet/minecraft/core/BlockPosition;)Z isWalkableBlock
	a (Lnet/minecraft/world/entity/EntityCreature;Lnet/minecraft/world/entity/EntityLiving;)Ljava/util/Optional; calculateRammingStartPosition
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityCreature;J)V stop
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	b (Lnet/minecraft/world/entity/EntityCreature;Lnet/minecraft/world/entity/EntityLiving;)V chooseRamPosition
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityCreature;J)Z canStillUse
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tick
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityCreature;J)V tick
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
net/minecraft/world/entity/ai/behavior/RamTarget net/minecraft/world/entity/ai/behavior/RamTarget
	c TIME_OUT_DURATION
	d RAM_SPEED_FORCE_FACTOR
	e getTimeBetweenRams
	f ramTargeting
	g speed
	h getKnockbackForce
	i ramDirection
	j getImpactSound
	k getHornBreakSound
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/goat/Goat;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/goat/Goat;J)Z canStillUse
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/goat/Goat;)V finishRam
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/goat/Goat;J)V start
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tick
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/goat/Goat;)Z hasRammedHornBreakingBlock
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/goat/Goat;J)V tick
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
net/minecraft/world/entity/ai/behavior/RandomLookAround net/minecraft/world/entity/ai/behavior/RandomLookAround
	c interval
	d maxYaw
	e minPitch
	f pitchRange
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityInsentient;J)V start
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
net/minecraft/world/entity/ai/behavior/ShufflingList net/minecraft/world/entity/ai/behavior/ShufflingList
	a entries
	b random
	a ()Lnet/minecraft/world/entity/ai/behavior/ShufflingList; shuffle
	a (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; codec
	a (Ljava/lang/Object;I)Lnet/minecraft/world/entity/ai/behavior/ShufflingList; add
	b ()Ljava/util/stream/Stream; stream
net/minecraft/world/entity/ai/behavior/TryFindLand net/minecraft/world/entity/ai/behavior/TryFindLand
	a COOLDOWN_TICKS
	a (IF)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder
	a trigger
	a ()Lblb$b; instance
	a (Lblb$e;)Lnet/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder; create
	a (Lcom/mojang/datafixers/kinds/App;)Lnet/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder; unbox
	a (Ljava/util/function/BiPredicate;)Lnet/minecraft/world/entity/ai/behavior/OneShot; triggerIf
	a (Ljava/util/function/Function;)Lnet/minecraft/world/entity/ai/behavior/OneShot; create
	a (Ljava/util/function/Predicate;)Lnet/minecraft/world/entity/ai/behavior/OneShot; triggerIf
	a (Ljava/util/function/Predicate;Lnet/minecraft/world/entity/ai/behavior/OneShot;)Lnet/minecraft/world/entity/ai/behavior/OneShot; triggerIf
	a (Lnet/minecraft/world/entity/ai/behavior/declarative/Trigger;Lnet/minecraft/world/entity/ai/behavior/declarative/Trigger;)Lnet/minecraft/world/entity/ai/behavior/OneShot; sequence
	b (Lcom/mojang/datafixers/kinds/App;)Lblb$e; get
net/minecraft/world/entity/ai/behavior/declarative/MemoryAccessor net/minecraft/world/entity/ai/behavior/declarative/MemoryAccessor
	a brain
	b memoryType
	c value
	a ()Lcom/mojang/datafixers/kinds/App; value
	a (Ljava/lang/Object;)V set
	a (Ljava/lang/Object;J)V setWithExpiry
	a (Ljava/util/Optional;)V setOrErase
	b ()V erase
net/minecraft/world/entity/ai/behavior/warden/Roar net/minecraft/world/entity/ai/behavior/warden/Roar
	c TICKS_BEFORE_PLAYING_ROAR_SOUND
	d ROAR_ANGER_INCREASE
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/monster/warden/Warden;J)V start
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/monster/warden/Warden;J)Z canStillUse
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tick
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/monster/warden/Warden;J)V tick
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/monster/warden/Warden;J)V stop
net/minecraft/world/entity/ai/behavior/warden/Sniffing net/minecraft/world/entity/ai/behavior/warden/Sniffing
	c ANGER_FROM_SNIFFING_MAX_DISTANCE_XZ
	d ANGER_FROM_SNIFFING_MAX_DISTANCE_Y
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/monster/warden/Warden;J)Z canStillUse
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/monster/warden/Warden;J)V start
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/monster/warden/Warden;J)V stop
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
net/minecraft/world/entity/ai/behavior/warden/SonicBoom net/minecraft/world/entity/ai/behavior/warden/SonicBoom
	c COOLDOWN
	d DISTANCE_XZ
	e DISTANCE_Y
	f KNOCKBACK_VERTICAL
	g KNOCKBACK_HORIZONTAL
	h TICKS_BEFORE_PLAYING_SOUND
	i DURATION
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/monster/warden/Warden;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/monster/warden/Warden;J)Z canStillUse
	a (Lnet/minecraft/world/entity/EntityLiving;I)V setCooldown
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/monster/warden/Warden;J)V start
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tick
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/monster/warden/Warden;J)V tick
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/monster/warden/Warden;J)V stop
net/minecraft/world/entity/ai/behavior/warden/TryToSniff net/minecraft/world/entity/ai/behavior/warden/TryToSniff
	a SNIFF_COOLDOWN
	a ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/control/SmoothSwimmingLookControl net/minecraft/world/entity/ai/control/SmoothSwimmingLookControl
	h maxYRotFromCenter
	i HEAD_TILT_X
	j HEAD_TILT_Y
	a ()V tick
net/minecraft/world/entity/ai/control/SmoothSwimmingMoveControl net/minecraft/world/entity/ai/control/SmoothSwimmingMoveControl
	l FULL_SPEED_TURN_THRESHOLD
	m STOP_TURN_THRESHOLD
	n maxTurnX
	o maxTurnY
	p inWaterSpeedModifier
	q outsideWaterSpeedModifier
	r applyGravity
	a ()V tick
	a (F)F getTurningSpeedFactor
net/minecraft/world/entity/ai/goal/ClimbOnTopOfPowderSnowGoal net/minecraft/world/entity/ai/goal/ClimbOnTopOfPowderSnowGoal
	a mob
	b level
	J_ ()Z requiresUpdateEveryTick
	a ()Z canUse
	e ()V tick
net/minecraft/world/entity/ai/goal/RandomStandGoal net/minecraft/world/entity/ai/goal/RandomStandGoal
	a horse
	b nextStand
	J_ ()Z requiresUpdateEveryTick
	a ()Z canUse
	a (Lnet/minecraft/world/entity/animal/horse/EntityHorseAbstract;)V resetStandInterval
	b ()Z canContinueToUse
	c ()V start
	h ()V playStandSound
net/minecraft/world/entity/ai/memory/MemoryModuleType net/minecraft/world/entity/ai/memory/MemoryModuleType
	A NEAREST_HOSTILE
	B NEAREST_ATTACKABLE
	C HIDING_PLACE
	D HEARD_BELL_TIME
	E CANT_REACH_WALK_TARGET_SINCE
	F GOLEM_DETECTED_RECENTLY
	G LAST_SLEPT
	H LAST_WOKEN
	I LAST_WORKED_AT_POI
	J NEAREST_VISIBLE_ADULT
	K NEAREST_VISIBLE_WANTED_ITEM
	L NEAREST_VISIBLE_NEMESIS
	M PLAY_DEAD_TICKS
	N TEMPTING_PLAYER
	O TEMPTATION_COOLDOWN_TICKS
	P GAZE_COOLDOWN_TICKS
	Q IS_TEMPTED
	R LONG_JUMP_COOLDOWN_TICKS
	S LONG_JUMP_MID_JUMP
	T HAS_HUNTING_COOLDOWN
	U RAM_COOLDOWN_TICKS
	V RAM_TARGET
	W IS_IN_WATER
	X IS_PREGNANT
	Y IS_PANICKING
	Z UNREACHABLE_TONGUE_TARGETS
	a DUMMY
	aA IS_SNIFFING
	aB IS_EMERGING
	aC ROAR_SOUND_DELAY
	aD DIG_COOLDOWN
	aE ROAR_SOUND_COOLDOWN
	aF SNIFF_COOLDOWN
	aG TOUCH_COOLDOWN
	aH VIBRATION_COOLDOWN
	aI SONIC_BOOM_COOLDOWN
	aJ SONIC_BOOM_SOUND_COOLDOWN
	aK SONIC_BOOM_SOUND_DELAY
	aL LIKED_PLAYER
	aM LIKED_NOTEBLOCK_POSITION
	aN LIKED_NOTEBLOCK_COOLDOWN_TICKS
	aO ITEM_PICKUP_COOLDOWN_TICKS
	aP SNIFFER_EXPLORED_POSITIONS
	aQ SNIFFER_SNIFFING_TARGET
	aR SNIFFER_DIGGING
	aS SNIFFER_HAPPY
	aT codec
	aa ANGRY_AT
	ab UNIVERSAL_ANGER
	ac ADMIRING_ITEM
	ad TIME_TRYING_TO_REACH_ADMIRE_ITEM
	ae DISABLE_WALK_TO_ADMIRE_ITEM
	af ADMIRING_DISABLED
	ag HUNTED_RECENTLY
	ah CELEBRATE_LOCATION
	ai DANCING
	aj NEAREST_VISIBLE_HUNTABLE_HOGLIN
	ak NEAREST_VISIBLE_BABY_HOGLIN
	al NEAREST_TARGETABLE_PLAYER_NOT_WEARING_GOLD
	am NEARBY_ADULT_PIGLINS
	an NEAREST_VISIBLE_ADULT_PIGLINS
	ao NEAREST_VISIBLE_ADULT_HOGLINS
	ap NEAREST_VISIBLE_ADULT_PIGLIN
	aq NEAREST_VISIBLE_ZOMBIFIED
	ar VISIBLE_ADULT_PIGLIN_COUNT
	as VISIBLE_ADULT_HOGLIN_COUNT
	at NEAREST_PLAYER_HOLDING_WANTED_ITEM
	au ATE_RECENTLY
	av NEAREST_REPELLENT
	aw PACIFIED
	ax ROAR_TARGET
	ay DISTURBANCE_LOCATION
	az RECENT_PROJECTILE
	b HOME
	c JOB_SITE
	d POTENTIAL_JOB_SITE
	e MEETING_POINT
	f SECONDARY_JOB_SITE
	g NEAREST_LIVING_ENTITIES
	h NEAREST_VISIBLE_LIVING_ENTITIES
	i VISIBLE_VILLAGER_BABIES
	j NEAREST_PLAYERS
	k NEAREST_VISIBLE_PLAYER
	l NEAREST_VISIBLE_ATTACKABLE_PLAYER
	m WALK_TARGET
	n LOOK_TARGET
	o ATTACK_TARGET
	p ATTACK_COOLING_DOWN
	q INTERACTION_TARGET
	r BREED_TARGET
	s RIDE_TARGET
	t PATH
	u INTERACTABLE_DOORS
	v DOORS_TO_CLOSE
	w NEAREST_BED
	x HURT_BY
	y HURT_BY_ENTITY
	z AVOID_TARGET
	a ()Ljava/util/Optional; getCodec
	a (Ljava/lang/String;)Lnet/minecraft/world/entity/ai/memory/MemoryModuleType; register
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/entity/ai/memory/MemoryModuleType; register
net/minecraft/world/entity/ai/memory/MemoryStatus net/minecraft/world/entity/ai/memory/MemoryStatus
	a VALUE_PRESENT
	b VALUE_ABSENT
	c REGISTERED
	d $VALUES
	a ()[Lnet/minecraft/world/entity/ai/memory/MemoryStatus; $values
net/minecraft/world/entity/ai/memory/NearestVisibleLivingEntities net/minecraft/world/entity/ai/memory/NearestVisibleLivingEntities
	a EMPTY
	b nearbyEntities
	c lineOfSightTest
	a ()Lnet/minecraft/world/entity/ai/memory/NearestVisibleLivingEntities; empty
	a (Ljava/util/function/Predicate;)Ljava/util/Optional; findClosest
	a (Lnet/minecraft/world/entity/EntityLiving;)Z contains
	b (Ljava/util/function/Predicate;)Ljava/lang/Iterable; findAll
	c (Ljava/util/function/Predicate;)Ljava/util/stream/Stream; find
	d (Ljava/util/function/Predicate;)Z contains
net/minecraft/world/entity/ai/sensing/AxolotlAttackablesSensor net/minecraft/world/entity/ai/sensing/AxolotlAttackablesSensor
	a TARGET_DETECTION_DISTANCE
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityLiving;)Z isMatchingEntity
	b ()Lnet/minecraft/world/entity/ai/memory/MemoryModuleType; getMemory
	b (Lnet/minecraft/world/entity/EntityLiving;)Z isHostileTarget
	e (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityLiving;)Z isHuntTarget
	f (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityLiving;)Z isClose
net/minecraft/world/entity/ai/sensing/FrogAttackablesSensor net/minecraft/world/entity/ai/sensing/FrogAttackablesSensor
	a TARGET_DETECTION_DISTANCE
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityLiving;)Z isMatchingEntity
	b ()Lnet/minecraft/world/entity/ai/memory/MemoryModuleType; getMemory
	e (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityLiving;)Z isUnreachableAttackTarget
net/minecraft/world/entity/ai/sensing/Sensor net/minecraft/world/entity/ai/sensing/Sensor
	a RANDOM
	b TARGETING_RANGE
	c DEFAULT_SCAN_RATE
	d TARGET_CONDITIONS
	e TARGET_CONDITIONS_IGNORE_INVISIBILITY_TESTING
	f ATTACK_TARGET_CONDITIONS
	g ATTACK_TARGET_CONDITIONS_IGNORE_INVISIBILITY_TESTING
	h ATTACK_TARGET_CONDITIONS_IGNORE_LINE_OF_SIGHT
	i ATTACK_TARGET_CONDITIONS_IGNORE_INVISIBILITY_AND_LINE_OF_SIGHT
	j scanRate
	k timeToTick
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)V doTick
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)V tick
	b (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityLiving;)Z isEntityTargetable
	c (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityLiving;)Z isEntityAttackable
	d (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityLiving;)Z isEntityAttackableIgnoringLineOfSight
net/minecraft/world/entity/ai/sensing/SensorType net/minecraft/world/entity/ai/sensing/SensorType
	a DUMMY
	b NEAREST_ITEMS
	c NEAREST_LIVING_ENTITIES
	d NEAREST_PLAYERS
	e NEAREST_BED
	f HURT_BY
	g VILLAGER_HOSTILES
	h VILLAGER_BABIES
	i SECONDARY_POIS
	j GOLEM_DETECTED
	k PIGLIN_SPECIFIC_SENSOR
	l PIGLIN_BRUTE_SPECIFIC_SENSOR
	m HOGLIN_SPECIFIC_SENSOR
	n NEAREST_ADULT
	o AXOLOTL_ATTACKABLES
	p AXOLOTL_TEMPTATIONS
	q GOAT_TEMPTATIONS
	r FROG_TEMPTATIONS
	s CAMEL_TEMPTATIONS
	t FROG_ATTACKABLES
	u IS_IN_WATER
	v WARDEN_ENTITY_SENSOR
	w factory
	a ()Lnet/minecraft/world/entity/ai/sensing/Sensor; create
	a (Ljava/lang/String;Ljava/util/function/Supplier;)Lnet/minecraft/world/entity/ai/sensing/SensorType; register
net/minecraft/world/entity/ai/sensing/TemptingSensor net/minecraft/world/entity/ai/sensing/TemptingSensor
	a TEMPTATION_RANGE
	c TEMPT_TARGETING
	d temptations
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityCreature;)V doTick
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)V doTick
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z playerHoldingTemptation
	a (Lnet/minecraft/world/item/ItemStack;)Z isTemptation
net/minecraft/world/entity/ai/village/VillageSiege$State net/minecraft/world/entity/ai/village/VillageSiege$State
	a SIEGE_CAN_ACTIVATE
	b SIEGE_TONIGHT
	c SIEGE_DONE
	d $VALUES
	a ()[Lnet/minecraft/world/entity/ai/village/VillageSiege$State; $values
net/minecraft/world/entity/ai/village/VillageSiege net/minecraft/world/entity/ai/village/VillageSiege
	a LOGGER
	b hasSetupSiege
	c siegeState
	d zombiesToSpawn
	e nextSpawnTime
	f spawnX
	g spawnY
	h spawnZ
	a (Lnet/minecraft/server/level/WorldServer;)Z tryToSetupSiege
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/Vec3D; findRandomSpawnPos
	a (Lnet/minecraft/server/level/WorldServer;ZZ)I tick
	b (Lnet/minecraft/server/level/WorldServer;)V trySpawn
net/minecraft/world/entity/ai/village/poi/PoiTypes net/minecraft/world/entity/ai/village/poi/PoiTypes
	a ARMORER
	b BUTCHER
	c CARTOGRAPHER
	d CLERIC
	e FARMER
	f FISHERMAN
	g FLETCHER
	h LEATHERWORKER
	i LIBRARIAN
	j MASON
	k SHEPHERD
	l TOOLSMITH
	m WEAPONSMITH
	n HOME
	o MEETING
	p BEEHIVE
	q BEE_NEST
	r NETHER_PORTAL
	s LODESTONE
	t LIGHTNING_ROD
	u BEDS
	v CAULDRONS
	w TYPE_BY_STATE
	a (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; createKey
	a (Lnet/minecraft/core/Holder;Ljava/util/Set;)V registerBlockStates
	a (Lnet/minecraft/core/IRegistry;)Lnet/minecraft/world/entity/ai/village/poi/VillagePlaceType; bootstrap
	a (Lnet/minecraft/core/IRegistry;Lnet/minecraft/resources/ResourceKey;Ljava/util/Set;II)Lnet/minecraft/world/entity/ai/village/poi/VillagePlaceType; register
	a (Lnet/minecraft/world/level/block/Block;)Ljava/util/Set; getBlockStates
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Ljava/util/Optional; forState
	b (Lnet/minecraft/world/level/block/state/IBlockData;)Z hasPoi
net/minecraft/world/entity/animal/CatVariant net/minecraft/world/entity/animal/CatVariant
	a TABBY
	b BLACK
	c RED
	d SIAMESE
	e BRITISH_SHORTHAIR
	f CALICO
	g PERSIAN
	h RAGDOLL
	i WHITE
	j JELLIE
	k ALL_BLACK
	l texture
	a ()Lnet/minecraft/resources/MinecraftKey; texture
	a (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; createKey
	a (Lnet/minecraft/core/IRegistry;)Lnet/minecraft/world/entity/animal/CatVariant; bootstrap
	a (Lnet/minecraft/core/IRegistry;Lnet/minecraft/resources/ResourceKey;Ljava/lang/String;)Lnet/minecraft/world/entity/animal/CatVariant; register
net/minecraft/world/entity/animal/FrogVariant net/minecraft/world/entity/animal/FrogVariant
	a TEMPERATE
	b WARM
	c COLD
	d texture
	a ()Lnet/minecraft/resources/MinecraftKey; texture
	a (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/world/entity/animal/FrogVariant; register
net/minecraft/world/entity/animal/allay/Allay net/minecraft/world/entity/animal/allay/Allay
	b SENSOR_TYPES
	bS VIBRATION_EVENT_LISTENER_RANGE
	bT ITEM_PICKUP_REACH
	bU LIFTING_ITEM_ANIMATION_DURATION
	bV DANCING_LOOP_DURATION
	bW SPINNING_ANIMATION_DURATION
	bX DUPLICATION_ITEM
	bY DUPLICATION_COOLDOWN_TICKS
	bZ NUM_OF_DUPLICATION_HEARTS
	c MEMORY_TYPES
	ca RIDING_OFFSET
	cb DATA_DANCING
	cc DATA_CAN_DUPLICATE
	cd dynamicVibrationListener
	ce vibrationListenerConfig
	cf dynamicJukeboxListener
	cg inventory
	ch jukeboxPos
	ci duplicationCooldown
	cj holdingItemAnimationTicks
	ck holdingItemAnimationTicks0
	cl dancingAnimationTicks
	cm spinningAnimationTicks
	cn spinningAnimationTicks0
	d THROW_SOUND_PITCHES
	e LOGGER
	C (F)F getHoldingItemAnimationProgress
	D (F)F getSpinningProgress
	P ()Lnet/minecraft/core/BaseBlockPosition; getPickupReach
	T ()V sendDebugPackets
	U ()V customServerAiStep
	a (DZLnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;)V checkFallDamage
	a (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/BehaviorController; makeBrain
	a (Ljava/util/function/BiConsumer;)V updateDynamicGameEventListener
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/item/ItemStack;)V removeInteractionItem
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z equipmentHasChanged
	a (Lnet/minecraft/world/level/World;)Lnet/minecraft/world/entity/ai/navigation/NavigationAbstract; createNavigation
	aN ()Z isFlapping
	a_ ()V defineSynchedData
	b (B)V handleEntityEvent
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	b (Lnet/minecraft/core/BlockPosition;Z)V setJukeboxPlaying
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/world/entity/item/EntityItem;)V pickUpItem
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	b_ ()V aiStep
	bu ()D getMyRidingOffset
	cF ()Lnet/minecraft/world/phys/Vec3D; getLeashOffset
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	d (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z allayConsidersItemEqual
	dH ()Lnet/minecraft/world/entity/ai/BehaviorController; getBrain
	dI ()Lbgy$b; brainProvider
	e (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z hasNonMatchingPotion
	eN ()F getSoundVolume
	er ()V dropEquipment
	f (Lnet/minecraft/world/item/ItemStack;)Z canTakeItem
	fA ()Z canPickUpLoot
	fQ ()Z shouldStayCloseToLeashHolder
	fS ()Z isDancing
	fT ()Z isPanicking
	fU ()Z isSpinning
	fV ()Z isOnPickupCooldown
	fW ()Z shouldStopDancing
	fX ()V updateDuplicationCooldown
	fY ()V duplicateAllay
	fZ ()V resetDuplicationCooldown
	ga ()Z canDuplicate
	gb ()V spawnHeartParticle
	h (D)Z removeWhenFarAway
	h (Lnet/minecraft/world/phys/Vec3D;)V travel
	k (Lnet/minecraft/world/item/ItemStack;)Z wantsToPickUp
	l ()V tick
	l (Lnet/minecraft/world/item/ItemStack;)Z isDuplicationItem
	q ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	r ()Z hasItemInHand
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w ()Lnet/minecraft/world/InventorySubcontainer; getInventory
	w (Z)V setDancing
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
net/minecraft/world/entity/animal/allay/AllayAi net/minecraft/world/entity/animal/allay/AllayAi
	a SPEED_MULTIPLIER_WHEN_IDLING
	b SPEED_MULTIPLIER_WHEN_FOLLOWING_DEPOSIT_TARGET
	c SPEED_MULTIPLIER_WHEN_RETRIEVING_ITEM
	d SPEED_MULTIPLIER_WHEN_PANICKING
	e CLOSE_ENOUGH_TO_TARGET
	f TOO_FAR_FROM_TARGET
	g MAX_LOOK_DISTANCE
	h MIN_WAIT_DURATION
	i MAX_WAIT_DURATION
	j TIME_TO_FORGET_NOTEBLOCK
	k DISTANCE_TO_WANTED_ITEM
	l GIVE_ITEM_TIMEOUT_DURATION
	a (Lnet/minecraft/world/entity/EntityLiving;)Ljava/util/Optional; getLikedPlayer
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/core/BlockPosition;)V hearNoteblock
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/ai/BehaviorController;Lnet/minecraft/core/GlobalPos;)Z shouldDepositItemsAtLikedNoteblock
	a (Lnet/minecraft/world/entity/ai/BehaviorController;)Lnet/minecraft/world/entity/ai/BehaviorController; makeBrain
	a (Lnet/minecraft/world/entity/animal/allay/Allay;)V updateActivity
	b (Lnet/minecraft/world/entity/EntityLiving;)Ljava/util/Optional; getItemDepositPosition
	b (Lnet/minecraft/world/entity/ai/BehaviorController;)V initCoreActivity
	c (Lnet/minecraft/world/entity/EntityLiving;)Z hasWantedItem
	c (Lnet/minecraft/world/entity/ai/BehaviorController;)V initIdleActivity
	d (Lnet/minecraft/world/entity/EntityLiving;)Ljava/util/Optional; getLikedPlayerPositionTracker
net/minecraft/world/entity/animal/axolotl/Axolotl$Variant net/minecraft/world/entity/animal/axolotl/Axolotl$Variant
	a LUCY
	b WILD
	c GOLD
	d CYAN
	e BLUE
	f CODEC
	g BY_ID
	h id
	i name
	j common
	k $VALUES
	a ()I getId
	a (I)Lnet/minecraft/world/entity/animal/axolotl/Axolotl$Variant; byId
	a (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/entity/animal/axolotl/Axolotl$Variant; getCommonSpawnVariant
	a (Lnet/minecraft/util/RandomSource;Z)Lnet/minecraft/world/entity/animal/axolotl/Axolotl$Variant; getSpawnVariant
	b ()Ljava/lang/String; getName
	b (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/entity/animal/axolotl/Axolotl$Variant; getRareSpawnVariant
	c ()Ljava/lang/String; getSerializedName
	d ()[Lnet/minecraft/world/entity/animal/axolotl/Axolotl$Variant; $values
net/minecraft/world/entity/animal/axolotl/Axolotl net/minecraft/world/entity/animal/axolotl/Axolotl
	bS TOTAL_PLAYDEAD_TIME
	bT SENSOR_TYPES
	bV MEMORY_TYPES
	bW PLAYER_REGEN_DETECTION_RANGE
	bX RARE_VARIANT_CHANCE
	bY VARIANT_TAG
	bZ DATA_VARIANT
	ca DATA_PLAYING_DEAD
	cb FROM_BUCKET
	cc AXOLOTL_TOTAL_AIR_SUPPLY
	cd REHYDRATE_AIR_SUPPLY
	ce REGEN_BUFF_MAX_DURATION
	cf modelRotationValues
	cg REGEN_BUFF_BASE_DURATION
	L ()V playAmbientSound
	Q ()Z requiresCustomPersistence
	T ()V sendDebugPackets
	U ()V customServerAiStep
	V ()I getMaxHeadXRot
	W ()I getMaxHeadYRot
	a ()Ljava/util/Map; getModelRotationValues
	a (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/BehaviorController; makeBrain
	a (Ljava/lang/Object;)V setVariant
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/IWorldReader;)F getWalkTargetValue
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/util/RandomSource;)Z useRareVariant
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkAxolotlSpawnRules
	a (Lnet/minecraft/world/entity/animal/axolotl/Axolotl$Variant;)V setVariant
	a (Lnet/minecraft/world/entity/animal/axolotl/Axolotl;Lnet/minecraft/world/entity/EntityLiving;)V onStopAttacking
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z canBeLeashed
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/item/ItemStack;)V usePlayerItem
	a (Lnet/minecraft/world/level/IWorldReader;)Z checkSpawnObstruction
	a (Lnet/minecraft/world/level/World;)Lnet/minecraft/world/entity/ai/navigation/NavigationAbstract; createNavigation
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	aI ()Lnet/minecraft/sounds/SoundEffect; getSwimSound
	aJ ()Lnet/minecraft/sounds/SoundEffect; getSwimSplashSound
	a_ ()V defineSynchedData
	ao ()V baseTick
	b ()Lnet/minecraft/world/item/ItemStack; getBucketItemStack
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	c ()Ljava/lang/Object; getVariant
	c (Lnet/minecraft/nbt/NBTTagCompound;)V loadFromBucketTag
	cc ()I getMaxAirSupply
	cv ()Z isPushedByFluid
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	dH ()Lnet/minecraft/world/entity/ai/BehaviorController; getBrain
	dI ()Lbgy$b; brainProvider
	dK ()Z canBreatheUnderwater
	e (Lnet/minecraft/world/entity/player/EntityHuman;)V applySupportingEffects
	eJ ()Lnet/minecraft/world/entity/EnumMonsterType; getMobType
	eh ()Z canBeSeenAsEnemy
	fS ()Lnet/minecraft/world/entity/animal/axolotl/Axolotl$Variant; getVariant
	fY ()Z isPlayingDead
	fZ ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	h (D)Z removeWhenFarAway
	h (Lnet/minecraft/world/phys/Vec3D;)V travel
	j (Lnet/minecraft/world/entity/EntityLiving;)D getMeleeAttackRangeSqr
	l (Lnet/minecraft/world/item/ItemStack;)V saveToBucketTag
	m (Lnet/minecraft/world/item/ItemStack;)Z isFood
	q ()V rehydrate
	r ()Z fromBucket
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	s (I)V handleAirSupply
	w ()Lnet/minecraft/sounds/SoundEffect; getPickupSound
	w (Z)V setFromBucket
	x (Z)V setPlayingDead
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	z (Lnet/minecraft/world/entity/Entity;)Z doHurtTarget
net/minecraft/world/entity/animal/axolotl/AxolotlAi net/minecraft/world/entity/animal/axolotl/AxolotlAi
	a ADULT_FOLLOW_RANGE
	b SPEED_MULTIPLIER_WHEN_MAKING_LOVE
	c SPEED_MULTIPLIER_ON_LAND
	d SPEED_MULTIPLIER_WHEN_IDLING_IN_WATER
	e SPEED_MULTIPLIER_WHEN_CHASING_IN_WATER
	f SPEED_MULTIPLIER_WHEN_FOLLOWING_ADULT_IN_WATER
	a ()Lnet/minecraft/world/item/crafting/RecipeItemStack; getTemptations
	a (Lnet/minecraft/world/entity/EntityLiving;)Z canSetWalkTargetFromLookTarget
	a (Lnet/minecraft/world/entity/ai/BehaviorController;)Lnet/minecraft/world/entity/ai/BehaviorController; makeBrain
	a (Lnet/minecraft/world/entity/animal/axolotl/Axolotl;)V updateActivity
	b (Lnet/minecraft/world/entity/EntityLiving;)F getSpeedModifierChasing
	b (Lnet/minecraft/world/entity/ai/BehaviorController;)V initPlayDeadActivity
	b (Lnet/minecraft/world/entity/animal/axolotl/Axolotl;)Ljava/util/Optional; findNearestValidAttackTarget
	c (Lnet/minecraft/world/entity/EntityLiving;)F getSpeedModifierFollowingAdult
	c (Lnet/minecraft/world/entity/ai/BehaviorController;)V initFightActivity
	d (Lnet/minecraft/world/entity/EntityLiving;)F getSpeedModifier
	d (Lnet/minecraft/world/entity/ai/BehaviorController;)V initCoreActivity
	e (Lnet/minecraft/world/entity/ai/BehaviorController;)V initIdleActivity
net/minecraft/world/entity/animal/camel/Camel net/minecraft/world/entity/animal/camel/Camel
	bS TEMPTATION_ITEM
	bT DASH_COOLDOWN_TICKS
	bV MAX_HEAD_Y_ROT
	bW DASH
	bX LAST_POSE_CHANGE_TICK
	bY sitAnimationState
	bZ sitPoseAnimationState
	cA SITTING_DIMENSIONS
	cB dashCooldown
	cC idleAnimationTimeout
	ca sitUpAnimationState
	cb idleAnimationState
	cc dashAnimationState
	ct RUNNING_SPEED_BONUS
	cu DASH_VERTICAL_MOMENTUM
	cv DASH_HORIZONTAL_MOMENTUM
	cw SITDOWN_DURATION_TICKS
	cx STANDUP_DURATION_TICKS
	cy IDLE_MINIMAL_DURATION_TICKS
	cz SITTING_HEIGHT_DIFFERENCE
	A ()Lnet/minecraft/world/entity/ai/control/EntityAIBodyControl; createBodyControl
	B (F)V onLeashDistance
	Q_ ()Lnet/minecraft/sounds/SoundEffect; getSaddleSoundEvent
	T ()V sendDebugPackets
	U ()V customServerAiStep
	V_ ()I getJumpCooldown
	W ()I getMaxHeadYRot
	a ()Z canJump
	a (J)V resetLastPoseChangeTick
	a (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/BehaviorController; makeBrain
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/world/entity/Entity;)V clampRotation
	a (Lnet/minecraft/world/entity/Entity;F)V clampHeadRotationToBody
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/phys/Vec3D;)V tickRidden
	a (Lnet/minecraft/world/entity/EntityPose;)Lnet/minecraft/world/entity/EntitySize; getDimensions
	a (Lnet/minecraft/world/entity/animal/EntityAnimal;)Z canMate
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/item/ItemStack;)Z handleEating
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	a (ZF)D getBodyAnchorAnimationYOffset
	a_ ()V defineSynchedData
	b ()V handleStopJump
	b (FLnet/minecraft/world/phys/Vec3D;)V executeRidersJump
	b (I)V onPlayerJump
	b (J)V resetLastPoseChangeTickToFullStand
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/animal/camel/Camel; getBreedOffspring
	b (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/phys/Vec3D; getRiddenInput
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/world/entity/player/EntityHuman;)V openCustomInventoryScreen
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	bv ()D getPassengersRidingOffset
	c (I)V handleStartJump
	cK ()Lnet/minecraft/world/entity/EntityLiving; getControllingPassenger
	d ()D getRiderShieldingHeight
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	dI ()Lbgy$b; brainProvider
	dz ()Z canSprint
	f (Lnet/minecraft/world/damagesource/DamageSource;F)V actuallyHurt
	fS ()Z isPanicking
	fY ()Z canPerformRearing
	fZ ()Lnet/minecraft/sounds/SoundEffect; getEatingSound
	g (F)V updateWalkAnimation
	g (Lnet/minecraft/world/entity/EntityLiving;)F getRiddenSpeed
	gE ()V setupAnimationStates
	gF ()Z isVisuallySittingDown
	ga ()Z isCamelSitting
	gb ()Z isCamelVisuallySitting
	gc ()Z isInPoseTransition
	gd ()V sitDown
	ge ()V standUp
	gf ()V standUpPanic
	gg ()J getPoseTime
	gh ()Z isTamed
	h (Lnet/minecraft/world/phys/Vec3D;)V travel
	i (Lnet/minecraft/world/entity/Entity;)V positionRider
	j (Lnet/minecraft/world/entity/Entity;)V onPassengerTurned
	l ()V tick
	m (Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/phys/Vec2F; getRiddenRotation
	m (Lnet/minecraft/world/item/ItemStack;)Z isFood
	o (Lnet/minecraft/world/entity/Entity;)Z canAddPassenger
	q ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	r ()Z refuseToMove
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	t (F)Lnet/minecraft/world/phys/Vec3D; getLeashOffset
	w ()Z isDashing
	w (Z)V setDashing
	x ()V registerGoals
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
net/minecraft/world/entity/animal/camel/CamelAi net/minecraft/world/entity/animal/camel/CamelAi
	a SPEED_MULTIPLIER_WHEN_PANICKING
	b SPEED_MULTIPLIER_WHEN_IDLING
	c SPEED_MULTIPLIER_WHEN_TEMPTED
	d SPEED_MULTIPLIER_WHEN_FOLLOWING_ADULT
	e SPEED_MULTIPLIER_WHEN_MAKING_LOVE
	f ADULT_FOLLOW_RANGE
	g SENSOR_TYPES
	h MEMORY_TYPES
	a ()Lbgy$b; brainProvider
	a (Lnet/minecraft/world/entity/ai/BehaviorController;)Lnet/minecraft/world/entity/ai/BehaviorController; makeBrain
	a (Lnet/minecraft/world/entity/animal/camel/Camel;)V updateActivity
	a (Lnet/minecraft/world/entity/animal/camel/Camel;Lnet/minecraft/util/RandomSource;)V initMemories
	b ()Lnet/minecraft/world/item/crafting/RecipeItemStack; getTemptations
	b (Lnet/minecraft/world/entity/ai/BehaviorController;)V initCoreActivity
	c (Lnet/minecraft/world/entity/ai/BehaviorController;)V initIdleActivity
net/minecraft/world/entity/animal/frog/Frog net/minecraft/world/entity/animal/frog/Frog
	bS TEMPTATION_ITEM
	bT SENSOR_TYPES
	bV MEMORY_TYPES
	bW VARIANT_KEY
	bX jumpAnimationState
	bY croakAnimationState
	bZ tongueAnimationState
	ca swimIdleAnimationState
	cb DATA_VARIANT_ID
	cc DATA_TONGUE_TARGET_ID
	cd FROG_FALL_DAMAGE_REDUCTION
	T ()V sendDebugPackets
	U ()V customServerAiStep
	W ()I getMaxHeadYRot
	X ()I getHeadRotSpeed
	a (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/BehaviorController; makeBrain
	a (Ljava/lang/Object;)V setVariant
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/EntityAnimal;)V spawnChildFromBreeding
	a (Lnet/minecraft/world/entity/Entity;)V setTongueTarget
	a (Lnet/minecraft/world/entity/animal/FrogVariant;)V setVariant
	a (Lnet/minecraft/world/level/World;)Lnet/minecraft/world/entity/ai/navigation/NavigationAbstract; createNavigation
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	a (Z)V setBaby
	a_ ()V defineSynchedData
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	c ()Ljava/lang/Object; getVariant
	c (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkFrogSpawnRules
	cv ()Z isPushedByFluid
	d (FF)I calculateFallDamage
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	dH ()Lnet/minecraft/world/entity/ai/BehaviorController; getBrain
	dI ()Lbgy$b; brainProvider
	dK ()Z canBreatheUnderwater
	fS ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	g (F)V updateWalkAnimation
	h (Lnet/minecraft/world/phys/Vec3D;)V travel
	l ()V tick
	m (Lnet/minecraft/world/entity/EntityLiving;)Z canEat
	m (Lnet/minecraft/world/item/ItemStack;)Z isFood
	q ()V eraseTongueTarget
	r ()Ljava/util/Optional; getTongueTarget
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w ()Lnet/minecraft/world/entity/animal/FrogVariant; getVariant
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	y_ ()Z isBaby
net/minecraft/world/entity/animal/frog/FrogAi net/minecraft/world/entity/animal/frog/FrogAi
	a SPEED_MULTIPLIER_WHEN_PANICKING
	b SPEED_MULTIPLIER_WHEN_MAKING_LOVE
	c SPEED_MULTIPLIER_WHEN_IDLING
	d SPEED_MULTIPLIER_ON_LAND
	e SPEED_MULTIPLIER_IN_WATER
	f TIME_BETWEEN_LONG_JUMPS
	g MAX_LONG_JUMP_HEIGHT
	h MAX_LONG_JUMP_WIDTH
	i MAX_JUMP_VELOCITY
	j SPEED_MULTIPLIER_WHEN_TEMPTED
	a ()Lnet/minecraft/world/item/crafting/RecipeItemStack; getTemptations
	a (Lnet/minecraft/world/entity/EntityInsentient;Lnet/minecraft/core/BlockPosition;)Z isAcceptableLandingSpot
	a (Lnet/minecraft/world/entity/ai/BehaviorController;)Lnet/minecraft/world/entity/ai/BehaviorController; makeBrain
	a (Lnet/minecraft/world/entity/animal/frog/Frog;)V updateActivity
	a (Lnet/minecraft/world/entity/animal/frog/Frog;Lnet/minecraft/util/RandomSource;)V initMemories
	b (Lnet/minecraft/world/entity/ai/BehaviorController;)V initCoreActivity
	b (Lnet/minecraft/world/entity/animal/frog/Frog;)Z canAttack
	c (Lnet/minecraft/world/entity/ai/BehaviorController;)V initIdleActivity
	d (Lnet/minecraft/world/entity/ai/BehaviorController;)V initSwimActivity
	e (Lnet/minecraft/world/entity/ai/BehaviorController;)V initLaySpawnActivity
	f (Lnet/minecraft/world/entity/ai/BehaviorController;)V initJumpActivity
	g (Lnet/minecraft/world/entity/ai/BehaviorController;)V initTongueActivity
net/minecraft/world/entity/animal/frog/ShootTongue net/minecraft/world/entity/animal/frog/ShootTongue
	c TIME_OUT_DURATION
	d CATCH_ANIMATION_DURATION
	e TONGUE_ANIMATION_DURATION
	f UNREACHABLE_TONGUE_TARGETS_COOLDOWN_DURATION
	g MAX_UNREACHBLE_TONGUE_TARGETS_IN_MEMORY
	h EATING_DISTANCE
	i EATING_MOVEMENT_FACTOR
	j eatAnimationTimer
	k calculatePathCounter
	l tongueSound
	m eatSound
	n itemSpawnPos
	o state
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/frog/Frog;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/frog/Frog;J)Z canStillUse
	a (Lnet/minecraft/world/entity/animal/frog/Frog;Lnet/minecraft/world/entity/EntityLiving;)Z canPathfindToTarget
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/frog/Frog;)V eatEntity
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/frog/Frog;J)V start
	b (Lnet/minecraft/world/entity/animal/frog/Frog;Lnet/minecraft/world/entity/EntityLiving;)V addUnreachableTargetToMemory
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tick
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/frog/Frog;J)V stop
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/frog/Frog;J)V tick
net/minecraft/world/entity/animal/frog/Tadpole net/minecraft/world/entity/animal/frog/Tadpole
	b ticksToBeFrog
	bS MEMORY_TYPES
	bT age
	c HITBOX_WIDTH
	d HITBOX_HEIGHT
	e SENSOR_TYPES
	T ()V sendDebugPackets
	U ()V customServerAiStep
	a (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/BehaviorController; makeBrain
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/item/ItemStack;)V feed
	a (Lnet/minecraft/world/level/World;)Lnet/minecraft/world/entity/ai/navigation/NavigationAbstract; createNavigation
	b ()Lnet/minecraft/world/item/ItemStack; getBucketItemStack
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/item/ItemStack;)V usePlayerItem
	b_ ()V aiStep
	c (I)V ageUp
	c (Lnet/minecraft/nbt/NBTTagCompound;)V loadFromBucketTag
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	dH ()Lnet/minecraft/world/entity/ai/BehaviorController; getBrain
	dI ()Lbgy$b; brainProvider
	dV ()Z shouldDropExperience
	fT ()Lnet/minecraft/sounds/SoundEffect; getFlopSound
	fU ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	fV ()I getAge
	fW ()V ageUp
	fX ()I getTicksLeftUntilAdult
	l (Lnet/minecraft/world/item/ItemStack;)V saveToBucketTag
	m (Lnet/minecraft/world/item/ItemStack;)Z isFood
	r ()Z fromBucket
	r (I)V setAge
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w ()Lnet/minecraft/sounds/SoundEffect; getPickupSound
	w (Z)V setFromBucket
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
net/minecraft/world/entity/animal/frog/TadpoleAi net/minecraft/world/entity/animal/frog/TadpoleAi
	a SPEED_MULTIPLIER_WHEN_PANICKING
	b SPEED_MULTIPLIER_WHEN_IDLING_IN_WATER
	c SPEED_MULTIPLIER_WHEN_TEMPTED
	a (Lnet/minecraft/world/entity/ai/BehaviorController;)Lnet/minecraft/world/entity/ai/BehaviorController; makeBrain
	a (Lnet/minecraft/world/entity/animal/frog/Tadpole;)V updateActivity
	b (Lnet/minecraft/world/entity/ai/BehaviorController;)V initCoreActivity
	c (Lnet/minecraft/world/entity/ai/BehaviorController;)V initIdleActivity
net/minecraft/world/entity/animal/goat/Goat net/minecraft/world/entity/animal/goat/Goat
	bS LONG_JUMPING_DIMENSIONS
	bT SENSOR_TYPES
	bV MEMORY_TYPES
	bW GOAT_FALL_DAMAGE_REDUCTION
	bX GOAT_SCREAMING_CHANCE
	bY UNIHORN_CHANCE
	bZ ADULT_ATTACK_DAMAGE
	ca BABY_ATTACK_DAMAGE
	cb DATA_IS_SCREAMING_GOAT
	cc DATA_HAS_LEFT_HORN
	cd DATA_HAS_RIGHT_HORN
	ce isLoweringHead
	cf lowerHeadTick
	T ()V sendDebugPackets
	U ()V customServerAiStep
	W ()I getMaxHeadYRot
	a (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/BehaviorController; makeBrain
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/world/entity/EntityPose;)Lnet/minecraft/world/entity/EntitySize; getDimensions
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	a_ ()V defineSynchedData
	b (B)V handleEntityEvent
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/animal/goat/Goat; getBreedOffspring
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	b_ ()V aiStep
	c (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z checkGoatSpawnRules
	d (FF)I calculateFallDamage
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	d (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/sounds/SoundEffect; getEatingSound
	dH ()Lnet/minecraft/world/entity/ai/BehaviorController; getBrain
	dI ()Lbgy$b; brainProvider
	fS ()Z hasLeftHorn
	fY ()Z hasRightHorn
	fZ ()Z dropHorn
	ga ()V addHorns
	gb ()V removeHorns
	gc ()Z isScreamingGoat
	gd ()F getRammingXHeadRot
	m ()V ageBoundaryReached
	q ()Lnet/minecraft/world/item/ItemStack; createHorn
	r ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	r (F)V setYHeadRot
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w ()Lnet/minecraft/sounds/SoundEffect; getMilkingSound
	w (Z)V setScreamingGoat
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
net/minecraft/world/entity/animal/goat/GoatAi net/minecraft/world/entity/animal/goat/GoatAi
	a RAM_PREPARE_TIME
	b RAM_MAX_DISTANCE
	c MAX_LONG_JUMP_HEIGHT
	d MAX_LONG_JUMP_WIDTH
	e MAX_JUMP_VELOCITY
	f RAM_MIN_DISTANCE
	g ADULT_RAM_KNOCKBACK_FORCE
	h BABY_RAM_KNOCKBACK_FORCE
	i ADULT_FOLLOW_RANGE
	j SPEED_MULTIPLIER_WHEN_MAKING_LOVE
	k SPEED_MULTIPLIER_WHEN_IDLING
	l SPEED_MULTIPLIER_WHEN_FOLLOWING_ADULT
	m SPEED_MULTIPLIER_WHEN_TEMPTED
	n SPEED_MULTIPLIER_WHEN_PANICKING
	o SPEED_MULTIPLIER_WHEN_PREPARING_TO_RAM
	p TIME_BETWEEN_LONG_JUMPS
	q TIME_BETWEEN_RAMS
	r TIME_BETWEEN_RAMS_SCREAMER
	s RAM_TARGET_CONDITIONS
	t SPEED_MULTIPLIER_WHEN_RAMMING
	a ()Lnet/minecraft/world/item/crafting/RecipeItemStack; getTemptations
	a (Lnet/minecraft/world/entity/ai/BehaviorController;)Lnet/minecraft/world/entity/ai/BehaviorController; makeBrain
	a (Lnet/minecraft/world/entity/animal/goat/Goat;)V updateActivity
	a (Lnet/minecraft/world/entity/animal/goat/Goat;Lnet/minecraft/util/RandomSource;)V initMemories
	b (Lnet/minecraft/world/entity/ai/BehaviorController;)V initCoreActivity
	c (Lnet/minecraft/world/entity/ai/BehaviorController;)V initIdleActivity
	d (Lnet/minecraft/world/entity/ai/BehaviorController;)V initLongJumpActivity
	e (Lnet/minecraft/world/entity/ai/BehaviorController;)V initRamActivity
net/minecraft/world/entity/animal/sniffer/Sniffer net/minecraft/world/entity/animal/sniffer/Sniffer
	bS walkingAnimationState
	bT panicAnimationState
	bV feelingHappyAnimationState
	bW scentingAnimationState
	bX sniffingAnimationState
	bY searchingAnimationState
	bZ diggingAnimationState
	ca risingAnimationState
	cb DIGGING_PARTICLES_DELAY_TICKS
	cc DIGGING_PARTICLES_DURATION_TICKS
	cd DIGGING_PARTICLES_AMOUNT
	ce DIGGING_DROP_SEED_OFFSET_TICKS
	cf SNIFFING_PROXIMITY_DISTANCE
	cg SNIFFER_BABY_AGE_TICKS
	ch DATA_STATE
	ci DATA_DROP_SEED_AT_TICK
	A_ ()Lnet/minecraft/world/phys/AxisAlignedBB; getBoundingBoxForCulling
	T ()V sendDebugPackets
	U ()V customServerAiStep
	W ()I getMaxHeadYRot
	a (Lbtv$a;)Lnet/minecraft/world/entity/animal/sniffer/Sniffer; transitionTo
	a (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/BehaviorController; makeBrain
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityAgeable;)Lnet/minecraft/world/entity/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/world/entity/AnimationState;)Lnet/minecraft/world/entity/animal/sniffer/Sniffer; emitDiggingParticles
	a (Lnet/minecraft/world/entity/animal/EntityAnimal;)Z canMate
	a (Z)V setBaby
	b (Lbtv$a;)Lnet/minecraft/world/entity/animal/sniffer/Sniffer; setState
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	b (Lnet/minecraft/world/entity/EntityPose;Lnet/minecraft/world/entity/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; mobInteract
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	d (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/sounds/SoundEffect; getEatingSound
	dH ()Lnet/minecraft/world/entity/ai/BehaviorController; getBrain
	dI ()Lbgy$b; brainProvider
	eS ()V jumpFromGround
	fS ()Ljava/util/Optional; calculateDigPosition
	fY ()Z canDig
	fZ ()Z isMoving
	g (Lnet/minecraft/core/BlockPosition;)Z canDig
	ga ()Z isMovingInWater
	gb ()Z isMovingOnLand
	gc ()Lnet/minecraft/core/BlockPosition; getHeadPosition
	gd ()Lbtv$a; getState
	ge ()V resetAnimations
	gf ()Lnet/minecraft/world/entity/animal/sniffer/Sniffer; onDiggingStart
	gg ()V dropSeed
	gh ()Ljava/util/stream/Stream; getExploredPositions
	gi ()V playSearchingSound
	h (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/entity/animal/sniffer/Sniffer; storeExploredPosition
	l ()V tick
	l (Lnet/minecraft/world/entity/Entity;)Z canRide
	m (Lnet/minecraft/world/item/ItemStack;)Z isFood
	q ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	r ()Z isPanicking
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w ()Z canPlayDiggingSound
	w (Z)Lnet/minecraft/world/entity/animal/sniffer/Sniffer; onDiggingComplete
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
net/minecraft/world/entity/animal/sniffer/SnifferAi net/minecraft/world/entity/animal/sniffer/SnifferAi
	a SENSOR_TYPES
	b MEMORY_TYPES
	c LOGGER
	d MAX_LOOK_DISTANCE
	e SNIFFING_COOLDOWN_TICKS
	f SPEED_MULTIPLIER_WHEN_IDLING
	g SPEED_MULTIPLIER_WHEN_PANICKING
	h SPEED_MULTIPLIER_WHEN_SNIFFING
	a (Lnet/minecraft/world/entity/ai/BehaviorController;)Lnet/minecraft/world/entity/ai/BehaviorController; makeBrain
	a (Lnet/minecraft/world/entity/animal/sniffer/Sniffer;)V updateActivity
	b (Lnet/minecraft/world/entity/ai/BehaviorController;)V initCoreActivity
	c (Lnet/minecraft/world/entity/ai/BehaviorController;)V initSniffingActivity
	d (Lnet/minecraft/world/entity/ai/BehaviorController;)V initDigActivity
	e (Lnet/minecraft/world/entity/ai/BehaviorController;)V initIdleActivity
net/minecraft/world/entity/decoration/PaintingVariant net/minecraft/world/entity/decoration/PaintingVariant
	a width
	b height
	a ()I getWidth
	b ()I getHeight
net/minecraft/world/entity/decoration/PaintingVariants net/minecraft/world/entity/decoration/PaintingVariants
	A EARTH
	B WIND
	C WATER
	D FIRE
	a KEBAB
	b AZTEC
	c ALBAN
	d AZTEC2
	e BOMB
	f PLANT
	g WASTELAND
	h POOL
	i COURBET
	j SEA
	k SUNSET
	l CREEBET
	m WANDERER
	n GRAHAM
	o MATCH
	p BUST
	q STAGE
	r VOID
	s SKULL_AND_ROSES
	t WITHER
	u FIGHTERS
	v POINTER
	w PIGSCENE
	x BURNING_SKULL
	y SKELETON
	z DONKEY_KONG
	a (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; create
	a (Lnet/minecraft/core/IRegistry;)Lnet/minecraft/world/entity/decoration/PaintingVariant; bootstrap
net/minecraft/world/entity/monster/warden/AngerLevel net/minecraft/world/entity/monster/warden/AngerLevel
	a CALM
	b AGITATED
	c ANGRY
	d SORTED_LEVELS
	e minimumAnger
	f ambientSound
	g listeningSound
	h $VALUES
	a ()I getMinimumAnger
	a (I)Lnet/minecraft/world/entity/monster/warden/AngerLevel; byAnger
	b ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	c ()Lnet/minecraft/sounds/SoundEffect; getListeningSound
	d ()Z isAngry
	e ()[Lnet/minecraft/world/entity/monster/warden/AngerLevel; $values
net/minecraft/world/entity/monster/warden/AngerManagement net/minecraft/world/entity/monster/warden/AngerManagement
	a CONVERSION_DELAY
	b MAX_ANGER
	c suspects
	d angerBySuspect
	e angerByUuid
	f DEFAULT_ANGER_DECREASE
	g conversionDelay
	h highestAnger
	i SUSPECT_ANGER_PAIR
	j filter
	k suspectSorter
	a ()Ljava/util/Optional; getActiveEntity
	a (Ljava/util/function/Predicate;)Lcom/mojang/serialization/Codec; codec
	a (Lnet/minecraft/server/level/WorldServer;)V convertFromUuids
	a (Lnet/minecraft/server/level/WorldServer;Ljava/util/function/Predicate;)V tick
	a (Lnet/minecraft/world/entity/Entity;)V clearAnger
	a (Lnet/minecraft/world/entity/Entity;I)I increaseAnger
	b ()Ljava/util/List; createUuidAngerPairs
	b (Lnet/minecraft/world/entity/Entity;)I getActiveAnger
	c ()V sortAndUpdateHighestAnger
	d ()Lnet/minecraft/world/entity/Entity; getTopSuspect
net/minecraft/world/entity/monster/warden/Warden net/minecraft/world/entity/monster/warden/Warden
	b roarAnimationState
	bS attackAnimationState
	bT sonicBoomAnimationState
	bU LOGGER
	bV GAME_EVENT_LISTENER_RANGE
	bW VIBRATION_COOLDOWN_TICKS
	bX TIME_TO_USE_MELEE_UNTIL_SONIC_BOOM
	bY MAX_HEALTH
	bZ MOVEMENT_SPEED_WHEN_FIGHTING
	c sniffAnimationState
	ca KNOCKBACK_RESISTANCE
	cb ATTACK_KNOCKBACK
	cc ATTACK_DAMAGE
	cd CLIENT_ANGER_LEVEL
	ce DARKNESS_DISPLAY_LIMIT
	cf DARKNESS_DURATION
	cg DARKNESS_RADIUS
	ch DARKNESS_INTERVAL
	ci ANGERMANAGEMENT_TICK_DELAY
	cj DEFAULT_ANGER
	ck PROJECTILE_ANGER
	cl ON_HURT_ANGER_BOOST
	cm RECENT_PROJECTILE_TICK_THRESHOLD
	cn TOUCH_COOLDOWN_TICKS
	co DIGGING_PARTICLES_AMOUNT
	cp DIGGING_PARTICLES_DURATION
	cq DIGGING_PARTICLES_OFFSET
	cr PROJECTILE_ANGER_DISTANCE
	cs tendrilAnimation
	ct tendrilAnimationO
	cu heartAnimation
	cv heartAnimationO
	cw dynamicGameEventListener
	cx angerManagement
	d emergeAnimationState
	e diggingAnimationState
	A (Lnet/minecraft/world/entity/Entity;)V doPush
	C (F)F getTendrilAnimation
	D (F)F getHeartAnimation
	P_ ()Lnet/minecraft/world/entity/EntityLiving; getTarget
	S ()Lnet/minecraft/network/protocol/Packet; getAddEntityPacket
	T ()V sendDebugPackets
	U ()V customServerAiStep
	a ()Lnet/minecraft/tags/TagKey; getListenableEvents
	a (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/BehaviorController; makeBrain
	a (Ljava/util/function/BiConsumer;)V updateDynamicGameEventListener
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/IWorldReader;)F getWalkTargetValue
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/network/protocol/game/PacketPlayOutSpawnEntity;)V recreateFromPacket
	a (Lnet/minecraft/network/syncher/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/gameevent/GameEventListener;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/gameevent/GameEvent;Ldga$a;)Z shouldListen
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/gameevent/GameEventListener;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;F)V onSignalReceive
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/entity/Entity;I)V applyDarknessAround
	a (Lnet/minecraft/world/damagesource/DamageSource;F)Z hurt
	a (Lnet/minecraft/world/entity/AnimationState;)V clientDiggingParticles
	a (Lnet/minecraft/world/entity/Entity;)Z canTargetEntity
	a (Lnet/minecraft/world/entity/Entity;IZ)V increaseAngerAt
	a (Lnet/minecraft/world/entity/EntityPose;)Lnet/minecraft/world/entity/EntitySize; getDimensions
	a (Lnet/minecraft/world/level/IWorldReader;)Z checkSpawnObstruction
	a (Lnet/minecraft/world/level/World;)Lnet/minecraft/world/entity/ai/navigation/NavigationAbstract; createNavigation
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/DifficultyDamageScaler;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/world/entity/GroupDataEntity;Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/entity/GroupDataEntity; finalizeSpawn
	aH ()F nextStep
	aR ()Z dampensVibrations
	a_ ()V defineSynchedData
	b (B)V handleEntityEvent
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V playStepSound
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/damagesource/DamageSource;)Z isInvulnerableTo
	b (Lnet/minecraft/world/entity/Entity;)V clearAnger
	bn ()Z isPushable
	c (Lnet/minecraft/world/entity/Entity;)V increaseAngerAt
	cI ()Z ignoreExplosion
	d (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEffect; getHurtSound
	dH ()Lnet/minecraft/world/entity/ai/BehaviorController; getBrain
	eN ()F getSoundVolume
	fS ()Lnet/minecraft/world/entity/monster/warden/AngerLevel; getAngerLevel
	fT ()Ljava/util/Optional; getEntityAngryAt
	fU ()Lnet/minecraft/world/entity/monster/warden/AngerManagement; getAngerManagement
	fV ()Z isDiggingOrEmerging
	fW ()V syncClientAngerLevel
	fZ ()I getHeartBeatDelay
	fx ()Z canDisableShield
	ga ()V playListeningSound
	gb ()I getActiveAnger
	h (D)Z removeWhenFarAway
	l ()V tick
	l (Lnet/minecraft/world/entity/Entity;)Z canRide
	m (Lnet/minecraft/world/entity/EntityLiving;)V setAttackTarget
	q ()Lnet/minecraft/world/entity/ai/attributes/AttributeProvider$Builder; createAttributes
	r ()I getClientAngerLevel
	s ()Lnet/minecraft/sounds/SoundEffect; getAmbientSound
	w ()Z canTriggerAvoidVibration
	x_ ()Lnet/minecraft/sounds/SoundEffect; getDeathSound
	z (Lnet/minecraft/world/entity/Entity;)Z doHurtTarget
net/minecraft/world/entity/monster/warden/WardenAi net/minecraft/world/entity/monster/warden/WardenAi
	a EMERGE_DURATION
	b ROAR_DURATION
	c DIGGING_COOLDOWN
	d SPEED_MULTIPLIER_WHEN_IDLING
	e SPEED_MULTIPLIER_WHEN_INVESTIGATING
	f SPEED_MULTIPLIER_WHEN_FIGHTING
	g MELEE_ATTACK_COOLDOWN
	h DIGGING_DURATION
	i SNIFFING_DURATION
	j DISTURBANCE_LOCATION_EXPIRY_TIME
	k SENSOR_TYPES
	l MEMORY_TYPES
	m DIG_COOLDOWN_SETTER
	a (Lnet/minecraft/world/entity/EntityLiving;)V setDigCooldown
	a (Lnet/minecraft/world/entity/ai/BehaviorController;)V initCoreActivity
	a (Lnet/minecraft/world/entity/monster/warden/Warden;)V updateActivity
	a (Lnet/minecraft/world/entity/monster/warden/Warden;Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/BehaviorController; makeBrain
	a (Lnet/minecraft/world/entity/monster/warden/Warden;Lnet/minecraft/core/BlockPosition;)V setDisturbanceLocation
	a (Lnet/minecraft/world/entity/monster/warden/Warden;Lnet/minecraft/world/entity/EntityLiving;)Z isTarget
	a (Lnet/minecraft/world/entity/monster/warden/Warden;Lnet/minecraft/world/entity/ai/BehaviorController;)V initFightActivity
	b (Lnet/minecraft/world/entity/ai/BehaviorController;)V initEmergeActivity
	b (Lnet/minecraft/world/entity/monster/warden/Warden;Lnet/minecraft/world/entity/EntityLiving;)V onTargetInvalid
	c (Lnet/minecraft/world/entity/ai/BehaviorController;)V initDiggingActivity
	d (Lnet/minecraft/world/entity/ai/BehaviorController;)V initIdleActivity
	e (Lnet/minecraft/world/entity/ai/BehaviorController;)V initInvestigateActivity
	f (Lnet/minecraft/world/entity/ai/BehaviorController;)V initSniffingActivity
	g (Lnet/minecraft/world/entity/ai/BehaviorController;)V initRoarActivity
net/minecraft/world/entity/monster/warden/WardenSpawnTracker net/minecraft/world/entity/monster/warden/WardenSpawnTracker
	a CODEC
	b MAX_WARNING_LEVEL
	c PLAYER_SEARCH_RADIUS
	d WARNING_CHECK_DIAMETER
	e DECREASE_WARNING_LEVEL_EVERY_INTERVAL
	f WARNING_LEVEL_INCREASE_COOLDOWN
	g ticksSinceLastWarning
	h warningLevel
	i cooldownTicks
	a ()V tick
	a (I)V setWarningLevel
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;)Z hasNearbyWarden
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/server/level/EntityPlayer;)Ljava/util/OptionalInt; tryWarn
	a (Lnet/minecraft/world/entity/monster/warden/WardenSpawnTracker;)V copyData
	b ()V reset
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;)Ljava/util/List; getNearbyPlayers
	c ()I getWarningLevel
	d ()Z onCooldown
	e ()V increaseWarningLevel
	f ()V decreaseWarningLevel
net/minecraft/world/entity/npc/InventoryCarrier net/minecraft/world/entity/npc/InventoryCarrier
	c_ TAG_INVENTORY
	a (Lnet/minecraft/world/entity/EntityInsentient;Lnet/minecraft/world/entity/npc/InventoryCarrier;Lnet/minecraft/world/entity/item/EntityItem;)V pickUpItem
	a_ (Lnet/minecraft/nbt/NBTTagCompound;)V writeInventoryToTag
	c (Lnet/minecraft/nbt/NBTTagCompound;)V readInventoryFromTag
	w ()Lnet/minecraft/world/InventorySubcontainer; getInventory
net/minecraft/world/entity/npc/VillagerData net/minecraft/world/entity/npc/VillagerData
	a MIN_VILLAGER_LEVEL
	b MAX_VILLAGER_LEVEL
	c CODEC
	d NEXT_LEVEL_XP_THRESHOLDS
	e type
	f profession
	g level
	a ()Lnet/minecraft/world/entity/npc/VillagerType; getType
	a (I)Lnet/minecraft/world/entity/npc/VillagerData; setLevel
	a (Lnet/minecraft/world/entity/npc/VillagerProfession;)Lnet/minecraft/world/entity/npc/VillagerData; setProfession
	a (Lnet/minecraft/world/entity/npc/VillagerType;)Lnet/minecraft/world/entity/npc/VillagerData; setType
	b ()Lnet/minecraft/world/entity/npc/VillagerProfession; getProfession
	b (I)I getMinXpPerLevel
	c ()I getLevel
	c (I)I getMaxXpPerLevel
	d (I)Z canLevelUp
net/minecraft/world/entity/npc/VillagerProfession net/minecraft/world/entity/npc/VillagerProfession
	a ALL_ACQUIRABLE_JOBS
	b NONE
	c ARMORER
	d BUTCHER
	e CARTOGRAPHER
	f CLERIC
	g FARMER
	h FISHERMAN
	i FLETCHER
	j LEATHERWORKER
	k LIBRARIAN
	l MASON
	m NITWIT
	n SHEPHERD
	o TOOLSMITH
	p WEAPONSMITH
	q name
	r heldJobSite
	s acquirableJobSite
	t requestedItems
	u secondaryPoi
	v workSound
	a ()Ljava/lang/String; name
	a (Ljava/lang/String;Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lcom/google/common/collect/ImmutableSet;Lcom/google/common/collect/ImmutableSet;Lnet/minecraft/sounds/SoundEffect;)Lnet/minecraft/world/entity/npc/VillagerProfession; register
	a (Ljava/lang/String;Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/sounds/SoundEffect;)Lnet/minecraft/world/entity/npc/VillagerProfession; register
	a (Ljava/lang/String;Lnet/minecraft/resources/ResourceKey;Lcom/google/common/collect/ImmutableSet;Lcom/google/common/collect/ImmutableSet;Lnet/minecraft/sounds/SoundEffect;)Lnet/minecraft/world/entity/npc/VillagerProfession; register
	a (Ljava/lang/String;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/sounds/SoundEffect;)Lnet/minecraft/world/entity/npc/VillagerProfession; register
	b ()Ljava/util/function/Predicate; heldJobSite
	c ()Ljava/util/function/Predicate; acquirableJobSite
	d ()Lcom/google/common/collect/ImmutableSet; requestedItems
	e ()Lcom/google/common/collect/ImmutableSet; secondaryPoi
	f ()Lnet/minecraft/sounds/SoundEffect; workSound
net/minecraft/world/entity/npc/VillagerTrades net/minecraft/world/entity/npc/VillagerTrades
	a TRADES
	b WANDERING_TRADER_TRADES
	c WANDERING_TRADER_TRADES_1_20
	d DEFAULT_SUPPLY
	e COMMON_ITEMS_SUPPLY
	f UNCOMMON_ITEMS_SUPPLY
	g XP_LEVEL_1_SELL
	h XP_LEVEL_1_BUY
	i XP_LEVEL_2_SELL
	j XP_LEVEL_2_BUY
	k XP_LEVEL_3_SELL
	l XP_LEVEL_3_BUY
	m XP_LEVEL_4_SELL
	n XP_LEVEL_4_BUY
	o XP_LEVEL_5_TRADE
	p LOW_TIER_PRICE_MULTIPLIER
	q HIGH_TIER_PRICE_MULTIPLIER
	a (Lcom/google/common/collect/ImmutableMap;)Lit/unimi/dsi/fastutil/ints/Int2ObjectMap; toIntMap
net/minecraft/world/entity/npc/VillagerType net/minecraft/world/entity/npc/VillagerType
	a DESERT
	b JUNGLE
	c PLAINS
	d SAVANNA
	e SNOW
	f SWAMP
	g TAIGA
	h name
	i BY_BIOME
	a (Ljava/lang/String;)Lnet/minecraft/world/entity/npc/VillagerType; register
	a (Lnet/minecraft/core/Holder;)Lnet/minecraft/world/entity/npc/VillagerType; byBiome
net/minecraft/world/entity/player/PlayerModelPart net/minecraft/world/entity/player/PlayerModelPart
	a CAPE
	b JACKET
	c LEFT_SLEEVE
	d RIGHT_SLEEVE
	e LEFT_PANTS_LEG
	f RIGHT_PANTS_LEG
	g HAT
	h bit
	i mask
	j id
	k name
	l $VALUES
	a ()I getMask
	b ()I getBit
	c ()Ljava/lang/String; getId
	d ()Lnet/minecraft/network/chat/IChatBaseComponent; getName
	e ()[Lnet/minecraft/world/entity/player/PlayerModelPart; $values
net/minecraft/world/entity/player/ProfilePublicKey net/minecraft/world/entity/player/ProfilePublicKey
	a EXPIRED_PROFILE_PUBLIC_KEY
	b EXPIRY_GRACE_PERIOD
	c TRUSTED_CODEC
	d data
	e INVALID_SIGNATURE
	a ()Lnet/minecraft/util/SignatureValidator; createSignatureValidator
	a (Lnet/minecraft/util/SignatureValidator;Ljava/util/UUID;Lbyp$a;Ljava/time/Duration;)Lnet/minecraft/world/entity/player/ProfilePublicKey; createValidated
	b ()Lbyp$a; data
net/minecraft/world/entity/raid/Raid net/minecraft/world/entity/raid/Raid
	A groupToLeaderMap
	B groupRaiderMap
	C heroesOfTheVillage
	D ticksActive
	E center
	F level
	G started
	H id
	I totalHealth
	J badOmenLevel
	K active
	L groupsSpawned
	M raidEvent
	N postRaidTicks
	O raidCooldownTicks
	P random
	Q numGroups
	R status
	S celebrationTicks
	T waveSpawnPos
	a VILLAGE_RADIUS_BUFFER
	b MAX_NO_ACTION_TIME
	c MAX_CELEBRATION_TICKS
	d TICKS_PER_DAY
	e DEFAULT_MAX_BAD_OMEN_LEVEL
	f VALID_RAID_RADIUS_SQR
	g RAID_REMOVAL_THRESHOLD_SQR
	h SECTION_RADIUS_FOR_FINDING_NEW_VILLAGE_CENTER
	i ATTEMPT_RAID_FARTHEST
	j ATTEMPT_RAID_CLOSE
	k ATTEMPT_RAID_INSIDE
	l VILLAGE_SEARCH_RADIUS
	m RAID_TIMEOUT_TICKS
	n NUM_SPAWN_ATTEMPTS
	o OMINOUS_BANNER_PATTERN_NAME
	p RAIDERS_REMAINING
	q POST_RAID_TICK_LIMIT
	r DEFAULT_PRE_RAID_TICKS
	s OUTSIDE_RAID_BOUNDS_TIMEOUT
	t LOW_MOB_THRESHOLD
	u RAID_NAME_COMPONENT
	v VICTORY
	w DEFEAT
	x RAID_BAR_VICTORY_COMPONENT
	y RAID_BAR_DEFEAT_COMPONENT
	z HERO_OF_THE_VILLAGE_DURATION
	A ()Z hasMoreWaves
	B ()Z isFinalWave
	C ()Z hasBonusWave
	D ()Z hasSpawnedBonusWave
	E ()Z shouldSpawnBonusGroup
	F ()V updateRaiders
	G ()Z shouldSpawnGroup
	H ()V setDirty
	a ()Z isOver
	a (I)V setBadOmenLevel
	a (II)Lnet/minecraft/core/BlockPosition; findRandomSpawnPos
	a (ILnet/minecraft/world/entity/raid/EntityRaider;)V setLeader
	a (ILnet/minecraft/world/entity/raid/EntityRaider;Lnet/minecraft/core/BlockPosition;Z)V joinRaid
	a (ILnet/minecraft/world/entity/raid/EntityRaider;Z)Z addWaveMob
	a (Lnet/minecraft/core/BlockPosition;)V playSound
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; save
	a (Lnet/minecraft/world/EnumDifficulty;)I getNumGroups
	a (Lnet/minecraft/world/entity/Entity;)V addHeroOfTheVillage
	a (Lnet/minecraft/world/entity/player/EntityHuman;)V absorbBadOmen
	a (Lnet/minecraft/world/entity/raid/EntityRaider;Z)V removeFromRaid
	a (Lnet/minecraft/world/entity/raid/Raid$Wave;IZ)I getDefaultNumSpawns
	a (Lnet/minecraft/world/entity/raid/Raid$Wave;Lnet/minecraft/util/RandomSource;ILnet/minecraft/world/DifficultyDamageScaler;Z)I getPotentialBonusSpawns
	b ()Z isBetweenWaves
	b (I)Lnet/minecraft/world/entity/raid/EntityRaider; getLeader
	b (ILnet/minecraft/world/entity/raid/EntityRaider;)Z addWaveMob
	b (Lnet/minecraft/core/BlockPosition;)V spawnGroup
	c ()Z hasFirstWaveSpawned
	c (I)V removeLeader
	c (Lnet/minecraft/core/BlockPosition;)V setCenter
	d ()Z isStopped
	d (I)Ljava/util/Optional; getValidSpawnPos
	e ()Z isVictory
	f ()Z isLoss
	g ()F getTotalHealth
	h ()Ljava/util/Set; getAllRaiders
	i ()Lnet/minecraft/world/level/World; getLevel
	j ()Z isStarted
	k ()I getGroupsSpawned
	l ()I getMaxBadOmenLevel
	m ()I getBadOmenLevel
	n ()V stop
	o ()V tick
	p ()V updateBossbar
	q ()F getHealthOfLivingRaiders
	r ()I getTotalRaidersAlive
	s ()Lnet/minecraft/world/item/ItemStack; getLeaderBannerInstance
	t ()Lnet/minecraft/core/BlockPosition; getCenter
	u ()I getId
	v ()Z isActive
	w ()F getEnchantOdds
	x ()Ljava/util/function/Predicate; validPlayer
	y ()V updatePlayers
	z ()V moveRaidCenterToNearbyVillageSection
net/minecraft/world/entity/schedule/Activity net/minecraft/world/entity/schedule/Activity
	A name
	B hashCode
	a CORE
	b IDLE
	c WORK
	d PLAY
	e REST
	f MEET
	g PANIC
	h RAID
	i PRE_RAID
	j HIDE
	k FIGHT
	l CELEBRATE
	m ADMIRE_ITEM
	n AVOID
	o RIDE
	p PLAY_DEAD
	q LONG_JUMP
	r RAM
	s TONGUE
	t SWIM
	u LAY_SPAWN
	v SNIFF
	w INVESTIGATE
	x ROAR
	y EMERGE
	z DIG
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lnet/minecraft/world/entity/schedule/Activity; register
net/minecraft/world/entity/schedule/Schedule net/minecraft/world/entity/schedule/Schedule
	a WORK_START_TIME
	b TOTAL_WORK_TIME
	c EMPTY
	d SIMPLE
	e VILLAGER_BABY
	f VILLAGER_DEFAULT
	g timelines
	a (I)Lnet/minecraft/world/entity/schedule/Activity; getActivityAt
	a (Ljava/lang/String;)Lnet/minecraft/world/entity/schedule/ScheduleBuilder; register
	a (Lnet/minecraft/world/entity/schedule/Activity;)V ensureTimelineExistsFor
	b (Lnet/minecraft/world/entity/schedule/Activity;)Lnet/minecraft/world/entity/schedule/ScheduleActivity; getTimelineFor
	c (Lnet/minecraft/world/entity/schedule/Activity;)Ljava/util/List; getAllTimelinesExceptFor
net/minecraft/world/entity/schedule/ScheduleBuilder net/minecraft/world/entity/schedule/ScheduleBuilder
	a schedule
	b transitions
	a ()Lnet/minecraft/world/entity/schedule/Schedule; build
	a (ILnet/minecraft/world/entity/schedule/Activity;)Lnet/minecraft/world/entity/schedule/ScheduleBuilder; changeActivityAt
net/minecraft/world/entity/vehicle/ChestBoat net/minecraft/world/entity/vehicle/ChestBoat
	f CONTAINER_SIZE
	g itemStacks
	h lootTable
	i lootTableSeed
	A ()J getLootTableSeed
	C ()Lnet/minecraft/core/NonNullList; getItemStacks
	D ()V clearItemStacks
	a ()V clearContent
	a (I)Lnet/minecraft/world/item/ItemStack; getItem
	a (II)Lnet/minecraft/world/item/ItemStack; removeItem
	a (ILnet/minecraft/world/item/ItemStack;)V setItem
	a (J)V setLootTableSeed
	a (Lnet/minecraft/nbt/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/resources/MinecraftKey;)V setLootTable
	a (Lnet/minecraft/world/damagesource/DamageSource;)V destroy
	a (Lnet/minecraft/world/entity/Entity$RemovalReason;)V remove
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; interact
	a_ (I)Lnet/minecraft/world/entity/SlotAccess; getSlot
	b ()I getContainerSize
	b (I)Lnet/minecraft/world/item/ItemStack; removeItemNoUpdate
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/world/entity/player/EntityHuman;)V openCustomInventoryScreen
	c (Lnet/minecraft/world/entity/player/EntityHuman;)V stopOpen
	e ()V setChanged
	e (Lnet/minecraft/world/entity/player/EntityHuman;)V unpackLootTable
	i ()Lnet/minecraft/world/item/Item; getDropItem
	p ()F getSinglePassengerXOffset
	v ()I getMaxPassengers
	z ()Lnet/minecraft/resources/MinecraftKey; getLootTable
net/minecraft/world/flag/FeatureElement net/minecraft/world/flag/FeatureElement
	bv FILTERED_REGISTRIES
	a (Lnet/minecraft/world/flag/FeatureFlagSet;)Z isEnabled
	m ()Lnet/minecraft/world/flag/FeatureFlagSet; requiredFeatures
net/minecraft/world/flag/FeatureFlag net/minecraft/world/flag/FeatureFlag
	a universe
	b mask
net/minecraft/world/flag/FeatureFlagRegistry net/minecraft/world/flag/FeatureFlagRegistry
	a LOGGER
	b universe
	c names
	d allFlags
	a ()Lnet/minecraft/world/flag/FeatureFlagSet; allFlags
	a (Ljava/lang/Iterable;)Lnet/minecraft/world/flag/FeatureFlagSet; fromNames
	a (Ljava/lang/Iterable;Ljava/util/function/Consumer;)Lnet/minecraft/world/flag/FeatureFlagSet; fromNames
	a (Lnet/minecraft/world/flag/FeatureFlagSet;)Z isSubset
	a ([Lnet/minecraft/world/flag/FeatureFlag;)Lnet/minecraft/world/flag/FeatureFlagSet; subset
	b ()Lcom/mojang/serialization/Codec; codec
	b (Lnet/minecraft/world/flag/FeatureFlagSet;)Ljava/util/Set; toNames
net/minecraft/world/flag/FeatureFlagSet net/minecraft/world/flag/FeatureFlagSet
	a MAX_CONTAINER_SIZE
	b EMPTY
	c universe
	d mask
	a ()Lnet/minecraft/world/flag/FeatureFlagSet; of
	a (Lnet/minecraft/world/flag/FeatureFlag;)Lnet/minecraft/world/flag/FeatureFlagSet; of
	a (Lnet/minecraft/world/flag/FeatureFlag;[Lnet/minecraft/world/flag/FeatureFlag;)Lnet/minecraft/world/flag/FeatureFlagSet; of
	a (Lnet/minecraft/world/flag/FeatureFlagSet;)Z isSubsetOf
	a (Lnet/minecraft/world/flag/FeatureFlagUniverse;JLjava/lang/Iterable;)J computeMask
	a (Lnet/minecraft/world/flag/FeatureFlagUniverse;Ljava/util/Collection;)Lnet/minecraft/world/flag/FeatureFlagSet; create
	b (Lnet/minecraft/world/flag/FeatureFlag;)Z contains
	b (Lnet/minecraft/world/flag/FeatureFlagSet;)Lnet/minecraft/world/flag/FeatureFlagSet; join
net/minecraft/world/flag/FeatureFlagUniverse net/minecraft/world/flag/FeatureFlagUniverse
	a id
net/minecraft/world/flag/FeatureFlags net/minecraft/world/flag/FeatureFlags
	a VANILLA
	b BUNDLE
	c UPDATE_1_20
	d REGISTRY
	e CODEC
	f VANILLA_SET
	g DEFAULT_FLAGS
	a (Lnet/minecraft/world/flag/FeatureFlagRegistry;Lnet/minecraft/world/flag/FeatureFlagSet;Lnet/minecraft/world/flag/FeatureFlagSet;)Ljava/lang/String; printMissingFlags
	a (Lnet/minecraft/world/flag/FeatureFlagSet;)Z isExperimental
	a (Lnet/minecraft/world/flag/FeatureFlagSet;Lnet/minecraft/world/flag/FeatureFlagSet;)Ljava/lang/String; printMissingFlags
net/minecraft/world/food/Foods net/minecraft/world/food/Foods
	A POISONOUS_POTATO
	B PORKCHOP
	C POTATO
	D PUFFERFISH
	E PUMPKIN_PIE
	F RABBIT
	G RABBIT_STEW
	H ROTTEN_FLESH
	I SALMON
	J SPIDER_EYE
	K SUSPICIOUS_STEW
	L SWEET_BERRIES
	M GLOW_BERRIES
	N TROPICAL_FISH
	a APPLE
	b BAKED_POTATO
	c BEEF
	d BEETROOT
	e BEETROOT_SOUP
	f BREAD
	g CARROT
	h CHICKEN
	i CHORUS_FRUIT
	j COD
	k COOKED_BEEF
	l COOKED_CHICKEN
	m COOKED_COD
	n COOKED_MUTTON
	o COOKED_PORKCHOP
	p COOKED_RABBIT
	q COOKED_SALMON
	r COOKIE
	s DRIED_KELP
	t ENCHANTED_GOLDEN_APPLE
	u GOLDEN_APPLE
	v GOLDEN_CARROT
	w HONEY_BOTTLE
	x MELON_SLICE
	y MUSHROOM_STEW
	z MUTTON
	a (I)Lcba$a; stew
net/minecraft/world/inventory/ClickAction net/minecraft/world/inventory/ClickAction
	a PRIMARY
	b SECONDARY
	c $VALUES
	a ()[Lnet/minecraft/world/inventory/ClickAction; $values
net/minecraft/world/inventory/ItemCombinerMenuSlotDefinition net/minecraft/world/inventory/ItemCombinerMenuSlotDefinition
	a slots
	b resultSlot
	a ()Lcce$a; create
	a (I)Z hasSlot
	b ()Lcce$b; getResultSlot
	b (I)Lcce$b; getSlot
	c ()Ljava/util/List; getSlots
	d ()I getNumOfInputSlots
	e ()I getResultSlotIndex
	f ()Ljava/util/List; getInputSlotIndexes
net/minecraft/world/inventory/LegacySmithingMenu net/minecraft/world/inventory/LegacySmithingMenu
	k INPUT_SLOT
	l ADDITIONAL_SLOT
	m RESULT_SLOT
	n level
	s INPUT_SLOT_X_PLACEMENT
	t ADDITIONAL_SLOT_X_PLACEMENT
	u RESULT_SLOT_X_PLACEMENT
	v SLOT_Y_PLACEMENT
	w selectedRecipe
	x recipes
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/item/ItemStack;)V onTake
	a (Lnet/minecraft/world/entity/player/EntityHuman;Z)Z mayPickup
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z canTakeItemForPickAll
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z isValidBlock
	d (Lnet/minecraft/world/item/ItemStack;)I getSlotToQuickMoveTo
	e (I)V shrinkStackInSlot
	e (Lnet/minecraft/world/item/ItemStack;)Z shouldQuickMoveToAdditionalSlot
	l ()Lnet/minecraft/world/inventory/ItemCombinerMenuSlotDefinition; createInputSlotDefinitions
	m ()V createResult
net/minecraft/world/inventory/RecipeBookType net/minecraft/world/inventory/RecipeBookType
	a CRAFTING
	b FURNACE
	c BLAST_FURNACE
	d SMOKER
	e $VALUES
	a ()[Lnet/minecraft/world/inventory/RecipeBookType; $values
net/minecraft/world/inventory/Slot net/minecraft/world/inventory/Slot
	a slot
	d container
	e index
	f x
	g y
	a ()I getMaxStackSize
	a (I)Lnet/minecraft/world/item/ItemStack; remove
	a (IILnet/minecraft/world/entity/player/EntityHuman;)Ljava/util/Optional; tryRemove
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z mayPickup
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/item/ItemStack;)V onTake
	a (Lnet/minecraft/world/item/ItemStack;)Z mayPlace
	a (Lnet/minecraft/world/item/ItemStack;I)V onQuickCraft
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V onQuickCraft
	a_ (Lnet/minecraft/world/item/ItemStack;)I getMaxStackSize
	b ()Z isActive
	b (I)V onSwapCraft
	b (IILnet/minecraft/world/entity/player/EntityHuman;)Lnet/minecraft/world/item/ItemStack; safeTake
	b (Lnet/minecraft/world/entity/player/EntityHuman;)Z allowModification
	b (Lnet/minecraft/world/item/ItemStack;I)Lnet/minecraft/world/item/ItemStack; safeInsert
	b_ (Lnet/minecraft/world/item/ItemStack;)V checkTakeAchievements
	c ()Lcom/mojang/datafixers/util/Pair; getNoItemIcon
	d ()V setChanged
	d (Lnet/minecraft/world/item/ItemStack;)V setByPlayer
	e ()Lnet/minecraft/world/item/ItemStack; getItem
	e (Lnet/minecraft/world/item/ItemStack;)V set
	f ()Z hasItem
	f (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; safeInsert
	g ()I getContainerSlot
net/minecraft/world/inventory/tooltip/BundleTooltip net/minecraft/world/inventory/tooltip/BundleTooltip
	a items
	b weight
	a ()Lnet/minecraft/core/NonNullList; getItems
	b ()I getWeight
net/minecraft/world/item/AdventureModeCheck net/minecraft/world/item/AdventureModeCheck
	a tagName
	b lastCheckedBlock
	c lastResult
	d checksBlockEntity
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/IRegistry;Lnet/minecraft/world/level/block/state/pattern/ShapeDetectorBlock;)Z test
	a (Lnet/minecraft/world/level/block/state/pattern/ShapeDetectorBlock;Lnet/minecraft/world/level/block/state/pattern/ShapeDetectorBlock;Z)Z areSameBlocks
net/minecraft/world/item/BrushItem net/minecraft/world/item/BrushItem
	a TICKS_BETWEEN_SWEEPS
	b USE_DURATION
	a (Lnet/minecraft/world/item/context/ItemActionContext;)Lnet/minecraft/world/EnumInteractionResult; useOn
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;I)V onUseTick
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/phys/MovingObjectPositionBlock;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/phys/Vec3D;)V spawnDustParticles
	b (Lnet/minecraft/world/item/ItemStack;)I getUseDuration
	c (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/EnumAnimation; getUseAnimation
net/minecraft/world/item/BundleItem net/minecraft/world/item/BundleItem
	a MAX_WEIGHT
	b TAG_ITEMS
	c BUNDLE_IN_BUNDLE_WEIGHT
	d BAR_COLOR
	a (Lnet/minecraft/world/entity/Entity;)V playRemoveOneSound
	a (Lnet/minecraft/world/entity/item/EntityItem;)V onDestroyed
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/nbt/NBTTagList;)Ljava/util/Optional; getMatchingItem
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/EntityHuman;)Z dropContents
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/inventory/ClickAction;Lnet/minecraft/world/entity/player/EntityHuman;)Z overrideStackedOnOther
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/inventory/ClickAction;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/entity/SlotAccess;)Z overrideOtherStackedOnMe
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V appendHoverText
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
	b (Lnet/minecraft/world/entity/Entity;)V playInsertSound
	b (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)I add
	c (Lnet/minecraft/world/entity/Entity;)V playDropContentsSound
	d (Lnet/minecraft/world/item/ItemStack;)F getFullnessDisplay
	e (Lnet/minecraft/world/item/ItemStack;)Z isBarVisible
	f (Lnet/minecraft/world/item/ItemStack;)I getBarWidth
	g (Lnet/minecraft/world/item/ItemStack;)I getBarColor
	h (Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; getTooltipImage
	k (Lnet/minecraft/world/item/ItemStack;)I getWeight
	o (Lnet/minecraft/world/item/ItemStack;)I getContentWeight
	p (Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; removeOne
	q (Lnet/minecraft/world/item/ItemStack;)Ljava/util/stream/Stream; getContents
net/minecraft/world/item/HoneycombItem net/minecraft/world/item/HoneycombItem
	a WAXABLES
	b WAX_OFF_BY_BLOCK
	a (Lnet/minecraft/world/item/context/ItemActionContext;)Lnet/minecraft/world/EnumInteractionResult; useOn
	b (Lnet/minecraft/world/level/block/state/IBlockData;)Ljava/util/Optional; getWaxed
net/minecraft/world/item/Instrument net/minecraft/world/item/Instrument
	a CODEC
	b soundEvent
	c useDuration
	d range
	a ()Lnet/minecraft/core/Holder; soundEvent
	b ()I useDuration
	c ()F range
net/minecraft/world/item/InstrumentItem net/minecraft/world/item/InstrumentItem
	a TAG_INSTRUMENT
	b instruments
	a (Lnet/minecraft/world/item/Item;Lnet/minecraft/core/Holder;)Lnet/minecraft/world/item/ItemStack; create
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Holder;)V setSoundVariantId
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/tags/TagKey;Lnet/minecraft/util/RandomSource;)V setRandom
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V appendHoverText
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/item/Instrument;)V play
	b (Lnet/minecraft/world/item/ItemStack;)I getUseDuration
	c (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/EnumAnimation; getUseAnimation
	d (Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; getInstrument
net/minecraft/world/item/Instruments net/minecraft/world/item/Instruments
	a GOAT_HORN_RANGE_BLOCKS
	b GOAT_HORN_DURATION
	c PONDER_GOAT_HORN
	d SING_GOAT_HORN
	e SEEK_GOAT_HORN
	f FEEL_GOAT_HORN
	g ADMIRE_GOAT_HORN
	h CALL_GOAT_HORN
	i YEARN_GOAT_HORN
	j DREAM_GOAT_HORN
	a (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; create
	a (Lnet/minecraft/core/IRegistry;)Lnet/minecraft/world/item/Instrument; bootstrap
net/minecraft/world/item/Item net/minecraft/world/item/Item
	a LOGGER
	b builtInRegistryHolder
	c rarity
	d maxStackSize
	e maxDamage
	f isFireResistant
	g craftingRemainingItem
	h descriptionId
	i foodProperties
	j requiredFeatures
	l BY_BLOCK
	m BASE_ATTACK_DAMAGE_UUID
	n BASE_ATTACK_SPEED_UUID
	o MAX_STACK_SIZE
	p EAT_DURATION
	q MAX_BAR_WIDTH
	a ()Ljava/lang/String; getDescriptionId
	a (Lnet/minecraft/world/damagesource/DamageSource;)Z canBeHurtBy
	a (Lnet/minecraft/world/entity/EnumItemSlot;)Lcom/google/common/collect/Multimap; getDefaultAttributeModifiers
	a (Lnet/minecraft/world/entity/item/EntityItem;)V onDestroyed
	a (Lnet/minecraft/world/item/Item;)I getId
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityLiving;)Z hurtEnemy
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; interactLivingEntity
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/inventory/ClickAction;Lnet/minecraft/world/entity/player/EntityHuman;)Z overrideStackedOnOther
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z isValidRepairItem
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/inventory/ClickAction;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/entity/SlotAccess;)Z overrideOtherStackedOnMe
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V appendHoverText
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/Entity;IZ)V inventoryTick
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/item/ItemStack; finishUsingItem
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/EntityLiving;I)V releaseUsing
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/EntityLiving;)Z mineBlock
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/IBlockData;)F getDestroySpeed
	a (Lnet/minecraft/world/item/context/ItemActionContext;)Lnet/minecraft/world/EnumInteractionResult; useOn
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;I)V onUseTick
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/RayTrace$FluidCollisionOption;)Lnet/minecraft/world/phys/MovingObjectPositionBlock; getPlayerPOVHitResult
	a (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/item/Item; byBlock
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;)Z canAttackBlock
	a_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isCorrectToolForDrops
	ac_ ()Z isComplex
	ad_ ()Lnet/minecraft/world/item/ItemStack; getDefaultInstance
	ae_ ()Lnet/minecraft/sounds/SoundEffect; getDrinkingSound
	af_ ()Lnet/minecraft/sounds/SoundEffect; getEatingSound
	ag_ ()Z canFitInsideContainerItems
	b (I)Lnet/minecraft/world/item/Item; byId
	b (Lnet/minecraft/nbt/NBTTagCompound;)V verifyTagAfterLoad
	b (Lnet/minecraft/world/item/ItemStack;)I getUseDuration
	b (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;)V onCraftedBy
	c ()I getEnchantmentValue
	c (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/EnumAnimation; getUseAnimation
	d_ (Lnet/minecraft/world/item/ItemStack;)Z isEnchantable
	e (Lnet/minecraft/world/item/ItemStack;)Z isBarVisible
	f (Lnet/minecraft/world/item/ItemStack;)I getBarWidth
	g (Lnet/minecraft/world/item/ItemStack;)I getBarColor
	h (Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; getTooltipImage
	i (Lnet/minecraft/world/item/ItemStack;)Z isFoil
	j ()Lhd$c; builtInRegistryHolder
	j (Lnet/minecraft/world/item/ItemStack;)Ljava/lang/String; getDescriptionId
	k ()Lnet/minecraft/world/item/Item; asItem
	l ()I getMaxStackSize
	l (Lnet/minecraft/world/item/ItemStack;)Z useOnRelease
	m ()Lnet/minecraft/world/flag/FeatureFlagSet; requiredFeatures
	m (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/network/chat/IChatBaseComponent; getName
	n ()I getMaxDamage
	n (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/EnumItemRarity; getRarity
	o ()Z canBeDepleted
	p ()Lnet/minecraft/network/chat/IChatBaseComponent; getDescription
	q ()Ljava/lang/String; getOrCreateDescriptionId
	r ()Z shouldOverrideMultiplayerNbt
	s ()Lnet/minecraft/world/item/Item; getCraftingRemainingItem
	t ()Z hasCraftingRemainingItem
	u ()Z isEdible
	v ()Lnet/minecraft/world/food/FoodInfo; getFoodProperties
	w ()Z isFireResistant
net/minecraft/world/item/ItemDisplayContext net/minecraft/world/item/ItemDisplayContext
	a NONE
	b THIRD_PERSON_LEFT_HAND
	c THIRD_PERSON_RIGHT_HAND
	d FIRST_PERSON_LEFT_HAND
	e FIRST_PERSON_RIGHT_HAND
	f HEAD
	g GUI
	h GROUND
	i FIXED
	j CODEC
	k BY_ID
	l id
	m name
	n $VALUES
	a ()B getId
	b ()Z firstPerson
	c ()Ljava/lang/String; getSerializedName
	d ()[Lnet/minecraft/world/item/ItemDisplayContext; $values
net/minecraft/world/item/ItemStack net/minecraft/world/item/ItemStack
	a CODEC
	b EMPTY
	c ATTRIBUTE_MODIFIER_FORMAT
	d TAG_ENCH
	e TAG_DISPLAY
	f TAG_DISPLAY_NAME
	g TAG_LORE
	h TAG_DAMAGE
	i TAG_COLOR
	j LOGGER
	k TAG_UNBREAKABLE
	l TAG_REPAIR_COST
	m TAG_CAN_DESTROY_BLOCK_LIST
	n TAG_CAN_PLACE_ON_BLOCK_LIST
	o TAG_HIDE_FLAGS
	p DISABLED_ITEM_TOOLTIP
	q DONT_HIDE_TOOLTIP
	r LORE_STYLE
	s count
	t popTime
	u item
	v tag
	w emptyCacheFlag
	x entityRepresentation
	y adventureBreakCheck
	z adventurePlaceCheck
	A ()Z hasFoil
	B ()Lnet/minecraft/world/item/EnumItemRarity; getRarity
	C ()Z isEnchantable
	D ()Z isEnchanted
	E ()Z isFramed
	F ()Lnet/minecraft/world/entity/decoration/EntityItemFrame; getFrame
	G ()Lnet/minecraft/world/entity/Entity; getEntityRepresentation
	H ()I getBaseRepairCost
	I ()Lnet/minecraft/network/chat/IChatBaseComponent; getDisplayName
	J ()I getPopTime
	K ()I getCount
	L ()Z isEdible
	M ()Lnet/minecraft/sounds/SoundEffect; getDrinkingSound
	N ()Lnet/minecraft/sounds/SoundEffect; getEatingSound
	O ()V updateEmptyCacheFlag
	P ()I getHideFlags
	a ()Ljava/util/Optional; getTooltipImage
	a (I)Lnet/minecraft/world/item/ItemStack; split
	a (ILnet/minecraft/util/RandomSource;Lnet/minecraft/server/level/EntityPlayer;)Z hurt
	a (ILnet/minecraft/world/entity/EntityLiving;Ljava/util/function/Consumer;)V hurtAndBreak
	a (ILnet/minecraft/world/item/ItemStack$HideFlags;)Z shouldShowInTooltip
	a (Ljava/lang/String;)Lnet/minecraft/nbt/NBTTagCompound; getOrCreateTagElement
	a (Ljava/lang/String;Lnet/minecraft/nbt/NBTBase;)V addTagElement
	a (Ljava/util/List;Lnet/minecraft/nbt/NBTTagList;)V appendEnchantmentNames
	a (Ljava/util/function/Predicate;)Z is
	a (Lnet/minecraft/core/Holder;)Z is
	a (Lnet/minecraft/core/IRegistry;Lnet/minecraft/world/level/block/state/pattern/ShapeDetectorBlock;)Z hasAdventureModePlaceTagForBlock
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/item/ItemStack; of
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)Lnet/minecraft/world/item/ItemStack; setHoverName
	a (Lnet/minecraft/tags/TagKey;)Z is
	a (Lnet/minecraft/world/entity/Entity;)V setEntityRepresentation
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/player/EntityHuman;)V hurtEnemy
	a (Lnet/minecraft/world/entity/EnumItemSlot;)Lcom/google/common/collect/Multimap; getAttributeModifiers
	a (Lnet/minecraft/world/entity/ai/attributes/AttributeBase;Lnet/minecraft/world/entity/ai/attributes/AttributeModifier;Lnet/minecraft/world/entity/EnumItemSlot;)V addAttributeModifier
	a (Lnet/minecraft/world/entity/item/EntityItem;)V onDestroyed
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/EnumInteractionResult; interactLivingEntity
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/item/TooltipFlag;)Ljava/util/List; getTooltipLines
	a (Lnet/minecraft/world/flag/FeatureFlagSet;)Z isItemEnabled
	a (Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/inventory/ClickAction;Lnet/minecraft/world/entity/player/EntityHuman;)Z overrideStackedOnOther
	a (Lnet/minecraft/world/item/Item;)Z is
	a (Lnet/minecraft/world/item/ItemStack$HideFlags;)V hideTooltipPart
	a (Lnet/minecraft/world/item/ItemStack;)Z sameItem
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/inventory/ClickAction;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/entity/SlotAccess;)Z overrideOtherStackedOnMe
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z tagMatches
	a (Lnet/minecraft/world/item/context/ItemActionContext;)Lnet/minecraft/world/EnumInteractionResult; useOn
	a (Lnet/minecraft/world/item/enchantment/Enchantment;I)V enchant
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/Entity;IZ)V inventoryTick
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/item/ItemStack; finishUsingItem
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/EntityLiving;I)V releaseUsing
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;I)V onCraftedBy
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;)V mineBlock
	a (Lnet/minecraft/world/level/block/state/IBlockData;)F getDestroySpeed
	b ()Z isEmpty
	b (I)V setDamageValue
	b (Ljava/lang/String;)Lnet/minecraft/nbt/NBTTagCompound; getTagElement
	b (Lnet/minecraft/core/IRegistry;Lnet/minecraft/world/level/block/state/pattern/ShapeDetectorBlock;)Z hasAdventureModeBreakTagForBlock
	b (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; save
	b (Lnet/minecraft/world/item/ItemStack;)Z matches
	b (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z matches
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/EntityLiving;I)V onUseTick
	b (Lnet/minecraft/world/level/block/state/IBlockData;)Z isCorrectToolForDrops
	c ()Lnet/minecraft/world/item/Item; getItem
	c (I)Lnet/minecraft/world/item/ItemStack; copyWithCount
	c (Ljava/lang/String;)V removeTagKey
	c (Lnet/minecraft/nbt/NBTTagCompound;)V setTag
	c (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z isSame
	d ()Lnet/minecraft/core/Holder; getItemHolder
	d (I)V setRepairCost
	d (Ljava/lang/String;)Ljava/util/Collection; expandBlockState
	d (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z isSameItemSameTags
	e ()Ljava/util/stream/Stream; getTags
	e (I)V setPopTime
	f ()I getMaxStackSize
	f (I)V setCount
	g ()Z isStackable
	g (I)V grow
	h ()Z isDamageableItem
	h (I)V shrink
	i ()Z isDamaged
	j ()I getDamageValue
	k ()I getMaxDamage
	l ()Z isBarVisible
	m ()I getBarWidth
	n ()I getBarColor
	o ()Lnet/minecraft/world/item/ItemStack; copy
	p ()Ljava/lang/String; getDescriptionId
	q ()I getUseDuration
	r ()Lnet/minecraft/world/item/EnumAnimation; getUseAnimation
	s ()Z useOnRelease
	t ()Z hasTag
	u ()Lnet/minecraft/nbt/NBTTagCompound; getTag
	v ()Lnet/minecraft/nbt/NBTTagCompound; getOrCreateTag
	w ()Lnet/minecraft/nbt/NBTTagList; getEnchantmentTags
	x ()Lnet/minecraft/network/chat/IChatBaseComponent; getHoverName
	y ()V resetHoverName
	z ()Z hasCustomHoverName
net/minecraft/world/item/Items net/minecraft/world/item/Items
	A JUNGLE_PLANKS
	B ACACIA_PLANKS
	C CHERRY_PLANKS
	D DARK_OAK_PLANKS
	E MANGROVE_PLANKS
	F BAMBOO_PLANKS
	G CRIMSON_PLANKS
	H WARPED_PLANKS
	I BAMBOO_MOSAIC
	J OAK_SAPLING
	K SPRUCE_SAPLING
	L BIRCH_SAPLING
	M JUNGLE_SAPLING
	N ACACIA_SAPLING
	O CHERRY_SAPLING
	P DARK_OAK_SAPLING
	Q MANGROVE_PROPAGULE
	R BEDROCK
	S SAND
	T SUSPICIOUS_SAND
	U RED_SAND
	V GRAVEL
	W COAL_ORE
	X DEEPSLATE_COAL_ORE
	Y IRON_ORE
	Z DEEPSLATE_IRON_ORE
	a AIR
	aA EXPOSED_COPPER
	aB WEATHERED_COPPER
	aC OXIDIZED_COPPER
	aD CUT_COPPER
	aE EXPOSED_CUT_COPPER
	aF WEATHERED_CUT_COPPER
	aG OXIDIZED_CUT_COPPER
	aH CUT_COPPER_STAIRS
	aI EXPOSED_CUT_COPPER_STAIRS
	aJ WEATHERED_CUT_COPPER_STAIRS
	aK OXIDIZED_CUT_COPPER_STAIRS
	aL CUT_COPPER_SLAB
	aM EXPOSED_CUT_COPPER_SLAB
	aN WEATHERED_CUT_COPPER_SLAB
	aO OXIDIZED_CUT_COPPER_SLAB
	aP WAXED_COPPER_BLOCK
	aQ WAXED_EXPOSED_COPPER
	aR WAXED_WEATHERED_COPPER
	aS WAXED_OXIDIZED_COPPER
	aT WAXED_CUT_COPPER
	aU WAXED_EXPOSED_CUT_COPPER
	aV WAXED_WEATHERED_CUT_COPPER
	aW WAXED_OXIDIZED_CUT_COPPER
	aX WAXED_CUT_COPPER_STAIRS
	aY WAXED_EXPOSED_CUT_COPPER_STAIRS
	aZ WAXED_WEATHERED_CUT_COPPER_STAIRS
	aa COPPER_ORE
	ab DEEPSLATE_COPPER_ORE
	ac GOLD_ORE
	ad DEEPSLATE_GOLD_ORE
	ae REDSTONE_ORE
	af DEEPSLATE_REDSTONE_ORE
	ag EMERALD_ORE
	ah DEEPSLATE_EMERALD_ORE
	ai LAPIS_ORE
	aj DEEPSLATE_LAPIS_ORE
	ak DIAMOND_ORE
	al DEEPSLATE_DIAMOND_ORE
	am NETHER_GOLD_ORE
	an NETHER_QUARTZ_ORE
	ao ANCIENT_DEBRIS
	ap COAL_BLOCK
	aq RAW_IRON_BLOCK
	ar RAW_COPPER_BLOCK
	as RAW_GOLD_BLOCK
	at AMETHYST_BLOCK
	au BUDDING_AMETHYST
	av IRON_BLOCK
	aw COPPER_BLOCK
	ax GOLD_BLOCK
	ay DIAMOND_BLOCK
	az NETHERITE_BLOCK
	b STONE
	bA STRIPPED_CRIMSON_STEM
	bB STRIPPED_WARPED_STEM
	bC STRIPPED_OAK_WOOD
	bD STRIPPED_SPRUCE_WOOD
	bE STRIPPED_BIRCH_WOOD
	bF STRIPPED_JUNGLE_WOOD
	bG STRIPPED_ACACIA_WOOD
	bH STRIPPED_CHERRY_WOOD
	bI STRIPPED_DARK_OAK_WOOD
	bJ STRIPPED_MANGROVE_WOOD
	bK STRIPPED_CRIMSON_HYPHAE
	bL STRIPPED_WARPED_HYPHAE
	bM STRIPPED_BAMBOO_BLOCK
	bN OAK_WOOD
	bO SPRUCE_WOOD
	bP BIRCH_WOOD
	bQ JUNGLE_WOOD
	bR ACACIA_WOOD
	bS CHERRY_WOOD
	bT DARK_OAK_WOOD
	bU MANGROVE_WOOD
	bV CRIMSON_HYPHAE
	bW WARPED_HYPHAE
	bX OAK_LEAVES
	bY SPRUCE_LEAVES
	bZ BIRCH_LEAVES
	ba WAXED_OXIDIZED_CUT_COPPER_STAIRS
	bb WAXED_CUT_COPPER_SLAB
	bc WAXED_EXPOSED_CUT_COPPER_SLAB
	bd WAXED_WEATHERED_CUT_COPPER_SLAB
	be WAXED_OXIDIZED_CUT_COPPER_SLAB
	bf OAK_LOG
	bg SPRUCE_LOG
	bh BIRCH_LOG
	bi JUNGLE_LOG
	bj ACACIA_LOG
	bk CHERRY_LOG
	bl DARK_OAK_LOG
	bm MANGROVE_LOG
	bn MANGROVE_ROOTS
	bo MUDDY_MANGROVE_ROOTS
	bp CRIMSON_STEM
	bq WARPED_STEM
	br BAMBOO_BLOCK
	bs STRIPPED_OAK_LOG
	bt STRIPPED_SPRUCE_LOG
	bu STRIPPED_BIRCH_LOG
	bv STRIPPED_JUNGLE_LOG
	bw STRIPPED_ACACIA_LOG
	bx STRIPPED_CHERRY_LOG
	by STRIPPED_DARK_OAK_LOG
	bz STRIPPED_MANGROVE_LOG
	c GRANITE
	cA LIGHT_BLUE_WOOL
	cB YELLOW_WOOL
	cC LIME_WOOL
	cD PINK_WOOL
	cE GRAY_WOOL
	cF LIGHT_GRAY_WOOL
	cG CYAN_WOOL
	cH PURPLE_WOOL
	cI BLUE_WOOL
	cJ BROWN_WOOL
	cK GREEN_WOOL
	cL RED_WOOL
	cM BLACK_WOOL
	cN DANDELION
	cO POPPY
	cP BLUE_ORCHID
	cQ ALLIUM
	cR AZURE_BLUET
	cS RED_TULIP
	cT ORANGE_TULIP
	cU WHITE_TULIP
	cV PINK_TULIP
	cW OXEYE_DAISY
	cX CORNFLOWER
	cY LILY_OF_THE_VALLEY
	cZ WITHER_ROSE
	ca JUNGLE_LEAVES
	cb ACACIA_LEAVES
	cc CHERRY_LEAVES
	cd DARK_OAK_LEAVES
	ce MANGROVE_LEAVES
	cf AZALEA_LEAVES
	cg FLOWERING_AZALEA_LEAVES
	ch SPONGE
	ci WET_SPONGE
	cj GLASS
	ck TINTED_GLASS
	cl LAPIS_BLOCK
	cm SANDSTONE
	cn CHISELED_SANDSTONE
	co CUT_SANDSTONE
	cp COBWEB
	cq GRASS
	cr FERN
	cs AZALEA
	ct FLOWERING_AZALEA
	cu DEAD_BUSH
	cv SEAGRASS
	cw SEA_PICKLE
	cx WHITE_WOOL
	cy ORANGE_WOOL
	cz MAGENTA_WOOL
	d POLISHED_GRANITE
	dA DARK_OAK_SLAB
	dB MANGROVE_SLAB
	dC BAMBOO_SLAB
	dD BAMBOO_MOSAIC_SLAB
	dE CRIMSON_SLAB
	dF WARPED_SLAB
	dG STONE_SLAB
	dH SMOOTH_STONE_SLAB
	dI SANDSTONE_SLAB
	dJ CUT_STANDSTONE_SLAB
	dK PETRIFIED_OAK_SLAB
	dL COBBLESTONE_SLAB
	dM BRICK_SLAB
	dN STONE_BRICK_SLAB
	dO MUD_BRICK_SLAB
	dP NETHER_BRICK_SLAB
	dQ QUARTZ_SLAB
	dR RED_SANDSTONE_SLAB
	dS CUT_RED_SANDSTONE_SLAB
	dT PURPUR_SLAB
	dU PRISMARINE_SLAB
	dV PRISMARINE_BRICK_SLAB
	dW DARK_PRISMARINE_SLAB
	dX SMOOTH_QUARTZ
	dY SMOOTH_RED_SANDSTONE
	dZ SMOOTH_SANDSTONE
	da TORCHFLOWER
	db SPORE_BLOSSOM
	dc BROWN_MUSHROOM
	dd RED_MUSHROOM
	de CRIMSON_FUNGUS
	df WARPED_FUNGUS
	dg CRIMSON_ROOTS
	dh WARPED_ROOTS
	di NETHER_SPROUTS
	dj WEEPING_VINES
	dk TWISTING_VINES
	dl SUGAR_CANE
	dm KELP
	dn MOSS_CARPET
	do PINK_PETALS
	dp MOSS_BLOCK
	dq HANGING_ROOTS
	dr BIG_DRIPLEAF
	ds SMALL_DRIPLEAF
	dt BAMBOO
	du OAK_SLAB
	dv SPRUCE_SLAB
	dw BIRCH_SLAB
	dx JUNGLE_SLAB
	dy ACACIA_SLAB
	dz CHERRY_SLAB
	e DIORITE
	eA JUKEBOX
	eB OAK_FENCE
	eC SPRUCE_FENCE
	eD BIRCH_FENCE
	eE JUNGLE_FENCE
	eF ACACIA_FENCE
	eG CHERRY_FENCE
	eH DARK_OAK_FENCE
	eI MANGROVE_FENCE
	eJ BAMBOO_FENCE
	eK CRIMSON_FENCE
	eL WARPED_FENCE
	eM PUMPKIN
	eN CARVED_PUMPKIN
	eO JACK_O_LANTERN
	eP NETHERRACK
	eQ SOUL_SAND
	eR SOUL_SOIL
	eS BASALT
	eT POLISHED_BASALT
	eU SMOOTH_BASALT
	eV SOUL_TORCH
	eW GLOWSTONE
	eX INFESTED_STONE
	eY INFESTED_COBBLESTONE
	eZ INFESTED_STONE_BRICKS
	ea SMOOTH_STONE
	eb BRICKS
	ec BOOKSHELF
	ed CHISELED_BOOKSHELF
	ee DECORATED_POT
	ef MOSSY_COBBLESTONE
	eg OBSIDIAN
	eh TORCH
	ei END_ROD
	ej CHORUS_PLANT
	ek CHORUS_FLOWER
	el PURPUR_BLOCK
	em PURPUR_PILLAR
	en PURPUR_STAIRS
	eo SPAWNER
	ep CHEST
	eq CRAFTING_TABLE
	er FARMLAND
	es FURNACE
	et LADDER
	eu COBBLESTONE_STAIRS
	ev SNOW
	ew ICE
	ex SNOW_BLOCK
	ey CACTUS
	ez CLAY
	f POLISHED_DIORITE
	fA STONE_BRICK_STAIRS
	fB MUD_BRICK_STAIRS
	fC MYCELIUM
	fD LILY_PAD
	fE NETHER_BRICKS
	fF CRACKED_NETHER_BRICKS
	fG CHISELED_NETHER_BRICKS
	fH NETHER_BRICK_FENCE
	fI NETHER_BRICK_STAIRS
	fJ SCULK
	fK SCULK_VEIN
	fL SCULK_CATALYST
	fM SCULK_SHRIEKER
	fN ENCHANTING_TABLE
	fO END_PORTAL_FRAME
	fP END_STONE
	fQ END_STONE_BRICKS
	fR DRAGON_EGG
	fS SANDSTONE_STAIRS
	fT ENDER_CHEST
	fU EMERALD_BLOCK
	fV OAK_STAIRS
	fW SPRUCE_STAIRS
	fX BIRCH_STAIRS
	fY JUNGLE_STAIRS
	fZ ACACIA_STAIRS
	fa INFESTED_MOSSY_STONE_BRICKS
	fb INFESTED_CRACKED_STONE_BRICKS
	fc INFESTED_CHISELED_STONE_BRICKS
	fd INFESTED_DEEPSLATE
	fe STONE_BRICKS
	ff MOSSY_STONE_BRICKS
	fg CRACKED_STONE_BRICKS
	fh CHISELED_STONE_BRICKS
	fi PACKED_MUD
	fj MUD_BRICKS
	fk DEEPSLATE_BRICKS
	fl CRACKED_DEEPSLATE_BRICKS
	fm DEEPSLATE_TILES
	fn CRACKED_DEEPSLATE_TILES
	fo CHISELED_DEEPSLATE
	fp REINFORCED_DEEPSLATE
	fq BROWN_MUSHROOM_BLOCK
	fr RED_MUSHROOM_BLOCK
	fs MUSHROOM_STEM
	ft IRON_BARS
	fu CHAIN
	fv GLASS_PANE
	fw MELON
	fx VINE
	fy GLOW_LICHEN
	fz BRICK_STAIRS
	g ANDESITE
	gA POLISHED_BLACKSTONE_BRICK_WALL
	gB COBBLED_DEEPSLATE_WALL
	gC POLISHED_DEEPSLATE_WALL
	gD DEEPSLATE_BRICK_WALL
	gE DEEPSLATE_TILE_WALL
	gF ANVIL
	gG CHIPPED_ANVIL
	gH DAMAGED_ANVIL
	gI CHISELED_QUARTZ_BLOCK
	gJ QUARTZ_BLOCK
	gK QUARTZ_BRICKS
	gL QUARTZ_PILLAR
	gM QUARTZ_STAIRS
	gN WHITE_TERRACOTTA
	gO ORANGE_TERRACOTTA
	gP MAGENTA_TERRACOTTA
	gQ LIGHT_BLUE_TERRACOTTA
	gR YELLOW_TERRACOTTA
	gS LIME_TERRACOTTA
	gT PINK_TERRACOTTA
	gU GRAY_TERRACOTTA
	gV LIGHT_GRAY_TERRACOTTA
	gW CYAN_TERRACOTTA
	gX PURPLE_TERRACOTTA
	gY BLUE_TERRACOTTA
	gZ BROWN_TERRACOTTA
	ga CHERRY_STAIRS
	gb DARK_OAK_STAIRS
	gc MANGROVE_STAIRS
	gd BAMBOO_STAIRS
	ge BAMBOO_MOSAIC_STAIRS
	gf CRIMSON_STAIRS
	gg WARPED_STAIRS
	gh COMMAND_BLOCK
	gi BEACON
	gj COBBLESTONE_WALL
	gk MOSSY_COBBLESTONE_WALL
	gl BRICK_WALL
	gm PRISMARINE_WALL
	gn RED_SANDSTONE_WALL
	go MOSSY_STONE_BRICK_WALL
	gp GRANITE_WALL
	gq STONE_BRICK_WALL
	gr MUD_BRICK_WALL
	gs NETHER_BRICK_WALL
	gt ANDESITE_WALL
	gu RED_NETHER_BRICK_WALL
	gv SANDSTONE_WALL
	gw END_STONE_BRICK_WALL
	gx DIORITE_WALL
	gy BLACKSTONE_WALL
	gz POLISHED_BLACKSTONE_WALL
	h POLISHED_ANDESITE
	hA LILAC
	hB ROSE_BUSH
	hC PEONY
	hD TALL_GRASS
	hE LARGE_FERN
	hF WHITE_STAINED_GLASS
	hG ORANGE_STAINED_GLASS
	hH MAGENTA_STAINED_GLASS
	hI LIGHT_BLUE_STAINED_GLASS
	hJ YELLOW_STAINED_GLASS
	hK LIME_STAINED_GLASS
	hL PINK_STAINED_GLASS
	hM GRAY_STAINED_GLASS
	hN LIGHT_GRAY_STAINED_GLASS
	hO CYAN_STAINED_GLASS
	hP PURPLE_STAINED_GLASS
	hQ BLUE_STAINED_GLASS
	hR BROWN_STAINED_GLASS
	hS GREEN_STAINED_GLASS
	hT RED_STAINED_GLASS
	hU BLACK_STAINED_GLASS
	hV WHITE_STAINED_GLASS_PANE
	hW ORANGE_STAINED_GLASS_PANE
	hX MAGENTA_STAINED_GLASS_PANE
	hY LIGHT_BLUE_STAINED_GLASS_PANE
	hZ YELLOW_STAINED_GLASS_PANE
	ha GREEN_TERRACOTTA
	hb RED_TERRACOTTA
	hc BLACK_TERRACOTTA
	hd BARRIER
	he LIGHT
	hf HAY_BLOCK
	hg WHITE_CARPET
	hh ORANGE_CARPET
	hi MAGENTA_CARPET
	hj LIGHT_BLUE_CARPET
	hk YELLOW_CARPET
	hl LIME_CARPET
	hm PINK_CARPET
	hn GRAY_CARPET
	ho LIGHT_GRAY_CARPET
	hp CYAN_CARPET
	hq PURPLE_CARPET
	hr BLUE_CARPET
	hs BROWN_CARPET
	ht GREEN_CARPET
	hu RED_CARPET
	hv BLACK_CARPET
	hw TERRACOTTA
	hx PACKED_ICE
	hy DIRT_PATH
	hz SUNFLOWER
	i DEEPSLATE
	iA WARPED_WART_BLOCK
	iB RED_NETHER_BRICKS
	iC BONE_BLOCK
	iD STRUCTURE_VOID
	iE SHULKER_BOX
	iF WHITE_SHULKER_BOX
	iG ORANGE_SHULKER_BOX
	iH MAGENTA_SHULKER_BOX
	iI LIGHT_BLUE_SHULKER_BOX
	iJ YELLOW_SHULKER_BOX
	iK LIME_SHULKER_BOX
	iL PINK_SHULKER_BOX
	iM GRAY_SHULKER_BOX
	iN LIGHT_GRAY_SHULKER_BOX
	iO CYAN_SHULKER_BOX
	iP PURPLE_SHULKER_BOX
	iQ BLUE_SHULKER_BOX
	iR BROWN_SHULKER_BOX
	iS GREEN_SHULKER_BOX
	iT RED_SHULKER_BOX
	iU BLACK_SHULKER_BOX
	iV WHITE_GLAZED_TERRACOTTA
	iW ORANGE_GLAZED_TERRACOTTA
	iX MAGENTA_GLAZED_TERRACOTTA
	iY LIGHT_BLUE_GLAZED_TERRACOTTA
	iZ YELLOW_GLAZED_TERRACOTTA
	ia LIME_STAINED_GLASS_PANE
	ib PINK_STAINED_GLASS_PANE
	ic GRAY_STAINED_GLASS_PANE
	id LIGHT_GRAY_STAINED_GLASS_PANE
	ie CYAN_STAINED_GLASS_PANE
	if PURPLE_STAINED_GLASS_PANE
	ig BLUE_STAINED_GLASS_PANE
	ih BROWN_STAINED_GLASS_PANE
	ii GREEN_STAINED_GLASS_PANE
	ij RED_STAINED_GLASS_PANE
	ik BLACK_STAINED_GLASS_PANE
	il PRISMARINE
	im PRISMARINE_BRICKS
	in DARK_PRISMARINE
	io PRISMARINE_STAIRS
	ip PRISMARINE_BRICK_STAIRS
	iq DARK_PRISMARINE_STAIRS
	ir SEA_LANTERN
	is RED_SANDSTONE
	it CHISELED_RED_SANDSTONE
	iu CUT_RED_SANDSTONE
	iv RED_SANDSTONE_STAIRS
	iw REPEATING_COMMAND_BLOCK
	ix CHAIN_COMMAND_BLOCK
	iy MAGMA_BLOCK
	iz NETHER_WART_BLOCK
	j COBBLED_DEEPSLATE
	jA BLACK_CONCRETE
	jB WHITE_CONCRETE_POWDER
	jC ORANGE_CONCRETE_POWDER
	jD MAGENTA_CONCRETE_POWDER
	jE LIGHT_BLUE_CONCRETE_POWDER
	jF YELLOW_CONCRETE_POWDER
	jG LIME_CONCRETE_POWDER
	jH PINK_CONCRETE_POWDER
	jI GRAY_CONCRETE_POWDER
	jJ LIGHT_GRAY_CONCRETE_POWDER
	jK CYAN_CONCRETE_POWDER
	jL PURPLE_CONCRETE_POWDER
	jM BLUE_CONCRETE_POWDER
	jN BROWN_CONCRETE_POWDER
	jO GREEN_CONCRETE_POWDER
	jP RED_CONCRETE_POWDER
	jQ BLACK_CONCRETE_POWDER
	jR TURTLE_EGG
	jS DEAD_TUBE_CORAL_BLOCK
	jT DEAD_BRAIN_CORAL_BLOCK
	jU DEAD_BUBBLE_CORAL_BLOCK
	jV DEAD_FIRE_CORAL_BLOCK
	jW DEAD_HORN_CORAL_BLOCK
	jX TUBE_CORAL_BLOCK
	jY BRAIN_CORAL_BLOCK
	jZ BUBBLE_CORAL_BLOCK
	ja LIME_GLAZED_TERRACOTTA
	jb PINK_GLAZED_TERRACOTTA
	jc GRAY_GLAZED_TERRACOTTA
	jd LIGHT_GRAY_GLAZED_TERRACOTTA
	je CYAN_GLAZED_TERRACOTTA
	jf PURPLE_GLAZED_TERRACOTTA
	jg BLUE_GLAZED_TERRACOTTA
	jh BROWN_GLAZED_TERRACOTTA
	ji GREEN_GLAZED_TERRACOTTA
	jj RED_GLAZED_TERRACOTTA
	jk BLACK_GLAZED_TERRACOTTA
	jl WHITE_CONCRETE
	jm ORANGE_CONCRETE
	jn MAGENTA_CONCRETE
	jo LIGHT_BLUE_CONCRETE
	jp YELLOW_CONCRETE
	jq LIME_CONCRETE
	jr PINK_CONCRETE
	js GRAY_CONCRETE
	jt LIGHT_GRAY_CONCRETE
	ju CYAN_CONCRETE
	jv PURPLE_CONCRETE
	jw BLUE_CONCRETE
	jx BROWN_CONCRETE
	jy GREEN_CONCRETE
	jz RED_CONCRETE
	k POLISHED_DEEPSLATE
	kA MOSSY_STONE_BRICK_STAIRS
	kB POLISHED_DIORITE_STAIRS
	kC MOSSY_COBBLESTONE_STAIRS
	kD END_STONE_BRICK_STAIRS
	kE STONE_STAIRS
	kF SMOOTH_SANDSTONE_STAIRS
	kG SMOOTH_QUARTZ_STAIRS
	kH GRANITE_STAIRS
	kI ANDESITE_STAIRS
	kJ RED_NETHER_BRICK_STAIRS
	kK POLISHED_ANDESITE_STAIRS
	kL DIORITE_STAIRS
	kM COBBLED_DEEPSLATE_STAIRS
	kN POLISHED_DEEPSLATE_STAIRS
	kO DEEPSLATE_BRICK_STAIRS
	kP DEEPSLATE_TILE_STAIRS
	kQ POLISHED_GRANITE_SLAB
	kR SMOOTH_RED_SANDSTONE_SLAB
	kS MOSSY_STONE_BRICK_SLAB
	kT POLISHED_DIORITE_SLAB
	kU MOSSY_COBBLESTONE_SLAB
	kV END_STONE_BRICK_SLAB
	kW SMOOTH_SANDSTONE_SLAB
	kX SMOOTH_QUARTZ_SLAB
	kY GRANITE_SLAB
	kZ ANDESITE_SLAB
	ka FIRE_CORAL_BLOCK
	kb HORN_CORAL_BLOCK
	kc TUBE_CORAL
	kd BRAIN_CORAL
	ke BUBBLE_CORAL
	kf FIRE_CORAL
	kg HORN_CORAL
	kh DEAD_BRAIN_CORAL
	ki DEAD_BUBBLE_CORAL
	kj DEAD_FIRE_CORAL
	kk DEAD_HORN_CORAL
	kl DEAD_TUBE_CORAL
	km TUBE_CORAL_FAN
	kn BRAIN_CORAL_FAN
	ko BUBBLE_CORAL_FAN
	kp FIRE_CORAL_FAN
	kq HORN_CORAL_FAN
	kr DEAD_TUBE_CORAL_FAN
	ks DEAD_BRAIN_CORAL_FAN
	kt DEAD_BUBBLE_CORAL_FAN
	ku DEAD_FIRE_CORAL_FAN
	kv DEAD_HORN_CORAL_FAN
	kw BLUE_ICE
	kx CONDUIT
	ky POLISHED_GRANITE_STAIRS
	kz SMOOTH_RED_SANDSTONE_STAIRS
	l CALCITE
	lA SCULK_SENSOR
	lB TRIPWIRE_HOOK
	lC TRAPPED_CHEST
	lD TNT
	lE REDSTONE_LAMP
	lF NOTE_BLOCK
	lG STONE_BUTTON
	lH POLISHED_BLACKSTONE_BUTTON
	lI OAK_BUTTON
	lJ SPRUCE_BUTTON
	lK BIRCH_BUTTON
	lL JUNGLE_BUTTON
	lM ACACIA_BUTTON
	lN CHERRY_BUTTON
	lO DARK_OAK_BUTTON
	lP MANGROVE_BUTTON
	lQ BAMBOO_BUTTON
	lR CRIMSON_BUTTON
	lS WARPED_BUTTON
	lT STONE_PRESSURE_PLATE
	lU POLISHED_BLACKSTONE_PRESSURE_PLATE
	lV LIGHT_WEIGHTED_PRESSURE_PLATE
	lW HEAVY_WEIGHTED_PRESSURE_PLATE
	lX OAK_PRESSURE_PLATE
	lY SPRUCE_PRESSURE_PLATE
	lZ BIRCH_PRESSURE_PLATE
	la RED_NETHER_BRICK_SLAB
	lb POLISHED_ANDESITE_SLAB
	lc DIORITE_SLAB
	ld COBBLED_DEEPSLATE_SLAB
	le POLISHED_DEEPSLATE_SLAB
	lf DEEPSLATE_BRICK_SLAB
	lg DEEPSLATE_TILE_SLAB
	lh SCAFFOLDING
	li REDSTONE
	lj REDSTONE_TORCH
	lk REDSTONE_BLOCK
	ll REPEATER
	lm COMPARATOR
	ln PISTON
	lo STICKY_PISTON
	lp SLIME_BLOCK
	lq HONEY_BLOCK
	lr OBSERVER
	ls HOPPER
	lt DISPENSER
	lu DROPPER
	lv LECTERN
	lw TARGET
	lx LEVER
	ly LIGHTNING_ROD
	lz DAYLIGHT_DETECTOR
	m TUFF
	mA CHERRY_TRAPDOOR
	mB DARK_OAK_TRAPDOOR
	mC MANGROVE_TRAPDOOR
	mD BAMBOO_TRAPDOOR
	mE CRIMSON_TRAPDOOR
	mF WARPED_TRAPDOOR
	mG OAK_FENCE_GATE
	mH SPRUCE_FENCE_GATE
	mI BIRCH_FENCE_GATE
	mJ JUNGLE_FENCE_GATE
	mK ACACIA_FENCE_GATE
	mL CHERRY_FENCE_GATE
	mM DARK_OAK_FENCE_GATE
	mN MANGROVE_FENCE_GATE
	mO BAMBOO_FENCE_GATE
	mP CRIMSON_FENCE_GATE
	mQ WARPED_FENCE_GATE
	mR POWERED_RAIL
	mS DETECTOR_RAIL
	mT RAIL
	mU ACTIVATOR_RAIL
	mV SADDLE
	mW MINECART
	mX CHEST_MINECART
	mY FURNACE_MINECART
	mZ TNT_MINECART
	ma JUNGLE_PRESSURE_PLATE
	mb ACACIA_PRESSURE_PLATE
	mc CHERRY_PRESSURE_PLATE
	md DARK_OAK_PRESSURE_PLATE
	me MANGROVE_PRESSURE_PLATE
	mf BAMBOO_PRESSURE_PLATE
	mg CRIMSON_PRESSURE_PLATE
	mh WARPED_PRESSURE_PLATE
	mi IRON_DOOR
	mj OAK_DOOR
	mk SPRUCE_DOOR
	ml BIRCH_DOOR
	mm JUNGLE_DOOR
	mn ACACIA_DOOR
	mo CHERRY_DOOR
	mp DARK_OAK_DOOR
	mq MANGROVE_DOOR
	mr BAMBOO_DOOR
	ms CRIMSON_DOOR
	mt WARPED_DOOR
	mu IRON_TRAPDOOR
	mv OAK_TRAPDOOR
	mw SPRUCE_TRAPDOOR
	mx BIRCH_TRAPDOOR
	my JUNGLE_TRAPDOOR
	mz ACACIA_TRAPDOOR
	n DRIPSTONE_BLOCK
	nA FLINT_AND_STEEL
	nB APPLE
	nC BOW
	nD ARROW
	nE COAL
	nF CHARCOAL
	nG DIAMOND
	nH EMERALD
	nI LAPIS_LAZULI
	nJ QUARTZ
	nK AMETHYST_SHARD
	nL RAW_IRON
	nM IRON_INGOT
	nN RAW_COPPER
	nO COPPER_INGOT
	nP RAW_GOLD
	nQ GOLD_INGOT
	nR NETHERITE_INGOT
	nS NETHERITE_SCRAP
	nT WOODEN_SWORD
	nU WOODEN_SHOVEL
	nV WOODEN_PICKAXE
	nW WOODEN_AXE
	nX WOODEN_HOE
	nY STONE_SWORD
	nZ STONE_SHOVEL
	na HOPPER_MINECART
	nb CARROT_ON_A_STICK
	nc WARPED_FUNGUS_ON_A_STICK
	nd ELYTRA
	ne OAK_BOAT
	nf OAK_CHEST_BOAT
	ng SPRUCE_BOAT
	nh SPRUCE_CHEST_BOAT
	ni BIRCH_BOAT
	nj BIRCH_CHEST_BOAT
	nk JUNGLE_BOAT
	nl JUNGLE_CHEST_BOAT
	nm ACACIA_BOAT
	nn ACACIA_CHEST_BOAT
	no CHERRY_BOAT
	np CHERRY_CHEST_BOAT
	nq DARK_OAK_BOAT
	nr DARK_OAK_CHEST_BOAT
	ns MANGROVE_BOAT
	nt MANGROVE_CHEST_BOAT
	nu BAMBOO_RAFT
	nv BAMBOO_CHEST_RAFT
	nw STRUCTURE_BLOCK
	nx JIGSAW
	ny TURTLE_HELMET
	nz SCUTE
	o GRASS_BLOCK
	oA STRING
	oB FEATHER
	oC GUNPOWDER
	oD WHEAT_SEEDS
	oE WHEAT
	oF BREAD
	oG LEATHER_HELMET
	oH LEATHER_CHESTPLATE
	oI LEATHER_LEGGINGS
	oJ LEATHER_BOOTS
	oK CHAINMAIL_HELMET
	oL CHAINMAIL_CHESTPLATE
	oM CHAINMAIL_LEGGINGS
	oN CHAINMAIL_BOOTS
	oO IRON_HELMET
	oP IRON_CHESTPLATE
	oQ IRON_LEGGINGS
	oR IRON_BOOTS
	oS DIAMOND_HELMET
	oT DIAMOND_CHESTPLATE
	oU DIAMOND_LEGGINGS
	oV DIAMOND_BOOTS
	oW GOLDEN_HELMET
	oX GOLDEN_CHESTPLATE
	oY GOLDEN_LEGGINGS
	oZ GOLDEN_BOOTS
	oa STONE_PICKAXE
	ob STONE_AXE
	oc STONE_HOE
	od GOLDEN_SWORD
	oe GOLDEN_SHOVEL
	of GOLDEN_PICKAXE
	og GOLDEN_AXE
	oh GOLDEN_HOE
	oi IRON_SWORD
	oj IRON_SHOVEL
	ok IRON_PICKAXE
	ol IRON_AXE
	om IRON_HOE
	on DIAMOND_SWORD
	oo DIAMOND_SHOVEL
	op DIAMOND_PICKAXE
	oq DIAMOND_AXE
	or DIAMOND_HOE
	os NETHERITE_SWORD
	ot NETHERITE_SHOVEL
	ou NETHERITE_PICKAXE
	ov NETHERITE_AXE
	ow NETHERITE_HOE
	ox STICK
	oy BOWL
	oz MUSHROOM_STEW
	p DIRT
	pA CHERRY_HANGING_SIGN
	pB DARK_OAK_HANGING_SIGN
	pC MANGROVE_HANGING_SIGN
	pD BAMBOO_HANGING_SIGN
	pE CRIMSON_HANGING_SIGN
	pF WARPED_HANGING_SIGN
	pG BUCKET
	pH WATER_BUCKET
	pI LAVA_BUCKET
	pJ POWDER_SNOW_BUCKET
	pK SNOWBALL
	pL LEATHER
	pM MILK_BUCKET
	pN PUFFERFISH_BUCKET
	pO SALMON_BUCKET
	pP COD_BUCKET
	pQ TROPICAL_FISH_BUCKET
	pR AXOLOTL_BUCKET
	pS TADPOLE_BUCKET
	pT BRICK
	pU CLAY_BALL
	pV DRIED_KELP_BLOCK
	pW PAPER
	pX BOOK
	pY SLIME_BALL
	pZ EGG
	pa NETHERITE_HELMET
	pb NETHERITE_CHESTPLATE
	pc NETHERITE_LEGGINGS
	pd NETHERITE_BOOTS
	pe FLINT
	pf PORKCHOP
	pg COOKED_PORKCHOP
	ph PAINTING
	pi GOLDEN_APPLE
	pj ENCHANTED_GOLDEN_APPLE
	pk OAK_SIGN
	pl SPRUCE_SIGN
	pm BIRCH_SIGN
	pn JUNGLE_SIGN
	po ACACIA_SIGN
	pp CHERRY_SIGN
	pq DARK_OAK_SIGN
	pr MANGROVE_SIGN
	ps BAMBOO_SIGN
	pt CRIMSON_SIGN
	pu WARPED_SIGN
	pv OAK_HANGING_SIGN
	pw SPRUCE_HANGING_SIGN
	px BIRCH_HANGING_SIGN
	py JUNGLE_HANGING_SIGN
	pz ACACIA_HANGING_SIGN
	q COARSE_DIRT
	qA PURPLE_DYE
	qB BLUE_DYE
	qC BROWN_DYE
	qD GREEN_DYE
	qE RED_DYE
	qF BLACK_DYE
	qG BONE_MEAL
	qH BONE
	qI SUGAR
	qJ CAKE
	qK WHITE_BED
	qL ORANGE_BED
	qM MAGENTA_BED
	qN LIGHT_BLUE_BED
	qO YELLOW_BED
	qP LIME_BED
	qQ PINK_BED
	qR GRAY_BED
	qS LIGHT_GRAY_BED
	qT CYAN_BED
	qU PURPLE_BED
	qV BLUE_BED
	qW BROWN_BED
	qX GREEN_BED
	qY RED_BED
	qZ BLACK_BED
	qa COMPASS
	qb RECOVERY_COMPASS
	qc BUNDLE
	qd FISHING_ROD
	qe CLOCK
	qf SPYGLASS
	qg GLOWSTONE_DUST
	qh COD
	qi SALMON
	qj TROPICAL_FISH
	qk PUFFERFISH
	ql COOKED_COD
	qm COOKED_SALMON
	qn INK_SAC
	qo GLOW_INK_SAC
	qp COCOA_BEANS
	qq WHITE_DYE
	qr ORANGE_DYE
	qs MAGENTA_DYE
	qt LIGHT_BLUE_DYE
	qu YELLOW_DYE
	qv LIME_DYE
	qw PINK_DYE
	qx GRAY_DYE
	qy LIGHT_GRAY_DYE
	qz CYAN_DYE
	r PODZOL
	rA GLISTERING_MELON_SLICE
	rB ALLAY_SPAWN_EGG
	rC AXOLOTL_SPAWN_EGG
	rD BAT_SPAWN_EGG
	rE BEE_SPAWN_EGG
	rF BLAZE_SPAWN_EGG
	rG CAT_SPAWN_EGG
	rH CAMEL_SPAWN_EGG
	rI CAVE_SPIDER_SPAWN_EGG
	rJ CHICKEN_SPAWN_EGG
	rK COD_SPAWN_EGG
	rL COW_SPAWN_EGG
	rM CREEPER_SPAWN_EGG
	rN DOLPHIN_SPAWN_EGG
	rO DONKEY_SPAWN_EGG
	rP DROWNED_SPAWN_EGG
	rQ ELDER_GUARDIAN_SPAWN_EGG
	rR ENDER_DRAGON_SPAWN_EGG
	rS ENDERMAN_SPAWN_EGG
	rT ENDERMITE_SPAWN_EGG
	rU EVOKER_SPAWN_EGG
	rV FOX_SPAWN_EGG
	rW FROG_SPAWN_EGG
	rX GHAST_SPAWN_EGG
	rY GLOW_SQUID_SPAWN_EGG
	rZ GOAT_SPAWN_EGG
	ra COOKIE
	rb FILLED_MAP
	rc SHEARS
	rd MELON_SLICE
	re DRIED_KELP
	rf PUMPKIN_SEEDS
	rg MELON_SEEDS
	rh BEEF
	ri COOKED_BEEF
	rj CHICKEN
	rk COOKED_CHICKEN
	rl ROTTEN_FLESH
	rm ENDER_PEARL
	rn BLAZE_ROD
	ro GHAST_TEAR
	rp GOLD_NUGGET
	rq NETHER_WART
	rr POTION
	rs GLASS_BOTTLE
	rt SPIDER_EYE
	ru FERMENTED_SPIDER_EYE
	rv BLAZE_POWDER
	rw MAGMA_CREAM
	rx BREWING_STAND
	ry CAULDRON
	rz ENDER_EYE
	s ROOTED_DIRT
	sA SKELETON_HORSE_SPAWN_EGG
	sB SLIME_SPAWN_EGG
	sC SNIFFER_SPAWN_EGG
	sD SNOW_GOLEM_SPAWN_EGG
	sE SPIDER_SPAWN_EGG
	sF SQUID_SPAWN_EGG
	sG STRAY_SPAWN_EGG
	sH STRIDER_SPAWN_EGG
	sI TADPOLE_SPAWN_EGG
	sJ TRADER_LLAMA_SPAWN_EGG
	sK TROPICAL_FISH_SPAWN_EGG
	sL TURTLE_SPAWN_EGG
	sM VEX_SPAWN_EGG
	sN VILLAGER_SPAWN_EGG
	sO VINDICATOR_SPAWN_EGG
	sP WANDERING_TRADER_SPAWN_EGG
	sQ WARDEN_SPAWN_EGG
	sR WITCH_SPAWN_EGG
	sS WITHER_SPAWN_EGG
	sT WITHER_SKELETON_SPAWN_EGG
	sU WOLF_SPAWN_EGG
	sV ZOGLIN_SPAWN_EGG
	sW ZOMBIE_SPAWN_EGG
	sX ZOMBIE_HORSE_SPAWN_EGG
	sY ZOMBIE_VILLAGER_SPAWN_EGG
	sZ ZOMBIFIED_PIGLIN_SPAWN_EGG
	sa GUARDIAN_SPAWN_EGG
	sb HOGLIN_SPAWN_EGG
	sc HORSE_SPAWN_EGG
	sd HUSK_SPAWN_EGG
	se IRON_GOLEM_SPAWN_EGG
	sf LLAMA_SPAWN_EGG
	sg MAGMA_CUBE_SPAWN_EGG
	sh MOOSHROOM_SPAWN_EGG
	si MULE_SPAWN_EGG
	sj OCELOT_SPAWN_EGG
	sk PANDA_SPAWN_EGG
	sl PARROT_SPAWN_EGG
	sm PHANTOM_SPAWN_EGG
	sn PIG_SPAWN_EGG
	so PIGLIN_SPAWN_EGG
	sp PIGLIN_BRUTE_SPAWN_EGG
	sq PILLAGER_SPAWN_EGG
	sr POLAR_BEAR_SPAWN_EGG
	ss PUFFERFISH_SPAWN_EGG
	st RABBIT_SPAWN_EGG
	su RAVAGER_SPAWN_EGG
	sv SALMON_SPAWN_EGG
	sw SHEEP_SPAWN_EGG
	sx SHULKER_SPAWN_EGG
	sy SILVERFISH_SPAWN_EGG
	sz SKELETON_SPAWN_EGG
	t MUD
	tA PRISMARINE_SHARD
	tB PRISMARINE_CRYSTALS
	tC RABBIT
	tD COOKED_RABBIT
	tE RABBIT_STEW
	tF RABBIT_FOOT
	tG RABBIT_HIDE
	tH ARMOR_STAND
	tI IRON_HORSE_ARMOR
	tJ GOLDEN_HORSE_ARMOR
	tK DIAMOND_HORSE_ARMOR
	tL LEATHER_HORSE_ARMOR
	tM LEAD
	tN NAME_TAG
	tO COMMAND_BLOCK_MINECART
	tP MUTTON
	tQ COOKED_MUTTON
	tR WHITE_BANNER
	tS ORANGE_BANNER
	tT MAGENTA_BANNER
	tU LIGHT_BLUE_BANNER
	tV YELLOW_BANNER
	tW LIME_BANNER
	tX PINK_BANNER
	tY GRAY_BANNER
	tZ LIGHT_GRAY_BANNER
	ta EXPERIENCE_BOTTLE
	tb FIRE_CHARGE
	tc WRITABLE_BOOK
	td WRITTEN_BOOK
	te ITEM_FRAME
	tf GLOW_ITEM_FRAME
	tg FLOWER_POT
	th CARROT
	ti POTATO
	tj BAKED_POTATO
	tk POISONOUS_POTATO
	tl MAP
	tm GOLDEN_CARROT
	tn SKELETON_SKULL
	to WITHER_SKELETON_SKULL
	tp PLAYER_HEAD
	tq ZOMBIE_HEAD
	tr CREEPER_HEAD
	ts DRAGON_HEAD
	tt PIGLIN_HEAD
	tu NETHER_STAR
	tv PUMPKIN_PIE
	tw FIREWORK_ROCKET
	tx FIREWORK_STAR
	ty ENCHANTED_BOOK
	tz NETHER_BRICK
	u CRIMSON_NYLIUM
	uA MUSIC_DISC_CAT
	uB MUSIC_DISC_BLOCKS
	uC MUSIC_DISC_CHIRP
	uD MUSIC_DISC_FAR
	uE MUSIC_DISC_MALL
	uF MUSIC_DISC_MELLOHI
	uG MUSIC_DISC_STAL
	uH MUSIC_DISC_STRAD
	uI MUSIC_DISC_WARD
	uJ MUSIC_DISC_11
	uK MUSIC_DISC_WAIT
	uL MUSIC_DISC_OTHERSIDE
	uM MUSIC_DISC_5
	uN MUSIC_DISC_PIGSTEP
	uO DISC_FRAGMENT_5
	uP TRIDENT
	uQ PHANTOM_MEMBRANE
	uR NAUTILUS_SHELL
	uS HEART_OF_THE_SEA
	uT CROSSBOW
	uU SUSPICIOUS_STEW
	uV LOOM
	uW FLOWER_BANNER_PATTERN
	uX CREEPER_BANNER_PATTERN
	uY SKULL_BANNER_PATTERN
	uZ MOJANG_BANNER_PATTERN
	ua CYAN_BANNER
	ub PURPLE_BANNER
	uc BLUE_BANNER
	ud BROWN_BANNER
	ue GREEN_BANNER
	uf RED_BANNER
	ug BLACK_BANNER
	uh END_CRYSTAL
	ui CHORUS_FRUIT
	uj POPPED_CHORUS_FRUIT
	uk TORCHFLOWER_SEEDS
	ul BEETROOT
	um BEETROOT_SEEDS
	un BEETROOT_SOUP
	uo DRAGON_BREATH
	up SPLASH_POTION
	uq SPECTRAL_ARROW
	ur TIPPED_ARROW
	us LINGERING_POTION
	ut SHIELD
	uu TOTEM_OF_UNDYING
	uv SHULKER_SHELL
	uw IRON_NUGGET
	ux KNOWLEDGE_BOOK
	uy DEBUG_STICK
	uz MUSIC_DISC_13
	v WARPED_NYLIUM
	vA CRYING_OBSIDIAN
	vB BLACKSTONE
	vC BLACKSTONE_SLAB
	vD BLACKSTONE_STAIRS
	vE GILDED_BLACKSTONE
	vF POLISHED_BLACKSTONE
	vG POLISHED_BLACKSTONE_SLAB
	vH POLISHED_BLACKSTONE_STAIRS
	vI CHISELED_POLISHED_BLACKSTONE
	vJ POLISHED_BLACKSTONE_BRICKS
	vK POLISHED_BLACKSTONE_BRICK_SLAB
	vL POLISHED_BLACKSTONE_BRICK_STAIRS
	vM CRACKED_POLISHED_BLACKSTONE_BRICKS
	vN RESPAWN_ANCHOR
	vO CANDLE
	vP WHITE_CANDLE
	vQ ORANGE_CANDLE
	vR MAGENTA_CANDLE
	vS LIGHT_BLUE_CANDLE
	vT YELLOW_CANDLE
	vU LIME_CANDLE
	vV PINK_CANDLE
	vW GRAY_CANDLE
	vX LIGHT_GRAY_CANDLE
	vY CYAN_CANDLE
	vZ PURPLE_CANDLE
	va GLOBE_BANNER_PATTERN
	vb PIGLIN_BANNER_PATTERN
	vc GOAT_HORN
	vd COMPOSTER
	ve BARREL
	vf SMOKER
	vg BLAST_FURNACE
	vh CARTOGRAPHY_TABLE
	vi FLETCHING_TABLE
	vj GRINDSTONE
	vk SMITHING_TABLE
	vl STONECUTTER
	vm BELL
	vn LANTERN
	vo SOUL_LANTERN
	vp SWEET_BERRIES
	vq GLOW_BERRIES
	vr CAMPFIRE
	vs SOUL_CAMPFIRE
	vt SHROOMLIGHT
	vu HONEYCOMB
	vv BEE_NEST
	vw BEEHIVE
	vx HONEY_BOTTLE
	vy HONEYCOMB_BLOCK
	vz LODESTONE
	w COBBLESTONE
	wA RIB_ARMOR_TRIM_SMITHING_TEMPLATE
	wB SPIRE_ARMOR_TRIM_SMITHING_TEMPLATE
	wC POTTERY_SHARD_ARCHER
	wD POTTERY_SHARD_PRIZE
	wE POTTERY_SHARD_ARMS_UP
	wF POTTERY_SHARD_SKULL
	wa BLUE_CANDLE
	wb BROWN_CANDLE
	wc GREEN_CANDLE
	wd RED_CANDLE
	we BLACK_CANDLE
	wf SMALL_AMETHYST_BUD
	wg MEDIUM_AMETHYST_BUD
	wh LARGE_AMETHYST_BUD
	wi AMETHYST_CLUSTER
	wj POINTED_DRIPSTONE
	wk OCHRE_FROGLIGHT
	wl VERDANT_FROGLIGHT
	wm PEARLESCENT_FROGLIGHT
	wn FROGSPAWN
	wo ECHO_SHARD
	wp BRUSH
	wq NETHERITE_UPGRADE_SMITHING_TEMPLATE
	wr SENTRY_ARMOR_TRIM_SMITHING_TEMPLATE
	ws DUNE_ARMOR_TRIM_SMITHING_TEMPLATE
	wt COAST_ARMOR_TRIM_SMITHING_TEMPLATE
	wu WILD_ARMOR_TRIM_SMITHING_TEMPLATE
	wv WARD_ARMOR_TRIM_SMITHING_TEMPLATE
	ww EYE_ARMOR_TRIM_SMITHING_TEMPLATE
	wx VEX_ARMOR_TRIM_SMITHING_TEMPLATE
	wy TIDE_ARMOR_TRIM_SMITHING_TEMPLATE
	wz SNOUT_ARMOR_TRIM_SMITHING_TEMPLATE
	x OAK_PLANKS
	y SPRUCE_PLANKS
	z BIRCH_PLANKS
	a (Ljava/lang/String;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/item/Item; registerItem
	a (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/item/Item; registerItem
	a (Lnet/minecraft/world/item/ItemBlock;)Lnet/minecraft/world/item/Item; registerBlock
	a (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/item/Item; registerBlock
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/item/Item; registerBlock
	a (Lnet/minecraft/world/level/block/Block;[Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/item/Item; registerBlock
net/minecraft/world/item/MobBucketItem net/minecraft/world/item/MobBucketItem
	a type
	b emptySound
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPosition;)V spawn
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)V playEmptySound
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/World;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPosition;)V checkExtraContent
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V appendHoverText
net/minecraft/world/item/SmithingTemplateItem net/minecraft/world/item/SmithingTemplateItem
	A EMPTY_SLOT_SWORD
	B EMPTY_SLOT_SHOVEL
	C EMPTY_SLOT_PICKAXE
	D EMPTY_SLOT_INGOT
	E EMPTY_SLOT_REDSTONE_DUST
	F EMPTY_SLOT_QUARTZ
	G EMPTY_SLOT_EMERALD
	H EMPTY_SLOT_DIAMOND
	I EMPTY_SLOT_LAPIS_LAZULI
	J EMPTY_SLOT_AMETHYST_SHARD
	K appliesTo
	L ingredients
	M upgradeDescription
	N baseSlotDescription
	O additionsSlotDescription
	P baseSlotEmptyIcons
	Q additionalSlotEmptyIcons
	a TITLE_FORMAT
	b DESCRIPTION_FORMAT
	c DESCRIPTION_ID
	d INGREDIENTS_TITLE
	e APPLIES_TO_TITLE
	f NETHERITE_UPGRADE
	g ARMOR_TRIM_APPLIES_TO
	h ARMOR_TRIM_INGREDIENTS
	i ARMOR_TRIM_BASE_SLOT_DESCRIPTION
	j ARMOR_TRIM_ADDITIONS_SLOT_DESCRIPTION
	k NETHERITE_UPGRADE_APPLIES_TO
	r NETHERITE_UPGRADE_INGREDIENTS
	s NETHERITE_UPGRADE_BASE_SLOT_DESCRIPTION
	t NETHERITE_UPGRADE_ADDITIONS_SLOT_DESCRIPTION
	u EMPTY_SLOT_HELMET
	v EMPTY_SLOT_CHESTPLATE
	w EMPTY_SLOT_LEGGINGS
	x EMPTY_SLOT_BOOTS
	y EMPTY_SLOT_HOE
	z EMPTY_SLOT_AXE
	A ()Ljava/util/List; createTrimmableArmorIconList
	B ()Ljava/util/List; createTrimmableMaterialIconList
	C ()Ljava/util/List; createNetheriteUpgradeIconList
	D ()Ljava/util/List; createNetheriteUpgradeMaterialList
	a ()Ljava/lang/String; getDescriptionId
	a (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/world/item/SmithingTemplateItem; createArmorTrimTemplate
	a (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/item/SmithingTemplateItem; createArmorTrimTemplate
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V appendHoverText
	h ()Lnet/minecraft/world/item/SmithingTemplateItem; createNetheriteUpgradeTemplate
	i ()Lnet/minecraft/network/chat/IChatBaseComponent; getBaseSlotDescription
	x ()Lnet/minecraft/network/chat/IChatBaseComponent; getAdditionSlotDescription
	y ()Ljava/util/List; getBaseSlotEmptyIcons
	z ()Ljava/util/List; getAdditionalSlotEmptyIcons
net/minecraft/world/item/SolidBucketItem net/minecraft/world/item/SolidBucketItem
	c placeSound
	a ()Ljava/lang/String; getDescriptionId
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Z emptyContents
	a (Lnet/minecraft/world/item/context/ItemActionContext;)Lnet/minecraft/world/EnumInteractionResult; useOn
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/sounds/SoundEffect; getPlaceSound
net/minecraft/world/item/SpyglassItem net/minecraft/world/item/SpyglassItem
	a USE_DURATION
	b ZOOM_FOV_MODIFIER
	a (Lnet/minecraft/world/entity/EntityLiving;)V stopUsing
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/EntityLiving;)Lnet/minecraft/world/item/ItemStack; finishUsingItem
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/EntityLiving;I)V releaseUsing
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
	b (Lnet/minecraft/world/item/ItemStack;)I getUseDuration
	c (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/EnumAnimation; getUseAnimation
net/minecraft/world/item/TooltipFlag net/minecraft/world/item/TooltipFlag
	a NORMAL
	b ADVANCED
	a ()Z isAdvanced
	b ()Z isCreative
net/minecraft/world/item/alchemy/Potions net/minecraft/world/item/alchemy/Potions
	A HEALING
	B STRONG_HEALING
	C HARMING
	D STRONG_HARMING
	E POISON
	F LONG_POISON
	G STRONG_POISON
	H REGENERATION
	I LONG_REGENERATION
	J STRONG_REGENERATION
	K STRENGTH
	L LONG_STRENGTH
	M STRONG_STRENGTH
	N WEAKNESS
	O LONG_WEAKNESS
	P LUCK
	Q SLOW_FALLING
	R LONG_SLOW_FALLING
	a EMPTY_ID
	b EMPTY
	c WATER
	d MUNDANE
	e THICK
	f AWKWARD
	g NIGHT_VISION
	h LONG_NIGHT_VISION
	i INVISIBILITY
	j LONG_INVISIBILITY
	k LEAPING
	l LONG_LEAPING
	m STRONG_LEAPING
	n FIRE_RESISTANCE
	o LONG_FIRE_RESISTANCE
	p SWIFTNESS
	q LONG_SWIFTNESS
	r STRONG_SWIFTNESS
	s SLOWNESS
	t LONG_SLOWNESS
	u STRONG_SLOWNESS
	v TURTLE_MASTER
	w LONG_TURTLE_MASTER
	x STRONG_TURTLE_MASTER
	y WATER_BREATHING
	z LONG_WATER_BREATHING
	a (Ljava/lang/String;Lnet/minecraft/world/item/alchemy/PotionRegistry;)Lnet/minecraft/world/item/alchemy/PotionRegistry; register
	a (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/item/alchemy/PotionRegistry;)Lnet/minecraft/world/item/alchemy/PotionRegistry; register
net/minecraft/world/item/armortrim/ArmorTrim net/minecraft/world/item/armortrim/ArmorTrim
	a CODEC
	b TAG_TRIM_ID
	c LOGGER
	d UPGRADE_TITLE
	e material
	f pattern
	g innerTexture
	h outerTexture
	a ()Lnet/minecraft/core/Holder; pattern
	a (Lnet/minecraft/core/Holder;Lnet/minecraft/core/Holder;)Z hasPatternAndMaterial
	a (Lnet/minecraft/core/IRegistryCustom;Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; getTrim
	a (Lnet/minecraft/core/IRegistryCustom;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/armortrim/ArmorTrim;)Z setTrim
	a (Lnet/minecraft/world/item/ArmorMaterial;)Lnet/minecraft/resources/MinecraftKey; innerTexture
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/IRegistryCustom;Ljava/util/List;)V appendUpgradeHoverText
	b ()Lnet/minecraft/core/Holder; material
	b (Lnet/minecraft/world/item/ArmorMaterial;)Lnet/minecraft/resources/MinecraftKey; outerTexture
	c (Lnet/minecraft/world/item/ArmorMaterial;)Ljava/lang/String; getColorPaletteSuffix
net/minecraft/world/item/armortrim/TrimMaterial net/minecraft/world/item/armortrim/TrimMaterial
	a DIRECT_CODEC
	b CODEC
	c assetName
	d ingredient
	e itemModelIndex
	f overrideArmorMaterials
	g description
	a ()Ljava/lang/String; assetName
	a (Ljava/lang/String;Lnet/minecraft/world/item/Item;FLnet/minecraft/network/chat/IChatBaseComponent;Ljava/util/Map;)Lnet/minecraft/world/item/armortrim/TrimMaterial; create
	b ()Lnet/minecraft/core/Holder; ingredient
	c ()F itemModelIndex
	d ()Ljava/util/Map; overrideArmorMaterials
	e ()Lnet/minecraft/network/chat/IChatBaseComponent; description
net/minecraft/world/item/armortrim/TrimMaterials net/minecraft/world/item/armortrim/TrimMaterials
	a QUARTZ
	b IRON
	c NETHERITE
	d REDSTONE
	e COPPER
	f GOLD
	g EMERALD
	h DIAMOND
	i LAPIS
	j AMETHYST
	a (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; registryKey
	a (Lnet/minecraft/core/IRegistryCustom;Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; getFromIngredient
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
	a (Lnet/minecraft/data/worldgen/BootstapContext;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/item/Item;Lnet/minecraft/network/chat/ChatModifier;F)V register
	a (Lnet/minecraft/data/worldgen/BootstapContext;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/item/Item;Lnet/minecraft/network/chat/ChatModifier;FLjava/util/Map;)V register
	b (Lnet/minecraft/data/worldgen/BootstapContext;)V nextUpdate
net/minecraft/world/item/armortrim/TrimPattern net/minecraft/world/item/armortrim/TrimPattern
	a DIRECT_CODEC
	b CODEC
	c assetId
	d templateItem
	e description
	a ()Lnet/minecraft/resources/MinecraftKey; assetId
	a (Lnet/minecraft/core/Holder;)Lnet/minecraft/network/chat/IChatBaseComponent; copyWithStyle
	b ()Lnet/minecraft/core/Holder; templateItem
	c ()Lnet/minecraft/network/chat/IChatBaseComponent; description
net/minecraft/world/item/armortrim/TrimPatterns net/minecraft/world/item/armortrim/TrimPatterns
	a SENTRY
	b DUNE
	c COAST
	d WILD
	e WARD
	f EYE
	g VEX
	h TIDE
	i SNOUT
	j RIB
	k SPIRE
	a (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; registryKey
	a (Lnet/minecraft/core/IRegistryCustom;Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; getFromTemplate
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
	a (Lnet/minecraft/data/worldgen/BootstapContext;Lnet/minecraft/world/item/Item;Lnet/minecraft/resources/ResourceKey;)V register
	b (Lnet/minecraft/data/worldgen/BootstapContext;)V nextUpdate
net/minecraft/world/item/crafting/CookingBookCategory net/minecraft/world/item/crafting/CookingBookCategory
	a FOOD
	b BLOCKS
	c MISC
	d CODEC
	e name
	f $VALUES
	a ()[Lnet/minecraft/world/item/crafting/CookingBookCategory; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/item/crafting/CraftingBookCategory net/minecraft/world/item/crafting/CraftingBookCategory
	a BUILDING
	b REDSTONE
	c EQUIPMENT
	d MISC
	e CODEC
	f name
	g $VALUES
	a ()[Lnet/minecraft/world/item/crafting/CraftingBookCategory; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/item/crafting/LegacyUpgradeRecipe net/minecraft/world/item/crafting/LegacyUpgradeRecipe
	a base
	b addition
	c result
	d id
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; getResultItem
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/world/level/World;)Z matches
	a (Lnet/minecraft/world/item/ItemStack;)Z isTemplateIngredient
	ai_ ()Lnet/minecraft/world/item/crafting/RecipeSerializer; getSerializer
	aj_ ()Z isIncomplete
	b (Lnet/minecraft/world/item/ItemStack;)Z isBaseIngredient
	c (Lnet/minecraft/world/item/ItemStack;)Z isAdditionIngredient
	e ()Lnet/minecraft/resources/MinecraftKey; getId
net/minecraft/world/item/crafting/RecipeSerializer net/minecraft/world/item/crafting/RecipeSerializer
	a SHAPED_RECIPE
	b SHAPELESS_RECIPE
	c ARMOR_DYE
	d BOOK_CLONING
	e MAP_CLONING
	f MAP_EXTENDING
	g FIREWORK_ROCKET
	h FIREWORK_STAR
	i FIREWORK_STAR_FADE
	j TIPPED_ARROW
	k BANNER_DUPLICATE
	l SHIELD_DECORATION
	m SHULKER_BOX_COLORING
	n SUSPICIOUS_STEW
	o REPAIR_ITEM
	p SMELTING_RECIPE
	q BLASTING_RECIPE
	r SMOKING_RECIPE
	s CAMPFIRE_COOKING_RECIPE
	t STONECUTTER
	u SMITHING
	v SMITHING_TRANSFORM
	w SMITHING_TRIM
	x DECORATED_POT_RECIPE
	a (Ljava/lang/String;Lnet/minecraft/world/item/crafting/RecipeSerializer;)Lnet/minecraft/world/item/crafting/RecipeSerializer; register
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/world/item/crafting/IRecipe;)V toNetwork
	b (Lnet/minecraft/resources/MinecraftKey;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/IRecipe; fromJson
	b (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/world/item/crafting/IRecipe; fromNetwork
net/minecraft/world/item/crafting/SimpleCraftingRecipeSerializer net/minecraft/world/item/crafting/SimpleCraftingRecipeSerializer
	y constructor
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/world/item/crafting/IRecipe;)V toNetwork
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/world/item/crafting/RecipeCrafting;)V toNetwork
	a (Lnet/minecraft/resources/MinecraftKey;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/RecipeCrafting; fromJson
	a (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/world/item/crafting/RecipeCrafting; fromNetwork
	b (Lnet/minecraft/resources/MinecraftKey;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/IRecipe; fromJson
	b (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/world/item/crafting/IRecipe; fromNetwork
net/minecraft/world/item/crafting/SmithingTransformRecipe net/minecraft/world/item/crafting/SmithingTransformRecipe
	a id
	b template
	c base
	d addition
	e result
	a (Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; getResultItem
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/world/level/World;)Z matches
	a (Lnet/minecraft/world/item/ItemStack;)Z isTemplateIngredient
	ai_ ()Lnet/minecraft/world/item/crafting/RecipeSerializer; getSerializer
	aj_ ()Z isIncomplete
	b (Lnet/minecraft/world/item/ItemStack;)Z isBaseIngredient
	c (Lnet/minecraft/world/item/ItemStack;)Z isAdditionIngredient
	e ()Lnet/minecraft/resources/MinecraftKey; getId
net/minecraft/world/item/crafting/SmithingTrimRecipe net/minecraft/world/item/crafting/SmithingTrimRecipe
	a id
	b template
	c base
	d addition
	a (Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; getResultItem
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/world/level/World;)Z matches
	a (Lnet/minecraft/world/item/ItemStack;)Z isTemplateIngredient
	ai_ ()Lnet/minecraft/world/item/crafting/RecipeSerializer; getSerializer
	aj_ ()Z isIncomplete
	b (Lnet/minecraft/world/item/ItemStack;)Z isBaseIngredient
	c (Lnet/minecraft/world/item/ItemStack;)Z isAdditionIngredient
	e ()Lnet/minecraft/resources/MinecraftKey; getId
net/minecraft/world/item/enchantment/Enchantment$Rarity net/minecraft/world/item/enchantment/Enchantment$Rarity
	a COMMON
	b UNCOMMON
	c RARE
	d VERY_RARE
	e weight
	f $VALUES
	a ()I getWeight
	b ()[Lnet/minecraft/world/item/enchantment/Enchantment$Rarity; $values
net/minecraft/world/item/enchantment/Enchantment net/minecraft/world/item/enchantment/Enchantment
	a slots
	b rarity
	e category
	f descriptionId
	a ()I getMaxLevel
	a (I)I getMinCost
	a (ILnet/minecraft/world/damagesource/DamageSource;)I getDamageProtection
	a (ILnet/minecraft/world/entity/EnumMonsterType;)F getDamageBonus
	a (Lnet/minecraft/world/entity/EntityLiving;)Ljava/util/Map; getSlotItems
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/Entity;I)V doPostAttack
	a (Lnet/minecraft/world/item/ItemStack;)Z canEnchant
	a (Lnet/minecraft/world/item/enchantment/Enchantment;)Z checkCompatibility
	b ()Z isTreasureOnly
	b (I)I getMaxCost
	b (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/Entity;I)V doPostHurt
	b (Lnet/minecraft/world/item/enchantment/Enchantment;)Z isCompatibleWith
	c ()Z isCurse
	c (I)Lnet/minecraft/world/item/enchantment/Enchantment; byId
	d ()Lnet/minecraft/world/item/enchantment/Enchantment$Rarity; getRarity
	d (I)Lnet/minecraft/network/chat/IChatBaseComponent; getFullname
	e ()I getMinLevel
	f ()Ljava/lang/String; getOrCreateDescriptionId
	g ()Ljava/lang/String; getDescriptionId
	h ()Z isTradeable
	i ()Z isDiscoverable
net/minecraft/world/item/enchantment/Enchantments net/minecraft/world/item/enchantment/Enchantments
	A FLAMING_ARROWS
	B INFINITY_ARROWS
	C FISHING_LUCK
	D FISHING_SPEED
	E LOYALTY
	F IMPALING
	G RIPTIDE
	H CHANNELING
	I MULTISHOT
	J QUICK_CHARGE
	K PIERCING
	L MENDING
	M VANISHING_CURSE
	N ARMOR_SLOTS
	a ALL_DAMAGE_PROTECTION
	b FIRE_PROTECTION
	c FALL_PROTECTION
	d BLAST_PROTECTION
	e PROJECTILE_PROTECTION
	f RESPIRATION
	g AQUA_AFFINITY
	h THORNS
	i DEPTH_STRIDER
	j FROST_WALKER
	k BINDING_CURSE
	l SOUL_SPEED
	m SWIFT_SNEAK
	n SHARPNESS
	o SMITE
	p BANE_OF_ARTHROPODS
	q KNOCKBACK
	r FIRE_ASPECT
	s MOB_LOOTING
	t SWEEPING_EDGE
	u BLOCK_EFFICIENCY
	v SILK_TOUCH
	w UNBREAKING
	x BLOCK_FORTUNE
	y POWER_ARROWS
	z PUNCH_ARROWS
	a (Ljava/lang/String;Lnet/minecraft/world/item/enchantment/Enchantment;)Lnet/minecraft/world/item/enchantment/Enchantment; register
net/minecraft/world/level/ClipBlockStateContext net/minecraft/world/level/ClipBlockStateContext
	a from
	b to
	c block
	a ()Lnet/minecraft/world/phys/Vec3D; getTo
	b ()Lnet/minecraft/world/phys/Vec3D; getFrom
	c ()Ljava/util/function/Predicate; isTargetBlock
net/minecraft/world/level/Explosion net/minecraft/world/level/Explosion
	a EXPLOSION_DAMAGE_CALCULATOR
	b MAX_DROPS_PER_COMBINED_STACK
	c fire
	d blockInteraction
	e random
	f level
	g x
	h y
	i z
	j source
	k radius
	l damageSource
	m damageCalculator
	n toBlow
	o hitPlayers
	a ()V explode
	a (Lit/unimi/dsi/fastutil/objects/ObjectArrayList;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPosition;)V addBlockDrops
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/level/ExplosionDamageCalculator; makeDamageCalculator
	a (Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/entity/Entity;)F getSeenPercent
	a (Z)V finalizeExplosion
	b ()Z interactsWithBlocks
	c ()Lnet/minecraft/world/damagesource/DamageSource; getDamageSource
	d ()Ljava/util/Map; getHitPlayers
	e ()Lnet/minecraft/world/entity/EntityLiving; getIndirectSourceEntity
	f ()Lnet/minecraft/world/entity/Entity; getDirectSourceEntity
	g ()V clearToBlow
	h ()Ljava/util/List; getToBlow
net/minecraft/world/level/FoliageColor net/minecraft/world/level/FoliageColor
	a pixels
	a ()I getEvergreenColor
	a (DD)I get
	a ([I)V init
	b ()I getBirchColor
	c ()I getDefaultColor
	d ()I getMangroveColor
net/minecraft/world/level/GameRules net/minecraft/world/level/GameRules
	A RULE_DOINSOMNIA
	B RULE_DO_IMMEDIATE_RESPAWN
	C RULE_DROWNING_DAMAGE
	D RULE_FALL_DAMAGE
	E RULE_FIRE_DAMAGE
	F RULE_FREEZE_DAMAGE
	G RULE_DO_PATROL_SPAWNING
	H RULE_DO_TRADER_SPAWNING
	I RULE_DO_WARDEN_SPAWNING
	J RULE_FORGIVE_DEAD_PLAYERS
	K RULE_UNIVERSAL_ANGER
	L RULE_PLAYERS_SLEEPING_PERCENTAGE
	M RULE_BLOCK_EXPLOSION_DROP_DECAY
	N RULE_MOB_EXPLOSION_DROP_DECAY
	O RULE_TNT_EXPLOSION_DROP_DECAY
	P RULE_SNOW_ACCUMULATION_HEIGHT
	Q RULE_WATER_SOURCE_CONVERSION
	R RULE_LAVA_SOURCE_CONVERSION
	S RULE_GLOBAL_SOUND_EVENTS
	T RULE_DO_VINES_SPREAD
	U LOGGER
	V GAME_RULE_TYPES
	W rules
	a DEFAULT_RANDOM_TICK_SPEED
	b RULE_DOFIRETICK
	c RULE_MOBGRIEFING
	d RULE_KEEPINVENTORY
	e RULE_DOMOBSPAWNING
	f RULE_DOMOBLOOT
	g RULE_DOBLOCKDROPS
	h RULE_DOENTITYDROPS
	i RULE_COMMANDBLOCKOUTPUT
	j RULE_NATURAL_REGENERATION
	k RULE_DAYLIGHT
	l RULE_LOGADMINCOMMANDS
	m RULE_SHOWDEATHMESSAGES
	n RULE_RANDOMTICKING
	o RULE_SENDCOMMANDFEEDBACK
	p RULE_REDUCEDDEBUGINFO
	q RULE_SPECTATORSGENERATECHUNKS
	r RULE_SPAWN_RADIUS
	s RULE_DISABLE_ELYTRA_MOVEMENT_CHECK
	t RULE_MAX_ENTITY_CRAMMING
	u RULE_WEATHER_CYCLE
	v RULE_LIMITED_CRAFTING
	w RULE_MAX_COMMAND_CHAIN_LENGTH
	x RULE_COMMAND_MODIFICATION_BLOCK_LIMIT
	y RULE_ANNOUNCE_ADVANCEMENTS
	z RULE_DISABLE_RAIDS
	a ()Lnet/minecraft/nbt/NBTTagCompound; createTag
	a (Lcom/mojang/serialization/DynamicLike;)V loadFromTag
	a (Ljava/lang/String;Lnet/minecraft/world/level/GameRules$GameRuleCategory;Lnet/minecraft/world/level/GameRules$GameRuleDefinition;)Lnet/minecraft/world/level/GameRules$GameRuleKey; register
	a (Lnet/minecraft/world/level/GameRules$GameRuleKey;)Lnet/minecraft/world/level/GameRules$GameRuleValue; getRule
	a (Lnet/minecraft/world/level/GameRules$GameRuleKey;Lnet/minecraft/world/level/GameRules;Lnet/minecraft/server/MinecraftServer;)V assignCap
	a (Lnet/minecraft/world/level/GameRules$GameRuleVisitor;)V visitGameRuleTypes
	a (Lnet/minecraft/world/level/GameRules$GameRuleVisitor;Lnet/minecraft/world/level/GameRules$GameRuleKey;Lnet/minecraft/world/level/GameRules$GameRuleDefinition;)V callVisitorCap
	a (Lnet/minecraft/world/level/GameRules;Lnet/minecraft/server/MinecraftServer;)V assignFrom
	b ()Lnet/minecraft/world/level/GameRules; copy
	b (Lnet/minecraft/world/level/GameRules$GameRuleKey;)Z getBoolean
	c (Lnet/minecraft/world/level/GameRules$GameRuleKey;)I getInt
net/minecraft/world/level/GrassColor net/minecraft/world/level/GrassColor
	a pixels
	a ()I getDefaultColor
	a (DD)I get
	a ([I)V init
net/minecraft/world/level/LocalMobCapCalculator net/minecraft/world/level/LocalMobCapCalculator
	a playersNearChunk
	b playerMobCounts
	c chunkMap
	a (Lnet/minecraft/world/entity/EnumCreatureType;Lnet/minecraft/world/level/ChunkCoordIntPair;)Z canSpawn
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;)Ljava/util/List; getPlayersNear
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/world/entity/EnumCreatureType;)V addMob
net/minecraft/world/level/StructureManager net/minecraft/world/level/StructureManager
	a level
	b worldOptions
	c structureCheck
	a ()Z shouldGenerateStructures
	a (Lnet/minecraft/core/BlockPosition;)Z hasAnyStructureAt
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; getStructureWithPieceAt
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/tags/TagKey;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; getStructureWithPieceAt
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/structure/Structure;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; getStructureAt
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/structure/StructureStart;)Z structureHasPieceAt
	a (Lnet/minecraft/core/SectionPosition;Lnet/minecraft/world/level/levelgen/structure/Structure;)Ljava/util/List; startsForStructure
	a (Lnet/minecraft/core/SectionPosition;Lnet/minecraft/world/level/levelgen/structure/Structure;JLnet/minecraft/world/level/chunk/StructureAccess;)V addReferenceForStructure
	a (Lnet/minecraft/core/SectionPosition;Lnet/minecraft/world/level/levelgen/structure/Structure;Lnet/minecraft/world/level/chunk/StructureAccess;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; getStartForStructure
	a (Lnet/minecraft/core/SectionPosition;Lnet/minecraft/world/level/levelgen/structure/Structure;Lnet/minecraft/world/level/levelgen/structure/StructureStart;Lnet/minecraft/world/level/chunk/StructureAccess;)V setStartForStructure
	a (Lnet/minecraft/server/level/RegionLimitedWorldAccess;)Lnet/minecraft/world/level/StructureManager; forWorldGenRegion
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Ljava/util/function/Predicate;)Ljava/util/List; startsForStructure
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/world/level/levelgen/structure/Structure;Z)Lnet/minecraft/world/level/levelgen/structure/StructureCheckResult; checkStructurePresence
	a (Lnet/minecraft/world/level/levelgen/structure/Structure;Lit/unimi/dsi/fastutil/longs/LongSet;Ljava/util/function/Consumer;)V fillStartsForStructure
	a (Lnet/minecraft/world/level/levelgen/structure/StructureStart;)V addReference
	b ()Lnet/minecraft/core/IRegistryCustom; registryAccess
	b (Lnet/minecraft/core/BlockPosition;)Ljava/util/Map; getAllStructuresAt
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/structure/Structure;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; getStructureWithPieceAt
net/minecraft/world/level/WorldDataConfiguration net/minecraft/world/level/WorldDataConfiguration
	a ENABLED_FEATURES_ID
	b CODEC
	c DEFAULT
	d dataPacks
	e enabledFeatures
	a ()Lnet/minecraft/world/level/DataPackConfiguration; dataPacks
	a (Lnet/minecraft/world/flag/FeatureFlagSet;)Lnet/minecraft/world/level/WorldDataConfiguration; expandFeatures
	b ()Lnet/minecraft/world/flag/FeatureFlagSet; enabledFeatures
net/minecraft/world/level/biome/BiomeManager net/minecraft/world/level/biome/BiomeManager
	a CHUNK_CENTER_QUART
	b ZOOM_BITS
	c ZOOM
	d ZOOM_MASK
	e noiseBiomeSource
	f biomeZoomSeed
	a (DDD)Lnet/minecraft/core/Holder; getNoiseBiomeAtPosition
	a (III)Lnet/minecraft/core/Holder; getNoiseBiomeAtQuart
	a (J)J obfuscateSeed
	a (JIIIDDD)D getFiddledDistance
	a (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/core/Holder; getBiome
	a (Lnet/minecraft/world/level/biome/BiomeManager$Provider;)Lnet/minecraft/world/level/biome/BiomeManager; withDifferentSource
	b (J)D getFiddle
	b (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/core/Holder; getNoiseBiomeAtPosition
net/minecraft/world/level/biome/Biomes net/minecraft/world/level/biome/Biomes
	A BADLANDS
	B ERODED_BADLANDS
	C WOODED_BADLANDS
	D MEADOW
	E CHERRY_GROVE
	F GROVE
	G SNOWY_SLOPES
	H FROZEN_PEAKS
	I JAGGED_PEAKS
	J STONY_PEAKS
	K RIVER
	L FROZEN_RIVER
	M BEACH
	N SNOWY_BEACH
	O STONY_SHORE
	P WARM_OCEAN
	Q LUKEWARM_OCEAN
	R DEEP_LUKEWARM_OCEAN
	S OCEAN
	T DEEP_OCEAN
	U COLD_OCEAN
	V DEEP_COLD_OCEAN
	W FROZEN_OCEAN
	X DEEP_FROZEN_OCEAN
	Y MUSHROOM_FIELDS
	Z DRIPSTONE_CAVES
	a THE_VOID
	aa LUSH_CAVES
	ab DEEP_DARK
	ac NETHER_WASTES
	ad WARPED_FOREST
	ae CRIMSON_FOREST
	af SOUL_SAND_VALLEY
	ag BASALT_DELTAS
	ah THE_END
	ai END_HIGHLANDS
	aj END_MIDLANDS
	ak SMALL_END_ISLANDS
	al END_BARRENS
	b PLAINS
	c SUNFLOWER_PLAINS
	d SNOWY_PLAINS
	e ICE_SPIKES
	f DESERT
	g SWAMP
	h MANGROVE_SWAMP
	i FOREST
	j FLOWER_FOREST
	k BIRCH_FOREST
	l DARK_FOREST
	m OLD_GROWTH_BIRCH_FOREST
	n OLD_GROWTH_PINE_TAIGA
	o OLD_GROWTH_SPRUCE_TAIGA
	p TAIGA
	q SNOWY_TAIGA
	r SAVANNA
	s SAVANNA_PLATEAU
	t WINDSWEPT_HILLS
	u WINDSWEPT_GRAVELLY_HILLS
	v WINDSWEPT_FOREST
	w WINDSWEPT_SAVANNA
	x JUNGLE
	y SPARSE_JUNGLE
	z BAMBOO_JUNGLE
	a (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; register
net/minecraft/world/level/biome/Climate$Sampler net/minecraft/world/level/biome/Climate$Sampler
	a temperature
	b humidity
	c continentalness
	d erosion
	e depth
	f weirdness
	g spawnTarget
	a ()Lnet/minecraft/core/BlockPosition; findSpawnPosition
	a (III)Lcno$h; sample
	b ()Lnet/minecraft/world/level/levelgen/DensityFunction; temperature
	c ()Lnet/minecraft/world/level/levelgen/DensityFunction; humidity
	d ()Lnet/minecraft/world/level/levelgen/DensityFunction; continentalness
	e ()Lnet/minecraft/world/level/levelgen/DensityFunction; erosion
	f ()Lnet/minecraft/world/level/levelgen/DensityFunction; depth
	g ()Lnet/minecraft/world/level/levelgen/DensityFunction; weirdness
	h ()Ljava/util/List; spawnTarget
net/minecraft/world/level/biome/Climate net/minecraft/world/level/biome/Climate
	a PARAMETER_COUNT
	b DEBUG_SLOW_BIOME_SEARCH
	c QUANTIZATION_FACTOR
	a ()Lnet/minecraft/world/level/biome/Climate$Sampler; empty
	a (F)J quantizeCoord
	a (FFFFFF)Lcno$h; target
	a (FFFFFFF)Lcno$d; parameters
	a (J)F unquantizeCoord
	a (Lcno$b;Lcno$b;Lcno$b;Lcno$b;Lcno$b;Lcno$b;F)Lcno$d; parameters
	a (Ljava/util/List;Lnet/minecraft/world/level/biome/Climate$Sampler;)Lnet/minecraft/core/BlockPosition; findSpawnPosition
net/minecraft/world/level/biome/MultiNoiseBiomeSourceParameterList net/minecraft/world/level/biome/MultiNoiseBiomeSourceParameterList
	a DIRECT_CODEC
	b CODEC
	c preset
	d parameters
	a ()Lcno$c; parameters
	b ()Ljava/util/Map; knownPresets
net/minecraft/world/level/biome/MultiNoiseBiomeSourceParameterLists net/minecraft/world/level/biome/MultiNoiseBiomeSourceParameterLists
	a NETHER
	b OVERWORLD
	a (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; register
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
	b (Lnet/minecraft/data/worldgen/BootstapContext;)V nextUpdate
net/minecraft/world/level/biome/OverworldBiomeBuilder net/minecraft/world/level/biome/OverworldBiomeBuilder
	A nearInlandContinentalness
	B midInlandContinentalness
	C farInlandContinentalness
	D OCEANS
	E MIDDLE_BIOMES
	F MIDDLE_BIOMES_VARIANT
	G PLATEAU_BIOMES
	H PLATEAU_BIOMES_VARIANT
	I SHATTERED_BIOMES
	a HIGH_START
	b PEAK_START
	c NEAR_INLAND_START
	d MID_INLAND_START
	e FAR_INLAND_START
	f EROSION_INDEX_1_START
	g EROSION_INDEX_2_START
	h VALLEY_SIZE
	i LOW_START
	j HIGH_END
	k PEAK_SIZE
	l PEAK_END
	m EROSION_DEEP_DARK_DRYNESS_THRESHOLD
	n DEPTH_DEEP_DARK_DRYNESS_THRESHOLD
	o modifier
	p FULL_RANGE
	q temperatures
	r humidities
	s erosions
	t FROZEN_RANGE
	u UNFROZEN_RANGE
	v mushroomFieldsContinentalness
	w deepOceanContinentalness
	x oceanContinentalness
	y coastContinentalness
	z inlandContinentalness
	a ()Ljava/util/List; spawnTarget
	a (D)Ljava/lang/String; getDebugStringForPeaksAndValleys
	a (D[Lcno$b;)Ljava/lang/String; getDebugStringForNoiseValue
	a (II)Lnet/minecraft/resources/ResourceKey; pickBeachBiome
	a (IILcno$b;)Lnet/minecraft/resources/ResourceKey; pickMiddleBiome
	a (IILcno$b;Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/resources/ResourceKey; maybePickWindsweptSavannaBiome
	a (ILcno$b;)Lnet/minecraft/resources/ResourceKey; pickBadlandsBiome
	a (Ljava/util/function/Consumer;)V addBiomes
	a (Ljava/util/function/Consumer;Lcno$b;)V addPeaks
	a (Ljava/util/function/Consumer;Lcno$b;Lcno$b;Lcno$b;Lcno$b;Lcno$b;FLnet/minecraft/resources/ResourceKey;)V addSurfaceBiome
	a (Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;Ldgs$b;)Z isDeepDarkRegion
	b ()[Lcno$b; getTemperatureThresholds
	b (D)Ljava/lang/String; getDebugStringForContinentalness
	b (IILcno$b;)Lnet/minecraft/resources/ResourceKey; pickMiddleBiomeOrBadlandsIfHot
	b (Ljava/util/function/Consumer;)V addDebugBiomes
	b (Ljava/util/function/Consumer;Lcno$b;)V addHighSlice
	b (Ljava/util/function/Consumer;Lcno$b;Lcno$b;Lcno$b;Lcno$b;Lcno$b;FLnet/minecraft/resources/ResourceKey;)V addUndergroundBiome
	c ()[Lcno$b; getHumidityThresholds
	c (D)Ljava/lang/String; getDebugStringForErosion
	c (IILcno$b;)Lnet/minecraft/resources/ResourceKey; pickMiddleBiomeOrBadlandsIfHotOrSlopeIfCold
	c (Ljava/util/function/Consumer;)V addOffCoastBiomes
	c (Ljava/util/function/Consumer;Lcno$b;)V addMidSlice
	c (Ljava/util/function/Consumer;Lcno$b;Lcno$b;Lcno$b;Lcno$b;Lcno$b;FLnet/minecraft/resources/ResourceKey;)V addBottomBiome
	d ()[Lcno$b; getErosionThresholds
	d (D)Ljava/lang/String; getDebugStringForTemperature
	d (IILcno$b;)Lnet/minecraft/resources/ResourceKey; pickShatteredCoastBiome
	d (Ljava/util/function/Consumer;)V addInlandBiomes
	d (Ljava/util/function/Consumer;Lcno$b;)V addLowSlice
	e ()[Lcno$b; getContinentalnessThresholds
	e (D)Ljava/lang/String; getDebugStringForHumidity
	e (IILcno$b;)Lnet/minecraft/resources/ResourceKey; pickPlateauBiome
	e (Ljava/util/function/Consumer;)V addUndergroundBiomes
	e (Ljava/util/function/Consumer;Lcno$b;)V addValleys
	f ()[Lcno$b; getPeaksAndValleysThresholds
	f (IILcno$b;)Lnet/minecraft/resources/ResourceKey; pickPeakBiome
	g ()[Lcno$b; getWeirdnessThresholds
	g (IILcno$b;)Lnet/minecraft/resources/ResourceKey; pickSlopeBiome
	h (IILcno$b;)Lnet/minecraft/resources/ResourceKey; pickShatteredBiome
net/minecraft/world/level/block/AbstractCandleBlock net/minecraft/world/level/block/AbstractCandleBlock
	a LIGHT_PER_CANDLE
	b LIT
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)V extinguish
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Z)V setLit
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/phys/MovingObjectPositionBlock;Lnet/minecraft/world/entity/projectile/IProjectile;)V onProjectileHit
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/util/RandomSource;)V addParticlesAndSound
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Ljava/lang/Iterable; getParticleOffsets
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
	b (Lnet/minecraft/world/level/block/state/IBlockData;)Z isLit
	c (Lnet/minecraft/world/level/block/state/IBlockData;)Z canBeLit
net/minecraft/world/level/block/AbstractCauldronBlock net/minecraft/world/level/block/AbstractCauldronBlock
	a FLOOR_LEVEL
	b SHAPE
	c SIDE_THICKNESS
	d LEG_WIDTH
	e LEG_HEIGHT
	f LEG_DEPTH
	g INSIDE
	h interactions
	a (Lnet/minecraft/world/level/block/state/IBlockData;)D getContentHeight
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;)Z isEntityInsideContent
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getInteractionShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/material/FluidType;)V receiveStalactiteDrip
	a (Lnet/minecraft/world/level/material/FluidType;)Z canReceiveStalactiteDrip
	c (Lnet/minecraft/world/level/block/state/IBlockData;)Z isFull
	d_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z hasAnalogOutputSignal
net/minecraft/world/level/block/AmethystClusterBlock net/minecraft/world/level/block/AmethystClusterBlock
	a WATERLOGGED
	b FACING
	c northAabb
	d southAabb
	e eastAabb
	f westAabb
	g upAabb
	h downAabb
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	d (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/EnumPistonReaction; getPistonPushReaction
net/minecraft/world/level/block/AzaleaBlock net/minecraft/world/level/block/AzaleaBlock
	a TREE_GROWER
	b SHAPE
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V performBonemeal
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z mayPlaceOn
net/minecraft/world/level/block/BigDripleafBlock net/minecraft/world/level/block/BigDripleafBlock
	a WATERLOGGED
	b TILT
	c NO_TICK
	d DELAY_UNTIL_NEXT_TILT_STATE
	e MAX_GEN_HEIGHT
	f STEM_WIDTH
	g ENTITY_DETECTION_MIN_Y
	h LOWEST_LEAF_TOP
	i LEAF_SHAPES
	j STEM_SLICER
	k STEM_SHAPES
	l shapesCache
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;)Z canEntityTilt
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V performBonemeal
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/EnumDirection;)Z place
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)V placeWithRandomHeight
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z canPlaceAt
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/sounds/SoundEffect;)V playTiltSound
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/phys/MovingObjectPositionBlock;Lnet/minecraft/world/entity/projectile/IProjectile;)V onProjectileHit
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;)V entityInside
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/properties/Tilt;)V setTilt
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/properties/Tilt;Lnet/minecraft/sounds/SoundEffect;)V setTiltAndScheduleTick
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getCollisionShape
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V resetTilt
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/phys/shapes/VoxelShape; calculateShape
	n (Lnet/minecraft/world/level/block/state/IBlockData;)Z canReplace
net/minecraft/world/level/block/BigDripleafStemBlock net/minecraft/world/level/block/BigDripleafStemBlock
	a NORTH_SHAPE
	b SOUTH_SHAPE
	c EAST_SHAPE
	d WEST_SHAPE
	e WATERLOGGED
	f STEM_WIDTH
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V performBonemeal
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/EnumDirection;)Z place
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/item/ItemStack; getCloneItemStack
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
net/minecraft/world/level/block/Block net/minecraft/world/level/block/Block
	A INDESTRUCTIBLE
	B INSTANT
	C UPDATE_LIMIT
	D stateDefinition
	a LOGGER
	b builtInRegistryHolder
	c SHAPE_FULL_BLOCK_CACHE
	d defaultBlockState
	e descriptionId
	f item
	g CACHE_SIZE
	h OCCLUSION_CACHE
	o BLOCK_STATE_REGISTRY
	p UPDATE_NEIGHBORS
	q UPDATE_CLIENTS
	r UPDATE_INVISIBLE
	s UPDATE_IMMEDIATE
	t UPDATE_KNOWN_SHAPE
	u UPDATE_SUPPRESS_DROPS
	v UPDATE_MOVE_BY_PISTON
	w UPDATE_SUPPRESS_LIGHT
	x UPDATE_NONE
	y UPDATE_ALL
	z UPDATE_ALL_IMMEDIATE
	a (DDDDDD)Lnet/minecraft/world/phys/shapes/VoxelShape; box
	a (I)Lnet/minecraft/world/level/block/state/IBlockData; stateById
	a (Ldbr$a;)V createBlockStateDefinition
	a (Ljava/util/function/Function;)Lcom/google/common/collect/ImmutableMap; getShapeForEachState
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;I)V popExperience
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/util/valueproviders/IntProvider;)V tryDropExperience
	a (Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/level/block/Block; byItem
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/IBlockAccess;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V appendHoverText
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/Explosion;)Z dropFromExplosion
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V destroy
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/item/ItemStack; getCloneItemStack
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/world/entity/Entity;)V updateEntityAfterFallOn
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Z canSupportCenter
	a (Lnet/minecraft/world/level/World;Ljava/util/function/Supplier;Lnet/minecraft/world/item/ItemStack;)V popResource
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/item/ItemStack;)V popResourceFromFace
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/item/ItemStack;)V popResource
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/Explosion;)V wasExploded
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/Entity;)V stepOn
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;)V setPlacedBy
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/player/EntityHuman;)V playerWillDestroy
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V spawnDestroyParticles
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntity;Lnet/minecraft/world/item/ItemStack;)V playerDestroy
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;F)V fallOn
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/entity/TileEntity;)Ljava/util/List; getDrops
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/entity/TileEntity;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; getDrops
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/entity/TileEntity;)V dropResources
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/core/BlockPosition;)Z shouldRenderFace
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/biome/BiomeBase$Precipitation;)V handlePrecipitation
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/entity/TileEntity;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/item/ItemStack;)V dropResources
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; pushEntitiesUp
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;I)V updateOrDestroy
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;II)V updateOrDestroy
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/properties/IBlockState;)Lnet/minecraft/world/level/block/state/IBlockData; copyProperty
	a (Lnet/minecraft/world/phys/shapes/VoxelShape;)Z isShapeFullBlock
	a (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/core/EnumDirection;)Z isFaceFull
	ao_ ()Z isPossibleToRespawnInThis
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateFromNeighbourShapes
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/storage/loot/LootTableInfo$Builder;)V dropResources
	c (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z canSupportRigidBlock
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z propagatesSkylightDown
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V dropResources
	e ()F getExplosionResistance
	e_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isRandomlyTicking
	f ()Lnet/minecraft/network/chat/IChatMutableComponent; getName
	h ()Ljava/lang/String; getDescriptionId
	i ()F getFriction
	i (Lnet/minecraft/world/level/block/state/IBlockData;)I getId
	j ()F getSpeedFactor
	j (Lnet/minecraft/world/level/block/state/IBlockData;)Z isExceptionForConnection
	k ()Lnet/minecraft/world/item/Item; asItem
	k (Lnet/minecraft/world/level/block/state/IBlockData;)V registerDefaultState
	l ()F getJumpFactor
	l (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/state/IBlockData; withPropertiesOf
	m (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/SoundEffectType; getSoundType
	n ()Lnet/minecraft/world/level/block/state/BlockStateList; getStateDefinition
	o ()Lnet/minecraft/world/level/block/state/IBlockData; defaultBlockState
	p ()Z hasDynamicShape
	q ()Lnet/minecraft/world/level/block/Block; asBlock
	r ()Lhd$c; builtInRegistryHolder
net/minecraft/world/level/block/Blocks net/minecraft/world/level/block/Blocks
	A JUNGLE_SAPLING
	B ACACIA_SAPLING
	C CHERRY_SAPLING
	D DARK_OAK_SAPLING
	E MANGROVE_PROPAGULE
	F BEDROCK
	G WATER
	H LAVA
	I SAND
	J SUSPICIOUS_SAND
	K RED_SAND
	L GRAVEL
	M GOLD_ORE
	N DEEPSLATE_GOLD_ORE
	O IRON_ORE
	P DEEPSLATE_IRON_ORE
	Q COAL_ORE
	R DEEPSLATE_COAL_ORE
	S NETHER_GOLD_ORE
	T OAK_LOG
	U SPRUCE_LOG
	V BIRCH_LOG
	W JUNGLE_LOG
	X ACACIA_LOG
	Y CHERRY_LOG
	Z DARK_OAK_LOG
	a AIR
	aA STRIPPED_CHERRY_WOOD
	aB STRIPPED_DARK_OAK_WOOD
	aC STRIPPED_MANGROVE_WOOD
	aD OAK_LEAVES
	aE SPRUCE_LEAVES
	aF BIRCH_LEAVES
	aG JUNGLE_LEAVES
	aH ACACIA_LEAVES
	aI CHERRY_LEAVES
	aJ DARK_OAK_LEAVES
	aK MANGROVE_LEAVES
	aL AZALEA_LEAVES
	aM FLOWERING_AZALEA_LEAVES
	aN SPONGE
	aO WET_SPONGE
	aP GLASS
	aQ LAPIS_ORE
	aR DEEPSLATE_LAPIS_ORE
	aS LAPIS_BLOCK
	aT DISPENSER
	aU SANDSTONE
	aV CHISELED_SANDSTONE
	aW CUT_SANDSTONE
	aX NOTE_BLOCK
	aY WHITE_BED
	aZ ORANGE_BED
	aa MANGROVE_LOG
	ab MANGROVE_ROOTS
	ac MUDDY_MANGROVE_ROOTS
	ad BAMBOO_BLOCK
	ae STRIPPED_SPRUCE_LOG
	af STRIPPED_BIRCH_LOG
	ag STRIPPED_JUNGLE_LOG
	ah STRIPPED_ACACIA_LOG
	ai STRIPPED_CHERRY_LOG
	aj STRIPPED_DARK_OAK_LOG
	ak STRIPPED_OAK_LOG
	al STRIPPED_MANGROVE_LOG
	am STRIPPED_BAMBOO_BLOCK
	an OAK_WOOD
	ao SPRUCE_WOOD
	ap BIRCH_WOOD
	aq JUNGLE_WOOD
	ar ACACIA_WOOD
	as CHERRY_WOOD
	at DARK_OAK_WOOD
	au MANGROVE_WOOD
	av STRIPPED_OAK_WOOD
	aw STRIPPED_SPRUCE_WOOD
	ax STRIPPED_BIRCH_WOOD
	ay STRIPPED_JUNGLE_WOOD
	az STRIPPED_ACACIA_WOOD
	b STONE
	bA ORANGE_WOOL
	bB MAGENTA_WOOL
	bC LIGHT_BLUE_WOOL
	bD YELLOW_WOOL
	bE LIME_WOOL
	bF PINK_WOOL
	bG GRAY_WOOL
	bH LIGHT_GRAY_WOOL
	bI CYAN_WOOL
	bJ PURPLE_WOOL
	bK BLUE_WOOL
	bL BROWN_WOOL
	bM GREEN_WOOL
	bN RED_WOOL
	bO BLACK_WOOL
	bP MOVING_PISTON
	bQ DANDELION
	bR TORCHFLOWER
	bS POPPY
	bT BLUE_ORCHID
	bU ALLIUM
	bV AZURE_BLUET
	bW RED_TULIP
	bX ORANGE_TULIP
	bY WHITE_TULIP
	bZ PINK_TULIP
	ba MAGENTA_BED
	bb LIGHT_BLUE_BED
	bc YELLOW_BED
	bd LIME_BED
	be PINK_BED
	bf GRAY_BED
	bg LIGHT_GRAY_BED
	bh CYAN_BED
	bi PURPLE_BED
	bj BLUE_BED
	bk BROWN_BED
	bl GREEN_BED
	bm RED_BED
	bn BLACK_BED
	bo POWERED_RAIL
	bp DETECTOR_RAIL
	bq STICKY_PISTON
	br COBWEB
	bs GRASS
	bt FERN
	bu DEAD_BUSH
	bv SEAGRASS
	bw TALL_SEAGRASS
	bx PISTON
	by PISTON_HEAD
	bz WHITE_WOOL
	c GRANITE
	cA WHEAT
	cB FARMLAND
	cC FURNACE
	cD OAK_SIGN
	cE SPRUCE_SIGN
	cF BIRCH_SIGN
	cG ACACIA_SIGN
	cH CHERRY_SIGN
	cI JUNGLE_SIGN
	cJ DARK_OAK_SIGN
	cK MANGROVE_SIGN
	cL BAMBOO_SIGN
	cM OAK_DOOR
	cN LADDER
	cO RAIL
	cP COBBLESTONE_STAIRS
	cQ OAK_WALL_SIGN
	cR SPRUCE_WALL_SIGN
	cS BIRCH_WALL_SIGN
	cT ACACIA_WALL_SIGN
	cU CHERRY_WALL_SIGN
	cV JUNGLE_WALL_SIGN
	cW DARK_OAK_WALL_SIGN
	cX MANGROVE_WALL_SIGN
	cY BAMBOO_WALL_SIGN
	cZ OAK_HANGING_SIGN
	ca OXEYE_DAISY
	cb CORNFLOWER
	cc WITHER_ROSE
	cd LILY_OF_THE_VALLEY
	ce BROWN_MUSHROOM
	cf RED_MUSHROOM
	cg GOLD_BLOCK
	ch IRON_BLOCK
	ci BRICKS
	cj TNT
	ck BOOKSHELF
	cl CHISELED_BOOKSHELF
	cm MOSSY_COBBLESTONE
	cn OBSIDIAN
	co TORCH
	cp WALL_TORCH
	cq FIRE
	cr SOUL_FIRE
	cs SPAWNER
	ct OAK_STAIRS
	cu CHEST
	cv REDSTONE_WIRE
	cw DIAMOND_ORE
	cx DEEPSLATE_DIAMOND_ORE
	cy DIAMOND_BLOCK
	cz CRAFTING_TABLE
	d POLISHED_GRANITE
	dA BIRCH_PRESSURE_PLATE
	dB JUNGLE_PRESSURE_PLATE
	dC ACACIA_PRESSURE_PLATE
	dD CHERRY_PRESSURE_PLATE
	dE DARK_OAK_PRESSURE_PLATE
	dF MANGROVE_PRESSURE_PLATE
	dG BAMBOO_PRESSURE_PLATE
	dH REDSTONE_ORE
	dI DEEPSLATE_REDSTONE_ORE
	dJ REDSTONE_TORCH
	dK REDSTONE_WALL_TORCH
	dL STONE_BUTTON
	dM SNOW
	dN ICE
	dO SNOW_BLOCK
	dP CACTUS
	dQ CLAY
	dR SUGAR_CANE
	dS JUKEBOX
	dT OAK_FENCE
	dU PUMPKIN
	dV NETHERRACK
	dW SOUL_SAND
	dX SOUL_SOIL
	dY BASALT
	dZ POLISHED_BASALT
	da SPRUCE_HANGING_SIGN
	db BIRCH_HANGING_SIGN
	dc ACACIA_HANGING_SIGN
	dd CHERRY_HANGING_SIGN
	de JUNGLE_HANGING_SIGN
	df DARK_OAK_HANGING_SIGN
	dg CRIMSON_HANGING_SIGN
	dh WARPED_HANGING_SIGN
	di MANGROVE_HANGING_SIGN
	dj BAMBOO_HANGING_SIGN
	dk OAK_WALL_HANGING_SIGN
	dl SPRUCE_WALL_HANGING_SIGN
	dm BIRCH_WALL_HANGING_SIGN
	dn ACACIA_WALL_HANGING_SIGN
	do CHERRY_WALL_HANGING_SIGN
	dp JUNGLE_WALL_HANGING_SIGN
	dq DARK_OAK_WALL_HANGING_SIGN
	dr MANGROVE_WALL_HANGING_SIGN
	ds CRIMSON_WALL_HANGING_SIGN
	dt WARPED_WALL_HANGING_SIGN
	du BAMBOO_WALL_HANGING_SIGN
	dv LEVER
	dw STONE_PRESSURE_PLATE
	dx IRON_DOOR
	dy OAK_PRESSURE_PLATE
	dz SPRUCE_PRESSURE_PLATE
	e DIORITE
	eA BIRCH_TRAPDOOR
	eB JUNGLE_TRAPDOOR
	eC ACACIA_TRAPDOOR
	eD CHERRY_TRAPDOOR
	eE DARK_OAK_TRAPDOOR
	eF MANGROVE_TRAPDOOR
	eG BAMBOO_TRAPDOOR
	eH STONE_BRICKS
	eI MOSSY_STONE_BRICKS
	eJ CRACKED_STONE_BRICKS
	eK CHISELED_STONE_BRICKS
	eL PACKED_MUD
	eM MUD_BRICKS
	eN INFESTED_STONE
	eO INFESTED_COBBLESTONE
	eP INFESTED_STONE_BRICKS
	eQ INFESTED_MOSSY_STONE_BRICKS
	eR INFESTED_CRACKED_STONE_BRICKS
	eS INFESTED_CHISELED_STONE_BRICKS
	eT BROWN_MUSHROOM_BLOCK
	eU RED_MUSHROOM_BLOCK
	eV MUSHROOM_STEM
	eW IRON_BARS
	eX CHAIN
	eY GLASS_PANE
	eZ MELON
	ea SOUL_TORCH
	eb SOUL_WALL_TORCH
	ec GLOWSTONE
	ed NETHER_PORTAL
	ee CARVED_PUMPKIN
	ef JACK_O_LANTERN
	eg CAKE
	eh REPEATER
	ei WHITE_STAINED_GLASS
	ej ORANGE_STAINED_GLASS
	ek MAGENTA_STAINED_GLASS
	el LIGHT_BLUE_STAINED_GLASS
	em YELLOW_STAINED_GLASS
	en LIME_STAINED_GLASS
	eo PINK_STAINED_GLASS
	ep GRAY_STAINED_GLASS
	eq LIGHT_GRAY_STAINED_GLASS
	er CYAN_STAINED_GLASS
	es PURPLE_STAINED_GLASS
	et BLUE_STAINED_GLASS
	eu BROWN_STAINED_GLASS
	ev GREEN_STAINED_GLASS
	ew RED_STAINED_GLASS
	ex BLACK_STAINED_GLASS
	ey OAK_TRAPDOOR
	ez SPRUCE_TRAPDOOR
	f POLISHED_DIORITE
	fA REDSTONE_LAMP
	fB COCOA
	fC SANDSTONE_STAIRS
	fD EMERALD_ORE
	fE DEEPSLATE_EMERALD_ORE
	fF ENDER_CHEST
	fG TRIPWIRE_HOOK
	fH TRIPWIRE
	fI EMERALD_BLOCK
	fJ SPRUCE_STAIRS
	fK BIRCH_STAIRS
	fL JUNGLE_STAIRS
	fM COMMAND_BLOCK
	fN BEACON
	fO COBBLESTONE_WALL
	fP MOSSY_COBBLESTONE_WALL
	fQ FLOWER_POT
	fR POTTED_TORCHFLOWER
	fS POTTED_OAK_SAPLING
	fT POTTED_SPRUCE_SAPLING
	fU POTTED_BIRCH_SAPLING
	fV POTTED_JUNGLE_SAPLING
	fW POTTED_ACACIA_SAPLING
	fX POTTED_CHERRY_SAPLING
	fY POTTED_DARK_OAK_SAPLING
	fZ POTTED_MANGROVE_PROPAGULE
	fa ATTACHED_PUMPKIN_STEM
	fb ATTACHED_MELON_STEM
	fc PUMPKIN_STEM
	fd MELON_STEM
	fe VINE
	ff GLOW_LICHEN
	fg OAK_FENCE_GATE
	fh BRICK_STAIRS
	fi STONE_BRICK_STAIRS
	fj MUD_BRICK_STAIRS
	fk MYCELIUM
	fl LILY_PAD
	fm NETHER_BRICKS
	fn NETHER_BRICK_FENCE
	fo NETHER_BRICK_STAIRS
	fp NETHER_WART
	fq ENCHANTING_TABLE
	fr BREWING_STAND
	fs CAULDRON
	ft WATER_CAULDRON
	fu LAVA_CAULDRON
	fv POWDER_SNOW_CAULDRON
	fw END_PORTAL
	fx END_PORTAL_FRAME
	fy END_STONE
	fz DRAGON_EGG
	g ANDESITE
	gA DARK_OAK_BUTTON
	gB MANGROVE_BUTTON
	gC BAMBOO_BUTTON
	gD SKELETON_SKULL
	gE SKELETON_WALL_SKULL
	gF WITHER_SKELETON_SKULL
	gG WITHER_SKELETON_WALL_SKULL
	gH ZOMBIE_HEAD
	gI ZOMBIE_WALL_HEAD
	gJ PLAYER_HEAD
	gK PLAYER_WALL_HEAD
	gL CREEPER_HEAD
	gM CREEPER_WALL_HEAD
	gN DRAGON_HEAD
	gO DRAGON_WALL_HEAD
	gP PIGLIN_HEAD
	gQ PIGLIN_WALL_HEAD
	gR ANVIL
	gS CHIPPED_ANVIL
	gT DAMAGED_ANVIL
	gU TRAPPED_CHEST
	gV LIGHT_WEIGHTED_PRESSURE_PLATE
	gW HEAVY_WEIGHTED_PRESSURE_PLATE
	gX COMPARATOR
	gY DAYLIGHT_DETECTOR
	gZ REDSTONE_BLOCK
	ga POTTED_FERN
	gb POTTED_DANDELION
	gc POTTED_POPPY
	gd POTTED_BLUE_ORCHID
	ge POTTED_ALLIUM
	gf POTTED_AZURE_BLUET
	gg POTTED_RED_TULIP
	gh POTTED_ORANGE_TULIP
	gi POTTED_WHITE_TULIP
	gj POTTED_PINK_TULIP
	gk POTTED_OXEYE_DAISY
	gl POTTED_CORNFLOWER
	gm POTTED_LILY_OF_THE_VALLEY
	gn POTTED_WITHER_ROSE
	go POTTED_RED_MUSHROOM
	gp POTTED_BROWN_MUSHROOM
	gq POTTED_DEAD_BUSH
	gr POTTED_CACTUS
	gs CARROTS
	gt POTATOES
	gu OAK_BUTTON
	gv SPRUCE_BUTTON
	gw BIRCH_BUTTON
	gx JUNGLE_BUTTON
	gy ACACIA_BUTTON
	gz CHERRY_BUTTON
	h POLISHED_ANDESITE
	hA MAGENTA_STAINED_GLASS_PANE
	hB LIGHT_BLUE_STAINED_GLASS_PANE
	hC YELLOW_STAINED_GLASS_PANE
	hD LIME_STAINED_GLASS_PANE
	hE PINK_STAINED_GLASS_PANE
	hF GRAY_STAINED_GLASS_PANE
	hG LIGHT_GRAY_STAINED_GLASS_PANE
	hH CYAN_STAINED_GLASS_PANE
	hI PURPLE_STAINED_GLASS_PANE
	hJ BLUE_STAINED_GLASS_PANE
	hK BROWN_STAINED_GLASS_PANE
	hL GREEN_STAINED_GLASS_PANE
	hM RED_STAINED_GLASS_PANE
	hN BLACK_STAINED_GLASS_PANE
	hO ACACIA_STAIRS
	hP CHERRY_STAIRS
	hQ DARK_OAK_STAIRS
	hR MANGROVE_STAIRS
	hS BAMBOO_STAIRS
	hT BAMBOO_MOSAIC_STAIRS
	hU SLIME_BLOCK
	hV BARRIER
	hW LIGHT
	hX IRON_TRAPDOOR
	hY PRISMARINE
	hZ PRISMARINE_BRICKS
	ha NETHER_QUARTZ_ORE
	hb HOPPER
	hc QUARTZ_BLOCK
	hd CHISELED_QUARTZ_BLOCK
	he QUARTZ_PILLAR
	hf QUARTZ_STAIRS
	hg ACTIVATOR_RAIL
	hh DROPPER
	hi WHITE_TERRACOTTA
	hj ORANGE_TERRACOTTA
	hk MAGENTA_TERRACOTTA
	hl LIGHT_BLUE_TERRACOTTA
	hm YELLOW_TERRACOTTA
	hn LIME_TERRACOTTA
	ho PINK_TERRACOTTA
	hp GRAY_TERRACOTTA
	hq LIGHT_GRAY_TERRACOTTA
	hr CYAN_TERRACOTTA
	hs PURPLE_TERRACOTTA
	ht BLUE_TERRACOTTA
	hu BROWN_TERRACOTTA
	hv GREEN_TERRACOTTA
	hw RED_TERRACOTTA
	hx BLACK_TERRACOTTA
	hy WHITE_STAINED_GLASS_PANE
	hz ORANGE_STAINED_GLASS_PANE
	i GRASS_BLOCK
	iA COAL_BLOCK
	iB PACKED_ICE
	iC SUNFLOWER
	iD LILAC
	iE ROSE_BUSH
	iF PEONY
	iG TALL_GRASS
	iH LARGE_FERN
	iI WHITE_BANNER
	iJ ORANGE_BANNER
	iK MAGENTA_BANNER
	iL LIGHT_BLUE_BANNER
	iM YELLOW_BANNER
	iN LIME_BANNER
	iO PINK_BANNER
	iP GRAY_BANNER
	iQ LIGHT_GRAY_BANNER
	iR CYAN_BANNER
	iS PURPLE_BANNER
	iT BLUE_BANNER
	iU BROWN_BANNER
	iV GREEN_BANNER
	iW RED_BANNER
	iX BLACK_BANNER
	iY WHITE_WALL_BANNER
	iZ ORANGE_WALL_BANNER
	ia DARK_PRISMARINE
	ib PRISMARINE_STAIRS
	ic PRISMARINE_BRICK_STAIRS
	id DARK_PRISMARINE_STAIRS
	ie PRISMARINE_SLAB
	if PRISMARINE_BRICK_SLAB
	ig DARK_PRISMARINE_SLAB
	ih SEA_LANTERN
	ii HAY_BLOCK
	ij WHITE_CARPET
	ik ORANGE_CARPET
	il MAGENTA_CARPET
	im LIGHT_BLUE_CARPET
	in YELLOW_CARPET
	io LIME_CARPET
	ip PINK_CARPET
	iq GRAY_CARPET
	ir LIGHT_GRAY_CARPET
	is CYAN_CARPET
	it PURPLE_CARPET
	iu BLUE_CARPET
	iv BROWN_CARPET
	iw GREEN_CARPET
	ix RED_CARPET
	iy BLACK_CARPET
	iz TERRACOTTA
	j DIRT
	jA BAMBOO_SLAB
	jB BAMBOO_MOSAIC_SLAB
	jC STONE_SLAB
	jD SMOOTH_STONE_SLAB
	jE SANDSTONE_SLAB
	jF CUT_SANDSTONE_SLAB
	jG PETRIFIED_OAK_SLAB
	jH COBBLESTONE_SLAB
	jI BRICK_SLAB
	jJ STONE_BRICK_SLAB
	jK MUD_BRICK_SLAB
	jL NETHER_BRICK_SLAB
	jM QUARTZ_SLAB
	jN RED_SANDSTONE_SLAB
	jO CUT_RED_SANDSTONE_SLAB
	jP PURPUR_SLAB
	jQ SMOOTH_STONE
	jR SMOOTH_SANDSTONE
	jS SMOOTH_QUARTZ
	jT SMOOTH_RED_SANDSTONE
	jU SPRUCE_FENCE_GATE
	jV BIRCH_FENCE_GATE
	jW JUNGLE_FENCE_GATE
	jX ACACIA_FENCE_GATE
	jY CHERRY_FENCE_GATE
	jZ DARK_OAK_FENCE_GATE
	ja MAGENTA_WALL_BANNER
	jb LIGHT_BLUE_WALL_BANNER
	jc YELLOW_WALL_BANNER
	jd LIME_WALL_BANNER
	je PINK_WALL_BANNER
	jf GRAY_WALL_BANNER
	jg LIGHT_GRAY_WALL_BANNER
	jh CYAN_WALL_BANNER
	ji PURPLE_WALL_BANNER
	jj BLUE_WALL_BANNER
	jk BROWN_WALL_BANNER
	jl GREEN_WALL_BANNER
	jm RED_WALL_BANNER
	jn BLACK_WALL_BANNER
	jo RED_SANDSTONE
	jp CHISELED_RED_SANDSTONE
	jq CUT_RED_SANDSTONE
	jr RED_SANDSTONE_STAIRS
	js OAK_SLAB
	jt SPRUCE_SLAB
	ju BIRCH_SLAB
	jv JUNGLE_SLAB
	jw ACACIA_SLAB
	jx CHERRY_SLAB
	jy DARK_OAK_SLAB
	jz MANGROVE_SLAB
	k COARSE_DIRT
	kA BEETROOTS
	kB DIRT_PATH
	kC END_GATEWAY
	kD REPEATING_COMMAND_BLOCK
	kE CHAIN_COMMAND_BLOCK
	kF FROSTED_ICE
	kG MAGMA_BLOCK
	kH NETHER_WART_BLOCK
	kI RED_NETHER_BRICKS
	kJ BONE_BLOCK
	kK STRUCTURE_VOID
	kL OBSERVER
	kM SHULKER_BOX
	kN WHITE_SHULKER_BOX
	kO ORANGE_SHULKER_BOX
	kP MAGENTA_SHULKER_BOX
	kQ LIGHT_BLUE_SHULKER_BOX
	kR YELLOW_SHULKER_BOX
	kS LIME_SHULKER_BOX
	kT PINK_SHULKER_BOX
	kU GRAY_SHULKER_BOX
	kV LIGHT_GRAY_SHULKER_BOX
	kW CYAN_SHULKER_BOX
	kX PURPLE_SHULKER_BOX
	kY BLUE_SHULKER_BOX
	kZ BROWN_SHULKER_BOX
	ka MANGROVE_FENCE_GATE
	kb BAMBOO_FENCE_GATE
	kc SPRUCE_FENCE
	kd BIRCH_FENCE
	ke JUNGLE_FENCE
	kf ACACIA_FENCE
	kg CHERRY_FENCE
	kh DARK_OAK_FENCE
	ki MANGROVE_FENCE
	kj BAMBOO_FENCE
	kk SPRUCE_DOOR
	kl BIRCH_DOOR
	km JUNGLE_DOOR
	kn ACACIA_DOOR
	ko CHERRY_DOOR
	kp DARK_OAK_DOOR
	kq MANGROVE_DOOR
	kr BAMBOO_DOOR
	ks END_ROD
	kt CHORUS_PLANT
	ku CHORUS_FLOWER
	kv PURPUR_BLOCK
	kw PURPUR_PILLAR
	kx PURPUR_STAIRS
	ky END_STONE_BRICKS
	kz TORCHFLOWER_CROP
	l PODZOL
	lA GRAY_CONCRETE
	lB LIGHT_GRAY_CONCRETE
	lC CYAN_CONCRETE
	lD PURPLE_CONCRETE
	lE BLUE_CONCRETE
	lF BROWN_CONCRETE
	lG GREEN_CONCRETE
	lH RED_CONCRETE
	lI BLACK_CONCRETE
	lJ WHITE_CONCRETE_POWDER
	lK ORANGE_CONCRETE_POWDER
	lL MAGENTA_CONCRETE_POWDER
	lM LIGHT_BLUE_CONCRETE_POWDER
	lN YELLOW_CONCRETE_POWDER
	lO LIME_CONCRETE_POWDER
	lP PINK_CONCRETE_POWDER
	lQ GRAY_CONCRETE_POWDER
	lR LIGHT_GRAY_CONCRETE_POWDER
	lS CYAN_CONCRETE_POWDER
	lT PURPLE_CONCRETE_POWDER
	lU BLUE_CONCRETE_POWDER
	lV BROWN_CONCRETE_POWDER
	lW GREEN_CONCRETE_POWDER
	lX RED_CONCRETE_POWDER
	lY BLACK_CONCRETE_POWDER
	lZ KELP
	la GREEN_SHULKER_BOX
	lb RED_SHULKER_BOX
	lc BLACK_SHULKER_BOX
	ld WHITE_GLAZED_TERRACOTTA
	le ORANGE_GLAZED_TERRACOTTA
	lf MAGENTA_GLAZED_TERRACOTTA
	lg LIGHT_BLUE_GLAZED_TERRACOTTA
	lh YELLOW_GLAZED_TERRACOTTA
	li LIME_GLAZED_TERRACOTTA
	lj PINK_GLAZED_TERRACOTTA
	lk GRAY_GLAZED_TERRACOTTA
	ll LIGHT_GRAY_GLAZED_TERRACOTTA
	lm CYAN_GLAZED_TERRACOTTA
	ln PURPLE_GLAZED_TERRACOTTA
	lo BLUE_GLAZED_TERRACOTTA
	lp BROWN_GLAZED_TERRACOTTA
	lq GREEN_GLAZED_TERRACOTTA
	lr RED_GLAZED_TERRACOTTA
	ls BLACK_GLAZED_TERRACOTTA
	lt WHITE_CONCRETE
	lu ORANGE_CONCRETE
	lv MAGENTA_CONCRETE
	lw LIGHT_BLUE_CONCRETE
	lx YELLOW_CONCRETE
	ly LIME_CONCRETE
	lz PINK_CONCRETE
	m COBBLESTONE
	mA DEAD_FIRE_CORAL_FAN
	mB DEAD_HORN_CORAL_FAN
	mC TUBE_CORAL_FAN
	mD BRAIN_CORAL_FAN
	mE BUBBLE_CORAL_FAN
	mF FIRE_CORAL_FAN
	mG HORN_CORAL_FAN
	mH DEAD_TUBE_CORAL_WALL_FAN
	mI DEAD_BRAIN_CORAL_WALL_FAN
	mJ DEAD_BUBBLE_CORAL_WALL_FAN
	mK DEAD_FIRE_CORAL_WALL_FAN
	mL DEAD_HORN_CORAL_WALL_FAN
	mM TUBE_CORAL_WALL_FAN
	mN BRAIN_CORAL_WALL_FAN
	mO BUBBLE_CORAL_WALL_FAN
	mP FIRE_CORAL_WALL_FAN
	mQ HORN_CORAL_WALL_FAN
	mR SEA_PICKLE
	mS BLUE_ICE
	mT CONDUIT
	mU BAMBOO_SAPLING
	mV BAMBOO
	mW POTTED_BAMBOO
	mX VOID_AIR
	mY CAVE_AIR
	mZ BUBBLE_COLUMN
	ma KELP_PLANT
	mb DRIED_KELP_BLOCK
	mc TURTLE_EGG
	md DEAD_TUBE_CORAL_BLOCK
	me DEAD_BRAIN_CORAL_BLOCK
	mf DEAD_BUBBLE_CORAL_BLOCK
	mg DEAD_FIRE_CORAL_BLOCK
	mh DEAD_HORN_CORAL_BLOCK
	mi TUBE_CORAL_BLOCK
	mj BRAIN_CORAL_BLOCK
	mk BUBBLE_CORAL_BLOCK
	ml FIRE_CORAL_BLOCK
	mm HORN_CORAL_BLOCK
	mn DEAD_TUBE_CORAL
	mo DEAD_BRAIN_CORAL
	mp DEAD_BUBBLE_CORAL
	mq DEAD_FIRE_CORAL
	mr DEAD_HORN_CORAL
	ms TUBE_CORAL
	mt BRAIN_CORAL
	mu BUBBLE_CORAL
	mv FIRE_CORAL
	mw HORN_CORAL
	mx DEAD_TUBE_CORAL_FAN
	my DEAD_BRAIN_CORAL_FAN
	mz DEAD_BUBBLE_CORAL_FAN
	n OAK_PLANKS
	nA DIORITE_SLAB
	nB BRICK_WALL
	nC PRISMARINE_WALL
	nD RED_SANDSTONE_WALL
	nE MOSSY_STONE_BRICK_WALL
	nF GRANITE_WALL
	nG STONE_BRICK_WALL
	nH MUD_BRICK_WALL
	nI NETHER_BRICK_WALL
	nJ ANDESITE_WALL
	nK RED_NETHER_BRICK_WALL
	nL SANDSTONE_WALL
	nM END_STONE_BRICK_WALL
	nN DIORITE_WALL
	nO SCAFFOLDING
	nP LOOM
	nQ BARREL
	nR SMOKER
	nS BLAST_FURNACE
	nT CARTOGRAPHY_TABLE
	nU FLETCHING_TABLE
	nV GRINDSTONE
	nW LECTERN
	nX SMITHING_TABLE
	nY STONECUTTER
	nZ BELL
	na POLISHED_GRANITE_STAIRS
	nb SMOOTH_RED_SANDSTONE_STAIRS
	nc MOSSY_STONE_BRICK_STAIRS
	nd POLISHED_DIORITE_STAIRS
	ne MOSSY_COBBLESTONE_STAIRS
	nf END_STONE_BRICK_STAIRS
	ng STONE_STAIRS
	nh SMOOTH_SANDSTONE_STAIRS
	ni SMOOTH_QUARTZ_STAIRS
	nj GRANITE_STAIRS
	nk ANDESITE_STAIRS
	nl RED_NETHER_BRICK_STAIRS
	nm POLISHED_ANDESITE_STAIRS
	nn DIORITE_STAIRS
	no POLISHED_GRANITE_SLAB
	np SMOOTH_RED_SANDSTONE_SLAB
	nq MOSSY_STONE_BRICK_SLAB
	nr POLISHED_DIORITE_SLAB
	ns MOSSY_COBBLESTONE_SLAB
	nt END_STONE_BRICK_SLAB
	nu SMOOTH_SANDSTONE_SLAB
	nv SMOOTH_QUARTZ_SLAB
	nw GRANITE_SLAB
	nx ANDESITE_SLAB
	ny RED_NETHER_BRICK_SLAB
	nz POLISHED_ANDESITE_SLAB
	o SPRUCE_PLANKS
	oA CRIMSON_PLANKS
	oB WARPED_PLANKS
	oC CRIMSON_SLAB
	oD WARPED_SLAB
	oE CRIMSON_PRESSURE_PLATE
	oF WARPED_PRESSURE_PLATE
	oG CRIMSON_FENCE
	oH WARPED_FENCE
	oI CRIMSON_TRAPDOOR
	oJ WARPED_TRAPDOOR
	oK CRIMSON_FENCE_GATE
	oL WARPED_FENCE_GATE
	oM CRIMSON_STAIRS
	oN WARPED_STAIRS
	oO CRIMSON_BUTTON
	oP WARPED_BUTTON
	oQ CRIMSON_DOOR
	oR WARPED_DOOR
	oS CRIMSON_SIGN
	oT WARPED_SIGN
	oU CRIMSON_WALL_SIGN
	oV WARPED_WALL_SIGN
	oW STRUCTURE_BLOCK
	oX JIGSAW
	oY COMPOSTER
	oZ TARGET
	oa LANTERN
	ob SOUL_LANTERN
	oc CAMPFIRE
	od SOUL_CAMPFIRE
	oe SWEET_BERRY_BUSH
	of WARPED_STEM
	og STRIPPED_WARPED_STEM
	oh WARPED_HYPHAE
	oi STRIPPED_WARPED_HYPHAE
	oj WARPED_NYLIUM
	ok WARPED_FUNGUS
	ol WARPED_WART_BLOCK
	om WARPED_ROOTS
	on NETHER_SPROUTS
	oo CRIMSON_STEM
	op STRIPPED_CRIMSON_STEM
	oq CRIMSON_HYPHAE
	or STRIPPED_CRIMSON_HYPHAE
	os CRIMSON_NYLIUM
	ot CRIMSON_FUNGUS
	ou SHROOMLIGHT
	ov WEEPING_VINES
	ow WEEPING_VINES_PLANT
	ox TWISTING_VINES
	oy TWISTING_VINES_PLANT
	oz CRIMSON_ROOTS
	p BIRCH_PLANKS
	pA POLISHED_BLACKSTONE_SLAB
	pB POLISHED_BLACKSTONE_PRESSURE_PLATE
	pC POLISHED_BLACKSTONE_BUTTON
	pD POLISHED_BLACKSTONE_WALL
	pE CHISELED_NETHER_BRICKS
	pF CRACKED_NETHER_BRICKS
	pG QUARTZ_BRICKS
	pH CANDLE
	pI WHITE_CANDLE
	pJ ORANGE_CANDLE
	pK MAGENTA_CANDLE
	pL LIGHT_BLUE_CANDLE
	pM YELLOW_CANDLE
	pN LIME_CANDLE
	pO PINK_CANDLE
	pP GRAY_CANDLE
	pQ LIGHT_GRAY_CANDLE
	pR CYAN_CANDLE
	pS PURPLE_CANDLE
	pT BLUE_CANDLE
	pU BROWN_CANDLE
	pV GREEN_CANDLE
	pW RED_CANDLE
	pX BLACK_CANDLE
	pY CANDLE_CAKE
	pZ WHITE_CANDLE_CAKE
	pa BEE_NEST
	pb BEEHIVE
	pc HONEY_BLOCK
	pd HONEYCOMB_BLOCK
	pe NETHERITE_BLOCK
	pf ANCIENT_DEBRIS
	pg CRYING_OBSIDIAN
	ph RESPAWN_ANCHOR
	pi POTTED_CRIMSON_FUNGUS
	pj POTTED_WARPED_FUNGUS
	pk POTTED_CRIMSON_ROOTS
	pl POTTED_WARPED_ROOTS
	pm LODESTONE
	pn BLACKSTONE
	po BLACKSTONE_STAIRS
	pp BLACKSTONE_WALL
	pq BLACKSTONE_SLAB
	pr POLISHED_BLACKSTONE
	ps POLISHED_BLACKSTONE_BRICKS
	pt CRACKED_POLISHED_BLACKSTONE_BRICKS
	pu CHISELED_POLISHED_BLACKSTONE
	pv POLISHED_BLACKSTONE_BRICK_SLAB
	pw POLISHED_BLACKSTONE_BRICK_STAIRS
	px POLISHED_BLACKSTONE_BRICK_WALL
	py GILDED_BLACKSTONE
	pz POLISHED_BLACKSTONE_STAIRS
	q JUNGLE_PLANKS
	qA SCULK
	qB SCULK_VEIN
	qC SCULK_CATALYST
	qD SCULK_SHRIEKER
	qE OXIDIZED_COPPER
	qF WEATHERED_COPPER
	qG EXPOSED_COPPER
	qH COPPER_BLOCK
	qI COPPER_ORE
	qJ DEEPSLATE_COPPER_ORE
	qK OXIDIZED_CUT_COPPER
	qL WEATHERED_CUT_COPPER
	qM EXPOSED_CUT_COPPER
	qN CUT_COPPER
	qO OXIDIZED_CUT_COPPER_STAIRS
	qP WEATHERED_CUT_COPPER_STAIRS
	qQ EXPOSED_CUT_COPPER_STAIRS
	qR CUT_COPPER_STAIRS
	qS OXIDIZED_CUT_COPPER_SLAB
	qT WEATHERED_CUT_COPPER_SLAB
	qU EXPOSED_CUT_COPPER_SLAB
	qV CUT_COPPER_SLAB
	qW WAXED_COPPER_BLOCK
	qX WAXED_WEATHERED_COPPER
	qY WAXED_EXPOSED_COPPER
	qZ WAXED_OXIDIZED_COPPER
	qa ORANGE_CANDLE_CAKE
	qb MAGENTA_CANDLE_CAKE
	qc LIGHT_BLUE_CANDLE_CAKE
	qd YELLOW_CANDLE_CAKE
	qe LIME_CANDLE_CAKE
	qf PINK_CANDLE_CAKE
	qg GRAY_CANDLE_CAKE
	qh LIGHT_GRAY_CANDLE_CAKE
	qi CYAN_CANDLE_CAKE
	qj PURPLE_CANDLE_CAKE
	qk BLUE_CANDLE_CAKE
	ql BROWN_CANDLE_CAKE
	qm GREEN_CANDLE_CAKE
	qn RED_CANDLE_CAKE
	qo BLACK_CANDLE_CAKE
	qp AMETHYST_BLOCK
	qq BUDDING_AMETHYST
	qr AMETHYST_CLUSTER
	qs LARGE_AMETHYST_BUD
	qt MEDIUM_AMETHYST_BUD
	qu SMALL_AMETHYST_BUD
	qv TUFF
	qw CALCITE
	qx TINTED_GLASS
	qy POWDER_SNOW
	qz SCULK_SENSOR
	r ACACIA_PLANKS
	rA HANGING_ROOTS
	rB ROOTED_DIRT
	rC MUD
	rD DEEPSLATE
	rE COBBLED_DEEPSLATE
	rF COBBLED_DEEPSLATE_STAIRS
	rG COBBLED_DEEPSLATE_SLAB
	rH COBBLED_DEEPSLATE_WALL
	rI POLISHED_DEEPSLATE
	rJ POLISHED_DEEPSLATE_STAIRS
	rK POLISHED_DEEPSLATE_SLAB
	rL POLISHED_DEEPSLATE_WALL
	rM DEEPSLATE_TILES
	rN DEEPSLATE_TILE_STAIRS
	rO DEEPSLATE_TILE_SLAB
	rP DEEPSLATE_TILE_WALL
	rQ DEEPSLATE_BRICKS
	rR DEEPSLATE_BRICK_STAIRS
	rS DEEPSLATE_BRICK_SLAB
	rT DEEPSLATE_BRICK_WALL
	rU CHISELED_DEEPSLATE
	rV CRACKED_DEEPSLATE_BRICKS
	rW CRACKED_DEEPSLATE_TILES
	rX INFESTED_DEEPSLATE
	rY SMOOTH_BASALT
	rZ RAW_IRON_BLOCK
	ra WAXED_OXIDIZED_CUT_COPPER
	rb WAXED_WEATHERED_CUT_COPPER
	rc WAXED_EXPOSED_CUT_COPPER
	rd WAXED_CUT_COPPER
	re WAXED_OXIDIZED_CUT_COPPER_STAIRS
	rf WAXED_WEATHERED_CUT_COPPER_STAIRS
	rg WAXED_EXPOSED_CUT_COPPER_STAIRS
	rh WAXED_CUT_COPPER_STAIRS
	ri WAXED_OXIDIZED_CUT_COPPER_SLAB
	rj WAXED_WEATHERED_CUT_COPPER_SLAB
	rk WAXED_EXPOSED_CUT_COPPER_SLAB
	rl WAXED_CUT_COPPER_SLAB
	rm LIGHTNING_ROD
	rn POINTED_DRIPSTONE
	ro DRIPSTONE_BLOCK
	rp CAVE_VINES
	rq CAVE_VINES_PLANT
	rr SPORE_BLOSSOM
	rs AZALEA
	rt FLOWERING_AZALEA
	ru MOSS_CARPET
	rv PINK_PETALS
	rw MOSS_BLOCK
	rx BIG_DRIPLEAF
	ry BIG_DRIPLEAF_STEM
	rz SMALL_DRIPLEAF
	s CHERRY_PLANKS
	sa RAW_COPPER_BLOCK
	sb RAW_GOLD_BLOCK
	sc POTTED_AZALEA
	sd POTTED_FLOWERING_AZALEA
	se OCHRE_FROGLIGHT
	sf VERDANT_FROGLIGHT
	sg PEARLESCENT_FROGLIGHT
	sh FROGSPAWN
	si REINFORCED_DEEPSLATE
	sj DECORATED_POT
	t DARK_OAK_PLANKS
	u MANGROVE_PLANKS
	v BAMBOO_PLANKS
	w BAMBOO_MOSAIC
	x OAK_SAPLING
	y SPRUCE_SAPLING
	z BIRCH_SAPLING
	a ()V rebuildCache
	a (I)Ljava/util/function/ToIntFunction; litBlockEmission
	a (Ljava/lang/String;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/Block; register
	a (Lnet/minecraft/world/item/EnumColor;)Lnet/minecraft/world/level/block/BlockBed; bed
	a (Lnet/minecraft/world/item/EnumColor;Lnet/minecraft/world/level/block/state/BlockBase$Info;)Lnet/minecraft/world/level/block/BlockShulkerBox; shulkerBox
	a (Lnet/minecraft/world/level/block/SoundEffectType;)Lnet/minecraft/world/level/block/BlockLeaves; leaves
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z always
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/EntityTypes;)Ljava/lang/Boolean; never
	a (Lnet/minecraft/world/level/block/state/properties/BlockSetType;)Lnet/minecraft/world/level/block/BlockButtonAbstract; woodenButton
	a (Lnet/minecraft/world/level/material/MaterialMapColor;)Lnet/minecraft/world/level/block/Block; netherStem
	a (Lnet/minecraft/world/level/material/MaterialMapColor;Lnet/minecraft/world/level/material/MaterialMapColor;)Lnet/minecraft/world/level/block/BlockRotatable; log
	a (Lnet/minecraft/world/level/material/MaterialMapColor;Lnet/minecraft/world/level/material/MaterialMapColor;Lnet/minecraft/world/level/block/SoundEffectType;[Lnet/minecraft/world/flag/FeatureFlag;)Lnet/minecraft/world/level/block/BlockRotatable; log
	a (Z)Lnet/minecraft/world/level/block/piston/BlockPiston; pistonBase
	b ()Lnet/minecraft/world/level/block/BlockButtonAbstract; stoneButton
	b (Lnet/minecraft/world/item/EnumColor;)Lnet/minecraft/world/level/block/BlockStainedGlass; stainedGlass
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z never
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/EntityTypes;)Ljava/lang/Boolean; always
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/EntityTypes;)Ljava/lang/Boolean; ocelotOrParrot
net/minecraft/world/level/block/BuddingAmethystBlock net/minecraft/world/level/block/BuddingAmethystBlock
	a GROWTH_CHANCE
	b DIRECTIONS
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	d (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/EnumPistonReaction; getPistonPushReaction
	g (Lnet/minecraft/world/level/block/state/IBlockData;)Z canClusterGrowAtState
net/minecraft/world/level/block/CandleBlock net/minecraft/world/level/block/CandleBlock
	c MIN_CANDLES
	d MAX_CANDLES
	e CANDLES
	f LIT
	g WATERLOGGED
	h LIGHT_EMISSION
	i PARTICLE_OFFSETS
	j ONE_AABB
	k TWO_AABB
	l THREE_AABB
	m FOUR_AABB
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/Fluid;)Z placeLiquid
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Ljava/lang/Iterable; getParticleOffsets
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/item/context/BlockActionContext;)Z canBeReplaced
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	c (Lnet/minecraft/world/level/block/state/IBlockData;)Z canBeLit
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	g (Lnet/minecraft/world/level/block/state/IBlockData;)Z canLight
net/minecraft/world/level/block/CandleCakeBlock net/minecraft/world/level/block/CandleCakeBlock
	c LIT
	d AABB_OFFSET
	e CAKE_SHAPE
	f CANDLE_SHAPE
	g SHAPE
	h BY_CANDLE
	i PARTICLE_OFFSETS
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/item/ItemStack; getCloneItemStack
	a (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/state/IBlockData; byCandle
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Ljava/lang/Iterable; getParticleOffsets
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Z candleHit
	d_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z hasAnalogOutputSignal
	g (Lnet/minecraft/world/level/block/state/IBlockData;)Z canLight
net/minecraft/world/level/block/CarpetBlock net/minecraft/world/level/block/CarpetBlock
	a SHAPE
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
net/minecraft/world/level/block/CaveVines net/minecraft/world/level/block/CaveVines
	p_ SHAPE
	q_ BERRIES
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z hasGlowBerries
	h_ (I)Ljava/util/function/ToIntFunction; emission
net/minecraft/world/level/block/CaveVinesBlock net/minecraft/world/level/block/CaveVinesBlock
	f CHANCE_OF_BERRIES_ON_GROWTH
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V performBonemeal
	a (Lnet/minecraft/util/RandomSource;)I getBlocksToGrowWhenBonemealed
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/item/ItemStack; getCloneItemStack
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/block/state/IBlockData; getGrowIntoState
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/state/IBlockData; updateBodyAfterConvertedFromHead
	b ()Lnet/minecraft/world/level/block/Block; getBodyBlock
	g (Lnet/minecraft/world/level/block/state/IBlockData;)Z canGrowInto
net/minecraft/world/level/block/CeilingHangingSignBlock net/minecraft/world/level/block/CeilingHangingSignBlock
	a ROTATION
	b ATTACHED
	c AABB_OFFSET
	d SHAPE
	h AABBS
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getBlockSupportShape
net/minecraft/world/level/block/ChangeOverTimeBlock net/minecraft/world/level/block/ChangeOverTimeBlock
	u_ SCAN_DISTANCE
	a ()F getChanceModifier
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Ljava/util/Optional; getNext
	a_ (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V onRandomTick
	b ()Ljava/lang/Enum; getAge
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V applyChangeOverTime
net/minecraft/world/level/block/ChiseledBookShelfBlock net/minecraft/world/level/block/ChiseledBookShelfBlock
	a BOOKS_PER_ROW
	b SLOT_OCCUPIED_PROPERTIES
	c MAX_BOOKS_IN_STORAGE
	a (F)I getSection
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/block/entity/ChiseledBookShelfBlockEntity;I)V removeBook
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/block/entity/ChiseledBookShelfBlockEntity;Lnet/minecraft/world/item/ItemStack;I)V addBook
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onRemove
	a (Lnet/minecraft/world/phys/MovingObjectPositionBlock;Lnet/minecraft/core/EnumDirection;)Ljava/util/Optional; getRelativeHitCoordinatesForBlockFace
	a (Lnet/minecraft/world/phys/Vec2F;)I getHitSlot
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
	d_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z hasAnalogOutputSignal
net/minecraft/world/level/block/DecoratedPotBlock net/minecraft/world/level/block/DecoratedPotBlock
	a BOUNDING_BOX
	b HORIZONTAL_FACING
	c WATERLOGGED
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/player/EntityHuman;)V playerWillDestroy
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onRemove
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
net/minecraft/world/level/block/DropExperienceBlock net/minecraft/world/level/block/DropExperienceBlock
	a xpRange
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/item/ItemStack;Z)V spawnAfterBreak
net/minecraft/world/level/block/FrogspawnBlock net/minecraft/world/level/block/FrogspawnBlock
	a SHAPE
	b MIN_TADPOLES_SPAWN
	c MAX_TADPOLES_SPAWN
	d DEFAULT_MIN_HATCH_TICK_DELAY
	e DEFAULT_MAX_HATCH_TICK_DELAY
	f minHatchTickDelay
	g maxHatchTickDelay
	a (II)V setHatchDelay
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V hatchFrogspawn
	a (Lnet/minecraft/util/RandomSource;)I getFrogspawnHatchDelay
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z mayPlaceOn
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V destroyBlock
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;)V entityInside
	b ()V setDefaultHatchDelay
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V spawnTadpoles
	b (Lnet/minecraft/util/RandomSource;)D getRandomTadpolePositionOffset
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
net/minecraft/world/level/block/GlowLichenBlock net/minecraft/world/level/block/GlowLichenBlock
	b WATERLOGGED
	c spreader
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V performBonemeal
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/item/context/BlockActionContext;)Z canBeReplaced
	b (I)Ljava/util/function/ToIntFunction; emission
	c ()Lnet/minecraft/world/level/block/MultifaceSpreader; getSpreader
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z propagatesSkylightDown
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
net/minecraft/world/level/block/HangingRootsBlock net/minecraft/world/level/block/HangingRootsBlock
	a SHAPE
	b WATERLOGGED
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
net/minecraft/world/level/block/LayeredCauldronBlock net/minecraft/world/level/block/LayeredCauldronBlock
	c MIN_FILL_LEVEL
	d MAX_FILL_LEVEL
	e LEVEL
	f RAIN
	g SNOW
	h BASE_CONTENT_HEIGHT
	i HEIGHT_PER_LEVEL
	j fillPredicate
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/level/block/state/IBlockData;)D getContentHeight
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;)V entityInside
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/biome/BiomeBase$Precipitation;)V handlePrecipitation
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/material/FluidType;)V receiveStalactiteDrip
	a (Lnet/minecraft/world/level/material/FluidType;)Z canReceiveStalactiteDrip
	c (Lnet/minecraft/world/level/block/state/IBlockData;)Z isFull
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V handleEntityOnFireInside
	e (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V lowerFillLevel
net/minecraft/world/level/block/LightBlock net/minecraft/world/level/block/LightBlock
	a MAX_LEVEL
	b LEVEL
	c WATERLOGGED
	d LIGHT_EMISSION
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/ItemStack;I)Lnet/minecraft/world/item/ItemStack; setLightOnStack
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/item/ItemStack; getCloneItemStack
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)F getShadeBrightness
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z propagatesSkylightDown
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
net/minecraft/world/level/block/LightningRodBlock net/minecraft/world/level/block/LightningRodBlock
	b WATERLOGGED
	c POWERED
	d RANGE
	j ACTIVATION_TICKS
	k SPARK_CYCLE
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/phys/MovingObjectPositionBlock;Lnet/minecraft/world/entity/projectile/IProjectile;)V onProjectileHit
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onRemove
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getDirectSignal
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V onLightningStrike
	e (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V updateNeighbours
	f_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isSignalSource
net/minecraft/world/level/block/MangrovePropaguleBlock net/minecraft/world/level/block/MangrovePropaguleBlock
	a AGE
	b MAX_AGE
	c HANGING
	g SHAPE_PER_AGE
	h WATERLOGGED
	i GROW_TALL_MANGROVE_PROBABILITY
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V performBonemeal
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	b (I)Lnet/minecraft/world/level/block/state/IBlockData; createNewHangingPropagule
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	c ()Lnet/minecraft/world/level/block/state/IBlockData; createNewHangingPropagule
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z mayPlaceOn
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Z isHanging
	n (Lnet/minecraft/world/level/block/state/IBlockData;)Z isFullyGrown
net/minecraft/world/level/block/MangroveRootsBlock net/minecraft/world/level/block/MangroveRootsBlock
	a WATERLOGGED
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;)Z skipRendering
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
net/minecraft/world/level/block/MudBlock net/minecraft/world/level/block/MudBlock
	a SHAPE
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)F getShadeBrightness
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getVisualShape
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getBlockSupportShape
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getCollisionShape
net/minecraft/world/level/block/MultifaceBlock net/minecraft/world/level/block/MultifaceBlock
	a DIRECTIONS
	b AABB_OFFSET
	c UP_AABB
	d DOWN_AABB
	e WEST_AABB
	f EAST_AABB
	g NORTH_AABB
	h SOUTH_AABB
	i PROPERTY_BY_DIRECTION
	j SHAPE_BY_DIRECTION
	k shapesCache
	l canRotate
	m canMirrorX
	n canMirrorZ
	a (B)Ljava/util/Set; unpack
	a (Ldbr$a;)V createBlockStateDefinition
	a (Ljava/util/Collection;)B pack
	a (Lnet/minecraft/core/EnumDirection;)Z isFaceSupported
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z canAttachTo
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Z isValidStateForPlacement
	a (Lnet/minecraft/world/level/block/state/BlockStateList;)Lnet/minecraft/world/level/block/state/IBlockData; getDefaultMultifaceState
	a (Lnet/minecraft/world/level/block/state/IBlockData;Ljava/util/function/Function;)Lnet/minecraft/world/level/block/state/IBlockData; mapDirections
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;)Z hasFace
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/item/context/BlockActionContext;)Z canBeReplaced
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/properties/BlockStateBoolean;)Lnet/minecraft/world/level/block/state/IBlockData; removeFace
	b (Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/world/level/block/state/properties/BlockStateBoolean; getFaceProperty
	c ()Lnet/minecraft/world/level/block/MultifaceSpreader; getSpreader
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	g ()Z isWaterloggable
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Ljava/util/Set; availableFaces
	n (Lnet/minecraft/world/level/block/state/IBlockData;)Z hasAnyFace
	o (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/phys/shapes/VoxelShape; calculateMultifaceShape
	p (Lnet/minecraft/world/level/block/state/IBlockData;)Z hasAnyVacantFace
net/minecraft/world/level/block/MultifaceSpreader net/minecraft/world/level/block/MultifaceSpreader
	a DEFAULT_SPREAD_ORDER
	b config
	a (Lnet/minecraft/world/level/GeneratorAccess;Lcue$c;Z)Ljava/util/Optional; spreadToFace
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/core/EnumDirection;Z)Ljava/util/Optional; spreadFromFaceTowardDirection
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/util/RandomSource;Z)Ljava/util/Optional; spreadFromFaceTowardRandomDirection
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;Z)J spreadFromFaceTowardAllDirections
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Ljava/util/Optional; spreadFromRandomFaceTowardRandomDirection
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Z)J spreadAll
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Z canSpreadInAnyDirection
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/core/EnumDirection;Lcue$d;)Ljava/util/Optional; getSpreadFromFaceTowardDirection
net/minecraft/world/level/block/PiglinWallSkullBlock net/minecraft/world/level/block/PiglinWallSkullBlock
	b AABBS
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
net/minecraft/world/level/block/PinkPetalsBlock net/minecraft/world/level/block/PinkPetalsBlock
	a MIN_FLOWERS
	b MAX_FLOWERS
	c FACING
	d AMOUNT
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V performBonemeal
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/item/context/BlockActionContext;)Z canBeReplaced
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
net/minecraft/world/level/block/PointedDripstoneBlock net/minecraft/world/level/block/PointedDripstoneBlock
	E STALAGMITE_FALL_DISTANCE_OFFSET
	F STALAGMITE_FALL_DAMAGE_MODIFIER
	G AVERAGE_DAYS_PER_GROWTH
	H GROWTH_PROBABILITY_PER_RANDOM_TICK
	I MAX_GROWTH_LENGTH
	J MAX_STALAGMITE_SEARCH_RANGE_WHEN_GROWING
	K STALACTITE_DRIP_START_PIXEL
	L TIP_MERGE_SHAPE
	M TIP_SHAPE_UP
	N TIP_SHAPE_DOWN
	O FRUSTUM_SHAPE
	P MIDDLE_SHAPE
	Q BASE_SHAPE
	R MAX_HORIZONTAL_OFFSET
	S REQUIRED_SPACE_TO_DRIP_THROUGH_NON_SOLID_BLOCK
	a TIP_DIRECTION
	b THICKNESS
	c WATERLOGGED
	d MAX_SEARCH_LENGTH_WHEN_CHECKING_DRIP_TYPE
	e DELAY_BEFORE_FALLING
	f DRIP_PROBABILITY_PER_ANIMATE_TICK
	g DRIP_PROBABILITY_PER_ANIMATE_TICK_IF_UNDER_LIQUID_SOURCE
	h MAX_SEARCH_LENGTH_BETWEEN_STALACTITE_TIP_AND_CAULDRON
	i WATER_TRANSFER_PROBABILITY_PER_RANDOM_TICK
	j LAVA_TRANSFER_PROBABILITY_PER_RANDOM_TICK
	k MIN_TRIDENT_VELOCITY_TO_BREAK_DRIPSTONE
	l STALACTITE_DAMAGE_PER_FALL_DISTANCE_AND_SIZE
	m STALACTITE_MAX_DAMAGE
	n MAX_STALACTITE_HEIGHT_FOR_DAMAGE_CALCULATION
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/material/FluidType; getCauldronFillFluidType
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)V grow
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; getFallDamageSource
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection$EnumAxisDirection;Ljava/util/function/BiPredicate;Ljava/util/function/Predicate;I)Ljava/util/Optional; findBlockVertical
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/properties/DripstoneThickness;)V createDripstone
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;Z)Lnet/minecraft/world/level/block/state/properties/DripstoneThickness; calculateDripstoneThickness
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/core/BlockPosition; findStalactiteTipAboveCauldron
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/item/EntityFallingBlock;)V onBrokenAfterFall
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V spawnDripParticle
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;I)Ljava/util/Optional; findRootBlock
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/FluidType;)V spawnDripParticle
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/material/FluidType;)Lnet/minecraft/core/BlockPosition; findFillableCauldronBelowStalactiteTip
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;F)V fallOn
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/phys/MovingObjectPositionBlock;Lnet/minecraft/world/entity/projectile/IProjectile;)V onProjectileHit
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/material/FluidType;)Lnet/minecraft/world/level/material/FluidType; getDripFluid
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;)Z isUnmergedTipWithDirection
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;)V spawnFallingStalactite
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;F)V maybeTransferFluid
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)V createMergedTips
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;IZ)Lnet/minecraft/core/BlockPosition; findTip
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;)Z canGrow
	a (Lnet/minecraft/world/level/block/state/IBlockData;Z)Z isTip
	a (Lnet/minecraft/world/level/material/FluidType;)Z canFillCauldron
	a_ (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z isCollisionShapeFullBlock
	al_ ()Ljava/util/function/Predicate; getHurtsEntitySelector
	am_ ()F getMaxHorizontalOffset
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;)V growStalagmiteBelow
	b (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z canDripThrough
	b (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/core/EnumDirection; calculateTipDirection
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Ljava/util/Optional; getFluidAboveStalactite
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;)Z isPointedDripstoneWithDirection
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;)Z canTipGrow
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z isStalactiteStartPos
	c (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Z isValidPointedDripstonePlacement
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V growStalactiteOrStalagmiteIfPossible
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	d (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/EnumPistonReaction; getPistonPushReaction
	f (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getOcclusionShape
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Z canDrip
	n (Lnet/minecraft/world/level/block/state/IBlockData;)Z isStalactite
	o (Lnet/minecraft/world/level/block/state/IBlockData;)Z isStalagmite
net/minecraft/world/level/block/PowderSnowBlock net/minecraft/world/level/block/PowderSnowBlock
	a HORIZONTAL_PARTICLE_MOMENTUM_FACTOR
	b IN_BLOCK_HORIZONTAL_SPEED_MULTIPLIER
	c IN_BLOCK_VERTICAL_SPEED_MULTIPLIER
	d NUM_BLOCKS_TO_FALL_INTO_BLOCK
	e FALLING_COLLISION_SHAPE
	f MINIMUM_FALL_DISTANCE_FOR_SOUND
	g MINIMUM_FALL_DISTANCE_FOR_BIG_SOUND
	a (Lnet/minecraft/world/entity/Entity;)Z canEntityWalkOnPowderSnow
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;F)V fallOn
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;)V entityInside
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;)Z skipRendering
	an_ ()Ljava/util/Optional; getPickupSound
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getVisualShape
	c (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/item/ItemStack; pickupBlock
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getCollisionShape
	f (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getOcclusionShape
net/minecraft/world/level/block/RodBlock net/minecraft/world/level/block/RodBlock
	e AABB_MIN
	f AABB_MAX
	g Y_AXIS_AABB
	h Z_AXIS_AABB
	i X_AXIS_AABB
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
net/minecraft/world/level/block/SculkBehaviour net/minecraft/world/level/block/SculkBehaviour
	r_ DEFAULT
	a ()B getSculkSpreadDelay
	a (Lcvz$a;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/block/SculkSpreader;Z)I attemptUseCharge
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z depositCharge
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Ljava/util/Collection;Z)Z attemptSpreadVein
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V onDischarged
	b ()Z canChangeBlockStateOnSpread
	i_ (I)I updateDecayDelay
net/minecraft/world/level/block/SculkCatalystBlock net/minecraft/world/level/block/SculkCatalystBlock
	a PULSE_TICKS
	b PULSE
	c xpRange
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/util/RandomSource;)V bloom
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/block/entity/TileEntity;)Lnet/minecraft/world/level/gameevent/GameEventListener; getListener
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; getTicker
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/item/ItemStack;Z)V spawnAfterBreak
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
net/minecraft/world/level/block/SculkSensorBlock net/minecraft/world/level/block/SculkSensorBlock
	a ACTIVE_TICKS
	b COOLDOWN_TICKS
	c PHASE
	d POWER
	e WATERLOGGED
	f SHAPE
	g listenerRange
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/block/entity/TileEntity;)Lnet/minecraft/world/level/gameevent/GameEventListener; getListener
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;I)V activate
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V updateNeighbours
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V deactivate
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/Entity;)V stepOn
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; getTicker
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/item/ItemStack;Z)V spawnAfterBreak
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)I getSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onRemove
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	d ()I getListenerRange
	d_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z hasAnalogOutputSignal
	f_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isSignalSource
	g_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z useShapeForLightOcclusion
	h (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/state/properties/SculkSensorPhase; getPhase
	n (Lnet/minecraft/world/level/block/state/IBlockData;)Z canActivate
net/minecraft/world/level/block/SculkShriekerBlock net/minecraft/world/level/block/SculkShriekerBlock
	a SHRIEKING
	b WATERLOGGED
	c CAN_SUMMON
	d COLLIDER
	e TOP_Y
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/block/entity/TileEntity;)Lnet/minecraft/world/level/gameevent/GameEventListener; getListener
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/Entity;)V stepOn
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/TileEntityTypes;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; getTicker
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/item/ItemStack;Z)V spawnAfterBreak
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onRemove
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getCollisionShape
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	f (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getOcclusionShape
	g_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z useShapeForLightOcclusion
net/minecraft/world/level/block/SculkSpreader net/minecraft/world/level/block/SculkSpreader
	a MAX_GROWTH_RATE_RADIUS
	b MAX_CHARGE
	c MAX_DECAY_FACTOR
	d SHRIEKER_PLACEMENT_RATE
	e MAX_CURSORS
	f isWorldGeneration
	g replaceableBlocks
	h growthSpawnCost
	i noGrowthRadius
	j chargeDecayRate
	k additionalDecayRate
	l cursors
	m LOGGER
	a ()Lnet/minecraft/world/level/block/SculkSpreader; createLevelSpreader
	a (Lcvz$a;)V addCursor
	a (Lnet/minecraft/core/BlockPosition;I)V addCursors
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;Z)V updateCursors
	b ()Lnet/minecraft/world/level/block/SculkSpreader; createWorldGenSpreader
	b (Lnet/minecraft/nbt/NBTTagCompound;)V save
	c ()Lnet/minecraft/tags/TagKey; replaceableBlocks
	d ()I growthSpawnCost
	e ()I noGrowthRadius
	f ()I chargeDecayRate
	g ()I additionalDecayRate
	h ()Z isWorldGeneration
	i ()Ljava/util/List; getCursors
	j ()V clear
net/minecraft/world/level/block/SculkVeinBlock net/minecraft/world/level/block/SculkVeinBlock
	b WATERLOGGED
	c veinSpreader
	d sameSpaceSpreader
	a (Lcvz$a;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/block/SculkSpreader;Z)I attemptUseCharge
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Ljava/util/Collection;)Z regrow
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;)Z hasSubstrateAccess
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V onDischarged
	a (Lnet/minecraft/world/level/block/SculkSpreader;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z attemptPlaceSculk
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/item/context/BlockActionContext;)Z canBeReplaced
	c ()Lnet/minecraft/world/level/block/MultifaceSpreader; getSpreader
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	d ()Lnet/minecraft/world/level/block/MultifaceSpreader; getSameSpaceSpreader
	d (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/EnumPistonReaction; getPistonPushReaction
net/minecraft/world/level/block/SeagrassBlock net/minecraft/world/level/block/SeagrassBlock
	a AABB_OFFSET
	b SHAPE
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V performBonemeal
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/Fluid;)Z placeLiquid
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/FluidType;)Z canPlaceLiquid
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z mayPlaceOn
net/minecraft/world/level/block/SmallDripleafBlock net/minecraft/world/level/block/SmallDripleafBlock
	b FACING
	c AABB_OFFSET
	d SHAPE
	e WATERLOGGED
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V performBonemeal
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/item/ItemStack;)V setPlacedBy
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	ap_ ()F getMaxVerticalOffset
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z mayPlaceOn
net/minecraft/world/level/block/SporeBlossomBlock net/minecraft/world/level/block/SporeBlossomBlock
	a SHAPE
	b ADD_PARTICLE_ATTEMPTS
	c PARTICLE_XZ_RADIUS
	d PARTICLE_Y_MAX
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
net/minecraft/world/level/block/SuspiciousSandBlock net/minecraft/world/level/block/SuspiciousSandBlock
	a TICK_DELAY
	b DUSTED
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/item/EntityFallingBlock;)V onBrokenAfterFall
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V tick
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)V onPlace
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/EnumRenderType; getRenderShape
	d (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/EnumPistonReaction; getPistonPushReaction
net/minecraft/world/level/block/TallSeagrassBlock net/minecraft/world/level/block/TallSeagrassBlock
	b HALF
	c AABB_OFFSET
	d SHAPE
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/Fluid;)Z placeLiquid
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/item/ItemStack; getCloneItemStack
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/FluidType;)Z canPlaceLiquid
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canSurvive
	c_ (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z mayPlaceOn
net/minecraft/world/level/block/TorchflowerCropBlock net/minecraft/world/level/block/TorchflowerCropBlock
	a MAX_AGE
	b AGE
	e AABB_OFFSET
	f SHAPE_BY_AGE
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/level/World;)I getBonemealAgeIncrease
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	b ()Lnet/minecraft/world/level/block/state/properties/BlockStateInteger; getAgeProperty
	b (I)Lnet/minecraft/world/level/block/state/IBlockData; getStateForAge
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	c ()I getMaxAge
	d ()Lnet/minecraft/world/level/IMaterial; getBaseSeedId
net/minecraft/world/level/block/WallHangingSignBlock net/minecraft/world/level/block/WallHangingSignBlock
	a FACING
	b PLANK_NORTHSOUTH
	c PLANK_EASTWEST
	d SHAPE_NORTHSOUTH
	h SHAPE_EASTWEST
	i AABBS
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/entity/TileEntity; newBlockEntity
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Z canAttachTo
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; updateShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/pathfinder/PathMode;)Z isPathfindable
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getShape
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockMirror;)Lnet/minecraft/world/level/block/state/IBlockData; mirror
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z canPlace
	b_ (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/shapes/VoxelShape; getBlockSupportShape
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/shapes/VoxelShapeCollision;)Lnet/minecraft/world/phys/shapes/VoxelShape; getCollisionShape
	h ()Ljava/lang/String; getDescriptionId
net/minecraft/world/level/block/WeatheringCopper net/minecraft/world/level/block/WeatheringCopper
	s_ NEXT_BY_BLOCK
	t_ PREVIOUS_BY_BLOCK
	a ()F getChanceModifier
	a (Lnet/minecraft/world/level/block/Block;)Ljava/util/Optional; getPrevious
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Ljava/util/Optional; getNext
	b (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/Block; getFirst
	b (Lnet/minecraft/world/level/block/state/IBlockData;)Ljava/util/Optional; getPrevious
	c (Lnet/minecraft/world/level/block/Block;)Ljava/util/Optional; getNext
	c (Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/state/IBlockData; getFirst
net/minecraft/world/level/block/WeatheringCopperFullBlock net/minecraft/world/level/block/WeatheringCopperFullBlock
	d weatherState
	b ()Ljava/lang/Enum; getAge
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	e_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isRandomlyTicking
	g ()Lcyg$a; getAge
net/minecraft/world/level/block/WeatheringCopperSlabBlock net/minecraft/world/level/block/WeatheringCopperSlabBlock
	e weatherState
	b ()Ljava/lang/Enum; getAge
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	e_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isRandomlyTicking
	g ()Lcyg$a; getAge
net/minecraft/world/level/block/WeatheringCopperStairBlock net/minecraft/world/level/block/WeatheringCopperStairBlock
	G weatherState
	b ()Ljava/lang/Enum; getAge
	b (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V randomTick
	e_ (Lnet/minecraft/world/level/block/state/IBlockData;)Z isRandomlyTicking
	g ()Lcyg$a; getAge
net/minecraft/world/level/block/entity/BannerPatterns net/minecraft/world/level/block/entity/BannerPatterns
	A HALF_VERTICAL
	B HALF_HORIZONTAL
	C HALF_VERTICAL_MIRROR
	D HALF_HORIZONTAL_MIRROR
	E BORDER
	F CURLY_BORDER
	G GRADIENT
	H GRADIENT_UP
	I BRICKS
	J GLOBE
	K CREEPER
	L SKULL
	M FLOWER
	N MOJANG
	O PIGLIN
	a BASE
	b SQUARE_BOTTOM_LEFT
	c SQUARE_BOTTOM_RIGHT
	d SQUARE_TOP_LEFT
	e SQUARE_TOP_RIGHT
	f STRIPE_BOTTOM
	g STRIPE_TOP
	h STRIPE_LEFT
	i STRIPE_RIGHT
	j STRIPE_CENTER
	k STRIPE_MIDDLE
	l STRIPE_DOWNRIGHT
	m STRIPE_DOWNLEFT
	n STRIPE_SMALL
	o CROSS
	p STRAIGHT_CROSS
	q TRIANGLE_BOTTOM
	r TRIANGLE_TOP
	s TRIANGLES_BOTTOM
	t TRIANGLES_TOP
	u DIAGONAL_LEFT
	v DIAGONAL_RIGHT
	w DIAGONAL_LEFT_MIRROR
	x DIAGONAL_RIGHT_MIRROR
	y CIRCLE_MIDDLE
	z RHOMBUS_MIDDLE
	a (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; create
	a (Lnet/minecraft/core/IRegistry;)Lnet/minecraft/world/level/block/entity/EnumBannerPatternType; bootstrap
net/minecraft/world/level/block/entity/ChestLidController net/minecraft/world/level/block/entity/ChestLidController
	a shouldBeOpen
	b openness
	c oOpenness
	a ()V tickLid
	a (F)F getOpenness
	a (Z)V shouldBeOpen
net/minecraft/world/level/block/entity/ChiseledBookShelfBlockEntity net/minecraft/world/level/block/entity/ChiseledBookShelfBlockEntity
	c MAX_BOOKS_IN_STORAGE
	d LOGGER
	e items
	f lastInteractedSlot
	a ()V clearContent
	a (I)Lnet/minecraft/world/item/ItemStack; getItem
	a (II)Lnet/minecraft/world/item/ItemStack; removeItem
	a (ILnet/minecraft/world/item/ItemStack;)V setItem
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z stillValid
	aa_ ()Z isEmpty
	ab_ ()I getMaxStackSize
	b ()I getContainerSize
	b (I)Lnet/minecraft/world/item/ItemStack; removeItemNoUpdate
	b (ILnet/minecraft/world/item/ItemStack;)Z canPlaceItem
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
	c (I)V updateState
	f ()I count
	g ()I getLastInteractedSlot
net/minecraft/world/level/block/entity/ContainerOpenersCounter net/minecraft/world/level/block/entity/ContainerOpenersCounter
	a CHECK_TICK_DELAY
	b openCount
	a ()I getOpenerCount
	a (Lnet/minecraft/world/entity/player/EntityHuman;)Z isOwnContainer
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V incrementOpeners
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)I getOpenCount
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V onOpen
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;II)V openerCountChanged
	b (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V decrementOpeners
	b (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V onClose
	c (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V recheckOpeners
	d (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V scheduleRecheck
net/minecraft/world/level/block/entity/DecoratedPotBlockEntity net/minecraft/world/level/block/entity/DecoratedPotBlockEntity
	a TAG_SHARDS
	b SHARDS_IN_POT
	c isBroken
	d shards
	a (Ljava/util/List;Lnet/minecraft/nbt/NBTTagCompound;)V saveShards
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/world/item/ItemStack;)V setFromItem
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/EntityHuman;)V playerDestroy
	aq_ ()Lnet/minecraft/nbt/NBTTagCompound; getUpdateTag
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
	c ()Lnet/minecraft/network/protocol/game/PacketPlayOutTileEntityData; getUpdatePacket
	d ()Lnet/minecraft/world/item/ItemStack; getItem
	f ()Ljava/util/List; getShards
	g ()Z isBroken
	h ()Lnet/minecraft/network/protocol/Packet; getUpdatePacket
	i ()Lnet/minecraft/core/EnumDirection; getDirection
net/minecraft/world/level/block/entity/DecoratedPotPatterns net/minecraft/world/level/block/entity/DecoratedPotPatterns
	a BASE_NAME
	b BASE
	c BRICK_NAME
	d ARCHER_NAME
	e PRIZE_NAME
	f ARMS_UP_NAME
	g SKULL_NAME
	h BRICK
	i ARCHER
	j PRIZE
	k ARMS_UP
	l SKULL
	m ITEM_TO_POT_TEXTURE
	a (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; create
	a (Lnet/minecraft/core/IRegistry;)Ljava/lang/String; bootstrap
	a (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/resources/MinecraftKey; location
	a (Lnet/minecraft/world/item/Item;)Lnet/minecraft/resources/ResourceKey; getResourceKey
net/minecraft/world/level/block/entity/HangingSignBlockEntity net/minecraft/world/level/block/entity/HangingSignBlockEntity
	b MAX_TEXT_LINE_WIDTH
	c TEXT_LINE_HEIGHT
	c ()I getTextLineHeight
	d ()I getMaxTextLineWidth
net/minecraft/world/level/block/entity/SculkCatalystBlockEntity net/minecraft/world/level/block/entity/SculkCatalystBlockEntity
	a blockPosSource
	b sculkSpreader
	a ()Lnet/minecraft/world/level/gameevent/PositionSource; getListenerSource
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/gameevent/GameEvent;Ldga$a;Lnet/minecraft/world/phys/Vec3D;)Z handleGameEvent
	a (Lnet/minecraft/world/entity/EntityLiving;)V tryAwardItSpreadsAdvancement
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/entity/SculkCatalystBlockEntity;)V serverTick
	b ()I getListenerRadius
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
	c ()Ldgc$a; getDeliveryMode
	d ()Lnet/minecraft/world/level/block/SculkSpreader; getSculkSpreader
net/minecraft/world/level/block/entity/SculkSensorBlockEntity net/minecraft/world/level/block/entity/SculkSensorBlockEntity
	a LOGGER
	b listener
	c lastVibrationFrequency
	a (FI)I getRedstoneStrengthForDistance
	a (I)V setLastVibrationFrequency
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/gameevent/GameEventListener;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/gameevent/GameEvent;Ldga$a;)Z shouldListen
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/gameevent/GameEventListener;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;F)V onSignalReceive
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
	c ()Lnet/minecraft/world/level/gameevent/vibrations/VibrationListener; getListener
	d ()I getLastVibrationFrequency
	f ()V onSignalSchedule
	w ()Z canTriggerAvoidVibration
net/minecraft/world/level/block/entity/SculkShriekerBlockEntity net/minecraft/world/level/block/entity/SculkShriekerBlockEntity
	a LOGGER
	b LISTENER_RADIUS
	c WARNING_SOUND_RADIUS
	d WARDEN_SPAWN_ATTEMPTS
	e WARDEN_SPAWN_RANGE_XZ
	f WARDEN_SPAWN_RANGE_Y
	g DARKNESS_RADIUS
	h SOUND_BY_LEVEL
	i SHRIEKING_TICKS
	j warningLevel
	k listener
	a ()Lnet/minecraft/tags/TagKey; getListenableEvents
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/server/level/WorldServer;)V tryRespond
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/server/level/EntityPlayer;)V tryShriek
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/Entity;)V shriek
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/gameevent/GameEventListener;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/gameevent/GameEvent;Ldga$a;)Z shouldListen
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/gameevent/GameEventListener;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;F)V onSignalReceive
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/server/level/EntityPlayer; tryGetPlayer
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
	b (Lnet/minecraft/server/level/WorldServer;)Z canRespond
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/server/level/EntityPlayer;)Z tryToWarn
	c ()Lnet/minecraft/world/level/gameevent/vibrations/VibrationListener; getListener
	c (Lnet/minecraft/server/level/WorldServer;)Z trySummonWarden
	d ()V playWardenReplySound
	f ()V onSignalSchedule
net/minecraft/world/level/block/entity/SuspiciousSandBlockEntity net/minecraft/world/level/block/entity/SuspiciousSandBlockEntity
	a LOGGER
	b LOOT_TABLE_TAG
	c LOOT_TABLE_SEED_TAG
	d HIT_DIRECTION_TAG
	e ITEM_TAG
	f BRUSH_COOLDOWN_TICKS
	g BRUSH_RESET_TICKS
	h REQUIRED_BRUSHES_TO_BREAK
	i brushCount
	j brushCountResetsAtTick
	k coolDownEndsAtTick
	l item
	m hitDirection
	n lootTable
	r lootTableSeed
	a (JLnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/core/EnumDirection;)Z brush
	a (Lnet/minecraft/nbt/NBTTagCompound;)V load
	a (Lnet/minecraft/resources/MinecraftKey;J)V setLootTable
	a (Lnet/minecraft/world/entity/player/EntityHuman;)V unpackLootTable
	aq_ ()Lnet/minecraft/nbt/NBTTagCompound; getUpdateTag
	b (Lnet/minecraft/nbt/NBTTagCompound;)V saveAdditional
	b (Lnet/minecraft/world/entity/player/EntityHuman;)V brushingCompleted
	c ()V checkReset
	c (Lnet/minecraft/world/entity/player/EntityHuman;)V dropContent
	d ()Lnet/minecraft/network/protocol/game/PacketPlayOutTileEntityData; getUpdatePacket
	d (Lnet/minecraft/nbt/NBTTagCompound;)Z tryLoadLootTable
	e (Lnet/minecraft/nbt/NBTTagCompound;)Z trySaveLootTable
	f ()Lnet/minecraft/core/EnumDirection; getHitDirection
	g ()Lnet/minecraft/world/item/ItemStack; getItem
	h ()Lnet/minecraft/network/protocol/Packet; getUpdatePacket
	i ()I getCompletionState
net/minecraft/world/level/block/grower/MangroveTreeGrower net/minecraft/world/level/block/grower/MangroveTreeGrower
	a tallProbability
	a (Lnet/minecraft/util/RandomSource;Z)Lnet/minecraft/resources/ResourceKey; getConfiguredFeature
net/minecraft/world/level/block/state/predicate/BlockPredicate net/minecraft/world/level/block/state/predicate/BlockPredicate
	a block
	a (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/state/predicate/BlockPredicate; forBlock
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z test
net/minecraft/world/level/block/state/predicate/BlockStatePredicate net/minecraft/world/level/block/state/predicate/BlockStatePredicate
	a ANY
	b definition
	c properties
	a (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/state/predicate/BlockStatePredicate; forBlock
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z test
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/properties/IBlockState;Ljava/util/function/Predicate;)Z applies
	a (Lnet/minecraft/world/level/block/state/properties/IBlockState;Ljava/util/function/Predicate;)Lnet/minecraft/world/level/block/state/predicate/BlockStatePredicate; where
net/minecraft/world/level/block/state/properties/BlockSetType net/minecraft/world/level/block/state/properties/BlockSetType
	a IRON
	b GOLD
	c STONE
	d POLISHED_BLACKSTONE
	e OAK
	f SPRUCE
	g BIRCH
	h ACACIA
	i CHERRY
	j JUNGLE
	k DARK_OAK
	l CRIMSON
	m WARPED
	n MANGROVE
	o BAMBOO
	p name
	q soundType
	r doorClose
	s doorOpen
	t trapdoorClose
	u trapdoorOpen
	v pressurePlateClickOff
	w pressurePlateClickOn
	x buttonClickOff
	y buttonClickOn
	z VALUES
	a ()Ljava/util/stream/Stream; values
	a (Lnet/minecraft/world/level/block/state/properties/BlockSetType;)Lnet/minecraft/world/level/block/state/properties/BlockSetType; register
	b ()Ljava/lang/String; name
	c ()Lnet/minecraft/world/level/block/SoundEffectType; soundType
	d ()Lnet/minecraft/sounds/SoundEffect; doorClose
	e ()Lnet/minecraft/sounds/SoundEffect; doorOpen
	f ()Lnet/minecraft/sounds/SoundEffect; trapdoorClose
	g ()Lnet/minecraft/sounds/SoundEffect; trapdoorOpen
	h ()Lnet/minecraft/sounds/SoundEffect; pressurePlateClickOff
	i ()Lnet/minecraft/sounds/SoundEffect; pressurePlateClickOn
	j ()Lnet/minecraft/sounds/SoundEffect; buttonClickOff
	k ()Lnet/minecraft/sounds/SoundEffect; buttonClickOn
net/minecraft/world/level/block/state/properties/DripstoneThickness net/minecraft/world/level/block/state/properties/DripstoneThickness
	a TIP_MERGE
	b TIP
	c FRUSTUM
	d MIDDLE
	e BASE
	f name
	g $VALUES
	a ()[Lnet/minecraft/world/level/block/state/properties/DripstoneThickness; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/level/block/state/properties/RotationSegment net/minecraft/world/level/block/state/properties/RotationSegment
	a SEGMENTED_ANGLE16
	b MAX_SEGMENT_INDEX
	c NORTH_0
	d EAST_90
	e SOUTH_180
	f WEST_270
	a ()I getMaxSegmentIndex
	a (F)I convertToSegment
	a (I)Ljava/util/Optional; convertToDirection
	a (Lnet/minecraft/core/EnumDirection;)I convertToSegment
	b (I)F convertToDegrees
net/minecraft/world/level/block/state/properties/SculkSensorPhase net/minecraft/world/level/block/state/properties/SculkSensorPhase
	a INACTIVE
	b ACTIVE
	c COOLDOWN
	d name
	e $VALUES
	a ()[Lnet/minecraft/world/level/block/state/properties/SculkSensorPhase; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/level/block/state/properties/Tilt net/minecraft/world/level/block/state/properties/Tilt
	a NONE
	b UNSTABLE
	c PARTIAL
	d FULL
	e name
	f causesVibration
	g $VALUES
	a ()Z causesVibration
	b ()[Lnet/minecraft/world/level/block/state/properties/Tilt; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/level/border/BorderStatus net/minecraft/world/level/border/BorderStatus
	a GROWING
	b SHRINKING
	c STATIONARY
	d color
	e $VALUES
	a ()I getColor
	b ()[Lnet/minecraft/world/level/border/BorderStatus; $values
net/minecraft/world/level/border/WorldBorder net/minecraft/world/level/border/WorldBorder
	a listeners
	b damagePerBlock
	c MAX_SIZE
	d MAX_CENTER_COORDINATE
	e DEFAULT_SETTINGS
	f damageSafeZone
	g warningTime
	h warningBlocks
	i centerX
	j centerZ
	k absoluteMaxSize
	l extent
	a ()D getCenterX
	a (D)V setSize
	a (DD)Z isWithinBounds
	a (DDD)Z isWithinBounds
	a (DDJ)V lerpSizeBetween
	a (I)V setAbsoluteMaxSize
	a (Lddi$c;)V applySettings
	a (Lnet/minecraft/core/BlockPosition;)Z isWithinBounds
	a (Lnet/minecraft/world/entity/Entity;)D getDistanceToBorder
	a (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AxisAlignedBB;)Z isInsideCloseToBorder
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;)Z isWithinBounds
	a (Lnet/minecraft/world/level/border/IWorldBorderListener;)V addListener
	a (Lnet/minecraft/world/phys/AxisAlignedBB;)Z isWithinBounds
	b ()D getCenterZ
	b (D)V setDamageSafeZone
	b (DD)D getDistanceToBorder
	b (DDD)Lnet/minecraft/core/BlockPosition; clampToBounds
	b (I)V setWarningTime
	b (Lnet/minecraft/world/level/border/IWorldBorderListener;)V removeListener
	c ()Lnet/minecraft/world/phys/shapes/VoxelShape; getCollisionShape
	c (D)V setDamagePerBlock
	c (DD)V setCenter
	c (I)V setWarningBlocks
	d ()Lnet/minecraft/world/level/border/BorderStatus; getStatus
	e ()D getMinX
	f ()D getMinZ
	g ()D getMaxX
	h ()D getMaxZ
	i ()D getSize
	j ()J getLerpRemainingTime
	k ()D getLerpTarget
	l ()Ljava/util/List; getListeners
	m ()I getAbsoluteMaxSize
	n ()D getDamageSafeZone
	o ()D getDamagePerBlock
	p ()D getLerpSpeed
	q ()I getWarningTime
	r ()I getWarningBlocks
	s ()V tick
	t ()Lddi$c; createSettings
net/minecraft/world/level/chunk/BulkSectionAccess net/minecraft/world/level/chunk/BulkSectionAccess
	a level
	b acquiredSections
	c lastSection
	d lastSectionKey
	a (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/chunk/ChunkSection; getSection
	b (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; getBlockState
net/minecraft/world/level/chunk/CarvingMask net/minecraft/world/level/chunk/CarvingMask
	a minY
	b mask
	c additionalMask
	a ()[J toArray
	a (III)V set
	a (Lddm$a;)V setAdditionalMask
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;)Ljava/util/stream/Stream; stream
	b (III)Z get
	c (III)I getIndex
net/minecraft/world/level/chunk/ChunkGenerator net/minecraft/world/level/chunk/ChunkGenerator
	a CODEC
	b biomeSource
	c featuresPerStep
	d generationSettingsGetter
	a ()Lcom/mojang/serialization/Codec; codec
	a (IILnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;)Lnet/minecraft/world/level/BlockColumn; getBaseColumn
	a (IILnet/minecraft/world/level/levelgen/HeightMap$Type;Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;)I getBaseHeight
	a (Ldrv$a;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/core/IRegistryCustom;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;JLnet/minecraft/world/level/chunk/IChunkAccess;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/SectionPosition;)Z tryGenerateStructure
	a (Ljava/util/List;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/core/BlockPosition;)V addDebugScreenInfo
	a (Ljava/util/Set;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/core/BlockPosition;ZLnet/minecraft/world/level/levelgen/structure/placement/ConcentricRingsStructurePlacement;)Lcom/mojang/datafixers/util/Pair; getNearestGeneratedStructure
	a (Ljava/util/Set;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/world/level/StructureManager;IIIZJLnet/minecraft/world/level/levelgen/structure/placement/RandomSpreadStructurePlacement;)Lcom/mojang/datafixers/util/Pair; getNearestGeneratedStructure
	a (Ljava/util/Set;Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/world/level/StructureManager;ZLnet/minecraft/world/level/levelgen/structure/placement/StructurePlacement;Lnet/minecraft/world/level/ChunkCoordIntPair;)Lcom/mojang/datafixers/util/Pair; getStructureGeneratingAt
	a (Ljava/util/concurrent/Executor;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/levelgen/blending/Blender;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/IChunkAccess;)Ljava/util/concurrent/CompletableFuture; createBiomes
	a (Ljava/util/concurrent/Executor;Lnet/minecraft/world/level/levelgen/blending/Blender;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/IChunkAccess;)Ljava/util/concurrent/CompletableFuture; fillFromNoise
	a (Lnet/minecraft/core/Holder;)Lnet/minecraft/world/level/biome/BiomeSettingsGeneration; getBiomeGenerationSettings
	a (Lnet/minecraft/core/Holder;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/entity/EnumCreatureType;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/util/random/WeightedRandomList; getMobsAt
	a (Lnet/minecraft/core/HolderLookup;Lnet/minecraft/world/level/levelgen/RandomState;J)Lnet/minecraft/world/level/chunk/ChunkGeneratorStructureState; createState
	a (Lnet/minecraft/core/IRegistryCustom;Lnet/minecraft/world/level/chunk/ChunkGeneratorStructureState;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/IChunkAccess;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;)V createStructures
	a (Lnet/minecraft/server/level/RegionLimitedWorldAccess;)V spawnOriginalMobs
	a (Lnet/minecraft/server/level/RegionLimitedWorldAccess;JLnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/biome/BiomeManager;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/IChunkAccess;Lnet/minecraft/world/level/levelgen/WorldGenStage$Features;)V applyCarvers
	a (Lnet/minecraft/server/level/RegionLimitedWorldAccess;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/chunk/IChunkAccess;)V buildSurface
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/HolderSet;Lnet/minecraft/core/BlockPosition;IZ)Lcom/mojang/datafixers/util/Pair; findNearestMapStructure
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/IChunkAccess;)V createReferences
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/chunk/IChunkAccess;Lnet/minecraft/world/level/StructureManager;)V applyBiomeDecoration
	a (Lnet/minecraft/world/level/LevelHeightAccessor;)I getSpawnHeight
	a (Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/IChunkAccess;Lnet/minecraft/core/SectionPosition;Lnet/minecraft/world/level/levelgen/structure/Structure;)I fetchReferences
	a (Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/levelgen/structure/StructureStart;)Z tryAddReference
	a (Lnet/minecraft/world/level/chunk/IChunkAccess;)Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; getWritableArea
	b ()Ljava/util/Optional; getTypeNameForDataFixer
	b (IILnet/minecraft/world/level/levelgen/HeightMap$Type;Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;)I getFirstFreeHeight
	c ()Lnet/minecraft/world/level/biome/WorldChunkManager; getBiomeSource
	c (IILnet/minecraft/world/level/levelgen/HeightMap$Type;Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;)I getFirstOccupiedHeight
	d ()I getGenDepth
	e ()I getSeaLevel
	f ()I getMinY
net/minecraft/world/level/chunk/ChunkGeneratorStructureState net/minecraft/world/level/chunk/ChunkGeneratorStructureState
	a LOGGER
	b randomState
	c biomeSource
	d levelSeed
	e concentricRingsSeed
	f placementsForStructure
	g ringPositions
	h hasGeneratedPositions
	i possibleStructureSets
	a ()Ljava/util/List; possibleStructureSets
	a (Lnet/minecraft/core/Holder;)Ljava/util/List; getPlacementsForStructure
	a (Lnet/minecraft/core/Holder;III)Z hasStructureChunkInRange
	a (Lnet/minecraft/core/Holder;Lnet/minecraft/world/level/levelgen/structure/placement/ConcentricRingsStructurePlacement;)Ljava/util/concurrent/CompletableFuture; generateRingPositions
	a (Lnet/minecraft/world/level/levelgen/RandomState;JLnet/minecraft/world/level/biome/WorldChunkManager;Ljava/util/stream/Stream;)Lnet/minecraft/world/level/chunk/ChunkGeneratorStructureState; createForFlat
	a (Lnet/minecraft/world/level/levelgen/RandomState;JLnet/minecraft/world/level/biome/WorldChunkManager;Lnet/minecraft/core/HolderLookup;)Lnet/minecraft/world/level/chunk/ChunkGeneratorStructureState; createForNormal
	a (Lnet/minecraft/world/level/levelgen/structure/StructureSet;Lnet/minecraft/world/level/biome/WorldChunkManager;)Z hasBiomesForStructureSet
	a (Lnet/minecraft/world/level/levelgen/structure/placement/ConcentricRingsStructurePlacement;)Ljava/util/List; getRingPositionsFor
	b ()V ensureStructuresGenerated
	c ()Lnet/minecraft/world/level/levelgen/RandomState; randomState
	d ()J getLevelSeed
	e ()V generatePositions
net/minecraft/world/level/chunk/ChunkStatus net/minecraft/world/level/chunk/ChunkStatus
	A heightmapsAfter
	a MAX_STRUCTURE_DISTANCE
	b POST_FEATURES
	c EMPTY
	d STRUCTURE_STARTS
	e STRUCTURE_REFERENCES
	f BIOMES
	g NOISE
	h SURFACE
	i CARVERS
	j LIQUID_CARVERS
	k FEATURES
	l LIGHT
	m SPAWN
	n HEIGHTMAPS
	o FULL
	p PRE_FEATURES
	q PASSTHROUGH_LOAD_TASK
	r STATUS_BY_RANGE
	s RANGE_BY_STATUS
	t name
	u index
	v parent
	w generationTask
	x loadingTask
	y range
	z chunkType
	a ()Ljava/util/List; getStatusList
	a (I)Lnet/minecraft/world/level/chunk/ChunkStatus; getStatusAroundFullChunk
	a (Ljava/lang/String;)Lnet/minecraft/world/level/chunk/ChunkStatus; byName
	a (Ljava/lang/String;Lnet/minecraft/world/level/chunk/ChunkStatus;ILjava/util/EnumSet;Lnet/minecraft/world/level/chunk/ChunkStatus$Type;Ldds$b;)Lnet/minecraft/world/level/chunk/ChunkStatus; register
	a (Ljava/lang/String;Lnet/minecraft/world/level/chunk/ChunkStatus;ILjava/util/EnumSet;Lnet/minecraft/world/level/chunk/ChunkStatus$Type;Ldds$b;Ldds$c;)Lnet/minecraft/world/level/chunk/ChunkStatus; register
	a (Ljava/lang/String;Lnet/minecraft/world/level/chunk/ChunkStatus;ILjava/util/EnumSet;Lnet/minecraft/world/level/chunk/ChunkStatus$Type;Ldds$d;)Lnet/minecraft/world/level/chunk/ChunkStatus; registerSimple
	a (Ljava/util/concurrent/Executor;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/server/level/LightEngineThreaded;Ljava/util/function/Function;Ljava/util/List;Z)Ljava/util/concurrent/CompletableFuture; generate
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/server/level/LightEngineThreaded;Ljava/util/function/Function;Lnet/minecraft/world/level/chunk/IChunkAccess;)Ljava/util/concurrent/CompletableFuture; load
	a (Lnet/minecraft/world/level/chunk/ChunkStatus;)I getDistance
	a (Lnet/minecraft/world/level/chunk/ChunkStatus;Lnet/minecraft/server/level/LightEngineThreaded;Lnet/minecraft/world/level/chunk/IChunkAccess;)Ljava/util/concurrent/CompletableFuture; lightChunk
	a (Lnet/minecraft/world/level/chunk/ChunkStatus;Lnet/minecraft/world/level/chunk/IChunkAccess;)Z isLighted
	b ()I maxDistance
	b (Lnet/minecraft/world/level/chunk/ChunkStatus;)Z isOrAfter
	c ()I getIndex
	d ()Ljava/lang/String; getName
	e ()Lnet/minecraft/world/level/chunk/ChunkStatus; getParent
	f ()I getRange
	g ()Lnet/minecraft/world/level/chunk/ChunkStatus$Type; getChunkType
	h ()Ljava/util/EnumSet; heightmapsAfter
net/minecraft/world/level/chunk/ProtoChunk net/minecraft/world/level/chunk/ProtoChunk
	l lightEngine
	m status
	n entities
	o lights
	p carvingMasks
	q belowZeroRetrogen
	r blockTicks
	s fluidTicks
	B ()[Lit/unimi/dsi/fastutil/shorts/ShortList; getPackedLights
	C ()Ljava/util/Map; getBlockEntities
	D ()Ljava/util/List; getEntities
	E ()Ljava/util/Map; getBlockEntityNbts
	F ()Lnet/minecraft/world/ticks/LevelChunkTicks; unpackBlockTicks
	G ()Lnet/minecraft/world/ticks/LevelChunkTicks; unpackFluidTicks
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)Lnet/minecraft/world/level/block/state/IBlockData; setBlockState
	a (Lnet/minecraft/world/entity/Entity;)V addEntity
	a (Lnet/minecraft/world/level/block/entity/TileEntity;)V setBlockEntity
	a (Lnet/minecraft/world/level/chunk/ChunkStatus;)V setStatus
	a (Lnet/minecraft/world/level/levelgen/BelowZeroRetrogen;)V setBelowZeroRetrogen
	a (Lnet/minecraft/world/level/levelgen/WorldGenStage$Features;)Lnet/minecraft/world/level/chunk/CarvingMask; getCarvingMask
	a (Lnet/minecraft/world/level/levelgen/WorldGenStage$Features;Lnet/minecraft/world/level/chunk/CarvingMask;)V setCarvingMask
	a (Lnet/minecraft/world/level/levelgen/structure/Structure;Lnet/minecraft/world/level/levelgen/structure/StructureStart;)V setStartForStructure
	a (Lnet/minecraft/world/level/lighting/LightEngine;)V setLightEngine
	a (Lnet/minecraft/world/ticks/ProtoChunkTickList;)Lnet/minecraft/world/ticks/LevelChunkTicks; unpackTicks
	a (SI)V addPackedPostProcess
	a (SILnet/minecraft/world/level/ChunkCoordIntPair;)Lnet/minecraft/core/BlockPosition; unpackOffsetCoordinates
	a_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; getBlockState
	b (Lnet/minecraft/nbt/NBTTagCompound;)V addEntity
	b (Lnet/minecraft/world/level/levelgen/WorldGenStage$Features;)Lnet/minecraft/world/level/chunk/CarvingMask; getOrCreateCarvingMask
	b (SI)V addLight
	b_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/material/Fluid; getFluidState
	c_ (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/entity/TileEntity; getBlockEntity
	d (Lnet/minecraft/core/BlockPosition;)V removeBlockEntity
	e (Lnet/minecraft/core/BlockPosition;)V markPosForPostprocessing
	g (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/nbt/NBTTagCompound; getBlockEntityNbtForSaving
	j ()Lnet/minecraft/world/level/chunk/ChunkStatus; getStatus
	j (Lnet/minecraft/core/BlockPosition;)V addLight
	k (Lnet/minecraft/core/BlockPosition;)S packOffsetCoordinates
	n ()Ljava/util/stream/Stream; getLights
	o ()Lnet/minecraft/world/ticks/TickContainerAccess; getBlockTicks
	p ()Lnet/minecraft/world/ticks/TickContainerAccess; getFluidTicks
	q ()Lddn$a; getTicksForSerialization
	x ()Lnet/minecraft/world/level/levelgen/BelowZeroRetrogen; getBelowZeroRetrogen
	z ()Lnet/minecraft/world/level/LevelHeightAccessor; getHeightAccessorForGeneration
net/minecraft/world/level/chunk/SingleValuePalette net/minecraft/world/level/chunk/SingleValuePalette
	a registry
	b value
	c resizeHandler
	a ()I getSerializedSize
	a (I)Ljava/lang/Object; valueFor
	a (ILnet/minecraft/core/Registry;Lnet/minecraft/world/level/chunk/DataPaletteExpandable;Ljava/util/List;)Lnet/minecraft/world/level/chunk/DataPalette; create
	a (Ljava/lang/Object;)I idFor
	a (Ljava/util/function/Predicate;)Z maybeHas
	a (Lnet/minecraft/network/PacketDataSerializer;)V read
	b ()I getSize
	b (Lnet/minecraft/network/PacketDataSerializer;)V write
	c ()Lnet/minecraft/world/level/chunk/DataPalette; copy
net/minecraft/world/level/chunk/storage/EntityStorage net/minecraft/world/level/chunk/storage/EntityStorage
	a fixerUpper
	b LOGGER
	c ENTITIES_TAG
	d POSITION_TAG
	e level
	f worker
	g emptyChunks
	h entityDeserializerQueue
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/level/ChunkCoordIntPair; readChunkPos
	a (Lnet/minecraft/nbt/NBTTagCompound;Lnet/minecraft/world/level/ChunkCoordIntPair;)V writeChunkPos
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;)Ljava/util/concurrent/CompletableFuture; loadEntities
	a (Lnet/minecraft/world/level/entity/ChunkEntities;)V storeEntities
	a (Z)V flush
	b (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/nbt/NBTTagCompound; upgradeChunkTag
	b (Lnet/minecraft/world/level/ChunkCoordIntPair;)Lnet/minecraft/world/level/entity/ChunkEntities; emptyChunk
net/minecraft/world/level/chunk/storage/IOWorker$Priority net/minecraft/world/level/chunk/storage/IOWorker$Priority
	a FOREGROUND
	b BACKGROUND
	c SHUTDOWN
	d $VALUES
	a ()[Lnet/minecraft/world/level/chunk/storage/IOWorker$Priority; $values
net/minecraft/world/level/chunk/storage/IOWorker net/minecraft/world/level/chunk/storage/IOWorker
	a LOGGER
	b shutdownRequested
	c mailbox
	d storage
	e pendingWrites
	f regionCacheForBlender
	g REGION_CACHE_SIZE
	a ()V storePendingChunk
	a (II)Ljava/util/concurrent/CompletableFuture; getOrCreateOldDataForRegion
	a (Ljava/util/function/Supplier;)Ljava/util/concurrent/CompletableFuture; submitTask
	a (Lnet/minecraft/nbt/NBTTagCompound;)Z isOldChunk
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;)Ljava/util/concurrent/CompletableFuture; loadAsync
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;I)Z isOldChunkAround
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Ldeq$a;)V runStore
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/nbt/NBTTagCompound;)Ljava/util/concurrent/CompletableFuture; store
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/nbt/StreamTagVisitor;)Ljava/util/concurrent/CompletableFuture; scanChunk
	a (Z)Ljava/util/concurrent/CompletableFuture; synchronize
	b ()V tellStorePending
	b (II)Ljava/util/concurrent/CompletableFuture; createOldDataForRegion
net/minecraft/world/level/chunk/storage/RegionFile$ChunkBuffer net/minecraft/world/level/chunk/storage/RegionFile$ChunkBuffer
	b pos
net/minecraft/world/level/chunk/storage/RegionFile net/minecraft/world/level/chunk/storage/RegionFile
	a SECTOR_INTS
	b usedSectors
	c LOGGER
	d SECTOR_BYTES
	e CHUNK_HEADER_SIZE
	f HEADER_OFFSET
	g PADDING_BUFFER
	h EXTERNAL_FILE_EXTENSION
	i EXTERNAL_STREAM_FLAG
	j EXTERNAL_CHUNK_THRESHOLD
	k CHUNK_NOT_PRESENT
	l file
	m externalFileDir
	n version
	o header
	p offsets
	q timestamps
	a ()V flush
	a (B)Z isExternalStreamChunk
	a (I)I getNumSectors
	a (II)I packSectorOffset
	a (Ljava/nio/ByteBuffer;I)Ljava/io/ByteArrayInputStream; createStream
	a (Ljava/nio/file/Path;Ljava/nio/ByteBuffer;)Ldes$b; writeToExternalFile
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;)Ljava/io/DataInputStream; getChunkDataInputStream
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;B)Ljava/io/DataInputStream; createExternalChunkInputStream
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;BLjava/io/InputStream;)Ljava/io/DataInputStream; createChunkInputStream
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Ljava/nio/ByteBuffer;)V write
	b ()I getTimestamp
	b (B)B getExternalChunkVersion
	b (I)I getSectorNumber
	b (Lnet/minecraft/world/level/ChunkCoordIntPair;)Z doesChunkExist
	c ()Ljava/nio/ByteBuffer; createExternalStub
	c (I)I sizeToSectors
	c (Lnet/minecraft/world/level/ChunkCoordIntPair;)Ljava/io/DataOutputStream; getChunkDataOutputStream
	d ()V writeHeader
	d (Lnet/minecraft/world/level/ChunkCoordIntPair;)V clear
	e ()V padToFullSector
	e (Lnet/minecraft/world/level/ChunkCoordIntPair;)Z hasChunk
	f (Lnet/minecraft/world/level/ChunkCoordIntPair;)Ljava/nio/file/Path; getExternalChunkPath
	g (Lnet/minecraft/world/level/ChunkCoordIntPair;)I getOffset
	h (Lnet/minecraft/world/level/ChunkCoordIntPair;)I getOffsetIndex
net/minecraft/world/level/dimension/BuiltinDimensionTypes net/minecraft/world/level/dimension/BuiltinDimensionTypes
	a OVERWORLD
	b NETHER
	c END
	d OVERWORLD_CAVES
	e OVERWORLD_EFFECTS
	f NETHER_EFFECTS
	g END_EFFECTS
	a (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; register
net/minecraft/world/level/entity/ChunkEntities net/minecraft/world/level/entity/ChunkEntities
	a pos
	b entities
	a ()Lnet/minecraft/world/level/ChunkCoordIntPair; getPos
	b ()Ljava/util/stream/Stream; getEntities
	c ()Z isEmpty
net/minecraft/world/level/entity/EntityInLevelCallback net/minecraft/world/level/entity/EntityInLevelCallback
	a NULL
	a ()V onMove
	a (Lnet/minecraft/world/entity/Entity$RemovalReason;)V onRemove
net/minecraft/world/level/entity/EntityLookup net/minecraft/world/level/entity/EntityLookup
	a LOGGER
	b byId
	c byUuid
	a ()Ljava/lang/Iterable; getAllEntities
	a (I)Lnet/minecraft/world/level/entity/EntityAccess; getEntity
	a (Ljava/util/UUID;)Lnet/minecraft/world/level/entity/EntityAccess; getEntity
	a (Lnet/minecraft/world/level/entity/EntityAccess;)V add
	a (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/util/AbortableIterationConsumer;)V getEntities
	b ()I count
	b (Lnet/minecraft/world/level/entity/EntityAccess;)V remove
net/minecraft/world/level/entity/EntitySection net/minecraft/world/level/entity/EntitySection
	a LOGGER
	b storage
	c chunkStatus
	a ()Z isEmpty
	a (Lnet/minecraft/world/level/entity/EntityAccess;)V add
	a (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/world/phys/AxisAlignedBB;Lnet/minecraft/util/AbortableIterationConsumer;)Laob$a; getEntities
	a (Lnet/minecraft/world/level/entity/Visibility;)Lnet/minecraft/world/level/entity/Visibility; updateChunkStatus
	a (Lnet/minecraft/world/phys/AxisAlignedBB;Lnet/minecraft/util/AbortableIterationConsumer;)Laob$a; getEntities
	b ()Ljava/util/stream/Stream; getEntities
	b (Lnet/minecraft/world/level/entity/EntityAccess;)Z remove
	c ()Lnet/minecraft/world/level/entity/Visibility; getStatus
	d ()I size
net/minecraft/world/level/entity/EntitySectionStorage net/minecraft/world/level/entity/EntitySectionStorage
	a entityClass
	b intialSectionVisibility
	c sections
	d sectionIds
	a ()Lit/unimi/dsi/fastutil/longs/LongSet; getAllChunksWithExistingSections
	a (II)Lit/unimi/dsi/fastutil/longs/LongSortedSet; getChunkSections
	a (J)Ljava/util/stream/LongStream; getExistingSectionPositionsInChunk
	a (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/world/phys/AxisAlignedBB;Lnet/minecraft/util/AbortableIterationConsumer;)V getEntities
	a (Lnet/minecraft/world/phys/AxisAlignedBB;Lnet/minecraft/util/AbortableIterationConsumer;)V forEachAccessibleNonEmptySection
	b ()I count
	b (J)Ljava/util/stream/Stream; getExistingSectionsInChunk
	b (Lnet/minecraft/world/phys/AxisAlignedBB;Lnet/minecraft/util/AbortableIterationConsumer;)V getEntities
	c (J)Lnet/minecraft/world/level/entity/EntitySection; getOrCreateSection
	d (J)Lnet/minecraft/world/level/entity/EntitySection; getSection
	e (J)V remove
	f (J)J getChunkKeyFromSectionKey
	g (J)Lnet/minecraft/world/level/entity/EntitySection; createSection
net/minecraft/world/level/entity/EntityTickList net/minecraft/world/level/entity/EntityTickList
	a active
	b passive
	c iterated
	a ()V ensureActiveIsNotIterated
	a (Ljava/util/function/Consumer;)V forEach
	a (Lnet/minecraft/world/entity/Entity;)V add
	b (Lnet/minecraft/world/entity/Entity;)V remove
	c (Lnet/minecraft/world/entity/Entity;)Z contains
net/minecraft/world/level/entity/LevelEntityGetterAdapter net/minecraft/world/level/entity/LevelEntityGetterAdapter
	a visibleEntities
	b sectionStorage
	a ()Ljava/lang/Iterable; getAll
	a (I)Lnet/minecraft/world/level/entity/EntityAccess; get
	a (Ljava/util/UUID;)Lnet/minecraft/world/level/entity/EntityAccess; get
	a (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/util/AbortableIterationConsumer;)V get
	a (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/world/phys/AxisAlignedBB;Lnet/minecraft/util/AbortableIterationConsumer;)V get
	a (Lnet/minecraft/world/phys/AxisAlignedBB;Ljava/util/function/Consumer;)V get
net/minecraft/world/level/entity/PersistentEntitySectionManager net/minecraft/world/level/entity/PersistentEntitySectionManager
	a LOGGER
	b knownUuids
	c callbacks
	d permanentStorage
	e visibleEntityStorage
	f sectionStorage
	g entityGetter
	h chunkVisibility
	i chunkLoadStatuses
	j chunksToUnload
	k loadingInbox
	a ()V tick
	a (J)Z areEntitiesLoaded
	a (JLjava/util/function/Consumer;)Z storeChunkSections
	a (JLnet/minecraft/world/level/entity/EntitySection;)V removeSectionIfEmpty
	a (Ljava/io/Writer;)V dumpSections
	a (Ljava/util/UUID;)Z isLoaded
	a (Ljava/util/stream/Stream;)V addLegacyChunkEntities
	a (Lnet/minecraft/core/BlockPosition;)Z canPositionTick
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;)Z canPositionTick
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/server/level/PlayerChunk$State;)V updateChunkStatus
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/world/level/entity/Visibility;)V updateChunkStatus
	a (Lnet/minecraft/world/level/entity/EntityAccess;)Z addNewEntity
	a (Lnet/minecraft/world/level/entity/EntityAccess;Lnet/minecraft/world/level/entity/Visibility;)Lnet/minecraft/world/level/entity/Visibility; getEffectiveStatus
	a (Lnet/minecraft/world/level/entity/EntityAccess;Z)Z addEntity
	b ()V autoSave
	b (J)V ensureChunkQueuedForLoad
	b (Ljava/util/stream/Stream;)V addWorldGenChunkEntities
	b (Lnet/minecraft/world/level/entity/EntityAccess;)Z addEntityUuid
	c ()V saveAll
	c (J)V requestChunkLoad
	c (Lnet/minecraft/world/level/entity/EntityAccess;)V startTicking
	d ()Lnet/minecraft/world/level/entity/LevelEntityGetter; getEntityGetter
	d (J)Z processChunkUnload
	d (Lnet/minecraft/world/level/entity/EntityAccess;)V stopTicking
	e ()Ljava/lang/String; gatherStats
	e (Lnet/minecraft/world/level/entity/EntityAccess;)V startTracking
	f ()V processUnloads
	f (Lnet/minecraft/world/level/entity/EntityAccess;)V stopTracking
	g ()V processPendingLoads
	g (Lnet/minecraft/world/level/entity/EntityAccess;)V unloadEntity
	h ()Lit/unimi/dsi/fastutil/longs/LongSet; getAllChunksToSave
net/minecraft/world/level/entity/Visibility net/minecraft/world/level/entity/Visibility
	a HIDDEN
	b TRACKED
	c TICKING
	d accessible
	e ticking
	f $VALUES
	a ()Z isTicking
	a (Lnet/minecraft/server/level/PlayerChunk$State;)Lnet/minecraft/world/level/entity/Visibility; fromFullChunkStatus
	b ()Z isAccessible
	c ()[Lnet/minecraft/world/level/entity/Visibility; $values
net/minecraft/world/level/gameevent/BlockPositionSource net/minecraft/world/level/gameevent/BlockPositionSource
	a CODEC
	c pos
	a ()Lnet/minecraft/world/level/gameevent/PositionSourceType; getType
	a (Lnet/minecraft/world/level/World;)Ljava/util/Optional; getPosition
net/minecraft/world/level/gameevent/DynamicGameEventListener net/minecraft/world/level/gameevent/DynamicGameEventListener
	a listener
	b lastSection
	a ()Lnet/minecraft/world/level/gameevent/GameEventListener; getListener
	a (Lnet/minecraft/server/level/WorldServer;)V add
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/SectionPosition;Ljava/util/function/Consumer;)V ifChunkExists
	a (Lnet/minecraft/world/level/gameevent/GameEventListener;Lnet/minecraft/world/level/World;)V updateListener
	b (Lnet/minecraft/server/level/WorldServer;)V remove
	c (Lnet/minecraft/server/level/WorldServer;)V move
net/minecraft/world/level/gameevent/EntityPositionSource net/minecraft/world/level/gameevent/EntityPositionSource
	a CODEC
	c entityOrUuidOrId
	d yOffset
	a ()Lnet/minecraft/world/level/gameevent/PositionSourceType; getType
	a (Lnet/minecraft/world/level/World;)Ljava/util/Optional; getPosition
	b ()Ljava/util/UUID; getUuid
	b (Lnet/minecraft/world/level/World;)V resolveEntity
	c ()I getId
net/minecraft/world/level/gameevent/EuclideanGameEventListenerRegistry net/minecraft/world/level/gameevent/EuclideanGameEventListenerRegistry
	b listeners
	c listenersToRemove
	d listenersToAdd
	e processing
	f level
	a ()Z isEmpty
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/level/gameevent/GameEventListener;)Ljava/util/Optional; getPostableListenerPosition
	a (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/phys/Vec3D;Ldga$a;Ldgd$a;)Z visitInRangeListeners
	a (Lnet/minecraft/world/level/gameevent/GameEventListener;)V register
	b (Lnet/minecraft/world/level/gameevent/GameEventListener;)V unregister
net/minecraft/world/level/gameevent/GameEvent net/minecraft/world/level/gameevent/GameEvent
	A FLUID_PICKUP
	B FLUID_PLACE
	C HIT_GROUND
	D INSTRUMENT_PLAY
	E ITEM_INTERACT_FINISH
	F ITEM_INTERACT_START
	G JUKEBOX_PLAY
	H JUKEBOX_STOP_PLAY
	I LIGHTNING_STRIKE
	J NOTE_BLOCK_PLAY
	K PISTON_CONTRACT
	L PISTON_EXTEND
	M PRIME_FUSE
	N PROJECTILE_LAND
	O PROJECTILE_SHOOT
	P SCULK_SENSOR_TENDRILS_CLICKING
	Q SHEAR
	R SHRIEK
	S SPLASH
	T STEP
	U SWIM
	V TELEPORT
	W DEFAULT_NOTIFICATION_RADIUS
	X name
	Y notificationRadius
	Z builtInRegistryHolder
	a BLOCK_ACTIVATE
	b BLOCK_ATTACH
	c BLOCK_CHANGE
	d BLOCK_CLOSE
	e BLOCK_DEACTIVATE
	f BLOCK_DESTROY
	g BLOCK_DETACH
	h BLOCK_OPEN
	i BLOCK_PLACE
	j CONTAINER_CLOSE
	k CONTAINER_OPEN
	l DISPENSE_FAIL
	m DRINK
	n EAT
	o ELYTRA_GLIDE
	p ENTITY_DAMAGE
	q ENTITY_DIE
	r ENTITY_DISMOUNT
	s ENTITY_INTERACT
	t ENTITY_MOUNT
	u ENTITY_PLACE
	v ENTITY_ROAR
	w ENTITY_SHAKE
	x EQUIP
	y EXPLODE
	z FLAP
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lnet/minecraft/world/level/gameevent/GameEvent; register
	a (Ljava/lang/String;I)Lnet/minecraft/world/level/gameevent/GameEvent; register
	a (Lnet/minecraft/tags/TagKey;)Z is
	b ()I getNotificationRadius
	c ()Lhd$c; builtInRegistryHolder
net/minecraft/world/level/gameevent/GameEventDispatcher net/minecraft/world/level/gameevent/GameEventDispatcher
	a level
	a (Ljava/util/List;)V handleGameEventMessagesInQueue
	a (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/phys/Vec3D;Ldga$a;)V post
net/minecraft/world/level/gameevent/GameEventListenerRegistry net/minecraft/world/level/gameevent/GameEventListenerRegistry
	a NOOP
	a ()Z isEmpty
	a (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/phys/Vec3D;Ldga$a;Ldgd$a;)Z visitInRangeListeners
	a (Lnet/minecraft/world/level/gameevent/GameEventListener;)V register
	b (Lnet/minecraft/world/level/gameevent/GameEventListener;)V unregister
net/minecraft/world/level/gameevent/PositionSource net/minecraft/world/level/gameevent/PositionSource
	b CODEC
	a ()Lnet/minecraft/world/level/gameevent/PositionSourceType; getType
	a (Lnet/minecraft/world/level/World;)Ljava/util/Optional; getPosition
net/minecraft/world/level/gameevent/PositionSourceType net/minecraft/world/level/gameevent/PositionSourceType
	a BLOCK
	b ENTITY
	a ()Lcom/mojang/serialization/Codec; codec
	a (Ljava/lang/String;Lnet/minecraft/world/level/gameevent/PositionSourceType;)Lnet/minecraft/world/level/gameevent/PositionSourceType; register
	a (Lnet/minecraft/network/PacketDataSerializer;Lnet/minecraft/world/level/gameevent/PositionSource;)V write
	a (Lnet/minecraft/world/level/gameevent/PositionSource;Lnet/minecraft/network/PacketDataSerializer;)V toNetwork
	b (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/world/level/gameevent/PositionSource; read
	c (Lnet/minecraft/network/PacketDataSerializer;)Lnet/minecraft/world/level/gameevent/PositionSource; fromNetwork
net/minecraft/world/level/gameevent/vibrations/VibrationInfo net/minecraft/world/level/gameevent/vibrations/VibrationInfo
	a CODEC
	b gameEvent
	c distance
	d pos
	e uuid
	f projectileOwnerUuid
	g entity
	a ()Lnet/minecraft/world/level/gameevent/GameEvent; gameEvent
	a (Lnet/minecraft/server/level/WorldServer;)Ljava/util/Optional; getEntity
	a (Lnet/minecraft/world/entity/Entity;)Ljava/util/UUID; getProjectileOwner
	b ()F distance
	b (Lnet/minecraft/server/level/WorldServer;)Ljava/util/Optional; getProjectileOwner
	c ()Lnet/minecraft/world/phys/Vec3D; pos
	d ()Ljava/util/UUID; uuid
	e ()Ljava/util/UUID; projectileOwnerUuid
	f ()Lnet/minecraft/world/entity/Entity; entity
net/minecraft/world/level/gameevent/vibrations/VibrationListener net/minecraft/world/level/gameevent/vibrations/VibrationListener
	a VIBRATION_FREQUENCY_FOR_EVENT
	b listenerSource
	c listenerRange
	d config
	e currentVibration
	f travelTimeInTicks
	g selectionStrategy
	a ()Lnet/minecraft/world/level/gameevent/PositionSource; getListenerSource
	a (Ldgi$a;)Lcom/mojang/serialization/Codec; codec
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/gameevent/GameEvent;Ldga$a;Lnet/minecraft/world/phys/Vec3D;)Z handleGameEvent
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/gameevent/GameEvent;Ldga$a;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/phys/Vec3D;)V scheduleVibration
	a (Lnet/minecraft/world/level/World;)V tick
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/phys/Vec3D;)Z isOccluded
	a (Lnet/minecraft/world/level/gameevent/GameEvent;)I getGameEventFrequency
	b ()I getListenerRadius
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/gameevent/GameEvent;Ldga$a;Lnet/minecraft/world/phys/Vec3D;)V forceGameEvent
net/minecraft/world/level/gameevent/vibrations/VibrationSelector net/minecraft/world/level/gameevent/vibrations/VibrationSelector
	a CODEC
	b currentVibrationData
	a ()V startOver
	a (J)Ljava/util/Optional; chosenCandidate
	a (Lnet/minecraft/world/level/gameevent/vibrations/VibrationInfo;J)V addCandidate
	b (Lnet/minecraft/world/level/gameevent/vibrations/VibrationInfo;J)Z shouldReplaceVibration
net/minecraft/world/level/levelgen/Beardifier net/minecraft/world/level/levelgen/Beardifier
	a BEARD_KERNEL_RADIUS
	f BEARD_KERNEL_SIZE
	g BEARD_KERNEL
	h pieceIterator
	i junctionIterator
	a ()D minValue
	a (I)Z isInKernelRange
	a (IDI)D computeBeardContribution
	a (III)D getBuryContribution
	a (IIII)D getBeardContribution
	a (Ldgs$b;)D compute
	a (Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/ChunkCoordIntPair;)Lnet/minecraft/world/level/levelgen/Beardifier; forStructuresInChunk
	b ()D maxValue
	b (III)D computeBeardContribution
net/minecraft/world/level/levelgen/BelowZeroRetrogen net/minecraft/world/level/levelgen/BelowZeroRetrogen
	a CODEC
	b UPGRADE_HEIGHT_ACCESSOR
	c EMPTY
	d BITSET_CODEC
	e NON_EMPTY_CHUNK_STATUS
	f RETAINED_RETROGEN_BIOMES
	g targetStatus
	h missingBedrock
	a ()Lnet/minecraft/world/level/chunk/ChunkStatus; targetStatus
	a (II)Z hasBedrockHole
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/level/levelgen/BelowZeroRetrogen; read
	a (Lnet/minecraft/world/level/biome/BiomeResolver;Lnet/minecraft/world/level/chunk/IChunkAccess;)Lnet/minecraft/world/level/biome/BiomeResolver; getBiomeResolver
	a (Lnet/minecraft/world/level/chunk/ProtoChunk;)V replaceOldBedrock
	b ()Z hasBedrockHoles
	b (Lnet/minecraft/world/level/chunk/ProtoChunk;)V applyBedrockMask
net/minecraft/world/level/levelgen/BitRandomSource net/minecraft/world/level/levelgen/BitRandomSource
	b FLOAT_MULTIPLIER
	c DOUBLE_MULTIPLIER
	a (I)I nextInt
	c (I)I next
	f ()I nextInt
	g ()J nextLong
	h ()Z nextBoolean
	i ()F nextFloat
	j ()D nextDouble
net/minecraft/world/level/levelgen/DensityFunction net/minecraft/world/level/levelgen/DensityFunction
	b DIRECT_CODEC
	c CODEC
	d HOLDER_HELPER_CODEC
	a ()D minValue
	a (DD)Lnet/minecraft/world/level/levelgen/DensityFunction; clamp
	a (Ldgs$b;)D compute
	a (Ldgs$f;)Lnet/minecraft/world/level/levelgen/DensityFunction; mapAll
	a ([DLdgs$a;)V fillArray
	b ()D maxValue
	c ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
	d ()Lnet/minecraft/world/level/levelgen/DensityFunction; abs
	e ()Lnet/minecraft/world/level/levelgen/DensityFunction; square
	f ()Lnet/minecraft/world/level/levelgen/DensityFunction; cube
	g ()Lnet/minecraft/world/level/levelgen/DensityFunction; halfNegative
	h ()Lnet/minecraft/world/level/levelgen/DensityFunction; quarterNegative
	i ()Lnet/minecraft/world/level/levelgen/DensityFunction; squeeze
net/minecraft/world/level/levelgen/DensityFunctions net/minecraft/world/level/levelgen/DensityFunctions
	a MAX_REASONABLE_NOISE_VALUE
	b DIRECT_CODEC
	c CODEC
	d NOISE_VALUE_CODEC
	a ()Lnet/minecraft/world/level/levelgen/DensityFunction; zero
	a (D)Lnet/minecraft/world/level/levelgen/DensityFunction; constant
	a (IIDD)Lnet/minecraft/world/level/levelgen/DensityFunction; yClampedGradient
	a (J)Lnet/minecraft/world/level/levelgen/DensityFunction; endIslands
	a (Lcom/mojang/serialization/Codec;Ljava/util/function/Function;Ljava/util/function/Function;)Lnet/minecraft/util/KeyDispatchDataCodec; singleArgumentCodec
	a (Lcom/mojang/serialization/MapCodec;)Lnet/minecraft/util/KeyDispatchDataCodec; makeCodec
	a (Ljava/util/function/BiFunction;Ljava/util/function/Function;Ljava/util/function/Function;)Lnet/minecraft/util/KeyDispatchDataCodec; doubleFunctionArgumentCodec
	a (Ljava/util/function/Function;Ljava/util/function/Function;)Lnet/minecraft/util/KeyDispatchDataCodec; singleFunctionArgumentCodec
	a (Lnet/minecraft/core/Holder;)Lnet/minecraft/world/level/levelgen/DensityFunction; noise
	a (Lnet/minecraft/core/Holder;D)Lnet/minecraft/world/level/levelgen/DensityFunction; noise
	a (Lnet/minecraft/core/Holder;DD)Lnet/minecraft/world/level/levelgen/DensityFunction; mappedNoise
	a (Lnet/minecraft/core/Holder;DDD)Lnet/minecraft/world/level/levelgen/DensityFunction; mappedNoise
	a (Lnet/minecraft/core/Holder;DDDD)Lnet/minecraft/world/level/levelgen/DensityFunction; mappedNoise
	a (Lnet/minecraft/core/IRegistry;)Lcom/mojang/serialization/Codec; bootstrap
	a (Lnet/minecraft/core/IRegistry;Ljava/lang/String;Lnet/minecraft/util/KeyDispatchDataCodec;)Lcom/mojang/serialization/Codec; register
	a (Lnet/minecraft/util/CubicSpline;)Lnet/minecraft/world/level/levelgen/DensityFunction; spline
	a (Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; interpolated
	a (Lnet/minecraft/world/level/levelgen/DensityFunction;DD)Lnet/minecraft/world/level/levelgen/DensityFunction; mapFromUnitTo
	a (Lnet/minecraft/world/level/levelgen/DensityFunction;DDLnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; rangeChoice
	a (Lnet/minecraft/world/level/levelgen/DensityFunction;DLnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; lerp
	a (Lnet/minecraft/world/level/levelgen/DensityFunction;Ldgt$k$a;)Lnet/minecraft/world/level/levelgen/DensityFunction; map
	a (Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/core/Holder;Ldgt$z$a;)Lnet/minecraft/world/level/levelgen/DensityFunction; weirdScaledSampler
	a (Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; add
	a (Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;DLnet/minecraft/core/Holder;)Lnet/minecraft/world/level/levelgen/DensityFunction; shiftedNoise2d
	a (Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; lerp
	b ()Lnet/minecraft/world/level/levelgen/DensityFunction; blendAlpha
	b (Lnet/minecraft/core/Holder;)Lnet/minecraft/world/level/levelgen/DensityFunction; shiftA
	b (Lnet/minecraft/core/Holder;DD)Lnet/minecraft/world/level/levelgen/DensityFunction; noise
	b (Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; flatCache
	b (Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; mul
	c ()Lnet/minecraft/world/level/levelgen/DensityFunction; blendOffset
	c (Lnet/minecraft/core/Holder;)Lnet/minecraft/world/level/levelgen/DensityFunction; shiftB
	c (Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; cache2d
	c (Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; min
	d (Lnet/minecraft/core/Holder;)Lnet/minecraft/world/level/levelgen/DensityFunction; shift
	d (Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; cacheOnce
	d (Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; max
	e (Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; cacheAllInCell
	f (Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; blendDensity
net/minecraft/world/level/levelgen/GeodeBlockSettings net/minecraft/world/level/levelgen/GeodeBlockSettings
	a fillingProvider
	b innerLayerProvider
	c alternateInnerLayerProvider
	d middleLayerProvider
	e outerLayerProvider
	f innerPlacements
	g cannotReplace
	h invalidBlocks
	i CODEC
net/minecraft/world/level/levelgen/GeodeCrackSettings net/minecraft/world/level/levelgen/GeodeCrackSettings
	a CODEC
	b generateCrackChance
	c baseCrackSize
	d crackPointOffset
net/minecraft/world/level/levelgen/GeodeLayerSettings net/minecraft/world/level/levelgen/GeodeLayerSettings
	a CODEC
	b filling
	c innerLayer
	d middleLayer
	e outerLayer
	f LAYER_RANGE
net/minecraft/world/level/levelgen/LegacyRandomSource net/minecraft/world/level/levelgen/LegacyRandomSource
	d MODULUS_BITS
	e MODULUS_MASK
	f MULTIPLIER
	g INCREMENT
	h seed
	i gaussianSource
	b (J)V setSeed
	c (I)I next
	d ()Lnet/minecraft/util/RandomSource; fork
	e ()Lnet/minecraft/world/level/levelgen/PositionalRandomFactory; forkPositional
	k ()D nextGaussian
net/minecraft/world/level/levelgen/MarsagliaPolarGaussian net/minecraft/world/level/levelgen/MarsagliaPolarGaussian
	a randomSource
	b nextNextGaussian
	c haveNextNextGaussian
	a ()V reset
	b ()D nextGaussian
net/minecraft/world/level/levelgen/NoiseChunk net/minecraft/world/level/levelgen/NoiseChunk
	A cellStartBlockX
	B cellStartBlockY
	C cellStartBlockZ
	D inCellX
	E inCellY
	F inCellZ
	G interpolationCounter
	H arrayInterpolationCounter
	I arrayIndex
	J sliceFillingContextProvider
	a noiseSettings
	b cellCountXZ
	c cellCountY
	d cellNoiseMinY
	e firstCellX
	f firstCellZ
	g firstNoiseX
	h firstNoiseZ
	i interpolators
	j cellCaches
	k wrapped
	l preliminarySurfaceLevel
	m aquifer
	n initialDensityNoJaggedness
	o blockStateRule
	p blender
	q blendAlpha
	r blendOffset
	s beardifier
	t lastBlendingDataPos
	u lastBlendingOutput
	v noiseSizeXZ
	w cellWidth
	x cellHeight
	y interpolating
	z fillingCell
	a ()I blockX
	a (I)Ldgs$b; forIndex
	a (ID)V updateForY
	a (II)I preliminarySurfaceLevel
	a (J)I computePreliminarySurfaceLevel
	a (Lnet/minecraft/world/level/chunk/IChunkAccess;Lnet/minecraft/world/level/levelgen/RandomState;Ldgt$c;Lnet/minecraft/world/level/levelgen/GeneratorSettingBase;Ldgl$a;Lnet/minecraft/world/level/levelgen/blending/Blender;)Lnet/minecraft/world/level/levelgen/NoiseChunk; forChunk
	a (Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; wrap
	a (Lnet/minecraft/world/level/levelgen/NoiseRouter;Ljava/util/List;)Lnet/minecraft/world/level/biome/Climate$Sampler; cachedClimateSampler
	a (ZI)V fillSlice
	a ([DLnet/minecraft/world/level/levelgen/DensityFunction;)V fillAllDirectly
	b ()I blockY
	b (I)V advanceCellX
	b (ID)V updateForX
	b (II)V selectCellYZ
	b (Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; wrapNew
	c ()I blockZ
	c (I)Lnet/minecraft/world/level/levelgen/NoiseChunk; forIndex
	c (ID)V updateForZ
	c (II)Ldib$a; getOrComputeBlendingOutput
	d ()Lnet/minecraft/world/level/levelgen/blending/Blender; getBlender
	e ()Lnet/minecraft/world/level/block/state/IBlockData; getInterpolatedState
	f ()V initializeForFirstCellX
	g ()V stopInterpolation
	h ()V swapSlices
	i ()Lnet/minecraft/world/level/levelgen/Aquifer; aquifer
	j ()I cellWidth
	k ()I cellHeight
net/minecraft/world/level/levelgen/NoiseRouter net/minecraft/world/level/levelgen/NoiseRouter
	a CODEC
	b barrierNoise
	c fluidLevelFloodednessNoise
	d fluidLevelSpreadNoise
	e lavaNoise
	f temperature
	g vegetation
	h continents
	i erosion
	j depth
	k ridges
	l initialDensityWithoutJaggedness
	m finalDensity
	n veinToggle
	o veinRidged
	p veinGap
	a ()Lnet/minecraft/world/level/levelgen/DensityFunction; barrierNoise
	a (Ldgs$f;)Lnet/minecraft/world/level/levelgen/NoiseRouter; mapAll
	a (Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/serialization/codecs/RecordCodecBuilder; field
	b ()Lnet/minecraft/world/level/levelgen/DensityFunction; fluidLevelFloodednessNoise
	c ()Lnet/minecraft/world/level/levelgen/DensityFunction; fluidLevelSpreadNoise
	d ()Lnet/minecraft/world/level/levelgen/DensityFunction; lavaNoise
	e ()Lnet/minecraft/world/level/levelgen/DensityFunction; temperature
	f ()Lnet/minecraft/world/level/levelgen/DensityFunction; vegetation
	g ()Lnet/minecraft/world/level/levelgen/DensityFunction; continents
	h ()Lnet/minecraft/world/level/levelgen/DensityFunction; erosion
	i ()Lnet/minecraft/world/level/levelgen/DensityFunction; depth
	j ()Lnet/minecraft/world/level/levelgen/DensityFunction; ridges
	k ()Lnet/minecraft/world/level/levelgen/DensityFunction; initialDensityWithoutJaggedness
	l ()Lnet/minecraft/world/level/levelgen/DensityFunction; finalDensity
	m ()Lnet/minecraft/world/level/levelgen/DensityFunction; veinToggle
	n ()Lnet/minecraft/world/level/levelgen/DensityFunction; veinRidged
	o ()Lnet/minecraft/world/level/levelgen/DensityFunction; veinGap
net/minecraft/world/level/levelgen/NoiseRouterData net/minecraft/world/level/levelgen/NoiseRouterData
	A BASE_3D_NOISE_END
	B SLOPED_CHEESE
	C OFFSET_LARGE
	D FACTOR_LARGE
	E JAGGEDNESS_LARGE
	F DEPTH_LARGE
	G SLOPED_CHEESE_LARGE
	H OFFSET_AMPLIFIED
	I FACTOR_AMPLIFIED
	J JAGGEDNESS_AMPLIFIED
	K DEPTH_AMPLIFIED
	L SLOPED_CHEESE_AMPLIFIED
	M SLOPED_CHEESE_END
	N SPAGHETTI_ROUGHNESS_FUNCTION
	O ENTRANCES
	P NOODLE
	Q PILLARS
	R SPAGHETTI_2D_THICKNESS_MODULATOR
	S SPAGHETTI_2D
	a GLOBAL_OFFSET
	b ISLAND_CHUNK_DISTANCE
	c ISLAND_CHUNK_DISTANCE_SQR
	d CONTINENTS
	e EROSION
	f RIDGES
	g RIDGES_FOLDED
	h OFFSET
	i FACTOR
	j JAGGEDNESS
	k DEPTH
	l CONTINENTS_LARGE
	m EROSION_LARGE
	n ORE_THICKNESS
	o VEININESS_FREQUENCY
	p NOODLE_SPACING_AND_STRAIGHTNESS
	q SURFACE_DENSITY_THRESHOLD
	r CHEESE_NOISE_TARGET
	s BLENDING_FACTOR
	t BLENDING_JAGGEDNESS
	u ZERO
	v Y
	w SHIFT_X
	x SHIFT_Z
	y BASE_3D_NOISE_OVERWORLD
	z BASE_3D_NOISE_NETHER
	a ()Lnet/minecraft/world/level/levelgen/NoiseRouter; none
	a (F)F peaksAndValleys
	a (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; createKey
	a (Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/levelgen/NoiseRouter; end
	a (Lnet/minecraft/core/HolderGetter;II)Lnet/minecraft/world/level/levelgen/DensityFunction; slideNetherLike
	a (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/levelgen/NoiseRouter; nether
	a (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; underground
	a (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;ZZ)Lnet/minecraft/world/level/levelgen/NoiseRouter; overworld
	a (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/level/levelgen/DensityFunction; getFunction
	a (Lnet/minecraft/data/worldgen/BootstapContext;)Lnet/minecraft/core/Holder; bootstrap
	a (Lnet/minecraft/data/worldgen/BootstapContext;Lnet/minecraft/core/HolderGetter;Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/core/Holder;Lnet/minecraft/core/Holder;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;Z)V registerTerrainNoises
	a (Lnet/minecraft/data/worldgen/BootstapContext;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; registerAndWrap
	a (Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; peaksAndValleys
	a (Lnet/minecraft/world/level/levelgen/DensityFunction;II)Lnet/minecraft/world/level/levelgen/DensityFunction; slideEndLike
	a (Lnet/minecraft/world/level/levelgen/DensityFunction;IIIIDIID)Lnet/minecraft/world/level/levelgen/DensityFunction; slide
	a (Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; splineWithBlending
	a (Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;III)Lnet/minecraft/world/level/levelgen/DensityFunction; yLimitedInterpolatable
	a (ZLnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; slideOverworld
	b (Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/levelgen/DensityFunction; spaghettiRoughnessFunction
	b (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/levelgen/NoiseRouter; caves
	b (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/NoiseRouter; noNewCaves
	b (Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; postProcess
	b (Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; noiseGradientDensity
	c (Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/levelgen/DensityFunction; pillars
	c (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/levelgen/NoiseRouter; floatingIslands
	c (Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; slideEnd
	d (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/levelgen/DensityFunction; entrances
	e (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/levelgen/DensityFunction; noodle
	f (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/levelgen/DensityFunction; spaghetti2D
net/minecraft/world/level/levelgen/NoiseSettings net/minecraft/world/level/levelgen/NoiseSettings
	a CODEC
	b OVERWORLD_NOISE_SETTINGS
	c NETHER_NOISE_SETTINGS
	d END_NOISE_SETTINGS
	e CAVES_NOISE_SETTINGS
	f FLOATING_ISLANDS_NOISE_SETTINGS
	g minY
	h height
	i noiseSizeHorizontal
	j noiseSizeVertical
	a ()I getCellHeight
	a (IIII)Lnet/minecraft/world/level/levelgen/NoiseSettings; create
	a (Lnet/minecraft/world/level/LevelHeightAccessor;)Lnet/minecraft/world/level/levelgen/NoiseSettings; clampToHeightAccessor
	a (Lnet/minecraft/world/level/levelgen/NoiseSettings;)Lcom/mojang/serialization/DataResult; guardY
	b ()I getCellWidth
	c ()I minY
	d ()I height
	e ()I noiseSizeHorizontal
	f ()I noiseSizeVertical
net/minecraft/world/level/levelgen/Noises net/minecraft/world/level/levelgen/Noises
	A SPAGHETTI_ROUGHNESS_MODULATOR
	B CAVE_ENTRANCE
	C CAVE_LAYER
	D CAVE_CHEESE
	E ORE_VEININESS
	F ORE_VEIN_A
	G ORE_VEIN_B
	H ORE_GAP
	I NOODLE
	J NOODLE_THICKNESS
	K NOODLE_RIDGE_A
	L NOODLE_RIDGE_B
	M JAGGED
	N SURFACE
	O SURFACE_SECONDARY
	P CLAY_BANDS_OFFSET
	Q BADLANDS_PILLAR
	R BADLANDS_PILLAR_ROOF
	S BADLANDS_SURFACE
	T ICEBERG_PILLAR
	U ICEBERG_PILLAR_ROOF
	V ICEBERG_SURFACE
	W SWAMP
	X CALCITE
	Y GRAVEL
	Z POWDER_SNOW
	a TEMPERATURE
	aa PACKED_ICE
	ab ICE
	ac SOUL_SAND_LAYER
	ad GRAVEL_LAYER
	ae PATCH
	af NETHERRACK
	ag NETHER_WART
	ah NETHER_STATE_SELECTOR
	b VEGETATION
	c CONTINENTALNESS
	d EROSION
	e TEMPERATURE_LARGE
	f VEGETATION_LARGE
	g CONTINENTALNESS_LARGE
	h EROSION_LARGE
	i RIDGE
	j SHIFT
	k AQUIFER_BARRIER
	l AQUIFER_FLUID_LEVEL_FLOODEDNESS
	m AQUIFER_LAVA
	n AQUIFER_FLUID_LEVEL_SPREAD
	o PILLAR
	p PILLAR_RARENESS
	q PILLAR_THICKNESS
	r SPAGHETTI_2D
	s SPAGHETTI_2D_ELEVATION
	t SPAGHETTI_2D_MODULATOR
	u SPAGHETTI_2D_THICKNESS
	v SPAGHETTI_3D_1
	w SPAGHETTI_3D_2
	x SPAGHETTI_3D_RARITY
	y SPAGHETTI_3D_THICKNESS
	z SPAGHETTI_ROUGHNESS
	a (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; createKey
	a (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/world/level/levelgen/PositionalRandomFactory;Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/level/levelgen/synth/NoiseGeneratorNormal; instantiate
net/minecraft/world/level/levelgen/OreVeinifier net/minecraft/world/level/levelgen/OreVeinifier
	a VEININESS_THRESHOLD
	b EDGE_ROUNDOFF_BEGIN
	c MAX_EDGE_ROUNDOFF
	d VEIN_SOLIDNESS
	e MIN_RICHNESS
	f MAX_RICHNESS
	g MAX_RICHNESS_THRESHOLD
	h CHANCE_OF_RAW_ORE_BLOCK
	i SKIP_ORE_IF_GAP_NOISE_IS_BELOW
	a (Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/PositionalRandomFactory;)Ldhd$c; create
net/minecraft/world/level/levelgen/RandomState net/minecraft/world/level/levelgen/RandomState
	a random
	b noises
	c router
	d sampler
	e surfaceSystem
	f aquiferRandom
	g oreRandom
	h noiseIntances
	i positionalRandoms
	a ()Lnet/minecraft/world/level/levelgen/NoiseRouter; router
	a (Lhe$a;Lnet/minecraft/resources/ResourceKey;J)Lnet/minecraft/world/level/levelgen/RandomState; create
	a (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/world/level/levelgen/PositionalRandomFactory; getOrCreateRandomFactory
	a (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/level/levelgen/synth/NoiseGeneratorNormal; getOrCreateNoise
	a (Lnet/minecraft/world/level/levelgen/GeneratorSettingBase;Lnet/minecraft/core/HolderGetter;J)Lnet/minecraft/world/level/levelgen/RandomState; create
	b ()Lnet/minecraft/world/level/biome/Climate$Sampler; sampler
	c ()Lnet/minecraft/world/level/levelgen/SurfaceSystem; surfaceSystem
	d ()Lnet/minecraft/world/level/levelgen/PositionalRandomFactory; aquiferRandom
	e ()Lnet/minecraft/world/level/levelgen/PositionalRandomFactory; oreRandom
net/minecraft/world/level/levelgen/RandomSupport net/minecraft/world/level/levelgen/RandomSupport
	a GOLDEN_RATIO_64
	b SILVER_RATIO_64
	c SEED_UNIQUIFIER
	a ()J generateUniqueSeed
	a (J)J mixStafford13
	b (J)Ldho$a; upgradeSeedTo128bit
net/minecraft/world/level/levelgen/SingleThreadedRandomSource net/minecraft/world/level/levelgen/SingleThreadedRandomSource
	d MODULUS_BITS
	e MODULUS_MASK
	f MULTIPLIER
	g INCREMENT
	h seed
	i gaussianSource
	b (J)V setSeed
	c (I)I next
	d ()Lnet/minecraft/util/RandomSource; fork
	e ()Lnet/minecraft/world/level/levelgen/PositionalRandomFactory; forkPositional
	k ()D nextGaussian
net/minecraft/world/level/levelgen/SurfaceRules net/minecraft/world/level/levelgen/SurfaceRules
	a ON_FLOOR
	b UNDER_FLOOR
	c DEEP_UNDER_FLOOR
	d VERY_DEEP_UNDER_FLOOR
	e ON_CEILING
	f UNDER_CEILING
	a ()Ldhq$f; steep
	a (II)Ldhq$f; waterBlockCheck
	a (IZILnet/minecraft/world/level/levelgen/placement/CaveSurface;)Ldhq$f; stoneDepthCheck
	a (IZLnet/minecraft/world/level/levelgen/placement/CaveSurface;)Ldhq$f; stoneDepthCheck
	a (Ldhq$f;)Ldhq$f; not
	a (Ldhq$f;Ldhq$o;)Ldhq$o; ifTrue
	a (Ljava/lang/String;Lnet/minecraft/world/level/levelgen/VerticalAnchor;Lnet/minecraft/world/level/levelgen/VerticalAnchor;)Ldhq$f; verticalGradient
	a (Ljava/util/List;)Ldhq$c; isBiome
	a (Lnet/minecraft/core/IRegistry;Ljava/lang/String;Lnet/minecraft/util/KeyDispatchDataCodec;)Lcom/mojang/serialization/Codec; register
	a (Lnet/minecraft/resources/ResourceKey;D)Ldhq$f; noiseCondition
	a (Lnet/minecraft/resources/ResourceKey;DD)Ldhq$f; noiseCondition
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Ldhq$o; state
	a (Lnet/minecraft/world/level/levelgen/VerticalAnchor;I)Ldhq$f; yBlockCheck
	a ([Ldhq$o;)Ldhq$o; sequence
	a ([Lnet/minecraft/resources/ResourceKey;)Ldhq$f; isBiome
	b ()Ldhq$f; hole
	b (II)Ldhq$f; waterStartCheck
	b (Lnet/minecraft/world/level/levelgen/VerticalAnchor;I)Ldhq$f; yStartCheck
	c ()Ldhq$f; abovePreliminarySurface
	d ()Ldhq$f; temperature
	e ()Ldhq$o; bandlands
net/minecraft/world/level/levelgen/SurfaceSystem net/minecraft/world/level/levelgen/SurfaceSystem
	a WHITE_TERRACOTTA
	b ORANGE_TERRACOTTA
	c TERRACOTTA
	d YELLOW_TERRACOTTA
	e BROWN_TERRACOTTA
	f RED_TERRACOTTA
	g LIGHT_GRAY_TERRACOTTA
	h PACKED_ICE
	i SNOW_BLOCK
	j defaultBlock
	k seaLevel
	l clayBands
	m clayBandsOffsetNoise
	n badlandsPillarNoise
	o badlandsPillarRoofNoise
	p badlandsSurfaceNoise
	q icebergPillarNoise
	r icebergPillarRoofNoise
	s icebergSurfaceNoise
	t noiseRandom
	u surfaceNoise
	v surfaceSecondaryNoise
	a (II)I getSurfaceDepth
	a (III)Lnet/minecraft/world/level/block/state/IBlockData; getBand
	a (ILnet/minecraft/world/level/biome/BiomeBase;Lnet/minecraft/world/level/chunk/BlockColumn;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;III)V frozenOceanExtension
	a (Ldhq$o;Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Ljava/util/function/Function;Lnet/minecraft/world/level/chunk/IChunkAccess;Lnet/minecraft/world/level/levelgen/NoiseChunk;Lnet/minecraft/core/BlockPosition;Z)Ljava/util/Optional; topMaterial
	a (Lnet/minecraft/util/RandomSource;)[Lnet/minecraft/world/level/block/state/IBlockData; generateBands
	a (Lnet/minecraft/util/RandomSource;[Lnet/minecraft/world/level/block/state/IBlockData;ILnet/minecraft/world/level/block/state/IBlockData;)V makeBands
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z isStone
	a (Lnet/minecraft/world/level/chunk/BlockColumn;IIILnet/minecraft/world/level/LevelHeightAccessor;)V erodedBadlandsExtension
	a (Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/biome/BiomeManager;Lnet/minecraft/core/IRegistry;ZLnet/minecraft/world/level/levelgen/WorldGenerationContext;Lnet/minecraft/world/level/chunk/IChunkAccess;Lnet/minecraft/world/level/levelgen/NoiseChunk;Ldhq$o;)V buildSurface
	b (II)D getSurfaceSecondary
net/minecraft/world/level/levelgen/ThreadSafeLegacyRandomSource net/minecraft/world/level/levelgen/ThreadSafeLegacyRandomSource
	d MODULUS_BITS
	e MODULUS_MASK
	f MULTIPLIER
	g INCREMENT
	h seed
	i gaussianSource
	b (J)V setSeed
	c (I)I next
	d ()Lnet/minecraft/util/RandomSource; fork
	e ()Lnet/minecraft/world/level/levelgen/PositionalRandomFactory; forkPositional
	k ()D nextGaussian
net/minecraft/world/level/levelgen/VerticalAnchor net/minecraft/world/level/levelgen/VerticalAnchor
	a CODEC
	b BOTTOM
	c TOP
	a ()Lnet/minecraft/world/level/levelgen/VerticalAnchor; bottom
	a (I)Lnet/minecraft/world/level/levelgen/VerticalAnchor; absolute
	a (Lcom/mojang/datafixers/util/Either;)Lnet/minecraft/world/level/levelgen/VerticalAnchor; merge
	a (Lnet/minecraft/world/level/levelgen/VerticalAnchor;)Lcom/mojang/datafixers/util/Either; split
	a (Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I resolveY
	b ()Lnet/minecraft/world/level/levelgen/VerticalAnchor; top
	b (I)Lnet/minecraft/world/level/levelgen/VerticalAnchor; aboveBottom
	c (I)Lnet/minecraft/world/level/levelgen/VerticalAnchor; belowTop
net/minecraft/world/level/levelgen/WorldDimensions net/minecraft/world/level/levelgen/WorldDimensions
	a CODEC
	b dimensions
	c BUILTIN_ORDER
	d VANILLA_DIMENSION_COUNT
	a ()Lnet/minecraft/world/level/chunk/ChunkGenerator; overworld
	a (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; keysInOrder
	a (Lnet/minecraft/core/IRegistry;)Ldhu$b; bake
	a (Lnet/minecraft/core/IRegistry;Lnet/minecraft/core/Holder;Lnet/minecraft/world/level/chunk/ChunkGenerator;)Lnet/minecraft/core/IRegistry; withOverworld
	a (Lnet/minecraft/core/IRegistry;Lnet/minecraft/core/IRegistry;Lnet/minecraft/world/level/chunk/ChunkGenerator;)Lnet/minecraft/core/IRegistry; withOverworld
	a (Lnet/minecraft/core/IRegistryCustom;Lnet/minecraft/world/level/chunk/ChunkGenerator;)Lnet/minecraft/world/level/levelgen/WorldDimensions; replaceOverworldGenerator
	a (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; get
	a (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/level/dimension/WorldDimension;)Lcom/mojang/serialization/Lifecycle; checkStability
	a (Lnet/minecraft/world/level/dimension/WorldDimension;)Z isStableOverworld
	b ()Lcom/google/common/collect/ImmutableSet; levels
	b (Lnet/minecraft/core/IRegistry;)Ldyi$a; specialWorldProperty
	b (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/level/dimension/WorldDimension;)Z isVanillaLike
	b (Lnet/minecraft/world/level/dimension/WorldDimension;)Z isStableNether
	c ()Z isDebug
	c (Lnet/minecraft/world/level/dimension/WorldDimension;)Z isStableEnd
	d ()Lnet/minecraft/core/IRegistry; dimensions
net/minecraft/world/level/levelgen/WorldGenerationContext net/minecraft/world/level/levelgen/WorldGenerationContext
	a minY
	b height
	a ()I getMinGenY
	b ()I getGenDepth
net/minecraft/world/level/levelgen/WorldOptions net/minecraft/world/level/levelgen/WorldOptions
	a CODEC
	b DEMO_OPTIONS
	c seed
	d generateStructures
	e generateBonusChest
	f legacyCustomOptions
	a ()Lnet/minecraft/world/level/levelgen/WorldOptions; defaultWithRandomSeed
	a (Ljava/lang/String;)Ljava/util/OptionalLong; parseSeed
	a (Ljava/util/OptionalLong;)Lnet/minecraft/world/level/levelgen/WorldOptions; withSeed
	a (Z)Lnet/minecraft/world/level/levelgen/WorldOptions; withBonusChest
	b ()J seed
	b (Z)Lnet/minecraft/world/level/levelgen/WorldOptions; withStructures
	c ()Z generateStructures
	d ()Z generateBonusChest
	e ()Z isOldCustomizedWorld
	f ()J randomSeed
net/minecraft/world/level/levelgen/Xoroshiro128PlusPlus net/minecraft/world/level/levelgen/Xoroshiro128PlusPlus
	a seedLo
	b seedHi
	a ()J nextLong
net/minecraft/world/level/levelgen/XoroshiroRandomSource net/minecraft/world/level/levelgen/XoroshiroRandomSource
	b FLOAT_UNIT
	c DOUBLE_UNIT
	d randomNumberGenerator
	e gaussianSource
	a (I)I nextInt
	b (I)V consumeCount
	b (J)V setSeed
	c (I)J nextBits
	d ()Lnet/minecraft/util/RandomSource; fork
	e ()Lnet/minecraft/world/level/levelgen/PositionalRandomFactory; forkPositional
	f ()I nextInt
	g ()J nextLong
	h ()Z nextBoolean
	i ()F nextFloat
	j ()D nextDouble
	k ()D nextGaussian
net/minecraft/world/level/levelgen/blending/Blender net/minecraft/world/level/levelgen/blending/Blender
	a EMPTY
	b SHIFT_NOISE
	c HEIGHT_BLENDING_RANGE_CELLS
	d HEIGHT_BLENDING_RANGE_CHUNKS
	e DENSITY_BLENDING_RANGE_CELLS
	f DENSITY_BLENDING_RANGE_CHUNKS
	g OLD_CHUNK_XZ_RADIUS
	h heightAndBiomeBlendingData
	i densityBlendingData
	a ()Lnet/minecraft/world/level/levelgen/blending/Blender; empty
	a (D)D heightToOffset
	a (DDDDDD)D distanceToCube
	a (II)Ldib$a; blendOffsetAndFactor
	a (III)Lnet/minecraft/core/Holder; blendBiome
	a (IIILdib$b;)D getBlendingDataValue
	a (Ldgs$b;D)D blendDensity
	a (Ldib$b;IIIII)D getBlendingDataValue
	a (Lnet/minecraft/core/EnumDirection8;Lnet/minecraft/world/level/levelgen/blending/BlendingData;)Ldib$c; makeOffsetOldChunkDistanceGetter
	a (Lnet/minecraft/server/level/RegionLimitedWorldAccess;)Lnet/minecraft/world/level/levelgen/blending/Blender; of
	a (Lnet/minecraft/server/level/RegionLimitedWorldAccess;Lnet/minecraft/world/level/chunk/IChunkAccess;)V generateBorderTicks
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/chunk/ProtoChunk;)V addAroundOldChunksCarvingMaskFilter
	a (Lnet/minecraft/world/level/biome/BiomeResolver;)Lnet/minecraft/world/level/biome/BiomeResolver; getBiomeResolver
	a (Lnet/minecraft/world/level/chunk/IChunkAccess;Lnet/minecraft/core/BlockPosition;)V generateBorderTick
	a (Lnet/minecraft/world/level/levelgen/blending/BlendingData;Ljava/util/Map;)Ldib$c; makeOldChunkDistanceGetter
net/minecraft/world/level/levelgen/blending/BlendingData net/minecraft/world/level/levelgen/blending/BlendingData
	a CELL_WIDTH
	b CELL_HEIGHT
	c CELL_RATIO
	d NO_VALUE
	e CODEC
	f BLENDING_DENSITY_FACTOR
	g SOLID_DENSITY
	h AIR_DENSITY
	i CELLS_PER_SECTION_Y
	j QUARTS_PER_SECTION
	k CELL_HORIZONTAL_MAX_INDEX_INSIDE
	l CELL_HORIZONTAL_MAX_INDEX_OUTSIDE
	m CELL_COLUMN_INSIDE_COUNT
	n CELL_COLUMN_OUTSIDE_COUNT
	o CELL_COLUMN_COUNT
	p areaWithOldGeneration
	q SURFACE_BLOCKS
	r hasCalculatedData
	s heights
	t biomes
	u densities
	v DOUBLE_ARRAY_CODEC
	a ()Lnet/minecraft/world/level/LevelHeightAccessor; getAreaWithOldGeneration
	a (I)I getCellYIndex
	a (II)I getInsideIndex
	a (III)D getHeight
	a (IIIILdic$b;)V iterateDensities
	a (IIILdic$a;)V iterateBiomes
	a (IILdic$c;)V iterateHeights
	a (ILnet/minecraft/world/level/chunk/IChunkAccess;II)V addValuesForColumn
	a (Lnet/minecraft/server/level/RegionLimitedWorldAccess;II)Lnet/minecraft/world/level/levelgen/blending/BlendingData; getOrUpdateBlendingData
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;IIZ)Ljava/util/Set; sideByGenerationAge
	a (Lnet/minecraft/world/level/chunk/IChunkAccess;II)I getHeightAtXZ
	a (Lnet/minecraft/world/level/chunk/IChunkAccess;III)[D getDensityColumn
	a (Lnet/minecraft/world/level/chunk/IChunkAccess;Ljava/util/Set;)V calculateData
	a (Lnet/minecraft/world/level/chunk/IChunkAccess;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;)D read1
	a (Lnet/minecraft/world/level/chunk/IChunkAccess;Lnet/minecraft/core/BlockPosition;)Z isGround
	a (Lnet/minecraft/world/level/levelgen/blending/BlendingData;)Lcom/mojang/serialization/DataResult; validateArraySize
	a ([DI)D getDensity
	b ()I cellCountPerColumn
	b (I)I getX
	b (II)I getOutsideIndex
	b (III)D getDensity
	b (Lnet/minecraft/world/level/chunk/IChunkAccess;II)Ljava/util/List; getBiomeColumn
	b (Lnet/minecraft/world/level/chunk/IChunkAccess;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;)D read7
	c ()I quartCountPerColumn
	c (I)I getZ
	d ()I getColumnMinY
	d (I)I zeroIfNegative
	e ()I getMinY
net/minecraft/world/level/levelgen/blockpredicates/AllOfPredicate net/minecraft/world/level/levelgen/blockpredicates/AllOfPredicate
	a CODEC
	a ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; type
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/core/BlockPosition;)Z test
net/minecraft/world/level/levelgen/blockpredicates/AnyOfPredicate net/minecraft/world/level/levelgen/blockpredicates/AnyOfPredicate
	a CODEC
	a ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; type
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/core/BlockPosition;)Z test
net/minecraft/world/level/levelgen/blockpredicates/BlockPredicate net/minecraft/world/level/levelgen/blockpredicates/BlockPredicate
	b CODEC
	c ONLY_IN_AIR_PREDICATE
	d ONLY_IN_AIR_OR_WATER_PREDICATE
	a ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; type
	a (Ljava/util/List;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; allOf
	a (Lnet/minecraft/core/BaseBlockPosition;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; replaceable
	a (Lnet/minecraft/core/BaseBlockPosition;Ljava/util/List;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; matchesBlocks
	a (Lnet/minecraft/core/BaseBlockPosition;Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; hasSturdyFace
	a (Lnet/minecraft/core/BaseBlockPosition;Lnet/minecraft/tags/TagKey;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; matchesTag
	a (Lnet/minecraft/core/BaseBlockPosition;[Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; matchesBlocks
	a (Lnet/minecraft/core/BaseBlockPosition;[Lnet/minecraft/world/level/material/FluidType;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; matchesFluids
	a (Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; hasSturdyFace
	a (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; matchesTag
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BaseBlockPosition;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; wouldSurvive
	a (Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; not
	a (Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; allOf
	a ([Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; matchesBlocks
	a ([Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; allOf
	a ([Lnet/minecraft/world/level/material/FluidType;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; matchesFluids
	b ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; replaceable
	b (Ljava/util/List;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; anyOf
	b (Lnet/minecraft/core/BaseBlockPosition;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; solid
	b (Lnet/minecraft/core/BaseBlockPosition;Ljava/util/List;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; matchesFluids
	b (Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; anyOf
	b ([Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; anyOf
	c ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; solid
	c (Ljava/util/List;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; matchesBlocks
	c (Lnet/minecraft/core/BaseBlockPosition;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; noFluid
	d ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; noFluid
	d (Lnet/minecraft/core/BaseBlockPosition;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; insideWorld
	e ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; alwaysTrue
net/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType net/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType
	a MATCHING_BLOCKS
	b MATCHING_BLOCK_TAG
	c MATCHING_FLUIDS
	d HAS_STURDY_FACE
	e SOLID
	f REPLACEABLE
	g WOULD_SURVIVE
	h INSIDE_WORLD_BOUNDS
	i ANY_OF
	j ALL_OF
	k NOT
	l TRUE
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; register
net/minecraft/world/level/levelgen/blockpredicates/CombiningPredicate net/minecraft/world/level/levelgen/blockpredicates/CombiningPredicate
	e predicates
	a (Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; codec
net/minecraft/world/level/levelgen/blockpredicates/HasSturdyFacePredicate net/minecraft/world/level/levelgen/blockpredicates/HasSturdyFacePredicate
	a CODEC
	e offset
	f direction
	a ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; type
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/core/BlockPosition;)Z test
net/minecraft/world/level/levelgen/blockpredicates/InsideWorldBoundsPredicate net/minecraft/world/level/levelgen/blockpredicates/InsideWorldBoundsPredicate
	a CODEC
	e offset
	a ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; type
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/core/BlockPosition;)Z test
net/minecraft/world/level/levelgen/blockpredicates/MatchingBlockTagPredicate net/minecraft/world/level/levelgen/blockpredicates/MatchingBlockTagPredicate
	a tag
	e CODEC
	a ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; type
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z test
net/minecraft/world/level/levelgen/blockpredicates/MatchingBlocksPredicate net/minecraft/world/level/levelgen/blockpredicates/MatchingBlocksPredicate
	a CODEC
	e blocks
	a ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; type
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z test
net/minecraft/world/level/levelgen/blockpredicates/MatchingFluidsPredicate net/minecraft/world/level/levelgen/blockpredicates/MatchingFluidsPredicate
	a CODEC
	e fluids
	a ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; type
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z test
net/minecraft/world/level/levelgen/blockpredicates/NotPredicate net/minecraft/world/level/levelgen/blockpredicates/NotPredicate
	a CODEC
	e predicate
	a ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; type
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/core/BlockPosition;)Z test
net/minecraft/world/level/levelgen/blockpredicates/ReplaceablePredicate net/minecraft/world/level/levelgen/blockpredicates/ReplaceablePredicate
	a CODEC
	a ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; type
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z test
net/minecraft/world/level/levelgen/blockpredicates/SolidPredicate net/minecraft/world/level/levelgen/blockpredicates/SolidPredicate
	a CODEC
	a ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; type
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z test
net/minecraft/world/level/levelgen/blockpredicates/StateTestingPredicate net/minecraft/world/level/levelgen/blockpredicates/StateTestingPredicate
	f offset
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P1; stateTestingCodec
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/core/BlockPosition;)Z test
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z test
net/minecraft/world/level/levelgen/blockpredicates/TrueBlockPredicate net/minecraft/world/level/levelgen/blockpredicates/TrueBlockPredicate
	a INSTANCE
	e CODEC
	a ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; type
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/core/BlockPosition;)Z test
net/minecraft/world/level/levelgen/blockpredicates/WouldSurvivePredicate net/minecraft/world/level/levelgen/blockpredicates/WouldSurvivePredicate
	a CODEC
	e offset
	f state
	a ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; type
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/core/BlockPosition;)Z test
net/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration net/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration
	a CODEC
	b verticalRotation
	c shape
net/minecraft/world/level/levelgen/carver/CarverDebugSettings net/minecraft/world/level/levelgen/carver/CarverDebugSettings
	a DEFAULT
	b CODEC
	c debugMode
	d airState
	e waterState
	f lavaState
	g barrierState
	a ()Z isDebugMode
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/levelgen/carver/CarverDebugSettings; of
	a (ZLnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/levelgen/carver/CarverDebugSettings; of
	a (ZLnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/levelgen/carver/CarverDebugSettings; of
	b ()Lnet/minecraft/world/level/block/state/IBlockData; getAirState
	c ()Lnet/minecraft/world/level/block/state/IBlockData; getWaterState
	d ()Lnet/minecraft/world/level/block/state/IBlockData; getLavaState
	e ()Lnet/minecraft/world/level/block/state/IBlockData; getBarrierState
net/minecraft/world/level/levelgen/carver/CarvingContext net/minecraft/world/level/levelgen/carver/CarvingContext
	a registryAccess
	b noiseChunk
	c randomState
	d surfaceRule
	a (Ljava/util/function/Function;Lnet/minecraft/world/level/chunk/IChunkAccess;Lnet/minecraft/core/BlockPosition;Z)Ljava/util/Optional; topMaterial
	c ()Lnet/minecraft/core/IRegistryCustom; registryAccess
	d ()Lnet/minecraft/world/level/levelgen/RandomState; randomState
net/minecraft/world/level/levelgen/carver/CaveCarverConfiguration net/minecraft/world/level/levelgen/carver/CaveCarverConfiguration
	a CODEC
	b horizontalRadiusMultiplier
	c verticalRadiusMultiplier
	j floorLevel
net/minecraft/world/level/levelgen/feature/FeaturePlaceContext net/minecraft/world/level/levelgen/feature/FeaturePlaceContext
	a topFeature
	b level
	c chunkGenerator
	d random
	e origin
	f config
	a ()Ljava/util/Optional; topFeature
	b ()Lnet/minecraft/world/level/GeneratorAccessSeed; level
	c ()Lnet/minecraft/world/level/chunk/ChunkGenerator; chunkGenerator
	d ()Lnet/minecraft/util/RandomSource; random
	e ()Lnet/minecraft/core/BlockPosition; origin
	f ()Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureConfiguration; config
net/minecraft/world/level/levelgen/feature/FossilFeatureConfiguration net/minecraft/world/level/levelgen/feature/FossilFeatureConfiguration
	a CODEC
	b fossilStructures
	c overlayStructures
	d fossilProcessors
	e overlayProcessors
	f maxEmptyCornersAllowed
net/minecraft/world/level/levelgen/feature/GeodeFeature net/minecraft/world/level/levelgen/feature/GeodeFeature
	a DIRECTIONS
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/ScatteredOreFeature net/minecraft/world/level/levelgen/feature/ScatteredOreFeature
	a MAX_DIST_FROM_ORIGIN
	a (Lnet/minecraft/core/BlockPosition$MutableBlockPosition;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;I)V offsetTargetPos
	a (Lnet/minecraft/util/RandomSource;I)I getRandomPlacementInOneAxisRelativeToOrigin
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/WeightedPlacedFeature net/minecraft/world/level/levelgen/feature/WeightedPlacedFeature
	a CODEC
	b feature
	c chance
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Z place
net/minecraft/world/level/levelgen/feature/configurations/BlockColumnConfiguration net/minecraft/world/level/levelgen/feature/configurations/BlockColumnConfiguration
	a CODEC
	b layers
	c direction
	d allowedPlacement
	e prioritizeTip
	a ()Ljava/util/List; layers
	a (Lnet/minecraft/util/valueproviders/IntProvider;Lnet/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProvider;)Ldly$a; layer
	b ()Lnet/minecraft/core/EnumDirection; direction
	b (Lnet/minecraft/util/valueproviders/IntProvider;Lnet/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProvider;)Lnet/minecraft/world/level/levelgen/feature/configurations/BlockColumnConfiguration; simple
	c ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; allowedPlacement
	d ()Z prioritizeTip
net/minecraft/world/level/levelgen/feature/configurations/DripstoneClusterConfiguration net/minecraft/world/level/levelgen/feature/configurations/DripstoneClusterConfiguration
	a CODEC
	b floorToCeilingSearchRange
	c height
	d radius
	e maxStalagmiteStalactiteHeightDiff
	f heightDeviation
	g dripstoneBlockLayerThickness
	h density
	i wetness
	j chanceOfDripstoneColumnAtMaxDistanceFromCenter
	k maxDistanceFromEdgeAffectingChanceOfDripstoneColumn
	l maxDistanceFromCenterAffectingHeightBias
net/minecraft/world/level/levelgen/feature/configurations/GeodeConfiguration net/minecraft/world/level/levelgen/feature/configurations/GeodeConfiguration
	a CHANCE_RANGE
	b CODEC
	c geodeBlockSettings
	d geodeLayerSettings
	e geodeCrackSettings
	f usePotentialPlacementsChance
	g useAlternateLayer0Chance
	h placementsRequireLayer0Alternate
	i outerWallDistance
	j distributionPoints
	k pointOffset
	l minGenOffset
	n maxGenOffset
	o noiseMultiplier
	p invalidBlocksThreshold
net/minecraft/world/level/levelgen/feature/configurations/LargeDripstoneConfiguration net/minecraft/world/level/levelgen/feature/configurations/LargeDripstoneConfiguration
	a CODEC
	b floorToCeilingSearchRange
	c columnRadius
	d heightScale
	e maxColumnRadiusToCaveHeightRatio
	f stalactiteBluntness
	g stalagmiteBluntness
	h windSpeed
	i minRadiusForWind
	j minBluntnessForWind
net/minecraft/world/level/levelgen/feature/configurations/MultifaceGrowthConfiguration net/minecraft/world/level/levelgen/feature/configurations/MultifaceGrowthConfiguration
	a CODEC
	b placeBlock
	c searchRange
	d canPlaceOnFloor
	e canPlaceOnCeiling
	f canPlaceOnWall
	g chanceOfSpreading
	h canBePlacedOn
	i validDirections
	a (Lnet/minecraft/util/RandomSource;)Ljava/util/List; getShuffledDirections
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/EnumDirection;)Ljava/util/List; getShuffledDirectionsExcept
	a (Lnet/minecraft/world/level/block/Block;)Lcom/mojang/serialization/DataResult; apply
net/minecraft/world/level/levelgen/feature/configurations/NetherForestVegetationConfig net/minecraft/world/level/levelgen/feature/configurations/NetherForestVegetationConfig
	c CODEC
	d spreadWidth
	e spreadHeight
net/minecraft/world/level/levelgen/feature/configurations/PointedDripstoneConfiguration net/minecraft/world/level/levelgen/feature/configurations/PointedDripstoneConfiguration
	a CODEC
	b chanceOfTallerDripstone
	c chanceOfDirectionalSpread
	d chanceOfSpreadRadius2
	e chanceOfSpreadRadius3
net/minecraft/world/level/levelgen/feature/configurations/RootSystemConfiguration net/minecraft/world/level/levelgen/feature/configurations/RootSystemConfiguration
	a CODEC
	b treeFeature
	c requiredVerticalSpaceForTree
	d rootRadius
	e rootReplaceable
	f rootStateProvider
	g rootPlacementAttempts
	h rootColumnMaxHeight
	i hangingRootRadius
	j hangingRootsVerticalSpan
	k hangingRootStateProvider
	l hangingRootPlacementAttempts
	n allowedVerticalWaterForTree
	o allowedTreePosition
net/minecraft/world/level/levelgen/feature/configurations/SculkPatchConfiguration net/minecraft/world/level/levelgen/feature/configurations/SculkPatchConfiguration
	a CODEC
	b chargeCount
	c amountPerCharge
	d spreadAttempts
	e growthRounds
	f spreadRounds
	g extraRareGrowths
	h catalystChance
	a ()I chargeCount
	b ()I amountPerCharge
	c ()I spreadAttempts
	d ()I growthRounds
	f ()I spreadRounds
	g ()Lnet/minecraft/util/valueproviders/IntProvider; extraRareGrowths
	h ()F catalystChance
net/minecraft/world/level/levelgen/feature/configurations/TwistingVinesConfig net/minecraft/world/level/levelgen/feature/configurations/TwistingVinesConfig
	a CODEC
	b spreadWidth
	c spreadHeight
	d maxHeight
	a ()I spreadWidth
	b ()I spreadHeight
	c ()I maxHeight
net/minecraft/world/level/levelgen/feature/configurations/UnderwaterMagmaConfiguration net/minecraft/world/level/levelgen/feature/configurations/UnderwaterMagmaConfiguration
	a CODEC
	b floorSearchRange
	c placementRadiusAroundFloor
	d placementProbabilityPerValidPosition
net/minecraft/world/level/levelgen/feature/configurations/VegetationPatchConfiguration net/minecraft/world/level/levelgen/feature/configurations/VegetationPatchConfiguration
	a CODEC
	b replaceable
	c groundState
	d vegetationFeature
	e surface
	f depth
	g extraBottomBlockChance
	h verticalRange
	i vegetationChance
	j xzRadius
	k extraEdgeColumnChance
net/minecraft/world/level/levelgen/feature/featuresize/FeatureSize net/minecraft/world/level/levelgen/feature/featuresize/FeatureSize
	a CODEC
	b MAX_WIDTH
	c minClippedHeight
	a ()Lcom/mojang/serialization/codecs/RecordCodecBuilder; minClippedHeightCodec
	a (II)I getSizeAtHeight
	b ()Lnet/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeType; type
	c ()Ljava/util/OptionalInt; minClippedHeight
net/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeType net/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeType
	a TWO_LAYERS_FEATURE_SIZE
	b THREE_LAYERS_FEATURE_SIZE
	c codec
	a ()Lcom/mojang/serialization/Codec; codec
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeType; register
net/minecraft/world/level/levelgen/feature/foliageplacers/CherryFoliagePlacer net/minecraft/world/level/levelgen/feature/foliageplacers/CherryFoliagePlacer
	a CODEC
	b height
	c wideBottomLayerHoleChance
	g cornerHoleChance
	h hangingLeavesChance
	i hangingLeavesExtensionChance
	a ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacers; type
	a (Lnet/minecraft/util/RandomSource;IIIIZ)Z shouldSkipLocation
	a (Lnet/minecraft/util/RandomSource;ILnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;)I foliageHeight
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ldnt$b;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;ILdnt$a;III)V createFoliage
net/minecraft/world/level/levelgen/feature/foliageplacers/RandomSpreadFoliagePlacer net/minecraft/world/level/levelgen/feature/foliageplacers/RandomSpreadFoliagePlacer
	a CODEC
	b foliageHeight
	c leafPlacementAttempts
	a ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacers; type
	a (Lnet/minecraft/util/RandomSource;IIIIZ)Z shouldSkipLocation
	a (Lnet/minecraft/util/RandomSource;ILnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;)I foliageHeight
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ldnt$b;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;ILdnt$a;III)V createFoliage
net/minecraft/world/level/levelgen/feature/rootplacers/AboveRootPlacement net/minecraft/world/level/levelgen/feature/rootplacers/AboveRootPlacement
	a CODEC
	b aboveRootProvider
	c aboveRootPlacementChance
	a ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProvider; aboveRootProvider
	b ()F aboveRootPlacementChance
net/minecraft/world/level/levelgen/feature/rootplacers/MangroveRootPlacement net/minecraft/world/level/levelgen/feature/rootplacers/MangroveRootPlacement
	a CODEC
	b canGrowThrough
	c muddyRootsIn
	d muddyRootsProvider
	e maxRootWidth
	f maxRootLength
	g randomSkewChance
	a ()Lnet/minecraft/core/HolderSet; canGrowThrough
	b ()Lnet/minecraft/core/HolderSet; muddyRootsIn
	c ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProvider; muddyRootsProvider
	d ()I maxRootWidth
	e ()I maxRootLength
	f ()F randomSkewChance
net/minecraft/world/level/levelgen/feature/rootplacers/MangroveRootPlacer net/minecraft/world/level/levelgen/feature/rootplacers/MangroveRootPlacer
	a ROOT_WIDTH_LIMIT
	b ROOT_LENGTH_LIMIT
	c CODEC
	h mangroveRootPlacement
	a ()Lnet/minecraft/world/level/levelgen/feature/rootplacers/RootPlacerType; type
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Ljava/util/List; potentialRootPositions
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;)Z placeRoots
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;)V placeRoot
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Lnet/minecraft/core/BlockPosition;)Z canPlaceRoot
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/core/BlockPosition;Ljava/util/List;I)Z simulateRoots
net/minecraft/world/level/levelgen/feature/rootplacers/RootPlacer net/minecraft/world/level/levelgen/feature/rootplacers/RootPlacer
	d CODEC
	e trunkOffsetY
	f rootProvider
	g aboveRootPlacement
	a ()Lnet/minecraft/world/level/levelgen/feature/rootplacers/RootPlacerType; type
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P3; rootPlacerParts
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/core/BlockPosition; getTrunkOrigin
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;)Z placeRoots
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;)V placeRoot
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Lnet/minecraft/core/BlockPosition;)Z canPlaceRoot
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/state/IBlockData; getPotentiallyWaterloggedState
net/minecraft/world/level/levelgen/feature/rootplacers/RootPlacerType net/minecraft/world/level/levelgen/feature/rootplacers/RootPlacerType
	a MANGROVE_ROOT_PLACER
	b codec
	a ()Lcom/mojang/serialization/Codec; codec
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/feature/rootplacers/RootPlacerType; register
net/minecraft/world/level/levelgen/feature/stateproviders/DualNoiseProvider net/minecraft/world/level/levelgen/feature/stateproviders/DualNoiseProvider
	b CODEC
	i variety
	j slowNoiseParameters
	k slowScale
	l slowNoise
	a ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProviders; type
	a (Lnet/minecraft/core/BlockPosition;)D getSlowNoiseValue
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; getState
net/minecraft/world/level/levelgen/feature/stateproviders/NoiseBasedStateProvider net/minecraft/world/level/levelgen/feature/stateproviders/NoiseBasedStateProvider
	c seed
	d parameters
	e scale
	f noise
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P3; noiseCodec
	a (Lnet/minecraft/core/BlockPosition;D)D getNoiseValue
net/minecraft/world/level/levelgen/feature/stateproviders/NoiseProvider net/minecraft/world/level/levelgen/feature/stateproviders/NoiseProvider
	g CODEC
	h states
	a ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProviders; type
	a (Ljava/util/List;D)Lnet/minecraft/world/level/block/state/IBlockData; getRandomState
	a (Ljava/util/List;Lnet/minecraft/core/BlockPosition;D)Lnet/minecraft/world/level/block/state/IBlockData; getRandomState
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; getState
	b (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P4; noiseProviderCodec
net/minecraft/world/level/levelgen/feature/stateproviders/NoiseThresholdProvider net/minecraft/world/level/levelgen/feature/stateproviders/NoiseThresholdProvider
	b CODEC
	g threshold
	h highChance
	i defaultState
	j lowStates
	k highStates
	a ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProviders; type
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; getState
net/minecraft/world/level/levelgen/feature/stateproviders/RandomizedIntStateProvider net/minecraft/world/level/levelgen/feature/stateproviders/RandomizedIntStateProvider
	b CODEC
	c source
	d propertyName
	e property
	f values
	a ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProviders; type
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; getState
	a (Lnet/minecraft/world/level/block/state/IBlockData;Ljava/lang/String;)Lnet/minecraft/world/level/block/state/properties/BlockStateInteger; findProperty
net/minecraft/world/level/levelgen/feature/stateproviders/RuleBasedBlockStateProvider net/minecraft/world/level/levelgen/feature/stateproviders/RuleBasedBlockStateProvider
	a CODEC
	b fallback
	c rules
	a ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProvider; fallback
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; getState
	a (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/levelgen/feature/stateproviders/RuleBasedBlockStateProvider; simple
	a (Lnet/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProvider;)Lnet/minecraft/world/level/levelgen/feature/stateproviders/RuleBasedBlockStateProvider; simple
	b ()Ljava/util/List; rules
net/minecraft/world/level/levelgen/feature/treedecorators/AttachedToLeavesDecorator net/minecraft/world/level/levelgen/feature/treedecorators/AttachedToLeavesDecorator
	a CODEC
	b probability
	c exclusionRadiusXZ
	d exclusionRadiusY
	e blockProvider
	f requiredEmptyBlocks
	g directions
	a ()Lnet/minecraft/world/level/levelgen/feature/treedecorators/WorldGenFeatureTrees; type
	a (Ldoz$a;)V place
	a (Ldoz$a;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;)Z hasRequiredEmptyBlocks
net/minecraft/world/level/levelgen/feature/trunkplacers/BendingTrunkPlacer net/minecraft/world/level/levelgen/feature/trunkplacers/BendingTrunkPlacer
	a CODEC
	b minHeightForLeaves
	h bendLength
	a ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacers; type
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;ILnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;)Ljava/util/List; placeTrunk
net/minecraft/world/level/levelgen/feature/trunkplacers/CherryTrunkPlacer net/minecraft/world/level/levelgen/feature/trunkplacers/CherryTrunkPlacer
	a CODEC
	b BRANCH_START_CODEC
	h branchCount
	i branchHorizontalLength
	j branchStartOffsetFromTop
	k secondBranchStartOffsetFromTop
	l branchEndOffsetFromTop
	a ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacers; type
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;ILnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;)Ljava/util/List; placeTrunk
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;ILnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;Ljava/util/function/Function;Lnet/minecraft/core/EnumDirection;IZLnet/minecraft/core/BlockPosition$MutableBlockPosition;)Ldnt$a; generateBranch
net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacer net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacer
	a MAX_BASE_HEIGHT
	b MAX_RAND
	c CODEC
	d MAX_HEIGHT
	e baseHeight
	f heightRandA
	g heightRandB
	a ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacers; type
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P3; trunkPlacerParts
	a (Lnet/minecraft/util/RandomSource;)I getTreeHeight
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;ILnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;)Ljava/util/List; placeTrunk
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;)V placeLogIfFree
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;)V setDirtAt
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;Ljava/util/function/Function;)Z placeLog
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Lnet/minecraft/core/BlockPosition;)Z validTreePos
	b (Lnet/minecraft/world/level/VirtualLevelReadable;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;)Z placeLog
	b (Lnet/minecraft/world/level/VirtualLevelReadable;Lnet/minecraft/core/BlockPosition;)Z isFree
	c (Lnet/minecraft/world/level/VirtualLevelReadable;Lnet/minecraft/core/BlockPosition;)Z isDirt
net/minecraft/world/level/levelgen/feature/trunkplacers/UpwardsBranchingTrunkPlacer net/minecraft/world/level/levelgen/feature/trunkplacers/UpwardsBranchingTrunkPlacer
	a CODEC
	b extraBranchSteps
	h placeBranchPerLogProbability
	i extraBranchLength
	j canGrowThrough
	a ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacers; type
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;ILnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;)Ljava/util/List; placeTrunk
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;ILnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration;Ljava/util/List;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;ILnet/minecraft/core/EnumDirection;II)V placeBranch
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Lnet/minecraft/core/BlockPosition;)Z validTreePos
net/minecraft/world/level/levelgen/flat/FlatLevelGeneratorPreset net/minecraft/world/level/levelgen/flat/FlatLevelGeneratorPreset
	a DIRECT_CODEC
	b CODEC
	c displayItem
	d settings
	a ()Lnet/minecraft/core/Holder; displayItem
	b ()Lnet/minecraft/world/level/levelgen/flat/GeneratorSettingsFlat; settings
net/minecraft/world/level/levelgen/flat/FlatLevelGeneratorPresets net/minecraft/world/level/levelgen/flat/FlatLevelGeneratorPresets
	a CLASSIC_FLAT
	b TUNNELERS_DREAM
	c WATER_WORLD
	d OVERWORLD
	e SNOWY_KINGDOM
	f BOTTOMLESS_PIT
	g DESERT
	h REDSTONE_READY
	i THE_VOID
	a (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; register
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/world/level/levelgen/heightproviders/BiasedToBottomHeight net/minecraft/world/level/levelgen/heightproviders/BiasedToBottomHeight
	a CODEC
	b LOGGER
	d minInclusive
	e maxInclusive
	f inner
	a ()Lnet/minecraft/world/level/levelgen/heightproviders/HeightProviderType; getType
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I sample
	a (Lnet/minecraft/world/level/levelgen/VerticalAnchor;Lnet/minecraft/world/level/levelgen/VerticalAnchor;I)Lnet/minecraft/world/level/levelgen/heightproviders/BiasedToBottomHeight; of
net/minecraft/world/level/levelgen/heightproviders/ConstantHeight net/minecraft/world/level/levelgen/heightproviders/ConstantHeight
	a ZERO
	b CODEC
	d value
	a ()Lnet/minecraft/world/level/levelgen/heightproviders/HeightProviderType; getType
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I sample
	a (Lnet/minecraft/world/level/levelgen/VerticalAnchor;)Lnet/minecraft/world/level/levelgen/heightproviders/ConstantHeight; of
	b ()Lnet/minecraft/world/level/levelgen/VerticalAnchor; getValue
net/minecraft/world/level/levelgen/heightproviders/HeightProvider net/minecraft/world/level/levelgen/heightproviders/HeightProvider
	a CONSTANT_OR_DISPATCH_CODEC
	c CODEC
	a ()Lnet/minecraft/world/level/levelgen/heightproviders/HeightProviderType; getType
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I sample
net/minecraft/world/level/levelgen/heightproviders/HeightProviderType net/minecraft/world/level/levelgen/heightproviders/HeightProviderType
	a CONSTANT
	b UNIFORM
	c BIASED_TO_BOTTOM
	d VERY_BIASED_TO_BOTTOM
	e TRAPEZOID
	f WEIGHTED_LIST
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/heightproviders/HeightProviderType; register
net/minecraft/world/level/levelgen/heightproviders/TrapezoidHeight net/minecraft/world/level/levelgen/heightproviders/TrapezoidHeight
	a CODEC
	b LOGGER
	d minInclusive
	e maxInclusive
	f plateau
	a ()Lnet/minecraft/world/level/levelgen/heightproviders/HeightProviderType; getType
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I sample
	a (Lnet/minecraft/world/level/levelgen/VerticalAnchor;Lnet/minecraft/world/level/levelgen/VerticalAnchor;)Lnet/minecraft/world/level/levelgen/heightproviders/TrapezoidHeight; of
	a (Lnet/minecraft/world/level/levelgen/VerticalAnchor;Lnet/minecraft/world/level/levelgen/VerticalAnchor;I)Lnet/minecraft/world/level/levelgen/heightproviders/TrapezoidHeight; of
net/minecraft/world/level/levelgen/heightproviders/UniformHeight net/minecraft/world/level/levelgen/heightproviders/UniformHeight
	a CODEC
	b LOGGER
	d minInclusive
	e maxInclusive
	f warnedFor
	a ()Lnet/minecraft/world/level/levelgen/heightproviders/HeightProviderType; getType
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I sample
	a (Lnet/minecraft/world/level/levelgen/VerticalAnchor;Lnet/minecraft/world/level/levelgen/VerticalAnchor;)Lnet/minecraft/world/level/levelgen/heightproviders/UniformHeight; of
net/minecraft/world/level/levelgen/heightproviders/VeryBiasedToBottomHeight net/minecraft/world/level/levelgen/heightproviders/VeryBiasedToBottomHeight
	a CODEC
	b LOGGER
	d minInclusive
	e maxInclusive
	f inner
	a ()Lnet/minecraft/world/level/levelgen/heightproviders/HeightProviderType; getType
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I sample
	a (Lnet/minecraft/world/level/levelgen/VerticalAnchor;Lnet/minecraft/world/level/levelgen/VerticalAnchor;I)Lnet/minecraft/world/level/levelgen/heightproviders/VeryBiasedToBottomHeight; of
net/minecraft/world/level/levelgen/heightproviders/WeightedListHeight net/minecraft/world/level/levelgen/heightproviders/WeightedListHeight
	a CODEC
	b distribution
	a ()Lnet/minecraft/world/level/levelgen/heightproviders/HeightProviderType; getType
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I sample
net/minecraft/world/level/levelgen/material/MaterialRuleList net/minecraft/world/level/levelgen/material/MaterialRuleList
	a materialRuleList
	a ()Ljava/util/List; materialRuleList
net/minecraft/world/level/levelgen/placement/BiomeFilter net/minecraft/world/level/levelgen/placement/BiomeFilter
	a CODEC
	c INSTANCE
	a ()Lnet/minecraft/world/level/levelgen/placement/BiomeFilter; biome
	a (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Z shouldPlace
	b ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; type
net/minecraft/world/level/levelgen/placement/BlockPredicateFilter net/minecraft/world/level/levelgen/placement/BlockPredicateFilter
	a CODEC
	c predicate
	a (Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;)Lnet/minecraft/world/level/levelgen/placement/BlockPredicateFilter; forPredicate
	a (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Z shouldPlace
	b ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; type
net/minecraft/world/level/levelgen/placement/CarvingMaskPlacement net/minecraft/world/level/levelgen/placement/CarvingMaskPlacement
	a CODEC
	c step
	a (Lnet/minecraft/world/level/levelgen/WorldGenStage$Features;)Lnet/minecraft/world/level/levelgen/placement/CarvingMaskPlacement; forStep
	a_ (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Ljava/util/stream/Stream; getPositions
	b ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; type
net/minecraft/world/level/levelgen/placement/CaveSurface net/minecraft/world/level/levelgen/placement/CaveSurface
	a CEILING
	b FLOOR
	c CODEC
	d direction
	e y
	f id
	g $VALUES
	a ()Lnet/minecraft/core/EnumDirection; getDirection
	b ()I getY
	c ()Ljava/lang/String; getSerializedName
	d ()[Lnet/minecraft/world/level/levelgen/placement/CaveSurface; $values
net/minecraft/world/level/levelgen/placement/CountOnEveryLayerPlacement net/minecraft/world/level/levelgen/placement/CountOnEveryLayerPlacement
	a CODEC
	c count
	a (I)Lnet/minecraft/world/level/levelgen/placement/CountOnEveryLayerPlacement; of
	a (Lnet/minecraft/util/valueproviders/IntProvider;)Lnet/minecraft/world/level/levelgen/placement/CountOnEveryLayerPlacement; of
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z isEmpty
	a (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;IIII)I findOnGroundYPosition
	a_ (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Ljava/util/stream/Stream; getPositions
	b ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; type
net/minecraft/world/level/levelgen/placement/CountPlacement net/minecraft/world/level/levelgen/placement/CountPlacement
	a CODEC
	c count
	a (I)Lnet/minecraft/world/level/levelgen/placement/CountPlacement; of
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)I count
	a (Lnet/minecraft/util/valueproviders/IntProvider;)Lnet/minecraft/world/level/levelgen/placement/CountPlacement; of
	b ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; type
net/minecraft/world/level/levelgen/placement/EnvironmentScanPlacement net/minecraft/world/level/levelgen/placement/EnvironmentScanPlacement
	a CODEC
	c directionOfSearch
	d targetCondition
	e allowedSearchCondition
	f maxSteps
	a (Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;I)Lnet/minecraft/world/level/levelgen/placement/EnvironmentScanPlacement; scanningFor
	a (Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;I)Lnet/minecraft/world/level/levelgen/placement/EnvironmentScanPlacement; scanningFor
	a_ (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Ljava/util/stream/Stream; getPositions
	b ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; type
net/minecraft/world/level/levelgen/placement/HeightRangePlacement net/minecraft/world/level/levelgen/placement/HeightRangePlacement
	a CODEC
	c height
	a (Lnet/minecraft/world/level/levelgen/VerticalAnchor;Lnet/minecraft/world/level/levelgen/VerticalAnchor;)Lnet/minecraft/world/level/levelgen/placement/HeightRangePlacement; uniform
	a (Lnet/minecraft/world/level/levelgen/heightproviders/HeightProvider;)Lnet/minecraft/world/level/levelgen/placement/HeightRangePlacement; of
	a_ (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Ljava/util/stream/Stream; getPositions
	b ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; type
	b (Lnet/minecraft/world/level/levelgen/VerticalAnchor;Lnet/minecraft/world/level/levelgen/VerticalAnchor;)Lnet/minecraft/world/level/levelgen/placement/HeightRangePlacement; triangle
net/minecraft/world/level/levelgen/placement/HeightmapPlacement net/minecraft/world/level/levelgen/placement/HeightmapPlacement
	a CODEC
	c heightmap
	a (Lnet/minecraft/world/level/levelgen/HeightMap$Type;)Lnet/minecraft/world/level/levelgen/placement/HeightmapPlacement; onHeightmap
	a_ (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Ljava/util/stream/Stream; getPositions
	b ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; type
net/minecraft/world/level/levelgen/placement/InSquarePlacement net/minecraft/world/level/levelgen/placement/InSquarePlacement
	a CODEC
	c INSTANCE
	a ()Lnet/minecraft/world/level/levelgen/placement/InSquarePlacement; spread
	a_ (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Ljava/util/stream/Stream; getPositions
	b ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; type
net/minecraft/world/level/levelgen/placement/NoiseBasedCountPlacement net/minecraft/world/level/levelgen/placement/NoiseBasedCountPlacement
	a CODEC
	c noiseToCountRatio
	d noiseFactor
	e noiseOffset
	a (IDD)Lnet/minecraft/world/level/levelgen/placement/NoiseBasedCountPlacement; of
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)I count
	b ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; type
net/minecraft/world/level/levelgen/placement/NoiseThresholdCountPlacement net/minecraft/world/level/levelgen/placement/NoiseThresholdCountPlacement
	a CODEC
	c noiseLevel
	d belowNoise
	e aboveNoise
	a (DII)Lnet/minecraft/world/level/levelgen/placement/NoiseThresholdCountPlacement; of
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)I count
	b ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; type
net/minecraft/world/level/levelgen/placement/PlacedFeature net/minecraft/world/level/levelgen/placement/PlacedFeature
	a DIRECT_CODEC
	b CODEC
	c LIST_CODEC
	d LIST_OF_LISTS_CODEC
	e feature
	f placement
	a ()Ljava/util/stream/Stream; getFeatures
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Z place
	a (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Z placeWithContext
	b ()Lnet/minecraft/core/Holder; feature
	b (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Z placeWithBiomeCheck
	c ()Ljava/util/List; placement
net/minecraft/world/level/levelgen/placement/PlacementContext net/minecraft/world/level/levelgen/placement/PlacementContext
	a level
	b generator
	c topFeature
	a (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/level/block/state/IBlockData; getBlockState
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/world/level/levelgen/WorldGenStage$Features;)Lnet/minecraft/world/level/chunk/CarvingMask; getCarvingMask
	a (Lnet/minecraft/world/level/levelgen/HeightMap$Type;II)I getHeight
	c ()I getMinBuildHeight
	d ()Lnet/minecraft/world/level/GeneratorAccessSeed; getLevel
	e ()Ljava/util/Optional; topFeature
	f ()Lnet/minecraft/world/level/chunk/ChunkGenerator; generator
net/minecraft/world/level/levelgen/placement/PlacementModifier net/minecraft/world/level/levelgen/placement/PlacementModifier
	b CODEC
	a_ (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Ljava/util/stream/Stream; getPositions
	b ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; type
net/minecraft/world/level/levelgen/placement/PlacementModifierType net/minecraft/world/level/levelgen/placement/PlacementModifierType
	a BLOCK_PREDICATE_FILTER
	b RARITY_FILTER
	c SURFACE_RELATIVE_THRESHOLD_FILTER
	d SURFACE_WATER_DEPTH_FILTER
	e BIOME_FILTER
	f COUNT
	g NOISE_BASED_COUNT
	h NOISE_THRESHOLD_COUNT
	i COUNT_ON_EVERY_LAYER
	j ENVIRONMENT_SCAN
	k HEIGHTMAP
	l HEIGHT_RANGE
	m IN_SQUARE
	n RANDOM_OFFSET
	o CARVING_MASK_PLACEMENT
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; register
net/minecraft/world/level/levelgen/placement/RandomOffsetPlacement net/minecraft/world/level/levelgen/placement/RandomOffsetPlacement
	a CODEC
	c xzSpread
	d ySpread
	a (Lnet/minecraft/util/valueproviders/IntProvider;)Lnet/minecraft/world/level/levelgen/placement/RandomOffsetPlacement; vertical
	a (Lnet/minecraft/util/valueproviders/IntProvider;Lnet/minecraft/util/valueproviders/IntProvider;)Lnet/minecraft/world/level/levelgen/placement/RandomOffsetPlacement; of
	a_ (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Ljava/util/stream/Stream; getPositions
	b ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; type
	b (Lnet/minecraft/util/valueproviders/IntProvider;)Lnet/minecraft/world/level/levelgen/placement/RandomOffsetPlacement; horizontal
net/minecraft/world/level/levelgen/placement/RarityFilter net/minecraft/world/level/levelgen/placement/RarityFilter
	a CODEC
	c chance
	a (I)Lnet/minecraft/world/level/levelgen/placement/RarityFilter; onAverageOnceEvery
	a (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Z shouldPlace
	b ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; type
net/minecraft/world/level/levelgen/placement/SurfaceRelativeThresholdFilter net/minecraft/world/level/levelgen/placement/SurfaceRelativeThresholdFilter
	a CODEC
	c heightmap
	d minInclusive
	e maxInclusive
	a (Lnet/minecraft/world/level/levelgen/HeightMap$Type;II)Lnet/minecraft/world/level/levelgen/placement/SurfaceRelativeThresholdFilter; of
	a (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Z shouldPlace
	b ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; type
net/minecraft/world/level/levelgen/placement/SurfaceWaterDepthFilter net/minecraft/world/level/levelgen/placement/SurfaceWaterDepthFilter
	a CODEC
	c maxWaterDepth
	a (I)Lnet/minecraft/world/level/levelgen/placement/SurfaceWaterDepthFilter; forMaxDepth
	a (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Z shouldPlace
	b ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; type
net/minecraft/world/level/levelgen/presets/WorldPreset net/minecraft/world/level/levelgen/presets/WorldPreset
	a DIRECT_CODEC
	b CODEC
	c dimensions
	a ()Lnet/minecraft/world/level/levelgen/WorldDimensions; createWorldDimensions
	a (Lnet/minecraft/world/level/levelgen/presets/WorldPreset;)Lcom/mojang/serialization/DataResult; requireOverworld
	b ()Ljava/util/Optional; overworld
	c ()Lnet/minecraft/core/IRegistry; createRegistry
net/minecraft/world/level/levelgen/presets/WorldPresets net/minecraft/world/level/levelgen/presets/WorldPresets
	a NORMAL
	b FLAT
	c LARGE_BIOMES
	d AMPLIFIED
	e SINGLE_BIOME_SURFACE
	f DEBUG
	a (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; register
	a (Lnet/minecraft/core/IRegistry;)Ljava/util/Optional; fromSettings
	a (Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/level/levelgen/WorldDimensions; createNormalWorldDimensions
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
	b (Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/level/dimension/WorldDimension; getNormalOverworld
net/minecraft/world/level/levelgen/structure/BuiltinStructureSets net/minecraft/world/level/levelgen/structure/BuiltinStructureSets
	a VILLAGES
	b DESERT_PYRAMIDS
	c IGLOOS
	d JUNGLE_TEMPLES
	e SWAMP_HUTS
	f PILLAGER_OUTPOSTS
	g OCEAN_MONUMENTS
	h WOODLAND_MANSIONS
	i BURIED_TREASURES
	j MINESHAFTS
	k RUINED_PORTALS
	l SHIPWRECKS
	m OCEAN_RUINS
	n NETHER_COMPLEXES
	o NETHER_FOSSILS
	p END_CITIES
	q ANCIENT_CITIES
	r STRONGHOLDS
	a (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; register
net/minecraft/world/level/levelgen/structure/BuiltinStructures net/minecraft/world/level/levelgen/structure/BuiltinStructures
	A RUINED_PORTAL_JUNGLE
	B RUINED_PORTAL_SWAMP
	C RUINED_PORTAL_MOUNTAIN
	D RUINED_PORTAL_OCEAN
	E RUINED_PORTAL_NETHER
	F ANCIENT_CITY
	a PILLAGER_OUTPOST
	b MINESHAFT
	c MINESHAFT_MESA
	d WOODLAND_MANSION
	e JUNGLE_TEMPLE
	f DESERT_PYRAMID
	g IGLOO
	h SHIPWRECK
	i SHIPWRECK_BEACHED
	j SWAMP_HUT
	k STRONGHOLD
	l OCEAN_MONUMENT
	m OCEAN_RUIN_COLD
	n OCEAN_RUIN_WARM
	o FORTRESS
	p NETHER_FOSSIL
	q END_CITY
	r BURIED_TREASURE
	s BASTION_REMNANT
	t VILLAGE_PLAINS
	u VILLAGE_DESERT
	v VILLAGE_SAVANNA
	w VILLAGE_SNOWY
	x VILLAGE_TAIGA
	y RUINED_PORTAL_STANDARD
	z RUINED_PORTAL_DESERT
	a (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; createKey
net/minecraft/world/level/levelgen/structure/SinglePieceStructure net/minecraft/world/level/levelgen/structure/SinglePieceStructure
	d constructor
	e width
	f depth
	a (Ldrp$a;)Ljava/util/Optional; findGenerationPoint
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Ldrp$a;)V generatePieces
net/minecraft/world/level/levelgen/structure/Structure net/minecraft/world/level/levelgen/structure/Structure
	a DIRECT_CODEC
	b CODEC
	c settings
	a ()Lnet/minecraft/core/HolderSet; biomes
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/serialization/codecs/RecordCodecBuilder; settingsCodec
	a (Ldrp$a;)Ljava/util/Optional; findGenerationPoint
	a (Ldrp$a;II)I getLowestY
	a (Ldrp$a;IIII)I getLowestY
	a (Ldrp$a;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/core/BlockPosition; getLowestYIn5by5BoxOffset7Blocks
	a (Ldrp$a;Lnet/minecraft/world/level/levelgen/HeightMap$Type;Ljava/util/function/Consumer;)Ljava/util/Optional; onTopOfChunkCenter
	a (Ldrp$b;Ldrp$a;)Z isValidBiome
	a (Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; simpleCodec
	a (Lnet/minecraft/core/IRegistryCustom;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/WorldChunkManager;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;JLnet/minecraft/world/level/ChunkCoordIntPair;ILnet/minecraft/world/level/LevelHeightAccessor;Ljava/util/function/Predicate;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; generate
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/world/level/levelgen/structure/pieces/PiecesContainer;)V afterPlace
	a (Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; adjustBoundingBox
	b ()Ljava/util/Map; spawnOverrides
	b (Ldrp$a;)Ljava/util/Optional; findValidGenerationPoint
	b (Ldrp$a;IIII)[I getCornerHeights
	c ()Lnet/minecraft/world/level/levelgen/WorldGenStage$Decoration; step
	d ()Lnet/minecraft/world/level/levelgen/structure/TerrainAdjustment; terrainAdaptation
	e ()Lnet/minecraft/world/level/levelgen/structure/StructureType; type
net/minecraft/world/level/levelgen/structure/StructureCheck net/minecraft/world/level/levelgen/structure/StructureCheck
	a LOGGER
	b NO_STRUCTURE
	c storageAccess
	d registryAccess
	e biomes
	f structureConfigs
	g structureTemplateManager
	h dimension
	i chunkGenerator
	j randomState
	k heightAccessor
	l biomeSource
	m seed
	n fixerUpper
	o loadedChunks
	p featureChecks
	a (JLit/unimi/dsi/fastutil/objects/Object2IntMap;)V storeFullResults
	a (Lit/unimi/dsi/fastutil/objects/Object2IntMap;)Lit/unimi/dsi/fastutil/objects/Object2IntMap; deduplicateEmptyMap
	a (Lit/unimi/dsi/fastutil/objects/Object2IntMap;Lnet/minecraft/world/level/levelgen/structure/Structure;Z)Lnet/minecraft/world/level/levelgen/structure/StructureCheckResult; checkStructureInfo
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lit/unimi/dsi/fastutil/objects/Object2IntMap; loadStructures
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Ljava/util/Map;)V onStructureLoad
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/world/level/levelgen/structure/Structure;)V incrementReference
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/world/level/levelgen/structure/Structure;Z)Lnet/minecraft/world/level/levelgen/structure/StructureCheckResult; checkStart
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/world/level/levelgen/structure/Structure;ZJ)Lnet/minecraft/world/level/levelgen/structure/StructureCheckResult; tryLoadFromStorage
	b (Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/world/level/levelgen/structure/Structure;)Z canCreateStructure
net/minecraft/world/level/levelgen/structure/StructureCheckResult net/minecraft/world/level/levelgen/structure/StructureCheckResult
	a START_PRESENT
	b START_NOT_PRESENT
	c CHUNK_LOAD_NEEDED
	d $VALUES
	a ()[Lnet/minecraft/world/level/levelgen/structure/StructureCheckResult; $values
net/minecraft/world/level/levelgen/structure/StructurePiece net/minecraft/world/level/levelgen/structure/StructurePiece
	a LOGGER
	b orientation
	c mirror
	d rotation
	e CAVE_AIR
	f boundingBox
	g genDepth
	h type
	i SHAPE_CHECK_BLOCKS
	a ()Lnet/minecraft/world/level/block/EnumBlockRotation; getRotation
	a (I)V setGenDepth
	a (II)I getWorldX
	a (III)V move
	a (IIILnet/minecraft/core/EnumDirection;III)Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; makeBoundingBox
	a (Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; findCollisionPiece
	a (Ljava/util/stream/Stream;)Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; createBoundingBox
	a (Lnet/minecraft/core/EnumDirection;)V setOrientation
	a (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/core/EnumDirection; getRandomHorizontalDirection
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;I)Z isCloseToChunk
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/block/state/IBlockData;IIILnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)V placeBlock
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;IIIIII)V generateAirBox
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;IIIIIILnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;Z)V generateBox
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;IIIIIILnet/minecraft/world/level/block/state/IBlockData;Z)V generateUpperHalfSphere
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;IIIIIIZLnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructurePiece$StructurePieceBlockSelector;)V generateBox
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/util/RandomSource;FIIIIIILnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;ZZ)V generateMaybeBox
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/util/RandomSource;FIIILnet/minecraft/world/level/block/state/IBlockData;)V maybeGenerateBlock
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/EnumDirection;Lnet/minecraft/resources/MinecraftKey;)Z createDispenser
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/resources/MinecraftKey;)Z createChest
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;Z)V generateBox
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;ZLnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructurePiece$StructurePieceBlockSelector;)V generateBox
	a (Lnet/minecraft/world/level/IBlockAccess;IIILnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)Lnet/minecraft/world/level/block/state/IBlockData; getBlock
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/state/IBlockData; reorient
	a (Lnet/minecraft/world/level/IWorldReader;IIILnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)Z canBeReplaced
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/world/level/block/state/IBlockData;)Z createChest
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z isReplaceableByStructures
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V addChildren
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;)Lnet/minecraft/nbt/NBTTagCompound; createTag
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b (I)I getWorldY
	b (II)I getWorldZ
	b (III)Lnet/minecraft/core/BlockPosition$MutableBlockPosition; getWorldPos
	b (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/block/state/IBlockData;IIILnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)V fillColumnDown
	b (Lnet/minecraft/world/level/IWorldReader;IIILnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)Z isInterior
	f ()Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; getBoundingBox
	g ()I getGenDepth
	h ()Lnet/minecraft/core/BlockPosition; getLocatorPosition
	i ()Lnet/minecraft/core/EnumDirection; getOrientation
	j ()Lnet/minecraft/world/level/block/EnumBlockMirror; getMirror
	k ()Lnet/minecraft/world/level/levelgen/structure/pieces/WorldGenFeatureStructurePieceType; getType
net/minecraft/world/level/levelgen/structure/StructureSet net/minecraft/world/level/levelgen/structure/StructureSet
	a DIRECT_CODEC
	b CODEC
	c structures
	d placement
	a ()Ljava/util/List; structures
	a (Lnet/minecraft/core/Holder;)Ldrv$a; entry
	a (Lnet/minecraft/core/Holder;I)Ldrv$a; entry
	b ()Lnet/minecraft/world/level/levelgen/structure/placement/StructurePlacement; placement
net/minecraft/world/level/levelgen/structure/StructureSpawnOverride net/minecraft/world/level/levelgen/structure/StructureSpawnOverride
	a CODEC
	b boundingBox
	c spawns
	a ()Ldrw$a; boundingBox
	b ()Lnet/minecraft/util/random/WeightedRandomList; spawns
net/minecraft/world/level/levelgen/structure/StructureStart net/minecraft/world/level/levelgen/structure/StructureStart
	a INVALID_START_ID
	b INVALID_START
	c LOGGER
	d structure
	e pieceContainer
	f chunkPos
	g references
	h cachedBoundingBox
	a ()Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; getBoundingBox
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;)V placeInChunk
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;J)Lnet/minecraft/world/level/levelgen/structure/StructureStart; loadStaticStart
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/world/level/ChunkCoordIntPair;)Lnet/minecraft/nbt/NBTTagCompound; createTag
	b ()Z isValid
	c ()Lnet/minecraft/world/level/ChunkCoordIntPair; getChunkPos
	d ()Z canBeReferenced
	e ()V addReference
	f ()I getReferences
	g ()I getMaxReferences
	h ()Lnet/minecraft/world/level/levelgen/structure/Structure; getStructure
	i ()Ljava/util/List; getPieces
net/minecraft/world/level/levelgen/structure/StructureType net/minecraft/world/level/levelgen/structure/StructureType
	a BURIED_TREASURE
	b DESERT_PYRAMID
	c END_CITY
	d FORTRESS
	e IGLOO
	f JIGSAW
	g JUNGLE_TEMPLE
	h MINESHAFT
	i NETHER_FOSSIL
	j OCEAN_MONUMENT
	k OCEAN_RUIN
	l RUINED_PORTAL
	m SHIPWRECK
	n STRONGHOLD
	o SWAMP_HUT
	p WOODLAND_MANSION
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/structure/StructureType; register
net/minecraft/world/level/levelgen/structure/TerrainAdjustment net/minecraft/world/level/levelgen/structure/TerrainAdjustment
	a NONE
	b BURY
	c BEARD_THIN
	d BEARD_BOX
	e CODEC
	f id
	g $VALUES
	a ()[Lnet/minecraft/world/level/levelgen/structure/TerrainAdjustment; $values
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/level/levelgen/structure/pieces/PiecesContainer net/minecraft/world/level/levelgen/structure/pieces/PiecesContainer
	a pieces
	b LOGGER
	c JIGSAW_RENAME
	d RENAMES
	a ()Z isEmpty
	a (Lnet/minecraft/core/BlockPosition;)Z isInsidePiece
	a (Lnet/minecraft/nbt/NBTTagList;Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;)Lnet/minecraft/world/level/levelgen/structure/pieces/PiecesContainer; load
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;)Lnet/minecraft/nbt/NBTBase; save
	b ()Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; calculateBoundingBox
	c ()Ljava/util/List; pieces
net/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext net/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext
	a resourceManager
	b registryAccess
	c structureTemplateManager
	a ()Lnet/minecraft/server/packs/resources/IResourceManager; resourceManager
	a (Lnet/minecraft/server/level/WorldServer;)Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext; fromLevel
	b ()Lnet/minecraft/core/IRegistryCustom; registryAccess
	c ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager; structureTemplateManager
net/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder net/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder
	a pieces
	a ()Lnet/minecraft/world/level/levelgen/structure/pieces/PiecesContainer; build
	a (I)V offsetPiecesVertically
	a (IILnet/minecraft/util/RandomSource;I)I moveBelowSeaLevel
	a (Lnet/minecraft/util/RandomSource;II)V moveInsideHeights
	a (Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; findCollisionPiece
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;)V addPiece
	b ()V clear
	c ()Z isEmpty
	d ()Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox; getBoundingBox
net/minecraft/world/level/levelgen/structure/placement/ConcentricRingsStructurePlacement net/minecraft/world/level/levelgen/structure/placement/ConcentricRingsStructurePlacement
	a CODEC
	c distance
	d spread
	e count
	f preferredBiomes
	a ()I distance
	a (Lnet/minecraft/world/level/chunk/ChunkGeneratorStructureState;II)Z isPlacementChunk
	b ()I spread
	b (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P9; codec
	c ()I count
	d ()Lnet/minecraft/core/HolderSet; preferredBiomes
	e ()Lnet/minecraft/world/level/levelgen/structure/placement/StructurePlacementType; type
net/minecraft/world/level/levelgen/structure/placement/RandomSpreadStructurePlacement net/minecraft/world/level/levelgen/structure/placement/RandomSpreadStructurePlacement
	a CODEC
	c spacing
	d separation
	e spreadType
	a ()I spacing
	a (JII)Lnet/minecraft/world/level/ChunkCoordIntPair; getPotentialStructureChunk
	a (Lnet/minecraft/world/level/chunk/ChunkGeneratorStructureState;II)Z isPlacementChunk
	b ()I separation
	c ()Lnet/minecraft/world/level/levelgen/structure/placement/RandomSpreadType; spreadType
	e ()Lnet/minecraft/world/level/levelgen/structure/placement/StructurePlacementType; type
net/minecraft/world/level/levelgen/structure/placement/RandomSpreadType net/minecraft/world/level/levelgen/structure/placement/RandomSpreadType
	a LINEAR
	b TRIANGULAR
	c CODEC
	d id
	e $VALUES
	a ()[Lnet/minecraft/world/level/levelgen/structure/placement/RandomSpreadType; $values
	a (Lnet/minecraft/util/RandomSource;I)I evaluate
	c ()Ljava/lang/String; getSerializedName
net/minecraft/world/level/levelgen/structure/placement/StructurePlacement net/minecraft/world/level/levelgen/structure/placement/StructurePlacement
	a HIGHLY_ARBITRARY_RANDOM_SALT
	b CODEC
	c locateOffset
	d frequencyReductionMethod
	e frequency
	f salt
	g exclusionZone
	a (JIIIF)Z probabilityReducer
	a (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P5; placementCodec
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;)Lnet/minecraft/core/BlockPosition; getLocatePos
	a (Lnet/minecraft/world/level/chunk/ChunkGeneratorStructureState;II)Z isPlacementChunk
	b (JIIIF)Z legacyProbabilityReducerWithDouble
	b (Lnet/minecraft/world/level/chunk/ChunkGeneratorStructureState;II)Z isStructureChunk
	c (JIIIF)Z legacyArbitrarySaltProbabilityReducer
	d (JIIIF)Z legacyPillagerOutpostReducer
	e ()Lnet/minecraft/world/level/levelgen/structure/placement/StructurePlacementType; type
	f ()Lnet/minecraft/core/BaseBlockPosition; locateOffset
	g ()Ldsm$c; frequencyReductionMethod
	h ()F frequency
	i ()I salt
	j ()Ljava/util/Optional; exclusionZone
net/minecraft/world/level/levelgen/structure/placement/StructurePlacementType net/minecraft/world/level/levelgen/structure/placement/StructurePlacementType
	a RANDOM_SPREAD
	b CONCENTRIC_RINGS
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/structure/placement/StructurePlacementType; register
net/minecraft/world/level/levelgen/structure/structures/BuriedTreasureStructure net/minecraft/world/level/levelgen/structure/structures/BuriedTreasureStructure
	d CODEC
	a (Ldrp$a;)Ljava/util/Optional; findGenerationPoint
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Ldrp$a;)V generatePieces
	e ()Lnet/minecraft/world/level/levelgen/structure/StructureType; type
net/minecraft/world/level/levelgen/structure/structures/DesertPyramidPiece net/minecraft/world/level/levelgen/structure/structures/DesertPyramidPiece
	h WIDTH
	i DEPTH
	j hasPlacedChest
	k potentialSuspiciousSandWorldPositions
	a (IIILnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)V placeSand
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)V addCellarStairs
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;IIILnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)V placeCollapsedRoofPiece
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)V addCellar
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;IIIII)V placeCollapsedRoof
	a (Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;IIIIII)V placeSandBox
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	b ()Ljava/util/List; getPotentialSuspiciousSandWorldPositions
	b (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)V addCellarRoom
net/minecraft/world/level/levelgen/structure/structures/DesertPyramidStructure net/minecraft/world/level/levelgen/structure/structures/DesertPyramidStructure
	d CODEC
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/world/level/levelgen/structure/pieces/PiecesContainer;)V afterPlace
	e ()Lnet/minecraft/world/level/levelgen/structure/StructureType; type
net/minecraft/world/level/levelgen/structure/structures/EndCityPieces net/minecraft/world/level/levelgen/structure/structures/EndCityPieces
	a MAX_GEN_DEPTH
	b HOUSE_TOWER_GENERATOR
	c TOWER_BRIDGES
	d TOWER_GENERATOR
	e TOWER_BRIDGE_GENERATOR
	f FAT_TOWER_BRIDGES
	g FAT_TOWER_GENERATOR
	a (Ljava/util/List;Ldte$a;)Ldte$a; addHelper
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Ldte$a;Lnet/minecraft/core/BlockPosition;Ljava/lang/String;Lnet/minecraft/world/level/block/EnumBlockRotation;Z)Ldte$a; addPiece
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Ldte$b;ILdte$a;Lnet/minecraft/core/BlockPosition;Ljava/util/List;Lnet/minecraft/util/RandomSource;)Z recursiveChildren
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Ljava/util/List;Lnet/minecraft/util/RandomSource;)V startHouseTower
net/minecraft/world/level/levelgen/structure/structures/EndCityStructure net/minecraft/world/level/levelgen/structure/structures/EndCityStructure
	d CODEC
	a (Ldrp$a;)Ljava/util/Optional; findGenerationPoint
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Ldrp$a;)V generatePieces
	e ()Lnet/minecraft/world/level/levelgen/structure/StructureType; type
net/minecraft/world/level/levelgen/structure/structures/IglooPieces net/minecraft/world/level/levelgen/structure/structures/IglooPieces
	a GENERATION_HEIGHT
	b STRUCTURE_LOCATION_IGLOO
	c STRUCTURE_LOCATION_LADDER
	d STRUCTURE_LOCATION_LABORATORY
	e PIVOTS
	f OFFSETS
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V addPieces
net/minecraft/world/level/levelgen/structure/structures/IglooStructure net/minecraft/world/level/levelgen/structure/structures/IglooStructure
	d CODEC
	a (Ldrp$a;)Ljava/util/Optional; findGenerationPoint
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Ldrp$a;)V generatePieces
	e ()Lnet/minecraft/world/level/levelgen/structure/StructureType; type
net/minecraft/world/level/levelgen/structure/structures/JigsawStructure net/minecraft/world/level/levelgen/structure/structures/JigsawStructure
	d MAX_TOTAL_STRUCTURE_RANGE
	e CODEC
	f startPool
	g startJigsawName
	h maxDepth
	i startHeight
	j useExpansionHack
	k projectStartToHeightmap
	l maxDistanceFromCenter
	a (Ldrp$a;)Ljava/util/Optional; findGenerationPoint
	e ()Lnet/minecraft/world/level/levelgen/structure/StructureType; type
	f ()Ljava/util/function/Function; verifyRange
net/minecraft/world/level/levelgen/structure/structures/JungleTemplePiece net/minecraft/world/level/levelgen/structure/structures/JungleTemplePiece
	h WIDTH
	i DEPTH
	j placedMainChest
	k placedHiddenChest
	l placedTrap1
	m placedTrap2
	n STONE_SELECTOR
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
net/minecraft/world/level/levelgen/structure/structures/JungleTempleStructure net/minecraft/world/level/levelgen/structure/structures/JungleTempleStructure
	d CODEC
	e ()Lnet/minecraft/world/level/levelgen/structure/StructureType; type
net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces
	a MAGIC_START_Y
	b LOGGER
	c DEFAULT_SHAFT_WIDTH
	d DEFAULT_SHAFT_HEIGHT
	e DEFAULT_SHAFT_LENGTH
	f MAX_PILLAR_HEIGHT
	g MAX_CHAIN_HEIGHT
	h MAX_DEPTH
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/EnumDirection;I)Ldtl$c; generateAndAddPiece
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/EnumDirection;ILdtm$a;)Ldtl$c; createRandomShaftPiece
net/minecraft/world/level/levelgen/structure/structures/MineshaftStructure net/minecraft/world/level/levelgen/structure/structures/MineshaftStructure
	d CODEC
	e type
	a (Ldrp$a;)Ljava/util/Optional; findGenerationPoint
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Ldrp$a;)I generatePiecesAndAdjust
	e ()Lnet/minecraft/world/level/levelgen/structure/StructureType; type
net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces
	a MAGIC_START_Y
	b MAX_DEPTH
	c LOWEST_Y_POSITION
	d BRIDGE_PIECE_WEIGHTS
	e CASTLE_PIECE_WEIGHTS
	a (Ldtn$n;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/EnumDirection;I)Ldtn$m; findAndCreateBridgePieceFactory
net/minecraft/world/level/levelgen/structure/structures/NetherFortressStructure net/minecraft/world/level/levelgen/structure/structures/NetherFortressStructure
	d FORTRESS_ENEMIES
	e CODEC
	a (Ldrp$a;)Ljava/util/Optional; findGenerationPoint
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Ldrp$a;)V generatePieces
	e ()Lnet/minecraft/world/level/levelgen/structure/StructureType; type
net/minecraft/world/level/levelgen/structure/structures/NetherFossilPieces net/minecraft/world/level/levelgen/structure/structures/NetherFossilPieces
	a FOSSILS
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)V addPieces
net/minecraft/world/level/levelgen/structure/structures/NetherFossilStructure net/minecraft/world/level/levelgen/structure/structures/NetherFossilStructure
	d CODEC
	e height
	a (Ldrp$a;)Ljava/util/Optional; findGenerationPoint
	e ()Lnet/minecraft/world/level/levelgen/structure/StructureType; type
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentStructure net/minecraft/world/level/levelgen/structure/structures/OceanMonumentStructure
	d CODEC
	a (Ldrp$a;)Ljava/util/Optional; findGenerationPoint
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;JLnet/minecraft/world/level/levelgen/structure/pieces/PiecesContainer;)Lnet/minecraft/world/level/levelgen/structure/pieces/PiecesContainer; regeneratePiecesAfterLoad
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/world/level/levelgen/SeededRandom;)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; createTopPiece
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Ldrp$a;)V generatePieces
	e ()Lnet/minecraft/world/level/levelgen/structure/StructureType; type
net/minecraft/world/level/levelgen/structure/structures/OceanRuinPieces net/minecraft/world/level/levelgen/structure/structures/OceanRuinPieces
	a WARM_RUINS
	b RUINS_BRICK
	c RUINS_CRACKED
	d RUINS_MOSSY
	e BIG_RUINS_BRICK
	f BIG_RUINS_MOSSY
	g BIG_RUINS_CRACKED
	h BIG_WARM_RUINS
	a (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/resources/MinecraftKey; getSmallWarmRuin
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Ljava/util/List; allPositions
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/structures/OceanRuinStructure;)V addPieces
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/structures/OceanRuinStructure;ZF)V addPiece
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/structure/structures/OceanRuinStructure;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;)V addClusterRuins
	b (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/resources/MinecraftKey; getBigWarmRuin
net/minecraft/world/level/levelgen/structure/structures/OceanRuinStructure net/minecraft/world/level/levelgen/structure/structures/OceanRuinStructure
	d CODEC
	e biomeTemp
	f largeProbability
	g clusterProbability
	a (Ldrp$a;)Ljava/util/Optional; findGenerationPoint
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Ldrp$a;)V generatePieces
	e ()Lnet/minecraft/world/level/levelgen/structure/StructureType; type
net/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece net/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece
	h LOGGER
	i PROBABILITY_OF_GOLD_GONE
	j PROBABILITY_OF_MAGMA_INSTEAD_OF_NETHERRACK
	k PROBABILITY_OF_MAGMA_INSTEAD_OF_LAVA
	l verticalPlacement
	m properties
	a (Ldtv$b;)Lnet/minecraft/world/level/levelgen/HeightMap$Type; getHeightMapType
	a (Ldtv$b;Ldtv$a;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureProcessorPredicates; getLavaProcessorRule
	a (Ljava/lang/String;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)V handleDataMarker
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/GeneratorAccess;)V addNetherrackDripColumnsBelowPortal
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)V maybeAddVines
	a (Lnet/minecraft/world/level/GeneratorAccess;IILdtv$b;)I getSurfaceY
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)Z canBlockBeReplacedByNetherrackOrMagma
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/block/Block;FLnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureProcessorPredicates; getBlockReplaceRule
	a (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureProcessorPredicates; getBlockReplaceRule
	a (Lnet/minecraft/world/level/block/EnumBlockMirror;Lnet/minecraft/world/level/block/EnumBlockRotation;Ldtv$b;Lnet/minecraft/core/BlockPosition;Ldtv$a;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo; makeSettings
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/nbt/NBTTagCompound;Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo; makeSettings
	b (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/GeneratorAccess;)V spreadNetherrack
	b (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)V maybeAddLeavesAbove
	c (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)V addNetherrackDripColumn
	d (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)V placeNetherrackOrMagma
net/minecraft/world/level/levelgen/structure/structures/RuinedPortalStructure net/minecraft/world/level/levelgen/structure/structures/RuinedPortalStructure
	d CODEC
	e STRUCTURE_LOCATION_PORTALS
	f STRUCTURE_LOCATION_GIANT_PORTALS
	g PROBABILITY_OF_GIANT_PORTAL
	h MIN_Y_INDEX
	i setups
	a (Ldrp$a;)Ljava/util/Optional; findGenerationPoint
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/Holder;)Z isCold
	a (Lnet/minecraft/util/RandomSource;II)I getRandomWithinInterval
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ldtv$b;ZIILnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;)I findSuitableY
	a (Lnet/minecraft/world/level/levelgen/SeededRandom;F)Z sample
	e ()Lnet/minecraft/world/level/levelgen/structure/StructureType; type
net/minecraft/world/level/levelgen/structure/structures/ShipwreckPieces net/minecraft/world/level/levelgen/structure/structures/ShipwreckPieces
	a PIVOT
	b STRUCTURE_LOCATION_BEACHED
	c STRUCTURE_LOCATION_OCEAN
	d MARKERS_TO_LOOT
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;Z)V addPieces
net/minecraft/world/level/levelgen/structure/structures/ShipwreckStructure net/minecraft/world/level/levelgen/structure/structures/ShipwreckStructure
	d CODEC
	e isBeached
	a (Ldrp$a;)Ljava/util/Optional; findGenerationPoint
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Ldrp$a;)V generatePieces
	e ()Lnet/minecraft/world/level/levelgen/structure/StructureType; type
net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces
	a MAGIC_START_Y
	b SMALL_DOOR_WIDTH
	c SMALL_DOOR_HEIGHT
	d MAX_DEPTH
	e LOWEST_Y_POSITION
	f CHECK_AIR
	g STRONGHOLD_PIECE_WEIGHTS
	h currentPieces
	i imposedPiece
	j totalWeight
	k SMOOTH_STONE_SELECTOR
	a ()V resetPieces
	a (Ldtz$m;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/EnumDirection;I)Ldtz$p; generatePieceFromSmallDoor
	a (Ljava/lang/Class;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/EnumDirection;I)Ldtz$p; findAndCreatePieceFactory
	b ()Z updatePieceWeight
	b (Ldtz$m;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/EnumDirection;I)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; generateAndAddPiece
net/minecraft/world/level/levelgen/structure/structures/StrongholdStructure net/minecraft/world/level/levelgen/structure/structures/StrongholdStructure
	d CODEC
	a (Ldrp$a;)Ljava/util/Optional; findGenerationPoint
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Ldrp$a;)V generatePieces
	e ()Lnet/minecraft/world/level/levelgen/structure/StructureType; type
net/minecraft/world/level/levelgen/structure/structures/SwampHutPiece net/minecraft/world/level/levelgen/structure/structures/SwampHutPiece
	h spawnedWitch
	i spawnedCat
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/core/BlockPosition;)V postProcess
	a (Lnet/minecraft/world/level/WorldAccess;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)V spawnCat
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/NBTTagCompound;)V addAdditionalSaveData
net/minecraft/world/level/levelgen/structure/structures/SwampHutStructure net/minecraft/world/level/levelgen/structure/structures/SwampHutStructure
	d CODEC
	a (Ldrp$a;)Ljava/util/Optional; findGenerationPoint
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Ldrp$a;)V generatePieces
	e ()Lnet/minecraft/world/level/levelgen/structure/StructureType; type
net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionStructure net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionStructure
	d CODEC
	a (Ldrp$a;)Ljava/util/Optional; findGenerationPoint
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/world/level/levelgen/structure/pieces/PiecesContainer;)V afterPlace
	a (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Ldrp$a;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;)V generatePieces
	e ()Lnet/minecraft/world/level/levelgen/structure/StructureType; type
net/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTest net/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTest
	c CODEC
	a ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType; getType
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Z test
net/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType net/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType
	a ALWAYS_TRUE_TEST
	b LINEAR_POS_TEST
	c AXIS_ALIGNED_LINEAR_POS_TEST
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType; register
net/minecraft/world/level/levelgen/structure/templatesystem/ProtectedBlockProcessor net/minecraft/world/level/levelgen/structure/templatesystem/ProtectedBlockProcessor
	a cannotReplace
	b CODEC
	a ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureStructureProcessorType; getType
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo; processBlock
net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager
	a LOGGER
	b STRUCTURE_DIRECTORY_NAME
	c TEST_STRUCTURES_DIR
	d STRUCTURE_FILE_EXTENSION
	e STRUCTURE_TEXT_FILE_EXTENSION
	f structureRepository
	g fixerUpper
	h resourceManager
	i generatedDir
	j sources
	k blockLookup
	l LISTER
	a ()Ljava/util/stream/Stream; listTemplates
	a (Ldvi$a;Ljava/util/function/Consumer;)Ljava/util/Optional; load
	a (Ljava/io/InputStream;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure; readStructure
	a (Ljava/nio/file/Path;)Ljava/util/stream/Stream; listGeneratedInNamespace
	a (Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;)Ljava/util/stream/Stream; listFolderContents
	a (Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/lang/String; relativize
	a (Ljava/nio/file/Path;Lnet/minecraft/resources/MinecraftKey;Ljava/lang/String;)Ljava/nio/file/Path; createPathToStructure
	a (Lnet/minecraft/nbt/NBTTagCompound;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure; readStructure
	a (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure; getOrCreate
	a (Lnet/minecraft/resources/MinecraftKey;Ljava/lang/String;)Ljava/nio/file/Path; getPathToGeneratedStructure
	a (Lnet/minecraft/resources/MinecraftKey;Ljava/nio/file/Path;)Ljava/util/Optional; loadFromSnbt
	a (Lnet/minecraft/server/packs/resources/IResourceManager;)V onResourceManagerReload
	b ()Ljava/util/stream/Stream; listResources
	b (Ljava/nio/file/Path;Lnet/minecraft/resources/MinecraftKey;Ljava/lang/String;)Ljava/nio/file/Path; createAndValidatePathToStructure
	b (Lnet/minecraft/resources/MinecraftKey;)Ljava/util/Optional; get
	c ()Ljava/util/stream/Stream; listTestStructures
	c (Lnet/minecraft/resources/MinecraftKey;)Z save
	d ()Ljava/util/stream/Stream; listGenerated
	d (Lnet/minecraft/resources/MinecraftKey;)V remove
	e (Lnet/minecraft/resources/MinecraftKey;)Ljava/util/Optional; tryLoad
	f (Lnet/minecraft/resources/MinecraftKey;)Ljava/util/Optional; loadFromResource
	g (Lnet/minecraft/resources/MinecraftKey;)Ljava/util/Optional; loadFromTestStructures
	h (Lnet/minecraft/resources/MinecraftKey;)Ljava/util/Optional; loadFromGenerated
net/minecraft/world/level/levelgen/synth/BlendedNoise net/minecraft/world/level/levelgen/synth/BlendedNoise
	a CODEC
	e SCALE_RANGE
	f DATA_CODEC
	g minLimitNoise
	h maxLimitNoise
	i mainNoise
	j xzMultiplier
	k yMultiplier
	l xzFactor
	m yFactor
	n smearScaleMultiplier
	o maxValue
	p xzScale
	q yScale
	a ()D minValue
	a (DDDDD)Lnet/minecraft/world/level/levelgen/synth/BlendedNoise; createUnseeded
	a (Ldgs$b;)D compute
	a (Ljava/lang/StringBuilder;)V parityConfigString
	a (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/levelgen/synth/BlendedNoise; withNewRandom
	b ()D maxValue
	c ()Lnet/minecraft/util/KeyDispatchDataCodec; codec
net/minecraft/world/level/material/Material net/minecraft/world/level/material/Material
	A NETHER_WOOD
	B BAMBOO_SAPLING
	C BAMBOO
	D WOOL
	E EXPLOSIVE
	F LEAVES
	G GLASS
	H ICE
	I CACTUS
	J STONE
	K METAL
	L SNOW
	M HEAVY_METAL
	N BARRIER
	O PISTON
	P MOSS
	Q VEGETABLE
	R EGG
	S CAKE
	T AMETHYST
	U POWDER_SNOW
	V FROGSPAWN
	W FROGLIGHT
	X DECORATED_POT
	Y color
	Z pushReaction
	a AIR
	aa blocksMotion
	ab flammable
	ac liquid
	ad solidBlocking
	ae replaceable
	af solid
	b STRUCTURAL_AIR
	c PORTAL
	d CLOTH_DECORATION
	e PLANT
	f WATER_PLANT
	g REPLACEABLE_PLANT
	h REPLACEABLE_FIREPROOF_PLANT
	i REPLACEABLE_WATER_PLANT
	j WATER
	k BUBBLE_COLUMN
	l LAVA
	m TOP_SNOW
	n FIRE
	o DECORATION
	p WEB
	q SCULK
	r BUILDABLE_GLASS
	s CLAY
	t DIRT
	u GRASS
	v ICE_SOLID
	w SAND
	x SPONGE
	y SHULKER_SHELL
	z WOOD
	a ()Z isLiquid
	b ()Z isSolid
	c ()Z blocksMotion
	d ()Z isFlammable
	e ()Z isReplaceable
	f ()Z isSolidBlocking
	g ()Lnet/minecraft/world/level/material/EnumPistonReaction; getPushReaction
	h ()Lnet/minecraft/world/level/material/MaterialMapColor; getColor
net/minecraft/world/level/pathfinder/AmphibiousNodeEvaluator net/minecraft/world/level/pathfinder/AmphibiousNodeEvaluator
	m prefersShallowSwimming
	n oldWalkableCost
	o oldWaterBorderCost
	a ()Lnet/minecraft/world/level/pathfinder/PathPoint; getStart
	a (DDD)Lnet/minecraft/world/level/pathfinder/PathDestination; getGoal
	a (Lnet/minecraft/world/level/ChunkCache;Lnet/minecraft/world/entity/EntityInsentient;)V prepare
	a (Lnet/minecraft/world/level/IBlockAccess;III)Lnet/minecraft/world/level/pathfinder/PathType; getBlockPathType
	a ([Lnet/minecraft/world/level/pathfinder/PathPoint;Lnet/minecraft/world/level/pathfinder/PathPoint;)I getNeighbors
	b ()V done
	b (Lnet/minecraft/world/level/pathfinder/PathPoint;Lnet/minecraft/world/level/pathfinder/PathPoint;)Z isVerticalNeighborValid
	c ()Z isAmphibious
net/minecraft/world/level/redstone/CollectingNeighborUpdater net/minecraft/world/level/redstone/CollectingNeighborUpdater
	b LOGGER
	c level
	d maxChainedNeighborUpdates
	e stack
	f addedThisLayer
	g count
	a ()V runUpdates
	a (Lnet/minecraft/core/BlockPosition;Ldxk$c;)V addAndRun
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;)V neighborChanged
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/EnumDirection;)V updateNeighborsAtExceptFromFacing
	a (Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;II)V shapeUpdate
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;Z)V neighborChanged
net/minecraft/world/level/redstone/NeighborUpdater net/minecraft/world/level/redstone/NeighborUpdater
	a UPDATE_ORDER
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;)V neighborChanged
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/EnumDirection;)V updateNeighborsAtExceptFromFacing
	a (Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;II)V shapeUpdate
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;II)V executeShapeUpdate
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;Z)V executeUpdate
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPosition;Z)V neighborChanged
net/minecraft/world/level/storage/DataVersion net/minecraft/world/level/storage/DataVersion
	a MAIN_SERIES
	b version
	c series
	a ()Z isSideSeries
	a (Lnet/minecraft/world/level/storage/DataVersion;)Z isCompatible
	b ()Ljava/lang/String; getSeries
	c ()I getVersion
net/minecraft/world/level/storage/LevelStorageException net/minecraft/world/level/storage/LevelStorageException
	a messageComponent
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; getMessageComponent
net/minecraft/world/level/storage/LevelVersion net/minecraft/world/level/storage/LevelVersion
	a levelDataVersion
	b lastPlayed
	c minecraftVersionName
	d minecraftVersion
	e snapshot
	a ()I levelDataVersion
	a (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/level/storage/LevelVersion; parse
	b ()J lastPlayed
	c ()Ljava/lang/String; minecraftVersionName
	d ()Lnet/minecraft/world/level/storage/DataVersion; minecraftVersion
	e ()Z snapshot
net/minecraft/world/level/storage/loot/IntRange net/minecraft/world/level/storage/loot/IntRange
	a min
	b max
	c limiter
	d predicate
	a ()Ljava/util/Set; getReferencedContextParams
	a (I)Lnet/minecraft/world/level/storage/loot/IntRange; exact
	a (II)Lnet/minecraft/world/level/storage/loot/IntRange; range
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;I)I clamp
	b (I)Lnet/minecraft/world/level/storage/loot/IntRange; lowerBound
	b (Lnet/minecraft/world/level/storage/loot/LootTableInfo;I)Z test
	c (I)Lnet/minecraft/world/level/storage/loot/IntRange; upperBound
net/minecraft/world/level/storage/loot/ItemModifierManager net/minecraft/world/level/storage/loot/ItemModifierManager
	a LOGGER
	b GSON
	c predicateManager
	d lootTables
	e functions
	a ()Ljava/util/Set; getKeys
	a (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)V apply
	a (Ljava/util/Map;Lnet/minecraft/server/packs/resources/IResourceManager;Lnet/minecraft/util/profiling/GameProfilerFiller;)V apply
	a (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; get
	a (Lnet/minecraft/resources/MinecraftKey;Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; get
net/minecraft/world/level/storage/loot/LootTable net/minecraft/world/level/storage/loot/LootTable
	a EMPTY
	b DEFAULT_PARAM_SET
	c LOGGER
	d paramSet
	e pools
	f functions
	g compositeFunction
	a ()Lnet/minecraft/world/level/storage/loot/parameters/LootContextParameterSet; getParamSet
	a (Lit/unimi/dsi/fastutil/objects/ObjectArrayList;ILnet/minecraft/util/RandomSource;)V shuffleAndSplitItems
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/util/RandomSource;)Ljava/util/List; getAvailableSlots
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)V fill
	a (Lnet/minecraft/world/level/storage/loot/LootCollector;)V validate
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lit/unimi/dsi/fastutil/objects/ObjectArrayList; getRandomItems
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;Ljava/util/function/Consumer;)Ljava/util/function/Consumer; createStackSplitter
	b ()Ldyu$a; lootTable
	b (Lnet/minecraft/world/level/storage/loot/LootTableInfo;Ljava/util/function/Consumer;)V getRandomItemsRaw
	c (Lnet/minecraft/world/level/storage/loot/LootTableInfo;Ljava/util/function/Consumer;)V getRandomItems
net/minecraft/world/level/storage/loot/entries/LootItem net/minecraft/world/level/storage/loot/entries/LootItem
	i item
	a ()Lnet/minecraft/world/level/storage/loot/entries/LootEntryType; getType
	a (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)V createItemStack
	a (Lnet/minecraft/world/level/IMaterial;)Ldzl$a; lootTableItem
net/minecraft/world/level/storage/loot/functions/LootItemFunctions net/minecraft/world/level/storage/loot/functions/LootItemFunctions
	a IDENTITY
	b SET_COUNT
	c ENCHANT_WITH_LEVELS
	d ENCHANT_RANDOMLY
	e SET_ENCHANTMENTS
	f SET_NBT
	g FURNACE_SMELT
	h LOOTING_ENCHANT
	i SET_DAMAGE
	j SET_ATTRIBUTES
	k SET_NAME
	l EXPLORATION_MAP
	m SET_STEW_EFFECT
	n COPY_NAME
	o SET_CONTENTS
	p LIMIT_COUNT
	q APPLY_BONUS
	r SET_LOOT_TABLE
	s EXPLOSION_DECAY
	t SET_LORE
	u FILL_PLAYER_HEAD
	v COPY_NBT
	w COPY_STATE
	x SET_BANNER_PATTERN
	y SET_POTION
	z SET_INSTRUMENT
	a ()Ljava/lang/Object; createGsonAdapter
	a (Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/LootSerializer;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; register
	a ([Ljava/util/function/BiFunction;)Ljava/util/function/BiFunction; compose
net/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction net/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction
	a patterns
	b append
	a ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; getType
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/world/item/ItemStack; run
	a (Z)Leah$a; setBannerPattern
net/minecraft/world/level/storage/loot/functions/SetEnchantmentsFunction net/minecraft/world/level/storage/loot/functions/SetEnchantmentsFunction
	a enchantments
	b add
	a ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; getType
	a (Ljava/util/Map;Lnet/minecraft/world/item/enchantment/Enchantment;I)V updateEnchantment
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/world/item/ItemStack; run
	b ()Ljava/util/Set; getReferencedContextParams
net/minecraft/world/level/storage/loot/functions/SetInstrumentFunction net/minecraft/world/level/storage/loot/functions/SetInstrumentFunction
	a options
	a ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; getType
	a (Lnet/minecraft/tags/TagKey;)Leab$a; setInstrumentOptions
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/world/item/ItemStack; run
net/minecraft/world/level/storage/loot/functions/SetPotionFunction net/minecraft/world/level/storage/loot/functions/SetPotionFunction
	a potion
	a ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; getType
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/world/item/ItemStack; run
	a (Lnet/minecraft/world/item/alchemy/PotionRegistry;)Leab$a; setPotion
net/minecraft/world/level/storage/loot/predicates/LootItemConditions net/minecraft/world/level/storage/loot/predicates/LootItemConditions
	a INVERTED
	b ALTERNATIVE
	c RANDOM_CHANCE
	d RANDOM_CHANCE_WITH_LOOTING
	e ENTITY_PROPERTIES
	f KILLED_BY_PLAYER
	g ENTITY_SCORES
	h BLOCK_STATE_PROPERTY
	i MATCH_TOOL
	j TABLE_BONUS
	k SURVIVES_EXPLOSION
	l DAMAGE_SOURCE_PROPERTIES
	m LOCATION_CHECK
	n WEATHER_CHECK
	o REFERENCE
	p TIME_CHECK
	q VALUE_CHECK
	a ()Ljava/lang/Object; createGsonAdapter
	a (Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/LootSerializer;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; register
	a ([Ljava/util/function/Predicate;)Ljava/util/function/Predicate; andConditions
	b ([Ljava/util/function/Predicate;)Ljava/util/function/Predicate; orConditions
net/minecraft/world/level/storage/loot/predicates/ValueCheckCondition net/minecraft/world/level/storage/loot/predicates/ValueCheckCondition
	a provider
	b range
	a ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; getType
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Z test
	a (Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;Lnet/minecraft/world/level/storage/loot/IntRange;)Lebl$a; hasValue
	b ()Ljava/util/Set; getReferencedContextParams
net/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider net/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider
	a BLOCK_ENTITY
	b BLOCK_ENTITY_ID
	c BLOCK_ENTITY_PROVIDER
	d getter
	a ()Lnet/minecraft/world/level/storage/loot/providers/nbt/LootNbtProviderType; getType
	a (Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider; createFromContext
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo$EntityTarget;)Lnet/minecraft/world/level/storage/loot/providers/nbt/NbtProvider; forContextEntity
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/nbt/NBTBase; get
	b ()Ljava/util/Set; getReferencedContextParams
	b (Lnet/minecraft/world/level/storage/loot/LootTableInfo$EntityTarget;)Lebx$a; forEntity
net/minecraft/world/level/storage/loot/providers/nbt/NbtProviders net/minecraft/world/level/storage/loot/providers/nbt/NbtProviders
	a STORAGE
	b CONTEXT
	a ()Ljava/lang/Object; createGsonAdapter
	a (Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/LootSerializer;)Lnet/minecraft/world/level/storage/loot/providers/nbt/LootNbtProviderType; register
net/minecraft/world/level/storage/loot/providers/nbt/StorageNbtProvider net/minecraft/world/level/storage/loot/providers/nbt/StorageNbtProvider
	a id
	a ()Lnet/minecraft/world/level/storage/loot/providers/nbt/LootNbtProviderType; getType
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/nbt/NBTBase; get
	b ()Ljava/util/Set; getReferencedContextParams
net/minecraft/world/level/storage/loot/providers/number/BinomialDistributionGenerator net/minecraft/world/level/storage/loot/providers/number/BinomialDistributionGenerator
	a n
	b p
	a ()Lnet/minecraft/world/level/storage/loot/providers/number/LootNumberProviderType; getType
	a (IF)Lnet/minecraft/world/level/storage/loot/providers/number/BinomialDistributionGenerator; binomial
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)I getInt
	b ()Ljava/util/Set; getReferencedContextParams
	b (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)F getFloat
net/minecraft/world/level/storage/loot/providers/number/ConstantValue net/minecraft/world/level/storage/loot/providers/number/ConstantValue
	a value
	a ()Lnet/minecraft/world/level/storage/loot/providers/number/LootNumberProviderType; getType
	a (F)Lnet/minecraft/world/level/storage/loot/providers/number/ConstantValue; exactly
	b (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)F getFloat
net/minecraft/world/level/storage/loot/providers/number/NumberProviders net/minecraft/world/level/storage/loot/providers/number/NumberProviders
	a CONSTANT
	b UNIFORM
	c BINOMIAL
	d SCORE
	a ()Ljava/lang/Object; createGsonAdapter
	a (Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/LootSerializer;)Lnet/minecraft/world/level/storage/loot/providers/number/LootNumberProviderType; register
net/minecraft/world/level/storage/loot/providers/number/ScoreboardValue net/minecraft/world/level/storage/loot/providers/number/ScoreboardValue
	a target
	b score
	c scale
	a ()Lnet/minecraft/world/level/storage/loot/providers/number/LootNumberProviderType; getType
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo$EntityTarget;Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/providers/number/ScoreboardValue; fromScoreboard
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo$EntityTarget;Ljava/lang/String;F)Lnet/minecraft/world/level/storage/loot/providers/number/ScoreboardValue; fromScoreboard
	b ()Ljava/util/Set; getReferencedContextParams
	b (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)F getFloat
net/minecraft/world/level/storage/loot/providers/number/UniformGenerator net/minecraft/world/level/storage/loot/providers/number/UniformGenerator
	a min
	b max
	a ()Lnet/minecraft/world/level/storage/loot/providers/number/LootNumberProviderType; getType
	a (FF)Lnet/minecraft/world/level/storage/loot/providers/number/UniformGenerator; between
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)I getInt
	b ()Ljava/util/Set; getReferencedContextParams
	b (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)F getFloat
net/minecraft/world/level/storage/loot/providers/score/ContextScoreboardNameProvider net/minecraft/world/level/storage/loot/providers/score/ContextScoreboardNameProvider
	a target
	a ()Lnet/minecraft/world/level/storage/loot/providers/score/LootScoreProviderType; getType
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo$EntityTarget;)Lnet/minecraft/world/level/storage/loot/providers/score/ScoreboardNameProvider; forTarget
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Ljava/lang/String; getScoreboardName
	b ()Ljava/util/Set; getReferencedContextParams
net/minecraft/world/level/storage/loot/providers/score/FixedScoreboardNameProvider net/minecraft/world/level/storage/loot/providers/score/FixedScoreboardNameProvider
	a name
	a ()Lnet/minecraft/world/level/storage/loot/providers/score/LootScoreProviderType; getType
	a (Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/providers/score/ScoreboardNameProvider; forName
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Ljava/lang/String; getScoreboardName
	b ()Ljava/util/Set; getReferencedContextParams
	c ()Ljava/lang/String; getName
net/minecraft/world/level/storage/loot/providers/score/ScoreboardNameProviders net/minecraft/world/level/storage/loot/providers/score/ScoreboardNameProviders
	a FIXED
	b CONTEXT
	a ()Ljava/lang/Object; createGsonAdapter
	a (Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/LootSerializer;)Lnet/minecraft/world/level/storage/loot/providers/score/LootScoreProviderType; register
net/minecraft/world/phys/shapes/VoxelShape net/minecraft/world/phys/shapes/VoxelShape
	a shape
	b faces
	a ()Lnet/minecraft/world/phys/AxisAlignedBB; bounds
	a (DDD)Lnet/minecraft/world/phys/shapes/VoxelShape; move
	a (Ledu$a;)V forAllEdges
	a (Lnet/minecraft/core/EnumAxisCycle;Lnet/minecraft/world/phys/AxisAlignedBB;D)D collideX
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;)Lit/unimi/dsi/fastutil/doubles/DoubleList; getCoords
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;D)I findIndex
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;DD)D min
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;I)D get
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;Lnet/minecraft/world/phys/AxisAlignedBB;D)D collide
	a (Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/world/phys/shapes/VoxelShape; getFaceShape
	a (Lnet/minecraft/world/phys/Vec3D;)Ljava/util/Optional; closestPointTo
	a (Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/world/phys/MovingObjectPositionBlock; clip
	b ()Z isEmpty
	b (Ledu$a;)V forAllBoxes
	b (Lnet/minecraft/core/EnumDirection$EnumAxis;)D min
	b (Lnet/minecraft/core/EnumDirection$EnumAxis;DD)D max
	b (Lnet/minecraft/core/EnumDirection;)Lnet/minecraft/world/phys/shapes/VoxelShape; calculateFace
	c ()Lnet/minecraft/world/phys/shapes/VoxelShape; optimize
	c (Lnet/minecraft/core/EnumDirection$EnumAxis;)D max
	d ()Ljava/util/List; toAabbs
net/minecraft/world/scores/Scoreboard net/minecraft/world/scores/Scoreboard
	a DISPLAY_SLOT_LIST
	b DISPLAY_SLOT_SIDEBAR
	c DISPLAY_SLOT_BELOW_NAME
	d DISPLAY_SLOT_TEAMS_SIDEBAR_START
	e DISPLAY_SLOT_TEAMS_SIDEBAR_END
	f DISPLAY_SLOTS
	g LOGGER
	h objectivesByName
	i objectivesByCriteria
	j playerScores
	k displayObjectives
	l teamsByName
	m teamsByPlayer
	n displaySlotNames
	a (I)Lnet/minecraft/world/scores/ScoreboardObjective; getDisplayObjective
	a (ILnet/minecraft/world/scores/ScoreboardObjective;)V setDisplayObjective
	a (Ljava/lang/String;)V onPlayerRemoved
	a (Ljava/lang/String;Lnet/minecraft/world/scores/ScoreboardObjective;)V onPlayerScoreRemoved
	a (Ljava/lang/String;Lnet/minecraft/world/scores/ScoreboardTeam;)Z addPlayerToTeam
	a (Ljava/lang/String;Lnet/minecraft/world/scores/criteria/IScoreboardCriteria;Lnet/minecraft/network/chat/IChatBaseComponent;Lnet/minecraft/world/scores/criteria/IScoreboardCriteria$EnumScoreboardHealthDisplay;)Lnet/minecraft/world/scores/ScoreboardObjective; addObjective
	a (Lnet/minecraft/nbt/NBTTagList;)V loadPlayerScores
	a (Lnet/minecraft/world/entity/Entity;)V entityRemoved
	a (Lnet/minecraft/world/scores/ScoreboardObjective;)V onObjectiveAdded
	a (Lnet/minecraft/world/scores/ScoreboardScore;)V onScoreChanged
	a (Lnet/minecraft/world/scores/ScoreboardTeam;)V onTeamAdded
	a (Lnet/minecraft/world/scores/criteria/IScoreboardCriteria;Ljava/lang/String;Ljava/util/function/Consumer;)V forAllObjectives
	b (I)Ljava/lang/String; getDisplaySlotName
	b (Ljava/lang/String;)Z hasObjective
	b (Ljava/lang/String;Lnet/minecraft/world/scores/ScoreboardObjective;)Z hasPlayerScore
	b (Ljava/lang/String;Lnet/minecraft/world/scores/ScoreboardTeam;)V removePlayerFromTeam
	b (Lnet/minecraft/world/scores/ScoreboardObjective;)V onObjectiveChanged
	b (Lnet/minecraft/world/scores/ScoreboardTeam;)V onTeamChanged
	c ()Ljava/util/Collection; getObjectives
	c (Ljava/lang/String;)Lnet/minecraft/world/scores/ScoreboardObjective; getOrCreateObjective
	c (Ljava/lang/String;Lnet/minecraft/world/scores/ScoreboardObjective;)Lnet/minecraft/world/scores/ScoreboardScore; getOrCreatePlayerScore
	c (Lnet/minecraft/world/scores/ScoreboardObjective;)V onObjectiveRemoved
	c (Lnet/minecraft/world/scores/ScoreboardTeam;)V onTeamRemoved
	d ()Ljava/util/Collection; getObjectiveNames
	d (Ljava/lang/String;)Lnet/minecraft/world/scores/ScoreboardObjective; getObjective
	d (Ljava/lang/String;Lnet/minecraft/world/scores/ScoreboardObjective;)V resetPlayerScore
	d (Lnet/minecraft/world/scores/ScoreboardTeam;)V removePlayerTeam
	e ()Ljava/util/Collection; getTrackedPlayers
	e (Ljava/lang/String;)Ljava/util/Map; getPlayerScores
	f ()Ljava/util/Collection; getTeamNames
	f (Ljava/lang/String;)Lnet/minecraft/world/scores/ScoreboardTeam; getPlayerTeam
	g ()Ljava/util/Collection; getPlayerTeams
	g (Ljava/lang/String;)Lnet/minecraft/world/scores/ScoreboardTeam; addPlayerTeam
	h ()[Ljava/lang/String; getDisplaySlotNames
	h (Ljava/lang/String;)Z removePlayerFromTeam
	i ()Lnet/minecraft/nbt/NBTTagList; savePlayerScores
	i (Ljava/lang/String;)Lnet/minecraft/world/scores/ScoreboardTeam; getPlayersTeam
	i (Lnet/minecraft/world/scores/ScoreboardObjective;)Ljava/util/Collection; getPlayerScores
	j (Ljava/lang/String;)I getDisplaySlotByName
	j (Lnet/minecraft/world/scores/ScoreboardObjective;)V removeObjective
net/minecraft/world/ticks/LevelChunkTicks net/minecraft/world/ticks/LevelChunkTicks
	a tickQueue
	b pendingTicks
	c ticksPerPosition
	d onTickAdded
	a ()I count
	a (J)V unpack
	a (JLjava/util/function/Function;)Lnet/minecraft/nbt/NBTTagList; save
	a (Ljava/util/function/BiConsumer;)V setOnTickAdded
	a (Ljava/util/function/Predicate;)V removeIf
	a (Lnet/minecraft/core/BlockPosition;Ljava/lang/Object;)Z hasScheduledTick
	a (Lnet/minecraft/nbt/NBTTagList;Ljava/util/function/Function;Lnet/minecraft/world/level/ChunkCoordIntPair;)Lnet/minecraft/world/ticks/LevelChunkTicks; load
	a (Lnet/minecraft/world/ticks/NextTickListEntry;)V schedule
	b ()Lnet/minecraft/world/ticks/NextTickListEntry; peek
	b (JLjava/util/function/Function;)Lnet/minecraft/nbt/NBTBase; save
	b (Lnet/minecraft/world/ticks/NextTickListEntry;)V scheduleUnchecked
	c ()Lnet/minecraft/world/ticks/NextTickListEntry; poll
	d ()Ljava/util/stream/Stream; getAll
net/minecraft/BlockUtil net/minecraft/BlockUtil
	a (Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;Lnet/minecraft/core/EnumDirection;I)I getLimit
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection$EnumAxis;ILnet/minecraft/core/EnumDirection$EnumAxis;ILjava/util/function/Predicate;)Lnet/minecraft/BlockUtil$Rectangle; getLargestRectangleAround
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/Block;)Ljava/util/Optional; getTopConnectedBlock
	a ([I)Lcom/mojang/datafixers/util/Pair; getMaxRectangleLocation
net/minecraft/Optionull net/minecraft/Optionull
	a (Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object; map
	a (Ljava/lang/Object;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object; mapOrDefault
	a (Ljava/lang/Object;Ljava/util/function/Function;Ljava/util/function/Supplier;)Ljava/lang/Object; mapOrElse
	a (Ljava/util/Collection;)Ljava/lang/Object; first
	a (Ljava/util/Collection;Ljava/lang/Object;)Ljava/lang/Object; firstOrDefault
	a (Ljava/util/Collection;Ljava/util/function/Supplier;)Ljava/lang/Object; firstOrElse
	a ([B)Z isNullOrEmpty
	a ([C)Z isNullOrEmpty
	a ([D)Z isNullOrEmpty
	a ([F)Z isNullOrEmpty
	a ([I)Z isNullOrEmpty
	a ([J)Z isNullOrEmpty
	a ([Ljava/lang/Object;)Z isNullOrEmpty
	a ([S)Z isNullOrEmpty
	a ([Z)Z isNullOrEmpty
net/minecraft/WorldVersion net/minecraft/WorldVersion
	a (Lnet/minecraft/server/packs/EnumResourcePackType;)I getPackVersion
	b ()Ljava/lang/String; getId
	c ()Ljava/lang/String; getName
	d ()Lnet/minecraft/world/level/storage/DataVersion; getDataVersion
	e ()I getProtocolVersion
	f ()Ljava/util/Date; getBuildTime
	g ()Z isStable
net/minecraft/advancements/CriterionTrigger net/minecraft/advancements/CriterionTrigger
	a ()Lnet/minecraft/resources/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/LootDeserializationContext;)Lnet/minecraft/advancements/CriterionInstance; createInstance
	a (Lnet/minecraft/server/AdvancementDataPlayer;)V removePlayerListeners
	a (Lnet/minecraft/server/AdvancementDataPlayer;Lal$a;)V addPlayerListener
	b (Lnet/minecraft/server/AdvancementDataPlayer;Lal$a;)V removePlayerListener
net/minecraft/commands/CommandBuildContext net/minecraft/commands/CommandBuildContext
	a (Lhf$b;Lnet/minecraft/world/flag/FeatureFlagSet;)Lnet/minecraft/commands/CommandBuildContext; simple
	a (Lnet/minecraft/core/IRegistryCustom;Lnet/minecraft/world/flag/FeatureFlagSet;)Ldl$a; configurable
	a (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/core/HolderLookup; holderLookup
net/minecraft/commands/arguments/TemplateMirrorArgument net/minecraft/commands/arguments/TemplateMirrorArgument
	a ()Lnet/minecraft/commands/arguments/StringRepresentableArgument; templateMirror
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/level/block/EnumBlockMirror; getMirror
net/minecraft/commands/arguments/TemplateRotationArgument net/minecraft/commands/arguments/TemplateRotationArgument
	a ()Lnet/minecraft/commands/arguments/TemplateRotationArgument; templateRotation
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/level/block/EnumBlockRotation; getRotation
net/minecraft/commands/synchronization/ArgumentTypeInfo net/minecraft/commands/synchronization/ArgumentTypeInfo
	a (Lcom/mojang/brigadier/arguments/ArgumentType;)Lgf$a; unpack
	a (Lgf$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lgf$a;Lnet/minecraft/network/PacketDataSerializer;)V serializeToNetwork
	b (Lnet/minecraft/network/PacketDataSerializer;)Lgf$a; deserializeFromNetwork
net/minecraft/commands/synchronization/brigadier/DoubleArgumentInfo net/minecraft/commands/synchronization/brigadier/DoubleArgumentInfo
	a (Lcom/mojang/brigadier/arguments/ArgumentType;)Lgf$a; unpack
	a (Lcom/mojang/brigadier/arguments/DoubleArgumentType;)Lgk$a; unpack
	a (Lgf$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lgf$a;Lnet/minecraft/network/PacketDataSerializer;)V serializeToNetwork
	a (Lgk$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lgk$a;Lnet/minecraft/network/PacketDataSerializer;)V serializeToNetwork
	a (Lnet/minecraft/network/PacketDataSerializer;)Lgk$a; deserializeFromNetwork
	b (Lnet/minecraft/network/PacketDataSerializer;)Lgf$a; deserializeFromNetwork
net/minecraft/commands/synchronization/brigadier/FloatArgumentInfo net/minecraft/commands/synchronization/brigadier/FloatArgumentInfo
	a (Lcom/mojang/brigadier/arguments/ArgumentType;)Lgf$a; unpack
	a (Lcom/mojang/brigadier/arguments/FloatArgumentType;)Lgl$a; unpack
	a (Lgf$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lgf$a;Lnet/minecraft/network/PacketDataSerializer;)V serializeToNetwork
	a (Lgl$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lgl$a;Lnet/minecraft/network/PacketDataSerializer;)V serializeToNetwork
	a (Lnet/minecraft/network/PacketDataSerializer;)Lgl$a; deserializeFromNetwork
	b (Lnet/minecraft/network/PacketDataSerializer;)Lgf$a; deserializeFromNetwork
net/minecraft/commands/synchronization/brigadier/IntegerArgumentInfo net/minecraft/commands/synchronization/brigadier/IntegerArgumentInfo
	a (Lcom/mojang/brigadier/arguments/ArgumentType;)Lgf$a; unpack
	a (Lcom/mojang/brigadier/arguments/IntegerArgumentType;)Lgm$a; unpack
	a (Lgf$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lgf$a;Lnet/minecraft/network/PacketDataSerializer;)V serializeToNetwork
	a (Lgm$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lgm$a;Lnet/minecraft/network/PacketDataSerializer;)V serializeToNetwork
	a (Lnet/minecraft/network/PacketDataSerializer;)Lgm$a; deserializeFromNetwork
	b (Lnet/minecraft/network/PacketDataSerializer;)Lgf$a; deserializeFromNetwork
net/minecraft/commands/synchronization/brigadier/LongArgumentInfo net/minecraft/commands/synchronization/brigadier/LongArgumentInfo
	a (Lcom/mojang/brigadier/arguments/ArgumentType;)Lgf$a; unpack
	a (Lcom/mojang/brigadier/arguments/LongArgumentType;)Lgn$a; unpack
	a (Lgf$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lgf$a;Lnet/minecraft/network/PacketDataSerializer;)V serializeToNetwork
	a (Lgn$a;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lgn$a;Lnet/minecraft/network/PacketDataSerializer;)V serializeToNetwork
	a (Lnet/minecraft/network/PacketDataSerializer;)Lgn$a; deserializeFromNetwork
	b (Lnet/minecraft/network/PacketDataSerializer;)Lgf$a; deserializeFromNetwork
net/minecraft/core/Holder net/minecraft/core/Holder
	a ()Ljava/lang/Object; value
	a (Ljava/lang/Object;)Lnet/minecraft/core/Holder; direct
	a (Ljava/util/function/Predicate;)Z is
	a (Lnet/minecraft/core/HolderOwner;)Z canSerializeIn
	a (Lnet/minecraft/resources/MinecraftKey;)Z is
	a (Lnet/minecraft/resources/ResourceKey;)Z is
	a (Lnet/minecraft/tags/TagKey;)Z is
	b ()Z isBound
	c ()Ljava/util/stream/Stream; tags
	d ()Lcom/mojang/datafixers/util/Either; unwrap
	e ()Ljava/util/Optional; unwrapKey
	f ()Lhd$b; kind
net/minecraft/core/HolderGetter net/minecraft/core/HolderGetter
	a (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; get
	a (Lnet/minecraft/tags/TagKey;)Ljava/util/Optional; get
	b (Lnet/minecraft/resources/ResourceKey;)Lhd$c; getOrThrow
	b (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/core/HolderSet$Named; getOrThrow
net/minecraft/core/HolderLookup net/minecraft/core/HolderLookup
	a (Ljava/util/function/Predicate;)Lnet/minecraft/core/HolderLookup; filterElements
	b ()Ljava/util/stream/Stream; listElements
	c ()Ljava/util/stream/Stream; listElementIds
	d ()Ljava/util/stream/Stream; listTags
	e ()Ljava/util/stream/Stream; listTagIds
net/minecraft/core/HolderOwner net/minecraft/core/HolderOwner
	a (Lnet/minecraft/core/HolderOwner;)Z canSerializeIn
net/minecraft/core/HolderSet net/minecraft/core/HolderSet
	a ()Ljava/util/stream/Stream; stream
	a (I)Lnet/minecraft/core/Holder; get
	a (Ljava/util/List;)Lhh$a; direct
	a (Ljava/util/function/Function;Ljava/util/List;)Lhh$a; direct
	a (Ljava/util/function/Function;[Ljava/lang/Object;)Lhh$a; direct
	a (Lnet/minecraft/core/Holder;)Z contains
	a (Lnet/minecraft/core/HolderOwner;)Z canSerializeIn
	a (Lnet/minecraft/core/HolderOwner;Lnet/minecraft/tags/TagKey;)Lnet/minecraft/core/HolderSet$Named; emptyNamed
	a (Lnet/minecraft/util/RandomSource;)Ljava/util/Optional; getRandomElement
	a ([Lnet/minecraft/core/Holder;)Lhh$a; direct
	b ()I size
	c ()Lcom/mojang/datafixers/util/Either; unwrap
	d ()Ljava/util/Optional; unwrapKey
net/minecraft/core/RegistryCodecs net/minecraft/core/RegistryCodecs
	a (Lnet/minecraft/resources/ResourceKey;)Lcom/mojang/serialization/Codec; homogeneousList
	a (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; homogeneousList
	a (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Codec;Z)Lcom/mojang/serialization/Codec; homogeneousList
	a (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Lifecycle;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; networkCodec
	a (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec; withNameAndId
	a (Lnet/minecraft/resources/ResourceKey;Z)Lcom/mojang/serialization/Codec; homogeneousList
	b (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Lifecycle;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; fullCodec
net/minecraft/data/Main net/minecraft/data/Main
	a (Ljava/nio/file/Path;Ljava/util/Collection;ZZZZZLnet/minecraft/WorldVersion;Z)Ljg; createStandardGenerator
	a (Ljava/util/function/BiFunction;Ljava/util/concurrent/CompletableFuture;)Ljh$a; bindRegistries
net/minecraft/data/worldgen/AncientCityStructurePools net/minecraft/data/worldgen/AncientCityStructurePools
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/BootstapContext net/minecraft/data/worldgen/BootstapContext
	a (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/core/HolderGetter; lookup
	a (Lnet/minecraft/resources/ResourceKey;Ljava/lang/Object;)Lhd$c; register
	a (Lnet/minecraft/resources/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lhd$c; register
net/minecraft/data/worldgen/DimensionTypes net/minecraft/data/worldgen/DimensionTypes
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/StructureSets net/minecraft/data/worldgen/StructureSets
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/Structures net/minecraft/data/worldgen/Structures
	a (Lnet/minecraft/core/HolderSet;Ljava/util/Map;Lnet/minecraft/world/level/levelgen/WorldGenStage$Decoration;Lnet/minecraft/world/level/levelgen/structure/TerrainAdjustment;)Ldrp$c; structure
	a (Lnet/minecraft/core/HolderSet;Lnet/minecraft/world/level/levelgen/WorldGenStage$Decoration;Lnet/minecraft/world/level/levelgen/structure/TerrainAdjustment;)Ldrp$c; structure
	a (Lnet/minecraft/core/HolderSet;Lnet/minecraft/world/level/levelgen/structure/TerrainAdjustment;)Ldrp$c; structure
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
net/minecraft/data/worldgen/biome/BiomeData net/minecraft/data/worldgen/biome/BiomeData
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
	b (Lnet/minecraft/data/worldgen/BootstapContext;)V nextUpdate
net/minecraft/data/worldgen/biome/EndBiomes net/minecraft/data/worldgen/biome/EndBiomes
	a (Lcng$a;)Lnet/minecraft/world/level/biome/BiomeBase; baseEndBiome
	a (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/BiomeBase; endBarrens
	b (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/BiomeBase; theEnd
	c (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/BiomeBase; endMidlands
	d (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/BiomeBase; endHighlands
	e (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/BiomeBase; smallEndIslands
net/minecraft/data/worldgen/biome/NetherBiomes net/minecraft/data/worldgen/biome/NetherBiomes
	a (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/BiomeBase; netherWastes
	b (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/BiomeBase; soulSandValley
	c (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/BiomeBase; basaltDeltas
	d (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/BiomeBase; crimsonForest
	e (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/BiomeBase; warpedForest
net/minecraft/data/worldgen/features/FeatureUtils net/minecraft/data/worldgen/features/FeatureUtils
	a (ILnet/minecraft/core/Holder;)Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureRandomPatchConfiguration; simpleRandomPatchConfiguration
	a (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; createKey
	a (Ljava/util/List;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; simplePatchPredicate
	a (Lnet/minecraft/data/worldgen/BootstapContext;)V bootstrap
	a (Lnet/minecraft/data/worldgen/BootstapContext;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/level/levelgen/feature/WorldGenerator;)V register
	a (Lnet/minecraft/data/worldgen/BootstapContext;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/level/levelgen/feature/WorldGenerator;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureConfiguration;)V register
	a (Lnet/minecraft/world/level/levelgen/feature/WorldGenerator;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureConfiguration;)Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureRandomPatchConfiguration; simplePatchConfiguration
	a (Lnet/minecraft/world/level/levelgen/feature/WorldGenerator;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureConfiguration;Ljava/util/List;)Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureRandomPatchConfiguration; simplePatchConfiguration
	a (Lnet/minecraft/world/level/levelgen/feature/WorldGenerator;Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureConfiguration;Ljava/util/List;I)Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureRandomPatchConfiguration; simplePatchConfiguration
net/minecraft/gametest/framework/AfterBatch net/minecraft/gametest/framework/AfterBatch
	a ()Ljava/lang/String; batch
net/minecraft/gametest/framework/BeforeBatch net/minecraft/gametest/framework/BeforeBatch
	a ()Ljava/lang/String; batch
net/minecraft/gametest/framework/GameTest net/minecraft/gametest/framework/GameTest
	a ()I timeoutTicks
	b ()Ljava/lang/String; batch
	c ()I rotationSteps
	d ()Z required
	e ()Ljava/lang/String; template
	f ()J setupTicks
	g ()I attempts
	h ()I requiredSuccesses
net/minecraft/nbt/StreamTagVisitor net/minecraft/nbt/StreamTagVisitor
	a ()Lru$b; visitEnd
	a (B)Lru$b; visit
	a (D)Lru$b; visit
	a (F)Lru$b; visit
	a (I)Lru$b; visit
	a (J)Lru$b; visit
	a (Ljava/lang/String;)Lru$b; visit
	a (Lnet/minecraft/nbt/NBTTagType;)Lru$a; visitEntry
	a (Lnet/minecraft/nbt/NBTTagType;I)Lru$b; visitList
	a (Lnet/minecraft/nbt/NBTTagType;Ljava/lang/String;)Lru$a; visitEntry
	a (S)Lru$b; visit
	a ([B)Lru$b; visit
	a ([I)Lru$b; visit
	a ([J)Lru$b; visit
	b ()Lru$b; visitContainerEnd
	b (Lnet/minecraft/nbt/NBTTagType;)Lru$b; visitRootEntry
	b (Lnet/minecraft/nbt/NBTTagType;I)Lru$a; visitElement
net/minecraft/nbt/TagVisitor net/minecraft/nbt/TagVisitor
	a (Lnet/minecraft/nbt/NBTTagByte;)V visitByte
	a (Lnet/minecraft/nbt/NBTTagByteArray;)V visitByteArray
	a (Lnet/minecraft/nbt/NBTTagCompound;)V visitCompound
	a (Lnet/minecraft/nbt/NBTTagDouble;)V visitDouble
	a (Lnet/minecraft/nbt/NBTTagEnd;)V visitEnd
	a (Lnet/minecraft/nbt/NBTTagFloat;)V visitFloat
	a (Lnet/minecraft/nbt/NBTTagInt;)V visitInt
	a (Lnet/minecraft/nbt/NBTTagIntArray;)V visitIntArray
	a (Lnet/minecraft/nbt/NBTTagList;)V visitList
	a (Lnet/minecraft/nbt/NBTTagLong;)V visitLong
	a (Lnet/minecraft/nbt/NBTTagLongArray;)V visitLongArray
	a (Lnet/minecraft/nbt/NBTTagShort;)V visitShort
	a (Lnet/minecraft/nbt/NBTTagString;)V visitString
net/minecraft/network/PacketListener net/minecraft/network/PacketListener
	a ()Z isAcceptingMessages
	a (Lnet/minecraft/network/chat/IChatBaseComponent;)V onDisconnect
	b ()Z shouldPropagateHandlingExceptions
net/minecraft/network/PacketSendListener net/minecraft/network/PacketSendListener
	a ()V onSuccess
	a (Ljava/lang/Runnable;)Lnet/minecraft/network/PacketSendListener; thenRun
	a (Ljava/util/function/Supplier;)Lnet/minecraft/network/PacketSendListener; exceptionallySend
	b ()Lnet/minecraft/network/protocol/Packet; onFailure
net/minecraft/network/TickablePacketListener net/minecraft/network/TickablePacketListener
	c ()V tick
net/minecraft/network/chat/OutgoingChatMessage net/minecraft/network/chat/OutgoingChatMessage
	a ()Lnet/minecraft/network/chat/IChatBaseComponent; content
	a (Lnet/minecraft/network/chat/PlayerChatMessage;)Lnet/minecraft/network/chat/OutgoingChatMessage; create
	a (Lnet/minecraft/server/level/EntityPlayer;ZLtf$a;)V sendToPlayer
net/minecraft/network/protocol/BundleDelimiterPacket net/minecraft/network/protocol/BundleDelimiterPacket
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
net/minecraft/network/protocol/Packet net/minecraft/network/protocol/Packet
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	b ()Z isSkippable
net/minecraft/network/protocol/game/ClientboundBundlePacket net/minecraft/network/protocol/game/ClientboundBundlePacket
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
net/minecraft/network/protocol/game/ClientboundPlayerCombatEnterPacket net/minecraft/network/protocol/game/ClientboundPlayerCombatEnterPacket
	a (Lnet/minecraft/network/PacketDataSerializer;)V write
	a (Lnet/minecraft/network/PacketListener;)V handle
	a (Lnet/minecraft/network/protocol/game/PacketListenerPlayOut;)V handle
net/minecraft/network/protocol/game/ServerPacketListener net/minecraft/network/protocol/game/ServerPacketListener
	b ()Z shouldPropagateHandlingExceptions
net/minecraft/server/network/ServerPlayerConnection net/minecraft/server/network/ServerPlayerConnection
	a (Lnet/minecraft/network/protocol/Packet;)V send
	f ()Lnet/minecraft/server/level/EntityPlayer; getPlayer
net/minecraft/server/packs/metadata/MetadataSectionType net/minecraft/server/packs/metadata/MetadataSectionType
	a (Ljava/lang/Object;)Lcom/google/gson/JsonObject; toJson
	a (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/server/packs/metadata/MetadataSectionType; fromCodec
net/minecraft/server/players/IpBanList net/minecraft/server/players/IpBanList
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/players/JsonListEntry; createEntry
	a (Ljava/lang/String;)Z isBanned
	a (Ljava/net/SocketAddress;)Z isBanned
	b (Ljava/net/SocketAddress;)Lnet/minecraft/server/players/IpBanEntry; get
	c (Ljava/net/SocketAddress;)Ljava/lang/String; getIpFromAddress
net/minecraft/tags/TagNetworkSerialization net/minecraft/tags/TagNetworkSerialization
	a (Lnet/minecraft/core/IRegistry;)Lany$a; serializeToNetwork
	a (Lnet/minecraft/core/LayeredRegistryAccess;)Ljava/util/Map; serializeTagsToNetwork
	a (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/IRegistry;Lany$a;Lany$b;)V deserializeTagsFromNetwork
net/minecraft/util/ByIdMap net/minecraft/util/ByIdMap
	a (Ljava/util/function/ToIntFunction;[Ljava/lang/Object;)Ljava/util/function/IntFunction; createMap
	a (Ljava/util/function/ToIntFunction;[Ljava/lang/Object;Laoe$a;)Ljava/util/function/IntFunction; continuous
	a (Ljava/util/function/ToIntFunction;[Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/function/IntFunction; sparse
	b (Ljava/util/function/ToIntFunction;[Ljava/lang/Object;)[Ljava/lang/Object; createSortedArray
net/minecraft/util/CubicSpline net/minecraft/util/CubicSpline
	a ()Ljava/lang/String; parityString
	a (F)Lnet/minecraft/util/CubicSpline; constant
	a (Laon$d;)Lnet/minecraft/util/CubicSpline; mapAll
	a (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; codec
	a (Lnet/minecraft/util/ToFloatFunction;)Laon$b; builder
	a (Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;)Laon$b; builder
net/minecraft/util/Graph net/minecraft/util/Graph
	a (Ljava/util/Map;Ljava/util/Set;Ljava/util/Set;Ljava/util/function/Consumer;Ljava/lang/Object;)Z depthFirstSearch
net/minecraft/util/OptionEnum net/minecraft/util/OptionEnum
	a ()I getId
	b ()Ljava/lang/String; getKey
	c ()Lnet/minecraft/network/chat/IChatBaseComponent; getCaption
net/minecraft/util/ParticleUtils net/minecraft/util/ParticleUtils
	a (Lnet/minecraft/core/EnumDirection$EnumAxis;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;DLnet/minecraft/core/particles/ParticleParam;Lnet/minecraft/util/valueproviders/UniformInt;)V spawnParticlesAlongAxis
	a (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/phys/Vec3D; getRandomSpeedRanges
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;Lnet/minecraft/core/particles/ParticleParam;Lnet/minecraft/world/phys/Vec3D;D)V spawnParticleOnFace
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/particles/ParticleParam;Lnet/minecraft/util/valueproviders/IntProvider;)V spawnParticlesOnBlockFaces
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/particles/ParticleParam;Lnet/minecraft/util/valueproviders/IntProvider;Lnet/minecraft/core/EnumDirection;Ljava/util/function/Supplier;D)V spawnParticlesOnBlockFace
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/particles/ParticleParam;)V spawnParticleBelow
net/minecraft/util/SpawnUtil net/minecraft/util/SpawnUtil
	a (Lnet/minecraft/server/level/WorldServer;ILnet/minecraft/core/BlockPosition$MutableBlockPosition;Lapy$a;)Z moveToPossibleSpawnPosition
	a (Lnet/minecraft/world/entity/EntityTypes;Lnet/minecraft/world/entity/EnumMobSpawn;Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/core/BlockPosition;IIILapy$a;)Ljava/util/Optional; trySpawnMob
net/minecraft/util/Tuple net/minecraft/util/Tuple
	a ()Ljava/lang/Object; getA
	a (Ljava/lang/Object;)V setA
	b ()Ljava/lang/Object; getB
	b (Ljava/lang/Object;)V setB
net/minecraft/util/datafix/fixes/AbstractArrowPickupFix net/minecraft/util/datafix/fixes/AbstractArrowPickupFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; updateProjectiles
	a (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed; updateEntity
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; updatePickup
net/minecraft/util/datafix/fixes/BlendingDataRemoveFromNetherEndFix net/minecraft/util/datafix/fixes/BlendingDataRemoveFromNetherEndFix
	a (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/OptionalDynamic;)Lcom/mojang/serialization/Dynamic; updateChunkTag
net/minecraft/util/datafix/fixes/CauldronRenameFix net/minecraft/util/datafix/fixes/CauldronRenameFix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fix
net/minecraft/util/datafix/fixes/ChunkRenamesFix net/minecraft/util/datafix/fixes/ChunkRenamesFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; appendChunkName
	a (Lcom/mojang/datafixers/Typed;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; mergeRemainders
	a (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/datafixers/Typed; renameField
	a (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/Typed; renameFieldHelper
net/minecraft/util/datafix/fixes/EntityGoatMissingStateFix net/minecraft/util/datafix/fixes/EntityGoatMissingStateFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
net/minecraft/util/datafix/fixes/EntityPaintingFieldsRenameFix net/minecraft/util/datafix/fixes/EntityPaintingFieldsRenameFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixTag
	a (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; renameField
net/minecraft/util/datafix/fixes/FilteredBooksFix net/minecraft/util/datafix/fixes/FilteredBooksFix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixItemStackTag
net/minecraft/util/datafix/fixes/FilteredSignsFix net/minecraft/util/datafix/fixes/FilteredSignsFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
net/minecraft/util/datafix/fixes/OptionsAmbientOcclusionFix net/minecraft/util/datafix/fixes/OptionsAmbientOcclusionFix
	a (Ljava/lang/String;)Ljava/lang/String; updateValue
net/minecraft/util/datafix/fixes/OptionsProgrammerArtFix net/minecraft/util/datafix/fixes/OptionsProgrammerArtFix
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixList
net/minecraft/util/datafix/fixes/OverreachingTickFix net/minecraft/util/datafix/fixes/OverreachingTickFix
	a (Lcom/mojang/serialization/Dynamic;IILjava/util/Optional;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; extractOverreachingTicks
net/minecraft/util/datafix/fixes/SpawnerDataFix net/minecraft/util/datafix/fixes/SpawnerDataFix
	a (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; wrapEntityToSpawnData
	b (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; wrapSpawnPotentialsToWeightedEntries
net/minecraft/util/datafix/fixes/StructureSettingsFlattenFix net/minecraft/util/datafix/fixes/StructureSettingsFlattenFix
	a (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; fixDimension
	a (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; fixStructures
net/minecraft/util/datafix/fixes/WeaponSmithChestLootTableFix net/minecraft/util/datafix/fixes/WeaponSmithChestLootTableFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
net/minecraft/util/datafix/schemas/V3078 net/minecraft/util/datafix/schemas/V3078
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
net/minecraft/util/datafix/schemas/V3083 net/minecraft/util/datafix/schemas/V3083
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
net/minecraft/util/profiling/jfr/stats/TimedStat net/minecraft/util/profiling/jfr/stats/TimedStat
	a ()Ljava/time/Duration; duration
net/minecraft/util/profiling/metrics/MetricsSamplerProvider net/minecraft/util/profiling/metrics/MetricsSamplerProvider
	a (Ljava/util/function/Supplier;)Ljava/util/Set; samplers
net/minecraft/util/profiling/metrics/ProfilerMeasured net/minecraft/util/profiling/metrics/ProfilerMeasured
	bm ()Ljava/util/List; profiledMetrics
net/minecraft/util/profiling/metrics/profiling/MetricsRecorder net/minecraft/util/profiling/metrics/profiling/MetricsRecorder
	a ()V end
	b ()V cancel
	c ()V startTick
	d ()V endTick
	e ()Z isRecording
	f ()Lnet/minecraft/util/profiling/GameProfilerFiller; getProfiler
net/minecraft/util/random/SimpleWeightedRandomList net/minecraft/util/random/SimpleWeightedRandomList
	a ()Lbci$a; builder
	a (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; wrappedCodecAllowingEmpty
	a (Ljava/lang/Object;)Lnet/minecraft/util/random/SimpleWeightedRandomList; single
	a (Lnet/minecraft/util/RandomSource;)Ljava/util/Optional; getRandomValue
	b ()Lnet/minecraft/util/random/SimpleWeightedRandomList; empty
	b (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; wrappedCodec
net/minecraft/util/random/WeightedEntry net/minecraft/util/random/WeightedEntry
	a ()Lnet/minecraft/util/random/Weight; getWeight
	a (Ljava/lang/Object;I)Lbck$b; wrap
net/minecraft/util/valueproviders/SampledFloat net/minecraft/util/valueproviders/SampledFloat
	a (Lnet/minecraft/util/RandomSource;)F sample
net/minecraft/world/Clearable net/minecraft/world/Clearable
	a ()V clearContent
	a_ (Ljava/lang/Object;)V tryClear
net/minecraft/world/effect/MobEffectUtil net/minecraft/world/effect/MobEffectUtil
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/Vec3D;DLnet/minecraft/world/effect/MobEffect;I)Ljava/util/List; addEffectToPlayersAround
	a (Lnet/minecraft/world/effect/MobEffect;F)Lnet/minecraft/network/chat/IChatBaseComponent; formatDuration
	a (Lnet/minecraft/world/entity/EntityLiving;)Z hasDigSpeed
	b (Lnet/minecraft/world/entity/EntityLiving;)I getDigSpeedAmplification
	c (Lnet/minecraft/world/entity/EntityLiving;)Z hasWaterBreathing
net/minecraft/world/entity/Attackable net/minecraft/world/entity/Attackable
	L_ ()Lnet/minecraft/world/entity/EntityLiving; getLastAttacker
net/minecraft/world/entity/Display$ColorInterpolator net/minecraft/world/entity/Display$ColorInterpolator
	a (FII)I interpolate
net/minecraft/world/entity/Display$FloatInterpolator net/minecraft/world/entity/Display$FloatInterpolator
	a (F)F get
	a (FFF)F interpolate
	b (F)Ljava/lang/Float; getGeneric
	c (F)Ljava/lang/Object; getGeneric
net/minecraft/world/entity/Display$GenericInterpolator net/minecraft/world/entity/Display$GenericInterpolator
	a (F)Ljava/lang/Object; get
	a (FLjava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; interpolate
	c (F)Ljava/lang/Object; getGeneric
net/minecraft/world/entity/Display$IntInterpolator net/minecraft/world/entity/Display$IntInterpolator
	a (F)I get
	a (FII)I interpolate
	b (F)Ljava/lang/Integer; getGeneric
	c (F)Ljava/lang/Object; getGeneric
net/minecraft/world/entity/HasCustomInventoryScreen net/minecraft/world/entity/HasCustomInventoryScreen
	b (Lnet/minecraft/world/entity/player/EntityHuman;)V openCustomInventoryScreen
net/minecraft/world/entity/LerpingModel net/minecraft/world/entity/LerpingModel
	a ()Ljava/util/Map; getModelRotationValues
net/minecraft/world/entity/OwnableEntity net/minecraft/world/entity/OwnableEntity
	H_ ()Lnet/minecraft/world/entity/EntityLiving; getOwner
	T_ ()Ljava/util/UUID; getOwnerUUID
	e ()Lnet/minecraft/world/level/IEntityAccess; getLevel
net/minecraft/world/entity/PowerableMob net/minecraft/world/entity/PowerableMob
	a ()Z isPowered
net/minecraft/world/entity/RiderShieldingMount net/minecraft/world/entity/RiderShieldingMount
	d ()D getRiderShieldingHeight
net/minecraft/world/entity/Targeting net/minecraft/world/entity/Targeting
	P_ ()Lnet/minecraft/world/entity/EntityLiving; getTarget
net/minecraft/world/entity/TraceableEntity net/minecraft/world/entity/TraceableEntity
	v ()Lnet/minecraft/world/entity/Entity; getOwner
net/minecraft/world/entity/VariantHolder net/minecraft/world/entity/VariantHolder
	a (Ljava/lang/Object;)V setVariant
	c ()Ljava/lang/Object; getVariant
net/minecraft/world/entity/ai/behavior/BehaviorControl net/minecraft/world/entity/ai/behavior/BehaviorControl
	a ()Lnet/minecraft/world/entity/ai/behavior/Behavior$Status; getStatus
	b ()Ljava/lang/String; debugString
	e (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z tryStart
	f (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V tickOrStop
	g (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V doStop
net/minecraft/world/entity/ai/behavior/GoToTargetLocation net/minecraft/world/entity/ai/behavior/GoToTargetLocation
	a (Lnet/minecraft/util/RandomSource;)I getRandomOffset
	a (Lnet/minecraft/world/entity/EntityInsentient;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/core/BlockPosition; getNearbyPos
	a (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;IF)Lnet/minecraft/world/entity/ai/behavior/OneShot; create
net/minecraft/world/entity/ai/behavior/SetEntityLookTargetSometimes net/minecraft/world/entity/ai/behavior/SetEntityLookTargetSometimes
	a (FLnet/minecraft/util/valueproviders/UniformInt;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
	a (FLnet/minecraft/util/valueproviders/UniformInt;Ljava/util/function/Predicate;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
	a (Lnet/minecraft/world/entity/EntityTypes;FLnet/minecraft/util/valueproviders/UniformInt;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/StayCloseToTarget net/minecraft/world/entity/ai/behavior/StayCloseToTarget
	a (Ljava/util/function/Function;Ljava/util/function/Predicate;IIF)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/TriggerGate net/minecraft/world/entity/ai/behavior/TriggerGate
	a (Ljava/util/List;)Lnet/minecraft/world/entity/ai/behavior/OneShot; triggerOneShuffled
	a (Ljava/util/List;Lnet/minecraft/world/entity/ai/behavior/BehaviorGate$Order;Lnet/minecraft/world/entity/ai/behavior/BehaviorGate$Execution;)Lnet/minecraft/world/entity/ai/behavior/OneShot; triggerGate
net/minecraft/world/entity/ai/behavior/TryFindLandNearWater net/minecraft/world/entity/ai/behavior/TryFindLandNearWater
	a (IF)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/TryFindWater net/minecraft/world/entity/ai/behavior/TryFindWater
	a (IF)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/TryLaySpawnOnWaterNearLand net/minecraft/world/entity/ai/behavior/TryLaySpawnOnWaterNearLand
	a (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/declarative/MemoryCondition net/minecraft/world/entity/ai/behavior/declarative/MemoryCondition
	a ()Lnet/minecraft/world/entity/ai/memory/MemoryModuleType; memory
	a (Lnet/minecraft/world/entity/ai/BehaviorController;Ljava/util/Optional;)Lnet/minecraft/world/entity/ai/behavior/declarative/MemoryAccessor; createAccessor
	b ()Lnet/minecraft/world/entity/ai/memory/MemoryStatus; condition
net/minecraft/world/entity/ai/behavior/warden/Digging net/minecraft/world/entity/ai/behavior/warden/Digging
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/monster/warden/Warden;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/monster/warden/Warden;J)Z canStillUse
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/monster/warden/Warden;J)V start
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/monster/warden/Warden;J)V stop
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
net/minecraft/world/entity/ai/behavior/warden/Emerging net/minecraft/world/entity/ai/behavior/warden/Emerging
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/monster/warden/Warden;J)Z canStillUse
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V stop
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/monster/warden/Warden;J)V start
	c (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/monster/warden/Warden;J)V stop
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
net/minecraft/world/entity/ai/behavior/warden/ForceUnmount net/minecraft/world/entity/ai/behavior/warden/ForceUnmount
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
net/minecraft/world/entity/ai/behavior/warden/SetRoarTarget net/minecraft/world/entity/ai/behavior/warden/SetRoarTarget
	a (Ljava/util/function/Function;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/behavior/warden/SetWardenLookTarget net/minecraft/world/entity/ai/behavior/warden/SetWardenLookTarget
	a ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/ai/navigation/AmphibiousPathNavigation net/minecraft/world/entity/ai/navigation/AmphibiousPathNavigation
	a ()Z canUpdatePath
	a (I)Lnet/minecraft/world/level/pathfinder/Pathfinder; createPathFinder
	a (Lnet/minecraft/core/BlockPosition;)Z isStableDestination
	a (Lnet/minecraft/world/phys/Vec3D;)D getGroundY
	a (Lnet/minecraft/world/phys/Vec3D;Lnet/minecraft/world/phys/Vec3D;)Z canMoveDirectly
	a (Z)V setCanFloat
	b ()Lnet/minecraft/world/phys/Vec3D; getTempMobPos
net/minecraft/world/entity/ai/sensing/IsInWaterSensor net/minecraft/world/entity/ai/sensing/IsInWaterSensor
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)V doTick
net/minecraft/world/entity/ai/sensing/NearestVisibleLivingEntitySensor net/minecraft/world/entity/ai/sensing/NearestVisibleLivingEntitySensor
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)V doTick
	a (Lnet/minecraft/world/entity/EntityLiving;)Ljava/util/Optional; getVisibleEntities
	a (Lnet/minecraft/world/entity/EntityLiving;Lnet/minecraft/world/entity/EntityLiving;)Z isMatchingEntity
	b ()Lnet/minecraft/world/entity/ai/memory/MemoryModuleType; getMemory
	b (Lnet/minecraft/world/entity/EntityLiving;)Ljava/util/Optional; getNearestEntity
net/minecraft/world/entity/ai/sensing/WardenEntitySensor net/minecraft/world/entity/ai/sensing/WardenEntitySensor
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)V doTick
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/monster/warden/Warden;)V doTick
	a (Lnet/minecraft/world/entity/monster/warden/Warden;Ljava/util/function/Predicate;)Ljava/util/Optional; getClosest
	b ()I radiusXZ
	c ()I radiusY
net/minecraft/world/entity/ai/util/AirAndWaterRandomPos net/minecraft/world/entity/ai/util/AirAndWaterRandomPos
	a (Lnet/minecraft/world/entity/EntityCreature;IIIDDD)Lnet/minecraft/world/phys/Vec3D; getPos
	a (Lnet/minecraft/world/entity/EntityCreature;IIIDDDZ)Lnet/minecraft/core/BlockPosition; generateRandomPos
net/minecraft/world/entity/ai/util/AirRandomPos net/minecraft/world/entity/ai/util/AirRandomPos
	a (Lnet/minecraft/world/entity/EntityCreature;IIILnet/minecraft/world/phys/Vec3D;D)Lnet/minecraft/world/phys/Vec3D; getPosTowards
net/minecraft/world/entity/ai/util/DefaultRandomPos net/minecraft/world/entity/ai/util/DefaultRandomPos
	a (Lnet/minecraft/world/entity/EntityCreature;II)Lnet/minecraft/world/phys/Vec3D; getPos
	a (Lnet/minecraft/world/entity/EntityCreature;IILnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/phys/Vec3D; getPosAway
	a (Lnet/minecraft/world/entity/EntityCreature;IILnet/minecraft/world/phys/Vec3D;D)Lnet/minecraft/world/phys/Vec3D; getPosTowards
	a (Lnet/minecraft/world/entity/EntityCreature;IZLnet/minecraft/core/BlockPosition;)Lnet/minecraft/core/BlockPosition; generateRandomPosTowardDirection
net/minecraft/world/entity/ai/util/HoverRandomPos net/minecraft/world/entity/ai/util/HoverRandomPos
	a (Lnet/minecraft/world/entity/EntityCreature;IIDDFII)Lnet/minecraft/world/phys/Vec3D; getPos
net/minecraft/world/entity/ai/util/LandRandomPos net/minecraft/world/entity/ai/util/LandRandomPos
	a (Lnet/minecraft/world/entity/EntityCreature;II)Lnet/minecraft/world/phys/Vec3D; getPos
	a (Lnet/minecraft/world/entity/EntityCreature;IILjava/util/function/ToDoubleFunction;)Lnet/minecraft/world/phys/Vec3D; getPos
	a (Lnet/minecraft/world/entity/EntityCreature;IILnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/phys/Vec3D; getPosTowards
	a (Lnet/minecraft/world/entity/EntityCreature;IILnet/minecraft/world/phys/Vec3D;Z)Lnet/minecraft/world/phys/Vec3D; getPosInDirection
	a (Lnet/minecraft/world/entity/EntityCreature;IZLnet/minecraft/core/BlockPosition;)Lnet/minecraft/core/BlockPosition; generateRandomPosTowardDirection
	a (Lnet/minecraft/world/entity/EntityCreature;Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/core/BlockPosition; movePosUpOutOfSolid
	b (Lnet/minecraft/world/entity/EntityCreature;IILnet/minecraft/world/phys/Vec3D;)Lnet/minecraft/world/phys/Vec3D; getPosAway
net/minecraft/world/entity/animal/Bucketable net/minecraft/world/entity/animal/Bucketable
	a (Lnet/minecraft/world/entity/EntityInsentient;Lnet/minecraft/nbt/NBTTagCompound;)V loadDefaultDataFromBucketTag
	a (Lnet/minecraft/world/entity/EntityInsentient;Lnet/minecraft/world/item/ItemStack;)V saveDefaultDataToBucketTag
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/entity/EntityLiving;)Ljava/util/Optional; bucketMobPickup
	b ()Lnet/minecraft/world/item/ItemStack; getBucketItemStack
	c (Lnet/minecraft/nbt/NBTTagCompound;)V loadFromBucketTag
	l (Lnet/minecraft/world/item/ItemStack;)V saveToBucketTag
	r ()Z fromBucket
	w ()Lnet/minecraft/sounds/SoundEffect; getPickupSound
	w (Z)V setFromBucket
net/minecraft/world/entity/animal/axolotl/PlayDead net/minecraft/world/entity/animal/axolotl/PlayDead
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)Z canStillUse
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/axolotl/Axolotl;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/axolotl/Axolotl;J)Z canStillUse
	b (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/animal/axolotl/Axolotl;J)V start
	d (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/entity/EntityLiving;J)V start
net/minecraft/world/entity/animal/axolotl/ValidatePlayDead net/minecraft/world/entity/animal/axolotl/ValidatePlayDead
	a ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; create
net/minecraft/world/entity/decoration/GlowItemFrame net/minecraft/world/entity/decoration/GlowItemFrame
	i ()Lnet/minecraft/sounds/SoundEffect; getRemoveItemSound
	j ()Lnet/minecraft/sounds/SoundEffect; getBreakSound
	k ()Lnet/minecraft/sounds/SoundEffect; getPlaceSound
	o ()Lnet/minecraft/sounds/SoundEffect; getAddItemSound
	p ()Lnet/minecraft/sounds/SoundEffect; getRotateItemSound
	q ()Lnet/minecraft/world/item/ItemStack; getFrameItemStack
net/minecraft/world/entity/npc/VillagerDataHolder net/minecraft/world/entity/npc/VillagerDataHolder
	a ()Lnet/minecraft/world/entity/npc/VillagerType; getVariant
	a (Ljava/lang/Object;)V setVariant
	a (Lnet/minecraft/world/entity/npc/VillagerData;)V setVillagerData
	a (Lnet/minecraft/world/entity/npc/VillagerType;)V setVariant
	c ()Ljava/lang/Object; getVariant
	gd ()Lnet/minecraft/world/entity/npc/VillagerData; getVillagerData
net/minecraft/world/entity/projectile/ItemSupplier net/minecraft/world/entity/projectile/ItemSupplier
	i ()Lnet/minecraft/world/item/ItemStack; getItem
net/minecraft/world/entity/vehicle/ContainerEntity net/minecraft/world/entity/vehicle/ContainerEntity
	A ()J getLootTableSeed
	C ()Lnet/minecraft/core/NonNullList; getItemStacks
	D ()V clearItemStacks
	Y ()Lnet/minecraft/world/level/World; getLevel
	a (J)V setLootTableSeed
	a (Lnet/minecraft/resources/MinecraftKey;)V setLootTable
	a (Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/Entity;)V chestVehicleDestroyed
	aa_ ()Z isEmpty
	b (II)Lnet/minecraft/world/item/ItemStack; removeChestVehicleItem
	b_ (Lnet/minecraft/nbt/NBTTagCompound;)V readChestVehicleSaveData
	c (ILnet/minecraft/world/item/ItemStack;)V setChestVehicleItem
	c (Lnet/minecraft/nbt/NBTTagCompound;)V addChestVehicleSaveData
	c_ (Lnet/minecraft/world/entity/player/EntityHuman;)Lnet/minecraft/world/EnumInteractionResult; interactWithContainerVehicle
	dB ()Z isRemoved
	de ()Lnet/minecraft/world/phys/Vec3D; position
	e_ (I)Lnet/minecraft/world/item/ItemStack; removeChestVehicleItemNoUpdate
	f ()V clearChestVehicleContent
	f (Lnet/minecraft/world/entity/player/EntityHuman;)V unpackChestVehicleLootTable
	f_ (I)Lnet/minecraft/world/item/ItemStack; getChestVehicleItem
	g ()Z isChestVehicleEmpty
	g (Lnet/minecraft/world/entity/player/EntityHuman;)Z isChestVehicleStillValid
	g_ (I)Lnet/minecraft/world/entity/SlotAccess; getChestVehicleSlot
	z ()Lnet/minecraft/resources/MinecraftKey; getLootTable
net/minecraft/world/inventory/ContainerSynchronizer net/minecraft/world/inventory/ContainerSynchronizer
	a (Lnet/minecraft/world/inventory/Container;II)V sendDataChange
	a (Lnet/minecraft/world/inventory/Container;ILnet/minecraft/world/item/ItemStack;)V sendSlotChange
	a (Lnet/minecraft/world/inventory/Container;Lnet/minecraft/core/NonNullList;Lnet/minecraft/world/item/ItemStack;[I)V sendInitialData
	a (Lnet/minecraft/world/inventory/Container;Lnet/minecraft/world/item/ItemStack;)V sendCarriedChange
net/minecraft/world/inventory/RecipeHolder net/minecraft/world/inventory/RecipeHolder
	a (Lnet/minecraft/world/item/crafting/IRecipe;)V setRecipeUsed
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/server/level/EntityPlayer;Lnet/minecraft/world/item/crafting/IRecipe;)Z setRecipeUsed
	b (Lnet/minecraft/world/entity/player/EntityHuman;)V awardUsedRecipes
	d ()Lnet/minecraft/world/item/crafting/IRecipe; getRecipeUsed
net/minecraft/world/item/ArmorMaterial net/minecraft/world/item/ArmorMaterial
	a ()I getEnchantmentValue
	a (Lcdh$a;)I getDurabilityForType
	b ()Lnet/minecraft/sounds/SoundEffect; getEquipSound
	b (Lcdh$a;)I getDefenseForType
	d ()Lnet/minecraft/world/item/crafting/RecipeItemStack; getRepairIngredient
	e ()Ljava/lang/String; getName
	f ()F getToughness
	g ()F getKnockbackResistance
net/minecraft/world/item/DiscFragmentItem net/minecraft/world/item/DiscFragmentItem
	a (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/World;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V appendHoverText
	d ()Lnet/minecraft/network/chat/IChatMutableComponent; getDisplayName
net/minecraft/world/item/DispensibleContainerItem net/minecraft/world/item/DispensibleContainerItem
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Z emptyContents
	a (Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/level/World;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPosition;)V checkExtraContent
net/minecraft/world/item/Equipable net/minecraft/world/item/Equipable
	a (Lnet/minecraft/world/item/Item;Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; swapWithEquipmentSlot
	ak_ ()Lnet/minecraft/sounds/SoundEffect; getEquipSound
	c_ (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/Equipable; get
	g ()Lnet/minecraft/world/entity/EnumItemSlot; getEquipmentSlot
net/minecraft/world/item/HangingSignItem net/minecraft/world/item/HangingSignItem
	a (Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/IBlockData;)Z updateCustomBlockEntityTag
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/core/BlockPosition;)Z canPlace
net/minecraft/world/item/PlaceOnWaterBlockItem net/minecraft/world/item/PlaceOnWaterBlockItem
	a (Lnet/minecraft/world/item/context/ItemActionContext;)Lnet/minecraft/world/EnumInteractionResult; useOn
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;)Lnet/minecraft/world/InteractionResultWrapper; use
net/minecraft/world/item/crafting/DecoratedPotRecipe net/minecraft/world/item/crafting/DecoratedPotRecipe
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/IInventory;Lnet/minecraft/world/level/World;)Z matches
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/core/IRegistryCustom;)Lnet/minecraft/world/item/ItemStack; assemble
	a (Lnet/minecraft/world/inventory/InventoryCrafting;Lnet/minecraft/world/level/World;)Z matches
	ai_ ()Lnet/minecraft/world/item/crafting/RecipeSerializer; getSerializer
net/minecraft/world/item/crafting/SmithingRecipe net/minecraft/world/item/crafting/SmithingRecipe
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/world/item/ItemStack;)Z isTemplateIngredient
	b (Lnet/minecraft/world/item/ItemStack;)Z isBaseIngredient
	c (Lnet/minecraft/world/item/ItemStack;)Z isAdditionIngredient
	f ()Lnet/minecraft/world/item/crafting/Recipes; getType
	h ()Lnet/minecraft/world/item/ItemStack; getToastSymbol
net/minecraft/world/item/enchantment/SwiftSneakEnchantment net/minecraft/world/item/enchantment/SwiftSneakEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	b ()Z isTreasureOnly
	b (I)I getMaxCost
	h ()Z isTradeable
	i ()Z isDiscoverable
net/minecraft/world/level/ExplosionDamageCalculator net/minecraft/world/level/ExplosionDamageCalculator
	a (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;F)Z shouldBlockExplode
	a (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/material/Fluid;)Ljava/util/Optional; getBlockExplosionResistance
net/minecraft/world/level/LevelHeightAccessor net/minecraft/world/level/LevelHeightAccessor
	ai ()I getMaxBuildHeight
	aj ()I getSectionsCount
	ak ()I getMinSection
	al ()I getMaxSection
	d (I)Z isOutsideBuildHeight
	e (I)I getSectionIndex
	e (II)Lnet/minecraft/world/level/LevelHeightAccessor; create
	f (I)I getSectionIndexFromSectionY
	g (I)I getSectionYFromSectionIndex
	u (Lnet/minecraft/core/BlockPosition;)Z isOutsideBuildHeight
	v_ ()I getMinBuildHeight
	w_ ()I getHeight
net/minecraft/world/level/biome/BiomeSources net/minecraft/world/level/biome/BiomeSources
	a (Lnet/minecraft/core/IRegistry;)Lcom/mojang/serialization/Codec; bootstrap
net/minecraft/world/level/biome/FeatureSorter net/minecraft/world/level/biome/FeatureSorter
	a (Ljava/util/List;Ljava/util/function/Function;Z)Ljava/util/List; buildFeaturesPerStep
net/minecraft/world/level/block/AmethystBlock net/minecraft/world/level/block/AmethystBlock
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/phys/MovingObjectPositionBlock;Lnet/minecraft/world/entity/projectile/IProjectile;)V onProjectileHit
net/minecraft/world/level/block/CaveVinesPlantBlock net/minecraft/world/level/block/CaveVinesPlantBlock
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V performBonemeal
	a (Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/item/ItemStack; getCloneItemStack
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/player/EntityHuman;Lnet/minecraft/world/EnumHand;Lnet/minecraft/world/phys/MovingObjectPositionBlock;)Lnet/minecraft/world/EnumInteractionResult; use
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;)Lnet/minecraft/world/level/block/state/IBlockData; updateHeadAfterConvertedFromBody
	c ()Lnet/minecraft/world/level/block/BlockGrowingTop; getHeadBlock
net/minecraft/world/level/block/CherryLeavesBlock net/minecraft/world/level/block/CherryLeavesBlock
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)V animateTick
net/minecraft/world/level/block/Fallable net/minecraft/world/level/block/Fallable
	a (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; getFallDamageSource
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/item/EntityFallingBlock;)V onBrokenAfterFall
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/entity/item/EntityFallingBlock;)V onLand
	al_ ()Ljava/util/function/Predicate; getHurtsEntitySelector
net/minecraft/world/level/block/InfestedRotatedPillarBlock net/minecraft/world/level/block/InfestedRotatedPillarBlock
	a (Ldbr$a;)V createBlockStateDefinition
	a (Lnet/minecraft/world/item/context/BlockActionContext;)Lnet/minecraft/world/level/block/state/IBlockData; getStateForPlacement
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/block/EnumBlockRotation;)Lnet/minecraft/world/level/block/state/IBlockData; rotate
net/minecraft/world/level/block/LavaCauldronBlock net/minecraft/world/level/block/LavaCauldronBlock
	a (Lnet/minecraft/world/level/block/state/IBlockData;)D getContentHeight
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/entity/Entity;)V entityInside
	c (Lnet/minecraft/world/level/block/state/IBlockData;)Z isFull
net/minecraft/world/level/block/MangroveLeavesBlock net/minecraft/world/level/block/MangroveLeavesBlock
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V performBonemeal
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isBonemealSuccess
net/minecraft/world/level/block/MossBlock net/minecraft/world/level/block/MossBlock
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V performBonemeal
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isBonemealSuccess
net/minecraft/world/level/block/PowderSnowCauldronBlock net/minecraft/world/level/block/PowderSnowCauldronBlock
	d (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/World;Lnet/minecraft/core/BlockPosition;)V handleEntityOnFireInside
net/minecraft/world/level/block/RootedDirtBlock net/minecraft/world/level/block/RootedDirtBlock
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)V performBonemeal
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/world/level/World;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;)Z isBonemealSuccess
net/minecraft/world/level/block/SculkBlock net/minecraft/world/level/block/SculkBlock
	a (Lcvz$a;Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/block/SculkSpreader;Z)I attemptUseCharge
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)Z canPlaceGrowth
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;Z)Lnet/minecraft/world/level/block/state/IBlockData; getRandomGrowthState
	a (Lnet/minecraft/world/level/block/SculkSpreader;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition;I)I getDecayPenalty
	b ()Z canChangeBlockStateOnSpread
net/minecraft/world/level/block/SuspiciousEffectHolder net/minecraft/world/level/block/SuspiciousEffectHolder
	a ()Ljava/util/List; getAllEffectHolders
	a (Lnet/minecraft/world/level/IMaterial;)Lnet/minecraft/world/level/block/SuspiciousEffectHolder; tryGet
	b ()Lnet/minecraft/world/effect/MobEffectList; getSuspiciousEffect
	c ()I getEffectDuration
net/minecraft/world/level/block/TintedGlassBlock net/minecraft/world/level/block/TintedGlassBlock
	c (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)Z propagatesSkylightDown
	g (Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/IBlockAccess;Lnet/minecraft/core/BlockPosition;)I getLightBlock
net/minecraft/world/level/block/entity/LidBlockEntity net/minecraft/world/level/block/entity/LidBlockEntity
	a (F)F getOpenNess
net/minecraft/world/level/block/entity/TickingBlockEntity net/minecraft/world/level/block/entity/TickingBlockEntity
	a ()V tick
	b ()Z isRemoved
	c ()Lnet/minecraft/core/BlockPosition; getPos
	d ()Ljava/lang/String; getType
net/minecraft/world/level/block/grower/AzaleaTreeGrower net/minecraft/world/level/block/grower/AzaleaTreeGrower
	a (Lnet/minecraft/util/RandomSource;Z)Lnet/minecraft/resources/ResourceKey; getConfiguredFeature
net/minecraft/world/level/block/grower/CherryTreeGrower net/minecraft/world/level/block/grower/CherryTreeGrower
	a (Lnet/minecraft/util/RandomSource;Z)Lnet/minecraft/resources/ResourceKey; getConfiguredFeature
net/minecraft/world/level/chunk/BlockColumn net/minecraft/world/level/chunk/BlockColumn
	a (I)Lnet/minecraft/world/level/block/state/IBlockData; getBlock
	a (ILnet/minecraft/world/level/block/state/IBlockData;)V setBlock
net/minecraft/world/level/chunk/ChunkGenerators net/minecraft/world/level/chunk/ChunkGenerators
	a (Lnet/minecraft/core/IRegistry;)Lcom/mojang/serialization/Codec; bootstrap
net/minecraft/world/level/chunk/PalettedContainerRO net/minecraft/world/level/chunk/PalettedContainerRO
	a (III)Ljava/lang/Object; get
	a (Ldef$b;)V count
	a (Ljava/util/function/Consumer;)V getAll
	a (Ljava/util/function/Predicate;)Z maybeHas
	a (Lnet/minecraft/core/Registry;Ldef$d;)Ldeg$a; pack
	b (Lnet/minecraft/network/PacketDataSerializer;)V write
	c ()I getSerializedSize
	e ()Lnet/minecraft/world/level/chunk/DataPaletteBlock; recreate
net/minecraft/world/level/chunk/StructureAccess net/minecraft/world/level/chunk/StructureAccess
	a (Lnet/minecraft/world/level/levelgen/structure/Structure;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; getStartForStructure
	a (Lnet/minecraft/world/level/levelgen/structure/Structure;J)V addReferenceForStructure
	a (Lnet/minecraft/world/level/levelgen/structure/Structure;Lnet/minecraft/world/level/levelgen/structure/StructureStart;)V setStartForStructure
	b (Ljava/util/Map;)V setAllReferences
	b (Lnet/minecraft/world/level/levelgen/structure/Structure;)Lit/unimi/dsi/fastutil/longs/LongSet; getReferencesForStructure
	h ()Ljava/util/Map; getAllReferences
net/minecraft/world/level/chunk/storage/ChunkScanAccess net/minecraft/world/level/chunk/storage/ChunkScanAccess
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/nbt/StreamTagVisitor;)Ljava/util/concurrent/CompletableFuture; scanChunk
net/minecraft/world/level/entity/EntityAccess net/minecraft/world/level/entity/EntityAccess
	a (Lnet/minecraft/world/level/entity/EntityInLevelCallback;)V setLevelCallback
	af ()I getId
	b (Lnet/minecraft/world/entity/Entity$RemovalReason;)V setRemoved
	cD ()Lnet/minecraft/world/phys/AxisAlignedBB; getBoundingBox
	cO ()Ljava/util/stream/Stream; getSelfAndPassengers
	cP ()Ljava/util/stream/Stream; getPassengersAndSelf
	cs ()Ljava/util/UUID; getUUID
	dE ()Z shouldBeSaved
	dF ()Z isAlwaysTicking
	dg ()Lnet/minecraft/core/BlockPosition; blockPosition
net/minecraft/world/level/entity/EntityPersistentStorage net/minecraft/world/level/entity/EntityPersistentStorage
	a (Lnet/minecraft/world/level/ChunkCoordIntPair;)Ljava/util/concurrent/CompletableFuture; loadEntities
	a (Lnet/minecraft/world/level/entity/ChunkEntities;)V storeEntities
	a (Z)V flush
net/minecraft/world/level/entity/EntityTypeTest net/minecraft/world/level/entity/EntityTypeTest
	a ()Ljava/lang/Class; getBaseClass
	a (Ljava/lang/Class;)Lnet/minecraft/world/level/entity/EntityTypeTest; forClass
	a (Ljava/lang/Object;)Ljava/lang/Object; tryCast
net/minecraft/world/level/entity/LevelCallback net/minecraft/world/level/entity/LevelCallback
	a (Ljava/lang/Object;)V onSectionChange
	b (Ljava/lang/Object;)V onTrackingEnd
	c (Ljava/lang/Object;)V onTrackingStart
	d (Ljava/lang/Object;)V onTickingEnd
	e (Ljava/lang/Object;)V onTickingStart
	f (Ljava/lang/Object;)V onDestroyed
	g (Ljava/lang/Object;)V onCreated
net/minecraft/world/level/entity/LevelEntityGetter net/minecraft/world/level/entity/LevelEntityGetter
	a ()Ljava/lang/Iterable; getAll
	a (I)Lnet/minecraft/world/level/entity/EntityAccess; get
	a (Ljava/util/UUID;)Lnet/minecraft/world/level/entity/EntityAccess; get
	a (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/util/AbortableIterationConsumer;)V get
	a (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/world/phys/AxisAlignedBB;Lnet/minecraft/util/AbortableIterationConsumer;)V get
	a (Lnet/minecraft/world/phys/AxisAlignedBB;Ljava/util/function/Consumer;)V get
net/minecraft/world/level/gameevent/GameEventListener net/minecraft/world/level/gameevent/GameEventListener
	a ()Lnet/minecraft/world/level/gameevent/PositionSource; getListenerSource
	a (Lnet/minecraft/server/level/WorldServer;Lnet/minecraft/world/level/gameevent/GameEvent;Ldga$a;Lnet/minecraft/world/phys/Vec3D;)Z handleGameEvent
	b ()I getListenerRadius
	c ()Ldgc$a; getDeliveryMode
net/minecraft/world/level/levelgen/Aquifer net/minecraft/world/level/levelgen/Aquifer
	a ()Z shouldScheduleFluidUpdate
	a (Ldgl$a;)Lnet/minecraft/world/level/levelgen/Aquifer; createDisabled
	a (Ldgs$b;D)Lnet/minecraft/world/level/block/state/IBlockData; computeSubstance
	a (Lnet/minecraft/world/level/levelgen/NoiseChunk;Lnet/minecraft/world/level/ChunkCoordIntPair;Lnet/minecraft/world/level/levelgen/NoiseRouter;Lnet/minecraft/world/level/levelgen/PositionalRandomFactory;IILdgl$a;)Lnet/minecraft/world/level/levelgen/Aquifer; create
net/minecraft/world/level/levelgen/Column net/minecraft/world/level/levelgen/Column
	a ()Lnet/minecraft/world/level/levelgen/Column; line
	a (I)Lnet/minecraft/world/level/levelgen/Column; below
	a (II)Ldgp$b; around
	a (Ljava/util/OptionalInt;)Lnet/minecraft/world/level/levelgen/Column; withFloor
	a (Ljava/util/OptionalInt;Ljava/util/OptionalInt;)Lnet/minecraft/world/level/levelgen/Column; create
	a (Lnet/minecraft/world/level/VirtualLevelReadable;ILjava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;ILnet/minecraft/core/EnumDirection;)Ljava/util/OptionalInt; scanDirection
	a (Lnet/minecraft/world/level/VirtualLevelReadable;Lnet/minecraft/core/BlockPosition;ILjava/util/function/Predicate;Ljava/util/function/Predicate;)Ljava/util/Optional; scan
	b ()Ljava/util/OptionalInt; getCeiling
	b (I)Lnet/minecraft/world/level/levelgen/Column; fromHighest
	b (II)Ldgp$b; inside
	b (Ljava/util/OptionalInt;)Lnet/minecraft/world/level/levelgen/Column; withCeiling
	c ()Ljava/util/OptionalInt; getFloor
	c (I)Lnet/minecraft/world/level/levelgen/Column; above
	d ()Ljava/util/OptionalInt; getHeight
	d (I)Lnet/minecraft/world/level/levelgen/Column; fromLowest
net/minecraft/world/level/levelgen/PositionalRandomFactory net/minecraft/world/level/levelgen/PositionalRandomFactory
	a (III)Lnet/minecraft/util/RandomSource; at
	a (Ljava/lang/String;)Lnet/minecraft/util/RandomSource; fromHashOf
	a (Ljava/lang/StringBuilder;)V parityConfigString
	a (Lnet/minecraft/core/BlockPosition;)Lnet/minecraft/util/RandomSource; at
	a (Lnet/minecraft/resources/MinecraftKey;)Lnet/minecraft/util/RandomSource; fromHashOf
net/minecraft/world/level/levelgen/feature/BlockColumnFeature net/minecraft/world/level/levelgen/feature/BlockColumnFeature
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
	a ([IIIZ)V truncate
net/minecraft/world/level/levelgen/feature/DiskFeature net/minecraft/world/level/levelgen/feature/DiskFeature
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
	a (Lnet/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureCircleConfiguration;Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/util/RandomSource;IILnet/minecraft/core/BlockPosition$MutableBlockPosition;)Z placeColumn
net/minecraft/world/level/levelgen/feature/DripstoneClusterFeature net/minecraft/world/level/levelgen/feature/DripstoneClusterFeature
	a (IIIILnet/minecraft/world/level/levelgen/feature/configurations/DripstoneClusterConfiguration;)D getChanceOfStalagmiteOrStalactite
	a (Lnet/minecraft/util/RandomSource;FFFF)F randomBetweenBiased
	a (Lnet/minecraft/util/RandomSource;IIFILnet/minecraft/world/level/levelgen/feature/configurations/DripstoneClusterConfiguration;)I getDripstoneHeight
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)Z canBeAdjacentToWater
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/core/BlockPosition;ILnet/minecraft/core/EnumDirection;)V replaceBlocksWithDripstoneBlocks
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;IIFDIFLnet/minecraft/world/level/levelgen/feature/configurations/DripstoneClusterConfiguration;)V placeColumn
	a (Lnet/minecraft/world/level/IWorldReader;Lnet/minecraft/core/BlockPosition;)Z isLava
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
	b (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/core/BlockPosition;)Z canPlacePool
net/minecraft/world/level/levelgen/feature/DripstoneUtils net/minecraft/world/level/levelgen/feature/DripstoneUtils
	a (DDDD)D getDripstoneHeight
	a (Lnet/minecraft/core/EnumDirection;IZLjava/util/function/Consumer;)V buildBaseToTipColumn
	a (Lnet/minecraft/core/EnumDirection;Lnet/minecraft/world/level/block/state/properties/DripstoneThickness;)Lnet/minecraft/world/level/block/state/IBlockData; createPointedDripstone
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)Z isEmptyOrWater
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/EnumDirection;IZ)V growPointedDripstone
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/core/BlockPosition;I)Z isCircleMostlyEmbeddedInStone
	a (Lnet/minecraft/world/level/block/state/IBlockData;)Z isDripstoneBaseOrLava
	b (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)Z isEmptyOrWaterOrLava
	b (Lnet/minecraft/world/level/block/state/IBlockData;)Z isDripstoneBase
	c (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)Z placeDripstoneBlockIfPossible
	c (Lnet/minecraft/world/level/block/state/IBlockData;)Z isEmptyOrWater
	d (Lnet/minecraft/world/level/block/state/IBlockData;)Z isNeitherEmptyNorWater
	e (Lnet/minecraft/world/level/block/state/IBlockData;)Z isEmptyOrWaterOrLava
net/minecraft/world/level/levelgen/feature/LargeDripstoneFeature net/minecraft/world/level/levelgen/feature/LargeDripstoneFeature
	a (Lnet/minecraft/core/BlockPosition;ZLnet/minecraft/util/RandomSource;ILnet/minecraft/util/valueproviders/FloatProvider;Lnet/minecraft/util/valueproviders/FloatProvider;)Ldkt$a; makeDripstone
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/core/BlockPosition;Ldgp$b;Ldkt$b;)V placeDebugMarkers
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/MultifaceGrowthFeature net/minecraft/world/level/levelgen/feature/MultifaceGrowthFeature
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/state/IBlockData;Lnet/minecraft/world/level/levelgen/feature/configurations/MultifaceGrowthConfiguration;Lnet/minecraft/util/RandomSource;Ljava/util/List;)Z placeGrowthIfPossible
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
	c (Lnet/minecraft/world/level/block/state/IBlockData;)Z isAirOrWater
net/minecraft/world/level/levelgen/feature/PointedDripstoneFeature net/minecraft/world/level/levelgen/feature/PointedDripstoneFeature
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/util/RandomSource;)Ljava/util/Optional; getTipDirection
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/feature/configurations/PointedDripstoneConfiguration;)V createPatchOfDripstoneBlocks
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/RootSystemFeature net/minecraft/world/level/levelgen/feature/RootSystemFeature
	a (Lnet/minecraft/core/BlockPosition;ILnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/feature/configurations/RootSystemConfiguration;Lnet/minecraft/util/RandomSource;)V placeDirt
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/feature/configurations/RootSystemConfiguration;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;Lnet/minecraft/core/BlockPosition;)Z placeDirtAndTree
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/feature/configurations/RootSystemConfiguration;Lnet/minecraft/core/BlockPosition;)Z spaceForTree
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/feature/configurations/RootSystemConfiguration;Lnet/minecraft/util/RandomSource;IILnet/minecraft/core/BlockPosition$MutableBlockPosition;)V placeRootedDirt
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/feature/configurations/RootSystemConfiguration;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;)V placeRoots
	a (Lnet/minecraft/world/level/block/state/IBlockData;II)Z isAllowedTreeSpace
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/SculkPatchFeature net/minecraft/world/level/levelgen/feature/SculkPatchFeature
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)Z canSpreadFrom
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
net/minecraft/world/level/levelgen/feature/UnderwaterMagmaFeature net/minecraft/world/level/levelgen/feature/UnderwaterMagmaFeature
	a (Lnet/minecraft/world/level/GeneratorAccess;Lnet/minecraft/core/BlockPosition;)Z isWaterOrAir
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/levelgen/feature/configurations/UnderwaterMagmaConfiguration;)Ljava/util/OptionalInt; getFloorY
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
	b (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/core/BlockPosition;)Z isValidPlacement
net/minecraft/world/level/levelgen/feature/VegetationPatchFeature net/minecraft/world/level/levelgen/feature/VegetationPatchFeature
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/feature/configurations/VegetationPatchConfiguration;Ljava/util/function/Predicate;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;I)Z placeGround
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/feature/configurations/VegetationPatchConfiguration;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Ljava/util/function/Predicate;II)Ljava/util/Set; placeGroundPatch
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/feature/configurations/VegetationPatchConfiguration;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Z placeVegetation
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z place
	a (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/feature/configurations/VegetationPatchConfiguration;Lnet/minecraft/util/RandomSource;Ljava/util/Set;II)V distributeVegetation
net/minecraft/world/level/levelgen/feature/WaterloggedVegetationPatchFeature net/minecraft/world/level/levelgen/feature/WaterloggedVegetationPatchFeature
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Ljava/util/Set;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;)Z isExposed
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/core/BlockPosition$MutableBlockPosition;Lnet/minecraft/core/EnumDirection;)Z isExposedDirection
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/feature/configurations/VegetationPatchConfiguration;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;Ljava/util/function/Predicate;II)Ljava/util/Set; placeGroundPatch
	a (Lnet/minecraft/world/level/GeneratorAccessSeed;Lnet/minecraft/world/level/levelgen/feature/configurations/VegetationPatchConfiguration;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Z placeVegetation
net/minecraft/world/level/levelgen/placement/PlacementFilter net/minecraft/world/level/levelgen/placement/PlacementFilter
	a (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Z shouldPlace
	a_ (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Ljava/util/stream/Stream; getPositions
net/minecraft/world/level/levelgen/placement/RepeatingPlacement net/minecraft/world/level/levelgen/placement/RepeatingPlacement
	a (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)I count
	a_ (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPosition;)Ljava/util/stream/Stream; getPositions
net/minecraft/world/level/levelgen/structure/StructurePieceAccessor net/minecraft/world/level/levelgen/structure/StructurePieceAccessor
	a (Lnet/minecraft/world/level/levelgen/structure/StructureBoundingBox;)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; findCollisionPiece
	a (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;)V addPiece
net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces
	a (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPosition;Lnet/minecraft/world/level/block/EnumBlockRotation;Ljava/util/List;Lnet/minecraft/util/RandomSource;)V generateMansion
	a ([Ljava/lang/String;)V main
net/minecraft/world/level/levelgen/synth/NoiseUtils net/minecraft/world/level/levelgen/synth/NoiseUtils
	a (DD)D biasTowardsExtreme
	a (Ljava/lang/StringBuilder;DDD[B)V parityNoiseOctaveConfigString
	a (Ljava/lang/StringBuilder;DDD[I)V parityNoiseOctaveConfigString
net/minecraft/world/level/storage/loot/functions/LootItemFunction net/minecraft/world/level/storage/loot/functions/LootItemFunction
	a ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; getType
	a (Ljava/util/function/BiFunction;Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Ljava/util/function/Consumer; decorate
net/minecraft/world/level/storage/loot/predicates/LootItemCondition net/minecraft/world/level/storage/loot/predicates/LootItemCondition
	a ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; getType
net/minecraft/world/level/storage/loot/providers/nbt/NbtProvider net/minecraft/world/level/storage/loot/providers/nbt/NbtProvider
	a ()Lnet/minecraft/world/level/storage/loot/providers/nbt/LootNbtProviderType; getType
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Lnet/minecraft/nbt/NBTBase; get
	b ()Ljava/util/Set; getReferencedContextParams
net/minecraft/world/level/storage/loot/providers/number/NumberProvider net/minecraft/world/level/storage/loot/providers/number/NumberProvider
	a ()Lnet/minecraft/world/level/storage/loot/providers/number/LootNumberProviderType; getType
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)I getInt
	b (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)F getFloat
net/minecraft/world/level/storage/loot/providers/score/ScoreboardNameProvider net/minecraft/world/level/storage/loot/providers/score/ScoreboardNameProvider
	a ()Lnet/minecraft/world/level/storage/loot/providers/score/LootScoreProviderType; getType
	a (Lnet/minecraft/world/level/storage/loot/LootTableInfo;)Ljava/lang/String; getScoreboardName
	b ()Ljava/util/Set; getReferencedContextParams
net/minecraft/world/ticks/ContainerSingleItem net/minecraft/world/ticks/ContainerSingleItem
	a ()V clearContent
	aa_ ()Z isEmpty
	at_ ()Lnet/minecraft/world/item/ItemStack; getFirstItem
	b ()I getContainerSize
	b (I)Lnet/minecraft/world/item/ItemStack; removeItemNoUpdate
	b (Lnet/minecraft/world/item/ItemStack;)V setFirstItem
	j ()Lnet/minecraft/world/item/ItemStack; removeFirstItem
net/minecraft/world/ticks/LevelTickAccess net/minecraft/world/ticks/LevelTickAccess
	b (Lnet/minecraft/core/BlockPosition;Ljava/lang/Object;)Z willTickThisTick
net/minecraft/world/ticks/SerializableTickContainer net/minecraft/world/ticks/SerializableTickContainer
	b (JLjava/util/function/Function;)Lnet/minecraft/nbt/NBTBase; save

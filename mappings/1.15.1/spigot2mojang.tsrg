a com/mojang/math/Matrix3f
	a m00
	b m01
	c m02
	d m10
	e m11
	f m12
	g m20
	h m21
	i m22
	j G
	k CS
	l SS
	m SQ2
	a ()V transpose
	a (F)V mul
	a (FF)Lcom/mojang/datafixers/util/Pair; qrGivensQuat
	a (FFF)Lcom/mojang/datafixers/util/Pair; approxGivensQuat
	a (La;)V load
	a (Lnet/minecraft/server/Quaternion;)V mul
	b ()Lorg/apache/commons/lang3/tuple/Triple; svdDecompose
	b (FFF)La; createScaleMatrix
	b (La;)V mul
	c ()V setIdentity
	c (La;)Lnet/minecraft/server/Quaternion; stepJacobi
	d ()La; copy
	e ()F adjugateAndDet
	f ()Z invert
aau$a net/minecraft/tags/BlockTags$Wrapper
	a check
	b actual
	a ()Ljava/util/Collection; getValues
	a (Ljava/lang/Object;)Z contains
	a (Lnet/minecraft/server/Block;)Z contains
	b ()Ljava/util/Collection; getSource
aav$a net/minecraft/tags/EntityTypeTags$Wrapper
	a check
	b actual
	a ()Ljava/util/Collection; getValues
	a (Ljava/lang/Object;)Z contains
	a (Lnet/minecraft/server/EntityTypes;)Z contains
	b ()Ljava/util/Collection; getSource
aaw$a net/minecraft/tags/FluidTags$Wrapper
	a check
	b actual
	a ()Ljava/util/Collection; getValues
	a (Ljava/lang/Object;)Z contains
	a (Lnet/minecraft/server/FluidType;)Z contains
	b ()Ljava/util/Collection; getSource
aax$a net/minecraft/tags/ItemTags$Wrapper
	a check
	b actual
	a ()Ljava/util/Collection; getValues
	a (Ljava/lang/Object;)Z contains
	a (Lnet/minecraft/server/Item;)Z contains
	b ()Ljava/util/Collection; getSource
aaz$a net/minecraft/tags/Tag$Builder
	a values
	b ordered
	a ()Laaz$a; tag
	a (Laaz$b;)Laaz$a; add
	a (Ljava/lang/Object;)Laaz$a; add
	a (Ljava/util/Collection;)Laaz$a; add
	a (Ljava/util/function/Function;)Z canBuild
	a (Ljava/util/function/Function;Lcom/google/gson/JsonObject;)Laaz$a; addFromJson
	a (Lnet/minecraft/server/MinecraftKey;)Laaz$a; addTag
	a (Lnet/minecraft/server/Tag;)Laaz$a; addTag
	a (Z)Laaz$a; keepOrder
	a ([Ljava/lang/Object;)Laaz$a; add
	b (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/Tag; build
aaz$b net/minecraft/tags/Tag$Entry
	a (Lcom/google/gson/JsonArray;Ljava/util/function/Function;)V serializeTo
	a (Ljava/util/Collection;)V build
	a (Ljava/util/function/Function;)Z canBuild
aaz$c net/minecraft/tags/Tag$TagEntry
	a id
	b tag
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonArray;Ljava/util/function/Function;)V serializeTo
	a (Ljava/util/Collection;)V build
	a (Ljava/util/function/Function;)Z canBuild
aaz$d net/minecraft/tags/Tag$ValuesEntry
	a values
	a ()Ljava/util/Collection; getValues
	a (Lcom/google/gson/JsonArray;Ljava/util/function/Function;)V serializeTo
	a (Ljava/util/Collection;)V build
ab$a net/minecraft/advancements/CriterionTrigger$Listener
	a trigger
	b advancement
	c criterion
	a ()Lnet/minecraft/server/CriterionInstance; getTriggerInstance
	a (Lnet/minecraft/server/AdvancementDataPlayer;)V run
abb$a net/minecraft/tags/TagManager$Preparations
	a blocks
	b items
	c fluids
	d entityTypes
abh$a net/minecraft/util/CsvOutput$Builder
	a headers
	a (Ljava/io/Writer;)Lnet/minecraft/server/CSVWriter; build
	a (Ljava/lang/String;)Labh$a; addColumn
abo net/minecraft/util/LimitedCapacityList
	a items
	b clazz
	c locks
	d size
	e head
	a ()I getSize
	a (Ljava/lang/Object;)Ljava/lang/Object; add
	b ()I getMaxSize
	c ()[Ljava/lang/Object; getItems
abv net/minecraft/util/SmoothDouble
	a targetValue
	b remainingValue
	c lastAmount
	a ()V reset
	a (DD)D getNewDeltaValue
abw$a net/minecraft/util/SortedArraySet$ArrayIterator
	b index
	c last
acb net/minecraft/util/VisibleForDebug
adc$a net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$DataLayer
	a data
	a (I)Z isFirst
	a (III)I get
	b (I)I getPosition
adc$c net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Section
	a y
	b palette
	c listTag
	d section
	e hasData
	f toFix
	g update
	h seen
	i buffer
	a ()Lcom/mojang/datafixers/Dynamic; write
	a (I)Lcom/mojang/datafixers/Dynamic; getBlock
	a (II)V addFix
	a (ILcom/mojang/datafixers/Dynamic;)V setBlock
	b (I)I upgrade
adc$d net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$UpgradeChunk
	a sides
	b sections
	c level
	d x
	e z
	f blockEntities
	a ()Lcom/mojang/datafixers/Dynamic; write
	a (I)Lcom/mojang/datafixers/Dynamic; getBlock
	a (ILcom/mojang/datafixers/Dynamic;)V setBlock
	a (ILnet/minecraft/server/ChunkConverterPalette$Direction;)I relative
	b (I)Lcom/mojang/datafixers/Dynamic; getBlockEntity
	c (I)Lcom/mojang/datafixers/Dynamic; removeBlockEntity
	d (I)Ladc$c; getSection
afc$a net/minecraft/util/datafix/fixes/LeavesFix$LeavesSection
	e leaveIds
	f logIds
	g stateToIdMap
	a ()Z skippable
	a (I)Z isLog
	a (III)V setDistance
	a (Lcom/mojang/datafixers/Dynamic;Ljava/lang/String;ZI)Lcom/mojang/datafixers/Dynamic; makeLeafTag
	b (I)Z isLeaf
	d (I)I getDistance
afc$b net/minecraft/util/datafix/fixes/LeavesFix$Section
	a paletteFinder
	b palette
	c index
	d storage
	e blockStateType
	a ()Z skippable
	a (Lcom/mojang/datafixers/Dynamic;)V readStorage
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; write
	a (Ljava/lang/String;ZI)I getStateId
	b ()Z isSkippable
	c ()I getIndex
	c (I)I getBlock
age$a net/minecraft/util/datafix/fixes/TrappedChestBlockEntityFix$TrappedChestSection
	e chestIds
	a ()Z skippable
	a (I)Z isTrappedChest
ai$a net/minecraft/advancements/critereon/BeeNestDestroyedTrigger$TriggerInstance
	a block
	b item
	c numBees
	a (Lnet/minecraft/server/Block;Lbj$a;Lnet/minecraft/server/CriterionConditionValue$IntegerRange;)Lai$a; destroyedBeeNest
	a (Lnet/minecraft/server/Block;Lnet/minecraft/server/ItemStack;I)Z matches
	b ()Lcom/google/gson/JsonElement; serializeToJson
aii$a net/minecraft/util/profiling/GameProfiler$Profiler
	a ()Z isEnabled
	b ()Lnet/minecraft/server/MethodProfilerResults; disable
	c ()Lnet/minecraft/server/MethodProfilerResults; getResults
	d ()V enable
aii$b net/minecraft/util/profiling/GameProfiler$ProfilerImpl
	a collector
	a ()Z isEnabled
	b ()Lnet/minecraft/server/MethodProfilerResults; disable
	c ()Lnet/minecraft/server/MethodProfilerResults; getResults
	d ()V enable
aiq net/minecraft/util/thread/NamedThreadFactory
	a LOGGER
	b group
	c threadNumber
	d namePrefix
aiu$a net/minecraft/util/thread/StrictQueue$FixedPriorityQueue
	a queueList
	a ()Ljava/lang/Object; pop
	a (Laiu$b;)Z push
	a (Ljava/lang/Object;)Z push
	b ()Z isEmpty
	c ()Ljava/lang/Runnable; pop
aiu$b net/minecraft/util/thread/StrictQueue$IntRunnable
	a priority
	b task
	a ()I getPriority
aiu$c net/minecraft/util/thread/StrictQueue$QueueStrictQueue
	a queue
	a ()Ljava/lang/Object; pop
	a (Ljava/lang/Object;)Z push
	b ()Z isEmpty
aj$a net/minecraft/advancements/critereon/BlockPredicate$Builder
	a block
	b blocks
	c properties
	d nbt
	a ()Laj$a; block
	a (Lnet/minecraft/server/Block;)Laj$a; of
	a (Lnet/minecraft/server/CriterionTriggerProperties;)Laj$a; setProperties
	a (Lnet/minecraft/server/NBTTagCompound;)Laj$a; hasNbt
	a (Lnet/minecraft/server/Tag;)Laj$a; of
	b ()Lnet/minecraft/server/CriterionConditionBlock; build
ak$a net/minecraft/advancements/critereon/BredAnimalsTrigger$TriggerInstance
	a parent
	b partner
	c child
	a (Lbb$a;)Lak$a; bredAnimals
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/EntityAnimal;Lnet/minecraft/server/EntityAnimal;Lnet/minecraft/server/EntityAgeable;)Z matches
	b ()Lcom/google/gson/JsonElement; serializeToJson
	c ()Lak$a; bredAnimals
akl$a net/minecraft/world/entity/AgableMob$AgableMobGroupData
	a groupSize
	b shouldSpawnBaby
	c babySpawnChance
	a ()I getGroupSize
	a (F)V setBabySpawnChance
	a (Z)V setShouldSpawnBaby
	b ()V increaseGroupSizeByOne
	c ()Z isShouldSpawnBaby
	d ()F getBabySpawnChance
akn$a net/minecraft/world/entity/Entity$MoveCallback
akp net/minecraft/world/entity/EntityEvent
akr$a net/minecraft/world/entity/EntityType$Builder
	a factory
	b category
	c serialize
	d summon
	e fireImmune
	f canSpawnFarFromPlayer
	g dimensions
	a ()Lakr$a; noSummon
	a (FF)Lakr$a; sized
	a (Lakr$b;Lnet/minecraft/server/EnumCreatureType;)Lakr$a; of
	a (Ljava/lang/String;)Lnet/minecraft/server/EntityTypes; build
	a (Lnet/minecraft/server/EnumCreatureType;)Lakr$a; createNothing
	b ()Lakr$a; noSave
	c ()Lakr$a; fireImmune
	d ()Lakr$a; canSpawnFarFromPlayer
akr$b net/minecraft/world/entity/EntityType$EntityFactory
al$a net/minecraft/advancements/critereon/BrewedPotionTrigger$TriggerInstance
	a potion
	a (Lnet/minecraft/server/PotionRegistry;)Z matches
	b ()Lcom/google/gson/JsonElement; serializeToJson
	c ()Lal$a; brewedPotion
alc net/minecraft/world/entity/OwnableEntity
	C_ ()Ljava/util/UUID; getOwnerUUID
	D_ ()Lnet/minecraft/server/Entity; getOwner
ale net/minecraft/world/entity/PlayerRideable
alh net/minecraft/world/entity/PowerableMob
	J_ ()Z isPowered
alk$a net/minecraft/world/entity/SpawnPlacements$Data
	a heightMap
	b placement
	c predicate
alk$b net/minecraft/world/entity/SpawnPlacements$SpawnPredicate
am$a net/minecraft/advancements/critereon/ChangeDimensionTrigger$TriggerInstance
	a from
	b to
	a (Lnet/minecraft/server/DimensionManager;)Lam$a; changedDimensionTo
	a (Lnet/minecraft/server/DimensionManager;Lnet/minecraft/server/DimensionManager;)Lam$a; changedDimension
	b ()Lcom/google/gson/JsonElement; serializeToJson
	b (Lnet/minecraft/server/DimensionManager;)Lam$a; changedDimensionFrom
	b (Lnet/minecraft/server/DimensionManager;Lnet/minecraft/server/DimensionManager;)Z matches
	c ()Lam$a; changedDimension
an$a net/minecraft/advancements/critereon/ChanneledLightningTrigger$TriggerInstance
	a victims
	a (Lnet/minecraft/server/EntityPlayer;Ljava/util/Collection;)Z matches
	a ([Lnet/minecraft/server/CriterionConditionEntity;)Lan$a; channeledLightning
	b ()Lcom/google/gson/JsonElement; serializeToJson
ao$a net/minecraft/advancements/critereon/ConstructBeaconTrigger$TriggerInstance
	a level
	a (Lnet/minecraft/server/CriterionConditionValue$IntegerRange;)Lao$a; constructedBeacon
	a (Lnet/minecraft/server/TileEntityBeacon;)Z matches
	b ()Lcom/google/gson/JsonElement; serializeToJson
	c ()Lao$a; constructedBeacon
aoa$a net/minecraft/world/entity/ai/behavior/WeightedList$WeightedEntry
	b data
	c weight
	d randWeight
	a ()Ljava/lang/Object; getData
	a (F)V setRandom
	b ()I getWeight
	c ()D getRandWeight
aoe net/minecraft/world/entity/ai/control/Control
ap$a net/minecraft/advancements/critereon/ConsumeItemTrigger$TriggerInstance
	a item
	a (Lnet/minecraft/server/CriterionConditionItem;)Lap$a; usedItem
	a (Lnet/minecraft/server/IMaterial;)Lap$a; usedItem
	a (Lnet/minecraft/server/ItemStack;)Z matches
	b ()Lcom/google/gson/JsonElement; serializeToJson
	c ()Lap$a; usedItem
apo net/minecraft/world/entity/ai/goal/MoveIndoorsGoal
	a mob
	b insideX
	c insideZ
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	g ()Z isInside
apy net/minecraft/world/entity/ai/goal/PlayGoal
	a mob
	b followFriend
	c speedModifier
	d playTime
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
aq$a net/minecraft/advancements/critereon/CuredZombieVillagerTrigger$TriggerInstance
	a zombie
	b villager
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/EntityZombie;Lnet/minecraft/server/EntityVillager;)Z matches
	b ()Lcom/google/gson/JsonElement; serializeToJson
	c ()Laq$a; curedZombieVillager
aql net/minecraft/world/entity/ai/goal/TakeFlowerGoal
	a villager
	b golem
	c pickupTick
	d takeFlower
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
ar$a net/minecraft/advancements/critereon/DamagePredicate$Builder
	a dealtDamage
	b takenDamage
	c sourceEntity
	d blocked
	e type
	a ()Lar$a; damageInstance
	a (Las$a;)Lar$a; type
	a (Ljava/lang/Boolean;)Lar$a; blocked
	a (Lnet/minecraft/server/CriterionConditionDamageSource;)Lar$a; type
	a (Lnet/minecraft/server/CriterionConditionEntity;)Lar$a; sourceEntity
	a (Lnet/minecraft/server/CriterionConditionValue$FloatRange;)Lar$a; dealtDamage
	b ()Lnet/minecraft/server/CriterionConditionDamage; build
	b (Lnet/minecraft/server/CriterionConditionValue$FloatRange;)Lar$a; takenDamage
arf$a net/minecraft/world/entity/ai/gossip/GossipContainer$EntityGossips
	a entries
	a ()V decay
	a (Ljava/util/UUID;)Ljava/util/stream/Stream; unpack
	a (Ljava/util/function/Predicate;)I weightedValue
	a (Lnet/minecraft/server/ReputationType;)V makeSureValueIsntTooLowOrTooHigh
	b ()Z isEmpty
	b (Lnet/minecraft/server/ReputationType;)V remove
arf$b net/minecraft/world/entity/ai/gossip/GossipContainer$GossipEntry
	a target
	b type
	c value
	a ()I weightedValue
	a (Lcom/mojang/datafixers/Dynamic;)Ljava/util/Optional; load
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; store
as$a net/minecraft/advancements/critereon/DamageSourcePredicate$Builder
	a isProjectile
	b isExplosion
	c bypassesArmor
	d bypassesInvulnerability
	e bypassesMagic
	f isFire
	g isMagic
	h isLightning
	i directEntity
	j sourceEntity
	a ()Las$a; damageType
	a (Lbb$a;)Las$a; direct
	a (Ljava/lang/Boolean;)Las$a; isProjectile
	a (Lnet/minecraft/server/CriterionConditionEntity;)Las$a; direct
	b ()Lnet/minecraft/server/CriterionConditionDamageSource; build
	b (Lbb$a;)Las$a; source
	b (Ljava/lang/Boolean;)Las$a; isExplosion
	b (Lnet/minecraft/server/CriterionConditionEntity;)Las$a; source
	c (Ljava/lang/Boolean;)Las$a; bypassesArmor
	d (Ljava/lang/Boolean;)Las$a; bypassesInvulnerability
	e (Ljava/lang/Boolean;)Las$a; bypassesMagic
	f (Ljava/lang/Boolean;)Las$a; isFire
	g (Ljava/lang/Boolean;)Las$a; isMagic
	h (Ljava/lang/Boolean;)Las$a; isLightning
aso$a net/minecraft/world/entity/ai/village/poi/PoiManager$DistanceTracker
	b levels
	a ()V runAllUpdates
	a (JI)V setLevel
	b (J)I getLevelFromSource
	c (J)I getLevel
asw$a net/minecraft/world/entity/animal/AbstractFish$FishMoveControl
	i fish
	a ()V tick
asw$b net/minecraft/world/entity/animal/AbstractFish$FishSwimGoal
	h fish
	a ()Z canUse
asy$a net/minecraft/world/entity/animal/AbstractSchoolingFish$SchoolSpawnGroupData
	a leader
ata$a net/minecraft/world/entity/animal/Bee$BaseBeeGoal
	a ()Z canUse
	b ()Z canContinueToUse
	g ()Z canBeeUse
	h ()Z canBeeContinueToUse
ata$b net/minecraft/world/entity/animal/Bee$BeeAttackGoal
	a ()Z canUse
	b ()Z canContinueToUse
ata$c net/minecraft/world/entity/animal/Bee$BeeBecomeAngryTargetGoal
	a ()Z canUse
	b ()Z canContinueToUse
	h ()Z beeCanTarget
ata$d net/minecraft/world/entity/animal/Bee$BeeEnterHiveGoal
	c ()V start
	g ()Z canBeeUse
	h ()Z canBeeContinueToUse
ata$e net/minecraft/world/entity/animal/Bee$BeeGoToHiveGoal
	c travellingTicks
	d blacklistedTargets
	e lastPath
	a ()Z canUse
	a (Lnet/minecraft/server/BlockPosition;)Z pathfindDirectlyTowards
	b ()Z canContinueToUse
	b (Lnet/minecraft/server/BlockPosition;)Z isTargetBlacklisted
	c ()V start
	c (Lnet/minecraft/server/BlockPosition;)V blacklistTarget
	d ()V stop
	d (Lnet/minecraft/server/BlockPosition;)Z hasReachedTarget
	e ()V tick
	g ()Z canBeeUse
	h ()Z canBeeContinueToUse
	j ()V clearBlacklist
	k ()V dropAndBlacklistHive
	l ()V dropHive
ata$f net/minecraft/world/entity/animal/Bee$BeeGoToKnownFlowerGoal
	c travellingTicks
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	g ()Z canBeeUse
	h ()Z canBeeContinueToUse
	j ()Z wantsToGoToKnownFlower
ata$g net/minecraft/world/entity/animal/Bee$BeeGrowCropGoal
	e ()V tick
	g ()Z canBeeUse
	h ()Z canBeeContinueToUse
ata$h net/minecraft/world/entity/animal/Bee$BeeHurtByOtherGoal
	a (Lnet/minecraft/server/EntityInsentient;Lnet/minecraft/server/EntityLiving;)V alertOther
ata$i net/minecraft/world/entity/animal/Bee$BeeLocateHiveGoal
	c ()V start
	g ()Z canBeeUse
	h ()Z canBeeContinueToUse
	j ()Ljava/util/List; findNearbyHivesWithSpace
ata$j net/minecraft/world/entity/animal/Bee$BeeLookControl
	a ()V tick
	b ()Z resetXRotOnTick
ata$k net/minecraft/world/entity/animal/Bee$BeePollinateGoal
	c VALID_POLLINATION_BLOCKS
	d successfulPollinatingTicks
	e lastSoundPlayedTick
	f pollinating
	g hoverPos
	h pollinatingTicks
	a (Ljava/util/function/Predicate;D)Ljava/util/Optional; findNearestBlock
	c ()V start
	d ()V stop
	e ()V tick
	g ()Z canBeeUse
	h ()Z canBeeContinueToUse
	j ()Z hasPollinatedLongEnough
	k ()Z isPollinating
	l ()V stopPollinating
	m ()V setWantedPos
	n ()F getOffset
	o ()Ljava/util/Optional; findNearbyFlower
ata$l net/minecraft/world/entity/animal/Bee$BeeWanderGoal
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	g ()Lnet/minecraft/server/Vec3D; findPos
atb$a net/minecraft/world/entity/animal/Cat$CatAvoidEntityGoal
	i cat
	a ()Z canUse
	b ()Z canContinueToUse
atb$b net/minecraft/world/entity/animal/Cat$CatRelaxOnOwnerGoal
	a cat
	b ownerPlayer
	c goalPos
	d onBedTicks
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	g ()Z spaceIsOccupied
	h ()V giveMorningGift
atf$a net/minecraft/world/entity/animal/Dolphin$DolphinMoveControl
	i dolphin
	a ()V tick
atf$b net/minecraft/world/entity/animal/Dolphin$DolphinSwimToTreasureGoal
	a dolphin
	b stuck
	E_ ()Z isInterruptable
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
atf$c net/minecraft/world/entity/animal/Dolphin$DolphinSwimWithPlayerGoal
	a dolphin
	b speedModifier
	c player
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
atf$d net/minecraft/world/entity/animal/Dolphin$PlayWithItemsGoal
	b cooldown
	a ()Z canUse
	a (Lnet/minecraft/server/ItemStack;)V drop
	c ()V start
	d ()V stop
	e ()V tick
ath$a net/minecraft/world/entity/animal/Fox$DefendTrustedTargetGoal
	j trustedLastHurtBy
	k trustedLastHurt
	l timestamp
	a ()Z canUse
	c ()V start
ath$b net/minecraft/world/entity/animal/Fox$FaceplantGoal
	a countdown
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
ath$c net/minecraft/world/entity/animal/Fox$FoxAlertableEntitiesSelector
	a (Lnet/minecraft/server/EntityLiving;)Z test
ath$d net/minecraft/world/entity/animal/Fox$FoxBehaviorGoal
	b alertableTargeting
	g ()Z hasShelter
	h ()Z alertable
ath$e net/minecraft/world/entity/animal/Fox$FoxBreedGoal
	c ()V start
	g ()V breed
ath$f net/minecraft/world/entity/animal/Fox$FoxEatBerriesGoal
	g ticksWaited
	a ()Z canUse
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z isValidTarget
	c ()V start
	e ()V tick
	h ()D acceptedDistance
	j ()Z shouldRecalculatePath
	m ()V onReachedTarget
ath$g net/minecraft/world/entity/animal/Fox$FoxFloatGoal
	a ()Z canUse
	c ()V start
ath$h net/minecraft/world/entity/animal/Fox$FoxFollowParentGoal
	b fox
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
ath$i net/minecraft/world/entity/animal/Fox$FoxGroupData
	a type
ath$j net/minecraft/world/entity/animal/Fox$FoxLookAtPlayerGoal
	a ()Z canUse
	b ()Z canContinueToUse
ath$k net/minecraft/world/entity/animal/Fox$FoxLookControl
	a ()V tick
	b ()Z resetXRotOnTick
ath$l net/minecraft/world/entity/animal/Fox$FoxMeleeAttackGoal
	a ()Z canUse
	a (Lnet/minecraft/server/EntityLiving;D)V checkAndPerformAttack
	c ()V start
ath$m net/minecraft/world/entity/animal/Fox$FoxMoveControl
	a ()V tick
ath$n net/minecraft/world/entity/animal/Fox$FoxPanicGoal
	a ()Z canUse
ath$o net/minecraft/world/entity/animal/Fox$FoxPounceGoal
	E_ ()Z isInterruptable
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
ath$p net/minecraft/world/entity/animal/Fox$FoxSearchForItemsGoal
	a ()Z canUse
	c ()V start
	e ()V tick
ath$q net/minecraft/world/entity/animal/Fox$FoxStrollThroughVillageGoal
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	g ()Z canFoxMove
ath$r net/minecraft/world/entity/animal/Fox$PerchAndSearchGoal
	c relX
	d relZ
	e lookTime
	f looksRemaining
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	j ()V resetLook
ath$s net/minecraft/world/entity/animal/Fox$SeekShelterGoal
	c interval
	a ()Z canUse
	c ()V start
ath$t net/minecraft/world/entity/animal/Fox$SleepGoal
	c countdown
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	j ()Z canSleep
ath$u net/minecraft/world/entity/animal/Fox$StalkPreyGoal
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
atk$a net/minecraft/world/entity/animal/Ocelot$OcelotAvoidEntityGoal
	i ocelot
	a ()Z canUse
	b ()Z canContinueToUse
atk$b net/minecraft/world/entity/animal/Ocelot$OcelotTemptGoal
	c ocelot
	g ()Z canScare
atl$b net/minecraft/world/entity/animal/Panda$PandaAttackGoal
	d panda
	a ()Z canUse
atl$c net/minecraft/world/entity/animal/Panda$PandaAvoidGoal
	i panda
	a ()Z canUse
atl$d net/minecraft/world/entity/animal/Panda$PandaBreedGoal
	e panda
	f unhappyCooldown
	a ()Z canUse
	h ()Z canFindBamboo
atl$e net/minecraft/world/entity/animal/Panda$PandaHurtByTargetGoal
	a panda
	a (Lnet/minecraft/server/EntityInsentient;Lnet/minecraft/server/EntityLiving;)V alertOther
	b ()Z canContinueToUse
atl$f net/minecraft/world/entity/animal/Panda$PandaLieOnBackGoal
	a panda
	b cooldown
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
atl$g net/minecraft/world/entity/animal/Panda$PandaLookAtPlayerGoal
	g panda
	a ()Z canUse
	a (Lnet/minecraft/server/EntityLiving;)V setTarget
	b ()Z canContinueToUse
	e ()V tick
atl$h net/minecraft/world/entity/animal/Panda$PandaMoveControl
	i panda
	a ()V tick
atl$i net/minecraft/world/entity/animal/Panda$PandaPanicGoal
	f panda
	a ()Z canUse
	b ()Z canContinueToUse
atl$j net/minecraft/world/entity/animal/Panda$PandaRollGoal
	a panda
	E_ ()Z isInterruptable
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
atl$k net/minecraft/world/entity/animal/Panda$PandaSitGoal
	b cooldown
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
atl$l net/minecraft/world/entity/animal/Panda$PandaSneezeGoal
	a panda
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
ato$a net/minecraft/world/entity/animal/PolarBear$PolarBearAttackPlayersGoal
	a ()Z canUse
	k ()D getFollowDistance
ato$b net/minecraft/world/entity/animal/PolarBear$PolarBearHurtByTargetGoal
	a (Lnet/minecraft/server/EntityInsentient;Lnet/minecraft/server/EntityLiving;)V alertOther
	c ()V start
ato$c net/minecraft/world/entity/animal/PolarBear$PolarBearMeleeAttackGoal
	a (Lnet/minecraft/server/EntityLiving;)D getAttackReachSqr
	a (Lnet/minecraft/server/EntityLiving;D)V checkAndPerformAttack
	d ()V stop
ato$d net/minecraft/world/entity/animal/PolarBear$PolarBearPanicGoal
	a ()Z canUse
atp$a net/minecraft/world/entity/animal/Pufferfish$PufferfishPuffGoal
	a fish
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
atv$a net/minecraft/world/entity/animal/Squid$SquidFleeGoal
	b fleeTicks
	a ()Z canUse
	c ()V start
	e ()V tick
atw$b net/minecraft/world/entity/animal/TropicalFish$TropicalFishGroupData
	b base
	c pattern
	d baseColor
	e patternColor
atx$a net/minecraft/world/entity/animal/Turtle$TurtleBreedGoal
	d turtle
	a ()Z canUse
	g ()V breed
atx$b net/minecraft/world/entity/animal/Turtle$TurtleGoHomeGoal
	a turtle
	b speedModifier
	c stuck
	d closeToHomeTryTicks
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
atx$c net/minecraft/world/entity/animal/Turtle$TurtleGoToWaterGoal
	g turtle
	a ()Z canUse
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z isValidTarget
	b ()Z canContinueToUse
	j ()Z shouldRecalculatePath
atx$d net/minecraft/world/entity/animal/Turtle$TurtleLayEggGoal
	g turtle
	a ()Z canUse
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z isValidTarget
	b ()Z canContinueToUse
	e ()V tick
atx$e net/minecraft/world/entity/animal/Turtle$TurtleMoveControl
	i turtle
	a ()V tick
	g ()V updateSpeed
atx$f net/minecraft/world/entity/animal/Turtle$TurtlePanicGoal
	a ()Z canUse
atx$g net/minecraft/world/entity/animal/Turtle$TurtlePathNavigation
	a ()Z canUpdatePath
	a (I)Lnet/minecraft/server/Pathfinder; createPathFinder
	a (Lnet/minecraft/server/BlockPosition;)Z isStableDestination
atx$h net/minecraft/world/entity/animal/Turtle$TurtleRandomStrollGoal
	h turtle
	a ()Z canUse
atx$i net/minecraft/world/entity/animal/Turtle$TurtleTemptGoal
	a TEMPT_TARGETING
	b turtle
	c speedModifier
	d player
	e calmDown
	f items
	a ()Z canUse
	a (Lnet/minecraft/server/ItemStack;)Z shouldFollowItem
	b ()Z canContinueToUse
	d ()V stop
	e ()V tick
atx$j net/minecraft/world/entity/animal/Turtle$TurtleTravelGoal
	a turtle
	b speedModifier
	c stuck
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
atz$a net/minecraft/world/entity/animal/Wolf$WolfAvoidEntityGoal
	j wolf
	a ()Z canUse
	a (Lnet/minecraft/server/EntityLlama;)Z avoidLlama
	c ()V start
	e ()V tick
au$a net/minecraft/advancements/critereon/EffectsChangedTrigger$TriggerInstance
	a effects
	a (Lnet/minecraft/server/CriterionConditionMobEffect;)Lau$a; hasEffects
	a (Lnet/minecraft/server/EntityPlayer;)Z matches
	b ()Lcom/google/gson/JsonElement; serializeToJson
aud$a net/minecraft/world/entity/animal/horse/Horse$HorseGroupData
	a variant
aue$a net/minecraft/world/entity/animal/horse/Llama$LlamaAttackWolfGoal
	k ()D getFollowDistance
aue$b net/minecraft/world/entity/animal/horse/Llama$LlamaGroupData
	a variant
aue$c net/minecraft/world/entity/animal/horse/Llama$LlamaHurtByTargetGoal
	b ()Z canContinueToUse
aui$a net/minecraft/world/entity/animal/horse/TraderLlama$TraderLlamaDefendWanderingTraderGoal
	b llama
	c ownerLastHurtBy
	d timestamp
	a ()Z canUse
	c ()V start
aum net/minecraft/world/entity/boss/BossMob
	cS ()F getHealth
	d ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
	dd ()F getMaxHealth
av$a net/minecraft/advancements/critereon/EnchantedItemTrigger$TriggerInstance
	a item
	b levels
	a (Lnet/minecraft/server/ItemStack;I)Z matches
	b ()Lcom/google/gson/JsonElement; serializeToJson
	c ()Lav$a; enchantedItem
avk$a net/minecraft/world/entity/boss/wither/WitherBoss$WitherDoNothingGoal
	a ()Z canUse
awb$a net/minecraft/world/entity/monster/AbstractIllager$IllagerArmPose
	a CROSSED
	b ATTACKING
	c SPELLCASTING
	d BOW_AND_ARROW
	e CROSSBOW_HOLD
	f CROSSBOW_CHARGE
	g CELEBRATING
	h NEUTRAL
	i $VALUES
awb$b net/minecraft/world/entity/monster/AbstractIllager$RaiderOpenDoorGoal
	a ()Z canUse
awh$a net/minecraft/world/entity/monster/Drowned$DrownedAttackGoal
	d drowned
	a ()Z canUse
	b ()Z canContinueToUse
awh$b net/minecraft/world/entity/monster/Drowned$DrownedGoToBeachGoal
	g drowned
	a ()Z canUse
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z isValidTarget
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
awh$c net/minecraft/world/entity/monster/Drowned$DrownedGoToWaterGoal
	a mob
	b wantedX
	c wantedY
	d wantedZ
	e speedModifier
	f level
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	g ()Lnet/minecraft/server/Vec3D; getWaterPos
awh$d net/minecraft/world/entity/monster/Drowned$DrownedMoveControl
	i drowned
	a ()V tick
awh$e net/minecraft/world/entity/monster/Drowned$DrownedSwimUpGoal
	a drowned
	b speedModifier
	c seaLevel
	d stuck
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
awh$f net/minecraft/world/entity/monster/Drowned$DrownedTridentAttackGoal
	a drowned
	a ()Z canUse
	c ()V start
	d ()V stop
awj$a net/minecraft/world/entity/monster/EnderMan$EndermanFreezeWhenLookedAt
	a enderman
	b target
	a ()Z canUse
	c ()V start
	e ()V tick
awm$a net/minecraft/world/entity/monster/Evoker$EvokerAttackSpellGoal
	a (DDDDFI)V createSpellEntity
	g ()I getCastingTime
	h ()I getCastingInterval
	j ()V performSpellCasting
	k ()Lnet/minecraft/server/SoundEffect; getSpellPrepareSound
	l ()Lnet/minecraft/server/EntityIllagerWizard$Spell; getSpell
awm$b net/minecraft/world/entity/monster/Evoker$EvokerCastingSpellGoal
	e ()V tick
awm$c net/minecraft/world/entity/monster/Evoker$EvokerSummonSpellGoal
	e vexCountTargeting
	a ()Z canUse
	g ()I getCastingTime
	h ()I getCastingInterval
	j ()V performSpellCasting
	k ()Lnet/minecraft/server/SoundEffect; getSpellPrepareSound
	l ()Lnet/minecraft/server/EntityIllagerWizard$Spell; getSpell
awm$d net/minecraft/world/entity/monster/Evoker$EvokerWololoSpellGoal
	e wololoTargeting
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	g ()I getCastingTime
	h ()I getCastingInterval
	j ()V performSpellCasting
	k ()Lnet/minecraft/server/SoundEffect; getSpellPrepareSound
	l ()Lnet/minecraft/server/EntityIllagerWizard$Spell; getSpell
	m ()I getCastWarmupTime
awr$a net/minecraft/world/entity/monster/Illusioner$IllusionerBlindnessSpellGoal
	e lastTargetId
	a ()Z canUse
	c ()V start
	g ()I getCastingTime
	h ()I getCastingInterval
	j ()V performSpellCasting
	k ()Lnet/minecraft/server/SoundEffect; getSpellPrepareSound
	l ()Lnet/minecraft/server/EntityIllagerWizard$Spell; getSpell
awr$b net/minecraft/world/entity/monster/Illusioner$IllusionerMirrorSpellGoal
	a ()Z canUse
	g ()I getCastingTime
	h ()I getCastingInterval
	j ()V performSpellCasting
	k ()Lnet/minecraft/server/SoundEffect; getSpellPrepareSound
	l ()Lnet/minecraft/server/EntityIllagerWizard$Spell; getSpell
awu$a net/minecraft/world/entity/monster/PatrollingMonster$LongDistancePatrolGoal
	a mob
	b speedModifier
	c leaderSpeedModifier
	d cooldownUntil
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
	g ()Ljava/util/List; findPatrolCompanions
	h ()Z moveRandomly
awv$b net/minecraft/world/entity/monster/Phantom$PhantomAttackPlayerTargetGoal
	b attackTargeting
	c nextScanTick
	a ()Z canUse
	b ()Z canContinueToUse
awv$c net/minecraft/world/entity/monster/Phantom$PhantomAttackStrategyGoal
	b nextSweepTick
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
	g ()V setAnchorAboveTarget
awv$d net/minecraft/world/entity/monster/Phantom$PhantomBodyRotationControl
	a ()V clientTick
awv$e net/minecraft/world/entity/monster/Phantom$PhantomCircleAroundAnchorGoal
	c angle
	d distance
	e height
	f clockwise
	a ()Z canUse
	c ()V start
	e ()V tick
	h ()V selectNext
awv$f net/minecraft/world/entity/monster/Phantom$PhantomLookControl
	a ()V tick
awv$g net/minecraft/world/entity/monster/Phantom$PhantomMoveControl
	j speed
	a ()V tick
awv$h net/minecraft/world/entity/monster/Phantom$PhantomMoveTargetGoal
	g ()Z touchingTarget
awv$i net/minecraft/world/entity/monster/Phantom$PhantomSweepAttackGoal
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
awz$a net/minecraft/world/entity/monster/Ravager$RavagerMeleeAttackGoal
	a (Lnet/minecraft/server/EntityLiving;)D getAttackReachSqr
awz$b net/minecraft/world/entity/monster/Ravager$RavagerNavigation
	a (I)Lnet/minecraft/server/Pathfinder; createPathFinder
awz$c net/minecraft/world/entity/monster/Ravager$RavagerNodeEvaluator
	a (Lnet/minecraft/server/IBlockAccess;ZZLnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathType;)Lnet/minecraft/server/PathType; evaluateBlockPathType
ax$a net/minecraft/advancements/critereon/EnterBlockTrigger$TriggerInstance
	a block
	b state
	a (Lnet/minecraft/server/Block;)Lax$a; entersBlock
	a (Lnet/minecraft/server/IBlockData;)Z matches
	b ()Lcom/google/gson/JsonElement; serializeToJson
axb$a net/minecraft/world/entity/monster/Shulker$ShulkerAttackGoal
	b attackTime
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
axb$b net/minecraft/world/entity/monster/Shulker$ShulkerBodyRotationControl
	a ()V clientTick
axb$c net/minecraft/world/entity/monster/Shulker$ShulkerDefenseAttackGoal
	a ()Z canUse
	a (D)Lnet/minecraft/server/AxisAlignedBB; getTargetSearchArea
axb$d net/minecraft/world/entity/monster/Shulker$ShulkerNearestAttackGoal
	a ()Z canUse
	a (D)Lnet/minecraft/server/AxisAlignedBB; getTargetSearchArea
axb$e net/minecraft/world/entity/monster/Shulker$ShulkerPeekGoal
	b peekTime
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
axf$b net/minecraft/world/entity/monster/SpellcasterIllager$SpellcasterCastingSpellGoal
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
axf$c net/minecraft/world/entity/monster/SpellcasterIllager$SpellcasterUseSpellGoal
	b attackWarmupDelay
	c nextAttackTickCount
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	e ()V tick
	g ()I getCastingTime
	h ()I getCastingInterval
	j ()V performSpellCasting
	k ()Lnet/minecraft/server/SoundEffect; getSpellPrepareSound
	l ()Lnet/minecraft/server/EntityIllagerWizard$Spell; getSpell
	m ()I getCastWarmupTime
axi$a net/minecraft/world/entity/monster/Vex$VexChargeAttackGoal
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
axi$b net/minecraft/world/entity/monster/Vex$VexCopyOwnerTargetGoal
	b copyOwnerTargeting
	a ()Z canUse
	c ()V start
axi$c net/minecraft/world/entity/monster/Vex$VexMoveControl
	a ()V tick
axi$d net/minecraft/world/entity/monster/Vex$VexRandomMoveGoal
	a ()Z canUse
	b ()Z canContinueToUse
	e ()V tick
axj$a net/minecraft/world/entity/monster/Vindicator$VindicatorBreakDoorGoal
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
axj$b net/minecraft/world/entity/monster/Vindicator$VindicatorJohnnyAttackGoal
	a ()Z canUse
	c ()V start
axj$c net/minecraft/world/entity/monster/Vindicator$VindicatorMeleeAttackGoal
	a (Lnet/minecraft/server/EntityLiving;)D getAttackReachSqr
axm$a net/minecraft/world/entity/monster/Zombie$ZombieAttackTurtleEggGoal
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)V playDestroyProgressSound
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V playBreakSound
	h ()D acceptedDistance
axx$a net/minecraft/world/entity/npc/VillagerTrades$DyedArmorForEmeralds
	a item
	b value
	c maxUses
	d villagerXp
	a (Ljava/util/Random;)Lnet/minecraft/server/ItemDye; getRandomDye
	a (Lnet/minecraft/server/Entity;Ljava/util/Random;)Lnet/minecraft/server/MerchantRecipe; getOffer
axx$b net/minecraft/world/entity/npc/VillagerTrades$EmeraldForItems
	a item
	b cost
	c maxUses
	d villagerXp
	e priceMultiplier
	a (Lnet/minecraft/server/Entity;Ljava/util/Random;)Lnet/minecraft/server/MerchantRecipe; getOffer
axx$c net/minecraft/world/entity/npc/VillagerTrades$EmeraldsForVillagerTypeItem
	a trades
	b cost
	c maxUses
	d villagerXp
	a (Lnet/minecraft/server/Entity;Ljava/util/Random;)Lnet/minecraft/server/MerchantRecipe; getOffer
axx$d net/minecraft/world/entity/npc/VillagerTrades$EnchantBookForEmeralds
	a villagerXp
	a (Lnet/minecraft/server/Entity;Ljava/util/Random;)Lnet/minecraft/server/MerchantRecipe; getOffer
axx$e net/minecraft/world/entity/npc/VillagerTrades$EnchantedItemForEmeralds
	a itemStack
	b baseEmeraldCost
	c maxUses
	d villagerXp
	e priceMultiplier
	a (Lnet/minecraft/server/Entity;Ljava/util/Random;)Lnet/minecraft/server/MerchantRecipe; getOffer
axx$g net/minecraft/world/entity/npc/VillagerTrades$ItemsAndEmeraldsToItems
	a fromItem
	b fromCount
	c emeraldCost
	d toItem
	e toCount
	f maxUses
	g villagerXp
	h priceMultiplier
	a (Lnet/minecraft/server/Entity;Ljava/util/Random;)Lnet/minecraft/server/MerchantRecipe; getOffer
axx$h net/minecraft/world/entity/npc/VillagerTrades$ItemsForEmeralds
	a itemStack
	b emeraldCost
	c numberOfItems
	d maxUses
	e villagerXp
	f priceMultiplier
	a (Lnet/minecraft/server/Entity;Ljava/util/Random;)Lnet/minecraft/server/MerchantRecipe; getOffer
axx$i net/minecraft/world/entity/npc/VillagerTrades$SuspisciousStewForEmerald
	a effect
	b duration
	c xp
	d priceMultiplier
	a (Lnet/minecraft/server/Entity;Ljava/util/Random;)Lnet/minecraft/server/MerchantRecipe; getOffer
axx$j net/minecraft/world/entity/npc/VillagerTrades$TippedArrowForItemsAndEmeralds
	a toItem
	b toCount
	c emeraldCost
	d maxUses
	e villagerXp
	f fromItem
	g fromCount
	h priceMultiplier
	a (Lnet/minecraft/server/Entity;Ljava/util/Random;)Lnet/minecraft/server/MerchantRecipe; getOffer
axx$k net/minecraft/world/entity/npc/VillagerTrades$TreasureMapForEmeralds
	a emeraldCost
	b destination
	c destinationType
	d maxUses
	e villagerXp
	a (Lnet/minecraft/server/Entity;Ljava/util/Random;)Lnet/minecraft/server/MerchantRecipe; getOffer
axz$a net/minecraft/world/entity/npc/WanderingTrader$WanderToPositionGoal
	a trader
	b stopDistance
	c speedModifier
	a ()Z canUse
	a (Lnet/minecraft/server/BlockPosition;D)Z isTooFarAway
	d ()V stop
	e ()V tick
ay$a net/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder
	a head
	b chest
	c legs
	d feet
	e mainhand
	f offhand
	a ()Lay$a; equipment
	a (Lnet/minecraft/server/CriterionConditionItem;)Lay$a; head
	b ()Lnet/minecraft/server/CriterionConditionEntityEquipment; build
	b (Lnet/minecraft/server/CriterionConditionItem;)Lay$a; chest
	c (Lnet/minecraft/server/CriterionConditionItem;)Lay$a; legs
	d (Lnet/minecraft/server/CriterionConditionItem;)Lay$a; feet
	e (Lnet/minecraft/server/CriterionConditionItem;)Lay$a; mainhand
	f (Lnet/minecraft/server/CriterionConditionItem;)Lay$a; offhand
ayh net/minecraft/world/entity/player/PlayerModelPart
	a CAPE
	b JACKET
	c LEFT_SLEEVE
	d RIGHT_SLEEVE
	e LEFT_PANTS_LEG
	f RIGHT_PANTS_LEG
	g HAT
	h bit
	i mask
	j id
	k name
	l $VALUES
	a ()I getMask
	b ()I getBit
	c ()Ljava/lang/String; getId
	d ()Lnet/minecraft/server/IChatBaseComponent; getName
ayi$a net/minecraft/world/entity/player/StackedContents$RecipePicker
	b recipe
	c ingredients
	d ingredientCount
	e items
	f itemCount
	g data
	h path
	a ()[I getUniqueAvailableIngredientItems
	a (I)Z dfs
	a (ILit/unimi/dsi/fastutil/ints/IntList;)Z tryPick
	a (ZI)V visit
	a (ZII)Z hasConnection
	b ()I getMinIngredientCount
	b (I)Z isSatisfied
	b (ILit/unimi/dsi/fastutil/ints/IntList;)I tryPickAll
	b (ZI)Z hasVisited
	b (ZII)Z hasResidual
	c (I)V setSatisfied
	c (ZI)I getVisitedIndex
	c (ZII)V toggleResidual
	d (I)I getSatisfiedIndex
	d (ZII)I getIndex
ays net/minecraft/world/entity/projectile/ItemSupplier
	f ()Lnet/minecraft/server/ItemStack; getItem
az$a net/minecraft/advancements/critereon/EntityFlagsPredicate$Builder
	a isOnFire
	b isCrouching
	c isSprinting
	d isSwimming
	e isBaby
	a ()Laz$a; flags
	a (Ljava/lang/Boolean;)Laz$a; setOnFire
	b ()Lnet/minecraft/server/CriterionConditionEntityFlags; build
	b (Ljava/lang/Boolean;)Laz$a; setCrouching
	c (Ljava/lang/Boolean;)Laz$a; setSprinting
	d (Ljava/lang/Boolean;)Laz$a; setSwimming
	e (Ljava/lang/Boolean;)Laz$a; setIsBaby
azl$a net/minecraft/world/entity/raid/Raider$HoldGroundAttackGoal
	a shoutTargeting
	c mob
	d hostileRadiusSqr
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
azl$b net/minecraft/world/entity/raid/Raider$ObtainRaidLeaderBannerGoal
	b mob
	a ()Z canUse
	e ()V tick
azl$c net/minecraft/world/entity/raid/Raider$RaiderCelebration
	b mob
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
azl$d net/minecraft/world/entity/raid/Raider$RaiderMoveThroughVillageGoal
	a raider
	b speedModifier
	c poiPos
	d visited
	e distanceToPoi
	f stuck
	a ()Z canUse
	a (Lnet/minecraft/server/BlockPosition;)Z hasNotVisited
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	g ()Z isValidRaid
	h ()Z hasSuitablePoi
	j ()V updateVisited
azr$a net/minecraft/world/entity/schedule/ScheduleBuilder$ActivityTransition
	a time
	b activity
	a ()I getTime
	b ()Lnet/minecraft/server/Activity; getActivity
azz$a net/minecraft/world/entity/vehicle/MinecartCommandBlock$MinecartCommandBase
	a (Lio/netty/buffer/ByteBuf;)V writeCoordinates
	d ()Lnet/minecraft/server/WorldServer; getLevel
	e ()V onUpdated
	f ()Lnet/minecraft/server/Vec3D; getPosition
	g ()Lnet/minecraft/server/EntityMinecartCommandBlock; getMinecart
	h ()Lnet/minecraft/server/CommandListenerWrapper; createCommandSourceStack
b com/mojang/math/Matrix4f
	a m00
	b m01
	c m02
	d m03
	e m10
	f m11
	g m12
	h m13
	i m20
	j m21
	k m22
	l m23
	m m30
	n m31
	o m32
	p m33
	a ()V setIdentity
	a (DFFF)Lb; perspective
	a (F)V multiply
	a (FFF)Lb; createScaleMatrix
	a (FFFF)Lb; orthographic
	a (II)I bufferIndex
	a (Lb;)V multiply
	a (Ljava/nio/FloatBuffer;)V store
	a (Lnet/minecraft/server/Quaternion;)V multiply
	a (Lnet/minecraft/server/Vector3fa;)V translate
	b ()F adjugateAndDet
	b (FFF)Lb; createTranslateMatrix
	c ()Z invert
	d ()Lb; copy
	e ()V transpose
ba$a net/minecraft/advancements/critereon/EntityHurtPlayerTrigger$TriggerInstance
	a damage
	a (Lar$a;)Lba$a; entityHurtPlayer
	a (Lnet/minecraft/server/CriterionConditionDamage;)Lba$a; entityHurtPlayer
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/DamageSource;FFZ)Z matches
	b ()Lcom/google/gson/JsonElement; serializeToJson
	c ()Lba$a; entityHurtPlayer
baf net/minecraft/world/food/FoodConstants
bah$a net/minecraft/world/food/FoodProperties$Builder
	a nutrition
	b saturationModifier
	c isMeat
	d canAlwaysEat
	e fastFood
	f effects
	a ()Lbah$a; meat
	a (F)Lbah$a; saturationMod
	a (I)Lbah$a; nutrition
	a (Lnet/minecraft/server/MobEffect;F)Lbah$a; effect
	b ()Lbah$a; alwaysEat
	c ()Lbah$a; fast
	d ()Lnet/minecraft/server/FoodInfo; build
bap$a net/minecraft/world/inventory/BrewingStandMenu$FuelSlot
	a ()I getMaxStackSize
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
	a_ (Lnet/minecraft/server/ItemStack;)Z mayPlaceItem
bb$a net/minecraft/advancements/critereon/EntityPredicate$Builder
	a entityType
	b distanceToPlayer
	c location
	d effects
	e nbt
	f flags
	g equipment
	h player
	i team
	j catType
	a ()Lbb$a; entity
	a (Ljava/lang/String;)Lbb$a; team
	a (Lnet/minecraft/server/CriterionConditionDistance;)Lbb$a; distance
	a (Lnet/minecraft/server/CriterionConditionEntityEquipment;)Lbb$a; equipment
	a (Lnet/minecraft/server/CriterionConditionEntityFlags;)Lbb$a; flags
	a (Lnet/minecraft/server/CriterionConditionEntityType;)Lbb$a; entityType
	a (Lnet/minecraft/server/CriterionConditionLocation;)Lbb$a; located
	a (Lnet/minecraft/server/CriterionConditionMobEffect;)Lbb$a; effects
	a (Lnet/minecraft/server/CriterionConditionNBT;)Lbb$a; nbt
	a (Lnet/minecraft/server/CriterionConditionPlayer;)Lbb$a; player
	a (Lnet/minecraft/server/EntityTypes;)Lbb$a; of
	a (Lnet/minecraft/server/MinecraftKey;)Lbb$a; of
	a (Lnet/minecraft/server/Tag;)Lbb$a; of
	b ()Lnet/minecraft/server/CriterionConditionEntity; build
	b (Lnet/minecraft/server/MinecraftKey;)Lbb$a; catType
bc$a net/minecraft/advancements/critereon/EntityTypePredicate$TagPredicate
	b tag
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lnet/minecraft/server/EntityTypes;)Z matches
bc$b net/minecraft/advancements/critereon/EntityTypePredicate$TypePredicate
	b type
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lnet/minecraft/server/EntityTypes;)Z matches
bd$a net/minecraft/advancements/critereon/FilledBucketTrigger$TriggerInstance
	a item
	a (Lnet/minecraft/server/CriterionConditionItem;)Lbd$a; filledBucket
	a (Lnet/minecraft/server/ItemStack;)Z matches
	b ()Lcom/google/gson/JsonElement; serializeToJson
be$a net/minecraft/advancements/critereon/FishingRodHookedTrigger$TriggerInstance
	a rod
	b entity
	c item
	a (Lnet/minecraft/server/CriterionConditionItem;Lnet/minecraft/server/CriterionConditionEntity;Lnet/minecraft/server/CriterionConditionItem;)Lbe$a; fishedItem
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityFishingHook;Ljava/util/Collection;)Z matches
	b ()Lcom/google/gson/JsonElement; serializeToJson
bew$a net/minecraft/world/item/ProjectileWeaponItem$Type
	a BOW
	b CROSSBOW
	c $VALUES
bf$a net/minecraft/advancements/critereon/FluidPredicate$Builder
	a fluid
	b fluids
	c properties
	a ()Lbf$a; fluid
	a (Lnet/minecraft/server/CriterionTriggerProperties;)Lbf$a; setProperties
	a (Lnet/minecraft/server/FluidType;)Lbf$a; of
	a (Lnet/minecraft/server/Tag;)Lbf$a; of
	b ()Lnet/minecraft/server/CriterionConditionFluid; build
bft net/minecraft/world/item/TooltipFlag
	a ()Z isAdvanced
bft$a net/minecraft/world/item/TooltipFlag$Default
	a NORMAL
	b ADVANCED
	c advanced
	d $VALUES
	a ()Z isAdvanced
bg$a net/minecraft/advancements/critereon/ImpossibleTrigger$TriggerInstance
bgq$b net/minecraft/world/item/crafting/Ingredient$TagValue
	a tag
	a ()Ljava/util/Collection; getItems
	b ()Lcom/google/gson/JsonObject; serialize
bgy$a net/minecraft/world/item/crafting/ShapedRecipe$Serializer
	a (Lnet/minecraft/server/MinecraftKey;Lcom/google/gson/JsonObject;)Lnet/minecraft/server/IRecipe; fromJson
	a (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/IRecipe; fromNetwork
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/IRecipe;)V toNetwork
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/ShapedRecipes;)V toNetwork
	b (Lnet/minecraft/server/MinecraftKey;Lcom/google/gson/JsonObject;)Lnet/minecraft/server/ShapedRecipes; fromJson
	b (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/ShapedRecipes; fromNetwork
bgz$a net/minecraft/world/item/crafting/ShapelessRecipe$Serializer
	a (Lcom/google/gson/JsonArray;)Lnet/minecraft/server/NonNullList; itemsFromJson
	a (Lnet/minecraft/server/MinecraftKey;Lcom/google/gson/JsonObject;)Lnet/minecraft/server/IRecipe; fromJson
	a (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/IRecipe; fromNetwork
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/IRecipe;)V toNetwork
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/ShapelessRecipes;)V toNetwork
	b (Lnet/minecraft/server/MinecraftKey;Lcom/google/gson/JsonObject;)Lnet/minecraft/server/ShapelessRecipes; fromJson
	b (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/ShapelessRecipes; fromNetwork
bh$a net/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance
	a slotsOccupied
	b slotsFull
	c slotsEmpty
	d predicates
	a (Lnet/minecraft/server/PlayerInventory;)Z matches
	a ([Lnet/minecraft/server/CriterionConditionItem;)Lbh$a; hasItem
	a ([Lnet/minecraft/server/IMaterial;)Lbh$a; hasItem
	b ()Lcom/google/gson/JsonElement; serializeToJson
bhc$a net/minecraft/world/item/crafting/SimpleCookingSerializer$CookieBaker
bhe$a net/minecraft/world/item/crafting/SingleItemRecipe$Serializer
	u factory
	a (Lnet/minecraft/server/MinecraftKey;Lcom/google/gson/JsonObject;)Lnet/minecraft/server/IRecipe; fromJson
	a (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/IRecipe; fromNetwork
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/IRecipe;)V toNetwork
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/RecipeSingleItem;)V toNetwork
	b (Lnet/minecraft/server/MinecraftKey;Lcom/google/gson/JsonObject;)Lnet/minecraft/server/RecipeSingleItem; fromJson
	b (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/RecipeSingleItem; fromNetwork
bhe$a$a net/minecraft/world/item/crafting/SingleItemRecipe$Serializer$SingleItemMaker
bhw$a net/minecraft/world/item/enchantment/EnchantmentHelper$EnchantmentVisitor
bi$a net/minecraft/advancements/critereon/ItemDurabilityTrigger$TriggerInstance
	a item
	b durability
	c delta
	a (Lnet/minecraft/server/CriterionConditionItem;Lnet/minecraft/server/CriterionConditionValue$IntegerRange;)Lbi$a; changedDurability
	a (Lnet/minecraft/server/ItemStack;I)Z matches
	b ()Lcom/google/gson/JsonElement; serializeToJson
bj$a net/minecraft/advancements/critereon/ItemPredicate$Builder
	a enchantments
	b storedEnchantments
	c item
	d tag
	e count
	f durability
	g potion
	h nbt
	a ()Lbj$a; item
	a (Lnet/minecraft/server/CriterionConditionEnchantments;)Lbj$a; hasEnchantment
	a (Lnet/minecraft/server/CriterionConditionValue$IntegerRange;)Lbj$a; withCount
	a (Lnet/minecraft/server/IMaterial;)Lbj$a; of
	a (Lnet/minecraft/server/NBTTagCompound;)Lbj$a; hasNbt
	a (Lnet/minecraft/server/PotionRegistry;)Lbj$a; isPotion
	a (Lnet/minecraft/server/Tag;)Lbj$a; of
	b ()Lnet/minecraft/server/CriterionConditionItem; build
	b (Lnet/minecraft/server/CriterionConditionEnchantments;)Lbj$a; hasStoredEnchantment
	b (Lnet/minecraft/server/CriterionConditionValue$IntegerRange;)Lbj$a; hasDurability
bjg$c net/minecraft/world/level/ClipContext$ShapeGetter
bji net/minecraft/world/level/CustomSpawner
	a (Lnet/minecraft/server/WorldServer;ZZ)I tick
bjn net/minecraft/world/level/FoliageColor
	a pixels
	a ()I getEvergreenColor
	a (DD)I get
	a ([I)V init
	b ()I getBirchColor
	c ()I getDefaultColor
bjr net/minecraft/world/level/GrassColor
	a pixels
	a (DD)I get
	a ([I)V init
bk$a net/minecraft/advancements/critereon/ItemUsedOnBlockTrigger$TriggerInstance
	a block
	b state
	c item
	a (Laj$a;Lbj$a;)Lbk$a; safelyHarvestedHoney
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ItemStack;)Z matches
	b ()Lcom/google/gson/JsonElement; serializeToJson
bkq$a net/minecraft/world/level/biome/Biome$BiomeBuilder
	a surfaceBuilder
	b precipitation
	c biomeCategory
	d depth
	e scale
	f temperature
	g downfall
	h waterColor
	i waterFogColor
	j parent
	a (F)Lbkq$a; depth
	a (I)Lbkq$a; waterColor
	a (Ljava/lang/String;)Lbkq$a; parent
	a (Lnet/minecraft/server/BiomeBase$Geography;)Lbkq$a; biomeCategory
	a (Lnet/minecraft/server/BiomeBase$Precipitation;)Lbkq$a; precipitation
	a (Lnet/minecraft/server/WorldGenSurface;Lnet/minecraft/server/WorldGenSurfaceConfiguration;)Lbkq$a; surfaceBuilder
	a (Lnet/minecraft/server/WorldGenSurfaceComposite;)Lbkq$a; surfaceBuilder
	b (F)Lbkq$a; scale
	b (I)Lbkq$a; waterFogColor
	c (F)Lbkq$a; temperature
	d (F)Lbkq$a; downfall
bl$a net/minecraft/advancements/critereon/KilledByCrossbowTrigger$TriggerInstance
	a victims
	b uniqueEntityTypes
	a (Lnet/minecraft/server/CriterionConditionValue$IntegerRange;)Lbl$a; crossbowKilled
	a (Lnet/minecraft/server/EntityPlayer;Ljava/util/Collection;I)Z matches
	a ([Lbb$a;)Lbl$a; crossbowKilled
	b ()Lcom/google/gson/JsonElement; serializeToJson
bm$a net/minecraft/advancements/critereon/KilledTrigger$TriggerInstance
	a entityPredicate
	b killingBlow
	a (Lbb$a;)Lbm$a; playerKilledEntity
	a (Lbb$a;Las$a;)Lbm$a; playerKilledEntity
	a (Lbb$a;Lnet/minecraft/server/CriterionConditionDamageSource;)Lbm$a; playerKilledEntity
	a (Lnet/minecraft/server/CriterionConditionEntity;)Lbm$a; playerKilledEntity
	a (Lnet/minecraft/server/CriterionConditionEntity;Las$a;)Lbm$a; playerKilledEntity
	a (Lnet/minecraft/server/CriterionConditionEntity;Lnet/minecraft/server/CriterionConditionDamageSource;)Lbm$a; playerKilledEntity
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/Entity;Lnet/minecraft/server/DamageSource;)Z matches
	b ()Lcom/google/gson/JsonElement; serializeToJson
	b (Lbb$a;)Lbm$a; entityKilledPlayer
	b (Lbb$a;Las$a;)Lbm$a; entityKilledPlayer
	b (Lbb$a;Lnet/minecraft/server/CriterionConditionDamageSource;)Lbm$a; entityKilledPlayer
	b (Lnet/minecraft/server/CriterionConditionEntity;)Lbm$a; entityKilledPlayer
	b (Lnet/minecraft/server/CriterionConditionEntity;Las$a;)Lbm$a; entityKilledPlayer
	b (Lnet/minecraft/server/CriterionConditionEntity;Lnet/minecraft/server/CriterionConditionDamageSource;)Lbm$a; entityKilledPlayer
	c ()Lbm$a; playerKilledEntity
	d ()Lbm$a; entityKilledPlayer
bms net/minecraft/world/level/biome/NearestNeighborBiomeZoomer
	a INSTANCE
	b $VALUES
	a (JIIILnet/minecraft/server/BiomeManager$Provider;)Lnet/minecraft/server/BiomeBase; getBiome
bn$a net/minecraft/advancements/critereon/LevitationTrigger$TriggerInstance
	a distance
	b duration
	a (Lnet/minecraft/server/CriterionConditionDistance;)Lbn$a; levitated
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/Vec3D;I)Z matches
	b ()Lcom/google/gson/JsonElement; serializeToJson
bo$a net/minecraft/advancements/critereon/LightPredicate$Builder
	a composite
	a ()Lbo$a; light
	a (Lnet/minecraft/server/CriterionConditionValue$IntegerRange;)Lbo$a; setComposite
	b ()Lnet/minecraft/server/CriterionConditionLight; build
bp$a net/minecraft/advancements/critereon/LocationPredicate$Builder
	a x
	b y
	c z
	d biome
	e feature
	f dimension
	g light
	h block
	i fluid
	a ()Lbp$a; location
	a (Lnet/minecraft/server/BiomeBase;)Lbp$a; setBiome
	a (Lnet/minecraft/server/CriterionConditionBlock;)Lbp$a; setBlock
	a (Lnet/minecraft/server/CriterionConditionFluid;)Lbp$a; setFluid
	a (Lnet/minecraft/server/CriterionConditionLight;)Lbp$a; setLight
	a (Lnet/minecraft/server/CriterionConditionValue$FloatRange;)Lbp$a; setX
	a (Lnet/minecraft/server/DimensionManager;)Lbp$a; setDimension
	a (Lnet/minecraft/server/StructureGenerator;)Lbp$a; setFeature
	b ()Lnet/minecraft/server/CriterionConditionLocation; build
	b (Lnet/minecraft/server/CriterionConditionValue$FloatRange;)Lbp$a; setY
	c (Lnet/minecraft/server/CriterionConditionValue$FloatRange;)Lbp$a; setZ
bpe$a net/minecraft/world/level/block/Block$BlockStatePairKey
	a first
	b second
	c direction
bq$a net/minecraft/advancements/critereon/LocationTrigger$TriggerInstance
	a location
	a (Lnet/minecraft/server/CriterionConditionLocation;)Lbq$a; located
	a (Lnet/minecraft/server/WorldServer;DDD)Z matches
	b ()Lcom/google/gson/JsonElement; serializeToJson
	c ()Lbq$a; sleptInBed
	d ()Lbq$a; raidWon
br$a net/minecraft/advancements/critereon/MinMaxBounds$BoundsFactory
br$b net/minecraft/advancements/critereon/MinMaxBounds$BoundsFromReaderFactory
bs$a net/minecraft/advancements/critereon/MobEffectsPredicate$MobEffectInstancePredicate
	a amplifier
	b duration
	c ambient
	d visible
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonObject;)Lbs$a; fromJson
	a (Lnet/minecraft/server/MobEffect;)Z matches
bsj net/minecraft/world/level/block/LevelEvent
bu$a net/minecraft/advancements/critereon/NetherTravelTrigger$TriggerInstance
	a entered
	b exited
	c distance
	a (Lnet/minecraft/server/CriterionConditionDistance;)Lbu$a; travelledThroughNether
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/Vec3D;DDD)Z matches
	b ()Lcom/google/gson/JsonElement; serializeToJson
bub$a net/minecraft/world/level/block/SkullBlock$Type
bv$a net/minecraft/advancements/critereon/PlacedBlockTrigger$TriggerInstance
	a block
	b state
	c location
	d item
	a (Lnet/minecraft/server/Block;)Lbv$a; placedBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/ItemStack;)Z matches
	b ()Lcom/google/gson/JsonElement; serializeToJson
bw$a net/minecraft/advancements/critereon/PlayerHurtEntityTrigger$TriggerInstance
	a damage
	b entity
	a (Lar$a;)Lbw$a; playerHurtEntity
	a (Lar$a;Lnet/minecraft/server/CriterionConditionEntity;)Lbw$a; playerHurtEntity
	a (Lnet/minecraft/server/CriterionConditionDamage;)Lbw$a; playerHurtEntity
	a (Lnet/minecraft/server/CriterionConditionDamage;Lnet/minecraft/server/CriterionConditionEntity;)Lbw$a; playerHurtEntity
	a (Lnet/minecraft/server/CriterionConditionEntity;)Lbw$a; playerHurtEntity
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/Entity;Lnet/minecraft/server/DamageSource;FFZ)Z matches
	b ()Lcom/google/gson/JsonElement; serializeToJson
	c ()Lbw$a; playerHurtEntity
bwa$a net/minecraft/world/level/block/entity/BannerPattern$Builder
	a patterns
	a ()Lnet/minecraft/server/NBTTagList; toListTag
	a (Lnet/minecraft/server/EnumBannerPatternType;Lnet/minecraft/server/EnumColor;)Lbwa$a; addPattern
bwf$a net/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeData
	a entityData
	b ticksInHive
	c minOccupationTicks
bwj$a net/minecraft/world/level/block/entity/BlockEntityType$Builder
	a factory
	b validBlocks
	a (Lcom/mojang/datafixers/types/Type;)Lnet/minecraft/server/TileEntityTypes; build
	a (Ljava/util/function/Supplier;[Lnet/minecraft/server/Block;)Lbwj$a; of
bx$a net/minecraft/advancements/critereon/PlayerPredicate$AdvancementCriterionsPredicate
	a criterions
	a ()Lcom/google/gson/JsonElement; toJson
	a (Lnet/minecraft/server/AdvancementProgress;)Z test
bx$b net/minecraft/advancements/critereon/PlayerPredicate$AdvancementDonePredicate
	a state
	a ()Lcom/google/gson/JsonElement; toJson
	a (Lnet/minecraft/server/AdvancementProgress;)Z test
bx$c net/minecraft/advancements/critereon/PlayerPredicate$AdvancementPredicate
	a ()Lcom/google/gson/JsonElement; toJson
bx$d net/minecraft/advancements/critereon/PlayerPredicate$Builder
	a level
	b gameType
	c stats
	d recipes
	e advancements
	a ()Lbx$d; player
	a (Lnet/minecraft/server/CriterionConditionValue$IntegerRange;)Lbx$d; setLevel
	a (Lnet/minecraft/server/EnumGamemode;)Lbx$d; setGameType
	a (Lnet/minecraft/server/MinecraftKey;Ljava/util/Map;)Lbx$d; checkAdvancementCriterions
	a (Lnet/minecraft/server/MinecraftKey;Z)Lbx$d; addRecipe
	a (Lnet/minecraft/server/Statistic;Lnet/minecraft/server/CriterionConditionValue$IntegerRange;)Lbx$d; addStat
	b ()Lnet/minecraft/server/CriterionConditionPlayer; build
	b (Lnet/minecraft/server/MinecraftKey;Z)Lbx$d; checkAdvancementDone
bxb net/minecraft/world/level/block/entity/LidBlockEntity
	a (F)F getOpenNess
by$a net/minecraft/advancements/critereon/RecipeUnlockedTrigger$TriggerInstance
	a recipe
	a (Lnet/minecraft/server/IRecipe;)Z matches
	b ()Lcom/google/gson/JsonElement; serializeToJson
byg$a net/minecraft/world/level/block/state/BlockState$Cache
	a DIRECTIONS
	b canOcclude
	c solidRender
	d propagatesSkylightDown
	e lightBlock
	f occlusionShapes
	g collisionShape
	h largeCollisionShape
	i isFaceSturdy
	j isCollisionShapeFullBlock
byh$a net/minecraft/world/level/block/state/StateDefinition$Builder
	a owner
	b properties
	a (Lbyh$b;)Lnet/minecraft/server/BlockStateList; create
	a (Lnet/minecraft/server/IBlockState;)V validateProperty
	a ([Lnet/minecraft/server/IBlockState;)Lbyh$a; add
byh$b net/minecraft/world/level/block/state/StateDefinition$Factory
bz$a net/minecraft/advancements/critereon/ShotCrossbowTrigger$TriggerInstance
	a item
	a (Lnet/minecraft/server/CriterionConditionItem;)Lbz$a; shotCrossbow
	a (Lnet/minecraft/server/IMaterial;)Lbz$a; shotCrossbow
	a (Lnet/minecraft/server/ItemStack;)Z matches
	b ()Lcom/google/gson/JsonElement; serializeToJson
bzr$a net/minecraft/world/level/border/BorderChangeListener$DelegateBorderChangeListener
	a worldBorder
	a (Lnet/minecraft/server/WorldBorder;D)V onBorderSizeSet
	a (Lnet/minecraft/server/WorldBorder;DD)V onBorderCenterSet
	a (Lnet/minecraft/server/WorldBorder;DDJ)V onBorderSizeLerping
	a (Lnet/minecraft/server/WorldBorder;I)V onBorderSetWarningTime
	b (Lnet/minecraft/server/WorldBorder;D)V onBorderSetDamagePerBlock
	b (Lnet/minecraft/server/WorldBorder;I)V onBorderSetWarningBlocks
	c (Lnet/minecraft/server/WorldBorder;D)V onBorderSetDamageSafeZOne
bzs net/minecraft/world/level/border/BorderStatus
	a GROWING
	b SHRINKING
	c STATIONARY
	d color
	e $VALUES
	a ()I getColor
bzt$a net/minecraft/world/level/border/WorldBorder$BorderExtent
	a ()D getMinX
	b ()D getMaxX
	c ()D getMinZ
	d ()D getMaxZ
	e ()D getSize
	f ()D getLerpSpeed
	g ()J getLerpRemainingTime
	h ()D getLerpTarget
	i ()Lbzs; getStatus
	j ()V onAbsoluteMaxSizeChange
	k ()V onCenterChange
	l ()Lbzt$a; update
	m ()Lnet/minecraft/server/VoxelShape; getCollisionShape
bzt$b net/minecraft/world/level/border/WorldBorder$MovingBorderExtent
	b from
	c to
	d lerpEnd
	e lerpBegin
	f lerpDuration
	a ()D getMinX
	b ()D getMaxX
	c ()D getMinZ
	d ()D getMaxZ
	e ()D getSize
	f ()D getLerpSpeed
	g ()J getLerpRemainingTime
	h ()D getLerpTarget
	i ()Lbzs; getStatus
	j ()V onAbsoluteMaxSizeChange
	k ()V onCenterChange
	l ()Lbzt$a; update
	m ()Lnet/minecraft/server/VoxelShape; getCollisionShape
bzt$c net/minecraft/world/level/border/WorldBorder$StaticBorderExtent
	b size
	c minX
	d minZ
	e maxX
	f maxZ
	g shape
	a ()D getMinX
	b ()D getMaxX
	c ()D getMinZ
	d ()D getMaxZ
	e ()D getSize
	f ()D getLerpSpeed
	g ()J getLerpRemainingTime
	h ()D getLerpTarget
	i ()Lbzs; getStatus
	j ()V onAbsoluteMaxSizeChange
	k ()V onCenterChange
	l ()Lbzt$a; update
	m ()Lnet/minecraft/server/VoxelShape; getCollisionShape
	n ()V updateBox
cab$b net/minecraft/world/level/chunk/ChunkStatus$GenerationTask
cab$c net/minecraft/world/level/chunk/ChunkStatus$LoadingTask
cab$d net/minecraft/world/level/chunk/ChunkStatus$SimpleGenerationTask
cap$a net/minecraft/world/level/chunk/PalettedContainer$CountConsumer
cas$a net/minecraft/world/level/chunk/UpgradeData$BlockFixer
	a (Lnet/minecraft/server/GeneratorAccess;)V processChunk
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
caw$a net/minecraft/world/level/chunk/storage/IOWorker$PendingStore
	a data
	b result
caz$b net/minecraft/world/level/chunk/storage/RegionFile$CommitOp
cb$a net/minecraft/advancements/critereon/SlideDownBlockTrigger$TriggerInstance
	a block
	b state
	a (Lnet/minecraft/server/Block;)Lcb$a; slidesDownBlock
	a (Lnet/minecraft/server/IBlockData;)Z matches
	b ()Lcom/google/gson/JsonElement; serializeToJson
cbb$a net/minecraft/world/level/chunk/storage/RegionFileVersion$StreamWrapper
cbq$a net/minecraft/world/level/levelgen/FlatLevelSource$FlatLevelBiomeWrapper
cc$a net/minecraft/advancements/critereon/StatePropertiesPredicate$Builder
	a matchers
	a ()Lcc$a; properties
	a (Lnet/minecraft/server/IBlockState;I)Lcc$a; hasProperty
	a (Lnet/minecraft/server/IBlockState;Ljava/lang/Comparable;)Lcc$a; hasProperty
	a (Lnet/minecraft/server/IBlockState;Ljava/lang/String;)Lcc$a; hasProperty
	a (Lnet/minecraft/server/IBlockState;Z)Lcc$a; hasProperty
	b ()Lnet/minecraft/server/CriterionTriggerProperties; build
cc$b net/minecraft/advancements/critereon/StatePropertiesPredicate$ExactPropertyMatcher
	a value
	a ()Lcom/google/gson/JsonElement; toJson
	a (Lnet/minecraft/server/IBlockDataHolder;Lnet/minecraft/server/IBlockState;)Z match
cc$c net/minecraft/advancements/critereon/StatePropertiesPredicate$PropertyMatcher
	a name
	a ()Lcom/google/gson/JsonElement; toJson
	a (Lnet/minecraft/server/BlockStateList;Ljava/util/function/Consumer;)V checkState
	a (Lnet/minecraft/server/BlockStateList;Lnet/minecraft/server/IBlockDataHolder;)Z match
	a (Lnet/minecraft/server/IBlockDataHolder;Lnet/minecraft/server/IBlockState;)Z match
	b ()Ljava/lang/String; getName
cc$d net/minecraft/advancements/critereon/StatePropertiesPredicate$RangedPropertyMatcher
	a minValue
	b maxValue
	a ()Lcom/google/gson/JsonElement; toJson
	a (Lnet/minecraft/server/IBlockDataHolder;Lnet/minecraft/server/IBlockState;)Z match
ccx$a net/minecraft/world/level/levelgen/feature/BuriedTreasureFeature$BuriedTreasureStart
	a ()Lnet/minecraft/server/BlockPosition; getLocatePos
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;)V generatePieces
cd$a net/minecraft/advancements/critereon/SummonedEntityTrigger$TriggerInstance
	a entity
	a (Lbb$a;)Lcd$a; summonedEntity
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/Entity;)Z matches
	b ()Lcom/google/gson/JsonElement; serializeToJson
cdi$a net/minecraft/world/level/levelgen/feature/DesertPyramidFeature$FeatureStart
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;)V generatePieces
cdm$a net/minecraft/world/level/levelgen/feature/EndCityFeature$EndCityStart
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;)V generatePieces
cdq$a net/minecraft/world/level/levelgen/feature/FancyTreeFeature$FoliageCoords
	b branchBase
	r ()I getBranchBase
ce$a net/minecraft/advancements/critereon/TameAnimalTrigger$TriggerInstance
	a entity
	a (Lnet/minecraft/server/CriterionConditionEntity;)Lce$a; tamedAnimal
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/EntityAnimal;)Z matches
	b ()Lcom/google/gson/JsonElement; serializeToJson
	c ()Lce$a; tamedAnimal
ceb$a net/minecraft/world/level/levelgen/feature/IglooFeature$FeatureStart
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;)V generatePieces
cec$a net/minecraft/world/level/levelgen/feature/JunglePyramidFeature$FeatureStart
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;)V generatePieces
cei$a net/minecraft/world/level/levelgen/feature/MineshaftFeature$MineShaftStart
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;)V generatePieces
cek$a net/minecraft/world/level/levelgen/feature/NetherFortressFeature$NetherBridgeStart
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;)V generatePieces
cem$a net/minecraft/world/level/levelgen/feature/OceanMonumentFeature$OceanMonumentStart
	e isCreated
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;)V generatePieces
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)V postProcess
	b (II)V generatePieces
ceo$a net/minecraft/world/level/levelgen/feature/PillagerOutpostFeature$FeatureStart
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;)V generatePieces
cez$a net/minecraft/world/level/levelgen/feature/ShipwreckFeature$FeatureStart
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;)V generatePieces
cf$a net/minecraft/advancements/critereon/TickTrigger$TriggerInstance
cfc net/minecraft/world/level/levelgen/feature/SimulatedFeature
	a (Lwx;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)V simulate
cff$b net/minecraft/world/level/levelgen/feature/SpikeFeature$SpikeCacheLoader
	a (Ljava/lang/Long;)Ljava/util/List; load
cfh$a net/minecraft/world/level/levelgen/feature/StrongholdFeature$StrongholdStart
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;)V generatePieces
cfi$a net/minecraft/world/level/levelgen/feature/StructureFeature$StructureStartFactory
cfk$a net/minecraft/world/level/levelgen/feature/SwamplandHutFeature$FeatureStart
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;)V generatePieces
cfn$a net/minecraft/world/level/levelgen/feature/VillageFeature$FeatureStart
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;)V generatePieces
cfo$a net/minecraft/world/level/levelgen/feature/VillagePieces$VillagePiece
cfs$a net/minecraft/world/level/levelgen/feature/WoodlandMansionFeature$WoodlandMansionStart
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;)V generatePieces
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)V postProcess
cg$a net/minecraft/advancements/critereon/TradeTrigger$TriggerInstance
	a villager
	b item
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/EntityVillagerAbstract;Lnet/minecraft/server/ItemStack;)Z matches
	b ()Lcom/google/gson/JsonElement; serializeToJson
	c ()Lcg$a; tradedWithVillager
cgo$a net/minecraft/world/level/levelgen/feature/configurations/MegaTreeConfiguration$MegaTreeConfigurationBuilder
	c decorators
	d baseHeight
	e heightInterval
	f crownHeight
	a ()Lnet/minecraft/server/WorldGenMegaTreeConfiguration; build
	a (I)Lcgo$a; baseHeight
	a (Ljava/util/List;)Lcgo$a; decorators
	b ()Lnet/minecraft/server/WorldGenFeatureTreeConfiguration; build
	b (I)Lcgo$a; heightInterval
	b (Ljava/util/List;)Lchi$a; decorators
	c (I)Lcgo$a; crownHeight
	d (I)Lchi$a; baseHeight
cgy$a net/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration$GrassConfigurationBuilder
	a stateProvider
	b blockPlacer
	c whitelist
	d blacklist
	e tries
	f xspread
	g yspread
	h zspread
	i canReplace
	j project
	k needWater
	a ()Lcgy$a; canReplace
	a (I)Lcgy$a; tries
	a (Ljava/util/Set;)Lcgy$a; whitelist
	b ()Lcgy$a; noProjection
	b (I)Lcgy$a; xspread
	b (Ljava/util/Set;)Lcgy$a; blacklist
	c ()Lcgy$a; needWater
	c (I)Lcgy$a; yspread
	d ()Lnet/minecraft/server/WorldGenFeatureRandomPatchConfiguration; build
	d (I)Lcgy$a; zspread
ch$a net/minecraft/advancements/critereon/UsedEnderEyeTrigger$TriggerInstance
	a level
	a (D)Z matches
chf$a net/minecraft/world/level/levelgen/feature/configurations/SmallTreeConfiguration$SmallTreeConfigurationBuilder
	c foliagePlacer
	d decorators
	e baseHeight
	f heightRandA
	g heightRandB
	h trunkHeight
	i trunkHeightRandom
	j trunkTopOffset
	k trunkTopOffsetRandom
	l foliageHeight
	m foliageHeightRandom
	n maxWaterDepth
	o ignoreVines
	a ()Lchf$a; ignoreVines
	a (I)Lchf$a; baseHeight
	a (Ljava/util/List;)Lchf$a; decorators
	b ()Lnet/minecraft/server/WorldGenFeatureTreeConfiguration; build
	b (I)Lchf$a; heightRandA
	b (Ljava/util/List;)Lchi$a; decorators
	c ()Lnet/minecraft/server/WorldGenFeatureSmallTreeConfigurationConfiguration; build
	c (I)Lchf$a; heightRandB
	d (I)Lchi$a; baseHeight
	e (I)Lchf$a; trunkHeight
	f (I)Lchf$a; trunkHeightRandom
	g (I)Lchf$a; trunkTopOffset
	h (I)Lchf$a; trunkTopOffsetRandom
	i (I)Lchf$a; foliageHeight
	j (I)Lchf$a; foliageHeightRandom
	k (I)Lchf$a; maxWaterDepth
chi$a net/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder
	a trunkProvider
	b leavesProvider
	c decorators
	d baseHeight
	b ()Lnet/minecraft/server/WorldGenFeatureTreeConfiguration; build
	b (Ljava/util/List;)Lchi$a; decorators
	d (I)Lchi$a; baseHeight
ci$a net/minecraft/advancements/critereon/UsedTotemTrigger$TriggerInstance
	a item
	a (Lnet/minecraft/server/CriterionConditionItem;)Lci$a; usedTotem
	a (Lnet/minecraft/server/IMaterial;)Lci$a; usedTotem
	a (Lnet/minecraft/server/ItemStack;)Z matches
	b ()Lcom/google/gson/JsonElement; serializeToJson
cie$a net/minecraft/world/level/levelgen/feature/structures/JigsawPlacement$PieceFactory
cie$b net/minecraft/world/level/levelgen/feature/structures/JigsawPlacement$PieceState
	a piece
	b free
	c boundsTop
	d depth
cie$c net/minecraft/world/level/levelgen/feature/structures/JigsawPlacement$Placer
	a maxDepth
	b factory
	c chunkGenerator
	d structureManager
	e pieces
	f random
	g placing
	a (Lnet/minecraft/server/WorldGenFeaturePillagerOutpostPoolPiece;Ljava/util/concurrent/atomic/AtomicReference;II)V tryPlacingChildren
ckz$a net/minecraft/world/level/levelgen/structure/BuriedTreasurePieces$BuriedTreasurePiece
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/IBlockData;)Z isLiquid
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
clc$a net/minecraft/world/level/levelgen/structure/IglooPieces$IglooPiece
	d templateLocation
	e rotation
	a (Ljava/lang/String;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;)V handleDataMarker
	a (Lnet/minecraft/server/DefinedStructureManager;)V loadTemplate
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
cld$a net/minecraft/world/level/levelgen/structure/JunglePyramidPiece$MossStoneSelector
	a (Ljava/util/Random;IIIZ)V next
clf$c net/minecraft/world/level/levelgen/structure/MineShaftPieces$MineShaftPiece
	a type
	a ()Lnet/minecraft/server/IBlockData; getPlanksBlock
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/StructureBoundingBox;IIII)Z isSupportingBox
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	b ()Lnet/minecraft/server/IBlockData; getFenceBlock
cli$a net/minecraft/world/level/levelgen/structure/OceanRuinFeature$OceanRuinStart
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;)V generatePieces
clj$a net/minecraft/world/level/levelgen/structure/OceanRuinPieces$OceanRuinPiece
	d biomeType
	e integrity
	f templateLocation
	g rotation
	h isLarge
	a (Ljava/lang/String;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;)V handleDataMarker
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)I getHeight
	a (Lnet/minecraft/server/DefinedStructureManager;)V loadTemplate
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
clk$a net/minecraft/world/level/levelgen/structure/PillagerOutpostPieces$PillagerOutpostPiece
cln$a net/minecraft/world/level/levelgen/structure/ShipwreckPieces$ShipwreckPiece
	d rotation
	e templateLocation
	f isBeached
	a (Ljava/lang/String;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;)V handleDataMarker
	a (Lnet/minecraft/server/DefinedStructureManager;)V loadTemplate
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
clo$q net/minecraft/world/level/levelgen/structure/StrongholdPieces$Turn
clv$a net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$FirstFloorRoomCollection
	a (Ljava/util/Random;)Ljava/lang/String; get1x1
	a (Ljava/util/Random;Z)Ljava/lang/String; get1x2SideEntrance
	b (Ljava/util/Random;)Ljava/lang/String; get1x1Secret
	b (Ljava/util/Random;Z)Ljava/lang/String; get1x2FrontEntrance
	c (Ljava/util/Random;)Ljava/lang/String; get1x2Secret
	d (Ljava/util/Random;)Ljava/lang/String; get2x2
	e (Ljava/util/Random;)Ljava/lang/String; get2x2Secret
clv$b net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$FloorRoomCollection
	a (Ljava/util/Random;)Ljava/lang/String; get1x1
	a (Ljava/util/Random;Z)Ljava/lang/String; get1x2SideEntrance
	b (Ljava/util/Random;)Ljava/lang/String; get1x1Secret
	b (Ljava/util/Random;Z)Ljava/lang/String; get1x2FrontEntrance
	c (Ljava/util/Random;)Ljava/lang/String; get1x2Secret
	d (Ljava/util/Random;)Ljava/lang/String; get2x2
	e (Ljava/util/Random;)Ljava/lang/String; get2x2Secret
clv$c net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$MansionGrid
	a random
	b baseGrid
	c thirdFloorGrid
	d floorRooms
	e entranceX
	f entranceY
	a ()V print
	a (Lclv$g;)Z cleanEdges
	a (Lclv$g;II)Z isHouse
	a (Lclv$g;IIII)Z isRoomId
	a (Lclv$g;IILnet/minecraft/server/EnumDirection;I)V recursiveCorridor
	a (Lclv$g;Lclv$g;)V identifyRooms
	b ()V setupThirdFloor
	b (Lclv$g;IIII)Lnet/minecraft/server/EnumDirection; get1x2RoomDirection
clv$d net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$MansionPiecePlacer
	a structureManager
	b random
	c startX
	d startY
	a (Ljava/util/List;Lclv$e;)V entrance
	a (Ljava/util/List;Lclv$e;Lclv$g;Lnet/minecraft/server/EnumDirection;IIII)V traverseOuterWalls
	a (Ljava/util/List;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Lclv$b;)V addRoom2x2Secret
	a (Ljava/util/List;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Lclv$g;Lclv$g;)V createRoof
	a (Ljava/util/List;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Lnet/minecraft/server/EnumDirection;Lclv$b;)V addRoom1x1
	a (Ljava/util/List;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/EnumDirection;Lclv$b;)V addRoom2x2
	a (Ljava/util/List;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/EnumDirection;Lclv$b;Z)V addRoom1x2
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Ljava/util/List;Lclv$c;)V createMansion
	b (Ljava/util/List;Lclv$e;)V traverseWallPiece
	c (Ljava/util/List;Lclv$e;)V traverseTurn
	d (Ljava/util/List;Lclv$e;)V traverseInnerTurn
clv$e net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$PlacementData
	a rotation
	b position
	c wallType
clv$f net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$SecondFloorRoomCollection
	a (Ljava/util/Random;)Ljava/lang/String; get1x1
	a (Ljava/util/Random;Z)Ljava/lang/String; get1x2SideEntrance
	b (Ljava/util/Random;)Ljava/lang/String; get1x1Secret
	b (Ljava/util/Random;Z)Ljava/lang/String; get1x2FrontEntrance
	c (Ljava/util/Random;)Ljava/lang/String; get1x2Secret
	d (Ljava/util/Random;)Ljava/lang/String; get2x2
	e (Ljava/util/Random;)Ljava/lang/String; get2x2Secret
clv$g net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$SimpleGrid
	a grid
	b width
	c height
	d valueIfOutside
	a (II)I get
	a (III)V set
	a (IIII)V setif
	a (IIIII)V set
	b (III)Z edgesTo
clv$h net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$ThirdFloorRoomCollection
clv$i net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$WoodlandMansionPiece
	d templateName
	e rotation
	f mirror
	a (Ljava/lang/String;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;)V handleDataMarker
	a (Lnet/minecraft/server/DefinedStructureManager;)V loadTemplate
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
cmp$a net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$SimplePalette
	a DEFAULT_BLOCK_STATE
	b ids
	c lastId
	a (I)Lnet/minecraft/server/IBlockData; stateFor
	a (Lnet/minecraft/server/IBlockData;)I idFor
	a (Lnet/minecraft/server/IBlockData;I)V addMapping
cn$a net/minecraft/commands/CommandFunction$CacheableFunction
	a NONE
	b id
	c resolved
	d function
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lnet/minecraft/server/CustomFunctionData;)Ljava/util/Optional; get
cn$b net/minecraft/commands/CommandFunction$CommandEntry
	a parse
	a (Lnet/minecraft/server/CustomFunctionData;Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/ArrayDeque;I)V execute
cn$c net/minecraft/commands/CommandFunction$Entry
	a (Lnet/minecraft/server/CustomFunctionData;Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/ArrayDeque;I)V execute
cn$d net/minecraft/commands/CommandFunction$FunctionEntry
	a function
	a (Lnet/minecraft/server/CustomFunctionData;Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/ArrayDeque;I)V execute
cnq$a net/minecraft/world/level/lighting/BlockLightSectionStorage$BlockDataLayerStorageMap
	a ()Lcnq$a; copy
	b ()Lnet/minecraft/server/LightEngineStorageArray; copy
coa$a net/minecraft/world/level/lighting/SkyLightSectionStorage$SkyDataLayerStorageMap
	b currentLowestY
	c topSections
	a ()Lcoa$a; copy
	b ()Lnet/minecraft/server/LightEngineStorageArray; copy
cob net/minecraft/world/level/lighting/SpatialLongSet
	a map
cob$a net/minecraft/world/level/lighting/SpatialLongSet$InternalMap
	a X_BITS
	b Z_BITS
	c Y_BITS
	d Z_OFFSET
	e X_OFFSET
	g OUTER_MASK
	h lastPos
	i lastOuterKey
	j minSize
	a ()J removeFirstBit
	a (IJ)Z replaceBit
	a (J)J getOuterKey
	a (JI)J getFullKey
	b (IJ)Z removeFromEntry
	b (J)I getInnerKey
	c (J)Z addBit
	d (J)Z removeBit
	e (J)Z removeFromNullEntry
coj$a net/minecraft/world/level/material/LavaFluid$Flowing
	a (Lbyh$a;)V createFluidStateDefinition
	c (Lnet/minecraft/server/Fluid;)Z isSource
	d (Lnet/minecraft/server/Fluid;)I getAmount
coj$b net/minecraft/world/level/material/LavaFluid$Source
	c (Lnet/minecraft/server/Fluid;)Z isSource
	d (Lnet/minecraft/server/Fluid;)I getAmount
cok$a net/minecraft/world/level/material/Material$Builder
	a pushReaction
	b blocksMotion
	c flammable
	d isAlwaysDestroyable
	e liquid
	f replaceable
	g solid
	h color
	i solidBlocking
	a ()Lcok$a; liquid
	b ()Lcok$a; nonSolid
	c ()Lcok$a; noCollider
	d ()Lcok$a; notAlwaysDestroyable
	e ()Lcok$a; flammable
	f ()Lcok$a; replaceable
	g ()Lcok$a; destroyOnPush
	h ()Lcok$a; notPushable
	i ()Lnet/minecraft/server/Material; build
	j ()Lcok$a; notSolidBlocking
com/mojang/realmsclient/dto/RealmsServer$a com/mojang/realmsclient/dto/RealmsServer$McoServerComparator
	a refOwner
	a (Lcom/mojang/realmsclient/dto/RealmsServer;Lcom/mojang/realmsclient/dto/RealmsServer;)I compare
com/mojang/realmsclient/dto/RealmsServer$b com/mojang/realmsclient/dto/RealmsServer$State
	a CLOSED
	b OPEN
	c UNINITIALIZED
	d $VALUES
com/mojang/realmsclient/dto/RealmsServer$c com/mojang/realmsclient/dto/RealmsServer$WorldType
	a NORMAL
	b MINIGAME
	c ADVENTUREMAP
	d EXPERIENCE
	e INSPIRATION
	f $VALUES
com/mojang/realmsclient/dto/Subscription$a com/mojang/realmsclient/dto/Subscription$SubscriptionType
	a NORMAL
	b RECURRING
	c $VALUES
com/mojang/realmsclient/dto/WorldTemplate$a com/mojang/realmsclient/dto/WorldTemplate$WorldTemplateType
	a WORLD_TEMPLATE
	b MINIGAME
	c ADVENTUREMAP
	d EXPERIENCE
	e INSPIRATION
	f $VALUES
coo$a net/minecraft/world/level/material/WaterFluid$Flowing
	a (Lbyh$a;)V createFluidStateDefinition
	c (Lnet/minecraft/server/Fluid;)Z isSource
	d (Lnet/minecraft/server/Fluid;)I getAmount
coo$b net/minecraft/world/level/material/WaterFluid$Source
	c (Lnet/minecraft/server/Fluid;)Z isSource
	d (Lnet/minecraft/server/Fluid;)I getAmount
cqv net/minecraft/world/level/redstone/Redstone
cr$a net/minecraft/commands/Commands$ParseFunction
crg$a net/minecraft/world/level/storage/CommandStorage$Container
	a storage
	a (Ljava/lang/String;)Lnet/minecraft/server/NBTTagCompound; get
	a (Ljava/lang/String;Lnet/minecraft/server/NBTTagCompound;)V put
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	b (Ljava/lang/String;)Ljava/util/stream/Stream; getKeys
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
crl net/minecraft/world/level/storage/LevelStorageException
crn net/minecraft/world/level/storage/LevelSummary
	a levelId
	b levelName
	c lastPlayed
	d sizeOnDisk
	e requiresConversion
	f gameMode
	g hardcore
	h hasCheats
	i worldVersionName
	j worldVersion
	k snapshot
	l generatorType
	a ()Ljava/lang/String; getLevelId
	a (Lcrn;)I compareTo
	b ()Ljava/lang/String; getLevelName
	c ()J getSizeOnDisk
	d ()Z isRequiresConversion
	e ()J getLastPlayed
	f ()Lnet/minecraft/server/EnumGamemode; getGameMode
	g ()Z isHardcore
	h ()Z hasCheats
	i ()Lnet/minecraft/server/IChatBaseComponent; getWorldVersionName
	j ()I getWorldVersion
	k ()Z isSnapshot
	l ()Z markVersionInList
	m ()Z askToOpenWorld
	n ()Z isOldCustomizedWorld
	o ()Z shouldBackup
crq$a net/minecraft/world/level/storage/loot/BinomialDistributionGenerator$Serializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootValueBinomial; deserialize
	a (Lnet/minecraft/server/LootValueBinomial;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
crs$a net/minecraft/world/level/storage/loot/ConstantIntValue$Serializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootValueConstant; deserialize
	a (Lnet/minecraft/server/LootValueConstant;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
crt$a net/minecraft/world/level/storage/loot/IntLimiter$Serializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootIntegerLimit; deserialize
	a (Lnet/minecraft/server/LootIntegerLimit;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
cru$b net/minecraft/world/level/storage/loot/LootContext$DynamicDrop
cru$c$a net/minecraft/world/level/storage/loot/LootContext$EntityTarget$Serializer
	a (Lcom/google/gson/stream/JsonReader;)Lnet/minecraft/server/LootTableInfo$EntityTarget; read
	a (Lcom/google/gson/stream/JsonWriter;Lnet/minecraft/server/LootTableInfo$EntityTarget;)V write
crw$a net/minecraft/world/level/storage/loot/LootPool$Builder
	a entries
	b conditions
	c functions
	d rolls
	e bonusRolls
	a ()Lcrw$a; unwrap
	a (Lcsn$a;)Lcrw$a; add
	a (Lctf$a;)Lcrw$a; apply
	a (Lcuj$a;)Lcrw$a; when
	a (Lnet/minecraft/server/LootValue;)Lcrw$a; setRolls
	a (Lnet/minecraft/server/LootValueBounds;)Lcrw$a; setBonusRolls
	b ()Lnet/minecraft/server/LootSelector; build
	b (Lctf$a;)Ljava/lang/Object; apply
	b (Lcuj$a;)Ljava/lang/Object; when
	c ()Ljava/lang/Object; unwrap
crw$b net/minecraft/world/level/storage/loot/LootPool$Serializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootSelector; deserialize
	a (Lnet/minecraft/server/LootSelector;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
crx$a net/minecraft/world/level/storage/loot/LootTable$Builder
	a pools
	b functions
	c paramSet
	a ()Lcrx$a; unwrap
	a (Lcrw$a;)Lcrx$a; withPool
	a (Lctf$a;)Lcrx$a; apply
	a (Lnet/minecraft/server/LootContextParameterSet;)Lcrx$a; setParamSet
	b ()Lnet/minecraft/server/LootTable; build
	b (Lctf$a;)Ljava/lang/Object; apply
	c ()Ljava/lang/Object; unwrap
crx$b net/minecraft/world/level/storage/loot/LootTable$Serializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootTable; deserialize
	a (Lnet/minecraft/server/LootTable;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
cs$a net/minecraft/commands/SharedSuggestionProvider$TextCoordinates
	a DEFAULT_LOCAL
	b DEFAULT_GLOBAL
	c x
	d y
	e z
csc$a net/minecraft/world/level/storage/loot/RandomValueBounds$Serializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootValueBounds; deserialize
	a (Lnet/minecraft/server/LootValueBounds;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
cse$a net/minecraft/world/level/storage/loot/entries/AlternativesEntry$Builder
	a entries
	a ()Lcse$a; getThis
	a (Lcsn$a;)Lcse$a; otherwise
	b ()Lnet/minecraft/server/LootEntryAbstract; build
	d ()Lcsn$a; getThis
csg$a net/minecraft/world/level/storage/loot/entries/CompositeEntryBase$CompositeEntryConstructor
csg$b net/minecraft/world/level/storage/loot/entries/CompositeEntryBase$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootEntryAbstract;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootEntryChildrenAbstract; deserialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootEntryChildrenAbstract; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootEntryAbstract;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootEntryChildrenAbstract;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootEntryAbstract; deserialize
csh$a net/minecraft/world/level/storage/loot/entries/DynamicLoot$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/server/LootItemCondition;[Lnet/minecraft/server/LootItemFunction;)Lnet/minecraft/server/LootSelectorDynamic; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootEntryAbstract;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootSelectorDynamic;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootSelectorEntry;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/server/LootItemCondition;[Lnet/minecraft/server/LootItemFunction;)Lnet/minecraft/server/LootSelectorEntry; deserialize
csi$a net/minecraft/world/level/storage/loot/entries/EmptyLootItem$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/server/LootItemCondition;[Lnet/minecraft/server/LootItemFunction;)Lnet/minecraft/server/LootSelectorEmpty; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/server/LootItemCondition;[Lnet/minecraft/server/LootItemFunction;)Lnet/minecraft/server/LootSelectorEntry; deserialize
csj$a net/minecraft/world/level/storage/loot/entries/EntryGroup$Builder
	a entries
	a ()Lcsj$a; getThis
	b ()Lnet/minecraft/server/LootEntryAbstract; build
	b (Lcsn$a;)Lcsj$a; append
	d ()Lcsn$a; getThis
csk$a net/minecraft/world/level/storage/loot/entries/LootItem$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/server/LootItemCondition;[Lnet/minecraft/server/LootItemFunction;)Lnet/minecraft/server/LootItem; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootEntryAbstract;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItem;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootSelectorEntry;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/server/LootItemCondition;[Lnet/minecraft/server/LootItemFunction;)Lnet/minecraft/server/LootSelectorEntry; deserialize
csl$a net/minecraft/world/level/storage/loot/entries/LootPoolEntries$Serializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootEntryAbstract; deserialize
	a (Ljava/lang/Class;)Lcsn$b; getSerializer
	a (Lnet/minecraft/server/LootEntryAbstract;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
csn$a net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder
	a conditions
	a (Lcsn$a;)Lcse$a; otherwise
	a (Lcuj$a;)Lcsn$a; when
	b ()Lnet/minecraft/server/LootEntryAbstract; build
	b (Lcsn$a;)Lcsj$a; append
	b (Lcuj$a;)Ljava/lang/Object; when
	c ()Ljava/lang/Object; unwrap
	c (Lcsn$a;)Lcsq$a; then
	d ()Lcsn$a; getThis
	e ()Lcsn$a; unwrap
	f ()[Lnet/minecraft/server/LootItemCondition; getConditions
csn$b net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Serializer
	a name
	b clazz
	a ()Lnet/minecraft/server/MinecraftKey; getName
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootEntryAbstract;Lcom/google/gson/JsonSerializationContext;)V serialize
	b ()Ljava/lang/Class; getContainerClass
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootEntryAbstract; deserialize
cso$a net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder
	a weight
	b quality
	c functions
	a ()[Lnet/minecraft/server/LootItemFunction; getFunctions
	a (I)Lcso$a; setWeight
	a (Lctf$a;)Lcso$a; apply
	b (I)Lcso$a; setQuality
	b (Lctf$a;)Ljava/lang/Object; apply
cso$b net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$DummyBuilder
	c constructor
	b ()Lnet/minecraft/server/LootEntryAbstract; build
	d ()Lcsn$a; getThis
	g ()Lcso$b; getThis
cso$c net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$EntryBase
	a (F)I getWeight
cso$d net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$EntryConstructor
cso$e net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootSelectorEntry; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootEntryAbstract;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootSelectorEntry;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/server/LootItemCondition;[Lnet/minecraft/server/LootItemFunction;)Lnet/minecraft/server/LootSelectorEntry; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootEntryAbstract; deserialize
csp$a net/minecraft/world/level/storage/loot/entries/LootTableReference$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/server/LootItemCondition;[Lnet/minecraft/server/LootItemFunction;)Lnet/minecraft/server/LootSelectorLootTable; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootEntryAbstract;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootSelectorEntry;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootSelectorLootTable;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/server/LootItemCondition;[Lnet/minecraft/server/LootItemFunction;)Lnet/minecraft/server/LootSelectorEntry; deserialize
csq$a net/minecraft/world/level/storage/loot/entries/SequentialEntry$Builder
	a entries
	a ()Lcsq$a; getThis
	b ()Lnet/minecraft/server/LootEntryAbstract; build
	c (Lcsn$a;)Lcsq$a; then
	d ()Lcsn$a; getThis
csr$a net/minecraft/world/level/storage/loot/entries/TagEntry$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/server/LootItemCondition;[Lnet/minecraft/server/LootItemFunction;)Lnet/minecraft/server/LootSelectorTag; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootEntryAbstract;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootSelectorEntry;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootSelectorTag;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/server/LootItemCondition;[Lnet/minecraft/server/LootItemFunction;)Lnet/minecraft/server/LootSelectorEntry; deserialize
cst$a net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$BinomialWithBonusCount
	a TYPE
	b extraRounds
	c probability
	a ()Lnet/minecraft/server/MinecraftKey; getType
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lcst$b; deserialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V serializeParams
	a (Ljava/util/Random;II)I calculateNewCount
cst$b net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$Formula
	a ()Lnet/minecraft/server/MinecraftKey; getType
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V serializeParams
	a (Ljava/util/Random;II)I calculateNewCount
cst$c net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$FormulaDeserializer
cst$d net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$OreDrops
	a TYPE
	a ()Lnet/minecraft/server/MinecraftKey; getType
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lcst$b; deserialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V serializeParams
	a (Ljava/util/Random;II)I calculateNewCount
cst$e net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionApplyBonus; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunction;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionApplyBonus;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
cst$f net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$UniformBonusCount
	a TYPE
	b bonusMultiplier
	a ()Lnet/minecraft/server/MinecraftKey; getType
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lcst$b; deserialize
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V serializeParams
	a (Ljava/util/Random;II)I calculateNewCount
csu$a net/minecraft/world/level/storage/loot/functions/ApplyExplosionDecay$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionExplosionDecay; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
csv$a net/minecraft/world/level/storage/loot/functions/CopyBlockState$Builder
	a block
	b properties
	a ()Lcsv$a; getThis
	a (Lnet/minecraft/server/IBlockState;)Lcsv$a; copy
	b ()Lnet/minecraft/server/LootItemFunction; build
	d ()Lcte$a; getThis
csv$b net/minecraft/world/level/storage/loot/functions/CopyBlockState$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionCopyState; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunction;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionCopyState;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
csw$b net/minecraft/world/level/storage/loot/functions/CopyNameFunction$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionCopyName; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunction;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionCopyName;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
csx$a net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Builder
	a source
	b ops
	a ()Lcsx$a; getThis
	a (Ljava/lang/String;Ljava/lang/String;)Lcsx$a; copy
	a (Ljava/lang/String;Ljava/lang/String;Lnet/minecraft/server/LootItemFunctionCopyNBT$Action;)Lcsx$a; copy
	b ()Lnet/minecraft/server/LootItemFunction; build
	d ()Lcte$a; getThis
csx$b net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$CopyOperation
	a sourcePathText
	b sourcePath
	c targetPathText
	d targetPath
	e op
	a ()Lcom/google/gson/JsonObject; toJson
	a (Lcom/google/gson/JsonObject;)Lcsx$b; fromJson
	a (Ljava/util/function/Supplier;Lnet/minecraft/server/NBTBase;)V apply
csx$e net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionCopyNBT; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunction;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionCopyNBT;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
csy$a net/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction$Builder
	a enchantments
	a ()Lcsy$a; getThis
	a (Lnet/minecraft/server/Enchantment;)Lcsy$a; withEnchantment
	b ()Lnet/minecraft/server/LootItemFunction; build
	d ()Lcte$a; getThis
csy$b net/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionEnchant; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunction;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionEnchant;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
csz$a net/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction$Builder
	a levels
	b treasure
	a ()Lcsz$a; getThis
	b ()Lnet/minecraft/server/LootItemFunction; build
	d ()Lcte$a; getThis
	e ()Lcsz$a; allowTreasure
csz$b net/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootEnchantLevel; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootEnchantLevel;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunction;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
cta$a net/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder
	a destination
	b mapDecoration
	c zoom
	d searchRadius
	e skipKnownStructures
	a ()Lcta$a; getThis
	a (B)Lcta$a; setZoom
	a (I)Lcta$a; setSearchRadius
	a (Ljava/lang/String;)Lcta$a; setDestination
	a (Lnet/minecraft/server/MapIcon$Type;)Lcta$a; setMapDecoration
	a (Z)Lcta$a; setSkipKnownStructures
	b ()Lnet/minecraft/server/LootItemFunction; build
	d ()Lcte$a; getThis
cta$b net/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionExplorationMap; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunction;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionExplorationMap;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
ctb$a net/minecraft/world/level/storage/loot/functions/FillPlayerHead$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionFillPlayerHead; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunction;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionFillPlayerHead;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
ctd$a net/minecraft/world/level/storage/loot/functions/LimitCount$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionLimitCount; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunction;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionLimitCount;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
cte$a net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder
	a conditions
	a (Lcuj$a;)Lcte$a; when
	b (Lcuj$a;)Ljava/lang/Object; when
	c ()Ljava/lang/Object; unwrap
	d ()Lcte$a; getThis
	f ()Lcte$a; unwrap
	g ()[Lnet/minecraft/server/LootItemCondition; getConditions
cte$b net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$DummyBuilder
	a constructor
	a ()Lcte$b; getThis
	b ()Lnet/minecraft/server/LootItemFunction; build
	d ()Lcte$a; getThis
cte$c net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunction;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemFunction; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
ctf$a net/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder
	b ()Lnet/minecraft/server/LootItemFunction; build
ctf$b net/minecraft/world/level/storage/loot/functions/LootItemFunction$Serializer
	a name
	b clazz
	a ()Lnet/minecraft/server/MinecraftKey; getName
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunction;Lcom/google/gson/JsonSerializationContext;)V serialize
	b ()Ljava/lang/Class; getFunctionClass
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemFunction; deserialize
ctg$a net/minecraft/world/level/storage/loot/functions/LootItemFunctions$Serializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemFunction; deserialize
	a (Lnet/minecraft/server/LootItemFunction;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
cth$a net/minecraft/world/level/storage/loot/functions/LootingEnchantFunction$Builder
	a count
	b limit
	a ()Lcth$a; getThis
	a (I)Lcth$a; setLimit
	b ()Lnet/minecraft/server/LootItemFunction; build
	d ()Lcte$a; getThis
cth$b net/minecraft/world/level/storage/loot/functions/LootingEnchantFunction$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootEnchantFunction; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootEnchantFunction;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunction;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
cti$a net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Builder
	a modifiers
	a ()Lcti$a; getThis
	a (Lcti$c;)Lcti$a; withModifier
	b ()Lnet/minecraft/server/LootItemFunction; build
	d ()Lcte$a; getThis
cti$b net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Modifier
	a name
	b attribute
	c operation
	d amount
	e id
	f slots
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lcti$b; deserialize
	a (Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonObject; serialize
	a (Ljava/lang/String;)Lnet/minecraft/server/AttributeModifier$Operation; operationFromString
	a (Lnet/minecraft/server/AttributeModifier$Operation;)Ljava/lang/String; operationToString
cti$c net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$ModifierBuilder
	a name
	b attribute
	c operation
	d amount
	e id
	f slots
	a ()Lcti$b; build
	a (Ljava/util/UUID;)Lcti$c; withUuid
	a (Lnet/minecraft/server/EnumItemSlot;)Lcti$c; forSlot
cti$d net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionSetAttribute; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunction;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionSetAttribute;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
ctj$a net/minecraft/world/level/storage/loot/functions/SetContainerContents$Builder
	a entries
	a ()Lctj$a; getThis
	a (Lcsn$a;)Lctj$a; withEntry
	b ()Lnet/minecraft/server/LootItemFunction; build
	d ()Lcte$a; getThis
ctj$b net/minecraft/world/level/storage/loot/functions/SetContainerContents$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionSetContents; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunction;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionSetContents;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
ctk$a net/minecraft/world/level/storage/loot/functions/SetContainerLootTable$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionSetTable; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunction;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionSetTable;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
ctl$a net/minecraft/world/level/storage/loot/functions/SetItemCountFunction$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionSetCount; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunction;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionSetCount;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
ctm$a net/minecraft/world/level/storage/loot/functions/SetItemDamageFunction$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionSetDamage; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunction;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionSetDamage;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
ctn$a net/minecraft/world/level/storage/loot/functions/SetLoreFunction$Builder
	a replace
	b resolutionContext
	c lore
	a ()Lctn$a; getThis
	a (Lnet/minecraft/server/IChatBaseComponent;)Lctn$a; addLine
	a (Lnet/minecraft/server/LootTableInfo$EntityTarget;)Lctn$a; setResolutionContext
	a (Z)Lctn$a; setReplace
	b ()Lnet/minecraft/server/LootItemFunction; build
	d ()Lcte$a; getThis
ctn$b net/minecraft/world/level/storage/loot/functions/SetLoreFunction$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionSetLore; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunction;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionSetLore;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
cto$a net/minecraft/world/level/storage/loot/functions/SetNameFunction$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionSetName; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunction;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionSetName;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
ctp$a net/minecraft/world/level/storage/loot/functions/SetNbtFunction$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionSetTag; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunction;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionSetTag;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
ctq$a net/minecraft/world/level/storage/loot/functions/SetStewEffectFunction$Builder
	a effectDurationMap
	a ()Lctq$a; getThis
	a (Lnet/minecraft/server/MobEffectList;Lnet/minecraft/server/LootValueBounds;)Lctq$a; withEffect
	b ()Lnet/minecraft/server/LootItemFunction; build
	d ()Lcte$a; getThis
ctq$b net/minecraft/world/level/storage/loot/functions/SetStewEffectFunction$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionSetStewEffect; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunction;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionConditional;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemFunctionSetStewEffect;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
ctr$a net/minecraft/world/level/storage/loot/functions/SmeltItemFunction$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionSmelt; deserialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/server/LootItemCondition;)Lnet/minecraft/server/LootItemFunctionConditional; deserialize
ctv$a net/minecraft/world/level/storage/loot/parameters/LootContextParamSet$Builder
	a required
	b optional
	a ()Lnet/minecraft/server/LootContextParameterSet; build
	a (Lnet/minecraft/server/LootContextParameter;)Lctv$a; required
	b (Lnet/minecraft/server/LootContextParameter;)Lctv$a; optional
ctz$a net/minecraft/world/level/storage/loot/predicates/AlternativeLootItemCondition$Builder
	a terms
	a (Lcuj$a;)Lctz$a; or
ctz$b net/minecraft/world/level/storage/loot/predicates/AlternativeLootItemCondition$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemConditionAlternative; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemCondition;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemConditionAlternative;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemCondition; deserialize
cua$a net/minecraft/world/level/storage/loot/predicates/BonusLevelTableCondition$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemConditionTableBonus; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemCondition;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemConditionTableBonus;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemCondition; deserialize
cub$a net/minecraft/world/level/storage/loot/predicates/ConditionReference$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemConditionReference; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemCondition;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemConditionReference;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemCondition; deserialize
cud$a net/minecraft/world/level/storage/loot/predicates/DamageSourceCondition$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemConditionDamageSourceProperties; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemCondition;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemConditionDamageSourceProperties;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemCondition; deserialize
cue$a net/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition$Builder
	a scores
	b entityTarget
	a (Ljava/lang/String;Lnet/minecraft/server/LootValueBounds;)Lcue$a; withScore
cue$b net/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemConditionEntityScore; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemCondition;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemConditionEntityScore;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemCondition; deserialize
cuf$a net/minecraft/world/level/storage/loot/predicates/ExplosionCondition$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemConditionSurvivesExplosion; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemCondition;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemConditionSurvivesExplosion;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemCondition; deserialize
cug$a net/minecraft/world/level/storage/loot/predicates/InvertedLootItemCondition$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemConditionInverted; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemCondition;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemConditionInverted;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemCondition; deserialize
cuh$a net/minecraft/world/level/storage/loot/predicates/LocationCheck$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemConditionLocationCheck; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemCondition;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemConditionLocationCheck;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemCondition; deserialize
cui$a net/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition$Builder
	a block
	b properties
	a (Lcc$a;)Lcui$a; setProperties
cui$b net/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemConditionBlockStateProperty; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemCondition;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemConditionBlockStateProperty;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lnet/minecraft/server/IBlockState;Ljava/lang/Object;)Ljava/lang/String; valueToString
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemCondition; deserialize
cuj$a net/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder
	a ()Lcuj$a; invert
	a (Lcuj$a;)Lctz$a; or
cuj$b net/minecraft/world/level/storage/loot/predicates/LootItemCondition$Serializer
	a name
	b clazz
	a ()Lnet/minecraft/server/MinecraftKey; getName
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemCondition;Lcom/google/gson/JsonSerializationContext;)V serialize
	b ()Ljava/lang/Class; getPredicateClass
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemCondition; deserialize
cuk$a net/minecraft/world/level/storage/loot/predicates/LootItemConditions$Serializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemCondition; deserialize
	a (Lnet/minecraft/server/LootItemCondition;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
cul$a net/minecraft/world/level/storage/loot/predicates/LootItemEntityPropertyCondition$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemConditionEntityProperty; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemCondition;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemConditionEntityProperty;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemCondition; deserialize
cum$a net/minecraft/world/level/storage/loot/predicates/LootItemKilledByPlayerCondition$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemConditionKilledByPlayer; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemCondition;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemConditionKilledByPlayer;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemCondition; deserialize
cun$a net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceCondition$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemConditionRandomChance; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemCondition;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemConditionRandomChance;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemCondition; deserialize
cuo$a net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceWithLootingCondition$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemConditionRandomChanceWithLooting; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemCondition;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemConditionRandomChanceWithLooting;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemCondition; deserialize
cup$a net/minecraft/world/level/storage/loot/predicates/MatchTool$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemConditionMatchTool; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemCondition;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemConditionMatchTool;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemCondition; deserialize
cuq$a net/minecraft/world/level/storage/loot/predicates/TimeCheck$Builder
	a period
	b value
	a (J)Lcuq$a; setPeriod
	b ()Lnet/minecraft/server/LootItemConditionTimeCheck; build
cuq$b net/minecraft/world/level/storage/loot/predicates/TimeCheck$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemConditionTimeCheck; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemCondition;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemConditionTimeCheck;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemCondition; deserialize
cur$a net/minecraft/world/level/storage/loot/predicates/WeatherCheck$Builder
	a isRaining
	b isThundering
	a (Ljava/lang/Boolean;)Lcur$a; setRaining
	b ()Lnet/minecraft/server/LootItemConditionWeatherCheck; build
	b (Ljava/lang/Boolean;)Lcur$a; setThundering
cur$b net/minecraft/world/level/storage/loot/predicates/WeatherCheck$Serializer
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemConditionWeatherCheck; deserialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemCondition;Lcom/google/gson/JsonSerializationContext;)V serialize
	a (Lcom/google/gson/JsonObject;Lnet/minecraft/server/LootItemConditionWeatherCheck;Lcom/google/gson/JsonSerializationContext;)V serialize
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootItemCondition; deserialize
cuv$a net/minecraft/world/level/timers/FunctionCallback$Serializer
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/CustomFunctionCallback; deserialize
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/CustomFunctionCallback;)V serialize
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/CustomFunctionCallbackTimer;)V serialize
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/CustomFunctionCallbackTimer; deserialize
cuw$a net/minecraft/world/level/timers/FunctionTagCallback$Serializer
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/CustomFunctionCallbackTag; deserialize
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/CustomFunctionCallbackTag;)V serialize
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/CustomFunctionCallbackTimer;)V serialize
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/CustomFunctionCallbackTimer; deserialize
cux$a net/minecraft/world/level/timers/TimerCallback$Serializer
	a id
	b cls
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/CustomFunctionCallbackTimer;)V serialize
	b ()Ljava/lang/Class; getCls
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/CustomFunctionCallbackTimer; deserialize
cuz$a net/minecraft/world/level/timers/TimerQueue$Event
	a triggerTime
	b sequentialId
	c id
	d callback
cvg net/minecraft/world/phys/PosAndRot
	a pos
	b xRot
	c yRot
	a ()Lnet/minecraft/server/Vec3D; pos
	b ()F xRot
	c ()F yRot
cvr$a net/minecraft/world/phys/shapes/DiscreteVoxelShape$IntFaceConsumer
cvr$b net/minecraft/world/phys/shapes/DiscreteVoxelShape$IntLineConsumer
cvu$a net/minecraft/world/phys/shapes/IndexMerger$IndexConsumer
cvw net/minecraft/world/phys/shapes/IntPointRange
	a parts
	b origin
cvz$a net/minecraft/world/phys/shapes/Shapes$DoubleLineConsumer
cwd net/minecraft/world/phys/shapes/WorldRegionIndirectVoxelShape
	b x
	c y
	d z
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;)Lit/unimi/dsi/fastutil/doubles/DoubleList; getCoords
cwo com/mojang/blaze3d/Blaze3D
	a ()V youJustLostTheGame
	b ()D getTime
cwp com/mojang/blaze3d/audio/Channel
	a LOGGER
	b source
	c initialized
	d streamingBufferSize
	e stream
	a ()Lcwp; create
	a (F)V setPitch
	a (I)V pumpBuffers
	a (Lcwu;)V attachStaticBuffer
	a (Ledp;)V attachBufferStream
	a (Ljavax/sound/sampled/AudioFormat;I)I calculateBufferSize
	a (Lnet/minecraft/server/Vec3D;)V setSelfPosition
	a (Z)V setLooping
	b ()V destroy
	b (F)V setVolume
	b (Z)V setRelative
	c ()V play
	c (F)V linearAttenuation
	d ()V pause
	e ()V unpause
	f ()V stop
	g ()Z stopped
	h ()V disableAttenuation
	i ()V updateStream
	j ()I getState
	k ()I removeProcessedBuffers
cwq com/mojang/blaze3d/audio/Library
	a LOGGER
	b device
	c context
	d EMPTY
	e staticChannels
	f streamingChannels
	g listener
	a ()V init
	a (Lcwp;)V releaseChannel
	a (Lcwq$c;)Lcwp; acquireChannel
	b ()V cleanup
	c ()Lcwr; getListener
	d ()Ljava/lang/String; getDebugString
	e ()I getChannelCount
	f ()J tryOpenDevice
cwq$a com/mojang/blaze3d/audio/Library$ChannelPool
	a ()Lcwp; acquire
	a (Lcwp;)Z release
	b ()V cleanup
	c ()I getMaxCount
	d ()I getUsedCount
cwq$b com/mojang/blaze3d/audio/Library$CountingChannelPool
	a limit
	b activeChannels
	a ()Lcwp; acquire
	a (Lcwp;)Z release
	b ()V cleanup
	c ()I getMaxCount
	d ()I getUsedCount
cwq$c com/mojang/blaze3d/audio/Library$Pool
	a STATIC
	b STREAMING
	c $VALUES
cwr com/mojang/blaze3d/audio/Listener
	a gain
	a ()F getGain
	a (F)V setGain
	a (Lnet/minecraft/server/Vec3D;)V setListenerPosition
	a (Lnet/minecraft/server/Vector3fa;Lnet/minecraft/server/Vector3fa;)V setListenerOrientation
	b ()V reset
cws com/mojang/blaze3d/audio/OggAudioStream
	a handle
	b audioFormat
	c input
	d buffer
	a ()Ljavax/sound/sampled/AudioFormat; getFormat
	a (I)Ljava/nio/ByteBuffer; read
	a (Lcws$a;)Z readFrame
	a (Ljava/nio/FloatBuffer;Lcws$a;)V convertMono
	a (Ljava/nio/FloatBuffer;Ljava/nio/FloatBuffer;Lcws$a;)V convertStereo
	b ()Ljava/nio/ByteBuffer; readAll
	c ()Z refillFromStream
	d ()V forwardBuffer
cws$a com/mojang/blaze3d/audio/OggAudioStream$OutputConcat
	a buffers
	b bufferSize
	c byteCount
	d currentBuffer
	a ()Ljava/nio/ByteBuffer; get
	a (F)V put
	b ()V createNewBuffer
cwt com/mojang/blaze3d/audio/OpenAlUtil
	a LOGGER
	a (I)Ljava/lang/String; alErrorToString
	a (JLjava/lang/String;)Z checkALCError
	a (Ljava/lang/String;)Z checkALError
	a (Ljavax/sound/sampled/AudioFormat;)I audioFormatToOpenAl
	b (I)Ljava/lang/String; alcErrorToString
cwu com/mojang/blaze3d/audio/SoundBuffer
	a data
	b format
	c hasAlBuffer
	d alBuffer
	a ()Ljava/util/OptionalInt; getAlBuffer
	b ()V discardAlBuffer
	c ()Ljava/util/OptionalInt; releaseAlBuffer
cwv com/mojang/blaze3d/font/GlyphInfo
	a ()F getBearingX
	a (Z)F getAdvance
	b ()F getBoldOffset
	c ()F getShadowOffset
cww com/mojang/blaze3d/font/GlyphProvider
	a (C)Lcwx; getGlyph
cwx com/mojang/blaze3d/font/RawGlyph
	a (II)V upload
	d ()I getPixelWidth
	e ()I getPixelHeight
	f ()Z isColored
	g ()F getOversample
	h ()F getLeft
	i ()F getRight
	j ()F getUp
	k ()F getDown
	l ()F getBearingY
cwy com/mojang/blaze3d/font/TrueTypeGlyphProvider
	a LOGGER
	b font
	c oversample
	d skip
	e shiftX
	f shiftY
	g pointScale
	h ascent
	a (C)Lcwx; getGlyph
	a (Ljava/nio/ByteBuffer;)Lorg/lwjgl/stb/STBTTFontinfo; getStbttFontinfo
	b (C)Lcwy$a; getGlyph
cwy$a com/mojang/blaze3d/font/TrueTypeGlyphProvider$Glyph
	b width
	c height
	d bearingX
	e bearingY
	f advance
	g index
	a ()F getBearingX
	a (II)V upload
	d ()I getPixelWidth
	e ()I getPixelHeight
	f ()Z isColored
	g ()F getOversample
	l ()F getBearingY
cwz com/mojang/blaze3d/pipeline/RenderCall
cxa com/mojang/blaze3d/pipeline/RenderPipeline
	a renderCalls
	b recordingBuffer
	c processedBuffer
	d renderingBuffer
cxb com/mojang/blaze3d/pipeline/RenderTarget
	a width
	b height
	c viewWidth
	d viewHeight
	e useDepth
	f frameBufferId
	g colorTextureId
	h depthBufferId
	i clearChannels
	j filterMode
	a ()V destroyBuffers
	a (FFFF)V setClearColor
	a (I)V setFilterMode
	a (II)V blitToScreen
	a (IIZ)V resize
	a (Z)V bindWrite
	b ()V checkStatus
	b (IIZ)V createBuffers
	b (Z)V clear
	c ()V bindRead
	c (IIZ)V blitToScreen
	c (Z)V _bindWrite
	d ()V unbindRead
	d (IIZ)V _resize
	e ()V unbindWrite
	e (IIZ)V _blitToScreen
cxc com/mojang/blaze3d/platform/ClipboardManager
	a clipboardScratchBuffer
	a (JLjava/lang/String;)V setClipboard
	a (JLjava/nio/ByteBuffer;Ljava/lang/String;)V setClipboard
	a (JLorg/lwjgl/glfw/GLFWErrorCallbackI;)Ljava/lang/String; getClipboard
cxd com/mojang/blaze3d/platform/DebugMemoryUntracker
	a UNTRACK
	a (J)V untrack
	a (Lorg/lwjgl/system/Pointer;)V untrack
cxe com/mojang/blaze3d/platform/DisplayData
	a width
	b height
	c fullscreenWidth
	d fullscreenHeight
	e isFullscreen
cxf com/mojang/blaze3d/platform/GlConst
	a GL_FRAMEBUFFER
	b GL_RENDERBUFFER
	c GL_COLOR_ATTACHMENT0
	d GL_DEPTH_ATTACHMENT
	e GL_FRAMEBUFFER_COMPLETE
	f GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
	g GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
	h GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER
	i GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER
cxg com/mojang/blaze3d/platform/GlDebug
	a BYTE_BUFFER
	b FLOAT_BUFFER
	c INT_BUFFER
	d LOGGER
	e NEWLINE_JOINER
	f STATEMENT_JOINER
	g BY_ID
	h DEBUG_LEVELS
	i DEBUG_LEVELS_ARB
	j SAVED_STATES
	a (I)Ljava/lang/String; printUnknownToken
	a (IIIIIJJ)V printDebugLog
	a (ILjava/lang/String;)V setup
	a (IZ)V enableDebugCallback
	b (I)Ljava/lang/String; sourceToString
	c (I)Ljava/lang/String; typeToString
	d (I)Ljava/lang/String; severityToString
cxh com/mojang/blaze3d/platform/GlStateManager
	a MATRIX_BUFFER
	b ALPHA_TEST
	c LIGHTING
	d LIGHT_ENABLE
	e COLOR_MATERIAL
	f BLEND
	g DEPTH
	h FOG
	i CULL
	j POLY_OFFSET
	k COLOR_LOGIC
	l TEX_GEN
	m CLEAR
	n STENCIL
	o FLOAT_ARG_BUFFER
	p DIFFUSE_LIGHT_0
	q DIFFUSE_LIGHT_1
	r activeTexture
	s TEXTURES
	t shadeModel
	u RESCALE_NORMAL
	v COLOR_MASK
	w COLOR
	x fboMode
	A ()V _disableFog
	A (I)V _enableVertexAttribArray
	B ()V _enableCull
	B (I)V _disableVertexAttribArray
	C ()V _disableCull
	C (I)Ljava/lang/String; _getString
	D ()V _enablePolygonOffset
	D (I)I _getInteger
	E ()V _disablePolygonOffset
	F ()V _enableLineOffset
	G ()V _disableLineOffset
	H ()V _enableColorLogicOp
	I ()V _disableColorLogicOp
	J ()V _enableTexture
	K ()V _disableTexture
	L ()I _genTexture
	M ()V _enableRescaleNormal
	N ()V _disableRescaleNormal
	O ()V _loadIdentity
	P ()V _pushMatrix
	Q ()V _popMatrix
	R ()V _clearCurrentColor
	S ()I _getError
	a ()V _pushLightingAttributes
	a (D)V _clearDepth
	a (DDD)V _scaled
	a (DDDDDD)V _ortho
	a (F)V _fogDensity
	a (FF)V _polygonOffset
	a (FFF)V _normal3f
	a (FFFF)V _blendColor
	a (I)V _enableLight
	a (IF)V _alphaFunc
	a (IFF)V _glMultiTexCoord2f
	a (II)V _colorMaterial
	a (IIF)V _texParameter
	a (III)V _texEnv
	a (IIII)V _blendFuncSeparate
	a (IIIII)V _glFramebufferTexture2D
	a (IIIIIIIIJ)V _texSubImage2D
	a (IIIIIIIILjava/nio/IntBuffer;)V _texImage2D
	a (IIIIIILjava/nio/ByteBuffer;)V _readPixels
	a (IIIIJ)V _getTexImage
	a (IIIJ)V _texCoordPointer
	a (IIIZIJ)V _vertexAttribPointer
	a (IIJ)V _normalPointer
	a (IILjava/nio/FloatBuffer;)V _light
	a (ILjava/lang/CharSequence;)V glShaderSource
	a (ILjava/nio/ByteBuffer;I)V _glBufferData
	a (ILjava/nio/FloatBuffer;)V _lightModel
	a (ILjava/nio/IntBuffer;)V _glUniform1
	a (IZ)V _clear
	a (IZLjava/nio/FloatBuffer;)V _glUniformMatrix2
	a (I[F)V _fog
	a (Lb;)V setupLevelDiffuseLighting
	a (Lcxh$t;)V _enableTexGen
	a (Lcxh$t;I)V _texGenMode
	a (Lcxh$t;ILjava/nio/FloatBuffer;)V _texGenParam
	a (Ljava/nio/FloatBuffer;)V _multMatrix
	a (Lorg/lwjgl/opengl/GLCapabilities;)Ljava/lang/String; _init_fbo
	a (Z)V _depthMask
	a (ZZZZ)V _colorMask
	b ()V _pushTextureAttributes
	b (DDD)V _translated
	b (F)V _fogStart
	b (FFF)V _scalef
	b (FFFF)V _clearColor
	b (I)V _depthFunc
	b (IF)V _pixelTransfer
	b (II)V _blendFunc
	b (III)V _texParameter
	b (IIII)V _glRenderbufferStorage
	b (IIIJ)V _vertexPointer
	b (ILjava/lang/CharSequence;)I _glGetUniformLocation
	b (ILjava/nio/FloatBuffer;)V _glUniform1
	b (ILjava/nio/IntBuffer;)V _glUniform2
	b (IZLjava/nio/FloatBuffer;)V _glUniformMatrix3
	b (Lb;)V _multMatrix
	b (Lcxh$t;)V _disableTexGen
	c ()V _popAttributes
	c (F)V _fogEnd
	c (FFF)V _translatef
	c (FFFF)V _rotatef
	c (I)V _blendEquation
	c (II)I glGetProgrami
	c (III)I _getTexLevelParameter
	c (IIII)V _glFramebufferRenderbuffer
	c (IIIJ)V _colorPointer
	c (ILjava/lang/CharSequence;)I _glGetAttribLocation
	c (ILjava/nio/FloatBuffer;)V _glUniform2
	c (ILjava/nio/IntBuffer;)V _glUniform3
	c (IZLjava/nio/FloatBuffer;)V _glUniformMatrix4
	c (Lcxh$t;)Lcxh$u; getTexGen
	d ()V _disableAlphaTest
	d (F)V _lineWidth
	d (FFFF)V _color4f
	d (I)V glDeleteShader
	d (II)V glAttachShader
	d (III)V _stencilFunc
	d (IIII)V glBlendFuncSeparate
	d (ILjava/nio/FloatBuffer;)V _glUniform3
	d (ILjava/nio/IntBuffer;)V _glUniform4
	e ()V _enableAlphaTest
	e (FFFF)Ljava/nio/FloatBuffer; getBuffer
	e (I)I glCreateShader
	e (II)I glGetShaderi
	e (III)V _stencilOp
	e (IIII)V _viewport
	e (ILjava/nio/FloatBuffer;)V _glUniform4
	f ()V _enableLighting
	f (I)V glCompileShader
	f (II)V _glUniform1i
	f (III)V _drawArrays
	f (IIII)V color3arg
	f (ILjava/nio/FloatBuffer;)V _getMatrix
	g ()V _disableLighting
	g (I)V _glUseProgram
	g (II)V _glBindBuffer
	h ()V _enableColorMaterial
	h (I)V glDeleteProgram
	h (II)V _glBindFramebuffer
	i ()V _disableColorMaterial
	i (I)V glLinkProgram
	i (II)V _glBindRenderbuffer
	j ()V _disableDepthTest
	j (I)V _glDeleteBuffers
	j (II)Ljava/lang/String; glGetShaderInfoLog
	k ()V _enableDepthTest
	k (I)V _glDeleteRenderbuffers
	k (II)Ljava/lang/String; glGetProgramInfoLog
	l ()V _disableBlend
	l (I)V _glDeleteFramebuffers
	l (II)V setupOverlayColor
	m ()V _enableBlend
	m (I)I glCheckFramebufferStatus
	m (II)V _fogi
	n ()I glCreateProgram
	n (I)V glActiveTexture
	n (II)V _polygonMode
	o ()I _glGenBuffers
	o (I)V _glClientActiveTexture
	o (II)V _pixelStore
	p ()I glGenFramebuffers
	p (I)V _fogMode
	p (II)V color1arg
	q ()I glGenRenderbuffers
	q (I)V _logicOp
	q (II)V alpha1arg
	r ()V setupOutline
	r (I)V _activeTexture
	s ()V teardownOutline
	s (I)V _deleteTexture
	t ()V teardownOverlayColor
	t (I)V _bindTexture
	u ()V setupGuiFlatDiffuseLighting
	u (I)V _shadeModel
	v ()V setupGui3DDiffuseLighting
	v (I)V _stencilMask
	w ()V setupEndPortalTexGen
	w (I)V _clearStencil
	x ()V clearTexGen
	x (I)V _matrixMode
	y ()V mulTextureByProjModelView
	y (I)V _enableClientState
	z ()V _enableFog
	z (I)V _disableClientState
cxh$a com/mojang/blaze3d/platform/GlStateManager$AlphaState
	a mode
	b func
	c reference
cxh$b com/mojang/blaze3d/platform/GlStateManager$BlendState
	a mode
	b srcRgb
	c dstRgb
	d srcAlpha
	e dstAlpha
cxh$c com/mojang/blaze3d/platform/GlStateManager$BooleanState
	a state
	b enabled
	a ()V disable
	a (Z)V setEnabled
	b ()V enable
cxh$d com/mojang/blaze3d/platform/GlStateManager$ClearState
	a depth
	b color
	c stencil
cxh$e com/mojang/blaze3d/platform/GlStateManager$Color
	a r
	b g
	c b
	d a
cxh$f com/mojang/blaze3d/platform/GlStateManager$ColorLogicState
	a enable
	b op
cxh$g com/mojang/blaze3d/platform/GlStateManager$ColorMask
	a red
	b green
	c blue
	d alpha
cxh$h com/mojang/blaze3d/platform/GlStateManager$ColorMaterialState
	a enable
	b face
	c mode
cxh$i com/mojang/blaze3d/platform/GlStateManager$CullState
	a enable
	b mode
cxh$j com/mojang/blaze3d/platform/GlStateManager$DepthState
	a mode
	b mask
	c func
cxh$k com/mojang/blaze3d/platform/GlStateManager$DestFactor
	a CONSTANT_ALPHA
	b CONSTANT_COLOR
	c DST_ALPHA
	d DST_COLOR
	e ONE
	f ONE_MINUS_CONSTANT_ALPHA
	g ONE_MINUS_CONSTANT_COLOR
	h ONE_MINUS_DST_ALPHA
	i ONE_MINUS_DST_COLOR
	j ONE_MINUS_SRC_ALPHA
	k ONE_MINUS_SRC_COLOR
	l SRC_ALPHA
	m SRC_COLOR
	n ZERO
	o value
	p $VALUES
cxh$l com/mojang/blaze3d/platform/GlStateManager$FboMode
	a BASE
	b ARB
	c EXT
	d $VALUES
cxh$m com/mojang/blaze3d/platform/GlStateManager$FogMode
	a LINEAR
	b EXP
	c EXP2
	d value
	e $VALUES
cxh$n com/mojang/blaze3d/platform/GlStateManager$FogState
	a enable
	b mode
	c density
	d start
	e end
cxh$o com/mojang/blaze3d/platform/GlStateManager$LogicOp
	a AND
	b AND_INVERTED
	c AND_REVERSE
	d CLEAR
	e COPY
	f COPY_INVERTED
	g EQUIV
	h INVERT
	i NAND
	j NOOP
	k NOR
	l OR
	m OR_INVERTED
	n OR_REVERSE
	o SET
	p XOR
	q value
	r $VALUES
cxh$p com/mojang/blaze3d/platform/GlStateManager$PolygonOffsetState
	a fill
	b line
	c factor
	d units
cxh$q com/mojang/blaze3d/platform/GlStateManager$SourceFactor
	a CONSTANT_ALPHA
	b CONSTANT_COLOR
	c DST_ALPHA
	d DST_COLOR
	e ONE
	f ONE_MINUS_CONSTANT_ALPHA
	g ONE_MINUS_CONSTANT_COLOR
	h ONE_MINUS_DST_ALPHA
	i ONE_MINUS_DST_COLOR
	j ONE_MINUS_SRC_ALPHA
	k ONE_MINUS_SRC_COLOR
	l SRC_ALPHA
	m SRC_ALPHA_SATURATE
	n SRC_COLOR
	o ZERO
	p value
	q $VALUES
cxh$r com/mojang/blaze3d/platform/GlStateManager$StencilFunc
	a func
	b ref
	c mask
cxh$s com/mojang/blaze3d/platform/GlStateManager$StencilState
	a func
	b mask
	c fail
	d zfail
	e zpass
cxh$t com/mojang/blaze3d/platform/GlStateManager$TexGen
	a S
	b T
	c R
	d Q
	e $VALUES
cxh$u com/mojang/blaze3d/platform/GlStateManager$TexGenCoord
	a enable
	b coord
	c mode
cxh$v com/mojang/blaze3d/platform/GlStateManager$TexGenState
	a s
	b t
	c r
	d q
cxh$w com/mojang/blaze3d/platform/GlStateManager$TextureState
	a enable
	b binding
cxh$x com/mojang/blaze3d/platform/GlStateManager$Viewport
	a INSTANCE
	b x
	c y
	d width
	e height
	f $VALUES
cxi com/mojang/blaze3d/platform/GlUtil
	a ()Ljava/lang/String; getVendor
	a (I)Ljava/nio/ByteBuffer; allocateMemory
	a (Lcxr;)V populateSnooperWithOpenGL
	a (Ljava/nio/Buffer;)V freeMemory
	b ()Ljava/lang/String; getCpuInfo
	c ()Ljava/lang/String; getRenderer
	d ()Ljava/lang/String; getOpenGLVersion
cxj com/mojang/blaze3d/platform/InputConstants
	a UNKNOWN
	b glfwRawMouseMotionSupported
	c GLFW_RAW_MOUSE_MOTION
	a ()Z isRawMouseInputSupported
	a (I)Ljava/lang/String; translateKeyCode
	a (II)Lcxj$a; getKey
	a (JI)Z isKeyDown
	a (JIDD)V grabOrReleaseMouse
	a (JLorg/lwjgl/glfw/GLFWCursorPosCallbackI;Lorg/lwjgl/glfw/GLFWMouseButtonCallbackI;Lorg/lwjgl/glfw/GLFWScrollCallbackI;)V setupMouseCallbacks
	a (JLorg/lwjgl/glfw/GLFWKeyCallbackI;Lorg/lwjgl/glfw/GLFWCharModsCallbackI;)V setupKeyboardCallbacks
	a (JZ)V updateRawMouseInput
	a (Ljava/lang/String;)Lcxj$a; getKey
	b (I)Ljava/lang/String; translateScanCode
cxj$a com/mojang/blaze3d/platform/InputConstants$Key
	a name
	b type
	c value
	d NAME_MAP
	a ()Lcxj$b; getType
	b ()I getValue
	c ()Ljava/lang/String; getName
cxj$b com/mojang/blaze3d/platform/InputConstants$Type
	a KEYSYM
	b SCANCODE
	c MOUSE
	d MOUSE_BUTTON_NAMES
	e map
	f defaultPrefix
	g $VALUES
	a ()Ljava/lang/String; getDefaultPrefix
	a (I)Lcxj$a; getOrCreate
	a (Lcxj$b;Ljava/lang/String;I)V addKey
cxk com/mojang/blaze3d/platform/Lighting
	a ()V turnBackOn
	a (Lb;)V setupLevel
	b ()V turnOff
	c ()V setupForFlatItems
	d ()V setupFor3DItems
cxl com/mojang/blaze3d/platform/MemoryTracker
	a (I)Ljava/nio/ByteBuffer; createByteBuffer
	b (I)Ljava/nio/FloatBuffer; createFloatBuffer
cxm com/mojang/blaze3d/platform/Monitor
	a monitor
	b videoModes
	c currentMode
	d x
	e y
	a ()V refreshVideoModes
	a (I)Lcxt; getMode
	a (Lcxt;)I getVideoModeIndex
	a (Ljava/util/Optional;)Lcxt; getPreferredVidMode
	b ()Lcxt; getCurrentMode
	c ()I getX
	d ()I getY
	e ()I getModeCount
	f ()J getMonitor
cxn com/mojang/blaze3d/platform/MonitorCreator
cxo com/mojang/blaze3d/platform/NativeImage
	a LOGGER
	b OPEN_OPTIONS
	c format
	d width
	e height
	f useStbFree
	g pixels
	h size
	a ()I getWidth
	a (I)I getA
	a (II)I getPixelRGBA
	a (III)V setPixelRGBA
	a (IIII)I combine
	a (IIIII)V fillRect
	a (IIIIIIIZZ)V upload
	a (IIIIIIIZZZZ)V upload
	a (IIIIIIZZ)V copyRect
	a (IIIILcxo;)V resizeSubRectTo
	a (IIIZ)V upload
	a (IZ)V downloadTexture
	a (Lcxo$a;Ljava/io/InputStream;)Lcxo; read
	a (Lcxo$a;Ljava/nio/ByteBuffer;)Lcxo; read
	a (Lcxo;)V copyFrom
	a (Ljava/io/File;)V writeToFile
	a (Ljava/io/InputStream;)Lcxo; read
	a (Ljava/lang/String;)Lcxo; fromBase64
	a (Ljava/nio/ByteBuffer;)Lcxo; read
	a (Ljava/nio/channels/WritableByteChannel;)Z writeToChannel
	a (Ljava/nio/file/Path;)V writeToFile
	a (Lorg/lwjgl/stb/STBTTFontinfo;IIIFFFFII)V copyFromFont
	a (Z)V setClamp
	a (ZZ)V setFilter
	b ()I getHeight
	b (I)I getR
	b (II)B getLuminanceOrAlpha
	b (III)V blendPixel
	b (IIIIIIIZZZZ)V _upload
	c ()Lcxo$a; format
	c (I)I getG
	d ()[I makePixelArray
	d (I)I getB
	e ()[B asByteArray
	f ()V flipY
	g ()V untrack
	h ()V checkAllocated
cxo$a com/mojang/blaze3d/platform/NativeImage$Format
	a RGBA
	b RGB
	c LUMINANCE_ALPHA
	d LUMINANCE
	e components
	f glFormat
	g hasRed
	h hasGreen
	i hasBlue
	j hasLuminance
	k hasAlpha
	l redOffset
	m greenOffset
	n blueOffset
	o luminanceOffset
	p alphaOffset
	q supportedByStb
	r $VALUES
	a ()I components
	b ()V setPackPixelStoreState
	b (I)Lcxo$a; getStbFormat
	c ()V setUnpackPixelStoreState
	d ()I glFormat
	e ()Z hasAlpha
	f ()I alphaOffset
	g ()Z hasLuminanceOrAlpha
	h ()I luminanceOrAlphaOffset
	i ()Z supportedByStb
cxo$b com/mojang/blaze3d/platform/NativeImage$InternalGlFormat
	a RGBA
	b RGB
	c LUMINANCE_ALPHA
	d LUMINANCE
	e INTENSITY
	f glFormat
	g $VALUES
	a ()I glFormat
cxo$c com/mojang/blaze3d/platform/NativeImage$WriteCallback
	a output
	b exception
	a ()V throwIfException
cxp com/mojang/blaze3d/platform/PngInfo
	a width
	b height
	a (Ljava/io/InputStream;)Lcxp$a; createCallbacks
cxp$a com/mojang/blaze3d/platform/PngInfo$StbReader
	a closed
	a (I)V skip
	a (J)I eof
	a (JI)V skip
	a (JJI)I read
	b (JI)I read
cxp$b com/mojang/blaze3d/platform/PngInfo$StbReaderBufferedChannel
	b channel
	c readBufferAddress
	d bufferSize
	e read
	f consumed
	a (I)V skip
	b (I)V fillReadBuffer
	b (JI)I read
cxp$c com/mojang/blaze3d/platform/PngInfo$StbReaderSeekableByteChannel
	b channel
	a (I)V skip
	a (J)I eof
	b (JI)I read
cxq com/mojang/blaze3d/platform/ScreenManager
	a monitors
	b monitorCreator
	a ()V shutdown
	a (III)I clamp
	a (J)Lcxm; getMonitor
	a (JI)V onMonitorChange
	a (Lcxu;)Lcxm; findBestMonitor
cxr com/mojang/blaze3d/platform/SnooperAccess
cxs com/mojang/blaze3d/platform/TextureUtil
	a LOGGER
	a ()I generateTextureId
	a (I)V releaseTextureId
	a (III)V prepareImage
	a (IIII)V prepareImage
	a (Lcxo$b;III)V prepareImage
	a (Lcxo$b;IIII)V prepareImage
	a (Ljava/io/InputStream;)Ljava/nio/ByteBuffer; readResource
	a (Ljava/nio/IntBuffer;II)V initTexture
	b (I)V bind
	b (Ljava/io/InputStream;)Ljava/lang/String; readResourceAsString
cxt com/mojang/blaze3d/platform/VideoMode
	a width
	b height
	c redBits
	d greenBits
	e blueBits
	f refreshRate
	g PATTERN
	a ()I getWidth
	a (Ljava/lang/String;)Ljava/util/Optional; read
	b ()I getHeight
	c ()I getRedBits
	d ()I getGreenBits
	e ()I getBlueBits
	f ()I getRefreshRate
	g ()Ljava/lang/String; write
cxu com/mojang/blaze3d/platform/Window
	a LOGGER
	b defaultErrorCallback
	c eventHandler
	d screenManager
	e window
	f windowedX
	g windowedY
	h windowedWidth
	i windowedHeight
	j preferredFullscreenVideoMode
	k fullscreen
	l actuallyFullscreen
	m x
	n y
	o width
	p height
	q framebufferWidth
	r framebufferHeight
	s guiScaledWidth
	t guiScaledHeight
	u guiScale
	v errorSection
	w dirty
	x framerateLimit
	y vsync
	a ()I getRefreshRate
	a (D)V setGuiScale
	a (I)V setFramerateLimit
	a (IJ)V defaultErrorCallback
	a (IZ)I calculateScale
	a (JII)V onMove
	a (JZ)V onFocus
	a (Ljava/io/InputStream;Ljava/io/InputStream;)V setIcon
	a (Ljava/io/InputStream;Ljava/nio/IntBuffer;Ljava/nio/IntBuffer;Ljava/nio/IntBuffer;)Ljava/nio/ByteBuffer; readIconPixels
	a (Ljava/lang/String;)V setErrorSection
	a (Ljava/util/Optional;)V setPreferredFullscreenVideoMode
	a (Ljava/util/function/BiConsumer;)V checkGlfwError
	a (Z)V updateVsync
	b ()Z shouldClose
	b (I)V setWidth
	b (IJ)V bootCrash
	b (JII)V onFramebufferResize
	b (Z)V updateRawMouseInput
	c ()V setDefaultErrorCallback
	c (I)V setHeight
	c (JII)V onResize
	c (Z)V updateFullscreen
	d ()I getFramerateLimit
	e ()V updateDisplay
	f ()Ljava/util/Optional; getPreferredFullscreenVideoMode
	g ()V changeFullscreenVideoMode
	h ()V toggleFullScreen
	i ()J getWindow
	j ()Z isFullscreen
	k ()I getWidth
	l ()I getHeight
	m ()I getScreenWidth
	n ()I getScreenHeight
	o ()I getGuiScaledWidth
	p ()I getGuiScaledHeight
	q ()I getX
	r ()I getY
	s ()D getGuiScale
	t ()Lcxm; findBestMonitor
	u ()V setBootErrorCallback
	v ()V refreshFramebufferSize
	w ()V setMode
cxu$a com/mojang/blaze3d/platform/Window$WindowInitFailed
cxv com/mojang/blaze3d/platform/WindowEventHandler
	a ()V resizeDisplay
	a (Z)V setWindowActive
cxw com/mojang/blaze3d/shaders/AbstractUniform
	a (F)V set
	a (FF)V set
	a (FFF)V set
	a (FFFF)V set
	a (IIII)V setSafe
	a (Lb;)V set
	a ([F)V set
	b (FFFF)V setSafe
cxx com/mojang/blaze3d/shaders/BlendMode
	a lastApplied
	b srcColorFactor
	c srcAlphaFactor
	d dstColorFactor
	e dstAlphaFactor
	f blendFunc
	g separateBlend
	h opaque
	a ()V apply
	a (Ljava/lang/String;)I stringToBlendFunc
	b ()Z isOpaque
	b (Ljava/lang/String;)I stringToBlendFactor
cxy com/mojang/blaze3d/shaders/Effect
	a ()I getId
	b ()V markDirty
	c ()Lcxz; getVertexProgram
	d ()Lcxz; getFragmentProgram
cxz com/mojang/blaze3d/shaders/Program
	a type
	b name
	c id
	d references
	a ()V close
	a (Lcxy;)V attachToEffect
	a (Lcxz$a;Ljava/lang/String;Ljava/io/InputStream;)Lcxz; compileShader
	b ()Ljava/lang/String; getName
cxz$a com/mojang/blaze3d/shaders/Program$Type
	a VERTEX
	b FRAGMENT
	c name
	d extension
	e glType
	f programs
	g $VALUES
	a ()Ljava/lang/String; getName
	b ()Ljava/lang/String; getExtension
	c ()Ljava/util/Map; getPrograms
	d ()I getGlType
cy$a net/minecraft/commands/arguments/EntityArgument$Serializer
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	a (Lnet/minecraft/server/ArgumentEntity;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lnet/minecraft/server/ArgumentEntity;Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	a (Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/ArgumentEntity; deserializeFromNetwork
	b (Lnet/minecraft/server/PacketDataSerializer;)Lcom/mojang/brigadier/arguments/ArgumentType; deserializeFromNetwork
cya com/mojang/blaze3d/shaders/ProgramManager
	a LOGGER
	a ()I createProgram
	a (I)V glUseProgram
	a (Lcxy;)V releaseProgram
	b (Lcxy;)V linkProgram
cyb com/mojang/blaze3d/shaders/Uniform
	a LOGGER
	b location
	c count
	d type
	e intValues
	f floatValues
	g name
	h dirty
	i parent
	a ()Ljava/lang/String; getName
	a (F)V set
	a (FF)V set
	a (FFF)V set
	a (FFFF)V set
	a (I)V setLocation
	a (II)V uploadInteger
	a (IIII)V setSafe
	a (ILjava/lang/CharSequence;)I glGetUniformLocation
	a (Lb;)V set
	a (Ljava/lang/String;)I getTypeFromString
	a ([F)V set
	b ()V upload
	b (FFFF)V setSafe
	b (ILjava/lang/CharSequence;)I glGetAttribLocation
	c ()V markDirty
	d ()V uploadAsInteger
	e ()V uploadAsFloat
	f ()V uploadAsMatrix
cyc com/mojang/blaze3d/vertex/BreakingTextureGenerator
	g delegate
	h cameraInversePose
	i normalPose
	j x
	k y
	l z
	m overlayU
	n overlayV
	o lightCoords
	p nx
	q ny
	r nz
	a ()V endVertex
	a (DDD)Lcyl; vertex
	a (FF)Lcyl; uv
	a (FFF)Lcyl; normal
	a (II)Lcyl; overlayCoords
	a (IIII)Lcyl; color
	b ()V resetState
	b (II)Lcyl; uv2
cyd com/mojang/blaze3d/vertex/BufferBuilder
	g LOGGER
	h buffer
	i vertexCounts
	j lastRenderedCountIndex
	k totalRenderedBytes
	l nextElementByte
	m totalUploadedBytes
	n vertices
	o currentElement
	p elementIndex
	q mode
	r format
	s fastFormat
	t fullFormat
	u building
	a ()V endVertex
	a (FFFFFFFFFIIFFF)V vertex
	a (IB)V putByte
	a (IF)V putFloat
	a (IIII)Lcyl; color
	a (ILcym;)V begin
	a (IS)V putShort
	a (Lcyd$b;)V restoreState
	a (Lcym;)V switchFormat
	a (Ljava/nio/FloatBuffer;FFFII)F getQuadDistanceFromPlayer
	a (Ljava/nio/FloatBuffer;I)V limitToVertex
	b ()V ensureVertexCapacity
	b (FFF)V sortQuads
	c ()Lcyd$b; getState
	c (I)V ensureCapacity
	d ()V end
	d (I)I roundUp
	e ()V nextElement
	f ()Lcom/mojang/datafixers/util/Pair; popNextBuffer
	g ()V clear
	h ()V discard
	i ()Lcyn; currentElement
	j ()Z building
cyd$a com/mojang/blaze3d/vertex/BufferBuilder$DrawState
	a format
	b vertexCount
	c mode
	a ()Lcym; format
	b ()I vertexCount
	c ()I mode
cyd$b com/mojang/blaze3d/vertex/BufferBuilder$State
	a data
	b format
cye com/mojang/blaze3d/vertex/BufferUploader
	a (Lcyd;)V end
	a (Ljava/nio/ByteBuffer;ILcym;I)V _end
cyf com/mojang/blaze3d/vertex/BufferVertexConsumer
	a (DDD)Lcyl; vertex
	a (F)B normalIntValue
	a (FF)Lcyl; uv
	a (FFF)Lcyl; normal
	a (IB)V putByte
	a (IF)V putFloat
	a (II)Lcyl; overlayCoords
	a (IIII)Lcyl; color
	a (IS)V putShort
	a (SSI)Lcyl; uvShort
	b (II)Lcyl; uv2
	e ()V nextElement
	i ()Lcyn; currentElement
cyg com/mojang/blaze3d/vertex/DefaultVertexFormat
	a ELEMENT_POSITION
	b ELEMENT_COLOR
	c ELEMENT_UV0
	d ELEMENT_UV1
	e ELEMENT_UV2
	f ELEMENT_NORMAL
	g ELEMENT_PADDING
	h BLOCK
	i NEW_ENTITY
	j PARTICLE
	k POSITION
	l POSITION_COLOR
	m POSITION_COLOR_LIGHTMAP
	n POSITION_TEX
	o POSITION_COLOR_TEX
	p POSITION_TEX_COLOR
	q POSITION_COLOR_TEX_LIGHTMAP
	r POSITION_TEX_LIGHTMAP_COLOR
	s POSITION_TEX_COLOR_NORMAL
cyh com/mojang/blaze3d/vertex/DefaultedVertexConsumer
	a defaultColorSet
	b defaultR
	c defaultG
	d defaultB
	e defaultA
	b (IIII)V defaultColor
	k ()V unsetDefaultColor
cyi com/mojang/blaze3d/vertex/PoseStack
	a poseStack
	a ()V pushPose
	a (DDD)V translate
	a (FFF)V scale
	a (Lnet/minecraft/server/Quaternion;)V mulPose
	b ()V popPose
	c ()Lcyi$a; last
	d ()Z clear
cyi$a com/mojang/blaze3d/vertex/PoseStack$Pose
	a pose
	b normal
	a ()Lb; pose
	b ()La; normal
cyj com/mojang/blaze3d/vertex/Tesselator
	a builder
	b INSTANCE
	a ()Lcyj; getInstance
	b ()V end
	c ()Lcyd; getBuilder
cyk com/mojang/blaze3d/vertex/VertexBuffer
	a id
	b format
	c vertexCount
	a ()V bind
	a (Lb;I)V draw
	a (Lcyd;)V upload
	b ()V unbind
	b (Lcyd;)Ljava/util/concurrent/CompletableFuture; uploadLater
	c (Lcyd;)V upload_
cyl com/mojang/blaze3d/vertex/VertexConsumer
	f LOGGER
	a ()V endVertex
	a (DDD)Lcyl; vertex
	a (FF)Lcyl; uv
	a (FFF)Lcyl; normal
	a (FFFF)Lcyl; color
	a (FFFFFFFFFIIFFF)V vertex
	a (I)Lcyl; uv2
	a (II)Lcyl; overlayCoords
	a (IIII)Lcyl; color
	a (La;FFF)Lcyl; normal
	a (Lb;FFF)Lcyl; vertex
	a (Lcyi$a;Ldrk;FFFII)V putBulkData
	a (Lcyi$a;Ldrk;[FFFF[IIZ)V putBulkData
	b (I)Lcyl; overlayCoords
	b (II)Lcyl; uv2
	b (IIII)V defaultColor
	k ()V unsetDefaultColor
cym com/mojang/blaze3d/vertex/VertexFormat
	a elements
	b offsets
	c vertexSize
	a ()I getIntegerSize
	a (J)V setupBufferState
	b ()I getVertexSize
	c ()Lcom/google/common/collect/ImmutableList; getElements
	d ()V clearBufferState
cyn com/mojang/blaze3d/vertex/VertexFormatElement
	a LOGGER
	b type
	c usage
	d index
	e count
	f byteSize
	a ()Lcyn$a; getType
	a (ILcyn$b;)Z supportsUsage
	a (JI)V setupBufferState
	b ()Lcyn$b; getUsage
	c ()I getCount
	d ()I getIndex
	e ()I getByteSize
	f ()Z isPosition
	g ()V clearBufferState
cyn$a com/mojang/blaze3d/vertex/VertexFormatElement$Type
	a FLOAT
	b UBYTE
	c BYTE
	d USHORT
	e SHORT
	f UINT
	g INT
	h size
	i name
	j glType
	k $VALUES
	a ()I getSize
	b ()Ljava/lang/String; getName
	c ()I getGlType
cyn$b com/mojang/blaze3d/vertex/VertexFormatElement$Usage
	a POSITION
	b NORMAL
	c COLOR
	d UV
	e PADDING
	f GENERIC
	g name
	h setupState
	i clearState
	j $VALUES
	a ()Ljava/lang/String; getName
	a (I)V clearBufferState
	a (IIIJI)V setupBufferState
cyn$b$a com/mojang/blaze3d/vertex/VertexFormatElement$Usage$SetupState
cyo com/mojang/blaze3d/vertex/VertexMultiConsumer
	a (Lcyl;Lcyl;)Lcyl; create
cyo$a com/mojang/blaze3d/vertex/VertexMultiConsumer$Double
	a first
	b second
	a ()V endVertex
	a (DDD)Lcyl; vertex
	a (FF)Lcyl; uv
	a (FFF)Lcyl; normal
	a (FFFFFFFFFIIFFF)V vertex
	a (II)Lcyl; overlayCoords
	a (IIII)Lcyl; color
	b (II)Lcyl; uv2
	b (IIII)V defaultColor
	k ()V unsetDefaultColor
cyp com/mojang/math/Vector3d
	a x
	b y
	c z
cyq com/mojang/realmsclient/KeyCombo
	a chars
	b matchIndex
	c onCompletion
	a ()V reset
	a (C)Z keyPressed
cyr com/mojang/realmsclient/RealmsMainScreen
	A createdTrial
	B showingPopup
	C hasUnreadNews
	D newsLink
	E carouselIndex
	F carouselTick
	G hasSwitchedCarouselImage
	H realmsGenericErrorScreen
	I regionsPinged
	J keyCombos
	K clicks
	L connectLock
	M expiredHover
	N showPopupButton
	O pendingInvitesButton
	P newsButton
	Q createTrialButton
	R buyARealmButton
	S closeButton
	a LOGGER
	b overrideConfigure
	c inviteNarrationLimiter
	d dontSetConnectedToRealms
	e teaserImages
	f realmsDataFetcher
	g lastScrollYPosition
	h lastScreen
	i realmSelectionList
	j selectedServerId
	k playButton
	l backButton
	m renewButton
	n configureButton
	o leaveButton
	p toolTip
	q realmsServers
	r numberOfPendingInvites
	s animTick
	t hasParentalConsent
	u checkedParentalConsent
	v checkedClientCompatability
	w hasFetchedServers
	x popupOpenedByUser
	y justClosedPopup
	z trialsAvailable
	A ()V onClosePopup
	B ()I popupX0
	C ()I popupY0
	D ()V renderLocal
	E ()V renderStage
	a ()Z shouldShowMessageInList
	a (DD)Z isOutsidePopup
	a (II)V drawRealmsLogo
	a (IIII)V drawExpired
	a (IIIII)V drawExpiring
	a (IIIIZ)V renderMoreInfo
	a (IIIIZZ)V drawInvitationPendingIcon
	a (IIZIIZZ)V renderNews
	a (J)Lcom/mojang/realmsclient/dto/RealmsServer; findServer
	a (Lcom/mojang/realmsclient/dto/RealmsServer;)V updateButtonStates
	a (Lcom/mojang/realmsclient/dto/RealmsServer;Lnet/minecraft/realms/RealmsScreen;)V play
	a (Ljava/lang/String;)V browseURL
	a (Ljava/lang/String;II)V renderMousehoverTooltip
	a (Lnet/minecraft/server/IResourceManager;)V updateTeaserImages
	a (Z)V setCreatedTrial
	b ()Z shouldShowPopup
	b (DD)Z inPendingInvitationArea
	b (II)V drawPopup
	b (IIII)V drawOpen
	b (Lcom/mojang/realmsclient/dto/RealmsServer;)Z shouldPlayButtonBeActive
	b (Lcom/mojang/realmsclient/dto/RealmsServer;Lnet/minecraft/realms/RealmsScreen;)V connectToServer
	c ()V addButtons
	c (IIII)V drawClose
	c (Lcom/mojang/realmsclient/dto/RealmsServer;)Z shouldRenewButtonBeActive
	d ()V postInit
	d (IIII)V drawLeave
	d (Lcom/mojang/realmsclient/dto/RealmsServer;)Z shouldConfigureButtonBeVisible
	e ()V removeSelection
	e (IIII)V drawConfigure
	e (Lcom/mojang/realmsclient/dto/RealmsServer;)Z shouldLeaveButtonBeVisible
	f ()Lcyr; newScreen
	f (Lcom/mojang/realmsclient/dto/RealmsServer;)V configureClicked
	g ()V closePopup
	g (Lcom/mojang/realmsclient/dto/RealmsServer;)V leaveClicked
	h (Lcom/mojang/realmsclient/dto/RealmsServer;)Z isSelfOwnedServer
	i (Lcom/mojang/realmsclient/dto/RealmsServer;)Z isSelfOwnedNonExpiredServer
	l ()Z hasParentalConsent
	m ()Z shouldShowPopupButton
	n ()V pingRegions
	o ()Ljava/util/List; getOwnedNonExpiredWorldIds
	p ()V onPlay
	q ()V onRenew
	r ()V createTrial
	s ()V checkClientCompatability
	t ()V checkUnreadNews
	u ()V checkParentalConsent
	v ()V switchToStage
	w ()V switchToLocal
	x ()V switchToProd
	y ()V stopRealmsFetcher
	z ()V saveListScrollPosition
cyr$a com/mojang/realmsclient/RealmsMainScreen$CloseButton
cyr$b com/mojang/realmsclient/RealmsMainScreen$NewsButton
cyr$c com/mojang/realmsclient/RealmsMainScreen$PendingInvitesButton
cyr$d com/mojang/realmsclient/RealmsMainScreen$RealmSelectionList
cyr$e com/mojang/realmsclient/RealmsMainScreen$RealmSelectionListEntry
	a mServerData
	a (Lcom/mojang/realmsclient/dto/RealmsServer;IIII)V renderMcoServerItem
	b (Lcom/mojang/realmsclient/dto/RealmsServer;IIII)V renderLegacy
cyr$f com/mojang/realmsclient/RealmsMainScreen$RealmSelectionListTrialEntry
	a (IIIII)V renderTrialItem
cyr$g com/mojang/realmsclient/RealmsMainScreen$ShowPopupButton
cys com/mojang/realmsclient/client/FileDownload
	a LOGGER
	b cancelled
	c finished
	d error
	e extracting
	f tempFile
	g resourcePackPath
	h request
	i currentThread
	j requestConfig
	k INVALID_FILE_NAMES
	a ()V cancel
	a (Lcom/mojang/realmsclient/dto/WorldDownload;Ljava/lang/String;Lczt$a;Lnet/minecraft/realms/RealmsAnvilLevelStorageSource;)V download
	a (Ljava/lang/String;)J contentLength
	a (Ljava/lang/String;Ljava/io/File;Lnet/minecraft/realms/RealmsAnvilLevelStorageSource;)V untarGzipArchive
	b ()Z isFinished
	b (Ljava/lang/String;)Ljava/lang/String; findAvailableFolderName
	c ()Z isError
	d ()Z isExtracting
cys$a com/mojang/realmsclient/client/FileDownload$DownloadCountingOutputStream
	b listener
	a (Ljava/awt/event/ActionListener;)V setListener
cys$b com/mojang/realmsclient/client/FileDownload$ProgressListener
	b worldName
	c tempFile
	d levelStorageSource
	e downloadStatus
	f worldDownload
cys$c com/mojang/realmsclient/client/FileDownload$ResourcePackProgressListener
	b tempFile
	c downloadStatus
	d worldDownload
cyt com/mojang/realmsclient/client/FileUpload
	a LOGGER
	b file
	c worldId
	d slotId
	e uploadInfo
	f sessionId
	g username
	h clientVersion
	i uploadStatus
	j cancelled
	k uploadTask
	l requestConfig
	a ()V cancel
	a (I)Ldan; requestUpload
	a (JI)Z shouldRetry
	a (Ljava/util/function/Consumer;)V upload
	a (Lorg/apache/http/HttpResponse;)J getRetryDelaySeconds
	a (Lorg/apache/http/HttpResponse;Ldan$a;)V handleResponse
	a (Lorg/apache/http/client/methods/HttpPost;)V setupRequest
	a (Lorg/apache/http/client/methods/HttpPost;Lorg/apache/http/impl/client/CloseableHttpClient;)V cleanup
	b ()Z isFinished
	b (JI)Ldan; retryUploadAfter
cyt$a com/mojang/realmsclient/client/FileUpload$CustomInputStreamEntity
	a length
	b content
	c uploadStatus
cyu com/mojang/realmsclient/client/Ping
	a ()Ljava/util/List; pingAllRegions
	a (Ljava/lang/String;)I ping
	a (Ljava/net/Socket;)V close
	a ([Lcyu$a;)Ljava/util/List; ping
	b ()J now
cyu$a com/mojang/realmsclient/client/Ping$Region
	a US_EAST_1
	b US_WEST_2
	c US_WEST_1
	d EU_WEST_1
	e AP_SOUTHEAST_1
	f AP_SOUTHEAST_2
	g AP_NORTHEAST_1
	h SA_EAST_1
	i name
	j endpoint
	k $VALUES
cyv com/mojang/realmsclient/client/RealmsClient
	a currentEnvironment
	b initialized
	c LOGGER
	d sessionId
	e username
	f gson
	a ()Lcyv; createRealmsClient
	a (IILcom/mojang/realmsclient/dto/RealmsServer$c;)Lcom/mojang/realmsclient/dto/WorldTemplatePaginatedList; fetchWorldTemplates
	a (J)Lcom/mojang/realmsclient/dto/RealmsServer; getOwnWorld
	a (JI)Z switchSlot
	a (JILcom/mojang/realmsclient/dto/RealmsWorldOptions;)V updateSlot
	a (JLjava/lang/String;)V uninvite
	a (JLjava/lang/String;Ljava/lang/Integer;Z)Ljava/lang/Boolean; resetWorldWithSeed
	a (JLjava/lang/String;Ljava/lang/String;)V initializeWorld
	a (Lcom/mojang/realmsclient/dto/PingResult;)V sendPingResults
	a (Lcyy;)Ljava/lang/String; execute
	a (Ljava/lang/String;)V acceptInvitation
	a (Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsServer; createTrial
	b ()V switchToStage
	b (J)Lcom/mojang/realmsclient/dto/RealmsServerAddress; join
	b (JI)Lcom/mojang/realmsclient/dto/WorldDownload; download
	b (JLjava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsServer; invite
	b (JLjava/lang/String;Ljava/lang/String;)V update
	b (Ljava/lang/String;)V rejectInvitation
	b (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; url
	c ()V switchToProd
	c (J)V uninviteMyselfFrom
	c (JLjava/lang/String;)V restoreWorld
	c (Ljava/lang/String;)Ljava/lang/String; url
	d ()V switchToLocal
	d (J)Lcom/mojang/realmsclient/dto/BackupList; backupsFor
	d (JLjava/lang/String;)Ljava/lang/Boolean; putIntoMinigameMode
	e ()Lcom/mojang/realmsclient/dto/RealmsServerList; listWorlds
	e (J)Ljava/lang/Boolean; open
	e (JLjava/lang/String;)Lcom/mojang/realmsclient/dto/Ops; op
	f ()Lcom/mojang/realmsclient/dto/RealmsServerPlayerLists; getLiveStats
	f (J)Ljava/lang/Boolean; close
	f (JLjava/lang/String;)Lcom/mojang/realmsclient/dto/Ops; deop
	g ()Ljava/lang/Boolean; mcoEnabled
	g (J)Lcom/mojang/realmsclient/dto/Subscription; subscriptionFor
	g (JLjava/lang/String;)Ljava/lang/Boolean; resetWorldWithTemplate
	h ()Ljava/lang/Boolean; stageAvailable
	h (J)V deleteWorld
	h (JLjava/lang/String;)Lcom/mojang/realmsclient/dto/UploadInfo; upload
	i ()Lcyv$a; clientCompatible
	j ()I pendingInvitesCount
	k ()Lcom/mojang/realmsclient/dto/PendingInvitesList; pendingInvites
	l ()V agreeToTos
	m ()Lcom/mojang/realmsclient/dto/RealmsNews; getNews
	n ()Ljava/lang/Boolean; trialAvailable
cyv$a com/mojang/realmsclient/client/RealmsClient$CompatibleVersionResponse
	a COMPATIBLE
	b OUTDATED
	c OTHER
	d $VALUES
cyv$b com/mojang/realmsclient/client/RealmsClient$Environment
	a PRODUCTION
	b STAGE
	c LOCAL
	d baseUrl
	e protocol
	f $VALUES
cyw com/mojang/realmsclient/client/RealmsClientConfig
	a proxy
	a ()Ljava/net/Proxy; getProxy
	a (Ljava/net/Proxy;)V setProxy
cyx com/mojang/realmsclient/client/RealmsError
	a LOGGER
	b errorMessage
	c errorCode
	a ()Ljava/lang/String; getErrorMessage
	b ()I getErrorCode
cyy com/mojang/realmsclient/client/Request
	a connection
	b url
	c connected
	a ()I getRetryAfterHeader
	a (Ljava/io/InputStream;)Ljava/lang/String; read
	a (Ljava/lang/String;)Lcyy; get
	a (Ljava/lang/String;II)Lcyy; get
	a (Ljava/lang/String;Ljava/lang/String;)V cookie
	a (Ljava/lang/String;Ljava/lang/String;II)Lcyy; post
	a (Ljava/net/HttpURLConnection;)I getRetryAfterHeader
	a (Ljava/net/HttpURLConnection;Ljava/lang/String;)Ljava/lang/String; getHeader
	a (Ljava/net/HttpURLConnection;Ljava/lang/String;Ljava/lang/String;)V cookie
	b ()I responseCode
	b (Ljava/lang/String;)Lcyy; delete
	b (Ljava/lang/String;Ljava/lang/String;)Lcyy; post
	b (Ljava/lang/String;Ljava/lang/String;II)Lcyy; put
	c ()Ljava/lang/String; text
	c (Ljava/lang/String;)Ljava/lang/String; getHeader
	c (Ljava/lang/String;Ljava/lang/String;)Lcyy; put
	d ()Lcyy; connect
	e ()Lcyy; doConnect
	f ()V dispose
cyy$a com/mojang/realmsclient/client/Request$Delete
	e ()Lcyy; doConnect
	f ()Lcyy$a; doConnect
cyy$b com/mojang/realmsclient/client/Request$Get
	e ()Lcyy; doConnect
	f ()Lcyy$b; doConnect
cyy$c com/mojang/realmsclient/client/Request$Post
	c content
	e ()Lcyy; doConnect
	f ()Lcyy$c; doConnect
cyy$d com/mojang/realmsclient/client/Request$Put
	c content
	e ()Lcyy; doConnect
	f ()Lcyy$d; doConnect
cyz com/mojang/realmsclient/client/UploadStatus
	a bytesWritten
	b totalBytes
cza com/mojang/realmsclient/dto/ValueObject
czb com/mojang/realmsclient/exception/RealmsDefaultUncaughtExceptionHandler
	a logger
czc com/mojang/realmsclient/exception/RealmsHttpException
czd com/mojang/realmsclient/exception/RealmsServiceException
	a httpResultCode
	b httpResponseContent
	c errorCode
	d errorMsg
cze com/mojang/realmsclient/exception/RetryCallException
	e delaySeconds
czf com/mojang/realmsclient/gui/ChatFormatting
	A isFormat
	B toString
	C $VALUES
	a BLACK
	b DARK_BLUE
	c DARK_GREEN
	d DARK_AQUA
	e DARK_RED
	f DARK_PURPLE
	g GOLD
	h GRAY
	i DARK_GRAY
	j BLUE
	k GREEN
	l AQUA
	m RED
	n LIGHT_PURPLE
	o YELLOW
	p WHITE
	q OBFUSCATED
	r BOLD
	s STRIKETHROUGH
	t UNDERLINE
	u ITALIC
	v RESET
	w FORMATTING_BY_CHAR
	x FORMATTING_BY_NAME
	y STRIP_FORMATTING_PATTERN
	z code
	a ()C getChar
	b ()Ljava/lang/String; getName
czg com/mojang/realmsclient/gui/LongRunningTask
	a longRunningMcoTaskScreen
	a ()Z aborted
	a (Lczx;)V setScreen
	a (Ljava/lang/String;)V error
	b ()V tick
	b (Ljava/lang/String;)V setTitle
	c ()V init
	d ()V abortTask
czh com/mojang/realmsclient/gui/RealmsConstants
	a (I)I row
czi com/mojang/realmsclient/gui/RealmsDataFetcher
	a LOGGER
	b scheduler
	c stopped
	d serverListUpdateTask
	e pendingInviteUpdateTask
	f trialAvailabilityTask
	g liveStatsTask
	h unreadNewsTask
	i removedServers
	j servers
	k livestats
	l pendingInvitesCount
	m trialAvailable
	n hasUnreadNews
	o newsLink
	p serverListScheduledFuture
	q pendingInviteScheduledFuture
	r trialAvailableScheduledFuture
	s liveStatsScheduledFuture
	t unreadNewsScheduledFuture
	u fetchStatus
	a ()Z isStopped
	a (Lcom/mojang/realmsclient/dto/RealmsServer;)V removeItem
	a (Lczi$d;)Z isFetchedSinceLastTry
	a (Ljava/util/List;)V initWithSpecificTaskList
	b ()V init
	b (Ljava/util/List;)V setServers
	c ()V markClean
	c (Ljava/util/List;)V sort
	d ()V forceUpdate
	e ()Ljava/util/List; getServers
	f ()I getPendingInvitesCount
	g ()Z isTrialAvailable
	h ()Lcom/mojang/realmsclient/dto/RealmsServerPlayerLists; getLivestats
	i ()Z hasUnreadNews
	j ()Ljava/lang/String; newsLink
	k ()V stop
	m ()V scheduleTasks
	n ()V cancelTasks
	o ()Z isActive
czi$a com/mojang/realmsclient/gui/RealmsDataFetcher$LiveStatsTask
	a ()V getLiveStats
czi$b com/mojang/realmsclient/gui/RealmsDataFetcher$PendingInviteUpdateTask
	a ()V updatePendingInvites
czi$c com/mojang/realmsclient/gui/RealmsDataFetcher$ServerListUpdateTask
	a ()V updateServersList
czi$d com/mojang/realmsclient/gui/RealmsDataFetcher$Task
	a SERVER_LIST
	b PENDING_INVITE
	c TRIAL_AVAILABLE
	d LIVE_STATS
	e UNREAD_NEWS
	f $VALUES
czi$e com/mojang/realmsclient/gui/RealmsDataFetcher$TrialAvailabilityTask
	a ()V getTrialAvailable
czi$f com/mojang/realmsclient/gui/RealmsDataFetcher$UnreadNewsTask
	a ()V getUnreadNews
czj com/mojang/realmsclient/gui/RealmsWorldSlotButton
	a serverDataProvider
	b toolTipSetter
	c listener
	d slotIndex
	e animTick
	f state
	a (IIIIZLjava/lang/String;IJLjava/lang/String;ZZLczj$a;Ljava/lang/String;)V drawSlotFrame
czj$a com/mojang/realmsclient/gui/RealmsWorldSlotButton$Action
	a NOTHING
	b SWITCH_SLOT
	c JOIN
	d $VALUES
czj$b com/mojang/realmsclient/gui/RealmsWorldSlotButton$Listener
	a (ILczj$a;ZZ)V onSlotClick
czj$c com/mojang/realmsclient/gui/RealmsWorldSlotButton$State
	a isCurrentlyActiveSlot
	b slotName
	c imageId
	d image
	e empty
	f minigame
	g action
	h actionPrompt
czk com/mojang/realmsclient/gui/RowButton
	a width
	b height
	c xOffset
	d yOffset
	a ()I getRight
	a (I)V onClick
	a (IIII)V drawForRowAt
	a (IIZ)V draw
	a (Ljava/util/List;Lnet/minecraft/realms/RealmsObjectSelectionList;IIII)V drawButtonsInRow
	a (Lnet/minecraft/realms/RealmsObjectSelectionList;Lnet/minecraft/realms/RealmListEntry;Ljava/util/List;IDD)V rowButtonMouseClicked
	b ()I getBottom
czl com/mojang/realmsclient/gui/screens/RealmsBackupInfoScreen
	a difficulties
	b gameModes
	c lastScreen
	d BUTTON_BACK_ID
	e backup
	f keys
	g backupInfoList
	a (Ljava/lang/String;)Ljava/lang/String; gameDifficultyMetadata
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; checkForSpecificMetadata
	b (Ljava/lang/String;)Ljava/lang/String; gameModeMetadata
czl$a com/mojang/realmsclient/gui/screens/RealmsBackupInfoScreen$BackupInfoList
czm com/mojang/realmsclient/gui/screens/RealmsBackupScreen
	a LOGGER
	b lastScrollPosition
	c lastScreen
	d backups
	e toolTip
	f backupObjectSelectionList
	g selectedBackup
	h slotId
	i downloadButton
	j restoreButton
	k changesButton
	l noBackups
	m serverData
	n titleLabel
	a (Lcom/mojang/realmsclient/dto/Backup;Ljava/lang/String;)V addToChangeList
	a (Ljava/lang/String;II)V renderMousehoverTooltip
	b ()V generateChangeList
	b (I)V restoreClicked
	c ()V postInit
	d ()V updateButtonStates
	e ()Z shouldChangesButtonBeVisible
	f ()Z shouldRestoreButtonBeVisible
	g ()V downloadClicked
	h ()V downloadWorldData
	i ()V restore
czm$a com/mojang/realmsclient/gui/screens/RealmsBackupScreen$BackupObjectSelectionList
	a (I)V selectInviteListItem
	a (Lcom/mojang/realmsclient/dto/Backup;)V addEntry
czm$b com/mojang/realmsclient/gui/screens/RealmsBackupScreen$BackupObjectSelectionListEntry
	a mBackup
	a (IIII)V drawRestore
	a (Lcom/mojang/realmsclient/dto/Backup;IIII)V renderBackupItem
	a (Ljava/util/Date;)Ljava/lang/String; getMediumDatePresentation
	b (IIII)V drawInfo
czn com/mojang/realmsclient/gui/screens/RealmsBrokenWorldScreen
	a LOGGER
	b lastScreen
	c mainScreen
	d serverData
	e serverId
	f title
	g message
	h left_x
	i right_x
	j default_button_width
	k default_button_offset
	l playButtonIds
	m resetButtonIds
	n downloadButtonIds
	o downloadConfirmationIds
	p slotsThatHasBeenDownloaded
	q animTick
	a ()V addButtons
	a (I)I getFramePositionX
	a (IIIIZLjava/lang/String;IJLjava/lang/String;Z)V drawSlotFrame
	a (J)V fetchServerData
	a (Ljava/lang/String;)V setTitle
	b (I)V downloadWorld
	c (I)V switchSlot
	d ()V backButtonClicked
	e ()Z isMinigame
czn$a com/mojang/realmsclient/gui/screens/RealmsBrokenWorldScreen$DownloadButton
czn$b com/mojang/realmsclient/gui/screens/RealmsBrokenWorldScreen$PlayButton
czo com/mojang/realmsclient/gui/screens/RealmsClientOutdatedScreen
	a lastScreen
	b outdated
czp com/mojang/realmsclient/gui/screens/RealmsConfigureWorldScreen
	a LOGGER
	b toolTip
	c lastScreen
	d serverData
	e serverId
	f left_x
	g right_x
	h default_button_width
	i default_button_offset
	j playersButton
	k settingsButton
	l subscriptionButton
	m optionsButton
	n backupButton
	o resetWorldButton
	p switchMinigameButton
	q stateChanged
	r animTick
	s clicks
	a ()V stateChanged
	a (I)V addSlotButton
	a (II)I centerButton
	a (IIII)V drawServerStatus
	a (IIIII)V drawExpiring
	a (ILcom/mojang/realmsclient/dto/RealmsServer;)V switchToFullSlot
	a (ILczj$a;ZZ)V onSlotClick
	a (J)V fetchServerData
	a (JI)V switchSlot
	a (Lcom/mojang/realmsclient/dto/RealmsServer;)V joinRealm
	a (Lcom/mojang/realmsclient/dto/RealmsWorldOptions;)V saveSlotSettings
	a (Lcom/mojang/realmsclient/dto/WorldTemplate;)V callback
	a (Ljava/lang/Object;)V callback
	a (Ljava/lang/String;II)V renderMousehoverTooltip
	a (Ljava/lang/String;Ljava/lang/String;)V saveSettings
	a (Lnet/minecraft/realms/RealmsButton;)V hide
	a (Lnet/minecraft/realms/RealmsScreen;)V closeTheWorld
	a (ZLnet/minecraft/realms/RealmsScreen;)V openTheWorld
	b ()Lczp; getNewScreen
	b (I)I leftButton
	b (IIII)V drawExpired
	b (ILcom/mojang/realmsclient/dto/RealmsServer;)V switchToEmptySlot
	b (Lcom/mojang/realmsclient/dto/WorldTemplate;)V switchMinigame
	b (Lnet/minecraft/realms/RealmsButton;)V show
	c ()V backButtonClicked
	c (I)I frame
	c (IIII)V drawOpen
	d ()V disableButtons
	d (IIII)V drawClose
	e ()V switchToMinigame
	f ()Z isMinigame
	g ()V hideRegularButtons
	h ()V showRegularButtons
	i ()V hideMinigameButtons
	j ()V showMinigameButtons
czq com/mojang/realmsclient/gui/screens/RealmsConfirmScreen
	a parent
	b title1
	c yesButton
	d noButton
	e id
	f title2
	g delayTicker
czr com/mojang/realmsclient/gui/screens/RealmsCreateRealmScreen
	a server
	b lastScreen
	c nameBox
	d descriptionBox
	e createButton
	f createRealmLabel
	a ()V createWorld
	b ()Z valid
czs com/mojang/realmsclient/gui/screens/RealmsCreateTrialScreen
	a lastScreen
	b nameBox
	c descriptionBox
	d initialized
	e createButton
	a ()V createWorld
	b ()Z valid
czt com/mojang/realmsclient/gui/screens/RealmsDownloadLatestWorldScreen
	a LOGGER
	b lastScreen
	c worldDownload
	d downloadTitle
	e narrationRateLimiter
	f cancelButton
	g worldName
	h downloadStatus
	i errorMessage
	j status
	k progress
	l cancelled
	m showDots
	n finished
	o extracting
	p previousWrittenBytes
	q previousTimeSnapshot
	r bytesPersSecond
	s animTick
	t DOTS
	u dotIndex
	v WARNING_ID
	w confirmationId
	x checked
	y downloadLock
	a ()V checkDownloadSize
	a (I)V setConfirmationId
	a (J)Ljava/lang/String; humanReadableSpeed
	a (Ljava/lang/String;)J getContentLength
	b ()V backButtonClicked
	b (J)Ljava/lang/String; humanReadableSize
	c ()V drawDots
	c (J)V drawDownloadSpeed0
	d ()V drawProgressBar
	e ()V drawDownloadSpeed
	f ()V downloadSave
	g ()V downloadCancelled
czt$a com/mojang/realmsclient/gui/screens/RealmsDownloadLatestWorldScreen$DownloadStatus
	a bytesWritten
	b totalBytes
czu com/mojang/realmsclient/gui/screens/RealmsGenericErrorScreen
	a nextScreen
	b line1
	c line2
	a (Lczd;)V errorMessage
	a (Ljava/lang/String;)V errorMessage
	a (Ljava/lang/String;Ljava/lang/String;)V errorMessage
czv com/mojang/realmsclient/gui/screens/RealmsInviteScreen
	a LOGGER
	b profileName
	c serverData
	d configureScreen
	e lastScreen
	f BUTTON_INVITE_ID
	g BUTTON_CANCEL_ID
	h inviteButton
	i PROFILENAME_EDIT_BOX
	j errorMsg
	k showError
	a ()V onInvite
	a (Ljava/lang/String;)V showError
czw com/mojang/realmsclient/gui/screens/RealmsLongConfirmationScreen
	a listener
	b yesButton
	c noButton
	d id
	e type
	f line2
	g line3
	h okButton
	i yesNoQuestion
czw$a com/mojang/realmsclient/gui/screens/RealmsLongConfirmationScreen$Type
	a Warning
	b Info
	c colorCode
	d text
	e $VALUES
czx com/mojang/realmsclient/gui/screens/RealmsLongRunningMcoTaskScreen
	a symbols
	b LOGGER
	c BUTTON_CANCEL_ID
	d BUTTON_BACK_ID
	e lastScreen
	f taskThread
	g title
	h error
	i errorMessage
	j aborted
	k animTicks
	l task
	m buttonLength
	a ()V start
	a (Ljava/lang/String;)V error
	b ()Z aborted
	b (Ljava/lang/String;)V setTitle
	c ()V cancelOrBackButtonClicked
czy com/mojang/realmsclient/gui/screens/RealmsNotificationsScreen
	a realmsDataFetcher
	b numberOfPendingInvites
	c checkedMcoAvailability
	d trialAvailable
	e validClient
	f hasUnreadNews
	g tasks
	a ()V checkIfMcoEnabled
	a (II)V drawIcons
czz com/mojang/realmsclient/gui/screens/RealmsParentalConsentScreen
	a nextScreen
d com/mojang/math/Transformation
	a matrix
	b decomposed
	c translation
	d leftRotation
	e scale
	f rightRotation
	g IDENTITY
	a ()Ld; identity
	a (Lb;)Lcom/mojang/datafixers/util/Pair; toAffine
	a (Ld;)Ld; compose
	a (Lnet/minecraft/server/Vector3fa;Lnet/minecraft/server/Quaternion;Lnet/minecraft/server/Vector3fa;Lnet/minecraft/server/Quaternion;)Lb; compose
	b ()Ld; inverse
	c ()Lb; getMatrix
	d ()Lnet/minecraft/server/Quaternion; getLeftRotation
	e ()V ensureDecomposed
da$a net/minecraft/commands/arguments/GameProfileArgument$Result
da$b net/minecraft/commands/arguments/GameProfileArgument$SelectorResult
	a selector
daa com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen
	a LOGGER
	b lastScreen
	c toolTip
	d loaded
	e pendingInvitationSelectionList
	f titleLabel
	g selectedInvite
	h acceptButton
	i rejectButton
	a (I)V updateList
	a (Lcom/mojang/realmsclient/dto/PendingInvite;)Ljava/lang/String; getAge
	a (Ljava/lang/String;II)V renderMousehoverTooltip
	b ()V updateButtonStates
	b (I)V reject
	c (I)V accept
	d (I)Z shouldAcceptAndRejectButtonBeVisible
daa$a com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$PendingInvitationSelectionList
	a (I)V removeAtIndex
	b (I)V selectInviteListItem
daa$b com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$PendingInvitationSelectionListEntry
	a pendingInvite
	c rowButtons
	a (Lcom/mojang/realmsclient/dto/PendingInvite;IIII)V renderPendingInvitationItem
daa$b$a com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$PendingInvitationSelectionListEntry$AcceptRowButton
	a (I)V onClick
	a (IIZ)V draw
daa$b$b com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$PendingInvitationSelectionListEntry$RejectRowButton
	a (I)V onClick
	a (IIZ)V draw
dab com/mojang/realmsclient/gui/screens/RealmsPlayerScreen
	a LOGGER
	b toolTip
	c lastScreen
	d serverData
	e invitedObjectSelectionList
	f column1_x
	g column_width
	h column2_x
	i removeButton
	j opdeopButton
	k selectedInvitedIndex
	l selectedInvited
	m player
	n stateChanged
	o titleLabel
	a ()V updateButtonStates
	a (I)Z shouldRemoveAndOpdeopButtonBeVisible
	a (IIII)V drawRemoveIcon
	a (Lcom/mojang/realmsclient/dto/Ops;)V updateOps
	a (Ljava/lang/String;II)V renderMousehoverTooltip
	b ()V backButtonClicked
	b (I)V op
	b (IIII)V drawOpped
	c (I)V deop
	c (IIII)V drawNormal
	d (I)V uninvite
	e (I)V deleteFromInvitedList
dab$a com/mojang/realmsclient/gui/screens/RealmsPlayerScreen$InvitedObjectSelectionList
	a (I)V selectInviteListItem
	a (Lcom/mojang/realmsclient/dto/PlayerInfo;)V addEntry
dab$b com/mojang/realmsclient/gui/screens/RealmsPlayerScreen$InvitedObjectSelectionListEntry
	a mPlayerInfo
	a (Lcom/mojang/realmsclient/dto/PlayerInfo;IIII)V renderInvitedItem
dac com/mojang/realmsclient/gui/screens/RealmsResetNormalWorldScreen
	a levelTypes
	b lastScreen
	c titleLabel
	d seedEdit
	e generateStructures
	f levelTypeIndex
	g BUTTON_CANCEL_ID
	h BUTTON_RESET_ID
	i SEED_EDIT_BOX
	j resetButton
	k levelTypeButton
	l generateStructuresButton
	m buttonTitle
	a ()V onReset
	b ()Ljava/lang/String; levelTypeTitle
	c ()Ljava/lang/String; generateStructuresTitle
dad com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen
	a slot
	b LOGGER
	c lastScreen
	d serverData
	e returnScreen
	f titleLabel
	g subtitleLabel
	h title
	i subtitle
	j buttonTitle
	k subtitleColor
	l BUTTON_CANCEL_ID
	m BUTTON_FRAME_START
	n templates
	o adventuremaps
	p experiences
	q inspirations
	r typeToReset
	s worldInfoToReset
	t worldTemplateToReset
	u resetTitle
	v confirmationId
	a (I)V setConfirmationId
	a (IILjava/lang/String;JLjava/lang/String;Ldad$b;ZZ)V drawFrame
	a (Lcom/mojang/realmsclient/dto/WorldTemplate;)V callback
	a (Ldad$c;)V resetWorld
	a (Ljava/lang/Object;)V callback
	a (Ljava/lang/String;)V setResetTitle
	a (Lnet/minecraft/realms/RealmsScreen;)V switchSlot
	b ()V switchSlot
	b (I)V setSlot
	b (Lcom/mojang/realmsclient/dto/WorldTemplate;)V resetWorldWithTemplate
	b (Ldad$c;)V triggerResetWorld
	c (I)I frame
dad$a com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen$FrameButton
	a imageId
	c image
	d resetType
dad$b com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen$ResetType
	a NONE
	b GENERATE
	c UPLOAD
	d ADVENTURE
	e SURVIVAL_SPAWN
	f EXPERIENCE
	g INSPIRATION
	h $VALUES
dad$c com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen$ResetWorldInfo
	a seed
	b levelType
	c generateStructures
dae com/mojang/realmsclient/gui/screens/RealmsResourcePackScreen
	a LOGGER
	b lastScreen
	c serverAddress
	d connectLock
daf com/mojang/realmsclient/gui/screens/RealmsScreenWithCallback
	a (Ljava/lang/Object;)V callback
dag com/mojang/realmsclient/gui/screens/RealmsSelectFileToUploadScreen
	a LOGGER
	b lastScreen
	c worldId
	d slotId
	e uploadButton
	f DATE_FORMAT
	g levelList
	h selectedWorld
	i worldSelectionList
	j worldLang
	k conversionLang
	l gameModesLang
	m titleLabel
	n subtitleLabel
	o noWorldsLabel
	a ()V loadLevelList
	a (Lnet/minecraft/realms/RealmsLevelSummary;)Ljava/lang/String; gameModeName
	b ()V upload
	b (Lnet/minecraft/realms/RealmsLevelSummary;)Ljava/lang/String; formatLastPlayed
dag$a com/mojang/realmsclient/gui/screens/RealmsSelectFileToUploadScreen$WorldListEntry
	a levelSummary
	a (Lnet/minecraft/realms/RealmsLevelSummary;IIIILnet/minecraft/realms/Tezzelator;II)V renderItem
dag$b com/mojang/realmsclient/gui/screens/RealmsSelectFileToUploadScreen$WorldSelectionList
	a (Lnet/minecraft/realms/RealmsLevelSummary;)V addEntry
dah com/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen
	a LOGGER
	b lastScreen
	c worldTemplateObjectSelectionList
	d selectedTemplate
	e title
	f selectButton
	g trailerButton
	h publisherButton
	i toolTip
	j currentLink
	k worldType
	l clicks
	m warning
	n warningURL
	o displayWarning
	p hoverWarning
	q noTemplatesMessage
	a (IILjava/util/List;)V renderMultilineMessage
	a (Lcom/mojang/realmsclient/dto/WorldTemplatePaginatedList;)V fetchTemplatesAsync
	a (Lcom/mojang/realmsclient/dto/WorldTemplatePaginatedList;Lcyv;)Lcom/mojang/datafixers/util/Either; fetchTemplates
	a (Ljava/lang/String;)V setTitle
	a (Ljava/lang/String;II)V renderMousehoverTooltip
	b ()V updateButtonStates
	b (Ljava/lang/String;)V setWarning
	c ()Z shouldSelectButtonBeActive
	d ()Z shouldPublisherBeVisible
	e ()Lcom/mojang/realmsclient/dto/WorldTemplate; getSelectedTemplate
	f ()Z shouldTrailerBeVisible
	g ()V backButtonClicked
	h ()V selectTemplate
	i ()V onTrailer
	j ()V onPublish
dah$a com/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen$WorldTemplateObjectSelectionList
	a ()Z isEmpty
	a (I)Lcom/mojang/realmsclient/dto/WorldTemplate; get
	a (Lcom/mojang/realmsclient/dto/WorldTemplate;)V addEntry
	b ()Ljava/util/List; getTemplates
dah$b com/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen$WorldTemplateObjectSelectionListEntry
	a template
	a (IIIILcom/mojang/realmsclient/dto/WorldTemplate;)V drawImage
	a (IIIILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V drawIcons
	a (Lcom/mojang/realmsclient/dto/WorldTemplate;IIII)V renderWorldTemplateItem
dai com/mojang/realmsclient/gui/screens/RealmsSettingsScreen
	a configureWorldScreen
	b serverData
	c COMPONENT_WIDTH
	d doneButton
	e descEdit
	f nameEdit
	g titleLabel
	a ()V save
daj com/mojang/realmsclient/gui/screens/RealmsSlotOptionsScreen
	A forceGameModeButton
	B titleLabel
	C warningLabel
	a parent
	b difficulties
	c gameModes
	d gameModeHints
	e nameEdit
	f column1_x
	g column_width
	h column2_x
	i options
	j worldType
	k activeSlot
	l difficultyIndex
	m gameModeIndex
	n pvp
	o spawnNPCs
	p spawnAnimals
	q spawnMonsters
	r spawnProtection
	s commandBlocks
	t forceGameMode
	u pvpButton
	v spawnAnimalsButton
	w spawnMonstersButton
	x spawnNPCsButton
	y spawnProtectionButton
	z commandBlocksButton
	a ()V createDifficultyAndGameMode
	b ()Ljava/lang/String; difficultyTitle
	c ()Ljava/lang/String; gameModeTitle
	d ()Ljava/lang/String; pvpTitle
	e ()Ljava/lang/String; spawnAnimalsTitle
	f ()Ljava/lang/String; spawnMonstersTitle
	g ()Ljava/lang/String; spawnNPCsTitle
	h ()Ljava/lang/String; commandBlocksTitle
	i ()Ljava/lang/String; forceGameModeTitle
	j ()Ljava/lang/String; getSlotName
	k ()V saveSettings
daj$a com/mojang/realmsclient/gui/screens/RealmsSlotOptionsScreen$SettingsSlider
dak com/mojang/realmsclient/gui/screens/RealmsSubscriptionInfoScreen
	a LOGGER
	b lastScreen
	c serverData
	d mainScreen
	e BUTTON_BACK_ID
	f BUTTON_DELETE_ID
	g BUTTON_SUBSCRIPTION_ID
	h subscriptionTitle
	i subscriptionStartLabelText
	j timeLeftLabelText
	k daysLeftLabelText
	l daysLeft
	m startDate
	n type
	o PURCHASE_LINK
	a (I)Ljava/lang/String; daysLeftPresentation
	a (J)V getSubscription
	b (J)Ljava/lang/String; localPresentation
dal com/mojang/realmsclient/gui/screens/RealmsTermsScreen
	a LOGGER
	b lastScreen
	c mainScreen
	d realmsServer
	e agreeButton
	f onLink
	g realmsToSUrl
	a ()V agreedToTos
dam com/mojang/realmsclient/gui/screens/RealmsUploadScreen
	a LOGGER
	b lastScreen
	c selectedLevel
	d worldId
	e slotId
	f uploadStatus
	g narrationRateLimiter
	h errorMessage
	i status
	j progress
	k cancelled
	l uploadFinished
	m showDots
	n uploadStarted
	o backButton
	p cancelButton
	q animTick
	r DOTS
	s dotIndex
	t previousWrittenBytes
	u previousTimeSnapshot
	v bytesPersSecond
	w uploadLock
	a ()V onBack
	a (J)Ljava/lang/String; humanReadableByteCount
	a (JLdam$a;)D convertToUnit
	a (Ljava/io/File;)Z verify
	a (Lorg/apache/commons/compress/archivers/tar/TarArchiveOutputStream;Ljava/lang/String;Ljava/lang/String;Z)V addFileToTarGz
	b ()V onCancel
	b (J)Ldam$a; getLargestUnit
	b (JLdam$a;)Ljava/lang/String; humanReadableSize
	b (Ljava/io/File;)Ljava/io/File; tarGzipArchive
	c ()V drawDots
	c (J)V drawUploadSpeed0
	d ()V drawProgressBar
	e ()V drawUploadSpeed
	f ()V upload
	g ()V uploadCancelled
dam$a com/mojang/realmsclient/gui/screens/RealmsUploadScreen$Unit
	a B
	b KB
	c MB
	d GB
	e $VALUES
dan com/mojang/realmsclient/gui/screens/UploadResult
	a statusCode
	b errorMessage
dan$a com/mojang/realmsclient/gui/screens/UploadResult$Builder
	a statusCode
	b errorMessage
	a ()Ldan; build
	a (I)Ldan$a; withStatusCode
	a (Ljava/lang/String;)Ldan$a; withErrorMessage
dao com/mojang/realmsclient/util/JsonUtils
	a (Ljava/lang/String;Lcom/google/gson/JsonObject;)Ljava/util/Date; getDateOr
	a (Ljava/lang/String;Lcom/google/gson/JsonObject;I)I getIntOr
	a (Ljava/lang/String;Lcom/google/gson/JsonObject;J)J getLongOr
	a (Ljava/lang/String;Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/String; getStringOr
	a (Ljava/lang/String;Lcom/google/gson/JsonObject;Z)Z getBooleanOr
dap com/mojang/realmsclient/util/RealmsPersistence
	a ()Ldap$a; readFile
	a (Ldap$a;)V writeFile
dap$a com/mojang/realmsclient/util/RealmsPersistence$RealmsPersistenceData
	a newsLink
	b hasUnreadNews
daq com/mojang/realmsclient/util/RealmsTasks
	a LOGGER
	b (I)V pause
daq$a com/mojang/realmsclient/util/RealmsTasks$CloseServerTask
	b serverData
	c configureScreen
daq$b com/mojang/realmsclient/util/RealmsTasks$DownloadTask
	b worldId
	c slot
	d lastScreen
	e downloadName
daq$c com/mojang/realmsclient/util/RealmsTasks$OpenServerTask
	b serverData
	c returnScreen
	d join
	e mainScreen
daq$d com/mojang/realmsclient/util/RealmsTasks$RealmsConnectTask
	b realmsConnect
	c a
	b ()V tick
	d ()V abortTask
daq$e com/mojang/realmsclient/util/RealmsTasks$RealmsGetServerDetailsTask
	b server
	c lastScreen
	d mainScreen
	e connectLock
	a (I)V sleep
daq$f com/mojang/realmsclient/util/RealmsTasks$ResettingWorldTask
	b seed
	c worldTemplate
	d levelType
	e generateStructures
	f serverId
	g lastScreen
	h confirmationId
	i title
	a (I)V setConfirmationId
	c (Ljava/lang/String;)V setResetTitle
daq$g com/mojang/realmsclient/util/RealmsTasks$RestoreTask
	b backup
	c worldId
	d lastScreen
daq$h com/mojang/realmsclient/util/RealmsTasks$SwitchMinigameTask
	b worldId
	c worldTemplate
	d lastScreen
daq$i com/mojang/realmsclient/util/RealmsTasks$SwitchSlotTask
	b worldId
	c slot
	d listener
	e confirmId
daq$j com/mojang/realmsclient/util/RealmsTasks$TrialCreationTask
	b name
	c motd
	d lastScreen
daq$k com/mojang/realmsclient/util/RealmsTasks$WorldCreationTask
	b name
	c motd
	d worldId
	e lastScreen
dar com/mojang/realmsclient/util/RealmsTextureManager
	a textures
	b skinFetchStatus
	c fetchedSkins
	d LOGGER
	a (Ljava/lang/String;)V bindFace
	a (Ljava/lang/String;Ljava/lang/Runnable;)V withBoundFace
	a (Ljava/lang/String;Ljava/lang/String;)V bindWorldTemplate
	a (Ljava/util/UUID;)V bindDefaultFace
	b (Ljava/lang/String;Ljava/lang/String;)I getTextureId
dar$a com/mojang/realmsclient/util/RealmsTextureManager$RealmsTexture
	a image
	b textureId
das com/mojang/realmsclient/util/RealmsUtil
	a gameProfileCache
	b authenticationService
	c sessionService
	a (Ljava/lang/Long;)Ljava/lang/String; convertToAgePresentation
	a (Ljava/lang/String;)Ljava/lang/String; uuidToName
	b (Ljava/lang/String;)Ljava/util/Map; getTextures
	c (Ljava/lang/String;)V browseTo
dat com/mojang/realmsclient/util/SkinProcessor
	a pixels
	b width
	c height
	a (IIII)V doLegacyTransparencyHack
	a (Ljava/awt/image/BufferedImage;)Ljava/awt/image/BufferedImage; process
	b (IIII)V setNoAlpha
dau com/mojang/realmsclient/util/TextRenderingUtils
	a (Ljava/lang/String;)Ljava/util/List; lineBreak
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/util/List; split
	a (Ljava/lang/String;Ljava/util/List;)Ljava/util/List; decompose
	a (Ljava/lang/String;[Ldau$b;)Ljava/util/List; decompose
	a (Ljava/util/List;Ljava/util/List;)Ljava/util/List; insertLinks
dau$a com/mojang/realmsclient/util/TextRenderingUtils$Line
	a segments
dau$b com/mojang/realmsclient/util/TextRenderingUtils$LineSegment
	a fullText
	b linkTitle
	c linkUrl
	a ()Ljava/lang/String; renderedText
	a (Ljava/lang/String;)Ldau$b; text
	a (Ljava/lang/String;Ljava/lang/String;)Ldau$b; link
	b ()Z isLink
	c ()Ljava/lang/String; getLinkUrl
dav com/mojang/realmsclient/util/UploadTokenCache
	a tokenCache
	a (J)Ljava/lang/String; get
	a (JLjava/lang/String;)V put
	b (J)V invalidate
daw net/minecraft/client/AmbientOcclusionStatus
	a OFF
	b MIN
	c MAX
	d BY_ID
	e id
	f key
	g $VALUES
	a ()I getId
	a (I)Ldaw; byId
	b ()Ljava/lang/String; getKey
dax net/minecraft/client/AttackIndicatorStatus
	a OFF
	b CROSSHAIR
	c HOTBAR
	d BY_ID
	e id
	f key
	g $VALUES
	a ()I getId
	a (I)Ldax; byId
	b ()Ljava/lang/String; getKey
day net/minecraft/client/BooleanOption
	S getter
	T setter
	a (Ldbp;)V toggle
	a (Ldbp;III)Ldcr; createButton
	a (Ldbp;Ljava/lang/String;)V set
	a (Ldbp;Z)V set
	b (Ldbp;)Z get
	c (Ldbp;)Ljava/lang/String; getMessage
daz net/minecraft/client/Camera
	a initialized
	b level
	c entity
	d position
	e blockPosition
	f forwards
	g up
	h left
	i xRot
	j yRot
	k rotation
	l detached
	m mirror
	n eyeHeight
	o eyeHeightOld
	a ()V tick
	a (D)D getMaxZoom
	a (DDD)V move
	a (FF)V setRotation
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/Entity;ZZF)V setup
	a (Lnet/minecraft/server/Vec3D;)V setPosition
	b ()Lnet/minecraft/server/Vec3D; getPosition
	b (DDD)V setPosition
	c ()Lnet/minecraft/server/BlockPosition; getBlockPosition
	d ()F getXRot
	e ()F getYRot
	f ()Lnet/minecraft/server/Quaternion; rotation
	g ()Lnet/minecraft/server/Entity; getEntity
	h ()Z isInitialized
	i ()Z isDetached
	j ()Z isMirror
	k ()Lnet/minecraft/server/Fluid; getFluidInCamera
	l ()Lnet/minecraft/server/Vector3fa; getLookVector
	m ()Lnet/minecraft/server/Vector3fa; getUpVector
	n ()Lnet/minecraft/server/Vector3fa; getLeftVector
	o ()V reset
dba net/minecraft/client/ClientRecipeBook
	k recipes
	l collectionsByTab
	m collections
	a (Ldbs;)Ljava/util/List; getCollection
	a (Ldbs;Ldiq;)V addToCollection
	b (Ldbs;)Ldiq; createCollection
	b (Lnet/minecraft/server/ContainerRecipeBook;)Ljava/util/List; getCategories
	g (Lnet/minecraft/server/IRecipe;)Ldbs; getCategory
	i ()V setupCollections
	j ()Ljava/util/List; getCollections
dbb net/minecraft/client/CloudStatus
	a OFF
	b FAST
	c FANCY
	d BY_ID
	e id
	f key
	g $VALUES
	a ()I getId
	a (I)Ldbb; byId
	b ()Ljava/lang/String; getKey
dbc net/minecraft/client/CycleOption
	S setter
	T toString
	a (Ldbp;I)V toggle
	a (Ldbp;III)Ldcr; createButton
	c (Ldbp;)Ljava/lang/String; getMessage
dbd net/minecraft/client/DebugQueryHandler
	a connection
	b transactionId
	c callback
	a (ILjava/util/function/Consumer;)V queryEntityTag
	a (ILnet/minecraft/server/NBTTagCompound;)Z handleResponse
	a (Ljava/util/function/Consumer;)I startTransaction
	a (Lnet/minecraft/server/BlockPosition;Ljava/util/function/Consumer;)V queryBlockEntityTag
dbe net/minecraft/client/FullscreenResolutionProgressOption
dbf net/minecraft/client/Game
	a minecraft
	b launcher
	c listener
	a ()V onStartGameSession
	b ()V onLeaveGameSession
dbf$a net/minecraft/client/Game$Metrics
	a min
	b max
	c average
	d samples
dbg net/minecraft/client/GuiMessage
	a addedTime
	b message
	c id
	a ()Lnet/minecraft/server/IChatBaseComponent; getMessage
	b ()I getAddedTime
	c ()I getId
dbh net/minecraft/client/HotbarManager
	a LOGGER
	b optionsFile
	c fixerUpper
	d hotbars
	e loaded
	a ()V save
	a (I)Ldqa; get
	b ()V load
dbi net/minecraft/client/KeyMapping
	a ALL
	b MAP
	c CATEGORIES
	d CATEGORY_SORT_ORDER
	e name
	f defaultKey
	g category
	h key
	i isDown
	j clickCount
	a ()V setAll
	a (I)Z matchesMouse
	a (II)Z matches
	a (Lcxj$a;)V click
	a (Lcxj$a;Z)V set
	a (Ldbi;)I compareTo
	a (Ljava/lang/String;)Ljava/util/function/Supplier; createNameSupplier
	a (Z)V setDown
	b ()V releaseAll
	b (Lcxj$a;)V setKey
	b (Ldbi;)Z same
	c ()V resetMapping
	d ()Z isDown
	e ()Ljava/lang/String; getCategory
	f ()Z consumeClick
	g ()Ljava/lang/String; getName
	h ()Lcxj$a; getDefaultKey
	i ()Z isUnbound
	j ()Ljava/lang/String; getTranslatedKeyMessage
	k ()Z isDefault
	l ()Ljava/lang/String; saveString
	m ()V release
dbj net/minecraft/client/KeyboardHandler
	a minecraft
	b sendRepeatsToGui
	c clipboardManager
	d debugCrashKeyTime
	e debugCrashKeyReportedTime
	f debugCrashKeyReportedCount
	g handledDebugKey
	a ()Ljava/lang/String; getClipboard
	a (I)Z handleChunkDebugKeys
	a (J)V setup
	a (JII)V charTyped
	a (JIIII)V keyPress
	a (Ljava/lang/String;)V setClipboard
	a (Ljava/lang/String;[Ljava/lang/Object;)V debugFeedbackTranslated
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/NBTTagCompound;)V copyCreateBlockCommand
	a (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/NBTTagCompound;)V copyCreateEntityCommand
	a (Z)V setSendRepeatsToGui
	a (ZZ)V copyRecreateCommand
	b ()V tick
	b (I)Z handleDebugKeys
	b (Ljava/lang/String;[Ljava/lang/Object;)V debugWarningTranslated
	c (Ljava/lang/String;[Ljava/lang/Object;)V debugFeedback
dbk net/minecraft/client/LogaritmicProgressOption
	a (D)D toPct
	b (D)D toValue
dbl net/minecraft/client/Minecraft
	A wireframe
	B chunkPath
	C chunkVisibility
	D smartCull
	E instance
	F LOGGER
	G RESOURCE_RELOAD_INITIAL_TASK
	H resourcePackDirectory
	I profileProperties
	J textureManager
	K fixerUpper
	L virtualScreen
	M window
	N timer
	O snooper
	P renderBuffers
	Q entityRenderDispatcher
	R itemRenderer
	S itemInHandRenderer
	T searchRegistry
	U user
	V progressListener
	W hotbarManager
	X launchedVersion
	Y versionType
	Z proxy
	a ON_OSX
	aA pendingConnection
	aB isLocalServer
	aC rightClickDelay
	aD pause
	aE pausePartialTick
	aF lastNanoTime
	aG lastTime
	aH frames
	aI connectedToRealms
	aJ gameThread
	aK running
	aL delayedCrash
	aM fps
	aN windowActive
	aO progressTasks
	aP pendingReload
	aQ debugPath
	aa levelSource
	ab is64bit
	ac demo
	ad profiler
	ae resourceManager
	af clientPackSource
	ag resourcePackRepository
	ah languageManager
	ai blockColors
	aj itemColors
	ak mainRenderTarget
	al soundManager
	am musicManager
	an fontManager
	ao splashManager
	ap minecraftSessionService
	aq skinManager
	ar modelManager
	as blockRenderer
	at paintingTextures
	au mobEffectTextures
	av toast
	aw game
	ax tutorial
	ay singleplayerServer
	az currentServer
	b DEFAULT_FONT
	c ALT_FONT
	d levelRenderer
	e particleEngine
	f font
	g gameRenderer
	h debugRenderer
	i gui
	j options
	k mouseHandler
	l keyboardHandler
	m gameDirectory
	n frameTimer
	o reserve
	p gameMode
	q level
	r player
	s cameraEntity
	t crosshairPickEntity
	u hitResult
	v missTime
	w noRender
	x screen
	y overlay
	z fpsString
	A ()Ledj; getSingleplayerServer
	B ()Lnet/minecraft/server/MojangStatisticsGenerator; getSnooper
	C ()Ldbx; getUser
	D ()Lcom/mojang/authlib/properties/PropertyMap; getProfileProperties
	E ()Ljava/net/Proxy; getProxy
	F ()Leah; getTextureManager
	G ()Lnet/minecraft/server/IResourceManager; getResourceManager
	H ()Lnet/minecraft/server/ResourcePackRepository; getResourcePackRepository
	I ()Leal; getClientPackSource
	J ()Ljava/io/File; getResourcePackDirectory
	K ()Lebc; getLanguageManager
	L ()Z is64Bit
	M ()Z isPaused
	N ()Ledw; getSoundManager
	O ()Ledr$a; getSituationalMusic
	P ()Lcom/mojang/authlib/minecraft/MinecraftSessionService; getMinecraftSessionService
	Q ()Leaw; getSkinManager
	R ()Lnet/minecraft/server/Entity; getCameraEntity
	S ()Ldrh; getBlockRenderer
	T ()Ldvc; getEntityRenderDispatcher
	U ()Ldvw; getItemRenderer
	V ()Z isSnooperEnabled
	W ()Ldqm; getItemInHandRenderer
	X ()I getAverageFps
	Y ()Lnet/minecraft/server/CircularTimer; getFrameTimer
	Z ()Z isConnectedToRealms
	a ()V resizeDisplay
	a (I)V debugFpsMeterKeyPress
	a (IJ)V onFullscreenError
	a (Ldfu;)V setOverlay
	a (Ldfz;)V setScreen
	a (Ldnl;)V setLevel
	a (Ldnr;)V setCurrentServer
	a (Lebc;Ljava/lang/String;Ldbp;Lnet/minecraft/server/CrashReport;)V fillReport
	a (Lede$a;)Ledb; getSearchTree
	a (Ljava/io/File;II)Lnet/minecraft/server/IChatBaseComponent; grabPanoramixScreenshot
	a (Ljava/io/File;IIII)Lnet/minecraft/server/IChatBaseComponent; grabHugeScreenshot
	a (Ljava/lang/String;Ljava/lang/String;Lnet/minecraft/server/WorldSettings;)V selectLevel
	a (Ljava/lang/String;ZLjava/util/function/Supplier;Lnet/minecraft/server/IResourcePack;Lnet/minecraft/server/ResourcePackInfo;Lnet/minecraft/server/ResourcePackLoader$Position;)Leaz; createClientPackAdapter
	a (Ljava/lang/Throwable;)V rollbackResourcePacks
	a (Lnet/minecraft/server/CrashReport;)V delayCrash
	a (Lnet/minecraft/server/Entity;)V setCameraEntity
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/TileEntity;)Lnet/minecraft/server/ItemStack; addCustomNbtData
	a (Lnet/minecraft/server/MinecraftKey;)Ljava/util/function/Function; getTextureAtlas
	a (Lnet/minecraft/server/MojangStatisticsGenerator;)V populateSnooper
	a (Z)V setWindowActive
	aA ()V selfTest
	aB ()I getFramerateLimit
	aC ()V renderFpsMeter
	aD ()V startAttack
	aE ()V startUseItem
	aF ()V handleKeybinds
	aG ()V pickBlock
	aH ()Ljava/lang/String; getCurrentSnooperAction
	aa ()Lcom/mojang/datafixers/DataFixer; getFixerUpper
	ab ()F getFrameTime
	ac ()F getDeltaFrameTime
	ad ()Ldbz; getBlockColors
	ae ()Z showOnlyReducedInfo
	af ()Lddz; getToasts
	ag ()Leeg; getTutorial
	ah ()Z isWindowActive
	ai ()Ldbh; getHotbarManager
	aj ()Lebx; getModelManager
	ak ()Lded; getFontManager
	al ()Leav; getPaintingTextures
	am ()Leat; getMobEffectTextures
	an ()Lnet/minecraft/server/GameProfilerFiller; getProfiler
	ao ()Ldbf; getGame
	ap ()Lxq; getProgressListener
	aq ()Leax; getSplashManager
	ar ()Ldfu; getOverlay
	as ()Z renderOnThread
	at ()Lcxu; getWindow
	au ()Ldqw; renderBuffers
	av ()V createSearchTrees
	aw ()Z checkIs64Bit
	ay ()Ljava/lang/Thread; getRunningThread
	az ()V startTimerHackThread
	b ()V run
	b (I)V updateMaxMipLevel
	b (Ldfz;)V clearLevel
	b (Ldnl;)V updateLevelInEngines
	b (Ljava/util/function/Supplier;)Ljava/util/function/Supplier; adaptV3
	b (Lnet/minecraft/server/CrashReport;)V crash
	b (Lnet/minecraft/server/MojangStatisticsGenerator;)V populateSnooperInitial
	b (Z)V pauseGame
	c ()Lcxb; getMainRenderTarget
	c (Ldfz;)V updateScreenAndTick
	c (Ljava/lang/Runnable;)Z shouldRun
	c (Ljava/util/function/Supplier;)Ljava/util/function/Supplier; adaptV4
	c (Lnet/minecraft/server/CrashReport;)Lnet/minecraft/server/CrashReport; fillReport
	c (Lnet/minecraft/server/MojangStatisticsGenerator;)V populateSnooperWithOpenGL
	c (Z)V setConnectedToRealms
	d ()Ljava/lang/String; getLaunchedVersion
	d (Ljava/lang/Runnable;)Ljava/lang/Runnable; wrapRunnable
	d (Z)V runTick
	e ()Ljava/lang/String; getVersionType
	e (Z)V continueAttack
	f ()Z isEnforceUnicode
	g ()Ljava/util/concurrent/CompletableFuture; reloadResourcePacks
	h ()Lnet/minecraft/server/Convertable; getLevelSource
	i ()V destroy
	j ()V emergencySave
	k ()V stop
	l ()Z isRunning
	m ()Ledr; getMusicManager
	n ()V tick
	o ()V clearLevel
	p ()Z isDemo
	q ()Ldnm; getConnection
	r ()Z renderNames
	s ()Z useFancyGraphics
	t ()Z useAmbientOcclusion
	u ()Ldbl; getInstance
	w ()Ljava/util/concurrent/CompletableFuture; delayTextureReload
	x ()Ldnr; getCurrentServer
	y ()Z isLocalServer
	z ()Z hasSingleplayerServer
dbm net/minecraft/client/MouseHandler
	a minecraft
	b isLeftPressed
	c isMiddlePressed
	d isRightPressed
	e xpos
	f ypos
	g fakeRightMouse
	h activeButton
	i ignoreFirstMove
	j clickDepth
	k mousePressedTime
	l smoothTurnX
	m smoothTurnY
	n accumulatedDX
	o accumulatedDY
	p accumulatedScroll
	q lastMouseEventTime
	r mouseGrabbed
	a ()V turnPlayer
	a (J)V setup
	a (JDD)V onScroll
	a (JIII)V onPress
	b ()Z isLeftPressed
	b (JDD)V onMove
	c ()Z isMiddlePressed
	d ()Z isRightPressed
	e ()D xpos
	f ()D ypos
	g ()V setIgnoreFirstMove
	h ()Z isMouseGrabbed
	i ()V grabMouse
	j ()V releaseMouse
dbn net/minecraft/client/NarratorStatus
	a OFF
	b ALL
	c CHAT
	d SYSTEM
	e BY_ID
	f id
	g key
	h $VALUES
	a ()I getId
	a (I)Ldbn; byId
	b ()Ljava/lang/String; getKey
dbo net/minecraft/client/Option
	A AUTO_SUGGESTIONS
	B CHAT_COLOR
	C CHAT_LINKS
	D CHAT_LINKS_PROMPT
	E DISCRETE_MOUSE_SCROLL
	F ENABLE_VSYNC
	G ENTITY_SHADOWS
	H FORCE_UNICODE_FONT
	I INVERT_MOUSE
	J REALMS_NOTIFICATIONS
	K REDUCED_DEBUG_INFO
	L SHOW_SUBTITLES
	M SNOOPER_ENABLED
	N TOGGLE_CROUCH
	O TOGGLE_SPRINT
	P TOUCHSCREEN
	Q USE_FULLSCREEN
	R VIEW_BOBBING
	S captionId
	a BIOME_BLEND_RADIUS
	b CHAT_HEIGHT_FOCUSED
	c CHAT_HEIGHT_UNFOCUSED
	d CHAT_OPACITY
	e CHAT_SCALE
	f CHAT_WIDTH
	g FOV
	h FRAMERATE_LIMIT
	i GAMMA
	j MIPMAP_LEVELS
	k MOUSE_WHEEL_SENSITIVITY
	l RAW_MOUSE_INPUT
	m RENDER_DISTANCE
	n SENSITIVITY
	o TEXT_BACKGROUND_OPACITY
	p AMBIENT_OCCLUSION
	q ATTACK_INDICATOR
	r CHAT_VISIBILITY
	s GRAPHICS
	t GUI_SCALE
	u MAIN_HAND
	v NARRATOR
	w PARTICLES
	x RENDER_CLOUDS
	y TEXT_BACKGROUND
	z AUTO_JUMP
	a ()Ljava/lang/String; getCaption
	a (Ldbp;III)Ldcr; createButton
	c (Ldbp;)Ljava/lang/String; getMessage
dbp net/minecraft/client/Options
	A tutorialStep
	B biomeBlendRadius
	C mouseWheelSensitivity
	D rawMouseInput
	E glDebugVerbosity
	F autoJump
	G autoSuggestions
	H chatColors
	I chatLinks
	J chatLinksPrompt
	K enableVsync
	L entityShadows
	M forceUnicodeFont
	N invertYMouse
	O discreteMouseScroll
	P realmsNotifications
	Q reducedDebugInfo
	R snooperEnabled
	S showSubtitles
	T backgroundForChatOnly
	U touchscreen
	V fullscreen
	W bobView
	X toggleCrouch
	Y toggleSprint
	Z keyUp
	a sensitivity
	aA difficulty
	aB hideGui
	aC thirdPersonView
	aD renderDebug
	aE renderDebugCharts
	aF renderFpsChart
	aG lastMpIp
	aH smoothCamera
	aI fov
	aJ gamma
	aK guiScale
	aL particles
	aM narratorStatus
	aN languageCode
	aO LOGGER
	aP GSON
	aQ RESOURCE_PACK_TYPE
	aR OPTION_SPLITTER
	aS modelParts
	aT sourceVolumes
	aU optionsFile
	aa keyLeft
	ab keyDown
	ac keyRight
	ad keyJump
	ae keyShift
	af keySprint
	ag keyInventory
	ah keySwapHands
	ai keyDrop
	aj keyUse
	ak keyAttack
	al keyPickItem
	am keyChat
	an keyPlayerList
	ao keyCommand
	ap keyScreenshot
	aq keyTogglePerspective
	ar keySmoothCamera
	as keyFullscreen
	at keySpectatorOutlines
	au keyAdvancements
	av keyHotbarSlots
	aw keySaveHotbarActivator
	ax keyLoadHotbarActivator
	ay keyMappings
	az minecraft
	b renderDistance
	c framerateLimit
	d renderClouds
	e fancyGraphics
	f ambientOcclusion
	g resourcePacks
	h incompatibleResourcePacks
	i chatVisibility
	j chatOpacity
	k textBackgroundOpacity
	l fullscreenVideoModeString
	m hideServerAddress
	n advancedItemTooltips
	o pauseOnLostFocus
	p mainHand
	q overrideWidth
	r overrideHeight
	s heldItemTooltips
	t chatScale
	u chatWidth
	v chatHeightUnfocused
	w chatHeightFocused
	x mipmapLevels
	y useNativeTransport
	z attackIndicator
	a ()V load
	a (F)F getBackgroundOpacity
	a (I)I getBackgroundColor
	a (Layh;)V toggleModelPart
	a (Layh;Z)V setModelPart
	a (Ldbi;Lcxj$a;)V setKey
	a (Ljava/lang/String;)F readFloat
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; dataFix
	a (Lnet/minecraft/server/ResourcePackRepository;)V loadResourcePacks
	a (Lnet/minecraft/server/SoundCategory;)F getSoundSourceVolume
	a (Lnet/minecraft/server/SoundCategory;F)V setSoundCategoryVolume
	b ()V save
	b (F)I getBackgroundColor
	c ()V broadcastOptions
	d ()Ljava/util/Set; getModelParts
	e ()Ldbb; getCloudsType
	f ()Z useNativeTransport
dbq net/minecraft/client/ParticleStatus
	a ALL
	b DECREASED
	c MINIMAL
	d BY_ID
	e id
	f key
	g $VALUES
	a ()Ljava/lang/String; getKey
	a (I)Ldbq; byId
	b ()I getId
dbr net/minecraft/client/ProgressOption
	S steps
	T minValue
	U maxValue
	V getter
	W setter
	X toString
	a (D)D toPct
	a (F)V setMaxValue
	a (Ldbp;)D get
	a (Ldbp;D)V set
	a (Ldbp;III)Ldcr; createButton
	b ()D getMinValue
	b (D)D toValue
	c ()D getMaxValue
	c (D)D clamp
	c (Ldbp;)Ljava/lang/String; getMessage
dbs net/minecraft/client/RecipeBookCategories
	a SEARCH
	b BUILDING_BLOCKS
	c REDSTONE
	d EQUIPMENT
	e MISC
	f FURNACE_SEARCH
	g FURNACE_FOOD
	h FURNACE_BLOCKS
	i FURNACE_MISC
	j BLAST_FURNACE_SEARCH
	k BLAST_FURNACE_BLOCKS
	l BLAST_FURNACE_MISC
	m SMOKER_SEARCH
	n SMOKER_FOOD
	o STONECUTTER
	p CAMPFIRE
	q itemIcons
	r $VALUES
	a ()Ljava/util/List; getIconItems
dbt net/minecraft/client/Screenshot
	a LOGGER
	b DATE_FORMAT
	c rowHeight
	d outputStream
	e bytes
	f width
	g height
	h file
	a ()V saveRow
	a (IILcxb;)Lcxo; takeScreenshot
	a (Ljava/io/File;)Ljava/io/File; getFile
	a (Ljava/io/File;IILcxb;Ljava/util/function/Consumer;)V grab
	a (Ljava/io/File;Ljava/lang/String;IILcxb;Ljava/util/function/Consumer;)V grab
	a (Ljava/nio/ByteBuffer;IIII)V addRegion
	b ()Ljava/io/File; close
	b (Ljava/io/File;Ljava/lang/String;IILcxb;Ljava/util/function/Consumer;)V _grab
dbu net/minecraft/client/Session
	a players
	b isRemoteServer
	c difficulty
	d gameMode
	e id
dbv net/minecraft/client/Timer
	a ticks
	b partialTick
	c tickDelta
	d lastMs
	e msPerTick
	a (J)V advanceTime
dbw net/minecraft/client/ToggleKeyMapping
	a needsToggle
	a (Z)V setDown
dbx net/minecraft/client/User
	a name
	b uuid
	c accessToken
	d type
	a ()Ljava/lang/String; getSessionId
	b ()Ljava/lang/String; getUuid
	c ()Ljava/lang/String; getName
	d ()Ljava/lang/String; getAccessToken
	e ()Lcom/mojang/authlib/GameProfile; getGameProfile
	f ()Ldbx$a; getType
dbx$a net/minecraft/client/User$Type
	a LEGACY
	b MOJANG
	c BY_NAME
	d name
	e $VALUES
	a (Ljava/lang/String;)Ldbx$a; byName
dby net/minecraft/client/color/block/BlockColor
dbz net/minecraft/client/color/block/BlockColors
	a blockColors
	b coloringStates
	a ()Ldbz; createDefault
	a (Ldby;[Lnet/minecraft/server/Block;)V register
	a (Ljava/util/Set;[Lnet/minecraft/server/Block;)V addColoringStates
	a (Lnet/minecraft/server/Block;)Ljava/util/Set; getColoringProperties
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockLightAccess;Lnet/minecraft/server/BlockPosition;I)I getColor
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getColor
	a (Lnet/minecraft/server/IBlockState;[Lnet/minecraft/server/Block;)V addColoringState
dc$a net/minecraft/commands/arguments/MessageArgument$Message
	a text
	b parts
	a ()Ljava/lang/String; getText
	a (Lcom/mojang/brigadier/StringReader;Z)Ldc$a; parseText
	a (Lnet/minecraft/server/CommandListenerWrapper;Z)Lnet/minecraft/server/IChatBaseComponent; toComponent
	b ()[Ldc$b; getParts
dc$b net/minecraft/commands/arguments/MessageArgument$Part
	a start
	b end
	c selector
	a ()I getStart
	a (Lnet/minecraft/server/CommandListenerWrapper;)Lnet/minecraft/server/IChatBaseComponent; toComponent
	b ()I getEnd
	c ()Lnet/minecraft/server/EntitySelector; getSelector
dca net/minecraft/client/color/block/BlockTintCache
	a latestChunkOnThread
	b cache
	c lock
	a ()V invalidateAll
	a (II)V invalidateForChunk
	a (Lnet/minecraft/server/BlockPosition;Ljava/util/function/IntSupplier;)I getColor
	b (II)[I findOrCreateChunkCache
dca$a net/minecraft/client/color/block/BlockTintCache$LatestCacheInfo
	a x
	b z
	c cache
dcc net/minecraft/client/color/item/ItemColor
dcd net/minecraft/client/color/item/ItemColors
	a itemColors
	a (Ldbz;)Ldcd; createDefault
	a (Ldcc;[Lnet/minecraft/server/IMaterial;)V register
	a (Lnet/minecraft/server/ItemStack;I)I getColor
dcf net/minecraft/client/gui/Font
	a lineHeight
	b random
	c textureManager
	d fonts
	e bidirectional
	a ()Z isBidirectional
	a (C)F charWidth
	a (Ldeh;ZZFFFLb;Lcyl;FFFFI)V renderChar
	a (Ljava/lang/String;)Ljava/lang/String; bidirectionalShaping
	a (Ljava/lang/String;FFI)I drawShadow
	a (Ljava/lang/String;FFILb;Z)I drawInternal
	a (Ljava/lang/String;FFIZLb;Ldqq;ZII)I drawInBatch
	a (Ljava/lang/String;I)Ljava/lang/String; substrByWidth
	a (Ljava/lang/String;IIII)V drawWordWrap
	a (Ljava/lang/String;IIZ)I getWordPosition
	a (Ljava/lang/String;IZ)Ljava/lang/String; substrByWidth
	a (Ljava/util/List;)V reload
	a (Z)V setBidirectional
	b (Ljava/lang/String;)I width
	b (Ljava/lang/String;FFI)I draw
	b (Ljava/lang/String;FFIZLb;Ldqq;ZII)I drawInternal
	b (Ljava/lang/String;I)I wordWrapHeight
	b (Ljava/lang/String;IIII)V drawWordWrapInternal
	c (Ljava/lang/String;)Ljava/lang/String; eraseTrailingNewLines
	c (Ljava/lang/String;FFIZLb;Ldqq;ZII)F renderText
	c (Ljava/lang/String;I)Ljava/util/List; split
	d (Ljava/lang/String;I)Ljava/lang/String; insertLineBreaks
	e (Ljava/lang/String;I)I indexAtWidth
dcg net/minecraft/client/gui/Gui
	A displayHealth
	B lastHealthTime
	C healthBlinkTime
	D screenWidth
	E screenHeight
	F chatListeners
	a vignetteBrightness
	b VIGNETTE_LOCATION
	c WIDGETS_LOCATION
	d PUMPKIN_BLUR_LOCATION
	e random
	f minecraft
	g itemRenderer
	h chat
	i tickCount
	j overlayMessageString
	k overlayMessageTime
	l animateOverlayMessageColor
	m toolHighlightTimer
	n lastToolHighlight
	o debugScreen
	p subtitleOverlay
	q spectatorGui
	r tabList
	s bossOverlay
	t titleTime
	u title
	v subtitle
	w titleFadeInTime
	x titleStayTime
	y titleFadeOutTime
	z lastHealth
	a ()V resetTitleTimes
	a (F)V render
	a (I)V renderJumpMeter
	a (IIFLnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;)V renderSlot
	a (Ldcf;II)V drawBackdrop
	a (Ljava/lang/String;)V setNowPlaying
	a (Ljava/lang/String;Ljava/lang/String;III)V setTitles
	a (Ljava/lang/String;Z)V setOverlayMessage
	a (Lnet/minecraft/server/ChatMessageType;Lnet/minecraft/server/IChatBaseComponent;)V handleChat
	a (Lnet/minecraft/server/Entity;)V updateVignetteBrightness
	a (Lnet/minecraft/server/EntityLiving;)I getVehicleMaxHearts
	a (Lnet/minecraft/server/IChatBaseComponent;Z)V setOverlayMessage
	a (Lnet/minecraft/server/MovingObjectPosition;)Z canRenderCrosshairForSpectator
	a (Lnet/minecraft/server/ScoreboardObjective;)V displayScoreboardSidebar
	b ()V renderEffects
	b (F)V renderHotbar
	b (I)V renderExperienceBar
	b (Lnet/minecraft/server/Entity;)V renderVignette
	c ()V renderSelectedItemName
	c (F)V renderPortalOverlay
	c (I)I getVisibleVehicleHeartRows
	d ()V renderDemoOverlay
	e ()V tick
	f ()Ldcu; getChat
	g ()I getGuiTicks
	h ()Ldcf; getFont
	i ()Lddt; getSpectatorGui
	j ()Lddh; getTabList
	k ()V onDisconnected
	l ()Ldcs; getBossOverlay
	m ()V clearCache
	n ()V renderCrosshair
	o ()Lnet/minecraft/server/EntityHuman; getCameraPlayer
	p ()Lnet/minecraft/server/EntityLiving; getPlayerVehicleWithHealth
	q ()V renderPlayerHealth
	r ()V renderVehicleHealth
	s ()V renderPumpkin
dch net/minecraft/client/gui/GuiComponent
dci net/minecraft/client/gui/MapRenderer
	a MAP_ICONS_LOCATION
	b MAP_ICONS
	c textureManager
	d maps
	a ()V resetData
	a (Lcyi;Ldqq;Lnet/minecraft/server/WorldMap;ZI)V render
	a (Ldci$a;)Lnet/minecraft/server/WorldMap; getData
	a (Ljava/lang/String;)Ldci$a; getMapInstanceIfExists
	a (Lnet/minecraft/server/WorldMap;)V update
	b (Lnet/minecraft/server/WorldMap;)Ldci$a; getMapInstance
dci$a net/minecraft/client/gui/MapRenderer$MapInstance
	b data
	c texture
	d renderType
	a ()V updateTexture
	a (Lcyi;Ldqq;ZI)V draw
dcj net/minecraft/client/gui/chat/ChatListener
	a (Lnet/minecraft/server/ChatMessageType;Lnet/minecraft/server/IChatBaseComponent;)V handle
dck net/minecraft/client/gui/chat/NarratorChatListener
	a NO_TITLE
	b INSTANCE
	c LOGGER
	d narrator
	a ()Z isActive
	a (Ldbn;)V updateNarratorStatus
	a (Ljava/lang/String;)V sayNow
	a (Lnet/minecraft/server/ChatMessageType;Lnet/minecraft/server/IChatBaseComponent;)V handle
	a (ZLjava/lang/String;)V doSay
	b ()V clear
	c ()V destroy
	d ()Ldbn; getStatus
dcl net/minecraft/client/gui/chat/OverlayChatListener
	a minecraft
	a (Lnet/minecraft/server/ChatMessageType;Lnet/minecraft/server/IChatBaseComponent;)V handle
dcm net/minecraft/client/gui/chat/StandardChatListener
	a minecraft
	a (Lnet/minecraft/server/ChatMessageType;Lnet/minecraft/server/IChatBaseComponent;)V handle
dco net/minecraft/client/gui/components/AbstractButton
dcp net/minecraft/client/gui/components/AbstractSelectionList
dcp$a net/minecraft/client/gui/components/AbstractSelectionList$Entry
dcp$b net/minecraft/client/gui/components/AbstractSelectionList$TrackedList
	b delegate
	a (I)Ldcp$a; get
	a (ILdcp$a;)Ldcp$a; set
	b (I)Ldcp$a; remove
	b (ILdcp$a;)V add
dcq net/minecraft/client/gui/components/AbstractSliderButton
dcr net/minecraft/client/gui/components/AbstractWidget
dcs net/minecraft/client/gui/components/BossHealthOverlay
	a GUI_BARS_LOCATION
	b minecraft
	c events
	a ()V render
	a (IILnet/minecraft/server/BossBattle;)V drawBar
	a (Lnet/minecraft/server/PacketPlayOutBoss;)V update
	b ()V reset
	c ()Z hasBoss
	d ()Z shouldPlayMusic
	e ()Z shouldDarkenScreen
	f ()Z shouldCreateWorldFog
dct net/minecraft/client/gui/components/Button
dct$a net/minecraft/client/gui/components/Button$OnPress
dcu net/minecraft/client/gui/components/ChatComponent
	a LOGGER
	b minecraft
	c recentChat
	d allMessages
	e trimmedMessages
	f chatScrollbarPos
	g newMessageSinceScroll
	a ()V rescaleChat
	a (D)V scrollChat
	a (DD)Lnet/minecraft/server/IChatBaseComponent; getClickedComponentAt
	a (I)V render
	a (Ljava/lang/String;)V addRecentChat
	a (Lnet/minecraft/server/IChatBaseComponent;)V addMessage
	a (Lnet/minecraft/server/IChatBaseComponent;I)V addMessage
	a (Lnet/minecraft/server/IChatBaseComponent;IIZ)V addMessage
	a (Z)V clearMessages
	b ()Ljava/util/List; getRecentChat
	b (D)I getWidth
	b (I)V removeById
	c ()V resetChatScroll
	c (D)I getHeight
	c (I)D getTimeFactor
	d ()Z isChatFocused
	e ()I getWidth
	f ()I getHeight
	g ()D getScale
	h ()I getLinesPerPage
	i ()Z isChatVisible
dcv net/minecraft/client/gui/components/Checkbox
	a selected
	b TEXTURE
	a ()Z selected
dcw net/minecraft/client/gui/components/CommandSuggestions
	a WHITESPACE_PATTERN
	b minecraft
	c screen
	d input
	e font
	f commandsOnly
	g onlyShowIfCursorPastError
	h lineStartOffset
	i suggestionLineLimit
	j anchorToBottom
	k fillColor
	l commandUsage
	m commandUsagePosition
	n commandUsageWidth
	o currentParse
	p pendingSuggestions
	q suggestions
	r allowSuggestions
	s keepSuggestions
	a ()V updateCommandInfo
	a (D)Z mouseScrolled
	a (DDI)Z mouseClicked
	a (II)V render
	a (III)Z keyPressed
	a (Lcom/mojang/brigadier/ParseResults;Ljava/lang/String;I)Ljava/lang/String; formatText
	a (Ljava/lang/String;)I getLastWordIndex
	a (Ljava/lang/String;I)Ljava/lang/String; formatChat
	a (Lnet/minecraft/server/EnumChatFormat;)V fillNodeUsage
	a (Z)V setAllowSuggestions
	b ()V updateUsageInfo
	b (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; calculateSuggestionSuffix
	b (Z)V showSuggestions
	c ()Ljava/lang/String; getNarrationMessage
dcw$a net/minecraft/client/gui/components/CommandSuggestions$SuggestionsList
	b rect
	c suggestions
	d originalContents
	e offset
	f current
	g lastMouse
	h tabCycles
	i lastNarratedEntry
	a ()V useSuggestion
	a (D)Z mouseScrolled
	a (I)V cycle
	a (II)V render
	a (III)Z mouseClicked
	b ()V hide
	b (I)V select
	b (III)Z keyPressed
	c ()Ljava/lang/String; getNarrationMessage
dcx net/minecraft/client/gui/components/ComponentRenderUtils
	a (Ljava/lang/String;Z)Ljava/lang/String; stripColor
	a (Lnet/minecraft/server/IChatBaseComponent;ILdcf;ZZ)Ljava/util/List; wrapComponents
dcy net/minecraft/client/gui/components/ContainerObjectSelectionList
dcy$a net/minecraft/client/gui/components/ContainerObjectSelectionList$Entry
	a focused
	b dragging
dcz net/minecraft/client/gui/components/DebugScreenOverlay
	a HEIGHTMAP_NAMES
	b minecraft
	c font
	d block
	e liquid
	f lastPos
	g clientChunk
	h serverChunk
	a ()V clearChunkCache
	a (IIF)I colorLerp
	a (IIII)I getSampleColor
	a (J)J bytesToMegabytes
	a (Ljava/util/Map$Entry;)Ljava/lang/String; getPropertyValueString
	a (Lnet/minecraft/server/CircularTimer;IIZ)V drawChart
	b ()V render
	c ()V drawGameInformation
	d ()V drawSystemInformation
	e ()Ljava/util/List; getGameInformation
	f ()Ljava/util/List; getSystemInformation
	g ()Ljava/lang/String; getServerChunkStats
	h ()Lnet/minecraft/server/World; getLevel
	i ()Lnet/minecraft/server/Chunk; getServerChunk
	j ()Lnet/minecraft/server/Chunk; getClientChunk
dda net/minecraft/client/gui/components/EditBox
	a font
	b value
	c maxLength
	d frame
	e bordered
	f canLoseFocus
	g isEditable
	h shiftPressed
	i displayPos
	j cursorPos
	k highlightPos
	l textColor
	m textColorUneditable
	n suggestion
	o responder
	p filter
	q formatter
	a ()V tick
	a (I)V deleteWords
	a (II)I getWordPosition
	a (IIII)V renderHighlight
	a (IIZ)I getWordPosition
	a (Ljava/lang/String;)V setValue
	a (Ljava/util/function/BiFunction;)V setFormatter
	a (Ljava/util/function/Consumer;)V setResponder
	a (Ljava/util/function/Predicate;)V setFilter
	a (Z)V setFocus
	b ()Ljava/lang/String; getValue
	b (I)V deleteChars
	b (Ljava/lang/String;)V insertText
	b (Z)V setBordered
	c ()Ljava/lang/String; getHighlighted
	c (I)I getWordPosition
	c (Ljava/lang/String;)V setSuggestion
	c (Z)V setEditable
	d ()V moveCursorToStart
	d (I)V moveCursor
	d (Ljava/lang/String;)V onValueChange
	d (Z)V setCanLoseFocus
	e ()V moveCursorToEnd
	e (I)V moveCursorTo
	e (Z)V setVisible
	f ()Z canConsumeInput
	f (I)V setCursorPosition
	g ()I getCursorPosition
	g (I)V setMaxLength
	h ()I getInnerWidth
	h (I)V setTextColor
	i ()Z isVisible
	i (I)V setTextColorUneditable
	j ()I getMaxLength
	j (I)V setHighlightPos
	k ()Z isBordered
	k (I)I getScreenX
	l ()Z isEditable
	l (I)V setX
	m (I)V deleteText
ddb net/minecraft/client/gui/components/ImageButton
	a resourceLocation
	b xTexStart
	c yTexStart
	d yDiffTex
	e textureWidth
	f textureHeight
	a (II)V setPosition
ddc net/minecraft/client/gui/components/LerpingBossEvent
	h targetPercent
	i setTime
	a (F)V setPercent
	a (Lnet/minecraft/server/PacketPlayOutBoss;)V update
	k ()F getPercent
ddd net/minecraft/client/gui/components/LockIconButton
	a locked
	a ()Z isLocked
	a (Z)V setLocked
ddd$a net/minecraft/client/gui/components/LockIconButton$Icon
	a LOCKED
	b LOCKED_HOVER
	c LOCKED_DISABLED
	d UNLOCKED
	e UNLOCKED_HOVER
	f UNLOCKED_DISABLED
	g x
	h y
	i $VALUES
	a ()I getX
	b ()I getY
dde net/minecraft/client/gui/components/ObjectSelectionList
dde$a net/minecraft/client/gui/components/ObjectSelectionList$Entry
ddf net/minecraft/client/gui/components/OptionButton
	a option
	a ()Ldbo; getOption
ddg net/minecraft/client/gui/components/OptionsList
	a (Ldbo;)I addBig
	a (Ldbo;Ldbo;)V addSmall
	a ([Ldbo;)V addSmall
ddg$a net/minecraft/client/gui/components/OptionsList$Entry
	a children
	a (Ldbp;ILdbo;)Lddg$a; big
	a (Ldbp;ILdbo;Ldbo;)Lddg$a; small
ddh net/minecraft/client/gui/components/PlayerTabOverlay
	a PLAYER_ORDERING
	b minecraft
	c gui
	d footer
	e header
	f visibilityId
	g visible
	a ()V reset
	a (IIILdnp;)V renderPingIcon
	a (ILnet/minecraft/server/Scoreboard;Lnet/minecraft/server/ScoreboardObjective;)V render
	a (Ldnp;)Lnet/minecraft/server/IChatBaseComponent; getNameForDisplay
	a (Lnet/minecraft/server/IChatBaseComponent;)V setFooter
	a (Lnet/minecraft/server/ScoreboardObjective;ILjava/lang/String;IILdnp;)V renderTablistScore
	a (Z)V setVisible
	b (Lnet/minecraft/server/IChatBaseComponent;)V setHeader
ddh$a net/minecraft/client/gui/components/PlayerTabOverlay$PlayerInfoComparator
	a (Ldnp;Ldnp;)I compare
ddi net/minecraft/client/gui/components/ScrolledSelectionList
ddj net/minecraft/client/gui/components/SliderButton
	a option
ddk net/minecraft/client/gui/components/StateSwitchingButton
	a resourceLocation
	b isStateTriggered
	c xTexStart
	d yTexStart
	e xDiffTex
	f yDiffTex
	a ()Z isStateTriggered
	a (II)V setPosition
	a (IIIILnet/minecraft/server/MinecraftKey;)V initTextureValues
	a (Z)V setStateTriggered
ddl net/minecraft/client/gui/components/SubtitleOverlay
	a minecraft
	b subtitles
	c isListening
	a ()V render
	a (Lecw;Ledx;)V onPlaySound
ddl$a net/minecraft/client/gui/components/SubtitleOverlay$Subtitle
	b text
	c time
	d location
	a ()Ljava/lang/String; getText
	a (Lnet/minecraft/server/Vec3D;)V refresh
	b ()J getTime
	c ()Lnet/minecraft/server/Vec3D; getLocation
ddm net/minecraft/client/gui/components/VolumeSlider
	a source
ddn net/minecraft/client/gui/components/Widget
ddo net/minecraft/client/gui/components/events/AbstractContainerEventHandler
ddp net/minecraft/client/gui/components/events/ContainerEventHandler
	a (DD)Ljava/util/Optional; getChildAt
	a (III)Z keyReleased
	a (Lddq;)V setInitialFocus
	b (Lddq;)V magicalSpecialHackyFocus
ddq net/minecraft/client/gui/components/events/GuiEventListener
	a (III)Z keyReleased
	b (DD)V mouseMoved
ddt net/minecraft/client/gui/components/spectator/SpectatorGui
	a SPECTATOR_LOCATION
	b WIDGETS_LOCATION
	c minecraft
	d lastSelectionTime
	e menu
	a ()V renderTooltip
	a (D)V onMouseScrolled
	a (F)V renderHotbar
	a (FIILdjq;)V renderPage
	a (I)V onHotbarSelected
	a (IIFFLdjo;)V renderSlot
	a (Ldjm;)V onSpectatorMenuClosed
	b ()Z isMenuActive
	c ()V onMouseMiddleClick
	d ()F getHotbarAlpha
ddv net/minecraft/client/gui/components/toasts/AdvancementToast
	c advancement
	d playedSound
	a (Lddz;J)Lddy$a; render
ddw net/minecraft/client/gui/components/toasts/RecipeToast
	c recipes
	d lastChanged
	e changed
	a (Lddz;J)Lddy$a; render
	a (Lddz;Lnet/minecraft/server/IRecipe;)V addOrUpdate
	a (Lnet/minecraft/server/IRecipe;)V addItem
ddx net/minecraft/client/gui/components/toasts/SystemToast
	c id
	d title
	e message
	f lastChanged
	g changed
	a ()Lddx$a; getToken
	a (Lddz;J)Lddy$a; render
	a (Lddz;Lddx$a;Lnet/minecraft/server/IChatBaseComponent;Lnet/minecraft/server/IChatBaseComponent;)V addOrUpdate
	a (Lnet/minecraft/server/IChatBaseComponent;Lnet/minecraft/server/IChatBaseComponent;)V reset
	b ()Ljava/lang/Object; getToken
ddx$a net/minecraft/client/gui/components/toasts/SystemToast$SystemToastIds
	a TUTORIAL_HINT
	b NARRATOR_TOGGLE
	c WORLD_BACKUP
	d PACK_LOAD_FAILURE
	e $VALUES
ddy net/minecraft/client/gui/components/toasts/Toast
	a TEXTURE
	b NO_TOKEN
	a (Lddz;J)Lddy$a; render
	b ()Ljava/lang/Object; getToken
ddy$a net/minecraft/client/gui/components/toasts/Toast$Visibility
	a SHOW
	b HIDE
	c soundEvent
	d $VALUES
	a (Ledw;)V playSound
ddz net/minecraft/client/gui/components/toasts/ToastComponent
	a minecraft
	b visible
	c queued
	a ()V render
	a (Lddy;)V addToast
	a (Ljava/lang/Class;Ljava/lang/Object;)Lddy; getToast
	b ()V clear
	c ()Ldbl; getMinecraft
ddz$a net/minecraft/client/gui/components/toasts/ToastComponent$ToastInstance
	b toast
	c animationTime
	d visibleTime
	e visibility
	a ()Lddy; getToast
	a (II)Z render
	a (J)F getVisibility
de$a net/minecraft/commands/arguments/NbtPathArgument$AllElementsNode
	a INSTANCE
	a ()Lnet/minecraft/server/NBTBase; createPreferredParentTag
	a (Lnet/minecraft/server/NBTBase;)I removeTag
	a (Lnet/minecraft/server/NBTBase;Ljava/util/List;)V getTag
	a (Lnet/minecraft/server/NBTBase;Ljava/util/function/Supplier;)I setTag
	a (Lnet/minecraft/server/NBTBase;Ljava/util/function/Supplier;Ljava/util/List;)V getOrCreateTag
de$b net/minecraft/commands/arguments/NbtPathArgument$CompoundChildNode
	a name
	a ()Lnet/minecraft/server/NBTBase; createPreferredParentTag
	a (Lnet/minecraft/server/NBTBase;)I removeTag
	a (Lnet/minecraft/server/NBTBase;Ljava/util/List;)V getTag
	a (Lnet/minecraft/server/NBTBase;Ljava/util/function/Supplier;)I setTag
	a (Lnet/minecraft/server/NBTBase;Ljava/util/function/Supplier;Ljava/util/List;)V getOrCreateTag
de$c net/minecraft/commands/arguments/NbtPathArgument$IndexedElementNode
	a index
	a ()Lnet/minecraft/server/NBTBase; createPreferredParentTag
	a (Lnet/minecraft/server/NBTBase;)I removeTag
	a (Lnet/minecraft/server/NBTBase;Ljava/util/List;)V getTag
	a (Lnet/minecraft/server/NBTBase;Ljava/util/function/Supplier;)I setTag
	a (Lnet/minecraft/server/NBTBase;Ljava/util/function/Supplier;Ljava/util/List;)V getOrCreateTag
de$d net/minecraft/commands/arguments/NbtPathArgument$ListElementFunction
	a (Lnet/minecraft/server/NBTTagList;ILnet/minecraft/server/NBTBase;)Z apply
de$e net/minecraft/commands/arguments/NbtPathArgument$MatchElementNode
	a pattern
	b predicate
	a ()Lnet/minecraft/server/NBTBase; createPreferredParentTag
	a (Lnet/minecraft/server/NBTBase;)I removeTag
	a (Lnet/minecraft/server/NBTBase;Ljava/util/List;)V getTag
	a (Lnet/minecraft/server/NBTBase;Ljava/util/function/Supplier;)I setTag
	a (Lnet/minecraft/server/NBTBase;Ljava/util/function/Supplier;Ljava/util/List;)V getOrCreateTag
de$f net/minecraft/commands/arguments/NbtPathArgument$MatchObjectNode
	a name
	b pattern
	c predicate
	a ()Lnet/minecraft/server/NBTBase; createPreferredParentTag
	a (Lnet/minecraft/server/NBTBase;)I removeTag
	a (Lnet/minecraft/server/NBTBase;Ljava/util/List;)V getTag
	a (Lnet/minecraft/server/NBTBase;Ljava/util/function/Supplier;)I setTag
	a (Lnet/minecraft/server/NBTBase;Ljava/util/function/Supplier;Ljava/util/List;)V getOrCreateTag
de$g net/minecraft/commands/arguments/NbtPathArgument$MatchRootObjectNode
	a predicate
	a ()Lnet/minecraft/server/NBTBase; createPreferredParentTag
	a (Lnet/minecraft/server/NBTBase;)I removeTag
	a (Lnet/minecraft/server/NBTBase;Ljava/util/List;)V getTag
	a (Lnet/minecraft/server/NBTBase;Ljava/util/function/Supplier;)I setTag
	a (Lnet/minecraft/server/NBTBase;Ljava/util/function/Supplier;Ljava/util/List;)V getOrCreateTag
de$h net/minecraft/commands/arguments/NbtPathArgument$NbtPath
	a original
	b nodeToOriginalPosition
	c nodes
	a (Lde$i;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; createNotFoundException
	a (Ljava/util/List;Ljava/util/function/Function;)I apply
	a (Lnet/minecraft/server/NBTBase;)Ljava/util/List; get
	a (Lnet/minecraft/server/NBTBase;Ljava/util/function/Supplier;)Ljava/util/List; getOrCreate
	a (Lnet/minecraft/server/NBTBase;Lnet/minecraft/server/NBTBase;)I set
	b (Lnet/minecraft/server/NBTBase;)I countMatching
	b (Lnet/minecraft/server/NBTBase;Ljava/util/function/Supplier;)I set
	c (Lnet/minecraft/server/NBTBase;)I remove
	d (Lnet/minecraft/server/NBTBase;)Ljava/util/List; getOrCreateParents
de$i net/minecraft/commands/arguments/NbtPathArgument$Node
	a ()Lnet/minecraft/server/NBTBase; createPreferredParentTag
	a (Ljava/util/List;)Ljava/util/List; get
	a (Ljava/util/List;Ljava/util/function/BiConsumer;)Ljava/util/List; collect
	a (Ljava/util/List;Ljava/util/function/Supplier;)Ljava/util/List; getOrCreate
	a (Lnet/minecraft/server/NBTBase;)I removeTag
	a (Lnet/minecraft/server/NBTBase;Ljava/util/List;)V getTag
	a (Lnet/minecraft/server/NBTBase;Ljava/util/function/Supplier;)I setTag
	a (Lnet/minecraft/server/NBTBase;Ljava/util/function/Supplier;Ljava/util/List;)V getOrCreateTag
dea net/minecraft/client/gui/components/toasts/TutorialToast
	c icon
	d title
	e message
	f visibility
	g lastProgressTime
	h lastProgress
	i progress
	j progressable
	a ()V hide
	a (F)V updateProgress
	a (Lddz;J)Lddy$a; render
dea$a net/minecraft/client/gui/components/toasts/TutorialToast$Icons
	a MOVEMENT_KEYS
	b MOUSE
	c TREE
	d RECIPE_BOOK
	e WOODEN_PLANKS
	f x
	g y
	h $VALUES
	a (Ldch;II)V render
dec net/minecraft/client/gui/font/AllMissingGlyphProvider
	a (C)Lcwx; getGlyph
ded net/minecraft/client/gui/font/FontManager
	a LOGGER
	b fonts
	c providers
	d textureManager
	e forceUnicode
	f reloadListener
	a ()Lnet/minecraft/server/IReloadListener; getReloadListener
	a (Lnet/minecraft/server/MinecraftKey;)Ldcf; get
	a (ZLjava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)V setForceUnicode
dee net/minecraft/client/gui/font/FontSet
	a LOGGER
	b SPACE_GLYPH
	c SPACE_INFO
	d RANDOM
	e textureManager
	f name
	g missingGlyph
	h whiteGlyph
	i providers
	j glyphs
	k glyphInfos
	l glyphsByWidth
	m textures
	a ()V closeTextures
	a (C)Lcwv; getGlyphInfo
	a (Lcwv;)Ldeh; getRandomGlyph
	a (Lcwx;)Ldeh; stitch
	a (Ljava/util/List;)V reload
	b ()Ldeh; whiteGlyph
	b (C)Ldeh; getGlyph
	c (C)Lcwx; getRaw
def net/minecraft/client/gui/font/FontTexture
	d name
	e normalType
	f seeThroughType
	g colored
	h root
	a ()Lnet/minecraft/server/MinecraftKey; getName
	a (Lcwx;)Ldeh; add
	a (Lnet/minecraft/server/IResourceManager;)V load
def$a net/minecraft/client/gui/font/FontTexture$Node
	a x
	b y
	c width
	d height
	e left
	f right
	g occupied
	a (Lcwx;)Ldef$a; insert
deg net/minecraft/client/gui/font/TextFieldHelper
	a minecraft
	b font
	c getMessageFn
	d setMessageFn
	e maxWidth
	f cursorPos
	g selectionPos
	a ()V setStart
	a (C)Z charTyped
	a (I)Z keyPressed
	a (Ljava/lang/String;)V insertText
	b ()V setEnd
	c ()I getCursorPos
	d ()I getSelectionPos
	e ()Ljava/lang/String; getSelected
	f ()V deleteSelection
deh net/minecraft/client/gui/font/glyphs/BakedGlyph
	a normalType
	b seeThroughType
	c u0
	d u1
	e v0
	f v1
	g left
	h right
	i up
	j down
	a (Ldeh$a;Lb;Lcyl;I)V renderEffect
	a (Z)Ldqy; renderType
	a (ZFFLb;Lcyl;FFFFI)V render
deh$a net/minecraft/client/gui/font/glyphs/BakedGlyph$Effect
	a x0
	b y0
	c x1
	d y1
	e depth
	f r
	h b
	i a
dei net/minecraft/client/gui/font/glyphs/EmptyGlyph
	a (ZFFLb;Lcyl;FFFFI)V render
dej net/minecraft/client/gui/font/glyphs/MissingGlyph
	a INSTANCE
	b IMAGE_DATA
	c $VALUES
	a (II)V upload
	d ()I getPixelWidth
	e ()I getPixelHeight
	f ()Z isColored
	g ()F getOversample
dek net/minecraft/client/gui/font/glyphs/WhiteGlyph
	a INSTANCE
	b IMAGE_DATA
	c $VALUES
	a (II)V upload
	d ()I getPixelWidth
	e ()I getPixelHeight
	f ()Z isColored
	g ()F getOversample
den net/minecraft/client/gui/font/providers/BitmapProvider
	a LOGGER
	b image
	c glyphs
	a (C)Lcwx; getGlyph
den$a net/minecraft/client/gui/font/providers/BitmapProvider$Builder
	a texture
	b chars
	c height
	d ascent
	a (Lcom/google/gson/JsonObject;)Lden$a; fromJson
	a (Lcxo;IIII)I getActualGlyphWidth
	a (Lnet/minecraft/server/IResourceManager;)Lcww; create
den$b net/minecraft/client/gui/font/providers/BitmapProvider$Glyph
	a scale
	b image
	c offsetX
	d offsetY
	e width
	f height
	g advance
	h ascent
	a (II)V upload
	d ()I getPixelWidth
	e ()I getPixelHeight
	f ()Z isColored
	g ()F getOversample
	l ()F getBearingY
deo net/minecraft/client/gui/font/providers/GlyphProviderBuilder
	a (Lnet/minecraft/server/IResourceManager;)Lcww; create
dep net/minecraft/client/gui/font/providers/GlyphProviderBuilderType
	a BITMAP
	b TTF
	c LEGACY_UNICODE
	d BY_NAME
	e name
	f factory
	g $VALUES
	a (Lcom/google/gson/JsonObject;)Ldeo; create
	a (Ljava/lang/String;)Ldep; byName
deq net/minecraft/client/gui/font/providers/LegacyUnicodeBitmapsProvider
	a LOGGER
	b resourceManager
	c sizes
	d texturePattern
	e textures
	a (B)I getLeft
	a (C)Lcwx; getGlyph
	a (Lnet/minecraft/server/MinecraftKey;)Lcxo; loadTexture
	b (B)I getRight
	b (C)Lnet/minecraft/server/MinecraftKey; getSheetLocation
deq$a net/minecraft/client/gui/font/providers/LegacyUnicodeBitmapsProvider$Builder
	a metadata
	b texturePattern
	a (Lcom/google/gson/JsonObject;)Ldeo; fromJson
	a (Lnet/minecraft/server/IResourceManager;)Lcww; create
deq$b net/minecraft/client/gui/font/providers/LegacyUnicodeBitmapsProvider$Glyph
	a width
	b height
	c sourceX
	d sourceY
	e source
	a (II)V upload
	b ()F getBoldOffset
	c ()F getShadowOffset
	d ()I getPixelWidth
	e ()I getPixelHeight
	f ()Z isColored
	g ()F getOversample
der net/minecraft/client/gui/font/providers/TrueTypeGlyphProviderBuilder
	a LOGGER
	b location
	c size
	d oversample
	e shiftX
	f shiftY
	g skip
	a (Lcom/google/gson/JsonObject;)Ldeo; fromJson
	a (Lnet/minecraft/server/IResourceManager;)Lcww; create
deu net/minecraft/client/gui/screens/AccessibilityOptionsScreen
	c OPTIONS
	d narratorButton
	a ()V updateNarratorButton
dev net/minecraft/client/gui/screens/AlertScreen
	a text
	b okButton
	c callback
	d lines
	e delayTicker
	a (I)V setDelay
dew net/minecraft/client/gui/screens/BackupConfirmScreen
	a listener
	b lastScreen
	c description
	d promptForCacheErase
	e lines
	f eraseCacheText
	g backupButton
	h continueButton
	i cancelButton
	j eraseCache
dew$a net/minecraft/client/gui/screens/BackupConfirmScreen$Listener
dex net/minecraft/client/gui/screens/ChatOptionsScreen
	c CHAT_OPTIONS
	d narratorButton
	a ()V updateNarratorButton
dey net/minecraft/client/gui/screens/ChatScreen
	a input
	b historyBuffer
	c historyPos
	d initial
	e commandSuggestions
	a (I)V moveInHistory
	a (Ljava/lang/String;)V onEdited
	b (Ljava/lang/String;)V setChatLine
dez net/minecraft/client/gui/screens/ConfirmLinkScreen
	d warning
	e copyButton
	f url
	g showWarning
	a ()V copyToClipboard
dfa net/minecraft/client/gui/screens/ConfirmScreen
	a yesButton
	b noButton
	c callback
	d title2
	e lines
	f delayTicker
	a (I)V setDelay
dfb net/minecraft/client/gui/screens/ConnectScreen
	a UNIQUE_THREAD_ID
	b LOGGER
	c connection
	d aborted
	e parent
	f status
	g lastNarration
	a (Ljava/lang/String;I)V connect
	a (Lnet/minecraft/server/IChatBaseComponent;)V updateStatus
dfc net/minecraft/client/gui/screens/CreateBuffetWorldScreen
	a GENERATORS
	b parent
	c optionsTag
	d list
	e generatorIndex
	f doneButton
	a ()V updateButtonValidity
	b ()V loadOptions
	c ()Lnet/minecraft/server/NBTTagCompound; saveOptions
dfc$a net/minecraft/client/gui/screens/CreateBuffetWorldScreen$BiomeList
	a (Ldfc$a$a;)V setSelected
dfc$a$a net/minecraft/client/gui/screens/CreateBuffetWorldScreen$BiomeList$Entry
	b key
dfd net/minecraft/client/gui/screens/CreateFlatWorldScreen
	a parent
	b generator
	c columnType
	d columnHeight
	e list
	f deleteLayerButton
	a ()Ljava/lang/String; saveLayerString
	a (Ljava/lang/String;)V loadLayers
	a (Lnet/minecraft/server/NBTTagCompound;)V loadLayers
	b ()Lnet/minecraft/server/NBTTagCompound; saveLayers
	c ()V updateButtonValidity
	d ()Z hasValidSelection
dfd$a net/minecraft/client/gui/screens/CreateFlatWorldScreen$DetailsList
	a ()V resetRows
	a (Ldfd$a$a;)V setSelected
dfd$a$a net/minecraft/client/gui/screens/CreateFlatWorldScreen$DetailsList$Entry
	a (II)V blitSlotBg
	a (IILnet/minecraft/server/ItemStack;)V blitSlot
dfe net/minecraft/client/gui/screens/DeathScreen
	a delayTicker
	b causeOfDeath
	c hardcore
	a ()V exitToTitleScreen
	a (I)Lnet/minecraft/server/IChatBaseComponent; getClickedComponentAt
	a (Z)V confirmResult
dff net/minecraft/client/gui/screens/DemoIntroScreen
	a DEMO_BACKGROUND_LOCATION
dfg net/minecraft/client/gui/screens/DirectJoinServerScreen
	a selectButton
	b serverData
	c ipEdit
	d callback
	e lastScreen
	a ()V onSelect
	b ()V updateSelectButtonStatus
dfh net/minecraft/client/gui/screens/DisconnectedScreen
	a reason
	b lines
	c parent
	d textHeight
dfi net/minecraft/client/gui/screens/EditServerScreen
	a addButton
	b callback
	c serverData
	d ipEdit
	e nameEdit
	f serverPackButton
	g lastScreen
	h addressFilter
	a ()V onAdd
	a (Ljava/lang/String;)V onEdited
	b ()V cleanUp
dfj net/minecraft/client/gui/screens/ErrorScreen
	a message
dfk net/minecraft/client/gui/screens/GenericDirtMessageScreen
dfl net/minecraft/client/gui/screens/InBedChatScreen
	a ()V sendWakeUp
dfm net/minecraft/client/gui/screens/LanguageSelectScreen
	c packSelectionList
	d languageManager
	e forceUnicodeButton
	f doneButton
dfm$a net/minecraft/client/gui/screens/LanguageSelectScreen$LanguageSelectionList
	a (Ldfm$a$a;)V setSelected
dfm$a$a net/minecraft/client/gui/screens/LanguageSelectScreen$LanguageSelectionList$Entry
	b language
	a ()V select
dfn net/minecraft/client/gui/screens/LevelLoadingScreen
	a progressListener
	b lastNarration
	c COLORS
	a (Lxq;IIII)V renderChunks
dfo net/minecraft/client/gui/screens/LoadingOverlay
	a MOJANG_LOGO_LOCATION
	b minecraft
	c reload
	d onFinish
	e fadeIn
	f currentProgress
	g fadeOutStart
	h fadeInStart
	a ()Z isPauseScreen
	a (IIIIF)V drawProgressBar
	a (Ldbl;)V registerTextures
dfo$a net/minecraft/client/gui/screens/LoadingOverlay$LogoTexture
	b (Lnet/minecraft/server/IResourceManager;)Leac$a; getTextureImage
dfp net/minecraft/client/gui/screens/MenuScreens
	a LOGGER
	b SCREENS
	a ()Z selfTest
	a (Lnet/minecraft/server/Containers;)Ldfp$a; getConstructor
	a (Lnet/minecraft/server/Containers;Ldbl;ILnet/minecraft/server/IChatBaseComponent;)V create
	a (Lnet/minecraft/server/Containers;Ldfp$a;)V register
dfp$a net/minecraft/client/gui/screens/MenuScreens$ScreenConstructor
	a (Lnet/minecraft/server/IChatBaseComponent;Lnet/minecraft/server/Containers;Ldbl;I)V fromPacket
dfq net/minecraft/client/gui/screens/MouseSettingsScreen
	c list
	d OPTIONS
dfr net/minecraft/client/gui/screens/OptionsScreen
	a OPTION_SCREEN_OPTIONS
	b lastScreen
	c options
	d difficultyButton
	e lockButton
	f currentDifficulty
	a (Lnet/minecraft/server/EnumDifficulty;)Ljava/lang/String; getDifficultyText
	a (Z)V lockCallback
dfs net/minecraft/client/gui/screens/OptionsSubScreen
	a lastScreen
	b options
dft net/minecraft/client/gui/screens/OutOfMemoryScreen
dfu net/minecraft/client/gui/screens/Overlay
	a ()Z isPauseScreen
dfv net/minecraft/client/gui/screens/PauseScreen
	a showPauseMenu
	a ()V createPauseMenu
dfw net/minecraft/client/gui/screens/PresetFlatWorldScreen
	a PRESETS
	b parent
	c shareText
	d listText
	e list
	f selectButton
	g export
	a (Ljava/lang/String;Lnet/minecraft/server/IMaterial;Lnet/minecraft/server/BiomeBase;Ljava/util/List;[Lnet/minecraft/server/WorldGenFlatLayerInfo;)V preset
	a (Z)V updateButtonValidity
dfw$a net/minecraft/client/gui/screens/PresetFlatWorldScreen$PresetInfo
	a icon
	b name
	c value
dfw$b net/minecraft/client/gui/screens/PresetFlatWorldScreen$PresetsList
	a (Ldfw$b$a;)V setSelected
dfw$b$a net/minecraft/client/gui/screens/PresetFlatWorldScreen$PresetsList$Entry
	a ()V select
	a (II)V blitSlotBg
	a (IILnet/minecraft/server/Item;)V blitSlot
dfx net/minecraft/client/gui/screens/ProgressScreen
	a title
	b stage
	c progress
	d stop
	a ()V stop
	a (I)V progressStagePercentage
	a (Lnet/minecraft/server/IChatBaseComponent;)V progressStartNoAbort
	b (Lnet/minecraft/server/IChatBaseComponent;)V progressStart
	c (Lnet/minecraft/server/IChatBaseComponent;)V progressStage
dfy net/minecraft/client/gui/screens/ReceivingLevelScreen
dfz net/minecraft/client/gui/screens/Screen
dga net/minecraft/client/gui/screens/ShareToLanScreen
	a lastScreen
	b commandsButton
	c modeButton
	d gameModeName
	e commands
	a ()V updateSelectionStrings
dgb net/minecraft/client/gui/screens/SkinCustomizationScreen
	a (Layh;)Ljava/lang/String; getMessage
dgc net/minecraft/client/gui/screens/SoundOptionsScreen
dgd net/minecraft/client/gui/screens/TitleScreen
	a CUBE_MAP
	b PANORAMA_OVERLAY
	c ACCESSIBILITY_TEXTURE
	d minceraftEasterEgg
	e splash
	f resetDemoButton
	g MINECRAFT_LOGO
	h MINECRAFT_EDITION
	i realmsNotificationsInitialized
	j realmsNotificationsScreen
	k copyrightWidth
	l copyrightX
	m panorama
	n fading
	o fadeInStart
	a ()Z realmsNotificationsEnabled
	a (II)V createNormalMenuOptions
	a (Leah;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; preloadResources
	a (Z)V confirmDemo
	b ()V realmsButtonClicked
	b (II)V createDemoMenuOptions
dge net/minecraft/client/gui/screens/VideoSettingsScreen
	c list
	d OPTIONS
	e oldMipmaps
dgf net/minecraft/client/gui/screens/WinScreen
	a LOGGER
	b LOGO_LOCATION
	c EDITION_LOCATION
	d VIGNETTE_LOCATION
	e poem
	f onFinished
	g time
	h lines
	i totalScrollLength
	j scrollSpeed
	a ()V respawn
	a (IIF)V renderBg
dgg net/minecraft/client/gui/screens/achievement/StatsScreen
	a lastScreen
	c statsList
	d itemStatsList
	e mobsStatsList
	f stats
	g activeList
	h isLoading
	a ()V initLists
	a (I)I getColumnX
	a (IIII)V blitSlotIcon
	a (IILnet/minecraft/server/Item;)V blitSlot
	a (Ldde;)V setActiveList
	b ()V initButtons
	c ()V onStatsUpdated
	d ()Ldde; getActiveList
dgg$a net/minecraft/client/gui/screens/achievement/StatsScreen$GeneralStatisticsList
dgg$a$a net/minecraft/client/gui/screens/achievement/StatsScreen$GeneralStatisticsList$Entry
	b stat
dgg$b net/minecraft/client/gui/screens/achievement/StatsScreen$ItemStatisticsList
	a blockColumns
	b itemColumns
	c headerPressed
	d statItemList
	e itemStatSorter
	f sortColumn
	g sortOrder
	i iconOffsets
	a (I)Lnet/minecraft/server/StatisticWrapper; getColumn
	a (Lnet/minecraft/server/IChatBaseComponent;II)V renderMousehoverTooltip
	a (Lnet/minecraft/server/Item;)Lnet/minecraft/server/IChatBaseComponent; getString
	a (Lnet/minecraft/server/StatisticWrapper;)V sortByColumn
	b (Lnet/minecraft/server/StatisticWrapper;)I getColumnIndex
dgg$b$a net/minecraft/client/gui/screens/achievement/StatsScreen$ItemStatisticsList$ItemComparator
	a (Lnet/minecraft/server/Item;Lnet/minecraft/server/Item;)I compare
dgg$b$b net/minecraft/client/gui/screens/achievement/StatsScreen$ItemStatisticsList$ItemRow
	a (Lnet/minecraft/server/Statistic;IIZ)V renderStat
dgg$c net/minecraft/client/gui/screens/achievement/StatsScreen$MobsStatisticsList
dgg$c$a net/minecraft/client/gui/screens/achievement/StatsScreen$MobsStatisticsList$MobRow
	b type
	a (Ljava/lang/String;I)Ljava/lang/String; killsMessage
	b (Ljava/lang/String;I)Ljava/lang/String; killedByMessage
dgh net/minecraft/client/gui/screens/achievement/StatsUpdateListener
	b LOADING_SYMBOLS
	c ()V onStatsUpdated
dgj net/minecraft/client/gui/screens/advancements/AdvancementTab
	a minecraft
	b screen
	c type
	d index
	e advancement
	f display
	g icon
	h title
	i root
	j widgets
	k scrollX
	l scrollY
	m minX
	n minY
	o maxX
	p maxY
	q fade
	r centered
	a ()Ldgk; getType
	a (DD)V scroll
	a (IIDD)Z isMouseOver
	a (IIII)V drawTooltips
	a (IILdvw;)V drawIcon
	a (IIZ)V drawTab
	a (Ldbl;Ldgn;ILnet/minecraft/server/Advancement;)Ldgj; create
	a (Ldgl;Lnet/minecraft/server/Advancement;)V addWidget
	a (Lnet/minecraft/server/Advancement;)V addAdvancement
	b ()I getIndex
	b (Lnet/minecraft/server/Advancement;)Ldgl; getWidget
	c ()Lnet/minecraft/server/Advancement; getAdvancement
	d ()Ljava/lang/String; getTitle
	e ()Lnet/minecraft/server/AdvancementDisplay; getDisplay
	f ()V drawContents
	g ()Ldgn; getScreen
dgk net/minecraft/client/gui/screens/advancements/AdvancementTabType
	a ABOVE
	b BELOW
	c LEFT
	d RIGHT
	e textureX
	f textureY
	g width
	h height
	i max
	j $VALUES
	a ()I getMax
	a (I)I getX
	a (IIIDD)Z isMouseOver
	a (IIILdvw;Lnet/minecraft/server/ItemStack;)V drawIcon
	a (Ldch;IIZI)V draw
	b (I)I getY
dgl net/minecraft/client/gui/screens/advancements/AdvancementWidget
	a WIDGETS_LOCATION
	b LAST_WORD
	c tab
	d advancement
	e display
	f title
	g width
	h description
	i minecraft
	j parent
	k children
	l progress
	m x
	n y
	a ()I getWidth
	a (II)V draw
	a (IIFII)V drawHover
	a (IIII)Z isMouseOver
	a (IIIIIIII)V renderRepeating
	a (IIIIIIIII)V render9Sprite
	a (IIZ)V drawConnectivity
	a (Ldgl;)V addChild
	a (Ljava/lang/String;I)Ljava/util/List; findOptimalLines
	a (Lnet/minecraft/server/Advancement;)Ldgl; getFirstVisibleParent
	a (Lnet/minecraft/server/AdvancementProgress;)V setProgress
	b ()V attachToParent
	c ()I getY
	d ()I getX
dgm net/minecraft/client/gui/screens/advancements/AdvancementWidgetType
	a OBTAINED
	b UNOBTAINED
	c y
	d $VALUES
	a ()I getIndex
dgn net/minecraft/client/gui/screens/advancements/AdvancementsScreen
	a WINDOW_LOCATION
	b TABS_LOCATION
	c advancements
	d tabs
	e selectedTab
	f isScrolling
	a ()V onAdvancementsCleared
	a (II)V renderWindow
	a (IIII)V renderInside
	a (Lnet/minecraft/server/Advancement;)V onAddAdvancementRoot
	a (Lnet/minecraft/server/Advancement;Lnet/minecraft/server/AdvancementProgress;)V onUpdateAdvancementProgress
	b (IIII)V renderTooltips
	b (Lnet/minecraft/server/Advancement;)V onRemoveAdvancementRoot
	c (Lnet/minecraft/server/Advancement;)V onAddAdvancementTask
	d (Lnet/minecraft/server/Advancement;)V onRemoveAdvancementTask
	e (Lnet/minecraft/server/Advancement;)V onSelectedTabChanged
	f (Lnet/minecraft/server/Advancement;)Ldgl; getAdvancementWidget
	g (Lnet/minecraft/server/Advancement;)Ldgj; getTab
dgp net/minecraft/client/gui/screens/controls/ControlList
	a controlsScreen
	b maxNameWidth
dgp$a net/minecraft/client/gui/screens/controls/ControlList$CategoryEntry
	b name
	c width
dgp$b net/minecraft/client/gui/screens/controls/ControlList$Entry
dgp$c net/minecraft/client/gui/screens/controls/ControlList$KeyEntry
	b key
	c name
	d changeButton
	e resetButton
dgq net/minecraft/client/gui/screens/controls/ControlsScreen
	c selectedKey
	d lastKeySelection
	e controlList
	f resetButton
dgs net/minecraft/client/gui/screens/inventory/AbstractCommandBlockEditScreen
	a commandEdit
	b previousEdit
	c doneButton
	d cancelButton
	e outputButton
	f trackOutput
	g commandSuggestions
	a ()Lnet/minecraft/server/CommandBlockListenerAbstract; getCommandBlock
	a (Ljava/lang/String;)V onEdited
	a (Lnet/minecraft/server/CommandBlockListenerAbstract;)V populateAndSendPacket
	b ()I getPreviousY
	c ()V updateCommandOutput
	d ()V onDone
dgt net/minecraft/client/gui/screens/inventory/AbstractContainerScreen
	A lastClickButton
	B doubleclick
	C lastQuickMoved
	a INVENTORY_LOCATION
	b imageWidth
	c imageHeight
	d menu
	e inventory
	f leftPos
	g topPos
	h hoveredSlot
	i quickCraftSlots
	j isQuickCrafting
	k clickedSlot
	l isSplittingStack
	m draggingItem
	n snapbackStartX
	o snapbackStartY
	p snapbackEnd
	q snapbackTime
	r snapbackItem
	s quickdropSlot
	t quickdropTime
	u quickCraftingType
	v quickCraftingButton
	w skipNextRelease
	x quickCraftingRemainder
	y lastClickTime
	z lastClickSlot
	a ()Lnet/minecraft/server/Container; getMenu
	a (DDIII)Z hasClickedOutside
	a (FII)V renderBg
	a (II)V renderTooltip
	a (IIIIDD)Z isHovering
	a (Lnet/minecraft/server/ItemStack;IILjava/lang/String;)V renderFloatingItem
	a (Lnet/minecraft/server/Slot;)V renderSlot
	a (Lnet/minecraft/server/Slot;DD)Z isHovering
	a (Lnet/minecraft/server/Slot;IILnet/minecraft/server/InventoryClickType;)V slotClicked
	b (II)V renderLabels
	c (DD)Lnet/minecraft/server/Slot; findSlot
	c (II)Z checkNumkeyPressed
	d ()V recalculateQuickCraftRemaining
dgu net/minecraft/client/gui/screens/inventory/AbstractFurnaceScreen
	k recipeBookComponent
	l RECIPE_BUTTON_LOCATION
	m widthTooNarrow
	n texture
	a (DDIII)Z hasClickedOutside
	a (FII)V renderBg
	a (Lnet/minecraft/server/Slot;IILnet/minecraft/server/InventoryClickType;)V slotClicked
	ae_ ()V recipesUpdated
	b (II)V renderLabels
	c ()Ldim; getRecipeBookComponent
dgv net/minecraft/client/gui/screens/inventory/AnvilScreen
	k ANVIL_LOCATION
	l name
	a (FII)V renderBg
	a (Ljava/lang/String;)V onNameChanged
	a (Lnet/minecraft/server/Container;II)V setContainerData
	a (Lnet/minecraft/server/Container;ILnet/minecraft/server/ItemStack;)V slotChanged
	a (Lnet/minecraft/server/Container;Lnet/minecraft/server/NonNullList;)V refreshContainer
	b (II)V renderLabels
dgw net/minecraft/client/gui/screens/inventory/BeaconScreen
	k BEACON_LOCATION
	l confirmButton
	m initPowerButtons
	n primary
	o secondary
	a (FII)V renderBg
	b (II)V renderLabels
dgw$a net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconCancelButton
dgw$b net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconConfirmButton
dgw$c net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconPowerButton
	b effect
	c sprite
	d isPrimary
	a ()V renderIcon
dgw$d net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconScreenButton
	a selected
	a ()V renderIcon
	a (Z)V setSelected
	b ()Z isSelected
dgw$e net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconSpriteScreenButton
	a iconX
	b iconY
	a ()V renderIcon
dgx net/minecraft/client/gui/screens/inventory/BlastFurnaceScreen
	l TEXTURE
dgy net/minecraft/client/gui/screens/inventory/BookEditScreen
	a owner
	b book
	c isModified
	d isSigning
	e frameTick
	f currentPage
	g pages
	h title
	i cursorPos
	j selectionPos
	k lastClickTime
	l lastIndex
	m forwardButton
	n backButton
	o doneButton
	p signButton
	q finalizeButton
	r cancelButton
	s hand
	a ()I getNumPages
	a (Ldgy$a;)V handleBidi
	a (Ldgy$a;Ldgy$a;)V renderHighlight
	a (Ljava/lang/String;)Ljava/lang/String; filterText
	a (Ljava/lang/String;I)I getWidthAt
	a (Ljava/lang/String;Ldgy$a;)I getIndexAtPosition
	a (Z)V saveChanges
	b ()V pageBack
	b (III)Z bookKeyPressed
	b (Ldgy$a;)V convertScreenToLocal
	b (Ljava/lang/String;)V keyBackspace
	b (Ljava/lang/String;I)I strIndexAtWidth
	c ()V pageForward
	c (III)Z titleKeyPressed
	c (Ldgy$a;)V convertLocalToScreen
	c (Ljava/lang/String;)V keyDelete
	c (Ljava/lang/String;I)Ldgy$a; getPositionAtIndex
	d ()V updateButtonVisibility
	d (Ljava/lang/String;)V keyLeft
	d (Ljava/lang/String;I)I indexInLine
	e ()V eraseEmptyTrailingPages
	e (Ljava/lang/String;)V keyRight
	f ()V appendPageToBook
	f (Ljava/lang/String;)V keyUp
	g ()V deleteSelection
	g (Ljava/lang/String;)V keyDown
	h ()Ljava/lang/String; getCurrentPageText
	h (Ljava/lang/String;)V keyHome
	i ()Ljava/lang/String; getSelected
	i (Ljava/lang/String;)V keyEnd
	j (Ljava/lang/String;)V setCurrentPageText
	k (Ljava/lang/String;)V insertText
	l (Ljava/lang/String;)I strWidth
	m (Ljava/lang/String;)V renderSelection
dgy$a net/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i
	b x
	c y
dgz net/minecraft/client/gui/screens/inventory/BookViewScreen
	a EMPTY_ACCESS
	b BOOK_LOCATION
	c bookAccess
	d currentPage
	e cachedPageComponents
	f cachedPage
	g forwardButton
	h backButton
	i playTurnSound
	a ()I getNumPages
	a (I)Z setPage
	a (Ldgz$a;)V setBookAccess
	a (Ljava/lang/String;)I strWidth
	a (Lnet/minecraft/server/NBTTagCompound;)Ljava/util/List; convertPages
	b ()V createMenuControls
	b (I)Z forcePage
	c ()V createPageControlButtons
	c (DD)Lnet/minecraft/server/IChatBaseComponent; getClickedComponentAt
	d ()V pageBack
	e ()V pageForward
	f ()V updateButtonVisibility
dgz$a net/minecraft/client/gui/screens/inventory/BookViewScreen$BookAccess
	a ()I getPageCount
	a (I)Lnet/minecraft/server/IChatBaseComponent; getPageRaw
	a (Lnet/minecraft/server/ItemStack;)Ldgz$a; fromItem
	b (I)Lnet/minecraft/server/IChatBaseComponent; getPage
dgz$b net/minecraft/client/gui/screens/inventory/BookViewScreen$WritableBookAccess
	a pages
	a ()I getPageCount
	a (I)Lnet/minecraft/server/IChatBaseComponent; getPageRaw
	b (Lnet/minecraft/server/ItemStack;)Ljava/util/List; readPages
dgz$c net/minecraft/client/gui/screens/inventory/BookViewScreen$WrittenBookAccess
	a pages
	a ()I getPageCount
	a (I)Lnet/minecraft/server/IChatBaseComponent; getPageRaw
	b (Lnet/minecraft/server/ItemStack;)Ljava/util/List; readPages
dha net/minecraft/client/gui/screens/inventory/BrewingStandScreen
	k BREWING_STAND_LOCATION
	l BUBBLELENGTHS
	a (FII)V renderBg
	b (II)V renderLabels
dhb net/minecraft/client/gui/screens/inventory/CartographyTableScreen
	k BG_LOCATION
	a (FII)V renderBg
	a (Lnet/minecraft/server/WorldMap;IIF)V renderMap
	a (Lnet/minecraft/server/WorldMap;ZZZZ)V renderResultingMap
	b (II)V renderLabels
dhc net/minecraft/client/gui/screens/inventory/CommandBlockEditScreen
	g autoCommandBlock
	h modeButton
	i conditionalButton
	j autoexecButton
	k mode
	l conditional
	m autoexec
	a ()Lnet/minecraft/server/CommandBlockListenerAbstract; getCommandBlock
	a (Lnet/minecraft/server/CommandBlockListenerAbstract;)V populateAndSendPacket
	b ()I getPreviousY
	e ()V updateGui
	f ()V updateMode
	g ()V nextMode
	h ()V updateConditional
	i ()V updateAutoexec
dhd net/minecraft/client/gui/screens/inventory/ContainerScreen
	k CONTAINER_BACKGROUND
	l containerRows
	a (FII)V renderBg
	b (II)V renderLabels
dhe net/minecraft/client/gui/screens/inventory/CraftingScreen
	k CRAFTING_TABLE_LOCATION
	l RECIPE_BUTTON_LOCATION
	m recipeBookComponent
	n widthTooNarrow
	a (DDIII)Z hasClickedOutside
	a (FII)V renderBg
	a (IIIIDD)Z isHovering
	a (Lnet/minecraft/server/Slot;IILnet/minecraft/server/InventoryClickType;)V slotClicked
	ae_ ()V recipesUpdated
	b (II)V renderLabels
	c ()Ldim; getRecipeBookComponent
dhf net/minecraft/client/gui/screens/inventory/CreativeInventoryListener
	a minecraft
	a (Lnet/minecraft/server/Container;II)V setContainerData
	a (Lnet/minecraft/server/Container;ILnet/minecraft/server/ItemStack;)V slotChanged
	a (Lnet/minecraft/server/Container;Lnet/minecraft/server/NonNullList;)V refreshContainer
dhg net/minecraft/client/gui/screens/inventory/CreativeModeInventoryScreen
	l CREATIVE_TABS_LOCATION
	m CONTAINER
	n selectedTab
	o scrollOffs
	p scrolling
	q searchBox
	r originalSlots
	s destroyItemSlot
	t listener
	u ignoreTextInput
	v hasClickedOutside
	w visibleTags
	a (DDIII)Z hasClickedOutside
	a (FII)V renderBg
	a (III)Z keyReleased
	a (Ldbl;IZZ)V handleHotbarLoadOrSave
	a (Ljava/lang/String;)V updateVisibleTags
	a (Lnet/minecraft/server/CreativeModeTab;)V renderTabButton
	a (Lnet/minecraft/server/CreativeModeTab;DD)Z checkTabClicked
	a (Lnet/minecraft/server/CreativeModeTab;II)Z checkTabHovering
	a (Lnet/minecraft/server/Slot;)Z isCreativeSlot
	a (Lnet/minecraft/server/Slot;IILnet/minecraft/server/InventoryClickType;)V slotClicked
	b ()V checkEffectRendering
	b (II)V renderLabels
	b (Lnet/minecraft/server/CreativeModeTab;)V selectTab
	c ()I getSelectedTab
	c (DD)Z insideScrollbar
	e ()V refreshSearchResults
	f ()Z canScroll
dhg$a net/minecraft/client/gui/screens/inventory/CreativeModeInventoryScreen$CustomCreativeSlot
	a (Lnet/minecraft/server/EntityHuman;)Z mayPickup
dhg$b net/minecraft/client/gui/screens/inventory/CreativeModeInventoryScreen$ItemPickerMenu
	c items
	a (F)V scrollTo
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/Slot;)Z canTakeItemForPickAll
	b (Lnet/minecraft/server/EntityHuman;I)Lnet/minecraft/server/ItemStack; quickMoveStack
	b (Lnet/minecraft/server/Slot;)Z canDragTo
	e ()Z canScroll
dhg$c net/minecraft/client/gui/screens/inventory/CreativeModeInventoryScreen$SlotWrapper
	a target
	a ()I getMaxStackSize
	a (I)Lnet/minecraft/server/ItemStack; remove
	a (Lnet/minecraft/server/EntityHuman;)Z mayPickup
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; onTake
	a (Lnet/minecraft/server/IInventory;I)Z isAt
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
	a (Lnet/minecraft/server/Slot;)V swap
	b ()Z isActive
	b (Lnet/minecraft/server/ItemStack;)I getMaxStackSize
	c ()Lcom/mojang/datafixers/util/Pair; getNoItemIcon
	d ()V setChanged
	d (Lnet/minecraft/server/ItemStack;)V set
	e ()Lnet/minecraft/server/ItemStack; getItem
	f ()Z hasItem
dhh net/minecraft/client/gui/screens/inventory/DispenserScreen
	k CONTAINER_LOCATION
	a (FII)V renderBg
	b (II)V renderLabels
dhi net/minecraft/client/gui/screens/inventory/EffectRenderingInventoryScreen
	k doRenderEffects
	a (IILjava/lang/Iterable;)V renderBackgrounds
	b ()V checkEffectRendering
	b (IILjava/lang/Iterable;)V renderIcons
	c ()V renderEffects
	c (IILjava/lang/Iterable;)V renderLabels
dhj net/minecraft/client/gui/screens/inventory/EnchantmentNames
	a INSTANCE
	b random
	c words
	a ()Ldhj; getInstance
	a (J)V initSeed
	a (Ldcf;I)Ljava/lang/String; getRandomName
dhk net/minecraft/client/gui/screens/inventory/EnchantmentScreen
	k time
	l flip
	m oFlip
	n flipT
	o flipA
	p open
	q oOpen
	r ENCHANTING_TABLE_LOCATION
	s ENCHANTING_BOOK_LOCATION
	t BOOK_MODEL
	u random
	v last
	a (FII)V renderBg
	b ()V tickBook
	b (II)V renderLabels
dhl net/minecraft/client/gui/screens/inventory/FurnaceScreen
	l TEXTURE
dhm net/minecraft/client/gui/screens/inventory/GrindstoneScreen
	k GRINDSTONE_LOCATION
	a (FII)V renderBg
	b (II)V renderLabels
dhn net/minecraft/client/gui/screens/inventory/HopperScreen
	k HOPPER_LOCATION
	a (FII)V renderBg
	b (II)V renderLabels
dho net/minecraft/client/gui/screens/inventory/HorseInventoryScreen
	k HORSE_INVENTORY_LOCATION
	l horse
	m xMouse
	n yMouse
	a (FII)V renderBg
	b (II)V renderLabels
dhp net/minecraft/client/gui/screens/inventory/InventoryScreen
	l RECIPE_BUTTON_LOCATION
	m xMouse
	n yMouse
	o recipeBookComponent
	p recipeBookComponentInitialized
	q widthTooNarrow
	r buttonClicked
	a (DDIII)Z hasClickedOutside
	a (FII)V renderBg
	a (IIIFFLnet/minecraft/server/EntityLiving;)V renderEntityInInventory
	a (IIIIDD)Z isHovering
	a (Lnet/minecraft/server/Slot;IILnet/minecraft/server/InventoryClickType;)V slotClicked
	ae_ ()V recipesUpdated
	b (II)V renderLabels
	c ()Ldim; getRecipeBookComponent
dhq net/minecraft/client/gui/screens/inventory/JigsawBlockEditScreen
	a jigsawEntity
	b attachementTypeEdit
	c targetPoolEdit
	d finalStateEdit
	e doneButton
	a ()V updateValidity
	b ()V onDone
	c ()V onCancel
	d ()V sendToServer
dhr net/minecraft/client/gui/screens/inventory/LecternScreen
	c menu
	d listener
	a ()Lnet/minecraft/server/Container; getMenu
	b ()V createMenuControls
	b (I)Z forcePage
	c (I)V sendButtonClick
	d ()V pageBack
	e ()V pageForward
	f ()Lnet/minecraft/server/ContainerLectern; getMenu
	g ()V bookChanged
	h ()V pageChanged
dhs net/minecraft/client/gui/screens/inventory/LoomScreen
	k BG_LOCATION
	l TOTAL_PATTERN_ROWS
	m flag
	n resultBanner
	o bannerStack
	p dyeStack
	q patternStack
	r displayPatterns
	s displaySpecialPattern
	t hasMaxPatterns
	u scrollOffs
	v scrolling
	w startIndex
	a (DDIII)Z hasClickedOutside
	a (FII)V renderBg
	b ()V containerChanged
	b (II)V renderLabels
	b (III)V renderPattern
dht net/minecraft/client/gui/screens/inventory/MenuAccess
	a ()Lnet/minecraft/server/Container; getMenu
dhu net/minecraft/client/gui/screens/inventory/MerchantScreen
	k VILLAGER_LOCATION
	l shopItem
	m tradeOfferButtons
	n scrollOff
	o isDragging
	a (FII)V renderBg
	a (I)Z canScroll
	a (IILnet/minecraft/server/MerchantRecipe;)V renderProgressBar
	a (IILnet/minecraft/server/MerchantRecipeList;)V renderScroller
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;II)V renderAndDecorateCostA
	a (Lnet/minecraft/server/MerchantRecipe;II)V renderButtonArrows
	b ()V postButtonClick
	b (II)V renderLabels
dhu$a net/minecraft/client/gui/screens/inventory/MerchantScreen$TradeOfferButton
	a index
	a ()I getIndex
dhv net/minecraft/client/gui/screens/inventory/MinecartCommandBlockEditScreen
	g commandBlock
	a ()Lnet/minecraft/server/CommandBlockListenerAbstract; getCommandBlock
	a (Lnet/minecraft/server/CommandBlockListenerAbstract;)V populateAndSendPacket
	b ()I getPreviousY
dhw net/minecraft/client/gui/screens/inventory/PageButton
	a isForward
	b playTurnSound
dhx net/minecraft/client/gui/screens/inventory/ShulkerBoxScreen
	k CONTAINER_TEXTURE
	a (FII)V renderBg
	b (II)V renderLabels
dhy net/minecraft/client/gui/screens/inventory/SignEditScreen
	a signModel
	b sign
	c frame
	d line
	e signField
	a ()V onDone
dhz net/minecraft/client/gui/screens/inventory/SmokerScreen
	l TEXTURE
di$a net/minecraft/commands/arguments/OperationArgument$Operation
di$b net/minecraft/commands/arguments/OperationArgument$SimpleOperation
dia net/minecraft/client/gui/screens/inventory/StonecutterScreen
	k BG_LOCATION
	l scrollOffs
	m scrolling
	n startIndex
	o displayRecipes
	a (FII)V renderBg
	a (IIIII)V renderButtons
	b ()I getOffscreenRows
	b (II)V renderLabels
	b (III)V renderRecipes
	c ()Z isScrollBarActive
	d ()V containerChanged
dib net/minecraft/client/gui/screens/inventory/StructureBlockEditScreen
	A detectButton
	B entitiesButton
	C mirrorButton
	D toggleAirButton
	E toggleBoundingBox
	F decimalFormat
	a structure
	b initialMirror
	c initialRotation
	d initialMode
	e initialEntityIgnoring
	f initialShowAir
	g initialShowBoundingBox
	h nameEdit
	i posXEdit
	j posYEdit
	k posZEdit
	l sizeXEdit
	m sizeYEdit
	n sizeZEdit
	o integrityEdit
	p seedEdit
	q dataEdit
	r doneButton
	s cancelButton
	t saveButton
	u loadButton
	v rot0Button
	w rot90Button
	x rot180Button
	y rot270Button
	z modeButton
	a ()V onDone
	a (Ljava/lang/String;)J parseSeed
	a (Lnet/minecraft/server/TileEntityStructure$UpdateType;)Z sendToServer
	b ()V onCancel
	b (Ljava/lang/String;)F parseIntegrity
	c ()V updateEntitiesButton
	c (Ljava/lang/String;)I parseCoordinate
	d ()V updateToggleAirButton
	e ()V updateToggleBoundingBox
	f ()V updateMirrorButton
	g ()V updateDirectionButtons
	h ()V updateMode
die net/minecraft/client/gui/screens/multiplayer/JoinMultiplayerScreen
	a serverSelectionList
	b LOGGER
	c pinger
	d lastScreen
	e servers
	f editButton
	g selectButton
	h deleteButton
	i toolTip
	j editingServer
	k lanServerList
	l lanServerDetector
	m initedOnce
	a ()V joinSelectedServer
	a (Ldif$a;)V setSelected
	a (Ldnr;)V join
	a (Ljava/lang/String;)V setToolTip
	a (Z)V deleteCallback
	b ()V onSelectedChange
	b (Z)V editServerCallback
	c ()Ldnt; getPinger
	c (Z)V addServerCallback
	d ()Ldns; getServers
	d (Z)V directJoinCallback
	e ()V refreshServerList
dif net/minecraft/client/gui/screens/multiplayer/ServerSelectionList
	a LOGGER
	b THREAD_POOL
	c ICON_MISSING
	d ICON_OVERLAY_LOCATION
	e screen
	f onlineServers
	g lanHeader
	h networkServers
	a (Ldif$a;)V setSelected
	a (Ldns;)V updateOnlineServers
	a (Ljava/util/List;)V updateNetworkServers
	e ()V refreshEntries
dif$a net/minecraft/client/gui/screens/multiplayer/ServerSelectionList$Entry
dif$b net/minecraft/client/gui/screens/multiplayer/ServerSelectionList$LANHeader
	a minecraft
dif$c net/minecraft/client/gui/screens/multiplayer/ServerSelectionList$NetworkServerEntry
	a minecraft
	b serverData
	c screen
	d lastClickTime
	a ()Ledk; getServerData
dif$d net/minecraft/client/gui/screens/multiplayer/ServerSelectionList$OnlineServerEntry
	b screen
	c minecraft
	d serverData
	e iconLocation
	f lastIconB64
	g icon
	h lastClickTime
	a ()Ldnr; getServerData
	a (II)V swap
	a (IILnet/minecraft/server/MinecraftKey;)V drawIcon
	b ()Z canJoin
	c ()V loadServerIcon
dii net/minecraft/client/gui/screens/recipebook/AbstractFurnaceRecipeBookComponent
	i iterator
	j fuels
	k fuelSlot
	l fuel
	m time
	a ()Z updateFiltering
	a (IIZF)V renderGhostRecipe
	a (Lnet/minecraft/server/IRecipe;Ljava/util/List;)V setupGhostRecipe
	a (Lnet/minecraft/server/Slot;)V slotClicked
	a (Z)V setFilteringCraftable
	b ()Z getFilteringCraftable
	b (Z)V setVisible
	c ()Z isVisible
	c (Z)V setGuiOpen
	d ()Z isGuiOpen
	e ()V initFilterButtonTextures
	f ()Ljava/lang/String; getFilterButtonTooltip
	g ()Ljava/lang/String; getRecipeFilterName
	h ()Ljava/util/Set; getFuelItems
	n ()Lnet/minecraft/server/Item; getFuel
dij net/minecraft/client/gui/screens/recipebook/BlastingRecipeBookComponent
	a (Z)V setFilteringCraftable
	b ()Z getFilteringCraftable
	c (Z)V setGuiOpen
	d ()Z isGuiOpen
	g ()Ljava/lang/String; getRecipeFilterName
	h ()Ljava/util/Set; getFuelItems
dik net/minecraft/client/gui/screens/recipebook/GhostRecipe
	a recipe
	b ingredients
	c time
	a ()V clear
	a (I)Ldik$a; get
	a (Ldbl;IIZF)V render
	a (Lnet/minecraft/server/IRecipe;)V setRecipe
	a (Lnet/minecraft/server/RecipeItemStack;II)V addIngredient
	b ()I size
	c ()Lnet/minecraft/server/IRecipe; getRecipe
dik$a net/minecraft/client/gui/screens/recipebook/GhostRecipe$GhostIngredient
	b ingredient
	c x
	d y
	a ()I getX
	b ()I getY
	c ()Lnet/minecraft/server/ItemStack; getItem
dil net/minecraft/client/gui/screens/recipebook/OverlayRecipeComponent
	a RECIPE_BOOK_LOCATION
	b recipeButtons
	c isVisible
	d x
	e y
	f minecraft
	g collection
	h lastRecipeClicked
	i time
	j isFurnaceMenu
	a ()Ldiq; getRecipeCollection
	a (IIIIII)V nineInchSprite
	a (Ldbl;Ldiq;IIIIF)V init
	a (Z)V setVisible
	b ()Lnet/minecraft/server/IRecipe; getLastRecipeClicked
	c ()Z isVisible
dil$a net/minecraft/client/gui/screens/recipebook/OverlayRecipeComponent$OverlayRecipeButton
	a ingredientPos
	c recipe
	d isCraftable
	a (Ljava/util/Iterator;IIII)V addItemToSlot
	a (Lnet/minecraft/server/IRecipe;)V calculateIngredientsPositions
dil$a$a net/minecraft/client/gui/screens/recipebook/OverlayRecipeComponent$OverlayRecipeButton$Pos
	a ingredients
	b x
	c y
dil$b net/minecraft/client/gui/screens/recipebook/OverlayRecipeComponent$OverlaySmeltingRecipeButton
	a (Lnet/minecraft/server/IRecipe;)V calculateIngredientsPositions
dim net/minecraft/client/gui/screens/recipebook/RecipeBookComponent
	a RECIPE_BOOK_LOCATION
	b ghostRecipe
	c filterButton
	d menu
	e minecraft
	f book
	g recipeBookPage
	h stackedContents
	i xOffset
	j width
	k height
	l tabButtons
	m selectedTab
	n searchBox
	o lastSearch
	p timesInventoryChanged
	q ignoreTextInput
	a ()Z updateFiltering
	a (DDIIIII)Z hasClickedOutside
	a (III)Z keyReleased
	a (IIII)V renderTooltip
	a (IILdbl;ZLnet/minecraft/server/ContainerRecipeBook;)V init
	a (IIZF)V renderGhostRecipe
	a (Ljava/lang/String;)V pirateSpeechForThePeople
	a (Ljava/util/Iterator;IIII)V addItemToSlot
	a (Ljava/util/List;)V recipesShown
	a (Lnet/minecraft/server/IRecipe;Ljava/util/List;)V setupGhostRecipe
	a (Lnet/minecraft/server/Slot;)V slotClicked
	a (Z)V updateCollections
	a (ZII)I updateScreenPosition
	b ()V updateTabs
	b (IIII)V renderGhostRecipeTooltip
	b (Z)V setVisible
	c ()Z isVisible
	d ()V updateStackedContents
	d (Z)V initVisuals
	e ()V initFilterButtonTextures
	f ()Ljava/lang/String; getFilterButtonTooltip
	g ()V checkSearchStringUpdate
	h ()Z isOffsetNextToMainGUI
	i ()V removed
	j ()V toggleVisibility
	k ()V tick
	l ()V recipesUpdated
	m ()V sendUpdateSettings
din net/minecraft/client/gui/screens/recipebook/RecipeBookPage
	a buttons
	b hoveredButton
	c overlay
	d minecraft
	e showListeners
	f recipeCollections
	g forwardButton
	h backButton
	i totalPages
	j currentPage
	k recipeBook
	l lastClickedRecipe
	m lastClickedRecipeCollection
	a ()Lnet/minecraft/server/IRecipe; getLastClickedRecipe
	a (DDIIIII)Z mouseClicked
	a (II)V renderTooltip
	a (IIIIF)V render
	a (Ldbl;II)V init
	a (Ldim;)V addListener
	a (Ljava/util/List;)V recipesShown
	a (Ljava/util/List;Z)V updateCollections
	b ()Ldiq; getLastClickedRecipeCollection
	c ()V setInvisible
	d ()Ldbl; getMinecraft
	e ()Lnet/minecraft/server/RecipeBook; getRecipeBook
	f ()V updateButtonsForPage
	g ()V updateArrowButtons
dio net/minecraft/client/gui/screens/recipebook/RecipeBookTabButton
	g category
	h animationTime
	a (Ldba;)Z updateVisibility
	a (Ldbl;)V startAnimation
	a (Ldvw;)V renderIcon
	b ()Ldbs; getCategory
dip net/minecraft/client/gui/screens/recipebook/RecipeButton
	a RECIPE_BOOK_LOCATION
	b menu
	c book
	d collection
	e time
	f animationTime
	g currentIndex
	a ()Ldiq; getCollection
	a (II)V setPosition
	a (Ldfz;)Ljava/util/List; getTooltipText
	a (Ldiq;Ldin;)V init
	b ()Z isOnlyOption
	c ()Lnet/minecraft/server/IRecipe; getRecipe
	d ()Ljava/util/List; getOrderedRecipes
diq net/minecraft/client/gui/screens/recipebook/RecipeCollection
	a recipes
	b craftable
	c fitsDimensions
	d known
	e singleResultItem
	a ()Z hasKnownRecipes
	a (Lnet/minecraft/server/AutoRecipeStackManager;IILnet/minecraft/server/RecipeBook;)V canCraft
	a (Lnet/minecraft/server/IRecipe;)Z isCraftable
	a (Lnet/minecraft/server/RecipeBook;)V updateKnownRecipes
	a (Z)Ljava/util/List; getRecipes
	b ()Z hasCraftable
	b (Lnet/minecraft/server/IRecipe;)V add
	b (Z)Ljava/util/List; getDisplayRecipes
	c ()Z hasFitting
	d ()Ljava/util/List; getRecipes
	e ()Z hasSingleResultItem
dir net/minecraft/client/gui/screens/recipebook/RecipeShownListener
	a (Ljava/util/List;)V recipesShown
dis net/minecraft/client/gui/screens/recipebook/RecipeUpdateListener
	ae_ ()V recipesUpdated
	c ()Ldim; getRecipeBookComponent
dit net/minecraft/client/gui/screens/recipebook/SmeltingRecipeBookComponent
	a (Z)V setFilteringCraftable
	b ()Z getFilteringCraftable
	c (Z)V setGuiOpen
	d ()Z isGuiOpen
	g ()Ljava/lang/String; getRecipeFilterName
	h ()Ljava/util/Set; getFuelItems
diu net/minecraft/client/gui/screens/recipebook/SmokingRecipeBookComponent
	a (Z)V setFilteringCraftable
	b ()Z getFilteringCraftable
	c (Z)V setGuiOpen
	d ()Z isGuiOpen
	g ()Ljava/lang/String; getRecipeFilterName
	h ()Ljava/util/Set; getFuelItems
diw net/minecraft/client/gui/screens/resourcepacks/ResourcePackSelectScreen
	c availableResourcePackList
	d selectedResourcePackList
	e changed
	a ()V setChanged
	a (Ldiz$a;)V select
	b (Ldiz$a;)V deselect
	c (Ldiz$a;)Z isSelected
diy net/minecraft/client/gui/screens/resourcepacks/lists/AvailableResourcePackList
diz net/minecraft/client/gui/screens/resourcepacks/lists/ResourcePackList
	a minecraft
	b ICON_OVERLAY_LOCATION
	c INCOMPATIBLE_TITLE
	d INCOMPATIBLE_CONFIRM_TITLE
	e title
	a (Ldiz$a;)V addResourcePackEntry
diz$a net/minecraft/client/gui/screens/resourcepacks/lists/ResourcePackList$ResourcePackEntry
	a minecraft
	b screen
	c parent
	d resourcePack
	a ()V bindToIcon
	a (Ldja;)V addToList
	b ()Lnet/minecraft/server/EnumResourcePackVersion; getCompatibility
	b (Ldja;)V updateParentList
	c ()Ljava/lang/String; getDescription
	d ()Ljava/lang/String; getName
	e ()Leaz; getResourcePack
	f ()Z showHoverOverlay
	g ()Z canMoveRight
	h ()Z canMoveLeft
	i ()Z canMoveUp
	j ()Z canMoveDown
	k ()Ldiw; getScreen
dja net/minecraft/client/gui/screens/resourcepacks/lists/SelectedResourcePackList
dje net/minecraft/client/gui/screens/worldselection/CreateWorldScreen
	A levelTypeIndex
	a levelTypeOptions
	b lastScreen
	c nameEdit
	d seedEdit
	e resultFolder
	f gameMode
	g oldGameMode
	h features
	i commands
	j commandsChanged
	k bonusItems
	l hardCore
	m done
	n displayOptions
	o createButton
	p modeButton
	q moreOptionsButton
	r featuresButton
	s bonusItemsButton
	t typeButton
	u commandsButton
	v customizeTypeButton
	w gameModeHelp1
	x gameModeHelp2
	y initSeed
	z initName
	a ()V updateGameModeHelp
	a (Ldje$a;)V setGameMode
	a (Lnet/minecraft/server/WorldData;)V copyFromWorld
	a (Z)V setDisplayOptions
	b ()V updateResultFolder
	c ()V onCreate
	d ()Z isValidLevelType
	e ()V toggleDisplayOptions
dje$a net/minecraft/client/gui/screens/worldselection/CreateWorldScreen$SelectedGameMode
	a SURVIVAL
	b HARDCORE
	c CREATIVE
	d DEBUG
	e name
	f gameType
	g $VALUES
djf net/minecraft/client/gui/screens/worldselection/EditWorldScreen
	a renameButton
	b callback
	c nameEdit
	d levelId
	a ()V onRename
	a (Lnet/minecraft/server/Convertable;Ljava/lang/String;)V makeBackupAndShowToast
djg net/minecraft/client/gui/screens/worldselection/OptimizeWorldScreen
	a DIMENSION_COLORS
	b callback
	c upgrader
djh net/minecraft/client/gui/screens/worldselection/SelectWorldScreen
	a lastScreen
	b searchBox
	c toolTip
	d deleteButton
	e selectButton
	f renameButton
	g copyButton
	h list
	a (Ljava/lang/String;)V setToolTip
	a (Z)V updateButtonStatus
dji net/minecraft/client/gui/screens/worldselection/WorldSelectionList
	a LOGGER
	b DATE_FORMAT
	c ICON_MISSING
	d ICON_OVERLAY_LOCATION
	e screen
	f cachedList
	a ()Ljava/util/Optional; getSelectedOpt
	a (Ldji$a;)V setSelected
	a (Ljava/util/function/Supplier;Z)V refreshList
	b ()Ldjh; getScreen
dji$a net/minecraft/client/gui/screens/worldselection/WorldSelectionList$WorldListEntry
	b minecraft
	c screen
	d summary
	e iconLocation
	f iconFile
	g icon
	h lastClickTime
	a ()V joinWorld
	b ()V deleteWorld
	c ()V editWorld
	d ()V recreateWorld
	e ()V loadWorld
	f ()Ldzv; loadServerIcon
djk net/minecraft/client/gui/spectator/PlayerMenuItem
	a profile
	b location
	a (FI)V renderIcon
	a (Ldjm;)V selectItem
	af_ ()Lnet/minecraft/server/IChatBaseComponent; getName
	ag_ ()Z isEnabled
djl net/minecraft/client/gui/spectator/RootSpectatorMenuCategory
	a items
	a ()Ljava/util/List; getItems
	b ()Lnet/minecraft/server/IChatBaseComponent; getPrompt
djm net/minecraft/client/gui/spectator/SpectatorMenu
	a EMPTY_SLOT
	b CLOSE_ITEM
	c SCROLL_LEFT
	d SCROLL_RIGHT_ENABLED
	e SCROLL_RIGHT_DISABLED
	f listener
	g previousCategories
	h category
	i selectedSlot
	j page
	a ()Ljava/util/List; getItems
	a (I)Ldjo; getItem
	a (Ldjn;)V selectCategory
	b ()Ldjo; getSelectedItem
	b (I)V selectSlot
	c ()Ldjn; getSelectedCategory
	d ()V exit
	e ()I getSelectedSlot
	f ()Ldjq; getCurrentPage
	g ()Ljava/util/List; getAllPages
djm$a net/minecraft/client/gui/spectator/SpectatorMenu$CloseSpectatorItem
	a (FI)V renderIcon
	a (Ldjm;)V selectItem
	af_ ()Lnet/minecraft/server/IChatBaseComponent; getName
	ag_ ()Z isEnabled
djm$b net/minecraft/client/gui/spectator/SpectatorMenu$ScrollMenuItem
	a direction
	b enabled
	a (FI)V renderIcon
	a (Ldjm;)V selectItem
	af_ ()Lnet/minecraft/server/IChatBaseComponent; getName
	ag_ ()Z isEnabled
djn net/minecraft/client/gui/spectator/SpectatorMenuCategory
	a ()Ljava/util/List; getItems
	b ()Lnet/minecraft/server/IChatBaseComponent; getPrompt
djo net/minecraft/client/gui/spectator/SpectatorMenuItem
	a (FI)V renderIcon
	a (Ldjm;)V selectItem
	af_ ()Lnet/minecraft/server/IChatBaseComponent; getName
	ag_ ()Z isEnabled
djp net/minecraft/client/gui/spectator/SpectatorMenuListener
	a (Ldjm;)V onSpectatorMenuClosed
djq net/minecraft/client/gui/spectator/categories/SpectatorPage
	a category
	b items
	c selection
	a ()Ldjn; getCategory
	a (I)Ldjo; getItem
	b ()I getSelectedSlot
djr net/minecraft/client/gui/spectator/categories/TeleportToPlayerMenuCategory
	a PROFILE_ORDER
	b items
	a ()Ljava/util/List; getItems
	a (FI)V renderIcon
	a (Ldjm;)V selectItem
	af_ ()Lnet/minecraft/server/IChatBaseComponent; getName
	ag_ ()Z isEnabled
	b ()Lnet/minecraft/server/IChatBaseComponent; getPrompt
djs net/minecraft/client/gui/spectator/categories/TeleportToTeamMenuCategory
	a items
	a ()Ljava/util/List; getItems
	a (FI)V renderIcon
	a (Ldjm;)V selectItem
	af_ ()Lnet/minecraft/server/IChatBaseComponent; getName
	ag_ ()Z isEnabled
	b ()Lnet/minecraft/server/IChatBaseComponent; getPrompt
djs$a net/minecraft/client/gui/spectator/categories/TeleportToTeamMenuCategory$TeamSelectionItem
	b team
	c location
	d players
	a (FI)V renderIcon
	a (Ldjm;)V selectItem
	af_ ()Lnet/minecraft/server/IChatBaseComponent; getName
	ag_ ()Z isEnabled
djv net/minecraft/client/main/GameConfig
	a user
	b display
	c location
	d game
	e server
djv$a net/minecraft/client/main/GameConfig$FolderData
	a gameDirectory
	b resourcePackDirectory
	c assetDirectory
	d assetIndex
	a ()Leak; getAssetIndex
djv$b net/minecraft/client/main/GameConfig$GameData
	a demo
	b launchVersion
	c versionType
djv$c net/minecraft/client/main/GameConfig$ServerData
	a hostname
	b port
djv$d net/minecraft/client/main/GameConfig$UserData
	a user
	b userProperties
	c profileProperties
	d proxy
djw net/minecraft/client/main/SilentInitException
djy net/minecraft/client/map/Map
	a xCam
	b yCam
	c COLOR
	d ODD_COLOR
	e LOGGER
	f image
	g pixels
	h w
	i h
	j scale
	k xMouse
	l yMouse
	m redraw
	n layer
	o lastUpdate
	p hovered
	q teleportCommand
	a (IIII)V buildMapImage
	a (Lnet/minecraft/server/BiomeBase;)I getColor
	a (Lnet/minecraft/server/BiomeBase;I)V setColor
	a (Lnet/minecraft/server/BiomeBase;II)V setColor
	a ([Ljava/lang/String;)V main
	b (Lnet/minecraft/server/BiomeBase;)I getOddColor
dk$a net/minecraft/commands/arguments/RangeArgument$Floats
	a EXAMPLES
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/CriterionConditionValue$FloatRange; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/CriterionConditionValue$FloatRange; getRange
dk$a$a net/minecraft/commands/arguments/RangeArgument$Floats$Serializer
	a (Lnet/minecraft/server/PacketDataSerializer;)Ldk$a; deserializeFromNetwork
	b (Lnet/minecraft/server/PacketDataSerializer;)Lcom/mojang/brigadier/arguments/ArgumentType; deserializeFromNetwork
dk$b net/minecraft/commands/arguments/RangeArgument$Ints
	a EXAMPLES
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/CriterionConditionValue$IntegerRange; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/CriterionConditionValue$IntegerRange; getRange
dk$b$a net/minecraft/commands/arguments/RangeArgument$Ints$Serializer
	a (Lnet/minecraft/server/PacketDataSerializer;)Ldk$b; deserializeFromNetwork
	b (Lnet/minecraft/server/PacketDataSerializer;)Lcom/mojang/brigadier/arguments/ArgumentType; deserializeFromNetwork
dk$c net/minecraft/commands/arguments/RangeArgument$Serializer
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	a (Lnet/minecraft/server/ArgumentCriterionValue;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lnet/minecraft/server/ArgumentCriterionValue;Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
dka net/minecraft/client/model/AbstractZombieModel
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityLiving;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityMonster;)Z isAggressive
	a (Lnet/minecraft/server/EntityMonster;FFFFF)V setupAnim
dkb net/minecraft/client/model/AgeableListModel
	a scaleHead
	b yHeadOffset
	f zHeadOffset
	g babyHeadScale
	h babyBodyScale
	i bodyYOffset
	a ()Ljava/lang/Iterable; headParts
	a (Lcyi;Lcyl;IIFFFF)V renderToBuffer
	b ()Ljava/lang/Iterable; bodyParts
dkc net/minecraft/client/model/ArmedModel
	a (Lnet/minecraft/server/EnumMainHand;Lcyi;)V translateToHand
dkd net/minecraft/client/model/ArmorStandArmorModel
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityArmorStand;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityLiving;FFFFF)V setupAnim
dke net/minecraft/client/model/ArmorStandModel
	a bodyStick1
	b bodyStick2
	t shoulderStick
	u basePlate
	a (Lnet/minecraft/server/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityArmorStand;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntityArmorStand;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityLiving;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntityLiving;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EnumMainHand;Lcyi;)V translateToHand
	b ()Ljava/lang/Iterable; bodyParts
dkf net/minecraft/client/model/BatModel
	a head
	b body
	f rightWing
	g leftWing
	h rightWingTip
	i leftWingTip
	a ()Ljava/lang/Iterable; parts
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityBat;FFFFF)V setupAnim
dkg net/minecraft/client/model/BeeModel
	a bone
	b body
	f rightWing
	g leftWing
	h frontLeg
	i midLeg
	j backLeg
	k stinger
	l leftAntenna
	m rightAntenna
	n rollAmount
	a ()Ljava/lang/Iterable; headParts
	a (Lnet/minecraft/server/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityBee;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntityBee;FFFFF)V setupAnim
	b ()Ljava/lang/Iterable; bodyParts
dkh net/minecraft/client/model/BlazeModel
	a upperBodyParts
	b head
	f parts
	a ()Ljava/lang/Iterable; parts
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
dki net/minecraft/client/model/BoatModel
	a paddles
	b waterPatch
	f parts
	a ()Ljava/lang/Iterable; parts
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityBoat;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityBoat;IF)V animatePaddle
	a (Z)Ldnf; makePaddle
	b ()Lcom/google/common/collect/ImmutableList; parts
	c ()Ldnf; waterPatch
dkj net/minecraft/client/model/BookModel
	a leftLid
	b rightLid
	c leftPages
	d rightPages
	e flipPage1
	f flipPage2
	g seam
	h parts
	a (FFFF)V setupAnim
	a (Lcyi;Lcyl;IIFFFF)V renderToBuffer
	b (Lcyi;Lcyl;IIFFFF)V render
dkk net/minecraft/client/model/CatModel
	m lieDownAmount
	n lieDownAmountTail
	o relaxStateOneAmount
	a (Lnet/minecraft/server/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityCat;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntityCat;FFFFF)V setupAnim
dkl net/minecraft/client/model/ChestedHorseModel
	f boxL
	g boxR
	a (Ldnf;)V addEarModels
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityHorseAbstract;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityHorseChestedAbstract;FFFFF)V setupAnim
dkm net/minecraft/client/model/ChickenModel
	a head
	b body
	f leg0
	g leg1
	h wing0
	i wing1
	j beak
	k redThing
	a ()Ljava/lang/Iterable; headParts
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	b ()Ljava/lang/Iterable; bodyParts
dkn net/minecraft/client/model/CodModel
	a body
	b topFin
	f head
	g nose
	h sideFin0
	i sideFin1
	j tailFin
	a ()Ljava/lang/Iterable; parts
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
dko net/minecraft/client/model/ColorableAgeableListModel
	a r
	b g
	f b
	a (FFF)V setColor
	a (Lcyi;Lcyl;IIFFFF)V renderToBuffer
dkp net/minecraft/client/model/ColorableListModel
	a r
	b g
	f b
	a (FFF)V setColor
	a (Lcyi;Lcyl;IIFFFF)V renderToBuffer
dkq net/minecraft/client/model/CowModel
	c ()Ldnf; getHead
dkr net/minecraft/client/model/CreeperModel
	a head
	b hair
	f body
	g leg0
	h leg1
	i leg2
	j leg3
	a ()Ljava/lang/Iterable; parts
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
dks net/minecraft/client/model/DolphinModel
	a body
	b tail
	f tailFin
	a ()Ljava/lang/Iterable; parts
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
dkt net/minecraft/client/model/DrownedModel
	a (Lnet/minecraft/server/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityLiving;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntityLiving;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityMonster;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityZombie;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntityZombie;FFFFF)V setupAnim
dku net/minecraft/client/model/ElytraModel
	a rightWing
	b leftWing
	a ()Ljava/lang/Iterable; headParts
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityLiving;FFFFF)V setupAnim
	b ()Ljava/lang/Iterable; bodyParts
dkv net/minecraft/client/model/EndermanModel
	a carrying
	b creepy
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityLiving;FFFFF)V setupAnim
dkw net/minecraft/client/model/EndermiteModel
	a BODY_SIZES
	b BODY_TEXS
	f BODY_COUNT
	g bodyParts
	a ()Ljava/lang/Iterable; parts
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
dkx net/minecraft/client/model/EntityModel
	c attackTime
	d riding
	e young
	a (Ldkx;)V copyPropertiesTo
	a (Lnet/minecraft/server/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
dky net/minecraft/client/model/EvokerFangsModel
	a base
	b upperJaw
	f lowerJaw
	a ()Ljava/lang/Iterable; parts
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
dkz net/minecraft/client/model/FoxModel
	a head
	b earL
	f earR
	g nose
	h body
	i leg0
	j leg1
	k leg2
	l leg3
	m tail
	n legMotionPos
	a ()Ljava/lang/Iterable; headParts
	a (Lnet/minecraft/server/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityFox;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntityFox;FFFFF)V setupAnim
	b ()Ljava/lang/Iterable; bodyParts
dla net/minecraft/client/model/GhastModel
	a tentacles
	b parts
	a ()Ljava/lang/Iterable; parts
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
dlb net/minecraft/client/model/GiantZombieModel
	a (Lnet/minecraft/server/EntityGiantZombie;)Z isAggressive
	a (Lnet/minecraft/server/EntityMonster;)Z isAggressive
dlc net/minecraft/client/model/GuardianModel
	a SPIKE_X_ROT
	b SPIKE_Y_ROT
	f SPIKE_Z_ROT
	g SPIKE_X
	h SPIKE_Y
	i SPIKE_Z
	j head
	k eye
	l spikeParts
	m tailParts
	a ()Ljava/lang/Iterable; parts
	a (FF)V setupSpikes
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityGuardian;FFFFF)V setupAnim
dld net/minecraft/client/model/HeadedModel
	c ()Ldnf; getHead
dle net/minecraft/client/model/HorseModel
	a body
	b headParts
	f leg1
	g leg2
	h leg3
	i leg4
	j babyLeg1
	k babyLeg2
	l babyLeg3
	m babyLeg4
	n tail
	o saddleParts
	p ridingParts
	a ()Ljava/lang/Iterable; headParts
	a (Ldnf;)V addEarModels
	a (Lnet/minecraft/server/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityHorseAbstract;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntityHorseAbstract;FFFFF)V setupAnim
	b ()Ljava/lang/Iterable; bodyParts
dlf net/minecraft/client/model/HumanoidHeadModel
	b hat
	a (FFF)V setupAnim
	a (Lcyi;Lcyl;IIFFFF)V renderToBuffer
dlg net/minecraft/client/model/HumanoidModel
	a itemUseTicks
	f head
	g hat
	h body
	i rightArm
	j leftArm
	k rightLeg
	l leftLeg
	m leftArmPose
	n rightArmPose
	o crouching
	p swimAmount
	a ()Ljava/lang/Iterable; headParts
	a (F)F quadraticArmUpdate
	a (FFF)F rotlerpRad
	a (Ldlg;)V copyPropertiesTo
	a (Lnet/minecraft/server/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/EnumMainHand; getAttackArm
	a (Lnet/minecraft/server/EntityLiving;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntityLiving;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EnumMainHand;)Ldnf; getArm
	a (Lnet/minecraft/server/EnumMainHand;Lcyi;)V translateToHand
	b ()Ljava/lang/Iterable; bodyParts
	b_ (Z)V setAllVisible
	c ()Ldnf; getHead
dlg$a net/minecraft/client/model/HumanoidModel$ArmPose
	a EMPTY
	b ITEM
	c BLOCK
	d BOW_AND_ARROW
	e THROW_SPEAR
	f CROSSBOW_CHARGE
	g CROSSBOW_HOLD
	h $VALUES
dlh net/minecraft/client/model/IllagerModel
	a head
	b hat
	f body
	g arms
	h leftLeg
	i rightLeg
	j rightArm
	k leftArm
	l itemUseTicks
	a ()Ljava/lang/Iterable; parts
	a (Lnet/minecraft/server/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityIllagerAbstract;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntityIllagerAbstract;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EnumMainHand;)Ldnf; getArm
	a (Lnet/minecraft/server/EnumMainHand;Lcyi;)V translateToHand
	b ()Ldnf; getHat
	c ()Ldnf; getHead
dli net/minecraft/client/model/IronGolemModel
	a head
	b body
	f arm0
	g arm1
	h leg0
	i leg1
	a ()Ljava/lang/Iterable; parts
	a (FF)F triangleWave
	a (Lnet/minecraft/server/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityIronGolem;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntityIronGolem;FFFFF)V setupAnim
	b ()Ldnf; getFlowerHoldingArm
dlj net/minecraft/client/model/LavaSlimeModel
	a bodyCubes
	b insideCube
	f parts
	a ()Ljava/lang/Iterable; parts
	a (Lnet/minecraft/server/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntitySlime;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntitySlime;FFFFF)V setupAnim
	b ()Lcom/google/common/collect/ImmutableList; parts
dlk net/minecraft/client/model/LeashKnotModel
	a knot
	a ()Ljava/lang/Iterable; parts
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
dll net/minecraft/client/model/ListModel
	a ()Ljava/lang/Iterable; parts
	a (Lcyi;Lcyl;IIFFFF)V renderToBuffer
dlm net/minecraft/client/model/LlamaModel
	a head
	b body
	f leg0
	g leg1
	h leg2
	i leg3
	j chest1
	k chest2
	a (Lcyi;Lcyl;IIFFFF)V renderToBuffer
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityHorseChestedAbstract;FFFFF)V setupAnim
dln net/minecraft/client/model/LlamaSpitModel
	a main
	a ()Ljava/lang/Iterable; parts
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
dlo net/minecraft/client/model/MinecartModel
	a cubes
	a ()Ljava/lang/Iterable; parts
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
dlp net/minecraft/client/model/Model
	q renderType
	r texWidth
	s texHeight
	a (Lcyi;Lcyl;IIFFFF)V renderToBuffer
	a (Lnet/minecraft/server/MinecraftKey;)Ldqy; renderType
	b (Ldnf;)V accept
dlq net/minecraft/client/model/ModelUtils
	a (FFF)F rotlerpRad
dlr net/minecraft/client/model/OcelotModel
	a backLegL
	b backLegR
	f frontLegL
	g frontLegR
	h tail1
	i tail2
	j head
	k body
	l state
	a ()Ljava/lang/Iterable; headParts
	a (Lnet/minecraft/server/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	b ()Ljava/lang/Iterable; bodyParts
dls net/minecraft/client/model/PandaModel
	j sitAmount
	k lieOnBackAmount
	l rollAmount
	a (Lnet/minecraft/server/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityPanda;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntityPanda;FFFFF)V setupAnim
dlt net/minecraft/client/model/ParrotModel
	a body
	b tail
	f wingLeft
	g wingRight
	h head
	i head2
	j beak1
	k beak2
	l feather
	m legLeft
	n legRight
	a ()Ljava/lang/Iterable; parts
	a (Lcyi;Lcyl;IIFFFFI)V renderOnShoulder
	a (Ldlt$a;)V prepare
	a (Ldlt$a;IFFFFF)V setupAnim
	a (Lnet/minecraft/server/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityParrot;)Ldlt$a; getState
	a (Lnet/minecraft/server/EntityParrot;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntityParrot;FFFFF)V setupAnim
dlt$a net/minecraft/client/model/ParrotModel$State
	a FLYING
	b STANDING
	c SITTING
	d PARTY
	e ON_SHOULDER
	f $VALUES
dlu net/minecraft/client/model/PhantomModel
	a body
	b leftWingBase
	f leftWingTip
	g rightWingBase
	h rightWingTip
	i tailBase
	j tailTip
	a ()Ljava/lang/Iterable; parts
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
dlv net/minecraft/client/model/PigModel
dlw net/minecraft/client/model/PlayerModel
	a leftSleeve
	b rightSleeve
	t leftPants
	u rightPants
	v jacket
	w cubes
	x cloak
	y ear
	z slim
	a (Lcyi;Lcyl;II)V renderEars
	a (Ljava/util/Random;)Ldnf; getRandomModelPart
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityLiving;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EnumMainHand;Lcyi;)V translateToHand
	b ()Ljava/lang/Iterable; bodyParts
	b (Lcyi;Lcyl;II)V renderCloak
	b (Ldnf;)V accept
	b_ (Z)V setAllVisible
dlx net/minecraft/client/model/PolarBearModel
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityPolarBear;FFFFF)V setupAnim
dly net/minecraft/client/model/PufferfishBigModel
	a cube
	b blueFin0
	f blueFin1
	g topFrontFin
	h topMidFin
	i topBackFin
	j sideFrontFin0
	k sideFrontFin1
	l bottomFrontFin
	m bottomBackFin
	n bottomMidFin
	o sideBackFin0
	p sideBackFin1
	a ()Ljava/lang/Iterable; parts
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
dlz net/minecraft/client/model/PufferfishMidModel
	a cube
	b finBlue0
	f finBlue1
	g finTop0
	h finTop1
	i finSide0
	j finSide1
	k finSide2
	l finSide3
	m finBottom0
	n finBottom1
	a ()Ljava/lang/Iterable; parts
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
dm$a net/minecraft/commands/arguments/ScoreHolderArgument$Result
dm$b net/minecraft/commands/arguments/ScoreHolderArgument$SelectorResult
	a selector
dm$c net/minecraft/commands/arguments/ScoreHolderArgument$Serializer
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	a (Lnet/minecraft/server/ArgumentScoreholder;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lnet/minecraft/server/ArgumentScoreholder;Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	a (Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/ArgumentScoreholder; deserializeFromNetwork
	b (Lnet/minecraft/server/PacketDataSerializer;)Lcom/mojang/brigadier/arguments/ArgumentType; deserializeFromNetwork
dma net/minecraft/client/model/PufferfishSmallModel
	a cube
	b eye0
	f eye1
	g fin0
	h fin1
	i finBack
	a ()Ljava/lang/Iterable; parts
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
dmb net/minecraft/client/model/QuadrupedModel
	a head
	b body
	f leg0
	g leg1
	h leg2
	i leg3
	a ()Ljava/lang/Iterable; headParts
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	b ()Ljava/lang/Iterable; bodyParts
dmc net/minecraft/client/model/RabbitModel
	a rearFootLeft
	b rearFootRight
	f haunchLeft
	g haunchRight
	h body
	i frontLegLeft
	j frontLegRight
	k head
	l earRight
	m earLeft
	n tail
	o nose
	p jumpRotation
	a (Lcyi;Lcyl;IIFFFF)V renderToBuffer
	a (Ldnf;FFF)V setRotation
	a (Lnet/minecraft/server/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityRabbit;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntityRabbit;FFFFF)V setupAnim
dmd net/minecraft/client/model/RavagerModel
	a head
	b mouth
	f body
	g leg0
	h leg1
	i leg2
	j leg3
	k neck
	a ()Ljava/lang/Iterable; parts
	a (FF)F triangleWave
	a (Lnet/minecraft/server/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityRavager;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntityRavager;FFFFF)V setupAnim
dme net/minecraft/client/model/SalmonModel
	a bodyFront
	b bodyBack
	f head
	g sideFin0
	h sideFin1
	a ()Ljava/lang/Iterable; parts
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
dmf net/minecraft/client/model/SheepFurModel
	j headXRot
	a (Lnet/minecraft/server/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntitySheep;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntitySheep;FFFFF)V setupAnim
dmg net/minecraft/client/model/SheepModel
	j headXRot
	a (Lnet/minecraft/server/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntitySheep;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntitySheep;FFFFF)V setupAnim
dmh net/minecraft/client/model/ShieldModel
	a plate
	b handle
	a ()Ldnf; plate
	a (Lcyi;Lcyl;IIFFFF)V renderToBuffer
	b ()Ldnf; handle
dmi net/minecraft/client/model/ShulkerBulletModel
	a main
	a ()Ljava/lang/Iterable; parts
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
dmj net/minecraft/client/model/ShulkerModel
	a base
	b lid
	f head
	a ()Ljava/lang/Iterable; parts
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityShulker;FFFFF)V setupAnim
	b ()Ldnf; getBase
	c ()Ldnf; getLid
	d ()Ldnf; getHead
dmk net/minecraft/client/model/SilverfishModel
	a bodyParts
	b bodyLayers
	f parts
	g zPlacement
	h BODY_SIZES
	i BODY_TEXS
	a ()Ljava/lang/Iterable; parts
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	b ()Lcom/google/common/collect/ImmutableList; parts
dml net/minecraft/client/model/SkeletonModel
	a (Lnet/minecraft/server/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityInsentient;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntityInsentient;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityLiving;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntityLiving;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EnumMainHand;Lcyi;)V translateToHand
dmm net/minecraft/client/model/SkullModel
	a head
	a (FFF)V setupAnim
	a (Lcyi;Lcyl;IIFFFF)V renderToBuffer
dmn net/minecraft/client/model/SlimeModel
	a cube
	b eye0
	f eye1
	g mouth
	a ()Ljava/lang/Iterable; parts
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
dmo net/minecraft/client/model/SnowGolemModel
	a piece1
	b piece2
	f head
	g arm1
	h arm2
	a ()Ljava/lang/Iterable; parts
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	b ()Ldnf; getHead
dmp net/minecraft/client/model/SpiderModel
	a head
	b body0
	f body1
	g leg0
	h leg1
	i leg2
	j leg3
	k leg4
	l leg5
	m leg6
	n leg7
	a ()Ljava/lang/Iterable; parts
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
dmq net/minecraft/client/model/SquidModel
	a body
	b tentacles
	f parts
	a ()Ljava/lang/Iterable; parts
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
dmr net/minecraft/client/model/TridentModel
	a TEXTURE
	b pole
	a (Lcyi;Lcyl;IIFFFF)V renderToBuffer
dms net/minecraft/client/model/TropicalFishModelA
	a body
	b tail
	f leftFin
	g rightFin
	h topFin
	a ()Ljava/lang/Iterable; parts
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
dmt net/minecraft/client/model/TropicalFishModelB
	a body
	b tail
	f leftFin
	g rightFin
	h topFin
	i bottomFin
	a ()Ljava/lang/Iterable; parts
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
dmu net/minecraft/client/model/TurtleModel
	j eggBelly
	a (Lcyi;Lcyl;IIFFFF)V renderToBuffer
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityTurtle;FFFFF)V setupAnim
	b ()Ljava/lang/Iterable; bodyParts
dmv net/minecraft/client/model/VexModel
	a leftWing
	b rightWing
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityLiving;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityVex;FFFFF)V setupAnim
	b ()Ljava/lang/Iterable; bodyParts
dmw net/minecraft/client/model/VillagerHeadModel
	a (Z)V hatVisible
dmx net/minecraft/client/model/VillagerModel
	a head
	b hat
	f hatRim
	g body
	h jacket
	i arms
	j leg0
	k leg1
	l nose
	a ()Ljava/lang/Iterable; parts
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Z)V hatVisible
	c ()Ldnf; getHead
dmy net/minecraft/client/model/WitchModel
	m holdingItem
	n mole
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	b ()Ldnf; getNose
	b (Z)V setHoldingItem
dmz net/minecraft/client/model/WitherBossModel
	a upperBodyParts
	b heads
	f parts
	a ()Ljava/lang/Iterable; parts
	a (Lnet/minecraft/server/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityWither;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntityWither;FFFFF)V setupAnim
	b ()Lcom/google/common/collect/ImmutableList; parts
dna net/minecraft/client/model/WolfModel
	a head
	b realHead
	f body
	g leg0
	h leg1
	i leg2
	j leg3
	k tail
	l realTail
	m upperBody
	a ()Ljava/lang/Iterable; headParts
	a (Lnet/minecraft/server/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityWolf;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntityWolf;FFFFF)V setupAnim
	b ()Ljava/lang/Iterable; bodyParts
dnb net/minecraft/client/model/ZombieModel
	a (Lnet/minecraft/server/EntityMonster;)Z isAggressive
	a (Lnet/minecraft/server/EntityZombie;)Z isAggressive
dnc net/minecraft/client/model/ZombieVillagerModel
	a hatRim
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityLiving;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityZombie;FFFFF)V setupAnim
	a (Z)V hatVisible
dnd net/minecraft/client/model/dragon/DragonHeadModel
	b head
	c jaw
	a (FFF)V setupAnim
	a (Lcyi;Lcyl;IIFFFF)V renderToBuffer
dnf net/minecraft/client/model/geom/ModelPart
	a x
	b y
	c z
	d xRot
	e yRot
	f zRot
	g mirror
	h visible
	i xTexSize
	j yTexSize
	k xTexOffs
	l yTexOffs
	m cubes
	n children
	a (FFF)V setPos
	a (FFFFFF)Ldnf; addBox
	a (FFFFFFF)V addBox
	a (FFFFFFFFF)V addBox
	a (FFFFFFFZ)V addBox
	a (FFFFFFZ)Ldnf; addBox
	a (II)Ldnf; texOffs
	a (IIFFFFFFFFFZZ)V addBox
	a (Lcyi$a;Lcyl;IIFFFF)V compile
	a (Lcyi;)V translateAndRotate
	a (Lcyi;Lcyl;II)V render
	a (Lcyi;Lcyl;IIFFFF)V render
	a (Ldnf;)V copyFrom
	a (Ljava/lang/String;FFFIIIFII)Ldnf; addBox
	a (Ljava/util/Random;)Ldnf$a; getRandomCube
	b (II)Ldnf; setTexSize
	b (Ldnf;)V addChild
dnf$a net/minecraft/client/model/geom/ModelPart$Cube
	a minX
	b minY
	c minZ
	d maxX
	e maxY
	f maxZ
	g polygons
dnf$b net/minecraft/client/model/geom/ModelPart$Polygon
	a vertices
	b normal
dnf$c net/minecraft/client/model/geom/ModelPart$Vertex
	a pos
	b u
	c v
	a (FF)Ldnf$c; remap
dni net/minecraft/client/multiplayer/ClientAdvancements
	a LOGGER
	b minecraft
	c advancements
	d progress
	e listener
	f selectedTab
	a ()Lnet/minecraft/server/Advancements; getAdvancements
	a (Ldni$a;)V setListener
	a (Lnet/minecraft/server/Advancement;Z)V setSelectedTab
	a (Lnet/minecraft/server/PacketPlayOutAdvancements;)V update
	b ()Ljava/util/Map; getProgress
dni$a net/minecraft/client/multiplayer/ClientAdvancements$Listener
	a (Lnet/minecraft/server/Advancement;Lnet/minecraft/server/AdvancementProgress;)V onUpdateAdvancementProgress
	e (Lnet/minecraft/server/Advancement;)V onSelectedTabChanged
dnj net/minecraft/client/multiplayer/ClientChunkCache
	a LOGGER
	b emptyChunk
	c lightEngine
	d storage
	e level
	a (I)V updateViewRadius
	a (IILnet/minecraft/server/BiomeStorage;Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/NBTTagCompound;I)Lnet/minecraft/server/Chunk; replaceWithPacketData
	a (IILnet/minecraft/server/ChunkStatus;Z)Lnet/minecraft/server/IChunkAccess; getChunk
	a (Ljava/util/function/BooleanSupplier;)V tick
	a (Lnet/minecraft/server/BlockPosition;)Z isTickingChunk
	a (Lnet/minecraft/server/Chunk;II)Z isValidChunk
	a (Lnet/minecraft/server/ChunkCoordIntPair;)Z isEntityTickingChunk
	a (Lnet/minecraft/server/Entity;)Z isEntityTickingChunk
	a (Lnet/minecraft/server/EnumSkyBlock;Lnet/minecraft/server/SectionPosition;)V onLightUpdate
	b (I)I calculateStorageRange
	b (IILnet/minecraft/server/ChunkStatus;Z)Lnet/minecraft/server/Chunk; getChunk
	d (II)V drop
	e ()Ljava/lang/String; gatherStats
	e (II)V updateViewCenter
	h ()I getLoadedChunksCount
	k ()Lnet/minecraft/server/LightEngine; getLightEngine
	l ()Lnet/minecraft/server/IBlockAccess; getLevel
dnj$a net/minecraft/client/multiplayer/ClientChunkCache$Storage
	b chunks
	c chunkRadius
	d viewRange
	e viewCenterX
	f viewCenterZ
	g chunkCount
	a (I)Lnet/minecraft/server/Chunk; getChunk
	a (II)I getIndex
	a (ILnet/minecraft/server/Chunk;)V replace
	a (ILnet/minecraft/server/Chunk;Lnet/minecraft/server/Chunk;)Lnet/minecraft/server/Chunk; replace
	a (Ljava/lang/String;)V dumpChunks
	b (II)Z inRange
dnk net/minecraft/client/multiplayer/ClientHandshakePacketListenerImpl
	a LOGGER
	b minecraft
	c parent
	d updateStatus
	e connection
	f localGameProfile
	a ()Lnet/minecraft/server/NetworkManager; getConnection
	a (Ljava/lang/String;)Lnet/minecraft/server/IChatBaseComponent; authenticateServer
	a (Lnet/minecraft/server/IChatBaseComponent;)V onDisconnect
	a (Lnet/minecraft/server/PacketLoginOutCustomPayload;)V handleCustomQuery
	a (Lnet/minecraft/server/PacketLoginOutDisconnect;)V handleDisconnect
	a (Lnet/minecraft/server/PacketLoginOutEncryptionBegin;)V handleHello
	a (Lnet/minecraft/server/PacketLoginOutSetCompression;)V handleCompression
	a (Lnet/minecraft/server/PacketLoginOutSuccess;)V handleGameProfile
	b ()Lcom/mojang/authlib/minecraft/MinecraftSessionService; getMinecraftSessionService
dnl net/minecraft/client/multiplayer/ClientLevel
	A skyFlashTime
	B tintCaches
	a globalEntities
	b entitiesById
	c connection
	u levelRenderer
	v minecraft
	w players
	x delayUntilNextMoodSound
	y scoreboard
	z mapData
	A ()Ljava/util/List; players
	D ()Lnet/minecraft/server/Scoreboard; getScoreboard
	E ()Lnet/minecraft/server/IChunkProvider; getChunkSource
	F ()Lnet/minecraft/server/TickList; getLiquidTicks
	G ()Lnet/minecraft/server/TickList; getBlockTicks
	Q ()V disconnect
	a (DDDDDDLnet/minecraft/server/NBTTagCompound;)V createFireworks
	a (DDDDDLnet/minecraft/server/ParticleParam;)V spawnFluidParticle
	a (DDDLnet/minecraft/server/SoundEffect;Lnet/minecraft/server/SoundCategory;FFZ)V playLocalSound
	a (I)Lnet/minecraft/server/Entity; getEntity
	a (III)Lnet/minecraft/server/BiomeBase; getUncachedNoiseBiome
	a (IIIILjava/util/Random;ZLnet/minecraft/server/BlockPosition$MutableBlockPosition;)V doAnimateTick
	a (ILdpv;)V addPlayer
	a (ILnet/minecraft/server/BlockPosition;I)V destroyBlockProgress
	a (ILnet/minecraft/server/Entity;)V putNonPlayerEntity
	a (Ljava/lang/String;)Lnet/minecraft/server/WorldMap; getMapData
	a (Ljava/util/function/BooleanSupplier;)V tick
	a (Lnet/minecraft/server/BlockPosition;F)Lnet/minecraft/server/Vec3D; getSkyColor
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;I)V sendBlockUpdated
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/ParticleParam;Z)V trySpawnDripParticles
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/VoxelShape;D)V spawnParticle
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/SoundEffect;Lnet/minecraft/server/SoundCategory;FFZ)V playLocalSound
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/world/level/ColorResolver;)I getBlockTint
	a (Lnet/minecraft/server/Chunk;)V unload
	a (Lnet/minecraft/server/CrashReport;)Lnet/minecraft/server/CrashReportSystemDetails; fillReportDetails
	a (Lnet/minecraft/server/Entity;)V tickNonPassenger
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/Entity;)V tickPassenger
	a (Lnet/minecraft/server/EntityHuman;DDDLnet/minecraft/server/SoundEffect;Lnet/minecraft/server/SoundCategory;FF)V playSound
	a (Lnet/minecraft/server/EntityHuman;ILnet/minecraft/server/BlockPosition;I)V levelEvent
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/Entity;Lnet/minecraft/server/SoundEffect;Lnet/minecraft/server/SoundCategory;FF)V playSound
	a (Lnet/minecraft/server/EntityLightning;)V addLightning
	a (Lnet/minecraft/server/Packet;)V sendPacketToServer
	a (Lnet/minecraft/server/ParticleParam;DDDDDD)V addParticle
	a (Lnet/minecraft/server/ParticleParam;ZDDDDDD)V addParticle
	a (Lnet/minecraft/server/Scoreboard;)V setScoreboard
	a (Lnet/minecraft/server/WorldMap;)V setMapData
	b ()Ljava/lang/Iterable; entitiesForRendering
	b (II)Z hasChunk
	b (ILnet/minecraft/server/BlockPosition;I)V globalLevelEvent
	b (ILnet/minecraft/server/Entity;)V addEntity
	b (J)V setDayTime
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V setKnownState
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;)V setBlocksDirty
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/world/level/ColorResolver;)I calculateBlockTint
	b (Lnet/minecraft/server/Chunk;)V reAddEntitiesToChunk
	b (Lnet/minecraft/server/Entity;)V updateChunkPos
	b (Lnet/minecraft/server/ParticleParam;DDDDDD)V addAlwaysVisibleParticle
	b (Lnet/minecraft/server/ParticleParam;ZDDDDDD)V addAlwaysVisibleParticle
	c (I)V setSkyFlashTime
	c (III)V animateTick
	d (I)V removeEntity
	d (III)V setSectionDirtyWithNeighbors
	d (Lnet/minecraft/server/Entity;)V onEntityRemoved
	e (II)V onChunkLoaded
	g ()V tickEntities
	g (F)F getSkyDarken
	h ()V clearTintCaches
	h (F)Lnet/minecraft/server/Vec3D; getCloudColor
	i (F)Lnet/minecraft/server/Vec3D; getFogColor
	j ()I getEntityCount
	j (F)F getStarBrightness
	k ()V removeAllPendingEntityRemovals
	l ()Ldnj; getChunkSource
	m ()D getHorizonHeight
	n ()I getSkyFlashTime
	r ()V playMoodSounds
	s ()Lnet/minecraft/server/CraftingManager; getRecipeManager
	t ()Lnet/minecraft/server/TagRegistry; getTagManager
	v ()V checkSession
	y ()I getFreeMapId
dnm net/minecraft/client/multiplayer/ClientPacketListener
	a LOGGER
	b connection
	c localGameProfile
	d callbackScreen
	e minecraft
	f level
	g started
	h playerInfoMap
	i advancements
	j suggestionsProvider
	k tags
	l debugQueryHandler
	m serverChunkRadius
	n random
	o commands
	p recipeManager
	q id
	a ()Lnet/minecraft/server/NetworkManager; getConnection
	a (IILnet/minecraft/server/LightEngine;Lnet/minecraft/server/EnumSkyBlock;IILjava/util/Iterator;)V readSectionList
	a (Ljava/lang/String;)Ldnp; getPlayerInfo
	a (Ljava/util/UUID;)Ldnp; getPlayerInfo
	a (Ljava/util/concurrent/CompletableFuture;)V downloadCallback
	a (Lnet/minecraft/server/EntityHuman;)Lnet/minecraft/server/ItemStack; findTotem
	a (Lnet/minecraft/server/IChatBaseComponent;)V onDisconnect
	a (Lnet/minecraft/server/Packet;)V send
	a (Lnet/minecraft/server/PacketPlayInResourcePackStatus$EnumResourcePackStatus;)V send
	a (Lnet/minecraft/server/PacketPlayOutAbilities;)V handlePlayerAbilities
	a (Lnet/minecraft/server/PacketPlayOutAdvancements;)V handleUpdateAdvancementsPacket
	a (Lnet/minecraft/server/PacketPlayOutAnimation;)V handleAnimate
	a (Lnet/minecraft/server/PacketPlayOutAttachEntity;)V handleEntityLinkPacket
	a (Lnet/minecraft/server/PacketPlayOutAutoRecipe;)V handlePlaceRecipe
	a (Lnet/minecraft/server/PacketPlayOutBlockAction;)V handleBlockEvent
	a (Lnet/minecraft/server/PacketPlayOutBlockBreak;)V handleBlockBreakAck
	a (Lnet/minecraft/server/PacketPlayOutBlockBreakAnimation;)V handleBlockDestruction
	a (Lnet/minecraft/server/PacketPlayOutBlockChange;)V handleBlockUpdate
	a (Lnet/minecraft/server/PacketPlayOutBoss;)V handleBossUpdate
	a (Lnet/minecraft/server/PacketPlayOutCamera;)V handleSetCamera
	a (Lnet/minecraft/server/PacketPlayOutChat;)V handleChat
	a (Lnet/minecraft/server/PacketPlayOutCloseWindow;)V handleContainerClose
	a (Lnet/minecraft/server/PacketPlayOutCollect;)V handleTakeItemEntity
	a (Lnet/minecraft/server/PacketPlayOutCombatEvent;)V handlePlayerCombat
	a (Lnet/minecraft/server/PacketPlayOutCommands;)V handleCommands
	a (Lnet/minecraft/server/PacketPlayOutCustomPayload;)V handleCustomPayload
	a (Lnet/minecraft/server/PacketPlayOutCustomSoundEffect;)V handleCustomSoundEvent
	a (Lnet/minecraft/server/PacketPlayOutEntity;)V handleMoveEntity
	a (Lnet/minecraft/server/PacketPlayOutEntityDestroy;)V handleRemoveEntity
	a (Lnet/minecraft/server/PacketPlayOutEntityEffect;)V handleUpdateMobEffect
	a (Lnet/minecraft/server/PacketPlayOutEntityEquipment;)V handleSetEquippedItem
	a (Lnet/minecraft/server/PacketPlayOutEntityHeadRotation;)V handleRotateMob
	a (Lnet/minecraft/server/PacketPlayOutEntityMetadata;)V handleSetEntityData
	a (Lnet/minecraft/server/PacketPlayOutEntitySound;)V handleSoundEntityEvent
	a (Lnet/minecraft/server/PacketPlayOutEntityStatus;)V handleEntityEvent
	a (Lnet/minecraft/server/PacketPlayOutEntityTeleport;)V handleTeleportEntity
	a (Lnet/minecraft/server/PacketPlayOutEntityVelocity;)V handleSetEntityMotion
	a (Lnet/minecraft/server/PacketPlayOutExperience;)V handleSetExperience
	a (Lnet/minecraft/server/PacketPlayOutExplosion;)V handleExplosion
	a (Lnet/minecraft/server/PacketPlayOutGameStateChange;)V handleGameEvent
	a (Lnet/minecraft/server/PacketPlayOutHeldItemSlot;)V handleSetCarriedItem
	a (Lnet/minecraft/server/PacketPlayOutKeepAlive;)V handleKeepAlive
	a (Lnet/minecraft/server/PacketPlayOutKickDisconnect;)V handleDisconnect
	a (Lnet/minecraft/server/PacketPlayOutLightUpdate;)V handleLightUpdatePacked
	a (Lnet/minecraft/server/PacketPlayOutLogin;)V handleLogin
	a (Lnet/minecraft/server/PacketPlayOutLookAt;)V handleLookAt
	a (Lnet/minecraft/server/PacketPlayOutMap;)V handleMapItemData
	a (Lnet/minecraft/server/PacketPlayOutMapChunk;)V handleLevelChunk
	a (Lnet/minecraft/server/PacketPlayOutMount;)V handleSetEntityPassengersPacket
	a (Lnet/minecraft/server/PacketPlayOutMultiBlockChange;)V handleChunkBlocksUpdate
	a (Lnet/minecraft/server/PacketPlayOutNBTQuery;)V handleTagQueryPacket
	a (Lnet/minecraft/server/PacketPlayOutNamedEntitySpawn;)V handleAddPlayer
	a (Lnet/minecraft/server/PacketPlayOutNamedSoundEffect;)V handleSoundEvent
	a (Lnet/minecraft/server/PacketPlayOutOpenBook;)V handleOpenBook
	a (Lnet/minecraft/server/PacketPlayOutOpenSignEditor;)V handleOpenSignEditor
	a (Lnet/minecraft/server/PacketPlayOutOpenWindow;)V handleOpenScreen
	a (Lnet/minecraft/server/PacketPlayOutOpenWindowHorse;)V handleHorseScreenOpen
	a (Lnet/minecraft/server/PacketPlayOutOpenWindowMerchant;)V handleMerchantOffers
	a (Lnet/minecraft/server/PacketPlayOutPlayerInfo;)V handlePlayerInfo
	a (Lnet/minecraft/server/PacketPlayOutPlayerListHeaderFooter;)V handleTabListCustomisation
	a (Lnet/minecraft/server/PacketPlayOutPosition;)V handleMovePlayer
	a (Lnet/minecraft/server/PacketPlayOutRecipeUpdate;)V handleUpdateRecipes
	a (Lnet/minecraft/server/PacketPlayOutRecipes;)V handleAddOrRemoveRecipes
	a (Lnet/minecraft/server/PacketPlayOutRemoveEntityEffect;)V handleRemoveMobEffect
	a (Lnet/minecraft/server/PacketPlayOutResourcePackSend;)V handleResourcePack
	a (Lnet/minecraft/server/PacketPlayOutRespawn;)V handleRespawn
	a (Lnet/minecraft/server/PacketPlayOutScoreboardDisplayObjective;)V handleSetDisplayObjective
	a (Lnet/minecraft/server/PacketPlayOutScoreboardObjective;)V handleAddObjective
	a (Lnet/minecraft/server/PacketPlayOutScoreboardScore;)V handleSetScore
	a (Lnet/minecraft/server/PacketPlayOutScoreboardTeam;)V handleSetPlayerTeamPacket
	a (Lnet/minecraft/server/PacketPlayOutSelectAdvancementTab;)V handleSelectAdvancementsTab
	a (Lnet/minecraft/server/PacketPlayOutServerDifficulty;)V handleChangeDifficulty
	a (Lnet/minecraft/server/PacketPlayOutSetCooldown;)V handleItemCooldown
	a (Lnet/minecraft/server/PacketPlayOutSetSlot;)V handleContainerSetSlot
	a (Lnet/minecraft/server/PacketPlayOutSpawnEntity;)V handleAddEntity
	a (Lnet/minecraft/server/PacketPlayOutSpawnEntityExperienceOrb;)V handleAddExperienceOrb
	a (Lnet/minecraft/server/PacketPlayOutSpawnEntityLiving;)V handleAddMob
	a (Lnet/minecraft/server/PacketPlayOutSpawnEntityPainting;)V handleAddPainting
	a (Lnet/minecraft/server/PacketPlayOutSpawnEntityWeather;)V handleAddGlobalEntity
	a (Lnet/minecraft/server/PacketPlayOutSpawnPosition;)V handleSetSpawn
	a (Lnet/minecraft/server/PacketPlayOutStatistic;)V handleAwardStats
	a (Lnet/minecraft/server/PacketPlayOutStopSound;)V handleStopSoundEvent
	a (Lnet/minecraft/server/PacketPlayOutTabComplete;)V handleCommandSuggestions
	a (Lnet/minecraft/server/PacketPlayOutTags;)V handleUpdateTags
	a (Lnet/minecraft/server/PacketPlayOutTileEntityData;)V handleBlockEntityData
	a (Lnet/minecraft/server/PacketPlayOutTitle;)V handleSetTitles
	a (Lnet/minecraft/server/PacketPlayOutTransaction;)V handleContainerAck
	a (Lnet/minecraft/server/PacketPlayOutUnloadChunk;)V handleForgetLevelChunk
	a (Lnet/minecraft/server/PacketPlayOutUpdateAttributes;)V handleUpdateAttributes
	a (Lnet/minecraft/server/PacketPlayOutUpdateHealth;)V handleSetHealth
	a (Lnet/minecraft/server/PacketPlayOutUpdateTime;)V handleSetTime
	a (Lnet/minecraft/server/PacketPlayOutVehicleMove;)V handleMoveVehicle
	a (Lnet/minecraft/server/PacketPlayOutViewCentre;)V handleSetChunkCacheCenter
	a (Lnet/minecraft/server/PacketPlayOutViewDistance;)V handleSetChunkCacheRadius
	a (Lnet/minecraft/server/PacketPlayOutWindowData;)V handleContainerSetData
	a (Lnet/minecraft/server/PacketPlayOutWindowItems;)V handleContainerContent
	a (Lnet/minecraft/server/PacketPlayOutWorldBorder;)V handleSetBorder
	a (Lnet/minecraft/server/PacketPlayOutWorldEvent;)V handleLevelEvent
	a (Lnet/minecraft/server/PacketPlayOutWorldParticles;)V handleParticleEvent
	b ()Ldnn; getSuggestionsProvider
	b (Ljava/lang/String;)Z validateResourcePackUrl
	c ()V cleanup
	d ()Lnet/minecraft/server/CraftingManager; getRecipeManager
	e ()Ljava/util/Collection; getOnlinePlayers
	f ()Lcom/mojang/authlib/GameProfile; getLocalGameProfile
	g ()Ldni; getAdvancements
	h ()Lcom/mojang/brigadier/CommandDispatcher; getCommands
	i ()Ldnl; getLevel
	j ()Lnet/minecraft/server/TagRegistry; getTags
	k ()Ldbd; getDebugQueryHandler
	l ()Ljava/util/UUID; getId
dnn net/minecraft/client/multiplayer/ClientSuggestionProvider
	a connection
	b minecraft
	c pendingSuggestionsId
	d pendingSuggestionsFuture
	a (D)Ljava/lang/String; prettyPrint
	a (I)Ljava/lang/String; prettyPrint
	a (ILcom/mojang/brigadier/suggestion/Suggestions;)V completeCustomSuggestions
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; customSuggestion
	c (I)Z hasPermission
	l ()Ljava/util/Collection; getOnlinePlayerNames
	m ()Ljava/util/Collection; getAllTeams
	n ()Ljava/util/Collection; getAvailableSoundEvents
	o ()Ljava/util/stream/Stream; getRecipeNames
	p ()Ljava/util/Collection; getSelectedEntities
	q ()Ljava/util/Collection; getRelevantCoordinates
	r ()Ljava/util/Collection; getAbsoluteCoordinates
dno net/minecraft/client/multiplayer/MultiPlayerGameMode
	a LOGGER
	b minecraft
	c connection
	d destroyBlockPos
	e destroyingItem
	f destroyProgress
	g destroyTicks
	h destroyDelay
	i isDestroying
	j localPlayerMode
	k unAckedActions
	l carriedIndex
	a ()Z canHurtPlayer
	a (I)V handlePickItem
	a (II)V handleInventoryButtonClick
	a (IIILnet/minecraft/server/InventoryClickType;Lnet/minecraft/server/EntityHuman;)Lnet/minecraft/server/ItemStack; handleInventoryMouseClick
	a (ILnet/minecraft/server/IRecipe;Z)V handlePlaceRecipe
	a (Ldbl;Ldno;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)V creativeDestroyBlock
	a (Ldnl;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/PacketPlayInBlockDig$EnumPlayerDigType;Z)V handleBlockBreakAck
	a (Ldnl;Lnet/minecraft/server/StatisticManager;Ldba;)Ldpy; createPlayer
	a (Ldpy;Ldnl;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; useItemOn
	a (Lnet/minecraft/server/BlockPosition;)Z destroyBlock
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z startDestroyBlock
	a (Lnet/minecraft/server/EntityHuman;)V adjustPlayer
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/Entity;)V attack
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/Entity;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; interact
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/Entity;Lnet/minecraft/server/MovingObjectPositionEntity;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; interactAt
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/World;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; useItem
	a (Lnet/minecraft/server/EnumGamemode;)V setLocalMode
	a (Lnet/minecraft/server/ItemStack;)V handleCreativeModeItemDrop
	a (Lnet/minecraft/server/ItemStack;I)V handleCreativeModeItemAdd
	a (Lnet/minecraft/server/PacketPlayInBlockDig$EnumPlayerDigType;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)V sendBlockAction
	b ()V stopDestroyBlock
	b (Lnet/minecraft/server/BlockPosition;)Z sameDestroyTarget
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z continueDestroyBlock
	b (Lnet/minecraft/server/EntityHuman;)V releaseUsingItem
	c ()F getPickRange
	d ()V tick
	e ()Z hasExperience
	f ()Z hasMissTime
	g ()Z hasInfiniteItems
	h ()Z hasFarPickRange
	i ()Z isServerControlledInventory
	j ()Z isAlwaysFlying
	k ()Lnet/minecraft/server/EnumGamemode; getPlayerMode
	l ()Z isDestroying
	m ()V ensureHasSentCarriedItem
dnp net/minecraft/client/multiplayer/PlayerInfo
	a profile
	b textureLocations
	c gameMode
	d latency
	e pendingTextures
	f skinModel
	g tabListDisplayName
	h lastHealth
	i displayHealth
	j lastHealthTime
	k healthBlinkTime
	l renderVisibilityId
	a ()Lcom/mojang/authlib/GameProfile; getProfile
	a (I)V setLatency
	a (J)V setLastHealthTime
	a (Lnet/minecraft/server/EnumGamemode;)V setGameMode
	a (Lnet/minecraft/server/IChatBaseComponent;)V setTabListDisplayName
	b ()Lnet/minecraft/server/EnumGamemode; getGameMode
	b (I)V setLastHealth
	b (J)V setHealthBlinkTime
	c ()I getLatency
	c (I)V setDisplayHealth
	c (J)V setRenderVisibilityId
	d ()Z isCapeLoaded
	e ()Z isSkinLoaded
	f ()Ljava/lang/String; getModelName
	g ()Lnet/minecraft/server/MinecraftKey; getSkinLocation
	h ()Lnet/minecraft/server/MinecraftKey; getCapeLocation
	i ()Lnet/minecraft/server/MinecraftKey; getElytraLocation
	j ()Lnet/minecraft/server/ScoreboardTeam; getTeam
	k ()V registerTextures
	l ()Lnet/minecraft/server/IChatBaseComponent; getTabListDisplayName
	m ()I getLastHealth
	n ()I getDisplayHealth
	o ()J getLastHealthTime
	p ()J getHealthBlinkTime
	q ()J getRenderVisibilityId
dnq net/minecraft/client/multiplayer/ServerAddress
	a host
	b port
	a ()Ljava/lang/String; getHost
	a (Ljava/lang/String;)Ldnq; parseString
	a (Ljava/lang/String;I)I parseInt
	b ()I getPort
	b (Ljava/lang/String;)[Ljava/lang/String; lookupSrv
dnr net/minecraft/client/multiplayer/ServerData
	a name
	b ip
	c status
	d motd
	e ping
	f protocol
	g version
	h pinged
	i playerList
	j packStatus
	k iconB64
	l lan
	a ()Lnet/minecraft/server/NBTTagCompound; write
	a (Ldnr$a;)V setResourcePackStatus
	a (Ldnr;)V copyFrom
	a (Ljava/lang/String;)V setIconB64
	a (Lnet/minecraft/server/NBTTagCompound;)Ldnr; read
	b ()Ldnr$a; getResourcePackStatus
	c ()Ljava/lang/String; getIconB64
	d ()Z isLan
dnr$a net/minecraft/client/multiplayer/ServerData$ServerPackStatus
	a ENABLED
	b DISABLED
	c PROMPT
	d name
	e $VALUES
	a ()Lnet/minecraft/server/IChatBaseComponent; getName
dns net/minecraft/client/multiplayer/ServerList
	a LOGGER
	b minecraft
	c serverList
	a ()V load
	a (I)Ldnr; get
	a (II)V swap
	a (ILdnr;)V replace
	a (Ldnr;)V remove
	b ()V save
	b (Ldnr;)V add
	c ()I size
	c (Ldnr;)V saveSingleServer
dnt net/minecraft/client/multiplayer/ServerStatusPinger
	a SPLITTER
	b LOGGER
	c connections
	a ()V tick
	a (Ldnr;)V pingServer
	b ()V removeAll
	b (Ldnr;)V pingLegacyServer
dnw net/minecraft/client/particle/AttackSweepParticle
	a sprites
	a ()V tick
	a (F)I getLightColor
	b ()Ldpa; getRenderType
dnw$a net/minecraft/client/particle/AttackSweepParticle$Provider
	a sprites
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
dnx net/minecraft/client/particle/BarrierParticle
	b ()Ldpa; getRenderType
	b (F)F getQuadSize
dnx$a net/minecraft/client/particle/BarrierParticle$Provider
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
dny net/minecraft/client/particle/BreakingItemParticle
	C vo
	a uo
	b ()Ldpa; getRenderType
	c ()F getU0
	d ()F getU1
	e ()F getV0
	f ()F getV1
dny$a net/minecraft/client/particle/BreakingItemParticle$Provider
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
	a (Lnet/minecraft/server/ParticleParamItem;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
dny$b net/minecraft/client/particle/BreakingItemParticle$SlimeProvider
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
dny$c net/minecraft/client/particle/BreakingItemParticle$SnowballProvider
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
dnz net/minecraft/client/particle/BubbleColumnUpParticle
	a ()V tick
	b ()Ldpa; getRenderType
dnz$a net/minecraft/client/particle/BubbleColumnUpParticle$Provider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
doa net/minecraft/client/particle/BubbleParticle
	a ()V tick
	b ()Ldpa; getRenderType
doa$a net/minecraft/client/particle/BubbleParticle$Provider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
dob net/minecraft/client/particle/BubblePopParticle
	a sprites
	a ()V tick
	b ()Ldpa; getRenderType
dob$a net/minecraft/client/particle/BubblePopParticle$Provider
	a sprites
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
doc net/minecraft/client/particle/CampfireSmokeParticle
	a ()V tick
	b ()Ldpa; getRenderType
doc$a net/minecraft/client/particle/CampfireSmokeParticle$CosyProvider
	a sprites
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
doc$b net/minecraft/client/particle/CampfireSmokeParticle$SignalProvider
	a sprites
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
dod net/minecraft/client/particle/CritParticle
	a ()V tick
	b ()Ldpa; getRenderType
	b (F)F getQuadSize
dod$a net/minecraft/client/particle/CritParticle$DamageIndicatorProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
dod$b net/minecraft/client/particle/CritParticle$MagicProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
dod$c net/minecraft/client/particle/CritParticle$Provider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
doe net/minecraft/client/particle/DragonBreathParticle
	C sprites
	a hasHitGround
	a ()V tick
	b ()Ldpa; getRenderType
	b (F)F getQuadSize
doe$a net/minecraft/client/particle/DragonBreathParticle$Provider
	a sprites
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
dof net/minecraft/client/particle/DripParticle
	a type
	a ()V tick
	a (F)I getLightColor
	b ()Ldpa; getRenderType
	g ()V preMoveUpdate
	h ()V postMoveUpdate
dof$a net/minecraft/client/particle/DripParticle$CoolingDripHangParticle
	g ()V preMoveUpdate
dof$b net/minecraft/client/particle/DripParticle$DripHangParticle
	a fallingParticle
	g ()V preMoveUpdate
	h ()V postMoveUpdate
dof$c net/minecraft/client/particle/DripParticle$DripLandParticle
dof$d net/minecraft/client/particle/DripParticle$FallAndLandParticle
	a landParticle
	h ()V postMoveUpdate
dof$e net/minecraft/client/particle/DripParticle$FallingParticle
	h ()V postMoveUpdate
dof$f net/minecraft/client/particle/DripParticle$HoneyFallAndLandParticle
	h ()V postMoveUpdate
dof$g net/minecraft/client/particle/DripParticle$HoneyFallProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
dof$h net/minecraft/client/particle/DripParticle$HoneyHangProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
dof$i net/minecraft/client/particle/DripParticle$HoneyLandProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
dof$j net/minecraft/client/particle/DripParticle$LavaFallProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
dof$k net/minecraft/client/particle/DripParticle$LavaHangProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
dof$l net/minecraft/client/particle/DripParticle$LavaLandProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
dof$m net/minecraft/client/particle/DripParticle$NectarFallProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
dof$n net/minecraft/client/particle/DripParticle$WaterFallProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
dof$o net/minecraft/client/particle/DripParticle$WaterHangProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
dog net/minecraft/client/particle/DustParticle
	a sprites
	a ()V tick
	b ()Ldpa; getRenderType
	b (F)F getQuadSize
dog$a net/minecraft/client/particle/DustParticle$Provider
	a sprites
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
	a (Lnet/minecraft/server/ParticleParamRedstone;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
doh net/minecraft/client/particle/EnchantmentTableParticle
	C yStart
	D zStart
	a xStart
	a ()V tick
	a (DDD)V move
	a (F)I getLightColor
	b ()Ldpa; getRenderType
doh$a net/minecraft/client/particle/EnchantmentTableParticle$NautilusProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
doh$b net/minecraft/client/particle/EnchantmentTableParticle$Provider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
doi net/minecraft/client/particle/EndRodParticle
	a (DDD)V move
doi$a net/minecraft/client/particle/EndRodParticle$Provider
	a sprites
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
doj net/minecraft/client/particle/ExplodeParticle
	a sprites
	a ()V tick
	b ()Ldpa; getRenderType
doj$a net/minecraft/client/particle/ExplodeParticle$Provider
	a sprites
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
dok net/minecraft/client/particle/FallingDustParticle
	C sprites
	a rotSpeed
	a ()V tick
	b ()Ldpa; getRenderType
	b (F)F getQuadSize
dok$a net/minecraft/client/particle/FallingDustParticle$Provider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
	a (Lnet/minecraft/server/ParticleParamBlock;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
dol net/minecraft/client/particle/FireworkParticles
dol$a net/minecraft/client/particle/FireworkParticles$FlashProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
dol$b net/minecraft/client/particle/FireworkParticles$OverlayParticle
	a (Lcyl;Ldaz;F)V render
	b ()Ldpa; getRenderType
	b (F)F getQuadSize
dol$c net/minecraft/client/particle/FireworkParticles$SparkParticle
	C trail
	D flicker
	E engine
	F fadeR
	G fadeG
	H fadeB
	I hasFade
	a ()V tick
	a (Lcyl;Ldaz;F)V render
	a (Z)V setTrail
	b (Z)V setFlicker
dol$d net/minecraft/client/particle/FireworkParticles$SparkProvider
	a sprites
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
dol$e net/minecraft/client/particle/FireworkParticles$Starter
	A engine
	B explosions
	C twinkleDelay
	a life
	a ()V tick
	a (DDDDDD[I[IZZ)V createParticle
	a (DI[I[IZZ)V createParticleBall
	a (D[[D[I[IZZZ)V createParticleShape
	a ([I[IZZ)V createParticleBurst
	c ()Z isFarAwayFromCamera
dom net/minecraft/client/particle/FlameParticle
	a ()V tick
	a (DDD)V move
	a (F)I getLightColor
	b ()Ldpa; getRenderType
	b (F)F getQuadSize
dom$a net/minecraft/client/particle/FlameParticle$Provider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
don net/minecraft/client/particle/HeartParticle
	a ()V tick
	b ()Ldpa; getRenderType
	b (F)F getQuadSize
don$a net/minecraft/client/particle/HeartParticle$AngryVillagerProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
don$b net/minecraft/client/particle/HeartParticle$Provider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
doo net/minecraft/client/particle/HugeExplosionParticle
	a sprites
	a ()V tick
	a (F)I getLightColor
	b ()Ldpa; getRenderType
doo$a net/minecraft/client/particle/HugeExplosionParticle$Provider
	a sprites
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
dop net/minecraft/client/particle/HugeExplosionSeedParticle
	A lifeTime
	a life
	a ()V tick
dop$a net/minecraft/client/particle/HugeExplosionSeedParticle$Provider
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
doq net/minecraft/client/particle/ItemPickupParticle
	A itemEntity
	B target
	C life
	D entityRenderDispatcher
	a renderBuffers
	a ()V tick
	a (Lcyl;Ldaz;F)V render
	b ()Ldpa; getRenderType
dor net/minecraft/client/particle/LargeSmokeParticle
dor$a net/minecraft/client/particle/LargeSmokeParticle$Provider
	a sprites
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
dos net/minecraft/client/particle/LavaParticle
	a ()V tick
	a (F)I getLightColor
	b ()Ldpa; getRenderType
	b (F)F getQuadSize
dos$a net/minecraft/client/particle/LavaParticle$Provider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
dot net/minecraft/client/particle/MobAppearanceParticle
	A renderType
	a model
	a (Lcyl;Ldaz;F)V render
	b ()Ldpa; getRenderType
dot$a net/minecraft/client/particle/MobAppearanceParticle$Provider
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
dou net/minecraft/client/particle/NoRenderParticle
	a (Lcyl;Ldaz;F)V render
	b ()Ldpa; getRenderType
dov net/minecraft/client/particle/NoteParticle
	a ()V tick
	b ()Ldpa; getRenderType
	b (F)F getQuadSize
dov$a net/minecraft/client/particle/NoteParticle$Provider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
dow net/minecraft/client/particle/Particle
	A bb
	B stoppedByCollision
	a INITIAL_AABB
	b level
	c xo
	d yo
	e zo
	f x
	g y
	h z
	i xd
	j yd
	k zd
	l onGround
	m hasPhysics
	n removed
	o bbWidth
	p bbHeight
	q random
	r age
	s lifetime
	t gravity
	u rCol
	v gCol
	w bCol
	x alpha
	y roll
	z oRoll
	a ()V tick
	a (DDD)V move
	a (F)I getLightColor
	a (FF)V setSize
	a (FFF)V setColor
	a (I)V setLifetime
	a (Lcyl;Ldaz;F)V render
	a (Lnet/minecraft/server/AxisAlignedBB;)V setBoundingBox
	b ()Ldpa; getRenderType
	b (DDD)V setPos
	c (F)Ldow; setPower
	d (F)Ldow; scale
	e (F)V setAlpha
	i ()I getLifetime
	j ()V remove
	k ()V setLocationFromBoundingbox
	l ()Z isAlive
	m ()Lnet/minecraft/server/AxisAlignedBB; getBoundingBox
dox net/minecraft/client/particle/ParticleDescription
	a textures
	a ()Ljava/util/List; getTextures
	a (Lcom/google/gson/JsonObject;)Ldox; fromJson
doy net/minecraft/client/particle/ParticleEngine
	a level
	b RENDER_ORDER
	c particles
	d trackingEmitters
	e textureManager
	f random
	g providers
	h particlesToAdd
	i spriteSets
	j textureAtlas
	a ()V close
	a (Lcyi;Ldqq$a;Ldqp;Ldaz;F)V render
	a (Ldow;)V add
	a (Ljava/util/Collection;)V tickParticleList
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)V crack
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V destroy
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/ParticleParam;)V createTrackingEmitter
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/ParticleParam;I)V createTrackingEmitter
	a (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/MinecraftKey;Ljava/util/Map;)V loadParticleDescription
	a (Lnet/minecraft/server/Particle;Ldoy$b;)V register
	a (Lnet/minecraft/server/Particle;Ldoz;)V register
	a (Lnet/minecraft/server/ParticleParam;DDDDDD)Ldow; createParticle
	a (Lnet/minecraft/server/World;)V setLevel
	a (Lyw$a;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;Lnet/minecraft/server/GameProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; reload
	b ()V tick
	b (Ldow;)V tickParticle
	b (Lnet/minecraft/server/ParticleParam;DDDDDD)Ldow; makeParticle
	c ()Ljava/lang/String; countParticles
	d ()V registerProviders
doy$a net/minecraft/client/particle/ParticleEngine$MutableSpriteSet
	b sprites
	a (II)Leag; get
	a (Ljava/util/List;)V rebind
	a (Ljava/util/Random;)Leag; get
doy$b net/minecraft/client/particle/ParticleEngine$SpriteParticleRegistration
doz net/minecraft/client/particle/ParticleProvider
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
dpa net/minecraft/client/particle/ParticleRenderType
	a TERRAIN_SHEET
	b PARTICLE_SHEET_OPAQUE
	c PARTICLE_SHEET_TRANSLUCENT
	d PARTICLE_SHEET_LIT
	e CUSTOM
	f NO_RENDER
	a (Lcyd;Leah;)V begin
	a (Lcyj;)V end
dpb net/minecraft/client/particle/PlayerCloudParticle
	a sprites
	a ()V tick
	b ()Ldpa; getRenderType
	b (F)F getQuadSize
dpb$a net/minecraft/client/particle/PlayerCloudParticle$Provider
	a sprites
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
dpb$b net/minecraft/client/particle/PlayerCloudParticle$SneezeProvider
	a sprites
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
dpc net/minecraft/client/particle/PortalParticle
	C yStart
	D zStart
	a xStart
	a ()V tick
	a (DDD)V move
	a (F)I getLightColor
	b ()Ldpa; getRenderType
	b (F)F getQuadSize
dpc$a net/minecraft/client/particle/PortalParticle$Provider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
dpd net/minecraft/client/particle/SimpleAnimatedParticle
	C baseGravity
	D baseAirFriction
	E fadeR
	F fadeG
	G fadeB
	H hasFade
	a sprites
	a ()V tick
	a (F)I getLightColor
	b ()Ldpa; getRenderType
	b (I)V setColor
	c (I)V setFadeColor
	f (F)V setBaseAirFriction
dpe net/minecraft/client/particle/SingleQuadParticle
	A quadSize
	a (Lcyl;Ldaz;F)V render
	b (F)F getQuadSize
	c ()F getU0
	d ()F getU1
	d (F)Ldow; scale
	e ()F getV0
	f ()F getV1
dpf net/minecraft/client/particle/SmokeParticle
	a sprites
	a ()V tick
	b ()Ldpa; getRenderType
	b (F)F getQuadSize
dpf$a net/minecraft/client/particle/SmokeParticle$Provider
	a sprites
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
dpg net/minecraft/client/particle/SpellParticle
	C sprites
	a RANDOM
	a ()V tick
	b ()Ldpa; getRenderType
dpg$a net/minecraft/client/particle/SpellParticle$AmbientMobProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
dpg$b net/minecraft/client/particle/SpellParticle$InstantProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
dpg$c net/minecraft/client/particle/SpellParticle$MobProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
dpg$d net/minecraft/client/particle/SpellParticle$Provider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
dpg$e net/minecraft/client/particle/SpellParticle$WitchProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
dph net/minecraft/client/particle/SpitParticle
	a ()V tick
dph$a net/minecraft/client/particle/SpitParticle$Provider
	a sprites
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
dpi net/minecraft/client/particle/SplashParticle
dpi$a net/minecraft/client/particle/SplashParticle$Provider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
dpj net/minecraft/client/particle/SpriteSet
	a (II)Leag; get
	a (Ljava/util/Random;)Leag; get
dpk net/minecraft/client/particle/SquidInkParticle
	a ()V tick
dpk$a net/minecraft/client/particle/SquidInkParticle$Provider
	a sprites
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
dpl net/minecraft/client/particle/SuspendedParticle
	a ()V tick
	b ()Ldpa; getRenderType
dpl$a net/minecraft/client/particle/SuspendedParticle$Provider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
dpm net/minecraft/client/particle/SuspendedTownParticle
	a ()V tick
	a (DDD)V move
	b ()Ldpa; getRenderType
dpm$a net/minecraft/client/particle/SuspendedTownParticle$ComposterFillProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
dpm$b net/minecraft/client/particle/SuspendedTownParticle$DolphinSpeedProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
dpm$c net/minecraft/client/particle/SuspendedTownParticle$HappyVillagerProvider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
dpm$d net/minecraft/client/particle/SuspendedTownParticle$Provider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
dpn net/minecraft/client/particle/TerrainParticle
	C pos
	D uo
	E vo
	a blockState
	a (F)I getLightColor
	a (Lnet/minecraft/server/BlockPosition;)Ldpn; init
	b ()Ldpa; getRenderType
	b (Lnet/minecraft/server/BlockPosition;)V multiplyColor
	c ()F getU0
	d ()F getU1
	e ()F getV0
	f ()F getV1
	g ()Ldpn; init
dpn$a net/minecraft/client/particle/TerrainParticle$Provider
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
	a (Lnet/minecraft/server/ParticleParamBlock;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
dpo net/minecraft/client/particle/TextureSheetParticle
	B sprite
	a (Ldpj;)V pickSprite
	a (Leag;)V setSprite
	b (Ldpj;)V setSpriteFromAge
	c ()F getU0
	d ()F getU1
	e ()F getV0
	f ()F getV1
dpp net/minecraft/client/particle/TotemParticle
dpp$a net/minecraft/client/particle/TotemParticle$Provider
	a sprites
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
dpq net/minecraft/client/particle/TrackingEmitter
	A life
	B lifeTime
	C particleType
	a entity
	a ()V tick
dpr net/minecraft/client/particle/WakeParticle
	a sprites
	a ()V tick
	b ()Ldpa; getRenderType
dpr$a net/minecraft/client/particle/WakeParticle$Provider
	a sprites
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
dps net/minecraft/client/particle/WaterCurrentDownParticle
	a angle
	a ()V tick
	b ()Ldpa; getRenderType
dps$a net/minecraft/client/particle/WaterCurrentDownParticle$Provider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
dpt net/minecraft/client/particle/WaterDropParticle
	a ()V tick
	b ()Ldpa; getRenderType
dpt$a net/minecraft/client/particle/WaterDropParticle$Provider
	a sprite
	a (Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
	a (Lnet/minecraft/server/ParticleType;Lnet/minecraft/server/World;DDDDDD)Ldow; createParticle
dpv net/minecraft/client/player/AbstractClientPlayer
	a elytraRotX
	b elytraRotY
	c elytraRotZ
	d clientLevel
	e playerInfo
	a (Lnet/minecraft/server/MinecraftKey;Ljava/lang/String;)Ldzw; registerSkinTexture
	c ()Z isCapeLoaded
	d (Ljava/lang/String;)Lnet/minecraft/server/MinecraftKey; getSkinLocation
	e (Ljava/lang/String;)Lnet/minecraft/server/MinecraftKey; getSkullPath
	i ()Ldnp; getPlayerInfo
	l ()Z isSkinLoaded
	m ()Lnet/minecraft/server/MinecraftKey; getSkinTextureLocation
	n ()Lnet/minecraft/server/MinecraftKey; getCloakTextureLocation
	o ()Z isElytraLoaded
	p ()Lnet/minecraft/server/MinecraftKey; getElytraTextureLocation
	s ()Ljava/lang/String; getModelName
	t ()Z isSpectator
	u ()Z isCreative
	v ()F getFieldOfViewModifier
dpw net/minecraft/client/player/Input
	a leftImpulse
	b forwardImpulse
	c up
	d down
	e left
	f right
	g jumping
	h shiftKeyDown
	a ()Lnet/minecraft/server/Vec2F; getMoveVector
	a (Z)V tick
	b ()Z hasForwardImpulse
dpx net/minecraft/client/player/KeyboardInput
	i options
	a (Z)V tick
dpy net/minecraft/client/player/LocalPlayer
	bR sprintTriggerTime
	bS sprintTime
	bT yBob
	bU xBob
	bV yBobO
	bW xBobO
	bX portalTime
	bY oPortalTime
	bZ stats
	ca recipeBook
	cb ambientSoundHandlers
	cc permissionLevel
	cd xLast
	ce yLast1
	cf zLast
	cg yRotLast
	ch xRotLast
	ci lastOnGround
	cj wasShiftKeyDown
	ck wasSprinting
	cl positionReminder
	cm flashOnSetHealth
	cn serverBrand
	co jumpRidingTicks
	cp jumpRidingScale
	cq startedUsingItem
	cr usingItemHand
	cs handsBusy
	ct autoJumpEnabled
	cu autoJumpTime
	cv wasFallFlying
	cw waterVisionTime
	cx showDeathScreen
	e connection
	f input
	g minecraft
	A ()Ljava/lang/String; getServerBrand
	B ()Lnet/minecraft/server/StatisticManager; getStats
	D ()Ldba; getRecipeBook
	F ()Z shouldShowDeathScreen
	G ()Z isRidingJumpable
	H ()F getJumpRidingScale
	I ()Z isMovingSlowly
	J ()Z isControlledCamera
	K ()Z isHandsBusy
	a (B)V handleEntityEvent
	a (FII)V setExperienceValues
	a (I)V setPermissionLevel
	a (Lnet/minecraft/server/CommandBlockListenerAbstract;)V openMinecartCommandBlock
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/Entity;)V crit
	a (Lnet/minecraft/server/Entity;Z)Z startRiding
	a (Lnet/minecraft/server/EnumHand;)V swing
	a (Lnet/minecraft/server/EnumMoveType;Lnet/minecraft/server/Vec3D;)V move
	a (Lnet/minecraft/server/IChatBaseComponent;)V sendMessage
	a (Lnet/minecraft/server/IChatBaseComponent;Z)V displayClientMessage
	a (Lnet/minecraft/server/IRecipe;)V removeRecipeHighlight
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumHand;)V openItemGui
	a (Lnet/minecraft/server/SoundEffect;FF)V playSound
	a (Lnet/minecraft/server/SoundEffect;Lnet/minecraft/server/SoundCategory;FF)V playNotifySound
	a (Lnet/minecraft/server/TileEntityCommand;)V openCommandBlock
	a (Lnet/minecraft/server/TileEntityJigsaw;)V openJigsawBlock
	a (Lnet/minecraft/server/TileEntitySign;)V openTextEdit
	a (Lnet/minecraft/server/TileEntityStructure;)V openStructureBlock
	a (Z)V setShowDeathScreen
	aA ()Z isUnderWater
	aQ ()V rideTick
	b (F)V heal
	b (Lnet/minecraft/server/Entity;)V magicCrit
	bj ()Z isShiftKeyDown
	bo ()Z isCrouching
	bt ()Z isGlowing
	c (Lnet/minecraft/server/EnumHand;)V startUsingItem
	c (Lnet/minecraft/server/MobEffectList;)Lnet/minecraft/server/MobEffect; removeEffectNoUpdate
	d (Lnet/minecraft/server/DamageSource;F)V actuallyHurt
	dB ()Z isUsingItem
	dC ()Lnet/minecraft/server/EnumHand; getUsedItemHand
	dH ()V stopUsingItem
	dW ()Z updateIsUnderwater
	du ()V serverAiStep
	dx ()Z isEffectiveAi
	eC ()Z isAutoJumpEnabled
	eD ()F getWaterVision
	eE ()V sendPosition
	eF ()V handleNetherPortalClient
	eG ()Z canAutoJump
	eH ()Z isMoving
	eI ()Z hasEnoughImpulseToStartSprinting
	eb ()V respawn
	ec ()Z isLocalPlayer
	f (Ljava/lang/String;)V chat
	f (Z)V setSprinting
	g (F)F getViewXRot
	g (FF)V updateAutoJump
	g (Ljava/lang/String;)V setServerBrand
	g (Lnet/minecraft/server/BlockPosition;)Z blocked
	h ()V tick
	h (F)F getViewYRot
	j ()V stopRiding
	k ()V aiStep
	k (DDD)V checkInBlock
	n (Z)Z drop
	r ()V onUpdateAbilities
	t (F)V hurtTo
	v_ ()V closeContainer
	w ()V clientSideCloseContainer
	x ()V sendRidingJump
	y ()I getPermissionLevel
	z ()V sendOpenInventory
dpz net/minecraft/client/player/RemotePlayer
	a (D)Z shouldRenderAtSqrDistance
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/IChatBaseComponent;)V sendMessage
	dX ()V updatePlayerPose
	h ()V tick
	k ()V aiStep
dqa net/minecraft/client/player/inventory/Hotbar
	a items
	a ()Lnet/minecraft/server/NBTTagList; createTag
	a (Lnet/minecraft/server/NBTTagList;)V fromTag
dqd net/minecraft/client/renderer/BiomeColors
	a GRASS_COLOR_RESOLVER
	b FOLIAGE_COLOR_RESOLVER
	c WATER_COLOR_RESOLVER
	a (Lnet/minecraft/server/IBlockLightAccess;Lnet/minecraft/server/BlockPosition;)I getAverageGrassColor
	a (Lnet/minecraft/server/IBlockLightAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/world/level/ColorResolver;)I getAverageColor
	b (Lnet/minecraft/server/IBlockLightAccess;Lnet/minecraft/server/BlockPosition;)I getAverageFoliageColor
	c (Lnet/minecraft/server/IBlockLightAccess;Lnet/minecraft/server/BlockPosition;)I getAverageWaterColor
dqe net/minecraft/client/renderer/BlockEntityWithoutLevelRenderer
	a instance
	b SHULKER_BOXES
	c DEFAULT_SHULKER_BOX
	d chest
	e trappedChest
	f enderChest
	g banner
	h bed
	i conduit
	j shieldModel
	k tridentModel
	a (Lnet/minecraft/server/ItemStack;Lcyi;Ldqq;II)V renderByItem
dqf net/minecraft/client/renderer/ChunkBufferBuilderPack
	a builders
	a ()V clearAll
	a (Ldqy;)Lcyd; builder
	b ()V discardAll
dqg net/minecraft/client/renderer/CubeMap
	a images
	a (Ldbl;FFF)V render
	a (Leah;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; preload
dqh net/minecraft/client/renderer/EffectInstance
	a LOGGER
	b DUMMY_UNIFORM
	c lastAppliedEffect
	d lastProgramId
	e samplerMap
	f samplerNames
	g samplerLocations
	h uniforms
	i uniformLocations
	j uniformMap
	k programId
	l name
	m cull
	n dirty
	o blend
	p attributes
	q attributeNames
	r vertexProgram
	s fragmentProgram
	a ()I getId
	a (Lcom/google/gson/JsonElement;)V parseSamplerNode
	a (Lcom/google/gson/JsonObject;)Lcxx; parseBlendNode
	a (Ljava/lang/String;)Lcyb; getUniform
	a (Ljava/lang/String;Ljava/lang/Object;)V setSampler
	a (Lnet/minecraft/server/IResourceManager;Lcxz$a;Ljava/lang/String;)Lcxz; getOrCreate
	b ()V markDirty
	b (Lcom/google/gson/JsonElement;)V parseUniformNode
	b (Ljava/lang/String;)Lcxw; safeGetUniform
	c ()Lcxz; getVertexProgram
	d ()Lcxz; getFragmentProgram
	e ()V clear
	f ()V apply
	g ()Ljava/lang/String; getName
	h ()V updateLocations
dqi net/minecraft/client/renderer/FaceInfo
	a DOWN
	b UP
	c NORTH
	d SOUTH
	e WEST
	f EAST
	g BY_FACING
	h infos
	i $VALUES
	a (I)Ldqi$b; getVertexInfo
	a (Lnet/minecraft/server/EnumDirection;)Ldqi; fromFacing
dqi$a net/minecraft/client/renderer/FaceInfo$Constants
	a MAX_Z
	b MAX_Y
	c MAX_X
	d MIN_Z
	e MIN_Y
	f MIN_X
dqi$b net/minecraft/client/renderer/FaceInfo$VertexInfo
	a xFace
	b yFace
	c zFace
dqj net/minecraft/client/renderer/FogRenderer
	a fogRed
	b fogGreen
	c fogBlue
	d targetBiomeFog
	e previousBiomeFog
	f biomeChangedTime
	a ()V setupNoFog
	a (Ldaz;FLdnl;IF)V setupColor
	a (Ldaz;Ldqj$a;FZ)V setupFog
	b ()V levelFogColor
dqj$a net/minecraft/client/renderer/FogRenderer$FogMode
	a FOG_SKY
	b FOG_TERRAIN
	c $VALUES
dqk net/minecraft/client/renderer/GameRenderer
	A itemActivationOffX
	B itemActivationOffY
	C postEffect
	D EFFECTS
	E effectIndex
	F effectActive
	G mainCamera
	a itemInHandRenderer
	b EFFECT_NONE
	c LOGGER
	d minecraft
	e resourceManager
	f random
	g renderDistance
	h mapRenderer
	i renderBuffers
	j tick
	k fov
	l oldFov
	m darkenWorldAmount
	n darkenWorldAmountO
	o renderHand
	p renderBlockOutline
	q lastScreenshotAttempt
	r lastActiveTime
	s lightTexture
	t overlayTexture
	u panoramicMode
	v zoom
	w zoomX
	x zoomY
	y itemActivationItem
	z itemActivationTicks
	a ()V shutdownEffect
	a (F)V pick
	a (FFF)V renderZoomed
	a (FJLcyi;)V renderLevel
	a (FJZ)V render
	a (II)V resize
	a (IIF)V renderItemActivationAnimation
	a (Lb;)V resetProjectionMatrix
	a (Lcyi;F)V bobHurt
	a (Lcyi;Ldaz;F)V renderItemInHand
	a (Ldaz;FZ)Lb; getProjectionMatrix
	a (Lnet/minecraft/server/Entity;)V checkEntityPostEffect
	a (Lnet/minecraft/server/EntityLiving;F)F getNightVisionScale
	a (Lnet/minecraft/server/IResourceManager;)V onResourceManagerReload
	a (Lnet/minecraft/server/ItemStack;)V displayItemActivation
	a (Lnet/minecraft/server/MinecraftKey;)V loadEffect
	a (Z)V setRenderHand
	b ()V togglePostEffect
	b (F)F getDarkenWorldAmount
	b (Lcyi;F)V bobView
	b (Ldaz;FZ)D getFov
	b (Z)V setRenderBlockOutline
	c ()V cycleEffect
	c (Z)V setPanoramicMode
	d ()V tick
	e ()Ldqt; currentEffect
	f ()V resetData
	g ()Ldci; getMapRenderer
	h ()Ldbl; getMinecraft
	j ()F getRenderDistance
	k ()Ldaz; getMainCamera
	l ()Ldqp; lightTexture
	m ()Leaa; overlayTexture
	n ()V tickFov
	o ()V takeAutoScreenshot
	p ()Z shouldRenderBlockOutline
dql net/minecraft/client/renderer/ItemBlockRenderTypes
	a TYPE_BY_BLOCK
	b TYPE_BY_FLUID
	c renderCutout
	a (Lnet/minecraft/server/Fluid;)Ldqy; getRenderLayer
	a (Lnet/minecraft/server/IBlockData;)Ldqy; getChunkRenderType
	a (Lnet/minecraft/server/ItemStack;)Ldqy; getRenderType
	a (Z)V setFancy
	b (Lnet/minecraft/server/IBlockData;)Ldqy; getRenderType
dqm net/minecraft/client/renderer/ItemInHandRenderer
	a MAP_BACKGROUND
	b MAP_BACKGROUND_CHECKERBOARD
	c minecraft
	d mainHandItem
	e offHandItem
	f mainHandHeight
	g oMainHandHeight
	h offHandHeight
	i oOffHandHeight
	j entityRenderDispatcher
	k itemRenderer
	a ()V tick
	a (F)F calculateMapTilt
	a (FLcyi;Ldqq$a;Ldpy;I)V renderHandsWithItems
	a (Lcyi;FLnet/minecraft/server/EnumMainHand;Lnet/minecraft/server/ItemStack;)V applyEatTransform
	a (Lcyi;Ldqq;IFFF)V renderTwoHandedMap
	a (Lcyi;Ldqq;IFFLnet/minecraft/server/EnumMainHand;)V renderPlayerArm
	a (Lcyi;Ldqq;IFLnet/minecraft/server/EnumMainHand;FLnet/minecraft/server/ItemStack;)V renderOneHandedMap
	a (Lcyi;Ldqq;ILnet/minecraft/server/EnumMainHand;)V renderMapHand
	a (Lcyi;Ldqq;ILnet/minecraft/server/ItemStack;)V renderMap
	a (Lcyi;Lnet/minecraft/server/EnumMainHand;F)V applyItemArmAttackTransform
	a (Ldpv;FFLnet/minecraft/server/EnumHand;FLnet/minecraft/server/ItemStack;FLcyi;Ldqq;I)V renderArmWithItem
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;Ldrw$b;ZLcyi;Ldqq;I)V renderItem
	a (Lnet/minecraft/server/EnumHand;)V itemUsed
	b (Lcyi;Lnet/minecraft/server/EnumMainHand;F)V applyItemArmTransform
dqn net/minecraft/client/renderer/ItemModelShaper
	a shapes
	b shapesCache
	c modelManager
	a ()Lebx; getModelManager
	a (Lnet/minecraft/server/IMaterial;)Leag; getParticleIcon
	a (Lnet/minecraft/server/Item;)Lebs; getItemModel
	a (Lnet/minecraft/server/Item;Leby;)V register
	a (Lnet/minecraft/server/ItemStack;)Leag; getParticleIcon
	b ()V rebuildCache
	b (Lnet/minecraft/server/Item;)I getIndex
	b (Lnet/minecraft/server/ItemStack;)Lebs; getItemModel
dqo net/minecraft/client/renderer/LevelRenderer
	A destroyingBlocks
	B destructionProgress
	C playingRecords
	D entityTarget
	E entityEffect
	F lastCameraX
	G lastCameraY
	H lastCameraZ
	I lastCameraChunkX
	J lastCameraChunkY
	K lastCameraChunkZ
	L prevCamX
	M prevCamY
	N prevCamZ
	O prevCamRotX
	P prevCamRotY
	Q prevCloudX
	R prevCloudY
	S prevCloudZ
	T prevCloudColor
	U prevCloudsType
	V chunkRenderDispatcher
	W format
	X lastViewDistance
	Y renderedEntities
	Z culledEntities
	a DIRECTIONS
	aa captureFrustum
	ab capturedFrustum
	ac frustumPoints
	ad frustumPos
	ae xTransparentOld
	af yTransparentOld
	ag zTransparentOld
	ah needsUpdate
	ai frameId
	aj rainSoundTime
	ak rainSizeX
	al rainSizeZ
	b LOGGER
	c MOON_LOCATION
	d SUN_LOCATION
	e CLOUDS_LOCATION
	f END_SKY_LOCATION
	g FORCEFIELD_LOCATION
	h RAIN_LOCATION
	i SNOW_LOCATION
	j minecraft
	k textureManager
	l entityRenderDispatcher
	m renderBuffers
	n level
	o chunksToCompile
	p renderChunks
	q globalBlockEntities
	r viewArea
	s skyFormat
	t starBuffer
	u skyBuffer
	v darkBuffer
	w generateClouds
	x cloudBuffer
	y frameTimes
	z ticks
	a ()V initOutline
	a (II)V resize
	a (III)V setSectionDirtyWithNeighbors
	a (IIIIII)V setBlocksDirty
	a (IIIZ)V setSectionDirty
	a (ILnet/minecraft/server/BlockPosition;I)V globalLevelEvent
	a (J)V compileChunksUntil
	a (Lb;Lb;DDDLdtj;)V captureFrustum
	a (Lcyd;)V drawStars
	a (Lcyd;DDDDDDFFFF)V addChainedFilledBoxVertices
	a (Lcyd;DDDDIDFF)V vertex
	a (Lcyd;DDDLnet/minecraft/server/Vec3D;)V buildClouds
	a (Lcyd;FZ)V drawSkyHemisphere
	a (Lcyi;)V checkPoseStack
	a (Lcyi;F)V renderSky
	a (Lcyi;FDDD)V renderClouds
	a (Lcyi;FJZLdaz;Ldqk;Ldqp;Lb;)V renderLevel
	a (Lcyi;Lcyl;DDDDDDFFFF)V renderLineBox
	a (Lcyi;Lcyl;DDDDDDFFFFFFF)V renderLineBox
	a (Lcyi;Lcyl;Lnet/minecraft/server/AxisAlignedBB;FFFF)V renderLineBox
	a (Lcyi;Lcyl;Lnet/minecraft/server/Entity;DDDLnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V renderHitOutline
	a (Lcyi;Lcyl;Lnet/minecraft/server/VoxelShape;DDDFFFF)V renderVoxelShape
	a (Lcyl;DDDDDDFFFF)V renderLineBox
	a (Lcyl;I)V addFrustumVertex
	a (Lcyl;IIIIIII)V addFrustumQuad
	a (Ldaz;)V tickRain
	a (Ldaz;Ldtj;ZIZ)V setupRender
	a (Ldnl;)V setLevel
	a (Ldqp;FDDD)V renderSnowAndRain
	a (Ldqy;Lcyi;DDD)V renderChunkLayer
	a (Ljava/util/Collection;Ljava/util/Collection;)V updateGlobalBlockEntities
	a (Lnet/minecraft/server/BlockPosition;)Ljava/util/Set; getVisibleDirections
	a (Lnet/minecraft/server/BlockPosition;Ldte$c;)Z isAdjacentChunk
	a (Lnet/minecraft/server/BlockPosition;Ldte$c;Lnet/minecraft/server/EnumDirection;)Ldte$c; getRelativeFrom
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;)V setBlockDirty
	a (Lnet/minecraft/server/BlockPosition;Z)V setBlockDirty
	a (Lnet/minecraft/server/Entity;D)Lnet/minecraft/server/Vector3fa; getViewVector
	a (Lnet/minecraft/server/Entity;DDDFLcyi;Ldqq;)V renderEntity
	a (Lnet/minecraft/server/EntityHuman;ILnet/minecraft/server/BlockPosition;I)V levelEvent
	a (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Z canSee
	a (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/Vector3fa;)Z canSee
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;I)V blockChanged
	a (Lnet/minecraft/server/IBlockLightAccess;Lnet/minecraft/server/BlockPosition;)I getLightColor
	a (Lnet/minecraft/server/IBlockLightAccess;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;)I getLightColor
	a (Lnet/minecraft/server/IResourceManager;)V onResourceManagerReload
	a (Lnet/minecraft/server/ParticleParam;DDDDDD)V addParticle
	a (Lnet/minecraft/server/ParticleParam;ZDDDDDD)V addParticle
	a (Lnet/minecraft/server/ParticleParam;ZZDDDDDD)V addParticle
	a (Lnet/minecraft/server/SoundEffect;Lnet/minecraft/server/BlockPosition;)V playStreamingMusic
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Z)V notifyNearbyEntities
	a (Lwn;)V removeProgress
	a (Z)Ldbq; calculateParticleLevel
	b ()V doEntityOutline
	b (III)V setSectionDirty
	b (ILnet/minecraft/server/BlockPosition;I)V destroyBlockProgress
	b (Lcyi;)V renderEndSky
	b (Lcyi;Lcyl;Lnet/minecraft/server/VoxelShape;DDDFFFF)V renderShape
	b (Ldaz;)V renderDebug
	b (Lnet/minecraft/server/ParticleParam;ZDDDDDD)Ldow; addParticleInternal
	b (Lnet/minecraft/server/ParticleParam;ZZDDDDDD)Ldow; addParticleInternal
	c ()Z shouldShowEntityOutlines
	c (Ldaz;)V renderWorldBounds
	d ()V allChanged
	e ()V resetChunksToCompile
	f ()Ljava/lang/String; getChunkStatistics
	g ()I countRenderedChunks
	h ()Ljava/lang/String; getEntityStatistics
	j ()V captureFrustum
	k ()V killFrustum
	l ()V tick
	m ()V clear
	n ()Z hasRenderedAllChunks
	o ()V needsUpdate
	p ()Lcxb; entityTarget
	q ()V createDarkSky
	r ()V createLightSky
	s ()V createStars
dqo$a net/minecraft/client/renderer/LevelRenderer$RenderChunkInfo
	b chunk
	c sourceDirection
	d directions
	e step
	a (BLnet/minecraft/server/EnumDirection;)V setDirections
	a (Lnet/minecraft/server/EnumDirection;)Z hasDirection
dqp net/minecraft/client/renderer/LightTexture
	a lightTexture
	b lightPixels
	c lightTextureLocation
	d updateLightTexture
	e blockLightRedFlicker
	f renderer
	g minecraft
	a ()V tick
	a (F)V updateLightTexture
	a (I)I block
	a (II)I pack
	a (Lnet/minecraft/server/World;I)F getBrightness
	b ()V turnOffLightLayer
	b (F)F notGamma
	b (I)I sky
	c ()V turnOnLightLayer
dqq net/minecraft/client/renderer/MultiBufferSource
	a (Lcyd;)Ldqq$a; immediate
	a (Ljava/util/Map;Lcyd;)Ldqq$a; immediateWithBuffers
dqq$a net/minecraft/client/renderer/MultiBufferSource$BufferSource
	a builder
	b fixedBuffers
	c lastState
	d startedBuffers
	a ()V endBatch
	a (Ldqy;)V endBatch
	b (Ldqy;)Lcyd; getBuilderRaw
dqr net/minecraft/client/renderer/OutlineBufferSource
	a bufferSource
	b outlineBufferSource
	c teamR
	d teamG
	e teamB
	f teamA
	a ()V endOutlineBatch
	a (IIII)V setColor
dqr$a net/minecraft/client/renderer/OutlineBufferSource$EntityOutlineGenerator
	g delegate
	h x
	i y
	j z
	k u
	l v
	a ()V endVertex
	a (DDD)Lcyl; vertex
	a (FF)Lcyl; uv
	a (FFF)Lcyl; normal
	a (FFFFFFFFFIIFFF)V vertex
	a (II)Lcyl; overlayCoords
	a (IIII)Lcyl; color
	b (II)Lcyl; uv2
	b (IIII)V defaultColor
	k ()V unsetDefaultColor
dqs net/minecraft/client/renderer/PanoramaRenderer
	a minecraft
	b cubeMap
	c time
	a (FF)V render
dqt net/minecraft/client/renderer/PostChain
	a screenTarget
	b resourceManager
	c name
	d passes
	e customRenderTargets
	f fullSizedTargets
	g shaderOrthoMatrix
	h screenWidth
	i screenHeight
	j time
	k lastStamp
	a ()Ljava/lang/String; getName
	a (F)V process
	a (II)V resize
	a (Lcom/google/gson/JsonElement;)V parseTargetNode
	a (Leah;Lcom/google/gson/JsonElement;)V parsePassNode
	a (Leah;Lnet/minecraft/server/MinecraftKey;)V load
	a (Ljava/lang/String;)Lcxb; getTempTarget
	a (Ljava/lang/String;II)V addTempTarget
	a (Ljava/lang/String;Lcxb;Lcxb;)Ldqu; addPass
	b ()V updateOrthoMatrix
	b (Lcom/google/gson/JsonElement;)V parseUniformNode
	b (Ljava/lang/String;)Lcxb; getRenderTarget
dqu net/minecraft/client/renderer/PostPass
	a inTarget
	b outTarget
	c effect
	d auxAssets
	e auxNames
	f auxWidths
	g auxHeights
	h shaderOrthoMatrix
	a ()Ljava/lang/String; getName
	a (F)V process
	a (Lb;)V setOrthoMatrix
	a (Ljava/lang/String;Ljava/lang/Object;II)V addAuxAsset
	b ()Ldqh; getEffect
dqv net/minecraft/client/renderer/Rect2i
	a xPos
	b yPos
	c width
	d height
	a ()I getX
	a (I)V setX
	a (II)V setPosition
	a (Ldqv;)Ldqv; intersect
	b ()I getY
	b (I)V setY
	b (II)Z contains
	c ()I getWidth
	c (I)V setWidth
	d ()I getHeight
	d (I)V setHeight
dqw net/minecraft/client/renderer/RenderBuffers
	a fixedBufferPack
	b fixedBuffers
	c bufferSource
	d crumblingBufferSource
	e outlineBufferSource
	a ()Ldqf; fixedBufferPack
	a (Lit/unimi/dsi/fastutil/objects/Object2ObjectLinkedOpenHashMap;Ldqy;)V put
	b ()Ldqq$a; bufferSource
	c ()Ldqq$a; crumblingBufferSource
	d ()Ldqr; outlineBufferSource
dqx net/minecraft/client/renderer/RenderStateShard
	A NO_CULL
	B NO_DEPTH_TEST
	C EQUAL_DEPTH_TEST
	D LEQUAL_DEPTH_TEST
	E COLOR_DEPTH_WRITE
	F COLOR_WRITE
	G DEPTH_WRITE
	H NO_LAYERING
	I POLYGON_OFFSET_LAYERING
	J PROJECTION_LAYERING
	K NO_FOG
	L FOG
	M BLACK_FOG
	N MAIN_TARGET
	O OUTLINE_TARGET
	P DEFAULT_LINE
	Q setupState
	R clearState
	a name
	b NO_TRANSPARENCY
	c ADDITIVE_TRANSPARENCY
	d LIGHTNING_TRANSPARENCY
	e GLINT_TRANSPARENCY
	f CRUMBLING_TRANSPARENCY
	g TRANSLUCENT_TRANSPARENCY
	h NO_ALPHA
	i DEFAULT_ALPHA
	j MIDWAY_ALPHA
	k FLAT_SHADE
	l SMOOTH_SHADE
	m BLOCK_SHEET_MIPPED
	n BLOCK_SHEET
	o NO_TEXTURE
	p DEFAULT_TEXTURING
	q OUTLINE_TEXTURING
	r GLINT_TEXTURING
	s ENTITY_GLINT_TEXTURING
	t LIGHTMAP
	u NO_LIGHTMAP
	v OVERLAY
	w NO_OVERLAY
	x DIFFUSE_LIGHTING
	y NO_DIFFUSE_LIGHTING
	z CULL
	a ()V setupRenderState
	a (F)V setupGlintTexturing
	b ()V clearRenderState
dqx$a net/minecraft/client/renderer/RenderStateShard$AlphaStateShard
	Q cutoff
dqx$b net/minecraft/client/renderer/RenderStateShard$BooleanStateShard
	Q enabled
dqx$c net/minecraft/client/renderer/RenderStateShard$CullStateShard
dqx$d net/minecraft/client/renderer/RenderStateShard$DepthTestStateShard
	Q function
dqx$e net/minecraft/client/renderer/RenderStateShard$DiffuseLightingStateShard
dqx$f net/minecraft/client/renderer/RenderStateShard$FogStateShard
dqx$g net/minecraft/client/renderer/RenderStateShard$LayeringStateShard
dqx$h net/minecraft/client/renderer/RenderStateShard$LightmapStateShard
dqx$i net/minecraft/client/renderer/RenderStateShard$LineStateShard
	Q width
dqx$j net/minecraft/client/renderer/RenderStateShard$OffsetTexturingStateShard
	Q uOffset
	R vOffset
dqx$k net/minecraft/client/renderer/RenderStateShard$OutputStateShard
dqx$l net/minecraft/client/renderer/RenderStateShard$OverlayStateShard
dqx$m net/minecraft/client/renderer/RenderStateShard$PortalTexturingStateShard
	Q iteration
dqx$n net/minecraft/client/renderer/RenderStateShard$ShadeModelStateShard
	Q smooth
dqx$o net/minecraft/client/renderer/RenderStateShard$TextureStateShard
	Q texture
	R blur
	S mipmap
	c ()Ljava/util/Optional; texture
dqx$p net/minecraft/client/renderer/RenderStateShard$TexturingStateShard
dqx$q net/minecraft/client/renderer/RenderStateShard$TransparencyStateShard
dqx$r net/minecraft/client/renderer/RenderStateShard$WriteMaskStateShard
	Q writeColor
	R writeDepth
dqy net/minecraft/client/renderer/RenderType
	Q LINES
	R SOLID
	S CUTOUT_MIPPED
	T CUTOUT
	U TRANSLUCENT
	V TRANSLUCENT_NO_CRUMBLING
	W LEASH
	X WATER_MASK
	Y GLINT
	Z ENTITY_GLINT
	aa LIGHTNING
	ab format
	ac mode
	ad bufferSize
	ae affectsCrumbling
	af sortOnUpload
	a (I)Ldqy; endPortal
	a (Lcyd;III)V end
	a (Ljava/lang/String;Lcym;IILdqy$b;)Ldqy$a; create
	a (Ljava/lang/String;Lcym;IIZZLdqy$b;)Ldqy$a; create
	a (Lnet/minecraft/server/MinecraftKey;)Ldqy; entitySolid
	a (Lnet/minecraft/server/MinecraftKey;F)Ldqy; entityAlpha
	a (Lnet/minecraft/server/MinecraftKey;FF)Ldqy; energySwirl
	a (Lnet/minecraft/server/MinecraftKey;Z)Ldqy; beaconBeam
	b (Lnet/minecraft/server/MinecraftKey;)Ldqy; entityCutout
	c ()Ldqy; solid
	c (Lnet/minecraft/server/MinecraftKey;)Ldqy; entityCutoutNoCull
	d ()Ldqy; cutoutMipped
	d (Lnet/minecraft/server/MinecraftKey;)Ldqy; entityTranslucentCull
	e ()Ldqy; cutout
	e (Lnet/minecraft/server/MinecraftKey;)Ldqy; entityTranslucent
	f ()Ldqy; translucent
	f (Lnet/minecraft/server/MinecraftKey;)Ldqy; entitySmoothCutout
	g ()Ldqy; translucentNoCrumbling
	g (Lnet/minecraft/server/MinecraftKey;)Ldqy; entityDecal
	h ()Ldqy; leash
	h (Lnet/minecraft/server/MinecraftKey;)Ldqy; entityNoOutline
	i ()Ldqy; waterMask
	i (Lnet/minecraft/server/MinecraftKey;)Ldqy; eyes
	j ()Ldqy; glint
	j (Lnet/minecraft/server/MinecraftKey;)Ldqy; outline
	k ()Ldqy; entityGlint
	k (Lnet/minecraft/server/MinecraftKey;)Ldqy; crumbling
	l ()Ldqy; lightning
	l (Lnet/minecraft/server/MinecraftKey;)Ldqy; text
	m ()Ldqy; lines
	m (Lnet/minecraft/server/MinecraftKey;)Ldqy; textSeeThrough
	n ()Ljava/util/List; chunkBufferLayers
	o ()I bufferSize
	p ()Lcym; format
	q ()I mode
	r ()Ljava/util/Optional; outline
	s ()Z affectsCrumbling
	t ()Ldqy$b; translucentState
dqy$a net/minecraft/client/renderer/RenderType$CompositeRenderType
	R INSTANCES
	S state
	T hashCode
	U outline
	c (Ljava/lang/String;Lcym;IIZZLdqy$b;)Ldqy$a; memoize
	r ()Ljava/util/Optional; outline
	t ()Ldqy$b; state
dqy$a$a net/minecraft/client/renderer/RenderType$CompositeRenderType$EqualsStrategy
	a INSTANCE
	b $VALUES
	a (Ldqy$a;)I hashCode
	a (Ldqy$a;Ldqy$a;)Z equals
dqy$b net/minecraft/client/renderer/RenderType$CompositeState
	a textureState
	b transparencyState
	c diffuseLightingState
	d shadeModelState
	e alphaState
	f depthTestState
	g cullState
	h lightmapState
	i overlayState
	j fogState
	k layeringState
	l outputState
	m texturingState
	n writeMaskState
	o lineState
	p affectsOutline
	q states
	a ()Ldqy$b$a; builder
dqy$b$a net/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder
	a textureState
	b transparencyState
	c diffuseLightingState
	d shadeModelState
	e alphaState
	f depthTestState
	g cullState
	h lightmapState
	i overlayState
	j fogState
	k layeringState
	l outputState
	m texturingState
	n writeMaskState
	o lineState
	a (Ldqx$a;)Ldqy$b$a; setAlphaState
	a (Ldqx$c;)Ldqy$b$a; setCullState
	a (Ldqx$d;)Ldqy$b$a; setDepthTestState
	a (Ldqx$e;)Ldqy$b$a; setDiffuseLightingState
	a (Ldqx$f;)Ldqy$b$a; setFogState
	a (Ldqx$g;)Ldqy$b$a; setLayeringState
	a (Ldqx$h;)Ldqy$b$a; setLightmapState
	a (Ldqx$i;)Ldqy$b$a; setLineState
	a (Ldqx$k;)Ldqy$b$a; setOutputState
	a (Ldqx$l;)Ldqy$b$a; setOverlayState
	a (Ldqx$n;)Ldqy$b$a; setShadeModelState
	a (Ldqx$o;)Ldqy$b$a; setTextureState
	a (Ldqx$p;)Ldqy$b$a; setTexturingState
	a (Ldqx$q;)Ldqy$b$a; setTransparencyState
	a (Ldqx$r;)Ldqy$b$a; setWriteMaskState
	a (Z)Ldqy$b; createCompositeState
dqz net/minecraft/client/renderer/RunningTrimmedMean
	a values
	b count
	c cursor
	a (J)J registerValueAndGetMean
dra net/minecraft/client/renderer/ScreenEffectRenderer
	a UNDERWATER_LOCATION
	a (Ldbl;Lcyi;)V renderScreenEffect
	a (Ldbl;Leag;Lcyi;)V renderTex
	a (Lnet/minecraft/server/EntityHuman;)Lnet/minecraft/server/IBlockData; getViewBlockingState
	b (Ldbl;Lcyi;)V renderWater
	c (Ldbl;Lcyi;)V renderFire
drb net/minecraft/client/renderer/Sheets
	A SOLID_BLOCK_SHEET
	B CUTOUT_BLOCK_SHEET
	C TRANSLUCENT_BLOCK_SHEET
	D TRANSLUCENT_CULL_BLOCK_SHEET
	a SHULKER_SHEET
	b BED_SHEET
	c BANNER_SHEET
	d SHIELD_SHEET
	e SIGN_SHEET
	f CHEST_SHEET
	g DEFAULT_SHULKER_TEXTURE_LOCATION
	h SHULKER_TEXTURE_LOCATION
	i SIGN_MATERIALS
	j BED_TEXTURES
	k CHEST_TRAP_LOCATION
	l CHEST_TRAP_LOCATION_LEFT
	m CHEST_TRAP_LOCATION_RIGHT
	n CHEST_XMAS_LOCATION
	o CHEST_XMAS_LOCATION_LEFT
	p CHEST_XMAS_LOCATION_RIGHT
	q CHEST_LOCATION
	r CHEST_LOCATION_LEFT
	s CHEST_LOCATION_RIGHT
	t ENDER_CHEST_LOCATION
	u SHULKER_BOX_SHEET_TYPE
	v BED_SHEET_TYPE
	w BANNER_SHEET_TYPE
	x SHIELD_SHEET_TYPE
	y SIGN_SHEET_TYPE
	z CHEST_SHEET_TYPE
	a ()Ldqy; bannerSheet
	a (Ljava/lang/String;)Lebv; chestMaterial
	a (Ljava/util/function/Consumer;)V getAllMaterials
	a (Lnet/minecraft/server/BlockPropertyChestType;Lebv;Lebv;Lebv;)Lebv; chooseMaterial
	a (Lnet/minecraft/server/BlockPropertyWood;)Lebv; signTexture
	a (Lnet/minecraft/server/TileEntity;Lnet/minecraft/server/BlockPropertyChestType;Z)Lebv; chooseMaterial
	b ()Ldqy; shieldSheet
	c ()Ldqy; bedSheet
	d ()Ldqy; shulkerBoxSheet
	e ()Ldqy; signSheet
	f ()Ldqy; chestSheet
	g ()Ldqy; solidBlockSheet
	h ()Ldqy; cutoutBlockSheet
	i ()Ldqy; translucentBlockSheet
	j ()Ldqy; translucentCullBlockSheet
drc net/minecraft/client/renderer/SpriteCoordinateExpander
	a delegate
	b sprite
	a ()V endVertex
	a (DDD)Lcyl; vertex
	a (FF)Lcyl; uv
	a (FFF)Lcyl; normal
	a (FFFFFFFFFIIFFF)V vertex
	a (II)Lcyl; overlayCoords
	a (IIII)Lcyl; color
	b (II)Lcyl; uv2
	b (IIII)V defaultColor
	k ()V unsetDefaultColor
drd net/minecraft/client/renderer/ViewArea
	a levelRenderer
	b level
	c chunkGridSizeY
	d chunkGridSizeX
	e chunkGridSizeZ
	f chunks
	a ()V releaseAllBuffers
	a (DD)V repositionCamera
	a (I)V setViewDistance
	a (III)I getChunkIndex
	a (IIIZ)V setDirty
	a (Ldte;)V createChunks
	a (Lnet/minecraft/server/BlockPosition;)Ldte$c; getRenderChunkAt
dre net/minecraft/client/renderer/VirtualScreen
	a minecraft
	b screenManager
	a (Lcxe;Ljava/lang/String;Ljava/lang/String;)Lcxu; newWindow
drg net/minecraft/client/renderer/block/BlockModelShaper
	a modelByStateCache
	b modelManager
	a ()Lebx; getModelManager
	a (Ljava/util/Map;)Ljava/lang/String; statePropertiesToString
	a (Lnet/minecraft/server/IBlockData;)Leag; getParticleIcon
	a (Lnet/minecraft/server/IBlockState;Ljava/lang/Comparable;)Ljava/lang/String; getValue
	a (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/IBlockData;)Leby; stateToModelLocation
	b ()V rebuildCache
	b (Lnet/minecraft/server/IBlockData;)Lebs; getBlockModel
	c (Lnet/minecraft/server/IBlockData;)Leby; stateToModelLocation
drh net/minecraft/client/renderer/block/BlockRenderDispatcher
	a blockModelShaper
	b modelRenderer
	c liquidBlockRenderer
	d random
	e blockColors
	a ()Ldrg; getBlockModelShaper
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockLightAccess;Lcyl;Lnet/minecraft/server/Fluid;)Z renderLiquid
	a (Lnet/minecraft/server/IBlockData;)Lebs; getBlockModel
	a (Lnet/minecraft/server/IBlockData;Lcyi;Ldqq;II)V renderSingleBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockLightAccess;Lcyi;Lcyl;)V renderBreakingTexture
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockLightAccess;Lcyi;Lcyl;ZLjava/util/Random;)Z renderBatched
	a (Lnet/minecraft/server/IResourceManager;)V onResourceManagerReload
	b ()Ldrj; getModelRenderer
dri net/minecraft/client/renderer/block/LiquidBlockRenderer
	a lavaIcons
	b waterIcons
	c waterOverlay
	a ()V setupSprites
	a (Lcyl;DDDFFFFFI)V vertex
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;F)Z isFaceOccluded
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/Fluid;)Z isNeighborSameFluid
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/FluidType;)F getWaterHeight
	a (Lnet/minecraft/server/IBlockLightAccess;Lnet/minecraft/server/BlockPosition;)I getLightColor
	a (Lnet/minecraft/server/IBlockLightAccess;Lnet/minecraft/server/BlockPosition;Lcyl;Lnet/minecraft/server/Fluid;)Z tesselate
drj net/minecraft/client/renderer/block/ModelBlockRenderer
	a blockColors
	b CACHE
	a ()V enableCaching
	a (Lcyi$a;Lcyl;FFFLjava/util/List;II)V renderQuadList
	a (Lcyi$a;Lcyl;Lnet/minecraft/server/IBlockData;Lebs;FFFII)V renderModel
	a (Lnet/minecraft/server/IBlockLightAccess;Lebs;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lcyi;Lcyl;ZLjava/util/Random;JI)Z tesselateBlock
	a (Lnet/minecraft/server/IBlockLightAccess;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;IIZLcyi;Lcyl;Ljava/util/List;Ljava/util/BitSet;)V renderModelFaceFlat
	a (Lnet/minecraft/server/IBlockLightAccess;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lcyi;Lcyl;Ljava/util/List;[FLjava/util/BitSet;Ldrj$b;I)V renderModelFaceAO
	a (Lnet/minecraft/server/IBlockLightAccess;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lcyl;Lcyi$a;Ldrk;FFFFIIIII)V putQuadData
	a (Lnet/minecraft/server/IBlockLightAccess;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;[ILnet/minecraft/server/EnumDirection;[FLjava/util/BitSet;)V calculateShape
	b ()V clearCache
	b (Lnet/minecraft/server/IBlockLightAccess;Lebs;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lcyi;Lcyl;ZLjava/util/Random;JI)Z tesselateWithAO
	c (Lnet/minecraft/server/IBlockLightAccess;Lebs;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lcyi;Lcyl;ZLjava/util/Random;JI)Z tesselateWithoutAO
drj$a net/minecraft/client/renderer/block/ModelBlockRenderer$AdjacencyInfo
	a DOWN
	b UP
	c NORTH
	d SOUTH
	e WEST
	f EAST
	g corners
	h doNonCubicWeight
	i vert0Weights
	j vert1Weights
	k vert2Weights
	l vert3Weights
	m BY_FACING
	n $VALUES
	a (Lnet/minecraft/server/EnumDirection;)Ldrj$a; fromFacing
drj$b net/minecraft/client/renderer/block/ModelBlockRenderer$AmbientOcclusionFace
	b brightness
	c lightmap
	a (IIII)I blend
	a (IIIIFFFF)I blend
	a (Lnet/minecraft/server/IBlockLightAccess;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;[FLjava/util/BitSet;)V calculate
drj$c net/minecraft/client/renderer/block/ModelBlockRenderer$AmbientVertexRemap
	a DOWN
	b UP
	c NORTH
	d SOUTH
	e WEST
	f EAST
	g vert0
	h vert1
	i vert2
	j vert3
	k BY_FACING
	l $VALUES
	a (Lnet/minecraft/server/EnumDirection;)Ldrj$c; fromFacing
drj$d net/minecraft/client/renderer/block/ModelBlockRenderer$Cache
	a enabled
	b colorCache
	c brightnessCache
	a ()V enable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockLightAccess;Lnet/minecraft/server/BlockPosition;)I getLightColor
	b ()V disable
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockLightAccess;Lnet/minecraft/server/BlockPosition;)F getShadeBrightness
drj$e net/minecraft/client/renderer/block/ModelBlockRenderer$SizeInfo
	a DOWN
	b UP
	c NORTH
	d SOUTH
	e WEST
	f EAST
	g FLIP_DOWN
	h FLIP_UP
	i FLIP_NORTH
	j FLIP_SOUTH
	k FLIP_WEST
	l FLIP_EAST
	m shape
	n $VALUES
drk net/minecraft/client/renderer/block/model/BakedQuad
	a vertices
	b tintIndex
	c direction
	d sprite
	a ()Leag; getSprite
	b ()[I getVertices
	c ()Z isTinted
	d ()I getTintIndex
	e ()Lnet/minecraft/server/EnumDirection; getDirection
drl net/minecraft/client/renderer/block/model/BlockElement
	a from
	b to
	c faces
	d rotation
	e shade
	a ()V fillUvs
	a (Lnet/minecraft/server/EnumDirection;)[F uvsByFace
drl$a net/minecraft/client/renderer/block/model/BlockElement$Deserializer
	a (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/Map; getFaces
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ldrl; deserialize
	a (Lcom/google/gson/JsonObject;)Ldrn; getRotation
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lnet/minecraft/server/Vector3fa; getVector3f
	a (Ljava/lang/String;)Lnet/minecraft/server/EnumDirection; getFacing
	b (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/Map; filterNullFromFaces
	b (Lcom/google/gson/JsonObject;)F getAngle
	c (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/EnumDirection$EnumAxis; getAxis
	d (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/Vector3fa; getTo
	e (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/Vector3fa; getFrom
drm net/minecraft/client/renderer/block/model/BlockElementFace
	a cullForDirection
	b tintIndex
	c texture
	d uv
drm$a net/minecraft/client/renderer/block/model/BlockElementFace$Deserializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ldrm; deserialize
	a (Lcom/google/gson/JsonObject;)I getTintIndex
	b (Lcom/google/gson/JsonObject;)Ljava/lang/String; getTexture
	c (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/EnumDirection; getCullFacing
drn net/minecraft/client/renderer/block/model/BlockElementRotation
	a origin
	b axis
	c angle
	d rescale
dro net/minecraft/client/renderer/block/model/BlockFaceUV
	a uvs
	b rotation
	a (I)F getU
	a ([F)V setMissingUv
	b (I)F getV
	c (I)I getReverseIndex
	d (I)I getShiftedIndex
dro$a net/minecraft/client/renderer/block/model/BlockFaceUV$Deserializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ldro; deserialize
	a (Lcom/google/gson/JsonObject;)I getRotation
	b (Lcom/google/gson/JsonObject;)[F getUVs
drp net/minecraft/client/renderer/block/model/BlockModel
	a GSON
	b name
	c textureMap
	d parent
	e parentLocation
	f LOGGER
	g FACE_BAKERY
	h elements
	i isGui3d
	j hasAmbientOcclusion
	k transforms
	l overrides
	a ()Ljava/util/List; getElements
	a (Ldrl;Ldrm;Leag;Lnet/minecraft/server/EnumDirection;Lebz;Lnet/minecraft/server/MinecraftKey;)Ldrk; bakeFace
	a (Ldrw$b;)Ldrv; getTransform
	a (Lebw;Ldrp;)Ldru; getItemOverrides
	a (Lebw;Ldrp;Ljava/util/function/Function;Lebz;Lnet/minecraft/server/MinecraftKey;)Lebs; bake
	a (Lebw;Ljava/util/function/Function;Lebz;Lnet/minecraft/server/MinecraftKey;)Lebs; bake
	a (Ljava/io/Reader;)Ldrp; fromStream
	a (Ljava/lang/String;)Ldrp; fromString
	a (Ljava/util/function/Function;Ljava/util/Set;)Ljava/util/Collection; getMaterials
	b ()Z hasAmbientOcclusion
	b (Ljava/lang/String;)Z hasTexture
	c ()Z isGui3d
	c (Ljava/lang/String;)Lebv; getMaterial
	d ()Z isResolved
	e ()Ljava/util/List; getOverrides
	e (Ljava/lang/String;)Lcom/mojang/datafixers/util/Either; findTextureEntry
	f ()Ljava/util/Collection; getDependencies
	f (Ljava/lang/String;)Z isTextureReference
	g ()Ldrp; getRootModel
	h ()Ldrw; getTransforms
drp$a net/minecraft/client/renderer/block/model/BlockModel$Deserializer
	a (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/List; getOverrides
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ldrp; deserialize
	a (Lcom/google/gson/JsonObject;)Z getAmbientOcclusion
	a (Lnet/minecraft/server/MinecraftKey;Ljava/lang/String;)Lcom/mojang/datafixers/util/Either; parseTextureLocationOrReference
	b (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/List; getElements
	b (Lcom/google/gson/JsonObject;)Ljava/util/Map; getTextureMap
	c (Lcom/google/gson/JsonObject;)Ljava/lang/String; getParentName
drp$b net/minecraft/client/renderer/block/model/BlockModel$LoopException
drq net/minecraft/client/renderer/block/model/BlockModelDefinition
	a variants
	b multiPart
	a ()Ljava/util/Map; getVariants
	a (Ldrq$a;Ljava/io/Reader;)Ldrq; fromStream
	a (Ljava/lang/String;)Z hasVariant
	b ()Ljava/util/Set; getMultiVariants
	b (Ljava/lang/String;)Ldrx; getVariant
	c ()Z isMultiPart
	d ()Ldsc; getMultiPart
drq$a net/minecraft/client/renderer/block/model/BlockModelDefinition$Context
	a gson
	b definition
	a ()Lnet/minecraft/server/BlockStateList; getDefinition
	a (Lnet/minecraft/server/BlockStateList;)V setDefinition
drq$b net/minecraft/client/renderer/block/model/BlockModelDefinition$Deserializer
	a (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/Map; getVariants
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ldrq; deserialize
	b (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ldsc; getMultiPart
drq$c net/minecraft/client/renderer/block/model/BlockModelDefinition$MissingVariantException
drr net/minecraft/client/renderer/block/model/FaceBakery
	a RESCALE_22_5
	b RESCALE_45
	a (Ldro;Leag;Lnet/minecraft/server/EnumDirection;[FLd;Ldrn;Z)[I makeVertices
	a (Ldro;Lnet/minecraft/server/EnumDirection;Ld;Lnet/minecraft/server/MinecraftKey;)Ldro; recomputeUVs
	a (Lnet/minecraft/server/EnumDirection;)I getShadeValue
	a (Lnet/minecraft/server/Vector3fa;Ld;)V applyModelRotation
	a (Lnet/minecraft/server/Vector3fa;Ldrn;)V applyElementRotation
	a (Lnet/minecraft/server/Vector3fa;Lnet/minecraft/server/Vector3fa;)[F setupShape
	a (Lnet/minecraft/server/Vector3fa;Lnet/minecraft/server/Vector3fa;Lb;Lnet/minecraft/server/Vector3fa;)V rotateVertexBy
	a (Lnet/minecraft/server/Vector3fa;Lnet/minecraft/server/Vector3fa;Ldrm;Leag;Lnet/minecraft/server/EnumDirection;Lebz;Ldrn;ZLnet/minecraft/server/MinecraftKey;)Ldrk; bakeQuad
	a ([I)Lnet/minecraft/server/EnumDirection; calculateFacing
	a ([IILnet/minecraft/server/EnumDirection;Ldro;[FLeag;Ld;Ldrn;Z)V bakeVertex
	a ([IILnet/minecraft/server/Vector3fa;ILeag;Ldro;)V fillVertex
	a ([ILnet/minecraft/server/EnumDirection;)V recalculateWinding
	b (Lnet/minecraft/server/EnumDirection;)F getShade
drs net/minecraft/client/renderer/block/model/ItemModelGenerator
	a LAYERS
	a (ILjava/lang/String;Leag;)Ljava/util/List; processFrames
	a (Ldrs$b;Ljava/util/List;Leag;IIIIIZ)V checkTransition
	a (Leag;)Ljava/util/List; getSpans
	a (Leag;IIIII)Z isTransparent
	a (Leag;Ljava/lang/String;I)Ljava/util/List; createSideElements
	a (Ljava/util/List;Ldrs$b;II)V createOrExpandSpan
	a (Ljava/util/function/Function;Ldrp;)Ldrp; generateBlockModel
drs$a net/minecraft/client/renderer/block/model/ItemModelGenerator$Span
	a facing
	b min
	c max
	d anchor
	a ()Ldrs$b; getFacing
	a (I)V expand
	b ()I getMin
	c ()I getMax
	d ()I getAnchor
drs$b net/minecraft/client/renderer/block/model/ItemModelGenerator$SpanFacing
	a UP
	b DOWN
	c LEFT
	d RIGHT
	e direction
	f xOffset
	g yOffset
	h $VALUES
	a ()Lnet/minecraft/server/EnumDirection; getDirection
	b ()I getXOffset
	c ()I getYOffset
	d ()Z isHorizontal
drt net/minecraft/client/renderer/block/model/ItemOverride
	a model
	b predicates
	a ()Lnet/minecraft/server/MinecraftKey; getModel
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;)Z test
drt$a net/minecraft/client/renderer/block/model/ItemOverride$Deserializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ldrt; deserialize
	a (Lcom/google/gson/JsonObject;)Ljava/util/Map; getPredicates
dru net/minecraft/client/renderer/block/model/ItemOverrides
	a EMPTY
	b overrides
	c overrideModels
	a (Lebs;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;)Lebs; resolve
drv net/minecraft/client/renderer/block/model/ItemTransform
	a NO_TRANSFORM
	b rotation
	c translation
	d scale
	a (ZLcyi;)V apply
drv$a net/minecraft/client/renderer/block/model/ItemTransform$Deserializer
	a DEFAULT_ROTATION
	b DEFAULT_TRANSLATION
	c DEFAULT_SCALE
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ldrv; deserialize
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Lnet/minecraft/server/Vector3fa;)Lnet/minecraft/server/Vector3fa; getVector3f
drw net/minecraft/client/renderer/block/model/ItemTransforms
	a NO_TRANSFORMS
	b thirdPersonLeftHand
	c thirdPersonRightHand
	d firstPersonLeftHand
	e firstPersonRightHand
	f head
	g gui
	h ground
	i fixed
	a (Ldrw$b;)Ldrv; getTransform
	b (Ldrw$b;)Z hasTransform
drw$a net/minecraft/client/renderer/block/model/ItemTransforms$Deserializer
	a (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;Ljava/lang/String;)Ldrv; getTransform
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ldrw; deserialize
drw$b net/minecraft/client/renderer/block/model/ItemTransforms$TransformType
	a NONE
	b THIRD_PERSON_LEFT_HAND
	c THIRD_PERSON_RIGHT_HAND
	d FIRST_PERSON_LEFT_HAND
	e FIRST_PERSON_RIGHT_HAND
	f HEAD
	g GUI
	h GROUND
	i FIXED
	j $VALUES
drx net/minecraft/client/renderer/block/model/MultiVariant
	a variants
	a ()Ljava/util/List; getVariants
	a (Lebw;Ljava/util/function/Function;Lebz;Lnet/minecraft/server/MinecraftKey;)Lebs; bake
	a (Ljava/util/function/Function;Ljava/util/Set;)Ljava/util/Collection; getMaterials
	f ()Ljava/util/Collection; getDependencies
drx$a net/minecraft/client/renderer/block/model/MultiVariant$Deserializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ldrx; deserialize
dry net/minecraft/client/renderer/block/model/Variant
	a modelLocation
	b rotation
	c uvLock
	d weight
	a ()Lnet/minecraft/server/MinecraftKey; getModelLocation
	b ()Ld; getRotation
	c ()Z isUvLocked
	d ()I getWeight
dry$a net/minecraft/client/renderer/block/model/Variant$Deserializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ldry; deserialize
	a (Lcom/google/gson/JsonObject;)Lebt; getBlockRotation
	b (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/MinecraftKey; getModel
	c (Lcom/google/gson/JsonObject;)I getWeight
	d (Lcom/google/gson/JsonObject;)Z getUvLock
drz net/minecraft/client/renderer/block/model/multipart/AndCondition
	c conditions
dsa net/minecraft/client/renderer/block/model/multipart/Condition
	a TRUE
	b FALSE
dsb net/minecraft/client/renderer/block/model/multipart/KeyValueCondition
	c PIPE_SPLITTER
	d key
	e value
	a (Lnet/minecraft/server/BlockStateList;Lnet/minecraft/server/IBlockState;Ljava/lang/String;)Ljava/util/function/Predicate; getBlockStatePredicate
dsc net/minecraft/client/renderer/block/model/multipart/MultiPart
	a definition
	b selectors
	a ()Ljava/util/List; getSelectors
	a (Lebw;Ljava/util/function/Function;Lebz;Lnet/minecraft/server/MinecraftKey;)Lebs; bake
	a (Ljava/util/function/Function;Ljava/util/Set;)Ljava/util/Collection; getMaterials
	b ()Ljava/util/Set; getMultiVariants
	f ()Ljava/util/Collection; getDependencies
dsc$a net/minecraft/client/renderer/block/model/multipart/MultiPart$Deserializer
	a context
	a (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonArray;)Ljava/util/List; getSelectors
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ldsc; deserialize
dsd net/minecraft/client/renderer/block/model/multipart/OrCondition
	c conditions
dse net/minecraft/client/renderer/block/model/multipart/Selector
	a condition
	b variant
	a ()Ldrx; getVariant
	a (Lnet/minecraft/server/BlockStateList;)Ljava/util/function/Predicate; getPredicate
dse$a net/minecraft/client/renderer/block/model/multipart/Selector$Deserializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ldse; deserialize
	a (Lcom/google/gson/JsonObject;)Ldsa; getCondition
	a (Ljava/util/Map$Entry;)Ldsa; getKeyValueCondition
	b (Lcom/google/gson/JsonObject;)Ldsa; getSelector
dsj net/minecraft/client/renderer/blockentity/BannerRenderer
	a flag
	c pole
	d bar
	a ()Ldnf; makeFlag
	a (Lnet/minecraft/server/TileEntity;FLcyi;Ldqq;II)V render
	a (Lnet/minecraft/server/TileEntityBanner;FLcyi;Ldqq;II)V render
	a (Lnet/minecraft/server/TileEntityBanner;Lcyi;Ldqq;IILdnf;Lebv;Z)V renderPatterns
dsk net/minecraft/client/renderer/blockentity/BeaconRenderer
	a BEAM_LOCATION
	a (Lb;La;Lcyl;FFFFIFFFF)V addVertex
	a (Lb;La;Lcyl;FFFFIIFFFFFFFF)V renderQuad
	a (Lcyi;Lcyl;FFFFIIFFFFFFFFFFFF)V renderPart
	a (Lcyi;Ldqq;FJII[F)V renderBeaconBeam
	a (Lcyi;Ldqq;Lnet/minecraft/server/MinecraftKey;FFJII[FFF)V renderBeaconBeam
	a (Lnet/minecraft/server/TileEntity;)Z shouldRenderOffScreen
	a (Lnet/minecraft/server/TileEntity;FLcyi;Ldqq;II)V render
	a (Lnet/minecraft/server/TileEntityBeacon;)Z shouldRenderOffScreen
	a (Lnet/minecraft/server/TileEntityBeacon;FLcyi;Ldqq;II)V render
dsl net/minecraft/client/renderer/blockentity/BedRenderer
	a headPiece
	c footPiece
	d legs
	a (Lcyi;Ldqq;ZLnet/minecraft/server/EnumDirection;Lebv;IIZ)V renderPiece
	a (Lnet/minecraft/server/TileEntity;FLcyi;Ldqq;II)V render
	a (Lnet/minecraft/server/TileEntityBed;FLcyi;Ldqq;II)V render
dsm net/minecraft/client/renderer/blockentity/BellRenderer
	a BELL_RESOURCE_LOCATION
	c bellBody
	a (Lnet/minecraft/server/TileEntity;FLcyi;Ldqq;II)V render
	a (Lnet/minecraft/server/TileEntityBell;FLcyi;Ldqq;II)V render
dsn net/minecraft/client/renderer/blockentity/BlockEntityRenderDispatcher
	a instance
	b textureManager
	c level
	d camera
	e cameraHitResult
	f renderers
	g singleRenderBuffer
	h font
	a ()Ldcf; getFont
	a (Ldso;Lnet/minecraft/server/TileEntity;FLcyi;Ldqq;)V setupAndRender
	a (Lnet/minecraft/server/TileEntity;)Ldso; getRenderer
	a (Lnet/minecraft/server/TileEntity;FLcyi;Ldqq;)V render
	a (Lnet/minecraft/server/TileEntity;Lcyi;)V renderItem
	a (Lnet/minecraft/server/TileEntity;Lcyi;Ldqq;II)Z renderItem
	a (Lnet/minecraft/server/TileEntity;Ljava/lang/Runnable;)V tryRender
	a (Lnet/minecraft/server/TileEntityTypes;Ldso;)V register
	a (Lnet/minecraft/server/World;)V setLevel
	a (Lnet/minecraft/server/World;Leah;Ldcf;Ldaz;Lnet/minecraft/server/MovingObjectPosition;)V prepare
dso net/minecraft/client/renderer/blockentity/BlockEntityRenderer
	b renderer
	a (Lnet/minecraft/server/TileEntity;)Z shouldRenderOffScreen
	a (Lnet/minecraft/server/TileEntity;FLcyi;Ldqq;II)V render
dsp net/minecraft/client/renderer/blockentity/BrightnessCombiner
	a ()Lit/unimi/dsi/fastutil/ints/Int2IntFunction; acceptNone
	a (Ljava/lang/Object;)Ljava/lang/Object; acceptSingle
	a (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; acceptDouble
	a (Lnet/minecraft/server/TileEntity;)Lit/unimi/dsi/fastutil/ints/Int2IntFunction; acceptSingle
	a (Lnet/minecraft/server/TileEntity;Lnet/minecraft/server/TileEntity;)Lit/unimi/dsi/fastutil/ints/Int2IntFunction; acceptDouble
	b ()Ljava/lang/Object; acceptNone
dsq net/minecraft/client/renderer/blockentity/CampfireRenderer
	a (Lnet/minecraft/server/TileEntity;FLcyi;Ldqq;II)V render
	a (Lnet/minecraft/server/TileEntityCampfire;FLcyi;Ldqq;II)V render
dsr net/minecraft/client/renderer/blockentity/ChestRenderer
	a lid
	c bottom
	d lock
	e doubleLeftLid
	f doubleLeftBottom
	g doubleLeftLock
	h doubleRightLid
	i doubleRightBottom
	j doubleRightLock
	k xmasTextures
	a (Lcyi;Lcyl;Ldnf;Ldnf;Ldnf;FII)V render
	a (Lnet/minecraft/server/TileEntity;FLcyi;Ldqq;II)V render
dss net/minecraft/client/renderer/blockentity/ConduitRenderer
	a SHELL_TEXTURE
	c ACTIVE_SHELL_TEXTURE
	d WIND_TEXTURE
	e VERTICAL_WIND_TEXTURE
	f OPEN_EYE_TEXTURE
	g CLOSED_EYE_TEXTURE
	h eye
	i wind
	j shell
	k cage
	a (Lnet/minecraft/server/TileEntity;FLcyi;Ldqq;II)V render
	a (Lnet/minecraft/server/TileEntityConduit;FLcyi;Ldqq;II)V render
dst net/minecraft/client/renderer/blockentity/EnchantTableRenderer
	a BOOK_LOCATION
	c bookModel
	a (Lnet/minecraft/server/TileEntity;FLcyi;Ldqq;II)V render
	a (Lnet/minecraft/server/TileEntityEnchantTable;FLcyi;Ldqq;II)V render
dsu net/minecraft/client/renderer/blockentity/LecternRenderer
	a bookModel
	a (Lnet/minecraft/server/TileEntity;FLcyi;Ldqq;II)V render
	a (Lnet/minecraft/server/TileEntityLectern;FLcyi;Ldqq;II)V render
dsv net/minecraft/client/renderer/blockentity/PistonHeadRenderer
	a blockRenderer
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lcyi;Ldqq;Lnet/minecraft/server/World;ZI)V renderBlock
	a (Lnet/minecraft/server/TileEntity;FLcyi;Ldqq;II)V render
	a (Lnet/minecraft/server/TileEntityPiston;FLcyi;Ldqq;II)V render
dsw net/minecraft/client/renderer/blockentity/ShulkerBoxRenderer
	a model
	a (Lnet/minecraft/server/TileEntity;FLcyi;Ldqq;II)V render
	a (Lnet/minecraft/server/TileEntityShulkerBox;FLcyi;Ldqq;II)V render
dsx net/minecraft/client/renderer/blockentity/SignRenderer
	a signModel
	a (Lnet/minecraft/server/Block;)Lebv; getMaterial
	a (Lnet/minecraft/server/TileEntity;FLcyi;Ldqq;II)V render
	a (Lnet/minecraft/server/TileEntitySign;FLcyi;Ldqq;II)V render
dsx$a net/minecraft/client/renderer/blockentity/SignRenderer$SignModel
	a sign
	b stick
	a (Lcyi;Lcyl;IIFFFF)V renderToBuffer
dsy net/minecraft/client/renderer/blockentity/SkullBlockRenderer
	a MODEL_BY_TYPE
	c SKIN_BY_TYPE
	a (Lbub$a;Lcom/mojang/authlib/GameProfile;)Ldqy; getRenderType
	a (Lnet/minecraft/server/EnumDirection;FLbub$a;Lcom/mojang/authlib/GameProfile;FLcyi;Ldqq;I)V renderSkull
	a (Lnet/minecraft/server/TileEntity;FLcyi;Ldqq;II)V render
	a (Lnet/minecraft/server/TileEntitySkull;FLcyi;Ldqq;II)V render
dsz net/minecraft/client/renderer/blockentity/SpawnerRenderer
	a (Lnet/minecraft/server/TileEntity;FLcyi;Ldqq;II)V render
	a (Lnet/minecraft/server/TileEntityMobSpawner;FLcyi;Ldqq;II)V render
dt$a net/minecraft/commands/arguments/blocks/BlockPredicateArgument$BlockPredicate
	a state
	b properties
	c nbt
	a (Lnet/minecraft/server/ShapeDetectorBlock;)Z test
dt$b net/minecraft/commands/arguments/blocks/BlockPredicateArgument$Result
dt$c net/minecraft/commands/arguments/blocks/BlockPredicateArgument$TagPredicate
	a tag
	b nbt
	c vagueProperties
	a (Lnet/minecraft/server/ShapeDetectorBlock;)Z test
dta net/minecraft/client/renderer/blockentity/StructureBlockRenderer
	a (Lnet/minecraft/server/TileEntity;)Z shouldRenderOffScreen
	a (Lnet/minecraft/server/TileEntity;FLcyi;Ldqq;II)V render
	a (Lnet/minecraft/server/TileEntityStructure;)Z shouldRenderOffScreen
	a (Lnet/minecraft/server/TileEntityStructure;FLcyi;Ldqq;II)V render
	a (Lnet/minecraft/server/TileEntityStructure;Lcyl;Lnet/minecraft/server/BlockPosition;ZLcyi;)V renderInvisibleBlocks
dtb net/minecraft/client/renderer/blockentity/TheEndGatewayRenderer
	d BEAM_LOCATION
	a ()F getOffset
	a (D)I getPasses
	a (Lnet/minecraft/server/TileEntity;FLcyi;Ldqq;II)V render
	a (Lnet/minecraft/server/TileEntityEndGateway;FLcyi;Ldqq;II)V render
	a (Lnet/minecraft/server/TileEntityEnderPortal;FLcyi;Ldqq;II)V render
dtc net/minecraft/client/renderer/blockentity/TheEndPortalRenderer
	a END_SKY_LOCATION
	c END_PORTAL_LOCATION
	d RANDOM
	e RENDER_TYPES
	a ()F getOffset
	a (D)I getPasses
	a (Lnet/minecraft/server/TileEntity;FLcyi;Ldqq;II)V render
	a (Lnet/minecraft/server/TileEntityEnderPortal;FFLb;Lcyl;)V renderCube
	a (Lnet/minecraft/server/TileEntityEnderPortal;FLcyi;Ldqq;II)V render
	a (Lnet/minecraft/server/TileEntityEnderPortal;Lb;Lcyl;FFFFFFFFFFFLnet/minecraft/server/EnumDirection;)V renderFace
dte net/minecraft/client/renderer/chunk/ChunkRenderDispatcher
	a LOGGER
	b toBatch
	c freeBuffers
	d toUpload
	e toBatchCount
	f freeBufferCount
	g fixedBuffers
	h mailbox
	i executor
	j level
	k renderer
	l camera
	a ()Ldqf; fixedBuffers
	a (Lcyd;Lcyk;)Ljava/util/concurrent/CompletableFuture; uploadChunkLayer
	a (Ldte$c$a;)V schedule
	a (Ldte$c;)V rebuildChunkSync
	a (Lnet/minecraft/server/Vec3D;)V setCamera
	a (Lnet/minecraft/server/World;)V setLevel
	b ()Ljava/lang/String; getStats
	b (Lcyd;Lcyk;)Ljava/util/concurrent/CompletableFuture; doUploadChunkLayer
	c ()Lnet/minecraft/server/Vec3D; getCameraPosition
	d ()Z uploadAllPendingUploads
	e ()V blockUntilClear
	f ()Z isQueueEmpty
	g ()V dispose
	h ()V runTask
	i ()V clearBatchQueue
dte$a net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$ChunkTaskResult
	a SUCCESSFUL
	b CANCELLED
	c $VALUES
dte$b net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$CompiledChunk
	a UNCOMPILED
	b hasBlocks
	c hasLayer
	d isCompletelyEmpty
	e renderableBlockEntities
	f visibilitySet
	g transparencyState
	a ()Z hasNoRenderableLayers
	a (Ldqy;)Z isEmpty
	a (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/EnumDirection;)Z facesCanSeeEachother
	b ()Ljava/util/List; getRenderableBlockEntities
dte$c net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk
	a compiled
	b bb
	d lastRebuildTask
	e lastResortTransparencyTask
	f globalBlockEntities
	g buffers
	h lastFrame
	i dirty
	j origin
	k relativeOrigins
	l playerChanged
	a ()Z hasAllNeighbors
	a (I)Z setFrame
	a (III)V setOrigin
	a (Lcyd;)V beginLayer
	a (Ldqy;)Lcyk; getBuffer
	a (Ldqy;Ldte;)Z resortTransparency
	a (Ldte;)V rebuildChunkAsync
	a (Ljava/util/Set;)V updateGlobalBlockEntities
	a (Lnet/minecraft/server/BlockPosition;)Z doesChunkExistAt
	a (Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/BlockPosition; getRelativeOrigin
	a (Z)V setDirty
	b ()D getDistToPlayerSqr
	c ()Ldte$b; getCompiledChunk
	d ()V releaseBuffers
	e ()Lnet/minecraft/server/BlockPosition; getOrigin
	f ()V setNotDirty
	g ()Z isDirty
	h ()Z isDirtyFromPlayer
	i ()V cancelTasks
	j ()Ldte$c$a; createCompileTask
	k ()V compileSync
	l ()V reset
dte$c$a net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk$ChunkCompileTask
	a distAtCreation
	b isCancelled
	a ()V cancel
	a (Ldqf;)Ljava/util/concurrent/CompletableFuture; doTask
	a (Ldte$c$a;)I compareTo
dte$c$b net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk$RebuildTask
	d region
	a ()V cancel
	a (FFFLdte$b;Ldqf;)Ljava/util/Set; compile
	a (Ldqf;)Ljava/util/concurrent/CompletableFuture; doTask
	a (Ldte$b;Ljava/util/Set;Lnet/minecraft/server/TileEntity;)V handleBlockEntity
dte$c$c net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk$ResortTransparencyTask
	e compiledChunk
	a ()V cancel
	a (Ldqf;)Ljava/util/concurrent/CompletableFuture; doTask
dtf net/minecraft/client/renderer/chunk/RenderChunkRegion
	a centerX
	b centerZ
	c start
	d xLength
	e yLength
	f zLength
	g chunks
	h blockStates
	i fluidStates
	j level
	a (III)I index
	a (Lnet/minecraft/server/BlockPosition;)I index
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Chunk$EnumTileEntityState;)Lnet/minecraft/server/TileEntity; getBlockEntity
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/world/level/ColorResolver;)I getBlockTint
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;I)Ldtf; createIfNotEmpty
	b (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/Fluid; getFluidState
	c (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/TileEntity; getBlockEntity
	d_ (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getBlockState
	e ()Lnet/minecraft/server/LightEngine; getLightEngine
dtg net/minecraft/client/renderer/chunk/VisGraph
	a DX
	b DZ
	c DY
	d DIRECTIONS
	e bitSet
	f INDEX_OF_EDGES
	g empty
	a ()Ldth; resolve
	a (I)Ljava/util/Set; floodFill
	a (III)I getIndex
	a (ILjava/util/Set;)V addEdges
	a (ILnet/minecraft/server/EnumDirection;)I getNeighborIndexAtFace
	a (Lnet/minecraft/server/BlockPosition;)V setOpaque
	b (Lnet/minecraft/server/BlockPosition;)Ljava/util/Set; floodFill
	c (Lnet/minecraft/server/BlockPosition;)I getIndex
dth net/minecraft/client/renderer/chunk/VisibilitySet
	a FACINGS
	b data
	a (Ljava/util/Set;)V add
	a (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/EnumDirection;)Z visibilityBetween
	a (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/EnumDirection;Z)V set
	a (Z)V setAll
dtj net/minecraft/client/renderer/culling/Frustum
	a frustumData
	b camX
	c camY
	d camZ
	a (DDD)V prepare
	a (DDDDDD)Z cubeInFrustum
	a (FFFFFF)Z cubeInFrustum
	a (Lb;IIII)V getPlane
	a (Lb;Lb;)V calculateFrustum
	a (Lnet/minecraft/server/AxisAlignedBB;)Z isVisible
dtl net/minecraft/client/renderer/debug/BeeDebugRenderer
	a minecraft
	b hives
	c beeInfosPerEntity
	d lastLookedAtUuid
	a ()V clear
	a (I)V removeBeeInfo
	a (Lcyi;Ldqq;DDD)V render
	a (Ldtl$a;)V addOrUpdateBeeInfo
	a (Ldtl$a;Lnet/minecraft/server/BlockPosition;)Ljava/lang/String; getPosDescription
	a (Ldtl$b;)V addOrUpdateHiveInfo
	a (Ldtl$b;Ljava/util/Collection;)V renderHiveInfo
	a (Ljava/lang/String;Ldtl$b;II)V renderTextOverHive
	a (Ljava/lang/String;Lnet/minecraft/server/BlockPosition;II)V renderTextOverPos
	a (Ljava/util/Collection;)Ljava/lang/String; getBeeUuidsAsString
	a (Ljava/util/Map;Ldtl$a;Lnet/minecraft/server/BlockPosition;)V addBeeToSetInMap
	a (Lnet/minecraft/server/BlockPosition;)V highlightHive
	a (Lnet/minecraft/server/BlockPosition;FFFFF)V renderTransparentFilledBox
	a (Lnet/minecraft/server/BlockPosition;Ljava/util/List;)V renderGhostHive
	a (Lnet/minecraft/server/IPosition;ILjava/lang/String;IF)V renderTextOverMob
	b ()V clearRemovedBees
	b (Ldtl$a;)V renderPath
	b (Ldtl$b;)Ljava/util/Set; getHiveMemberNames
	b (Lnet/minecraft/server/BlockPosition;)Ljava/util/Collection; getHiveMembers
	c ()V clearRemovedHives
	c (Ldtl$a;)V renderBeeInfo
	d ()V doRender
	d (Ldtl$a;)Z isBeeSelected
	e ()Ljava/util/Map; createHiveBlacklistMap
	e (Ldtl$a;)Z isPlayerCloseEnoughToMob
	f ()V renderFlowerInfos
	g ()Ldaz; getCamera
	h ()Ljava/util/Map; getGhostHives
	i ()V updateLastLookedAtUuid
dtl$a net/minecraft/client/renderer/debug/BeeDebugRenderer$BeeInfo
	a uuid
	b id
	c pos
	d path
	e hivePos
	f flowerPos
	g travelTicks
	h goals
	i blacklistedHives
	a ()Ljava/util/UUID; getUuid
	a (Lnet/minecraft/server/BlockPosition;)Z hasHive
	b ()Ljava/lang/String; getName
	c ()Z hasFlower
dtl$b net/minecraft/client/renderer/debug/BeeDebugRenderer$HiveInfo
	a pos
	b hiveType
	c occupantCount
	d honeyLevel
	e sedated
	f lastSeen
dtm net/minecraft/client/renderer/debug/CaveDebugRenderer
	a tunnelsList
	b thicknessMap
	c startPoses
	a (Lcyi;Ldqq;DDD)V render
	a (Lnet/minecraft/server/BlockPosition;Ljava/util/List;Ljava/util/List;)V addTunnel
dtn net/minecraft/client/renderer/debug/ChunkBorderRenderer
	a minecraft
	a (Lcyi;Ldqq;DDD)V render
dto net/minecraft/client/renderer/debug/ChunkDebugRenderer
	a minecraft
	b lastUpdateTime
	c radius
	d data
	a (Lcyi;Ldqq;DDD)V render
dto$a net/minecraft/client/renderer/debug/ChunkDebugRenderer$ChunkData
	b clientData
	c serverData
dtp net/minecraft/client/renderer/debug/CollisionBoxRenderer
	a minecraft
	b lastUpdateTime
	c shapes
	a (Lcyi;Ldqq;DDD)V render
dtq net/minecraft/client/renderer/debug/DebugRenderer
	a pathfindingRenderer
	b waterDebugRenderer
	c chunkBorderRenderer
	d heightMapRenderer
	e collisionBoxRenderer
	f neighborsUpdateRenderer
	g caveRenderer
	h structureRenderer
	i lightDebugRenderer
	j worldGenAttemptRenderer
	k solidFaceRenderer
	l chunkRenderer
	m villageDebugRenderer
	n beeDebugRenderer
	o raidDebugRenderer
	p goalSelectorRenderer
	q gameTestDebugRenderer
	r renderChunkborder
	a ()V clear
	a (DDDDDDFFFF)V renderFilledBox
	a (Lcyi;Ldqq$a;DDD)V render
	a (Ljava/lang/String;DDDI)V renderFloatingText
	a (Ljava/lang/String;DDDIF)V renderFloatingText
	a (Ljava/lang/String;DDDIFZFZ)V renderFloatingText
	a (Ljava/lang/String;IIII)V renderFloatingText
	a (Lnet/minecraft/server/AxisAlignedBB;FFFF)V renderFilledBox
	a (Lnet/minecraft/server/BlockPosition;FFFFF)V renderFilledBox
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;FFFF)V renderFilledBox
	a (Lnet/minecraft/server/Entity;I)Ljava/util/Optional; getTargetedEntity
	b ()Z switchRenderChunkborder
dtq$a net/minecraft/client/renderer/debug/DebugRenderer$SimpleDebugRenderer
	a ()V clear
	a (Lcyi;Ldqq;DDD)V render
dtr net/minecraft/client/renderer/debug/GameTestDebugRenderer
	a markers
	a ()V clear
	a (Lcyi;Ldqq;DDD)V render
	a (Lnet/minecraft/server/BlockPosition;ILjava/lang/String;I)V addMarker
	a (Lnet/minecraft/server/BlockPosition;Ldtr$a;)V renderMarker
dtr$a net/minecraft/client/renderer/debug/GameTestDebugRenderer$Marker
	a color
	b text
	c removeAtTime
	a ()F getR
	b ()F getG
	c ()F getB
	d ()F getA
dts net/minecraft/client/renderer/debug/GoalSelectorDebugRenderer
	a minecraft
	b goalSelectors
	a ()V clear
	a (I)V removeGoalSelector
	a (ILjava/util/List;)V addGoalSelector
	a (Lcyi;Ldqq;DDD)V render
dts$a net/minecraft/client/renderer/debug/GoalSelectorDebugRenderer$DebugGoal
	a pos
	b priority
	c name
	d isRunning
dtt net/minecraft/client/renderer/debug/HeightMapRenderer
	a minecraft
	a (Lcyi;Ldqq;DDD)V render
dtu net/minecraft/client/renderer/debug/LightDebugRenderer
	a minecraft
	a (Lcyi;Ldqq;DDD)V render
dtv net/minecraft/client/renderer/debug/NeighborsUpdateRenderer
	a minecraft
	b lastUpdate
	a (JLnet/minecraft/server/BlockPosition;)V addUpdate
	a (Lcyi;Ldqq;DDD)V render
dtw net/minecraft/client/renderer/debug/PathfindingRenderer
	a pathMap
	b pathMaxDist
	c creationMap
	a (ILnet/minecraft/server/PathEntity;F)V addPath
	a (Lcyi;Ldqq;DDD)V render
	a (Lnet/minecraft/server/BlockPosition;DDD)F distanceToCamera
	a (Lnet/minecraft/server/PathEntity;DDD)V renderPathLine
	a (Lnet/minecraft/server/PathEntity;FZZDDD)V renderPath
	b (Lnet/minecraft/server/PathEntity;FZZDDD)V doRenderPath
dtx net/minecraft/client/renderer/debug/RaidDebugRenderer
	a minecraft
	b raidCenters
	a (Lcyi;Ldqq;DDD)V render
	a (Ljava/lang/String;Lnet/minecraft/server/BlockPosition;I)V renderTextOverBlock
	a (Ljava/util/Collection;)V setRaidCenters
	a (Lnet/minecraft/server/BlockPosition;)V highlightRaidCenter
	b ()Ldaz; getCamera
dty net/minecraft/client/renderer/debug/SolidFaceRenderer
	a minecraft
	a (Lcyi;Ldqq;DDD)V render
dtz net/minecraft/client/renderer/debug/StructureRenderer
	a minecraft
	b postMainBoxes
	c postPiecesBoxes
	d startPiecesMap
	a ()V clear
	a (Lcyi;Ldqq;DDD)V render
	a (Lnet/minecraft/server/StructureBoundingBox;Ljava/util/List;Ljava/util/List;Lnet/minecraft/server/DimensionManager;)V addBoundingBox
dua net/minecraft/client/renderer/debug/VillageDebugRenderer
	a LOGGER
	b minecraft
	c pois
	d villageSections
	e brainDumpsPerEntity
	f lastLookedAtUuid
	a ()V clear
	a (DDD)V doRender
	a (I)V removeBrainDump
	a (Lcyi;Ldqq;DDD)V render
	a (Ldua$a;)V addOrUpdateBrainDump
	a (Ldua$a;DDD)V renderPath
	a (Ldua$b;)V addPoi
	a (Ljava/lang/String;Ldua$b;II)V renderTextOverPoi
	a (Ljava/lang/String;Lnet/minecraft/server/BlockPosition;II)V renderTextOverPos
	a (Lnet/minecraft/server/BlockPosition;)V removePoi
	a (Lnet/minecraft/server/BlockPosition;I)V setFreeTicketCount
	a (Lnet/minecraft/server/BlockPosition;Ljava/util/List;)V renderGhostPoi
	a (Lnet/minecraft/server/IPosition;ILjava/lang/String;IF)V renderTextOverMob
	a (Lnet/minecraft/server/SectionPosition;)V setVillageSection
	b ()Ljava/util/Map; getGhostPois
	b (Ldua$a;)Z isVillagerSelected
	b (Ldua$a;DDD)V renderVillagerInfo
	b (Ldua$b;)V renderPoiInfo
	b (Lnet/minecraft/server/BlockPosition;)V highlightPoi
	b (Lnet/minecraft/server/SectionPosition;)V setNotVillageSection
	c ()V updateLastLookedAtUuid
	c (Ldua$a;)Z isPlayerCloseEnoughToMob
	c (Ldua$b;)Ljava/util/Set; getTicketHolderNames
	c (Lnet/minecraft/server/BlockPosition;)Ljava/util/Collection; getTicketHolders
	c (Lnet/minecraft/server/SectionPosition;)V highlightVillageSection
dua$a net/minecraft/client/renderer/debug/VillageDebugRenderer$BrainDump
	a uuid
	b id
	c name
	d profession
	e xp
	f pos
	g inventory
	h path
	i wantsGolem
	j activities
	k behaviors
	l memories
	m gossips
	n pois
	a ()Ljava/util/UUID; getUuid
	a (Lnet/minecraft/server/BlockPosition;)Z hasPoi
dua$b net/minecraft/client/renderer/debug/VillageDebugRenderer$PoiInfo
	a pos
	b type
	c freeTicketCount
dub net/minecraft/client/renderer/debug/WaterDebugRenderer
	a minecraft
	a (Lcyi;Ldqq;DDD)V render
duc net/minecraft/client/renderer/debug/WorldGenAttemptRenderer
	a toRender
	b scales
	c alphas
	d reds
	e greens
	f blues
	a (Lcyi;Ldqq;DDD)V render
	a (Lnet/minecraft/server/BlockPosition;FFFFF)V addPos
due net/minecraft/client/renderer/entity/AbstractHorseRenderer
	a scale
	a (Lnet/minecraft/server/EntityHorseAbstract;Lcyi;F)V scale
	a (Lnet/minecraft/server/EntityLiving;Lcyi;F)V scale
duf net/minecraft/client/renderer/entity/AbstractZombieRenderer
	a ZOMBIE_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityInsentient;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityLiving;Lcyi;FFF)V setupRotations
	a (Lnet/minecraft/server/EntityZombie;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityZombie;Lcyi;FFF)V setupRotations
dug net/minecraft/client/renderer/entity/AreaEffectCloudRenderer
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityAreaEffectCloud;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
duh net/minecraft/client/renderer/entity/ArmorStandRenderer
	a DEFAULT_SKIN_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityArmorStand;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityArmorStand;Lcyi;FFF)V setupRotations
	a (Lnet/minecraft/server/EntityArmorStand;Z)Z isVisible
	a (Lnet/minecraft/server/EntityLiving;)Z shouldShowName
	a (Lnet/minecraft/server/EntityLiving;Lcyi;FFF)V setupRotations
	a (Lnet/minecraft/server/EntityLiving;Z)Z isVisible
	b (Lnet/minecraft/server/Entity;)Z shouldShowName
	b (Lnet/minecraft/server/EntityArmorStand;)Z shouldShowName
dui net/minecraft/client/renderer/entity/ArrowRenderer
	a (Lb;La;Lcyl;IIIFFIIII)V vertex
	a (Lnet/minecraft/server/Entity;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/EntityArrow;FFLcyi;Ldqq;I)V render
duj net/minecraft/client/renderer/entity/BatRenderer
	a BAT_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityBat;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityBat;Lcyi;F)V scale
	a (Lnet/minecraft/server/EntityBat;Lcyi;FFF)V setupRotations
	a (Lnet/minecraft/server/EntityLiving;Lcyi;F)V scale
	a (Lnet/minecraft/server/EntityLiving;Lcyi;FFF)V setupRotations
duk net/minecraft/client/renderer/entity/BeeRenderer
	a ANGRY_BEE_TEXTURE
	g ANGRY_NECTAR_BEE_TEXTURE
	h BEE_TEXTURE
	i NECTAR_BEE_TEXTURE
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityBee;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
dul net/minecraft/client/renderer/entity/BlazeRenderer
	a BLAZE_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;F)I getBlockLightLevel
	a (Lnet/minecraft/server/EntityBlaze;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityBlaze;F)I getBlockLightLevel
dum net/minecraft/client/renderer/entity/BoatRenderer
	a model
	e BOAT_TEXTURE_LOCATIONS
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/EntityBoat;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityBoat;FFLcyi;Ldqq;I)V render
dun net/minecraft/client/renderer/entity/CatRenderer
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityCat;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityCat;Lcyi;F)V scale
	a (Lnet/minecraft/server/EntityCat;Lcyi;FFF)V setupRotations
	a (Lnet/minecraft/server/EntityLiving;Lcyi;F)V scale
	a (Lnet/minecraft/server/EntityLiving;Lcyi;FFF)V setupRotations
duo net/minecraft/client/renderer/entity/CaveSpiderRenderer
	a CAVE_SPIDER_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityCaveSpider;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityCaveSpider;Lcyi;F)V scale
	a (Lnet/minecraft/server/EntityLiving;Lcyi;F)V scale
	a (Lnet/minecraft/server/EntitySpider;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
dup net/minecraft/client/renderer/entity/ChestedHorseRenderer
	a MAP
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityHorseChestedAbstract;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
duq net/minecraft/client/renderer/entity/ChickenRenderer
	a CHICKEN_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityChicken;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityChicken;F)F getBob
	a (Lnet/minecraft/server/EntityLiving;F)F getBob
dur net/minecraft/client/renderer/entity/CodRenderer
	a COD_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityCod;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityCod;Lcyi;FFF)V setupRotations
	a (Lnet/minecraft/server/EntityLiving;Lcyi;FFF)V setupRotations
dus net/minecraft/client/renderer/entity/CowRenderer
	a COW_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityCow;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
dut net/minecraft/client/renderer/entity/CreeperRenderer
	a CREEPER_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityCreeper;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityCreeper;F)F getWhiteOverlayProgress
	a (Lnet/minecraft/server/EntityCreeper;Lcyi;F)V scale
	a (Lnet/minecraft/server/EntityLiving;Lcyi;F)V scale
	b (Lnet/minecraft/server/EntityLiving;F)F getWhiteOverlayProgress
duu net/minecraft/client/renderer/entity/DolphinRenderer
	a DOLPHIN_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityDolphin;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
duv net/minecraft/client/renderer/entity/DragonFireballRenderer
	a TEXTURE_LOCATION
	e RENDER_TYPE
	a (Lcyl;Lb;La;IFIII)V vertex
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;F)I getBlockLightLevel
	a (Lnet/minecraft/server/Entity;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/EntityDragonFireball;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityDragonFireball;F)I getBlockLightLevel
	a (Lnet/minecraft/server/EntityDragonFireball;FFLcyi;Ldqq;I)V render
duw net/minecraft/client/renderer/entity/DrownedRenderer
	a DROWNED_LOCATION
	a (Lnet/minecraft/server/EntityDrowned;Lcyi;FFF)V setupRotations
	a (Lnet/minecraft/server/EntityLiving;Lcyi;FFF)V setupRotations
	a (Lnet/minecraft/server/EntityZombie;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityZombie;Lcyi;FFF)V setupRotations
dux net/minecraft/client/renderer/entity/ElderGuardianRenderer
	a GUARDIAN_ELDER_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityGuardian;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityGuardian;Lcyi;F)V scale
	a (Lnet/minecraft/server/EntityLiving;Lcyi;F)V scale
duy net/minecraft/client/renderer/entity/EndCrystalRenderer
	a END_CRYSTAL_LOCATION
	e RENDER_TYPE
	f SIN_45
	g cube
	h glass
	i base
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/Entity;Ldtj;DDD)Z shouldRender
	a (Lnet/minecraft/server/EntityEnderCrystal;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityEnderCrystal;F)F getY
	a (Lnet/minecraft/server/EntityEnderCrystal;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/EntityEnderCrystal;Ldtj;DDD)Z shouldRender
duz net/minecraft/client/renderer/entity/EnderDragonRenderer
	a CRYSTAL_BEAM_LOCATION
	e DRAGON_EXPLODING_LOCATION
	f DRAGON_LOCATION
	g DRAGON_EYES_LOCATION
	h RENDER_TYPE
	i DECAL
	j EYES
	k BEAM
	l HALF_SQRT_3
	m model
	a (FFFFILcyi;Ldqq;I)V renderCrystalBeams
	a (Lcyl;Lb;FF)V vertex2
	a (Lcyl;Lb;I)V vertex01
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/EntityEnderDragon;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityEnderDragon;FFLcyi;Ldqq;I)V render
	b (Lcyl;Lb;FF)V vertex3
	c (Lcyl;Lb;FF)V vertex4
duz$a net/minecraft/client/renderer/entity/EnderDragonRenderer$DragonModel
	A entity
	B a
	a head
	b neck
	f jaw
	g body
	h leftWing
	i leftWingTip
	j leftFrontLeg
	k leftFrontLegTip
	l leftFrontFoot
	m leftRearLeg
	n leftRearLegTip
	o leftRearFoot
	p rightWing
	t rightWingTip
	u rightFrontLeg
	v rightFrontLegTip
	w rightFrontFoot
	x rightRearLeg
	y rightRearLegTip
	z rightRearFoot
	a (Lcyi;Lcyl;IIFFFF)V renderToBuffer
	a (Lcyi;Lcyl;IIFLdnf;Ldnf;Ldnf;Ldnf;Ldnf;Ldnf;Ldnf;)V renderSide
	a (Lnet/minecraft/server/Entity;FFF)V prepareMobModel
	a (Lnet/minecraft/server/Entity;FFFFF)V setupAnim
	a (Lnet/minecraft/server/EntityEnderDragon;FFF)V prepareMobModel
	a (Lnet/minecraft/server/EntityEnderDragon;FFFFF)V setupAnim
dva net/minecraft/client/renderer/entity/EndermanRenderer
	a ENDERMAN_LOCATION
	g random
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/EntityEnderman;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityEnderman;F)Lnet/minecraft/server/Vec3D; getRenderOffset
	a (Lnet/minecraft/server/EntityEnderman;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/EntityInsentient;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/EntityLiving;FFLcyi;Ldqq;I)V render
	b (Lnet/minecraft/server/Entity;F)Lnet/minecraft/server/Vec3D; getRenderOffset
dvb net/minecraft/client/renderer/entity/EndermiteRenderer
	a ENDERMITE_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityEndermite;)F getFlipDegrees
	b (Lnet/minecraft/server/EntityEndermite;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	b (Lnet/minecraft/server/EntityLiving;)F getFlipDegrees
dvc net/minecraft/client/renderer/entity/EntityRenderDispatcher
	a textureManager
	b camera
	c crosshairPickEntity
	d options
	e SHADOW_RENDER_TYPE
	f renderers
	g playerRenderers
	h defaultPlayerRenderer
	i font
	j level
	k cameraOrientation
	l shouldRenderShadow
	m renderHitBoxes
	a ()Z shouldRenderHitBoxes
	a (DDD)D distanceToSqr
	a (Lcyi$a;Lcyl;FFFFF)V fireVertex
	a (Lcyi$a;Lcyl;FFFFFF)V shadowVertex
	a (Lcyi$a;Lcyl;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;DDDFF)V renderBlockShadow
	a (Lcyi;Lcyl;Lnet/minecraft/server/Entity;F)V renderHitbox
	a (Lcyi;Lcyl;Lnet/minecraft/server/Entity;FFF)V renderBox
	a (Lcyi;Ldqq;Lnet/minecraft/server/Entity;)V renderFlame
	a (Lcyi;Ldqq;Lnet/minecraft/server/Entity;FFLnet/minecraft/server/IWorldReader;F)V renderShadow
	a (Ldvw;Lnet/minecraft/server/IReloadableResourceManager;)V registerRenderers
	a (Lnet/minecraft/server/Entity;)Ldvd; getRenderer
	a (Lnet/minecraft/server/Entity;DDDFFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/Entity;F)I getPackedLightCoords
	a (Lnet/minecraft/server/Entity;Ldtj;DDD)Z shouldRender
	a (Lnet/minecraft/server/EntityTypes;Ldvd;)V register
	a (Lnet/minecraft/server/Quaternion;)V overrideCameraOrientation
	a (Lnet/minecraft/server/World;)V setLevel
	a (Lnet/minecraft/server/World;Ldaz;Lnet/minecraft/server/Entity;)V prepare
	a (Z)V setRenderShadow
	b ()Lnet/minecraft/server/Quaternion; cameraOrientation
	b (Lnet/minecraft/server/Entity;)D distanceToSqr
	b (Z)V setRenderHitBoxes
	c ()Ldcf; getFont
dvd net/minecraft/client/renderer/entity/EntityRenderer
	b entityRenderDispatcher
	c shadowRadius
	d shadowStrength
	a ()Ldcf; getFont
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;F)I getBlockLightLevel
	a (Lnet/minecraft/server/Entity;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/Entity;Ldtj;DDD)Z shouldRender
	a (Lnet/minecraft/server/Entity;Ljava/lang/String;Lcyi;Ldqq;I)V renderNameTag
	b ()Ldvc; getDispatcher
	b (Lnet/minecraft/server/Entity;)Z shouldShowName
	b (Lnet/minecraft/server/Entity;F)Lnet/minecraft/server/Vec3D; getRenderOffset
	c (Lnet/minecraft/server/Entity;F)I getPackedLightCoords
dve net/minecraft/client/renderer/entity/EvokerFangsRenderer
	a TEXTURE_LOCATION
	e model
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/EntityEvokerFangs;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityEvokerFangs;FFLcyi;Ldqq;I)V render
dvf net/minecraft/client/renderer/entity/EvokerRenderer
	a EVOKER_ILLAGER
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityIllagerWizard;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
dvg net/minecraft/client/renderer/entity/ExperienceOrbRenderer
	a EXPERIENCE_ORB_LOCATION
	e RENDER_TYPE
	a (Lcyl;Lb;La;FFIIIFFI)V vertex
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;F)I getBlockLightLevel
	a (Lnet/minecraft/server/Entity;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/EntityExperienceOrb;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityExperienceOrb;F)I getBlockLightLevel
	a (Lnet/minecraft/server/EntityExperienceOrb;FFLcyi;Ldqq;I)V render
dvh net/minecraft/client/renderer/entity/FallingBlockRenderer
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/EntityFallingBlock;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityFallingBlock;FFLcyi;Ldqq;I)V render
dvi net/minecraft/client/renderer/entity/FireworkEntityRenderer
	a itemRenderer
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/EntityFireworks;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityFireworks;FFLcyi;Ldqq;I)V render
dvj net/minecraft/client/renderer/entity/FishingHookRenderer
	a TEXTURE_LOCATION
	e RENDER_TYPE
	a (FFFLcyl;Lb;F)V stringVertex
	a (II)F fraction
	a (Lcyl;Lb;La;IFIII)V vertex
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/EntityFishingHook;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityFishingHook;FFLcyi;Ldqq;I)V render
dvk net/minecraft/client/renderer/entity/FoxRenderer
	a RED_FOX_TEXTURE
	g RED_FOX_SLEEP_TEXTURE
	h SNOW_FOX_TEXTURE
	i SNOW_FOX_SLEEP_TEXTURE
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityFox;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityFox;Lcyi;FFF)V setupRotations
	a (Lnet/minecraft/server/EntityLiving;Lcyi;FFF)V setupRotations
dvl net/minecraft/client/renderer/entity/GhastRenderer
	a GHAST_LOCATION
	g GHAST_SHOOTING_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityGhast;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityGhast;Lcyi;F)V scale
	a (Lnet/minecraft/server/EntityLiving;Lcyi;F)V scale
dvm net/minecraft/client/renderer/entity/GiantMobRenderer
	a ZOMBIE_LOCATION
	g scale
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityGiantZombie;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityGiantZombie;Lcyi;F)V scale
	a (Lnet/minecraft/server/EntityLiving;Lcyi;F)V scale
dvn net/minecraft/client/renderer/entity/GuardianRenderer
	a GUARDIAN_LOCATION
	g GUARDIAN_BEAM_LOCATION
	h BEAM_RENDER_TYPE
	a (Lcyl;Lb;La;FFFIIIFF)V vertex
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/Entity;Ldtj;DDD)Z shouldRender
	a (Lnet/minecraft/server/EntityGuardian;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityGuardian;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/EntityGuardian;Ldtj;DDD)Z shouldRender
	a (Lnet/minecraft/server/EntityInsentient;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/EntityInsentient;Ldtj;DDD)Z shouldRender
	a (Lnet/minecraft/server/EntityLiving;DF)Lnet/minecraft/server/Vec3D; getPosition
	a (Lnet/minecraft/server/EntityLiving;FFLcyi;Ldqq;I)V render
dvo net/minecraft/client/renderer/entity/HorseRenderer
	a LAYERED_LOCATION_CACHE
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityHorse;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
dvp net/minecraft/client/renderer/entity/HumanoidMobRenderer
	a DEFAULT_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityInsentient;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
dvq net/minecraft/client/renderer/entity/HuskRenderer
	a HUSK_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityInsentient;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityLiving;Lcyi;F)V scale
	a (Lnet/minecraft/server/EntityZombie;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityZombie;Lcyi;F)V scale
dvr net/minecraft/client/renderer/entity/IllagerRenderer
	a (Lnet/minecraft/server/EntityIllagerAbstract;Lcyi;F)V scale
	a (Lnet/minecraft/server/EntityLiving;Lcyi;F)V scale
dvs net/minecraft/client/renderer/entity/IllusionerRenderer
	a ILLUSIONER
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/EntityIllagerIllusioner;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityIllagerIllusioner;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/EntityIllagerIllusioner;Z)Z isVisible
	a (Lnet/minecraft/server/EntityInsentient;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/EntityLiving;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/EntityLiving;Z)Z isVisible
dvt net/minecraft/client/renderer/entity/IronGolemRenderer
	a GOLEM_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityIronGolem;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityIronGolem;Lcyi;FFF)V setupRotations
	a (Lnet/minecraft/server/EntityLiving;Lcyi;FFF)V setupRotations
dvu net/minecraft/client/renderer/entity/ItemEntityRenderer
	a itemRenderer
	e random
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/EntityItem;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityItem;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/ItemStack;)I getRenderAmount
dvv net/minecraft/client/renderer/entity/ItemFrameRenderer
	a FRAME_LOCATION
	e MAP_FRAME_LOCATION
	f minecraft
	g itemRenderer
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/Entity;Ljava/lang/String;Lcyi;Ldqq;I)V renderNameTag
	a (Lnet/minecraft/server/EntityItemFrame;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityItemFrame;F)Lnet/minecraft/server/Vec3D; getRenderOffset
	a (Lnet/minecraft/server/EntityItemFrame;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/EntityItemFrame;Ljava/lang/String;Lcyi;Ldqq;I)V renderNameTag
	b (Lnet/minecraft/server/Entity;)Z shouldShowName
	b (Lnet/minecraft/server/Entity;F)Lnet/minecraft/server/Vec3D; getRenderOffset
	b (Lnet/minecraft/server/EntityItemFrame;)Z shouldShowName
dvw net/minecraft/client/renderer/entity/ItemRenderer
	a ENCHANT_GLINT_LOCATION
	b blitOffset
	c IGNORED
	d itemModelShaper
	e textureManager
	f itemColors
	a ()Ldqn; getItemModelShaper
	a (Lcyd;IIIIIIII)V fillRect
	a (Lcyi;Lcyl;Ljava/util/List;Lnet/minecraft/server/ItemStack;II)V renderQuadList
	a (Ldcf;Lnet/minecraft/server/ItemStack;II)V renderGuiItemDecorations
	a (Ldcf;Lnet/minecraft/server/ItemStack;IILjava/lang/String;)V renderGuiItemDecorations
	a (Ldqq;Ldqy;ZZ)Lcyl; getFoilBuffer
	a (Lebs;Lnet/minecraft/server/ItemStack;IILcyi;Lcyl;)V renderModelLists
	a (Lebs;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;)Lebs; resolveOverrides
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;II)V renderAndDecorateItem
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;Ldrw$b;ZLcyi;Ldqq;Lnet/minecraft/server/World;II)V renderStatic
	a (Lnet/minecraft/server/IResourceManager;)V onResourceManagerReload
	a (Lnet/minecraft/server/ItemStack;)Z isGui3d
	a (Lnet/minecraft/server/ItemStack;II)V renderGuiItem
	a (Lnet/minecraft/server/ItemStack;IILebs;)V renderGuiItem
	a (Lnet/minecraft/server/ItemStack;Ldrw$b;IILcyi;Ldqq;)V renderStatic
	a (Lnet/minecraft/server/ItemStack;Ldrw$b;ZLcyi;Ldqq;IILebs;)V render
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;)Lebs; getModel
	b (Lnet/minecraft/server/ItemStack;II)V renderAndDecorateItem
dvx net/minecraft/client/renderer/entity/LeashKnotRenderer
	a KNOT_LOCATION
	e model
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/EntityLeash;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityLeash;FFLcyi;Ldqq;I)V render
dvy net/minecraft/client/renderer/entity/LightningBoltRenderer
	a (Lb;Lcyl;FFIFFFFFFFZZZZ)V quad
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/EntityLightning;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityLightning;FFLcyi;Ldqq;I)V render
dvz net/minecraft/client/renderer/entity/LivingEntityRenderer
	a LOGGER
	e model
	f layers
	a (Ldza;)Z addLayer
	a (Lnet/minecraft/server/Entity;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/EntityLiving;)Z shouldShowName
	a (Lnet/minecraft/server/EntityLiving;F)F getBob
	a (Lnet/minecraft/server/EntityLiving;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/EntityLiving;Lcyi;F)V scale
	a (Lnet/minecraft/server/EntityLiving;Lcyi;FFF)V setupRotations
	a (Lnet/minecraft/server/EntityLiving;Z)Z isVisible
	a (Lnet/minecraft/server/EnumDirection;)F sleepDirectionToRotation
	b (Lnet/minecraft/server/Entity;)Z shouldShowName
	b (Lnet/minecraft/server/EntityLiving;)F getFlipDegrees
	b (Lnet/minecraft/server/EntityLiving;F)F getWhiteOverlayProgress
	c ()Ldkx; getModel
	c (Lnet/minecraft/server/EntityLiving;F)I getOverlayCoords
	d (Lnet/minecraft/server/EntityLiving;F)F getAttackAnim
dwa net/minecraft/client/renderer/entity/LlamaRenderer
	a LLAMA_LOCATIONS
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityLlama;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
dwb net/minecraft/client/renderer/entity/LlamaSpitRenderer
	a LLAMA_SPIT_LOCATION
	e model
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/EntityLlamaSpit;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityLlamaSpit;FFLcyi;Ldqq;I)V render
dwc net/minecraft/client/renderer/entity/MagmaCubeRenderer
	a MAGMACUBE_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;F)I getBlockLightLevel
	a (Lnet/minecraft/server/EntityLiving;Lcyi;F)V scale
	a (Lnet/minecraft/server/EntityMagmaCube;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityMagmaCube;F)I getBlockLightLevel
	a (Lnet/minecraft/server/EntityMagmaCube;Lcyi;F)V scale
dwd net/minecraft/client/renderer/entity/MinecartRenderer
	a model
	e MINECART_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/EntityMinecartAbstract;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityMinecartAbstract;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/EntityMinecartAbstract;FLnet/minecraft/server/IBlockData;Lcyi;Ldqq;I)V renderMinecartContents
dwe net/minecraft/client/renderer/entity/MobRenderer
	a (Lcyl;Lb;FFFIIIIFFFF)V renderSide
	a (Lcyl;Lb;IFFFFFIIZFF)V addVertexPair
	a (Lnet/minecraft/server/Entity;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/Entity;Ldtj;DDD)Z shouldRender
	a (Lnet/minecraft/server/EntityInsentient;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/EntityInsentient;FLcyi;Ldqq;Lnet/minecraft/server/Entity;)V renderLeash
	a (Lnet/minecraft/server/EntityInsentient;Ldtj;DDD)Z shouldRender
	a (Lnet/minecraft/server/EntityLiving;)Z shouldShowName
	a (Lnet/minecraft/server/EntityLiving;FFLcyi;Ldqq;I)V render
	b (Lnet/minecraft/server/Entity;)Z shouldShowName
	b (Lnet/minecraft/server/EntityInsentient;)Z shouldShowName
dwf net/minecraft/client/renderer/entity/MushroomCowRenderer
	a TEXTURES
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityMushroomCow;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
dwg net/minecraft/client/renderer/entity/OcelotRenderer
	a CAT_OCELOT_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityOcelot;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
dwh net/minecraft/client/renderer/entity/PaintingRenderer
	a (Lb;La;Lcyl;FFFFFIIII)V vertex
	a (Lcyi;Lcyl;Lnet/minecraft/server/EntityPainting;IILeag;Leag;)V renderPainting
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/EntityPainting;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityPainting;FFLcyi;Ldqq;I)V render
dwi net/minecraft/client/renderer/entity/PandaRenderer
	a TEXTURES
	a (FFIFF)F getAngle
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityLiving;Lcyi;FFF)V setupRotations
	a (Lnet/minecraft/server/EntityPanda;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityPanda;Lcyi;FFF)V setupRotations
dwj net/minecraft/client/renderer/entity/ParrotRenderer
	a PARROT_LOCATIONS
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityLiving;F)F getBob
	a (Lnet/minecraft/server/EntityParrot;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityParrot;F)F getBob
dwk net/minecraft/client/renderer/entity/PhantomRenderer
	a PHANTOM_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityLiving;Lcyi;F)V scale
	a (Lnet/minecraft/server/EntityLiving;Lcyi;FFF)V setupRotations
	a (Lnet/minecraft/server/EntityPhantom;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityPhantom;Lcyi;F)V scale
	a (Lnet/minecraft/server/EntityPhantom;Lcyi;FFF)V setupRotations
dwl net/minecraft/client/renderer/entity/PigRenderer
	a PIG_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityPig;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
dwm net/minecraft/client/renderer/entity/PigZombieRenderer
	a ZOMBIE_PIGMAN_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityInsentient;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityPigZombie;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
dwn net/minecraft/client/renderer/entity/PillagerRenderer
	a PILLAGER
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityPillager;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
dwo net/minecraft/client/renderer/entity/PolarBearRenderer
	a BEAR_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityLiving;Lcyi;F)V scale
	a (Lnet/minecraft/server/EntityPolarBear;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityPolarBear;Lcyi;F)V scale
dwp net/minecraft/client/renderer/entity/PufferfishRenderer
	a PUFFER_LOCATION
	g puffStateO
	h small
	i mid
	j big
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/EntityInsentient;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/EntityLiving;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/EntityLiving;Lcyi;FFF)V setupRotations
	a (Lnet/minecraft/server/EntityPufferFish;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityPufferFish;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/EntityPufferFish;Lcyi;FFF)V setupRotations
dwq net/minecraft/client/renderer/entity/RabbitRenderer
	a RABBIT_BROWN_LOCATION
	g RABBIT_WHITE_LOCATION
	h RABBIT_BLACK_LOCATION
	i RABBIT_GOLD_LOCATION
	j RABBIT_SALT_LOCATION
	k RABBIT_WHITE_SPLOTCHED_LOCATION
	l RABBIT_TOAST_LOCATION
	m RABBIT_EVIL_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityRabbit;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
dwr net/minecraft/client/renderer/entity/RavagerRenderer
	a TEXTURE_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityRavager;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
dws net/minecraft/client/renderer/entity/RenderLayerParent
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	c ()Ldkx; getModel
dwt net/minecraft/client/renderer/entity/SalmonRenderer
	a SALMON_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityLiving;Lcyi;FFF)V setupRotations
	a (Lnet/minecraft/server/EntitySalmon;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntitySalmon;Lcyi;FFF)V setupRotations
dwu net/minecraft/client/renderer/entity/SheepRenderer
	a SHEEP_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntitySheep;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
dwv net/minecraft/client/renderer/entity/ShulkerBulletRenderer
	a TEXTURE_LOCATION
	e RENDER_TYPE
	f model
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;F)I getBlockLightLevel
	a (Lnet/minecraft/server/Entity;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/EntityShulkerBullet;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityShulkerBullet;F)I getBlockLightLevel
	a (Lnet/minecraft/server/EntityShulkerBullet;FFLcyi;Ldqq;I)V render
dww net/minecraft/client/renderer/entity/ShulkerRenderer
	a DEFAULT_TEXTURE_LOCATION
	g TEXTURE_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;Ldtj;DDD)Z shouldRender
	a (Lnet/minecraft/server/EntityInsentient;Ldtj;DDD)Z shouldRender
	a (Lnet/minecraft/server/EntityLiving;Lcyi;F)V scale
	a (Lnet/minecraft/server/EntityLiving;Lcyi;FFF)V setupRotations
	a (Lnet/minecraft/server/EntityShulker;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityShulker;F)Lnet/minecraft/server/Vec3D; getRenderOffset
	a (Lnet/minecraft/server/EntityShulker;Lcyi;F)V scale
	a (Lnet/minecraft/server/EntityShulker;Lcyi;FFF)V setupRotations
	a (Lnet/minecraft/server/EntityShulker;Ldtj;DDD)Z shouldRender
	b (Lnet/minecraft/server/Entity;F)Lnet/minecraft/server/Vec3D; getRenderOffset
dwx net/minecraft/client/renderer/entity/SilverfishRenderer
	a SILVERFISH_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntitySilverfish;)F getFlipDegrees
	b (Lnet/minecraft/server/EntityLiving;)F getFlipDegrees
	b (Lnet/minecraft/server/EntitySilverfish;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
dwy net/minecraft/client/renderer/entity/SkeletonRenderer
	a SKELETON_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityInsentient;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntitySkeletonAbstract;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
dwz net/minecraft/client/renderer/entity/SlimeRenderer
	a SLIME_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/EntityInsentient;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/EntityLiving;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/EntityLiving;Lcyi;F)V scale
	a (Lnet/minecraft/server/EntitySlime;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntitySlime;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/EntitySlime;Lcyi;F)V scale
dxa net/minecraft/client/renderer/entity/SnowGolemRenderer
	a SNOW_GOLEM_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntitySnowman;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
dxb net/minecraft/client/renderer/entity/SpectralArrowRenderer
	a SPECTRAL_ARROW_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntitySpectralArrow;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
dxc net/minecraft/client/renderer/entity/SpiderRenderer
	a SPIDER_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntitySpider;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	b (Lnet/minecraft/server/EntityLiving;)F getFlipDegrees
	b (Lnet/minecraft/server/EntitySpider;)F getFlipDegrees
dxd net/minecraft/client/renderer/entity/SquidRenderer
	a SQUID_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityLiving;F)F getBob
	a (Lnet/minecraft/server/EntityLiving;Lcyi;FFF)V setupRotations
	a (Lnet/minecraft/server/EntitySquid;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntitySquid;F)F getBob
	a (Lnet/minecraft/server/EntitySquid;Lcyi;FFF)V setupRotations
dxe net/minecraft/client/renderer/entity/StrayRenderer
	a STRAY_SKELETON_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityInsentient;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntitySkeletonAbstract;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
dxf net/minecraft/client/renderer/entity/ThrownItemRenderer
	a itemRenderer
	e scale
	f fullBright
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;F)I getBlockLightLevel
	a (Lnet/minecraft/server/Entity;FFLcyi;Ldqq;I)V render
dxg net/minecraft/client/renderer/entity/ThrownTridentRenderer
	a TRIDENT_LOCATION
	e model
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/EntityThrownTrident;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityThrownTrident;FFLcyi;Ldqq;I)V render
dxh net/minecraft/client/renderer/entity/TippableArrowRenderer
	a NORMAL_ARROW_LOCATION
	e TIPPED_ARROW_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityTippedArrow;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
dxi net/minecraft/client/renderer/entity/TntMinecartRenderer
	a (Lnet/minecraft/server/EntityMinecartAbstract;FLnet/minecraft/server/IBlockData;Lcyi;Ldqq;I)V renderMinecartContents
	a (Lnet/minecraft/server/EntityMinecartTNT;FLnet/minecraft/server/IBlockData;Lcyi;Ldqq;I)V renderMinecartContents
	a (Lnet/minecraft/server/IBlockData;Lcyi;Ldqq;IZ)V renderWhiteSolidBlock
dxj net/minecraft/client/renderer/entity/TntRenderer
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/EntityTNTPrimed;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityTNTPrimed;FFLcyi;Ldqq;I)V render
dxk net/minecraft/client/renderer/entity/TropicalFishRenderer
	a modelA
	g modelB
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/EntityInsentient;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/EntityLiving;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/EntityLiving;Lcyi;FFF)V setupRotations
	a (Lnet/minecraft/server/EntityTropicalFish;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityTropicalFish;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/EntityTropicalFish;Lcyi;FFF)V setupRotations
dxl net/minecraft/client/renderer/entity/TurtleRenderer
	a TURTLE_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/EntityInsentient;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/EntityLiving;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/EntityTurtle;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityTurtle;FFLcyi;Ldqq;I)V render
dxm net/minecraft/client/renderer/entity/UndeadHorseRenderer
	a MAP
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityHorseAbstract;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
dxn net/minecraft/client/renderer/entity/VexRenderer
	a VEX_LOCATION
	g VEX_CHARGING_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;F)I getBlockLightLevel
	a (Lnet/minecraft/server/EntityInsentient;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityLiving;Lcyi;F)V scale
	a (Lnet/minecraft/server/EntityVex;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityVex;F)I getBlockLightLevel
	a (Lnet/minecraft/server/EntityVex;Lcyi;F)V scale
dxo net/minecraft/client/renderer/entity/VillagerRenderer
	a VILLAGER_BASE_SKIN
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityLiving;Lcyi;F)V scale
	a (Lnet/minecraft/server/EntityVillager;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityVillager;Lcyi;F)V scale
dxp net/minecraft/client/renderer/entity/VindicatorRenderer
	a VINDICATOR
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityVindicator;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
dxq net/minecraft/client/renderer/entity/WanderingTraderRenderer
	a VILLAGER_BASE_SKIN
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityLiving;Lcyi;F)V scale
	a (Lnet/minecraft/server/EntityVillagerTrader;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityVillagerTrader;Lcyi;F)V scale
dxr net/minecraft/client/renderer/entity/WitchRenderer
	a WITCH_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/EntityInsentient;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/EntityLiving;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/EntityLiving;Lcyi;F)V scale
	a (Lnet/minecraft/server/EntityWitch;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityWitch;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/EntityWitch;Lcyi;F)V scale
dxs net/minecraft/client/renderer/entity/WitherBossRenderer
	a WITHER_INVULNERABLE_LOCATION
	g WITHER_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;F)I getBlockLightLevel
	a (Lnet/minecraft/server/EntityLiving;Lcyi;F)V scale
	a (Lnet/minecraft/server/EntityWither;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityWither;F)I getBlockLightLevel
	a (Lnet/minecraft/server/EntityWither;Lcyi;F)V scale
dxt net/minecraft/client/renderer/entity/WitherSkeletonRenderer
	a WITHER_SKELETON_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityInsentient;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityLiving;Lcyi;F)V scale
	a (Lnet/minecraft/server/EntitySkeletonAbstract;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntitySkeletonAbstract;Lcyi;F)V scale
dxu net/minecraft/client/renderer/entity/WitherSkullRenderer
	a WITHER_INVULNERABLE_LOCATION
	e WITHER_LOCATION
	f model
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;F)I getBlockLightLevel
	a (Lnet/minecraft/server/Entity;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/EntityWitherSkull;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityWitherSkull;F)I getBlockLightLevel
	a (Lnet/minecraft/server/EntityWitherSkull;FFLcyi;Ldqq;I)V render
dxv net/minecraft/client/renderer/entity/WolfRenderer
	a WOLF_LOCATION
	g WOLF_TAME_LOCATION
	h WOLF_ANGRY_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/EntityInsentient;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/EntityLiving;F)F getBob
	a (Lnet/minecraft/server/EntityLiving;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/EntityWolf;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityWolf;F)F getBob
	a (Lnet/minecraft/server/EntityWolf;FFLcyi;Ldqq;I)V render
dxw net/minecraft/client/renderer/entity/ZombieRenderer
dxx net/minecraft/client/renderer/entity/ZombieVillagerRenderer
	a ZOMBIE_VILLAGER_LOCATION
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityInsentient;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityLiving;Lcyi;FFF)V setupRotations
	a (Lnet/minecraft/server/EntityZombieVillager;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/EntityZombieVillager;Lcyi;FFF)V setupRotations
dxy net/minecraft/client/renderer/entity/layers/AbstractArmorLayer
	a innerModel
	b outerModel
	c ARMOR_LOCATION_CACHE
	a (Lcyi;Ldqq;ILnet/minecraft/server/Entity;FFFFFF)V render
	a (Lcyi;Ldqq;ILnet/minecraft/server/EntityLiving;FFFFFF)V render
	a (Lcyi;Ldqq;ILnet/minecraft/server/ItemArmor;ZLdlg;ZFFFLjava/lang/String;)V renderModel
	a (Lcyi;Ldqq;Lnet/minecraft/server/EntityLiving;FFFFFFLnet/minecraft/server/EnumItemSlot;I)V renderArmorPiece
	a (Ldlg;)V hideAllArmor
	a (Ldlg;Lnet/minecraft/server/EnumItemSlot;)V setPartVisibility
	a (Lnet/minecraft/server/EnumItemSlot;)Ldlg; getArmorModel
	a (Lnet/minecraft/server/ItemArmor;ZLjava/lang/String;)Lnet/minecraft/server/MinecraftKey; getArmorLocation
	b (Lnet/minecraft/server/EnumItemSlot;)Z usesInnerModel
dxz net/minecraft/client/renderer/entity/layers/ArrowLayer
	a dispatcher
	b arrow
	a (Lcyi;Ldqq;ILnet/minecraft/server/Entity;FFFF)V renderStuckItem
	a (Lnet/minecraft/server/EntityLiving;)I numStuck
dya net/minecraft/client/renderer/entity/layers/BeeStingerLayer
	a BEE_STINGER_LOCATION
	a (Lcyi;Ldqq;ILnet/minecraft/server/Entity;FFFF)V renderStuckItem
	a (Lcyl;Lb;La;FIFFI)V vertex
	a (Lnet/minecraft/server/EntityLiving;)I numStuck
dyb net/minecraft/client/renderer/entity/layers/CapeLayer
	a (Lcyi;Ldqq;ILdpv;FFFFFF)V render
	a (Lcyi;Ldqq;ILnet/minecraft/server/Entity;FFFFFF)V render
dyc net/minecraft/client/renderer/entity/layers/CarriedBlockLayer
	a (Lcyi;Ldqq;ILnet/minecraft/server/Entity;FFFFFF)V render
	a (Lcyi;Ldqq;ILnet/minecraft/server/EntityEnderman;FFFFFF)V render
dyd net/minecraft/client/renderer/entity/layers/CatCollarLayer
	a CAT_COLLAR_LOCATION
	b catModel
	a (Lcyi;Ldqq;ILnet/minecraft/server/Entity;FFFFFF)V render
	a (Lcyi;Ldqq;ILnet/minecraft/server/EntityCat;FFFFFF)V render
dye net/minecraft/client/renderer/entity/layers/CreeperPowerLayer
	a POWER_LOCATION
	b model
	a ()Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (F)F xOffset
	b ()Ldkx; model
dyf net/minecraft/client/renderer/entity/layers/CrossedArmsItemLayer
	a (Lcyi;Ldqq;ILnet/minecraft/server/Entity;FFFFFF)V render
	a (Lcyi;Ldqq;ILnet/minecraft/server/EntityLiving;FFFFFF)V render
dyg net/minecraft/client/renderer/entity/layers/CustomHeadLayer
	a (Lcyi;Ldqq;ILnet/minecraft/server/Entity;FFFFFF)V render
	a (Lcyi;Ldqq;ILnet/minecraft/server/EntityLiving;FFFFFF)V render
dyh net/minecraft/client/renderer/entity/layers/Deadmau5EarsLayer
	a (Lcyi;Ldqq;ILdpv;FFFFFF)V render
	a (Lcyi;Ldqq;ILnet/minecraft/server/Entity;FFFFFF)V render
dyi net/minecraft/client/renderer/entity/layers/DolphinCarryingItemLayer
	a (Lcyi;Ldqq;ILnet/minecraft/server/Entity;FFFFFF)V render
	a (Lcyi;Ldqq;ILnet/minecraft/server/EntityDolphin;FFFFFF)V render
dyj net/minecraft/client/renderer/entity/layers/DrownedOuterLayer
	a DROWNED_OUTER_LAYER_LOCATION
	b model
	a (Lcyi;Ldqq;ILnet/minecraft/server/Entity;FFFFFF)V render
	a (Lcyi;Ldqq;ILnet/minecraft/server/EntityZombie;FFFFFF)V render
dyk net/minecraft/client/renderer/entity/layers/ElytraLayer
	a WINGS_LOCATION
	b elytraModel
	a (Lcyi;Ldqq;ILnet/minecraft/server/Entity;FFFFFF)V render
	a (Lcyi;Ldqq;ILnet/minecraft/server/EntityLiving;FFFFFF)V render
dyl net/minecraft/client/renderer/entity/layers/EnderEyesLayer
	a ENDERMAN_EYES
	a ()Ldqy; renderType
dym net/minecraft/client/renderer/entity/layers/EnergySwirlLayer
	a ()Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (F)F xOffset
	a (Lcyi;Ldqq;ILnet/minecraft/server/Entity;FFFFFF)V render
	b ()Ldkx; model
dyn net/minecraft/client/renderer/entity/layers/EyesLayer
	a ()Ldqy; renderType
	a (Lcyi;Ldqq;ILnet/minecraft/server/Entity;FFFFFF)V render
dyo net/minecraft/client/renderer/entity/layers/FoxHeldItemLayer
	a (Lcyi;Ldqq;ILnet/minecraft/server/Entity;FFFFFF)V render
	a (Lcyi;Ldqq;ILnet/minecraft/server/EntityFox;FFFFFF)V render
dyp net/minecraft/client/renderer/entity/layers/HorseArmorLayer
	a model
	a (Lcyi;Ldqq;ILnet/minecraft/server/Entity;FFFFFF)V render
	a (Lcyi;Ldqq;ILnet/minecraft/server/EntityHorse;FFFFFF)V render
dyq net/minecraft/client/renderer/entity/layers/HumanoidArmorLayer
	a (Ldlg;)V hideAllArmor
	a (Ldlg;Lnet/minecraft/server/EnumItemSlot;)V setPartVisibility
dyr net/minecraft/client/renderer/entity/layers/IronGolemCrackinessLayer
	a resourceLocations
	a (Lcyi;Ldqq;ILnet/minecraft/server/Entity;FFFFFF)V render
	a (Lcyi;Ldqq;ILnet/minecraft/server/EntityIronGolem;FFFFFF)V render
dys net/minecraft/client/renderer/entity/layers/IronGolemFlowerLayer
	a (Lcyi;Ldqq;ILnet/minecraft/server/Entity;FFFFFF)V render
	a (Lcyi;Ldqq;ILnet/minecraft/server/EntityIronGolem;FFFFFF)V render
dyt net/minecraft/client/renderer/entity/layers/ItemInHandLayer
	a (Lcyi;Ldqq;ILnet/minecraft/server/Entity;FFFFFF)V render
	a (Lcyi;Ldqq;ILnet/minecraft/server/EntityLiving;FFFFFF)V render
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;Ldrw$b;Lnet/minecraft/server/EnumMainHand;Lcyi;Ldqq;I)V renderArmWithItem
dyu net/minecraft/client/renderer/entity/layers/LlamaDecorLayer
	a TEXTURE_LOCATION
	b TRADER_LLAMA
	c model
	a (Lcyi;Ldqq;ILnet/minecraft/server/Entity;FFFFFF)V render
	a (Lcyi;Ldqq;ILnet/minecraft/server/EntityLlama;FFFFFF)V render
dyv net/minecraft/client/renderer/entity/layers/MushroomCowMushroomLayer
	a (Lcyi;Ldqq;ILnet/minecraft/server/Entity;FFFFFF)V render
	a (Lcyi;Ldqq;ILnet/minecraft/server/EntityMushroomCow;FFFFFF)V render
dyw net/minecraft/client/renderer/entity/layers/PandaHoldsItemLayer
	a (Lcyi;Ldqq;ILnet/minecraft/server/Entity;FFFFFF)V render
	a (Lcyi;Ldqq;ILnet/minecraft/server/EntityPanda;FFFFFF)V render
dyx net/minecraft/client/renderer/entity/layers/ParrotOnShoulderLayer
	a model
	a (Lcyi;Ldqq;ILnet/minecraft/server/Entity;FFFFFF)V render
	a (Lcyi;Ldqq;ILnet/minecraft/server/EntityHuman;FFFFFF)V render
	a (Lcyi;Ldqq;ILnet/minecraft/server/EntityHuman;FFFFZ)V render
dyy net/minecraft/client/renderer/entity/layers/PhantomEyesLayer
	a PHANTOM_EYES
	a ()Ldqy; renderType
dyz net/minecraft/client/renderer/entity/layers/PigSaddleLayer
	a SADDLE_LOCATION
	b model
	a (Lcyi;Ldqq;ILnet/minecraft/server/Entity;FFFFFF)V render
	a (Lcyi;Ldqq;ILnet/minecraft/server/EntityPig;FFFFFF)V render
dza net/minecraft/client/renderer/entity/layers/RenderLayer
	a renderer
	a (Lcyi;Ldqq;ILnet/minecraft/server/Entity;FFFFFF)V render
	a (Ldkx;Ldkx;Lnet/minecraft/server/MinecraftKey;Lcyi;Ldqq;ILnet/minecraft/server/EntityLiving;FFFFFFFFF)V coloredCutoutModelCopyLayerRender
	a (Ldkx;Lnet/minecraft/server/MinecraftKey;Lcyi;Ldqq;ILnet/minecraft/server/EntityLiving;FFF)V renderColoredCutoutModel
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	c ()Ldkx; getParentModel
dzb net/minecraft/client/renderer/entity/layers/SheepFurLayer
	a SHEEP_FUR_LOCATION
	b model
	a (Lcyi;Ldqq;ILnet/minecraft/server/Entity;FFFFFF)V render
	a (Lcyi;Ldqq;ILnet/minecraft/server/EntitySheep;FFFFFF)V render
dzc net/minecraft/client/renderer/entity/layers/ShulkerHeadLayer
	a (Lcyi;Ldqq;ILnet/minecraft/server/Entity;FFFFFF)V render
	a (Lcyi;Ldqq;ILnet/minecraft/server/EntityShulker;FFFFFF)V render
dzd net/minecraft/client/renderer/entity/layers/SlimeOuterLayer
	a model
	a (Lcyi;Ldqq;ILnet/minecraft/server/Entity;FFFFFF)V render
	a (Lcyi;Ldqq;ILnet/minecraft/server/EntityLiving;FFFFFF)V render
dze net/minecraft/client/renderer/entity/layers/SnowGolemHeadLayer
	a (Lcyi;Ldqq;ILnet/minecraft/server/Entity;FFFFFF)V render
	a (Lcyi;Ldqq;ILnet/minecraft/server/EntitySnowman;FFFFFF)V render
dzf net/minecraft/client/renderer/entity/layers/SpiderEyesLayer
	a SPIDER_EYES
	a ()Ldqy; renderType
dzg net/minecraft/client/renderer/entity/layers/SpinAttackEffectLayer
	a TEXTURE
	b box
	a (Lcyi;Ldqq;ILnet/minecraft/server/Entity;FFFFFF)V render
	a (Lcyi;Ldqq;ILnet/minecraft/server/EntityLiving;FFFFFF)V render
dzh net/minecraft/client/renderer/entity/layers/StrayClothingLayer
	a STRAY_CLOTHES_LOCATION
	b layerModel
	a (Lcyi;Ldqq;ILnet/minecraft/server/Entity;FFFFFF)V render
	a (Lcyi;Ldqq;ILnet/minecraft/server/EntityInsentient;FFFFFF)V render
dzi net/minecraft/client/renderer/entity/layers/StuckInBodyLayer
	a (Lcyi;Ldqq;ILnet/minecraft/server/Entity;FFFF)V renderStuckItem
	a (Lcyi;Ldqq;ILnet/minecraft/server/Entity;FFFFFF)V render
	a (Lcyi;Ldqq;ILnet/minecraft/server/EntityLiving;FFFFFF)V render
	a (Lnet/minecraft/server/EntityLiving;)I numStuck
dzj net/minecraft/client/renderer/entity/layers/TropicalFishPatternLayer
	a modelA
	b modelB
	a (Lcyi;Ldqq;ILnet/minecraft/server/Entity;FFFFFF)V render
	a (Lcyi;Ldqq;ILnet/minecraft/server/EntityTropicalFish;FFFFFF)V render
dzk net/minecraft/client/renderer/entity/layers/VillagerProfessionLayer
	a LEVEL_LOCATIONS
	b typeHatCache
	c professionHatCache
	d resourceManager
	e path
	a (Lcyi;Ldqq;ILnet/minecraft/server/Entity;FFFFFF)V render
	a (Lcyi;Ldqq;ILnet/minecraft/server/EntityLiving;FFFFFF)V render
	a (Lit/unimi/dsi/fastutil/objects/Object2ObjectMap;Ljava/lang/String;Lnet/minecraft/server/RegistryBlocks;Ljava/lang/Object;)Lebi$a; getHatData
	a (Ljava/lang/String;Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/MinecraftKey; getResourceLocation
	a (Lnet/minecraft/server/IResourceManager;)V onResourceManagerReload
dzl net/minecraft/client/renderer/entity/layers/WitchItemLayer
	a (Lcyi;Ldqq;ILnet/minecraft/server/Entity;FFFFFF)V render
	a (Lcyi;Ldqq;ILnet/minecraft/server/EntityLiving;FFFFFF)V render
dzm net/minecraft/client/renderer/entity/layers/WitherArmorLayer
	a WITHER_ARMOR_LOCATION
	b model
	a ()Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (F)F xOffset
	b ()Ldkx; model
dzn net/minecraft/client/renderer/entity/layers/WolfCollarLayer
	a WOLF_COLLAR_LOCATION
	a (Lcyi;Ldqq;ILnet/minecraft/server/Entity;FFFFFF)V render
	a (Lcyi;Ldqq;ILnet/minecraft/server/EntityWolf;FFFFFF)V render
dzq net/minecraft/client/renderer/entity/player/PlayerRenderer
	a (Lcyi;Ldqq;ILdpv;)V renderRightHand
	a (Lcyi;Ldqq;ILdpv;Ldnf;Ldnf;)V renderHand
	a (Ldpv;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Ldpv;F)Lnet/minecraft/server/Vec3D; getRenderOffset
	a (Ldpv;FFLcyi;Ldqq;I)V render
	a (Ldpv;Lcyi;F)V scale
	a (Ldpv;Lcyi;FFF)V setupRotations
	a (Ldpv;Ljava/lang/String;Lcyi;Ldqq;I)V renderNameTag
	a (Ldpv;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumHand;)Ldlg$a; getArmPose
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/MinecraftKey; getTextureLocation
	a (Lnet/minecraft/server/Entity;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/Entity;Ljava/lang/String;Lcyi;Ldqq;I)V renderNameTag
	a (Lnet/minecraft/server/EntityLiving;FFLcyi;Ldqq;I)V render
	a (Lnet/minecraft/server/EntityLiving;Lcyi;F)V scale
	a (Lnet/minecraft/server/EntityLiving;Lcyi;FFF)V setupRotations
	b (Lcyi;Ldqq;ILdpv;)V renderLeftHand
	b (Ldpv;)V setModelProperties
	b (Lnet/minecraft/server/Entity;F)Lnet/minecraft/server/Vec3D; getRenderOffset
dzt net/minecraft/client/renderer/texture/AbstractTexture
	a id
	b blur
	c mipmap
	a (Leah;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/MinecraftKey;Ljava/util/concurrent/Executor;)V reset
	a (Lnet/minecraft/server/IResourceManager;)V load
	a (ZZ)V setFilter
	b ()I getId
	c ()V releaseId
	d ()V bind
dzu net/minecraft/client/renderer/texture/AtlasSet
	a atlases
	a (Lebv;)Leag; getSprite
	a (Lnet/minecraft/server/MinecraftKey;)Leaf; getAtlas
dzv net/minecraft/client/renderer/texture/DynamicTexture
	d pixels
	a ()V upload
	a (Lcxo;)V setPixels
	a (Lnet/minecraft/server/IResourceManager;)V load
	e ()Lcxo; getPixels
dzw net/minecraft/client/renderer/texture/HttpTexture
	e LOGGER
	f file
	g urlString
	h processLegacySkin
	i onDownloaded
	j future
	k uploaded
	a (Lcxo;)V loadCallback
	a (Lcxo;IIII)V doNotchTransparencyHack
	a (Ljava/io/InputStream;)Lcxo; load
	a (Lnet/minecraft/server/IResourceManager;)V load
	b (Lcxo;)V upload
	b (Lcxo;IIII)V setNoAlpha
	c (Lcxo;)Lcxo; processLegacySkin
dzx net/minecraft/client/renderer/texture/LayeredTexture
	d layerPaths
	e LOGGER
	a (Lcxo;)V doLoad
	a (Lnet/minecraft/server/IResourceManager;)V load
dzy net/minecraft/client/renderer/texture/MipmapGenerator
	a POW22
	a (I)F getPow22
	a (IIIII)I gammaBlend
	a (IIIIZ)I alphaBlend
	a (Lcxo;I)[Lcxo; generateMipLevels
dzz net/minecraft/client/renderer/texture/MissingTextureAtlasSprite
	b MISSING_TEXTURE_LOCATION
	c missingTexture
	d MISSING_IMAGE_DATA
	e INFO
	a ()Lnet/minecraft/server/MinecraftKey; getLocation
	a (Leaf;IIIII)Ldzz; newInstance
	b ()Leag$a; info
	c ()Ldzv; getTexture
eaa net/minecraft/client/renderer/texture/OverlayTexture
	a NO_OVERLAY
	b texture
	a ()V setupOverlayColor
	a (F)I u
	a (FZ)I pack
	a (II)I pack
	a (Z)I v
	b ()V teardownOverlayColor
eab net/minecraft/client/renderer/texture/PreloadedTexture
	e future
	a ()Ljava/util/concurrent/CompletableFuture; getFuture
	a (Leah;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/MinecraftKey;Ljava/util/concurrent/Executor;)V reset
	a (Ljava/util/concurrent/Executor;)Ljava/util/concurrent/Executor; executor
	b (Lnet/minecraft/server/IResourceManager;)Leac$a; getTextureImage
eac net/minecraft/client/renderer/texture/SimpleTexture
	d location
	e LOGGER
	a (Lcxo;ZZ)V doLoad
	a (Lnet/minecraft/server/IResourceManager;)V load
	b (Lnet/minecraft/server/IResourceManager;)Leac$a; getTextureImage
eac$a net/minecraft/client/renderer/texture/SimpleTexture$TextureImage
	a metadata
	b image
	c exception
	a ()Lebp; getTextureMetadata
	a (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/MinecraftKey;)Leac$a; load
	b ()Lcxo; getImage
	c ()V throwIfError
ead net/minecraft/client/renderer/texture/Stitcher
	a HOLDER_COMPARATOR
	b mipLevel
	c texturesToBeStitched
	d storage
	e storageX
	f storageY
	g maxWidth
	h maxHeight
	a ()I getWidth
	a (Lead$a;)Z addToStorage
	a (Lead$c;)V gatherSprites
	a (Leag$a;)V registerSprite
	b ()I getHeight
	b (II)I smallestFittingMinTexel
	b (Lead$a;)Z expand
	c ()V stitch
ead$a net/minecraft/client/renderer/texture/Stitcher$Holder
	a spriteInfo
	b width
	c height
ead$b net/minecraft/client/renderer/texture/Stitcher$Region
	a originX
	b originY
	c width
	d height
	e subSlots
	f holder
	a ()Lead$a; getHolder
	a (Lead$a;)Z add
	a (Ljava/util/function/Consumer;)V walk
	b ()I getX
	c ()I getY
ead$c net/minecraft/client/renderer/texture/Stitcher$SpriteLoader
eae net/minecraft/client/renderer/texture/StitcherException
	a allSprites
	a ()Ljava/util/Collection; getAllSprites
eaf net/minecraft/client/renderer/texture/TextureAtlas
	d LOCATION_BLOCKS
	e LOCATION_PARTICLES
	f LOGGER
	g animatedTextures
	h sprites
	i texturesByName
	j location
	k maxSupportedTextureSize
	a ()V cycleAnimationFrames
	a (Leaf$a;)V reload
	a (Ljava/lang/String;)Leag; getTexture
	a (Ljava/util/Set;Lnet/minecraft/server/MinecraftKey;)V register
	a (Lnet/minecraft/server/IResourceManager;)V load
	a (Lnet/minecraft/server/IResourceManager;Lead;I)Ljava/util/List; getLoadedSprites
	a (Lnet/minecraft/server/IResourceManager;Leag$a;IIIII)Leag; load
	a (Lnet/minecraft/server/IResourceManager;Ljava/util/Set;)Ljava/util/Collection; getBasicSpriteInfos
	a (Lnet/minecraft/server/IResourceManager;Ljava/util/stream/Stream;Lnet/minecraft/server/GameProfilerFiller;I)Leaf$a; prepareToStitch
	a (Lnet/minecraft/server/MinecraftKey;)Leag; getSprite
	b (Leaf$a;)V updateFilter
	b (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/MinecraftKey; getResourceLocation
	e ()V tick
	f ()V clearTextureData
	g ()Lnet/minecraft/server/MinecraftKey; location
eaf$a net/minecraft/client/renderer/texture/TextureAtlas$Preparations
	a sprites
	b width
	c height
	d mipLevel
	e regions
eag net/minecraft/client/renderer/texture/TextureAtlasSprite
	a mainImage
	b atlas
	c info
	d metadata
	e framesX
	f framesY
	g interpolationData
	h x
	i y
	j u0
	k u1
	l v0
	m v1
	n frame
	o subFrame
	a ()F atlasSize
	a (D)F getU
	a (F)F getUOffset
	a (I)V upload
	a (III)Z isTransparent
	a (II[Lcxo;)V upload
	a (Lcyl;)Lcyl; wrap
	a ([[I)V fixupMipTransparency
	b (D)F getV
	b (F)F getVOffset
	d ()I getX
	e ()I getY
	f ()I getWidth
	g ()I getHeight
	h ()F getU0
	i ()F getU1
	j ()F getV0
	k ()F getV1
	l ()Lnet/minecraft/server/MinecraftKey; getName
	m ()Leaf; atlas
	n ()I getFrameCount
	o ()V uploadFirstFrame
	p ()F uvShrinkRatio
	q ()V cycleFrames
	r ()Z isAnimation
eag$a net/minecraft/client/renderer/texture/TextureAtlasSprite$Info
	a name
	b width
	c height
	d metadata
	a ()Lnet/minecraft/server/MinecraftKey; name
	b ()I width
	c ()I height
eag$b net/minecraft/client/renderer/texture/TextureAtlasSprite$InterpolationData
	b activeFrame
	a ()V uploadInterpolatedFrame
	a (DII)I mix
	a (IIII)I getPixel
eah net/minecraft/client/renderer/texture/TextureManager
	a INTENTIONAL_MISSING_TEXTURE
	b LOGGER
	c byPath
	d tickableTextures
	e prefixRegister
	f resourceManager
	a (Ljava/lang/Runnable;)V execute
	a (Ljava/lang/String;Ldzv;)Lnet/minecraft/server/MinecraftKey; register
	a (Lnet/minecraft/server/MinecraftKey;)V bind
	a (Lnet/minecraft/server/MinecraftKey;Ldzt;)Z register
	a (Lnet/minecraft/server/MinecraftKey;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; preload
	a (Lyw$a;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;Lnet/minecraft/server/GameProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; reload
	b (Lnet/minecraft/server/MinecraftKey;)Ldzt; getTexture
	c (Lnet/minecraft/server/MinecraftKey;)V release
	d (Lnet/minecraft/server/MinecraftKey;)V _bind
	e ()V tick
eai net/minecraft/client/renderer/texture/Tickable
	e ()V tick
eak net/minecraft/client/resources/AssetIndex
	a LOGGER
	b rootFiles
	c namespacedFiles
	a (Ljava/lang/String;)Ljava/io/File; getRootFile
	a (Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; getFiles
	a (Lnet/minecraft/server/MinecraftKey;)Ljava/io/File; getFile
eal net/minecraft/client/resources/ClientPackSource
	a LOGGER
	b SHA1
	c vanillaPack
	d serverPackDir
	e downloadLock
	f assetIndex
	g currentDownload
	h serverPack
	a ()Lnet/minecraft/server/ResourcePackVanilla; getVanillaPack
	a (Ljava/io/File;)Ljava/util/concurrent/CompletableFuture; setServerPack
	a (Ljava/lang/String;Ljava/io/File;)Z checkHash
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; downloadAndSelectResourcePack
	a (Ljava/util/Map;Lyt$b;)V loadPacks
	b ()Ljava/util/Map; getDownloadHeaders
	b (Ljava/io/File;)V deleteQuietly
	c ()V clearServerPack
	d ()V clearOldDownloads
eam net/minecraft/client/resources/DefaultClientResourcePack
	d assetIndex
	a (Ljava/lang/String;)Ljava/io/InputStream; getResourceAsStream
	a (Lnet/minecraft/server/EnumResourcePackType;Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; getResources
	b (Lnet/minecraft/server/EnumResourcePackType;Lnet/minecraft/server/MinecraftKey;)Z hasResource
	c (Lnet/minecraft/server/EnumResourcePackType;Lnet/minecraft/server/MinecraftKey;)Ljava/io/InputStream; getResourceAsStream
ean net/minecraft/client/resources/DefaultPlayerSkin
	a STEVE_SKIN_LOCATION
	b ALEX_SKIN_LOCATION
	a ()Lnet/minecraft/server/MinecraftKey; getDefaultSkin
	a (Ljava/util/UUID;)Lnet/minecraft/server/MinecraftKey; getDefaultSkin
	b (Ljava/util/UUID;)Ljava/lang/String; getSkinModelName
	c (Ljava/util/UUID;)Z isAlexDefault
eao net/minecraft/client/resources/DirectAssetIndex
	b assetsDirectory
	a (Ljava/lang/String;)Ljava/io/File; getRootFile
	a (Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; getFiles
	a (Lnet/minecraft/server/MinecraftKey;)Ljava/io/File; getFile
eap net/minecraft/client/resources/FoliageColorReloadListener
	a LOCATION
	a (Ljava/lang/Object;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	a (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)[I prepare
	a ([ILnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	b (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)Ljava/lang/Object; prepare
eaq net/minecraft/client/resources/GrassColorReloadListener
	a LOCATION
	a (Ljava/lang/Object;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	a (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)[I prepare
	a ([ILnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	b (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)Ljava/lang/Object; prepare
ear net/minecraft/client/resources/LegacyResourcePackAdapter
	a V3
	b source
	c patches
	a ()Ljava/lang/String; getName
	a (Lnet/minecraft/server/EnumResourcePackType;)Ljava/util/Set; getNamespaces
	a (Lnet/minecraft/server/EnumResourcePackType;Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; getResources
	a (Lnet/minecraft/server/EnumResourcePackType;Lnet/minecraft/server/MinecraftKey;)Ljava/io/InputStream; getResource
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/MinecraftKey; toMetaLocation
	a (Lnet/minecraft/server/ResourcePackMetaParser;)Ljava/lang/Object; getMetadataSection
	b (Ljava/lang/String;)Ljava/io/InputStream; getRootResource
	b (Lnet/minecraft/server/EnumResourcePackType;Lnet/minecraft/server/MinecraftKey;)Z hasResource
	b (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/MinecraftKey; map
eas net/minecraft/client/resources/LegacyStuffWrapper
	a (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/MinecraftKey;)[I getPixels
eat net/minecraft/client/resources/MobEffectTextureManager
	a ()Ljava/util/stream/Stream; getResourcesToLoad
	a (Lnet/minecraft/server/MobEffectList;)Leag; get
eau net/minecraft/client/resources/PackAdapterV4
	a SHIELD_BASE
	b BANNER_BASE
	c OLD_IRON_GOLEM_LOCATION
	d CHESTS
	e PATTERNS
	f SHIELDS
	g BANNERS
	h pack
	a ()Ljava/lang/String; getName
	a (Lcxo;Lcxo;IIIIIIIZZ)V copyRect
	a (Ljava/io/InputStream;)Ljava/io/InputStream; fixConduitEyeTexture
	a (Ljava/io/InputStream;Ljava/io/InputStream;IIIII)Ljava/io/InputStream; fixPattern
	a (Lnet/minecraft/server/EnumResourcePackType;)Ljava/util/Set; getNamespaces
	a (Lnet/minecraft/server/EnumResourcePackType;Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; getResources
	a (Lnet/minecraft/server/EnumResourcePackType;Lnet/minecraft/server/MinecraftKey;)Ljava/io/InputStream; getResource
	a (Lnet/minecraft/server/ResourcePackMetaParser;)Ljava/lang/Object; getMetadataSection
	b (Ljava/io/InputStream;)Ljava/io/InputStream; fixLeftChest
	b (Ljava/lang/String;)Ljava/io/InputStream; getRootResource
	b (Lnet/minecraft/server/EnumResourcePackType;Lnet/minecraft/server/MinecraftKey;)Z hasResource
	c (Ljava/io/InputStream;)Ljava/io/InputStream; fixRightChest
	d (Ljava/io/InputStream;)Ljava/io/InputStream; fixSingleChest
eav net/minecraft/client/resources/PaintingTextureManager
	a BACK_SPRITE_LOCATION
	a ()Ljava/util/stream/Stream; getResourcesToLoad
	a (Lnet/minecraft/server/Paintings;)Leag; get
	b ()Leag; getBackSprite
eaw net/minecraft/client/resources/SkinManager
	a textureManager
	b skinsDirectory
	c sessionService
	d insecureSkinCache
	a (Lcom/mojang/authlib/GameProfile;)Ljava/util/Map; getInsecureSkinInformation
	a (Lcom/mojang/authlib/GameProfile;Leaw$a;Z)V registerSkins
	a (Lcom/mojang/authlib/minecraft/MinecraftProfileTexture;Lcom/mojang/authlib/minecraft/MinecraftProfileTexture$Type;)Lnet/minecraft/server/MinecraftKey; registerTexture
	a (Lcom/mojang/authlib/minecraft/MinecraftProfileTexture;Lcom/mojang/authlib/minecraft/MinecraftProfileTexture$Type;Leaw$a;)Lnet/minecraft/server/MinecraftKey; registerTexture
eaw$a net/minecraft/client/resources/SkinManager$SkinTextureCallback
eax net/minecraft/client/resources/SplashManager
	a SPLASHES_LOCATION
	b RANDOM
	c splashes
	d user
	a ()Ljava/lang/String; getSplash
	a (Ljava/lang/Object;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	a (Ljava/util/List;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	a (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)Ljava/util/List; prepare
	b (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)Ljava/lang/Object; prepare
eay net/minecraft/client/resources/TextureAtlasHolder
	a textureAtlas
	b prefix
	a ()Ljava/util/stream/Stream; getResourcesToLoad
	a (Leaf$a;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	a (Ljava/lang/Object;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	a (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)Leaf$a; prepare
	a (Lnet/minecraft/server/MinecraftKey;)Leag; getSprite
	b (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)Ljava/lang/Object; prepare
	b (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/MinecraftKey; resolveLocation
eaz net/minecraft/client/resources/UnopenedResourcePack
	a icon
	b iconLocation
	a (Leah;)V bindIcon
	i ()Lcxo; getIcon
eba net/minecraft/client/resources/language/I18n
	a locale
	a (Lebd;)V setLocale
	a (Ljava/lang/String;)Z exists
	a (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; get
ebb net/minecraft/client/resources/language/Language
	a code
	b region
	c name
	d bidirectional
	a ()Z isBidirectional
	a (Lebb;)I compareTo
ebc net/minecraft/client/resources/language/LanguageManager
	a LOCALE
	b LOGGER
	c currentCode
	d languages
	a ()Z isBidirectional
	a (Lebb;)V setSelected
	a (Ljava/lang/String;)Lebb; getLanguage
	a (Ljava/util/List;)V reload
	a (Lnet/minecraft/server/IResourceManager;)V onResourceManagerReload
	b ()Lebb; getSelected
	c ()Ljava/util/SortedSet; getLanguages
ebd net/minecraft/client/resources/language/Locale
	a storage
	b GSON
	c LOGGER
	d UNSUPPORTED_FORMAT_PATTERN
	a (Ljava/io/InputStream;)V appendFrom
	a (Ljava/lang/String;)Z has
	a (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; get
	a (Ljava/util/List;)V appendFrom
	a (Lnet/minecraft/server/IResourceManager;Ljava/util/List;)V loadFrom
	b (Ljava/lang/String;)Ljava/lang/String; getOrDefault
ebf net/minecraft/client/resources/metadata/animation/AnimationFrame
	a index
	b time
	a ()Z isTimeUnknown
	b ()I getTime
	c ()I getIndex
ebg net/minecraft/client/resources/metadata/animation/AnimationMetadataSection
	a SERIALIZER
	b EMPTY
	c frames
	d frameWidth
	e frameHeight
	f defaultFrameTime
	g interpolatedFrames
	a ()I getFrameCount
	a (I)I getFrameHeight
	a (II)Lcom/mojang/datafixers/util/Pair; getFrameSize
	b ()I getDefaultFrameTime
	b (I)I getFrameWidth
	b (II)Z isDivisionInteger
	c ()Z isInterpolatedFrames
	c (I)I getFrameTime
	c (II)Lcom/mojang/datafixers/util/Pair; calculateFrameSize
	d ()Ljava/util/Set; getUniqueFrameIndices
	d (I)Z hasCustomFrameTime
	e (I)I getFrameIndex
	f (I)Lebf; getFrame
ebh net/minecraft/client/resources/metadata/animation/AnimationMetadataSectionSerializer
	a ()Ljava/lang/String; getMetadataSectionName
	a (ILcom/google/gson/JsonElement;)Lebf; getFrame
	a (Lcom/google/gson/JsonObject;)Ljava/lang/Object; fromJson
	b (Lcom/google/gson/JsonObject;)Lebg; fromJson
ebi net/minecraft/client/resources/metadata/animation/VillagerMetaDataSection
	a SERIALIZER
	b hat
	a ()Lebi$a; getHat
ebi$a net/minecraft/client/resources/metadata/animation/VillagerMetaDataSection$Hat
	a NONE
	b PARTIAL
	c FULL
	d BY_NAME
	e name
	f $VALUES
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lebi$a; getByName
ebj net/minecraft/client/resources/metadata/animation/VillagerMetadataSectionSerializer
	a ()Ljava/lang/String; getMetadataSectionName
	a (Lcom/google/gson/JsonObject;)Ljava/lang/Object; fromJson
	b (Lcom/google/gson/JsonObject;)Lebi; fromJson
ebl net/minecraft/client/resources/metadata/language/LanguageMetadataSection
	a SERIALIZER
	b languages
	a ()Ljava/util/Collection; getLanguages
ebm net/minecraft/client/resources/metadata/language/LanguageMetadataSectionSerializer
	a ()Ljava/lang/String; getMetadataSectionName
	a (Lcom/google/gson/JsonObject;)Ljava/lang/Object; fromJson
	b (Lcom/google/gson/JsonObject;)Lebl; fromJson
ebp net/minecraft/client/resources/metadata/texture/TextureMetadataSection
	a SERIALIZER
	b blur
	c clamp
	a ()Z isBlur
	b ()Z isClamp
ebq net/minecraft/client/resources/metadata/texture/TextureMetadataSectionSerializer
	a ()Ljava/lang/String; getMetadataSectionName
	a (Lcom/google/gson/JsonObject;)Ljava/lang/Object; fromJson
	b (Lcom/google/gson/JsonObject;)Lebp; fromJson
ebs net/minecraft/client/resources/model/BakedModel
	a ()Z useAmbientOcclusion
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Ljava/util/Random;)Ljava/util/List; getQuads
	b ()Z isGui3d
	c ()Z isCustomRenderer
	d ()Leag; getParticleIcon
	e ()Ldrw; getTransforms
	f ()Ldru; getOverrides
ebt net/minecraft/client/resources/model/BlockModelRotation
	a X0_Y0
	b X0_Y90
	c X0_Y180
	d X0_Y270
	e X90_Y0
	f X90_Y90
	g X90_Y180
	h X90_Y270
	i X180_Y0
	j X180_Y90
	k X180_Y180
	l X180_Y270
	m X270_Y0
	n X270_Y90
	o X270_Y180
	p X270_Y270
	q BY_INDEX
	r index
	s rotation
	t xSteps
	u ySteps
	v $VALUES
	a (II)Lebt; by
	b ()Ld; getRotation
	b (II)I getIndex
ebu net/minecraft/client/resources/model/BuiltInModel
	a itemTransforms
	b overrides
	c particleTexture
	a ()Z useAmbientOcclusion
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Ljava/util/Random;)Ljava/util/List; getQuads
	b ()Z isGui3d
	c ()Z isCustomRenderer
	d ()Leag; getParticleIcon
	e ()Ldrw; getTransforms
	f ()Ldru; getOverrides
ebv net/minecraft/client/resources/model/Material
	a atlasLocation
	b texture
	c renderType
	a ()Lnet/minecraft/server/MinecraftKey; atlasLocation
	a (Ldqq;Ljava/util/function/Function;)Lcyl; buffer
	a (Ljava/util/function/Function;)Ldqy; renderType
	b ()Lnet/minecraft/server/MinecraftKey; texture
	c ()Leag; sprite
ebw net/minecraft/client/resources/model/ModelBakery
	A blockColors
	B loadingStack
	C context
	D unbakedCache
	E bakedCache
	F topLevelModels
	G bakedTopLevelModels
	H atlasPreparations
	I nextModelGroup
	J modelGroups
	a FIRE_0
	b FIRE_1
	c LAVA_FLOW
	d WATER_FLOW
	e WATER_OVERLAY
	f BANNER_BASE
	g SHIELD_BASE
	h NO_PATTERN_SHIELD
	i DESTROY_STAGES
	j BREAKING_LOCATIONS
	k DESTROY_TYPES
	l MISSING_MODEL_LOCATION
	m MISSING_MODEL_MESH
	n GENERATION_MARKER
	o BLOCK_ENTITY_MARKER
	p UNREFERENCED_TEXTURES
	q LOGGER
	r MISSING_MODEL_LOCATION_STRING
	s BUILTIN_MODELS
	t COMMA_SPLITTER
	u EQUAL_SPLITTER
	v ITEM_FRAME_FAKE_DEFINITION
	w ITEM_MODEL_GENERATOR
	x STATIC_DEFINITIONS
	y resourceManager
	z atlasSet
	a ()Ljava/util/Map; getBakedTopLevelModels
	a (Leah;Lnet/minecraft/server/GameProfilerFiller;)Ldzu; uploadTextures
	a (Leby;)V loadTopLevel
	a (Ljava/lang/Iterable;)V registerModelGroup
	a (Lnet/minecraft/server/BlockStateList;Ljava/lang/String;)Ljava/util/function/Predicate; predicate
	a (Lnet/minecraft/server/IBlockState;Ljava/lang/String;)Ljava/lang/Comparable; getValueHelper
	a (Lnet/minecraft/server/MinecraftKey;)Lecc; getModel
	a (Lnet/minecraft/server/MinecraftKey;Lebz;)Lebs; bake
	a (Lnet/minecraft/server/MinecraftKey;Lecc;)V cacheAndQueueDependencies
	b ()Lit/unimi/dsi/fastutil/objects/Object2IntMap; getModelGroups
	b (Lnet/minecraft/server/MinecraftKey;)V loadModel
	c (Lnet/minecraft/server/MinecraftKey;)Ldrp; loadBlockModel
ebw$a net/minecraft/client/resources/model/ModelBakery$BlockStateDefinitionException
ebw$b net/minecraft/client/resources/model/ModelBakery$ModelGroupKey
	a models
	b coloringValues
	a (Lnet/minecraft/server/IBlockData;Ldsc;Ljava/util/Collection;)Lebw$b; create
	a (Lnet/minecraft/server/IBlockData;Lecc;Ljava/util/Collection;)Lebw$b; create
	a (Lnet/minecraft/server/IBlockData;Ljava/util/Collection;)Ljava/util/List; getColoringValues
ebx net/minecraft/client/resources/model/ModelManager
	a bakedRegistry
	b atlases
	c blockModelShaper
	d textureManager
	e blockColors
	f maxMipmapLevels
	g missingModel
	h modelGroups
	a ()Lebs; getMissingModel
	a (I)V updateMaxMipLevel
	a (Lebw;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	a (Leby;)Lebs; getModel
	a (Ljava/lang/Object;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;)Z requiresRender
	a (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)Lebw; prepare
	a (Lnet/minecraft/server/MinecraftKey;)Leaf; getAtlas
	b ()Ldrg; getBlockModelShaper
	b (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)Ljava/lang/Object; prepare
eby net/minecraft/client/resources/model/ModelResourceLocation
	c variant
	c ()Ljava/lang/String; getVariant
	c (Ljava/lang/String;)[Ljava/lang/String; decompose
ebz net/minecraft/client/resources/model/ModelState
	b ()Ld; getRotation
	c ()Z isUvLocked
eca net/minecraft/client/resources/model/MultiPartBakedModel
	a hasAmbientOcclusion
	b isGui3d
	c particleIcon
	d transforms
	e overrides
	f selectors
	g selectorCache
	a ()Z useAmbientOcclusion
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Ljava/util/Random;)Ljava/util/List; getQuads
	b ()Z isGui3d
	c ()Z isCustomRenderer
	d ()Leag; getParticleIcon
	e ()Ldrw; getTransforms
	f ()Ldru; getOverrides
eca$a net/minecraft/client/resources/model/MultiPartBakedModel$Builder
	a selectors
	a ()Lebs; build
	a (Ljava/util/function/Predicate;Lebs;)V add
ecb net/minecraft/client/resources/model/SimpleBakedModel
	a unculledFaces
	b culledFaces
	c hasAmbientOcclusion
	d isGui3d
	e particleIcon
	f transforms
	g overrides
	a ()Z useAmbientOcclusion
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Ljava/util/Random;)Ljava/util/List; getQuads
	b ()Z isGui3d
	c ()Z isCustomRenderer
	d ()Leag; getParticleIcon
	e ()Ldrw; getTransforms
	f ()Ldru; getOverrides
ecb$a net/minecraft/client/resources/model/SimpleBakedModel$Builder
	a unculledFaces
	b culledFaces
	c overrides
	d hasAmbientOcclusion
	e particleIcon
	f isGui3d
	g transforms
	a ()Lecb$a; item
	a (Ldrk;)Lecb$a; addUnculledFace
	a (Leag;)Lecb$a; particle
	a (Lnet/minecraft/server/EnumDirection;Ldrk;)Lecb$a; addCulledFace
	b ()Lebs; build
ecc net/minecraft/client/resources/model/UnbakedModel
	a (Lebw;Ljava/util/function/Function;Lebz;Lnet/minecraft/server/MinecraftKey;)Lebs; bake
	a (Ljava/util/function/Function;Ljava/util/Set;)Ljava/util/Collection; getMaterials
	f ()Ljava/util/Collection; getDependencies
ecd net/minecraft/client/resources/model/WeightedBakedModel
	a totalWeight
	b list
	c wrapped
	a ()Z useAmbientOcclusion
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Ljava/util/Random;)Ljava/util/List; getQuads
	b ()Z isGui3d
	c ()Z isCustomRenderer
	d ()Leag; getParticleIcon
	e ()Ldrw; getTransforms
	f ()Ldru; getOverrides
ecd$a net/minecraft/client/resources/model/WeightedBakedModel$Builder
	a list
	a ()Lebs; build
	a (Lebs;I)Lecd$a; add
ecd$b net/minecraft/client/resources/model/WeightedBakedModel$WeightedModel
	b model
ecg net/minecraft/client/resources/sounds/AbstractSoundInstance
	a sound
	b source
	c location
	d volume
	e pitch
	f x
	g y
	h z
	i looping
	j delay
	k attenuation
	l priority
	m relative
	n soundEvent
	a ()Lnet/minecraft/server/MinecraftKey; getLocation
	a (Ledw;)Ledx; resolve
	b ()Lect; getSound
	c ()Lnet/minecraft/server/SoundCategory; getSource
	d ()Z isLooping
	e ()I getDelay
	f ()F getVolume
	g ()F getPitch
	h ()F getX
	i ()F getY
	j ()F getZ
	k ()Lecw$a; getAttenuation
	l ()Z hasPriority
	m ()Z isRelative
ech net/minecraft/client/resources/sounds/AbstractTickableSoundInstance
	n stopped
	n ()Z isStopped
eci net/minecraft/client/resources/sounds/AmbientSoundHandler
	a ()V tick
ecj net/minecraft/client/resources/sounds/BeeAggressiveSoundInstance
	o ()Lech; getAlternativeSoundInstance
	p ()Z shouldSwitchSounds
eck net/minecraft/client/resources/sounds/BeeFlyingSoundInstance
	o ()Lech; getAlternativeSoundInstance
	p ()Z shouldSwitchSounds
ecl net/minecraft/client/resources/sounds/BeeSoundInstance
	o bee
	p hasSwitched
	o ()Lech; getAlternativeSoundInstance
	p ()Z shouldSwitchSounds
	q ()V tick
	r ()Z canStartSilent
	s ()F getMinPitch
	t ()F getMaxPitch
ecm net/minecraft/client/resources/sounds/BubbleColumnAmbientSoundHandler
	a player
	b wasInBubbleColumn
	c firstTick
	a ()V tick
ecn net/minecraft/client/resources/sounds/ElytraOnPlayerSoundInstance
	o player
	p time
	q ()V tick
eco net/minecraft/client/resources/sounds/EntityBoundSoundInstance
	o entity
	q ()V tick
ecp net/minecraft/client/resources/sounds/GuardianAttackSoundInstance
	o guardian
	q ()V tick
ecq net/minecraft/client/resources/sounds/MinecartSoundInstance
	o minecart
	p pitch
	q ()V tick
	r ()Z canStartSilent
ecr net/minecraft/client/resources/sounds/RidingMinecartSoundInstance
	o player
	p minecart
	q ()V tick
	r ()Z canStartSilent
ecs net/minecraft/client/resources/sounds/SimpleSoundInstance
	a (Lnet/minecraft/server/SoundEffect;)Lecs; forMusic
	a (Lnet/minecraft/server/SoundEffect;F)Lecs; forUI
	a (Lnet/minecraft/server/SoundEffect;FF)Lecs; forUI
	a (Lnet/minecraft/server/SoundEffect;FFF)Lecs; forRecord
ect net/minecraft/client/resources/sounds/Sound
	a location
	b volume
	c pitch
	d weight
	e type
	f stream
	g preload
	h attenuationDistance
	a ()Lnet/minecraft/server/MinecraftKey; getLocation
	a (Ledt;)V preloadIfRequired
	b ()Lnet/minecraft/server/MinecraftKey; getPath
	c ()F getVolume
	d ()F getPitch
	e ()I getWeight
	f ()Lect; getSound
	g ()Lect$a; getType
	h ()Z shouldStream
	i ()Z shouldPreload
	j ()I getAttenuationDistance
	k ()Ljava/lang/Object; getSound
ect$a net/minecraft/client/resources/sounds/Sound$Type
	a FILE
	b SOUND_EVENT
	c name
	d $VALUES
	a (Ljava/lang/String;)Lect$a; getByName
ecu net/minecraft/client/resources/sounds/SoundEventRegistration
	a sounds
	b replace
	c subtitle
	a ()Ljava/util/List; getSounds
	b ()Z isReplace
	c ()Ljava/lang/String; getSubtitle
ecv net/minecraft/client/resources/sounds/SoundEventRegistrationSerializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lecu; deserialize
	a (Lcom/google/gson/JsonObject;)Ljava/util/List; getSounds
	a (Lcom/google/gson/JsonObject;Lect$a;)Lect$a; getType
	b (Lcom/google/gson/JsonObject;)Lect; getSound
ecw net/minecraft/client/resources/sounds/SoundInstance
	a ()Lnet/minecraft/server/MinecraftKey; getLocation
	a (Ledw;)Ledx; resolve
	b ()Lect; getSound
	c ()Lnet/minecraft/server/SoundCategory; getSource
	d ()Z isLooping
	e ()I getDelay
	f ()F getVolume
	g ()F getPitch
	h ()F getX
	i ()F getY
	j ()F getZ
	k ()Lecw$a; getAttenuation
	l ()Z hasPriority
	m ()Z isRelative
	r ()Z canStartSilent
ecw$a net/minecraft/client/resources/sounds/SoundInstance$Attenuation
	a NONE
	b LINEAR
	c $VALUES
ecx net/minecraft/client/resources/sounds/TickableSoundInstance
	n ()Z isStopped
	q ()V tick
ecy net/minecraft/client/resources/sounds/UnderwaterAmbientSoundHandler
	a player
	b soundManager
	c tick_delay
	a ()V tick
ecz net/minecraft/client/resources/sounds/UnderwaterAmbientSoundInstances
ecz$a net/minecraft/client/resources/sounds/UnderwaterAmbientSoundInstances$SubSound
	o player
	q ()V tick
ecz$b net/minecraft/client/resources/sounds/UnderwaterAmbientSoundInstances$UnderwaterAmbientSoundInstance
	o player
	p fade
	q ()V tick
edb net/minecraft/client/searchtree/MutableSearchTree
	a ()V clear
	a (Ljava/lang/Object;)V add
	b ()V refresh
edc net/minecraft/client/searchtree/ReloadableIdSearchTree
	a namespaceTree
	b pathTree
	c idGetter
	d contents
	e orderT
	a ()V clear
	a (Ljava/lang/Object;)V add
	a (Ljava/lang/Object;Ljava/lang/Object;)I comparePosition
	a (Ljava/lang/String;)Ljava/util/List; search
	b ()V refresh
	b (Ljava/lang/Object;)V index
edc$a net/minecraft/client/searchtree/ReloadableIdSearchTree$IntersectionIterator
	a firstIterator
	b secondIterator
	c orderT
edd net/minecraft/client/searchtree/ReloadableSearchTree
	c tree
	d filler
	a (Ljava/lang/String;)Ljava/util/List; search
	b ()V refresh
	b (Ljava/lang/Object;)V index
edd$a net/minecraft/client/searchtree/ReloadableSearchTree$MergingUniqueIterator
	a firstIterator
	b secondIterator
	c orderT
ede net/minecraft/client/searchtree/SearchRegistry
	a CREATIVE_NAMES
	b CREATIVE_TAGS
	c RECIPE_COLLECTIONS
	d searchTrees
	a (Lede$a;)Ledb; getTree
	a (Lede$a;Ledb;)V register
	a (Lnet/minecraft/server/IResourceManager;)V onResourceManagerReload
ede$a net/minecraft/client/searchtree/SearchRegistry$Key
edf net/minecraft/client/searchtree/SearchTree
	a (Ljava/lang/String;)Ljava/util/List; search
edg net/minecraft/client/searchtree/SuffixArray
	a list
	b DEBUG_COMPARISONS
	c DEBUG_ARRAY
	d LOGGER
	e chars
	f wordStarts
	g suffixToT
	h offsets
	i maxStringLength
	a ()V generate
	a (I)Ljava/lang/String; getString
	a (Ljava/lang/Object;Ljava/lang/String;)V add
	a (Ljava/lang/String;)Ljava/util/List; search
	a (Ljava/lang/String;I)I compare
	b ()V print
edi net/minecraft/client/server/IntegratedPlayerList
	a playerData
	a (Ljava/net/SocketAddress;Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/server/IChatBaseComponent; canPlayerLogin
	b ()Ledj; getServer
	b (Lnet/minecraft/server/EntityPlayer;)V save
	c ()Lnet/minecraft/server/MinecraftServer; getServer
	r ()Lnet/minecraft/server/NBTTagCompound; getSingleplayerData
edj net/minecraft/client/server/IntegratedServer
	a LOGGER
	h minecraft
	i settings
	j paused
	k publishedPort
	l lanPinger
	m uuid
	I_ ()Z shouldInformAdmins
	L ()I getPort
	V ()Z isSnooperEnabled
	a (Lcom/mojang/authlib/GameProfile;)Z isSingleplayerOwner
	a (Ljava/lang/String;Ljava/lang/String;JLnet/minecraft/server/WorldType;Lcom/google/gson/JsonElement;)V loadLevel
	a (Ljava/util/function/BooleanSupplier;)V tickServer
	a (Lnet/minecraft/server/CrashReport;)V onServerCrash
	a (Lnet/minecraft/server/EnumGamemode;)V setDefaultGameMode
	a (Lnet/minecraft/server/EnumGamemode;ZI)Z publishServer
	a (Lnet/minecraft/server/MojangStatisticsGenerator;)V populateSnooper
	a (Z)V halt
	b (Ljava/util/UUID;)V setUUID
	b (Lnet/minecraft/server/CrashReport;)Lnet/minecraft/server/CrashReport; fillReport
	d ()Z initServer
	f ()Z canGenerateStructures
	g ()Lnet/minecraft/server/EnumGamemode; getDefaultGameType
	h ()Lnet/minecraft/server/EnumDifficulty; getDefaultDifficulty
	i ()Z isHardcore
	j ()I getOperatorUserPermissionLevel
	k ()I getFunctionCompilationLevel
	l ()Z shouldRconBroadcast
	m ()Z isDedicatedServer
	n ()Z isEpollEnabled
	o ()Z isCommandBlockEnabled
	p ()Z isPublished
	r ()V stopServer
	y ()Ljava/io/File; getServerDirectory
edk net/minecraft/client/server/LanServer
	a motd
	b address
	c pingTime
	a ()Ljava/lang/String; getMotd
	b ()Ljava/lang/String; getAddress
	c ()V updatePingTime
	d ()Z isUpToDate
edl net/minecraft/client/server/LanServerDetection
	a UNIQUE_THREAD_ID
	b LOGGER
edl$a net/minecraft/client/server/LanServerDetection$LanServerDetector
	a serverList
	b pingGroup
	c socket
edl$b net/minecraft/client/server/LanServerDetection$LanServerList
	a servers
	b isDirty
	a ()Z isDirty
	a (Ljava/lang/String;Ljava/net/InetAddress;)V addServer
	b ()V markClean
	c ()Ljava/util/List; getServers
edm net/minecraft/client/server/LanServerPinger
	a UNIQUE_THREAD_ID
	b LOGGER
	c motd
	d socket
	e isRunning
	f serverAddress
	a (Ljava/lang/String;)Ljava/lang/String; parseMotd
	a (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; createPingString
	b (Ljava/lang/String;)Ljava/lang/String; parseAddress
edp net/minecraft/client/sounds/AudioStream
	a ()Ljavax/sound/sampled/AudioFormat; getFormat
	a (I)Ljava/nio/ByteBuffer; read
	b ()Ljava/nio/ByteBuffer; readAll
edq net/minecraft/client/sounds/ChannelAccess
	a channels
	b library
	c executor
	a ()V scheduleTick
	a (Lcwq$c;)Ledq$a; createHandle
	a (Ljava/util/function/Consumer;)V executeOnChannels
	b ()V clear
edq$a net/minecraft/client/sounds/ChannelAccess$ChannelHandle
	b channel
	c stopped
	a ()Z isStopped
	a (Ljava/util/function/Consumer;)V execute
	b ()V release
edr net/minecraft/client/sounds/MusicManager
	a random
	b minecraft
	c currentMusic
	d nextSongDelay
	a ()V tick
	a (Ledr$a;)V startPlaying
	b ()V stopPlaying
	b (Ledr$a;)Z isPlayingMusic
edr$a net/minecraft/client/sounds/MusicManager$Music
	a MENU
	b GAME
	c CREATIVE
	d CREDITS
	e NETHER
	f END_BOSS
	g END
	h UNDER_WATER
	i event
	j minDelay
	k maxDelay
	l $VALUES
	a ()Lnet/minecraft/server/SoundEffect; getEvent
	b ()I getMinDelay
	c ()I getMaxDelay
eds net/minecraft/client/sounds/SoundBufferLibrary
	a resourceManager
	b cache
	a ()V clear
	a (Ljava/util/Collection;)Ljava/util/concurrent/CompletableFuture; preload
	a (Lnet/minecraft/server/MinecraftKey;)Ljava/util/concurrent/CompletableFuture; getCompleteBuffer
	b (Lnet/minecraft/server/MinecraftKey;)Ljava/util/concurrent/CompletableFuture; getStream
edt net/minecraft/client/sounds/SoundEngine
	a MARKER
	b LOGGER
	c ONLY_WARN_ONCE
	d soundManager
	e options
	f loaded
	g library
	h listener
	i soundBuffers
	j executor
	k channelAccess
	l tickCount
	m instanceToChannel
	n instanceBySource
	o tickingSounds
	p queuedSounds
	q soundDeleteTime
	r listeners
	s queuedTickableSounds
	t preloadQueue
	a ()V reload
	a (Ldaz;)V updateSource
	a (Lect;)V requestPreload
	a (Lecw;)V stop
	a (Lecw;I)V playDelayed
	a (Lecx;)V queueTickingSound
	a (Ledv;)V addEventListener
	a (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/SoundCategory;)V stop
	a (Lnet/minecraft/server/SoundCategory;)F getVolume
	a (Lnet/minecraft/server/SoundCategory;F)V updateCategoryVolume
	a (Z)V tick
	b ()V destroy
	b (Lecw;)Z isActive
	b (Ledv;)V removeEventListener
	c ()V stopAll
	c (Lecw;)V play
	d ()V pause
	d (Lecw;)F calculatePitch
	e ()V resume
	e (Lecw;)F calculateVolume
	f ()Ljava/lang/String; getDebugString
	g ()V loadLibrary
	h ()V tickNonPaused
edu net/minecraft/client/sounds/SoundEngineExecutor
	a thread
	b shutdown
	a ()V flush
	ay ()Ljava/lang/Thread; getRunningThread
	b ()Ljava/lang/Thread; createThread
	bk ()V waitForTasks
	c ()V run
	c (Ljava/lang/Runnable;)Z shouldRun
	d (Ljava/lang/Runnable;)Ljava/lang/Runnable; wrapRunnable
edv net/minecraft/client/sounds/SoundEventListener
	a (Lecw;Ledx;)V onPlaySound
edw net/minecraft/client/sounds/SoundManager
	a EMPTY_SOUND
	b LOGGER
	c GSON
	d SOUND_EVENT_REGISTRATION_TYPE
	e registry
	f soundEngine
	a ()Ljava/util/Collection; getAvailableSounds
	a (Ldaz;)V updateSource
	a (Lecw;)V play
	a (Lecw;I)V playDelayed
	a (Lecx;)V queueTickingSound
	a (Ledv;)V addListener
	a (Ledw$a;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	a (Ljava/io/InputStream;)Ljava/util/Map; getEventFromJson
	a (Ljava/lang/Object;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	a (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)Ledw$a; prepare
	a (Lnet/minecraft/server/MinecraftKey;)Ledx; getSoundEvent
	a (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/SoundCategory;)V stop
	a (Lnet/minecraft/server/SoundCategory;F)V updateSourceVolume
	a (Z)V tick
	b ()V pause
	b (Lect;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/IResourceManager;)Z validateSoundResource
	b (Lecw;)V stop
	b (Ledv;)V removeListener
	b (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)Ljava/lang/Object; prepare
	c ()V stop
	c (Lecw;)Z isActive
	d ()V destroy
	e ()V resume
	f ()Ljava/lang/String; getDebugString
edw$a net/minecraft/client/sounds/SoundManager$Preparations
	a registry
	a (Ljava/util/Map;Ledt;)V apply
	a (Lnet/minecraft/server/MinecraftKey;Lecu;Lnet/minecraft/server/IResourceManager;)V handleRegistration
edx net/minecraft/client/sounds/WeighedSoundEvents
	a list
	b random
	c location
	d subtitle
	a ()Lect; getSound
	a (Ledt;)V preloadIfRequired
	a (Ledy;)V addSound
	b ()Lnet/minecraft/server/MinecraftKey; getResourceLocation
	c ()Lnet/minecraft/server/IChatBaseComponent; getSubtitle
	e ()I getWeight
	k ()Ljava/lang/Object; getSound
edy net/minecraft/client/sounds/Weighted
	a (Ledt;)V preloadIfRequired
	e ()I getWeight
	k ()Ljava/lang/Object; getSound
eea net/minecraft/client/tutorial/CompletedTutorialStepInstance
	a tutorial
eeb net/minecraft/client/tutorial/CraftPlanksTutorialStep
	a CRAFT_TITLE
	b CRAFT_DESCRIPTION
	c tutorial
	d toast
	e timeWaiting
	a ()V tick
	a (Ldpy;Lnet/minecraft/server/Tag;)Z hasCraftedPlanksPreviously
	a (Lnet/minecraft/server/ItemStack;)V onGetItem
	b ()V clear
eec net/minecraft/client/tutorial/FindTreeTutorialStepInstance
	a TREE_BLOCKS
	b TITLE
	c DESCRIPTION
	d tutorial
	e toast
	f timeWaiting
	a ()V tick
	a (Ldnl;Lnet/minecraft/server/MovingObjectPosition;)V onLookAt
	a (Ldpy;)Z hasPunchedTreesPreviously
	a (Lnet/minecraft/server/ItemStack;)V onGetItem
	b ()V clear
eed net/minecraft/client/tutorial/MovementTutorialStepInstance
	a MOVE_TITLE
	b MOVE_DESCRIPTION
	c LOOK_TITLE
	d LOOK_DESCRIPTION
	e tutorial
	f moveToast
	g lookToast
	h timeWaiting
	i timeMoved
	j timeLooked
	k moved
	l turned
	m moveCompleted
	n lookCompleted
	a ()V tick
	a (DD)V onMouse
	a (Ldpw;)V onInput
	b ()V clear
eee net/minecraft/client/tutorial/OpenInventoryTutorialStep
	a TITLE
	b DESCRIPTION
	c tutorial
	d toast
	e timeWaiting
	a ()V tick
	b ()V clear
	c ()V onOpenInventory
eef net/minecraft/client/tutorial/PunchTreeTutorialStepInstance
	a TITLE
	b DESCRIPTION
	c tutorial
	d toast
	e timeWaiting
	f resetCount
	a ()V tick
	a (Ldnl;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;F)V onDestroyBlock
	a (Lnet/minecraft/server/ItemStack;)V onGetItem
	b ()V clear
eeg net/minecraft/client/tutorial/Tutorial
	a minecraft
	b instance
	a ()V onOpenInventory
	a (DD)V onMouse
	a (Ldnl;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;F)V onDestroyBlock
	a (Ldnl;Lnet/minecraft/server/MovingObjectPosition;)V onLookAt
	a (Ldpw;)V onInput
	a (Leei;)V setStep
	a (Ljava/lang/String;)Lnet/minecraft/server/IChatBaseComponent; key
	a (Lnet/minecraft/server/ItemStack;)V onGetItem
	b ()V stop
	c ()V start
	d ()V tick
	e ()Ldbl; getMinecraft
	f ()Lnet/minecraft/server/EnumGamemode; getGameMode
eeh net/minecraft/client/tutorial/TutorialStepInstance
	a ()V tick
	a (DD)V onMouse
	a (Ldnl;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;F)V onDestroyBlock
	a (Ldnl;Lnet/minecraft/server/MovingObjectPosition;)V onLookAt
	a (Ldpw;)V onInput
	a (Lnet/minecraft/server/ItemStack;)V onGetItem
	b ()V clear
	c ()V onOpenInventory
eei net/minecraft/client/tutorial/TutorialSteps
	a MOVEMENT
	b FIND_TREE
	c PUNCH_TREE
	d OPEN_INVENTORY
	e CRAFT_PLANKS
	f NONE
	g name
	h constructor
	i $VALUES
	a ()Ljava/lang/String; getName
	a (Leeg;)Leeh; create
	a (Ljava/lang/String;)Leei; getByName
ei$a net/minecraft/commands/arguments/item/FunctionArgument$Result
	a (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; create
	b (Lcom/mojang/brigadier/context/CommandContext;)Lcom/mojang/datafixers/util/Either; unwrap
em$a net/minecraft/commands/arguments/item/ItemPredicateArgument$ItemPredicate
	a item
	b nbt
	a (Lnet/minecraft/server/ItemStack;)Z test
em$b net/minecraft/commands/arguments/item/ItemPredicateArgument$Result
em$c net/minecraft/commands/arguments/item/ItemPredicateArgument$TagPredicate
	a tag
	b nbt
	a (Lnet/minecraft/server/ItemStack;)Z test
er$a net/minecraft/commands/arguments/selector/options/EntitySelectorOptions$Modifier
er$b net/minecraft/commands/arguments/selector/options/EntitySelectorOptions$Option
	a modifier
	b predicate
	c description
ex$a net/minecraft/commands/synchronization/ArgumentTypes$Entry
	a clazz
	b serializer
	c name
ez$a net/minecraft/commands/synchronization/SuggestionProviders$Wrapper
	a delegate
	b name
f com/mojang/math/Vector4f
	a x
	b y
	c z
	d w
	a ()F x
	a (FFFF)V set
	a (Lb;)V transform
	a (Lf;)F dot
	a (Lnet/minecraft/server/Quaternion;)V transform
	a (Lnet/minecraft/server/Vector3fa;)V mul
	b ()F y
	c ()F z
	d ()F w
	e ()Z normalize
	f ()V perspectiveDivide
fj net/minecraft/core/BlockMath
	a vanillaUvTransformLocalToGlobal
	b vanillaUvTransformGlobalToLocal
	c LOGGER
	a (Ld;)Ld; blockCenterToCorner
	a (Ld;Lnet/minecraft/server/EnumDirection;Ljava/util/function/Supplier;)Ld; getUVLockTransform
	b (Ld;)Ld; blockCornerToCenter
gf net/minecraft/core/Source
gt$a net/minecraft/core/particles/ParticleOptions$Deserializer
	b (Lnet/minecraft/server/Particle;Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/ParticleParam; fromCommand
	b (Lnet/minecraft/server/Particle;Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/ParticleParam; fromNetwork
hb net/minecraft/data/advancements/AdvancementProvider
	b LOGGER
	c GSON
	d generator
	e tabs
	a ()Ljava/lang/String; getName
	a (Ljava/nio/file/Path;Lnet/minecraft/server/Advancement;)Ljava/nio/file/Path; createPath
	a (Lnet/minecraft/server/HashCache;)V run
hc net/minecraft/data/advancements/AdventureAdvancements
	a EXPLORABLE_BIOMES
	b MOBS_TO_KILL
	a (Ljava/util/function/Consumer;)V accept
	a (Lnet/minecraft/server/Advancement$SerializedAdvancement;)Lnet/minecraft/server/Advancement$SerializedAdvancement; addMobsToKill
	b (Lnet/minecraft/server/Advancement$SerializedAdvancement;)Lnet/minecraft/server/Advancement$SerializedAdvancement; addBiomes
hd net/minecraft/data/advancements/HusbandryAdvancements
	a BREEDABLE_ANIMALS
	b FISH
	c FISH_BUCKETS
	d EDIBLE_ITEMS
	a (Ljava/util/function/Consumer;)V accept
	a (Lnet/minecraft/server/Advancement$SerializedAdvancement;)Lnet/minecraft/server/Advancement$SerializedAdvancement; addFood
	b (Lnet/minecraft/server/Advancement$SerializedAdvancement;)Lnet/minecraft/server/Advancement$SerializedAdvancement; addBreedable
	c (Lnet/minecraft/server/Advancement$SerializedAdvancement;)Lnet/minecraft/server/Advancement$SerializedAdvancement; addFishBuckets
	d (Lnet/minecraft/server/Advancement$SerializedAdvancement;)Lnet/minecraft/server/Advancement$SerializedAdvancement; addFish
	e (Lnet/minecraft/server/Advancement$SerializedAdvancement;)Lnet/minecraft/server/Advancement$SerializedAdvancement; addCatVariants
he net/minecraft/data/advancements/NetherAdvancements
	a (Ljava/util/function/Consumer;)V accept
hf net/minecraft/data/advancements/StoryAdvancements
	a (Ljava/util/function/Consumer;)V accept
hg net/minecraft/data/advancements/TheEndAdvancements
	a (Ljava/util/function/Consumer;)V accept
hi net/minecraft/data/info/BlockListReport
	b GSON
	c generator
	a ()Ljava/lang/String; getName
	a (Lnet/minecraft/server/HashCache;)V run
hj net/minecraft/data/info/CommandsReport
	b GSON
	c generator
	a ()Ljava/lang/String; getName
	a (Lnet/minecraft/server/HashCache;)V run
hk net/minecraft/data/info/RegistryDumpReport
	b GSON
	c generator
	a ()Ljava/lang/String; getName
	a (Lnet/minecraft/server/HashCache;)V run
	a (Lnet/minecraft/server/IRegistryWritable;)Lcom/google/gson/JsonElement; dumpRegistry
hm net/minecraft/data/loot/BlockLoot
	a HAS_SILK_TOUCH
	b HAS_NO_SILK_TOUCH
	c HAS_SHEARS
	d HAS_SHEARS_OR_SILK_TOUCH
	e HAS_NO_SHEARS_OR_SILK_TOUCH
	f EXPLOSION_RESISTANT
	g NORMAL_LEAVES_SAPLING_CHANCES
	h JUNGLE_LEAVES_SAPLING_CHANGES
	i map
	a ()Lcrx$a; noDrop
	a (Ljava/util/function/BiConsumer;)V accept
	a (Lnet/minecraft/server/Block;)V dropPottedContents
	a (Lnet/minecraft/server/Block;Lcrx$a;)V add
	a (Lnet/minecraft/server/Block;Lcsn$a;)Lcrx$a; createSilkTouchDispatchTable
	a (Lnet/minecraft/server/Block;Lcuj$a;Lcsn$a;)Lcrx$a; createSelfDropDispatchTable
	a (Lnet/minecraft/server/Block;Ljava/util/function/Function;)V add
	a (Lnet/minecraft/server/Block;Lnet/minecraft/server/Block;)V otherWhenSilkTouch
	a (Lnet/minecraft/server/Block;Lnet/minecraft/server/Block;[F)Lcrx$a; createLeavesDrops
	a (Lnet/minecraft/server/Block;Lnet/minecraft/server/IBlockState;Ljava/lang/Comparable;)Lcrx$a; createSinglePropConditionTable
	a (Lnet/minecraft/server/Block;Lnet/minecraft/server/IMaterial;)V dropOther
	a (Lnet/minecraft/server/Block;Lnet/minecraft/server/IMaterial;Lnet/minecraft/server/LootValue;)Lcrx$a; createSingleItemTableWithSilkTouch
	a (Lnet/minecraft/server/Block;Lnet/minecraft/server/Item;)Lcrx$a; createOreDrop
	a (Lnet/minecraft/server/Block;Lnet/minecraft/server/Item;Lnet/minecraft/server/Item;Lcuj$a;)Lcrx$a; createCropDrops
	a (Lnet/minecraft/server/IMaterial;)Lcrx$a; createSingleItemTable
	a (Lnet/minecraft/server/IMaterial;Lnet/minecraft/server/LootItemConditionUser;)Ljava/lang/Object; applyExplosionCondition
	a (Lnet/minecraft/server/IMaterial;Lnet/minecraft/server/LootItemFunctionUser;)Ljava/lang/Object; applyExplosionDecay
	a (Lnet/minecraft/server/IMaterial;Lnet/minecraft/server/LootValue;)Lcrx$a; createSingleItemTable
	b (Lnet/minecraft/server/Block;)V dropWhenSilkTouch
	b (Lnet/minecraft/server/Block;Lcsn$a;)Lcrx$a; createShearsDispatchTable
	b (Lnet/minecraft/server/Block;Lnet/minecraft/server/Block;[F)Lcrx$a; createOakLeavesDrops
	b (Lnet/minecraft/server/Block;Lnet/minecraft/server/IMaterial;)Lcrx$a; createSingleItemTableWithSilkTouch
	b (Lnet/minecraft/server/Block;Lnet/minecraft/server/Item;)Lcrx$a; createStemDrops
	b (Lnet/minecraft/server/IMaterial;)Lcrx$a; createSilkTouchOnlyTable
	c (Lnet/minecraft/server/Block;)V dropSelf
	c (Lnet/minecraft/server/Block;Lcsn$a;)Lcrx$a; createSilkTouchOrShearsDispatchTable
	c (Lnet/minecraft/server/Block;Lnet/minecraft/server/IMaterial;)Lcrx$a; createMushroomBlockDrop
	c (Lnet/minecraft/server/Block;Lnet/minecraft/server/Item;)Lcrx$a; createAttachedStemDrops
	c (Lnet/minecraft/server/IMaterial;)Lcrx$a; createPotFlowerItemTable
	d (Lnet/minecraft/server/Block;)Lcrx$a; createSlabItemTable
	d (Lnet/minecraft/server/IMaterial;)Lcrx$a; createShearsOnlyDrop
	e (Lnet/minecraft/server/Block;)Lcrx$a; createNameableBlockEntityTable
	f (Lnet/minecraft/server/Block;)Lcrx$a; createShulkerBoxDrop
	g (Lnet/minecraft/server/Block;)Lcrx$a; createBannerDrop
	h (Lnet/minecraft/server/Block;)Lcrx$a; createBeeNestDrop
	i (Lnet/minecraft/server/Block;)Lcrx$a; createBeeHiveDrop
	j (Lnet/minecraft/server/Block;)Lcrx$a; createGrassDrops
hn net/minecraft/data/loot/ChestLoot
	a (Ljava/util/function/BiConsumer;)V accept
ho net/minecraft/data/loot/EntityLoot
	a ENTITY_ON_FIRE
	b SPECIAL_LOOT_TABLE_TYPES
	c map
	a (Ljava/util/function/BiConsumer;)V accept
	a (Lnet/minecraft/server/EntityTypes;Lcrx$a;)V add
	a (Lnet/minecraft/server/IMaterial;)Lcrx$a; createSheepTable
	a (Lnet/minecraft/server/MinecraftKey;Lcrx$a;)V add
hp net/minecraft/data/loot/FishingLoot
	a IN_JUNGLE
	b IN_JUNGLE_HILLS
	c IN_JUNGLE_EDGE
	d IN_BAMBOO_JUNGLE
	e IN_MODIFIED_JUNGLE
	f IN_MODIFIED_JUNGLE_EDGE
	g IN_BAMBOO_JUNGLE_HILLS
	a (Ljava/util/function/BiConsumer;)V accept
hq net/minecraft/data/loot/GiftLoot
	a (Ljava/util/function/BiConsumer;)V accept
hr net/minecraft/data/loot/LootTableProvider
	b LOGGER
	c GSON
	d generator
	e subProviders
	a ()Ljava/lang/String; getName
	a (Ljava/nio/file/Path;Lnet/minecraft/server/MinecraftKey;)Ljava/nio/file/Path; createPath
	a (Lnet/minecraft/server/HashCache;)V run
hu net/minecraft/data/recipes/FinishedRecipe
	a ()Lcom/google/gson/JsonObject; serializeRecipe
	a (Lcom/google/gson/JsonObject;)V serializeRecipeData
	b ()Lnet/minecraft/server/MinecraftKey; getId
	c ()Lnet/minecraft/server/RecipeSerializer; getType
	d ()Lcom/google/gson/JsonObject; serializeAdvancement
	e ()Lnet/minecraft/server/MinecraftKey; getAdvancementId
hv net/minecraft/data/recipes/RecipeProvider
	b LOGGER
	c GSON
	d generator
	a ()Ljava/lang/String; getName
	a (Ljava/util/function/Consumer;)V buildShapelessRecipes
	a (Ljava/util/function/Consumer;Ljava/lang/String;Lnet/minecraft/server/RecipeSerializerCooking;I)V cookRecipes
	a (Lnet/minecraft/server/Block;)Lax$a; insideOf
	a (Lnet/minecraft/server/CriterionConditionValue$IntegerRange;Lnet/minecraft/server/IMaterial;)Lbh$a; has
	a (Lnet/minecraft/server/HashCache;)V run
	a (Lnet/minecraft/server/HashCache;Lcom/google/gson/JsonObject;Ljava/nio/file/Path;)V saveRecipe
	a (Lnet/minecraft/server/IMaterial;)Lbh$a; has
	a (Lnet/minecraft/server/Tag;)Lbh$a; has
	a ([Lnet/minecraft/server/CriterionConditionItem;)Lbh$a; inventoryTrigger
	b (Lnet/minecraft/server/HashCache;Lcom/google/gson/JsonObject;Ljava/nio/file/Path;)V saveAdvancement
hw net/minecraft/data/recipes/ShapedRecipeBuilder
	a LOGGER
	b result
	c count
	d rows
	e key
	f advancement
	g group
	a (Ljava/lang/Character;Lnet/minecraft/server/IMaterial;)Lhw; define
	a (Ljava/lang/Character;Lnet/minecraft/server/RecipeItemStack;)Lhw; define
	a (Ljava/lang/Character;Lnet/minecraft/server/Tag;)Lhw; define
	a (Ljava/lang/String;)Lhw; pattern
	a (Ljava/lang/String;Lnet/minecraft/server/CriterionInstance;)Lhw; unlocks
	a (Ljava/util/function/Consumer;)V save
	a (Ljava/util/function/Consumer;Ljava/lang/String;)V save
	a (Ljava/util/function/Consumer;Lnet/minecraft/server/MinecraftKey;)V save
	a (Lnet/minecraft/server/IMaterial;)Lhw; shaped
	a (Lnet/minecraft/server/IMaterial;I)Lhw; shaped
	a (Lnet/minecraft/server/MinecraftKey;)V ensureValid
	b (Ljava/lang/String;)Lhw; group
hw$a net/minecraft/data/recipes/ShapedRecipeBuilder$Result
	b id
	c result
	d count
	e group
	f pattern
	g key
	h advancement
	i advancementId
	a (Lcom/google/gson/JsonObject;)V serializeRecipeData
	b ()Lnet/minecraft/server/MinecraftKey; getId
	c ()Lnet/minecraft/server/RecipeSerializer; getType
	d ()Lcom/google/gson/JsonObject; serializeAdvancement
	e ()Lnet/minecraft/server/MinecraftKey; getAdvancementId
hx net/minecraft/data/recipes/ShapelessRecipeBuilder
	a LOGGER
	b result
	c count
	d ingredients
	e advancement
	f group
	a (Ljava/lang/String;)Lhx; group
	a (Ljava/lang/String;Lnet/minecraft/server/CriterionInstance;)Lhx; unlocks
	a (Ljava/util/function/Consumer;)V save
	a (Ljava/util/function/Consumer;Ljava/lang/String;)V save
	a (Ljava/util/function/Consumer;Lnet/minecraft/server/MinecraftKey;)V save
	a (Lnet/minecraft/server/IMaterial;)Lhx; shapeless
	a (Lnet/minecraft/server/IMaterial;I)Lhx; shapeless
	a (Lnet/minecraft/server/MinecraftKey;)V ensureValid
	a (Lnet/minecraft/server/RecipeItemStack;)Lhx; requires
	a (Lnet/minecraft/server/RecipeItemStack;I)Lhx; requires
	a (Lnet/minecraft/server/Tag;)Lhx; requires
	b (Lnet/minecraft/server/IMaterial;)Lhx; requires
	b (Lnet/minecraft/server/IMaterial;I)Lhx; requires
hx$a net/minecraft/data/recipes/ShapelessRecipeBuilder$Result
	a id
	b result
	c count
	d group
	e ingredients
	f advancement
	g advancementId
	a (Lcom/google/gson/JsonObject;)V serializeRecipeData
	b ()Lnet/minecraft/server/MinecraftKey; getId
	c ()Lnet/minecraft/server/RecipeSerializer; getType
	d ()Lcom/google/gson/JsonObject; serializeAdvancement
	e ()Lnet/minecraft/server/MinecraftKey; getAdvancementId
hy net/minecraft/data/recipes/SimpleCookingRecipeBuilder
	a result
	b ingredient
	c experience
	d cookingTime
	e advancement
	f group
	g serializer
	a (Ljava/lang/String;)Lhy; group
	a (Ljava/lang/String;Lnet/minecraft/server/CriterionInstance;)Lhy; unlocks
	a (Ljava/util/function/Consumer;)V save
	a (Ljava/util/function/Consumer;Ljava/lang/String;)V save
	a (Ljava/util/function/Consumer;Lnet/minecraft/server/MinecraftKey;)V save
	a (Lnet/minecraft/server/MinecraftKey;)V ensureValid
	a (Lnet/minecraft/server/RecipeItemStack;Lnet/minecraft/server/IMaterial;FI)Lhy; campfireCooking
	a (Lnet/minecraft/server/RecipeItemStack;Lnet/minecraft/server/IMaterial;FILnet/minecraft/server/RecipeSerializerCooking;)Lhy; cooking
	b (Lnet/minecraft/server/RecipeItemStack;Lnet/minecraft/server/IMaterial;FI)Lhy; blasting
	c (Lnet/minecraft/server/RecipeItemStack;Lnet/minecraft/server/IMaterial;FI)Lhy; smelting
	d (Lnet/minecraft/server/RecipeItemStack;Lnet/minecraft/server/IMaterial;FI)Lhy; smoking
hy$a net/minecraft/data/recipes/SimpleCookingRecipeBuilder$Result
	a id
	b group
	c ingredient
	d result
	e experience
	f cookingTime
	g advancement
	h advancementId
	i serializer
	a (Lcom/google/gson/JsonObject;)V serializeRecipeData
	b ()Lnet/minecraft/server/MinecraftKey; getId
	c ()Lnet/minecraft/server/RecipeSerializer; getType
	d ()Lcom/google/gson/JsonObject; serializeAdvancement
	e ()Lnet/minecraft/server/MinecraftKey; getAdvancementId
hz net/minecraft/data/recipes/SingleItemRecipeBuilder
	a result
	b ingredient
	c count
	d advancement
	e group
	f type
	a (Ljava/lang/String;)Lhz; group
	a (Ljava/lang/String;Lnet/minecraft/server/CriterionInstance;)Lhz; unlocks
	a (Ljava/util/function/Consumer;Ljava/lang/String;)V save
	a (Ljava/util/function/Consumer;Lnet/minecraft/server/MinecraftKey;)V save
	a (Lnet/minecraft/server/MinecraftKey;)V ensureValid
	a (Lnet/minecraft/server/RecipeItemStack;Lnet/minecraft/server/IMaterial;)Lhz; stonecutting
	a (Lnet/minecraft/server/RecipeItemStack;Lnet/minecraft/server/IMaterial;I)Lhz; stonecutting
hz$a net/minecraft/data/recipes/SingleItemRecipeBuilder$Result
	a id
	b group
	c ingredient
	d result
	e count
	f advancement
	g advancementId
	h type
	a (Lcom/google/gson/JsonObject;)V serializeRecipeData
	b ()Lnet/minecraft/server/MinecraftKey; getId
	c ()Lnet/minecraft/server/RecipeSerializer; getType
	d ()Lcom/google/gson/JsonObject; serializeAdvancement
	e ()Lnet/minecraft/server/MinecraftKey; getAdvancementId
ia net/minecraft/data/recipes/SpecialRecipeBuilder
	a serializer
	a (Ljava/util/function/Consumer;Ljava/lang/String;)V save
	a (Lnet/minecraft/server/RecipeSerializerComplex;)Lia; special
id net/minecraft/data/structures/SnbtToNbt
	b LOGGER
	c generator
	d filters
	a ()Ljava/lang/String; getName
	a (Lid$a;)Lid; addFilter
	a (Ljava/lang/String;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; applyFilters
	a (Ljava/nio/file/Path;Ljava/lang/String;)Lid$b; readStructure
	a (Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/lang/String; getName
	a (Lnet/minecraft/server/HashCache;)V run
	a (Lnet/minecraft/server/HashCache;Lid$b;Ljava/nio/file/Path;)V storeStructureIfChanged
id$a net/minecraft/data/structures/SnbtToNbt$Filter
	a (Ljava/lang/String;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; apply
id$b net/minecraft/data/structures/SnbtToNbt$TaskResult
	a name
	b payload
	c hash
ie net/minecraft/data/structures/StructureUpdater
	a (Ljava/lang/String;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; apply
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; patchVersion
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; updateStructure
ih net/minecraft/data/tags/BlockTagsProvider
	a ()Ljava/lang/String; getName
	a (Lnet/minecraft/server/MinecraftKey;)Ljava/nio/file/Path; getPath
	a (Lnet/minecraft/server/Tags;)V useTags
	b ()V addTags
ii net/minecraft/data/tags/EntityTypeTagsProvider
	a ()Ljava/lang/String; getName
	a (Lnet/minecraft/server/MinecraftKey;)Ljava/nio/file/Path; getPath
	a (Lnet/minecraft/server/Tags;)V useTags
	b ()V addTags
ij net/minecraft/data/tags/FluidTagsProvider
	a ()Ljava/lang/String; getName
	a (Lnet/minecraft/server/MinecraftKey;)Ljava/nio/file/Path; getPath
	a (Lnet/minecraft/server/Tags;)V useTags
	b ()V addTags
ik net/minecraft/data/tags/ItemTagsProvider
	e LOGGER
	a ()Ljava/lang/String; getName
	a (Laaz$b;)Laaz$b; copy
	a (Lnet/minecraft/server/MinecraftKey;)Ljava/nio/file/Path; getPath
	a (Lnet/minecraft/server/Tag;Lnet/minecraft/server/Tag;)V copy
	a (Lnet/minecraft/server/Tags;)V useTags
	b ()V addTags
il net/minecraft/data/tags/TagsProvider
	b generator
	c registry
	d builders
	e LOGGER
	f GSON
	a (Lnet/minecraft/server/HashCache;)V run
	a (Lnet/minecraft/server/MinecraftKey;)Ljava/nio/file/Path; getPath
	a (Lnet/minecraft/server/Tag;)Laaz$a; tag
	a (Lnet/minecraft/server/Tags;)V useTags
	b ()V addTags
in net/minecraft/gametest/framework/BeforeBatch
	a ()Ljava/lang/String; batch
io net/minecraft/gametest/framework/GameTest
	a ()I timeoutTicks
	b ()Ljava/lang/String; batch
	c ()Z required
	d ()Ljava/lang/String; template
	e ()J setupTicks
iu net/minecraft/gametest/framework/GameTestGenerator
ja$a net/minecraft/gametest/framework/GameTestSequence$Condition
	b triggerTime
	a ()V assertTriggeredThisTick
	a (J)V trigger
jb net/minecraft/gametest/framework/GameTestServer
	h LOGGER
	i testBatches
	j spawnPos
	k testTracker
	I_ ()Z shouldInformAdmins
	a (Lcom/mojang/authlib/GameProfile;)Z isSingleplayerOwner
	a (Ljava/util/function/BooleanSupplier;)V tickServer
	a (Lnet/minecraft/server/CrashReport;)V onServerCrash
	a (Lnet/minecraft/server/EnumGamemode;ZI)Z publishServer
	aY ()Z haveTestsStarted
	b (Lnet/minecraft/server/WorldServer;)V startTests
	d ()Z initServer
	e ()V onServerExit
	f ()Z canGenerateStructures
	g ()Lnet/minecraft/server/EnumGamemode; getDefaultGameType
	h ()Lnet/minecraft/server/EnumDifficulty; getDefaultDifficulty
	i ()Z isHardcore
	j ()I getOperatorUserPermissionLevel
	k ()I getFunctionCompilationLevel
	l ()Z shouldRconBroadcast
	m ()Z isDedicatedServer
	n ()Z isEpollEnabled
	o ()Z isCommandBlockEnabled
	p ()Z isPublished
jh net/minecraft/gametest/framework/TeamcityTestReporter
	a LOGGER
	b ESCAPER
	a (Lnet/minecraft/server/GameTestHarnessInfo;)V onTestFailed
	b (Lnet/minecraft/server/GameTestHarnessInfo;)V onTestSuccess
jj$a net/minecraft/gametest/framework/TestCommand$TestSummaryDisplayer
	a level
	b tracker
	a (Lnet/minecraft/server/GameTestHarnessInfo;)V testStructureLoaded
	b (Lnet/minecraft/server/GameTestHarnessInfo;)V testPassed
	c (Lnet/minecraft/server/GameTestHarnessInfo;)V testFailed
jr$a net/minecraft/nbt/ByteTag$Cache
	a cache
jy$a net/minecraft/nbt/IntTag$Cache
	a cache
kb$a net/minecraft/nbt/LongTag$Cache
	a cache
kh$a net/minecraft/nbt/ShortTag$Cache
	a cache
ku$a net/minecraft/network/ConnectionProtocol$PacketSet
	a classToId
	b idToConstructor
	a ()Ljava/lang/Iterable; getAllPackets
	a (I)Lnet/minecraft/server/Packet; createPacket
	a (Ljava/lang/Class;)Ljava/lang/Integer; getId
	a (Ljava/lang/Class;Ljava/util/function/Supplier;)Lku$a; addPacket
ku$b net/minecraft/network/ConnectionProtocol$ProtocolBuilder
	a flows
	a (Lnet/minecraft/server/EnumProtocolDirection;Lku$a;)Lku$b; addFlow
lk$a net/minecraft/network/chat/NbtComponent$BlockNbtComponent
	e posPattern
	f compiledPos
	a (Lnet/minecraft/server/CommandListenerWrapper;)Ljava/util/stream/Stream; getData
	b (Ljava/lang/String;)Lnet/minecraft/server/IVectorPosition; compilePos
	g ()Lnet/minecraft/server/IChatBaseComponent; copy
	k ()Ljava/lang/String; getPos
lk$b net/minecraft/network/chat/NbtComponent$EntityNbtComponent
	e selectorPattern
	f compiledSelector
	a (Lnet/minecraft/server/CommandListenerWrapper;)Ljava/util/stream/Stream; getData
	b (Ljava/lang/String;)Lnet/minecraft/server/EntitySelector; compileSelector
	g ()Lnet/minecraft/server/IChatBaseComponent; copy
	k ()Ljava/lang/String; getSelector
lk$c net/minecraft/network/chat/NbtComponent$StorageNbtComponent
	e id
	a (Lnet/minecraft/server/CommandListenerWrapper;)Ljava/util/stream/Stream; getData
	g ()Lnet/minecraft/server/IChatBaseComponent; copy
	k ()Lnet/minecraft/server/MinecraftKey; getId
mp$a net/minecraft/network/protocol/game/ClientboundCommandsPacket$Entry
	a builder
	b flags
	c redirect
	d children
	e node
	a ([Lmp$a;)Z build
n net/minecraft/FieldsAreNonnullByDefault
net/minecraft/realms/RepeatedNarrator$a net/minecraft/realms/RepeatedNarrator$Params
	a narration
	b rateLimiter
net/minecraft/server/AbstractDragonController net/minecraft/world/entity/boss/enderdragon/phases/AbstractDragonPhaseInstance
	a dragon
	a ()Z isSitting
	a (Lnet/minecraft/server/DamageSource;F)F onHurt
	a (Lnet/minecraft/server/EntityEnderCrystal;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/DamageSource;Lnet/minecraft/server/EntityHuman;)V onCrystalDestroyed
	b ()V doClientTick
	c ()V doServerTick
	d ()V begin
	e ()V end
	f ()F getFlySpeed
	g ()Lnet/minecraft/server/Vec3D; getFlyTargetLocation
	h ()F getTurnSpeed
net/minecraft/server/AbstractDragonControllerLanded net/minecraft/world/entity/boss/enderdragon/phases/AbstractDragonSittingPhase
	a ()Z isSitting
	a (Lnet/minecraft/server/DamageSource;F)F onHurt
net/minecraft/server/Activity net/minecraft/world/entity/schedule/Activity
	k name
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lnet/minecraft/server/Activity; register
net/minecraft/server/ActivityFrame net/minecraft/world/entity/schedule/Keyframe
	a timeStamp
	b value
	a ()I getTimeStamp
	b ()F getValue
net/minecraft/server/Advancement net/minecraft/advancements/Advancement
	a parent
	b display
	c rewards
	d id
	e criteria
	f requirements
	g children
	h chatComponent
	a ()Lnet/minecraft/server/Advancement$SerializedAdvancement; deconstruct
	a (Lnet/minecraft/server/Advancement;)V addChild
	b ()Lnet/minecraft/server/Advancement; getParent
	c ()Lnet/minecraft/server/AdvancementDisplay; getDisplay
	d ()Lnet/minecraft/server/AdvancementRewards; getRewards
	e ()Ljava/lang/Iterable; getChildren
	g ()I getMaxCriteraRequired
	getName ()Lnet/minecraft/server/MinecraftKey; getId
	i ()[[Ljava/lang/String; getRequirements
	j ()Lnet/minecraft/server/IChatBaseComponent; getChatComponent
net/minecraft/server/Advancement$SerializedAdvancement net/minecraft/advancements/Advancement$Builder
	a parentId
	b parent
	c display
	d rewards
	e criteria
	f requirements
	g requirementsStrategy
	a ()Lnet/minecraft/server/Advancement$SerializedAdvancement; advancement
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/Advancement$SerializedAdvancement; fromJson
	a (Ljava/lang/String;Lnet/minecraft/server/Criterion;)Lnet/minecraft/server/Advancement$SerializedAdvancement; addCriterion
	a (Ljava/lang/String;Lnet/minecraft/server/CriterionInstance;)Lnet/minecraft/server/Advancement$SerializedAdvancement; addCriterion
	a (Ljava/util/function/Consumer;Ljava/lang/String;)Lnet/minecraft/server/Advancement; save
	a (Ljava/util/function/Function;)Z canBuild
	a (Lnet/minecraft/server/Advancement;)Lnet/minecraft/server/Advancement$SerializedAdvancement; parent
	a (Lnet/minecraft/server/AdvancementDisplay;)Lnet/minecraft/server/Advancement$SerializedAdvancement; display
	a (Lnet/minecraft/server/AdvancementRequirements;)Lnet/minecraft/server/Advancement$SerializedAdvancement; requirements
	a (Lnet/minecraft/server/AdvancementRewards;)Lnet/minecraft/server/Advancement$SerializedAdvancement; rewards
	a (Lnet/minecraft/server/IMaterial;Lnet/minecraft/server/IChatBaseComponent;Lnet/minecraft/server/IChatBaseComponent;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/AdvancementFrameType;ZZZ)Lnet/minecraft/server/Advancement$SerializedAdvancement; display
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/IChatBaseComponent;Lnet/minecraft/server/IChatBaseComponent;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/AdvancementFrameType;ZZZ)Lnet/minecraft/server/Advancement$SerializedAdvancement; display
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/Advancement$SerializedAdvancement; parent
	a (Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	a (Lx$a;)Lnet/minecraft/server/Advancement$SerializedAdvancement; rewards
	a ([[Ljava/lang/String;)Lnet/minecraft/server/Advancement$SerializedAdvancement; requirements
	b ()Lcom/google/gson/JsonObject; serializeToJson
	b (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/Advancement; build
	b (Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/Advancement$SerializedAdvancement; fromNetwork
	c ()Ljava/util/Map; getCriteria
net/minecraft/server/AdvancementDataPlayer net/minecraft/server/PlayerAdvancements
	a LOGGER
	b GSON
	c TYPE_TOKEN
	d server
	data advancements
	e file
	g visible
	h visibilityChanged
	i progressChanged
	k lastSelectedTab
	l isFirstPacket
	a ()V stopListening
	a (Lnet/minecraft/server/Advancement;)V setSelectedTab
	a (Lnet/minecraft/server/Advancement;Lnet/minecraft/server/AdvancementProgress;)V startProgress
	a (Lnet/minecraft/server/EntityPlayer;)V setPlayer
	b ()V reload
	b (Lnet/minecraft/server/EntityPlayer;)V flushDirty
	c ()V save
	c (Lnet/minecraft/server/Advancement;)V registerListeners
	d ()V registerListeners
	d (Lnet/minecraft/server/Advancement;)V unregisterListeners
	e ()V ensureAllVisible
	e (Lnet/minecraft/server/Advancement;)V ensureVisibility
	f ()V checkForAutomaticTriggers
	f (Lnet/minecraft/server/Advancement;)Z shouldBeVisible
	g ()V load
	g (Lnet/minecraft/server/Advancement;)Z hasCompletedChildrenOrSelf
	getProgress (Lnet/minecraft/server/Advancement;)Lnet/minecraft/server/AdvancementProgress; getOrStartProgress
	grantCriteria (Lnet/minecraft/server/Advancement;Ljava/lang/String;)Z award
	revokeCritera (Lnet/minecraft/server/Advancement;Ljava/lang/String;)Z revoke
net/minecraft/server/AdvancementDataWorld net/minecraft/server/ServerAdvancementManager
	DESERIALIZER GSON
	REGISTRY advancements
	a LOGGER
	a (Ljava/lang/Object;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	a (Ljava/util/Map;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/Advancement; getAdvancement
	getAdvancements ()Ljava/util/Collection; getAllAdvancements
net/minecraft/server/AdvancementDisplay net/minecraft/advancements/DisplayInfo
	a title
	b description
	c icon
	d background
	e frame
	f showToast
	g announceChat
	h hidden
	i x
	j y
	a ()Lnet/minecraft/server/IChatBaseComponent; getTitle
	a (FF)V setLocation
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/ItemStack; getIcon
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/AdvancementDisplay; fromJson
	a (Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	b ()Lnet/minecraft/server/IChatBaseComponent; getDescription
	b (Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/AdvancementDisplay; fromNetwork
	c ()Lnet/minecraft/server/ItemStack; getIcon
	d ()Lnet/minecraft/server/MinecraftKey; getBackground
	e ()Lnet/minecraft/server/AdvancementFrameType; getFrame
	f ()F getX
	g ()F getY
	h ()Z shouldShowToast
	i ()Z shouldAnnounceChat
	j ()Z isHidden
	k ()Lcom/google/gson/JsonElement; serializeToJson
	l ()Lcom/google/gson/JsonObject; serializeIcon
net/minecraft/server/AdvancementFrameType net/minecraft/advancements/FrameType
	d name
	e texture
	f chatColor
	g $VALUES
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lnet/minecraft/server/AdvancementFrameType; byName
	b ()I getTexture
	c ()Lnet/minecraft/server/EnumChatFormat; getChatColor
net/minecraft/server/AdvancementProgress net/minecraft/advancements/AdvancementProgress
	a criteria
	b requirements
	a (Ljava/lang/String;)Z grantProgress
	a (Ljava/util/Map;[[Ljava/lang/String;)V update
	a (Lnet/minecraft/server/AdvancementProgress;)I compareTo
	a (Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	b ()Z hasProgress
	b (Ljava/lang/String;)Z revokeProgress
	b (Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/AdvancementProgress; fromNetwork
	c ()F getPercent
	d ()Ljava/lang/String; getProgressText
	g ()Ljava/util/Date; getFirstProgressDate
	getAwardedCriteria ()Ljava/lang/Iterable; getCompletedCriteria
	getCriterionProgress (Ljava/lang/String;)Lnet/minecraft/server/CriterionProgress; getCriterion
	h ()I countCompletedRequirements
net/minecraft/server/AdvancementRequirements net/minecraft/advancements/RequirementsStrategy
net/minecraft/server/AdvancementRewards net/minecraft/advancements/AdvancementRewards
	a EMPTY
	b experience
	c loot
	d recipes
	e function
	a ()[Lnet/minecraft/server/MinecraftKey; getRecipes
	a (Lnet/minecraft/server/EntityPlayer;)V grant
	b ()Lcom/google/gson/JsonElement; serializeToJson
net/minecraft/server/AdvancementTree net/minecraft/advancements/TreeNodePosition
	a advancement
	b parent
	c previousSibling
	d childIndex
	e children
	f ancestor
	g thread
	h x
	i y
	j mod
	k change
	l shift
	a ()V firstWalk
	a (F)V thirdWalk
	a (FIF)F secondWalk
	a (Lnet/minecraft/server/Advancement;)V run
	a (Lnet/minecraft/server/Advancement;Lnet/minecraft/server/AdvancementTree;)Lnet/minecraft/server/AdvancementTree; addChild
	a (Lnet/minecraft/server/AdvancementTree;)Lnet/minecraft/server/AdvancementTree; apportion
	a (Lnet/minecraft/server/AdvancementTree;F)V moveSubtree
	a (Lnet/minecraft/server/AdvancementTree;Lnet/minecraft/server/AdvancementTree;)Lnet/minecraft/server/AdvancementTree; getAncestor
	b ()V executeShifts
	c ()Lnet/minecraft/server/AdvancementTree; previousOrThread
	d ()Lnet/minecraft/server/AdvancementTree; nextOrThread
	e ()V finalizePosition
net/minecraft/server/Advancements net/minecraft/advancements/AdvancementList
	a LOGGER
	c roots
	d tasks
	e listener
	a ()V clear
	a (Ljava/util/Map;)V add
	a (Ljava/util/Set;)V remove
	a (Lnet/minecraft/server/Advancement;)V remove
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/Advancement; get
	a (Lv$a;)V setListener
	b ()Ljava/lang/Iterable; getRoots
	c ()Ljava/util/Collection; getAllAdvancements
net/minecraft/server/Area net/minecraft/world/level/newbiome/area/Area
	a (II)I get
net/minecraft/server/AreaContextTransformed net/minecraft/world/level/newbiome/context/BigContext
	a ()J getMixedSeed
	a (II)I random
	a (IIII)I random
	a (JJ)V initRandom
	a (Lnet/minecraft/server/AreaTransformer8;)Lnet/minecraft/server/Area; createResult
	a (Lnet/minecraft/server/AreaTransformer8;Lnet/minecraft/server/Area;)Lnet/minecraft/server/Area; createResult
	a (Lnet/minecraft/server/AreaTransformer8;Lnet/minecraft/server/Area;Lnet/minecraft/server/Area;)Lnet/minecraft/server/Area; createResult
net/minecraft/server/AreaFactory net/minecraft/world/level/newbiome/area/AreaFactory
net/minecraft/server/AreaLazy net/minecraft/world/level/newbiome/area/LazyArea
	a transformer
	b cache
	c maxCache
	a ()I getMaxCache
	a (II)I get
net/minecraft/server/AreaTransformer net/minecraft/world/level/newbiome/layer/traits/DimensionTransformer
	a (I)I getParentX
	b (I)I getParentY
net/minecraft/server/AreaTransformer1 net/minecraft/world/level/newbiome/layer/traits/AreaTransformer0
	a (Lnet/minecraft/server/AreaContextTransformed;)Lnet/minecraft/server/AreaFactory; run
	a (Lnet/minecraft/server/WorldGenContext;II)I applyPixel
net/minecraft/server/AreaTransformer2 net/minecraft/world/level/newbiome/layer/traits/AreaTransformer1
	a (Lnet/minecraft/server/AreaContextTransformed;Lnet/minecraft/server/Area;II)I applyPixel
	a (Lnet/minecraft/server/AreaContextTransformed;Lnet/minecraft/server/AreaFactory;)Lnet/minecraft/server/AreaFactory; run
net/minecraft/server/AreaTransformer3 net/minecraft/world/level/newbiome/layer/traits/AreaTransformer2
	a (Lnet/minecraft/server/AreaContextTransformed;Lnet/minecraft/server/AreaFactory;Lnet/minecraft/server/AreaFactory;)Lnet/minecraft/server/AreaFactory; run
	a (Lnet/minecraft/server/WorldGenContext;Lnet/minecraft/server/Area;Lnet/minecraft/server/Area;II)I applyPixel
net/minecraft/server/AreaTransformer4 net/minecraft/world/level/newbiome/layer/traits/BishopTransformer
	a (Lnet/minecraft/server/AreaContextTransformed;Lnet/minecraft/server/Area;II)I applyPixel
	a (Lnet/minecraft/server/WorldGenContext;IIIII)I apply
net/minecraft/server/AreaTransformer5 net/minecraft/world/level/newbiome/layer/traits/C0Transformer
	a (Lnet/minecraft/server/AreaContextTransformed;Lnet/minecraft/server/Area;II)I applyPixel
	a (Lnet/minecraft/server/WorldGenContext;I)I apply
net/minecraft/server/AreaTransformer6 net/minecraft/world/level/newbiome/layer/traits/C1Transformer
	a (Lnet/minecraft/server/AreaContextTransformed;Lnet/minecraft/server/Area;II)I applyPixel
	a (Lnet/minecraft/server/WorldGenContext;I)I apply
net/minecraft/server/AreaTransformer7 net/minecraft/world/level/newbiome/layer/traits/CastleTransformer
	a (Lnet/minecraft/server/AreaContextTransformed;Lnet/minecraft/server/Area;II)I applyPixel
	a (Lnet/minecraft/server/WorldGenContext;IIIII)I apply
net/minecraft/server/AreaTransformer8 net/minecraft/world/level/newbiome/layer/traits/PixelTransformer
net/minecraft/server/AreaTransformerIdentity net/minecraft/world/level/newbiome/layer/traits/DimensionOffset0Transformer
	a (I)I getParentX
	b (I)I getParentY
net/minecraft/server/AreaTransformerOffset1 net/minecraft/world/level/newbiome/layer/traits/DimensionOffset1Transformer
	a (I)I getParentX
	b (I)I getParentY
net/minecraft/server/ArgumentAnchor net/minecraft/commands/arguments/EntityAnchorArgument
	a EXAMPLES
	b ERROR_INVALID
	a ()Lnet/minecraft/server/ArgumentAnchor; anchor
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/ArgumentAnchor$Anchor; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/ArgumentAnchor$Anchor; getAnchor
net/minecraft/server/ArgumentAnchor$Anchor net/minecraft/commands/arguments/EntityAnchorArgument$Anchor
	c BY_NAME
	d name
	e transform
	f $VALUES
	a (Ljava/lang/String;)Lnet/minecraft/server/ArgumentAnchor$Anchor; getByName
	a (Lnet/minecraft/server/CommandListenerWrapper;)Lnet/minecraft/server/Vec3D; apply
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/Vec3D; apply
net/minecraft/server/ArgumentBlock net/minecraft/commands/arguments/blocks/BlockStateParser
	a ERROR_NO_TAGS_ALLOWED
	b ERROR_UNKNOWN_BLOCK
	c ERROR_UNKNOWN_PROPERTY
	d ERROR_DUPLICATE_PROPERTY
	e ERROR_INVALID_VALUE
	f ERROR_EXPECTED_VALUE
	g ERROR_EXPECTED_END_OF_PROPERTIES
	h SUGGEST_NOTHING
	i reader
	j forTesting
	k properties
	l vagueProperties
	m id
	n definition
	o state
	p nbt
	q tag
	r tagCursor
	s suggestions
	a (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; fillSuggestions
	a (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; suggestVaguePropertyValue
	a (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/server/IBlockState;)Lcom/mojang/brigadier/suggestion/SuggestionsBuilder; addSuggestions
	a (Ljava/lang/StringBuilder;Lnet/minecraft/server/IBlockState;Ljava/lang/Comparable;)V appendProperty
	a (Lnet/minecraft/server/IBlockData;)Ljava/lang/String; serialize
	a (Lnet/minecraft/server/IBlockState;Ljava/lang/String;I)V setValue
	a (Z)Lnet/minecraft/server/ArgumentBlock; parse
	b (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestPropertyNameOrEnd
	c ()Lnet/minecraft/server/NBTTagCompound; getNbt
	c (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestVaguePropertyNameOrEnd
	d ()Lnet/minecraft/server/MinecraftKey; getTag
	d (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestPropertyName
	e ()V readBlock
	e (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestVaguePropertyName
	f ()V readTag
	f (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestOpenNbt
	g ()V readProperties
	g (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestEquals
	getBlockData ()Lnet/minecraft/server/IBlockData; getState
	getStateMap ()Ljava/util/Map; getProperties
	h ()V readVagueProperties
	h (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestNextPropertyOrEnd
	i ()V readNbt
	i (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestOpenVaguePropertiesOrNbt
	j ()Ljava/util/Map; getVagueProperties
	j (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestOpenPropertiesOrNbt
	k ()Z hasBlockEntity
	k (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestTag
	l (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestBlockIdOrTag
net/minecraft/server/ArgumentBlockPredicate net/minecraft/commands/arguments/blocks/BlockPredicateArgument
	a EXAMPLES
	b ERROR_UNKNOWN_TAG
	a ()Lnet/minecraft/server/ArgumentBlockPredicate; blockPredicate
	a (Lcom/mojang/brigadier/StringReader;)Ldt$b; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/function/Predicate; getBlockPredicate
net/minecraft/server/ArgumentChat net/minecraft/commands/arguments/MessageArgument
	a EXAMPLES
	a ()Lnet/minecraft/server/ArgumentChat; message
	a (Lcom/mojang/brigadier/StringReader;)Ldc$a; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/IChatBaseComponent; getMessage
net/minecraft/server/ArgumentChatComponent net/minecraft/commands/arguments/ComponentArgument
	a ERROR_INVALID_JSON
	b EXAMPLES
	a ()Lnet/minecraft/server/ArgumentChatComponent; textComponent
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/IChatBaseComponent; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/IChatBaseComponent; getComponent
net/minecraft/server/ArgumentChatFormat net/minecraft/commands/arguments/ColorArgument
	a ERROR_INVALID_VALUE
	b EXAMPLES
	a ()Lnet/minecraft/server/ArgumentChatFormat; color
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/EnumChatFormat; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/EnumChatFormat; getColor
net/minecraft/server/ArgumentCriterionValue net/minecraft/commands/arguments/RangeArgument
	a ()Ldk$b; intRange
	b ()Ldk$a; doubleRange
net/minecraft/server/ArgumentDimension net/minecraft/commands/arguments/DimensionTypeArgument
	a ERROR_INVALID_VALUE
	b EXAMPLES
	a ()Lnet/minecraft/server/ArgumentDimension; dimension
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/DimensionManager; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/DimensionManager; getDimension
net/minecraft/server/ArgumentEnchantment net/minecraft/commands/arguments/ItemEnchantmentArgument
	a ERROR_UNKNOWN_ENCHANTMENT
	b EXAMPLES
	a ()Lnet/minecraft/server/ArgumentEnchantment; enchantment
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/Enchantment; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/Enchantment; getEnchantment
net/minecraft/server/ArgumentEntity net/minecraft/commands/arguments/EntityArgument
	a ERROR_NOT_SINGLE_ENTITY
	b ERROR_NOT_SINGLE_PLAYER
	c ERROR_ONLY_PLAYERS_ALLOWED
	d NO_ENTITIES_FOUND
	e NO_PLAYERS_FOUND
	f ERROR_SELECTORS_NOT_ALLOWED
	g EXAMPLES
	h single
	i playersOnly
	a ()Lnet/minecraft/server/ArgumentEntity; entity
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/EntitySelector; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/Entity; getEntity
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; getEntities
	c ()Lnet/minecraft/server/ArgumentEntity; player
	c (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; getOptionalEntities
	d ()Lnet/minecraft/server/ArgumentEntity; players
	d (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; getOptionalPlayers
	e (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/EntityPlayer; getPlayer
	f (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; getPlayers
	multipleEntities ()Lnet/minecraft/server/ArgumentEntity; entities
net/minecraft/server/ArgumentEntitySummon net/minecraft/commands/arguments/EntitySummonArgument
	a ERROR_UNKNOWN_ENTITY
	b EXAMPLES
	a ()Lnet/minecraft/server/ArgumentEntitySummon; id
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/MinecraftKey; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/MinecraftKey; getSummonableEntity
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/MinecraftKey; verifyCanSummon
net/minecraft/server/ArgumentInventorySlot net/minecraft/commands/arguments/SlotArgument
	a EXAMPLES
	b ERROR_UNKNOWN_SLOT
	c SLOTS
	a ()Lnet/minecraft/server/ArgumentInventorySlot; slot
	a (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Integer; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)I getSlot
net/minecraft/server/ArgumentItemPredicate net/minecraft/commands/arguments/item/ItemPredicateArgument
	a EXAMPLES
	b ERROR_UNKNOWN_TAG
	a ()Lnet/minecraft/server/ArgumentItemPredicate; itemPredicate
	a (Lcom/mojang/brigadier/StringReader;)Lem$b; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/function/Predicate; getItemPredicate
net/minecraft/server/ArgumentItemStack net/minecraft/commands/arguments/item/ItemArgument
	a EXAMPLES
	a ()Lnet/minecraft/server/ArgumentItemStack; item
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/ArgumentPredicateItemStack; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/ArgumentPredicateItemStack; getItem
net/minecraft/server/ArgumentMathOperation net/minecraft/commands/arguments/OperationArgument
	a EXAMPLES
	b ERROR_INVALID_OPERATION
	c ERROR_DIVIDE_BY_ZERO
	a ()Lnet/minecraft/server/ArgumentMathOperation; operation
	a (Lcom/mojang/brigadier/StringReader;)Ldi$a; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ldi$a; getOperation
	a (Ljava/lang/String;)Ldi$a; getOperation
	b (Ljava/lang/String;)Ldi$b; getSimpleOperation
net/minecraft/server/ArgumentMinecraftKeyRegistered net/minecraft/commands/arguments/ResourceLocationArgument
	a EXAMPLES
	b ERROR_UNKNOWN_ADVANCEMENT
	c ERROR_UNKNOWN_RECIPE
	d ERROR_UNKNOWN_PREDICATE
	a ()Lnet/minecraft/server/ArgumentMinecraftKeyRegistered; id
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/MinecraftKey; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/Advancement; getAdvancement
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/IRecipe; getRecipe
	c (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/LootItemCondition; getPredicate
	d (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/MinecraftKey; getId
net/minecraft/server/ArgumentMobEffect net/minecraft/commands/arguments/MobEffectArgument
	a ERROR_UNKNOWN_EFFECT
	b EXAMPLES
	a ()Lnet/minecraft/server/ArgumentMobEffect; effect
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/MobEffectList; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/MobEffectList; getEffect
net/minecraft/server/ArgumentNBTBase net/minecraft/commands/arguments/NbtTagArgument
	a EXAMPLES
	a ()Lnet/minecraft/server/ArgumentNBTBase; nbtTag
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/NBTBase; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/NBTBase; getNbtTag
net/minecraft/server/ArgumentNBTKey net/minecraft/commands/arguments/NbtPathArgument
	a ERROR_INVALID_NODE
	b ERROR_NOTHING_FOUND
	c EXAMPLES
	a ()Lnet/minecraft/server/ArgumentNBTKey; nbtPath
	a (C)Z isAllowedInUnquotedName
	a (Lcom/mojang/brigadier/StringReader;)Lde$h; parse
	a (Lcom/mojang/brigadier/StringReader;Ljava/lang/String;)Lde$i; readObjectNode
	a (Lcom/mojang/brigadier/StringReader;Z)Lde$i; parseNode
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lde$h; getPath
	b (Lcom/mojang/brigadier/StringReader;)Ljava/lang/String; readUnquotedName
	b (Lnet/minecraft/server/NBTTagCompound;)Ljava/util/function/Predicate; createTagPredicate
net/minecraft/server/ArgumentNBTTag net/minecraft/commands/arguments/CompoundTagArgument
	a EXAMPLES
	a ()Lnet/minecraft/server/ArgumentNBTTag; compoundTag
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/NBTTagCompound; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/NBTTagCompound; getCompoundTag
net/minecraft/server/ArgumentParserItemStack net/minecraft/commands/arguments/item/ItemParser
	a ERROR_NO_TAGS_ALLOWED
	b ERROR_UNKNOWN_ITEM
	c SUGGEST_NOTHING
	d reader
	e forTesting
	f properties
	g item
	h nbt
	i tag
	j tagCursor
	k suggestions
	a ()Ljava/util/Map; getProperties
	a (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; fillSuggestions
	b ()Lnet/minecraft/server/Item; getItem
	b (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestOpenNbt
	c ()Lnet/minecraft/server/NBTTagCompound; getNbt
	c (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestTag
	d ()Lnet/minecraft/server/MinecraftKey; getTag
	d (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestItemIdOrTag
	e ()V readItem
	f ()V readTag
	g ()V readNbt
	h ()Lnet/minecraft/server/ArgumentParserItemStack; parse
net/minecraft/server/ArgumentParserPosition net/minecraft/commands/arguments/coordinates/WorldCoordinate
	a ERROR_EXPECTED_DOUBLE
	b ERROR_EXPECTED_INT
	c relative
	d value
	a ()Z isRelative
	a (D)D get
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/ArgumentParserPosition; parseInt
	a (Lcom/mojang/brigadier/StringReader;Z)Lnet/minecraft/server/ArgumentParserPosition; parseDouble
	b (Lcom/mojang/brigadier/StringReader;)Z isRelative
net/minecraft/server/ArgumentParserSelector net/minecraft/commands/arguments/selector/EntitySelectorParser
	A predicate
	B order
	C currentEntity
	D playerName
	E startPosition
	F entityUUID
	G suggestions
	H hasNameEquals
	I hasNameNotEquals
	J isLimited
	K isSorted
	L hasGamemodeEquals
	M hasGamemodeNotEquals
	N hasTeamEquals
	O hasTeamNotEquals
	P type
	Q typeInverse
	R hasScores
	S hasAdvancements
	a ERROR_INVALID_NAME_OR_UUID
	b ERROR_UNKNOWN_SELECTOR_TYPE
	c ERROR_SELECTORS_NOT_ALLOWED
	checkPermissions usesSelectors
	d ERROR_MISSING_SELECTOR_TYPE
	e ERROR_EXPECTED_END_OF_OPTIONS
	f ERROR_EXPECTED_OPTION_VALUE
	g ORDER_ARBITRARY
	h ORDER_NEAREST
	i ORDER_FURTHEST
	j ORDER_RANDOM
	k SUGGEST_NOTHING
	l reader
	m allowSelectors
	n maxResults
	o includesEntities
	p worldLimited
	q distance
	r level
	s x
	t y
	u z
	v deltaX
	w deltaY
	x deltaZ
	y rotX
	z rotY
	A ()Z hasGamemodeNotEquals
	B ()Z hasTeamEquals
	C ()Z hasTeamNotEquals
	D ()V setTypeLimitedInversely
	E ()Z isTypeLimited
	F ()Z isTypeLimitedInversely
	G ()Z hasScores
	H ()Z hasAdvancements
	I ()V finalizePredicates
	a ()Lnet/minecraft/server/EntitySelector; getSelector
	a (D)V setX
	a (DDD)Lnet/minecraft/server/AxisAlignedBB; createAabb
	a (I)V setMaxResults
	a (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V fillSelectorSuggestions
	a (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; fillSuggestions
	a (Ljava/util/function/BiConsumer;)V setOrder
	a (Ljava/util/function/BiFunction;)V setSuggestions
	a (Ljava/util/function/Predicate;)V addPredicate
	a (Lnet/minecraft/server/CriterionConditionRange;)V setRotX
	a (Lnet/minecraft/server/CriterionConditionRange;Ljava/util/function/ToDoubleFunction;)Ljava/util/function/Predicate; createRotationPredicate
	a (Lnet/minecraft/server/CriterionConditionValue$FloatRange;)V setDistance
	a (Lnet/minecraft/server/CriterionConditionValue$IntegerRange;)V setLevel
	a (Lnet/minecraft/server/EntityTypes;)V limitToType
	a (Z)V setIncludesEntities
	b (D)V setY
	b (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestNameOrSelector
	b (Lnet/minecraft/server/CriterionConditionRange;)V setRotY
	b (Z)V setCurrentEntity
	c ()V parseNameOrUUID
	c (D)V setZ
	c (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestName
	c (Z)V setHasNameEquals
	d ()V parseOptions
	d (D)V setDeltaX
	d (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestSelector
	d (Z)V setHasNameNotEquals
	e ()Z shouldInvertValue
	e (D)V setDeltaY
	e (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestOpenOptions
	e (Z)V setLimited
	f ()Z isTag
	f (D)V setDeltaZ
	f (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestOptionsKeyOrClose
	f (Z)V setSorted
	g ()Lcom/mojang/brigadier/StringReader; getReader
	g (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestOptionsKey
	g (Z)V setHasGamemodeEquals
	h ()V setWorldLimited
	h (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestOptionsNextOrClose
	h (Z)V setHasGamemodeNotEquals
	i ()Lnet/minecraft/server/CriterionConditionValue$FloatRange; getDistance
	i (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestEquals
	i (Z)V setHasTeamEquals
	j ()Lnet/minecraft/server/CriterionConditionValue$IntegerRange; getLevel
	j (Z)V setHasTeamNotEquals
	k ()Lnet/minecraft/server/CriterionConditionRange; getRotX
	k (Z)V setHasScores
	l ()Lnet/minecraft/server/CriterionConditionRange; getRotY
	l (Z)V setHasAdvancements
	m ()Ljava/lang/Double; getX
	n ()Ljava/lang/Double; getY
	o ()Ljava/lang/Double; getZ
	p ()Ljava/lang/Double; getDeltaX
	q ()Ljava/lang/Double; getDeltaY
	r ()Ljava/lang/Double; getDeltaZ
	s ()Ljava/util/function/BiConsumer; getOrder
	u ()Z isCurrentEntity
	v ()Z hasNameEquals
	w ()Z hasNameNotEquals
	x ()Z isLimited
	y ()Z isSorted
	z ()Z hasGamemodeEquals
net/minecraft/server/ArgumentParticle net/minecraft/commands/arguments/ParticleArgument
	a ERROR_UNKNOWN_PARTICLE
	b EXAMPLES
	a ()Lnet/minecraft/server/ArgumentParticle; particle
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/ParticleParam; parse
	a (Lcom/mojang/brigadier/StringReader;Lnet/minecraft/server/Particle;)Lnet/minecraft/server/ParticleParam; readParticle
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/ParticleParam; getParticle
	b (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/ParticleParam; readParticle
net/minecraft/server/ArgumentPosition net/minecraft/commands/arguments/coordinates/BlockPosArgument
	a ERROR_NOT_LOADED
	b ERROR_OUT_OF_WORLD
	c EXAMPLES
	a ()Lnet/minecraft/server/ArgumentPosition; blockPos
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/IVectorPosition; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/BlockPosition; getLoadedBlockPos
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/BlockPosition; getOrLoadBlockPos
net/minecraft/server/ArgumentPredicateItemStack net/minecraft/commands/arguments/item/ItemInput
	a ERROR_STACK_TOO_BIG
	b item
	c tag
	a ()Lnet/minecraft/server/Item; getItem
	a (IZ)Lnet/minecraft/server/ItemStack; createItemStack
	a (Lnet/minecraft/server/ItemStack;)Z test
	b ()Lnet/minecraft/server/NBTTagCompound; getTag
	c ()Ljava/lang/String; serialize
net/minecraft/server/ArgumentProfile net/minecraft/commands/arguments/GameProfileArgument
	a ERROR_UNKNOWN_PLAYER
	b EXAMPLES
	a ()Lnet/minecraft/server/ArgumentProfile; gameProfile
	a (Lcom/mojang/brigadier/StringReader;)Lda$a; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; getGameProfiles
net/minecraft/server/ArgumentRegistry net/minecraft/commands/synchronization/ArgumentTypes
	a LOGGER
	b BY_CLASS
	c BY_NAME
	a ()V bootStrap
	a (Lcom/google/gson/JsonObject;Lcom/mojang/brigadier/arguments/ArgumentType;)V serializeToJson
	a (Lcom/mojang/brigadier/CommandDispatcher;Lcom/mojang/brigadier/tree/CommandNode;)Lcom/google/gson/JsonObject; serializeNodeToJson
	a (Lcom/mojang/brigadier/arguments/ArgumentType;)Lex$a; get
	a (Ljava/lang/String;Ljava/lang/Class;Lnet/minecraft/server/ArgumentSerializer;)V register
	a (Lnet/minecraft/server/MinecraftKey;)Lex$a; get
	a (Lnet/minecraft/server/PacketDataSerializer;)Lcom/mojang/brigadier/arguments/ArgumentType; deserialize
	a (Lnet/minecraft/server/PacketDataSerializer;Lcom/mojang/brigadier/arguments/ArgumentType;)V serialize
net/minecraft/server/ArgumentRotation net/minecraft/commands/arguments/coordinates/RotationArgument
	a ERROR_NOT_COMPLETE
	b EXAMPLES
	a ()Lnet/minecraft/server/ArgumentRotation; rotation
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/IVectorPosition; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/IVectorPosition; getRotation
net/minecraft/server/ArgumentRotationAxis net/minecraft/commands/arguments/coordinates/SwizzleArgument
	a EXAMPLES
	b ERROR_INVALID
	a ()Lnet/minecraft/server/ArgumentRotationAxis; swizzle
	a (Lcom/mojang/brigadier/StringReader;)Ljava/util/EnumSet; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/EnumSet; getSwizzle
net/minecraft/server/ArgumentScoreboardCriteria net/minecraft/commands/arguments/ObjectiveCriteriaArgument
	a ERROR_INVALID_VALUE
	b EXAMPLES
	a ()Lnet/minecraft/server/ArgumentScoreboardCriteria; criteria
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/IScoreboardCriteria; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/IScoreboardCriteria; getCriteria
	a (Lnet/minecraft/server/StatisticWrapper;Ljava/lang/Object;)Ljava/lang/String; getName
net/minecraft/server/ArgumentScoreboardObjective net/minecraft/commands/arguments/ObjectiveArgument
	a ERROR_OBJECTIVE_NAME_TOO_LONG
	b EXAMPLES
	c ERROR_OBJECTIVE_NOT_FOUND
	d ERROR_OBJECTIVE_READ_ONLY
	a ()Lnet/minecraft/server/ArgumentScoreboardObjective; objective
	a (Lcom/mojang/brigadier/StringReader;)Ljava/lang/String; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/ScoreboardObjective; getObjective
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/ScoreboardObjective; getWritableObjective
net/minecraft/server/ArgumentScoreboardSlot net/minecraft/commands/arguments/ScoreboardSlotArgument
	a ERROR_INVALID_VALUE
	b EXAMPLES
	a ()Lnet/minecraft/server/ArgumentScoreboardSlot; displaySlot
	a (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Integer; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)I getDisplaySlot
net/minecraft/server/ArgumentScoreboardTeam net/minecraft/commands/arguments/TeamArgument
	a EXAMPLES
	b ERROR_TEAM_NOT_FOUND
	a ()Lnet/minecraft/server/ArgumentScoreboardTeam; team
	a (Lcom/mojang/brigadier/StringReader;)Ljava/lang/String; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/ScoreboardTeam; getTeam
net/minecraft/server/ArgumentScoreholder net/minecraft/commands/arguments/ScoreHolderArgument
	a SUGGEST_SCORE_HOLDERS
	b EXAMPLES
	c ERROR_NO_RESULTS
	d multiple
	a ()Lnet/minecraft/server/ArgumentScoreholder; scoreHolder
	a (Lcom/mojang/brigadier/StringReader;)Ldm$a; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/lang/String; getName
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Ljava/util/function/Supplier;)Ljava/util/Collection; getNames
	b ()Lnet/minecraft/server/ArgumentScoreholder; scoreHolders
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; getNames
	c (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; getNamesWithDefaultWildcard
net/minecraft/server/ArgumentSerializer net/minecraft/commands/synchronization/ArgumentSerializer
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	b (Lnet/minecraft/server/PacketDataSerializer;)Lcom/mojang/brigadier/arguments/ArgumentType; deserializeFromNetwork
net/minecraft/server/ArgumentSerializerDouble net/minecraft/commands/synchronization/brigadier/DoubleArgumentSerializer
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	a (Lcom/mojang/brigadier/arguments/DoubleArgumentType;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lcom/mojang/brigadier/arguments/DoubleArgumentType;Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	a (Lnet/minecraft/server/PacketDataSerializer;)Lcom/mojang/brigadier/arguments/DoubleArgumentType; deserializeFromNetwork
	b (Lnet/minecraft/server/PacketDataSerializer;)Lcom/mojang/brigadier/arguments/ArgumentType; deserializeFromNetwork
net/minecraft/server/ArgumentSerializerFloat net/minecraft/commands/synchronization/brigadier/FloatArgumentSerializer
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	a (Lcom/mojang/brigadier/arguments/FloatArgumentType;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lcom/mojang/brigadier/arguments/FloatArgumentType;Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	a (Lnet/minecraft/server/PacketDataSerializer;)Lcom/mojang/brigadier/arguments/FloatArgumentType; deserializeFromNetwork
	b (Lnet/minecraft/server/PacketDataSerializer;)Lcom/mojang/brigadier/arguments/ArgumentType; deserializeFromNetwork
net/minecraft/server/ArgumentSerializerInteger net/minecraft/commands/synchronization/brigadier/IntegerArgumentSerializer
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	a (Lcom/mojang/brigadier/arguments/IntegerArgumentType;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lcom/mojang/brigadier/arguments/IntegerArgumentType;Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	a (Lnet/minecraft/server/PacketDataSerializer;)Lcom/mojang/brigadier/arguments/IntegerArgumentType; deserializeFromNetwork
	b (Lnet/minecraft/server/PacketDataSerializer;)Lcom/mojang/brigadier/arguments/ArgumentType; deserializeFromNetwork
net/minecraft/server/ArgumentSerializerLong net/minecraft/commands/synchronization/brigadier/LongArgumentSerializer
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	a (Lcom/mojang/brigadier/arguments/LongArgumentType;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lcom/mojang/brigadier/arguments/LongArgumentType;Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	a (Lnet/minecraft/server/PacketDataSerializer;)Lcom/mojang/brigadier/arguments/LongArgumentType; deserializeFromNetwork
	b (Lnet/minecraft/server/PacketDataSerializer;)Lcom/mojang/brigadier/arguments/ArgumentType; deserializeFromNetwork
net/minecraft/server/ArgumentSerializerString net/minecraft/commands/synchronization/brigadier/StringArgumentSerializer
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	a (Lcom/mojang/brigadier/arguments/StringArgumentType;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lcom/mojang/brigadier/arguments/StringArgumentType;Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	a (Lnet/minecraft/server/PacketDataSerializer;)Lcom/mojang/brigadier/arguments/StringArgumentType; deserializeFromNetwork
	b (Lnet/minecraft/server/PacketDataSerializer;)Lcom/mojang/brigadier/arguments/ArgumentType; deserializeFromNetwork
net/minecraft/server/ArgumentSerializerVoid net/minecraft/commands/synchronization/EmptyArgumentSerializer
	a constructor
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V serializeToJson
	a (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	b (Lnet/minecraft/server/PacketDataSerializer;)Lcom/mojang/brigadier/arguments/ArgumentType; deserializeFromNetwork
net/minecraft/server/ArgumentSerializers net/minecraft/commands/synchronization/brigadier/BrigadierArgumentSerializers
	a ()V bootstrap
	a (B)Z numberHasMin
	a (ZZ)B createNumberFlags
	b (B)Z numberHasMax
net/minecraft/server/ArgumentTag net/minecraft/commands/arguments/item/FunctionArgument
	a EXAMPLES
	b ERROR_UNKNOWN_TAG
	c ERROR_UNKNOWN_FUNCTION
	a ()Lnet/minecraft/server/ArgumentTag; functions
	a (Lcom/mojang/brigadier/StringReader;)Lei$a; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; getFunctions
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lcom/mojang/datafixers/util/Either; getFunctionOrTag
	c (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/CustomFunction; getFunction
	d (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/Tag; getFunctionTag
net/minecraft/server/ArgumentTile net/minecraft/commands/arguments/blocks/BlockStateArgument
	a EXAMPLES
	a ()Lnet/minecraft/server/ArgumentTile; block
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/ArgumentTileLocation; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/ArgumentTileLocation; getBlock
net/minecraft/server/ArgumentTileLocation net/minecraft/commands/arguments/blocks/BlockInput
	a state
	b properties
	c tag
	a ()Lnet/minecraft/server/IBlockData; getState
	a (Lnet/minecraft/server/ShapeDetectorBlock;)Z test
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;)Z test
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;I)Z place
	b ()Lnet/minecraft/server/NBTTagCompound; getTag
	c ()Ljava/util/Set; getDefinedProperties
net/minecraft/server/ArgumentTime net/minecraft/commands/arguments/TimeArgument
	a EXAMPLES
	b ERROR_INVALID_UNIT
	c ERROR_INVALID_TICK_COUNT
	d UNITS
	a ()Lnet/minecraft/server/ArgumentTime; time
	a (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Integer; parse
net/minecraft/server/ArgumentVec2 net/minecraft/commands/arguments/coordinates/Vec2Argument
	a ERROR_NOT_COMPLETE
	b EXAMPLES
	c centerCorrect
	a ()Lnet/minecraft/server/ArgumentVec2; vec2
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/IVectorPosition; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/Vec2F; getVec2
	a (Z)Lnet/minecraft/server/ArgumentVec2; vec2
net/minecraft/server/ArgumentVec2I net/minecraft/commands/arguments/coordinates/ColumnPosArgument
	a ERROR_NOT_COMPLETE
	b EXAMPLES
	a ()Lnet/minecraft/server/ArgumentVec2I; columnPos
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/IVectorPosition; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/BlockPosition2D; getColumnPos
net/minecraft/server/ArgumentVec3 net/minecraft/commands/arguments/coordinates/Vec3Argument
	a ERROR_NOT_COMPLETE
	b ERROR_MIXED_TYPE
	c EXAMPLES
	d centerCorrect
	a ()Lnet/minecraft/server/ArgumentVec3; vec3
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/IVectorPosition; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/Vec3D; getVec3
	a (Z)Lnet/minecraft/server/ArgumentVec3; vec3
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/IVectorPosition; getCoordinates
net/minecraft/server/ArgumentVectorPosition net/minecraft/commands/arguments/coordinates/LocalCoordinates
	a left
	b up
	c forwards
	a ()Z isXRelative
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/ArgumentVectorPosition; parse
	a (Lcom/mojang/brigadier/StringReader;I)D readDouble
	a (Lnet/minecraft/server/CommandListenerWrapper;)Lnet/minecraft/server/Vec3D; getPosition
	b ()Z isYRelative
	b (Lnet/minecraft/server/CommandListenerWrapper;)Lnet/minecraft/server/Vec2F; getRotation
	c ()Z isZRelative
net/minecraft/server/ArmorMaterial net/minecraft/world/item/ArmorMaterial
	a ()I getEnchantmentValue
	a (Lnet/minecraft/server/EnumItemSlot;)I getDurabilityForSlot
	b ()Lnet/minecraft/server/SoundEffect; getEquipSound
	b (Lnet/minecraft/server/EnumItemSlot;)I getDefenseForSlot
	c ()Lnet/minecraft/server/RecipeItemStack; getRepairIngredient
	d ()Ljava/lang/String; getName
	e ()F getToughness
net/minecraft/server/ArraySetSorted net/minecraft/util/SortedArraySet
	a comparator
	b contents
	c size
	a ()Lnet/minecraft/server/ArraySetSorted; create
	a (I)Lnet/minecraft/server/ArraySetSorted; create
	a (Ljava/lang/Object;)Ljava/lang/Object; addOrGet
	a (Ljava/lang/Object;I)V addInternal
	a (Ljava/util/Comparator;)Lnet/minecraft/server/ArraySetSorted; create
	a (Ljava/util/Comparator;I)Lnet/minecraft/server/ArraySetSorted; create
	a ([Ljava/lang/Object;)[Ljava/lang/Object; castRawArray
	b ()Ljava/lang/Object; first
	b (I)I getInsertionPosition
	b (Ljava/lang/Object;)Ljava/lang/Object; get
	c ()Ljava/lang/Object; last
	c (I)V grow
	c (Ljava/lang/Object;)I findIndex
	d (I)V removeInternal
	e (I)Ljava/lang/Object; getInternal
net/minecraft/server/AttributeBase net/minecraft/world/entity/ai/attributes/BaseAttribute
	a parent
	b name
	c defaultValue
	d syncable
	a ()Ljava/lang/String; getName
	a (Z)Lnet/minecraft/server/AttributeBase; setSyncable
	b ()D getDefaultValue
	c ()Z isClientSyncable
	d ()Lnet/minecraft/server/IAttribute; getParentAttribute
net/minecraft/server/AttributeInstance net/minecraft/world/entity/ai/attributes/AttributeInstance
	a (Ljava/lang/String;)Ljava/util/Collection; getModifiers
	a (Ljava/util/Collection;)V addModifiers
	a (Ljava/util/UUID;)Lnet/minecraft/server/AttributeModifier; getModifier
	a (Lnet/minecraft/server/AttributeInstance;)V copyFrom
	a (Lnet/minecraft/server/AttributeModifier$Operation;)Ljava/util/Set; getModifiers
	a (Lnet/minecraft/server/AttributeModifier;)Z hasModifier
	b (Ljava/lang/String;)V removeModifiers
	b (Ljava/util/UUID;)V removeModifier
	d ()V removeModifiers
	setValue (D)V setBaseValue
net/minecraft/server/AttributeMapBase net/minecraft/world/entity/ai/attributes/BaseAttributeMap
	a attributesByObject
	b attributesByName
	c descendantsByParent
	a ()Ljava/util/Collection; getAttributes
	a (Lcom/google/common/collect/Multimap;)V removeAttributeModifiers
	a (Ljava/lang/String;)Lnet/minecraft/server/AttributeInstance; getInstance
	a (Lnet/minecraft/server/AttributeInstance;)V onAttributeModified
	a (Lnet/minecraft/server/AttributeMapBase;)V assignValues
	a (Lnet/minecraft/server/IAttribute;)Lnet/minecraft/server/AttributeInstance; getInstance
	b (Lcom/google/common/collect/Multimap;)V addAttributeModifiers
	b (Lnet/minecraft/server/IAttribute;)Lnet/minecraft/server/AttributeInstance; registerAttribute
	c (Lnet/minecraft/server/IAttribute;)Lnet/minecraft/server/AttributeInstance; createAttributeInstance
	d (Lnet/minecraft/server/IAttribute;)Ljava/util/Collection; getDescendants
net/minecraft/server/AttributeMapServer net/minecraft/world/entity/ai/attributes/ModifiableAttributeMap
	d attributesByLegacy
	e dirtyAttributes
	a (Ljava/lang/String;)Lnet/minecraft/server/AttributeInstance; getInstance
	a (Lnet/minecraft/server/AttributeInstance;)V onAttributeModified
	a (Lnet/minecraft/server/IAttribute;)Lnet/minecraft/server/AttributeInstance; getInstance
	b (Ljava/lang/String;)Lnet/minecraft/server/AttributeModifiable; getInstance
	b (Lnet/minecraft/server/IAttribute;)Lnet/minecraft/server/AttributeInstance; registerAttribute
	c ()Ljava/util/Collection; getSyncableAttributes
	c (Lnet/minecraft/server/IAttribute;)Lnet/minecraft/server/AttributeInstance; createAttributeInstance
	e (Lnet/minecraft/server/IAttribute;)Lnet/minecraft/server/AttributeModifiable; getInstance
	getAttributes ()Ljava/util/Set; getDirtyAttributes
net/minecraft/server/AttributeModifiable net/minecraft/world/entity/ai/attributes/ModifiableAttributeInstance
	a attributeMap
	b attribute
	c modifiers
	d modifiersByName
	e modifierById
	f baseValue
	g dirty
	h cachedValue
	a ()Lnet/minecraft/server/IAttribute; getAttribute
	a (D)V setBaseValue
	a (Ljava/lang/String;)Ljava/util/Collection; getModifiers
	a (Ljava/util/Collection;)V addModifiers
	a (Ljava/util/UUID;)Lnet/minecraft/server/AttributeModifier; getModifier
	a (Lnet/minecraft/server/AttributeModifier$Operation;)Ljava/util/Set; getModifiers
	a (Lnet/minecraft/server/AttributeModifier;)Z hasModifier
	b ()D getBaseValue
	b (Ljava/lang/String;)V removeModifiers
	b (Ljava/util/UUID;)V removeModifier
	b (Lnet/minecraft/server/AttributeModifier$Operation;)Ljava/util/Collection; getAppliedModifiers
	b (Lnet/minecraft/server/AttributeModifier;)V addModifier
	c ()Ljava/util/Set; getModifiers
	c (Lnet/minecraft/server/AttributeModifier;)V removeModifier
	d ()V removeModifiers
	e ()D getValue
	f ()V setDirty
	g ()D calculateValue
net/minecraft/server/AttributeModifier net/minecraft/world/entity/ai/attributes/AttributeModifier
	a amount
	b operation
	c nameGetter
	d id
	e serialize
	a (Z)Lnet/minecraft/server/AttributeModifier; setSerialize
	e ()Z isSerializable
	getUniqueId ()Ljava/util/UUID; getId
net/minecraft/server/AttributeModifier$Operation net/minecraft/world/entity/ai/attributes/AttributeModifier$Operation
	d OPERATIONS
	e value
	f $VALUES
	a ()I toValue
	a (I)Lnet/minecraft/server/AttributeModifier$Operation; fromValue
net/minecraft/server/AttributeRanged net/minecraft/world/entity/ai/attributes/RangedAttribute
	a minValue
	c importLegacyName
	maximum maxValue
	a (D)D sanitizeValue
	a (Ljava/lang/String;)Lnet/minecraft/server/AttributeRanged; importLegacyName
	e ()D getMinValue
	f ()D getMaxValue
	g ()Ljava/lang/String; getImportLegacyName
net/minecraft/server/AutoRecipe net/minecraft/recipebook/ServerPlaceRecipe
	a LOGGER
	b stackedContents
	c inventory
	d menu
	a ()V clearGrid
	a (I)V moveItemToInventory
	a (Ljava/util/Iterator;IIII)V addItemToSlot
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/IRecipe;Z)V recipeClicked
	a (Lnet/minecraft/server/IRecipe;Z)V handleRecipeClicked
	a (Lnet/minecraft/server/Slot;Lnet/minecraft/server/ItemStack;)V moveItemToGrid
	a (ZIZ)I getStackSize
	b ()Z testClearGrid
	c ()I getAmountOfFreeSlotsInInventory
net/minecraft/server/AutoRecipeAbstract net/minecraft/recipebook/PlaceRecipe
	a (IIILnet/minecraft/server/IRecipe;Ljava/util/Iterator;I)V placeRecipe
	a (Ljava/util/Iterator;IIII)V addItemToSlot
net/minecraft/server/AutoRecipeFurnace net/minecraft/recipebook/ServerPlaceSmeltingRecipe
	e recipeMatchesPlaced
	a ()V clearGrid
	a (ILit/unimi/dsi/fastutil/ints/IntList;)V placeRecipe
	a (Lnet/minecraft/server/IRecipe;Z)V handleRecipeClicked
net/minecraft/server/AutoRecipeOutput net/minecraft/world/inventory/StackedContentsCompatible
	a (Lnet/minecraft/server/AutoRecipeStackManager;)V fillStackedContents
net/minecraft/server/AutoRecipeStackManager net/minecraft/world/entity/player/StackedContents
	a contents
	a ()V clear
	a (I)Lnet/minecraft/server/ItemStack; fromStackingIndex
	a (II)I take
	a (Lnet/minecraft/server/IRecipe;ILit/unimi/dsi/fastutil/ints/IntList;)I getBiggestCraftableStack
	a (Lnet/minecraft/server/IRecipe;Lit/unimi/dsi/fastutil/ints/IntList;)Z canCraft
	a (Lnet/minecraft/server/IRecipe;Lit/unimi/dsi/fastutil/ints/IntList;I)Z canCraft
	a (Lnet/minecraft/server/ItemStack;)V accountSimpleStack
	a (Lnet/minecraft/server/ItemStack;I)V accountStack
	b (I)Z has
	b (II)V put
	b (Lnet/minecraft/server/IRecipe;Lit/unimi/dsi/fastutil/ints/IntList;)I getBiggestCraftableStack
	b (Lnet/minecraft/server/ItemStack;)V accountStack
	c (Lnet/minecraft/server/ItemStack;)I getStackingIndex
net/minecraft/server/AxisAlignedBB net/minecraft/world/phys/AABB
	a ()D getSize
	a (D)Lnet/minecraft/server/AxisAlignedBB; setMinX
	a (DDD)Lnet/minecraft/server/AxisAlignedBB; contract
	a (DDDDDD)Z intersects
	a (Ljava/lang/Iterable;)Lnet/minecraft/server/AxisAlignedBB; minmax
	a (Ljava/lang/Iterable;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/MovingObjectPositionBlock; clip
	a (Lnet/minecraft/server/AxisAlignedBB;)Lnet/minecraft/server/AxisAlignedBB; intersect
	a (Lnet/minecraft/server/AxisAlignedBB;D)D clipXCollide
	a (Lnet/minecraft/server/AxisAlignedBB;Lnet/minecraft/server/Vec3D;[DLnet/minecraft/server/EnumDirection;DDD)Lnet/minecraft/server/EnumDirection; getDirection
	a (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/AxisAlignedBB; move
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;)D min
	a (Lnet/minecraft/server/StructureBoundingBox;)Lnet/minecraft/server/AxisAlignedBB; of
	a (Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/AxisAlignedBB; expandTowards
	a (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Vec3D;)Z intersects
	a ([DLnet/minecraft/server/EnumDirection;DDDDDDDDLnet/minecraft/server/EnumDirection;DDD)Lnet/minecraft/server/EnumDirection; clipPoint
	b ()D getXsize
	b (D)Lnet/minecraft/server/AxisAlignedBB; setMinY
	b (DDD)Lnet/minecraft/server/AxisAlignedBB; expandTowards
	b (Lnet/minecraft/server/AxisAlignedBB;)Lnet/minecraft/server/AxisAlignedBB; minmax
	b (Lnet/minecraft/server/AxisAlignedBB;D)D clipYCollide
	b (Lnet/minecraft/server/EnumDirection$EnumAxis;)D max
	b (Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/AxisAlignedBB; move
	b (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Vec3D;)Ljava/util/Optional; clip
	c ()D getYsize
	c (D)Lnet/minecraft/server/AxisAlignedBB; setMinZ
	c (Lnet/minecraft/server/AxisAlignedBB;)Z intersects
	c (Lnet/minecraft/server/AxisAlignedBB;D)D clipZCollide
	c (Lnet/minecraft/server/Vec3D;)Z contains
	d ()D getZsize
	d (D)Lnet/minecraft/server/AxisAlignedBB; setMaxX
	d (DDD)Lnet/minecraft/server/AxisAlignedBB; move
	e ()Z hasNaN
	e (D)Lnet/minecraft/server/AxisAlignedBB; setMaxY
	e (DDD)Z contains
	f ()Lnet/minecraft/server/Vec3D; getCenter
	f (D)Lnet/minecraft/server/AxisAlignedBB; setMaxZ
	f (DDD)Lnet/minecraft/server/AxisAlignedBB; deflate
	g (D)Lnet/minecraft/server/AxisAlignedBB; inflate
	grow (DDD)Lnet/minecraft/server/AxisAlignedBB; inflate
	shrink (D)Lnet/minecraft/server/AxisAlignedBB; deflate
net/minecraft/server/BaseBlockPosition net/minecraft/core/Vec3i
	a x
	b y
	c z
	a (Lnet/minecraft/server/BaseBlockPosition;D)Z closerThan
	a (Lnet/minecraft/server/BaseBlockPosition;Lnet/minecraft/server/BaseBlockPosition;)Ljava/lang/Iterable; between
	a (Lnet/minecraft/server/IPosition;D)Z closerThan
	a (Lnet/minecraft/server/IPosition;Z)D distSqr
	b (DDD)Lnet/minecraft/server/BaseBlockPosition; offset
	b (Lnet/minecraft/server/EnumDirection$EnumAxis;I)Lnet/minecraft/server/BaseBlockPosition; relative
	b (Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/BaseBlockPosition; relative
	c (III)Lnet/minecraft/server/BaseBlockPosition; offset
	d (Lnet/minecraft/server/BaseBlockPosition;)Lnet/minecraft/server/BaseBlockPosition; cross
	distanceSquared (DDDZ)D distSqr
	down ()Lnet/minecraft/server/BaseBlockPosition; below
	down (I)Lnet/minecraft/server/BaseBlockPosition; below
	e (Lnet/minecraft/server/BaseBlockPosition;)Lnet/minecraft/server/BaseBlockPosition; subtract
	f (Lnet/minecraft/server/BaseBlockPosition;)Lnet/minecraft/server/BaseBlockPosition; offset
	h (I)Lnet/minecraft/server/BaseBlockPosition; east
	i ()Lnet/minecraft/server/BaseBlockPosition; east
	i (I)Lnet/minecraft/server/BaseBlockPosition; west
	j ()Lnet/minecraft/server/BaseBlockPosition; west
	j (I)Lnet/minecraft/server/BaseBlockPosition; south
	k ()Lnet/minecraft/server/BaseBlockPosition; south
	k (I)Lnet/minecraft/server/BaseBlockPosition; north
	l ()Lnet/minecraft/server/BaseBlockPosition; north
	l (Lnet/minecraft/server/BaseBlockPosition;)I compareTo
	m (I)Lnet/minecraft/server/BaseBlockPosition; above
	m (Lnet/minecraft/server/BaseBlockPosition;)D distSqr
	n ()Lnet/minecraft/server/BaseBlockPosition; above
	n (I)Lnet/minecraft/server/BaseBlockPosition; multiply
	n (Lnet/minecraft/server/BaseBlockPosition;)I distManhattan
	shift (Lnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/BaseBlockPosition; relative
	x ()Ljava/lang/String; toShortString
net/minecraft/server/Behavior net/minecraft/world/entity/ai/behavior/Behavior
	a entryCondition
	b status
	c endTimestamp
	d minDuration
	e maxDuration
	a ()Lnet/minecraft/server/Behavior$Status; getStatus
	a (J)Z timedOut
	a (Lnet/minecraft/server/EntityLiving;)Z hasRequiredMemories
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)Z tryStart
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V tickOrStop
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V tick
	e (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V doStop
	f (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V stop
	g (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)Z canStillUse
net/minecraft/server/Behavior$Status net/minecraft/world/entity/ai/behavior/Behavior$Status
	c $VALUES
net/minecraft/server/BehaviorBedJump net/minecraft/world/entity/ai/behavior/JumpOnBed
	a speed
	b targetBed
	c remainingTimeToReachBed
	d remainingJumps
	e remainingCooldownUntilNextJump
	a (J)Z timedOut
	a (Lnet/minecraft/server/EntityInsentient;)Ljava/util/Optional; getNearestBed
	a (Lnet/minecraft/server/EntityInsentient;Lnet/minecraft/server/BlockPosition;)V startWalkingTowardsBed
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;)Z isBed
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;)Z nearBed
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;J)V stop
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;)Z onOrOverBed
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;J)Z canStillUse
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;)Z onBedSurface
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;J)V tick
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V tick
	e (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;)Z tiredOfWalking
	f (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;)Z tiredOfJumping
	f (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V stop
	g (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)Z canStillUse
net/minecraft/server/BehaviorBell net/minecraft/world/entity/ai/behavior/SocializeAtBell
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
net/minecraft/server/BehaviorBellAlert net/minecraft/world/entity/ai/behavior/ReactToBell
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
net/minecraft/server/BehaviorBellRing net/minecraft/world/entity/ai/behavior/RingBell
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
net/minecraft/server/BehaviorCareer net/minecraft/world/entity/ai/behavior/AssignProfessionFromJobSite
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V start
net/minecraft/server/BehaviorCelebrate net/minecraft/world/entity/ai/behavior/Celebrate
	a currentRaid
	a (Lnet/minecraft/server/EnumColor;I)Lnet/minecraft/server/ItemStack; getFirework
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)Z canStillUse
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V stop
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V tick
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V tick
	f (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V stop
	g (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)Z canStillUse
net/minecraft/server/BehaviorController net/minecraft/world/entity/ai/Brain
	c availableGoalsByPriority
	e activityRequirements
	f coreActivities
	g activeActivities
	h defaultActivity
	i lastScheduleUpdate
	a ()Ljava/util/Map; getMemories
	a (JJ)V updateActivity
	a (Lcom/mojang/datafixers/types/DynamicOps;)Ljava/lang/Object; serialize
	a (Ljava/lang/Object;)Z isEmptyCollection
	a (Ljava/util/Set;)V setCoreActivities
	a (Lnet/minecraft/server/Activity;)V setActivity
	a (Lnet/minecraft/server/Activity;Lcom/google/common/collect/ImmutableList;)V addActivity
	a (Lnet/minecraft/server/Activity;Lcom/google/common/collect/ImmutableList;Ljava/util/Set;)V addActivity
	a (Lnet/minecraft/server/MemoryModuleType;Lcom/mojang/datafixers/Dynamic;)V readMemory
	a (Lnet/minecraft/server/MemoryModuleType;Lnet/minecraft/server/MemoryStatus;)Z checkMemory
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)V tick
	b (Lnet/minecraft/server/Activity;)V setDefaultActivity
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)V stopAll
	c ()Ljava/util/Set; getActiveActivities
	c (Lnet/minecraft/server/Activity;)Z isActive
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)V tickEachSensor
	d ()Ljava/util/stream/Stream; getRunningBehaviorsStream
	d (Lnet/minecraft/server/Activity;)Z activityRequirementsAreMet
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)V startEachNonRunningBehavior
	e ()V useDefaultActivity
	e (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)V tickEachRunningBehavior
	f ()Lnet/minecraft/server/BehaviorController; copyWithoutGoals
	hasMemory (Lnet/minecraft/server/MemoryModuleType;)Z hasMemoryValue
	removeMemory (Lnet/minecraft/server/MemoryModuleType;)V eraseMemory
net/minecraft/server/BehaviorCooldown net/minecraft/world/entity/ai/behavior/VillagerCalmDown
	a (Lnet/minecraft/server/EntityVillager;)Z isCloseToEntityThatHurtMe
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V start
net/minecraft/server/BehaviorFarm net/minecraft/world/entity/ai/behavior/HarvestFarmland
	a aboveFarmlandPos
	b canPlantStuff
	c wantsToReapStuff
	d nextOkStartTime
	e timeWorkedSoFar
	f validFarmlandAroundVillager
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldServer;)Z validPos
	a (Lnet/minecraft/server/WorldServer;)Lnet/minecraft/server/BlockPosition; getValidFarmland
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V start
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V stop
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V tick
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V tick
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)Z canStillUse
	f (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V stop
	g (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)Z canStillUse
net/minecraft/server/BehaviorFindPosition net/minecraft/world/entity/ai/behavior/AcquirePoi
	a poiType
	b memoryType
	c onlyIfAdult
	d lastUpdate
	e batchCache
	f triedCount
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityCreature;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityCreature;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
net/minecraft/server/BehaviorGate net/minecraft/world/entity/ai/behavior/GateBehavior
	a exitErasedMemories
	b orderPolicy
	c runningPolicy
	d behaviors
	a (J)Z timedOut
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V tick
	f (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V stop
	g (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)Z canStillUse
net/minecraft/server/BehaviorGate$Execution net/minecraft/world/entity/ai/behavior/GateBehavior$RunningPolicy
	c $VALUES
	a (Lnet/minecraft/server/WeightedList;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V apply
net/minecraft/server/BehaviorGate$Order net/minecraft/world/entity/ai/behavior/GateBehavior$OrderPolicy
	c consumer
	d $VALUES
	a (Lnet/minecraft/server/WeightedList;)V apply
net/minecraft/server/BehaviorGateSingle net/minecraft/world/entity/ai/behavior/RunOne
net/minecraft/server/BehaviorHide net/minecraft/world/entity/ai/behavior/SetHiddenState
	a closeEnoughDist
	b stayHiddenTicks
	c ticksHidden
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
net/minecraft/server/BehaviorHome net/minecraft/world/entity/ai/behavior/LocateHidingPlace
	a speed
	b radius
	c closeEnoughDist
	d currentPos
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
net/minecraft/server/BehaviorHomeRaid net/minecraft/world/entity/ai/behavior/LocateHidingPlaceDuringRaid
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
net/minecraft/server/BehaviorInteract net/minecraft/world/entity/ai/behavior/InteractWith
	a maxDist
	b speed
	c type
	d interactionRangeSqr
	e targetFilter
	f selfFilter
	g memory
	a (Lnet/minecraft/server/EntityTypes;ILnet/minecraft/server/MemoryModuleType;FI)Lnet/minecraft/server/BehaviorInteract; of
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
net/minecraft/server/BehaviorInteractDoor net/minecraft/world/entity/ai/behavior/InteractWithDoor
	a (Lnet/minecraft/server/WorldServer;Ljava/util/List;ILnet/minecraft/server/EntityLiving;Lnet/minecraft/server/BehaviorController;)V closeAllOpenedDoors
	a (Lnet/minecraft/server/WorldServer;Ljava/util/List;Ljava/util/List;)Ljava/util/Set; getDoorsThatAreOnMyPath
	a (Lnet/minecraft/server/WorldServer;Ljava/util/List;Ljava/util/Set;ILnet/minecraft/server/EntityLiving;Lnet/minecraft/server/BehaviorController;)V openOrCloseDoors
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
net/minecraft/server/BehaviorInteractPlayer net/minecraft/world/entity/ai/behavior/LookAndFollowTradingPlayerSink
	a speed
	a (J)Z timedOut
	a (Lnet/minecraft/server/EntityVillager;)V followPlayer
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)Z canStillUse
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V start
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V stop
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V tick
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V tick
	f (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V stop
	g (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)Z canStillUse
net/minecraft/server/BehaviorLook net/minecraft/world/entity/ai/behavior/LookAtTargetSink
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;J)Z canStillUse
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;J)V stop
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;J)V tick
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V tick
	f (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V stop
	g (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)Z canStillUse
net/minecraft/server/BehaviorLookInteract net/minecraft/world/entity/ai/behavior/SetLookAndInteract
	a type
	b interactionRangeSqr
	c targetFilter
	d selfFilter
	a (Lnet/minecraft/server/EntityLiving;)Z isMatchingTarget
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	b (Lnet/minecraft/server/EntityLiving;)Ljava/util/List; getVisibleEntities
net/minecraft/server/BehaviorLookTarget net/minecraft/world/entity/ai/behavior/SetEntityLookTarget
	a predicate
	b maxDistSqr
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
net/minecraft/server/BehaviorLookWalk net/minecraft/world/entity/ai/behavior/SetWalkTargetFromLookTarget
	a speed
	b closeEnoughDistance
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
net/minecraft/server/BehaviorMakeLove net/minecraft/world/entity/ai/behavior/MakeLove
	a birthTimestamp
	a (Lnet/minecraft/server/EntityVillager;)Lnet/minecraft/server/EntityVillager; getBreedingTarget
	a (Lnet/minecraft/server/EntityVillager;Lnet/minecraft/server/BlockPosition;)Z canReach
	a (Lnet/minecraft/server/EntityVillager;Lnet/minecraft/server/EntityVillager;)Ljava/util/Optional; breed
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)Z canStillUse
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;Lnet/minecraft/server/BlockPosition;)V giveBedToChild
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;Lnet/minecraft/server/EntityVillager;)V tryToGiveBirth
	b (Lnet/minecraft/server/EntityVillager;)Z isBreedingPossible
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;)Ljava/util/Optional; takeVacantBed
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V start
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V tick
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V tick
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V stop
	f (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V stop
	g (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)Z canStillUse
net/minecraft/server/BehaviorNearestVillage net/minecraft/world/entity/ai/behavior/GoToClosestVillage
	a speed
	b closeEnoughDistance
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V start
net/minecraft/server/BehaviorNop net/minecraft/world/entity/ai/behavior/DoNothing
	g (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)Z canStillUse
net/minecraft/server/BehaviorOutside net/minecraft/world/entity/ai/behavior/MoveToSkySeeingSpot
	a speed
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/BlockPosition;)Z hasNoBlocksAbove
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/Vec3D; getOutdoorPosition
net/minecraft/server/BehaviorOutsideCelebrate net/minecraft/world/entity/ai/behavior/GoOutsideToCelebrate
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
net/minecraft/server/BehaviorPanic net/minecraft/world/entity/ai/behavior/VillagerPanicTrigger
	a (Lnet/minecraft/server/EntityLiving;)Z hasHostile
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)Z canStillUse
	b (Lnet/minecraft/server/EntityLiving;)Z isHurt
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V start
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V tick
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V tick
	g (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)Z canStillUse
net/minecraft/server/BehaviorPickupItem net/minecraft/world/entity/ai/behavior/PickUpItems
	a items
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V start
net/minecraft/server/BehaviorPlay net/minecraft/world/entity/ai/behavior/PlayTagWithOtherKids
	a (Lnet/minecraft/server/EntityCreature;)Ljava/util/Optional; findSomeoneToChase
	a (Lnet/minecraft/server/EntityCreature;Lnet/minecraft/server/EntityLiving;)V chaseKid
	a (Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/EntityLiving; whoAreYouChasing
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)Z isFriendChasingMe
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityCreature;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityCreature;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityCreature;Lnet/minecraft/server/EntityLiving;)V fleeFromChaser
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	b (Lnet/minecraft/server/EntityCreature;)Ljava/util/Optional; findSomeoneBeingChased
	b (Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/EntityLiving; seeIfSomeoneIsChasingMe
	c (Lnet/minecraft/server/EntityCreature;)Ljava/util/Map; checkHowManyChasersEachFriendHas
	c (Lnet/minecraft/server/EntityLiving;)Z isChasingSomeone
	d (Lnet/minecraft/server/EntityCreature;)Ljava/util/List; getFriendsNearby
	e (Lnet/minecraft/server/EntityCreature;)Z hasFriendsNearby
net/minecraft/server/BehaviorPosition net/minecraft/world/entity/ai/behavior/PositionWrapper
	a ()Lnet/minecraft/server/BlockPosition; getPos
	a (Lnet/minecraft/server/EntityLiving;)Z isVisible
	b ()Lnet/minecraft/server/Vec3D; getLookAtPos
net/minecraft/server/BehaviorPositionEntity net/minecraft/world/entity/ai/behavior/EntityPosWrapper
	a entity
	a ()Lnet/minecraft/server/BlockPosition; getPos
	a (Lnet/minecraft/server/EntityLiving;)Z isVisible
	b ()Lnet/minecraft/server/Vec3D; getLookAtPos
	c ()Lnet/minecraft/server/Entity; getEntity
net/minecraft/server/BehaviorPositionValidate net/minecraft/world/entity/ai/behavior/ValidateNearbyPoi
	a memoryType
	b poiPredicate
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;)Z poiDoesntExist
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityLiving;)Z bedIsOccupied
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
net/minecraft/server/BehaviorProfession net/minecraft/world/entity/ai/behavior/ResetProfession
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V start
net/minecraft/server/BehaviorRaid net/minecraft/world/entity/ai/behavior/SetRaidStatus
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
net/minecraft/server/BehaviorRaidReset net/minecraft/world/entity/ai/behavior/ResetRaidStatus
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
net/minecraft/server/BehaviorSchedule net/minecraft/world/entity/ai/behavior/UpdateActivityFromSchedule
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
net/minecraft/server/BehaviorSleep net/minecraft/world/entity/ai/behavior/SleepInBed
	a nextOkStartTime
	a (J)Z timedOut
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	f (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V stop
	g (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)Z canStillUse
net/minecraft/server/BehaviorStrollInside net/minecraft/world/entity/ai/behavior/InsideBrownianWalk
	a speed
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityCreature;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityCreature;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
net/minecraft/server/BehaviorStrollPlace net/minecraft/world/entity/ai/behavior/StrollToPoi
	a memoryType
	b closeEnoughDist
	c maxDistanceFromPoi
	d nextOkStartTime
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityCreature;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityCreature;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
net/minecraft/server/BehaviorStrollPlaceList net/minecraft/world/entity/ai/behavior/StrollToPoiList
	a strollToMemoryType
	b mustBeCloseToMemoryType
	c speed
	d closeEnoughDist
	e maxDistanceFromPoi
	f nextOkStartTime
	g targetPos
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V start
net/minecraft/server/BehaviorStrollPosition net/minecraft/world/entity/ai/behavior/StrollAroundPoi
	a memoryType
	b nextOkStartTime
	c maxDistanceFromPoi
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityCreature;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityCreature;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
net/minecraft/server/BehaviorStrollRandom net/minecraft/world/entity/ai/behavior/VillageBoundRandomStroll
	a speed
	b maxXyDist
	c maxYDist
	a (Lnet/minecraft/server/EntityCreature;)V setRandomPos
	a (Lnet/minecraft/server/EntityCreature;Lnet/minecraft/server/SectionPosition;)V setTargetedPos
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityCreature;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
net/minecraft/server/BehaviorSwim net/minecraft/world/entity/ai/behavior/Swim
	a height
	b chance
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;J)Z canStillUse
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;J)V tick
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V tick
	g (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)Z canStillUse
net/minecraft/server/BehaviorTarget net/minecraft/world/entity/ai/behavior/BlockPosWrapper
	a pos
	b lookAt
	a ()Lnet/minecraft/server/BlockPosition; getPos
	a (Lnet/minecraft/server/EntityLiving;)Z isVisible
	b ()Lnet/minecraft/server/Vec3D; getLookAtPos
net/minecraft/server/BehaviorTradePlayer net/minecraft/world/entity/ai/behavior/ShowTradesToPlayer
	a playerItemStack
	b displayItems
	c cycleCounter
	d displayIndex
	e lookTime
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityVillager;)V findItemsToDisplay
	a (Lnet/minecraft/server/EntityVillager;)V displayFirstItem
	a (Lnet/minecraft/server/MerchantRecipe;)Z playerItemStackMatchesCostOfOffer
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)Z canStillUse
	b (Lnet/minecraft/server/EntityVillager;)V updateDisplayItems
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V start
	c (Lnet/minecraft/server/EntityVillager;)Lnet/minecraft/server/EntityLiving; lookAtTarget
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V tick
	d (Lnet/minecraft/server/EntityVillager;)V displayCyclingItems
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V tick
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V stop
	f (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V stop
	g (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)Z canStillUse
net/minecraft/server/BehaviorTradeVillager net/minecraft/world/entity/ai/behavior/TradeWithVillager
	a trades
	a (Lnet/minecraft/server/EntityVillager;Ljava/util/Set;Lnet/minecraft/server/EntityLiving;)V throwHalfStack
	a (Lnet/minecraft/server/EntityVillager;Lnet/minecraft/server/EntityVillager;)Ljava/util/Set; figureOutWhatIAmWillingToTrade
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)Z canStillUse
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V start
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V tick
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V tick
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V stop
	f (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V stop
	g (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)Z canStillUse
net/minecraft/server/BehaviorUtil net/minecraft/world/entity/ai/behavior/BehaviorUtils
	a (Lnet/minecraft/server/BehaviorController;Lnet/minecraft/server/EntityLiving;)Z entityIsVisible
	a (Lnet/minecraft/server/BehaviorController;Lnet/minecraft/server/MemoryModuleType;Lnet/minecraft/server/EntityTypes;)Z targetIsValid
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)V lockGazeAndWalkToEachOther
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;I)V walkToEntity
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityLiving;)V throwItem
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/SectionPosition;I)Lnet/minecraft/server/SectionPosition; findSectionClosestToVillage
	b (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)V lookAtEachOther
	c (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)V lookAtEntity
	d (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)V walkToEachOther
net/minecraft/server/BehaviorVictory net/minecraft/world/entity/ai/behavior/VictoryStroll
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityCreature;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
net/minecraft/server/BehaviorVillageHeroGift net/minecraft/world/entity/ai/behavior/GiveGiftToHero
	a gifts
	b timeUntilNextGift
	c giftGivenDuringThisRun
	d timeSinceStart
	a (Lnet/minecraft/server/EntityHuman;)Z isHero
	a (Lnet/minecraft/server/EntityVillager;)Ljava/util/List; getItemToThrow
	a (Lnet/minecraft/server/EntityVillager;Lnet/minecraft/server/EntityHuman;)Z isWithinThrowingDistance
	a (Lnet/minecraft/server/EntityVillager;Lnet/minecraft/server/EntityLiving;)V throwGift
	a (Lnet/minecraft/server/WorldServer;)I calculateTimeUntilNextGift
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V start
	b (Lnet/minecraft/server/EntityVillager;)Z isHeroVisible
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)Z canStillUse
	c (Lnet/minecraft/server/EntityVillager;)Ljava/util/Optional; getNearestTargetableHero
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V tick
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V tick
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V stop
	f (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V stop
	g (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)Z canStillUse
net/minecraft/server/BehaviorWake net/minecraft/world/entity/ai/behavior/WakeUp
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
net/minecraft/server/BehaviorWalkAwayBlock net/minecraft/world/entity/ai/behavior/SetWalkTargetFromBlockMemory
	a memoryType
	b speed
	c closeEnoughDist
	d tooFarDistance
	e tooLongUnreachableDuration
	a (Lnet/minecraft/server/EntityVillager;J)V dropPOI
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;)Z tiredOfTryingToFindTarget
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;Lnet/minecraft/server/GlobalPos;)Z tooFar
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;Lnet/minecraft/server/GlobalPos;)Z closeEnough
net/minecraft/server/BehaviorWalkAwayEntity net/minecraft/world/entity/ai/behavior/SetWalkTargetAwayFromEntity
	a memory
	b speed
	a (Lnet/minecraft/server/EntityCreature;Lnet/minecraft/server/Entity;F)V moveAwayFromMob
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityCreature;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityCreature;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
net/minecraft/server/BehaviorWalkHome net/minecraft/world/entity/ai/behavior/SetClosestHomeAsWalkTarget
	a speed
	b batchCache
	c triedCount
	d lastUpdate
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
net/minecraft/server/BehaviorWork net/minecraft/world/entity/ai/behavior/WorkAtPoi
	a lastCheck
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;J)V start
net/minecraft/server/Behaviors net/minecraft/world/entity/ai/behavior/VillagerGoalPackages
	a ()Lcom/mojang/datafixers/util/Pair; getFullLookBehavior
	a (F)Lcom/google/common/collect/ImmutableList; getPlayPackage
	a (Lnet/minecraft/server/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; getCorePackage
	b ()Lcom/mojang/datafixers/util/Pair; getMinimalLookBehavior
	b (Lnet/minecraft/server/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; getWorkPackage
	c (Lnet/minecraft/server/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; getRestPackage
	d (Lnet/minecraft/server/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; getMeetPackage
	e (Lnet/minecraft/server/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; getIdlePackage
	f (Lnet/minecraft/server/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; getPanicPackage
	g (Lnet/minecraft/server/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; getPreRaidPackage
	h (Lnet/minecraft/server/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; getRaidPackage
	i (Lnet/minecraft/server/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; getHidePackage
net/minecraft/server/BehavorMove net/minecraft/world/entity/ai/behavior/MoveToTargetSink
	a path
	b lastTargetPos
	c speed
	d remainingDelay
	a (Lnet/minecraft/server/EntityInsentient;Lnet/minecraft/server/MemoryTarget;)Z reachedTarget
	a (Lnet/minecraft/server/EntityInsentient;Lnet/minecraft/server/MemoryTarget;J)Z tryComputePath
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;J)Z canStillUse
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)Z checkExtraStartConditions
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V start
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;J)V stop
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;J)V start
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;J)V tick
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V tick
	f (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)V stop
	g (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;J)Z canStillUse
net/minecraft/server/BiomeBambooJungle net/minecraft/world/level/biome/BambooJungleBiome
net/minecraft/server/BiomeBambooJungleHills net/minecraft/world/level/biome/BambooJungleHillsBiome
net/minecraft/server/BiomeBase net/minecraft/world/level/biome/Biome
	a LOGGER
	b EXPLORABLE_BIOMES
	c MUTATED_BIOMES
	d TEMPERATURE_NOISE
	e BIOME_INFO_NOISE
	f descriptionId
	g depth
	h scale
	i temperature
	j downfall
	k waterColor
	l waterFogColor
	m parent
	n surfaceBuilder
	o biomeCategory
	p precipitation
	q carvers
	r features
	s flowerFeatures
	t validFeatureStarts
	u skyColor
	v spawners
	w temperatureCache
	a ()I getFoliageColor
	a (DD)I getGrassColor
	a (ILnet/minecraft/server/BiomeBase;)Lnet/minecraft/server/BiomeBase; getBiome
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJ)V buildSurfaceAt
	a (Lnet/minecraft/server/BiomeBase;)Lnet/minecraft/server/BiomeBase; getMutatedVariant
	a (Lnet/minecraft/server/BlockPosition;)F getTemperatureNoCache
	a (Lnet/minecraft/server/EnumCreatureType;Lnet/minecraft/server/BiomeBase$BiomeMeta;)V addSpawn
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z shouldFreeze
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Z)Z shouldFreeze
	a (Lnet/minecraft/server/StructureGenerator;)Z isValidStart
	a (Lnet/minecraft/server/WorldGenCarverAbstract;Lnet/minecraft/server/WorldGenCarverConfiguration;)Lnet/minecraft/server/WorldGenCarverWrapper; makeCarver
	a (Lnet/minecraft/server/WorldGenFeatureConfigured;)V addStructureStart
	a (Lnet/minecraft/server/WorldGenStage$Decoration;)Ljava/util/List; getFeaturesForStep
	a (Lnet/minecraft/server/WorldGenStage$Decoration;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/GeneratorAccess;JLnet/minecraft/server/SeededRandom;Lnet/minecraft/server/BlockPosition;)V generate
	a (Lnet/minecraft/server/WorldGenStage$Decoration;Lnet/minecraft/server/WorldGenFeatureConfigured;)V addFeature
	a (Lnet/minecraft/server/WorldGenStage$Features;)Ljava/util/List; getCarvers
	a (Lnet/minecraft/server/WorldGenStage$Features;Lnet/minecraft/server/WorldGenCarverWrapper;)V addCarver
	b ()Z isMutated
	b (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z shouldSnow
	b (Lnet/minecraft/server/StructureGenerator;)Lnet/minecraft/server/WorldGenFeatureConfiguration; getStructureConfiguration
	c ()I getSkyColor
	d ()Lnet/minecraft/server/BiomeBase$Precipitation; getPrecipitation
	e ()Z isHumid
	f ()F getCreatureProbability
	g ()Ljava/util/List; getFlowerFeatures
	getAdjustedTemperature (Lnet/minecraft/server/BlockPosition;)F getTemperature
	getHumidity ()F getDownfall
	h ()Lnet/minecraft/server/BiomeBase$EnumTemperature; getTemperatureCategory
	i ()F getDepth
	k ()Lnet/minecraft/server/IChatBaseComponent; getName
	l ()Ljava/lang/String; getDescriptionId
	m ()F getScale
	o ()I getWaterColor
	p ()I getWaterFogColor
	q ()Lnet/minecraft/server/BiomeBase$Geography; getBiomeCategory
	r ()Lnet/minecraft/server/WorldGenSurfaceComposite; getSurfaceBuilder
	s ()Lnet/minecraft/server/WorldGenSurfaceConfiguration; getSurfaceBuilderConfig
	t ()Ljava/lang/String; getParent
	u ()I calculateSkyColor
net/minecraft/server/BiomeBase$BiomeMeta net/minecraft/world/level/biome/Biome$SpawnerData
	b type
	c minCount
	d maxCount
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/BiomeBase$BiomeMeta; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/BiomeBase$EnumTemperature net/minecraft/world/level/biome/Biome$BiomeTempCategory
	e BY_NAME
	f name
	g $VALUES
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lnet/minecraft/server/BiomeBase$EnumTemperature; byName
net/minecraft/server/BiomeBase$Geography net/minecraft/world/level/biome/Biome$BiomeCategory
	r BY_NAME
	s name
	t $VALUES
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lnet/minecraft/server/BiomeBase$Geography; byName
net/minecraft/server/BiomeBase$Precipitation net/minecraft/world/level/biome/Biome$Precipitation
	d BY_NAME
	e name
	f $VALUES
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lnet/minecraft/server/BiomeBase$Precipitation; byName
net/minecraft/server/BiomeBeach net/minecraft/world/level/biome/BeachBiome
net/minecraft/server/BiomeBigHills net/minecraft/world/level/biome/MountainBiome
net/minecraft/server/BiomeBirchForest net/minecraft/world/level/biome/BirchForestBiome
net/minecraft/server/BiomeBirchForestHills net/minecraft/world/level/biome/BirchForestHillsBiome
net/minecraft/server/BiomeBirchForestHillsMutated net/minecraft/world/level/biome/TallBirchHillsBiome
net/minecraft/server/BiomeBirchForestMutated net/minecraft/world/level/biome/TallBirchForestBiome
net/minecraft/server/BiomeColdBeach net/minecraft/world/level/biome/SnowyBeachBiome
net/minecraft/server/BiomeColdDeepOcean net/minecraft/world/level/biome/DeepColdOceanBiome
net/minecraft/server/BiomeColdOcean net/minecraft/world/level/biome/ColdOceanBiome
net/minecraft/server/BiomeColdTaiga net/minecraft/world/level/biome/SnowyTaigaBiome
net/minecraft/server/BiomeColdTaigaHills net/minecraft/world/level/biome/SnowyTaigaHillsBiome
net/minecraft/server/BiomeColdTaigaMutated net/minecraft/world/level/biome/SnowyTaigaMountainsBiome
net/minecraft/server/BiomeDecoratorGroups net/minecraft/world/level/biome/BiomeDefaultFeatures
	A PLAIN_FLOWER_CONFIG
	ACACIA_TREE ACACIA_TREE_CONFIG
	B FOREST_FLOWER_CONFIG
	BIRCH_TREE BIRCH_TREE_CONFIG
	BROWN_MUSHROOM_BLOCK HUGE_BROWN_MUSHROOM
	C DEAD_BUSH_CONFIG
	D MELON_CONFIG
	DARK_OAK_TREE DARK_OAK_TREE_CONFIG
	E PUMPKIN_CONFIG
	F SWEET_BERRY_BUSH_CONFIG
	FANCY_TREE FANCY_TREE_CONFIG
	G HELL_FIRE_CONFIG
	H WATERLILLY_CONFIG
	HUGE_BROWN_MUSHROOM HUGE_BROWN_MUSHROOM_CONFIG
	HUGE_RED_MUSHROOM HUGE_RED_MUSHROOM_CONFIG
	I RED_MUSHROOM_CONFIG
	J BROWN_MUSHROOM_CONFIG
	JUNGLE_BUSH JUNGLE_BUSH_CONFIG
	JUNGLE_TREE JUNGLE_TREE_CONFIG
	JUNGLE_TREE_NOVINE JUNGLE_TREE_NOVINE_CONFIG
	K DOUBLE_LILAC_CONFIG
	L DOUBLE_ROSE_BUSH_CONFIG
	M DOUBLE_PEONY_CONFIG
	MEGA_JUNGLE_TREE MEGA_JUNGLE_TREE_CONFIG
	MEGA_PINE_TREE MEGA_PINE_TREE_CONFIG
	MEGA_SPRUCE_TREE MEGA_SPRUCE_TREE_CONFIG
	MUSHROOM_STEM HUGE_MUSHROOM_STEM
	N SUNFLOWER_CONFIG
	NORMAL_TREE NORMAL_TREE_CONFIG
	O TALL_GRASS_CONFIG
	P LARGE_FERN_CONFIG
	PINE_TREE PINE_TREE_CONFIG
	Q CACTUS_CONFIG
	R SUGAR_CANE_CONFIG
	RED_MUSHROOM_BLOCK HUGE_RED_MUSHROOM
	S HAY_PILE_CONFIG
	SPRUCE_TREE SPRUCE_TREE_CONFIG
	SWAMP_TREE SWAMP_TREE_CONFIG
	T SNOW_PILE_CONFIG
	TALL_BIRCH_TREE SUPER_BIRCH_TREE_CONFIG
	U MELON_PILE_CONFIG
	V PUMPKIN_PILE_CONFIG
	W ICE_PILE_CONFIG
	X WATER_SPRING_CONFIG
	Y LAVA_SPRING_CONFIG
	Z OPEN_NETHER_SPRING_CONFIG
	aa CLOSED_NETHER_SPRING_CONFIG
	k NORMAL_TREE_WITH_BEES_005_CONFIG
	l FANCY_TREE_WITH_BEES_005_CONFIG
	m NORMAL_TREE_WITH_BEES_001_CONFIG
	n FANCY_TREE_WITH_BEES_001_CONFIG
	o BIRCH_TREE_WITH_BEES_001_CONFIG
	u DEFAULT_GRASS_CONFIG
	v TAIGA_GRASS_CONFIG
	w JUNGLE_GRASS_CONFIG
	x GENERAL_FOREST_FLOWER_CONFIG
	y SwAMP_FLOWER_CONFIG
	z DEFAULT_FLOWER_CONFIG
	A (Lnet/minecraft/server/BiomeBase;)V addMountainTrees
	B (Lnet/minecraft/server/BiomeBase;)V addMountainEdgeTrees
	C (Lnet/minecraft/server/BiomeBase;)V addJungleTrees
	D (Lnet/minecraft/server/BiomeBase;)V addJungleEdgeTrees
	E (Lnet/minecraft/server/BiomeBase;)V addBadlandsTrees
	F (Lnet/minecraft/server/BiomeBase;)V addSnowyTrees
	G (Lnet/minecraft/server/BiomeBase;)V addGiantSpruceTrees
	H (Lnet/minecraft/server/BiomeBase;)V addGiantTrees
	I (Lnet/minecraft/server/BiomeBase;)V addJungleGrass
	J (Lnet/minecraft/server/BiomeBase;)V addSavannaGrass
	K (Lnet/minecraft/server/BiomeBase;)V addShatteredSavannaGrass
	L (Lnet/minecraft/server/BiomeBase;)V addSavannaExtraGrass
	M (Lnet/minecraft/server/BiomeBase;)V addBadlandGrass
	N (Lnet/minecraft/server/BiomeBase;)V addForestFlowers
	O (Lnet/minecraft/server/BiomeBase;)V addForestGrass
	P (Lnet/minecraft/server/BiomeBase;)V addSwampVegetation
	Q (Lnet/minecraft/server/BiomeBase;)V addMushroomFieldVegetation
	R (Lnet/minecraft/server/BiomeBase;)V addPlainVegetation
	S (Lnet/minecraft/server/BiomeBase;)V addDesertVegetation
	T (Lnet/minecraft/server/BiomeBase;)V addGiantTaigaVegetation
	U (Lnet/minecraft/server/BiomeBase;)V addDefaultFlowers
	V (Lnet/minecraft/server/BiomeBase;)V addWarmFlowers
	W (Lnet/minecraft/server/BiomeBase;)V addDefaultGrass
	X (Lnet/minecraft/server/BiomeBase;)V addTaigaGrass
	Y (Lnet/minecraft/server/BiomeBase;)V addPlainGrass
	Z (Lnet/minecraft/server/BiomeBase;)V addDefaultMushrooms
	a (Lnet/minecraft/server/BiomeBase;)V addDefaultCarvers
	aa (Lnet/minecraft/server/BiomeBase;)V addDefaultExtraVegetation
	ab (Lnet/minecraft/server/BiomeBase;)V addBadlandExtraVegetation
	ac (Lnet/minecraft/server/BiomeBase;)V addJungleExtraVegetation
	ad (Lnet/minecraft/server/BiomeBase;)V addDesertExtraVegetation
	ae (Lnet/minecraft/server/BiomeBase;)V addSwampExtraVegetation
	af (Lnet/minecraft/server/BiomeBase;)V addDesertExtraDecoration
	ag (Lnet/minecraft/server/BiomeBase;)V addSwampExtraDecoration
	ah (Lnet/minecraft/server/BiomeBase;)V addColdOceanExtraVegetation
	ai (Lnet/minecraft/server/BiomeBase;)V addDefaultSeagrass
	aj (Lnet/minecraft/server/BiomeBase;)V addWarmSeagrass
	ak (Lnet/minecraft/server/BiomeBase;)V addDeepWarmSeagrass
	al (Lnet/minecraft/server/BiomeBase;)V addLukeWarmKelp
	am (Lnet/minecraft/server/BiomeBase;)V addDefaultSprings
	an (Lnet/minecraft/server/BiomeBase;)V addIcebergs
	ao (Lnet/minecraft/server/BiomeBase;)V addBlueIce
	ap (Lnet/minecraft/server/BiomeBase;)V addSurfaceFreezing
	aq (Lnet/minecraft/server/BiomeBase;)V addEndCity
	b (Lnet/minecraft/server/BiomeBase;)V addOceanCarvers
	c (Lnet/minecraft/server/BiomeBase;)V addStructureFeaturePlacement
	d (Lnet/minecraft/server/BiomeBase;)V addDefaultLakes
	e (Lnet/minecraft/server/BiomeBase;)V addDesertLakes
	f (Lnet/minecraft/server/BiomeBase;)V addDefaultMonsterRoom
	g (Lnet/minecraft/server/BiomeBase;)V addDefaultUndergroundVariety
	h (Lnet/minecraft/server/BiomeBase;)V addDefaultOres
	i (Lnet/minecraft/server/BiomeBase;)V addExtraGold
	j (Lnet/minecraft/server/BiomeBase;)V addExtraEmeralds
	k (Lnet/minecraft/server/BiomeBase;)V addInfestedStone
	l (Lnet/minecraft/server/BiomeBase;)V addDefaultSoftDisks
	m (Lnet/minecraft/server/BiomeBase;)V addSwampClayDisk
	n (Lnet/minecraft/server/BiomeBase;)V addMossyStoneBlock
	o (Lnet/minecraft/server/BiomeBase;)V addFerns
	p (Lnet/minecraft/server/BiomeBase;)V addBerryBushes
	q (Lnet/minecraft/server/BiomeBase;)V addSparseBerryBushes
	r (Lnet/minecraft/server/BiomeBase;)V addLightBambooVegetation
	s (Lnet/minecraft/server/BiomeBase;)V addBambooVegetation
	t (Lnet/minecraft/server/BiomeBase;)V addTaigaTrees
	u (Lnet/minecraft/server/BiomeBase;)V addWaterTrees
	v (Lnet/minecraft/server/BiomeBase;)V addBirchTrees
	w (Lnet/minecraft/server/BiomeBase;)V addOtherBirchTrees
	x (Lnet/minecraft/server/BiomeBase;)V addTallBirchTrees
	y (Lnet/minecraft/server/BiomeBase;)V addSavannaTrees
	z (Lnet/minecraft/server/BiomeBase;)V addShatteredSavannaTrees
net/minecraft/server/BiomeDeepOcean net/minecraft/world/level/biome/DeepOceanBiome
net/minecraft/server/BiomeDesert net/minecraft/world/level/biome/DesertBiome
net/minecraft/server/BiomeDesertHills net/minecraft/world/level/biome/DesertHillsBiome
net/minecraft/server/BiomeDesertMutated net/minecraft/world/level/biome/DesertLakesBiome
net/minecraft/server/BiomeExtremeHillsEdge net/minecraft/world/level/biome/MountainEdgeBiome
net/minecraft/server/BiomeExtremeHillsMutated net/minecraft/world/level/biome/GravellyMountainsBiome
net/minecraft/server/BiomeExtremeHillsWithTrees net/minecraft/world/level/biome/WoodedMountainBiome
net/minecraft/server/BiomeExtremeHillsWithTreesMutated net/minecraft/world/level/biome/ModifiedGravellyMountainsBiome
net/minecraft/server/BiomeFlowerForest net/minecraft/world/level/biome/ForestFlowerBiome
net/minecraft/server/BiomeForest net/minecraft/world/level/biome/ForestBiome
net/minecraft/server/BiomeForestHills net/minecraft/world/level/biome/WoodedHillsBiome
net/minecraft/server/BiomeFrozenDeepOcean net/minecraft/world/level/biome/DeepFrozenOceanBiome
	u FROZEN_TEMPERATURE_NOISE
	a (Lnet/minecraft/server/BlockPosition;)F getTemperatureNoCache
net/minecraft/server/BiomeFrozenOcean net/minecraft/world/level/biome/FrozenOceanBiome
	u FROZEN_TEMPERATURE_NOISE
	a (Lnet/minecraft/server/BlockPosition;)F getTemperatureNoCache
net/minecraft/server/BiomeFrozenRiver net/minecraft/world/level/biome/FrozenRiverBiome
net/minecraft/server/BiomeHell net/minecraft/world/level/biome/NetherBiome
net/minecraft/server/BiomeIceMountains net/minecraft/world/level/biome/SnowyMountainsBiome
	f ()F getCreatureProbability
net/minecraft/server/BiomeIcePlains net/minecraft/world/level/biome/SnowyTundraBiome
	f ()F getCreatureProbability
net/minecraft/server/BiomeIcePlainsSpikes net/minecraft/world/level/biome/IceSpikesBiome
	f ()F getCreatureProbability
net/minecraft/server/BiomeJungle net/minecraft/world/level/biome/JungleBiome
net/minecraft/server/BiomeJungleEdge net/minecraft/world/level/biome/JungleEdgeBiome
net/minecraft/server/BiomeJungleEdgeMutated net/minecraft/world/level/biome/ModifiedJungleEdgeBiome
net/minecraft/server/BiomeJungleHills net/minecraft/world/level/biome/JungleHillsBiome
net/minecraft/server/BiomeJungleMutated net/minecraft/world/level/biome/ModifiedJungleBiome
net/minecraft/server/BiomeLayout net/minecraft/world/level/biome/BiomeSourceType
	a CHECKERBOARD
	b FIXED
	c VANILLA_LAYERED
	d THE_END
	e factory
	f settingsFactory
	a (Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Function;)Lnet/minecraft/server/BiomeLayout; register
	a (Lnet/minecraft/server/BiomeLayoutConfiguration;)Lnet/minecraft/server/WorldChunkManager; create
	a (Lnet/minecraft/server/WorldData;)Lnet/minecraft/server/BiomeLayoutConfiguration; createSettings
net/minecraft/server/BiomeLayoutCheckerboardConfiguration net/minecraft/world/level/biome/CheckerboardBiomeSourceSettings
	a allowedBiomes
	b size
	a ()[Lnet/minecraft/server/BiomeBase; getAllowedBiomes
	a (I)Lnet/minecraft/server/BiomeLayoutCheckerboardConfiguration; setSize
	a ([Lnet/minecraft/server/BiomeBase;)Lnet/minecraft/server/BiomeLayoutCheckerboardConfiguration; setAllowedBiomes
	b ()I getSize
net/minecraft/server/BiomeLayoutConfiguration net/minecraft/world/level/biome/BiomeSourceSettings
net/minecraft/server/BiomeLayoutFixedConfiguration net/minecraft/world/level/biome/FixedBiomeSourceSettings
	a biome
	a ()Lnet/minecraft/server/BiomeBase; getBiome
	a (Lnet/minecraft/server/BiomeBase;)Lnet/minecraft/server/BiomeLayoutFixedConfiguration; setBiome
net/minecraft/server/BiomeLayoutOverworldConfiguration net/minecraft/world/level/biome/OverworldBiomeSourceSettings
	a seed
	b generatorType
	c generatorSettings
	a ()J getSeed
	a (Lnet/minecraft/server/GeneratorSettingsOverworld;)Lnet/minecraft/server/BiomeLayoutOverworldConfiguration; setGeneratorSettings
	b ()Lnet/minecraft/server/WorldType; getGeneratorType
	c ()Lnet/minecraft/server/GeneratorSettingsOverworld; getGeneratorSettings
net/minecraft/server/BiomeLayoutTheEndConfiguration net/minecraft/world/level/biome/TheEndBiomeSourceSettings
	a seed
	a ()J getSeed
net/minecraft/server/BiomeLukewarmDeepOcean net/minecraft/world/level/biome/DeepLukeWarmOceanBiome
net/minecraft/server/BiomeLukewarmOcean net/minecraft/world/level/biome/LukeWarmOceanBiome
net/minecraft/server/BiomeManager net/minecraft/world/level/biome/BiomeManager
	a noiseBiomeSource
	b biomeZoomSeed
	c zoomer
	a (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/BiomeBase; getBiome
	a (Lnet/minecraft/server/WorldChunkManager;)Lnet/minecraft/server/BiomeManager; withDifferentSource
net/minecraft/server/BiomeManager$Provider net/minecraft/world/level/biome/BiomeManager$NoiseBiomeSource
	getBiome (III)Lnet/minecraft/server/BiomeBase; getNoiseBiome
net/minecraft/server/BiomeMegaSpruceTaiga net/minecraft/world/level/biome/GiantSpruceTaigaBiome
net/minecraft/server/BiomeMegaTaiga net/minecraft/world/level/biome/GiantTreeTaigaBiome
net/minecraft/server/BiomeMegaTaigaHills net/minecraft/world/level/biome/GiantTreeTaigaHillsBiome
net/minecraft/server/BiomeMesa net/minecraft/world/level/biome/BadlandsBiome
	a ()I getFoliageColor
	a (DD)I getGrassColor
net/minecraft/server/BiomeMesaBryce net/minecraft/world/level/biome/ErodedBadlandsBiome
	a ()I getFoliageColor
	a (DD)I getGrassColor
net/minecraft/server/BiomeMesaPlataeu net/minecraft/world/level/biome/WoodedBadlandsBiome
	a ()I getFoliageColor
	a (DD)I getGrassColor
net/minecraft/server/BiomeMesaPlataeuClear net/minecraft/world/level/biome/BadlandsPlateauBiome
	a ()I getFoliageColor
	a (DD)I getGrassColor
net/minecraft/server/BiomeMesaPlateauClearMutated net/minecraft/world/level/biome/ModifiedBadlandsPlateauBiome
	a ()I getFoliageColor
	a (DD)I getGrassColor
net/minecraft/server/BiomeMesaPlateauMutated net/minecraft/world/level/biome/ModifiedWoodedBadlandsPlateauBiome
	a ()I getFoliageColor
	a (DD)I getGrassColor
net/minecraft/server/BiomeMushroomIslandShore net/minecraft/world/level/biome/MushroomFieldsShoreBiome
net/minecraft/server/BiomeMushrooms net/minecraft/world/level/biome/MushroomFieldsBiome
net/minecraft/server/BiomeOcean net/minecraft/world/level/biome/OceanBiome
net/minecraft/server/BiomePlains net/minecraft/world/level/biome/PlainsBiome
net/minecraft/server/BiomeRedwoodTaigaHillsMutated net/minecraft/world/level/biome/GiantSpruceTaigaHillsMutatedBiome
net/minecraft/server/BiomeRiver net/minecraft/world/level/biome/RiverBiome
net/minecraft/server/BiomeRoofedForest net/minecraft/world/level/biome/DarkForestBiome
	a (DD)I getGrassColor
net/minecraft/server/BiomeRoofedForestMutated net/minecraft/world/level/biome/DarkForestHillsBiome
	a (DD)I getGrassColor
net/minecraft/server/BiomeSavanna net/minecraft/world/level/biome/SavannaBiome
net/minecraft/server/BiomeSavannaMutated net/minecraft/world/level/biome/ShatteredSavannaBiome
net/minecraft/server/BiomeSavannaPlateau net/minecraft/world/level/biome/SavannaPlateauBiome
net/minecraft/server/BiomeSavannaPlateauMutated net/minecraft/world/level/biome/ShatteredSavannaPlateauBiome
net/minecraft/server/BiomeStoneBeach net/minecraft/world/level/biome/StoneShoreBiome
net/minecraft/server/BiomeStorage net/minecraft/world/level/chunk/ChunkBiomeContainer
	a BIOMES_SIZE
	b HORIZONTAL_MASK
	c VERTICAL_MASK
	d LOGGER
	e WIDTH_BITS
	f HEIGHT_BITS
	g biomes
	a ()[I writeBiomes
	a (Lnet/minecraft/server/PacketDataSerializer;)V write
	b ()Lnet/minecraft/server/BiomeStorage; copy
	b (III)Lnet/minecraft/server/BiomeBase; getNoiseBiome
net/minecraft/server/BiomeSunflowerPlains net/minecraft/world/level/biome/SunflowerPlainsBiome
net/minecraft/server/BiomeSwamp net/minecraft/world/level/biome/SwampBiome
	a ()I getFoliageColor
	a (DD)I getGrassColor
net/minecraft/server/BiomeSwamplandMutated net/minecraft/world/level/biome/SwampHillsBiome
	a ()I getFoliageColor
	a (DD)I getGrassColor
net/minecraft/server/BiomeTaiga net/minecraft/world/level/biome/TaigaBiome
net/minecraft/server/BiomeTaigaHills net/minecraft/world/level/biome/TaigaHillsBiome
net/minecraft/server/BiomeTaigaMutated net/minecraft/world/level/biome/TaigaMountainsBiome
net/minecraft/server/BiomeTheEnd net/minecraft/world/level/biome/TheEndBiome
	c ()I getSkyColor
net/minecraft/server/BiomeTheEndBarrenIsland net/minecraft/world/level/biome/EndBarrensBiome
	c ()I getSkyColor
net/minecraft/server/BiomeTheEndFloatingIslands net/minecraft/world/level/biome/SmallEndIslandsBiome
	c ()I getSkyColor
net/minecraft/server/BiomeTheEndHighIsland net/minecraft/world/level/biome/EndHighlandsBiome
	c ()I getSkyColor
net/minecraft/server/BiomeTheEndMediumIsland net/minecraft/world/level/biome/EndMidlandsBiome
	c ()I getSkyColor
net/minecraft/server/BiomeVoid net/minecraft/world/level/biome/TheVoidBiome
net/minecraft/server/BiomeWarmDeepOcean net/minecraft/world/level/biome/DeepWarmOceanBiome
net/minecraft/server/BiomeWarmOcean net/minecraft/world/level/biome/WarmOceanBiome
net/minecraft/server/Biomes net/minecraft/world/level/biome/Biomes
	b DEFAULT
	a (ILjava/lang/String;Lnet/minecraft/server/BiomeBase;)Lnet/minecraft/server/BiomeBase; register
net/minecraft/server/Block net/minecraft/world/level/block/Block
	REGISTRY_ID BLOCK_STATE_REGISTRY
	a UPDATE_SHAPE_ORDER
	b SHAPE_FULL_BLOCK_CACHE
	blockData defaultBlockState
	blockStateList stateDefinition
	c RIGID_SUPPORT_SHAPE
	d CENTER_SUPPORT_SHAPE
	durability explosionResistance
	f speedFactor
	frictionFactor friction
	g jumpFactor
	i dynamicShape
	j canOcclude
	k drops
	l LOGGER
	n lightEmission
	name descriptionId
	q isTicking
	stepSound soundType
	strength destroySpeed
	t materialColor
	v hasCollision
	x item
	y OCCLUSION_CACHE
	X_ ()Lnet/minecraft/server/Block$EnumRandomOffset; getOffsetType
	Y_ ()Z isPossibleToRespawnInThis
	a (DDDDDD)Lnet/minecraft/server/VoxelShape; box
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/Block;)Z isExceptionForConnection
	a (Lnet/minecraft/server/CreativeModeTab;Lnet/minecraft/server/NonNullList;)V fillItemCategory
	a (Lnet/minecraft/server/Explosion;)Z dropFromExplosion
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/ItemStack; getCloneItemStack
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/Entity;)V updateEntityAfterFallOn
	a (Lnet/minecraft/server/IBlockData;)I getLightEmission
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockActionContext;)Z canBeReplaced
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;)J getSeed
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/FluidType;)Z canBeReplaced
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;I)V updateNeighbourShapes
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)F getShadeBrightness
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityTypes;)Z isValidSpawn
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;)Z skipRendering
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;I)V updateOrDestroy
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; pushEntitiesUp
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/LootTableInfo$Builder;)Ljava/util/List; getDrops
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;II)Z triggerEvent
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V entityInside
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/TileEntity;)V dropResources
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/TileEntity;)Ljava/util/List; getDrops
	a (Lnet/minecraft/server/IWorldReader;)I getTickDelay
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z canSupportCenter
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/IBlockAccess;Ljava/util/List;Lbft;)V appendHoverText
	a (Lnet/minecraft/server/Tag;)Z is
	a (Lnet/minecraft/server/VoxelShape;)Z isShapeFullBlock
	a (Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/EnumDirection;)Z isFaceFull
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityHuman;)V playerWillDestroy
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ItemStack;)V popResource
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/TileEntity;Lnet/minecraft/server/ItemStack;)V playerDestroy
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/MovingObjectPositionBlock;Lnet/minecraft/server/Entity;)V onProjectileHit
	a_ (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getFluidState
	asBlock (Lnet/minecraft/server/Item;)Lnet/minecraft/server/Block; byItem
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateFromNeighbourShapes
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;I)V updateIndirectNeighbourShapes
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z propagatesSkylightDown
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getDirectSignal
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getCollisionShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/LootTableInfo$Builder;)V dropResources
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V randomTick
	c (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z canSupportRigidBlock
	c (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z isSuffocating
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z shouldRenderFace
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V dropResources
	c (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V handleRain
	canPlace (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	d (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)V prepareRender
	d (Lnet/minecraft/server/IBlockData;)Z isAir
	d (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z isFaceSturdy
	doPhysics (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	dropExperience (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;I)V popExperience
	dropItems (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/TileEntity;Lnet/minecraft/server/Entity;Lnet/minecraft/server/ItemStack;)V dropResources
	dropNaturally (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ItemStack;)V spawnAfterBreak
	e (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/MaterialMapColor; getMapColor
	f (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z isViewBlocking
	g ()Lnet/minecraft/server/MinecraftKey; getLootTable
	g (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)F getDestroySpeed
	getBlockData ()Lnet/minecraft/server/IBlockData; defaultBlockState
	getByCombinedId (I)Lnet/minecraft/server/IBlockData; stateById
	getCombinedId (Lnet/minecraft/server/IBlockData;)I getId
	getDamage (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)F getDestroyProgress
	getDurability ()F getExplosionResistance
	getInventory (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/ITileInventory; getMenuProvider
	getPlacedState (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	getPushReaction (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumPistonReaction; getPistonPushReaction
	getStates ()Lnet/minecraft/server/BlockStateList; getStateDefinition
	getStepSound (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/SoundEffectType; getSoundType
	h (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z hasPostProcess
	i ()Lnet/minecraft/server/Item; asItem
	i (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; getOcclusionShape
	interact (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	isComplexRedstone (Lnet/minecraft/server/IBlockData;)Z hasAnalogOutputSignal
	isOccluding (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z isRedstoneConductor
	isPowerSource (Lnet/minecraft/server/IBlockData;)Z isSignalSource
	isTicking (Lnet/minecraft/server/IBlockData;)Z isRandomlyTicking
	isTileEntity ()Z isEntityBlock
	j ()Lnet/minecraft/server/IChatBaseComponent; getName
	j (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; getInteractionShape
	k ()Ljava/lang/String; getDescriptionId
	k (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Material; getMaterial
	k (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z isSolidRender
	l ()F getFriction
	l (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)I getLightBlock
	m ()F getSpeedFactor
	m (Lnet/minecraft/server/IBlockData;)Z emissiveRendering
	m (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/Vec3D; getOffset
	n ()F getJumpFactor
	n (Lnet/minecraft/server/IBlockData;)Z canOcclude
	o (Lnet/minecraft/server/IBlockData;)Z useShapeForLightOcclusion
	p (Lnet/minecraft/server/IBlockData;)V registerDefaultState
	postBreak (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V destroy
	postPlace (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
	q ()Z hasDynamicShape
	remove (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	updateState (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
net/minecraft/server/Block$EnumRandomOffset net/minecraft/world/level/block/Block$OffsetType
	d $VALUES
net/minecraft/server/Block$Info net/minecraft/world/level/block/Block$Properties
	a material
	b materialColor
	c hasCollision
	d soundType
	e lightEmission
	f explosionResistance
	g destroyTime
	h isTicking
	i friction
	j speedFactor
	k jumpFactor
	l drops
	m canOcclude
	n dynamicShape
	a ()Lnet/minecraft/server/Block$Info; noCollission
	a (F)Lnet/minecraft/server/Block$Info; friction
	a (FF)Lnet/minecraft/server/Block$Info; strength
	a (I)Lnet/minecraft/server/Block$Info; lightLevel
	a (Lnet/minecraft/server/Block;)Lnet/minecraft/server/Block$Info; copy
	a (Lnet/minecraft/server/Material;)Lnet/minecraft/server/Block$Info; of
	a (Lnet/minecraft/server/Material;Lnet/minecraft/server/EnumColor;)Lnet/minecraft/server/Block$Info; of
	a (Lnet/minecraft/server/Material;Lnet/minecraft/server/MaterialMapColor;)Lnet/minecraft/server/Block$Info; of
	a (Lnet/minecraft/server/SoundEffectType;)Lnet/minecraft/server/Block$Info; sound
	b ()Lnet/minecraft/server/Block$Info; noOcclusion
	b (F)Lnet/minecraft/server/Block$Info; speedFactor
	b (Lnet/minecraft/server/Block;)Lnet/minecraft/server/Block$Info; dropsLike
	c ()Lnet/minecraft/server/Block$Info; instabreak
	c (F)Lnet/minecraft/server/Block$Info; jumpFactor
	d ()Lnet/minecraft/server/Block$Info; randomTicks
	d (F)Lnet/minecraft/server/Block$Info; strength
	e ()Lnet/minecraft/server/Block$Info; dynamicShape
	f ()Lnet/minecraft/server/Block$Info; noDrops
net/minecraft/server/BlockAccessAir net/minecraft/world/level/EmptyBlockGetter
	b $VALUES
	b (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/Fluid; getFluidState
	c (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/TileEntity; getBlockEntity
	d_ (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getBlockState
net/minecraft/server/BlockActionContext net/minecraft/world/item/BlockPlaceContext
	a replaceClicked
	g relativePos
	a ()Lnet/minecraft/server/BlockPosition; getClickedPos
	a (Lnet/minecraft/server/BlockActionContext;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/BlockActionContext; at
	b ()Z canPlace
	c ()Z replacingClickedOnBlock
	d ()Lnet/minecraft/server/EnumDirection; getNearestLookingDirection
	e ()[Lnet/minecraft/server/EnumDirection; getNearestLookingDirections
net/minecraft/server/BlockActionContextDirectional net/minecraft/world/item/DirectionalPlaceContext
	g direction
	a ()Lnet/minecraft/server/BlockPosition; getClickedPos
	b ()Z canPlace
	c ()Z replacingClickedOnBlock
	d ()Lnet/minecraft/server/EnumDirection; getNearestLookingDirection
	e ()[Lnet/minecraft/server/EnumDirection; getNearestLookingDirections
	f ()Lnet/minecraft/server/EnumDirection; getHorizontalDirection
	g ()Z isSecondaryUseActive
	h ()F getRotation
net/minecraft/server/BlockActionData net/minecraft/world/level/BlockEventData
	a pos
	b block
	c paramA
	d paramB
	a ()Lnet/minecraft/server/BlockPosition; getPos
	b ()Lnet/minecraft/server/Block; getBlock
	c ()I getParamA
	d ()I getParamB
net/minecraft/server/BlockAir net/minecraft/world/level/block/AirBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	c (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	d (Lnet/minecraft/server/IBlockData;)Z isAir
net/minecraft/server/BlockAnvil net/minecraft/world/level/block/AnvilBlock
	b BASE
	c X_LEG1
	d X_LEG2
	e X_TOP
	f Z_LEG1
	g Z_LEG2
	h Z_TOP
	i X_AXIS_AABB
	j Z_AXIS_AABB
	k CONTAINER_TITLE
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/EntityFallingBlock;)V falling
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V onBroken
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;)V onLand
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/ITileInventory; getMenuProvider
	e (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/IBlockData; damage
net/minecraft/server/BlockAttachable net/minecraft/world/level/block/FaceAttachedHorizontalDirectionalBlock
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	b (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z canAttach
	h (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumDirection; getConnectedDirection
net/minecraft/server/BlockBamboo net/minecraft/world/level/block/BambooBlock
	a SMALL_SHAPE
	b LARGE_SHAPE
	c COLLISION_SHAPE
	d AGE
	e LEAVES
	f STAGE
	X_ ()Lnet/minecraft/server/Block$EnumRandomOffset; getOffsetType
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)I getHeightAboveUpToMax
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)F getDestroyProgress
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;I)V growBamboo
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	a (Lnet/minecraft/server/World;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/server/WorldServer;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V performBonemeal
	b (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)I getHeightBelowUpToMax
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z propagatesSkylightDown
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getCollisionShape
net/minecraft/server/BlockBambooSapling net/minecraft/world/level/block/BambooSaplingBlock
	a SAPLING_SHAPE
	X_ ()Lnet/minecraft/server/Block$EnumRandomOffset; getOffsetType
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/ItemStack; getCloneItemStack
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)F getDestroyProgress
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	a (Lnet/minecraft/server/World;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V growBamboo
	a (Lnet/minecraft/server/WorldServer;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V performBonemeal
net/minecraft/server/BlockBanner net/minecraft/world/level/block/BannerBlock
	b BY_COLOR
	c SHAPE
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/EnumColor;)Lnet/minecraft/server/Block; byColor
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
net/minecraft/server/BlockBannerAbstract net/minecraft/world/level/block/AbstractBannerBlock
	a color
	Y_ ()Z isPossibleToRespawnInThis
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/ItemStack; getCloneItemStack
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
net/minecraft/server/BlockBannerWall net/minecraft/world/level/block/WallBannerBlock
	a FACING
	b SHAPES
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	k ()Ljava/lang/String; getDescriptionId
net/minecraft/server/BlockBarrel net/minecraft/world/level/block/BarrelBlock
	a FACING
	b OPEN
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
	b (Lnet/minecraft/server/IBlockData;)Z hasAnalogOutputSignal
	c (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
net/minecraft/server/BlockBarrier net/minecraft/world/level/block/BarrierBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)F getShadeBrightness
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityTypes;)Z isValidSpawn
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z propagatesSkylightDown
	c (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
net/minecraft/server/BlockBeacon net/minecraft/world/level/block/BeaconBlock
	a ()Lnet/minecraft/server/EnumColor; getColor
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
	c (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	d (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z isRedstoneConductor
net/minecraft/server/BlockBed net/minecraft/world/level/block/BedBlock
	c BASE
	d LEG_NORTH_WEST
	e LEG_SOUTH_WEST
	f LEG_NORTH_EAST
	g LEG_SOUTH_EAST
	h NORTH_SHAPE
	i SOUTH_SHAPE
	j WEST_SHAPE
	k EAST_SHAPE
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/BlockPropertyBedPart;Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/EnumDirection; getNeighbourDirection
	a (Lnet/minecraft/server/Entity;)V bounceUp
	a (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Ljava/util/Optional; getStandingLocationAtOrBelow
	a (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;I)Ljava/util/Optional; findStandUpPosition
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/EnumDirection; getBedOrientation
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/Entity;)V updateEntityAfterFallOn
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;)J getSeed
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Z kickVillagerOutOfBed
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;F)V fallOn
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityHuman;)V playerWillDestroy
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/TileEntity;Lnet/minecraft/server/ItemStack;)V playerDestroy
	c ()Lnet/minecraft/server/EnumColor; getColor
	c (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	e (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/MaterialMapColor; getMapColor
	g (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumPistonReaction; getPistonPushReaction
	h (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumDirection; getConnectedDirection
	i (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/DoubleBlockFinder$BlockType; getBlockType
net/minecraft/server/BlockBedrock net/minecraft/world/level/block/BedrockBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityTypes;)Z isValidSpawn
net/minecraft/server/BlockBeehive net/minecraft/world/level/block/BeehiveBlock
	a SPAWN_DIRECTIONS
	b FACING
	c HONEY_LEVEL
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/LootTableInfo$Builder;)Ljava/util/List; getDrops
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/World;DDDDD)V spawnFluidParticle
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V dropHoneycomb
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V trySpawnDripParticles
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityHuman;)V playerWillDestroy
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShape;D)V spawnParticle
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/TileEntity;Lnet/minecraft/server/ItemStack;)V playerDestroy
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;)V resetHoneyLevel
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/TileEntityBeehive$ReleaseStatus;)V releaseBeesAndResetHoneyLevel
	b (Lnet/minecraft/server/IBlockData;)Z hasAnalogOutputSignal
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V angerNearbyBees
	c (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	d (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Z hiveContainsBees
net/minecraft/server/BlockBeetroot net/minecraft/world/level/block/BeetrootBlock
	a AGE
	c SHAPE_BY_AGE
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	a (Lnet/minecraft/server/World;)I getBonemealAgeIncrease
	c ()Lnet/minecraft/server/BlockStateInteger; getAgeProperty
	d ()I getMaxAge
	e ()Lnet/minecraft/server/IMaterial; getBaseSeedId
net/minecraft/server/BlockBell net/minecraft/world/level/block/BellBlock
	a FACING
	b POWERED
	c ATTACHMENT
	d NORTH_SOUTH_FLOOR_SHAPE
	e EAST_WEST_FLOOR_SHAPE
	f BELL_TOP_SHAPE
	g BELL_BOTTOM_SHAPE
	h BELL_SHAPE
	i NORTH_SOUTH_BETWEEN
	j EAST_WEST_BETWEEN
	k TO_WEST
	w TO_EAST
	x TO_NORTH
	y TO_SOUTH
	z CEILING_SHAPE
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;D)Z isProperHit
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z attemptToRing
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/MovingObjectPositionBlock;Lnet/minecraft/server/Entity;)V onProjectileHit
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/MovingObjectPositionBlock;Lnet/minecraft/server/EntityHuman;Z)Z onHit
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getCollisionShape
	c (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	g (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumPistonReaction; getPistonPushReaction
	h (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/VoxelShape; getVoxelShape
	i (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumDirection; getConnectedDirection
net/minecraft/server/BlockBlastFurnace net/minecraft/world/level/block/BlastFurnaceBlock
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;)V openContainer
net/minecraft/server/BlockBrewingStand net/minecraft/world/level/block/BrewingStandBlock
	b SHAPE
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
	b (Lnet/minecraft/server/IBlockData;)Z hasAnalogOutputSignal
	c (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
net/minecraft/server/BlockBubbleColumn net/minecraft/world/level/block/BubbleColumnBlock
	a DRAG_DOWN
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)Z canExistIn
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Z)V growColumn
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z getDrag
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V entityInside
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	a (Lnet/minecraft/server/IWorldReader;)I getTickDelay
	a_ (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getFluidState
	b (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/FluidType; takeLiquid
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
	c (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
net/minecraft/server/BlockButtonAbstract net/minecraft/world/level/block/ButtonBlock
	A PRESSED_WEST_AABB
	B PRESSED_EAST_AABB
	D sensitive
	b CEILING_AABB_X
	c CEILING_AABB_Z
	d FLOOR_AABB_X
	e FLOOR_AABB_Z
	f NORTH_AABB
	g SOUTH_AABB
	h WEST_AABB
	i EAST_AABB
	j PRESSED_CEILING_AABB_X
	k PRESSED_CEILING_AABB_Z
	w PRESSED_FLOOR_AABB_X
	x PRESSED_FLOOR_AABB_Z
	y PRESSED_NORTH_AABB
	z PRESSED_SOUTH_AABB
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Z)V playSound
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V entityInside
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	a (Lnet/minecraft/server/IWorldReader;)I getTickDelay
	a (Z)Lnet/minecraft/server/SoundEffect; getSound
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getDirectSignal
	d (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V press
	e (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V checkPressed
	f (Lnet/minecraft/server/IBlockData;)Z isSignalSource
	f (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V updateNeighbours
net/minecraft/server/BlockCactus net/minecraft/world/level/block/CactusBlock
	b COLLISION_SHAPE
	c OUTLINE_SHAPE
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V entityInside
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getCollisionShape
net/minecraft/server/BlockCake net/minecraft/world/level/block/CakeBlock
	b SHAPE_BY_BITE
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityHuman;)Lnet/minecraft/server/EnumInteractionResult; eat
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	b (Lnet/minecraft/server/IBlockData;)Z hasAnalogOutputSignal
net/minecraft/server/BlockCampfire net/minecraft/world/level/block/CampfireBlock
	a SHAPE
	b LIT
	c SIGNAL_FIRE
	d WATERLOGGED
	e FACING
	f VIRTUAL_FENCE_POST
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/Entity; getShooter
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/Fluid;)Z placeLiquid
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;)I getLightEmission
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V entityInside
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;ZZ)V makeParticles
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/MovingObjectPositionBlock;Lnet/minecraft/server/Entity;)V onProjectileHit
	a_ (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getFluidState
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;I)Z isSmokeyPos
	c (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	h (Lnet/minecraft/server/IBlockData;)Z isSmokeSource
	i (Lnet/minecraft/server/IBlockData;)Z isLitCampfire
net/minecraft/server/BlockCarpet net/minecraft/world/level/block/WoolCarpetBlock
	a SHAPE
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	c ()Lnet/minecraft/server/EnumColor; getColor
net/minecraft/server/BlockCarrots net/minecraft/world/level/block/CarrotBlock
	a SHAPE_BY_AGE
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	e ()Lnet/minecraft/server/IMaterial; getBaseSeedId
net/minecraft/server/BlockCartographyTable net/minecraft/world/level/block/CartographyTableBlock
	a CONTAINER_TITLE
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/ITileInventory; getMenuProvider
net/minecraft/server/BlockCauldron net/minecraft/world/level/block/CauldronBlock
	b SHAPE
	c INSIDE
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V entityInside
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;I)V setWaterLevel
	b (Lnet/minecraft/server/IBlockData;)Z hasAnalogOutputSignal
	c (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V handleRain
	j (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; getInteractionShape
net/minecraft/server/BlockChest net/minecraft/world/level/block/ChestBlock
	c TYPE
	d WATERLOGGED
	e NORTH_AABB
	f SOUTH_AABB
	g WEST_AABB
	h EAST_AABB
	i AABB
	j CHEST_COMBINER
	k MENU_PROVIDER_COMBINER
	a (Lbxb;)Lnet/minecraft/server/DoubleBlockFinder$Combiner; opennessCombiner
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/BlockActionContext;Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/EnumDirection; candidatePartnerFacing
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)Z isChestBlockedAt
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z isBlockedChestByBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Z)Lnet/minecraft/server/DoubleBlockFinder$Result; combine
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
	a_ (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getFluidState
	b (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)Z isCatSittingOnChest
	b (Lnet/minecraft/server/IBlockData;)Z hasAnalogOutputSignal
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/ITileInventory; getMenuProvider
	c ()Lnet/minecraft/server/Statistic; getOpenChestStat
	c (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	d ()Lnet/minecraft/server/TileEntityTypes; blockEntityType
	getInventory (Lnet/minecraft/server/BlockChest;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Z)Lnet/minecraft/server/IInventory; getContainer
	h (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/DoubleBlockFinder$BlockType; getBlockType
	i (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumDirection; getConnectedDirection
net/minecraft/server/BlockChestAbstract net/minecraft/world/level/block/AbstractChestBlock
	a blockEntityType
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Z)Lnet/minecraft/server/DoubleBlockFinder$Result; combine
net/minecraft/server/BlockChestTrapped net/minecraft/world/level/block/TrappedChestBlock
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getSignal
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getDirectSignal
	c ()Lnet/minecraft/server/Statistic; getOpenChestStat
	f (Lnet/minecraft/server/IBlockData;)Z isSignalSource
net/minecraft/server/BlockChorusFlower net/minecraft/world/level/block/ChorusFlowerBlock
	b plant
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;I)V generatePlant
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;II)V growTreeRecursive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V placeDeadFlower
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/MovingObjectPositionBlock;Lnet/minecraft/server/Entity;)V onProjectileHit
	b (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z allNeighborsEmpty
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;I)V placeGrownFlower
net/minecraft/server/BlockChorusFruit net/minecraft/world/level/block/ChorusPlantBlock
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
net/minecraft/server/BlockCobbleWall net/minecraft/world/level/block/WallBlock
	j shapeWithPostByIndex
	k collisionShapeWithPostByIndex
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;ZLnet/minecraft/server/EnumDirection;)Z connectsTo
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getCollisionShape
net/minecraft/server/BlockCocoa net/minecraft/world/level/block/CocoaBlock
	b EAST_AABB
	c WEST_AABB
	d NORTH_AABB
	e SOUTH_AABB
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	a (Lnet/minecraft/server/World;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/server/WorldServer;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V performBonemeal
net/minecraft/server/BlockCommand net/minecraft/world/level/block/CommandBlock
	a FACING
	b CONDITIONAL
	c LOGGER
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/CommandBlockListenerAbstract;Z)V execute
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	a (Lnet/minecraft/server/IWorldReader;)I getTickDelay
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)V executeChain
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
	b (Lnet/minecraft/server/IBlockData;)Z hasAnalogOutputSignal
	c (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
net/minecraft/server/BlockComposter net/minecraft/world/level/block/ComposterBlock
	a LEVEL
	b COMPOSTABLES
	c OUTER_SHAPE
	d SHAPES
	a (FLnet/minecraft/server/IMaterial;)V add
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IWorldInventory; getContainer
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Z)V handleFill
	b (Lnet/minecraft/server/IBlockData;)Z hasAnalogOutputSignal
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ItemStack;)Z addItem
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getCollisionShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
	c ()V bootStrap
	d (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)V empty
	j (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; getInteractionShape
net/minecraft/server/BlockComposter$ContainerEmpty net/minecraft/world/level/block/ComposterBlock$EmptyContainer
	a (ILnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumDirection;)Z canPlaceItemThroughFace
	a (Lnet/minecraft/server/EnumDirection;)[I getSlotsForFace
	b (ILnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumDirection;)Z canTakeItemThroughFace
net/minecraft/server/BlockComposter$ContainerInput net/minecraft/world/level/block/ComposterBlock$InputContainer
	a state
	b level
	c pos
	d changed
	L_ ()I getMaxStackSize
	a (ILnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumDirection;)Z canPlaceItemThroughFace
	a (Lnet/minecraft/server/EnumDirection;)[I getSlotsForFace
	b (ILnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumDirection;)Z canTakeItemThroughFace
	e ()V setChanged
net/minecraft/server/BlockComposter$ContainerOutput net/minecraft/world/level/block/ComposterBlock$OutputContainer
	a state
	b level
	c pos
	d changed
	L_ ()I getMaxStackSize
	a (ILnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumDirection;)Z canPlaceItemThroughFace
	a (Lnet/minecraft/server/EnumDirection;)[I getSlotsForFace
	b (ILnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumDirection;)Z canTakeItemThroughFace
	e ()V setChanged
net/minecraft/server/BlockConcretePowder net/minecraft/world/level/block/ConcretePowderBlock
	a concrete
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z touchesLiquid
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;)V onLand
	canHarden (Lnet/minecraft/server/IBlockData;)Z canSolidify
net/minecraft/server/BlockConduit net/minecraft/world/level/block/ConduitBlock
	a WATERLOGGED
	b SHAPE
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
	a_ (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getFluidState
	c (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
net/minecraft/server/BlockCoral net/minecraft/world/level/block/CoralBlock
	a deadBlock
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z scanForWater
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
net/minecraft/server/BlockCoralBase net/minecraft/world/level/block/BaseCoralPlantTypeBlock
	a AABB
	b WATERLOGGED
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)V tryScheduleDieTick
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a_ (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getFluidState
	b_ (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z scanForWater
net/minecraft/server/BlockCoralDead net/minecraft/world/level/block/BaseCoralPlantBlock
	a SHAPE
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
net/minecraft/server/BlockCoralFan net/minecraft/world/level/block/CoralFanBlock
	a deadBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
net/minecraft/server/BlockCoralFanAbstract net/minecraft/world/level/block/BaseCoralFanBlock
	a AABB
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
net/minecraft/server/BlockCoralFanWall net/minecraft/world/level/block/CoralWallFanBlock
	c deadBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
net/minecraft/server/BlockCoralFanWallAbstract net/minecraft/world/level/block/BaseCoralWallFanBlock
	a FACING
	c SHAPES
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
net/minecraft/server/BlockCoralPlant net/minecraft/world/level/block/CoralPlantBlock
	a SHAPE
	c deadBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
net/minecraft/server/BlockCrops net/minecraft/world/level/block/CropBlock
	a SHAPE_BY_AGE
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/Block;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)F getGrowthSpeed
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/ItemStack; getCloneItemStack
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V entityInside
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	a (Lnet/minecraft/server/World;)I getBonemealAgeIncrease
	a (Lnet/minecraft/server/World;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V growCrops
	a (Lnet/minecraft/server/WorldServer;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V performBonemeal
	a_ (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z mayPlaceOn
	c ()Lnet/minecraft/server/BlockStateInteger; getAgeProperty
	d ()I getMaxAge
	e ()Lnet/minecraft/server/IMaterial; getBaseSeedId
	h (Lnet/minecraft/server/IBlockData;)I getAge
	isRipe (Lnet/minecraft/server/IBlockData;)Z isMaxAge
	setAge (I)Lnet/minecraft/server/IBlockData; getStateForAge
net/minecraft/server/BlockDataAbstract net/minecraft/world/level/block/state/AbstractStateHolder
	STATE_TO_VALUE PROPERTY_ENTRY_TO_STRING_FUNCTION
	a owner
	d values
	e neighbours
	a ()Ljava/util/Collection; getProperties
	a (Ljava/util/Collection;Ljava/lang/Object;)Ljava/lang/Object; findNextInCollection
	a (Ljava/util/Map;)V populateNeighbours
	a (Lnet/minecraft/server/IBlockState;)Ljava/lang/Object; cycle
	a (Lnet/minecraft/server/IBlockState;Ljava/lang/Comparable;)Ljava/lang/Object; setValue
	b ()Lcom/google/common/collect/ImmutableMap; getValues
	b (Lnet/minecraft/server/IBlockState;)Z hasProperty
	c (Lnet/minecraft/server/IBlockState;)Ljava/lang/Comparable; getValue
	c (Lnet/minecraft/server/IBlockState;Ljava/lang/Comparable;)Ljava/util/Map; makeNeighbourValues
net/minecraft/server/BlockDaylightDetector net/minecraft/world/level/block/DaylightDetectorBlock
	b INVERTED
	c SHAPE
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	c (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	d (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V updateSignalStrength
	f (Lnet/minecraft/server/IBlockData;)Z isSignalSource
	o (Lnet/minecraft/server/IBlockData;)Z useShapeForLightOcclusion
net/minecraft/server/BlockDeadBush net/minecraft/world/level/block/DeadBushBlock
	a SHAPE
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a_ (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z mayPlaceOn
net/minecraft/server/BlockDiodeAbstract net/minecraft/world/level/block/DiodeBlock
	b SHAPE
	c POWERED
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z isLocked
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z shouldTurnOn
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
	b (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)I getOutputSignal
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getDirectSignal
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
	b (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getAlternateSignalAt
	b (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)I getAlternateSignal
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)I getInputSignal
	c (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z shouldPrioritize
	c (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V checkTickOnNeighbor
	d (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V updateNeighborsInFront
	f (Lnet/minecraft/server/IBlockData;)Z isSignalSource
	h (Lnet/minecraft/server/IBlockData;)I getDelay
	i (Lnet/minecraft/server/IBlockData;)Z isAlternateInput
net/minecraft/server/BlockDirectional net/minecraft/world/level/block/DirectionalBlock
net/minecraft/server/BlockDirtSnow net/minecraft/world/level/block/SnowyDirtBlock
	a SNOWY
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
net/minecraft/server/BlockDirtSnowSpreadable net/minecraft/world/level/block/SpreadingSnowyDirtBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canBeGrass
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canPropagate
net/minecraft/server/BlockDispenser net/minecraft/world/level/block/DispenserBlock
	REGISTRY DISPENSER_REGISTRY
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	a (Lnet/minecraft/server/IMaterial;Lnet/minecraft/server/IDispenseBehavior;)V registerBehavior
	a (Lnet/minecraft/server/ISourceBlock;)Lnet/minecraft/server/IPosition; getDispensePosition
	a (Lnet/minecraft/server/IWorldReader;)I getTickDelay
	a (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/IDispenseBehavior; getDispenseMethod
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
	b (Lnet/minecraft/server/IBlockData;)Z hasAnalogOutputSignal
	c (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	dispense (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V dispenseFrom
net/minecraft/server/BlockDoor net/minecraft/world/level/block/DoorBlock
	f SOUTH_AABB
	g NORTH_AABB
	h WEST_AABB
	i EAST_AABB
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;)J getSeed
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityHuman;)V playerWillDestroy
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/TileEntity;Lnet/minecraft/server/ItemStack;)V playerDestroy
	b (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/BlockPropertyDoorHinge; getHinge
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Z)V playSound
	c ()I getCloseSound
	d ()I getOpenSound
	g (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumPistonReaction; getPistonPushReaction
	setDoor (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Z)V setOpen
net/minecraft/server/BlockDragonEgg net/minecraft/world/level/block/DragonEggBlock
	a SHAPE
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;)V attack
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/IWorldReader;)I getTickDelay
	d (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V teleport
net/minecraft/server/BlockDropper net/minecraft/world/level/block/DropperBlock
	c DISPENSE_BEHAVIOUR
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/IDispenseBehavior; getDispenseMethod
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V dispenseFrom
net/minecraft/server/BlockEnchantmentTable net/minecraft/world/level/block/EnchantmentTableBlock
	a SHAPE
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/ITileInventory; getMenuProvider
	c (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	o (Lnet/minecraft/server/IBlockData;)Z useShapeForLightOcclusion
net/minecraft/server/BlockEndGateway net/minecraft/world/level/block/EndGatewayBlock
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/ItemStack; getCloneItemStack
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/FluidType;)Z canBeReplaced
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
net/minecraft/server/BlockEndRod net/minecraft/world/level/block/EndRodBlock
	b Y_AXIS_AABB
	c Z_AXIS_AABB
	d X_AXIS_AABB
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	g (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumPistonReaction; getPistonPushReaction
net/minecraft/server/BlockEnderChest net/minecraft/world/level/block/EnderChestBlock
	c WATERLOGGED
	d SHAPE
	e CONTAINER_TITLE
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Z)Lnet/minecraft/server/DoubleBlockFinder$Result; combine
	a_ (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getFluidState
	c (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
net/minecraft/server/BlockEnderPortal net/minecraft/world/level/block/EndPortalBlock
	a SHAPE
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/ItemStack; getCloneItemStack
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/FluidType;)Z canBeReplaced
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V entityInside
net/minecraft/server/BlockEnderPortalFrame net/minecraft/world/level/block/EndPortalFrameBlock
	EYE HAS_EYE
	c BASE_SHAPE
	d EYE_SHAPE
	e FULL_SHAPE
	f portalShape
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getAnalogOutputSignal
	b (Lnet/minecraft/server/IBlockData;)Z hasAnalogOutputSignal
	c ()Lnet/minecraft/server/ShapeDetector; getOrCreatePortalShape
	o (Lnet/minecraft/server/IBlockData;)Z useShapeForLightOcclusion
net/minecraft/server/BlockFacingHorizontal net/minecraft/world/level/block/HorizontalDirectionalBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
net/minecraft/server/BlockFalling net/minecraft/world/level/block/FallingBlock
	a (Lnet/minecraft/server/EntityFallingBlock;)V falling
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	a (Lnet/minecraft/server/IWorldReader;)I getTickDelay
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V onBroken
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;)V onLand
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
	canFallThrough (Lnet/minecraft/server/IBlockData;)Z isFree
	i (Lnet/minecraft/server/IBlockData;)I getDustColor
net/minecraft/server/BlockFence net/minecraft/world/level/block/FenceBlock
	i occlusionByIndex
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/IBlockData;ZLnet/minecraft/server/EnumDirection;)Z connectsTo
	i (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; getOcclusionShape
net/minecraft/server/BlockFenceGate net/minecraft/world/level/block/FenceGateBlock
	d Z_SHAPE
	e X_SHAPE
	f Z_SHAPE_LOW
	g X_SHAPE_LOW
	h Z_COLLISION_SHAPE
	i X_COLLISION_SHAPE
	j Z_OCCLUSION_SHAPE
	k X_OCCLUSION_SHAPE
	w Z_OCCLUSION_SHAPE_LOW
	x X_OCCLUSION_SHAPE_LOW
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;)Z connectsToDirection
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getCollisionShape
	h (Lnet/minecraft/server/IBlockData;)Z isWall
	i (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; getOcclusionShape
net/minecraft/server/BlockFire net/minecraft/world/level/block/FireBlock
	UPPER UP
	flameChances flameOdds
	g PROPERTY_BY_DIRECTION
	i burnOdds
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/Block;II)V setFlammable
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	a (Lnet/minecraft/server/IWorldReader;)I getTickDelay
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)I getFireOdds
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Z isNearRain
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;ILjava/util/Random;I)V checkBurnOut
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
	c ()V bootStrap
	canBurn (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z isValidFireLocation
	h (Lnet/minecraft/server/IBlockData;)Z canBurn
	i (Lnet/minecraft/server/IBlockData;)I getBurnOdd
	r (Lnet/minecraft/server/IBlockData;)I getFlameOdds
net/minecraft/server/BlockFletchingTable net/minecraft/world/level/block/FletchingTableBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
net/minecraft/server/BlockFloorSign net/minecraft/world/level/block/StandingSignBlock
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
net/minecraft/server/BlockFlowerPot net/minecraft/world/level/block/FlowerPotBlock
	a SHAPE
	b POTTED_BY_CONTENT
	c content
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/ItemStack; getCloneItemStack
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	c ()Lnet/minecraft/server/Block; getContent
	c (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
net/minecraft/server/BlockFlowers net/minecraft/world/level/block/FlowerBlock
	a SHAPE
	b suspiciousStewEffect
	c effectDuration
	X_ ()Lnet/minecraft/server/Block$EnumRandomOffset; getOffsetType
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	c ()Lnet/minecraft/server/MobEffectList; getSuspiciousStewEffect
	d ()I getEffectDuration
net/minecraft/server/BlockFluids net/minecraft/world/level/block/LiquidBlock
	b fluid
	c stateCache
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;)Z skipRendering
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/LootTableInfo$Builder;)Ljava/util/List; getDrops
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V entityInside
	a (Lnet/minecraft/server/IWorldReader;)I getTickDelay
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z shouldSpreadLiquid
	a_ (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getFluidState
	b (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/FluidType; takeLiquid
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z propagatesSkylightDown
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V randomTick
	c (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
net/minecraft/server/BlockFurnace net/minecraft/world/level/block/AbstractFurnaceBlock
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;)I getLightEmission
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;)V openContainer
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
	b (Lnet/minecraft/server/IBlockData;)Z hasAnalogOutputSignal
	c (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
net/minecraft/server/BlockFurnaceFurace net/minecraft/world/level/block/FurnaceBlock
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;)V openContainer
net/minecraft/server/BlockGlass net/minecraft/world/level/block/GlassBlock
net/minecraft/server/BlockGlassAbstract net/minecraft/world/level/block/AbstractGlassBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)F getShadeBrightness
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityTypes;)Z isValidSpawn
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z propagatesSkylightDown
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z isSuffocating
	d (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z isRedstoneConductor
net/minecraft/server/BlockGlazedTerracotta net/minecraft/world/level/block/GlazedTerracottaBlock
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	g (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumPistonReaction; getPistonPushReaction
net/minecraft/server/BlockGrass net/minecraft/world/level/block/GrassBlock
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/server/World;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/server/WorldServer;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V performBonemeal
net/minecraft/server/BlockGrassPath net/minecraft/world/level/block/GrassPathBlock
	a SHAPE
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	f (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z isViewBlocking
	o (Lnet/minecraft/server/IBlockData;)Z useShapeForLightOcclusion
net/minecraft/server/BlockGravel net/minecraft/world/level/block/GravelBlock
	i (Lnet/minecraft/server/IBlockData;)I getDustColor
net/minecraft/server/BlockGrindstone net/minecraft/world/level/block/GrindstoneBlock
	A FLOOR_EAST_WEST_GRINDSTONE
	B WALL_SOUTH_LEFT_POST
	D WALL_SOUTH_RIGHT_POST
	E WALL_SOUTH_LEFT_PIVOT
	F WALL_SOUTH_RIGHT_PIVOT
	G WALL_SOUTH_LEFT_LEG
	H WALL_SOUTH_RIGHT_LEG
	I WALL_SOUTH_ALL_LEGS
	J WALL_SOUTH_GRINDSTONE
	K WALL_NORTH_LEFT_POST
	L WALL_NORTH_RIGHT_POST
	M WALL_NORTH_LEFT_PIVOT
	N WALL_NORTH_RIGHT_PIVOT
	O WALL_NORTH_LEFT_LEG
	P WALL_NORTH_RIGHT_LEG
	Q WALL_NORTH_ALL_LEGS
	R WALL_NORTH_GRINDSTONE
	S WALL_WEST_LEFT_POST
	T WALL_WEST_RIGHT_POST
	U WALL_WEST_LEFT_PIVOT
	V WALL_WEST_RIGHT_PIVOT
	W WALL_WEST_LEFT_LEG
	X WALL_WEST_RIGHT_LEG
	Y WALL_WEST_ALL_LEGS
	Z WALL_WEST_GRINDSTONE
	a FLOOR_NORTH_SOUTH_LEFT_POST
	aa WALL_EAST_LEFT_POST
	ab WALL_EAST_RIGHT_POST
	ac WALL_EAST_LEFT_PIVOT
	ad WALL_EAST_RIGHT_PIVOT
	ae WALL_EAST_LEFT_LEG
	af WALL_EAST_RIGHT_LEG
	ag WALL_EAST_ALL_LEGS
	ah WALL_EAST_GRINDSTONE
	ai CEILING_NORTH_SOUTH_LEFT_POST
	aj CEILING_NORTH_SOUTH_RIGHT_POST
	ak CEILING_NORTH_SOUTH_LEFT_PIVOT
	al CEILING_NORTH_SOUTH_RIGHT_PIVOT
	am CEILING_NORTH_SOUTH_LEFT_LEG
	an CEILING_NORTH_SOUTH_RIGHT_LEG
	ao CEILING_NORTH_SOUTH_ALL_LEGS
	ap CEILING_NORTH_SOUTH_GRINDSTONE
	aq CEILING_EAST_WEST_LEFT_POST
	ar CEILING_EAST_WEST_RIGHT_POST
	as CEILING_EAST_WEST_LEFT_PIVOT
	at CEILING_EAST_WEST_RIGHT_PIVOT
	au CEILING_EAST_WEST_LEFT_LEG
	av CEILING_EAST_WEST_RIGHT_LEG
	aw CEILING_EAST_WEST_ALL_LEGS
	ax CEILING_EAST_WEST_GRINDSTONE
	az CONTAINER_TITLE
	b FLOOR_NORTH_SOUTH_RIGHT_POST
	c FLOOR_NORTH_SOUTH_LEFT_PIVOT
	d FLOOR_NORTH_SOUTH_RIGHT_PIVOT
	e FLOOR_NORTH_SOUTH_LEFT_LEG
	f FLOOR_NORTH_SOUTH_RIGHT_LEG
	g FLOOR_NORTH_SOUTH_ALL_LEGS
	h FLOOR_NORTH_SOUTH_GRINDSTONE
	i FLOOR_EAST_WEST_LEFT_POST
	j FLOOR_EAST_WEST_RIGHT_POST
	k FLOOR_EAST_WEST_LEFT_PIVOT
	w FLOOR_EAST_WEST_RIGHT_PIVOT
	x FLOOR_EAST_WEST_LEFT_LEG
	y FLOOR_EAST_WEST_RIGHT_LEG
	z FLOOR_EAST_WEST_ALL_LEGS
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getCollisionShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/ITileInventory; getMenuProvider
	c (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	i (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/VoxelShape; getVoxelShape
net/minecraft/server/BlockHalfTransparent net/minecraft/world/level/block/HalfTransparentBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;)Z skipRendering
net/minecraft/server/BlockHay net/minecraft/world/level/block/HayBlock
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;F)V fallOn
net/minecraft/server/BlockHoney net/minecraft/world/level/block/HoneyBlock
	a SHAPE
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)Z isSlidingDown
	a (Lnet/minecraft/server/Entity;)V showSlideParticles
	a (Lnet/minecraft/server/Entity;I)V showParticles
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/BlockPosition;)V maybeDoSlideAchievement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V entityInside
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;F)V fallOn
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/Entity;)V maybeDoSlideEffects
	b (Lnet/minecraft/server/Entity;)V showJumpParticles
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getCollisionShape
	c (Lnet/minecraft/server/Entity;)Z doesEntityDoHoneyBlockSlideEffects
	d (Lnet/minecraft/server/Entity;)V doSlideMovement
net/minecraft/server/BlockHopper net/minecraft/world/level/block/HopperBlock
	A WEST_INTERACTION_SHAPE
	c TOP
	d FUNNEL
	e CONVEX_BASE
	f BASE
	g DOWN_SHAPE
	h EAST_SHAPE
	i NORTH_SHAPE
	j SOUTH_SHAPE
	k WEST_SHAPE
	w DOWN_INTERACTION_SHAPE
	x EAST_INTERACTION_SHAPE
	y NORTH_INTERACTION_SHAPE
	z SOUTH_INTERACTION_SHAPE
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V entityInside
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V checkPoweredState
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
	b (Lnet/minecraft/server/IBlockData;)Z hasAnalogOutputSignal
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
	c (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	j (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; getInteractionShape
net/minecraft/server/BlockHugeMushroom net/minecraft/world/level/block/HugeMushroomBlock
	a NORTH
	b EAST
	c SOUTH
	d WEST
	e UP
	f DOWN
	g PROPERTY_BY_DIRECTION
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
net/minecraft/server/BlockIce net/minecraft/world/level/block/IceBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityTypes;)Z isValidSpawn
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/TileEntity;Lnet/minecraft/server/ItemStack;)V playerDestroy
	g (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumPistonReaction; getPistonPushReaction
net/minecraft/server/BlockIceFrost net/minecraft/world/level/block/FrostedIceBlock
	a AGE
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;I)Z fewerNeigboursThan
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/ItemStack; getCloneItemStack
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	e (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Z slightlyMelt
net/minecraft/server/BlockIronBars net/minecraft/world/level/block/IronBarsBlock
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;)Z skipRendering
	a (Lnet/minecraft/server/IBlockData;Z)Z attachsTo
net/minecraft/server/BlockJigsaw net/minecraft/world/level/block/JigsawBlock
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/DefinedStructure$BlockInfo;Lnet/minecraft/server/DefinedStructure$BlockInfo;)Z canAttach
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
net/minecraft/server/BlockJukeBox net/minecraft/world/level/block/JukeboxBlock
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/ItemStack;)V setRecord
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	b (Lnet/minecraft/server/IBlockData;)Z hasAnalogOutputSignal
	c (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	dropRecord (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V dropRecording
net/minecraft/server/BlockKelp net/minecraft/world/level/block/KelpBlock
	a AGE
	b SHAPE
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/GeneratorAccess;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/Fluid;)Z placeLiquid
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/FluidType;)Z canPlaceLiquid
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	a_ (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getFluidState
net/minecraft/server/BlockKelpPlant net/minecraft/world/level/block/KelpPlantBlock
	a top
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/Fluid;)Z placeLiquid
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/ItemStack; getCloneItemStack
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/FluidType;)Z canPlaceLiquid
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	a_ (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getFluidState
net/minecraft/server/BlockLadder net/minecraft/world/level/block/LadderBlock
	b WATERLOGGED
	c EAST_AABB
	d WEST_AABB
	e SOUTH_AABB
	f NORTH_AABB
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z canAttachTo
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a_ (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getFluidState
net/minecraft/server/BlockLantern net/minecraft/world/level/block/Lantern
	a HANGING
	b AABB
	c HANGING_AABB
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	g (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumPistonReaction; getPistonPushReaction
	h (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumDirection; getConnectedDirection
net/minecraft/server/BlockLeaves net/minecraft/world/level/block/LeavesBlock
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateDistance
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityTypes;)Z isValidSpawn
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V randomTick
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z isSuffocating
	h (Lnet/minecraft/server/IBlockData;)I getDistanceAt
	l (Lnet/minecraft/server/IBlockData;)Z isRandomlyTicking
	l (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)I getLightBlock
net/minecraft/server/BlockLectern net/minecraft/world/level/block/LecternBlock
	a FACING
	b POWERED
	c HAS_BOOK
	d SHAPE_BASE
	e SHAPE_POST
	f SHAPE_COMMON
	g SHAPE_TOP_PLATE
	h SHAPE_COLLISION
	i SHAPE_WEST
	j SHAPE_NORTH
	k SHAPE_EAST
	w SHAPE_SOUTH
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;)V openScreen
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V signalPageChange
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/ItemStack;)Z tryPlaceBook
	b (Lnet/minecraft/server/IBlockData;)Z hasAnalogOutputSignal
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getDirectSignal
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getCollisionShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/ITileInventory; getMenuProvider
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V updateBelow
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/ItemStack;)V placeBook
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V changePowered
	c (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	d (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V popBook
	f (Lnet/minecraft/server/IBlockData;)Z isSignalSource
	i (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; getOcclusionShape
	o (Lnet/minecraft/server/IBlockData;)Z useShapeForLightOcclusion
	setHasBook (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V resetBookState
net/minecraft/server/BlockLever net/minecraft/world/level/block/LeverBlock
	b NORTH_AABB
	c SOUTH_AABB
	d WEST_AABB
	e EAST_AABB
	f UP_AABB_Z
	g UP_AABB_X
	h DOWN_AABB_Z
	i DOWN_AABB_X
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;F)V makeParticle
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getDirectSignal
	d (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; pull
	e (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V updateNeighbours
	f (Lnet/minecraft/server/IBlockData;)Z isSignalSource
net/minecraft/server/BlockLogAbstract net/minecraft/world/level/block/LogBlock
	b woodMaterialColor
	e (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/MaterialMapColor; getMapColor
net/minecraft/server/BlockLongGrass net/minecraft/world/level/block/TallGrassBlock
	a SHAPE
	X_ ()Lnet/minecraft/server/Block$EnumRandomOffset; getOffsetType
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/World;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/server/WorldServer;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V performBonemeal
net/minecraft/server/BlockLoom net/minecraft/world/level/block/LoomBlock
	a CONTAINER_TITLE
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/ITileInventory; getMenuProvider
net/minecraft/server/BlockMagma net/minecraft/world/level/block/MagmaBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityTypes;)Z isValidSpawn
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	a (Lnet/minecraft/server/IWorldReader;)I getTickDelay
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V stepOn
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V randomTick
	h (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z hasPostProcess
	m (Lnet/minecraft/server/IBlockData;)Z emissiveRendering
net/minecraft/server/BlockMelon net/minecraft/world/level/block/MelonBlock
	c ()Lnet/minecraft/server/BlockStem; getStem
	d ()Lnet/minecraft/server/BlockStemAttached; getAttachedStem
net/minecraft/server/BlockMinecartDetector net/minecraft/world/level/block/DetectorRailBlock
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/AxisAlignedBB; getSearchBB
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V entityInside
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	a (Lnet/minecraft/server/IWorldReader;)I getTickDelay
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/lang/Class;Ljava/util/function/Predicate;)Ljava/util/List; getInteractingMinecartOfType
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V checkPressed
	b (Lnet/minecraft/server/IBlockData;)Z hasAnalogOutputSignal
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getDirectSignal
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V updatePowerToConnected
	d ()Lnet/minecraft/server/IBlockState; getShapeProperty
	f (Lnet/minecraft/server/IBlockData;)Z isSignalSource
net/minecraft/server/BlockMinecartTrack net/minecraft/world/level/block/RailBlock
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;)V updateState
	d ()Lnet/minecraft/server/IBlockState; getShapeProperty
net/minecraft/server/BlockMinecartTrackAbstract net/minecraft/world/level/block/BaseRailBlock
	a FLAT_AABB
	b HALF_BLOCK_AABB
	c isStraight
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;)V updateState
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Z isRail
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Lnet/minecraft/server/IBlockData; updateDir
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
	c ()Z isStraight
	d ()Lnet/minecraft/server/IBlockState; getShapeProperty
	g (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumPistonReaction; getPistonPushReaction
	h (Lnet/minecraft/server/IBlockData;)Z isRail
net/minecraft/server/BlockMobSpawner net/minecraft/world/level/block/SpawnerBlock
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/ItemStack; getCloneItemStack
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ItemStack;)V spawnAfterBreak
	c (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
net/minecraft/server/BlockMonsterEggs net/minecraft/world/level/block/InfestedBlock
	a hostBlock
	b BLOCK_BY_HOST_BLOCK
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ItemStack;)V spawnAfterBreak
	c ()Lnet/minecraft/server/Block; getHostBlock
	d (Lnet/minecraft/server/Block;)Lnet/minecraft/server/IBlockData; stateByHostBlock
	h (Lnet/minecraft/server/IBlockData;)Z isCompatibleHostBlock
net/minecraft/server/BlockMushroom net/minecraft/world/level/block/MushroomBlock
	a SHAPE
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	a (Lnet/minecraft/server/World;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/server/WorldServer;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V performBonemeal
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Ljava/util/Random;)Z growMushroom
	a_ (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z mayPlaceOn
	h (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z hasPostProcess
net/minecraft/server/BlockMycel net/minecraft/world/level/block/MyceliumBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
net/minecraft/server/BlockNetherWart net/minecraft/world/level/block/NetherWartBlock
	b SHAPE_BY_AGE
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/ItemStack; getCloneItemStack
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	a_ (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z mayPlaceOn
net/minecraft/server/BlockNote net/minecraft/world/level/block/NoteBlock
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;II)Z triggerEvent
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;)V attack
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	play (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V playNote
net/minecraft/server/BlockObserver net/minecraft/world/level/block/ObserverBlock
	b POWERED
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)V startSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V updateNeighborsInFront
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getDirectSignal
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
	f (Lnet/minecraft/server/IBlockData;)Z isSignalSource
net/minecraft/server/BlockOre net/minecraft/world/level/block/OreBlock
	a (Ljava/util/Random;)I xpOnDrop
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ItemStack;)V spawnAfterBreak
net/minecraft/server/BlockPiston net/minecraft/world/level/block/piston/PistonBaseBlock
	c EAST_AABB
	d WEST_AABB
	e SOUTH_AABB
	f NORTH_AABB
	g UP_AABB
	h DOWN_AABB
	sticky isSticky
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;II)Z triggerEvent
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;ZLnet/minecraft/server/EnumDirection;)Z isPushable
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z getNeighborSignal
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;Z)Z moveBlocks
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V checkIfExtend
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z isSuffocating
	d (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z isRedstoneConductor
	o (Lnet/minecraft/server/IBlockData;)Z useShapeForLightOcclusion
net/minecraft/server/BlockPistonExtension net/minecraft/world/level/block/piston/PistonHeadBlock
	A SHORT_UP_ARM_AABB
	B SHORT_DOWN_ARM_AABB
	C SHORT_SOUTH_ARM_AABB
	D SHORT_NORTH_ARM_AABB
	E SHORT_EAST_ARM_AABB
	F SHORT_WEST_ARM_AABB
	d EAST_AABB
	e WEST_AABB
	f SOUTH_AABB
	g NORTH_AABB
	h UP_AABB
	i DOWN_AABB
	j UP_ARM_AABB
	k DOWN_ARM_AABB
	w SOUTH_ARM_AABB
	x NORTH_ARM_AABB
	y EAST_ARM_AABB
	z WEST_ARM_AABB
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/ItemStack; getCloneItemStack
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityHuman;)V playerWillDestroy
	h (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/VoxelShape; getBaseShape
	i (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/VoxelShape; getArmShape
	o (Lnet/minecraft/server/IBlockData;)Z useShapeForLightOcclusion
net/minecraft/server/BlockPistonMoving net/minecraft/world/level/block/piston/MovingPistonBlock
	a FACING
	b TYPE
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V destroy
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/TileEntityPiston; getBlockEntity
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/ItemStack; getCloneItemStack
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;ZZ)Lnet/minecraft/server/TileEntity; newMovingBlockEntity
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/LootTableInfo$Builder;)Ljava/util/List; getDrops
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getCollisionShape
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z isSuffocating
	d (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z isRedstoneConductor
net/minecraft/server/BlockPlant net/minecraft/world/level/block/BushBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a_ (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z mayPlaceOn
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z propagatesSkylightDown
net/minecraft/server/BlockPortal net/minecraft/world/level/block/NetherPortalBlock
	b X_AXIS_AABB
	c Z_AXIS_AABB
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)Z trySpawnPortal
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/ItemStack; getCloneItemStack
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V entityInside
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	b (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/BlockPortal$Shape; isPortal
	c (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/ShapeDetector$ShapeDetectorCollection; getPortalShape
net/minecraft/server/BlockPortal$Shape net/minecraft/world/level/block/NetherPortalBlock$PortalShape
	a level
	b axis
	c rightDir
	d leftDir
	e numPortalBlocks
	position bottomLeft
	a ()I getHeight
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getDistanceUntilEdge
	a (Lnet/minecraft/server/IBlockData;)Z isEmpty
	b ()I getWidth
	c ()I calculatePortalHeight
	createPortal ()V createPortalBlocks
	d ()Z isValid
	f ()Z isComplete
	g ()Z hasAllPortalBlocks
net/minecraft/server/BlockPosition net/minecraft/core/BlockPos
	b LOGGER
	c PACKED_X_LENGTH
	d PACKED_Z_LENGTH
	f PACKED_Y_LENGTH
	g PACKED_X_MASK
	h PACKED_Y_MASK
	i PACKED_Z_MASK
	j Z_OFFSET
	k X_OFFSET
	a (DDD)Lnet/minecraft/server/BlockPosition; offset
	a (I)Lnet/minecraft/server/BlockPosition; multiply
	a (III)J asLong
	a (IIIIII)Ljava/util/stream/Stream; betweenClosedStream
	a (J)Z isOutsideBuildHeight
	a (JIII)J offset
	a (JLnet/minecraft/server/EnumDirection;)J offset
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/BlockPosition; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Ljava/lang/Object; serialize
	a (Lnet/minecraft/server/BaseBlockPosition;)Lnet/minecraft/server/BlockPosition; offset
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Ljava/lang/Iterable; betweenClosed
	a (Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/BlockPosition; rotate
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;I)Lnet/minecraft/server/BlockPosition; relative
	a (Lnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/BlockPosition; relative
	a (Lnet/minecraft/server/StructureBoundingBox;)Ljava/util/stream/Stream; betweenClosedStream
	b (DDD)Lnet/minecraft/server/BaseBlockPosition; offset
	b (III)Lnet/minecraft/server/BlockPosition; offset
	b (IIIIII)Ljava/lang/Iterable; betweenClosed
	b (J)I getX
	b (Lnet/minecraft/server/BaseBlockPosition;)Lnet/minecraft/server/BlockPosition; subtract
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; betweenClosedStream
	b (Lnet/minecraft/server/EnumDirection$EnumAxis;I)Lnet/minecraft/server/BaseBlockPosition; relative
	b (Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/BaseBlockPosition; relative
	b (Lnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/BaseBlockPosition; relative
	c ()Lnet/minecraft/server/BlockPosition; below
	c (I)Lnet/minecraft/server/BlockPosition; below
	c (III)Lnet/minecraft/server/BaseBlockPosition; offset
	c (J)I getY
	c (Lnet/minecraft/server/BaseBlockPosition;)Lnet/minecraft/server/BlockPosition; cross
	d (J)I getZ
	d (Lnet/minecraft/server/BaseBlockPosition;)Lnet/minecraft/server/BaseBlockPosition; cross
	e (Lnet/minecraft/server/BaseBlockPosition;)Lnet/minecraft/server/BaseBlockPosition; subtract
	f (J)J getFlatIndex
	f (Lnet/minecraft/server/BaseBlockPosition;)Lnet/minecraft/server/BaseBlockPosition; offset
	fromLong (J)Lnet/minecraft/server/BlockPosition; of
	h (I)Lnet/minecraft/server/BaseBlockPosition; east
	i ()Lnet/minecraft/server/BaseBlockPosition; east
	i (I)Lnet/minecraft/server/BaseBlockPosition; west
	immutableCopy ()Lnet/minecraft/server/BlockPosition; immutable
	j ()Lnet/minecraft/server/BaseBlockPosition; west
	j (I)Lnet/minecraft/server/BaseBlockPosition; south
	k ()Lnet/minecraft/server/BaseBlockPosition; south
	k (I)Lnet/minecraft/server/BaseBlockPosition; north
	l ()Lnet/minecraft/server/BaseBlockPosition; north
	l (I)Lnet/minecraft/server/BaseBlockPosition; below
	m ()Lnet/minecraft/server/BaseBlockPosition; below
	m (I)Lnet/minecraft/server/BaseBlockPosition; above
	n ()Lnet/minecraft/server/BaseBlockPosition; above
	n (I)Lnet/minecraft/server/BaseBlockPosition; multiply
	shift (Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/BlockPosition; relative
	up ()Lnet/minecraft/server/BlockPosition; above
	up (I)Lnet/minecraft/server/BlockPosition; above
net/minecraft/server/BlockPosition$MutableBlockPosition net/minecraft/core/BlockPos$MutableBlockPos
	b x
	c y
	d z
	a (DDD)Lnet/minecraft/server/BlockPosition; offset
	a (I)Lnet/minecraft/server/BlockPosition; multiply
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/BlockPosition$MutableBlockPosition; set
	a (Lnet/minecraft/server/EnumAxisCycle;III)Lnet/minecraft/server/BlockPosition$MutableBlockPosition; set
	a (Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/BlockPosition; rotate
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;I)Lnet/minecraft/server/BlockPosition; relative
	a (Lnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/BlockPosition; relative
	b (DDD)Lnet/minecraft/server/BaseBlockPosition; offset
	b (III)Lnet/minecraft/server/BlockPosition; offset
	b (Lnet/minecraft/server/EnumDirection$EnumAxis;I)Lnet/minecraft/server/BaseBlockPosition; relative
	b (Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/BaseBlockPosition; relative
	b (Lnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/BaseBlockPosition; relative
	c (DDD)Lnet/minecraft/server/BlockPosition$MutableBlockPosition; set
	c (III)Lnet/minecraft/server/BaseBlockPosition; offset
	c (Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/BlockPosition$MutableBlockPosition; move
	c (Lnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/BlockPosition$MutableBlockPosition; move
	d (III)Lnet/minecraft/server/BlockPosition$MutableBlockPosition; set
	d (Lnet/minecraft/server/BaseBlockPosition;)Lnet/minecraft/server/BaseBlockPosition; cross
	e (III)Lnet/minecraft/server/BlockPosition$MutableBlockPosition; move
	e (Lnet/minecraft/server/BaseBlockPosition;)Lnet/minecraft/server/BaseBlockPosition; subtract
	f (Lnet/minecraft/server/BaseBlockPosition;)Lnet/minecraft/server/BaseBlockPosition; offset
	g (J)Lnet/minecraft/server/BlockPosition$MutableBlockPosition; set
	g (Lnet/minecraft/server/BaseBlockPosition;)Lnet/minecraft/server/BlockPosition$MutableBlockPosition; set
	h ()Lnet/minecraft/server/BlockPosition; immutable
	h (I)Lnet/minecraft/server/BaseBlockPosition; east
	h (Lnet/minecraft/server/BaseBlockPosition;)Lnet/minecraft/server/BlockPosition$MutableBlockPosition; move
	i ()Lnet/minecraft/server/BaseBlockPosition; east
	i (I)Lnet/minecraft/server/BaseBlockPosition; west
	j ()Lnet/minecraft/server/BaseBlockPosition; west
	j (I)Lnet/minecraft/server/BaseBlockPosition; south
	k ()Lnet/minecraft/server/BaseBlockPosition; south
	k (I)Lnet/minecraft/server/BaseBlockPosition; north
	l ()Lnet/minecraft/server/BaseBlockPosition; north
	l (I)Lnet/minecraft/server/BaseBlockPosition; below
	m ()Lnet/minecraft/server/BaseBlockPosition; below
	m (I)Lnet/minecraft/server/BaseBlockPosition; above
	n ()Lnet/minecraft/server/BaseBlockPosition; above
	n (I)Lnet/minecraft/server/BaseBlockPosition; multiply
	o ()I getX
	o (I)V setX
	p ()I getY
	p (I)V setY
	q ()I getZ
	q (I)V setZ
net/minecraft/server/BlockPosition$PooledBlockPosition net/minecraft/core/BlockPos$PooledMutableBlockPos
	f free
	g POOL
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/BlockPosition$MutableBlockPosition; set
	b (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/BlockPosition$PooledBlockPosition; acquire
	c (DDD)Lnet/minecraft/server/BlockPosition$MutableBlockPosition; set
	c (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/BlockPosition$PooledBlockPosition; set
	c (Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/BlockPosition$MutableBlockPosition; move
	c (Lnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/BlockPosition$MutableBlockPosition; move
	d (DDD)Lnet/minecraft/server/BlockPosition$PooledBlockPosition; acquire
	d (III)Lnet/minecraft/server/BlockPosition$MutableBlockPosition; set
	d (Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/BlockPosition$PooledBlockPosition; move
	d (Lnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/BlockPosition$PooledBlockPosition; move
	e (DDD)Lnet/minecraft/server/BlockPosition$PooledBlockPosition; set
	e (III)Lnet/minecraft/server/BlockPosition$MutableBlockPosition; move
	f (III)Lnet/minecraft/server/BlockPosition$PooledBlockPosition; acquire
	g (III)Lnet/minecraft/server/BlockPosition$PooledBlockPosition; set
	g (Lnet/minecraft/server/BaseBlockPosition;)Lnet/minecraft/server/BlockPosition$MutableBlockPosition; set
	h (III)Lnet/minecraft/server/BlockPosition$PooledBlockPosition; move
	h (Lnet/minecraft/server/BaseBlockPosition;)Lnet/minecraft/server/BlockPosition$MutableBlockPosition; move
	i (Lnet/minecraft/server/BaseBlockPosition;)Lnet/minecraft/server/BlockPosition$PooledBlockPosition; acquire
	j (Lnet/minecraft/server/BaseBlockPosition;)Lnet/minecraft/server/BlockPosition$PooledBlockPosition; set
	k (Lnet/minecraft/server/BaseBlockPosition;)Lnet/minecraft/server/BlockPosition$PooledBlockPosition; move
	r ()Lnet/minecraft/server/BlockPosition$PooledBlockPosition; acquire
net/minecraft/server/BlockPosition2D net/minecraft/server/level/ColumnPos
	a x
	b z
	a ()Lnet/minecraft/server/ChunkCoordIntPair; toChunkPos
	a (II)J asLong
	b ()J toLong
net/minecraft/server/BlockPotatoes net/minecraft/world/level/block/PotatoBlock
	a SHAPE_BY_AGE
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	e ()Lnet/minecraft/server/IMaterial; getBaseSeedId
net/minecraft/server/BlockPowered net/minecraft/world/level/block/PoweredBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getSignal
	f (Lnet/minecraft/server/IBlockData;)Z isSignalSource
net/minecraft/server/BlockPoweredRail net/minecraft/world/level/block/PoweredRailBlock
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;)V updateState
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;ZI)Z findPoweredRailSignal
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;ZILnet/minecraft/server/BlockPropertyTrackPosition;)Z isSameRailWithPower
	d ()Lnet/minecraft/server/IBlockState; getShapeProperty
net/minecraft/server/BlockPredicate net/minecraft/world/level/block/state/predicate/BlockPredicate
	a block
	a (Lnet/minecraft/server/Block;)Lnet/minecraft/server/BlockPredicate; forBlock
	a (Lnet/minecraft/server/IBlockData;)Z test
net/minecraft/server/BlockPressurePlateAbstract net/minecraft/world/level/block/BasePressurePlateBlock
	a PRESSED_AABB
	b AABB
	c TOUCH_AABB
	Y_ ()Z isPossibleToRespawnInThis
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)V playOnSound
	a (Lnet/minecraft/server/IBlockData;I)Lnet/minecraft/server/IBlockData; setSignalForState
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V entityInside
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	a (Lnet/minecraft/server/IWorldReader;)I getTickDelay
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V updateNeighbours
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;I)V checkPressed
	b (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)V playOffSound
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getDirectSignal
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getSignalStrength
	f (Lnet/minecraft/server/IBlockData;)Z isSignalSource
	g (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumPistonReaction; getPistonPushReaction
	getPower (Lnet/minecraft/server/IBlockData;)I getSignalForState
net/minecraft/server/BlockPressurePlateBinary net/minecraft/world/level/block/PressurePlateBlock
	e sensitivity
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)V playOnSound
	a (Lnet/minecraft/server/IBlockData;I)Lnet/minecraft/server/IBlockData; setSignalForState
	b (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)V playOffSound
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getSignalStrength
	h (Lnet/minecraft/server/IBlockData;)I getSignalForState
net/minecraft/server/BlockPressurePlateBinary$EnumMobType net/minecraft/world/level/block/PressurePlateBlock$Sensitivity
	c $VALUES
net/minecraft/server/BlockPressurePlateWeighted net/minecraft/world/level/block/WeightedPressurePlateBlock
	weight maxWeight
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)V playOnSound
	a (Lnet/minecraft/server/IBlockData;I)Lnet/minecraft/server/IBlockData; setSignalForState
	a (Lnet/minecraft/server/IWorldReader;)I getTickDelay
	b (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)V playOffSound
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getSignalStrength
	h (Lnet/minecraft/server/IBlockData;)I getSignalForState
net/minecraft/server/BlockProperties net/minecraft/world/level/block/state/properties/BlockStateProperties
	A TRIGGERED
	B UNSTABLE
	C WATERLOGGED
	D HORIZONTAL_AXIS
	E AXIS
	F UP
	G DOWN
	H NORTH
	I EAST
	J SOUTH
	K WEST
	L FACING
	M FACING_HOPPER
	N HORIZONTAL_FACING
	O ATTACH_FACE
	P BELL_ATTACHMENT
	Q EAST_REDSTONE
	R NORTH_REDSTONE
	S SOUTH_REDSTONE
	T WEST_REDSTONE
	U DOUBLE_BLOCK_HALF
	V HALF
	W RAIL_SHAPE
	X RAIL_SHAPE_STRAIGHT
	Y AGE_1
	Z AGE_2
	a ATTACHED
	aA DOOR_HINGE
	aB NOTEBLOCK_INSTRUMENT
	aC PISTON_TYPE
	aD SLAB_TYPE
	aE STAIRS_SHAPE
	aF STRUCTUREBLOCK_MODE
	aG BAMBOO_LEAVES
	aa AGE_3
	ab AGE_5
	ac AGE_7
	ad AGE_15
	ae AGE_25
	af BITES
	ag DELAY
	ah DISTANCE
	ai EGGS
	aj HATCH
	ak LAYERS
	al LEVEL_CAULDRON
	am LEVEL_COMPOSTER
	an LEVEL_FLOWING
	ao LEVEL_HONEY
	ap LEVEL
	aq MOISTURE
	ar NOTE
	as PICKLES
	at POWER
	au STAGE
	av STABILITY_DISTANCE
	aw ROTATION_16
	ax BED_PART
	ay CHEST_TYPE
	az MODE_COMPARATOR
	b BOTTOM
	c CONDITIONAL
	d DISARMED
	e DRAG
	f ENABLED
	g EXTENDED
	h EYE
	i FALLING
	j HANGING
	k HAS_BOTTLE_0
	l HAS_BOTTLE_1
	m HAS_BOTTLE_2
	n HAS_RECORD
	o HAS_BOOK
	p INVERTED
	q IN_WALL
	r LIT
	s LOCKED
	t OCCUPIED
	u OPEN
	v PERSISTENT
	w POWERED
	x SHORT
	y SIGNAL_FIRE
	z SNOWY
net/minecraft/server/BlockPropertyAttachPosition net/minecraft/world/level/block/state/properties/AttachFace
	d name
	e $VALUES
	o ()Ljava/lang/String; getSerializedName
net/minecraft/server/BlockPropertyBambooSize net/minecraft/world/level/block/state/properties/BambooLeaves
	d name
	e $VALUES
	o ()Ljava/lang/String; getSerializedName
net/minecraft/server/BlockPropertyBedPart net/minecraft/world/level/block/state/properties/BedPart
	c name
	d $VALUES
	o ()Ljava/lang/String; getSerializedName
net/minecraft/server/BlockPropertyBellAttach net/minecraft/world/level/block/state/properties/BellAttachType
	e name
	f $VALUES
	o ()Ljava/lang/String; getSerializedName
net/minecraft/server/BlockPropertyChestType net/minecraft/world/level/block/state/properties/ChestType
	d BY_ID
	e name
	f opposite
	g $VALUES
	a ()Lnet/minecraft/server/BlockPropertyChestType; getOpposite
	o ()Ljava/lang/String; getSerializedName
net/minecraft/server/BlockPropertyComparatorMode net/minecraft/world/level/block/state/properties/ComparatorMode
	c name
	d $VALUES
	o ()Ljava/lang/String; getSerializedName
net/minecraft/server/BlockPropertyDoorHinge net/minecraft/world/level/block/state/properties/DoorHingeSide
	c $VALUES
	o ()Ljava/lang/String; getSerializedName
net/minecraft/server/BlockPropertyDoubleBlockHalf net/minecraft/world/level/block/state/properties/DoubleBlockHalf
	c $VALUES
	o ()Ljava/lang/String; getSerializedName
net/minecraft/server/BlockPropertyHalf net/minecraft/world/level/block/state/properties/Half
	c name
	d $VALUES
	o ()Ljava/lang/String; getSerializedName
net/minecraft/server/BlockPropertyInstrument net/minecraft/world/level/block/state/properties/NoteBlockInstrument
	q name
	r soundEvent
	s $VALUES
	a ()Lnet/minecraft/server/SoundEffect; getSoundEvent
	a (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/BlockPropertyInstrument; byState
	o ()Ljava/lang/String; getSerializedName
net/minecraft/server/BlockPropertyPistonType net/minecraft/world/level/block/state/properties/PistonType
	c name
	d $VALUES
	o ()Ljava/lang/String; getSerializedName
net/minecraft/server/BlockPropertyRedstoneSide net/minecraft/world/level/block/state/properties/RedstoneSide
	d name
	e $VALUES
	o ()Ljava/lang/String; getSerializedName
net/minecraft/server/BlockPropertySlabType net/minecraft/world/level/block/state/properties/SlabType
	d name
	e $VALUES
	o ()Ljava/lang/String; getSerializedName
net/minecraft/server/BlockPropertyStairsShape net/minecraft/world/level/block/state/properties/StairsShape
	f name
	g $VALUES
	o ()Ljava/lang/String; getSerializedName
net/minecraft/server/BlockPropertyStructureMode net/minecraft/world/level/block/state/properties/StructureMode
	e name
	f $VALUES
	o ()Ljava/lang/String; getSerializedName
net/minecraft/server/BlockPropertyTrackPosition net/minecraft/world/level/block/state/properties/RailShape
	k name
	l $VALUES
	a ()Ljava/lang/String; getName
	b ()Z isAscending
	o ()Ljava/lang/String; getSerializedName
net/minecraft/server/BlockPropertyWood net/minecraft/world/level/block/state/properties/WoodType
	a OAK
	b SPRUCE
	c BIRCH
	d ACACIA
	e JUNGLE
	f DARK_OAK
	g VALUES
	h name
	a ()Ljava/util/stream/Stream; values
	a (Lnet/minecraft/server/BlockPropertyWood;)Lnet/minecraft/server/BlockPropertyWood; register
	b ()Ljava/lang/String; name
net/minecraft/server/BlockPumpkin net/minecraft/world/level/block/PumpkinBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	c ()Lnet/minecraft/server/BlockStem; getStem
	d ()Lnet/minecraft/server/BlockStemAttached; getAttachedStem
net/minecraft/server/BlockPumpkinCarved net/minecraft/world/level/block/CarvedPumpkinBlock
	a FACING
	b snowGolemBase
	c snowGolemFull
	d ironGolemBase
	e ironGolemFull
	f PUMPKINS_PREDICATE
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityTypes;)Z isValidSpawn
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSpawnGolem
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V trySpawnGolem
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
	c ()Lnet/minecraft/server/ShapeDetector; getOrCreateSnowGolemBase
	e ()Lnet/minecraft/server/ShapeDetector; getOrCreateIronGolemBase
	getIronGolemShape ()Lnet/minecraft/server/ShapeDetector; getOrCreateIronGolemFull
	getSnowmanShape ()Lnet/minecraft/server/ShapeDetector; getOrCreateSnowGolemFull
net/minecraft/server/BlockRedstoneComparator net/minecraft/world/level/block/ComparatorBlock
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;II)Z triggerEvent
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z shouldTurnOn
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/EntityItemFrame; getItemFrame
	b (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)I getOutputSignal
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)I getInputSignal
	c (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V checkTickOnNeighbor
	e (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)I calculateOutputSignal
	f (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V refreshOutputState
	h (Lnet/minecraft/server/IBlockData;)I getDelay
net/minecraft/server/BlockRedstoneLamp net/minecraft/world/level/block/RedstoneLampBlock
	a LIT
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;)I getLightEmission
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityTypes;)Z isValidSpawn
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
net/minecraft/server/BlockRedstoneOre net/minecraft/world/level/block/RedStoneOreBlock
	a LIT
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/IBlockData;)I getLightEmission
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;)V attack
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ItemStack;)V spawnAfterBreak
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V stepOn
	playEffect (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V spawnParticles
net/minecraft/server/BlockRedstoneTorch net/minecraft/world/level/block/RedstoneTorchBlock
	b RECENT_TOGGLES
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/IBlockData;)I getLightEmission
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;Z)V handleTick
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	a (Lnet/minecraft/server/IWorldReader;)I getTickDelay
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z hasNeighborSignal
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Z)Z isToggledTooFrequently
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getDirectSignal
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
	f (Lnet/minecraft/server/IBlockData;)Z isSignalSource
net/minecraft/server/BlockRedstoneTorch$RedstoneUpdateInfo net/minecraft/world/level/block/RedstoneTorchBlock$Toggle
	a pos
	b when
net/minecraft/server/BlockRedstoneTorchWall net/minecraft/world/level/block/RedstoneWallTorchBlock
	b FACING
	c LIT
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z hasNeighborSignal
	k ()Ljava/lang/String; getDescriptionId
net/minecraft/server/BlockRedstoneWire net/minecraft/world/level/block/RedStoneWireBlock
	f PROPERTY_BY_DIRECTION
	g SHAPE_BY_INDEX
	h shouldSignal
	i toUpdate
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z shouldConnectTo
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/BlockPropertyRedstoneSide; getConnectingSide
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;)Z shouldConnectTo
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V checkCornerChangeAt
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/IBlockData; updatePowerStrength
	b (I)I getColorForData
	b (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z isPowerSourceAt
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;I)V updateIndirectNeighbourShapes
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getDirectSignal
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/IBlockData; updatePowerStrengthImpl
	f (Lnet/minecraft/server/IBlockData;)Z isSignalSource
	getPower (ILnet/minecraft/server/IBlockData;)I checkTarget
	h (Lnet/minecraft/server/IBlockData;)Z shouldConnectTo
	i (Lnet/minecraft/server/IBlockData;)I getAABBIndex
net/minecraft/server/BlockReed net/minecraft/world/level/block/SugarCaneBlock
	b SHAPE
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
net/minecraft/server/BlockRepeater net/minecraft/world/level/block/RepeaterBlock
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z isLocked
	h (Lnet/minecraft/server/IBlockData;)I getDelay
	i (Lnet/minecraft/server/IBlockData;)Z isAlternateInput
net/minecraft/server/BlockRotatable net/minecraft/world/level/block/RotatedPillarBlock
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
net/minecraft/server/BlockSand net/minecraft/world/level/block/SandBlock
	a dustColor
	i (Lnet/minecraft/server/IBlockData;)I getDustColor
net/minecraft/server/BlockSapling net/minecraft/world/level/block/SaplingBlock
	b SHAPE
	c treeGrower
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	a (Lnet/minecraft/server/World;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/server/WorldServer;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V performBonemeal
	grow (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Ljava/util/Random;)V advanceTree
net/minecraft/server/BlockScaffolding net/minecraft/world/level/block/ScaffoldingBlock
	a DISTANCE
	b WATERLOGGED
	c BOTTOM
	d STABLE_SHAPE
	e UNSTABLE_SHAPE
	f UNSTABLE_SHAPE_BOTTOM
	g BELOW_BLOCK
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)I getDistance
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;I)Z isBottom
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockActionContext;)Z canBeReplaced
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	a_ (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getFluidState
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getCollisionShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
	j (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; getInteractionShape
net/minecraft/server/BlockSeaGrass net/minecraft/world/level/block/Seagrass
	a SHAPE
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/Fluid;)Z placeLiquid
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/FluidType;)Z canPlaceLiquid
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/World;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/server/WorldServer;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V performBonemeal
	a_ (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getFluidState
	a_ (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z mayPlaceOn
net/minecraft/server/BlockSeaPickle net/minecraft/world/level/block/SeaPickleBlock
	a PICKLES
	b WATERLOGGED
	c ONE_AABB
	d TWO_AABB
	e THREE_AABB
	f FOUR_AABB
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/server/IBlockData;)I getLightEmission
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockActionContext;)Z canBeReplaced
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/World;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/server/WorldServer;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V performBonemeal
	a_ (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getFluidState
	a_ (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z mayPlaceOn
	h (Lnet/minecraft/server/IBlockData;)Z isDead
net/minecraft/server/BlockShulkerBox net/minecraft/world/level/block/ShulkerBoxBlock
	a FACING
	b CONTENTS
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/EnumColor;)Lnet/minecraft/server/Block; getBlockByColor
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/ItemStack; getCloneItemStack
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/LootTableInfo$Builder;)Ljava/util/List; getDrops
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/IBlockAccess;Ljava/util/List;Lbft;)V appendHoverText
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityHuman;)V playerWillDestroy
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
	b (Lnet/minecraft/server/EnumColor;)Lnet/minecraft/server/ItemStack; getColoredItemStack
	b (Lnet/minecraft/server/IBlockData;)Z hasAnalogOutputSignal
	b (Lnet/minecraft/server/Item;)Lnet/minecraft/server/EnumColor; getColorFromItem
	c ()Lnet/minecraft/server/EnumColor; getColor
	c (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	c (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z isSuffocating
	d (Lnet/minecraft/server/Block;)Lnet/minecraft/server/EnumColor; getColorFromBlock
	g (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumPistonReaction; getPistonPushReaction
net/minecraft/server/BlockSign net/minecraft/world/level/block/SignBlock
	a WATERLOGGED
	b SHAPE
	c type
	Y_ ()Z isPossibleToRespawnInThis
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a_ (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getFluidState
	c ()Lnet/minecraft/server/BlockPropertyWood; type
net/minecraft/server/BlockSkull net/minecraft/world/level/block/SkullBlock
	a ROTATION
	b SHAPE
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	i (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; getOcclusionShape
net/minecraft/server/BlockSkull$Type net/minecraft/world/level/block/SkullBlock$Types
	g $VALUES
net/minecraft/server/BlockSkullAbstract net/minecraft/world/level/block/AbstractSkullBlock
	a type
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	b ()Lbub$a; getType
net/minecraft/server/BlockSkullPlayer net/minecraft/world/level/block/PlayerHeadBlock
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
net/minecraft/server/BlockSkullPlayerWall net/minecraft/world/level/block/PlayerWallHeadBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/LootTableInfo$Builder;)Ljava/util/List; getDrops
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
net/minecraft/server/BlockSkullWall net/minecraft/world/level/block/WallSkullBlock
	a FACING
	b AABBS
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	k ()Ljava/lang/String; getDescriptionId
net/minecraft/server/BlockSlime net/minecraft/world/level/block/SlimeBlock
	a (Lnet/minecraft/server/Entity;)V bounceUp
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/Entity;)V updateEntityAfterFallOn
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V stepOn
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;F)V fallOn
net/minecraft/server/BlockSlowSand net/minecraft/world/level/block/SoulsandBlock
	a SHAPE
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityTypes;)Z isValidSpawn
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	a (Lnet/minecraft/server/IWorldReader;)I getTickDelay
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getCollisionShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
	d (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z isRedstoneConductor
	f (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z isViewBlocking
net/minecraft/server/BlockSmithingTable net/minecraft/world/level/block/SmithingTableBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
net/minecraft/server/BlockSmoker net/minecraft/world/level/block/SmokerBlock
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;)V openContainer
net/minecraft/server/BlockSnow net/minecraft/world/level/block/SnowLayerBlock
	b SHAPE_BY_LAYER
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockActionContext;)Z canBeReplaced
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getCollisionShape
	o (Lnet/minecraft/server/IBlockData;)Z useShapeForLightOcclusion
net/minecraft/server/BlockSoil net/minecraft/world/level/block/FarmBlock
	b SHAPE
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z isUnderCrops
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z isNearWater
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;F)V fallOn
	f (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z isViewBlocking
	fade (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V turnToDirt
	o (Lnet/minecraft/server/IBlockData;)Z useShapeForLightOcclusion
net/minecraft/server/BlockSponge net/minecraft/world/level/block/SpongeBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V tryAbsorbWater
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Z removeWaterBreadthFirstSearch
net/minecraft/server/BlockSprawling net/minecraft/world/level/block/PipeBlock
	a NORTH
	b EAST
	c SOUTH
	d WEST
	e UP
	f DOWN
	g PROPERTY_BY_DIRECTION
	h shapeByIndex
	i DIRECTIONS
	a (F)[Lnet/minecraft/server/VoxelShape; makeShapes
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z propagatesSkylightDown
	h (Lnet/minecraft/server/IBlockData;)I getAABBIndex
net/minecraft/server/BlockStainedGlass net/minecraft/world/level/block/StainedGlassBlock
	a ()Lnet/minecraft/server/EnumColor; getColor
net/minecraft/server/BlockStainedGlassPane net/minecraft/world/level/block/StainedGlassPaneBlock
	a ()Lnet/minecraft/server/EnumColor; getColor
net/minecraft/server/BlockStairs net/minecraft/world/level/block/StairBlock
	A BOTTOM_SHAPES
	B SHAPE_BY_STATE
	C base
	D baseState
	d WATERLOGGED
	e TOP_AABB
	f BOTTOM_AABB
	g OCTET_NNN
	h OCTET_NNP
	i OCTET_NPN
	j OCTET_NPP
	k OCTET_PNN
	w OCTET_PNP
	x OCTET_PPN
	y OCTET_PPP
	z TOP_SHAPES
	a (ILnet/minecraft/server/VoxelShape;Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/VoxelShape;)Lnet/minecraft/server/VoxelShape; makeStairShape
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V destroy
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;)V attack
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	a (Lnet/minecraft/server/IWorldReader;)I getTickDelay
	a (Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/VoxelShape;)[Lnet/minecraft/server/VoxelShape; makeShapes
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V stepOn
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Explosion;)V wasExploded
	a_ (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getFluidState
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
	d (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)V prepareRender
	e (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z canTakeShape
	h ()F getExplosionResistance
	h (Lnet/minecraft/server/IBlockData;)Z isStairs
	i (Lnet/minecraft/server/IBlockData;)I getShapeIndex
	n (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/BlockPropertyStairsShape; getStairsShape
	o (Lnet/minecraft/server/IBlockData;)Z useShapeForLightOcclusion
net/minecraft/server/BlockState net/minecraft/world/level/block/state/properties/AbstractProperty
	a clazz
	b name
	c hashCode
	a ()Ljava/lang/String; getName
	b ()Ljava/lang/Class; getValueClass
	c ()I generateHashCode
net/minecraft/server/BlockStateBoolean net/minecraft/world/level/block/state/properties/BooleanProperty
	a values
	a (Ljava/lang/Boolean;)Ljava/lang/String; getName
	a (Ljava/lang/Comparable;)Ljava/lang/String; getName
	b (Ljava/lang/String;)Ljava/util/Optional; getValue
	c ()I generateHashCode
	d ()Ljava/util/Collection; getPossibleValues
	of (Ljava/lang/String;)Lnet/minecraft/server/BlockStateBoolean; create
net/minecraft/server/BlockStateDirection net/minecraft/world/level/block/state/properties/DirectionProperty
	a (Ljava/lang/String;Ljava/util/Collection;)Lnet/minecraft/server/BlockStateDirection; create
	a (Ljava/lang/String;Ljava/util/function/Predicate;)Lnet/minecraft/server/BlockStateDirection; create
	a (Ljava/lang/String;[Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/BlockStateDirection; create
	of (Ljava/lang/String;)Lnet/minecraft/server/BlockStateDirection; create
net/minecraft/server/BlockStateEnum net/minecraft/world/level/block/state/properties/EnumProperty
	a values
	b names
	a (Ljava/lang/Comparable;)Ljava/lang/String; getName
	a (Ljava/lang/Enum;)Ljava/lang/String; getName
	a (Ljava/lang/String;Ljava/lang/Class;Ljava/util/Collection;)Lnet/minecraft/server/BlockStateEnum; create
	a (Ljava/lang/String;Ljava/lang/Class;Ljava/util/function/Predicate;)Lnet/minecraft/server/BlockStateEnum; create
	b (Ljava/lang/String;)Ljava/util/Optional; getValue
	c ()I generateHashCode
	d ()Ljava/util/Collection; getPossibleValues
	of (Ljava/lang/String;Ljava/lang/Class;)Lnet/minecraft/server/BlockStateEnum; create
	of (Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Enum;)Lnet/minecraft/server/BlockStateEnum; create
net/minecraft/server/BlockStateInteger net/minecraft/world/level/block/state/properties/IntegerProperty
	a values
	a (Ljava/lang/Comparable;)Ljava/lang/String; getName
	a (Ljava/lang/Integer;)Ljava/lang/String; getName
	b (Ljava/lang/String;)Ljava/util/Optional; getValue
	c ()I generateHashCode
	d ()Ljava/util/Collection; getPossibleValues
	of (Ljava/lang/String;II)Lnet/minecraft/server/BlockStateInteger; create
net/minecraft/server/BlockStateList net/minecraft/world/level/block/state/StateDefinition
	a NAME_PATTERN
	b owner
	c propertiesByName
	d states
	a ()Lcom/google/common/collect/ImmutableList; getPossibleStates
	a (Ljava/lang/String;)Lnet/minecraft/server/IBlockState; getProperty
	d ()Ljava/util/Collection; getProperties
	getBlock ()Ljava/lang/Object; getOwner
	getBlockData ()Lnet/minecraft/server/IBlockDataHolder; any
net/minecraft/server/BlockStatePredicate net/minecraft/world/level/block/state/predicate/BlockStatePredicate
	a ANY
	b definition
	c properties
	a (Lnet/minecraft/server/Block;)Lnet/minecraft/server/BlockStatePredicate; forBlock
	a (Lnet/minecraft/server/BlockStateList;)Lnet/minecraft/server/BlockStatePredicate; forDefinition
	a (Lnet/minecraft/server/IBlockData;)Z test
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockState;Ljava/util/function/Predicate;)Z applies
	a (Lnet/minecraft/server/IBlockState;Ljava/util/function/Predicate;)Lnet/minecraft/server/BlockStatePredicate; where
net/minecraft/server/BlockStem net/minecraft/world/level/block/StemBlock
	b SHAPE_BY_AGE
	blockFruit fruit
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/ItemStack; getCloneItemStack
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	a (Lnet/minecraft/server/World;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/server/WorldServer;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V performBonemeal
	a_ (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z mayPlaceOn
	c ()Lnet/minecraft/server/Item; getSeedItem
	d ()Lnet/minecraft/server/BlockStemmed; getFruit
net/minecraft/server/BlockStemAttached net/minecraft/world/level/block/AttachedStemBlock
	a FACING
	b fruit
	c AABBS
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/ItemStack; getCloneItemStack
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a_ (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z mayPlaceOn
	b ()Lnet/minecraft/server/Item; getSeedItem
net/minecraft/server/BlockStemmed net/minecraft/world/level/block/StemGrownBlock
	c ()Lnet/minecraft/server/BlockStem; getStem
	d ()Lnet/minecraft/server/BlockStemAttached; getAttachedStem
net/minecraft/server/BlockStepAbstract net/minecraft/world/level/block/SlabBlock
	a TYPE
	b WATERLOGGED
	c BOTTOM_AABB
	d TOP_AABB
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/Fluid;)Z placeLiquid
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/FluidType;)Z canPlaceLiquid
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockActionContext;)Z canBeReplaced
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a_ (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getFluidState
	o (Lnet/minecraft/server/IBlockData;)Z useShapeForLightOcclusion
net/minecraft/server/BlockStoneButton net/minecraft/world/level/block/StoneButtonBlock
	a (Z)Lnet/minecraft/server/SoundEffect; getSound
net/minecraft/server/BlockStonecutter net/minecraft/world/level/block/StonecutterBlock
	a FACING
	b SHAPE
	c CONTAINER_TITLE
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/ITileInventory; getMenuProvider
	c (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	o (Lnet/minecraft/server/IBlockData;)Z useShapeForLightOcclusion
net/minecraft/server/BlockStructure net/minecraft/world/level/block/StructureBlock
	a MODE
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/TileEntityStructure;)V trigger
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
	c (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
net/minecraft/server/BlockStructureVoid net/minecraft/world/level/block/StructureVoidBlock
	a SHAPE
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)F getShadeBrightness
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	c (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
	g (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumPistonReaction; getPistonPushReaction
net/minecraft/server/BlockSweetBerryBush net/minecraft/world/level/block/SweetBerryBushBlock
	a AGE
	b SAPLING_SHAPE
	c MID_GROWTH_SHAPE
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/ItemStack; getCloneItemStack
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V entityInside
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	a (Lnet/minecraft/server/World;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/server/WorldServer;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V performBonemeal
net/minecraft/server/BlockTNT net/minecraft/world/level/block/TntBlock
	a UNSTABLE
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/Explosion;)Z dropFromExplosion
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V explode
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityLiving;)V explode
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Explosion;)V wasExploded
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityHuman;)V playerWillDestroy
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/MovingObjectPositionBlock;Lnet/minecraft/server/Entity;)V onProjectileHit
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
net/minecraft/server/BlockTall net/minecraft/world/level/block/CrossCollisionBlock
	e WATERLOGGED
	f PROPERTY_BY_DIRECTION
	g collisionShapeByIndex
	h shapeByIndex
	i stateToIndex
	a (FFFFF)[Lnet/minecraft/server/VoxelShape; makeShapes
	a (Lnet/minecraft/server/EnumDirection;)I indexFor
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a_ (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getFluidState
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z propagatesSkylightDown
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getCollisionShape
	h (Lnet/minecraft/server/IBlockData;)I getAABBIndex
net/minecraft/server/BlockTallPlant net/minecraft/world/level/block/DoublePlantBlock
	X_ ()Lnet/minecraft/server/Block$EnumRandomOffset; getOffsetType
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;I)V placeAt
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;)J getSeed
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityHuman;)V playerWillDestroy
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/TileEntity;Lnet/minecraft/server/ItemStack;)V playerDestroy
net/minecraft/server/BlockTallPlantFlower net/minecraft/world/level/block/TallFlowerBlock
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockActionContext;)Z canBeReplaced
	a (Lnet/minecraft/server/World;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/server/WorldServer;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V performBonemeal
net/minecraft/server/BlockTallPlantShearable net/minecraft/world/level/block/ShearableDoublePlantBlock
	b HALF
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockActionContext;)Z canBeReplaced
net/minecraft/server/BlockTallSeaGrass net/minecraft/world/level/block/TallSeagrass
	c HALF
	d SHAPE
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/Fluid;)Z placeLiquid
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/ItemStack; getCloneItemStack
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/FluidType;)Z canPlaceLiquid
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a_ (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getFluidState
	a_ (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z mayPlaceOn
net/minecraft/server/BlockTileEntity net/minecraft/world/level/block/BaseEntityBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;II)Z triggerEvent
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/ITileInventory; getMenuProvider
	c (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/EnumRenderType; getRenderShape
net/minecraft/server/BlockTorch net/minecraft/world/level/block/TorchBlock
	d AABB
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
net/minecraft/server/BlockTorchWall net/minecraft/world/level/block/WallTorchBlock
	a FACING
	b AABBS
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	h (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/VoxelShape; getShape
	k ()Ljava/lang/String; getDescriptionId
net/minecraft/server/BlockTrapdoor net/minecraft/world/level/block/TrapDoorBlock
	c POWERED
	d WATERLOGGED
	e EAST_OPEN_AABB
	f WEST_OPEN_AABB
	g SOUTH_OPEN_AABB
	h NORTH_OPEN_AABB
	i BOTTOM_AABB
	j TOP_AABB
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Z)V playSound
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityTypes;)Z isValidSpawn
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	a_ (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getFluidState
net/minecraft/server/BlockTripwire net/minecraft/world/level/block/TripWireBlock
	h AABB
	i NOT_ATTACHED_AABB
	j PROPERTY_BY_DIRECTION
	k hook
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;)Z shouldConnectTo
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V entityInside
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V checkPressed
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V updateSource
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityHuman;)V playerWillDestroy
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
net/minecraft/server/BlockTripwireHook net/minecraft/world/level/block/TripWireHookBlock
	d NORTH_AABB
	e SOUTH_AABB
	f WEST_AABB
	g EAST_AABB
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getSignal
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)V notifyNeighbors
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;ZZILnet/minecraft/server/IBlockData;)V calculateState
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;ZZZZ)V playSound
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getDirectSignal
	f (Lnet/minecraft/server/IBlockData;)Z isSignalSource
net/minecraft/server/BlockTurtleEgg net/minecraft/world/level/block/TurtleEggBlock
	a HATCH
	b EGGS
	c ONE_EGG_AABB
	d MULTIPLE_EGGS_AABB
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z onSand
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockActionContext;)Z canBeReplaced
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	a (Lnet/minecraft/server/World;)Z shouldUpdateHatchLevel
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V stepOn
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;F)V fallOn
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;I)V destroyEgg
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V decreaseEggs
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/Entity;)Z canDestroyEgg
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/TileEntity;Lnet/minecraft/server/ItemStack;)V playerDestroy
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
net/minecraft/server/BlockVine net/minecraft/world/level/block/VineBlock
	f PROPERTY_BY_DIRECTION
	g UP_AABB
	h EAST_AABB
	i WEST_AABB
	j SOUTH_AABB
	k NORTH_AABB
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z canSpread
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z isAcceptableNeighbour
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockActionContext;)Z canBeReplaced
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;Ljava/util/Random;)Lnet/minecraft/server/IBlockData; copyRandomFaces
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	b (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z canSupportAtFace
	canSpread (Lnet/minecraft/server/IBlockData;)Z hasHorizontalConnection
	getDirection (Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/BlockStateBoolean; getPropertyForFace
	h (Lnet/minecraft/server/IBlockData;)Z hasFaces
	i (Lnet/minecraft/server/IBlockData;)I countFaces
	n (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getUpdatedState
net/minecraft/server/BlockWallSign net/minecraft/world/level/block/WallSignBlock
	d AABBS
	a (Lbyh$a;)V createBlockStateDefinition
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getStateForPlacement
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	k ()Ljava/lang/String; getDescriptionId
net/minecraft/server/BlockWaterLily net/minecraft/world/level/block/WaterlilyBlock
	a AABB
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V entityInside
	a_ (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z mayPlaceOn
net/minecraft/server/BlockWeb net/minecraft/world/level/block/WebBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V entityInside
net/minecraft/server/BlockWetSponge net/minecraft/world/level/block/WetSpongeBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onPlace
net/minecraft/server/BlockWitherRose net/minecraft/world/level/block/WitherRoseBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V entityInside
	a_ (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z mayPlaceOn
net/minecraft/server/BlockWitherSkull net/minecraft/world/level/block/WitherSkullBlock
	c witherPatternFull
	d witherPatternBase
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/TileEntitySkull;)V checkSpawn
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ItemStack;)Z canSpawnMob
	c ()Lnet/minecraft/server/ShapeDetector; getOrCreateWitherFull
	d ()Lnet/minecraft/server/ShapeDetector; getOrCreateWitherBase
net/minecraft/server/BlockWitherSkullWall net/minecraft/world/level/block/WitherWallSkullBlock
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V setPlacedBy
net/minecraft/server/BlockWoodButton net/minecraft/world/level/block/WoodButtonBlock
	a (Z)Lnet/minecraft/server/SoundEffect; getSound
net/minecraft/server/BlockWorkbench net/minecraft/world/level/block/CraftingTableBlock
	a CONTAINER_TITLE
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	b (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/ITileInventory; getMenuProvider
net/minecraft/server/Blocks net/minecraft/world/level/block/Blocks
	a (Ljava/lang/String;Lnet/minecraft/server/Block;)Lnet/minecraft/server/Block; register
net/minecraft/server/BossBattle net/minecraft/world/BossEvent
	b percent
	e darkenScreen
	f playBossMusic
	g createWorldFog
	h id
	style overlay
	title name
	a (F)V setPercent
	a (Lnet/minecraft/server/BossBattle$BarColor;)V setColor
	a (Lnet/minecraft/server/BossBattle$BarStyle;)V setOverlay
	a (Lnet/minecraft/server/IChatBaseComponent;)V setName
	a (Z)Lnet/minecraft/server/BossBattle; setDarkenScreen
	b (Z)Lnet/minecraft/server/BossBattle; setPlayBossMusic
	c (Z)Lnet/minecraft/server/BossBattle; setCreateWorldFog
	getProgress ()F getPercent
	i ()Ljava/util/UUID; getId
	isCreateFog ()Z shouldCreateWorldFog
	isDarkenSky ()Z shouldDarkenScreen
	isPlayMusic ()Z shouldPlayBossMusic
	j ()Lnet/minecraft/server/IChatBaseComponent; getName
	l ()Lnet/minecraft/server/BossBattle$BarColor; getColor
	m ()Lnet/minecraft/server/BossBattle$BarStyle; getOverlay
net/minecraft/server/BossBattle$BarColor net/minecraft/world/BossEvent$BossBarColor
	h name
	i formatting
	j $VALUES
	a ()Lnet/minecraft/server/EnumChatFormat; getFormatting
	a (Ljava/lang/String;)Lnet/minecraft/server/BossBattle$BarColor; byName
	b ()Ljava/lang/String; getName
net/minecraft/server/BossBattle$BarStyle net/minecraft/world/BossEvent$BossBarOverlay
	f name
	g $VALUES
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lnet/minecraft/server/BossBattle$BarStyle; byName
net/minecraft/server/BossBattleCustom net/minecraft/server/bossevents/CustomBossEvent
	h id
	i players
	j value
	k max
	a (I)V setValue
	a (Ljava/util/Collection;)Z setPlayers
	a (Ljava/util/UUID;)V addOfflinePlayer
	a (Lnet/minecraft/server/EntityPlayer;)V addPlayer
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/BossBattleCustom; load
	b ()V removeAllPlayers
	b (I)V setMax
	b (Lnet/minecraft/server/EntityPlayer;)V removePlayer
	c ()I getValue
	c (Lnet/minecraft/server/EntityPlayer;)V onPlayerConnect
	d ()I getMax
	d (Lnet/minecraft/server/EntityPlayer;)V onPlayerDisconnect
	e ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
	f ()Lnet/minecraft/server/NBTTagCompound; save
	getKey ()Lnet/minecraft/server/MinecraftKey; getTextId
net/minecraft/server/BossBattleCustomData net/minecraft/server/bossevents/CustomBossEvents
	a server
	b events
	a ()Ljava/util/Collection; getIds
	a (Lnet/minecraft/server/EntityPlayer;)V onPlayerConnect
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/BossBattleCustom; get
	b (Lnet/minecraft/server/EntityPlayer;)V onPlayerDisconnect
	getBattles ()Ljava/util/Collection; getEvents
	register (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/IChatBaseComponent;)Lnet/minecraft/server/BossBattleCustom; create
net/minecraft/server/BossBattleServer net/minecraft/server/level/ServerBossEvent
	h players
	i unmodifiablePlayers
	a (Lnet/minecraft/server/BossBattle$BarColor;)V setColor
	a (Lnet/minecraft/server/BossBattle$BarStyle;)V setOverlay
	a (Lnet/minecraft/server/IChatBaseComponent;)V setName
	b ()V removeAllPlayers
	g ()Z isVisible
	sendUpdate (Lnet/minecraft/server/PacketPlayOutBoss$Action;)V broadcast
	setCreateFog (Z)Lnet/minecraft/server/BossBattle; setCreateWorldFog
	setDarkenSky (Z)Lnet/minecraft/server/BossBattle; setDarkenScreen
	setPlayMusic (Z)Lnet/minecraft/server/BossBattle; setPlayBossMusic
	setProgress (F)V setPercent
net/minecraft/server/CSVWriter net/minecraft/util/CsvOutput
	a output
	b columnCount
	a ()Labh$a; builder
	a (Ljava/lang/Object;)Ljava/lang/String; getStringValue
	a (Ljava/util/stream/Stream;)V writeLine
	a ([Ljava/lang/Object;)V writeRow
net/minecraft/server/CancelledPacketHandleException net/minecraft/server/RunningOnDifferentThreadException
	INSTANCE RUNNING_ON_DIFFERENT_THREAD
net/minecraft/server/ChatBaseComponent net/minecraft/network/chat/BaseComponent
	b style
	a ()Ljava/util/List; getSiblings
	a (Lnet/minecraft/server/ChatModifier;)Lnet/minecraft/server/IChatBaseComponent; setStyle
	a (Lnet/minecraft/server/IChatBaseComponent;)Lnet/minecraft/server/IChatBaseComponent; append
	b ()Lnet/minecraft/server/ChatModifier; getStyle
	c ()Ljava/util/stream/Stream; stream
net/minecraft/server/ChatClickable net/minecraft/network/chat/ClickEvent
	a action
	b value
	a ()Lnet/minecraft/server/ChatClickable$EnumClickAction; getAction
	b ()Ljava/lang/String; getValue
net/minecraft/server/ChatClickable$EnumClickAction net/minecraft/network/chat/ClickEvent$Action
	g LOOKUP
	h allowFromServer
	i name
	j $VALUES
	a ()Z isAllowedFromServer
	a (Ljava/lang/String;)Lnet/minecraft/server/ChatClickable$EnumClickAction; getByName
	b ()Ljava/lang/String; getName
net/minecraft/server/ChatComponentContextual net/minecraft/network/chat/ContextAwareComponent
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/Entity;I)Lnet/minecraft/server/IChatBaseComponent; resolve
net/minecraft/server/ChatComponentKeybind net/minecraft/network/chat/KeybindComponent
	b keyResolver
	c name
	d nameResolver
	d ()Ljava/lang/String; getContents
	g ()Lnet/minecraft/server/IChatBaseComponent; copy
	i ()Lnet/minecraft/server/ChatComponentKeybind; copy
	j ()Ljava/lang/String; getName
net/minecraft/server/ChatComponentNBT net/minecraft/network/chat/NbtComponent
	b interpreting
	c nbtPathPattern
	d compiledNbtPath
	e LOGGER
	a (Lnet/minecraft/server/CommandListenerWrapper;)Ljava/util/stream/Stream; getData
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/Entity;I)Lnet/minecraft/server/IChatBaseComponent; resolve
	b (Ljava/lang/String;)Lde$h; compileNbtPath
	d ()Ljava/lang/String; getContents
	i ()Ljava/lang/String; getNbtPath
	j ()Z isInterpreting
net/minecraft/server/ChatComponentScore net/minecraft/network/chat/ScoreComponent
	b name
	c selector
	d objective
	e value
	a (Lnet/minecraft/server/CommandListenerWrapper;)Ljava/lang/String; getEntityName
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/Entity;I)Lnet/minecraft/server/IChatBaseComponent; resolve
	b (Ljava/lang/String;)V setValue
	b (Lnet/minecraft/server/CommandListenerWrapper;)V resolve
	d ()Ljava/lang/String; getContents
	g ()Lnet/minecraft/server/IChatBaseComponent; copy
	i ()Ljava/lang/String; getName
	j ()Lnet/minecraft/server/EntitySelector; getSelector
	k ()Ljava/lang/String; getObjective
	l ()Lnet/minecraft/server/ChatComponentScore; copy
net/minecraft/server/ChatComponentSelector net/minecraft/network/chat/SelectorComponent
	b LOGGER
	c pattern
	d selector
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/Entity;I)Lnet/minecraft/server/IChatBaseComponent; resolve
	d ()Ljava/lang/String; getContents
	g ()Lnet/minecraft/server/IChatBaseComponent; copy
	i ()Ljava/lang/String; getPattern
	j ()Lnet/minecraft/server/EntitySelector; getSelector
	k ()Lnet/minecraft/server/ChatComponentSelector; copy
net/minecraft/server/ChatComponentText net/minecraft/network/chat/TextComponent
	b text
	d ()Ljava/lang/String; getContents
	g ()Lnet/minecraft/server/IChatBaseComponent; copy
	i ()Ljava/lang/String; getText
	j ()Lnet/minecraft/server/ChatComponentText; copy
net/minecraft/server/ChatComponentUtils net/minecraft/network/chat/ComponentUtils
	a (Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/server/IChatBaseComponent; getDisplayName
	a (Lcom/mojang/brigadier/Message;)Lnet/minecraft/server/IChatBaseComponent; fromMessage
	a (Ljava/util/Collection;)Lnet/minecraft/server/IChatBaseComponent; formatList
	a (Ljava/util/Collection;Ljava/util/function/Function;)Lnet/minecraft/server/IChatBaseComponent; formatAndSortList
	a (Lnet/minecraft/server/IChatBaseComponent;)Lnet/minecraft/server/IChatBaseComponent; wrapInSquareBrackets
	a (Lnet/minecraft/server/IChatBaseComponent;Lnet/minecraft/server/ChatModifier;)Lnet/minecraft/server/IChatBaseComponent; mergeStyles
	b (Ljava/util/Collection;Ljava/util/function/Function;)Lnet/minecraft/server/IChatBaseComponent; formatList
	filterForDisplay (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/IChatBaseComponent;Lnet/minecraft/server/Entity;I)Lnet/minecraft/server/IChatBaseComponent; updateForEntity
net/minecraft/server/ChatDeserializer net/minecraft/util/GsonHelper
	a GSON
	a (Lcom/google/gson/Gson;Ljava/io/Reader;Ljava/lang/Class;)Ljava/lang/Object; fromJson
	a (Lcom/google/gson/Gson;Ljava/io/Reader;Ljava/lang/Class;Z)Ljava/lang/Object; fromJson
	a (Lcom/google/gson/Gson;Ljava/io/Reader;Ljava/lang/reflect/Type;)Ljava/lang/Object; fromJson
	a (Lcom/google/gson/Gson;Ljava/io/Reader;Ljava/lang/reflect/Type;Z)Ljava/lang/Object; fromJson
	a (Lcom/google/gson/Gson;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object; fromJson
	a (Lcom/google/gson/Gson;Ljava/lang/String;Ljava/lang/Class;Z)Ljava/lang/Object; fromJson
	a (Lcom/google/gson/Gson;Ljava/lang/String;Ljava/lang/reflect/Type;)Ljava/lang/Object; fromJson
	a (Lcom/google/gson/Gson;Ljava/lang/String;Ljava/lang/reflect/Type;Z)Ljava/lang/Object; fromJson
	a (Lcom/google/gson/JsonElement;)Z isStringValue
	a (Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/lang/String; convertToString
	a (Lcom/google/gson/JsonElement;Ljava/lang/String;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object; convertToObject
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z isStringValue
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;B)B getAsByte
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;C)C getAsCharacter
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;D)D getAsDouble
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;F)F getAsFloat
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;I)I getAsInt
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;J)J getAsLong
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonArray;)Lcom/google/gson/JsonArray; getAsJsonArray
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object; getAsObject
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonObject;)Lcom/google/gson/JsonObject; getAsJsonObject
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/Object;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object; getAsObject
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; getAsString
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/math/BigDecimal;)Ljava/math/BigDecimal; getAsBigDecimal
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/math/BigInteger;)Ljava/math/BigInteger; getAsBigInteger
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Lnet/minecraft/server/Item;)Lnet/minecraft/server/Item; getAsItem
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;S)S getAsShort
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Z)Z getAsBoolean
	a (Ljava/io/Reader;)Lcom/google/gson/JsonObject; parse
	a (Ljava/io/Reader;Z)Lcom/google/gson/JsonObject; parse
	a (Ljava/lang/String;)Lcom/google/gson/JsonObject; parse
	a (Ljava/lang/String;Z)Lcom/google/gson/JsonObject; parse
	b (Lcom/google/gson/JsonElement;)Z isNumberValue
	b (Lcom/google/gson/JsonElement;Ljava/lang/String;)Lnet/minecraft/server/Item; convertToItem
	b (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z isNumberValue
	c (Lcom/google/gson/JsonElement;)Z isBooleanValue
	c (Lcom/google/gson/JsonElement;Ljava/lang/String;)Z convertToBoolean
	c (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z isBooleanValue
	d (Lcom/google/gson/JsonElement;)Ljava/lang/String; getType
	d (Lcom/google/gson/JsonElement;Ljava/lang/String;)D convertToDouble
	d (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z isArrayNode
	e (Lcom/google/gson/JsonElement;Ljava/lang/String;)F convertToFloat
	e (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z isObjectNode
	f (Lcom/google/gson/JsonElement;Ljava/lang/String;)J convertToLong
	f (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z isValidPrimitive
	g (Lcom/google/gson/JsonElement;Ljava/lang/String;)I convertToInt
	g (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z isValidNode
	h (Lcom/google/gson/JsonElement;Ljava/lang/String;)B convertToByte
	h (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/String; getAsString
	i (Lcom/google/gson/JsonElement;Ljava/lang/String;)C convertToCharacter
	i (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lnet/minecraft/server/Item; getAsItem
	j (Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/math/BigDecimal; convertToBigDecimal
	j (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z getAsBoolean
	k (Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/math/BigInteger; convertToBigInteger
	k (Lcom/google/gson/JsonObject;Ljava/lang/String;)D getAsDouble
	l (Lcom/google/gson/JsonElement;Ljava/lang/String;)S convertToShort
	l (Lcom/google/gson/JsonObject;Ljava/lang/String;)F getAsFloat
	m (Lcom/google/gson/JsonElement;Ljava/lang/String;)Lcom/google/gson/JsonObject; convertToJsonObject
	m (Lcom/google/gson/JsonObject;Ljava/lang/String;)J getAsLong
	n (Lcom/google/gson/JsonElement;Ljava/lang/String;)Lcom/google/gson/JsonArray; convertToJsonArray
	n (Lcom/google/gson/JsonObject;Ljava/lang/String;)I getAsInt
	o (Lcom/google/gson/JsonObject;Ljava/lang/String;)B getAsByte
	p (Lcom/google/gson/JsonObject;Ljava/lang/String;)C getAsCharacter
	q (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/math/BigDecimal; getAsBigDecimal
	r (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/math/BigInteger; getAsBigInteger
	s (Lcom/google/gson/JsonObject;Ljava/lang/String;)S getAsShort
	t (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lcom/google/gson/JsonObject; getAsJsonObject
	u (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lcom/google/gson/JsonArray; getAsJsonArray
net/minecraft/server/ChatHoverable net/minecraft/network/chat/HoverEvent
	a action
	b value
	a ()Lnet/minecraft/server/ChatHoverable$EnumHoverAction; getAction
	b ()Lnet/minecraft/server/IChatBaseComponent; getValue
net/minecraft/server/ChatHoverable$EnumHoverAction net/minecraft/network/chat/HoverEvent$Action
	d LOOKUP
	e allowFromServer
	f name
	g $VALUES
	a ()Z isAllowedFromServer
	a (Ljava/lang/String;)Lnet/minecraft/server/ChatHoverable$EnumHoverAction; getByName
	b ()Ljava/lang/String; getName
net/minecraft/server/ChatMessage net/minecraft/network/chat/TranslatableComponent
	b decomposedParts
	c FORMAT_PATTERN
	d DEFAULT_LANGUAGE
	e LANGUAGE
	h decomposeLock
	i decomposedLanguageTime
	a (Lnet/minecraft/server/ChatModifier;)Lnet/minecraft/server/IChatBaseComponent; setStyle
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/Entity;I)Lnet/minecraft/server/IChatBaseComponent; resolve
	b (I)Lnet/minecraft/server/IChatBaseComponent; getComponent
	b (Ljava/lang/String;)V decomposeTemplate
	c ()Ljava/util/stream/Stream; stream
	d ()Ljava/lang/String; getContents
	g ()Lnet/minecraft/server/IChatBaseComponent; copy
	i ()V decompose
	j ()Lnet/minecraft/server/ChatMessage; copy
net/minecraft/server/ChatMessageException net/minecraft/network/chat/TranslatableFormatException
net/minecraft/server/ChatMessageType net/minecraft/network/chat/ChatType
	d index
	e interrupt
	f $VALUES
	a ()B getIndex
	a (B)Lnet/minecraft/server/ChatMessageType; getForIndex
	b ()Z shouldInterrupt
net/minecraft/server/ChatModifier net/minecraft/network/chat/Style
	a parent
	k ROOT
	clone ()Lnet/minecraft/server/ChatModifier; copy
	g ()Z isEmpty
	isRandom ()Z isObfuscated
	k ()Ljava/lang/String; getLegacyFormatCodes
	l ()Ljava/lang/String; toStringResolved
	n ()Lnet/minecraft/server/ChatModifier; flatCopy
	o ()Lnet/minecraft/server/ChatModifier; getParent
	setChatClickable (Lnet/minecraft/server/ChatClickable;)Lnet/minecraft/server/ChatModifier; setClickEvent
	setChatHoverable (Lnet/minecraft/server/ChatHoverable;)Lnet/minecraft/server/ChatModifier; setHoverEvent
	setChatModifier (Lnet/minecraft/server/ChatModifier;)Lnet/minecraft/server/ChatModifier; inheritFrom
	setRandom (Ljava/lang/Boolean;)Lnet/minecraft/server/ChatModifier; setObfuscated
	setUnderline (Ljava/lang/Boolean;)Lnet/minecraft/server/ChatModifier; setUnderlined
net/minecraft/server/ChatModifier$ChatModifierSerializer net/minecraft/network/chat/Style$Serializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/ChatModifier; deserialize
	a (Lnet/minecraft/server/ChatModifier;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
net/minecraft/server/ChatTypeAdapterFactory net/minecraft/util/LowerCaseEnumTypeAdapterFactory
	a (Ljava/lang/Object;)Ljava/lang/String; toLowercase
net/minecraft/server/ChestLock net/minecraft/world/LockCode
	a NO_LOCK
	a (Lnet/minecraft/server/ItemStack;)Z unlocksWith
	a (Lnet/minecraft/server/NBTTagCompound;)V addToTag
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/ChestLock; fromTag
net/minecraft/server/Chunk net/minecraft/world/level/chunk/LevelChunk
	a EMPTY_SECTION
	b LOGGER
	d biomes
	e pendingBlockEntities
	entitySlices entitySections
	heightMap heightmaps
	i upgradeData
	l structureStarts
	lastSaved lastSaveTime
	loc chunkPos
	m structuresRefences
	n postProcessing
	o blockTicks
	p liquidTicks
	q lastSaveHadEntities
	s unsaved
	tileEntities blockEntities
	u fullStatus
	v postLoad
	world level
	x isLightCorrect
	A ()V postProcessGeneration
	B ()V unpackTicks
	a (III)Lnet/minecraft/server/Fluid; getFluidState
	a (J)V setLastSaveTime
	a (Ljava/lang/Class;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/List;Ljava/util/function/Predicate;)V getEntitiesOfClass
	a (Ljava/lang/String;)Lnet/minecraft/server/StructureStart; getStartForFeature
	a (Ljava/lang/String;J)V addReferenceForFeature
	a (Ljava/lang/String;Lnet/minecraft/server/StructureStart;)V setStartForFeature
	a (Ljava/util/Map;)V setAllStarts
	a (Ljava/util/function/Supplier;)V setFullStatus
	a (Lnet/minecraft/server/BiomeStorage;Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/NBTTagCompound;I)V replaceWithPacketData
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Chunk$EnumTileEntityState;)Lnet/minecraft/server/TileEntity; getBlockEntity
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Lnet/minecraft/server/IBlockData; setBlockState
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/TileEntity; promotePendingBlockEntity
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/TileEntity;)V setBlockEntity
	a (Lnet/minecraft/server/Entity;)V addEntity
	a (Lnet/minecraft/server/Entity;I)V removeEntity
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/List;Ljava/util/function/Predicate;)V getEntities
	a (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/List;Ljava/util/function/Predicate;)V getEntities
	a (Lnet/minecraft/server/HeightMap$Type;)Lnet/minecraft/server/HeightMap; getOrCreateHeightmapUnprimed
	a (Lnet/minecraft/server/HeightMap$Type;II)I getHeight
	a (Lnet/minecraft/server/HeightMap$Type;[J)V setHeightmap
	a (Lnet/minecraft/server/NBTTagCompound;)V setBlockEntityNbt
	a (Lnet/minecraft/server/TileEntity;)V addBlockEntity
	a (Lnet/minecraft/server/WorldServer;)V packTicks
	a (Z)V setUnsaved
	addEntities ()V runPostLoad
	b (J)V setInhabitedTime
	b (Ljava/lang/String;)Lit/unimi/dsi/fastutil/longs/LongSet; getReferencesForFeature
	b (Ljava/util/Map;)V setAllReferences
	b (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/Fluid; getFluidState
	b (Lnet/minecraft/server/Entity;)V removeEntity
	b (Lnet/minecraft/server/HeightMap$Type;)Lnet/minecraft/server/BlockPosition; getHeighestPosition
	b (Z)V setLightCorrect
	c ()Ljava/util/Set; getBlockEntitiesPos
	c (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/TileEntity; getBlockEntity
	d ()[Lnet/minecraft/server/ChunkSection; getSections
	d (Lnet/minecraft/server/BlockPosition;)V removeBlockEntity
	d (Z)V setLastSaveHadEntities
	d_ (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getBlockState
	e ()Lnet/minecraft/server/LightEngine; getLightEngine
	f ()Ljava/util/Collection; getHeightmaps
	f (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/NBTTagCompound; getBlockEntityNbt
	g ()Lnet/minecraft/server/ChunkCoordIntPair; getPos
	getEntitySlices ()[Lnet/minecraft/server/EntitySlice; getEntitySections
	getState ()Lnet/minecraft/server/PlayerChunk$State; getFullStatus
	getTileEntities ()Ljava/util/Map; getBlockEntities
	getWorld ()Lnet/minecraft/server/World; getLevel
	h ()Ljava/util/Map; getAllStarts
	i ()Lnet/minecraft/server/BiomeStorage; getBiomes
	i (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/NBTTagCompound; getBlockEntityNbtForSaving
	j ()Z isUnsaved
	j (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/TileEntity; createBlockEntity
	k ()Lnet/minecraft/server/ChunkStatus; getStatus
	l ()[Lit/unimi/dsi/fastutil/shorts/ShortList; getPostProcessing
	m ()Ljava/util/stream/Stream; getLights
	markDirty ()V markUnsaved
	n ()Lnet/minecraft/server/TickList; getBlockTicks
	o ()Lnet/minecraft/server/TickList; getLiquidTicks
	p ()Lnet/minecraft/server/ChunkConverter; getUpgradeData
	q ()J getInhabitedTime
	r ()Z isLightCorrect
	v ()Ljava/util/Map; getAllReferences
net/minecraft/server/Chunk$EnumTileEntityState net/minecraft/world/level/chunk/LevelChunk$EntityCreationType
	d $VALUES
net/minecraft/server/ChunkCache net/minecraft/world/level/PathNavigationRegion
	a centerX
	b centerZ
	c chunks
	d allEmpty
	e level
	a (II)Lnet/minecraft/server/IChunkAccess; getChunk
	b (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/Fluid; getFluidState
	c (II)Lnet/minecraft/server/IBlockAccess; getChunkForCollisions
	c (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/TileEntity; getBlockEntity
	d (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IChunkAccess; getChunk
	d_ (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getBlockState
	f ()Lnet/minecraft/server/WorldBorder; getWorldBorder
net/minecraft/server/ChunkConverter net/minecraft/world/level/chunk/UpgradeData
	a EMPTY
	b LOGGER
	c DIRECTIONS
	d sides
	e index
	f MAP
	g CHUNKY_FIXERS
	a ()Z isEmpty
	a (Lnet/minecraft/server/Chunk;)V upgrade
	a (Lnet/minecraft/server/Chunk;Lnet/minecraft/server/EnumDirection8;)V upgradeSides
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateState
	b ()Lnet/minecraft/server/NBTTagCompound; write
	b (Lnet/minecraft/server/Chunk;)V upgradeInside
net/minecraft/server/ChunkConverter$Type net/minecraft/world/level/chunk/UpgradeData$BlockFixers
	f DIRECTIONS
	g $VALUES
net/minecraft/server/ChunkConverterPalette net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix
	a LOGGER
	b VIRTUAL
	c FIX
	d PUMPKIN
	e SNOWY_PODZOL
	f SNOWY_GRASS
	g SNOWY_MYCELIUM
	h UPPER_SUNFLOWER
	i UPPER_LILAC
	j UPPER_TALL_GRASS
	k UPPER_LARGE_FERN
	l UPPER_ROSE_BUSH
	m UPPER_PEONY
	n FLOWER_POT_MAP
	o SKULL_MAP
	p DOOR_MAP
	q NOTE_BLOCK_MAP
	r DYE_COLOR_MAP
	s BED_BLOCK_MAP
	t BANNER_BLOCK_MAP
	u AIR
	a (Lcom/mojang/datafixers/Dynamic;)Ljava/lang/String; getName
	a (Lcom/mojang/datafixers/Dynamic;Ljava/lang/String;)Ljava/lang/String; getProperty
	a (Ljava/util/Map;ILjava/lang/String;)V addBeds
	a (Ljava/util/Map;ILjava/lang/String;Ljava/lang/String;)V mapSkull
	a (Ljava/util/Map;Ljava/lang/String;I)V mapDoor
	a (Lnet/minecraft/server/RegistryID;Lcom/mojang/datafixers/Dynamic;)I idFor
	a (ZZZZ)I getSideMask
	b (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; fix
	b (Ljava/util/Map;ILjava/lang/String;)V addBanners
net/minecraft/server/ChunkConverterPalette$Direction net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction
	g axis
	h axisDirection
	i $VALUES
	a ()Lnet/minecraft/server/ChunkConverterPalette$Direction$AxisDirection; getAxisDirection
	b ()Lnet/minecraft/server/ChunkConverterPalette$Direction$Axis; getAxis
net/minecraft/server/ChunkConverterPalette$Direction$Axis net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction$Axis
	d $VALUES
net/minecraft/server/ChunkConverterPalette$Direction$AxisDirection net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction$AxisDirection
	c step
	d $VALUES
	a ()I getStep
net/minecraft/server/ChunkCoordIntPair net/minecraft/world/level/ChunkPos
	a INVALID_CHUNK_POS
	a (I)Lnet/minecraft/server/BlockPosition; getMiddleBlockPosition
	a (III)Lnet/minecraft/server/BlockPosition; getBlockAt
	a (Lnet/minecraft/server/ChunkCoordIntPair;)I getChessboardDistance
	a (Lnet/minecraft/server/ChunkCoordIntPair;I)Ljava/util/stream/Stream; rangeClosed
	a (Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/ChunkCoordIntPair;)Ljava/util/stream/Stream; rangeClosed
	b ()I getMiddleBlockX
	c ()I getMiddleBlockZ
	d ()I getMinBlockX
	e ()I getMinBlockZ
	f ()I getMaxBlockX
	g ()I getMaxBlockZ
	j ()I getRegionLocalX
	k ()I getRegionLocalZ
	l ()Lnet/minecraft/server/BlockPosition; getWorldPosition
	pair ()J toLong
	pair (II)J asLong
net/minecraft/server/ChunkEmpty net/minecraft/world/level/chunk/EmptyLevelChunk
	b BIOMES
	a (II)Z isYSpaceEmpty
	a (Ljava/lang/Class;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/List;Ljava/util/function/Predicate;)V getEntitiesOfClass
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Chunk$EnumTileEntityState;)Lnet/minecraft/server/TileEntity; getBlockEntity
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Lnet/minecraft/server/IBlockData; setBlockState
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/TileEntity;)V setBlockEntity
	a (Lnet/minecraft/server/Entity;)V addEntity
	a (Lnet/minecraft/server/Entity;I)V removeEntity
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/List;Ljava/util/function/Predicate;)V getEntities
	a (Lnet/minecraft/server/TileEntity;)V addBlockEntity
	b (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/Fluid; getFluidState
	b (Lnet/minecraft/server/Entity;)V removeEntity
	d (Lnet/minecraft/server/BlockPosition;)V removeBlockEntity
	d_ (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getBlockState
	e ()Lnet/minecraft/server/LightEngine; getLightEngine
	g (Lnet/minecraft/server/BlockPosition;)I getLightBlock
	h (Lnet/minecraft/server/BlockPosition;)I getLightEmission
	s ()V markUnsaved
	t ()Z isEmpty
	u ()Lnet/minecraft/server/PlayerChunk$State; getFullStatus
net/minecraft/server/ChunkGenerator net/minecraft/world/level/chunk/ChunkGenerator
	a level
	c biomeSource
	addDecorations (Lnet/minecraft/server/RegionLimitedWorldAccess;)V applyBiomeDecoration
	addMobs (Lnet/minecraft/server/RegionLimitedWorldAccess;)V spawnOriginalMobs
	b (IILnet/minecraft/server/HeightMap$Type;)I getFirstFreeHeight
	buildBase (Lnet/minecraft/server/RegionLimitedWorldAccess;Lnet/minecraft/server/IChunkAccess;)V buildSurfaceAndBedrock
	buildNoise (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/IChunkAccess;)V fillFromNoise
	c (IILnet/minecraft/server/HeightMap$Type;)I getFirstOccupiedHeight
	canSpawnStructure (Lnet/minecraft/server/BiomeBase;Lnet/minecraft/server/StructureGenerator;)Z isBiomeValidStartForStructure
	doCarving (Lnet/minecraft/server/BiomeManager;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/WorldGenStage$Features;)V applyCarvers
	doMobSpawning (Lnet/minecraft/server/WorldServer;ZZ)V tickCustomSpawners
	getBiome (Lnet/minecraft/server/BiomeManager;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/BiomeBase; getCarvingOrDecorationBiome
	getFeatureConfiguration (Lnet/minecraft/server/BiomeBase;Lnet/minecraft/server/StructureGenerator;)Lnet/minecraft/server/WorldGenFeatureConfiguration; getStructureConfiguration
	getGenerationDepth ()I getGenDepth
	getMobsFor (Lnet/minecraft/server/EnumCreatureType;Lnet/minecraft/server/BlockPosition;)Ljava/util/List; getMobsAt
	getWorldChunkManager ()Lnet/minecraft/server/WorldChunkManager; getBiomeSource
	storeStructures (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/IChunkAccess;)V createReferences
net/minecraft/server/ChunkGeneratorAbstract net/minecraft/world/level/levelgen/NoiseBasedChunkGenerator
	e random
	f defaultBlock
	g defaultFluid
	h BEARD_KERNEL
	i AIR
	j chunkHeight
	k chunkWidth
	l chunkCountX
	m chunkCountY
	n chunkCountZ
	o minLimitPerlinNoise
	p maxLimitPerlinNoise
	q mainPerlinNoise
	r surfaceNoise
	a (DDI)D getYOffset
	a (II)[D getDepthAndScale
	a (III)D getContribution
	a (IIIDDDD)D sampleAndClampNoise
	a (IILnet/minecraft/server/HeightMap$Type;)I getBaseHeight
	a (Lnet/minecraft/server/IChunkAccess;Ljava/util/Random;)V setBedrock
	a (Lnet/minecraft/server/RegionLimitedWorldAccess;Lnet/minecraft/server/IChunkAccess;)V buildSurfaceAndBedrock
	a ([DII)V fillNoiseColumn
	a ([DIIDDDDII)V fillNoiseColumn
	b (II)[D makeAndFillNoiseColumn
	b (III)D computeContribution
	b (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/IChunkAccess;)V fillFromNoise
	g ()D getTopSlideStart
	h ()D getBottomSlideStart
	i ()I getNoiseSizeY
net/minecraft/server/ChunkGeneratorFactory net/minecraft/world/level/chunk/ChunkGeneratorFactory
net/minecraft/server/ChunkGeneratorType net/minecraft/world/level/chunk/ChunkGeneratorType
	a SURFACE
	b CAVES
	c FLOATING_ISLANDS
	d DEBUG
	e FLAT
	f factory
	g isPublic
	h settingsFactory
	a ()Lnet/minecraft/server/GeneratorSettingsDefault; createSettings
	a (Ljava/lang/String;Lnet/minecraft/server/ChunkGeneratorFactory;Ljava/util/function/Supplier;Z)Lnet/minecraft/server/ChunkGeneratorType; register
	b ()Z isPublic
net/minecraft/server/ChunkMap net/minecraft/server/level/ChunkTracker
	a (J)Z isSource
	a (JIZ)V checkNeighborsAfterUpdate
	a (JJI)I getComputedLevel
	b (J)I getLevelFromSource
	b (JIZ)V update
	b (JJI)I computeLevelFromNeighbor
net/minecraft/server/ChunkMapDistance net/minecraft/server/level/DistanceManager
	a LOGGER
	b PLAYER_TICKET_LEVEL
	c playersPerChunk
	currentTick ticketTickCounter
	e ticketTracker
	f naturalSpawnChunkCounter
	g playerTicketManager
	i ticketThrottler
	j ticketThrottlerInput
	k ticketThrottlerReleaser
	l ticketsToRelease
	m mainThreadExecutor
	pendingChunkUpdates chunksToUpdateFutures
	a (I)V updatePlayerTickets
	a (J)Z isChunkToRemove
	a (JILnet/minecraft/server/PlayerChunk;I)Lnet/minecraft/server/PlayerChunk; updateChunkScheduling
	a (Ljava/lang/String;)V dumpTickets
	a (Lnet/minecraft/server/ArraySetSorted;)I getTicketLevelAt
	a (Lnet/minecraft/server/ChunkCoordIntPair;Z)V updateChunkForced
	a (Lnet/minecraft/server/PlayerChunkMap;)Z runAllUpdates
	a (Lnet/minecraft/server/SectionPosition;Lnet/minecraft/server/EntityPlayer;)V addPlayer
	a (Lnet/minecraft/server/TicketType;Lnet/minecraft/server/ChunkCoordIntPair;ILjava/lang/Object;)V addTicket
	addTicket (Lnet/minecraft/server/TicketType;Lnet/minecraft/server/ChunkCoordIntPair;ILjava/lang/Object;)V addRegionTicket
	b ()I getNaturalSpawnChunkCount
	b (J)Lnet/minecraft/server/PlayerChunk; getChunk
	b (Lnet/minecraft/server/SectionPosition;Lnet/minecraft/server/EntityPlayer;)V removePlayer
	b (Lnet/minecraft/server/TicketType;Lnet/minecraft/server/ChunkCoordIntPair;ILjava/lang/Object;)V removeTicket
	c ()Ljava/lang/String; getDebugStatus
	c (J)Ljava/lang/String; getTicketDebugString
	d (J)Z hasPlayersNearby
	e (J)Lnet/minecraft/server/ArraySetSorted; getTickets
	purgeTickets ()V purgeStaleTickets
	removeTicket (Lnet/minecraft/server/TicketType;Lnet/minecraft/server/ChunkCoordIntPair;ILjava/lang/Object;)V removeRegionTicket
net/minecraft/server/ChunkProviderDebug net/minecraft/world/level/levelgen/DebugLevelSource
	e AIR
	f BARRIER
	g ALL_BLOCKS
	h GRID_WIDTH
	i GRID_HEIGHT
	a (II)Lnet/minecraft/server/IBlockData; getBlockStateFor
	a (IILnet/minecraft/server/HeightMap$Type;)I getBaseHeight
	a (Lnet/minecraft/server/BiomeManager;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/WorldGenStage$Features;)V applyCarvers
	a (Lnet/minecraft/server/RegionLimitedWorldAccess;)V applyBiomeDecoration
	a (Lnet/minecraft/server/RegionLimitedWorldAccess;Lnet/minecraft/server/IChunkAccess;)V buildSurfaceAndBedrock
	b ()I getSpawnHeight
	b (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/IChunkAccess;)V fillFromNoise
net/minecraft/server/ChunkProviderFlat net/minecraft/world/level/levelgen/FlatLevelSource
	e biomeWrapper
	f phantomSpawner
	g catSpawner
	a (IILnet/minecraft/server/HeightMap$Type;)I getBaseHeight
	a (Lnet/minecraft/server/BiomeBase;Lnet/minecraft/server/StructureGenerator;)Z isBiomeValidStartForStructure
	a (Lnet/minecraft/server/BiomeManager;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/BiomeBase; getCarvingOrDecorationBiome
	a (Lnet/minecraft/server/RegionLimitedWorldAccess;Lnet/minecraft/server/IChunkAccess;)V buildSurfaceAndBedrock
	a (Lnet/minecraft/server/World;Ljava/lang/String;Lnet/minecraft/server/BlockPosition;IZ)Lnet/minecraft/server/BlockPosition; findNearestMapFeature
	a (Lnet/minecraft/server/WorldServer;ZZ)V tickCustomSpawners
	b ()I getSpawnHeight
	b (Lnet/minecraft/server/BiomeBase;Lnet/minecraft/server/StructureGenerator;)Lnet/minecraft/server/WorldGenFeatureConfiguration; getStructureConfiguration
	b (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/IChunkAccess;)V fillFromNoise
	g ()Lnet/minecraft/server/BiomeBase; getBiomeFromSettings
net/minecraft/server/ChunkProviderGenerate net/minecraft/world/level/levelgen/OverworldLevelSource
	h BIOME_WEIGHTS
	i depthNoise
	j isAmplified
	k phantomSpawner
	l patrolSpawner
	m catSpawner
	n villageSiege
	a (DDI)D getYOffset
	a (II)[D getDepthAndScale
	a (Lnet/minecraft/server/EnumCreatureType;Lnet/minecraft/server/BlockPosition;)Ljava/util/List; getMobsAt
	a (Lnet/minecraft/server/WorldServer;ZZ)V tickCustomSpawners
	a ([DII)V fillNoiseColumn
	b ()I getSpawnHeight
	b (Lnet/minecraft/server/RegionLimitedWorldAccess;)V spawnOriginalMobs
	c (II)D getRdepth
	f ()I getSeaLevel
net/minecraft/server/ChunkProviderHell net/minecraft/world/level/levelgen/NetherLevelSource
	h yOffsets
	a (DDI)D getYOffset
	a (II)[D getDepthAndScale
	a (Lnet/minecraft/server/EnumCreatureType;Lnet/minecraft/server/BlockPosition;)Ljava/util/List; getMobsAt
	a ([DII)V fillNoiseColumn
	b ()I getSpawnHeight
	e ()I getGenDepth
	f ()I getSeaLevel
	j ()[D makeYOffsets
net/minecraft/server/ChunkProviderServer net/minecraft/server/level/ServerChunkCache
	allowAnimals spawnFriendlies
	allowMonsters spawnEnemies
	b MAGIC_NUMBER
	c CHUNK_STATUSES
	cacheChunk lastChunk
	cachePos lastChunkPos
	cacheStatus lastChunkStatus
	chunkGenerator generator
	chunkMapDistance distanceManager
	lastTickTime lastInhabitedUpdate
	playerChunkMap chunkMap
	serverThread mainThread
	serverThreadQueue mainThreadProcessor
	world level
	worldPersistentData dataStorage
	a ()Lnet/minecraft/server/LightEngineThreaded; getLightEngine
	a (II)Lnet/minecraft/server/Chunk; getChunkNow
	a (IILnet/minecraft/server/ChunkStatus;Z)Lnet/minecraft/server/IChunkAccess; getChunk
	a (JLjava/util/function/Function;)Z checkChunkFuture
	a (JLnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/ChunkStatus;)V storeInCache
	a (Lnet/minecraft/server/BlockPosition;)Z isTickingChunk
	a (Lnet/minecraft/server/ChunkCoordIntPair;)Z isEntityTickingChunk
	a (Lnet/minecraft/server/ChunkCoordIntPair;Z)V updateChunkForced
	a (Lnet/minecraft/server/Entity;)Z isEntityTickingChunk
	a (Lnet/minecraft/server/EnumSkyBlock;Lnet/minecraft/server/SectionPosition;)V onLightUpdate
	a (Lnet/minecraft/server/PlayerChunk;I)Z chunkAbsent
	a (ZZ)V setSpawnSettings
	addTicket (Lnet/minecraft/server/TicketType;Lnet/minecraft/server/ChunkCoordIntPair;ILjava/lang/Object;)V addRegionTicket
	b ()I getTickingGenerated
	b (IILnet/minecraft/server/ChunkStatus;Z)Ljava/util/concurrent/CompletableFuture; getChunkFuture
	b (Lnet/minecraft/server/ChunkCoordIntPair;)Ljava/lang/String; getChunkDebugData
	b (Lnet/minecraft/server/Entity;)Z isInAccessibleChunk
	broadcastIncludingSelf (Lnet/minecraft/server/Entity;Lnet/minecraft/server/Packet;)V broadcastAndSend
	c ()Lnet/minecraft/server/World; getLevel
	c (II)Lnet/minecraft/server/IBlockAccess; getChunkForLighting
	e ()Ljava/lang/String; gatherStats
	f ()I getPendingTasksCount
	flagDirty (Lnet/minecraft/server/BlockPosition;)V blockChanged
	getChunk (J)Lnet/minecraft/server/PlayerChunk; getVisibleChunkIfPresent
	getChunkGenerator ()Lnet/minecraft/server/ChunkGenerator; getGenerator
	getWorldPersistentData ()Lnet/minecraft/server/WorldPersistentData; getDataStorage
	h ()I getLoadedChunksCount
	isLoaded (II)Z hasChunk
	j ()Lnet/minecraft/server/VillagePlace; getPoiManager
	k ()Lnet/minecraft/server/LightEngine; getLightEngine
	l ()Lnet/minecraft/server/IBlockAccess; getLevel
	movePlayer (Lnet/minecraft/server/EntityPlayer;)V move
	removeTicket (Lnet/minecraft/server/TicketType;Lnet/minecraft/server/ChunkCoordIntPair;ILjava/lang/Object;)V removeRegionTicket
	runTasks ()Z pollTask
	tickDistanceManager ()Z runDistanceManagerUpdates
net/minecraft/server/ChunkProviderTheEnd net/minecraft/world/level/levelgen/TheEndLevelSource
	h dimensionSpawnPosition
	a (DDI)D getYOffset
	a (II)[D getDepthAndScale
	a ([DII)V fillNoiseColumn
	b ()I getSpawnHeight
	f ()I getSeaLevel
	g ()D getTopSlideStart
	h ()D getBottomSlideStart
	j ()Lnet/minecraft/server/BlockPosition; getDimensionSpawnPosition
net/minecraft/server/ChunkRegionLoader net/minecraft/world/level/chunk/storage/ChunkSerializer
	a LOGGER
	a (Lnet/minecraft/server/ChunkCoordIntPair;Ljava/util/Map;Ljava/util/Map;)Lnet/minecraft/server/NBTTagCompound; packStructureData
	a (Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/NBTTagCompound;)Ljava/util/Map; unpackStructureReferences
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/NBTTagCompound;)Ljava/util/Map; unpackStructureStart
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/ChunkStatus$Type; getChunkTypeFromTag
	a ([Lit/unimi/dsi/fastutil/shorts/ShortList;)Lnet/minecraft/server/NBTTagList; packOffsets
	loadChunk (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/VillagePlace;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/ProtoChunk; read
	loadEntities (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/Chunk;)V postLoadChunk
	saveChunk (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/IChunkAccess;)Lnet/minecraft/server/NBTTagCompound; write
net/minecraft/server/ChunkSection net/minecraft/world/level/chunk/LevelChunkSection
	GLOBAL_PALETTE GLOBAL_BLOCKSTATE_PALETTE
	blockIds states
	e tickingFluidCount
	yPos bottomBlockY
	a ()V acquire
	a (Lnet/minecraft/server/ChunkSection;)Z isEmpty
	a (Lnet/minecraft/server/IBlockData;)Z maybeHas
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	b ()V release
	b (III)Lnet/minecraft/server/Fluid; getFluidState
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Z isEmpty
	d ()Z isRandomlyTicking
	f ()Z isRandomlyTickingFluids
	getBlocks ()Lnet/minecraft/server/DataPaletteBlock; getStates
	getType (III)Lnet/minecraft/server/IBlockData; getBlockState
	getYPosition ()I bottomBlockY
	j ()I getSerializedSize
	setType (IIILnet/minecraft/server/IBlockData;)Lnet/minecraft/server/IBlockData; setBlockState
	setType (IIILnet/minecraft/server/IBlockData;Z)Lnet/minecraft/server/IBlockData; setBlockState
	shouldTick ()Z isRandomlyTickingBlocks
net/minecraft/server/ChunkStatus net/minecraft/world/level/chunk/ChunkStatus
	n PRE_FEATURES
	o POST_FEATURES
	p PASSTHROUGH_LOAD_TASK
	q STATUS_BY_RANGE
	r RANGE_BY_STATUS
	s name
	t index
	u parent
	v generationTask
	w loadingTask
	x range
	y chunkType
	z heightmapsAfter
	a ()Ljava/util/List; getStatusList
	a (I)Lnet/minecraft/server/ChunkStatus; getStatus
	a (Ljava/lang/String;)Lnet/minecraft/server/ChunkStatus; byName
	a (Ljava/lang/String;Lnet/minecraft/server/ChunkStatus;ILjava/util/EnumSet;Lnet/minecraft/server/ChunkStatus$Type;Lcab$b;)Lnet/minecraft/server/ChunkStatus; register
	a (Ljava/lang/String;Lnet/minecraft/server/ChunkStatus;ILjava/util/EnumSet;Lnet/minecraft/server/ChunkStatus$Type;Lcab$b;Lcab$c;)Lnet/minecraft/server/ChunkStatus; register
	a (Ljava/lang/String;Lnet/minecraft/server/ChunkStatus;ILjava/util/EnumSet;Lnet/minecraft/server/ChunkStatus$Type;Lcab$d;)Lnet/minecraft/server/ChunkStatus; registerSimple
	a (Lnet/minecraft/server/ChunkStatus;)I getDistance
	a (Lnet/minecraft/server/ChunkStatus;Lnet/minecraft/server/IChunkAccess;)Z isLighted
	a (Lnet/minecraft/server/ChunkStatus;Lnet/minecraft/server/LightEngineThreaded;Lnet/minecraft/server/IChunkAccess;)Ljava/util/concurrent/CompletableFuture; lightChunk
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/LightEngineThreaded;Ljava/util/function/Function;Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; generate
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/LightEngineThreaded;Ljava/util/function/Function;Lnet/minecraft/server/IChunkAccess;)Ljava/util/concurrent/CompletableFuture; load
	b ()I maxDistance
	b (Lnet/minecraft/server/ChunkStatus;)Z isOrAfter
	c ()I getIndex
	d ()Ljava/lang/String; getName
	e ()Lnet/minecraft/server/ChunkStatus; getParent
	f ()I getRange
	getType ()Lnet/minecraft/server/ChunkStatus$Type; getChunkType
	h ()Ljava/util/EnumSet; heightmapsAfter
net/minecraft/server/ChunkStatus$Type net/minecraft/world/level/chunk/ChunkStatus$ChunkType
	c $VALUES
net/minecraft/server/ChunkTaskQueue net/minecraft/server/level/ChunkTaskPriorityQueue
	a PRIORITY_LEVEL_COUNT
	b taskQueue
	c firstQueue
	d name
	e acquired
	f maxTasks
	a ()Ljava/util/stream/Stream; pop
	a (ILnet/minecraft/server/ChunkCoordIntPair;I)V resortChunkTasks
	a (J)Ljava/lang/Runnable; acquire
	a (JZ)V release
	a (Ljava/util/Optional;JI)V submit
	b ()Lit/unimi/dsi/fastutil/longs/LongSet; getAcquired
net/minecraft/server/ChunkTaskQueueSorter net/minecraft/server/level/ChunkTaskPriorityQueueSorter
	a LOGGER
	b queues
	c sleeping
	d mailbox
	a ()Ljava/lang/String; getDebugStatus
	a (Ljava/lang/Runnable;JLjava/util/function/IntSupplier;)Lwr$a; message
	a (Ljava/lang/Runnable;JZ)Lwr$b; release
	a (Ljava/util/function/Function;JLjava/util/function/IntSupplier;)Lwr$a; message
	a (Lnet/minecraft/server/ChunkCoordIntPair;Ljava/util/function/IntSupplier;ILjava/util/function/IntConsumer;)V onLevelChange
	a (Lnet/minecraft/server/ChunkTaskQueue;Lnet/minecraft/server/Mailbox;)V pollTask
	a (Lnet/minecraft/server/Mailbox;)Lnet/minecraft/server/Mailbox; getReleaseProcessor
	a (Lnet/minecraft/server/Mailbox;JLjava/lang/Runnable;Z)V release
	a (Lnet/minecraft/server/Mailbox;Ljava/util/function/Function;JLjava/util/function/IntSupplier;Z)V submit
	a (Lnet/minecraft/server/Mailbox;Z)Lnet/minecraft/server/Mailbox; getProcessor
	a (Lnet/minecraft/server/PlayerChunk;Ljava/lang/Runnable;)Lwr$a; message
	a (Lnet/minecraft/server/PlayerChunk;Ljava/util/function/Function;)Lwr$a; message
	b (Lnet/minecraft/server/Mailbox;)Lnet/minecraft/server/ChunkTaskQueue; getQueue
net/minecraft/server/CircularTimer net/minecraft/util/FrameTimer
	a loggedTimes
	b logStart
	c logLength
	d logEnd
	a ()I getLogStart
	a (I)J getAverageDuration
	a (II)I scaleAverageDurationTo
	a (J)V logFrameDuration
	a (JII)I scaleSampleTo
	b ()I getLogEnd
	b (I)I wrapIndex
	c ()[J getLog
net/minecraft/server/Clearable net/minecraft/world/Clearable
	a (Ljava/lang/Object;)V tryClear
	clear ()V clearContent
net/minecraft/server/CombatEntry net/minecraft/world/damagesource/CombatEntry
	a source
	b time
	c damage
	d health
	e location
	f fallDistance
	a ()Lnet/minecraft/server/DamageSource; getSource
	b ()I getTime
	c ()F getDamage
	d ()F getHealthBeforeDamage
	e ()F getHealthAfterDamage
	f ()Z isCombatRelated
	g ()Ljava/lang/String; getLocation
	h ()Lnet/minecraft/server/IChatBaseComponent; getAttackerName
	i ()Lnet/minecraft/server/Entity; getAttacker
	j ()F getFallDistance
net/minecraft/server/CombatMath net/minecraft/world/damagesource/CombatRules
	a (FF)F getDamageAfterMagicAbsorb
	a (FFF)F getDamageAfterAbsorb
net/minecraft/server/CombatTracker net/minecraft/world/damagesource/CombatTracker
	a entries
	b mob
	c lastDamageTime
	d combatStartTime
	e combatEndTime
	f inCombat
	g takingDamage
	h nextLocation
	a ()V prepareForDamage
	a (Lnet/minecraft/server/CombatEntry;)Ljava/lang/String; getFallLocation
	c ()Lnet/minecraft/server/EntityLiving; getKiller
	d ()Z isTakingDamage
	e ()Z isInCombat
	f ()I getCombatDuration
	g ()V recheckStatus
	h ()Lnet/minecraft/server/EntityLiving; getMob
	i ()Lnet/minecraft/server/CombatEntry; getLastEntry
	j ()Lnet/minecraft/server/CombatEntry; getMostSignificantFall
	k ()V resetPreparedStatus
	trackDamage (Lnet/minecraft/server/DamageSource;FF)V recordDamage
net/minecraft/server/CommandAdvancement net/minecraft/server/commands/AdvancementCommands
	a SUGGEST_ADVANCEMENTS
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/server/Advancement;Ljava/util/List;)V addChildren
	a (Lnet/minecraft/server/Advancement;Lnet/minecraft/server/CommandAdvancement$Filter;)Ljava/util/List; getAdvancements
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/CommandAdvancement$Action;Ljava/util/Collection;)I perform
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/CommandAdvancement$Action;Lnet/minecraft/server/Advancement;Ljava/lang/String;)I performCriterion
net/minecraft/server/CommandAdvancement$Action net/minecraft/server/commands/AdvancementCommands$Action
	c key
	d $VALUES
	a ()Ljava/lang/String; getKey
	a (Lnet/minecraft/server/EntityPlayer;Ljava/lang/Iterable;)I perform
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/Advancement;)Z perform
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/Advancement;Ljava/lang/String;)Z performCriterion
net/minecraft/server/CommandAdvancement$Filter net/minecraft/server/commands/AdvancementCommands$Mode
	f parents
	g children
	h $VALUES
net/minecraft/server/CommandBan net/minecraft/server/commands/BanPlayerCommands
	a ERROR_ALREADY_BANNED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/IChatBaseComponent;)I banPlayers
net/minecraft/server/CommandBanIp net/minecraft/server/commands/BanIpCommands
	a IP_ADDRESS_PATTERN
	b ERROR_INVALID_IP
	c ERROR_ALREADY_BANNED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/lang/String;Lnet/minecraft/server/IChatBaseComponent;)I banIpOrName
	b (Lnet/minecraft/server/CommandListenerWrapper;Ljava/lang/String;Lnet/minecraft/server/IChatBaseComponent;)I banIp
net/minecraft/server/CommandBanList net/minecraft/server/commands/BanListCommands
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;)I showList
net/minecraft/server/CommandBlockListenerAbstract net/minecraft/world/level/BaseCommandBlock
	b TIME_FORMAT
	c DEFAULT_NAME
	customName name
	I_ ()Z shouldInformAdmins
	a ()Z acceptsSuccess
	a (I)V setSuccessCount
	a (Lio/netty/buffer/ByteBuf;)V writeCoordinates
	a (Lnet/minecraft/server/EntityHuman;)Z usedBy
	a (Lnet/minecraft/server/IChatBaseComponent;)V sendMessage
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	a (Lnet/minecraft/server/World;)Z performCommand
	a (Z)V setTrackOutput
	b ()Z acceptsFailure
	b (Lnet/minecraft/server/NBTTagCompound;)V load
	c (Lnet/minecraft/server/IChatBaseComponent;)V setLastOutput
	d ()Lnet/minecraft/server/WorldServer; getLevel
	e ()V onUpdated
	f ()Lnet/minecraft/server/Vec3D; getPosition
	getWrapper ()Lnet/minecraft/server/CommandListenerWrapper; createCommandSourceStack
	i ()I getSuccessCount
	j ()Lnet/minecraft/server/IChatBaseComponent; getLastOutput
	m ()Z isTrackOutput
net/minecraft/server/CommandBossBar net/minecraft/server/commands/BossBarCommands
	a SUGGEST_BOSS_BAR
	b ERROR_ALREADY_EXISTS
	c ERROR_DOESNT_EXIST
	d ERROR_NO_PLAYER_CHANGE
	e ERROR_NO_NAME_CHANGE
	f ERROR_NO_COLOR_CHANGE
	g ERROR_NO_STYLE_CHANGE
	h ERROR_NO_VALUE_CHANGE
	i ERROR_NO_MAX_CHANGE
	j ERROR_ALREADY_HIDDEN
	k ERROR_ALREADY_VISIBLE
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/server/BossBattleCustom; getBossBar
	a (Lnet/minecraft/server/CommandListenerWrapper;)I listBars
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BossBattleCustom;)I getValue
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BossBattleCustom;I)I setValue
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BossBattleCustom;Ljava/util/Collection;)I setPlayers
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BossBattleCustom;Lnet/minecraft/server/BossBattle$BarColor;)I setColor
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BossBattleCustom;Lnet/minecraft/server/BossBattle$BarStyle;)I setStyle
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BossBattleCustom;Lnet/minecraft/server/IChatBaseComponent;)I setName
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BossBattleCustom;Z)I setVisible
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/IChatBaseComponent;)I createBar
	b (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BossBattleCustom;)I getMax
	b (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BossBattleCustom;I)I setMax
	c (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BossBattleCustom;)I getVisible
	d (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BossBattleCustom;)I getPlayers
	e (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BossBattleCustom;)I removeBar
net/minecraft/server/CommandClear net/minecraft/server/commands/ClearInventoryCommands
	a ERROR_SINGLE
	b ERROR_MULTIPLE
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Ljava/util/function/Predicate;I)I clearInventory
net/minecraft/server/CommandClone net/minecraft/server/commands/CloneCommands
	a FILTER_AIR
	b ERROR_OVERLAP
	c ERROR_AREA_TOO_LARGE
	d ERROR_FAILED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;Ljava/util/function/Predicate;Lnet/minecraft/server/CommandClone$Mode;)I clone
net/minecraft/server/CommandClone$CommandCloneStoredTileEntity net/minecraft/server/commands/CloneCommands$CloneBlockInfo
	a pos
	b state
	c tag
net/minecraft/server/CommandClone$Mode net/minecraft/server/commands/CloneCommands$Mode
	d canOverlap
	e $VALUES
	a ()Z canOverlap
net/minecraft/server/CommandData net/minecraft/server/commands/data/DataCommands
	a ALL_PROVIDERS
	b TARGET_PROVIDERS
	c SOURCE_PROVIDERS
	d ERROR_MERGE_UNCHANGED
	e ERROR_GET_NOT_NUMBER
	f ERROR_GET_NON_EXISTENT
	g ERROR_MULTIPLE_TAGS
	h ERROR_EXPECTED_LIST
	i ERROR_EXPECTED_OBJECT
	j ERROR_INVALID_INDEX
	a (ILnet/minecraft/server/NBTTagCompound;Lde$h;Ljava/util/List;)I insertAtIndex
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;Lvx$c;Lvx$a;Ljava/util/List;)I manipulateData
	a (Lde$h;Lnet/minecraft/server/CommandDataAccessor;)Lnet/minecraft/server/NBTBase; getSingleTag
	a (Ljava/util/function/BiConsumer;)Lcom/mojang/brigadier/builder/ArgumentBuilder; decorateModification
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/CommandDataAccessor;)I getData
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/CommandDataAccessor;Lde$h;)I removeData
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/CommandDataAccessor;Lde$h;D)I getNumeric
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/CommandDataAccessor;Lnet/minecraft/server/NBTTagCompound;)I mergeData
	b (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/CommandDataAccessor;Lde$h;)I getData
net/minecraft/server/CommandDataAccessor net/minecraft/server/commands/data/DataAccessor
	a ()Lnet/minecraft/server/NBTTagCompound; getData
	a (Lde$h;DI)Lnet/minecraft/server/IChatBaseComponent; getPrintSuccess
	a (Lnet/minecraft/server/NBTBase;)Lnet/minecraft/server/IChatBaseComponent; getPrintSuccess
	a (Lnet/minecraft/server/NBTTagCompound;)V setData
	b ()Lnet/minecraft/server/IChatBaseComponent; getModifiedSuccess
net/minecraft/server/CommandDataAccessorEntity net/minecraft/server/commands/data/EntityDataAccessor
	a PROVIDER
	b ERROR_NO_PLAYERS
	c entity
	a ()Lnet/minecraft/server/NBTTagCompound; getData
	a (Lde$h;DI)Lnet/minecraft/server/IChatBaseComponent; getPrintSuccess
	a (Lnet/minecraft/server/NBTBase;)Lnet/minecraft/server/IChatBaseComponent; getPrintSuccess
	a (Lnet/minecraft/server/NBTTagCompound;)V setData
	b ()Lnet/minecraft/server/IChatBaseComponent; getModifiedSuccess
net/minecraft/server/CommandDataAccessorTile net/minecraft/server/commands/data/BlockDataAccessor
	a PROVIDER
	b ERROR_NOT_A_BLOCK_ENTITY
	c entity
	d pos
	a ()Lnet/minecraft/server/NBTTagCompound; getData
	a (Lde$h;DI)Lnet/minecraft/server/IChatBaseComponent; getPrintSuccess
	a (Lnet/minecraft/server/NBTBase;)Lnet/minecraft/server/IChatBaseComponent; getPrintSuccess
	a (Lnet/minecraft/server/NBTTagCompound;)V setData
	b ()Lnet/minecraft/server/IChatBaseComponent; getModifiedSuccess
net/minecraft/server/CommandDataStorage net/minecraft/server/commands/data/StorageDataAccessor
	a PROVIDER
	b SUGGEST_STORAGE
	c storage
	d id
	a ()Lnet/minecraft/server/NBTTagCompound; getData
	a (Lde$h;DI)Lnet/minecraft/server/IChatBaseComponent; getPrintSuccess
	a (Lnet/minecraft/server/NBTBase;)Lnet/minecraft/server/IChatBaseComponent; getPrintSuccess
	a (Lnet/minecraft/server/NBTTagCompound;)V setData
	b ()Lnet/minecraft/server/IChatBaseComponent; getModifiedSuccess
	b (Lcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/server/PersistentCommandStorage; getGlobalTags
net/minecraft/server/CommandDatapack net/minecraft/server/commands/DataPackCommand
	a ERROR_UNKNOWN_PACK
	b ERROR_PACK_ALREADY_ENABLED
	c ERROR_PACK_ALREADY_DISABLED
	d SELECTED_PACKS
	e AVAILABLE_PACKS
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Z)Lnet/minecraft/server/ResourcePackLoader; getPack
	a (Lnet/minecraft/server/CommandListenerWrapper;)I listPacks
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ResourcePackLoader;)I disablePack
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ResourcePackLoader;Ltm$a;)I enablePack
	b (Lnet/minecraft/server/CommandListenerWrapper;)I listAvailablePacks
	c (Lnet/minecraft/server/CommandListenerWrapper;)I listEnabledPacks
net/minecraft/server/CommandDebug net/minecraft/server/commands/DebugCommand
	a LOGGER
	b ERROR_NOT_RUNNING
	c ERROR_ALREADY_RUNNING
	d ZIP_FS_PROVIDER
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/server/CommandListenerWrapper;)I start
	b (Lnet/minecraft/server/CommandListenerWrapper;)I stop
	c (Lnet/minecraft/server/CommandListenerWrapper;)I report
net/minecraft/server/CommandDeop net/minecraft/server/commands/DeOpCommands
	a ERROR_NOT_OP
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;)I deopPlayers
net/minecraft/server/CommandDifficulty net/minecraft/server/commands/DifficultyCommand
	a ERROR_ALREADY_DIFFICULT
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/EnumDifficulty;)I setDifficulty
net/minecraft/server/CommandDispatcher net/minecraft/commands/Commands
	a LOGGER
	b dispatcher
	a ()Lcom/mojang/brigadier/CommandDispatcher; getDispatcher
	a (Lcom/mojang/brigadier/ParseResults;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; getParseException
	a (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/tree/CommandNode;Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Map;)V fillUsableCommands
	a (Lcr$a;)Ljava/util/function/Predicate; createValidator
	a (Ljava/io/File;)V serializeTreeToFile
	a (Ljava/lang/String;)Lcom/mojang/brigadier/builder/LiteralArgumentBuilder; literal
	a (Ljava/lang/String;Lcom/mojang/brigadier/arguments/ArgumentType;)Lcom/mojang/brigadier/builder/RequiredArgumentBuilder; argument
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/lang/String;)I performCommand
	a (Lnet/minecraft/server/EntityPlayer;)V sendCommands
net/minecraft/server/CommandEffect net/minecraft/server/commands/EffectCommands
	a ERROR_GIVE_FAILED
	b ERROR_CLEAR_EVERYTHING_FAILED
	c ERROR_CLEAR_SPECIFIC_FAILED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;)I clearEffects
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/MobEffectList;)I clearEffect
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/MobEffectList;Ljava/lang/Integer;IZ)I giveEffect
net/minecraft/server/CommandEnchant net/minecraft/server/commands/EnchantCommand
	a ERROR_NOT_LIVING_ENTITY
	b ERROR_NO_ITEM
	c ERROR_INCOMPATIBLE
	d ERROR_LEVEL_TOO_HIGH
	e ERROR_NOTHING_HAPPENED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/Enchantment;I)I enchant
net/minecraft/server/CommandException net/minecraft/commands/CommandRuntimeException
	a message
	a ()Lnet/minecraft/server/IChatBaseComponent; getComponent
net/minecraft/server/CommandExceptionProvider net/minecraft/commands/BrigadierExceptions
	A DISPATCHER_PARSE_EXCEPTION
	a DOUBLE_TOO_SMALL
	b DOUBLE_TOO_BIG
	c FLOAT_TOO_SMALL
	d FLOAT_TOO_BIG
	e INTEGER_TOO_SMALL
	f INTEGER_TOO_BIG
	g LONG_TOO_SMALL
	h LONG_TOO_BIG
	i LITERAL_INCORRECT
	j READER_EXPECTED_START_OF_QUOTE
	k READER_EXPECTED_END_OF_QUOTE
	l READER_INVALID_ESCAPE
	m READER_INVALID_BOOL
	n READER_INVALID_INT
	o READER_EXPECTED_INT
	p READER_INVALID_LONG
	q READER_EXPECTED_LONG
	r READER_INVALID_DOUBLE
	s READER_EXPECTED_DOUBLE
	t READER_INVALID_FLOAT
	u READER_EXPECTED_FLOAT
	v READER_EXPECTED_BOOL
	w READER_EXPECTED_SYMBOL
	x DISPATCHER_UNKNOWN_COMMAND
	y DISPATCHER_UNKNOWN_ARGUMENT
	z DISPATCHER_EXPECTED_ARGUMENT_SEPARATOR
net/minecraft/server/CommandExecute net/minecraft/server/commands/ExecuteCommand
	a ERROR_AREA_TOO_LARGE
	b ERROR_CONDITIONAL_FAILED
	c ERROR_CONDITIONAL_FAILED_COUNT
	d CALLBACK_CHAINER
	e SUGGEST_PREDICATE
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/function/BiPredicate;)Z checkScore
	a (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/CriterionConditionValue$IntegerRange;)Z checkScore
	a (Lcom/mojang/brigadier/context/CommandContext;Z)I checkIfRegions
	a (Lcom/mojang/brigadier/context/CommandContext;ZZ)Ljava/util/Collection; expect
	a (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/ArgumentBuilder;ZLtv$b;)Lcom/mojang/brigadier/builder/ArgumentBuilder; addConditional
	a (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/ArgumentBuilder;ZZ)Lcom/mojang/brigadier/builder/ArgumentBuilder; addIfBlocksConditional
	a (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;Z)Lcom/mojang/brigadier/builder/ArgumentBuilder; addConditionals
	a (Lcom/mojang/brigadier/tree/LiteralCommandNode;Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;Z)Lcom/mojang/brigadier/builder/ArgumentBuilder; wrapStores
	a (Lnet/minecraft/server/CommandDataAccessor;Lde$h;)I checkMatchingData
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/ScoreboardObjective;Z)Lnet/minecraft/server/CommandListenerWrapper; storeValue
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BossBattleCustom;ZZ)Lnet/minecraft/server/CommandListenerWrapper; storeValue
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/CommandDataAccessor;Lde$h;Ljava/util/function/IntFunction;Z)Lnet/minecraft/server/CommandListenerWrapper; storeData
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/LootItemCondition;)Z checkCustomPredicate
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;Z)Ljava/util/OptionalInt; checkRegions
	a (ZLtv$a;)Lcom/mojang/brigadier/Command; createNumericConditionalHandler
	b (Lcom/mojang/brigadier/context/CommandContext;Z)I checkUnlessRegions
	c (Lcom/mojang/brigadier/context/CommandContext;Z)Ljava/util/OptionalInt; checkRegions
net/minecraft/server/CommandFill net/minecraft/server/commands/FillCommand
	a ERROR_AREA_TOO_LARGE
	b HOLLOW_CORE
	c ERROR_FAILED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ArgumentTileLocation;Lnet/minecraft/server/CommandFill$Mode;Ljava/util/function/Predicate;)I fillBlocks
net/minecraft/server/CommandFill$Mode net/minecraft/server/commands/FillCommand$Mode
	e filter
	f $VALUES
net/minecraft/server/CommandForceload net/minecraft/server/commands/ForceLoadCommand
	a ERROR_TOO_MANY_CHUNKS
	b ERROR_NOT_TICKING
	c ERROR_ALL_ADDED
	d ERROR_NONE_REMOVED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/server/CommandListenerWrapper;)I listForceLoad
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BlockPosition2D;)I queryForceLoad
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BlockPosition2D;Lnet/minecraft/server/BlockPosition2D;Z)I changeForceLoad
	b (Lnet/minecraft/server/CommandListenerWrapper;)I removeAll
net/minecraft/server/CommandFunction net/minecraft/server/commands/FunctionCommand
	a SUGGEST_FUNCTION
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;)I runFunction
net/minecraft/server/CommandGamemode net/minecraft/server/commands/GameModeCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/Collection;Lnet/minecraft/server/EnumGamemode;)I setMode
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/EnumGamemode;)V logGamemodeChange
net/minecraft/server/CommandGamemodeDefault net/minecraft/server/commands/DefaultGameModeCommands
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/EnumGamemode;)I setMode
net/minecraft/server/CommandGamerule net/minecraft/server/commands/GameRuleCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	b (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/GameRules$GameRuleKey;)I setRule
	b (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/GameRules$GameRuleKey;)I queryRule
net/minecraft/server/CommandGive net/minecraft/server/commands/GiveCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ArgumentPredicateItemStack;Ljava/util/Collection;I)I giveItem
net/minecraft/server/CommandHelp net/minecraft/server/commands/HelpCommand
	a ERROR_FAILED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
net/minecraft/server/CommandIdleTimeout net/minecraft/server/commands/SetPlayerIdleTimeoutCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/server/CommandListenerWrapper;I)I setIdleTimeout
net/minecraft/server/CommandKick net/minecraft/server/commands/KickCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/IChatBaseComponent;)I kickPlayers
net/minecraft/server/CommandKill net/minecraft/server/commands/KillCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;)I kill
net/minecraft/server/CommandList net/minecraft/server/commands/ListPlayersCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/server/CommandListenerWrapper;)I listPlayers
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/function/Function;)I format
	b (Lnet/minecraft/server/CommandListenerWrapper;)I listPlayersWithUuids
net/minecraft/server/CommandListenerWrapper net/minecraft/commands/CommandSourceStack
	a ERROR_NOT_PLAYER
	b ERROR_NOT_ENTITY
	base source
	d worldPosition
	e level
	f permissionLevel
	g textName
	h displayName
	i server
	j silent
	k entity
	l consumer
	m anchor
	n rotation
	a ()Lnet/minecraft/server/CommandListenerWrapper; withSuppressedOutput
	a (I)Lnet/minecraft/server/CommandListenerWrapper; withPermission
	a (Lcom/mojang/brigadier/ResultConsumer;)Lnet/minecraft/server/CommandListenerWrapper; withCallback
	a (Lcom/mojang/brigadier/ResultConsumer;Ljava/util/function/BinaryOperator;)Lnet/minecraft/server/CommandListenerWrapper; withCallback
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; customSuggestion
	a (Lcom/mojang/brigadier/context/CommandContext;ZI)V onCommandComplete
	a (Lnet/minecraft/server/ArgumentAnchor$Anchor;)Lnet/minecraft/server/CommandListenerWrapper; withAnchor
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/CommandListenerWrapper; withEntity
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/ArgumentAnchor$Anchor;)Lnet/minecraft/server/CommandListenerWrapper; facing
	a (Lnet/minecraft/server/Vec2F;)Lnet/minecraft/server/CommandListenerWrapper; withRotation
	a (Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/CommandListenerWrapper; withPosition
	a (Lnet/minecraft/server/WorldServer;)Lnet/minecraft/server/CommandListenerWrapper; withLevel
	b (I)Lnet/minecraft/server/CommandListenerWrapper; withMaximumPermission
	b (Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/CommandListenerWrapper; facing
	c (I)Z hasPermission
	g ()Lnet/minecraft/server/Entity; getEntityOrException
	getName ()Ljava/lang/String; getTextName
	getScoreboardDisplayName ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
	getWorld ()Lnet/minecraft/server/WorldServer; getLevel
	h ()Lnet/minecraft/server/EntityPlayer; getPlayerOrException
	i ()Lnet/minecraft/server/Vec2F; getRotation
	k ()Lnet/minecraft/server/ArgumentAnchor$Anchor; getAnchor
	l ()Ljava/util/Collection; getOnlinePlayerNames
	m ()Ljava/util/Collection; getAllTeams
	n ()Ljava/util/Collection; getAvailableSoundEvents
	o ()Ljava/util/stream/Stream; getRecipeNames
	sendAdminMessage (Lnet/minecraft/server/IChatBaseComponent;)V broadcastToAdmins
	sendFailureMessage (Lnet/minecraft/server/IChatBaseComponent;)V sendFailure
	sendMessage (Lnet/minecraft/server/IChatBaseComponent;Z)V sendSuccess
net/minecraft/server/CommandLocate net/minecraft/server/commands/LocateCommand
	a ERROR_FAILED
	a (IIII)F dist
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/lang/String;)I locate
net/minecraft/server/CommandLoot net/minecraft/server/commands/LootCommand
	a SUGGEST_LOOT_TABLE
	b ERROR_NO_HELD_ITEMS
	c ERROR_NO_LOOT_TABLE
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lcom/mojang/brigadier/builder/ArgumentBuilder;Lui$c;)Lcom/mojang/brigadier/builder/ArgumentBuilder; addTargets
	a (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ItemStack;Lui$b;)I dropBlockLoot
	a (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/Entity;Lui$b;)I dropKillLoot
	a (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ItemStack;Lui$b;)I dropFishingLoot
	a (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/LootTableInfo;Lui$b;)I drop
	a (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/MinecraftKey;Lui$b;)I dropChestLoot
	a (Ljava/util/Collection;IILjava/util/List;Lui$a;)I entityReplace
	a (Ljava/util/Collection;Ljava/util/List;Lui$a;)I playerGive
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/List;)V callback
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/List;Lnet/minecraft/server/MinecraftKey;)V callback
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IInventory; getContainer
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BlockPosition;IILjava/util/List;Lui$a;)I blockReplace
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BlockPosition;Ljava/util/List;Lui$a;)I blockDistribute
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/EnumItemSlot;)Lnet/minecraft/server/ItemStack; getSourceHandItem
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/Vec3D;Ljava/util/List;Lui$a;)I dropInWorld
	a (Lnet/minecraft/server/Entity;Ljava/util/List;IILjava/util/List;)V setSlots
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/ItemStack;)Z distributeToContainer
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z canMergeItems
net/minecraft/server/CommandMe net/minecraft/server/commands/EmoteCommands
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
net/minecraft/server/CommandOp net/minecraft/server/commands/OpCommand
	a ERROR_ALREADY_OP
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;)I opPlayers
net/minecraft/server/CommandPardon net/minecraft/server/commands/PardonCommand
	a ERROR_NOT_BANNED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;)I pardonPlayers
net/minecraft/server/CommandPardonIP net/minecraft/server/commands/PardonIpCommand
	a ERROR_INVALID
	b ERROR_NOT_BANNED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/lang/String;)I unban
net/minecraft/server/CommandParticle net/minecraft/server/commands/ParticleCommand
	a ERROR_FAILED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ParticleParam;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Vec3D;FIZLjava/util/Collection;)I sendParticles
net/minecraft/server/CommandPlaySound net/minecraft/server/commands/PlaySoundCommand
	a ERROR_TOO_FAR
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/SoundCategory;Lnet/minecraft/server/Vec3D;FFF)I playSound
	a (Lnet/minecraft/server/SoundCategory;)Lcom/mojang/brigadier/builder/LiteralArgumentBuilder; source
net/minecraft/server/CommandPublish net/minecraft/server/commands/PublishCommand
	a ERROR_FAILED
	b ERROR_ALREADY_PUBLISHED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/server/CommandListenerWrapper;I)I publish
net/minecraft/server/CommandRecipe net/minecraft/server/commands/RecipeCommand
	a ERROR_GIVE_FAILED
	b ERROR_TAKE_FAILED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Ljava/util/Collection;)I giveRecipes
	b (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Ljava/util/Collection;)I takeRecipes
net/minecraft/server/CommandReload net/minecraft/server/commands/ReloadCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
net/minecraft/server/CommandReplaceItem net/minecraft/server/commands/ReplaceItemCommand
	a ERROR_NOT_A_CONTAINER
	b ERROR_INAPPLICABLE_SLOT
	c ERROR_ENTITY_SLOT
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;ILnet/minecraft/server/ItemStack;)I setEntityItem
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/ItemStack;)I setBlockItem
net/minecraft/server/CommandSaveAll net/minecraft/server/commands/SaveAllCommand
	a ERROR_FAILED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/server/CommandListenerWrapper;Z)I saveAll
net/minecraft/server/CommandSaveOff net/minecraft/server/commands/SaveOffCommand
	a ERROR_ALREADY_OFF
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
net/minecraft/server/CommandSaveOn net/minecraft/server/commands/SaveOnCommand
	a ERROR_ALREADY_ON
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
net/minecraft/server/CommandSay net/minecraft/server/commands/SayCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
net/minecraft/server/CommandSchedule net/minecraft/server/commands/ScheduleCommand
	a ERROR_SAME_TICK
	b ERROR_CANT_REMOVE
	c SUGGEST_SCHEDULE
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/server/CommandListenerWrapper;Lcom/mojang/datafixers/util/Either;IZ)I schedule
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/lang/String;)I remove
net/minecraft/server/CommandScoreboard net/minecraft/server/commands/ScoreboardCommand
	a ERROR_OBJECTIVE_ALREADY_EXISTS
	b ERROR_DISPLAY_SLOT_ALREADY_EMPTY
	c ERROR_DISPLAY_SLOT_ALREADY_SET
	d ERROR_TRIGGER_ALREADY_ENABLED
	e ERROR_NOT_TRIGGER
	f ERROR_NO_VALUE
	a ()Lcom/mojang/brigadier/builder/LiteralArgumentBuilder; createRenderTypeModify
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/server/CommandListenerWrapper;)I listTrackedPlayers
	a (Lnet/minecraft/server/CommandListenerWrapper;I)I clearDisplaySlot
	a (Lnet/minecraft/server/CommandListenerWrapper;ILnet/minecraft/server/ScoreboardObjective;)I setDisplaySlot
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/lang/String;)I listTrackedPlayerScores
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/lang/String;Lnet/minecraft/server/IScoreboardCriteria;Lnet/minecraft/server/IChatBaseComponent;)I addObjective
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/lang/String;Lnet/minecraft/server/ScoreboardObjective;)I getScore
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;)I resetScores
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestTriggers
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/ScoreboardObjective;)I enableTrigger
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/ScoreboardObjective;I)I setScore
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/ScoreboardObjective;Ldi$a;Ljava/util/Collection;Lnet/minecraft/server/ScoreboardObjective;)I performOperation
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ScoreboardObjective;)I removeObjective
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ScoreboardObjective;Lnet/minecraft/server/IChatBaseComponent;)I setDisplayName
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ScoreboardObjective;Lnet/minecraft/server/IScoreboardCriteria$EnumScoreboardHealthDisplay;)I setRenderType
	b (Lnet/minecraft/server/CommandListenerWrapper;)I listObjectives
	b (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/ScoreboardObjective;)I resetScore
	b (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/ScoreboardObjective;I)I addScore
	c (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/ScoreboardObjective;I)I removeScore
net/minecraft/server/CommandSeed net/minecraft/server/commands/SeedCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
net/minecraft/server/CommandSetBlock net/minecraft/server/commands/SetBlockCommand
	a ERROR_FAILED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ArgumentTileLocation;Lnet/minecraft/server/CommandSetBlock$Mode;Ljava/util/function/Predicate;)I setBlock
net/minecraft/server/CommandSetBlock$Filter net/minecraft/server/commands/SetBlockCommand$Filter
net/minecraft/server/CommandSetBlock$Mode net/minecraft/server/commands/SetBlockCommand$Mode
	c $VALUES
net/minecraft/server/CommandSetWorldSpawn net/minecraft/server/commands/SetWorldSpawnCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BlockPosition;)I setSpawn
net/minecraft/server/CommandSpawnpoint net/minecraft/server/commands/SetSpawnCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/BlockPosition;)I setSpawn
net/minecraft/server/CommandSpectate net/minecraft/server/commands/SpectateCommand
	a ERROR_SELF
	b ERROR_NOT_SPECTATOR
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/Entity;Lnet/minecraft/server/EntityPlayer;)I spectate
net/minecraft/server/CommandSpreadPlayers net/minecraft/server/commands/SpreadPlayersCommand
	a ERROR_FAILED_TO_SPREAD_TEAMS
	b ERROR_FAILED_TO_SPREAD_ENTITIES
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ljava/util/Collection;)I getNumberOfTeams
	a (Ljava/util/Collection;Lnet/minecraft/server/WorldServer;[Lvg$a;Z)D setPlayerPositions
	a (Ljava/util/Random;IDDDD)[Lvg$a; createInitialPositions
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/Vec2F;FFZLjava/util/Collection;)I spreadPlayers
	a (Lnet/minecraft/server/Vec2F;DLnet/minecraft/server/WorldServer;Ljava/util/Random;DDDD[Lvg$a;Z)V spreadPositions
net/minecraft/server/CommandStop net/minecraft/server/commands/StopCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
net/minecraft/server/CommandStopSound net/minecraft/server/commands/StopSoundCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/SoundCategory;Lnet/minecraft/server/MinecraftKey;)I stopSound
net/minecraft/server/CommandSummon net/minecraft/server/commands/SummonCommand
	a ERROR_FAILED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/NBTTagCompound;Z)I spawnEntity
net/minecraft/server/CommandTag net/minecraft/server/commands/TagCommand
	a ERROR_ADD_FAILED
	b ERROR_REMOVE_FAILED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Ljava/util/Collection;)Ljava/util/Collection; getTags
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;)I listTags
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Ljava/lang/String;)I addTag
	b (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Ljava/lang/String;)I removeTag
net/minecraft/server/CommandTeam net/minecraft/server/commands/TeamCommand
	a ERROR_TEAM_ALREADY_EXISTS
	b ERROR_TEAM_NAME_TOO_LONG
	c ERROR_TEAM_ALREADY_EMPTY
	d ERROR_TEAM_ALREADY_NAME
	e ERROR_TEAM_ALREADY_COLOR
	f ERROR_TEAM_ALREADY_FRIENDLYFIRE_ENABLED
	g ERROR_TEAM_ALREADY_FRIENDLYFIRE_DISABLED
	h ERROR_TEAM_ALREADY_FRIENDLYINVISIBLES_ENABLED
	i ERROR_TEAM_ALREADY_FRIENDLYINVISIBLES_DISABLED
	j ERROR_TEAM_NAMETAG_VISIBLITY_UNCHANGED
	k ERROR_TEAM_DEATH_MESSAGE_VISIBLITY_UNCHANGED
	l ERROR_TEAM_COLLISION_UNCHANGED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/server/CommandListenerWrapper;)I listTeams
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/lang/String;)I createTeam
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/lang/String;Lnet/minecraft/server/IChatBaseComponent;)I createTeam
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;)I leaveTeam
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ScoreboardTeam;)I emptyTeam
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ScoreboardTeam;Ljava/util/Collection;)I joinTeam
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ScoreboardTeam;Lnet/minecraft/server/EnumChatFormat;)I setColor
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ScoreboardTeam;Lnet/minecraft/server/IChatBaseComponent;)I setDisplayName
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ScoreboardTeam;Lnet/minecraft/server/ScoreboardTeamBase$EnumNameTagVisibility;)I setNametagVisibility
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ScoreboardTeam;Lnet/minecraft/server/ScoreboardTeamBase$EnumTeamPush;)I setCollision
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ScoreboardTeam;Z)I setFriendlySight
	b (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ScoreboardTeam;)I deleteTeam
	b (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ScoreboardTeam;Lnet/minecraft/server/IChatBaseComponent;)I setPrefix
	b (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ScoreboardTeam;Lnet/minecraft/server/ScoreboardTeamBase$EnumNameTagVisibility;)I setDeathMessageVisibility
	b (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ScoreboardTeam;Z)I setFriendlyFire
	c (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ScoreboardTeam;)I listMembers
	c (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ScoreboardTeam;Lnet/minecraft/server/IChatBaseComponent;)I setSuffix
net/minecraft/server/CommandTeamMsg net/minecraft/server/commands/TeamMsgCommand
	a ERROR_NOT_ON_TEAM
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/IChatBaseComponent;)I sendMessage
net/minecraft/server/CommandTeleport net/minecraft/server/commands/TeleportCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/Entity;)I teleportToEntity
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/IVectorPosition;Lnet/minecraft/server/IVectorPosition;Lvn$a;)I teleportToPos
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/Entity;Lnet/minecraft/server/WorldServer;DDDLjava/util/Set;FFLvn$a;)V performTeleport
net/minecraft/server/CommandTell net/minecraft/server/commands/MsgCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/IChatBaseComponent;)I sendMessage
net/minecraft/server/CommandTellRaw net/minecraft/server/commands/TellRawCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
net/minecraft/server/CommandTime net/minecraft/server/commands/TimeCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/server/CommandListenerWrapper;I)I setTime
	a (Lnet/minecraft/server/WorldServer;)I getDayTime
	b (Lnet/minecraft/server/CommandListenerWrapper;I)I addTime
	c (Lnet/minecraft/server/CommandListenerWrapper;I)I queryTime
net/minecraft/server/CommandTitle net/minecraft/server/commands/TitleCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;)I clearTitle
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;III)I setTimes
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;Lnet/minecraft/server/IChatBaseComponent;Lnet/minecraft/server/PacketPlayOutTitle$EnumTitleAction;)I showTitle
	b (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;)I resetTitle
net/minecraft/server/CommandTrigger net/minecraft/server/commands/TriggerCommand
	a ERROR_NOT_PRIMED
	b ERROR_INVALID_OBJECTIVE
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/server/CommandListenerWrapper;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestObjectives
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ScoreboardScore;)I simpleTrigger
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ScoreboardScore;I)I addValue
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/ScoreboardObjective;)Lnet/minecraft/server/ScoreboardScore; getScore
	b (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/ScoreboardScore;I)I setValue
net/minecraft/server/CommandWeather net/minecraft/server/commands/WeatherCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/server/CommandListenerWrapper;I)I setClear
	b (Lnet/minecraft/server/CommandListenerWrapper;I)I setRain
	c (Lnet/minecraft/server/CommandListenerWrapper;I)I setThunder
net/minecraft/server/CommandWhitelist net/minecraft/server/commands/WhitelistCommand
	a ERROR_ALREADY_ENABLED
	b ERROR_ALREADY_DISABLED
	c ERROR_ALREADY_WHITELISTED
	d ERROR_NOT_WHITELISTED
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/server/CommandListenerWrapper;)I reload
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;)I addPlayers
	b (Lnet/minecraft/server/CommandListenerWrapper;)I enableWhitelist
	b (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;)I removePlayers
	c (Lnet/minecraft/server/CommandListenerWrapper;)I disableWhitelist
	d (Lnet/minecraft/server/CommandListenerWrapper;)I showList
net/minecraft/server/CommandWorldBorder net/minecraft/server/commands/WorldBorderCommand
	a ERROR_SAME_CENTER
	b ERROR_SAME_SIZE
	c ERROR_TOO_SMALL
	d ERROR_TOO_BIG
	e ERROR_SAME_WARNING_TIME
	f ERROR_SAME_WARNING_DISTANCE
	g ERROR_SAME_DAMAGE_BUFFER
	h ERROR_SAME_DAMAGE_AMOUNT
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/server/CommandListenerWrapper;)I getSize
	a (Lnet/minecraft/server/CommandListenerWrapper;DJ)I setSize
	a (Lnet/minecraft/server/CommandListenerWrapper;F)I setDamageBuffer
	a (Lnet/minecraft/server/CommandListenerWrapper;I)I setWarningTime
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/Vec2F;)I setCenter
	b (Lnet/minecraft/server/CommandListenerWrapper;F)I setDamageAmount
	b (Lnet/minecraft/server/CommandListenerWrapper;I)I setWarningDistance
net/minecraft/server/CommandXp net/minecraft/server/commands/ExperienceCommand
	a ERROR_SET_POINTS_INVALID
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;ILnet/minecraft/server/CommandXp$Unit;)I addExperience
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/CommandXp$Unit;)I queryExperience
	b (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;ILnet/minecraft/server/CommandXp$Unit;)I setExperience
net/minecraft/server/CommandXp$Unit net/minecraft/server/commands/ExperienceCommand$Type
	c add
	d set
	e name
	f query
	g $VALUES
net/minecraft/server/CompletionProviders net/minecraft/commands/synchronization/SuggestionProviders
	a ASK_SERVER
	b ALL_RECIPES
	c AVAILABLE_SOUNDS
	d SUMMONABLE_ENTITIES
	e PROVIDERS_BY_NAME
	f DEFAULT_NAME
	a (Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lnet/minecraft/server/MinecraftKey; getName
	a (Lnet/minecraft/server/MinecraftKey;)Lcom/mojang/brigadier/suggestion/SuggestionProvider; getProvider
	a (Lnet/minecraft/server/MinecraftKey;Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lcom/mojang/brigadier/suggestion/SuggestionProvider; register
	b (Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lcom/mojang/brigadier/suggestion/SuggestionProvider; safelySwap
net/minecraft/server/Container net/minecraft/world/inventory/AbstractContainerMenu
	d dataSlots
	dragType quickcraftType
	e menuType
	f changeUid
	h quickcraftStatus
	i quickcraftSlots
	items lastSlots
	k unSynchedPlayers
	listeners containerListeners
	windowId containerId
	a (II)V setData
	a (IILnet/minecraft/server/InventoryClickType;Lnet/minecraft/server/EntityHuman;)Lnet/minecraft/server/ItemStack; clicked
	a (ILnet/minecraft/server/EntityHuman;)Z isValidQuickcraftType
	a (Ljava/util/List;)V setAll
	a (Ljava/util/Set;ILnet/minecraft/server/ItemStack;I)V getQuickCraftSlotCount
	a (Lnet/minecraft/server/ContainerAccess;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/Block;)Z stillValid
	a (Lnet/minecraft/server/ContainerProperty;)Lnet/minecraft/server/ContainerProperty; addDataSlot
	a (Lnet/minecraft/server/EntityHuman;I)Z clickMenuButton
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/World;Lnet/minecraft/server/IInventory;)V clearContainer
	a (Lnet/minecraft/server/EntityHuman;Z)V setSynched
	a (Lnet/minecraft/server/IContainerProperties;)V addDataSlots
	a (Lnet/minecraft/server/IContainerProperties;I)V checkContainerDataCount
	a (Lnet/minecraft/server/IInventory;)V slotsChanged
	a (Lnet/minecraft/server/IInventory;I)V checkContainerSize
	a (Lnet/minecraft/server/ItemStack;IIZ)Z moveItemStackTo
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z consideredTheSameItem
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/Slot;)Z canTakeItemForPickAll
	a (Lnet/minecraft/server/PlayerInventory;)S backup
	a (Lnet/minecraft/server/Slot;)Lnet/minecraft/server/Slot; addSlot
	a (Lnet/minecraft/server/Slot;Lnet/minecraft/server/ItemStack;Z)Z canItemQuickReplace
	a (Lnet/minecraft/server/TileEntity;)I getRedstoneSignalFromBlockEntity
	b ()Lnet/minecraft/server/NonNullList; getItems
	b (I)I getQuickcraftType
	b (II)I getQuickcraftMask
	b (ILnet/minecraft/server/ItemStack;)V addItem
	b (Lnet/minecraft/server/EntityHuman;)V removed
	b (Lnet/minecraft/server/ICrafting;)V removeSlotListener
	b (Lnet/minecraft/server/IInventory;)I getRedstoneSignalFromContainer
	b (Lnet/minecraft/server/Slot;)Z canDragTo
	c ()V broadcastChanges
	c (I)I getQuickcraftHeader
	c (Lnet/minecraft/server/EntityHuman;)Z isSynched
	canUse (Lnet/minecraft/server/EntityHuman;)Z stillValid
	d ()V resetQuickCraft
	getSlot (Lnet/minecraft/server/IInventory;I)Lnet/minecraft/server/Slot; getSlotFor
	shiftClick (Lnet/minecraft/server/EntityHuman;I)Lnet/minecraft/server/ItemStack; quickMoveStack
net/minecraft/server/ContainerAccess net/minecraft/world/inventory/ContainerLevelAccess
	a NULL
	a (Ljava/util/function/BiConsumer;)V execute
	a (Ljava/util/function/BiFunction;)Ljava/util/Optional; evaluate
	a (Ljava/util/function/BiFunction;Ljava/lang/Object;)Ljava/lang/Object; evaluate
	at (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/ContainerAccess; create
net/minecraft/server/ContainerAnvil net/minecraft/world/inventory/AnvilMenu
	c LOGGER
	containerAccess access
	h repairItemCountCost
	levelCost cost
	renameText itemName
	repairInventory repairSlots
	resultInventory resultSlots
	a (Ljava/lang/String;)V setItemName
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/IInventory;)V slotsChanged
	b (Lnet/minecraft/server/EntityHuman;)V removed
	b (Lnet/minecraft/server/EntityHuman;I)Lnet/minecraft/server/ItemStack; quickMoveStack
	d (I)I calculateIncreasedRepairCost
	e ()V createResult
	f ()I getCost
net/minecraft/server/ContainerBeacon net/minecraft/world/inventory/BeaconMenu
	containerAccess access
	containerProperties beaconData
	d paymentSlot
	a (II)V setData
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	b (Lnet/minecraft/server/EntityHuman;)V removed
	b (Lnet/minecraft/server/EntityHuman;I)Lnet/minecraft/server/ItemStack; quickMoveStack
	c (II)V updateEffects
	e ()I getLevels
	f ()Lnet/minecraft/server/MobEffectList; getPrimaryEffect
	g ()Lnet/minecraft/server/MobEffectList; getSecondaryEffect
	h ()Z hasPayment
net/minecraft/server/ContainerBeacon$SlotBeacon net/minecraft/world/inventory/BeaconMenu$PaymentSlot
	a ()I getMaxStackSize
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
net/minecraft/server/ContainerBlastFurnace net/minecraft/world/inventory/BlastFurnaceMenu
net/minecraft/server/ContainerBrewingStand net/minecraft/world/inventory/BrewingStandMenu
	d brewingStandData
	e ingredientSlot
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	b (Lnet/minecraft/server/EntityHuman;I)Lnet/minecraft/server/ItemStack; quickMoveStack
	e ()I getFuel
	f ()I getBrewingTicks
net/minecraft/server/ContainerBrewingStand$SlotBrewing net/minecraft/world/inventory/BrewingStandMenu$IngredientsSlot
	a ()I getMaxStackSize
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
net/minecraft/server/ContainerBrewingStand$SlotPotionBottle net/minecraft/world/inventory/BrewingStandMenu$PotionSlot
	a ()I getMaxStackSize
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; onTake
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
	b_ (Lnet/minecraft/server/ItemStack;)Z mayPlaceItem
net/minecraft/server/ContainerCartography net/minecraft/world/inventory/CartographyTableMenu
	containerAccess access
	e quickMoved
	f lastSoundTime
	inventory container
	resultInventory resultContainer
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/IInventory;)V slotsChanged
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)V setupResultSlot
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/Slot;)Z canTakeItemForPickAll
	b (Lnet/minecraft/server/EntityHuman;)V removed
	b (Lnet/minecraft/server/EntityHuman;I)Lnet/minecraft/server/ItemStack; quickMoveStack
net/minecraft/server/ContainerChest net/minecraft/world/inventory/ChestMenu
	d containerRows
	a (ILnet/minecraft/server/PlayerInventory;)Lnet/minecraft/server/ContainerChest; oneRow
	a (ILnet/minecraft/server/PlayerInventory;Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/ContainerChest; threeRows
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	b (ILnet/minecraft/server/PlayerInventory;)Lnet/minecraft/server/ContainerChest; twoRows
	b (ILnet/minecraft/server/PlayerInventory;Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/ContainerChest; sixRows
	b (Lnet/minecraft/server/EntityHuman;)V removed
	b (Lnet/minecraft/server/EntityHuman;I)Lnet/minecraft/server/ItemStack; quickMoveStack
	c (ILnet/minecraft/server/PlayerInventory;)Lnet/minecraft/server/ContainerChest; threeRows
	d (ILnet/minecraft/server/PlayerInventory;)Lnet/minecraft/server/ContainerChest; fourRows
	e ()Lnet/minecraft/server/IInventory; getContainer
	e (ILnet/minecraft/server/PlayerInventory;)Lnet/minecraft/server/ContainerChest; fiveRows
	f ()I getRowCount
	f (ILnet/minecraft/server/PlayerInventory;)Lnet/minecraft/server/ContainerChest; sixRows
net/minecraft/server/ContainerDispenser net/minecraft/world/inventory/DispenserMenu
	items dispenser
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	b (Lnet/minecraft/server/EntityHuman;)V removed
	b (Lnet/minecraft/server/EntityHuman;I)Lnet/minecraft/server/ItemStack; quickMoveStack
net/minecraft/server/ContainerEnchantTable net/minecraft/world/inventory/EnchantmentMenu
	containerAccess access
	enchantments enchantClue
	h random
	i enchantmentSeed
	levels levelClue
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/EntityHuman;I)Z clickMenuButton
	a (Lnet/minecraft/server/IInventory;)V slotsChanged
	a (Lnet/minecraft/server/ItemStack;II)Ljava/util/List; getEnchantmentList
	b (Lnet/minecraft/server/EntityHuman;)V removed
	b (Lnet/minecraft/server/EntityHuman;I)Lnet/minecraft/server/ItemStack; quickMoveStack
	e ()I getGoldCount
	f ()I getEnchantmentSeed
net/minecraft/server/ContainerFurnace net/minecraft/world/inventory/AbstractFurnaceMenu
	c level
	e data
	f recipeType
	furnace container
	a (Lnet/minecraft/server/AutoRecipeStackManager;)V fillCraftSlotsStackedContents
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/IRecipe;)Z recipeMatches
	a (Lnet/minecraft/server/ItemStack;)Z canSmelt
	a (ZLnet/minecraft/server/IRecipe;Lnet/minecraft/server/EntityPlayer;)V handlePlacement
	b (Lnet/minecraft/server/EntityHuman;I)Lnet/minecraft/server/ItemStack; quickMoveStack
	b (Lnet/minecraft/server/ItemStack;)Z isFuel
	e ()V clearCraftingContent
	f ()I getResultSlotIndex
	g ()I getGridWidth
	h ()I getGridHeight
	i ()I getSize
	j ()I getBurnProgress
	k ()I getLitProgress
	l ()Z isLit
net/minecraft/server/ContainerFurnaceFurnace net/minecraft/world/inventory/FurnaceMenu
net/minecraft/server/ContainerGrindstone net/minecraft/world/inventory/GrindstoneMenu
	containerAccess access
	craftInventory repairSlots
	resultInventory resultSlots
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/IInventory;)V slotsChanged
	a (Lnet/minecraft/server/ItemStack;II)Lnet/minecraft/server/ItemStack; removeNonCurses
	b (Lnet/minecraft/server/EntityHuman;)V removed
	b (Lnet/minecraft/server/EntityHuman;I)Lnet/minecraft/server/ItemStack; quickMoveStack
	b (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; mergeEnchants
	e ()V createResult
net/minecraft/server/ContainerHopper net/minecraft/world/inventory/HopperMenu
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	b (Lnet/minecraft/server/EntityHuman;)V removed
	b (Lnet/minecraft/server/EntityHuman;I)Lnet/minecraft/server/ItemStack; quickMoveStack
	e ()Lnet/minecraft/server/IInventory; getContainer
net/minecraft/server/ContainerHorse net/minecraft/world/inventory/HorseInventoryMenu
	c horseContainer
	d horse
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	b (Lnet/minecraft/server/EntityHuman;)V removed
	b (Lnet/minecraft/server/EntityHuman;I)Lnet/minecraft/server/ItemStack; quickMoveStack
	e ()Lnet/minecraft/server/IInventory; getContainer
net/minecraft/server/ContainerLectern net/minecraft/world/inventory/LecternMenu
	containerProperties lecternData
	inventory lectern
	a (II)V setData
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/EntityHuman;I)Z clickMenuButton
	e ()Lnet/minecraft/server/ItemStack; getBook
	f ()I getPage
net/minecraft/server/ContainerLoom net/minecraft/world/inventory/LoomMenu
	containerAccess access
	craftInventory inputContainer
	d selectedBannerPatternIndex
	e slotUpdateListener
	f bannerSlot
	g dyeSlot
	h patternSlot
	i resultSlot
	j lastSoundTime
	resultInventory outputContainer
	a (Ljava/lang/Runnable;)V registerUpdateListener
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/EntityHuman;I)Z clickMenuButton
	a (Lnet/minecraft/server/IInventory;)V slotsChanged
	b (Lnet/minecraft/server/EntityHuman;)V removed
	b (Lnet/minecraft/server/EntityHuman;I)Lnet/minecraft/server/ItemStack; quickMoveStack
	e ()I getSelectedBannerPatternIndex
	f ()Lnet/minecraft/server/Slot; getBannerSlot
	g ()Lnet/minecraft/server/Slot; getDyeSlot
	h ()Lnet/minecraft/server/Slot; getPatternSlot
	i ()Lnet/minecraft/server/Slot; getResultSlot
	j ()V setupResultSlot
net/minecraft/server/ContainerMerchant net/minecraft/world/inventory/MerchantMenu
	e merchantLevel
	f showProgressBar
	g canRestock
	inventoryMerchant tradeContainer
	merchant trader
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/IInventory;)V slotsChanged
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/Slot;)Z canTakeItemForPickAll
	a (Lnet/minecraft/server/MerchantRecipeList;)V setOffers
	a (Z)V setShowProgressBar
	b (Lnet/minecraft/server/EntityHuman;)V removed
	b (Lnet/minecraft/server/EntityHuman;I)Lnet/minecraft/server/ItemStack; quickMoveStack
	b (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z isSameItem
	b (Z)V setCanRestock
	c (ILnet/minecraft/server/ItemStack;)V moveFromInventoryToPaymentSlot
	d (I)V setSelectionHint
	e ()I getTraderXp
	e (I)V setXp
	f ()I getFutureTraderXp
	f (I)V setMerchantLevel
	g ()I getTraderLevel
	g (I)V tryMoveItems
	h ()Z canRestock
	i ()Lnet/minecraft/server/MerchantRecipeList; getOffers
	j ()Z showProgressBar
	k ()V playTradeSound
net/minecraft/server/ContainerPlayer net/minecraft/world/inventory/InventoryMenu
	c BLOCK_ATLAS
	craftInventory craftSlots
	d EMPTY_ARMOR_SLOT_HELMET
	e EMPTY_ARMOR_SLOT_CHESTPLATE
	f EMPTY_ARMOR_SLOT_LEGGINGS
	g EMPTY_ARMOR_SLOT_BOOTS
	h EMPTY_ARMOR_SLOT_SHIELD
	i active
	j TEXTURE_EMPTY_SLOTS
	k SLOT_IDS
	resultInventory resultSlots
	a (Lnet/minecraft/server/AutoRecipeStackManager;)V fillCraftSlotsStackedContents
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/IInventory;)V slotsChanged
	a (Lnet/minecraft/server/IRecipe;)Z recipeMatches
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/Slot;)Z canTakeItemForPickAll
	b (Lnet/minecraft/server/EntityHuman;)V removed
	b (Lnet/minecraft/server/EntityHuman;I)Lnet/minecraft/server/ItemStack; quickMoveStack
	e ()V clearCraftingContent
	f ()I getResultSlotIndex
	g ()I getGridWidth
	h ()I getGridHeight
	i ()I getSize
net/minecraft/server/ContainerProperties net/minecraft/world/inventory/SimpleContainerData
	a ints
	a ()I getCount
	a (I)I get
	a (II)V set
net/minecraft/server/ContainerProperty net/minecraft/world/inventory/DataSlot
	a prevValue
	a ()Lnet/minecraft/server/ContainerProperty; standalone
	a (Lnet/minecraft/server/IContainerProperties;I)Lnet/minecraft/server/ContainerProperty; forContainer
	a ([II)Lnet/minecraft/server/ContainerProperty; shared
	c ()Z checkAndClearUpdateFlag
net/minecraft/server/ContainerRecipeBook net/minecraft/world/inventory/RecipeBookMenu
	a (Lnet/minecraft/server/AutoRecipeStackManager;)V fillCraftSlotsStackedContents
	a (Lnet/minecraft/server/IRecipe;)Z recipeMatches
	a (ZLnet/minecraft/server/IRecipe;Lnet/minecraft/server/EntityPlayer;)V handlePlacement
	e ()V clearCraftingContent
	f ()I getResultSlotIndex
	g ()I getGridWidth
	h ()I getGridHeight
	i ()I getSize
net/minecraft/server/ContainerShulkerBox net/minecraft/world/inventory/ShulkerBoxMenu
	c container
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	b (Lnet/minecraft/server/EntityHuman;)V removed
	b (Lnet/minecraft/server/EntityHuman;I)Lnet/minecraft/server/ItemStack; quickMoveStack
net/minecraft/server/ContainerSmoker net/minecraft/world/inventory/SmokerMenu
net/minecraft/server/ContainerStonecutter net/minecraft/world/inventory/StonecutterMenu
	c inputSlot
	containerAccess access
	containerProperty selectedRecipeIndex
	d resultSlot
	i recipes
	inventory container
	j input
	k lastSoundTime
	l slotUpdateListener
	resultInventory resultContainer
	world level
	a ()Lnet/minecraft/server/Containers; getType
	a (Ljava/lang/Runnable;)V registerUpdateListener
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/EntityHuman;I)Z clickMenuButton
	a (Lnet/minecraft/server/IInventory;)V slotsChanged
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/ItemStack;)V setupRecipeList
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/Slot;)Z canTakeItemForPickAll
	b (Lnet/minecraft/server/EntityHuman;)V removed
	b (Lnet/minecraft/server/EntityHuman;I)Lnet/minecraft/server/ItemStack; quickMoveStack
	e ()I getSelectedRecipeIndex
	f ()Ljava/util/List; getRecipes
	g ()I getNumRecipes
	h ()Z hasInputItem
	i ()V setupResultSlot
net/minecraft/server/ContainerUtil net/minecraft/world/ContainerHelper
	a (Ljava/util/List;I)Lnet/minecraft/server/ItemStack; takeItem
	a (Ljava/util/List;II)Lnet/minecraft/server/ItemStack; removeItem
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/NonNullList;)Lnet/minecraft/server/NBTTagCompound; saveAllItems
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/NonNullList;Z)Lnet/minecraft/server/NBTTagCompound; saveAllItems
	b (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/NonNullList;)V loadAllItems
net/minecraft/server/ContainerWorkbench net/minecraft/world/inventory/CraftingMenu
	containerAccess access
	craftInventory craftSlots
	f player
	resultInventory resultSlots
	a (ILnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/InventoryCrafting;Lnet/minecraft/server/InventoryCraftResult;)V slotChangedCraftingGrid
	a (Lnet/minecraft/server/AutoRecipeStackManager;)V fillCraftSlotsStackedContents
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/IInventory;)V slotsChanged
	a (Lnet/minecraft/server/IRecipe;)Z recipeMatches
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/Slot;)Z canTakeItemForPickAll
	b (Lnet/minecraft/server/EntityHuman;)V removed
	b (Lnet/minecraft/server/EntityHuman;I)Lnet/minecraft/server/ItemStack; quickMoveStack
	e ()V clearCraftingContent
	f ()I getResultSlotIndex
	g ()I getGridWidth
	h ()I getGridHeight
	i ()I getSize
net/minecraft/server/Containers net/minecraft/world/inventory/MenuType
	GENERIC_3X3 GENERIC_3x3
	GENERIC_9X1 GENERIC_9x1
	GENERIC_9X2 GENERIC_9x2
	GENERIC_9X3 GENERIC_9x3
	GENERIC_9X4 GENERIC_9x4
	GENERIC_9X5 GENERIC_9x5
	GENERIC_9X6 GENERIC_9x6
	x constructor
	a (ILnet/minecraft/server/PlayerInventory;)Lnet/minecraft/server/Container; create
	a (Ljava/lang/String;Lnet/minecraft/server/Containers$Supplier;)Lnet/minecraft/server/Containers; register
net/minecraft/server/Containers$Supplier net/minecraft/world/inventory/MenuType$MenuSupplier
net/minecraft/server/ControllerJump net/minecraft/world/entity/ai/control/JumpControl
	a jump
	b mob
	b ()V tick
net/minecraft/server/ControllerLook net/minecraft/world/entity/ai/control/LookControl
	a mob
	b yMaxRotSpeed
	c xMaxRotAngle
	d hasWanted
	e wantedX
	f wantedY
	g wantedZ
	a ()V tick
	a (DDD)V setLookAt
	a (DDDFF)V setLookAt
	a (FFF)F rotateTowards
	a (Lnet/minecraft/server/Entity;)V setLookAt
	a (Lnet/minecraft/server/Entity;FF)V setLookAt
	a (Lnet/minecraft/server/Vec3D;)V setLookAt
	b ()Z resetXRotOnTick
	b (Lnet/minecraft/server/Entity;)D getWantedY
	c ()Z isHasWanted
	d ()D getWantedX
	e ()D getWantedY
	f ()D getWantedZ
	g ()F getXRotD
	h ()F getYRotD
net/minecraft/server/ControllerLookDolphin net/minecraft/world/entity/ai/control/DolphinLookControl
	h maxYRotFromCenter
	a ()V tick
net/minecraft/server/ControllerMove net/minecraft/world/entity/ai/control/MoveControl
	a mob
	b wantedX
	c wantedY
	d wantedZ
	e speedModifier
	f strafeForwards
	g strafeRight
	h operation
	a ()V tick
	a (DDDD)V setWantedPosition
	a (FF)V strafe
	a (FFF)F rotlerp
	a (Lnet/minecraft/server/ControllerMove;)V copyFrom
	b ()Z hasWanted
	c ()D getSpeedModifier
	d ()D getWantedX
	e ()D getWantedY
	f ()D getWantedZ
net/minecraft/server/ControllerMove$Operation net/minecraft/world/entity/ai/control/MoveControl$Operation
	e $VALUES
net/minecraft/server/ControllerMoveFlying net/minecraft/world/entity/ai/control/FlyingMoveControl
	i maxTurn
	j hoversInPlace
	a ()V tick
net/minecraft/server/Convertable net/minecraft/world/level/storage/LevelStorageSource
	a LOGGER
	b FORMATTER
	c baseDir
	d backupDir
	e fixerUpper
	a ()Ljava/lang/String; getName
	a (Ljava/io/File;Lcom/mojang/datafixers/DataFixer;)Lnet/minecraft/server/WorldData; getLevelData
	a (Ljava/lang/String;Ljava/lang/String;)V renameLevel
	a (Ljava/lang/String;Lnet/minecraft/server/MinecraftServer;)Lnet/minecraft/server/WorldNBTStorage; selectLevel
	a (Ljava/nio/file/Path;Lcom/mojang/datafixers/DataFixer;Ljava/lang/String;)Lnet/minecraft/server/WorldData; getDataTagFor
	a (Ljava/nio/file/Path;Lcom/mojang/datafixers/DataFixer;Ljava/lang/String;Lnet/minecraft/server/MinecraftServer;)Lnet/minecraft/server/WorldNBTStorage; selectLevel
	a ([Ljava/io/File;)Z deleteRecursive
	b ()Ljava/util/List; getLevelList
	b (Ljava/lang/String;)Lnet/minecraft/server/WorldData; getDataTagFor
	b (Ljava/lang/String;Ljava/lang/String;)Ljava/io/File; getFile
	c ()Ljava/nio/file/Path; getBaseDir
	c (Ljava/lang/String;)Z isNewLevelIdAcceptable
	convert (Ljava/lang/String;Lnet/minecraft/server/IProgressUpdate;)Z convertLevel
	d ()Ljava/nio/file/Path; getBackupPath
	d (Ljava/lang/String;)Z deleteLevel
	e ()I getStorageVersion
	e (Ljava/lang/String;)Z levelExists
	f (Ljava/lang/String;)J makeWorldBackup
	g (Ljava/lang/String;)Ljava/nio/file/Path; getLevelPath
	isConvertable (Ljava/lang/String;)Z requiresConversion
net/minecraft/server/Counter net/minecraft/stats/StatFormatter
net/minecraft/server/CraftingManager net/minecraft/world/item/crafting/RecipeManager
	a GSON
	b LOGGER
	d hasErrors
	a ()Z hadErrorsLoading
	a (Ljava/lang/Iterable;)V replaceRecipes
	a (Ljava/lang/Object;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	a (Ljava/util/Map;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	a (Lnet/minecraft/server/MinecraftKey;)Ljava/util/Optional; byKey
	a (Lnet/minecraft/server/MinecraftKey;Lcom/google/gson/JsonObject;)Lnet/minecraft/server/IRecipe; fromJson
	a (Lnet/minecraft/server/Recipes;)Ljava/util/Map; byType
	b ()Ljava/util/Collection; getRecipes
	b (Lnet/minecraft/server/Recipes;Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Ljava/util/List; getRecipesFor
	c ()Ljava/util/stream/Stream; getRecipeIds
	c (Lnet/minecraft/server/Recipes;Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Lnet/minecraft/server/NonNullList; getRemainingItemsFor
	craft (Lnet/minecraft/server/Recipes;Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Ljava/util/Optional; getRecipeFor
net/minecraft/server/CrashReport net/minecraft/CrashReport
	a LOGGER
	b title
	c exception
	d systemDetails
	e details
	f saveFile
	g trackingStackTrace
	h uncategorizedStackTrace
	a ()Ljava/lang/String; getTitle
	a (Ljava/io/File;)Z saveToFile
	a (Ljava/lang/String;)Lnet/minecraft/server/CrashReportSystemDetails; addCategory
	a (Ljava/lang/String;I)Lnet/minecraft/server/CrashReportSystemDetails; addCategory
	a (Ljava/lang/StringBuilder;)V getDetails
	a (Ljava/lang/Throwable;Ljava/lang/String;)Lnet/minecraft/server/CrashReport; forThrowable
	b ()Ljava/lang/Throwable; getException
	c ()Ljava/lang/String; getDetails
	d ()Ljava/lang/String; getExceptionMessage
	e ()Ljava/lang/String; getFriendlyReport
	f ()Ljava/io/File; getSaveFile
	g ()Lnet/minecraft/server/CrashReportSystemDetails; getSystemDetails
	h ()V initDetails
	i ()Ljava/lang/String; getErrorComment
net/minecraft/server/CrashReportCallable net/minecraft/CrashReportDetail
net/minecraft/server/CrashReportSystemDetails net/minecraft/CrashReportCategory
	a report
	b title
	c entries
	d stackTrace
	a ()[Ljava/lang/StackTraceElement; getStacktrace
	a (DDD)Ljava/lang/String; formatLocation
	a (I)I fillInStackTrace
	a (III)Ljava/lang/String; formatLocation
	a (Ljava/lang/StackTraceElement;Ljava/lang/StackTraceElement;)Z validateStackTrace
	a (Ljava/lang/String;Ljava/lang/Object;)Lnet/minecraft/server/CrashReportSystemDetails; setDetail
	a (Ljava/lang/String;Ljava/lang/Throwable;)V setDetailError
	a (Ljava/lang/String;Lnet/minecraft/server/CrashReportCallable;)Lnet/minecraft/server/CrashReportSystemDetails; setDetail
	a (Ljava/lang/StringBuilder;)V getDetails
	a (Lnet/minecraft/server/BlockPosition;)Ljava/lang/String; formatLocation
	a (Lnet/minecraft/server/CrashReportSystemDetails;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V populateBlockDetails
	b (I)V trimStacktrace
net/minecraft/server/CrashReportSystemDetails$CrashReportDetail net/minecraft/CrashReportCategory$Entry
	a key
	b value
	a ()Ljava/lang/String; getKey
	b ()Ljava/lang/String; getValue
net/minecraft/server/CreativeModeTab net/minecraft/world/item/CreativeModeTab
	a TABS
	b TAB_BUILDING_BLOCKS
	c TAB_DECORATIONS
	d TAB_REDSTONE
	e TAB_TRANSPORTATION
	f TAB_MISC
	g TAB_SEARCH
	h TAB_FOOD
	i TAB_TOOLS
	j TAB_COMBAT
	k TAB_BREWING
	l TAB_MATERIALS
	m TAB_HOTBAR
	n TAB_INVENTORY
	o id
	p langId
	q recipeFolderName
	r backgroundSuffix
	s canScroll
	t showTitle
	u enchantmentCategories
	v iconItemStack
	a ()I getId
	a (Ljava/lang/String;)Lnet/minecraft/server/CreativeModeTab; setBackgroundSuffix
	a (Lnet/minecraft/server/EnchantmentSlotType;)Z hasEnchantmentCategory
	a (Lnet/minecraft/server/NonNullList;)V fillItemList
	a ([Lnet/minecraft/server/EnchantmentSlotType;)Lnet/minecraft/server/CreativeModeTab; setEnchantmentCategories
	b ()Ljava/lang/String; getLangId
	b (Ljava/lang/String;)Lnet/minecraft/server/CreativeModeTab; setRecipeFolderName
	c ()Ljava/lang/String; getRecipeFolderName
	d ()Ljava/lang/String; getName
	e ()Lnet/minecraft/server/ItemStack; getIconItem
	f ()Lnet/minecraft/server/ItemStack; makeIcon
	g ()Ljava/lang/String; getBackgroundSuffix
	h ()Z showTitle
	i ()Lnet/minecraft/server/CreativeModeTab; hideTitle
	j ()Z canScroll
	k ()Lnet/minecraft/server/CreativeModeTab; hideScroll
	l ()I getColumn
	m ()Z isTopRow
	n ()Z isAlignedRight
	o ()[Lnet/minecraft/server/EnchantmentSlotType; getEnchantmentCategories
net/minecraft/server/Criterion net/minecraft/advancements/Criterion
	a trigger
	a ()Lnet/minecraft/server/CriterionInstance; getTrigger
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/Criterion; criterionFromJson
	a (Ljava/util/Map;Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	a (Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	b ()Lcom/google/gson/JsonElement; serializeToJson
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/util/Map; criteriaFromJson
	b (Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/Criterion; criterionFromNetwork
	c (Lnet/minecraft/server/PacketDataSerializer;)Ljava/util/Map; criteriaFromNetwork
net/minecraft/server/CriterionConditionBlock net/minecraft/advancements/critereon/BlockPredicate
	a ANY
	b tag
	c block
	d properties
	e nbt
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/CriterionConditionBlock; fromJson
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;)Z matches
net/minecraft/server/CriterionConditionDamage net/minecraft/advancements/critereon/DamagePredicate
	a ANY
	b dealtDamage
	c takenDamage
	d sourceEntity
	e blocked
	f type
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/CriterionConditionDamage; fromJson
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/DamageSource;FFZ)Z matches
net/minecraft/server/CriterionConditionDamageSource net/minecraft/advancements/critereon/DamageSourcePredicate
	a ANY
	b isProjectile
	c isExplosion
	d bypassesArmor
	e bypassesInvulnerability
	f bypassesMagic
	g isFire
	h isMagic
	i isLightning
	j directEntity
	k sourceEntity
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/CriterionConditionDamageSource; fromJson
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/Boolean; getOptionalBoolean
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/Boolean;)V addOptionally
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/DamageSource;)Z matches
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/DamageSource;)Z matches
net/minecraft/server/CriterionConditionDistance net/minecraft/advancements/critereon/DistancePredicate
	a ANY
	b x
	c y
	d z
	e horizontal
	f absolute
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (DDDDDD)Z matches
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/CriterionConditionDistance; fromJson
	a (Lnet/minecraft/server/CriterionConditionValue$FloatRange;)Lnet/minecraft/server/CriterionConditionDistance; horizontal
	b (Lnet/minecraft/server/CriterionConditionValue$FloatRange;)Lnet/minecraft/server/CriterionConditionDistance; vertical
net/minecraft/server/CriterionConditionEnchantments net/minecraft/advancements/critereon/EnchantmentPredicate
	a ANY
	b NONE
	c enchantment
	d level
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/CriterionConditionEnchantments; fromJson
	a (Ljava/util/Map;)Z containedIn
	b (Lcom/google/gson/JsonElement;)[Lnet/minecraft/server/CriterionConditionEnchantments; fromJsonArray
net/minecraft/server/CriterionConditionEntity net/minecraft/advancements/critereon/EntityPredicate
	a ANY
	b ANY_ARRAY
	c entityType
	d distanceToPlayer
	e location
	f effects
	g nbt
	h flags
	i equipment
	j player
	k team
	l catType
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/CriterionConditionEntity; fromJson
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/Entity;)Z matches
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Entity;)Z matches
	a ([Lnet/minecraft/server/CriterionConditionEntity;)Lcom/google/gson/JsonElement; serializeArrayToJson
	b (Lcom/google/gson/JsonElement;)[Lnet/minecraft/server/CriterionConditionEntity; fromJsonArray
net/minecraft/server/CriterionConditionEntityEquipment net/minecraft/advancements/critereon/EntityEquipmentPredicate
	a ANY
	b CAPTAIN
	c head
	d chest
	e legs
	f feet
	g mainhand
	h offhand
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/CriterionConditionEntityEquipment; fromJson
	a (Lnet/minecraft/server/Entity;)Z matches
net/minecraft/server/CriterionConditionEntityFlags net/minecraft/advancements/critereon/EntityFlagsPredicate
	a ANY
	b isOnFire
	c isCrouching
	d isSprinting
	e isSwimming
	f isBaby
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/CriterionConditionEntityFlags; fromJson
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/Boolean; getOptionalBoolean
	a (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/Boolean;)V addOptionalBoolean
	a (Lnet/minecraft/server/Entity;)Z matches
net/minecraft/server/CriterionConditionEntityType net/minecraft/advancements/critereon/EntityTypePredicate
	a ANY
	b COMMA_JOINER
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/CriterionConditionEntityType; fromJson
	a (Lnet/minecraft/server/EntityTypes;)Z matches
	a (Lnet/minecraft/server/Tag;)Lnet/minecraft/server/CriterionConditionEntityType; of
	b (Lnet/minecraft/server/EntityTypes;)Lnet/minecraft/server/CriterionConditionEntityType; of
net/minecraft/server/CriterionConditionFluid net/minecraft/advancements/critereon/FluidPredicate
	a ANY
	b tag
	c fluid
	d properties
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/CriterionConditionFluid; fromJson
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;)Z matches
net/minecraft/server/CriterionConditionItem net/minecraft/advancements/critereon/ItemPredicate
	a ANY
	b tag
	c item
	d count
	e durability
	f enchantments
	g storedEnchantments
	h potion
	i nbt
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/CriterionConditionItem; fromJson
	a (Lnet/minecraft/server/ItemStack;)Z matches
	b (Lcom/google/gson/JsonElement;)[Lnet/minecraft/server/CriterionConditionItem; fromJsonArray
net/minecraft/server/CriterionConditionLight net/minecraft/advancements/critereon/LightPredicate
	a ANY
	b composite
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/CriterionConditionLight; fromJson
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;)Z matches
net/minecraft/server/CriterionConditionLocation net/minecraft/advancements/critereon/LocationPredicate
	a ANY
	b x
	c y
	d z
	e biome
	f feature
	g dimension
	h light
	i block
	j fluid
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/CriterionConditionLocation; fromJson
	a (Lnet/minecraft/server/BiomeBase;)Lnet/minecraft/server/CriterionConditionLocation; inBiome
	a (Lnet/minecraft/server/DimensionManager;)Lnet/minecraft/server/CriterionConditionLocation; inDimension
	a (Lnet/minecraft/server/StructureGenerator;)Lnet/minecraft/server/CriterionConditionLocation; inFeature
	a (Lnet/minecraft/server/WorldServer;DDD)Z matches
	a (Lnet/minecraft/server/WorldServer;FFF)Z matches
net/minecraft/server/CriterionConditionMobEffect net/minecraft/advancements/critereon/MobEffectsPredicate
	a ANY
	b effects
	a ()Lnet/minecraft/server/CriterionConditionMobEffect; effects
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/CriterionConditionMobEffect; fromJson
	a (Ljava/util/Map;)Z matches
	a (Lnet/minecraft/server/Entity;)Z matches
	a (Lnet/minecraft/server/EntityLiving;)Z matches
	a (Lnet/minecraft/server/MobEffectList;)Lnet/minecraft/server/CriterionConditionMobEffect; and
	a (Lnet/minecraft/server/MobEffectList;Lbs$a;)Lnet/minecraft/server/CriterionConditionMobEffect; and
	b ()Lcom/google/gson/JsonElement; serializeToJson
net/minecraft/server/CriterionConditionNBT net/minecraft/advancements/critereon/NbtPredicate
	a ANY
	b tag
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/CriterionConditionNBT; fromJson
	a (Lnet/minecraft/server/Entity;)Z matches
	a (Lnet/minecraft/server/ItemStack;)Z matches
	a (Lnet/minecraft/server/NBTBase;)Z matches
	b (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/NBTTagCompound; getEntityTagToCompare
net/minecraft/server/CriterionConditionPlayer net/minecraft/advancements/critereon/PlayerPredicate
	a ANY
	b level
	c gameType
	d stats
	e recipes
	f advancements
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/CriterionConditionPlayer; fromJson
	a (Lnet/minecraft/server/Entity;)Z matches
	a (Lnet/minecraft/server/Statistic;)Lnet/minecraft/server/MinecraftKey; getStatValueId
	a (Lnet/minecraft/server/StatisticWrapper;Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/Statistic; getStat
	b (Lcom/google/gson/JsonElement;)Lbx$c; advancementPredicateFromJson
net/minecraft/server/CriterionConditionRange net/minecraft/advancements/critereon/WrappedMinMaxBounds
	a ANY
	b ERROR_INTS_ONLY
	c min
	d max
	a ()Ljava/lang/Float; getMin
	a (D)Z matchesSqr
	a (F)Lnet/minecraft/server/CriterionConditionRange; exactly
	a (FF)Lnet/minecraft/server/CriterionConditionRange; between
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/CriterionConditionRange; fromJson
	a (Lcom/mojang/brigadier/StringReader;Z)Lnet/minecraft/server/CriterionConditionRange; fromReader
	a (Lcom/mojang/brigadier/StringReader;ZLjava/util/function/Function;)Lnet/minecraft/server/CriterionConditionRange; fromReader
	a (Ljava/lang/Float;Ljava/util/function/Function;)Ljava/lang/Float; optionallyFormat
	b ()Ljava/lang/Float; getMax
	b (F)Lnet/minecraft/server/CriterionConditionRange; atLeast
	b (Lcom/mojang/brigadier/StringReader;Z)Ljava/lang/Float; readNumber
	c ()Lcom/google/gson/JsonElement; serializeToJson
	c (F)Lnet/minecraft/server/CriterionConditionRange; atMost
	c (Lcom/mojang/brigadier/StringReader;Z)Z isAllowedNumber
	d (F)Z matches
net/minecraft/server/CriterionConditionValue net/minecraft/advancements/critereon/MinMaxBounds
	a ERROR_EMPTY
	b ERROR_SWAPPED
	c min
	d max
	a ()Ljava/lang/Number; getMin
	a (Lcom/google/gson/JsonElement;Lnet/minecraft/server/CriterionConditionValue;Ljava/util/function/BiFunction;Lbr$a;)Lnet/minecraft/server/CriterionConditionValue; fromJson
	a (Lcom/mojang/brigadier/StringReader;)Z isAllowedInputChat
	a (Lcom/mojang/brigadier/StringReader;Lbr$b;Ljava/util/function/Function;Ljava/util/function/Supplier;Ljava/util/function/Function;)Lnet/minecraft/server/CriterionConditionValue; fromReader
	a (Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;Ljava/util/function/Supplier;)Ljava/lang/Number; readNumber
	a (Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object; optionallyFormat
	b ()Ljava/lang/Number; getMax
	c ()Z isAny
	d ()Lcom/google/gson/JsonElement; serializeToJson
net/minecraft/server/CriterionConditionValue$FloatRange net/minecraft/advancements/critereon/MinMaxBounds$Floats
	e ANY
	f minSq
	g maxSq
	a (D)Z matchesSqr
	a (F)Lnet/minecraft/server/CriterionConditionValue$FloatRange; exactly
	a (FF)Lnet/minecraft/server/CriterionConditionValue$FloatRange; between
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/CriterionConditionValue$FloatRange; fromJson
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/CriterionConditionValue$FloatRange; fromReader
	a (Lcom/mojang/brigadier/StringReader;Ljava/lang/Float;Ljava/lang/Float;)Lnet/minecraft/server/CriterionConditionValue$FloatRange; create
	a (Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;)Lnet/minecraft/server/CriterionConditionValue$FloatRange; fromReader
	a (Ljava/lang/Float;)Ljava/lang/Double; squareOpt
	b (F)Lnet/minecraft/server/CriterionConditionValue$FloatRange; atLeast
	c (F)Lnet/minecraft/server/CriterionConditionValue$FloatRange; atMost
	d (F)Z matches
net/minecraft/server/CriterionConditionValue$IntegerRange net/minecraft/advancements/critereon/MinMaxBounds$Ints
	e ANY
	f minSq
	g maxSq
	a (I)Lnet/minecraft/server/CriterionConditionValue$IntegerRange; exactly
	a (II)Lnet/minecraft/server/CriterionConditionValue$IntegerRange; between
	a (J)Z matchesSqr
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/CriterionConditionValue$IntegerRange; fromJson
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/CriterionConditionValue$IntegerRange; fromReader
	a (Lcom/mojang/brigadier/StringReader;Ljava/lang/Integer;Ljava/lang/Integer;)Lnet/minecraft/server/CriterionConditionValue$IntegerRange; create
	a (Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;)Lnet/minecraft/server/CriterionConditionValue$IntegerRange; fromReader
	a (Ljava/lang/Integer;)Ljava/lang/Long; squareOpt
	b (I)Lnet/minecraft/server/CriterionConditionValue$IntegerRange; atLeast
	c (I)Lnet/minecraft/server/CriterionConditionValue$IntegerRange; atMost
	d (I)Z matches
net/minecraft/server/CriterionInstance net/minecraft/advancements/CriterionTriggerInstance
	a ()Lnet/minecraft/server/MinecraftKey; getCriterion
	b ()Lcom/google/gson/JsonElement; serializeToJson
net/minecraft/server/CriterionInstanceAbstract net/minecraft/advancements/critereon/AbstractCriterionTriggerInstance
	a criterion
	a ()Lnet/minecraft/server/MinecraftKey; getCriterion
net/minecraft/server/CriterionProgress net/minecraft/advancements/CriterionProgress
	a DATE_FORMAT
	b obtained
	a ()Z isDone
	a (Ljava/lang/String;)Lnet/minecraft/server/CriterionProgress; fromJson
	a (Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	b ()V grant
	b (Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/CriterionProgress; fromNetwork
	c ()V revoke
	e ()Lcom/google/gson/JsonElement; serializeToJson
	getDate ()Ljava/util/Date; getObtained
net/minecraft/server/CriterionSlideDownBlock net/minecraft/advancements/critereon/SlideDownBlockTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/Block; deserializeBlock
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/IBlockData;)V trigger
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lcb$a; createInstance
net/minecraft/server/CriterionTrigger net/minecraft/advancements/CriterionTrigger
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/AdvancementDataPlayer;)V removePlayerListeners
	a (Lnet/minecraft/server/AdvancementDataPlayer;Lab$a;)V addPlayerListener
	b (Lnet/minecraft/server/AdvancementDataPlayer;Lab$a;)V removePlayerListener
net/minecraft/server/CriterionTriggerAbstract net/minecraft/advancements/critereon/SimpleCriterionTrigger
	a players
	a (Lnet/minecraft/server/AdvancementDataPlayer;)V removePlayerListeners
	a (Lnet/minecraft/server/AdvancementDataPlayer;Lab$a;)V addPlayerListener
	a (Lnet/minecraft/server/AdvancementDataPlayer;Ljava/util/function/Predicate;)V trigger
	b (Lnet/minecraft/server/AdvancementDataPlayer;)V trigger
	b (Lnet/minecraft/server/AdvancementDataPlayer;Lab$a;)V removePlayerListener
net/minecraft/server/CriterionTriggerBeeNestDestroyed net/minecraft/advancements/critereon/BeeNestDestroyedTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/Block; deserializeBlock
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/Block;Lnet/minecraft/server/ItemStack;I)V trigger
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lai$a; createInstance
net/minecraft/server/CriterionTriggerBredAnimals net/minecraft/advancements/critereon/BredAnimalsTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/EntityAnimal;Lnet/minecraft/server/EntityAnimal;Lnet/minecraft/server/EntityAgeable;)V trigger
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lak$a; createInstance
net/minecraft/server/CriterionTriggerBrewedPotion net/minecraft/advancements/critereon/BrewedPotionTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/PotionRegistry;)V trigger
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lal$a; createInstance
net/minecraft/server/CriterionTriggerChangedDimension net/minecraft/advancements/critereon/ChangeDimensionTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/DimensionManager;Lnet/minecraft/server/DimensionManager;)V trigger
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lam$a; createInstance
net/minecraft/server/CriterionTriggerChanneledLightning net/minecraft/advancements/critereon/ChanneledLightningTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/EntityPlayer;Ljava/util/Collection;)V trigger
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lan$a; createInstance
net/minecraft/server/CriterionTriggerConstructBeacon net/minecraft/advancements/critereon/ConstructBeaconTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/TileEntityBeacon;)V trigger
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lao$a; createInstance
net/minecraft/server/CriterionTriggerConsumeItem net/minecraft/advancements/critereon/ConsumeItemTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/ItemStack;)V trigger
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lap$a; createInstance
net/minecraft/server/CriterionTriggerCuredZombieVillager net/minecraft/advancements/critereon/CuredZombieVillagerTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/EntityZombie;Lnet/minecraft/server/EntityVillager;)V trigger
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Laq$a; createInstance
net/minecraft/server/CriterionTriggerEffectsChanged net/minecraft/advancements/critereon/EffectsChangedTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/EntityPlayer;)V trigger
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lau$a; createInstance
net/minecraft/server/CriterionTriggerEnchantedItem net/minecraft/advancements/critereon/EnchantedItemTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/ItemStack;I)V trigger
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lav$a; createInstance
net/minecraft/server/CriterionTriggerEnterBlock net/minecraft/advancements/critereon/EnterBlockTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/Block; deserializeBlock
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/IBlockData;)V trigger
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lax$a; createInstance
net/minecraft/server/CriterionTriggerEntityHurtPlayer net/minecraft/advancements/critereon/EntityHurtPlayerTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/DamageSource;FFZ)V trigger
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lba$a; createInstance
net/minecraft/server/CriterionTriggerFilledBucket net/minecraft/advancements/critereon/FilledBucketTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/ItemStack;)V trigger
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lbd$a; createInstance
net/minecraft/server/CriterionTriggerFishingRodHooked net/minecraft/advancements/critereon/FishingRodHookedTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityFishingHook;Ljava/util/Collection;)V trigger
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lbe$a; createInstance
net/minecraft/server/CriterionTriggerImpossible net/minecraft/advancements/critereon/ImpossibleTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/AdvancementDataPlayer;)V removePlayerListeners
	a (Lnet/minecraft/server/AdvancementDataPlayer;Lab$a;)V addPlayerListener
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lbg$a; createInstance
	b (Lnet/minecraft/server/AdvancementDataPlayer;Lab$a;)V removePlayerListener
net/minecraft/server/CriterionTriggerInteractBlock net/minecraft/advancements/critereon/ItemUsedOnBlockTrigger
	a id
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ItemStack;)V trigger
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lbk$a; createInstance
net/minecraft/server/CriterionTriggerInventoryChanged net/minecraft/advancements/critereon/InventoryChangeTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/PlayerInventory;)V trigger
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lbh$a; createInstance
net/minecraft/server/CriterionTriggerItemDurabilityChanged net/minecraft/advancements/critereon/ItemDurabilityTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/ItemStack;I)V trigger
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lbi$a; createInstance
net/minecraft/server/CriterionTriggerKilled net/minecraft/advancements/critereon/KilledTrigger
	a id
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/Entity;Lnet/minecraft/server/DamageSource;)V trigger
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lbm$a; createInstance
net/minecraft/server/CriterionTriggerKilledByCrossbow net/minecraft/advancements/critereon/KilledByCrossbowTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/EntityPlayer;Ljava/util/Collection;I)V trigger
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lbl$a; createInstance
net/minecraft/server/CriterionTriggerLevitation net/minecraft/advancements/critereon/LevitationTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/Vec3D;I)V trigger
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lbn$a; createInstance
net/minecraft/server/CriterionTriggerLocation net/minecraft/advancements/critereon/LocationTrigger
	a id
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/EntityPlayer;)V trigger
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lbq$a; createInstance
net/minecraft/server/CriterionTriggerNetherTravel net/minecraft/advancements/critereon/NetherTravelTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/Vec3D;)V trigger
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lbu$a; createInstance
net/minecraft/server/CriterionTriggerPlacedBlock net/minecraft/advancements/critereon/PlacedBlockTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/Block; deserializeBlock
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ItemStack;)V trigger
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lbv$a; createInstance
net/minecraft/server/CriterionTriggerPlayerHurtEntity net/minecraft/advancements/critereon/PlayerHurtEntityTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/Entity;Lnet/minecraft/server/DamageSource;FFZ)V trigger
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lbw$a; createInstance
net/minecraft/server/CriterionTriggerProperties net/minecraft/advancements/critereon/StatePropertiesPredicate
	a ANY
	b properties
	a ()Lcom/google/gson/JsonElement; serializeToJson
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/CriterionTriggerProperties; fromJson
	a (Ljava/lang/String;Lcom/google/gson/JsonElement;)Lcc$c; fromJson
	a (Lnet/minecraft/server/BlockStateList;Ljava/util/function/Consumer;)V checkState
	a (Lnet/minecraft/server/BlockStateList;Lnet/minecraft/server/IBlockDataHolder;)Z matches
	a (Lnet/minecraft/server/Fluid;)Z matches
	a (Lnet/minecraft/server/IBlockData;)Z matches
	b (Lcom/google/gson/JsonElement;)Ljava/lang/String; getStringOrNull
net/minecraft/server/CriterionTriggerRecipeUnlocked net/minecraft/advancements/critereon/RecipeUnlockedTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/IRecipe;)V trigger
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lby$a; createInstance
net/minecraft/server/CriterionTriggerShotCrossbow net/minecraft/advancements/critereon/ShotCrossbowTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/ItemStack;)V trigger
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lbz$a; createInstance
net/minecraft/server/CriterionTriggerSummonedEntity net/minecraft/advancements/critereon/SummonedEntityTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/Entity;)V trigger
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lcd$a; createInstance
net/minecraft/server/CriterionTriggerTamedAnimal net/minecraft/advancements/critereon/TameAnimalTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/EntityAnimal;)V trigger
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lce$a; createInstance
net/minecraft/server/CriterionTriggerTick net/minecraft/advancements/critereon/TickTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/EntityPlayer;)V trigger
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lcf$a; createInstance
net/minecraft/server/CriterionTriggerUsedEnderEye net/minecraft/advancements/critereon/UsedEnderEyeTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/BlockPosition;)V trigger
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lch$a; createInstance
net/minecraft/server/CriterionTriggerUsedTotem net/minecraft/advancements/critereon/UsedTotemTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/ItemStack;)V trigger
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lci$a; createInstance
net/minecraft/server/CriterionTriggerVillagerTrade net/minecraft/advancements/critereon/TradeTrigger
	a ID
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/CriterionInstance; createInstance
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/EntityVillagerAbstract;Lnet/minecraft/server/ItemStack;)V trigger
	b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lcg$a; createInstance
net/minecraft/server/CriterionTriggers net/minecraft/advancements/CriteriaTriggers
	A EFFECTS_CHANGED
	B USED_TOTEM
	C NETHER_TRAVEL
	D FISHING_ROD_HOOKED
	E CHANNELED_LIGHTNING
	F SHOT_CROSSBOW
	G KILLED_BY_CROSSBOW
	H RAID_WIN
	I BAD_OMEN
	J SAFELY_HARVEST_HONEY
	K HONEY_BLOCK_SLIDE
	L BEE_NEST_DESTROYED
	M CRITERIA
	a IMPOSSIBLE
	b PLAYER_KILLED_ENTITY
	c ENTITY_KILLED_PLAYER
	d ENTER_BLOCK
	e INVENTORY_CHANGED
	f RECIPE_UNLOCKED
	g PLAYER_HURT_ENTITY
	h ENTITY_HURT_PLAYER
	i ENCHANTED_ITEM
	j FILLED_BUCKET
	k BREWED_POTION
	l CONSTRUCT_BEACON
	m USED_ENDER_EYE
	n SUMMONED_ENTITY
	o BRED_ANIMALS
	p LOCATION
	q SLEPT_IN_BED
	r CURED_ZOMBIE_VILLAGER
	s TRADE
	t ITEM_DURABILITY_CHANGED
	u LEVITATION
	v CHANGED_DIMENSION
	w TICK
	x TAME_ANIMAL
	y PLACED_BLOCK
	z CONSUME_ITEM
	a ()Ljava/lang/Iterable; all
	a (Lnet/minecraft/server/CriterionTrigger;)Lnet/minecraft/server/CriterionTrigger; register
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/CriterionTrigger; getCriterion
net/minecraft/server/CursorPosition net/minecraft/core/Cursor3D
	a minX
	b minY
	c minZ
	d maxX
	e maxY
	f maxZ
	g x
	h y
	i z
	j started
	a ()Z advance
	b ()I nextX
	c ()I nextY
	d ()I nextZ
	e ()I getNextType
net/minecraft/server/CustomFunction net/minecraft/commands/CommandFunction
	a entries
	b id
	a ()Lnet/minecraft/server/MinecraftKey; getId
	a (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/CustomFunctionData;Ljava/util/List;)Lnet/minecraft/server/CustomFunction; fromLines
	b ()[Lcn$c; getEntries
net/minecraft/server/CustomFunctionCallback net/minecraft/world/level/timers/FunctionCallback
	a functionId
	a (Ljava/lang/Object;Lnet/minecraft/server/CustomFunctionCallbackTimerQueue;J)V handle
	a (Lnet/minecraft/server/MinecraftServer;Lnet/minecraft/server/CustomFunctionCallbackTimerQueue;J)V handle
net/minecraft/server/CustomFunctionCallbackTag net/minecraft/world/level/timers/FunctionTagCallback
	a tagId
	a (Ljava/lang/Object;Lnet/minecraft/server/CustomFunctionCallbackTimerQueue;J)V handle
	a (Lnet/minecraft/server/MinecraftServer;Lnet/minecraft/server/CustomFunctionCallbackTimerQueue;J)V handle
net/minecraft/server/CustomFunctionCallbackTimer net/minecraft/world/level/timers/TimerCallback
	a (Ljava/lang/Object;Lnet/minecraft/server/CustomFunctionCallbackTimerQueue;J)V handle
net/minecraft/server/CustomFunctionCallbackTimerQueue net/minecraft/world/level/timers/TimerQueue
	a LOGGER
	b callbacksRegistry
	c queue
	d sequentialId
	e events
	a ()Ljava/util/Set; getEventsIds
	a (Lcuz$a;)Lnet/minecraft/server/NBTTagCompound; storeEvent
	a (Ljava/lang/Object;J)V tick
	a (Ljava/lang/String;)I remove
	a (Ljava/lang/String;JLnet/minecraft/server/CustomFunctionCallbackTimer;)V schedule
	a (Lnet/minecraft/server/NBTTagCompound;)V loadEvent
	a (Lnet/minecraft/server/NBTTagList;)V load
	b ()Lnet/minecraft/server/NBTTagList; store
	c ()Ljava/util/Comparator; createComparator
net/minecraft/server/CustomFunctionCallbackTimers net/minecraft/world/level/timers/TimerCallbacks
	a SERVER_CALLBACKS
	b LOGGER
	c idToSerializer
	d classToSerializer
	a (Lcux$a;)Lnet/minecraft/server/CustomFunctionCallbackTimers; register
	a (Ljava/lang/Class;)Lcux$a; getSerializer
	a (Lnet/minecraft/server/CustomFunctionCallbackTimer;)Lnet/minecraft/server/NBTTagCompound; serialize
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/CustomFunctionCallbackTimer; deserialize
net/minecraft/server/CustomFunctionData net/minecraft/server/ServerFunctionManager
	a PATH_PREFIX_LENGTH
	b PATH_SUFFIX_LENGTH
	c LOGGER
	d TICK_FUNCTION_TAG
	e LOAD_FUNCTION_TAG
	g functions
	h isInFunction
	i commandQueue
	j nestedCalls
	k tags
	l ticking
	m postReload
	a ()Lnet/minecraft/server/MinecraftServer; getServer
	a (Lnet/minecraft/server/CustomFunction;Ljava/lang/Throwable;Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/CustomFunction; addFunction
	a (Lnet/minecraft/server/CustomFunction;Lnet/minecraft/server/CommandListenerWrapper;)I execute
	a (Lnet/minecraft/server/IResourceManager;)V onResourceManagerReload
	a (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/MinecraftKey;)Ljava/util/List; readLinesAsync
	a (Lnet/minecraft/server/MinecraftKey;)Ljava/util/Optional; get
	b ()I getCommandLimit
	c ()Ljava/util/Map; getFunctions
	d ()Lcom/mojang/brigadier/CommandDispatcher; getDispatcher
	f ()Lnet/minecraft/server/CommandListenerWrapper; getGameLoopSender
	g ()Lnet/minecraft/server/CommandListenerWrapper; getCompilationContext
	h ()Lnet/minecraft/server/Tags; getTags
net/minecraft/server/DamageSource net/minecraft/world/damagesource/DamageSource
	A exhaustion
	B isFireSource
	BURN ON_FIRE
	C isProjectile
	D scalesWithDifficulty
	DRYOUT DRY_OUT
	E isMagic
	F isExplosion
	FIRE IN_FIRE
	LIGHTNING LIGHTNING_BOLT
	STUCK IN_WALL
	translationIndex msgId
	x bypassArmor
	y bypassInvul
	z bypassMagic
	a ()Lnet/minecraft/server/DamageSource; netherBedExplosion
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/DamageSource; thorns
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/Entity;)Lnet/minecraft/server/DamageSource; trident
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/DamageSource; indirectMobAttack
	a (Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/DamageSource; sting
	b ()Z isProjectile
	c ()Lnet/minecraft/server/DamageSource; setProjectile
	c (Lnet/minecraft/server/Entity;Lnet/minecraft/server/Entity;)Lnet/minecraft/server/DamageSource; indirectMagic
	c (Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/DamageSource; explosion
	getExhaustionCost ()F getFoodExhaustion
	ignoresArmor ()Z isBypassArmor
	ignoresInvulnerability ()Z isBypassInvul
	isStarvation ()Z isBypassMagic
	j ()Lnet/minecraft/server/Entity; getDirectEntity
	projectile (Lnet/minecraft/server/Entity;Lnet/minecraft/server/Entity;)Lnet/minecraft/server/DamageSource; thrown
	q ()Ljava/lang/String; getMsgId
	r ()Lnet/minecraft/server/DamageSource; setScalesWithDifficulty
	s ()Z scalesWithDifficulty
	setFire ()Lnet/minecraft/server/DamageSource; setIsFire
	setIgnoreArmor ()Lnet/minecraft/server/DamageSource; bypassArmor
	setIgnoresInvulnerability ()Lnet/minecraft/server/DamageSource; bypassInvul
	setStarvation ()Lnet/minecraft/server/DamageSource; bypassMagic
	v ()Z isCreativePlayer
	w ()Lnet/minecraft/server/Vec3D; getSourcePosition
net/minecraft/server/DamageSourceNetherBed net/minecraft/world/damagesource/NetherBedDamage
	d (Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/IChatBaseComponent; getLocalizedDeathMessage
net/minecraft/server/DataBits net/minecraft/util/BitStorage
	a data
	b bits
	c mask
	d size
	a ()[J getRaw
	a (I)I get
	a (II)I getAndSet
	a (Ljava/util/function/IntConsumer;)V getAll
	b ()I getSize
	b (II)V set
	c ()I getBits
net/minecraft/server/DataConverterAddChoices net/minecraft/util/datafix/fixes/AddNewChoices
	a name
	b type
	a (Ljava/lang/String;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;)Lcom/mojang/datafixers/TypeRewriteRule; cap
net/minecraft/server/DataConverterAdvancement net/minecraft/util/datafix/fixes/AdvancementsFix
	a renames
net/minecraft/server/DataConverterArmorStand net/minecraft/util/datafix/fixes/EntityArmorStandSilentFix
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; fixTag
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
net/minecraft/server/DataConverterBanner net/minecraft/util/datafix/fixes/ItemBannerColorFix
net/minecraft/server/DataConverterBannerColour net/minecraft/util/datafix/fixes/BlockEntityBannerColorFix
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; fixTag
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
net/minecraft/server/DataConverterBedBlock net/minecraft/util/datafix/fixes/BedBlockEntityInjecter
	a (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/templates/List$ListType;)Lcom/mojang/datafixers/TypeRewriteRule; cap
net/minecraft/server/DataConverterBedItem net/minecraft/util/datafix/fixes/BedItemColorFix
net/minecraft/server/DataConverterBeehive net/minecraft/util/datafix/fixes/BeehivePoiRenameFix
	a (Ljava/lang/String;)Ljava/lang/String; rename
net/minecraft/server/DataConverterBiome net/minecraft/util/datafix/fixes/BiomeFix
	a BIOMES
net/minecraft/server/DataConverterBlockEntityKeepPacked net/minecraft/util/datafix/fixes/BlockEntityKeepPacked
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; fixTag
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
net/minecraft/server/DataConverterBlockName net/minecraft/util/datafix/fixes/BlockNameFlatteningFix
net/minecraft/server/DataConverterBlockRename net/minecraft/util/datafix/fixes/BlockRenameFix
	a name
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/DataFix; create
	a (Ljava/lang/String;)Ljava/lang/String; fixBlock
net/minecraft/server/DataConverterBook net/minecraft/util/datafix/fixes/ItemWrittenBookPagesStrictJsonFix
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; fixTag
net/minecraft/server/DataConverterCatType net/minecraft/util/datafix/fixes/CatTypeFix
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; fixTag
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
net/minecraft/server/DataConverterChunkLightRemove net/minecraft/util/datafix/fixes/ChunkLightRemoveFix
net/minecraft/server/DataConverterChunkStatus net/minecraft/util/datafix/fixes/ChunkStatusFix
net/minecraft/server/DataConverterChunkStatus2 net/minecraft/util/datafix/fixes/ChunkStatusFix2
	a RENAMES_AND_DOWNGRADES
net/minecraft/server/DataConverterChunkStructuresTemplateRename net/minecraft/util/datafix/fixes/ChunkStructuresTemplateRenameFix
	a RENAMES
	a (Lcom/mojang/datafixers/Dynamic;Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; fixTag
net/minecraft/server/DataConverterColorlessShulkerEntity net/minecraft/util/datafix/fixes/ColorlessShulkerEntityFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
net/minecraft/server/DataConverterCoral net/minecraft/util/datafix/fixes/RenamedCoralFix
	a RENAMED_IDS
net/minecraft/server/DataConverterCoralFan net/minecraft/util/datafix/fixes/RenamedCoralFansFix
	a RENAMED_IDS
net/minecraft/server/DataConverterCustomNameEntity net/minecraft/util/datafix/fixes/EntityCustomNameToComponentFix
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; fixTagCustomName
net/minecraft/server/DataConverterCustomNameItem net/minecraft/util/datafix/fixes/ItemCustomNameToComponentFix
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; fixTag
net/minecraft/server/DataConverterCustomNameTile net/minecraft/util/datafix/fixes/BlockEntityCustomNameToComponentFix
net/minecraft/server/DataConverterDropChances net/minecraft/util/datafix/fixes/EntityRedundantChanceTagsFix
net/minecraft/server/DataConverterDye net/minecraft/util/datafix/fixes/DyeItemRenameFix
	a RENAMED_IDS
net/minecraft/server/DataConverterEntity net/minecraft/util/datafix/fixes/EntityIdFix
	a ID_MAP
net/minecraft/server/DataConverterEntityBlockState net/minecraft/util/datafix/fixes/EntityBlockStateFix
	a MAP
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; updateFallingBlock
	a (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/datafixers/Typed; updateBlockToBlockState
	a (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed; updateEntity
	a (Ljava/lang/String;)I getBlockId
net/minecraft/server/DataConverterEntityCatSplit net/minecraft/util/datafix/fixes/EntityCatSplitFix
	a (Ljava/lang/String;Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/util/Pair; getNewNameAndTag
net/minecraft/server/DataConverterEntityCodSalmon net/minecraft/util/datafix/fixes/EntityCodSalmonFix
	a RENAMED_IDS
	b RENAMED_EGG_IDS
	a (Ljava/lang/String;)Ljava/lang/String; rename
net/minecraft/server/DataConverterEntityName net/minecraft/util/datafix/fixes/EntityRenameFix
	a name
	a (Ljava/lang/Object;Lcom/mojang/datafixers/types/DynamicOps;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/Typed; getEntity
	a (Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair; fix
net/minecraft/server/DataConverterEntityNameAbstract net/minecraft/util/datafix/fixes/SimpleEntityRenameFix
	a (Ljava/lang/String;Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/util/Pair; getNewNameAndTag
	a (Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair; fix
net/minecraft/server/DataConverterEntityPufferfish net/minecraft/util/datafix/fixes/EntityPufferfishRenameFix
	a RENAMED_IDS
	a (Ljava/lang/String;)Ljava/lang/String; rename
net/minecraft/server/DataConverterEntityRavagerRename net/minecraft/util/datafix/fixes/EntityRavagerRenameFix
	a RENAMED_IDS
	a (Ljava/lang/String;)Ljava/lang/String; rename
net/minecraft/server/DataConverterEntityRename net/minecraft/util/datafix/fixes/EntityTheRenameningFix
	a RENAMED_IDS
	b RENAMED_BLOCKS
	c RENAMED_ITEMS
	a (Ljava/lang/String;)Ljava/lang/String; rename
net/minecraft/server/DataConverterEntityRenameAbstract net/minecraft/util/datafix/fixes/SimplestEntityRenameFix
	a name
	a (Ljava/lang/String;)Ljava/lang/String; rename
net/minecraft/server/DataConverterEntityTippedArrow net/minecraft/util/datafix/fixes/EntityTippedArrowFix
	a (Ljava/lang/String;)Ljava/lang/String; rename
net/minecraft/server/DataConverterEquipment net/minecraft/util/datafix/fixes/EntityEquipmentToArmorAndHandFix
	a (Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule; cap
net/minecraft/server/DataConverterFlatten net/minecraft/util/datafix/fixes/ItemStackTheFlatteningFix
	a MAP
	b IDS
	c DAMAGE_IDS
	a (Ljava/lang/String;I)Ljava/lang/String; updateItem
net/minecraft/server/DataConverterFlattenData net/minecraft/util/datafix/fixes/BlockStateData
	a LOGGER
	b MAP
	c BLOCK_DEFAULTS
	d ID_BY_OLD
	e ID_BY_OLD_NAME
	a ()V finalizeMaps
	a (I)Ljava/lang/String; upgradeBlock
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; upgradeBlockStateTag
	a (Ljava/lang/String;)Ljava/lang/String; upgradeBlock
	b (I)Lcom/mojang/datafixers/Dynamic; getTag
	b (Ljava/lang/String;)Lcom/mojang/datafixers/Dynamic; parse
	map (ILjava/lang/String;[Ljava/lang/String;)V register
net/minecraft/server/DataConverterFlattenSpawnEgg net/minecraft/util/datafix/fixes/ItemStackSpawnEggFix
	a MAP
net/minecraft/server/DataConverterFlattenState net/minecraft/util/datafix/fixes/BlockStateStructureTemplateFix
net/minecraft/server/DataConverterGuardian net/minecraft/util/datafix/fixes/EntityElderGuardianSplitFix
	a (Ljava/lang/String;Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/util/Pair; getNewNameAndTag
net/minecraft/server/DataConverterHanging net/minecraft/util/datafix/fixes/EntityPaintingItemFrameDirectionFix
	a DIRECTIONS
	a (Lcom/mojang/datafixers/Dynamic;ZZ)Lcom/mojang/datafixers/Dynamic; doFix
net/minecraft/server/DataConverterHealth net/minecraft/util/datafix/fixes/EntityHealthFix
	a ENTITIES
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; fixTag
net/minecraft/server/DataConverterHeightmapRenaming net/minecraft/util/datafix/fixes/HeightmapRenamingFix
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; fix
net/minecraft/server/DataConverterHorse net/minecraft/util/datafix/fixes/EntityHorseSplitFix
	a (Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair; fix
net/minecraft/server/DataConverterIglooMetadataRemoval net/minecraft/util/datafix/fixes/IglooMetadataRemovalFix
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; fixTag
	b (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; removeIglooPieces
	c (Lcom/mojang/datafixers/Dynamic;)Z isIglooPiece
net/minecraft/server/DataConverterItemFrame net/minecraft/util/datafix/fixes/EntityItemFrameDirectionFix
	a (B)B direction2dTo3d
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; fixTag
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
net/minecraft/server/DataConverterItemLoreComponentize net/minecraft/util/datafix/fixes/ItemLoreFix
	a (Ljava/lang/String;)Ljava/lang/String; fixLoreEntry
	a (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; fixLoreList
net/minecraft/server/DataConverterItemName net/minecraft/util/datafix/fixes/ItemRenameFix
	a name
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/DataFix; create
	a (Ljava/lang/String;)Ljava/lang/String; fixItem
net/minecraft/server/DataConverterItemStackEnchantment net/minecraft/util/datafix/fixes/ItemStackEnchantmentNamesFix
	a MAP
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; fixTag
net/minecraft/server/DataConverterJukeBox net/minecraft/util/datafix/fixes/BlockEntityJukeboxFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
net/minecraft/server/DataConverterKeybind net/minecraft/util/datafix/fixes/OptionsKeyLwjgl3Fix
	a MAP
net/minecraft/server/DataConverterKeybind2 net/minecraft/util/datafix/fixes/OptionsKeyTranslationFix
net/minecraft/server/DataConverterLang net/minecraft/util/datafix/fixes/OptionsLowerCaseLanguageFix
net/minecraft/server/DataConverterLeaves net/minecraft/util/datafix/fixes/LeavesFix
	a DIRECTIONS
	b LEAVES
	c LOGS
	a (I)I getX
	a (III)I getIndex
	a (ZZZZ)I getSideMask
	b (I)I getY
	c (I)I getZ
net/minecraft/server/DataConverterLeavesBiome net/minecraft/util/datafix/fixes/ChunkBiomeFix
net/minecraft/server/DataConverterLevelDataGeneratorOptions net/minecraft/util/datafix/fixes/LevelDataGeneratorOptionsFix
	a MAP
	a (Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair; getLayerInfoFromString
	a (Ljava/lang/String;Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; convert
	b (Ljava/lang/String;)Ljava/util/List; getLayersInfoFromString
net/minecraft/server/DataConverterMap net/minecraft/util/datafix/fixes/ItemStackMapIdFix
net/minecraft/server/DataConverterMapId net/minecraft/util/datafix/fixes/MapIdFix
net/minecraft/server/DataConverterMaterialId net/minecraft/util/datafix/fixes/ItemIdFix
	ID_MAPPING ITEM_NAMES
	a (I)Ljava/lang/String; getItem
net/minecraft/server/DataConverterMinecart net/minecraft/util/datafix/fixes/EntityMinecartIdentifiersFix
	a MINECART_BY_ID
net/minecraft/server/DataConverterMobSpawner net/minecraft/util/datafix/fixes/MobSpawnerEntityIdentifiersFix
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; fix
net/minecraft/server/DataConverterNamedEntity net/minecraft/util/datafix/fixes/NamedEntityFix
	a name
	b entityName
	c type
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
net/minecraft/server/DataConverterNewVillage net/minecraft/util/datafix/fixes/NewVillageFix
	a (Lcom/mojang/datafixers/types/templates/CompoundList$CompoundListType;)Lcom/mojang/datafixers/TypeRewriteRule; cap
net/minecraft/server/DataConverterObjectiveDisplayName net/minecraft/util/datafix/fixes/ObjectiveDisplayNameFix
net/minecraft/server/DataConverterObjectiveRenderType net/minecraft/util/datafix/fixes/ObjectiveRenderTypeFix
	a (Ljava/lang/String;)Lnet/minecraft/server/IScoreboardCriteria$EnumScoreboardHealthDisplay; getRenderType
net/minecraft/server/DataConverterOminousBannerBlockEntityRename net/minecraft/util/datafix/OminousBannerBlockEntityRenameFix
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; fixTag
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
net/minecraft/server/DataConverterOminousBannerRename net/minecraft/util/datafix/OminousBannerRenameFix
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; fixTag
net/minecraft/server/DataConverterOptionsAddTextBackground net/minecraft/util/datafix/fixes/OptionsAddTextBackgroundFix
	a (Ljava/lang/String;)D calculateBackground
net/minecraft/server/DataConverterPOI net/minecraft/util/datafix/fixes/ReorganizePoi
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; cap
net/minecraft/server/DataConverterPOIRebuild net/minecraft/util/datafix/fixes/ForcePoiRebuild
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; cap
net/minecraft/server/DataConverterPOIRename net/minecraft/util/datafix/fixes/PoiTypeRename
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; cap
	a (Ljava/lang/String;)Ljava/lang/String; rename
	b (Lcom/mojang/datafixers/Dynamic;)Ljava/util/Optional; renameRecords
net/minecraft/server/DataConverterPainting net/minecraft/util/datafix/fixes/EntityPaintingMotiveFix
	a MAP
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; fixTag
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
net/minecraft/server/DataConverterPiston net/minecraft/util/datafix/fixes/BlockEntityBlockStateFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
net/minecraft/server/DataConverterPotionId net/minecraft/util/datafix/fixes/ItemPotionFix
	a POTIONS
net/minecraft/server/DataConverterPotionWater net/minecraft/util/datafix/fixes/ItemWaterPotionFix
net/minecraft/server/DataConverterProtoChunk net/minecraft/util/datafix/fixes/ChunkToProtochunkFix
	a (III)S packOffsetCoordinates
net/minecraft/server/DataConverterRecipeRename net/minecraft/util/datafix/fixes/RecipesRenameningFix
	a RECIPES
net/minecraft/server/DataConverterRecipes net/minecraft/util/datafix/fixes/RecipesFix
	a RECIPES
net/minecraft/server/DataConverterRegistry net/minecraft/util/datafix/DataFixers
	a SAME
	b SAME_NAMESPACED
	c DATA_FIXER
	a ()Lcom/mojang/datafixers/DataFixer; getDataFixer
	a (Lcom/mojang/datafixers/DataFixerBuilder;)V addFixers
	b ()Lcom/mojang/datafixers/DataFixer; createFixerUpper
net/minecraft/server/DataConverterRiding net/minecraft/util/datafix/fixes/EntityRidingToPassengersFix
	a (Lcom/mojang/datafixers/schemas/Schema;Lcom/mojang/datafixers/schemas/Schema;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule; cap
net/minecraft/server/DataConverterSaddle net/minecraft/util/datafix/fixes/EntityHorseSaddleFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
net/minecraft/server/DataConverterSchemaNamed net/minecraft/util/datafix/schemas/NamespacedSchema
	a (Ljava/lang/String;)Ljava/lang/String; ensureNamespaced
net/minecraft/server/DataConverterSchemaV100 net/minecraft/util/datafix/schemas/V100
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; equipment
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
net/minecraft/server/DataConverterSchemaV102 net/minecraft/util/datafix/schemas/V102
net/minecraft/server/DataConverterSchemaV1022 net/minecraft/util/datafix/schemas/V1022
net/minecraft/server/DataConverterSchemaV106 net/minecraft/util/datafix/schemas/V106
net/minecraft/server/DataConverterSchemaV107 net/minecraft/util/datafix/schemas/V107
net/minecraft/server/DataConverterSchemaV1125 net/minecraft/util/datafix/schemas/V1125
net/minecraft/server/DataConverterSchemaV135 net/minecraft/util/datafix/schemas/V135
net/minecraft/server/DataConverterSchemaV143 net/minecraft/util/datafix/schemas/V143
net/minecraft/server/DataConverterSchemaV1451 net/minecraft/util/datafix/schemas/V1451
net/minecraft/server/DataConverterSchemaV1451_1 net/minecraft/util/datafix/schemas/V1451_1
net/minecraft/server/DataConverterSchemaV1451_2 net/minecraft/util/datafix/schemas/V1451_2
net/minecraft/server/DataConverterSchemaV1451_3 net/minecraft/util/datafix/schemas/V1451_3
net/minecraft/server/DataConverterSchemaV1451_4 net/minecraft/util/datafix/schemas/V1451_4
net/minecraft/server/DataConverterSchemaV1451_5 net/minecraft/util/datafix/schemas/V1451_5
net/minecraft/server/DataConverterSchemaV1451_6 net/minecraft/util/datafix/schemas/V1451_6
net/minecraft/server/DataConverterSchemaV1451_7 net/minecraft/util/datafix/schemas/V1451_7
net/minecraft/server/DataConverterSchemaV1460 net/minecraft/util/datafix/schemas/V1460
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
	b (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerInventory
net/minecraft/server/DataConverterSchemaV1466 net/minecraft/util/datafix/schemas/V1466
net/minecraft/server/DataConverterSchemaV1470 net/minecraft/util/datafix/schemas/V1470
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
net/minecraft/server/DataConverterSchemaV1481 net/minecraft/util/datafix/schemas/V1481
net/minecraft/server/DataConverterSchemaV1483 net/minecraft/util/datafix/schemas/V1483
net/minecraft/server/DataConverterSchemaV1486 net/minecraft/util/datafix/schemas/V1486
net/minecraft/server/DataConverterSchemaV1510 net/minecraft/util/datafix/schemas/V1510
net/minecraft/server/DataConverterSchemaV1800 net/minecraft/util/datafix/schemas/V1800
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
net/minecraft/server/DataConverterSchemaV1801 net/minecraft/util/datafix/schemas/V1801
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
net/minecraft/server/DataConverterSchemaV1904 net/minecraft/util/datafix/schemas/V1904
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
net/minecraft/server/DataConverterSchemaV1906 net/minecraft/util/datafix/schemas/V1906
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerInventory
net/minecraft/server/DataConverterSchemaV1909 net/minecraft/util/datafix/schemas/V1909
net/minecraft/server/DataConverterSchemaV1920 net/minecraft/util/datafix/schemas/V1920
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerInventory
net/minecraft/server/DataConverterSchemaV1928 net/minecraft/util/datafix/schemas/V1928
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; equipment
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
net/minecraft/server/DataConverterSchemaV1929 net/minecraft/util/datafix/schemas/V1929
net/minecraft/server/DataConverterSchemaV1931 net/minecraft/util/datafix/schemas/V1931
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
net/minecraft/server/DataConverterSchemaV2100 net/minecraft/util/datafix/schemas/V2100
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
net/minecraft/server/DataConverterSchemaV501 net/minecraft/util/datafix/schemas/V501
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
net/minecraft/server/DataConverterSchemaV700 net/minecraft/util/datafix/schemas/V700
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
net/minecraft/server/DataConverterSchemaV701 net/minecraft/util/datafix/schemas/V701
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
net/minecraft/server/DataConverterSchemaV702 net/minecraft/util/datafix/schemas/V702
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
net/minecraft/server/DataConverterSchemaV703 net/minecraft/util/datafix/schemas/V703
net/minecraft/server/DataConverterSchemaV704 net/minecraft/util/datafix/schemas/V704
	a ITEM_TO_BLOCKENTITY
	b ADD_NAMES
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerInventory
net/minecraft/server/DataConverterSchemaV705 net/minecraft/util/datafix/schemas/V705
	a ADD_NAMES
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
	b (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerThrowableProjectile
net/minecraft/server/DataConverterSchemaV808 net/minecraft/util/datafix/schemas/V808
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerInventory
net/minecraft/server/DataConverterSchemaV99 net/minecraft/util/datafix/schemas/V99
	a ADD_NAMES
	b LOGGER
	c ITEM_TO_BLOCKENTITY
	a (Lcom/mojang/datafixers/Dynamic;Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Object; addNames
	a (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; equipment
	a (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMob
	b (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerThrowableProjectile
	c (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMinecart
	d (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerInventory
net/minecraft/server/DataConverterShoulderEntity net/minecraft/util/datafix/fixes/WriteAndReadFix
	a name
	b type
net/minecraft/server/DataConverterShulker net/minecraft/util/datafix/fixes/EntityShulkerColorFix
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; fixTag
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
net/minecraft/server/DataConverterShulkerBoxBlock net/minecraft/util/datafix/fixes/BlockEntityShulkerBoxColorFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
net/minecraft/server/DataConverterShulkerBoxItem net/minecraft/util/datafix/fixes/ItemShulkerBoxColorFix
	a NAMES_BY_COLOR
net/minecraft/server/DataConverterSignText net/minecraft/util/datafix/fixes/BlockEntitySignTextStrictJsonFix
	a GSON
	a (Lcom/mojang/datafixers/Dynamic;Ljava/lang/String;)Lcom/mojang/datafixers/Dynamic; updateLine
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
net/minecraft/server/DataConverterSkeleton net/minecraft/util/datafix/fixes/EntitySkeletonSplitFix
	a (Ljava/lang/String;Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/util/Pair; getNewNameAndTag
net/minecraft/server/DataConverterSpawnEgg net/minecraft/util/datafix/fixes/ItemSpawnEggFix
	ID_MAPPING ID_TO_ENTITY
net/minecraft/server/DataConverterStatistic net/minecraft/util/datafix/fixes/StatsCounterFix
	a SKIP
	b CUSTOM_MAP
	c ITEM_KEYS
	d ENTITY_KEYS
	e ENTITIES
	a (Ljava/lang/String;)Ljava/lang/String; upgradeItem
	b (Ljava/lang/String;)Ljava/lang/String; upgradeBlock
net/minecraft/server/DataConverterStructureReference net/minecraft/util/datafix/fixes/StructureReferenceCountFix
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; setCountToAtLeastOne
net/minecraft/server/DataConverterSwimStats net/minecraft/util/datafix/fixes/SwimStatsRenameFix
net/minecraft/server/DataConverterTeamDisplayName net/minecraft/util/datafix/fixes/TeamDisplayNameFix
net/minecraft/server/DataConverterTileEntity net/minecraft/util/datafix/fixes/BlockEntityIdFix
	a ID_MAP
net/minecraft/server/DataConverterTrappedChest net/minecraft/util/datafix/fixes/TrappedChestBlockEntityFix
	a LOGGER
net/minecraft/server/DataConverterTypes net/minecraft/util/datafix/fixes/References
	a LEVEL
	c CHUNK
	d HOTBAR
	e OPTIONS
	f STRUCTURE
	g STATS
	h SAVED_DATA
	i ADVANCEMENTS
	j POI_CHUNK
	k BLOCK_ENTITY
	m BLOCK_STATE
	n ENTITY_NAME
	o ENTITY_TREE
	q BLOCK_NAME
	r ITEM_NAME
	s UNTAGGED_SPAWNER
	t STRUCTURE_FEATURE
	u OBJECTIVE
	v TEAM
	w RECIPE
	x BIOME
net/minecraft/server/DataConverterUUID net/minecraft/util/datafix/fixes/EntityStringUuidFix
net/minecraft/server/DataConverterVBO net/minecraft/util/datafix/fixes/OptionsForceVBOFix
net/minecraft/server/DataConverterVillage net/minecraft/util/datafix/fixes/SavedDataVillageCropFix
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; fixTag
	a (Lcom/mojang/datafixers/Dynamic;Ljava/lang/String;)Lcom/mojang/datafixers/Dynamic; updateCrop
	a (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; updateChildren
	b (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; updateChildren
	c (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; updateSingleField
	d (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; updateDoubleField
net/minecraft/server/DataConverterVillagerLevelXp net/minecraft/util/datafix/fixes/VillagerRebuildLevelAndXpFix
	a LEVEL_XP_THRESHOLDS
	a (I)I getMinXpPerLevel
	a (Lcom/mojang/datafixers/Typed;I)Lcom/mojang/datafixers/Typed; addLevel
	b (Lcom/mojang/datafixers/Typed;I)Lcom/mojang/datafixers/Typed; addXpFromLevel
net/minecraft/server/DataConverterVillagerProfession net/minecraft/util/datafix/fixes/VillagerDataFix
	a (II)Ljava/lang/String; upgradeData
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
net/minecraft/server/DataConverterVillagerTrade net/minecraft/util/datafix/fixes/VillagerTradeFix
	a (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; updateItemStack
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
net/minecraft/server/DataConverterWolf net/minecraft/util/datafix/fixes/EntityWolfColorFix
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; fixTag
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
net/minecraft/server/DataConverterWorldGenSettings net/minecraft/util/datafix/fixes/LevelFlatGeneratorInfoFix
	a SPLITTER
	b LAYER_SPLITTER
	c OLD_AMOUNT_SPLITTER
	d AMOUNT_SPLITTER
	e BLOCK_SPLITTER
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; fix
	a (Ljava/lang/String;)Ljava/lang/String; fixString
net/minecraft/server/DataConverterZombie net/minecraft/util/datafix/fixes/EntityZombieVillagerTypeFix
	a RANDOM
	a (I)I getVillagerProfession
	a (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; fixTag
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
net/minecraft/server/DataConverterZombieType net/minecraft/util/datafix/fixes/EntityZombieSplitFix
	a (Ljava/lang/String;Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/util/Pair; getNewNameAndTag
net/minecraft/server/DataConverterZombieVillagerLevelXp net/minecraft/util/datafix/fixes/ZombieVillagerRebuildXpFix
	a (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; fix
net/minecraft/server/DataFixTypes net/minecraft/util/datafix/DataFixTypes
	k type
	l $VALUES
	a ()Lcom/mojang/datafixers/DSL$TypeReference; getType
net/minecraft/server/DataPalette net/minecraft/world/level/chunk/Palette
	a ()I getSerializedSize
	a (I)Ljava/lang/Object; valueFor
	a (Ljava/lang/Object;)I idFor
	a (Lnet/minecraft/server/NBTTagList;)V read
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	b ()I getSize
	b (Ljava/lang/Object;)Z maybeHas
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/DataPaletteBlock net/minecraft/world/level/chunk/PalettedContainer
	a storage
	b globalPalette
	c dummyPaletteResize
	d registry
	e reader
	f writer
	g defaultValue
	h palette
	i bits
	j lock
	a ()V acquire
	a (I)Ljava/lang/Object; get
	a (III)Ljava/lang/Object; get
	a (ILjava/lang/Object;)Ljava/lang/Object; getAndSet
	a (Lcap$a;)V count
	a (Lnet/minecraft/server/NBTTagCompound;Ljava/lang/String;Ljava/lang/String;)V write
	a (Lnet/minecraft/server/NBTTagList;[J)V read
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	b ()V release
	b (I)V setBits
	b (III)I getIndex
	b (IIILjava/lang/Object;)Ljava/lang/Object; getAndSetUnchecked
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getSerializedSize
	c (IIILjava/lang/Object;)V set
	contains (Ljava/lang/Object;)Z maybeHas
	setBlock (IIILjava/lang/Object;)Ljava/lang/Object; getAndSet
	setBlockIndex (ILjava/lang/Object;)V set
net/minecraft/server/DataPaletteExpandable net/minecraft/world/level/chunk/PaletteResize
net/minecraft/server/DataPaletteGlobal net/minecraft/world/level/chunk/GlobalPalette
	a registry
	b defaultValue
	a ()I getSerializedSize
	a (I)Ljava/lang/Object; valueFor
	a (Ljava/lang/Object;)I idFor
	a (Lnet/minecraft/server/NBTTagList;)V read
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	b ()I getSize
	b (Ljava/lang/Object;)Z maybeHas
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/DataPaletteHash net/minecraft/world/level/chunk/HashMapPalette
	a registry
	b values
	c resizeHandler
	d reader
	e writer
	f bits
	a ()I getSerializedSize
	a (I)Ljava/lang/Object; valueFor
	a (Ljava/lang/Object;)I idFor
	a (Lnet/minecraft/server/NBTTagList;)V read
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	b ()I getSize
	b (Ljava/lang/Object;)Z maybeHas
	b (Lnet/minecraft/server/NBTTagList;)V write
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/DataPaletteLinear net/minecraft/world/level/chunk/LinearPalette
	a registry
	b values
	c resizeHandler
	d reader
	e bits
	f size
	a ()I getSerializedSize
	a (I)Ljava/lang/Object; valueFor
	a (Ljava/lang/Object;)I idFor
	a (Lnet/minecraft/server/NBTTagList;)V read
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	b ()I getSize
	b (Ljava/lang/Object;)Z maybeHas
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/DataWatcher net/minecraft/network/syncher/SynchedEntityData
	a LOGGER
	b ENTITY_ID_POOL
	entries itemsById
	f isEmpty
	g isDirty
	a ()Z isDirty
	a (Ljava/lang/Class;Lnet/minecraft/server/DataWatcherSerializer;)Lnet/minecraft/server/DataWatcherObject; defineId
	a (Ljava/util/List;)V assignValues
	a (Ljava/util/List;Lnet/minecraft/server/PacketDataSerializer;)V pack
	a (Lnet/minecraft/server/DataWatcher$Item;Lnet/minecraft/server/DataWatcher$Item;)V assignValue
	a (Lnet/minecraft/server/PacketDataSerializer;)Ljava/util/List; unpack
	a (Lnet/minecraft/server/PacketDataSerializer;ILnet/minecraft/server/DataWatcherSerializer;)Lnet/minecraft/server/DataWatcher$Item; genericHelper
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/DataWatcher$Item;)V writeDataItem
	b ()Ljava/util/List; packDirty
	b (Lnet/minecraft/server/DataWatcherObject;)Lnet/minecraft/server/DataWatcher$Item; getItem
	c ()Ljava/util/List; getAll
	d ()Z isEmpty
	e ()V clearDirty
	register (Lnet/minecraft/server/DataWatcherObject;Ljava/lang/Object;)V define
	registerObject (Lnet/minecraft/server/DataWatcherObject;Ljava/lang/Object;)V createDataItem
net/minecraft/server/DataWatcher$Item net/minecraft/network/syncher/SynchedEntityData$DataItem
	a accessor
	b value
	c dirty
	a ()Lnet/minecraft/server/DataWatcherObject; getAccessor
	a (Ljava/lang/Object;)V setValue
	a (Z)V setDirty
	b ()Ljava/lang/Object; getValue
	c ()Z isDirty
	d ()Lnet/minecraft/server/DataWatcher$Item; copy
net/minecraft/server/DataWatcherObject net/minecraft/network/syncher/EntityDataAccessor
	a id
	b serializer
	a ()I getId
	b ()Lnet/minecraft/server/DataWatcherSerializer; getSerializer
net/minecraft/server/DataWatcherRegistry net/minecraft/network/syncher/EntityDataSerializers
	a BYTE
	b INT
	c FLOAT
	d STRING
	e COMPONENT
	f OPTIONAL_COMPONENT
	g ITEM_STACK
	h BLOCK_STATE
	i BOOLEAN
	j PARTICLE
	k ROTATIONS
	l BLOCK_POS
	m OPTIONAL_BLOCK_POS
	n DIRECTION
	o OPTIONAL_UUID
	p COMPOUND_TAG
	q VILLAGER_DATA
	r OPTIONAL_UNSIGNED_INT
	s POSE
	t SERIALIZERS
	a (I)Lnet/minecraft/server/DataWatcherSerializer; getSerializer
	a (Lnet/minecraft/server/DataWatcherSerializer;)V registerSerializer
	b (Lnet/minecraft/server/DataWatcherSerializer;)I getSerializedId
net/minecraft/server/DataWatcherSerializer net/minecraft/network/syncher/EntityDataSerializer
	a (I)Lnet/minecraft/server/DataWatcherObject; createAccessor
	a (Ljava/lang/Object;)Ljava/lang/Object; copy
	a (Lnet/minecraft/server/PacketDataSerializer;)Ljava/lang/Object; read
	a (Lnet/minecraft/server/PacketDataSerializer;Ljava/lang/Object;)V write
net/minecraft/server/DebugOutputStream net/minecraft/server/DebugLoggedPrintStream
	a (Ljava/lang/String;)V logLine
net/minecraft/server/DebugReportGenerator net/minecraft/data/DataGenerator
	a LOGGER
	b inputFolders
	c outputFolder
	d providers
	a ()Ljava/util/Collection; getInputFolders
	a (Lnet/minecraft/server/DebugReportProvider;)V addProvider
	b ()Ljava/nio/file/Path; getOutputFolder
	c ()V run
net/minecraft/server/DebugReportNBT net/minecraft/data/structures/NbtToSnbt
	b LOGGER
	c generator
	a ()Ljava/lang/String; getName
	a (Ljava/nio/file/Path;Ljava/lang/String;Ljava/nio/file/Path;)Ljava/nio/file/Path; convertStructure
	a (Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/lang/String; getName
	a (Lnet/minecraft/server/HashCache;)V run
net/minecraft/server/DebugReportProvider net/minecraft/data/DataProvider
	a SHA1
	a ()Ljava/lang/String; getName
	a (Lcom/google/gson/Gson;Lnet/minecraft/server/HashCache;Lcom/google/gson/JsonElement;Ljava/nio/file/Path;)V save
	a (Lnet/minecraft/server/HashCache;)V run
net/minecraft/server/DedicatedPlayerList net/minecraft/server/dedicated/DedicatedPlayerList
	a LOGGER
	A ()V loadOps
	B ()V saveOps
	C ()V loadWhiteList
	D ()V saveWhiteList
	a ()V reloadWhiteList
	a (Lcom/mojang/authlib/GameProfile;)V op
	a (Z)V setUsingWhiteList
	b (Lcom/mojang/authlib/GameProfile;)V deop
	c ()Lnet/minecraft/server/MinecraftServer; getServer
	c (Lcom/mojang/authlib/GameProfile;)V blackList
	d (Lcom/mojang/authlib/GameProfile;)V whiteList
	e (Lcom/mojang/authlib/GameProfile;)Z isWhiteListed
	f (Lcom/mojang/authlib/GameProfile;)Z canBypassPlayerLimit
	w ()V saveIpBanList
	x ()V saveUserBanList
	y ()V loadIpBanList
	z ()V loadUserBanList
net/minecraft/server/DedicatedServer net/minecraft/server/dedicated/DedicatedServer
	h LOGGER
	i SHA1
	o gameType
	p gui
	propertyManager settings
	remoteControlCommandListener rconConsoleSource
	remoteControlListener rconThread
	remoteStatusListener queryThreadGs4
	serverCommandQueue consoleInput
	I_ ()Z shouldInformAdmins
	Q ()Z getSpawnMonsters
	V ()Z isSnooperEnabled
	a (Lcom/mojang/authlib/GameProfile;)Z isSingleplayerOwner
	a (Lnet/minecraft/server/EnumGamemode;)V setDefaultGameMode
	a (Lnet/minecraft/server/EnumGamemode;ZI)Z publishServer
	a (Lnet/minecraft/server/MojangStatisticsGenerator;)V populateSnooper
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;)Z isUnderSpawnProtection
	aY ()Ljava/lang/String; getPackHash
	a_ (Ljava/lang/String;)Ljava/lang/String; runCommand
	af ()Lnet/minecraft/server/PlayerList; getPlayerList
	ai ()Z hasGui
	an ()I getSpawnProtectionRadius
	aw ()I getAbsoluteMaxWorldSize
	az ()I getCompressionThreshold
	b (Ljava/util/function/BooleanSupplier;)V tickChildren
	b (Lnet/minecraft/server/CrashReport;)Lnet/minecraft/server/CrashReport; fillReport
	ba ()Lnet/minecraft/server/DedicatedPlayerList; getPlayerList
	bb ()V showGui
	bm ()V waitForRetry
	c (I)V setPlayerIdleTimeout
	convertNames ()Z convertOldUsers
	d ()Z initServer
	d_ ()Lnet/minecraft/server/DedicatedServerProperties; getProperties
	e ()V onServerExit
	e_ ()Ljava/lang/String; getServerIp
	f ()Z canGenerateStructures
	f_ ()Ljava/lang/String; getServerName
	g ()Lnet/minecraft/server/EnumGamemode; getDefaultGameType
	getMaxTickTime ()J getMaxTickLength
	h ()Lnet/minecraft/server/EnumDifficulty; getDefaultDifficulty
	handleCommandQueue ()V handleConsoleInputs
	i ()Z isHardcore
	issueCommand (Ljava/lang/String;Lnet/minecraft/server/CommandListenerWrapper;)V handleConsoleInput
	j ()I getOperatorUserPermissionLevel
	k ()I getFunctionCompilationLevel
	l ()Z shouldRconBroadcast
	m ()Z isDedicatedServer
	n ()Z isEpollEnabled
	o ()Z isCommandBlockEnabled
	p ()Z isPublished
	q ()I getServerPort
	r ()V stopServer
	setHasWhitelist (Z)V storeUsingWhiteList
	t ()Ljava/lang/String; getPluginNames
	z ()Z isNetherEnabled
net/minecraft/server/DedicatedServerProperties net/minecraft/server/dedicated/DedicatedServerProperties
	forceGamemode forceGameMode
	a (Ljava/util/Properties;)Lnet/minecraft/server/DedicatedServerProperties; reload
	b (Ljava/util/Properties;)Lnet/minecraft/server/PropertyManager; reload
	load (Ljava/nio/file/Path;)Lnet/minecraft/server/DedicatedServerProperties; fromFile
net/minecraft/server/DedicatedServerSettings net/minecraft/server/dedicated/DedicatedServerSettings
	path source
	save ()V forceSave
	setProperty (Ljava/util/function/UnaryOperator;)Lnet/minecraft/server/DedicatedServerSettings; update
net/minecraft/server/DefaultUncaughtExceptionHandler net/minecraft/DefaultUncaughtExceptionHandler
	a logger
net/minecraft/server/DefinedStructure net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate
	a palettes
	b entityInfoList
	c size
	d author
	a ()Lnet/minecraft/server/BlockPosition; getSize
	a (Ljava/lang/String;)V setAuthor
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/DefinedStructureInfo;Lnet/minecraft/server/Block;)Ljava/util/List; filterBlocks
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/DefinedStructureInfo;Lnet/minecraft/server/Block;Z)Ljava/util/List; filterBlocks
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockMirror;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/BlockPosition; getZeroPositionWithTransform
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockMirror;Lnet/minecraft/server/EnumBlockRotation;II)Lnet/minecraft/server/BlockPosition; getZeroPositionWithTransform
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockMirror;Lnet/minecraft/server/EnumBlockRotation;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/BlockPosition; transform
	a (Lnet/minecraft/server/DefinedStructureInfo;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/BlockPosition; calculateRelativePosition
	a (Lnet/minecraft/server/DefinedStructureInfo;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/DefinedStructureInfo;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/BlockPosition; calculateConnectedPosition
	a (Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/BlockPosition; getSize
	a (Lnet/minecraft/server/EnumBlockRotation;IILnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/EnumDirection;)V mirrorAABB
	a (Lnet/minecraft/server/GeneratorAccess;ILnet/minecraft/server/VoxelShapeDiscrete;III)V updateShapeAtEdge
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/DefinedStructureInfo;)V placeInWorldChunk
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/DefinedStructureInfo;I)Z placeInWorld
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/DefinedStructureInfo;Ljava/util/List;)Ljava/util/List; processBlockInfos
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockMirror;Lnet/minecraft/server/EnumBlockRotation;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/StructureBoundingBox;)V placeEntities
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/NBTTagCompound;)Ljava/util/Optional; createEntityIgnoreException
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	a (Lnet/minecraft/server/NBTTagList;Lnet/minecraft/server/NBTTagList;)V loadPalette
	a (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/EnumBlockMirror;Lnet/minecraft/server/EnumBlockRotation;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/Vec3D; transform
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)V fillEntityList
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;ZLnet/minecraft/server/Block;)V fillFromWorld
	a ([D)Lnet/minecraft/server/NBTTagList; newDoubleList
	a ([I)Lnet/minecraft/server/NBTTagList; newIntegerList
	b ()Ljava/lang/String; getAuthor
	b (Lnet/minecraft/server/DefinedStructureInfo;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/StructureBoundingBox; getBoundingBox
	b (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/DefinedStructureInfo;)V placeInWorld
	b (Lnet/minecraft/server/NBTTagCompound;)V load
net/minecraft/server/DefinedStructure$BlockInfo net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo
	a pos
	b state
	c nbt
net/minecraft/server/DefinedStructure$EntityInfo net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureEntityInfo
	a pos
	b blockPos
	c nbt
net/minecraft/server/DefinedStructureInfo net/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings
	a mirror
	b rotation
	c rotationPivot
	d ignoreEntities
	e chunkPos
	f boundingBox
	g keepLiquids
	h random
	i palette
	j processors
	k knownShape
	a ()Lnet/minecraft/server/DefinedStructureInfo; copy
	a (Ljava/util/List;Lnet/minecraft/server/BlockPosition;)Ljava/util/List; getRandomPalette
	a (Ljava/util/Random;)Lnet/minecraft/server/DefinedStructureInfo; setRandom
	a (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/DefinedStructureInfo; setRotationPivot
	a (Lnet/minecraft/server/ChunkCoordIntPair;)Lnet/minecraft/server/DefinedStructureInfo; setChunkPos
	a (Lnet/minecraft/server/DefinedStructureProcessor;)Lnet/minecraft/server/DefinedStructureInfo; addProcessor
	a (Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/DefinedStructureInfo; setMirror
	a (Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/DefinedStructureInfo; setRotation
	a (Lnet/minecraft/server/StructureBoundingBox;)Lnet/minecraft/server/DefinedStructureInfo; setBoundingBox
	a (Z)Lnet/minecraft/server/DefinedStructureInfo; setIgnoreEntities
	b ()Lnet/minecraft/server/DefinedStructureInfo; clearProcessors
	b (Lnet/minecraft/server/BlockPosition;)Ljava/util/Random; getRandom
	b (Lnet/minecraft/server/ChunkCoordIntPair;)Lnet/minecraft/server/StructureBoundingBox; calculateBoundingBox
	b (Lnet/minecraft/server/DefinedStructureProcessor;)Lnet/minecraft/server/DefinedStructureInfo; popProcessor
	b (Z)Lnet/minecraft/server/DefinedStructureInfo; setKeepLiquids
	c ()Lnet/minecraft/server/EnumBlockMirror; getMirror
	c (Z)Lnet/minecraft/server/DefinedStructureInfo; setKnownShape
	d ()Lnet/minecraft/server/EnumBlockRotation; getRotation
	e ()Lnet/minecraft/server/BlockPosition; getRotationPivot
	f ()Lnet/minecraft/server/ChunkCoordIntPair; getChunkPos
	g ()Z isIgnoreEntities
	h ()Lnet/minecraft/server/StructureBoundingBox; getBoundingBox
	i ()Z getKnownShape
	j ()Ljava/util/List; getProcessors
	k ()V updateBoundingBoxFromChunkPos
	l ()Z shouldKeepLiquids
net/minecraft/server/DefinedStructureManager net/minecraft/world/level/levelgen/structure/templatesystem/StructureManager
	a LOGGER
	b structureRepository
	c fixerUpper
	d server
	e generatedDir
	a (Ljava/io/InputStream;)Lnet/minecraft/server/DefinedStructure; readStructure
	a (Lnet/minecraft/server/IResourceManager;)V onResourceManagerReload
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/DefinedStructure; getOrCreate
	a (Lnet/minecraft/server/MinecraftKey;Ljava/lang/String;)Ljava/nio/file/Path; createPathToStructure
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/DefinedStructure; readStructure
	b (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/DefinedStructure; get
	b (Lnet/minecraft/server/MinecraftKey;Ljava/lang/String;)Ljava/nio/file/Path; createAndValidatePathToStructure
	c (Lnet/minecraft/server/MinecraftKey;)Z save
	d (Lnet/minecraft/server/MinecraftKey;)V remove
	e (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/DefinedStructure; loadFromResource
	f (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/DefinedStructure; loadFromGenerated
net/minecraft/server/DefinedStructurePiece net/minecraft/world/level/levelgen/structure/TemplateStructurePiece
	a template
	b placeSettings
	c templatePosition
	d LOGGER
	a (III)V move
	a (Ljava/lang/String;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;)V handleDataMarker
	a (Lnet/minecraft/server/DefinedStructure;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/DefinedStructureInfo;)V setup
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	ad_ ()Lnet/minecraft/server/EnumBlockRotation; getRotation
net/minecraft/server/DefinedStructureProcessor net/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessor
	a ()Lnet/minecraft/server/DefinedStructureStructureProcessorType; getType
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; getDynamic
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/DefinedStructure$BlockInfo;Lnet/minecraft/server/DefinedStructure$BlockInfo;Lnet/minecraft/server/DefinedStructureInfo;)Lnet/minecraft/server/DefinedStructure$BlockInfo; processBlock
	b (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/DefinedStructureProcessorBlockIgnore net/minecraft/world/level/levelgen/structure/templatesystem/BlockIgnoreProcessor
	a STRUCTURE_BLOCK
	b AIR
	c STRUCTURE_AND_AIR
	d toIgnore
	a ()Lnet/minecraft/server/DefinedStructureStructureProcessorType; getType
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; getDynamic
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/DefinedStructure$BlockInfo;Lnet/minecraft/server/DefinedStructure$BlockInfo;Lnet/minecraft/server/DefinedStructureInfo;)Lnet/minecraft/server/DefinedStructure$BlockInfo; processBlock
net/minecraft/server/DefinedStructureProcessorGravity net/minecraft/world/level/levelgen/structure/templatesystem/GravityProcessor
	a heightmap
	b offset
	a ()Lnet/minecraft/server/DefinedStructureStructureProcessorType; getType
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; getDynamic
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/DefinedStructure$BlockInfo;Lnet/minecraft/server/DefinedStructure$BlockInfo;Lnet/minecraft/server/DefinedStructureInfo;)Lnet/minecraft/server/DefinedStructure$BlockInfo; processBlock
net/minecraft/server/DefinedStructureProcessorJigsawReplacement net/minecraft/world/level/levelgen/structure/templatesystem/JigsawReplacementProcessor
	a INSTANCE
	a ()Lnet/minecraft/server/DefinedStructureStructureProcessorType; getType
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; getDynamic
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/DefinedStructure$BlockInfo;Lnet/minecraft/server/DefinedStructure$BlockInfo;Lnet/minecraft/server/DefinedStructureInfo;)Lnet/minecraft/server/DefinedStructure$BlockInfo; processBlock
net/minecraft/server/DefinedStructureProcessorNop net/minecraft/world/level/levelgen/structure/templatesystem/NopProcessor
	a INSTANCE
	a ()Lnet/minecraft/server/DefinedStructureStructureProcessorType; getType
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; getDynamic
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/DefinedStructure$BlockInfo;Lnet/minecraft/server/DefinedStructure$BlockInfo;Lnet/minecraft/server/DefinedStructureInfo;)Lnet/minecraft/server/DefinedStructure$BlockInfo; processBlock
net/minecraft/server/DefinedStructureProcessorPredicates net/minecraft/world/level/levelgen/structure/templatesystem/ProcessorRule
	a inputPredicate
	b locPredicate
	c outputState
	d outputTag
	a ()Lnet/minecraft/server/IBlockData; getOutputState
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/DefinedStructureProcessorPredicates; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;Ljava/util/Random;)Z test
	b ()Lnet/minecraft/server/NBTTagCompound; getOutputTag
net/minecraft/server/DefinedStructureProcessorRotation net/minecraft/world/level/levelgen/structure/templatesystem/BlockRotProcessor
	a integrity
	a ()Lnet/minecraft/server/DefinedStructureStructureProcessorType; getType
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; getDynamic
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/DefinedStructure$BlockInfo;Lnet/minecraft/server/DefinedStructure$BlockInfo;Lnet/minecraft/server/DefinedStructureInfo;)Lnet/minecraft/server/DefinedStructure$BlockInfo; processBlock
net/minecraft/server/DefinedStructureProcessorRule net/minecraft/world/level/levelgen/structure/templatesystem/RuleProcessor
	a rules
	a ()Lnet/minecraft/server/DefinedStructureStructureProcessorType; getType
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; getDynamic
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/DefinedStructure$BlockInfo;Lnet/minecraft/server/DefinedStructure$BlockInfo;Lnet/minecraft/server/DefinedStructureInfo;)Lnet/minecraft/server/DefinedStructure$BlockInfo; processBlock
net/minecraft/server/DefinedStructureRuleTest net/minecraft/world/level/levelgen/structure/templatesystem/RuleTest
	a ()Lnet/minecraft/server/DefinedStructureRuleTestType; getType
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; getDynamic
	a (Lnet/minecraft/server/IBlockData;Ljava/util/Random;)Z test
	b (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/DefinedStructureRuleTestType net/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType
	b ALWAYS_TRUE_TEST
	c BLOCK_TEST
	d BLOCKSTATE_TEST
	e TAG_TEST
	f RANDOM_BLOCK_TEST
	g RANDOM_BLOCKSTATE_TEST
	a (Ljava/lang/String;Lnet/minecraft/server/DefinedStructureRuleTestType;)Lnet/minecraft/server/DefinedStructureRuleTestType; register
net/minecraft/server/DefinedStructureStructureProcessorType net/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType
	b BLOCK_IGNORE
	c BLOCK_ROT
	d GRAVITY
	e JIGSAW_REPLACEMENT
	f RULE
	g NOP
	a (Ljava/lang/String;Lnet/minecraft/server/DefinedStructureStructureProcessorType;)Lnet/minecraft/server/DefinedStructureStructureProcessorType; register
net/minecraft/server/DefinedStructureTestBlock net/minecraft/world/level/levelgen/structure/templatesystem/BlockMatchTest
	a block
	a ()Lnet/minecraft/server/DefinedStructureRuleTestType; getType
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; getDynamic
	a (Lnet/minecraft/server/IBlockData;Ljava/util/Random;)Z test
net/minecraft/server/DefinedStructureTestBlockState net/minecraft/world/level/levelgen/structure/templatesystem/BlockStateMatchTest
	a blockState
	a ()Lnet/minecraft/server/DefinedStructureRuleTestType; getType
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; getDynamic
	a (Lnet/minecraft/server/IBlockData;Ljava/util/Random;)Z test
net/minecraft/server/DefinedStructureTestRandomBlock net/minecraft/world/level/levelgen/structure/templatesystem/RandomBlockMatchTest
	a block
	b probability
	a ()Lnet/minecraft/server/DefinedStructureRuleTestType; getType
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; getDynamic
	a (Lnet/minecraft/server/IBlockData;Ljava/util/Random;)Z test
net/minecraft/server/DefinedStructureTestRandomBlockState net/minecraft/world/level/levelgen/structure/templatesystem/RandomBlockStateMatchTest
	a blockState
	b probability
	a ()Lnet/minecraft/server/DefinedStructureRuleTestType; getType
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; getDynamic
	a (Lnet/minecraft/server/IBlockData;Ljava/util/Random;)Z test
net/minecraft/server/DefinedStructureTestTag net/minecraft/world/level/levelgen/structure/templatesystem/TagMatchTest
	a tag
	a ()Lnet/minecraft/server/DefinedStructureRuleTestType; getType
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; getDynamic
	a (Lnet/minecraft/server/IBlockData;Ljava/util/Random;)Z test
net/minecraft/server/DefinedStructureTestTrue net/minecraft/world/level/levelgen/structure/templatesystem/AlwaysTrueTest
	a INSTANCE
	a ()Lnet/minecraft/server/DefinedStructureRuleTestType; getType
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; getDynamic
	a (Lnet/minecraft/server/IBlockData;Ljava/util/Random;)Z test
net/minecraft/server/DemoPlayerInteractManager net/minecraft/server/level/DemoMode
	c displayedIntro
	d demoHasEnded
	e demoEndedReminder
	f gameModeTicks
	a ()V tick
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PacketPlayInBlockDig$EnumPlayerDigType;Lnet/minecraft/server/EnumDirection;I)V handleBlockBreakAction
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/World;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; useItem
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/World;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; useItemOn
	e ()V outputDemoReminder
net/minecraft/server/DifficultyDamageScaler net/minecraft/world/DifficultyInstance
	a base
	b effectiveDifficulty
	a ()Lnet/minecraft/server/EnumDifficulty; getDifficulty
	a (F)Z isHarderThan
	a (Lnet/minecraft/server/EnumDifficulty;JJF)F calculateDifficulty
	b ()F getEffectiveDifficulty
	c ()Z isHard
	d ()F getSpecialMultiplier
net/minecraft/server/DimensionManager net/minecraft/world/level/dimension/DimensionType
	genLayerZoomer biomeZoomer
	hasSkyLight hasSkylight
	providerFactory factory
	suffix fileSuffix
	a ()Ljava/lang/Iterable; getAllTypes
	a (I)Lnet/minecraft/server/DimensionManager; getById
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/DimensionManager; of
	a (Lcom/mojang/datafixers/types/DynamicOps;)Ljava/lang/Object; serialize
	a (Ljava/io/File;)Ljava/io/File; getStorageFolder
	a (Lnet/minecraft/server/DimensionManager;)Lnet/minecraft/server/MinecraftKey; getName
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/DimensionManager; getByName
	getDimensionID ()I getId
	getGenLayerZoomer ()Lnet/minecraft/server/GenLayerZoomer; getBiomeZoomer
	getSuffix ()Ljava/lang/String; getFileSuffix
	getWorldProvider (Lnet/minecraft/server/World;)Lnet/minecraft/server/WorldProvider; create
net/minecraft/server/DispenseBehaviorBoat net/minecraft/core/dispenser/BoatDispenseItemBehavior
	b defaultDispenseItemBehavior
	c type
	a (Lnet/minecraft/server/ISourceBlock;)V playSound
	a (Lnet/minecraft/server/ISourceBlock;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; execute
net/minecraft/server/DispenseBehaviorItem net/minecraft/core/dispenser/DefaultDispenseItemBehavior
	a (Lnet/minecraft/server/ISourceBlock;)V playSound
	a (Lnet/minecraft/server/ISourceBlock;Lnet/minecraft/server/EnumDirection;)V playAnimation
	a (Lnet/minecraft/server/ISourceBlock;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; execute
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/ItemStack;ILnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IPosition;)V spawnItem
net/minecraft/server/DispenseBehaviorMaybe net/minecraft/core/dispenser/OptionalDispenseItemBehavior
	dispensed success
	a (Lnet/minecraft/server/ISourceBlock;)V playSound
net/minecraft/server/DispenseBehaviorProjectile net/minecraft/core/dispenser/AbstractProjectileDispenseBehavior
	a ()F getUncertainty
	a (Lnet/minecraft/server/ISourceBlock;)V playSound
	a (Lnet/minecraft/server/ISourceBlock;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; execute
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/IPosition;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/IProjectile; getProjectile
net/minecraft/server/DispenseBehaviorShulkerBox net/minecraft/core/dispenser/ShulkerBoxDispenseBehavior
	a (Lnet/minecraft/server/ISourceBlock;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; execute
net/minecraft/server/DispenserRegistry net/minecraft/server/Bootstrap
	a STDOUT
	b isBootstrapped
	c LOGGER
	a (Ljava/lang/String;)V realStdoutPrintln
	a (Lnet/minecraft/server/IRegistry;Ljava/util/function/Function;Ljava/util/Set;)V checkTranslations
	b ()Ljava/util/Set; getMissingTranslations
	c ()V validate
	d ()V wrapStreams
	init ()V bootStrap
net/minecraft/server/DoubleBlockFinder net/minecraft/world/level/block/DoubleBlockCombiner
	a (Lnet/minecraft/server/TileEntityTypes;Ljava/util/function/Function;Ljava/util/function/Function;Lnet/minecraft/server/BlockStateDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Ljava/util/function/BiPredicate;)Lnet/minecraft/server/DoubleBlockFinder$Result; combineWithNeigbour
net/minecraft/server/DoubleBlockFinder$BlockType net/minecraft/world/level/block/DoubleBlockCombiner$BlockType
	d $VALUES
net/minecraft/server/DoubleBlockFinder$Combiner net/minecraft/world/level/block/DoubleBlockCombiner$Combiner
	a (Ljava/lang/Object;)Ljava/lang/Object; acceptSingle
	a (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; acceptDouble
	b ()Ljava/lang/Object; acceptNone
net/minecraft/server/DoubleBlockFinder$Result net/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult
net/minecraft/server/DoubleBlockFinder$Result$Double net/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult$Double
	a first
	b second
net/minecraft/server/DoubleBlockFinder$Result$Single net/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult$Single
	a single
net/minecraft/server/DoubleListOffset net/minecraft/world/phys/shapes/OffsetDoubleList
	a delegate
	b offset
net/minecraft/server/DragonControllerCharge net/minecraft/world/entity/boss/enderdragon/phases/DragonChargePlayerPhase
	b LOGGER
	c targetLocation
	d timeSinceCharge
	a (Lnet/minecraft/server/Vec3D;)V setTarget
	c ()V doServerTick
	d ()V begin
	f ()F getFlySpeed
	g ()Lnet/minecraft/server/Vec3D; getFlyTargetLocation
	i ()Lnet/minecraft/server/DragonControllerPhase; getPhase
net/minecraft/server/DragonControllerDying net/minecraft/world/entity/boss/enderdragon/phases/DragonDeathPhase
	b targetLocation
	c time
	b ()V doClientTick
	c ()V doServerTick
	d ()V begin
	f ()F getFlySpeed
	g ()Lnet/minecraft/server/Vec3D; getFlyTargetLocation
	i ()Lnet/minecraft/server/DragonControllerPhase; getPhase
net/minecraft/server/DragonControllerFly net/minecraft/world/entity/boss/enderdragon/phases/DragonTakeoffPhase
	b firstTick
	c currentPath
	d targetLocation
	c ()V doServerTick
	d ()V begin
	g ()Lnet/minecraft/server/Vec3D; getFlyTargetLocation
	i ()Lnet/minecraft/server/DragonControllerPhase; getPhase
	j ()V findNewTarget
	k ()V navigateToNextPathNode
net/minecraft/server/DragonControllerHold net/minecraft/world/entity/boss/enderdragon/phases/DragonHoldingPatternPhase
	b NEW_TARGET_TARGETING
	c currentPath
	d targetLocation
	e clockwise
	a (Lnet/minecraft/server/EntityEnderCrystal;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/DamageSource;Lnet/minecraft/server/EntityHuman;)V onCrystalDestroyed
	a (Lnet/minecraft/server/EntityHuman;)V strafePlayer
	c ()V doServerTick
	d ()V begin
	g ()Lnet/minecraft/server/Vec3D; getFlyTargetLocation
	i ()Lnet/minecraft/server/DragonControllerPhase; getPhase
	j ()V findNewTarget
	k ()V navigateToNextPathNode
net/minecraft/server/DragonControllerHover net/minecraft/world/entity/boss/enderdragon/phases/DragonHoverPhase
	b targetLocation
	a ()Z isSitting
	c ()V doServerTick
	d ()V begin
	f ()F getFlySpeed
	g ()Lnet/minecraft/server/Vec3D; getFlyTargetLocation
	i ()Lnet/minecraft/server/DragonControllerPhase; getPhase
net/minecraft/server/DragonControllerLandedAttack net/minecraft/world/entity/boss/enderdragon/phases/DragonSittingAttackingPhase
	b attackingTicks
	b ()V doClientTick
	c ()V doServerTick
	d ()V begin
	i ()Lnet/minecraft/server/DragonControllerPhase; getPhase
net/minecraft/server/DragonControllerLandedFlame net/minecraft/world/entity/boss/enderdragon/phases/DragonSittingFlamingPhase
	b flameTicks
	c flameCount
	d flame
	b ()V doClientTick
	c ()V doServerTick
	d ()V begin
	e ()V end
	i ()Lnet/minecraft/server/DragonControllerPhase; getPhase
	j ()V resetFlameCount
net/minecraft/server/DragonControllerLandedSearch net/minecraft/world/entity/boss/enderdragon/phases/DragonSittingScanningPhase
	b CHARGE_TARGETING
	c scanTargeting
	d scanningTime
	c ()V doServerTick
	d ()V begin
	i ()Lnet/minecraft/server/DragonControllerPhase; getPhase
net/minecraft/server/DragonControllerLanding net/minecraft/world/entity/boss/enderdragon/phases/DragonLandingPhase
	b targetLocation
	b ()V doClientTick
	c ()V doServerTick
	d ()V begin
	f ()F getFlySpeed
	g ()Lnet/minecraft/server/Vec3D; getFlyTargetLocation
	h ()F getTurnSpeed
	i ()Lnet/minecraft/server/DragonControllerPhase; getPhase
net/minecraft/server/DragonControllerLandingFly net/minecraft/world/entity/boss/enderdragon/phases/DragonLandingApproachPhase
	b NEAR_EGG_TARGETING
	c currentPath
	d targetLocation
	c ()V doServerTick
	d ()V begin
	g ()Lnet/minecraft/server/Vec3D; getFlyTargetLocation
	i ()Lnet/minecraft/server/DragonControllerPhase; getPhase
	j ()V findNewTarget
	k ()V navigateToNextPathNode
net/minecraft/server/DragonControllerManager net/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhaseManager
	a LOGGER
	currentDragonController currentPhase
	dragonControllers phases
	enderDragon dragon
	a ()Lnet/minecraft/server/IDragonController; getCurrentPhase
	b (Lnet/minecraft/server/DragonControllerPhase;)Lnet/minecraft/server/IDragonController; getPhase
	setControllerPhase (Lnet/minecraft/server/DragonControllerPhase;)V setPhase
net/minecraft/server/DragonControllerPhase net/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase
	HOVER HOVERING
	l phases
	m instanceClass
	n id
	o name
	a ()Ljava/lang/reflect/Constructor; getConstructor
	a (Ljava/lang/Class;Ljava/lang/String;)Lnet/minecraft/server/DragonControllerPhase; create
	a (Lnet/minecraft/server/EntityEnderDragon;)Lnet/minecraft/server/IDragonController; createInstance
	b ()I getId
	c ()I getCount
net/minecraft/server/DragonControllerStrafe net/minecraft/world/entity/boss/enderdragon/phases/DragonStrafePlayerPhase
	b LOGGER
	c fireballCharge
	d currentPath
	e targetLocation
	f attackTarget
	g holdingPatternClockwise
	a (Lnet/minecraft/server/EntityLiving;)V setTarget
	c ()V doServerTick
	d ()V begin
	g ()Lnet/minecraft/server/Vec3D; getFlyTargetLocation
	i ()Lnet/minecraft/server/DragonControllerPhase; getPhase
	j ()V findNewTarget
	k ()V navigateToNextPathNode
net/minecraft/server/DynamicDeserializer net/minecraft/util/Deserializer
	a LOGGER
	a (Lcom/mojang/datafixers/Dynamic;Lnet/minecraft/server/IRegistry;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object; deserialize
net/minecraft/server/DynamicOpsNBT net/minecraft/nbt/NbtOps
	a INSTANCE
	a ()Lnet/minecraft/server/NBTBase; empty
	a (B)Lnet/minecraft/server/NBTBase; createByte
	a (D)Lnet/minecraft/server/NBTBase; createDouble
	a (F)Lnet/minecraft/server/NBTBase; createFloat
	a (I)Lnet/minecraft/server/NBTBase; createInt
	a (J)Lnet/minecraft/server/NBTBase; createLong
	a (Ljava/lang/Number;)Lnet/minecraft/server/NBTBase; createNumeric
	a (Ljava/lang/String;)Lnet/minecraft/server/NBTBase; createString
	a (Ljava/nio/ByteBuffer;)Lnet/minecraft/server/NBTBase; createByteList
	a (Ljava/util/Map;)Lnet/minecraft/server/NBTBase; createMap
	a (Ljava/util/stream/IntStream;)Lnet/minecraft/server/NBTBase; createIntList
	a (Ljava/util/stream/LongStream;)Lnet/minecraft/server/NBTBase; createLongList
	a (Ljava/util/stream/Stream;)Lnet/minecraft/server/NBTBase; createList
	a (Lnet/minecraft/server/NBTBase;)Lcom/mojang/datafixers/types/Type; getType
	a (Lnet/minecraft/server/NBTBase;Ljava/lang/String;)Lnet/minecraft/server/NBTBase; remove
	a (Lnet/minecraft/server/NBTBase;Lnet/minecraft/server/NBTBase;)Lnet/minecraft/server/NBTBase; mergeInto
	a (Lnet/minecraft/server/NBTBase;Lnet/minecraft/server/NBTBase;Lnet/minecraft/server/NBTBase;)Lnet/minecraft/server/NBTBase; mergeInto
	a (S)Lnet/minecraft/server/NBTBase; createShort
	a (Z)Lnet/minecraft/server/NBTBase; createBoolean
	b (Lnet/minecraft/server/NBTBase;)Ljava/util/Optional; getNumberValue
	b (Lnet/minecraft/server/NBTBase;Lnet/minecraft/server/NBTBase;)Lnet/minecraft/server/NBTBase; merge
	c (Lnet/minecraft/server/NBTBase;)Ljava/util/Optional; getStringValue
	d (Lnet/minecraft/server/NBTBase;)Ljava/util/Optional; getMapValues
	e (Lnet/minecraft/server/NBTBase;)Ljava/util/Optional; getStream
	f (Lnet/minecraft/server/NBTBase;)Ljava/util/Optional; getByteBuffer
	g (Lnet/minecraft/server/NBTBase;)Ljava/util/Optional; getIntStream
	h (Lnet/minecraft/server/NBTBase;)Ljava/util/Optional; getLongStream
net/minecraft/server/EULA net/minecraft/server/Eula
	a LOGGER
	b file
	c agreed
	a ()Z hasAgreedToEULA
	b ()Z readFile
	c ()V saveDefaults
net/minecraft/server/Enchantment net/minecraft/world/item/enchantment/Enchantment
	a slots
	c descriptionId
	d rarity
	itemTarget category
	a (I)I getMinCost
	a (ILnet/minecraft/server/DamageSource;)I getDamageProtection
	a (ILnet/minecraft/server/EnumMonsterType;)F getDamageBonus
	a (Lnet/minecraft/server/Enchantment;)Z checkCompatibility
	a (Lnet/minecraft/server/EntityLiving;)Ljava/util/Map; getSlotItems
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/Entity;I)V doPostAttack
	b (I)I getMaxCost
	b (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/Entity;I)V doPostHurt
	c ()Z isCurse
	c (I)Lnet/minecraft/server/Enchantment; byId
	d ()Lnet/minecraft/server/Enchantment$Rarity; getRarity
	d (I)Lnet/minecraft/server/IChatBaseComponent; getFullname
	f ()Ljava/lang/String; getOrCreateDescriptionId
	g ()Ljava/lang/String; getDescriptionId
	getStartLevel ()I getMinLevel
	isCompatible (Lnet/minecraft/server/Enchantment;)Z isCompatibleWith
	isTreasure ()Z isTreasureOnly
net/minecraft/server/Enchantment$Rarity net/minecraft/world/item/enchantment/Enchantment$Rarity
	e weight
	f $VALUES
	a ()I getWeight
net/minecraft/server/EnchantmentArrowDamage net/minecraft/world/item/enchantment/ArrowDamageEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	b (I)I getMaxCost
net/minecraft/server/EnchantmentArrowKnockback net/minecraft/world/item/enchantment/ArrowKnockbackEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	b (I)I getMaxCost
net/minecraft/server/EnchantmentBinding net/minecraft/world/item/enchantment/BindingCurseEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	b ()Z isTreasureOnly
	b (I)I getMaxCost
	c ()Z isCurse
net/minecraft/server/EnchantmentDepthStrider net/minecraft/world/item/enchantment/WaterWalkerEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	a (Lnet/minecraft/server/Enchantment;)Z checkCompatibility
	b (I)I getMaxCost
net/minecraft/server/EnchantmentDigging net/minecraft/world/item/enchantment/DiggingEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	a (Lnet/minecraft/server/ItemStack;)Z canEnchant
	b (I)I getMaxCost
net/minecraft/server/EnchantmentDurability net/minecraft/world/item/enchantment/DigDurabilityEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	a (Lnet/minecraft/server/ItemStack;)Z canEnchant
	a (Lnet/minecraft/server/ItemStack;ILjava/util/Random;)Z shouldIgnoreDurabilityDrop
	b (I)I getMaxCost
net/minecraft/server/EnchantmentFire net/minecraft/world/item/enchantment/FireAspectEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	b (I)I getMaxCost
net/minecraft/server/EnchantmentFlameArrows net/minecraft/world/item/enchantment/ArrowFireEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	b (I)I getMaxCost
net/minecraft/server/EnchantmentFrostWalker net/minecraft/world/item/enchantment/FrostWalkerEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	a (Lnet/minecraft/server/Enchantment;)Z checkCompatibility
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;I)V onEntityMoved
	b ()Z isTreasureOnly
	b (I)I getMaxCost
net/minecraft/server/EnchantmentInfiniteArrows net/minecraft/world/item/enchantment/ArrowInfiniteEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	a (Lnet/minecraft/server/Enchantment;)Z checkCompatibility
	b (I)I getMaxCost
net/minecraft/server/EnchantmentKnockback net/minecraft/world/item/enchantment/KnockbackEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	b (I)I getMaxCost
net/minecraft/server/EnchantmentLootBonus net/minecraft/world/item/enchantment/LootBonusEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	a (Lnet/minecraft/server/Enchantment;)Z checkCompatibility
	b (I)I getMaxCost
net/minecraft/server/EnchantmentLure net/minecraft/world/item/enchantment/FishingSpeedEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	b (I)I getMaxCost
net/minecraft/server/EnchantmentManager net/minecraft/world/item/enchantment/EnchantmentHelper
	a (ILnet/minecraft/server/ItemStack;Z)Ljava/util/List; getAvailableEnchantmentResults
	a (Lbhw$a;Ljava/lang/Iterable;)V runIterationOnInventory
	a (Lbhw$a;Lnet/minecraft/server/ItemStack;)V runIterationOnItem
	a (Ljava/lang/Iterable;Lnet/minecraft/server/DamageSource;)I getDamageProtection
	a (Ljava/util/Collection;Lnet/minecraft/server/Enchantment;)Z isEnchantmentCompatible
	a (Ljava/util/List;Lnet/minecraft/server/WeightedRandomEnchant;)V filterCompatibleEnchantments
	a (Ljava/util/Map;Lnet/minecraft/server/ItemStack;)V setEnchantments
	a (Ljava/util/Random;IILnet/minecraft/server/ItemStack;)I getEnchantmentCost
	a (Ljava/util/Random;Lnet/minecraft/server/ItemStack;IZ)Lnet/minecraft/server/ItemStack; enchantItem
	a (Lnet/minecraft/server/Enchantment;Lnet/minecraft/server/EntityLiving;)I getEnchantmentLevel
	a (Lnet/minecraft/server/EntityLiving;)F getSweepingDamageRatio
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/Entity;)V doPostHurtEffects
	a (Lnet/minecraft/server/ItemStack;)Ljava/util/Map; getEnchantments
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumMonsterType;)F getDamageBonus
	a (Lnet/minecraft/server/NBTTagList;)Ljava/util/Map; deserializeEnchantments
	b (Ljava/util/Random;Lnet/minecraft/server/ItemStack;IZ)Ljava/util/List; selectEnchantment
	b (Lnet/minecraft/server/Enchantment;Lnet/minecraft/server/EntityLiving;)Ljava/util/Map$Entry; getRandomItemWith
	b (Lnet/minecraft/server/EntityLiving;)I getKnockbackBonus
	b (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/Entity;)V doPostDamageEffects
	b (Lnet/minecraft/server/ItemStack;)I getFishingLuckBonus
	c (Lnet/minecraft/server/ItemStack;)I getFishingSpeedBonus
	d (Lnet/minecraft/server/ItemStack;)Z hasBindingCurse
	e (Lnet/minecraft/server/EntityLiving;)I getDepthStrider
	f (Lnet/minecraft/server/ItemStack;)I getLoyalty
	g (Lnet/minecraft/server/EntityLiving;)I getMobLooting
	g (Lnet/minecraft/server/ItemStack;)I getRiptide
	getDigSpeedEnchantmentLevel (Lnet/minecraft/server/EntityLiving;)I getBlockEfficiency
	getEnchantmentLevel (Lnet/minecraft/server/Enchantment;Lnet/minecraft/server/ItemStack;)I getItemEnchantmentLevel
	getFireAspectEnchantmentLevel (Lnet/minecraft/server/EntityLiving;)I getFireAspect
	getOxygenEnchantmentLevel (Lnet/minecraft/server/EntityLiving;)I getRespiration
	h (Lnet/minecraft/server/EntityLiving;)Z hasAquaAffinity
	h (Lnet/minecraft/server/ItemStack;)Z hasChanneling
	i (Lnet/minecraft/server/EntityLiving;)Z hasFrostWalker
	shouldNotDrop (Lnet/minecraft/server/ItemStack;)Z hasVanishingCurse
net/minecraft/server/EnchantmentMending net/minecraft/world/item/enchantment/MendingEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	b ()Z isTreasureOnly
	b (I)I getMaxCost
net/minecraft/server/EnchantmentMultishot net/minecraft/world/item/enchantment/MultiShotEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	a (Lnet/minecraft/server/Enchantment;)Z checkCompatibility
	b (I)I getMaxCost
net/minecraft/server/EnchantmentOxygen net/minecraft/world/item/enchantment/OxygenEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	b (I)I getMaxCost
net/minecraft/server/EnchantmentPiercing net/minecraft/world/item/enchantment/ArrowPiercingEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	a (Lnet/minecraft/server/Enchantment;)Z checkCompatibility
	b (I)I getMaxCost
net/minecraft/server/EnchantmentProtection net/minecraft/world/item/enchantment/ProtectionEnchantment
	a type
	a ()I getMaxLevel
	a (I)I getMinCost
	a (ILnet/minecraft/server/DamageSource;)I getDamageProtection
	a (Lnet/minecraft/server/Enchantment;)Z checkCompatibility
	a (Lnet/minecraft/server/EntityLiving;D)D getExplosionKnockbackAfterDampener
	a (Lnet/minecraft/server/EntityLiving;I)I getFireAfterDampener
	b (I)I getMaxCost
net/minecraft/server/EnchantmentProtection$DamageType net/minecraft/world/item/enchantment/ProtectionEnchantment$Type
	f name
	g minCost
	h levelCost
	i $VALUES
	a ()Ljava/lang/String; getName
	b ()I getMinCost
	c ()I getLevelCost
net/minecraft/server/EnchantmentQuickCharge net/minecraft/world/item/enchantment/QuickChargeEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	b (I)I getMaxCost
net/minecraft/server/EnchantmentSilkTouch net/minecraft/world/item/enchantment/UntouchingEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	a (Lnet/minecraft/server/Enchantment;)Z checkCompatibility
	b (I)I getMaxCost
net/minecraft/server/EnchantmentSlotType net/minecraft/world/item/enchantment/EnchantmentCategory
	o $VALUES
net/minecraft/server/EnchantmentSweeping net/minecraft/world/item/enchantment/SweepingEdgeEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	b (I)I getMaxCost
	e (I)F getSweepingDamageRatio
net/minecraft/server/EnchantmentThorns net/minecraft/world/item/enchantment/ThornsEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	a (ILjava/util/Random;)Z shouldHit
	a (Lnet/minecraft/server/ItemStack;)Z canEnchant
	b (I)I getMaxCost
	b (ILjava/util/Random;)I getDamage
	b (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/Entity;I)V doPostHurt
net/minecraft/server/EnchantmentTridentChanneling net/minecraft/world/item/enchantment/TridentChannelingEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	a (Lnet/minecraft/server/Enchantment;)Z checkCompatibility
	b (I)I getMaxCost
net/minecraft/server/EnchantmentTridentImpaling net/minecraft/world/item/enchantment/TridentImpalerEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	a (ILnet/minecraft/server/EnumMonsterType;)F getDamageBonus
	b (I)I getMaxCost
net/minecraft/server/EnchantmentTridentLoyalty net/minecraft/world/item/enchantment/TridentLoyaltyEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	a (Lnet/minecraft/server/Enchantment;)Z checkCompatibility
	b (I)I getMaxCost
net/minecraft/server/EnchantmentTridentRiptide net/minecraft/world/item/enchantment/TridentRiptideEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	a (Lnet/minecraft/server/Enchantment;)Z checkCompatibility
	b (I)I getMaxCost
net/minecraft/server/EnchantmentVanishing net/minecraft/world/item/enchantment/VanishingCurseEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	b ()Z isTreasureOnly
	b (I)I getMaxCost
	c ()Z isCurse
net/minecraft/server/EnchantmentWaterWorker net/minecraft/world/item/enchantment/WaterWorkerEnchantment
	a ()I getMaxLevel
	a (I)I getMinCost
	b (I)I getMaxCost
net/minecraft/server/EnchantmentWeaponDamage net/minecraft/world/item/enchantment/DamageEnchantment
	a type
	d NAMES
	e MIN_COST
	f LEVEL_COST
	g LEVEL_COST_SPAN
	a ()I getMaxLevel
	a (I)I getMinCost
	a (ILnet/minecraft/server/EnumMonsterType;)F getDamageBonus
	a (Lnet/minecraft/server/Enchantment;)Z checkCompatibility
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/Entity;I)V doPostAttack
	a (Lnet/minecraft/server/ItemStack;)Z canEnchant
	b (I)I getMaxCost
net/minecraft/server/Enchantments net/minecraft/world/item/enchantment/Enchantments
	ARROW_DAMAGE POWER_ARROWS
	ARROW_FIRE FLAMING_ARROWS
	ARROW_INFINITE INFINITY_ARROWS
	ARROW_KNOCKBACK PUNCH_ARROWS
	DAMAGE_ALL SHARPNESS
	DAMAGE_ARTHROPODS BANE_OF_ARTHROPODS
	DAMAGE_UNDEAD SMITE
	DIG_SPEED BLOCK_EFFICIENCY
	DURABILITY UNBREAKING
	L ARMOR_SLOTS
	LOOT_BONUS_BLOCKS BLOCK_FORTUNE
	LOOT_BONUS_MOBS MOB_LOOTING
	LUCK FISHING_LUCK
	LURE FISHING_SPEED
	OXYGEN RESPIRATION
	PROTECTION_ENVIRONMENTAL ALL_DAMAGE_PROTECTION
	PROTECTION_EXPLOSIONS BLAST_PROTECTION
	PROTECTION_FALL FALL_PROTECTION
	PROTECTION_FIRE FIRE_PROTECTION
	PROTECTION_PROJECTILE PROJECTILE_PROTECTION
	SWEEPING SWEEPING_EDGE
	WATER_WORKER AQUA_AFFINITY
	a (Ljava/lang/String;Lnet/minecraft/server/Enchantment;)Lnet/minecraft/server/Enchantment; register
net/minecraft/server/EnderDragonBattle net/minecraft/world/level/dimension/end/EndDragonFight
	a LOGGER
	b VALID_PLAYER
	bossBattle dragonEvent
	d level
	e gateways
	f exitPortalPattern
	g ticksSinceDragonSeen
	h crystalsAlive
	i ticksSinceCrystalsScanned
	j ticksSinceLastPlayerScan
	k dragonKilled
	l previouslyKilled
	m dragonUUID
	n needsStateScanning
	o portalLocation
	p respawnStage
	q respawnTime
	r respawnCrystals
	a ()Lnet/minecraft/server/NBTTagCompound; saveData
	a (Ljava/util/List;)V respawnDragon
	a (Lnet/minecraft/server/BlockPosition;)V spawnNewGateway
	a (Lnet/minecraft/server/EntityEnderCrystal;Lnet/minecraft/server/DamageSource;)V onCrystalDestroyed
	a (Lnet/minecraft/server/EntityEnderDragon;)V setDragonKilled
	a (Lnet/minecraft/server/EnumDragonRespawn;)V setRespawnStage
	a (Z)V spawnExitPortal
	b ()V tick
	b (Lnet/minecraft/server/EntityEnderDragon;)V updateDragon
	c ()I getCrystalsAlive
	d ()Z hasPreviouslyKilledDragon
	e ()V tryRespawn
	f ()V resetSpikeCrystals
	g ()V scanState
	h ()V findOrCreateDragon
	i ()Z hasActiveExitPortal
	j ()Lnet/minecraft/server/ShapeDetector$ShapeDetectorCollection; findExitPortal
	k ()Z isArenaLoaded
	l ()V updatePlayers
	m ()V updateCrystalCount
	n ()V spawnNewGateway
	o ()Lnet/minecraft/server/EntityEnderDragon; createNewDragon
net/minecraft/server/Entity net/minecraft/world/entity/Entity
	A walkDistO
	AIR_TICKS DATA_AIR_SUPPLY_ID
	B walkDist
	C moveDist
	E xOld
	F yOld
	G zOld
	H maxUpStep
	J pushthrough
	N waterHeight
	O wasUnderWater
	POSE DATA_POSE
	T DATA_SHARED_FLAGS_ID
	Z xp
	aA DATA_CUSTOM_NAME_VISIBLE
	aB DATA_SILENT
	aC DATA_NO_GRAVITY
	aE tags
	aF teleported
	aG pistonDeltas
	aH pistonDeltasGameTime
	aa yp
	ab zp
	ac noCulling
	af isInsidePortal
	ag portalTime
	ai portalEntranceBlock
	aj portalEntranceOffset
	ak portalEntranceForwards
	am stringUUID
	attachedToPlayer forcedLoading
	av nextStep
	aw nextFlap
	az DATA_CUSTOM_NAME
	boundingBox bb
	c EMPTY_LIST
	chunkX xChunk
	chunkY yChunk
	chunkZ zChunk
	d INITIAL_AABB
	datawatcher entityData
	dead removed
	e viewScale
	entityCount ENTITY_COUNTER
	f type
	fireTicks remainingFireTicks
	h LOGGER
	headHeight eyeHeight
	i blocksBuilding
	impulse hasImpulse
	inLava isInLava
	inWater wasInWater
	j boardingCooldown
	justCreated firstTick
	lastPitch xRotO
	lastX xo
	lastY yo
	lastYaw yRotO
	lastZ zo
	locX x
	locY y
	locZ z
	mot deltaMovement
	noDamageTicks invulnerableTime
	noclip noPhysics
	pitch xRot
	portalCooldown changingDimensionDelay
	positionChanged horizontalCollision
	size dimensions
	ticksLived tickCount
	uniqueID uuid
	v verticalCollision
	velocityChanged hurtMarked
	w collision
	world level
	y stuckSpeedMultiplier
	yaw yRot
	E ()V processDimensionDelay
	I_ ()Z shouldInformAdmins
	L ()Lnet/minecraft/server/Packet; getAddEntityPacket
	M ()Lnet/minecraft/server/IChatBaseComponent; getName
	O ()Lnet/minecraft/server/IChatBaseComponent; getCustomName
	P ()I getTeamColor
	W ()V resetPos
	Z ()V reapplyPosition
	a ()Z acceptsSuccess
	a (B)V handleEntityEvent
	a (D)Z shouldRenderAtSqrDistance
	a (DD)V turn
	a (DDDFFIZ)V lerpTo
	a (DFZ)Lnet/minecraft/server/MovingObjectPosition; pick
	a (DZLnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;)V checkFallDamage
	a (FI)V lerpHeadTo
	a (FLnet/minecraft/server/Vec3D;)V moveRelative
	a (Lakn$a;)V repositionDirectPassengers
	a (Ljava/lang/Class;)Z hasPassenger
	a (Ljava/util/UUID;)V setUUID
	a (Lnet/minecraft/server/ArgumentAnchor$Anchor;Lnet/minecraft/server/Vec3D;)V lookAt
	a (Lnet/minecraft/server/AxisAlignedBB;)V setBoundingBox
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	a (Lnet/minecraft/server/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/DimensionManager;)Lnet/minecraft/server/Entity; changeDimension
	a (Lnet/minecraft/server/Entity;ILnet/minecraft/server/DamageSource;)V awardKillScore
	a (Lnet/minecraft/server/Entity;Lakn$a;)V positionRider
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/AxisAlignedBB;Lnet/minecraft/server/World;Lnet/minecraft/server/VoxelShapeCollision;Lnet/minecraft/server/StreamAccumulator;)Lnet/minecraft/server/Vec3D; collideBoundingBoxHeuristically
	a (Lnet/minecraft/server/Entity;Z)Z startRiding
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; interactAt
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/Entity;)V doEnchantDamageEffects
	a (Lnet/minecraft/server/EntityPlayer;)Z broadcastToPlayer
	a (Lnet/minecraft/server/EntityPose;)Lnet/minecraft/server/EntitySize; getDimensions
	a (Lnet/minecraft/server/EnumBlockMirror;)F mirror
	a (Lnet/minecraft/server/EnumBlockRotation;)F rotate
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;D)D applyPistonMovementRestriction
	a (Lnet/minecraft/server/Explosion;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;F)Z shouldBlockExplode
	a (Lnet/minecraft/server/Explosion;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/Fluid;F)F getBlockExplosionResistance
	a (Lnet/minecraft/server/IBlockData;)V onInsideBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/Vec3D;)V makeStuckInBlock
	a (Lnet/minecraft/server/IChatBaseComponent;)V sendMessage
	a (Lnet/minecraft/server/IMaterial;)Lnet/minecraft/server/EntityItem; spawnAtLocation
	a (Lnet/minecraft/server/IMaterial;I)Lnet/minecraft/server/EntityItem; spawnAtLocation
	a (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/EntityItem; spawnAtLocation
	a (Lnet/minecraft/server/ItemStack;F)Lnet/minecraft/server/EntityItem; spawnAtLocation
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/ScoreboardTeamBase;)Z isAlliedTo
	a (Lnet/minecraft/server/SoundEffect;FF)V playSound
	a (Lnet/minecraft/server/Tag;)Z isUnderLiquid
	a (Lnet/minecraft/server/Tag;Z)Z isUnderLiquid
	a (Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/Vec3D; limitPistonMovement
	a (Lnet/minecraft/server/Vec3D;FF)Lnet/minecraft/server/Vec3D; getInputVector
	a (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/AxisAlignedBB;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/VoxelShapeCollision;Lnet/minecraft/server/StreamAccumulator;)Lnet/minecraft/server/Vec3D; collideBoundingBox
	a (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/AxisAlignedBB;Lnet/minecraft/server/StreamAccumulator;)Lnet/minecraft/server/Vec3D; collideBoundingBoxLegacy
	a (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/EnumMoveType;)Lnet/minecraft/server/Vec3D; maybeBackOffFromEdge
	a (ZLjava/util/Set;)V fillIndirectPassengers
	a ([D)Lnet/minecraft/server/NBTTagList; newDoubleList
	a ([F)Lnet/minecraft/server/NBTTagList; newFloatList
	aA ()Z isUnderWater
	aB ()V updateSwimming
	aC ()Z updateInWaterState
	aD ()V doWaterSplashEffect
	aE ()V updateSprintingState
	aF ()V doSprintParticleEffect
	aG ()V setInLava
	aH ()Z isInLava
	aI ()F getBrightness
	aM ()Z repositionEntityAfterLoad
	aR ()D getRidingHeight
	aS ()D getRideHeight
	aT ()Z showVehicleHealth
	aV ()F getPickRadius
	aX ()Lnet/minecraft/server/Vec2F; getRotationVector
	aY ()Lnet/minecraft/server/Vec3D; getForward
	a_ (ILnet/minecraft/server/ItemStack;)Z setSlot
	ab ()I getPortalWaitTime
	ad ()I getRemainingFireTicks
	addScoreboardTag (Ljava/lang/String;)Z addTag
	af ()V outOfWorld
	ag ()Lnet/minecraft/server/BlockPosition; getOnPos
	ah ()F getBlockJumpFactor
	ai ()F getBlockSpeedFactor
	aj ()Lnet/minecraft/server/BlockPosition; getBlockPosBelowThatAffectsMyMovement
	ak ()F nextStep
	appendEntityCrashDetails (Lnet/minecraft/server/CrashReportSystemDetails;)V fillCrashReportCategory
	aq ()Z makeFlySound
	au ()Lnet/minecraft/server/AxisAlignedBB; getCollideBox
	ay ()Z isInWaterRainOrBubble
	az ()Z isInWaterOrBubble
	b ()Z acceptsFailure
	b (D)V setViewScale
	b (DDD)V forceMove
	b (FF)Z causeFallDamage
	b (Lnet/minecraft/server/AxisAlignedBB;)Z isFree
	b (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z interact
	b (Lnet/minecraft/server/EntityLiving;)V killed
	b (Lnet/minecraft/server/EntityPlayer;)V startSeenByPlayer
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/Tag;)Z checkAndHandleWater
	b (Lnet/minecraft/server/Vec3D;)D getHorizontalDistanceSqr
	b (Z)V setDropContainerContent
	bA ()Z isAttackable
	bD ()I getMaxFallDistance
	bE ()Lnet/minecraft/server/BlockPosition; getPortalEntranceBlock
	bI ()Z displayFireAnimation
	bM ()Z isPushedByWater
	bN ()D getViewScale
	bP ()Z shouldShowName
	bS ()Lnet/minecraft/server/ChatHoverable; createHoverEvent
	bU ()Lnet/minecraft/server/AxisAlignedBB; getBoundingBoxForCulling
	bX ()Lnet/minecraft/server/Vec3D; getCommandSenderWorldPosition
	ba ()I getDimensionChangingDelay
	bb ()V animateHurt
	bc ()Ljava/lang/Iterable; getHandSlots
	be ()Ljava/lang/Iterable; getAllSlots
	bi ()Z rideableUnderWater
	bk ()Z isSteppingCarefully
	bl ()Z isSuppressingBounce
	bm ()Z isDiscrete
	bn ()Z isDescending
	bo ()Z isCrouching
	br ()Z isVisuallySwimming
	bs ()Z isVisuallyCrawling
	bt ()Z isGlowing
	burnFromLava ()V lavaHurt
	bw ()I getMaxAirSupply
	by ()Lnet/minecraft/server/IChatBaseComponent; getTypeName
	c (D)D getX
	c (DDD)V setPacketCoordinates
	c (FF)Lnet/minecraft/server/Vec3D; calculateViewVector
	c (Lnet/minecraft/server/BlockPosition;)V handleInsidePortal
	c (Lnet/minecraft/server/EntityHuman;)Z isInvisibleTo
	c (Lnet/minecraft/server/EntityPlayer;)V stopSeenByPlayer
	c (Lnet/minecraft/server/EntityPose;)Z canEnterPose
	c (Lnet/minecraft/server/IChatBaseComponent;)V removeAction
	c (Lnet/minecraft/server/NBTTagCompound;)Z saveAsPassenger
	c (Lnet/minecraft/server/Vec3D;)D distanceToSqr
	ca ()Z ignoreExplosion
	canPortal ()Z canChangeDimensions
	cb ()Z onlyOpCanSetNbt
	cc ()Z checkAndResetTeleportedFlag
	cg ()Ljava/util/stream/Stream; getSelfAndPassengers
	checkBlockCollisions ()V checkInsideBlocks
	cj ()Z isControlledByLocalInstance
	co ()D getWaterHeight
	collide (Lnet/minecraft/server/Entity;)V push
	cv ()D getRandomY
	d (D)D getRandomX
	d (F)V playSwimSound
	d (FF)Lnet/minecraft/server/Vec3D; calculateUpVector
	d (Lnet/minecraft/server/EntityPose;)Lnet/minecraft/server/AxisAlignedBB; getBoundingBoxForPose
	d (Lnet/minecraft/server/NBTTagCompound;)Z save
	damageEntity (Lnet/minecraft/server/DamageSource;F)Z hurt
	decouple ()V unRide
	die ()V remove
	doPortalTick ()V handleNetherPortal
	e (D)D getY
	e (DDD)Z isFree
	e (F)F playFlySound
	e (I)V setId
	e (Lnet/minecraft/server/EntityPose;)F getEyeHeight
	e (Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/Vec3D; collide
	enderTeleportAndLoad (DDD)V teleportToWithTicket
	enderTeleportTo (DDD)V teleportTo
	entityBaseTick ()V baseTick
	extinguish ()V clearFire
	f (D)D getZ
	f (DDD)V setPosAndOldPos
	f (F)Lnet/minecraft/server/Vec3D; getViewVector
	f (Lnet/minecraft/server/NBTTagCompound;)V load
	g (D)D getRandomZ
	g (DDD)D distanceToSqr
	g (F)F getViewXRot
	g (I)V setRemainingFireTicks
	g (Lnet/minecraft/server/Entity;)F distanceTo
	getAdjustedDirection ()Lnet/minecraft/server/EnumDirection; getMotionDirection
	getAirTicks ()I getAirSupply
	getAllPassengers ()Ljava/util/Collection; getIndirectPassengers
	getArmorItems ()Ljava/lang/Iterable; getArmorSlots
	getChunkCoordinates ()Lnet/minecraft/server/BlockPosition; getCommandSenderBlockPosition
	getCommandListener ()Lnet/minecraft/server/CommandListenerWrapper; createCommandSourceStack
	getCustomNameVisible ()Z isCustomNameVisible
	getDataWatcher ()Lnet/minecraft/server/DataWatcher; getEntityData
	getEntityType ()Lnet/minecraft/server/EntityTypes; getType
	getFlag (I)Z getSharedFlag
	getHeadHeight ()F getEyeHeight
	getHeadHeight (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getEyeHeight
	getHeadRotation ()F getYHeadRot
	getHeadY ()D getEyeY
	getHeight ()F getBbHeight
	getLookDirection ()Lnet/minecraft/server/Vec3D; getLookAngle
	getMaxFireTicks ()I getFireImmuneTicks
	getMinecraftServer ()Lnet/minecraft/server/MinecraftServer; getServer
	getMot ()Lnet/minecraft/server/Vec3D; getDeltaMovement
	getName ()Ljava/lang/String; getScoreboardName
	getPortalDirection ()Lnet/minecraft/server/EnumDirection; getPortalEntranceForwards
	getPortalOffset ()Lnet/minecraft/server/Vec3D; getPortalEntranceOffset
	getPositionVector ()Lnet/minecraft/server/Vec3D; position
	getPushReaction ()Lnet/minecraft/server/EnumPistonReaction; getPistonPushReaction
	getRidingPassenger ()Lnet/minecraft/server/Entity; getControllingPassenger
	getSaveID ()Ljava/lang/String; getEncodeId
	getScoreboardDisplayName ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
	getScoreboardTags ()Ljava/util/Set; getTags
	getScoreboardTeam ()Lnet/minecraft/server/ScoreboardTeamBase; getTeam
	getSoundCategory ()Lnet/minecraft/server/SoundCategory; getSoundSource
	getSoundSplash ()Lnet/minecraft/server/SoundEffect; getSwimSplashSound
	getSoundSplashHighSpeed ()Lnet/minecraft/server/SoundEffect; getSwimHighSpeedSplashSound
	getSoundSwim ()Lnet/minecraft/server/SoundEffect; getSwimSound
	getUniqueID ()Ljava/util/UUID; getUUID
	getUniqueIDString ()Ljava/lang/String; getStringUUID
	getWidth ()F getBbWidth
	getWorld ()Lnet/minecraft/server/World; getCommandSenderWorld
	h (DDD)V push
	h (F)F getViewYRot
	h (Lnet/minecraft/server/Entity;)D distanceToSqr
	h (Z)V setGlowing
	hasSinglePlayerPassenger ()Z hasOnePlayerPassenger
	i (DDD)Z shouldRender
	i (F)Lnet/minecraft/server/Vec3D; getUpVector
	inBlock ()Z isInWall
	initDatawatcher ()V defineSynchedData
	isBurning ()Z isOnFire
	isCollidable ()Z isPushable
	isFireProof ()Z fireImmune
	isIgnoreBlockTrigger ()Z isIgnoringBlockTriggers
	isInteractable ()Z isPickable
	isInvulnerable (Lnet/minecraft/server/DamageSource;)Z isInvulnerableTo
	isSneaking ()Z isShiftKeyDown
	j (DDD)V lerpMotion
	j (F)Lnet/minecraft/server/Vec3D; getEyePosition
	j (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/AxisAlignedBB; getCollideAgainstBox
	j (Z)V onAboveBubbleCol
	k (DDD)V checkInBlock
	k (I)Z hasPermissions
	k (Lnet/minecraft/server/Entity;)V positionRider
	k (Z)V onInsideBubbleColumn
	killEntity ()V kill
	l ()Z isInBubbleColumn
	l (F)V setYBodyRot
	l (Lnet/minecraft/server/Entity;)V onPassengerTurned
	locX ()D getX
	locY ()D getY
	locZ ()D getZ
	m ()V updateWaterState
	n ()V updateUnderWaterState
	n (Lnet/minecraft/server/Entity;)Z canRide
	onLightningStrike (Lnet/minecraft/server/EntityLightning;)V thunderHit
	passengerTick ()V rideTick
	pickup (Lnet/minecraft/server/EntityHuman;)V playerTouch
	playStepSound ()Z isMovementNoisy
	q (Lnet/minecraft/server/Entity;)Z canAddPassenger
	r (Lnet/minecraft/server/Entity;)Z isAlliedTo
	recalcPosition ()V setLocationFromBoundingbox
	removeScoreboardTag (Ljava/lang/String;)Z removeTag
	s (Lnet/minecraft/server/Entity;)Z is
	save (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; saveWithoutId
	setAirTicks (I)V setAirSupply
	setEquipment (Lnet/minecraft/server/EnumItemSlot;Lnet/minecraft/server/ItemStack;)V setItemSlot
	setFlag (IZ)V setSharedFlag
	setHeadRotation (F)V setYHeadRot
	setLocation (DDDFF)V absMoveTo
	setMot (DDD)V setDeltaMovement
	setMot (Lnet/minecraft/server/Vec3D;)V setDeltaMovement
	setOnFire (I)V setSecondsOnFire
	setPosition (DDD)V setPos
	setPositionRaw (DDD)V setPosRaw
	setPositionRotation (DDDFF)V moveTo
	setPositionRotation (Lnet/minecraft/server/BlockPosition;FF)V moveTo
	setSneaking (Z)V setShiftKeyDown
	setYawPitch (FF)V setRot
	spawnIn (Lnet/minecraft/server/World;)V setLevel
	t (Lnet/minecraft/server/Entity;)Z skipAttackInteraction
	u (Lnet/minecraft/server/Entity;)V copyPosition
	updateSize ()V refreshDimensions
	v (Lnet/minecraft/server/Entity;)V restoreFrom
	velocityChanged ()V markHurt
	w (Lnet/minecraft/server/Entity;)Z hasPassenger
	x (Lnet/minecraft/server/Entity;)Z isPassengerOfSameVehicle
	y ()I getPermissionLevel
	y (Lnet/minecraft/server/Entity;)Z hasIndirectPassenger
net/minecraft/server/EntityAIBodyControl net/minecraft/world/entity/ai/control/BodyRotationControl
	a mob
	b headStableTime
	c lastStableYHeadRot
	a ()V clientTick
	b ()V rotateBodyIfNecessary
	c ()V rotateHeadIfNecessary
	d ()V rotateHeadTowardsFront
	e ()Z notCarryingMobPassengers
	f ()Z isMoving
net/minecraft/server/EntityAgeable net/minecraft/world/entity/AgableMob
	b age
	bw DATA_BABY_ID
	c forcedAge
	d forcedAgeTimer
	a (Lnet/minecraft/server/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EntityAgeable;)V onOffspringSpawnedFromEgg
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z mobInteract
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	createChild (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	k ()V aiStep
	l ()V ageBoundaryReached
	setAge (I)V ageUp
	setAge (IZ)V ageUp
	setAgeRaw (I)V setAge
	w_ ()V defineSynchedData
	x_ ()Z isBaby
net/minecraft/server/EntityAmbient net/minecraft/world/entity/ambient/AmbientCreature
	a (Lnet/minecraft/server/EntityHuman;)Z canBeLeashed
net/minecraft/server/EntityAnimal net/minecraft/world/entity/animal/Animal
	breedCause loveCause
	loveTicks inLove
	A ()I getAmbientSoundInterval
	a (B)V handleEntityEvent
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IWorldReader;)F getWalkTargetValue
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z mobInteract
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;)V usePlayerItem
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	aR ()D getRidingHeight
	b (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkAnimalSpawnRules
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	dT ()V customServerAiStep
	damageEntity (Lnet/minecraft/server/DamageSource;F)Z hurt
	ev ()Z canFallInLove
	f (Lnet/minecraft/server/EntityHuman;)V setInLove
	getBreedCause ()Lnet/minecraft/server/EntityPlayer; getLoveCause
	getExpValue (Lnet/minecraft/server/EntityHuman;)I getExperienceReward
	h (D)Z removeWhenFarAway
	i (Lnet/minecraft/server/ItemStack;)Z isFood
	k ()V aiStep
	mate (Lnet/minecraft/server/EntityAnimal;)Z canMate
	setLoveTicks (I)V setInLoveTime
net/minecraft/server/EntityAreaEffectCloud net/minecraft/world/entity/AreaEffectCloud
	COLOR DATA_COLOR
	affectedEntities victims
	ax owner
	ay ownerUUID
	b LOGGER
	c DATA_RADIUS
	e DATA_WAITING
	f DATA_PARTICLE
	hasColor fixedColor
	potionRegistry potion
	A_ ()Lnet/minecraft/server/EnumPistonReaction; getPistonPushReaction
	L ()Lnet/minecraft/server/Packet; getAddEntityPacket
	a (Lnet/minecraft/server/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/EntityPose;)Lnet/minecraft/server/EntitySize; getDimensions
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/PotionRegistry;)V setPotion
	a (Z)V setWaiting
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c (I)V setDurationOnUse
	getSource ()Lnet/minecraft/server/EntityLiving; getOwner
	h ()V tick
	l ()Z isWaiting
	n ()F getRadiusOnUse
	o ()F getRadiusPerTick
	p ()I getDurationOnUse
	q ()I getWaitTime
	r ()V use
	s ()Z canUse
	setColor (I)V setFixedColor
	setSource (Lnet/minecraft/server/EntityLiving;)V setOwner
	v ()Lnet/minecraft/server/PotionRegistry; getPotion
	w ()Ljava/util/List; getEffects
	w_ ()V defineSynchedData
	z ()V updateColor
	z_ ()V refreshDimensions
net/minecraft/server/EntityArmorStand net/minecraft/world/entity/decoration/ArmorStand
	armorStandInvisible invisible
	b DATA_CLIENT_FLAGS
	bB disabledSlots
	bp DATA_RIGHT_LEG_POSE
	bq lastHit
	br DEFAULT_HEAD_POSE
	bs DEFAULT_BODY_POSE
	bt DEFAULT_LEFT_ARM_POSE
	bu DEFAULT_RIGHT_ARM_POSE
	bv DEFAULT_LEFT_LEG_POSE
	bw DEFAULT_RIGHT_LEG_POSE
	bx RIDABLE_MINECARTS
	c DATA_HEAD_POSE
	d DATA_BODY_POSE
	e DATA_LEFT_ARM_POSE
	f DATA_RIGHT_ARM_POSE
	g DATA_LEFT_LEG_POSE
	A ()Z hasPhysics
	A_ ()Lnet/minecraft/server/EnumPistonReaction; getPistonPushReaction
	B ()Lnet/minecraft/server/NBTTagCompound; writePose
	C ()V updateInvisibilityStatus
	C (Lnet/minecraft/server/Entity;)V doPush
	D ()V showBreakingParticles
	F ()V playBrokenSound
	U ()V kill
	a (B)V handleEntityEvent
	a (BIZ)B setBit
	a (D)Z shouldRenderAtSqrDistance
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumItemSlot;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumHand;)Z swapItem
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; interactAt
	a (Lnet/minecraft/server/EntityLightning;)V thunderHit
	a (Lnet/minecraft/server/EntityPose;)Lnet/minecraft/server/EntitySize; getDimensions
	a (Lnet/minecraft/server/EnumItemSlot;Lnet/minecraft/server/ItemStack;)V setItemSlot
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	aK ()Z isPickable
	aL ()Z isPushable
	aR ()D getRidingHeight
	a_ (ILnet/minecraft/server/ItemStack;)Z setSlot
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/EnumItemSlot;)Lnet/minecraft/server/ItemStack; getItemBySlot
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bc ()Ljava/lang/Iterable; getHandSlots
	bd ()Ljava/lang/Iterable; getArmorSlots
	bt ()Z isGlowing
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	ca ()Z ignoreExplosion
	d (Lnet/minecraft/server/EnumItemSlot;)Z isDisabled
	dA ()Lnet/minecraft/server/EnumMainHand; getMainArm
	dM ()Z isAffectedByPotions
	dN ()Z attackable
	dv ()V pushEntities
	dx ()Z isEffectiveAi
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	e (Lnet/minecraft/server/DamageSource;F)V causeDamage
	e (Lnet/minecraft/server/ItemStack;)Z canTakeItem
	e (Lnet/minecraft/server/Vec3D;)V travel
	f (FF)F tickHeadTurn
	f (Lnet/minecraft/server/DamageSource;)V brokenByPlayer
	f (Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/EnumItemSlot; getClickedSlot
	g (Lnet/minecraft/server/DamageSource;)V brokenByAnything
	g (Lnet/minecraft/server/NBTTagCompound;)V readPose
	h ()V tick
	hasArms ()Z isShowArms
	hasBasePlate ()Z isNoBasePlate
	i (Z)V setInvisible
	k (F)V setYHeadRot
	l (F)V setYBodyRot
	o (I)Lnet/minecraft/server/SoundEffect; getFallDamageSound
	r ()Lnet/minecraft/server/Vector3f; getHeadPose
	s ()Lnet/minecraft/server/Vector3f; getBodyPose
	setArms (Z)V setShowArms
	setBasePlate (Z)V setNoBasePlate
	u ()Lnet/minecraft/server/Vector3f; getLeftArmPose
	v ()Lnet/minecraft/server/Vector3f; getRightArmPose
	w ()Lnet/minecraft/server/Vector3f; getLeftLegPose
	w_ ()V defineSynchedData
	x_ ()Z isBaby
	z ()Lnet/minecraft/server/Vector3f; getRightLegPose
	z_ ()V refreshDimensions
net/minecraft/server/EntityArrow net/minecraft/world/entity/projectile/AbstractArrow
	ao ID_FLAGS
	ap PIERCE_LEVEL
	aq lastState
	as flightTime
	av soundEvent
	aw piercingIgnoreEntityIds
	ax piercedAndKilledEntities
	b DATA_OWNERUUID_ID
	d inGroundTime
	damage baseDamage
	despawnCounter life
	fromPlayer pickup
	knockbackStrength knockback
	shake shakeTime
	shooter ownerUUID
	L ()Lnet/minecraft/server/Packet; getAddEntityPacket
	a (D)Z shouldRenderAtSqrDistance
	a (DDDFFIZ)V lerpTo
	a (IZ)V setFlag
	a (Lnet/minecraft/server/Entity;FFFFF)V shootFromRotation
	a (Lnet/minecraft/server/EntityLiving;)V doPostHurtEffects
	a (Lnet/minecraft/server/EntityLiving;F)V setEnchantmentEffectsFromEntity
	a (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getEyeHeight
	a (Lnet/minecraft/server/MovingObjectPosition;)V onHit
	a (Lnet/minecraft/server/MovingObjectPositionEntity;)V onHitEntity
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/SoundEffect;)V setSoundEvent
	a (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/MovingObjectPositionEntity; findHitEntity
	at ()Z isMovementNoisy
	b (Lnet/minecraft/server/EntityHuman;)V playerTouch
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bA ()Z isAttackable
	c (DDDFF)V shoot
	f ()Z isInGround
	getDamage ()D getBaseDamage
	getItemStack ()Lnet/minecraft/server/ItemStack; getPickupItem
	getShooter ()Lnet/minecraft/server/Entity; getOwner
	getSoundHit ()Lnet/minecraft/server/SoundEffect; getHitGroundSoundEvent
	h ()V tick
	i ()V tickDespawn
	isCritical ()Z isCritArrow
	j (DDD)V lerpMotion
	k ()Lnet/minecraft/server/SoundEffect; getDefaultHitGroundSoundEvent
	n (Z)V setNoPhysics
	o (Z)V setShotFromCrossbow
	p ()I getKnockback
	r ()Z shotFromCrossbow
	setCritical (Z)V setCritArrow
	setDamage (D)V setBaseDamage
	setKnockbackStrength (I)V setKnockback
	setShooter (Lnet/minecraft/server/Entity;)V setOwner
	u ()F getWaterInertia
	v ()Z isNoPhysics
	w ()V resetPiercedEntities
	w_ ()V defineSynchedData
net/minecraft/server/EntityArrow$PickupStatus net/minecraft/world/entity/projectile/AbstractArrow$Pickup
	d $VALUES
	a (I)Lnet/minecraft/server/EntityArrow$PickupStatus; byOrdinal
net/minecraft/server/EntityBat net/minecraft/world/entity/ambient/Bat
	b DATA_ID_FLAGS
	c BAT_RESTING_TARGETING
	d targetPosition
	C (Lnet/minecraft/server/Entity;)V doPush
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (DZLnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;)V checkFallDamage
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	aL ()Z isPushable
	at ()Z isMovementNoisy
	b (FF)Z causeFallDamage
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkBatSpawnRules
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bH ()Z isIgnoringBlockTriggers
	cA ()V registerAttributes
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	dT ()V customServerAiStep
	dm ()F getSoundVolume
	dn ()F getVoicePitch
	dv ()V pushEntities
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eo ()Z isHalloween
	h ()V tick
	isAsleep ()Z isResting
	setAsleep (Z)V setResting
	w_ ()V defineSynchedData
net/minecraft/server/EntityBee net/minecraft/world/entity/animal/Bee
	bA rollAmountO
	bB timeSinceSting
	bF remainingCooldownBeforeLocatingNewHive
	bG remainingCooldownBeforeLocatingNewFlower
	bJ beePollinateGoal
	bK goToHiveGoal
	bL goToKnownFlowerGoal
	bM underWaterTicks
	bw DATA_FLAGS_ID
	bx ANGER_TIME
	bz rollAmount
	cannotEnterHiveTicks stayOutOfHiveCountdown
	flowerPos savedFlowerPos
	hurtBy lastHurtByUUID
	ticksSincePollination ticksWithoutNectarSinceExitingHive
	B (Lnet/minecraft/server/Entity;)Z doHurtTarget
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	K ()V sendDebugPackets
	a (DZLnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;)V checkFallDamage
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IWorldReader;)F getWalkTargetValue
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/Entity;)Z makeAngry
	a (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/server/EntityLiving;)V setLastHurtByMob
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/World;DDDDDLnet/minecraft/server/ParticleParam;)V spawnFluidParticle
	aq ()Z makeFlySound
	b (FF)Z causeFallDamage
	b (Lnet/minecraft/server/BlockPosition;I)Z closerThan
	b (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityBee; getBreedOffspring
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/World;)Lnet/minecraft/server/NavigationAbstract; createNavigation
	c (Lnet/minecraft/server/Tag;)V jumpInLiquid
	cA ()V registerAttributes
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	canPollinate ()Z isTiredOfLookingForNectar
	d (IZ)V setFlag
	dT ()V customServerAiStep
	di ()Lnet/minecraft/server/EnumMonsterType; getMobType
	dm ()F getSoundVolume
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eC ()Lnet/minecraft/server/PathfinderGoalSelector; getGoalSelector
	eF ()Z isFlying
	eG ()V dropOffNectar
	eI ()Z wantsToEnterHive
	eJ ()V updateRollAmount
	eK ()Z isHiveNearFire
	eN ()V resetNumCropsGrownSincePollination
	eO ()V incrementNumCropsGrownSincePollination
	eP ()Z isHiveValid
	eQ ()Z isRolling
	es ()I getTravellingTicks
	et ()Ljava/util/List; getBlacklistedHives
	eu ()V resetTicksWithoutNectarSinceExitingHive
	getAnger ()I getAngerTime
	getFlowerPos ()Lnet/minecraft/server/BlockPosition; getSavedFlowerPos
	getNumCropsGrownSincePollination ()I getCropsGrownSincePollination
	h ()V tick
	h (Lnet/minecraft/server/BlockPosition;)V pathfindRandomlyTowards
	hasFlowerPos ()Z hasSavedFlowerPos
	hasHivePos ()Z hasHive
	i (Lnet/minecraft/server/BlockPosition;)Z doesHiveHaveSpace
	i (Lnet/minecraft/server/ItemStack;)Z isFood
	j (Lnet/minecraft/server/BlockPosition;)Z isTooFarAway
	k ()V aiStep
	k (Lnet/minecraft/server/BlockPosition;)Z isFlowerValid
	n ()V registerGoals
	setAnger (I)V setAngerTime
	setCannotEnterHiveTicks (I)V setStayOutOfHiveCountdown
	setFlowerPos (Lnet/minecraft/server/BlockPosition;)V setSavedFlowerPos
	t (Z)V setRolling
	v (F)F getRollAmount
	v (I)Z getFlag
	w_ ()V defineSynchedData
net/minecraft/server/EntityBird net/minecraft/world/entity/animal/FlyingAnimal
	eF ()Z isFlying
net/minecraft/server/EntityBlaze net/minecraft/world/entity/monster/Blaze
	b allowedHeightOffset
	c nextHeightOffsetChangeTick
	d DATA_FLAGS_ID
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	aI ()F getBrightness
	b (FF)Z causeFallDamage
	bf ()Z isOnFire
	cA ()V registerAttributes
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	dT ()V customServerAiStep
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	k ()V aiStep
	l ()Z isCharged
	n ()V registerGoals
	r (Z)V setCharged
	w_ ()V defineSynchedData
net/minecraft/server/EntityBlaze$PathfinderGoalBlazeFireball net/minecraft/world/entity/monster/Blaze$BlazeAttackGoal
	a blaze
	b attackStep
	c attackTime
	d lastSeen
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
	g ()D getFollowDistance
net/minecraft/server/EntityBoat net/minecraft/world/entity/vehicle/Boat
	aA inputRight
	aB inputUp
	aC inputDown
	aD waterLevel
	aE landFriction
	aF status
	aG oldStatus
	aH lastYd
	aI isAboveBubbleColumn
	aJ bubbleColumnDirectionIsDown
	aK bubbleMultiplier
	aL bubbleAngle
	aM bubbleAngleO
	ao DATA_ID_BUBBLE_TIME
	ap paddlePositions
	aq invFriction
	ar outOfControlTicks
	as deltaRotation
	at lerpSteps
	au lerpX
	av lerpY
	aw lerpZ
	ax lerpYRot
	ay lerpXRot
	az inputLeft
	b DATA_ID_HURT
	c DATA_ID_HURTDIR
	d DATA_ID_DAMAGE
	e DATA_ID_TYPE
	f DATA_ID_PADDLE_LEFT
	g DATA_ID_PADDLE_RIGHT
	A ()I getBubbleTime
	L ()Lnet/minecraft/server/Packet; getAddEntityPacket
	a (DDDFFIZ)V lerpTo
	a (DZLnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;)V checkFallDamage
	a (I)Z getPaddleState
	a (IF)F getRowingTime
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/Entity;)V clampRotation
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (ZZ)V setPaddleState
	a (ZZZZ)V setInput
	aK ()Z isPickable
	aL ()Z isPushable
	aS ()D getRideHeight
	at ()Z isMovementNoisy
	au ()Lnet/minecraft/server/AxisAlignedBB; getCollideBox
	b (F)F getBubbleAngle
	b (I)V setHurtTime
	b (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z interact
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bR ()Lnet/minecraft/server/EnumDirection; getMotionDirection
	bb ()V animateHurt
	c (I)V setHurtDir
	cd ()Lnet/minecraft/server/Entity; getControllingPassenger
	d (I)V setBubbleTime
	f ()Lnet/minecraft/server/Item; getDropItem
	getType ()Lnet/minecraft/server/EntityBoat$EnumBoatType; getBoatType
	h ()V tick
	i ()Lnet/minecraft/server/SoundEffect; getPaddleSound
	i (Lnet/minecraft/server/Entity;)V push
	j (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/AxisAlignedBB; getCollideAgainstBox
	j (Z)V onAboveBubbleCol
	k ()F getWaterLevelAbove
	k (Lnet/minecraft/server/Entity;)V positionRider
	l ()F getGroundFriction
	l (Lnet/minecraft/server/Entity;)V onPassengerTurned
	n ()I getHurtTime
	o ()I getHurtDir
	q ()V tickBubbleColumn
	q (Lnet/minecraft/server/Entity;)Z canAddPassenger
	r ()V tickLerp
	s ()Lnet/minecraft/server/EntityBoat$EnumStatus; getStatus
	u ()Z checkInWater
	v ()Lnet/minecraft/server/EntityBoat$EnumStatus; isUnderwater
	w ()V floatBoat
	w_ ()V defineSynchedData
	z ()V controlBoat
net/minecraft/server/EntityBoat$EnumBoatType net/minecraft/world/entity/vehicle/Boat$Type
	g name
	h planks
	i $VALUES
	a ()Ljava/lang/String; getName
	a (I)Lnet/minecraft/server/EntityBoat$EnumBoatType; byId
	a (Ljava/lang/String;)Lnet/minecraft/server/EntityBoat$EnumBoatType; byName
	b ()Lnet/minecraft/server/Block; getPlanks
net/minecraft/server/EntityBoat$EnumStatus net/minecraft/world/entity/vehicle/Boat$Status
	f $VALUES
net/minecraft/server/EntityCat net/minecraft/world/entity/animal/Cat
	bA TEMPT_INGREDIENT
	bB DATA_TYPE_ID
	bC IS_LYING
	bD RELAX_STATE_ONE
	bE DATA_COLLAR_COLOR
	bF avoidPlayersGoal
	bG temptGoal
	bH lieDownAmount
	bI lieDownAmountO
	bJ lieDownAmountTail
	bK lieDownAmountOTail
	bL relaxStateOneAmount
	bM relaxStateOneAmountO
	bz TEXTURE_BY_TYPE
	A ()I getAmbientSoundInterval
	B (Lnet/minecraft/server/Entity;)Z doHurtTarget
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/server/EntityAnimal;)Z canMate
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z mobInteract
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;)V usePlayerItem
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (FF)Z causeFallDamage
	b (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityCat; getBreedOffspring
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	cA ()V registerAttributes
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	dT ()V customServerAiStep
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eB ()Z isLying
	eC ()Z isRelaxStateOne
	eE ()V hiss
	eF ()F getAttackDamage
	eG ()V handleLieDown
	eH ()V updateLieDownAmount
	eI ()V updateRelaxStateOneAmount
	er ()V reassessTameGoals
	ez ()Lnet/minecraft/server/MinecraftKey; getResourceLocation
	h ()V tick
	h (D)Z removeWhenFarAway
	i (Lnet/minecraft/server/ItemStack;)Z isFood
	n ()V registerGoals
	u (Z)V setLying
	v (F)F getLieDownAmount
	v (Z)V setRelaxStateOne
	w (F)F getLieDownAmountTail
	w_ ()V defineSynchedData
	x (F)F getRelaxStateOneAmount
net/minecraft/server/EntityCat$PathfinderGoalTemptChance net/minecraft/world/entity/animal/Cat$CatTemptGoal
	chosenTarget selectedPlayer
	d cat
	a ()Z canUse
	e ()V tick
	g ()Z canScare
net/minecraft/server/EntityCaveSpider net/minecraft/world/entity/monster/CaveSpider
	B (Lnet/minecraft/server/Entity;)Z doHurtTarget
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	cA ()V registerAttributes
net/minecraft/server/EntityChicken net/minecraft/world/entity/animal/Chicken
	bA flapping
	bC isChickenJockey
	bD FOOD_ITEMS
	bw flap
	bx flapSpeed
	by oFlapSpeed
	bz oFlap
	eggLayTime eggTime
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	a (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (FF)Z causeFallDamage
	b (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityChicken; getBreedOffspring
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	cA ()V registerAttributes
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	d (Lnet/minecraft/server/EntityHuman;)I getExperienceReward
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	h (D)Z removeWhenFarAway
	i (Lnet/minecraft/server/ItemStack;)Z isFood
	k ()V aiStep
	k (Lnet/minecraft/server/Entity;)V positionRider
	n ()V registerGoals
	r (Z)V setChickenJockey
net/minecraft/server/EntityCod net/minecraft/world/entity/animal/Cod
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	er ()Lnet/minecraft/server/SoundEffect; getFlopSound
	l ()Lnet/minecraft/server/ItemStack; getBucketItemStack
net/minecraft/server/EntityComplexPart net/minecraft/world/entity/boss/EnderDragonPart
	c name
	d size
	owner parentMob
	L ()Lnet/minecraft/server/Packet; getAddEntityPacket
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/EntityPose;)Lnet/minecraft/server/EntitySize; getDimensions
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	aK ()Z isPickable
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	s (Lnet/minecraft/server/Entity;)Z is
	w_ ()V defineSynchedData
net/minecraft/server/EntityCow net/minecraft/world/entity/animal/Cow
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	a (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z mobInteract
	b (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityCow; getBreedOffspring
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	cA ()V registerAttributes
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	dm ()F getSoundVolume
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	n ()V registerGoals
net/minecraft/server/EntityCreature net/minecraft/world/entity/PathfinderMob
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IWorldReader;)F getWalkTargetValue
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;)Z checkSpawnRules
	eh ()V tickLeash
	eo ()Z isPathFinding
	ep ()D followLeashSpeed
	f (Lnet/minecraft/server/BlockPosition;)F getWalkTargetValue
	u (F)V onLeashDistance
net/minecraft/server/EntityCreeper net/minecraft/world/entity/monster/Creeper
	POWERED DATA_IS_POWERED
	b DATA_SWELL_DIR
	bA droppedSkulls
	bw oldSwell
	d DATA_IS_IGNITED
	fuseTicks swell
	maxFuseTicks maxSwell
	B (Lnet/minecraft/server/Entity;)Z doHurtTarget
	a (I)V setSwellDir
	a (Lnet/minecraft/server/DamageSource;IZ)V dropCustomDeathLoot
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z mobInteract
	a (Lnet/minecraft/server/EntityLightning;)V thunderHit
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (FF)Z causeFallDamage
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bD ()I getMaxFallDistance
	cA ()V registerAttributes
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	canCauseHeadDrop ()Z canDropMobsSkull
	createEffectCloud ()V spawnLingeringCloud
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	explode ()V explodeCreeper
	h ()V tick
	l ()I getSwellDir
	n ()V registerGoals
	setCausedHeadDrop ()V increaseDroppedSkulls
	v (F)F getSwelling
	w_ ()V defineSynchedData
net/minecraft/server/EntityDamageSource net/minecraft/world/damagesource/EntityDamageSource
	x entity
	y isThorns
	s ()Z scalesWithDifficulty
	w ()Lnet/minecraft/server/Vec3D; getSourcePosition
	x ()Lnet/minecraft/server/EntityDamageSource; setThorns
	y ()Z isThorns
net/minecraft/server/EntityDamageSourceIndirect net/minecraft/world/damagesource/IndirectEntityDamageSource
	d (Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/IChatBaseComponent; getLocalizedDeathMessage
	j ()Lnet/minecraft/server/Entity; getDirectEntity
	k ()Lnet/minecraft/server/Entity; getEntity
net/minecraft/server/EntityDolphin net/minecraft/world/entity/animal/Dolphin
	b ALLOWED_ITEMS
	bw MOISNTESS_LEVEL
	bx SWIM_WITH_PLAYER_TARGETING
	c TREASURE_POS
	d GOT_FISH
	B (Lnet/minecraft/server/Entity;)Z doHurtTarget
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (B)V handleEntityEvent
	a (I)V handleAirSupply
	a (Lnet/minecraft/server/EntityHuman;)Z canBeLeashed
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z mobInteract
	a (Lnet/minecraft/server/EntityItem;)V pickUpItem
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/ParticleParam;)V addParticlesAroundSelf
	am ()Lnet/minecraft/server/SoundEffect; getSwimSound
	an ()Lnet/minecraft/server/SoundEffect; getSwimSplashSound
	b (I)V setMoisntessLevel
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkDolphinSpawnRules
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/World;)Lnet/minecraft/server/NavigationAbstract; createNavigation
	bw ()I getMaxAirSupply
	cA ()V registerAttributes
	cB ()Z canBreatheUnderwater
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	dU ()I getMaxHeadXRot
	dV ()I getMaxHeadYRot
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	e (Lnet/minecraft/server/ItemStack;)Z canTakeItem
	e (Lnet/minecraft/server/Vec3D;)V travel
	eq ()Z gotFish
	er ()I getMoistnessLevel
	es ()Z closeToNextPos
	g (Lnet/minecraft/server/BlockPosition;)V setTreasurePos
	h ()V tick
	l ()Lnet/minecraft/server/BlockPosition; getTreasurePos
	m (I)I increaseAirSupply
	n ()V registerGoals
	n (Lnet/minecraft/server/Entity;)Z canRide
	r (Z)V setGotFish
	w_ ()V defineSynchedData
net/minecraft/server/EntityDragonFireball net/minecraft/world/entity/projectile/DragonFireball
	M_ ()Z shouldBurn
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/MovingObjectPosition;)V onHit
	aK ()Z isPickable
	i ()Lnet/minecraft/server/ParticleParam; getTrailParticle
net/minecraft/server/EntityDrowned net/minecraft/world/entity/monster/Drowned
	bw searchingForLand
	navigationLand groundNavigation
	navigationWater waterNavigation
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/DifficultyDamageScaler;)V populateDefaultEquipmentSlots
	a (Lnet/minecraft/server/EntityLiving;F)V performRangedAttack
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)Z isDeepEnoughToSpawn
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/IWorldReader;)Z checkSpawnObstruction
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumItemSlot;)Z canReplaceCurrentItem
	aB ()V updateSwimming
	am ()Lnet/minecraft/server/SoundEffect; getSwimSound
	b (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkDrownedSpawnRules
	bM ()Z isPushedByWater
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	e (Lnet/minecraft/server/Vec3D;)V travel
	eq ()Z supportsBreakDoorGoal
	er ()Lnet/minecraft/server/SoundEffect; getStepSound
	es ()Lnet/minecraft/server/ItemStack; getSkull
	et ()Z convertsInWater
	eu ()Z closeToNextPos
	ez ()Z wantsToSwim
	i (Lnet/minecraft/server/EntityLiving;)Z okTarget
	l ()V addBehaviourGoals
	r (Z)V setSearchingForLand
net/minecraft/server/EntityEgg net/minecraft/world/entity/projectile/ThrownEgg
	a (B)V handleEntityEvent
	a (Lnet/minecraft/server/MovingObjectPosition;)V onHit
	i ()Lnet/minecraft/server/Item; getDefaultItem
net/minecraft/server/EntityEnderCrystal net/minecraft/world/entity/boss/enderdragon/EndCrystal
	b time
	c DATA_BEAM_TARGET
	d DATA_SHOW_BOTTOM
	L ()Lnet/minecraft/server/Packet; getAddEntityPacket
	U ()V kill
	a (D)Z shouldRenderAtSqrDistance
	a (Lnet/minecraft/server/DamageSource;)V onDestroyedBy
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	aK ()Z isPickable
	at ()Z isMovementNoisy
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	h ()V tick
	isShowingBottom ()Z showsBottom
	setShowingBottom (Z)V setShowBottom
	w_ ()V defineSynchedData
net/minecraft/server/EntityEnderDragon net/minecraft/world/entity/boss/enderdragon/EnderDragon
	PHASE DATA_PHASE
	bA dragonDeathTime
	bB yRotA
	bD LOGGER
	bE CRYSTAL_DESTROY_TARGETING
	bG neck
	bH body
	bI tail1
	bJ tail2
	bK tail3
	bL wing1
	bM wing2
	bN dragonFight
	bO phaseManager
	bP growlTime
	bQ sittingDamageReceived
	bR nodes
	bS nodeAdjacency
	bT openSet
	bw head
	bx oFlapTime
	by flapTime
	bz inWall
	c positions
	children subEntities
	currentEnderCrystal nearestCrystal
	d posPointer
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	U ()V kill
	a (I)V dropExperience
	a (IF)[D getLatencyPos
	a (IILnet/minecraft/server/PathPoint;)Lnet/minecraft/server/PathEntity; findPath
	a (I[D[D)F getHeadPartYOffset
	a (Ljava/util/List;)V knockBack
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/EntityComplexPart;DDD)V tickPart
	a (Lnet/minecraft/server/EntityComplexPart;Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/EntityEnderCrystal;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/DamageSource;)V onCrystalDestroyed
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/PathPoint;Lnet/minecraft/server/PathPoint;)Lnet/minecraft/server/PathEntity; reconstructPath
	aK ()Z isPickable
	b (Ljava/util/List;)V hurt
	b (Lnet/minecraft/server/AxisAlignedBB;)Z checkWalls
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bC ()Z canChangeDimensions
	c (Lnet/minecraft/server/MobEffect;)Z addEffect
	cA ()V registerAttributes
	cD ()V tickDeath
	cl ()Lnet/minecraft/server/SoundCategory; getSoundSource
	cy ()V checkDespawn
	dealDamage (Lnet/minecraft/server/DamageSource;F)Z reallyHurt
	dm ()F getSoundVolume
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eo ()[Lnet/minecraft/server/EntityComplexPart; getSubEntities
	er ()F getHeadYOffset
	es ()V checkCrystals
	getDragonControllerManager ()Lnet/minecraft/server/DragonControllerManager; getPhaseManager
	getEnderDragonBattle ()Lnet/minecraft/server/EnderDragonBattle; getDragonFight
	i (D)F rotWrap
	k ()V aiStep
	l ()I findClosestNode
	n (Lnet/minecraft/server/Entity;)Z canRide
	o (DDD)I findClosestNode
	u (F)Lnet/minecraft/server/Vec3D; getHeadLookVector
	w_ ()V defineSynchedData
net/minecraft/server/EntityEnderPearl net/minecraft/world/entity/projectile/ThrownEnderpearl
	e originalOwner
	a (Lnet/minecraft/server/DimensionManager;)Lnet/minecraft/server/Entity; changeDimension
	a (Lnet/minecraft/server/MovingObjectPosition;)V onHit
	h ()V tick
	i ()Lnet/minecraft/server/Item; getDefaultItem
net/minecraft/server/EntityEnderSignal net/minecraft/world/entity/projectile/EyeOfEnder
	b DATA_ITEM_STACK
	despawnTimer life
	shouldDropItem surviveAfterDeath
	targetX tx
	targetY ty
	targetZ tz
	L ()Lnet/minecraft/server/Packet; getAddEntityPacket
	a (D)Z shouldRenderAtSqrDistance
	a (Lnet/minecraft/server/BlockPosition;)V signalTo
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	aI ()F getBrightness
	b (Lnet/minecraft/server/ItemStack;)V setItem
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bA ()Z isAttackable
	f ()Lnet/minecraft/server/ItemStack; getItem
	h ()V tick
	i ()Lnet/minecraft/server/ItemStack; getItemRaw
	j (DDD)V lerpMotion
	w_ ()V defineSynchedData
net/minecraft/server/EntityEnderman net/minecraft/world/entity/monster/EnderMan
	b SPEED_MODIFIER_ATTACKING_UUID
	bA targetChangeTime
	bw DATA_CREEPY
	bx DATA_STARED_AT
	by ENDERMITE_SELECTOR
	bz lastStareSound
	c SPEED_MODIFIER_ATTACKING
	d DATA_CARRY_STATE
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/DamageSource;IZ)V dropCustomDeathLoot
	a (Lnet/minecraft/server/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/Entity;)Z teleportTowards
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	cA ()V registerAttributes
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	dT ()V customServerAiStep
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eq ()Z teleport
	es ()Z isCreepy
	et ()Z hasBeenStaredAt
	eu ()V setBeingStaredAt
	f (Lnet/minecraft/server/EntityHuman;)Z isLookingAtMe
	getCarried ()Lnet/minecraft/server/IBlockData; getCarriedBlock
	h (Lnet/minecraft/server/EntityLiving;)V setTarget
	k ()V aiStep
	l ()V playStareSound
	n ()V registerGoals
	o (DDD)Z teleport
	setCarried (Lnet/minecraft/server/IBlockData;)V setCarriedBlock
	w_ ()V defineSynchedData
net/minecraft/server/EntityEnderman$PathfinderGoalEndermanPickupBlock net/minecraft/world/entity/monster/EnderMan$EndermanTakeBlockGoal
	a ()Z canUse
	e ()V tick
net/minecraft/server/EntityEnderman$PathfinderGoalEndermanPlaceBlock net/minecraft/world/entity/monster/EnderMan$EndermanLeaveBlockGoal
	a enderman
	a ()Z canUse
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;)Z canPlaceBlock
	e ()V tick
net/minecraft/server/EntityEnderman$PathfinderGoalPlayerWhoLookedAtTarget net/minecraft/world/entity/monster/EnderMan$EndermanLookForPlayerGoal
	i enderman
	j pendingTarget
	k aggroTime
	l teleportTime
	m startAggroTargetConditions
	n continueAggroTargetConditions
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/server/EntityEndermite net/minecraft/world/entity/monster/Endermite
	b life
	c playerSpawned
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	aR ()D getRidingHeight
	at ()Z isMovementNoisy
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkEndermiteSpawnRules
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	cA ()V registerAttributes
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	di ()Lnet/minecraft/server/EnumMonsterType; getMobType
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	h ()V tick
	k ()V aiStep
	l (F)V setYBodyRot
	n ()V registerGoals
net/minecraft/server/EntityEvoker net/minecraft/world/entity/monster/Evoker
	bw wololoTarget
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (IZ)V applyRaidBuffs
	a (Lnet/minecraft/server/EntitySheep;)V setWololoTarget
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	cA ()V registerAttributes
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	dT ()V customServerAiStep
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eK ()Lnet/minecraft/server/EntitySheep; getWololoTarget
	eq ()Lnet/minecraft/server/SoundEffect; getCelebrateSound
	er ()Lnet/minecraft/server/SoundEffect; getCastingSoundEvent
	n ()V registerGoals
	r (Lnet/minecraft/server/Entity;)Z isAlliedTo
	w_ ()V defineSynchedData
net/minecraft/server/EntityEvokerFangs net/minecraft/world/entity/projectile/EvokerFangs
	b warmupDelayTicks
	c sentSpikeEvent
	d lifeTicks
	e clientSideAttackStarted
	f owner
	g ownerUUID
	L ()Lnet/minecraft/server/Packet; getAddEntityPacket
	a (B)V handleEntityEvent
	a (F)F getAnimationProgress
	a (Lnet/minecraft/server/EntityLiving;)V setOwner
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c (Lnet/minecraft/server/EntityLiving;)V dealDamageTo
	h ()V tick
	w_ ()V defineSynchedData
net/minecraft/server/EntityExperienceOrb net/minecraft/world/entity/ExperienceOrb
	b tickCount
	c age
	d throwTime
	e health
	targetPlayer followingPlayer
	targetTime followingTime
	L ()Lnet/minecraft/server/Packet; getAddEntityPacket
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	aD ()V doWaterSplashEffect
	at ()Z isMovementNoisy
	b (I)I durabilityToXp
	b (Lnet/minecraft/server/EntityHuman;)V playerTouch
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bA ()Z isAttackable
	c (I)I xpToDurability
	f ()I getValue
	getOrbValue (I)I getExperienceValue
	h ()V tick
	h (I)V burn
	i ()I getIcon
	k ()V setUnderwaterMovement
	w_ ()V defineSynchedData
net/minecraft/server/EntityFallingBlock net/minecraft/world/entity/item/FallingBlockEntity
	block blockState
	e DATA_START_POS
	fallHurtAmount fallDamageAmount
	fallHurtMax fallDamageMax
	g cancelDrop
	ticksLived time
	tileEntityData blockData
	L ()Lnet/minecraft/server/Packet; getAddEntityPacket
	a (Lnet/minecraft/server/BlockPosition;)V setStartPos
	a (Lnet/minecraft/server/CrashReportSystemDetails;)V fillCrashReportCategory
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Z)V setHurtsEntities
	aK ()Z isPickable
	at ()Z isMovementNoisy
	b (FF)Z causeFallDamage
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bA ()Z isAttackable
	bI ()Z displayFireAnimation
	cb ()Z onlyOpCanSetNbt
	f ()Lnet/minecraft/server/BlockPosition; getStartPos
	getBlock ()Lnet/minecraft/server/IBlockData; getBlockState
	h ()V tick
	i ()Lnet/minecraft/server/World; getLevel
	w_ ()V defineSynchedData
net/minecraft/server/EntityFireball net/minecraft/world/entity/projectile/AbstractHurtingProjectile
	dirX xPower
	dirY yPower
	dirZ zPower
	f life
	g flightTime
	shooter owner
	L ()Lnet/minecraft/server/Packet; getAddEntityPacket
	M_ ()Z shouldBurn
	a (D)Z shouldRenderAtSqrDistance
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/MovingObjectPosition;)V onHit
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	aI ()F getBrightness
	aK ()Z isPickable
	aV ()F getPickRadius
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	h ()V tick
	i ()Lnet/minecraft/server/ParticleParam; getTrailParticle
	k ()F getInertia
	w_ ()V defineSynchedData
net/minecraft/server/EntityFireballFireball net/minecraft/world/entity/projectile/Fireball
	f DATA_ITEM_STACK
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/ItemStack;)V setItem
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	f ()Lnet/minecraft/server/ItemStack; getItem
	l ()Lnet/minecraft/server/ItemStack; getItemRaw
	w_ ()V defineSynchedData
net/minecraft/server/EntityFireworks net/minecraft/world/entity/projectile/FireworkRocketEntity
	FIREWORK_ITEM DATA_ID_FIREWORKS_ITEM
	SHOT_AT_ANGLE DATA_SHOT_AT_ANGLE
	c DATA_ATTACHED_TO_TARGET
	expectedLifespan lifetime
	ridingEntity attachedToEntity
	ticksFlown life
	L ()Lnet/minecraft/server/Packet; getAddEntityPacket
	a (B)V handleEntityEvent
	a (D)Z shouldRenderAtSqrDistance
	a (Lnet/minecraft/server/Entity;FFFFF)V shootFromRotation
	a (Lnet/minecraft/server/MovingObjectPosition;)V performHitChecks
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bA ()Z isAttackable
	c (DDDFF)V shoot
	f ()Lnet/minecraft/server/ItemStack; getItem
	h ()V tick
	hasExplosions ()Z hasExplosion
	i (DDD)Z shouldRender
	j (DDD)V lerpMotion
	m ()V dealExplosionDamage
	n ()Z isAttachedToEntity
	w_ ()V defineSynchedData
net/minecraft/server/EntityFish net/minecraft/world/entity/animal/AbstractFish
	I ()Z requiresCustomPersistence
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z mobInteract
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	am ()Lnet/minecraft/server/SoundEffect; getSwimSound
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkFishSpawnRules
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/World;)Lnet/minecraft/server/NavigationAbstract; createNavigation
	cA ()V registerAttributes
	dX ()I getMaxSpawnClusterSize
	e (Lnet/minecraft/server/Vec3D;)V travel
	eq ()Z canRandomSwim
	getSoundFlop ()Lnet/minecraft/server/SoundEffect; getFlopSound
	h (D)Z removeWhenFarAway
	i (Lnet/minecraft/server/ItemStack;)V saveToBucketTag
	isFromBucket ()Z fromBucket
	k ()V aiStep
	l ()Lnet/minecraft/server/ItemStack; getBucketItemStack
	n ()V registerGoals
	w_ ()V defineSynchedData
net/minecraft/server/EntityFishSchool net/minecraft/world/entity/animal/AbstractSchoolingFish
	b leader
	c schoolSize
	a (Ljava/util/stream/Stream;)V addFollowers
	a (Lnet/minecraft/server/EntityFishSchool;)Lnet/minecraft/server/EntityFishSchool; startFollowing
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	dX ()I getMaxSpawnClusterSize
	eA ()V removeFollower
	eq ()Z canRandomSwim
	es ()I getMaxSchoolSize
	et ()Z isFollower
	eu ()V stopFollowing
	ev ()Z canBeFollowed
	ew ()Z hasFollowers
	ex ()Z inRangeOfLeader
	ey ()V pathToLeader
	ez ()V addFollower
	h ()V tick
	n ()V registerGoals
net/minecraft/server/EntityFishingHook net/minecraft/world/entity/fishing/FishingHook
	ao nibble
	ap timeUntilLured
	aq timeUntilHooked
	ar fishAngle
	as currentState
	at luck
	au lureSpeed
	c DATA_HOOKED_ENTITY
	e life
	g flightTime
	hooked hookedIn
	isInGround inGround
	L ()Lnet/minecraft/server/Packet; getAddEntityPacket
	X ()V remove
	a (B)V handleEntityEvent
	a (D)Z shouldRenderAtSqrDistance
	a (DDDFFIZ)V lerpTo
	a (Lnet/minecraft/server/BlockPosition;)V catchingFish
	a (Lnet/minecraft/server/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/Entity;)Z canBeHooked
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	at ()Z isMovementNoisy
	b (Lnet/minecraft/server/ItemStack;)I retrieve
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bC ()Z canChangeDimensions
	h ()V tick
	i ()Lnet/minecraft/server/EntityHuman; getOwner
	k ()Z shouldStopFishing
	l ()V updateRotation
	m ()V checkCollision
	n ()V setHookedEntity
	reel ()V bringInHookedEntity
	w_ ()V defineSynchedData
net/minecraft/server/EntityFishingHook$HookState net/minecraft/world/entity/fishing/FishingHook$FishHookState
	d $VALUES
net/minecraft/server/EntityFlying net/minecraft/world/entity/FlyingMob
	a (DZLnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;)V checkFallDamage
	b (FF)Z causeFallDamage
	e (Lnet/minecraft/server/Vec3D;)V travel
	y_ ()Z onLadder
net/minecraft/server/EntityFox net/minecraft/world/entity/animal/Fox
	bA ALLOWED_ITEMS
	bB TRUSTED_TARGET_SELECTOR
	bC STALKABLE_PREY
	bD AVOID_PLAYERS
	bE landTargetGoal
	bF turtleEggTargetGoal
	bG fishTargetGoal
	bH interestedAngle
	bI interestedAngleO
	bJ crouchAmount
	bK crouchAmountO
	bL ticksSinceEaten
	bw DATA_TYPE_ID
	bx DATA_FLAGS_ID
	by DATA_TRUSTED_ID_0
	bz DATA_TRUSTED_ID_1
	B ()V playAmbientSound
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (B)V handleEntityEvent
	a (Lnet/minecraft/server/DifficultyDamageScaler;)V populateDefaultEquipmentSlots
	a (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/server/EntityFox;Lnet/minecraft/server/EntityLiving;)Z isPathClear
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EntityAgeable;)V onOffspringSpawnedFromEgg
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;)V usePlayerItem
	a (Lnet/minecraft/server/EntityItem;)V pickUpItem
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Ljava/util/UUID;)V addTrustedUUID
	b (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityFox; getBreedOffspring
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c (Ljava/util/UUID;)Z trusts
	cA ()V registerAttributes
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	d (IZ)V setFlag
	d (Lnet/minecraft/server/DamageSource;)V dropAllDeathLoot
	d (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/SoundEffect; getEatingSound
	dQ ()Z isSleeping
	do ()Z isImmobile
	e (FF)I calculateFallDamage
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	e (Lnet/minecraft/server/ItemStack;)Z canTakeItem
	eA ()Z isInterested
	eE ()Ljava/util/List; getTrustedUUIDs
	eF ()Z isDefending
	eG ()V wakeUp
	eH ()V clearStates
	eI ()Z canMove
	es ()Z isFaceplanted
	et ()Z isPouncing
	eu ()Z isJumping
	ez ()Z isFullyCrouched
	g (Lnet/minecraft/server/ItemStack;)Z canHoldItem
	h ()V tick
	h (Lnet/minecraft/server/EntityLiving;)V setTarget
	i (Lnet/minecraft/server/ItemStack;)Z isFood
	initializePathFinderGoals ()V setTargetGoals
	j (Lnet/minecraft/server/ItemStack;)Z canEat
	k ()V aiStep
	k (Lnet/minecraft/server/ItemStack;)V spitOutItem
	l (Lnet/minecraft/server/ItemStack;)V dropItemStack
	n ()V registerGoals
	s (Z)V setIsPouncing
	setCrouching (Z)V setIsCrouching
	t (I)Z getFlag
	u (Z)V setIsInterested
	v (F)F getHeadRollAngle
	v (Z)V setFaceplanted
	w (F)F getCrouchAmount
	w (Z)V setDefending
	w_ ()V defineSynchedData
net/minecraft/server/EntityFox$Type net/minecraft/world/entity/animal/Fox$Type
	c BY_ID
	d BY_NAME
	e id
	f name
	g biomes
	h $VALUES
	a ()Ljava/lang/String; getName
	a (I)Lnet/minecraft/server/EntityFox$Type; byId
	a (Ljava/lang/String;)Lnet/minecraft/server/EntityFox$Type; byName
	a (Lnet/minecraft/server/BiomeBase;)Lnet/minecraft/server/EntityFox$Type; byBiome
	b ()Ljava/util/List; getBiomes
	c ()I getId
net/minecraft/server/EntityGhast net/minecraft/world/entity/monster/Ghast
	b DATA_IS_CHARGING
	c explosionPower
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	J ()Z shouldDespawnInPeaceful
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkGhastSpawnRules
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	cA ()V registerAttributes
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	cl ()Lnet/minecraft/server/SoundCategory; getSoundSource
	dX ()I getMaxSpawnClusterSize
	dm ()F getSoundVolume
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	getPower ()I getExplosionPower
	l ()Z isCharging
	n ()V registerGoals
	r (Z)V setCharging
	w_ ()V defineSynchedData
net/minecraft/server/EntityGhast$ControllerGhast net/minecraft/world/entity/monster/Ghast$GhastMoveControl
	i ghast
	j floatDuration
	a ()V tick
	a (Lnet/minecraft/server/Vec3D;I)Z canReach
net/minecraft/server/EntityGhast$PathfinderGoalGhastAttackTarget net/minecraft/world/entity/monster/Ghast$GhastShootFireballGoal
	a chargeTime
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/server/EntityGhast$PathfinderGoalGhastIdleMove net/minecraft/world/entity/monster/Ghast$RandomFloatAroundGoal
	a ghast
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
net/minecraft/server/EntityGhast$PathfinderGoalGhastMoveTowardsTarget net/minecraft/world/entity/monster/Ghast$GhastLookGoal
	a ghast
	a ()Z canUse
	e ()V tick
net/minecraft/server/EntityGiantZombie net/minecraft/world/entity/monster/Giant
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IWorldReader;)F getWalkTargetValue
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	cA ()V registerAttributes
net/minecraft/server/EntityGolem net/minecraft/world/entity/animal/AbstractGolem
	A ()I getAmbientSoundInterval
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	b (FF)Z causeFallDamage
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	h (D)Z removeWhenFarAway
net/minecraft/server/EntityGuardian net/minecraft/world/entity/monster/Guardian
	b DATA_ID_MOVING
	bA DATA_ID_ATTACK_TARGET
	bB clientSideCachedAttackTarget
	bC clientSideAttackTime
	bD clientSideTouchedGround
	bw clientSideTailAnimationSpeed
	bx clientSideSpikesAnimation
	by clientSideSpikesAnimationO
	c clientSideTailAnimation
	d clientSideTailAnimationO
	goalRandomStroll randomStrollGoal
	A ()I getAmbientSoundInterval
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (I)V setActiveAttackTarget
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IWorldReader;)F getWalkTargetValue
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/IWorldReader;)Z checkSpawnObstruction
	at ()Z isMovementNoisy
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkGuardianSpawnRules
	b (Lnet/minecraft/server/World;)Lnet/minecraft/server/NavigationAbstract; createNavigation
	cA ()V registerAttributes
	cB ()Z canBreatheUnderwater
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	dU ()I getMaxHeadXRot
	di ()Lnet/minecraft/server/EnumMonsterType; getMobType
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	e (Lnet/minecraft/server/Vec3D;)V travel
	es ()Z isMoving
	et ()Z hasActiveAttackTarget
	eu ()Lnet/minecraft/server/EntityLiving; getActiveAttackTarget
	getSoundFlop ()Lnet/minecraft/server/SoundEffect; getFlopSound
	k ()V aiStep
	l ()I getAttackDuration
	n ()V registerGoals
	r (Z)V setMoving
	v (F)F getTailAnimation
	w (F)F getSpikesAnimation
	w_ ()V defineSynchedData
	x (F)F getAttackAnimationScale
net/minecraft/server/EntityGuardian$ControllerMoveGuardian net/minecraft/world/entity/monster/Guardian$GuardianMoveControl
	i guardian
	a ()V tick
net/minecraft/server/EntityGuardian$EntitySelectorGuardianTargetHumanSquid net/minecraft/world/entity/monster/Guardian$GuardianAttackSelector
	a guardian
	a (Lnet/minecraft/server/EntityLiving;)Z test
net/minecraft/server/EntityGuardian$PathfinderGoalGuardianAttack net/minecraft/world/entity/monster/Guardian$GuardianAttackGoal
	a guardian
	b attackTime
	c elder
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/server/EntityGuardianElder net/minecraft/world/entity/monster/ElderGuardian
	b ELDER_SIZE_SCALE
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	cA ()V registerAttributes
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	dT ()V customServerAiStep
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eq ()V setGhost
	er ()Lnet/minecraft/server/SoundEffect; getFlopSound
	l ()I getAttackDuration
net/minecraft/server/EntityHanging net/minecraft/world/entity/decoration/HangingEntity
	b HANGING_ENTITY
	blockPosition pos
	e checkInterval
	a (I)D offs
	a (Lnet/minecraft/server/Entity;)V dropItem
	a (Lnet/minecraft/server/EntityLightning;)V thunderHit
	a (Lnet/minecraft/server/EnumBlockMirror;)F mirror
	a (Lnet/minecraft/server/EnumBlockRotation;)F rotate
	a (Lnet/minecraft/server/EnumMoveType;Lnet/minecraft/server/Vec3D;)V move
	a (Lnet/minecraft/server/ItemStack;F)Lnet/minecraft/server/EntityItem; spawnAtLocation
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	aK ()Z isPickable
	aM ()Z repositionEntityAfterLoad
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bQ ()Lnet/minecraft/server/EnumDirection; getDirection
	d (DDD)V setPos
	damageEntity (Lnet/minecraft/server/DamageSource;F)Z hurt
	getBlockPosition ()Lnet/minecraft/server/BlockPosition; getPos
	getHangingHeight ()I getHeight
	getHangingWidth ()I getWidth
	h ()V tick
	h (DDD)V push
	playPlaceSound ()V playPlacementSound
	t (Lnet/minecraft/server/Entity;)Z skipAttackInteraction
	updateBoundingBox ()V recalculateBoundingBox
	w_ ()V defineSynchedData
	z_ ()V refreshDimensions
net/minecraft/server/EntityHorse net/minecraft/world/entity/animal/horse/Horse
	bF ARMOR_MODIFIER_UUID
	bG DATA_ID_TYPE_VARIANT
	bH VARIANT_TEXTURES
	bI VARIANT_HASHES
	bJ MARKING_TEXTURES
	bK MARKING_HASHES
	bL layerTextureHashName
	bM layerTextureLayers
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/server/EntityAnimal;)Z canMate
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z mobInteract
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/IInventory;)V containerChanged
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/SoundEffectType;)V playGallopSound
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	cA ()V registerAttributes
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eI ()V updateEquipment
	eV ()Z wearsArmor
	eW ()[Ljava/lang/String; getLayeredTextureLayers
	eX ()V clearLayeredTextureInfo
	eY ()V rebuildLayeredTextureInfo
	eq ()Lnet/minecraft/server/ItemStack; getArmor
	es ()Lnet/minecraft/server/SoundEffect; getAngrySound
	eu ()Ljava/lang/String; getLayeredTextureHashName
	h ()V tick
	j (Lnet/minecraft/server/ItemStack;)Z isArmor
	k (Lnet/minecraft/server/ItemStack;)V setArmor
	l (Lnet/minecraft/server/ItemStack;)V setArmorEquipment
	w_ ()V defineSynchedData
net/minecraft/server/EntityHorseAbstract net/minecraft/world/entity/animal/horse/AbstractHorse
	attributeJumpStrength JUMP_STRENGTH
	bB temper
	bD canGallop
	bE gallopSoundCounter
	bF PARENT_HORSE_SELECTOR
	bG MOMMY_TARGETING
	bH DATA_ID_FLAGS
	bI DATA_ID_OWNER_UUID
	bJ eatingCounter
	bK mouthCounter
	bL standCounter
	bN eatAnim
	bO eatAnimO
	bP standAnim
	bQ standAnimO
	bR mouthAnim
	bS mouthAnimO
	bx tailCounter
	by sprintCounter
	bz isJumping
	canSlide allowStandSliding
	inventoryChest inventory
	jumpPower playerJumpPendingScale
	A ()I getAmbientSoundInterval
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	G_ ()Z canJump
	H_ ()F getJumpRidingScale
	a (B)V handleEntityEvent
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/server/EntityAgeable;Lnet/minecraft/server/EntityHorseAbstract;)V setOffspringAttributes
	a (Lnet/minecraft/server/EntityAnimal;)Z canMate
	a (Lnet/minecraft/server/EntityHuman;)Z canBeLeashed
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/IInventory;)V containerChanged
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/SoundEffectType;)V playGallopSound
	aL ()Z isPushable
	a_ (F)V setJumpRidingScale
	a_ (I)V onPlayerJump
	a_ (ILnet/minecraft/server/ItemStack;)Z setSlot
	b (FF)Z causeFallDamage
	b (I)V handleStartJump
	b (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;)Z handleEating
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c ()V handleStopJump
	cA ()V registerAttributes
	cU ()V dropEquipment
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	cd ()Lnet/minecraft/server/Entity; getControllingPassenger
	d (IZ)V setFlag
	dX ()I getMaxSpawnClusterSize
	dY ()Z canBeControlledByRider
	dm ()F getSoundVolume
	do ()Z isImmobile
	e (FF)I calculateFallDamage
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	e (Lnet/minecraft/server/EntityHuman;)V openInventory
	e (Lnet/minecraft/server/Vec3D;)V travel
	eC ()Z isJumping
	eD ()Z isEating
	eE ()Z isStanding
	eI ()V updateEquipment
	eK ()Z canBeSaddled
	eL ()Z isSaddled
	eN ()V followMommy
	eO ()Z canEatGrass
	eP ()V makeMad
	eQ ()V playJumpSound
	eR ()Z canParent
	eS ()F generateRandomMaxHealth
	eT ()D generateRandomJumpStrength
	eU ()D generateRandomSpeed
	eV ()Z wearsArmor
	eW ()V stand
	eq ()V eating
	et ()V moveTail
	eu ()V openMouth
	ez ()V addBehaviourGoals
	g (Lnet/minecraft/server/EntityHuman;)V doPlayerRide
	getChestSlots ()I getInventorySize
	getJumpStrength ()D getCustomJump
	getMaxDomestication ()I getMaxTemper
	getSoundAngry ()Lnet/minecraft/server/SoundEffect; getAngrySound
	h ()V tick
	h (Lnet/minecraft/server/EntityHuman;)Z tameWithName
	hasReproduced ()Z isBred
	i (Lnet/minecraft/server/ItemStack;)Z isFood
	j (Lnet/minecraft/server/ItemStack;)Z isArmor
	k ()V aiStep
	k (Lnet/minecraft/server/Entity;)V positionRider
	loadChest ()V createInventory
	n ()V registerGoals
	t (I)Z getFlag
	t (Z)V setIsJumping
	u (F)V onLeashDistance
	u (Z)V setBred
	v (F)F getEatAnim
	v (I)I modifyTemper
	v (Z)V setSaddled
	w (F)F getStandAnim
	w (Z)V setEating
	w_ ()V defineSynchedData
	x (F)F getMouthAnim
	y (Z)V spawnTamingParticles
	y_ ()Z onLadder
net/minecraft/server/EntityHorseChestedAbstract net/minecraft/world/entity/animal/horse/AbstractChestedHorse
	bF DATA_ID_CHEST
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z mobInteract
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	aS ()D getRideHeight
	a_ (ILnet/minecraft/server/ItemStack;)Z setSlot
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	cA ()V registerAttributes
	cU ()V dropEquipment
	er ()I getInventorySize
	es ()Lnet/minecraft/server/SoundEffect; getAngrySound
	et ()V playChestEquipsSound
	eu ()I getInventoryColumns
	isCarryingChest ()Z hasChest
	setCarryingChest (Z)V setChest
	w_ ()V defineSynchedData
net/minecraft/server/EntityHorseDonkey net/minecraft/world/entity/animal/horse/Donkey
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/server/EntityAnimal;)Z canMate
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
net/minecraft/server/EntityHorseMule net/minecraft/world/entity/animal/horse/Mule
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	et ()V playChestEquipsSound
net/minecraft/server/EntityHorseSkeleton net/minecraft/world/entity/animal/horse/SkeletonHorse
	bF skeletonTrapGoal
	bG isTrap
	bH trapTime
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z mobInteract
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	aS ()D getRideHeight
	am ()Lnet/minecraft/server/SoundEffect; getSwimSound
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bi ()Z rideableUnderWater
	cA ()V registerAttributes
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	d (F)V playSwimSound
	di ()Lnet/minecraft/server/EnumMonsterType; getMobType
	ds ()F getWaterSlowDown
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eQ ()V playJumpSound
	eq ()Z isTrap
	ez ()V addBehaviourGoals
	k ()V aiStep
	r (Z)V setTrap
net/minecraft/server/EntityHorseZombie net/minecraft/world/entity/animal/horse/ZombieHorse
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z mobInteract
	cA ()V registerAttributes
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	di ()Lnet/minecraft/server/EnumMonsterType; getMobType
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	ez ()V addBehaviourGoals
net/minecraft/server/EntityHuman net/minecraft/world/entity/player/Player
	activeContainer containerMenu
	b POSES
	bA oBob
	bB bob
	bC takeXpDelay
	bD xCloakO
	bE yCloakO
	bF zCloakO
	bG xCloak
	bH yCloak
	bI zCloak
	bJ wasUnderwater
	bO enchantmentSeed
	bP defaultFlySpeed
	bR respawnForced
	bS lastLevelUpTime
	bT gameProfile
	bU reducedDebugInfo
	bV lastItemInMainHand
	bW cooldowns
	bp STANDING_DIMENSIONS
	bq DATA_PLAYER_MODE_CUSTOMISATION
	br DATA_PLAYER_MAIN_HAND
	bs DATA_SHOULDER_LEFT
	bt DATA_SHOULDER_RIGHT
	bz jumpTriggerTime
	c DATA_PLAYER_ABSORPTION_ID
	d DATA_SCORE_ID
	defaultContainer inventoryMenu
	e timeEntitySatOnShoulder
	enderChest enderChestInventory
	exp experienceProgress
	expLevel experienceLevel
	expTotal totalExperience
	g respawnPosition
	hookedFish fishing
	sleepTicks sleepCounter
	M ()Lnet/minecraft/server/IChatBaseComponent; getName
	W ()V resetPos
	X ()V remove
	a (B)V handleEntityEvent
	a (Layh;)Z isModelPartShown
	a (Lcom/mojang/authlib/GameProfile;)Ljava/util/UUID; createPlayerUUID
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z bedInRange
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/ItemStack;)Z mayUseItemAt
	a (Lnet/minecraft/server/CommandBlockListenerAbstract;)V openMinecartCommandBlock
	a (Lnet/minecraft/server/DamageSource;)V die
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/Entity;)V crit
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; interactOn
	a (Lnet/minecraft/server/EntityHuman;)Z canHarmPlayer
	a (Lnet/minecraft/server/EntityPose;)Lnet/minecraft/server/EntitySize; getDimensions
	a (Lnet/minecraft/server/EnumGamemode;)V setGameMode
	a (Lnet/minecraft/server/EnumItemSlot;Lnet/minecraft/server/ItemStack;)V setItemSlot
	a (Lnet/minecraft/server/EnumMainHand;)V setMainArm
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/Vec3D;)V makeStuckInBlock
	a (Lnet/minecraft/server/IChatBaseComponent;Z)V displayClientMessage
	a (Lnet/minecraft/server/ItemStack;ZZ)Lnet/minecraft/server/EntityItem; drop
	a (Lnet/minecraft/server/MinecraftKey;)V awardStat
	a (Lnet/minecraft/server/MinecraftKey;I)V awardStat
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/ParticleParam;)V addParticlesAroundSelf
	a (Lnet/minecraft/server/SoundEffect;FF)V playSound
	a (Lnet/minecraft/server/SoundEffect;Lnet/minecraft/server/SoundCategory;FF)V playNotifySound
	a (Lnet/minecraft/server/Statistic;)V resetStat
	a (Lnet/minecraft/server/Statistic;I)V awardStat
	a (Lnet/minecraft/server/TileEntityCommand;)V openCommandBlock
	a (Lnet/minecraft/server/TileEntityJigsaw;)V openJigsawBlock
	a (Lnet/minecraft/server/TileEntityStructure;)V openStructureBlock
	a (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/EnumMoveType;)Lnet/minecraft/server/Vec3D; maybeBackOffFromEdge
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumGamemode;)Z blockActionRestricted
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; eat
	a ([Lnet/minecraft/server/MinecraftKey;)V awardRecipesByKey
	aB ()V updateSwimming
	aD ()V doWaterSplashEffect
	aQ ()V rideTick
	aR ()D getRidingHeight
	a_ (ILnet/minecraft/server/ItemStack;)Z setSlot
	ab ()I getPortalWaitTime
	addScore (I)V increaseScore
	ai ()F getBlockSpeedFactor
	am ()Lnet/minecraft/server/SoundEffect; getSwimSound
	an ()Lnet/minecraft/server/SoundEffect; getSwimSplashSound
	ao ()Lnet/minecraft/server/SoundEffect; getSwimHighSpeedSplashSound
	applyExhaustion (F)V causeFoodExhaustion
	at ()Z isMovementNoisy
	b (FF)Z causeFallDamage
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z bedBlocked
	b (Lnet/minecraft/server/DamageSource;)Z isInvulnerableTo
	b (Lnet/minecraft/server/Entity;)V magicCrit
	b (Lnet/minecraft/server/EntityLiving;)V killed
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/EnumItemSlot;)Lnet/minecraft/server/ItemStack; getItemBySlot
	b (Lnet/minecraft/server/IBlockData;)F getDestroySpeed
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/Statistic;)V awardStat
	bL ()Ljava/lang/String; getScoreboardName
	bM ()Z isPushedByWater
	bP ()Z shouldShowName
	ba ()I getDimensionChangingDelay
	bc ()Ljava/lang/Iterable; getHandSlots
	bd ()Ljava/lang/Iterable; getArmorSlots
	bq ()Z isSwimming
	c (Lnet/minecraft/server/Entity;)V touch
	c (Lnet/minecraft/server/IChatBaseComponent;)Lnet/minecraft/server/IChatBaseComponent; decorateDisplayNameComponent
	cA ()V registerAttributes
	cF ()Z isAlwaysExperienceDropper
	cU ()V dropEquipment
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	checkMovement (DDD)V checkMovementStatistics
	cl ()Lnet/minecraft/server/SoundCategory; getSoundSource
	closeInventory ()V closeContainer
	cm ()I getFireImmuneTicks
	d ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
	d (Lnet/minecraft/server/DamageSource;F)V actuallyHurt
	d (Lnet/minecraft/server/EntityHuman;)I getExperienceReward
	d (Lnet/minecraft/server/EntityLiving;)V blockUsingShield
	dA ()Lnet/minecraft/server/EnumMainHand; getMainArm
	dR ()V stopSleeping
	dT ()Z isSecondaryUseActive
	dU ()Z wantsToStopRiding
	dV ()Z isStayingOnGroundSurface
	dW ()Z updateIsUnderwater
	dX ()V updatePlayerPose
	discoverRecipes (Ljava/util/Collection;)I awardRecipes
	do ()Z isImmobile
	dq ()V jumpFromGround
	dt ()F getSpeed
	du ()V serverAiStep
	dy ()F getAbsorptionAmount
	e (Lnet/minecraft/server/BlockPosition;)V startSleeping
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	e (Lnet/minecraft/server/ItemStack;)Z canTakeItem
	e (Lnet/minecraft/server/Vec3D;)V travel
	eA ()F getLuck
	ea ()V sweepAttack
	eb ()V respawn
	ec ()Z isLocalPlayer
	ef ()I getSleepTimer
	ei ()Z tryToStartFallFlying
	el ()I getEnchantmentSeed
	enchantDone (Lnet/minecraft/server/ItemStack;I)V onEnchantmentPerformed
	eo ()Z isHurt
	ep ()Z mayBuild
	et ()Lnet/minecraft/server/IChatBaseComponent; getDisplayNameWithUuid
	eu ()Z isReducedDebugInfo
	ex ()F getCurrentItemAttackStrengthDelay
	ey ()V resetAttackStrengthTicker
	f (Lnet/minecraft/server/BlockPosition;)Z freeAt
	f (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; getProjectile
	g ()Lnet/minecraft/server/ItemCooldown; createItemCooldowns
	g (Lnet/minecraft/server/EntityLiving;)V doAutoAttackOnTouch
	g (Lnet/minecraft/server/ItemStack;)Z addItem
	g (Lnet/minecraft/server/NBTTagCompound;)Z setEntityOnShoulder
	getBed ()Lnet/minecraft/server/BlockPosition; getRespawnPosition
	getBed (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Z)Ljava/util/Optional; checkBedValidRespawnPosition
	getCooldownTracker ()Lnet/minecraft/server/ItemCooldown; getCooldowns
	getEnderChest ()Lnet/minecraft/server/InventoryEnderChest; getEnderChestInventory
	getExpToLevel ()I getXpNeededForNextLevel
	getOfflineUUID (Ljava/lang/String;)Ljava/util/UUID; createPlayerUUID
	getProfile ()Lcom/mojang/authlib/GameProfile; getGameProfile
	giveExp (I)V giveExperiencePoints
	h ()V tick
	hasBlock (Lnet/minecraft/server/IBlockData;)Z canDestroy
	isCreativeAndOp ()Z canUseGameMasterBlocks
	isDeeplySleeping ()Z isSleepingLongEnough
	j ()V stopRiding
	j (Lnet/minecraft/server/NBTTagCompound;)V playShoulderEntityAmbientSound
	k ()V aiStep
	l ()V turtleHelmetTick
	levelDown (I)V giveExperienceLevels
	m (F)V hurtArmor
	n ()V moveCloak
	n (F)V hurtCurrentlyUsedShield
	n (Z)Z drop
	o (I)Lnet/minecraft/server/SoundEffect; getFallDamageSound
	o (Z)V disableShield
	openBook (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumHand;)V openItemGui
	openContainer (Lnet/minecraft/server/ITileInventory;)Ljava/util/OptionalInt; openMenu
	openSign (Lnet/minecraft/server/TileEntitySign;)V openTextEdit
	openTrade (ILnet/minecraft/server/MerchantRecipeList;IIZZ)V sendMerchantOffers
	p (DDD)V checkRidingStatistiscs
	p (Z)Z canEat
	q (F)V setAbsorptionAmount
	q (Z)V setReducedDebugInfo
	releaseShoulderEntities ()V removeEntitiesOnShoulder
	removeCursedItems ()V destroyVanishingCursedItems
	s (F)F getAttackStrengthScale
	sleep (Lnet/minecraft/server/BlockPosition;)Lcom/mojang/datafixers/util/Either; startSleepInBed
	spawnEntityFromShoulder (Lnet/minecraft/server/NBTTagCompound;)V respawnEntityOnShoulder
	startGliding ()V startFallFlying
	stopGliding ()V stopFallFlying
	t ()Z isSpectator
	undiscoverRecipes (Ljava/util/Collection;)I resetRecipes
	updateAbilities ()V onUpdateAbilities
	w_ ()V defineSynchedData
	wakeup (ZZ)V stopSleepInBed
net/minecraft/server/EntityHuman$EnumBedResult net/minecraft/world/entity/player/Player$BedSleepingProblem
	g message
	h $VALUES
	a ()Lnet/minecraft/server/IChatBaseComponent; getMessage
net/minecraft/server/EntityIllagerAbstract net/minecraft/world/entity/monster/AbstractIllager
	di ()Lnet/minecraft/server/EnumMonsterType; getMobType
	l ()Lawb$a; getArmPose
	n ()V registerGoals
net/minecraft/server/EntityIllagerIllusioner net/minecraft/world/entity/monster/Illusioner
	bw clientSideIllusionTicks
	bx clientSideIllusionOffsets
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (IZ)V applyRaidBuffs
	a (Lnet/minecraft/server/EntityLiving;F)V performRangedAttack
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	bU ()Lnet/minecraft/server/AxisAlignedBB; getBoundingBoxForCulling
	cA ()V registerAttributes
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eq ()Lnet/minecraft/server/SoundEffect; getCelebrateSound
	er ()Lnet/minecraft/server/SoundEffect; getCastingSoundEvent
	k ()V aiStep
	l ()Lawb$a; getArmPose
	n ()V registerGoals
	r (Lnet/minecraft/server/Entity;)Z isAlliedTo
	v (F)[Lnet/minecraft/server/Vec3D; getIllusionOffsets
	w_ ()V defineSynchedData
net/minecraft/server/EntityIllagerWizard net/minecraft/world/entity/monster/SpellcasterIllager
	b spellCastingTickCount
	bw DATA_SPELL_CASTING_ID
	bx currentSpell
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	dT ()V customServerAiStep
	eA ()Z isCastingSpell
	eC ()I getSpellCastingTime
	getSoundCastSpell ()Lnet/minecraft/server/SoundEffect; getCastingSoundEvent
	getSpell ()Lnet/minecraft/server/EntityIllagerWizard$Spell; getCurrentSpell
	h ()V tick
	l ()Lawb$a; getArmPose
	setSpell (Lnet/minecraft/server/EntityIllagerWizard$Spell;)V setIsCastingSpell
	w_ ()V defineSynchedData
net/minecraft/server/EntityIllagerWizard$Spell net/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell
	g id
	h spellColor
	i $VALUES
	a (I)Lnet/minecraft/server/EntityIllagerWizard$Spell; byId
net/minecraft/server/EntityInsentient net/minecraft/world/entity/Mob
	b DATA_MOB_FLAGS_ID
	bB pathfindingMalus
	bF delayedLeashHolderId
	bG leashInfoTag
	bH restrictCenter
	bI restrictRadius
	bq jumpControl
	bw sensing
	bx handItems
	by armorItems
	c bodyRotationControl
	dropChanceArmor armorDropChances
	dropChanceHand handDropChances
	e ambientSoundTime
	f xpReward
	goalTarget target
	lookController lookControl
	lootTableKey lootTable
	moveController moveControl
	persistent persistenceRequired
	A ()I getAmbientSoundInterval
	B ()V playAmbientSound
	B (Lnet/minecraft/server/Entity;)Z doHurtTarget
	F ()V updateControlFlags
	I ()Z requiresCustomPersistence
	J ()Z shouldDespawnInPeaceful
	K ()V sendDebugPackets
	a (B)V handleEntityEvent
	a (FFF)F rotlerp
	a (Lnet/minecraft/server/BlockPosition;)Z isWithinRestriction
	a (Lnet/minecraft/server/BlockPosition;I)V restrictTo
	a (Lnet/minecraft/server/DamageSource;IZ)V dropCustomDeathLoot
	a (Lnet/minecraft/server/DamageSource;Z)V dropFromLootTable
	a (Lnet/minecraft/server/DifficultyDamageScaler;)V populateDefaultEquipmentSlots
	a (Lnet/minecraft/server/Entity;FF)V lookAt
	a (Lnet/minecraft/server/Entity;Z)Z startRiding
	a (Lnet/minecraft/server/EntityHuman;)Z canBeLeashed
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z mobInteract
	a (Lnet/minecraft/server/EntityItem;)V pickUpItem
	a (Lnet/minecraft/server/EntityTypes;)Z canAttackType
	a (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkMobSpawnRules
	a (Lnet/minecraft/server/EnumItemSlot;F)V setDropChance
	a (Lnet/minecraft/server/EnumItemSlot;I)Lnet/minecraft/server/Item; getEquipmentForSlot
	a (Lnet/minecraft/server/EnumItemSlot;Lnet/minecraft/server/ItemStack;)V setItemSlot
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;)Z checkSpawnRules
	a (Lnet/minecraft/server/IWorldReader;)Z checkSpawnObstruction
	a (Lnet/minecraft/server/Item;)Z isHolding
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumItemSlot;)Z canReplaceCurrentItem
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/PathType;)F getPathfindingMalus
	a (Lnet/minecraft/server/PathType;F)V setPathfindingMalus
	a (ZLnet/minecraft/server/DamageSource;)Lnet/minecraft/server/LootTableInfo$Builder; createLootContext
	a_ (ILnet/minecraft/server/ItemStack;)Z setSlot
	aa ()V baseTick
	b (Lnet/minecraft/server/DifficultyDamageScaler;)V populateDefaultEquipmentEnchantments
	b (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z interact
	b (Lnet/minecraft/server/EnumItemSlot;)Lnet/minecraft/server/ItemStack; getItemBySlot
	b (Lnet/minecraft/server/EnumItemSlot;Lnet/minecraft/server/ItemStack;)Z isValidSlotForItem
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/World;)Lnet/minecraft/server/NavigationAbstract; createNavigation
	bD ()I getMaxFallDistance
	bc ()Ljava/lang/Iterable; getHandSlots
	bd ()Ljava/lang/Iterable; getArmorSlots
	blockEaten ()V ate
	c (I)Z isMaxGroupSizeReached
	c (Lnet/minecraft/server/DamageSource;)V playHurtSound
	c (Lnet/minecraft/server/EntityLiving;)Z canAttack
	c (Lnet/minecraft/server/Tag;)V jumpInLiquid
	cA ()V registerAttributes
	cW ()Lnet/minecraft/server/MinecraftKey; getLootTable
	canPickupLoot ()Z canPickUpLoot
	cj ()Z isControlledByLocalInstance
	cy ()V checkDespawn
	d (I)V setDelayedLeashHolderId
	d (Lnet/minecraft/server/EnumItemSlot;)F getEquipmentDropChance
	dA ()Lnet/minecraft/server/EnumMainHand; getMainArm
	dU ()I getMaxHeadXRot
	dV ()I getMaxHeadYRot
	dW ()I getHeadRotSpeed
	dY ()Z canBeControlledByRider
	doSpawnEffect ()V spawnAnim
	du ()V serverAiStep
	dx ()Z isEffectiveAi
	e (Lnet/minecraft/server/ItemStack;)Z canTakeItem
	ec ()Z isWithinRestriction
	ed ()Lnet/minecraft/server/BlockPosition; getRestrictCenter
	ee ()F getRestrictRadius
	ef ()V clearRestriction
	eg ()Z hasRestriction
	eh ()V tickLeash
	em ()Z isAggressive
	en ()Z isSunBurnTick
	eo ()V restoreLeashFromSave
	f (FF)F tickHeadTurn
	g (Lnet/minecraft/server/ItemStack;)Z canHoldItem
	getControllerJump ()Lnet/minecraft/server/ControllerJump; getJumpControl
	getControllerLook ()Lnet/minecraft/server/ControllerLook; getLookControl
	getControllerMove ()Lnet/minecraft/server/ControllerMove; getMoveControl
	getEntitySenses ()Lnet/minecraft/server/EntitySenses; getSensing
	getExpValue (Lnet/minecraft/server/EntityHuman;)I getExperienceReward
	getGoalTarget ()Lnet/minecraft/server/EntityLiving; getTarget
	getMaxSpawnGroup ()I getMaxSpawnClusterSize
	getSoundAmbient ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	h ()V tick
	h (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/EnumItemSlot; getEquipmentSlotForItem
	initPathfinder ()V registerGoals
	isNoAI ()Z isNoAi
	isPersistent ()Z isPersistenceRequired
	isTypeNotPersistent (D)Z removeWhenFarAway
	k ()V aiStep
	l ()V resetAmbientSoundTime
	mobTick ()V customServerAiStep
	o ()Lnet/minecraft/server/EntityAIBodyControl; createBodyControl
	o (F)V setSpeed
	p (Z)V setLeftHanded
	prepare (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	q (Z)V setAggressive
	r (F)V setZza
	s (F)V setYya
	setCanPickupLoot (Z)V setCanPickUpLoot
	setGoalTarget (Lnet/minecraft/server/EntityLiving;)V setTarget
	setLeashHolder (Lnet/minecraft/server/Entity;Z)V setLeashedTo
	setNoAI (Z)V setNoAi
	setPersistent ()V setPersistenceRequired
	t (F)V setXxa
	unleash (ZZ)V dropLeash
	w_ ()V defineSynchedData
net/minecraft/server/EntityIronGolem net/minecraft/world/entity/animal/IronGolem
	b DATA_FLAGS_ID
	c attackAnimationTick
	d offerFlowerTick
	B (Lnet/minecraft/server/Entity;)Z doHurtTarget
	C (Lnet/minecraft/server/Entity;)V doPush
	a (B)V handleEntityEvent
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	a (Lnet/minecraft/server/DamageSource;)V die
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z mobInteract
	a (Lnet/minecraft/server/EntityTypes;)Z canAttackType
	a (Lnet/minecraft/server/IWorldReader;)Z checkSpawnObstruction
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	cA ()V registerAttributes
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eq ()I getAttackAnimationTick
	er ()I getOfferFlowerTick
	et ()F getAttackDamage
	k ()V aiStep
	l ()Lnet/minecraft/server/EntityIronGolem$CrackLevel; getCrackiness
	l (I)I decreaseAirSupply
	n ()V registerGoals
	r (Z)V offerFlower
	w_ ()V defineSynchedData
net/minecraft/server/EntityIronGolem$CrackLevel net/minecraft/world/entity/animal/IronGolem$Crackiness
	e BY_DAMAGE
	f fraction
	g $VALUES
	a (F)Lnet/minecraft/server/EntityIronGolem$CrackLevel; byFraction
net/minecraft/server/EntityItem net/minecraft/world/entity/item/ItemEntity
	ITEM DATA_ITEM
	b bobOffs
	f health
	L ()Lnet/minecraft/server/Packet; getAddEntityPacket
	M ()Lnet/minecraft/server/IChatBaseComponent; getName
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/DimensionManager;)Lnet/minecraft/server/Entity; changeDimension
	a (Lnet/minecraft/server/EntityItem;)V tryToMerge
	a (Lnet/minecraft/server/EntityItem;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityItem;Lnet/minecraft/server/ItemStack;)V merge
	a (Lnet/minecraft/server/EntityItem;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)V merge
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z areMergable
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;I)Lnet/minecraft/server/ItemStack; merge
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	at ()Z isMovementNoisy
	b (Lnet/minecraft/server/EntityHuman;)V playerTouch
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bA ()Z isAttackable
	defaultPickupDelay ()V setDefaultPickUpDelay
	getItemStack ()Lnet/minecraft/server/ItemStack; getItem
	h ()V tick
	h (I)V burn
	l ()I getAge
	mergeNearby ()V mergeWithNeighbours
	n ()V setNoPickUpDelay
	o ()V setNeverPickUp
	p ()Z hasPickUpDelay
	q ()V setUnlimitedLifetime
	r ()V setExtendedLifetime
	s ()V makeFakeItem
	setItemStack (Lnet/minecraft/server/ItemStack;)V setItem
	setPickupDelay (I)V setPickUpDelay
	u ()V setUnderwaterMovement
	w ()Z isMergable
	w_ ()V defineSynchedData
net/minecraft/server/EntityItemFrame net/minecraft/world/entity/decoration/ItemFrame
	ITEM DATA_ITEM
	ao dropChance
	e LOGGER
	g DATA_ROTATION
	L ()Lnet/minecraft/server/Packet; getAddEntityPacket
	U ()V kill
	a (D)Z shouldRenderAtSqrDistance
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/Entity;)V dropItem
	a (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getEyeHeight
	a (Lnet/minecraft/server/EnumDirection;)V setDirection
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	aV ()F getPickRadius
	a_ (ILnet/minecraft/server/ItemStack;)Z setSlot
	b (Lnet/minecraft/server/Entity;Z)V dropItem
	b (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z interact
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c (Lnet/minecraft/server/ItemStack;)V removeFramedMap
	f ()V recalculateBoundingBox
	i ()Z survives
	k ()I getWidth
	l ()I getHeight
	m ()V playPlacementSound
	q ()I getAnalogOutput
	w_ ()V defineSynchedData
net/minecraft/server/EntityLargeFireball net/minecraft/world/entity/projectile/LargeFireball
	yield explosionPower
	a (Lnet/minecraft/server/MovingObjectPosition;)V onHit
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
net/minecraft/server/EntityLeash net/minecraft/world/entity/decoration/LeashFenceKnotEntity
	L ()Lnet/minecraft/server/Packet; getAddEntityPacket
	a (D)Z shouldRenderAtSqrDistance
	a (Lnet/minecraft/server/Entity;)V dropItem
	a (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getEyeHeight
	a (Lnet/minecraft/server/EnumDirection;)V setDirection
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/EntityLeash; getOrCreateKnot
	b (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z interact
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	d (DDD)V setPos
	f ()V recalculateBoundingBox
	i ()Z survives
	k ()I getWidth
	l ()I getHeight
	m ()V playPlacementSound
net/minecraft/server/EntityLightning net/minecraft/world/entity/global/LightningBolt
	b seed
	d flashes
	e visualOnly
	f cause
	lifeTicks life
	L ()Lnet/minecraft/server/Packet; getAddEntityPacket
	a (D)Z shouldRenderAtSqrDistance
	a (I)V spawnFire
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	cl ()Lnet/minecraft/server/SoundCategory; getSoundSource
	d (Lnet/minecraft/server/EntityPlayer;)V setCause
	f ()Lnet/minecraft/server/EntityPlayer; getCause
	h ()V tick
	w_ ()V defineSynchedData
net/minecraft/server/EntityLiving net/minecraft/world/entity/LivingEntity
	HEALTH DATA_HEALTH_ID
	aA attackAnim
	aB attackStrengthTicker
	aC animationSpeedOld
	aD animationSpeed
	aE animationPosition
	aG timeOffs
	aH rotA
	aI yBodyRot
	aJ yBodyRotO
	aK yHeadRot
	aL yHeadRotO
	aM flyingSpeed
	aR oRun
	aS run
	aT animStep
	aU animStepO
	aV rotOffs
	aW deathScore
	aZ xxa
	activeItem useItem
	ao DATA_LIVING_ENTITY_FLAGS
	ap SLEEPING_DIMENSIONS
	aq swinging
	ar swingingArm
	as swingTime
	at removeArrowTime
	attributeMap attributes
	au removeStingerTime
	ax hurtDir
	az oAttackAnim
	b SPEED_MODIFIER_SPRINTING_UUID
	bA lastHurtMobTimestamp
	bB speed
	bD absorptionAmount
	bE lastPos
	bF lastDamageSource
	bG lastDamageStamp
	bH swimAmount
	bI swimAmountO
	ba yya
	bb zza
	bc lerpSteps
	bd lerpX
	be lerpY
	bf lerpZ
	bg lerpYRot
	bh lerpXRot
	bi lyHeadRot
	bj lerpHeadSteps
	bl useItemRemaining
	bm fallFlyTicks
	bn autoSpinAttackTicks
	bo brain
	bp DATA_STINGER_COUNT_ID
	bq SLEEPING_POS_ID
	bu lastHandItemStacks
	bv lastArmorItemStacks
	bz lastHurtMob
	c SPEED_MODIFIER_SPRINTING
	deathTicks deathTime
	e DATA_EFFECT_COLOR_ID
	effects activeEffects
	f DATA_EFFECT_AMBIENCE_ID
	g DATA_ARROW_COUNT_ID
	hurtTicks hurtTime
	hurtTimestamp lastHurtByMobTimestamp
	jumpTicks noJumpDelay
	killed dead
	killer lastHurtByPlayer
	lastDamage lastHurt
	lastDamageByPlayerTime lastHurtByPlayerTime
	lastDamager lastHurtByMob
	maxNoDamageTicks invulnerableDuration
	ticksFarFromPlayer noActionTime
	updateEffects effectsDirty
	A (Lnet/minecraft/server/Entity;)D getVisibilityPercent
	B (Lnet/minecraft/server/Entity;)Z doHurtTarget
	C ()V updateInvisibilityStatus
	C (Lnet/minecraft/server/Entity;)V doPush
	L ()Lnet/minecraft/server/Packet; getAddEntityPacket
	U ()V kill
	a (B)V handleEntityEvent
	a (DDDFFIZ)V lerpTo
	a (DDDZ)Z randomTeleport
	a (DZLnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;)V checkFallDamage
	a (F)F getSwimAmount
	a (FI)V lerpHeadTo
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/BehaviorController; makeBrain
	a (Lnet/minecraft/server/ArgumentAnchor$Anchor;Lnet/minecraft/server/Vec3D;)V lookAt
	a (Lnet/minecraft/server/AxisAlignedBB;Lnet/minecraft/server/AxisAlignedBB;)V checkAutoSpinAttack
	a (Lnet/minecraft/server/BlockPosition;)V setPosToBed
	a (Lnet/minecraft/server/BlockPosition;Z)V setRecordPlayingNearby
	a (Lnet/minecraft/server/DamageSource;Z)V dropFromLootTable
	a (Lnet/minecraft/server/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/Entity;)V findStandUpPosition
	a (Lnet/minecraft/server/Entity;FDD)V knockback
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/PathfinderTargetCondition;)Z canAttack
	a (Lnet/minecraft/server/EntityPose;)Lnet/minecraft/server/EntitySize; getDimensions
	a (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getEyeHeight
	a (Lnet/minecraft/server/EntityTypes;)Z canAttackType
	a (Lnet/minecraft/server/EnumHand;)V swing
	a (Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/ItemStack;)V setItemInHand
	a (Lnet/minecraft/server/EnumHand;Z)V swing
	a (Lnet/minecraft/server/EnumItemSlot;)Z hasItemInSlot
	a (Lnet/minecraft/server/ItemStack;I)V spawnItemParticles
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;)V addEatEffect
	a (Lnet/minecraft/server/MobEffect;)V onEffectAdded
	a (Lnet/minecraft/server/MobEffect;Z)V onEffectUpdated
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; eat
	a (ZLnet/minecraft/server/DamageSource;)Lnet/minecraft/server/LootTableInfo$Builder; createLootContext
	aJ ()V markHurt
	aK ()Z isPickable
	aL ()Z isPushable
	aO ()Z isAlive
	aP ()Z isInWall
	aQ ()V rideTick
	aa ()V baseTick
	af ()V outOfWorld
	alwaysGivesExp ()Z isAlwaysExperienceDropper
	applyArmorModifier (Lnet/minecraft/server/DamageSource;F)F getDamageAfterArmorAbsorb
	applyBlockingModifier (Lnet/minecraft/server/DamageSource;)Z isDamageSourceBlocked
	applyMagicModifier (Lnet/minecraft/server/DamageSource;F)F getDamageAfterMagicAbsorb
	b (FF)Z causeFallDamage
	b (Lnet/minecraft/server/BlockPosition;)V onChangedBlock
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z trapdoorUsableAsLadder
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/ItemStack; getItemInHand
	b (Lnet/minecraft/server/ItemStack;)V playEquipSound
	b (Lnet/minecraft/server/ItemStack;I)V triggerItemUseEffects
	b (Lnet/minecraft/server/MobEffect;)V onEffectRemoved
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bP ()Z shouldShowName
	bb ()V animateHurt
	bc ()Ljava/lang/Iterable; getHandSlots
	bd ()Ljava/lang/Iterable; getArmorSlots
	bi ()Z rideableUnderWater
	br ()Z isVisuallySwimming
	bz ()F getYHeadRot
	c (IZ)V setLivingEntityFlag
	c (Ljava/util/Collection;)Z areAllEffectsAmbient
	c (Lnet/minecraft/server/DamageSource;)V playHurtSound
	c (Lnet/minecraft/server/EntityLiving;)Z canAttack
	c (Lnet/minecraft/server/EnumHand;)V startUsingItem
	c (Lnet/minecraft/server/EnumItemSlot;)V broadcastBreakEvent
	c (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/SoundEffect; getDrinkingSound
	c (Lnet/minecraft/server/MobEffectList;)Lnet/minecraft/server/MobEffect; removeEffectNoUpdate
	c (Lnet/minecraft/server/Tag;)V jumpInLiquid
	cB ()Z canBreatheUnderwater
	cC ()F getScale
	cD ()V tickDeath
	cI ()I getLastHurtByMobTimestamp
	cJ ()Lnet/minecraft/server/EntityLiving; getLastHurtMob
	cK ()I getLastHurtMobTimestamp
	cL ()I getNoActionTime
	cN ()V removeEffectParticles
	cQ ()Ljava/util/Map; getActiveEffectsMap
	cR ()Z isInvertedHealAndHarm
	cT ()Lnet/minecraft/server/DamageSource; getLastDamageSource
	cW ()Lnet/minecraft/server/MinecraftKey; getLootTable
	cY ()Lnet/minecraft/server/IBlockData; getFeetBlockState
	cZ ()V playBlockFallSound
	clearActiveItem ()V releaseUsingItem
	collideNearby ()V pushEntities
	d (Lnet/minecraft/server/BlockPosition;)V setSleepingPos
	d (Lnet/minecraft/server/DamageSource;)V dropAllDeathLoot
	d (Lnet/minecraft/server/EnumHand;)V broadcastBreakEvent
	d (Lnet/minecraft/server/EnumItemSlot;)B entityEventForEquipmentBreak
	d (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/SoundEffect; getEatingSound
	d (Lnet/minecraft/server/MobEffect;)Z canBeAffected
	dD ()Lnet/minecraft/server/ItemStack; getUseItem
	dE ()I getUseItemRemainingTicks
	dF ()I getTicksUsingItem
	dH ()V stopUsingItem
	dJ ()Z isSuppressingSlidingDownLadder
	dL ()I getFallFlyingTicks
	dM ()Z isAffectedByPotions
	dN ()Z attackable
	dP ()V clearSleepingPos
	dS ()Lnet/minecraft/server/EnumDirection; getBedOrientation
	damageArmor (F)V hurtArmor
	damageEntity (Lnet/minecraft/server/DamageSource;F)Z hurt
	damageEntity0 (Lnet/minecraft/server/DamageSource;F)V actuallyHurt
	damageShield (F)V hurtCurrentlyUsedShield
	df ()I getStingerCount
	dg ()V updateSwingTime
	dl ()F getArmorCoverPercentage
	dn ()F getVoicePitch
	doAITick ()Z isEffectiveAi
	doTick ()V serverAiStep
	dp ()F getJumpPower
	dr ()V goDownInWater
	dropDeathLoot (Lnet/minecraft/server/DamageSource;IZ)V dropCustomDeathLoot
	dropInventory ()V dropEquipment
	ds ()F getWaterSlowDown
	dt ()F getSpeed
	dz ()V updateEffectVisibility
	e (FF)I calculateFallDamage
	e (Lnet/minecraft/server/EntityLiving;)V blockedByShield
	e (Lnet/minecraft/server/ItemStack;)Z canTakeItem
	e (Lnet/minecraft/server/Vec3D;)V travel
	enterCombat ()V onEnterCombat
	entitySleep (Lnet/minecraft/server/BlockPosition;)V startSleeping
	entityWakeup ()V stopSleeping
	exitCombat ()V onLeaveCombat
	f (FF)F tickHeadTurn
	f (Lnet/minecraft/server/DamageSource;)Z checkTotemDeathProtection
	f (Lnet/minecraft/server/EntityLiving;)V createWitherRose
	f (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; getProjectile
	f (Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/Vec3D; handleOnClimbable
	f (Z)V setSprinting
	g (Lnet/minecraft/server/EntityLiving;)V doAutoAttackOnTouch
	g (Lnet/minecraft/server/ItemStack;)V breakItem
	getAbsorptionHearts ()F getAbsorptionAmount
	getArmorStrength ()I getArmorValue
	getAttributeInstance (Lnet/minecraft/server/IAttribute;)Lnet/minecraft/server/AttributeInstance; getAttribute
	getAttributeMap ()Lnet/minecraft/server/AttributeMapBase; getAttributes
	getBedPosition ()Ljava/util/Optional; getSleepingPos
	getBehaviorController ()Lnet/minecraft/server/BehaviorController; getBrain
	getEffects ()Ljava/util/Collection; getActiveEffects
	getEquipment (Lnet/minecraft/server/EnumItemSlot;)Lnet/minecraft/server/ItemStack; getItemBySlot
	getExpValue (Lnet/minecraft/server/EntityHuman;)I getExperienceReward
	getItemInMainHand ()Lnet/minecraft/server/ItemStack; getMainHandItem
	getItemInOffHand ()Lnet/minecraft/server/ItemStack; getOffhandItem
	getKillingEntity ()Lnet/minecraft/server/EntityLiving; getKillCredit
	getLastDamager ()Lnet/minecraft/server/EntityLiving; getLastHurtByMob
	getMainHand ()Lnet/minecraft/server/EnumMainHand; getMainArm
	getMonsterType ()Lnet/minecraft/server/EnumMonsterType; getMobType
	getRaisedHand ()Lnet/minecraft/server/EnumHand; getUsedItemHand
	getSoundDeath ()Lnet/minecraft/server/SoundEffect; getDeathSound
	getSoundFall (I)Lnet/minecraft/server/SoundEffect; getFallDamageSound
	getSoundHurt (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	h ()V tick
	h (F)F getViewYRot
	hasLineOfSight (Lnet/minecraft/server/Entity;)Z canSee
	i (Lnet/minecraft/server/Entity;)V push
	initAttributes ()V registerAttributes
	isClimbing ()Z onLadder
	isDropExperience ()Z shouldDropExperience
	isFrozen ()Z isImmobile
	isGliding ()Z isFallFlying
	isHandRaised ()Z isUsingItem
	isRiptiding ()Z isAutoSpinAttack
	j ()V stopRiding
	jump ()V jumpFromGround
	k (F)V setYHeadRot
	l ()I getCurrentSwingDuration
	l (F)V setYBodyRot
	l (I)I decreaseAirSupply
	m (I)I increaseAirSupply
	movementTick ()V aiStep
	n ()V updateFallFlying
	n (I)V setNoActionTime
	o ()V updatingUsingItem
	o (F)V setSpeed
	p ()Z shouldTriggerItemUseEffects
	p (F)F getAttackAnim
	q ()V completeUsingItem
	q (I)V setStingerCount
	r ()V updateSwimAmount
	r (F)F getFrictionInfluencedSpeed
	r (I)V startAutoSpinAttack
	receive (Lnet/minecraft/server/Entity;I)V take
	s ()Z checkBedExists
	setAbsorptionHearts (F)V setAbsorptionAmount
	setLastDamager (Lnet/minecraft/server/EntityLiving;)V setLastHurtByMob
	setSlot (Lnet/minecraft/server/EnumItemSlot;Lnet/minecraft/server/ItemStack;)V setItemSlot
	shieldBlock (Lnet/minecraft/server/EntityLiving;)V blockUsingShield
	tickPotionEffects ()V tickEffects
	w_ ()V defineSynchedData
	z (Lnet/minecraft/server/Entity;)V setLastHurtMob
net/minecraft/server/EntityLlama net/minecraft/world/entity/animal/horse/Llama
	bF DATA_STRENGTH_ID
	bG DATA_SWAG_ID
	bH DATA_VARIANT_ID
	bI didSpit
	bJ caravanHead
	bK caravanTail
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	a (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/server/EntityAnimal;)Z canMate
	a (Lnet/minecraft/server/EntityLiving;F)V performRangedAttack
	a (Lnet/minecraft/server/EntityLlama;)V joinCaravan
	a (Lnet/minecraft/server/EnumColor;)V setSwag
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/IInventory;)V containerChanged
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	aS ()D getRideHeight
	b (FF)Z causeFallDamage
	b (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityLlama; getBreedOffspring
	b (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;)Z handleEating
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	cA ()V registerAttributes
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	dY ()Z canBeControlledByRider
	do ()Z isImmobile
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eI ()V updateEquipment
	eK ()Z canBeSaddled
	eM ()I getMaxTemper
	eN ()V followMommy
	eO ()Z canEatGrass
	eP ()V makeMad
	eV ()Z wearsArmor
	eW ()Z isTraderLlama
	eZ ()Lnet/minecraft/server/EnumColor; getSwag
	ep ()D followLeashSpeed
	er ()I getInventorySize
	es ()Lnet/minecraft/server/SoundEffect; getAngrySound
	et ()V playChestEquipsSound
	eu ()I getInventoryColumns
	fa ()Lnet/minecraft/server/EntityLlama; makeBabyLlama
	fb ()V leaveCaravan
	fc ()Z hasCaravanTail
	fd ()Z inCaravan
	fe ()Lnet/minecraft/server/EntityLlama; getCaravanHead
	ff ()V setRandomStrength
	i (Lnet/minecraft/server/EntityLiving;)V spit
	j (Lnet/minecraft/server/ItemStack;)Z isArmor
	k (Lnet/minecraft/server/Entity;)V positionRider
	k (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/EnumColor; getDyeColor
	n ()V registerGoals
	w_ ()V defineSynchedData
	z (Z)V setDidSpit
net/minecraft/server/EntityLlamaSpit net/minecraft/world/entity/projectile/LlamaSpit
	c ownerTag
	shooter owner
	L ()Lnet/minecraft/server/Packet; getAddEntityPacket
	a (Lnet/minecraft/server/Entity;FFFFF)V shootFromRotation
	a (Lnet/minecraft/server/MovingObjectPosition;)V onHit
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c (DDDFF)V shoot
	f ()V restoreOwnerFromSave
	h ()V tick
	j (DDD)V lerpMotion
	w_ ()V defineSynchedData
net/minecraft/server/EntityLlamaTrader net/minecraft/world/entity/animal/horse/TraderLlama
	bF despawnDelay
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	eW ()Z isTraderLlama
	fa ()Lnet/minecraft/server/EntityLlama; makeBabyLlama
	ff ()V maybeDespawn
	fg ()Z canDespawn
	fh ()Z isLeashedToWanderingTrader
	fi ()Z isLeashedToSomethingOtherThanTheWanderingTrader
	g (Lnet/minecraft/server/EntityHuman;)V doPlayerRide
	k ()V aiStep
	n ()V registerGoals
	x (I)V setDespawnDelay
net/minecraft/server/EntityMagmaCube net/minecraft/world/entity/monster/MagmaCube
	H ()Lnet/minecraft/server/MinecraftKey; getDefaultLootTable
	a (IZ)V setSize
	a (Lnet/minecraft/server/IWorldReader;)Z checkSpawnObstruction
	aI ()F getBrightness
	b (FF)Z causeFallDamage
	b (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkMagmaCubeSpawnRules
	bf ()Z isOnFire
	c (Lnet/minecraft/server/Tag;)V jumpInLiquid
	cA ()V registerAttributes
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	dq ()V jumpFromGround
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eo ()I getJumpDelay
	ep ()V decreaseSquish
	eq ()Z isDealsDamage
	er ()F getAttackDamage
	es ()Lnet/minecraft/server/SoundEffect; getSquishSound
	et ()Lnet/minecraft/server/SoundEffect; getJumpSound
	l ()Lnet/minecraft/server/ParticleParam; getParticleType
net/minecraft/server/EntityMinecartAbstract net/minecraft/world/entity/vehicle/AbstractMinecart
	ao flipped
	ap EXITS
	aq lSteps
	ar lx
	as ly
	at lz
	au lyr
	av lxr
	aw lxd
	ax lyd
	ay lzd
	b DATA_ID_HURT
	c DATA_ID_HURTDIR
	d DATA_ID_DAMAGE
	e DATA_ID_DISPLAY_BLOCK
	f DATA_ID_DISPLAY_OFFSET
	g DATA_ID_CUSTOM_DISPLAY
	L ()Lnet/minecraft/server/Packet; getAddEntityPacket
	a (DDDD)Lnet/minecraft/server/Vec3D; getPosOffs
	a (DDDFFIZ)V lerpTo
	a (IIIZ)V activateMinecart
	a (Lnet/minecraft/server/BlockPosition;)Z isRedstoneConductor
	a (Lnet/minecraft/server/BlockPropertyTrackPosition;)Lcom/mojang/datafixers/util/Pair; exits
	a (Lnet/minecraft/server/DamageSource;)V destroy
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/World;DDDLnet/minecraft/server/EntityMinecartAbstract$EnumMinecartType;)Lnet/minecraft/server/EntityMinecartAbstract; createMinecart
	a (Z)V setCustomDisplay
	aK ()Z isPickable
	aL ()Z isPushable
	aS ()D getRideHeight
	at ()Z isMovementNoisy
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V moveAlongTrack
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bR ()Lnet/minecraft/server/EnumDirection; getMotionDirection
	bU ()Lnet/minecraft/server/AxisAlignedBB; getBoundingBoxForCulling
	bb ()V animateHurt
	c (I)V setHurtTime
	d (I)V setHurtDir
	decelerate ()V applyNaturalSlowdown
	getDisplayBlock ()Lnet/minecraft/server/IBlockData; getDisplayBlockState
	getDisplayBlockOffset ()I getDisplayOffset
	getType ()I getHurtTime
	h ()V tick
	i ()V comeOffTrack
	i (Lnet/minecraft/server/Entity;)V push
	j (DDD)V lerpMotion
	j (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/AxisAlignedBB; getCollideAgainstBox
	n ()I getHurtDir
	o (DDD)Lnet/minecraft/server/Vec3D; getPos
	q ()Lnet/minecraft/server/IBlockData; getDefaultDisplayBlockState
	s ()I getDefaultDisplayOffset
	setDisplayBlock (Lnet/minecraft/server/IBlockData;)V setDisplayBlockState
	setDisplayBlockOffset (I)V setDisplayOffset
	u ()Z hasCustomDisplay
	w_ ()V defineSynchedData
net/minecraft/server/EntityMinecartAbstract$EnumMinecartType net/minecraft/world/entity/vehicle/AbstractMinecart$Type
	h $VALUES
net/minecraft/server/EntityMinecartChest net/minecraft/world/entity/vehicle/MinecartChest
	O_ ()I getContainerSize
	a (ILnet/minecraft/server/PlayerInventory;)Lnet/minecraft/server/Container; createMenu
	a (Lnet/minecraft/server/DamageSource;)V destroy
	o ()Lnet/minecraft/server/EntityMinecartAbstract$EnumMinecartType; getMinecartType
	q ()Lnet/minecraft/server/IBlockData; getDefaultDisplayBlockState
	s ()I getDefaultDisplayOffset
net/minecraft/server/EntityMinecartCommandBlock net/minecraft/world/entity/vehicle/MinecartCommandBlock
	COMMAND DATA_ID_COMMAND_NAME
	c DATA_ID_LAST_OUTPUT
	d commandBlock
	e lastActivated
	a (IIIZ)V activateMinecart
	a (Lnet/minecraft/server/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z interact
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	cb ()Z onlyOpCanSetNbt
	o ()Lnet/minecraft/server/EntityMinecartAbstract$EnumMinecartType; getMinecartType
	q ()Lnet/minecraft/server/IBlockData; getDefaultDisplayBlockState
	w_ ()V defineSynchedData
net/minecraft/server/EntityMinecartContainer net/minecraft/world/entity/vehicle/AbstractMinecartContainer
	c dropEquipment
	items itemStacks
	N_ ()V clearContent
	X ()V remove
	a (I)Lnet/minecraft/server/ItemStack; getItem
	a (II)Lnet/minecraft/server/ItemStack; removeItem
	a (ILnet/minecraft/server/ItemStack;)V setItem
	a (ILnet/minecraft/server/PlayerInventory;)Lnet/minecraft/server/Container; createMenu
	a (Lnet/minecraft/server/DamageSource;)V destroy
	a (Lnet/minecraft/server/DimensionManager;)Lnet/minecraft/server/Entity; changeDimension
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a_ (ILnet/minecraft/server/ItemStack;)Z setSlot
	b (I)Lnet/minecraft/server/ItemStack; removeItemNoUpdate
	b (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z interact
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	b (Z)V setDropContainerContent
	c ()Z isEmpty
	d (Lnet/minecraft/server/EntityHuman;)V unpackLootTable
	e ()V setChanged
	k ()V applyNaturalSlowdown
net/minecraft/server/EntityMinecartFurnace net/minecraft/world/entity/vehicle/MinecartFurnace
	b xPush
	c zPush
	d DATA_ID_FUEL
	e fuel
	f INGREDIENT
	a (Lnet/minecraft/server/DamageSource;)V destroy
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V moveAlongTrack
	b (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z interact
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	f ()D getMaxSpeed
	h ()V tick
	k ()V applyNaturalSlowdown
	n (Z)V setHasFuel
	o ()Lnet/minecraft/server/EntityMinecartAbstract$EnumMinecartType; getMinecartType
	q ()Lnet/minecraft/server/IBlockData; getDefaultDisplayBlockState
	v ()Z hasFuel
	w_ ()V defineSynchedData
net/minecraft/server/EntityMinecartHopper net/minecraft/world/entity/vehicle/MinecartHopper
	d enabled
	e cooldownTime
	f lastPosition
	A ()D getLevelY
	B ()D getLevelZ
	C ()Z suckInItems
	D ()Z isOnCooldown
	O_ ()I getContainerSize
	a (IIIZ)V activateMinecart
	a (ILnet/minecraft/server/PlayerInventory;)Lnet/minecraft/server/Container; createMenu
	a (Lnet/minecraft/server/DamageSource;)V destroy
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	h ()V tick
	o ()Lnet/minecraft/server/EntityMinecartAbstract$EnumMinecartType; getMinecartType
	q ()Lnet/minecraft/server/IBlockData; getDefaultDisplayBlockState
	s ()I getDefaultDisplayOffset
	w ()Lnet/minecraft/server/World; getLevel
	z ()D getLevelX
net/minecraft/server/EntityMinecartMobSpawner net/minecraft/world/entity/vehicle/MinecartSpawner
	b spawner
	a (B)V handleEntityEvent
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	cb ()Z onlyOpCanSetNbt
	h ()V tick
	o ()Lnet/minecraft/server/EntityMinecartAbstract$EnumMinecartType; getMinecartType
	q ()Lnet/minecraft/server/IBlockData; getDefaultDisplayBlockState
	v ()Lnet/minecraft/server/MobSpawnerAbstract; getSpawner
net/minecraft/server/EntityMinecartRideable net/minecraft/world/entity/vehicle/Minecart
	a (IIIZ)V activateMinecart
	b (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z interact
	o ()Lnet/minecraft/server/EntityMinecartAbstract$EnumMinecartType; getMinecartType
net/minecraft/server/EntityMinecartTNT net/minecraft/world/entity/vehicle/MinecartTNT
	b fuse
	a (B)V handleEntityEvent
	a (IIIZ)V activateMinecart
	a (Lnet/minecraft/server/DamageSource;)V destroy
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/Explosion;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;F)Z shouldBlockExplode
	a (Lnet/minecraft/server/Explosion;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/Fluid;F)F getBlockExplosionResistance
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (FF)Z causeFallDamage
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	h ()V tick
	h (D)V explode
	o ()Lnet/minecraft/server/EntityMinecartAbstract$EnumMinecartType; getMinecartType
	q ()Lnet/minecraft/server/IBlockData; getDefaultDisplayBlockState
	v ()V primeFuse
	w ()I getFuse
	z ()Z isPrimed
net/minecraft/server/EntityMonster net/minecraft/world/entity/monster/Monster
	J ()Z shouldDespawnInPeaceful
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IWorldReader;)F getWalkTargetValue
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z isDarkEnoughToSpawn
	am ()Lnet/minecraft/server/SoundEffect; getSwimSound
	an ()Lnet/minecraft/server/SoundEffect; getSwimSplashSound
	c (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkMonsterSpawnRules
	cA ()V registerAttributes
	cE ()Z shouldDropExperience
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	cl ()Lnet/minecraft/server/SoundCategory; getSoundSource
	d (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkAnyLightMonsterSpawnRules
	damageEntity (Lnet/minecraft/server/DamageSource;F)Z hurt
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	e (Lnet/minecraft/server/EntityHuman;)Z isPreventingPlayerRest
	ew ()V updateNoActionTime
	f (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; getProjectile
	k ()V aiStep
	o (I)Lnet/minecraft/server/SoundEffect; getFallDamageSound
net/minecraft/server/EntityMonsterPatrolling net/minecraft/world/entity/monster/PatrollingMonster
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	aR ()D getRidingHeight
	b (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkPatrollingMonsterSpawnRules
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	es ()Z canBeLeader
	eu ()Z hasPatrolTarget
	ex ()Z canJoinPatrol
	ey ()V findPatrolTarget
	h (D)Z removeWhenFarAway
	n ()V registerGoals
	s (Z)V setPatrolling
net/minecraft/server/EntityMushroomCow net/minecraft/world/entity/animal/MushroomCow
	bw DATA_TYPE
	bx effect
	by effectDuration
	bz lastLightningBoltUUID
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IWorldReader;)F getWalkTargetValue
	a (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z mobInteract
	a (Lnet/minecraft/server/EntityLightning;)V thunderHit
	a (Lnet/minecraft/server/EntityMushroomCow;)Lnet/minecraft/server/EntityMushroomCow$Type; getOffspringType
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityCow; getBreedOffspring
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityMushroomCow; getBreedOffspring
	c (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkMushroomSpawnRules
	getVariant ()Lnet/minecraft/server/EntityMushroomCow$Type; getMushroomType
	j (Lnet/minecraft/server/ItemStack;)Lorg/apache/commons/lang3/tuple/Pair; getEffectFromItemStack
	setVariant (Lnet/minecraft/server/EntityMushroomCow$Type;)V setMushroomType
	w_ ()V defineSynchedData
net/minecraft/server/EntityMushroomCow$Type net/minecraft/world/entity/animal/MushroomCow$MushroomType
	c type
	d blockState
	e $VALUES
	a ()Lnet/minecraft/server/IBlockData; getBlockState
	b (Ljava/lang/String;)Lnet/minecraft/server/EntityMushroomCow$Type; byType
net/minecraft/server/EntityOcelot net/minecraft/world/entity/animal/Ocelot
	bw TEMPT_INGREDIENT
	bx DATA_TRUSTING
	by ocelotAvoidPlayersGoal
	bz temptGoal
	A ()I getAmbientSoundInterval
	B (Lnet/minecraft/server/Entity;)Z doHurtTarget
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (B)V handleEntityEvent
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z mobInteract
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/IWorldReader;)Z checkSpawnObstruction
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (FF)Z causeFallDamage
	b (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityOcelot; getBreedOffspring
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkOcelotSpawnRules
	cA ()V registerAttributes
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	dT ()V customServerAiStep
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eq ()V reassessTrustingGoals
	es ()F getAttackDamage
	h (D)Z removeWhenFarAway
	i (Lnet/minecraft/server/ItemStack;)Z isFood
	n ()V registerGoals
	s (Z)V spawnTrustingParticles
	w_ ()V defineSynchedData
net/minecraft/server/EntityPainting net/minecraft/world/entity/decoration/Painting
	art motive
	L ()Lnet/minecraft/server/Packet; getAddEntityPacket
	a (DDDFFIZ)V lerpTo
	a (Lnet/minecraft/server/Entity;)V dropItem
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (DDDFF)V moveTo
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	k ()I getWidth
	l ()I getHeight
	m ()V playPlacementSound
net/minecraft/server/EntityPanda net/minecraft/world/entity/animal/Panda
	PICKUP_PREDICATE PANDA_ITEMS
	bA MAIN_GENE_ID
	bB HIDDEN_GENE_ID
	bC DATA_ID_FLAGS
	bD BREED_TARGETING
	bE gotBamboo
	bF didBite
	bG rollDelta
	bH sitAmount
	bI sitAmountO
	bJ onBackAmount
	bK onBackAmountO
	bL rollAmount
	bM rollAmountO
	bN lookAtPlayerGoal
	bw rollCounter
	bx UNHAPPY_COUNTER
	by SNEEZE_COUNTER
	bz EAT_COUNTER
	B (Lnet/minecraft/server/Entity;)Z doHurtTarget
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/server/EntityHuman;)Z canBeLeashed
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z mobInteract
	a (Lnet/minecraft/server/EntityItem;)V pickUpItem
	a (Lnet/minecraft/server/EntityPanda;Lnet/minecraft/server/EntityPanda;)V setGeneFromParents
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	cA ()V registerAttributes
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	d (IZ)V setFlag
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	e (Lnet/minecraft/server/ItemStack;)Z canTakeItem
	eC ()Z isRolling
	eD ()Lnet/minecraft/server/EntityPanda$Gene; getVariant
	eE ()Z isLazy
	eF ()Z isWorried
	eG ()Z isPlayful
	eH ()Z isBrown
	eI ()Z isWeak
	eJ ()Z isScared
	eK ()V setAttributes
	eL ()Z canPerformAction
	eO ()I getEatCounter
	eP ()V handleEating
	eQ ()V addEatingParticles
	eR ()V updateSitAmount
	eS ()V updateOnBackAnimation
	eT ()V updateRollAmount
	eU ()V handleRoll
	eV ()V afterSneeze
	eW ()Lnet/minecraft/server/EntityPanda$Gene; getOneOfGenesRandomly
	eX ()V tryToSit
	em ()Z isAggressive
	eq ()I getUnhappyCounter
	er ()Z isSneezing
	es ()Z isSitting
	et ()Z isOnBack
	eu ()Z isEating
	ez ()I getSneezeCounter
	h ()V tick
	i (Lnet/minecraft/server/ItemStack;)Z isFood
	j (Lnet/minecraft/server/ItemStack;)Z isFoodOrCake
	n ()V registerGoals
	r (Z)V sit
	s (Z)V setOnBack
	t (I)V setUnhappyCounter
	t (Z)V eat
	u (I)V setSneezeCounter
	u (Z)V sneeze
	v (F)F getSitAmount
	v (I)V setEatCounter
	v (Z)V roll
	w (F)F getLieOnBackAmount
	w (I)Z getFlag
	w_ ()V defineSynchedData
	x (F)F getRollAmount
net/minecraft/server/EntityPanda$Gene net/minecraft/world/entity/animal/Panda$Gene
	h BY_ID
	i id
	j name
	k isRecessive
	l $VALUES
	a ()I getId
	a (I)Lnet/minecraft/server/EntityPanda$Gene; byId
	a (Ljava/lang/String;)Lnet/minecraft/server/EntityPanda$Gene; byName
	a (Ljava/util/Random;)Lnet/minecraft/server/EntityPanda$Gene; getRandom
	b ()Ljava/lang/String; getName
	b (Lnet/minecraft/server/EntityPanda$Gene;Lnet/minecraft/server/EntityPanda$Gene;)Lnet/minecraft/server/EntityPanda$Gene; getVariantFromGenes
net/minecraft/server/EntityParrot net/minecraft/world/entity/animal/Parrot
	bA flapSpeed
	bB oFlapSpeed
	bC oFlap
	bD DATA_VARIANT_ID
	bE NOT_PARROT_PREDICATE
	bF POISONOUS_FOOD
	bG TAME_FOOD
	bH MOB_SOUND_MAP
	bI flapping
	bJ partyParrot
	bK jukebox
	bz flap
	B (Lnet/minecraft/server/Entity;)Z doHurtTarget
	C (Lnet/minecraft/server/Entity;)V doPush
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (DZLnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;)V checkFallDamage
	a (Ljava/util/Random;)Lnet/minecraft/server/SoundEffect; getAmbient
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	a (Lnet/minecraft/server/BlockPosition;Z)V setRecordPlayingNearby
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/server/EntityAnimal;)Z canMate
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z mobInteract
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/Entity;)V playAmbientSound
	aL ()Z isPushable
	aq ()Z makeFlySound
	b (FF)Z causeFallDamage
	b (Ljava/util/Random;)F getPitch
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/EntityTypes;)Lnet/minecraft/server/SoundEffect; getImitatedSound
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/World;)Lnet/minecraft/server/NavigationAbstract; createNavigation
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/Entity;)Z imitateNearbyMobs
	c (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkParrotSpawnRules
	cA ()V registerAttributes
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	cl ()Lnet/minecraft/server/SoundCategory; getSoundSource
	dn ()F getVoicePitch
	e (F)F playFlySound
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eD ()V calculateFlapping
	eF ()Z isFlying
	ez ()Z isPartyParrot
	i (Lnet/minecraft/server/ItemStack;)Z isFood
	k ()V aiStep
	n ()V registerGoals
	w_ ()V defineSynchedData
net/minecraft/server/EntityPerchable net/minecraft/world/entity/animal/ShoulderRidingEntity
	bz rideCooldownCounter
	d (Lnet/minecraft/server/EntityPlayer;)Z setEntityOnShoulder
	eC ()Z canSitOnShoulder
	h ()V tick
net/minecraft/server/EntityPhantom net/minecraft/world/entity/monster/Phantom
	b ID_SIZE
	bw attackPhase
	c moveTargetPoint
	d anchorPoint
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	J ()Z shouldDespawnInPeaceful
	a (D)Z shouldRenderAtSqrDistance
	a (Lnet/minecraft/server/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/EntityPose;)Lnet/minecraft/server/EntitySize; getDimensions
	a (Lnet/minecraft/server/EntityTypes;)Z canAttackType
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	cA ()V registerAttributes
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	cl ()Lnet/minecraft/server/SoundCategory; getSoundSource
	dT ()V customServerAiStep
	di ()Lnet/minecraft/server/EnumMonsterType; getMobType
	dm ()F getSoundVolume
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eo ()Lnet/minecraft/server/Vec3D; getMovementTarget
	ep ()V updatePhantomSizeInfo
	getSize ()I getPhantomSize
	h ()V tick
	k ()V aiStep
	n ()V registerGoals
	o ()Lnet/minecraft/server/EntityAIBodyControl; createBodyControl
	setSize (I)V setPhantomSize
	w_ ()V defineSynchedData
net/minecraft/server/EntityPhantom$AttackPhase net/minecraft/world/entity/monster/Phantom$AttackPhase
	c $VALUES
net/minecraft/server/EntityPig net/minecraft/world/entity/animal/Pig
	bA boostTime
	bB boostTimeTotal
	bw DATA_SADDLE_ID
	bx DATA_BOOST_TIME
	by FOOD_ITEMS
	bz boosting
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	a (Lnet/minecraft/server/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z mobInteract
	a (Lnet/minecraft/server/EntityLightning;)V thunderHit
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityPig; getBreedOffspring
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	cA ()V registerAttributes
	cU ()V dropEquipment
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	cd ()Lnet/minecraft/server/Entity; getControllingPassenger
	dY ()Z canBeControlledByRider
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	e (Lnet/minecraft/server/Vec3D;)V travel
	er ()Z boost
	i (Lnet/minecraft/server/ItemStack;)Z isFood
	n ()V registerGoals
	w_ ()V defineSynchedData
net/minecraft/server/EntityPigZombie net/minecraft/world/entity/monster/PigZombie
	angerLevel angerTime
	b SPEED_MODIFIER_ATTACKING_UUID
	c SPEED_MODIFIER_ATTACKING
	hurtBy lastHurtByUUID
	soundDelay playAngrySoundIn
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/DifficultyDamageScaler;)V populateDefaultEquipmentSlots
	a (Lnet/minecraft/server/EntityLiving;)V setLastHurtByMob
	a (Lnet/minecraft/server/IWorldReader;)Z checkSpawnObstruction
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkPigZombieSpawnRules
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	cA ()V registerAttributes
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	dT ()V customServerAiStep
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	e (Lnet/minecraft/server/EntityHuman;)Z isPreventingPlayerRest
	eA ()Z isAngry
	es ()Lnet/minecraft/server/ItemStack; getSkull
	et ()Z convertsInWater
	ez ()I getAngerTime
	i (Lnet/minecraft/server/EntityLiving;)Z makeAngry
	l ()V addBehaviourGoals
net/minecraft/server/EntityPigZombie$PathfinderGoalAnger net/minecraft/world/entity/monster/PigZombie$PigZombieAngerTargetGoal
	a ()Z canUse
net/minecraft/server/EntityPigZombie$PathfinderGoalAngerOther net/minecraft/world/entity/monster/PigZombie$PigZombieHurtByOtherGoal
	a (Lnet/minecraft/server/EntityInsentient;Lnet/minecraft/server/EntityLiving;)V alertOther
net/minecraft/server/EntityPillager net/minecraft/world/entity/monster/Pillager
	b IS_CHARGING_CROSSBOW
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (IZ)V applyRaidBuffs
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IWorldReader;)F getWalkTargetValue
	a (Lnet/minecraft/server/DifficultyDamageScaler;)V populateDefaultEquipmentSlots
	a (Lnet/minecraft/server/EntityItem;)V pickUpItem
	a (Lnet/minecraft/server/EntityLiving;F)V performRangedAttack
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/IProjectile;F)V shootProjectile
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/Vec3D;F)Lnet/minecraft/server/Vector3fa; getProjectileShotVector
	a (Z)V setChargingCrossbow
	a_ (ILnet/minecraft/server/ItemStack;)Z setSlot
	b (Lnet/minecraft/server/Item;)Z wantsItem
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	cA ()V registerAttributes
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	dX ()I getMaxSpawnClusterSize
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eq ()Lnet/minecraft/server/SoundEffect; getCelebrateSound
	er ()Z isChargingCrossbow
	l ()Lawb$a; getArmPose
	n ()V registerGoals
	r (Lnet/minecraft/server/Entity;)Z isAlliedTo
	w_ ()V defineSynchedData
net/minecraft/server/EntityPlayer net/minecraft/server/level/ServerPlayer
	advancementDataPlayer advancements
	bR LOGGER
	ch chatVisibility
	ci canChatColor
	cj lastActionTime
	cm seenCredits
	co levitationStartPos
	cp levitationStartTime
	cq disconnected
	cr enteredNetherPosition
	cs lastSectionPos
	e ignoreSlotUpdateHack
	invulnerableTicks spawnInvulnerableTime
	lastAirScored lastRecordedAirLevel
	lastArmorScored lastRecordedArmor
	lastExpLevelScored lastRecordedLevel
	lastExpTotalScored lastRecordedExperience
	lastFoodScored lastRecordedFoodLevel
	lastFoodSent lastSentFood
	lastHealthScored lastRecordedHealthAndAbsorption
	lastHealthSent lastSentHealth
	lastSentSaturationZero lastFoodSaturationZero
	locale language
	ping latency
	playerConnection connection
	playerInteractManager gameMode
	removeQueue entitiesToRemove
	serverStatisticManager stats
	spectatedEntity camera
	viewingCredits wonGame
	worldChangeInvuln isChangingDimension
	B ()Lnet/minecraft/server/RecipeBookServer; getRecipeBook
	C ()V updateInvisibilityStatus
	E ()V processDimensionDelay
	F ()J getLastActionTime
	H ()Z isChangingDimension
	I ()V hasChangedDimension
	K ()Lnet/minecraft/server/SectionPosition; getLastSectionPos
	L ()Lnet/minecraft/server/Packet; getAddEntityPacket
	a (DDD)V teleportTo
	a (DZ)V doCheckFallDamage
	a (DZLnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;)V checkFallDamage
	a (FFZZ)V setPlayerInput
	a (I)V setExperiencePoints
	a (ILnet/minecraft/server/MerchantRecipeList;IIZZ)V sendMerchantOffers
	a (Ljava/lang/String;Ljava/lang/String;[Lnet/minecraft/server/IScoreboardCriteria;)V handleTeamKill
	a (Ljava/util/Collection;)I awardRecipes
	a (Lnet/minecraft/server/ArgumentAnchor$Anchor;Lnet/minecraft/server/Entity;Lnet/minecraft/server/ArgumentAnchor$Anchor;)V lookAt
	a (Lnet/minecraft/server/ArgumentAnchor$Anchor;Lnet/minecraft/server/Vec3D;)V lookAt
	a (Lnet/minecraft/server/BlockPosition;)Lcom/mojang/datafixers/util/Either; startSleepInBed
	a (Lnet/minecraft/server/ChunkCoordIntPair;)V untrackChunk
	a (Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/Packet;Lnet/minecraft/server/Packet;)V trackChunk
	a (Lnet/minecraft/server/Container;II)V setContainerData
	a (Lnet/minecraft/server/Container;ILnet/minecraft/server/ItemStack;)V slotChanged
	a (Lnet/minecraft/server/Container;Lnet/minecraft/server/NonNullList;)V refreshContainer
	a (Lnet/minecraft/server/DamageSource;)V die
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/DimensionManager;)Lnet/minecraft/server/Entity; changeDimension
	a (Lnet/minecraft/server/Entity;)V crit
	a (Lnet/minecraft/server/Entity;I)V take
	a (Lnet/minecraft/server/Entity;ILnet/minecraft/server/DamageSource;)V awardKillScore
	a (Lnet/minecraft/server/Entity;Z)Z startRiding
	a (Lnet/minecraft/server/EntityHorseAbstract;Lnet/minecraft/server/IInventory;)V openHorseInventory
	a (Lnet/minecraft/server/EntityHuman;)Z canHarmPlayer
	a (Lnet/minecraft/server/EntityPlayer;)Z broadcastToPlayer
	a (Lnet/minecraft/server/EnumGamemode;)V setGameMode
	a (Lnet/minecraft/server/EnumHand;)V swing
	a (Lnet/minecraft/server/IBlockData;)V onInsideBlock
	a (Lnet/minecraft/server/IChatBaseComponent;)V sendMessage
	a (Lnet/minecraft/server/IChatBaseComponent;Lnet/minecraft/server/ChatMessageType;)V sendMessage
	a (Lnet/minecraft/server/IChatBaseComponent;Z)V displayClientMessage
	a (Lnet/minecraft/server/IScoreboardCriteria;I)V updateScoreForCriteria
	a (Lnet/minecraft/server/ITileInventory;)Ljava/util/OptionalInt; openMenu
	a (Lnet/minecraft/server/ItemStack;I)V onEnchantmentPerformed
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumHand;)V openItemGui
	a (Lnet/minecraft/server/ItemStack;ZZ)Lnet/minecraft/server/EntityItem; drop
	a (Lnet/minecraft/server/MobEffect;)V onEffectAdded
	a (Lnet/minecraft/server/MobEffect;Z)V onEffectUpdated
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/PacketPlayInSettings;)V updateOptions
	a (Lnet/minecraft/server/SectionPosition;)V setLastSectionPos
	a (Lnet/minecraft/server/SoundEffect;Lnet/minecraft/server/SoundCategory;FF)V playNotifySound
	a (Lnet/minecraft/server/Statistic;)V resetStat
	a (Lnet/minecraft/server/Statistic;I)V awardStat
	a (Lnet/minecraft/server/TileEntity;)V broadcast
	a (Lnet/minecraft/server/TileEntityCommand;)V openCommandBlock
	a (Lnet/minecraft/server/TileEntitySign;)V openTextEdit
	a (Lnet/minecraft/server/WorldServer;)V fudgeSpawnLocation
	a (Lnet/minecraft/server/WorldServer;DDDFF)V teleportTo
	a (ZZ)V stopSleepInBed
	a ([Lnet/minecraft/server/MinecraftKey;)V awardRecipesByKey
	b (DDD)V forceMove
	b (I)V setExperienceLevels
	b (Ljava/util/Collection;)I resetRecipes
	b (Lnet/minecraft/server/BlockPosition;)V onChangedBlock
	b (Lnet/minecraft/server/DamageSource;)Z isInvulnerableTo
	b (Lnet/minecraft/server/Entity;)V magicCrit
	b (Lnet/minecraft/server/MobEffect;)V onEffectRemoved
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c (I)V giveExperienceLevels
	c (Lnet/minecraft/server/Entity;)V sendRemoveEntity
	canPvP ()Z isPvpAllowed
	copyFrom (Lnet/minecraft/server/EntityPlayer;Z)V restoreFrom
	d (I)V giveExperiencePoints
	d (Lnet/minecraft/server/Entity;)V cancelRemoveEntity
	e ()V onEnterCombat
	f ()V onLeaveCombat
	f (Lnet/minecraft/server/Entity;)V attack
	g ()Lnet/minecraft/server/ItemCooldown; createItemCooldowns
	getAdvancementData ()Lnet/minecraft/server/AdvancementDataPlayer; getAdvancements
	getChatFlags ()Lnet/minecraft/server/EnumChatVisibility; getChatVisibility
	getPlayerListName ()Lnet/minecraft/server/IChatBaseComponent; getTabListDisplayName
	getSpecatorTarget ()Lnet/minecraft/server/Entity; getCamera
	getStatisticManager ()Lnet/minecraft/server/ServerStatisticManager; getStats
	getWorldServer ()Lnet/minecraft/server/WorldServer; getLevel
	h ()V tick
	j ()V stopRiding
	m ()V doCloseContainer
	n ()V disconnect
	o ()Z hasDisconnected
	playerTick ()V doTick
	q ()V completeUsingItem
	r ()V onUpdateAbilities
	resetIdleTimer ()V resetLastActionTime
	setResourcePack (Ljava/lang/String;Ljava/lang/String;)V sendTexturePack
	setSpectatorTarget (Lnet/minecraft/server/Entity;)V setCamera
	syncInventory ()V initMenu
	t ()Z isSpectator
	triggerDimensionAdvancements (Lnet/minecraft/server/WorldServer;)V triggerDimensionChangeTriggers
	triggerHealthUpdate ()V resetSentInfo
	u ()Z isCreative
	u (I)I getCoprime
	updateInventory (Lnet/minecraft/server/Container;)V refreshContainer
	v ()Ljava/lang/String; getIpAddress
	v_ ()V closeContainer
	w ()Z canChatInColor
	y ()I getPermissionLevel
net/minecraft/server/EntityPolarBear net/minecraft/world/entity/animal/PolarBear
	bw DATA_STANDING_ID
	bx clientSideStandAnimationO
	by clientSideStandAnimation
	bz warningSoundTicks
	B (Lnet/minecraft/server/Entity;)Z doHurtTarget
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	a (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/server/EntityPose;)Lnet/minecraft/server/EntitySize; getDimensions
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	c (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkPolarBearSpawnRules
	cA ()V registerAttributes
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	ds ()F getWaterSlowDown
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eq ()V playWarningSound
	er ()Z isStanding
	h ()V tick
	i (Lnet/minecraft/server/ItemStack;)Z isFood
	n ()V registerGoals
	r (Z)V setStanding
	v (F)F getStandingAnimationScale
	w_ ()V defineSynchedData
net/minecraft/server/EntityPose net/minecraft/world/entity/Pose
	h $VALUES
net/minecraft/server/EntityPositionTypes net/minecraft/world/entity/SpawnPlacements
	a DATA_BY_TYPE
	a (Lnet/minecraft/server/EntityTypes;)Lnet/minecraft/server/EntityPositionTypes$Surface; getPlacementType
	a (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/EntityPositionTypes$Surface;Lnet/minecraft/server/HeightMap$Type;Lalk$b;)V register
	a (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkSpawnRules
	b (Lnet/minecraft/server/EntityTypes;)Lnet/minecraft/server/HeightMap$Type; getHeightmapType
net/minecraft/server/EntityPositionTypes$Surface net/minecraft/world/entity/SpawnPlacements$Type
	d $VALUES
net/minecraft/server/EntityPotion net/minecraft/world/entity/projectile/ThrownPotion
	e WATER_SENSITIVE
	f DATA_ITEM_STACK
	g LOGGER
	a (Ljava/util/List;Lnet/minecraft/server/Entity;)V applySplash
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)V dowseFire
	a (Lnet/minecraft/server/EntityLiving;)Z isWaterSensitiveEntity
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/PotionRegistry;)V makeAreaOfEffectCloud
	a (Lnet/minecraft/server/MovingObjectPosition;)V onHit
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	l ()F getGravity
	splash ()V applyWater
	w_ ()V defineSynchedData
net/minecraft/server/EntityProjectile net/minecraft/world/entity/projectile/ThrowableProjectile
	ap entityToIgnore
	aq timeToIgnore
	blockX xBlock
	blockY yBlock
	blockZ zBlock
	shake shakeTime
	shooter owner
	shooterId ownerId
	L ()Lnet/minecraft/server/Packet; getAddEntityPacket
	a (D)Z shouldRenderAtSqrDistance
	a (Lnet/minecraft/server/Entity;FFFFF)V shootFromRotation
	a (Lnet/minecraft/server/MovingObjectPosition;)V onHit
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c (DDDFF)V shoot
	getShooter ()Lnet/minecraft/server/EntityLiving; getOwner
	h ()V tick
	j (DDD)V lerpMotion
	l ()F getGravity
net/minecraft/server/EntityProjectileThrowable net/minecraft/world/entity/projectile/ThrowableItemProjectile
	e DATA_ITEM_STACK
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	f ()Lnet/minecraft/server/ItemStack; getItem
	getItem ()Lnet/minecraft/server/ItemStack; getItemRaw
	i ()Lnet/minecraft/server/Item; getDefaultItem
	w_ ()V defineSynchedData
net/minecraft/server/EntityPufferFish net/minecraft/world/entity/animal/Pufferfish
	b PUFF_STATE
	bw NO_SPECTATORS_AND_NO_WATER_MOB
	c inflateCounter
	d deflateTimer
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/EntityInsentient;)V touch
	a (Lnet/minecraft/server/EntityPose;)Lnet/minecraft/server/EntitySize; getDimensions
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/EntityHuman;)V playerTouch
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	er ()Lnet/minecraft/server/SoundEffect; getFlopSound
	h ()V tick
	k ()V aiStep
	l ()Lnet/minecraft/server/ItemStack; getBucketItemStack
	n ()V registerGoals
	s (I)F getScale
	w_ ()V defineSynchedData
net/minecraft/server/EntityRabbit net/minecraft/world/entity/animal/Rabbit
	bA wasOnGround
	bB jumpDelayTicks
	bC moreCarrotTicks
	bw DATA_TYPE_ID
	bx KILLER_BUNNY
	by jumpTicks
	bz jumpDuration
	B (Lnet/minecraft/server/Entity;)Z doHurtTarget
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (B)V handleEntityEvent
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/server/GeneratorAccess;)I getRandomRabbitType
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	aE ()V updateSprintingState
	a_ (Z)V setJumping
	b (DD)V facePoint
	b (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityRabbit; getBreedOffspring
	b (Lnet/minecraft/server/Item;)Z isTemptingItem
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkRabbitSpawnRules
	cA ()V registerAttributes
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	cl ()Lnet/minecraft/server/SoundCategory; getSoundSource
	dT ()V customServerAiStep
	dp ()F getJumpPower
	dq ()V jumpFromGround
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eA ()V checkLandingDelay
	eB ()Z wantsMoreFood
	eq ()V startJumping
	et ()V enableJumpControl
	eu ()V disableJumpControl
	ez ()V setLandingDelay
	getSoundJump ()Lnet/minecraft/server/SoundEffect; getJumpSound
	i (D)V setSpeedModifier
	i (Lnet/minecraft/server/ItemStack;)Z isFood
	k ()V aiStep
	n ()V registerGoals
	v (F)F getJumpCompletion
	w_ ()V defineSynchedData
net/minecraft/server/EntityRabbit$ControllerJumpRabbit net/minecraft/world/entity/animal/Rabbit$RabbitJumpControl
	c rabbit
	d canJump
	a (Z)V setCanJump
	b ()V tick
	c ()Z wantJump
	d ()Z canJump
net/minecraft/server/EntityRabbit$ControllerMoveRabbit net/minecraft/world/entity/animal/Rabbit$RabbitMoveControl
	i rabbit
	j nextJumpSpeed
	a ()V tick
	a (DDDD)V setWantedPosition
net/minecraft/server/EntityRabbit$GroupDataRabbit net/minecraft/world/entity/animal/Rabbit$RabbitGroupData
	a rabbitType
net/minecraft/server/EntityRabbit$PathfinderGoalEatCarrots net/minecraft/world/entity/animal/Rabbit$RaidGardenGoal
	entity rabbit
	h wantsToRaid
	i canRaid
	a ()Z canUse
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z isValidTarget
	b ()Z canContinueToUse
	e ()V tick
net/minecraft/server/EntityRabbit$PathfinderGoalKillerRabbitMeleeAttack net/minecraft/world/entity/animal/Rabbit$EvilRabbitAttackGoal
	a (Lnet/minecraft/server/EntityLiving;)D getAttackReachSqr
net/minecraft/server/EntityRabbit$PathfinderGoalRabbitAvoidTarget net/minecraft/world/entity/animal/Rabbit$RabbitAvoidEntityGoal
	i rabbit
	a ()Z canUse
net/minecraft/server/EntityRabbit$PathfinderGoalRabbitPanic net/minecraft/world/entity/animal/Rabbit$RabbitPanicGoal
	f rabbit
	e ()V tick
net/minecraft/server/EntityRaider net/minecraft/world/entity/raid/Raider
	b ALLOWED_ITEMS
	bw wave
	bx canJoinRaid
	by ticksOutsideRaid
	c IS_CELEBRATING
	d raid
	I ()Z requiresCustomPersistence
	a (I)V setWave
	a (IZ)V applyRaidBuffs
	a (Lnet/minecraft/server/DamageSource;)V die
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/EntityItem;)V pickUpItem
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/Raid;)V setCurrentRaid
	b (I)V setTicksOutsideRaid
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	eD ()Z canJoinRaid
	eE ()Lnet/minecraft/server/Raid; getCurrentRaid
	eF ()Z hasActiveRaid
	eG ()I getWave
	eH ()Z isCelebrating
	eI ()I getTicksOutsideRaid
	eq ()Lnet/minecraft/server/SoundEffect; getCelebrateSound
	ew ()V updateNoActionTime
	ex ()Z canJoinPatrol
	h (D)Z removeWhenFarAway
	k ()V aiStep
	n ()V registerGoals
	u (Z)V setCanJoinRaid
	v (Z)V setCelebrating
	w_ ()V defineSynchedData
net/minecraft/server/EntityRavager net/minecraft/world/entity/monster/Ravager
	b NO_RAVAGER_AND_ALIVE
	bw attackTick
	bx stunnedTick
	by roarTick
	B (Lnet/minecraft/server/Entity;)Z doHurtTarget
	D (Lnet/minecraft/server/Entity;)Z canSee
	F ()V updateControlFlags
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (B)V handleEntityEvent
	a (IZ)V applyRaidBuffs
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	a (Lnet/minecraft/server/Entity;)V strongKnockback
	a (Lnet/minecraft/server/IWorldReader;)Z checkSpawnObstruction
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	aS ()D getRideHeight
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/World;)Lnet/minecraft/server/NavigationAbstract; createNavigation
	cA ()V registerAttributes
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	cd ()Lnet/minecraft/server/Entity; getControllingPassenger
	dV ()I getMaxHeadYRot
	dY ()Z canBeControlledByRider
	do ()Z isImmobile
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	e (Lnet/minecraft/server/EntityLiving;)V blockedByShield
	eA ()I getRoarTick
	eB ()V stunEffect
	eC ()V roar
	eq ()Lnet/minecraft/server/SoundEffect; getCelebrateSound
	er ()I getStunnedTick
	es ()Z canBeLeader
	k ()V aiStep
	l ()I getAttackTick
	n ()V registerGoals
net/minecraft/server/EntitySalmon net/minecraft/world/entity/animal/Salmon
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	er ()Lnet/minecraft/server/SoundEffect; getFlopSound
	es ()I getMaxSchoolSize
	l ()Lnet/minecraft/server/ItemStack; getBucketItemStack
net/minecraft/server/EntitySelector net/minecraft/commands/arguments/selector/EntitySelector
	a maxResults
	b includesEntities
	c worldLimited
	checkPermissions usesSelector
	d predicate
	e range
	f position
	g aabb
	h order
	i currentEntity
	j playerName
	k entityUUID
	l type
	a ()I getMaxResults
	a (Ljava/util/List;)Lnet/minecraft/server/IChatBaseComponent; joinNames
	a (Ljava/util/List;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/Vec3D;Ljava/util/function/Predicate;)V addEntities
	a (Lnet/minecraft/server/CommandListenerWrapper;)Lnet/minecraft/server/Entity; findSingleEntity
	a (Lnet/minecraft/server/Vec3D;)Ljava/util/function/Predicate; getPredicate
	a (Lnet/minecraft/server/Vec3D;Ljava/util/List;)Ljava/util/List; sortAndLimit
	b ()Z includesEntities
	c ()Z isSelfSelector
	c (Lnet/minecraft/server/CommandListenerWrapper;)Lnet/minecraft/server/EntityPlayer; findSinglePlayer
	d ()Z isWorldLimited
	d (Lnet/minecraft/server/CommandListenerWrapper;)Ljava/util/List; findPlayers
	e ()Z usesSelector
	e (Lnet/minecraft/server/CommandListenerWrapper;)V checkPermissions
	getEntities (Lnet/minecraft/server/CommandListenerWrapper;)Ljava/util/List; findEntities
net/minecraft/server/EntitySenses net/minecraft/world/entity/ai/sensing/Sensing
	a mob
	b seen
	c unseen
	a ()V tick
	a (Lnet/minecraft/server/Entity;)Z canSee
net/minecraft/server/EntitySheep net/minecraft/world/entity/animal/Sheep
	bA eatBlockGoal
	bw DATA_WOOL_ID
	bx ITEM_BY_DYE
	by COLORARRAY_BY_COLOR
	bz eatAnimationTick
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	H ()Lnet/minecraft/server/MinecraftKey; getDefaultLootTable
	a (B)V handleEntityEvent
	a (Ljava/util/Random;)Lnet/minecraft/server/EnumColor; getRandomSheepColor
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	a (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/server/EntityAnimal;Lnet/minecraft/server/EntityAnimal;)Lnet/minecraft/server/EnumColor; getOffspringColor
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z mobInteract
	a (Lnet/minecraft/server/EnumColor;)[F getColorArray
	a (Lnet/minecraft/server/EnumColor;Lnet/minecraft/server/EnumColor;)Lnet/minecraft/server/InventoryCrafting; makeContainer
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntitySheep; getBreedOffspring
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c (Lnet/minecraft/server/EnumColor;)[F createSheepColor
	cA ()V registerAttributes
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	dT ()V customServerAiStep
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	k ()V aiStep
	n ()V registerGoals
	v (F)F getHeadEatPositionScale
	w (F)F getHeadEatAngleScale
	w_ ()V defineSynchedData
	z ()V ate
net/minecraft/server/EntityShulker net/minecraft/world/entity/monster/Shulker
	COLOR DATA_COLOR_ID
	b DATA_ATTACH_FACE_ID
	bA currentPeekAmount
	bB oldAttachPosition
	bC clientSideTeleportInterpolation
	bx COVERED_ARMOR_MODIFIER_UUID
	by COVERED_ARMOR_MODIFIER
	bz currentPeekAmountO
	c DATA_ATTACH_POS_ID
	d DATA_PEEK_ID
	B ()V playAmbientSound
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (DDDFFIZ)V lerpTo
	a (I)V setRawPeekAmount
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/EnumColor;)V setColor
	a (Lnet/minecraft/server/EnumMoveType;Lnet/minecraft/server/Vec3D;)V move
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	aV ()F getPickRadius
	at ()Z isMovementNoisy
	au ()Lnet/minecraft/server/AxisAlignedBB; getCollideBox
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	cA ()V registerAttributes
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	cl ()Lnet/minecraft/server/SoundCategory; getSoundSource
	d (DDD)V setPos
	dU ()I getMaxHeadXRot
	dV ()I getMaxHeadYRot
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eq ()Lnet/minecraft/server/EnumDirection; getAttachFace
	er ()Lnet/minecraft/server/BlockPosition; getAttachPosition
	es ()I getRawPeekAmount
	et ()I getClientSideTeleportInterpolation
	eu ()Lnet/minecraft/server/BlockPosition; getOldAttachPosition
	ev ()Z hasValidInterpolationPositions
	ew ()V setDefaultColor
	ex ()Lnet/minecraft/server/EnumColor; getColor
	ey ()Z isClosed
	g (Lnet/minecraft/server/BlockPosition;)V setAttachPosition
	h ()V tick
	i (Lnet/minecraft/server/Entity;)V push
	k ()V aiStep
	l ()Z teleportSomewhere
	n ()V registerGoals
	o ()Lnet/minecraft/server/EntityAIBodyControl; createBodyControl
	v (F)F getClientPeekAmount
	w_ ()V defineSynchedData
net/minecraft/server/EntityShulkerBullet net/minecraft/world/entity/projectile/ShulkerBullet
	ao targetDeltaZ
	ap ownerId
	aq lastKnownOwnerPos
	ar targetId
	as lastKnownTargetPos
	dir currentMoveDirection
	e flightSteps
	f targetDeltaX
	g targetDeltaY
	shooter owner
	target finalTarget
	L ()Lnet/minecraft/server/Packet; getAddEntityPacket
	a (D)Z shouldRenderAtSqrDistance
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;)V selectNextMoveDirection
	a (Lnet/minecraft/server/EnumDirection;)V setMoveDirection
	a (Lnet/minecraft/server/MovingObjectPosition;)V onHit
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	aI ()F getBrightness
	aK ()Z isPickable
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bf ()Z isOnFire
	cl ()Lnet/minecraft/server/SoundCategory; getSoundSource
	cy ()V checkDespawn
	f ()Lnet/minecraft/server/EnumDirection; getMoveDirection
	h ()V tick
	w_ ()V defineSynchedData
net/minecraft/server/EntitySilverfish net/minecraft/world/entity/monster/Silverfish
	b friendsGoal
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IWorldReader;)F getWalkTargetValue
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	aR ()D getRidingHeight
	at ()Z isMovementNoisy
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkSliverfishSpawnRules
	cA ()V registerAttributes
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	di ()Lnet/minecraft/server/EnumMonsterType; getMobType
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	h ()V tick
	l (F)V setYBodyRot
	n ()V registerGoals
net/minecraft/server/EntitySilverfish$PathfinderGoalSilverfishHideInBlock net/minecraft/world/entity/monster/Silverfish$SilverfishMergeWithStoneGoal
	h selectedDirection
	i doMerge
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
net/minecraft/server/EntitySilverfish$PathfinderGoalSilverfishWakeOthers net/minecraft/world/entity/monster/Silverfish$SilverfishWakeUpFriendsGoal
	b lookForFriends
	a ()Z canUse
	e ()V tick
	g ()V notifyHurt
net/minecraft/server/EntitySize net/minecraft/world/entity/EntityDimensions
	c fixed
	a (F)Lnet/minecraft/server/EntitySize; scale
	a (FF)Lnet/minecraft/server/EntitySize; scale
	b (FF)Lnet/minecraft/server/EntitySize; scalable
	c (FF)Lnet/minecraft/server/EntitySize; fixed
net/minecraft/server/EntitySkeleton net/minecraft/world/entity/monster/Skeleton
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/DamageSource;IZ)V dropCustomDeathLoot
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	l ()Lnet/minecraft/server/SoundEffect; getStepSound
net/minecraft/server/EntitySkeletonAbstract net/minecraft/world/entity/monster/AbstractSkeleton
	b bowGoal
	c meleeGoal
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	a (Lnet/minecraft/server/DifficultyDamageScaler;)V populateDefaultEquipmentSlots
	a (Lnet/minecraft/server/EntityLiving;F)V performRangedAttack
	a (Lnet/minecraft/server/EnumItemSlot;Lnet/minecraft/server/ItemStack;)V setItemSlot
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	aQ ()V rideTick
	aR ()D getRidingHeight
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/ItemStack;F)Lnet/minecraft/server/EntityArrow; getArrow
	cA ()V registerAttributes
	di ()Lnet/minecraft/server/EnumMonsterType; getMobType
	eq ()V reassessWeaponGoal
	k ()V aiStep
	l ()Lnet/minecraft/server/SoundEffect; getStepSound
	n ()V registerGoals
net/minecraft/server/EntitySkeletonStray net/minecraft/world/entity/monster/Stray
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	b (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkStraySpawnRules
	b (Lnet/minecraft/server/ItemStack;F)Lnet/minecraft/server/EntityArrow; getArrow
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	l ()Lnet/minecraft/server/SoundEffect; getStepSound
net/minecraft/server/EntitySkeletonWither net/minecraft/world/entity/monster/WitherSkeleton
	B (Lnet/minecraft/server/Entity;)Z doHurtTarget
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/DamageSource;IZ)V dropCustomDeathLoot
	a (Lnet/minecraft/server/DifficultyDamageScaler;)V populateDefaultEquipmentSlots
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	b (Lnet/minecraft/server/DifficultyDamageScaler;)V populateDefaultEquipmentEnchantments
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/ItemStack;F)Lnet/minecraft/server/EntityArrow; getArrow
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	d (Lnet/minecraft/server/MobEffect;)Z canBeAffected
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	l ()Lnet/minecraft/server/SoundEffect; getStepSound
net/minecraft/server/EntitySlice net/minecraft/util/ClassInstanceMultiMap
	a byClass
	b baseClass
	c allInstances
	a (Ljava/lang/Class;)Ljava/util/Collection; find
net/minecraft/server/EntitySlime net/minecraft/world/entity/monster/Slime
	b targetSquish
	bw ID_SIZE
	bx wasOnGround
	c squish
	d oSquish
	H ()Lnet/minecraft/server/MinecraftKey; getDefaultLootTable
	J ()Z shouldDespawnInPeaceful
	R ()Lnet/minecraft/server/EntityTypes; getType
	X ()V remove
	a (Lnet/minecraft/server/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/EntityPose;)Lnet/minecraft/server/EntitySize; getDimensions
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/EntityHuman;)V playerTouch
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkSlimeSpawnRules
	cA ()V registerAttributes
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	dU ()I getMaxHeadXRot
	dm ()F getSoundVolume
	dq ()V jumpFromGround
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eo ()I getJumpDelay
	ep ()V decreaseSquish
	eq ()Z isDealsDamage
	er ()F getAttackDamage
	ev ()Z isTiny
	ew ()Z doPlayJumpSound
	getSoundJump ()Lnet/minecraft/server/SoundEffect; getJumpSound
	getSoundSquish ()Lnet/minecraft/server/SoundEffect; getSquishSound
	h ()V tick
	i (Lnet/minecraft/server/Entity;)V push
	i (Lnet/minecraft/server/EntityLiving;)V dealDamage
	l ()Lnet/minecraft/server/ParticleParam; getParticleType
	n ()V registerGoals
	w_ ()V defineSynchedData
	z_ ()V refreshDimensions
net/minecraft/server/EntitySlime$ControllerMoveSlime net/minecraft/world/entity/monster/Slime$SlimeMoveControl
	i yRot
	j jumpDelay
	k slime
	l isAggressive
	a ()V tick
	a (D)V setWantedMovement
	a (FZ)V setDirection
net/minecraft/server/EntitySlime$PathfinderGoalSlimeIdle net/minecraft/world/entity/monster/Slime$SlimeKeepOnJumpingGoal
	a slime
	a ()Z canUse
	e ()V tick
net/minecraft/server/EntitySlime$PathfinderGoalSlimeNearestPlayer net/minecraft/world/entity/monster/Slime$SlimeAttackGoal
	a slime
	b growTiredTimer
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	e ()V tick
net/minecraft/server/EntitySlime$PathfinderGoalSlimeRandomDirection net/minecraft/world/entity/monster/Slime$SlimeRandomDirectionGoal
	a slime
	b chosenDegrees
	c nextRandomizeTime
	a ()Z canUse
	e ()V tick
net/minecraft/server/EntitySlime$PathfinderGoalSlimeRandomJump net/minecraft/world/entity/monster/Slime$SlimeFloatGoal
	a slime
	a ()Z canUse
	e ()V tick
net/minecraft/server/EntitySmallFireball net/minecraft/world/entity/projectile/SmallFireball
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/MovingObjectPosition;)V onHit
	aK ()Z isPickable
net/minecraft/server/EntitySnowball net/minecraft/world/entity/projectile/Snowball
	a (B)V handleEntityEvent
	a (Lnet/minecraft/server/MovingObjectPosition;)V onHit
	i ()Lnet/minecraft/server/Item; getDefaultItem
	n ()Lnet/minecraft/server/ParticleParam; getParticle
net/minecraft/server/EntitySnowman net/minecraft/world/entity/animal/SnowGolem
	b DATA_PUMPKIN_ID
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z mobInteract
	a (Lnet/minecraft/server/EntityLiving;F)V performRangedAttack
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	cA ()V registerAttributes
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	k ()V aiStep
	n ()V registerGoals
	setHasPumpkin (Z)V setPumpkin
	w_ ()V defineSynchedData
net/minecraft/server/EntitySpectralArrow net/minecraft/world/entity/projectile/SpectralArrow
	a (Lnet/minecraft/server/EntityLiving;)V doPostHurtEffects
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	h ()V tick
	n ()Lnet/minecraft/server/ItemStack; getPickupItem
net/minecraft/server/EntitySpider net/minecraft/world/entity/monster/Spider
	b DATA_FLAGS_ID
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/Vec3D;)V makeStuckInBlock
	aS ()D getRideHeight
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/World;)Lnet/minecraft/server/NavigationAbstract; createNavigation
	cA ()V registerAttributes
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	d (Lnet/minecraft/server/MobEffect;)Z canBeAffected
	di ()Lnet/minecraft/server/EnumMonsterType; getMobType
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	h ()V tick
	l ()Z isClimbing
	n ()V registerGoals
	r (Z)V setClimbing
	w_ ()V defineSynchedData
	y_ ()Z onLadder
net/minecraft/server/EntitySpider$GroupDataSpider net/minecraft/world/entity/monster/Spider$SpiderEffectsGroupData
	a effect
	a (Ljava/util/Random;)V setRandomEffect
net/minecraft/server/EntitySpider$PathfinderGoalSpiderMeleeAttack net/minecraft/world/entity/monster/Spider$SpiderAttackGoal
	a ()Z canUse
	a (Lnet/minecraft/server/EntityLiving;)D getAttackReachSqr
	b ()Z canContinueToUse
net/minecraft/server/EntitySpider$PathfinderGoalSpiderNearestAttackableTarget net/minecraft/world/entity/monster/Spider$SpiderTargetGoal
	a ()Z canUse
net/minecraft/server/EntitySquid net/minecraft/world/entity/animal/Squid
	b xBodyRot
	bA oldTentacleAngle
	bB speed
	bC tentacleSpeed
	bD rotateSpeed
	bE tx
	bF ty
	bG tz
	bw zBodyRotO
	bx tentacleMovement
	by oldTentacleMovement
	bz tentacleAngle
	c xBodyRotO
	d zBodyRot
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (B)V handleEntityEvent
	a (FFF)V setMovementVector
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	at ()Z isMovementNoisy
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkSquidSpawnRules
	cA ()V registerAttributes
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	dm ()F getSoundVolume
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	e (Lnet/minecraft/server/Vec3D;)V travel
	eq ()V spawnInk
	f (Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/Vec3D; rotateVector
	k ()V aiStep
	l ()Z hasMovementVector
	n ()V registerGoals
net/minecraft/server/EntitySquid$PathfinderGoalSquid net/minecraft/world/entity/animal/Squid$SquidRandomMovementGoal
	b squid
	a ()Z canUse
	e ()V tick
net/minecraft/server/EntityTNTPrimed net/minecraft/world/entity/item/PrimedTnt
	FUSE_TICKS DATA_FUSE_ID
	fuseTicks life
	source owner
	L ()Lnet/minecraft/server/Packet; getAddEntityPacket
	a (Lnet/minecraft/server/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getEyeHeight
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	aK ()Z isPickable
	at ()Z isMovementNoisy
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	getFuseTicks ()I getLife
	getSource ()Lnet/minecraft/server/EntityLiving; getOwner
	h ()V tick
	i ()I getFuse
	setFuseTicks (I)V setFuse
	w_ ()V defineSynchedData
net/minecraft/server/EntityTameableAnimal net/minecraft/world/entity/TamableAnimal
	bw DATA_FLAGS_ID
	bx DATA_OWNERUUID_ID
	goalSit sitGoal
	D_ ()Lnet/minecraft/server/Entity; getOwner
	a (B)V handleEntityEvent
	a (Lnet/minecraft/server/DamageSource;)V die
	a (Lnet/minecraft/server/EntityHuman;)Z canBeLeashed
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)Z wantsToAttack
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bv ()Lnet/minecraft/server/ScoreboardTeamBase; getTeam
	c (Lnet/minecraft/server/EntityLiving;)Z canAttack
	er ()V reassessTameGoals
	getGoalSit ()Lnet/minecraft/server/PathfinderGoalSit; getSitGoal
	i (Lnet/minecraft/server/EntityLiving;)Z isOwnedBy
	isTamed ()Z isTame
	r (Lnet/minecraft/server/Entity;)Z isAlliedTo
	r (Z)V spawnTamingParticles
	setTamed (Z)V setTame
	w_ ()V defineSynchedData
net/minecraft/server/EntityThrownExpBottle net/minecraft/world/entity/projectile/ThrownExperienceBottle
	a (Lnet/minecraft/server/MovingObjectPosition;)V onHit
	i ()Lnet/minecraft/server/Item; getDefaultItem
	l ()F getGravity
net/minecraft/server/EntityThrownTrident net/minecraft/world/entity/projectile/ThrownTrident
	ao clientSideReturnTridentTickCount
	ap ID_LOYALTY
	aq ID_FOIL
	as dealtDamage
	trident tridentItem
	a (Lnet/minecraft/server/MovingObjectPositionEntity;)V onHitEntity
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/MovingObjectPositionEntity; findHitEntity
	b (Lnet/minecraft/server/EntityHuman;)V playerTouch
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	h ()V tick
	i ()V tickDespawn
	i (DDD)Z shouldRender
	k ()Lnet/minecraft/server/SoundEffect; getDefaultHitGroundSoundEvent
	n ()Lnet/minecraft/server/ItemStack; getPickupItem
	u ()F getWaterInertia
	w ()Z isFoil
	w_ ()V defineSynchedData
	z ()Z isAcceptibleReturnOwner
net/minecraft/server/EntityTippedArrow net/minecraft/world/entity/projectile/Arrow
	COLOR ID_EFFECT_COLOR
	hasColor fixedColor
	potionRegistry potion
	a (B)V handleEntityEvent
	a (Lnet/minecraft/server/EntityLiving;)V doPostHurtEffects
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (I)V makeParticle
	b (Lnet/minecraft/server/ItemStack;)V setEffectsFromItem
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c (Lnet/minecraft/server/ItemStack;)I getCustomColor
	h ()V tick
	n ()Lnet/minecraft/server/ItemStack; getPickupItem
	setColor (I)V setFixedColor
	w_ ()V defineSynchedData
	z ()V updateColor
net/minecraft/server/EntityTrackerEntry net/minecraft/server/level/ServerEntity
	a LOGGER
	b level
	d updateInterval
	e trackDelta
	f broadcast
	headYaw yHeadRotp
	m ap
	o teleportDelay
	p lastPassengers
	q wasRiding
	r wasOnGround
	tickCounter tickCount
	tracker entity
	xLoc xp
	xRot xRotp
	yLoc yp
	yRot yRotp
	zLoc zp
	a ()V sendChanges
	a (Ljava/util/function/Consumer;)V sendPairingData
	a (Lnet/minecraft/server/EntityPlayer;)V removePairing
	b ()Lnet/minecraft/server/Vec3D; sentPos
	b (Lnet/minecraft/server/EntityPlayer;)V addPairing
	broadcastIncludingSelf (Lnet/minecraft/server/Packet;)V broadcastAndSend
	c ()V sendDirtyEntityData
	d ()V updateSentPos
net/minecraft/server/EntityTropicalFish net/minecraft/world/entity/animal/TropicalFish
	b COMMON_VARIANTS
	bw PATTERN_A_TEXTURE_LOCATIONS
	bx PATTERN_B_TEXTURE_LOCATIONS
	by isSchool
	c DATA_ID_TYPE_VARIANT
	d BASE_TEXTURE_LOCATIONS
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/EntityTropicalFish$Variant;Lnet/minecraft/server/EnumColor;Lnet/minecraft/server/EnumColor;)I calculateVariant
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (I)Ljava/lang/String; getPredefinedName
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c (I)Z isMaxGroupSizeReached
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eA ()[F getBaseColor
	eB ()[F getPatternColor
	eC ()I getBaseVariant
	eD ()Lnet/minecraft/server/MinecraftKey; getPatternTextureLocation
	eE ()Lnet/minecraft/server/MinecraftKey; getBaseTextureLocation
	er ()Lnet/minecraft/server/SoundEffect; getFlopSound
	i (Lnet/minecraft/server/ItemStack;)V saveToBucketTag
	l ()Lnet/minecraft/server/ItemStack; getBucketItemStack
	s (I)Lnet/minecraft/server/EnumColor; getBaseColor
	t (I)Lnet/minecraft/server/EnumColor; getPatternColor
	u (I)Ljava/lang/String; getFishTypeName
	w (I)I getBaseVariant
	w_ ()V defineSynchedData
	x (I)I getBaseColorIdx
	y (I)I getPatternColorIdx
	z (I)I getPatternVariant
net/minecraft/server/EntityTropicalFish$Variant net/minecraft/world/entity/animal/TropicalFish$Pattern
	m base
	n index
	o VALUES
	p $VALUES
	a ()I getBase
	a (II)Ljava/lang/String; getPatternName
	b ()I getIndex
	c ()Ljava/lang/String; getName
net/minecraft/server/EntityTurtle net/minecraft/world/entity/animal/Turtle
	bA TRAVEL_POS
	bB GOING_HOME
	bC TRAVELLING
	bD layEggCounter
	bw BABY_ON_LAND_SELECTOR
	bx HOME_POS
	by HAS_EGG
	bz LAYING_EGG
	A ()I getAmbientSoundInterval
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IWorldReader;)F getWalkTargetValue
	a (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/server/EntityHuman;)Z canBeLeashed
	a (Lnet/minecraft/server/EntityLightning;)V thunderHit
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	ak ()F nextStep
	am ()Lnet/minecraft/server/SoundEffect; getSwimSound
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	b (Lnet/minecraft/server/World;)Lnet/minecraft/server/NavigationAbstract; createNavigation
	bM ()Z isPushedByWater
	c (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkTurtleSpawnRules
	cA ()V registerAttributes
	cB ()Z canBreatheUnderwater
	cC ()F getScale
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	d (F)V playSwimSound
	di ()Lnet/minecraft/server/EnumMonsterType; getMobType
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	e (Lnet/minecraft/server/Vec3D;)V travel
	eq ()Z hasEgg
	er ()Z isLayingEgg
	es ()Lnet/minecraft/server/BlockPosition; getHomePos
	et ()Lnet/minecraft/server/BlockPosition; getTravelPos
	eu ()Z isGoingHome
	ev ()Z canFallInLove
	ez ()Z isTravelling
	g (Lnet/minecraft/server/BlockPosition;)V setHomePos
	h (Lnet/minecraft/server/BlockPosition;)V setTravelPos
	i (Lnet/minecraft/server/ItemStack;)Z isFood
	k ()V aiStep
	l ()V ageBoundaryReached
	n ()V registerGoals
	r (Z)V setHasEgg
	s (Z)V setLayingEgg
	t (Z)V setGoingHome
	u (Z)V setTravelling
	w_ ()V defineSynchedData
net/minecraft/server/EntityTypes net/minecraft/world/entity/EntityType
	aZ LOGGER
	ba factory
	bb category
	bc serialize
	bd summon
	be fireImmune
	bf canSpawnFarFromPlayer
	bg descriptionId
	bh description
	bi lootTable
	bj dimensions
	a ()Z canSerialize
	a (DDD)Lnet/minecraft/server/AxisAlignedBB; getAABB
	a (ILnet/minecraft/server/World;)Lnet/minecraft/server/Entity; create
	a (Ljava/lang/String;)Ljava/util/Optional; byString
	a (Ljava/lang/String;Lakr$a;)Lnet/minecraft/server/EntityTypes; register
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;ZLnet/minecraft/server/AxisAlignedBB;)D getYOffset
	a (Lnet/minecraft/server/NBTTagCompound;)Ljava/util/Optional; by
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/World;)Ljava/util/Optional; create
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/World;Ljava/util/function/Function;)Lnet/minecraft/server/Entity; loadEntityRecursive
	a (Lnet/minecraft/server/Tag;)Z is
	a (Lnet/minecraft/server/World;)Lnet/minecraft/server/Entity; create
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/Entity;Lnet/minecraft/server/NBTTagCompound;)V updateCustomEntityTag
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityTypes;)Lnet/minecraft/server/Entity; create
	b ()Z canSummon
	b (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/World;)Ljava/util/Optional; loadStaticEntity
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/IChatBaseComponent;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumMobSpawn;ZZ)Lnet/minecraft/server/Entity; create
	c ()Z fireImmune
	d ()Z canSpawnFarFromPlayer
	e ()Lnet/minecraft/server/EnumCreatureType; getCategory
	f ()Ljava/lang/String; getDescriptionId
	g ()Lnet/minecraft/server/IChatBaseComponent; getDescription
	getChunkRange ()I chunkRange
	getName (Lnet/minecraft/server/EntityTypes;)Lnet/minecraft/server/MinecraftKey; getKey
	getUpdateInterval ()I updateInterval
	h ()Lnet/minecraft/server/MinecraftKey; getDefaultLootTable
	i ()F getWidth
	isDeltaTracking ()Z trackDeltas
	j ()F getHeight
	k ()Lnet/minecraft/server/EntitySize; getDimensions
	spawnCreature (Lnet/minecraft/server/World;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumMobSpawn;ZZ)Lnet/minecraft/server/Entity; spawn
	spawnCreature (Lnet/minecraft/server/World;Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/IChatBaseComponent;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumMobSpawn;ZZ)Lnet/minecraft/server/Entity; spawn
net/minecraft/server/EntityVex net/minecraft/world/entity/monster/Vex
	b DATA_FLAGS_ID
	bw hasLimitedLife
	bx limitedLifeTicks
	c owner
	d boundOrigin
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (I)V setLimitedLife
	a (IZ)V setVexFlag
	a (Lnet/minecraft/server/DifficultyDamageScaler;)V populateDefaultEquipmentSlots
	a (Lnet/minecraft/server/EntityInsentient;)V setOwner
	a (Lnet/minecraft/server/EnumMoveType;Lnet/minecraft/server/Vec3D;)V move
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	aI ()F getBrightness
	b (I)Z getVexFlag
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	cA ()V registerAttributes
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eq ()Lnet/minecraft/server/BlockPosition; getBoundOrigin
	g (Lnet/minecraft/server/BlockPosition;)V setBoundOrigin
	h ()V tick
	l ()Lnet/minecraft/server/EntityInsentient; getOwner
	n ()V registerGoals
	setCharging (Z)V setIsCharging
	w_ ()V defineSynchedData
net/minecraft/server/EntityVillager net/minecraft/world/entity/npc/Villager
	bA WANTED_ITEMS
	bB updateMerchantTimer
	bC increaseProfessionLevelOnUpdate
	bD lastTradedPlayer
	bE chasing
	bF foodLevel
	bG gossips
	bH lastGossipTime
	bI lastGossipDecayTime
	bJ villagerXp
	bK lastRestockGameTime
	bL numberOfRestocksToday
	bM lastRestockCheckDayTime
	bN MEMORY_TYPES
	bO SENSOR_TYPES
	bx FOOD_POINTS
	by POI_MEMORIES
	bz DATA_VILLAGER_DATA
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	K ()V sendDebugPackets
	a (B)V handleEntityEvent
	a (J)Z wantsToSpawnGolem
	a (JI)V spawnGolemIfNeeded
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/BehaviorController; makeBrain
	a (Lnet/minecraft/server/BehaviorController;)V registerBrainGoals
	a (Lnet/minecraft/server/DamageSource;)V die
	a (Lnet/minecraft/server/Entity;)V tellWitnessesThatIWasMurdered
	a (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z mobInteract
	a (Lnet/minecraft/server/EntityItem;)V pickUpItem
	a (Lnet/minecraft/server/EntityLightning;)V thunderHit
	a (Lnet/minecraft/server/EntityLiving;)V setLastHurtByMob
	a (Lnet/minecraft/server/EntityVillager;J)V gossip
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/MemoryModuleType;)V releasePoi
	a (Lnet/minecraft/server/NBTBase;)V setGossips
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/ReputationEvent;Lnet/minecraft/server/Entity;)V onReputationEventFrom
	a (Lnet/minecraft/server/WorldServer;)V refreshBrain
	b (J)V sawGolem
	b (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityVillager; getBreedOffspring
	b (Lnet/minecraft/server/Item;)Z wantToPickUp
	b (Lnet/minecraft/server/MerchantRecipe;)V rewardTradeXp
	b (Lnet/minecraft/server/MerchantRecipeList;)V setOffers
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	by ()Lnet/minecraft/server/IChatBaseComponent; getTypeName
	c (J)Z hasSeenGolemRecently
	cA ()V registerAttributes
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	cz ()Lnet/minecraft/server/BehaviorController; getBrain
	d (J)Z golemSpawnConditionsMet
	dR ()V stopSleeping
	dT ()V customServerAiStep
	e (Lnet/minecraft/server/BlockPosition;)V startSleeping
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	e (Lnet/minecraft/server/EntityHuman;)V setTradingPlayer
	eA ()Lnet/minecraft/server/VillagerData; getVillagerData
	eC ()V updateTrades
	eD ()Z canRestock
	eE ()V restock
	eF ()Z shouldRestock
	eG ()V playWorkSound
	eH ()Z isChasing
	eJ ()V eatAndDigestFood
	eK ()Z hasExcessFood
	eL ()Z wantsMoreFood
	eM ()Z hasFarmSeeds
	eN ()Lnet/minecraft/server/Reputation; getGossips
	eO ()V setUnhappy
	eP ()V resetSpecialPrices
	eQ ()Z needsToRestock
	eR ()Z allowedToRestock
	eS ()V catchUpDemand
	eT ()V updateDemand
	eU ()Z hungry
	eV ()V eatUntilFull
	eW ()Z shouldIncreaseLevel
	eY ()I countFoodPointsInInventory
	eZ ()V makeBread
	er ()I getVillagerXp
	ey ()V stopTrading
	f (Lnet/minecraft/server/EntityHuman;)I getPlayerReputation
	fa ()V maybeDecayGossip
	fb ()Lnet/minecraft/server/EntityIronGolem; trySpawnGolem
	fc ()V resetNumberOfRestocks
	g (Lnet/minecraft/server/EntityHuman;)V startTrading
	h ()V tick
	h (D)Z removeWhenFarAway
	h (Lnet/minecraft/server/EntityHuman;)V updateSpecialPrices
	l ()V ageBoundaryReached
	populateTrades ()V increaseMerchantCareer
	s (Z)V setChasing
	setExperience (I)V setVillagerXp
	v (I)V digestFood
	w_ ()V defineSynchedData
net/minecraft/server/EntityVillagerAbstract net/minecraft/world/entity/npc/AbstractVillager
	bx DATA_UNHAPPY_COUNTER
	trades offers
	a (Lnet/minecraft/server/DamageSource;)V die
	a (Lnet/minecraft/server/DimensionManager;)Lnet/minecraft/server/Entity; changeDimension
	a (Lnet/minecraft/server/EntityHuman;)Z canBeLeashed
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/MerchantRecipe;)V notifyTrade
	a (Lnet/minecraft/server/MerchantRecipeList;)V overrideOffers
	a (Lnet/minecraft/server/MerchantRecipeList;[Lnet/minecraft/server/VillagerTrades$IMerchantRecipeOption;I)V addOffersFromItemListings
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/ParticleParam;)V addParticlesAroundSelf
	a_ (ILnet/minecraft/server/ItemStack;)Z setSlot
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/MerchantRecipe;)V rewardTradeXp
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	e (Lnet/minecraft/server/EntityHuman;)V setTradingPlayer
	eB ()Lnet/minecraft/server/World; getLevel
	eC ()V updateTrades
	eq ()I getUnhappyCounter
	er ()I getVillagerXp
	es ()Lnet/minecraft/server/EntityHuman; getTradingPlayer
	et ()Z isTrading
	eu ()Lnet/minecraft/server/MerchantRecipeList; getOffers
	ev ()Z showProgressBar
	ew ()Lnet/minecraft/server/SoundEffect; getNotifyTradeSound
	ex ()V playCelebrateSound
	ey ()V stopTrading
	i (Lnet/minecraft/server/ItemStack;)V notifyTradeUpdated
	r (Z)Lnet/minecraft/server/SoundEffect; getTradeUpdatedSound
	s (I)V setUnhappyCounter
	t (I)V overrideXp
	w_ ()V defineSynchedData
net/minecraft/server/EntityVillagerTrader net/minecraft/world/entity/npc/WanderingTrader
	bx wanderTarget
	by despawnDelay
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z mobInteract
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/MerchantRecipe;)V rewardTradeXp
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/SoundEffect; getDrinkingSound
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eA ()I getDespawnDelay
	eC ()V updateTrades
	eE ()V maybeDespawn
	eF ()Lnet/minecraft/server/BlockPosition; getWanderTarget
	ev ()Z showProgressBar
	ew ()Lnet/minecraft/server/SoundEffect; getNotifyTradeSound
	g (Lnet/minecraft/server/BlockPosition;)V setWanderTarget
	h (D)Z removeWhenFarAway
	k ()V aiStep
	n ()V registerGoals
	r (Z)Lnet/minecraft/server/SoundEffect; getTradeUpdatedSound
	u (I)V setDespawnDelay
net/minecraft/server/EntityVindicator net/minecraft/world/entity/monster/Vindicator
	b DOOR_BREAKING_PREDICATE
	bw isJohnny
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (IZ)V applyRaidBuffs
	a (Lnet/minecraft/server/DifficultyDamageScaler;)V populateDefaultEquipmentSlots
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/IChatBaseComponent;)V setCustomName
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	cA ()V registerAttributes
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	dT ()V customServerAiStep
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eq ()Lnet/minecraft/server/SoundEffect; getCelebrateSound
	l ()Lawb$a; getArmPose
	n ()V registerGoals
	r (Lnet/minecraft/server/Entity;)Z isAlliedTo
net/minecraft/server/EntityWaterAnimal net/minecraft/world/entity/animal/WaterAnimal
	A ()I getAmbientSoundInterval
	a (I)V handleAirSupply
	a (Lnet/minecraft/server/EntityHuman;)Z canBeLeashed
	a (Lnet/minecraft/server/IWorldReader;)Z checkSpawnObstruction
	aa ()V baseTick
	bM ()Z isPushedByWater
	cB ()Z canBreatheUnderwater
	d (Lnet/minecraft/server/EntityHuman;)I getExperienceReward
	di ()Lnet/minecraft/server/EnumMonsterType; getMobType
net/minecraft/server/EntityWitch net/minecraft/world/entity/monster/Witch
	b SPEED_MODIFIER_DRINKING_UUID
	bA attackPlayersGoal
	bw SPEED_MODIFIER_DRINKING
	bx DATA_USING_ITEM
	by usingTime
	bz healRaidersGoal
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (B)V handleEntityEvent
	a (IZ)V applyRaidBuffs
	a (Lnet/minecraft/server/EntityLiving;F)V performRangedAttack
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	c (Lnet/minecraft/server/DamageSource;F)F getDamageAfterMagicAbsorb
	cA ()V registerAttributes
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eq ()Lnet/minecraft/server/SoundEffect; getCelebrateSound
	es ()Z canBeLeader
	k ()V aiStep
	l ()Z isDrinkingPotion
	n ()V registerGoals
	t (Z)V setUsingItem
	w_ ()V defineSynchedData
net/minecraft/server/EntityWither net/minecraft/world/entity/boss/wither/WitherBoss
	b DATA_TARGET_A
	bA xRotOHeads
	bB yRotOHeads
	bC nextHeadUpdate
	bD idleHeadUpdates
	bE destroyBlocksTick
	bG LIVING_ENTITY_SELECTOR
	bH TARGETING_CONDITIONS
	bossBattle bossEvent
	bw DATA_TARGETS
	bx DATA_ID_INV
	by xRotHeads
	bz yRotHeads
	c DATA_TARGET_B
	d DATA_TARGET_C
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	J_ ()Z isPowered
	a (FFF)F rotlerp
	a (I)F getHeadYRot
	a (IDDDZ)V performRangedAttack
	a (ILnet/minecraft/server/EntityLiving;)V performRangedAttack
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/DamageSource;IZ)V dropCustomDeathLoot
	a (Lnet/minecraft/server/EntityLiving;F)V performRangedAttack
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/Vec3D;)V makeStuckInBlock
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (FF)Z causeFallDamage
	b (I)F getHeadXRot
	b (Lnet/minecraft/server/EntityPlayer;)V startSeenByPlayer
	b (Lnet/minecraft/server/IBlockData;)Z canDestroy
	b (Lnet/minecraft/server/IChatBaseComponent;)V setCustomName
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	bC ()Z canChangeDimensions
	c (Lnet/minecraft/server/EntityPlayer;)V stopSeenByPlayer
	c (Lnet/minecraft/server/MobEffect;)Z addEffect
	cA ()V registerAttributes
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	cy ()V checkDespawn
	d (Lnet/minecraft/server/MobEffect;)Z canBeAffected
	dT ()V customServerAiStep
	di ()Lnet/minecraft/server/EnumMonsterType; getMobType
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eq ()I getInvulnerableTicks
	getHeadTarget (I)I getAlternativeTarget
	k ()V aiStep
	l ()V makeInvulnerable
	n ()V registerGoals
	n (Lnet/minecraft/server/Entity;)Z canRide
	s (I)V setInvulnerableTicks
	setHeadTarget (II)V setAlternativeTarget
	u (I)D getHeadX
	v (I)D getHeadY
	w (I)D getHeadZ
	w_ ()V defineSynchedData
net/minecraft/server/EntityWitherSkull net/minecraft/world/entity/projectile/WitherSkull
	f DATA_DANGEROUS
	M_ ()Z shouldBurn
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/Explosion;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/Fluid;F)F getBlockExplosionResistance
	a (Lnet/minecraft/server/MovingObjectPosition;)V onHit
	aK ()Z isPickable
	bf ()Z isOnFire
	isCharged ()Z isDangerous
	k ()F getInertia
	setCharged (Z)V setDangerous
	w_ ()V defineSynchedData
net/minecraft/server/EntityWolf net/minecraft/world/entity/animal/Wolf
	bA DATA_INTERESTED_ID
	bB DATA_COLLAR_COLOR
	bC interestedAngle
	bD interestedAngleO
	bE isWet
	bF isShaking
	bG shakeAnim
	bH shakeAnimO
	bz PREY_SELECTOR
	B (Lnet/minecraft/server/Entity;)Z doHurtTarget
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (B)V handleEntityEvent
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	a (Lnet/minecraft/server/DamageSource;)V die
	a (Lnet/minecraft/server/DamageSource;F)Z hurt
	a (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityAgeable; getBreedOffspring
	a (Lnet/minecraft/server/EntityAnimal;)Z canMate
	a (Lnet/minecraft/server/EntityHuman;)Z canBeLeashed
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z mobInteract
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)Z wantsToAttack
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b (Lnet/minecraft/server/EntityAgeable;)Lnet/minecraft/server/EntityWolf; getBreedOffspring
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	cA ()V registerAttributes
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	dU ()I getMaxHeadXRot
	dX ()I getMaxSpawnClusterSize
	dm ()F getSoundVolume
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eA ()F getTailAngle
	eD ()Z isInterested
	ez ()Z isWet
	g (FF)F getBodyRollAngle
	h ()V tick
	h (Lnet/minecraft/server/EntityLiving;)V setTarget
	i (Lnet/minecraft/server/ItemStack;)Z isFood
	k ()V aiStep
	n ()V registerGoals
	s (Z)V setTame
	v (F)F getWetShade
	v (Z)V setIsInterested
	w (F)F getHeadRollAngle
	w_ ()V defineSynchedData
net/minecraft/server/EntityZombie net/minecraft/world/entity/monster/Zombie
	DROWN_CONVERTING DATA_DROWNED_CONVERSION_ID
	b SPEED_MODIFIER_BABY_UUID
	bA breakDoorGoal
	bB canBreakDoors
	bC inWaterTime
	bw DATA_BABY_ID
	bx DATA_SPECIAL_TYPE_ID
	bz DOOR_BREAKING_PREDICATE
	c SPEED_MODIFIER_BABY
	d SPAWN_REINFORCEMENTS_CHANCE
	drownedConversionTime conversionTime
	B (Lnet/minecraft/server/Entity;)Z doHurtTarget
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	K_ ()Z isSunSensitive
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V playStepSound
	a (Lnet/minecraft/server/DamageSource;IZ)V dropCustomDeathLoot
	a (Lnet/minecraft/server/DataWatcherObject;)V onSyncedDataUpdated
	a (Lnet/minecraft/server/DifficultyDamageScaler;)V populateDefaultEquipmentSlots
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z mobInteract
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	aR ()D getRidingHeight
	b (Lnet/minecraft/server/EntityLiving;)V killed
	b (Lnet/minecraft/server/EntityPose;Lnet/minecraft/server/EntitySize;)F getStandingEyeHeight
	b (Lnet/minecraft/server/EntityTypes;)V convertTo
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	cA ()V registerAttributes
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	d (Lnet/minecraft/server/EntityHuman;)I getExperienceReward
	damageEntity (Lnet/minecraft/server/DamageSource;F)Z hurt
	di ()Lnet/minecraft/server/EnumMonsterType; getMobType
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eq ()Z supportsBreakDoorGoal
	es ()Lnet/minecraft/server/ItemStack; getSkull
	et ()Z convertsInWater
	ev ()V doUnderWaterConversion
	ey ()Z canBreakDoors
	g (Lnet/minecraft/server/ItemStack;)Z canHoldItem
	getSoundStep ()Lnet/minecraft/server/SoundEffect; getStepSound
	h ()V tick
	isDrownConverting ()Z isUnderWaterConverting
	k ()V aiStep
	l ()V addBehaviourGoals
	n ()V registerGoals
	s (Z)V setCanBreakDoors
	startDrownedConversion (I)V startUnderWaterConversion
	v (F)V handleAttributes
	w_ ()V defineSynchedData
	x_ ()Z isBaby
net/minecraft/server/EntityZombie$GroupDataZombie net/minecraft/world/entity/monster/Zombie$ZombieGroupData
	a isBaby
net/minecraft/server/EntityZombieHusk net/minecraft/world/entity/monster/Husk
	B (Lnet/minecraft/server/Entity;)Z doHurtTarget
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	K_ ()Z isSunSensitive
	b (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z checkHuskSpawnRules
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	er ()Lnet/minecraft/server/SoundEffect; getStepSound
	es ()Lnet/minecraft/server/ItemStack; getSkull
	et ()Z convertsInWater
	ev ()V doUnderWaterConversion
net/minecraft/server/EntityZombieVillager net/minecraft/world/entity/monster/ZombieVillager
	CONVERTING DATA_CONVERTING_ID
	bA villagerXp
	by gossips
	bz tradeOffers
	c DATA_VILLAGER_DATA
	conversionPlayer conversionStarter
	conversionTime villagerConversionTime
	G ()Lnet/minecraft/server/SoundEffect; getAmbientSound
	a (B)V handleEntityEvent
	a (I)V setVillagerXp
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Z mobInteract
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EnumMobSpawn;Lnet/minecraft/server/GroupDataEntity;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/GroupDataEntity; finalizeSpawn
	a (Lnet/minecraft/server/NBTBase;)V setGossips
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	a (Lnet/minecraft/server/WorldServer;)V finishConversion
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	cX ()Lnet/minecraft/server/SoundEffect; getDeathSound
	dn ()F getVoicePitch
	e (Lnet/minecraft/server/DamageSource;)Lnet/minecraft/server/SoundEffect; getHurtSound
	eB ()I getVillagerXp
	er ()Lnet/minecraft/server/SoundEffect; getStepSound
	es ()Lnet/minecraft/server/ItemStack; getSkull
	et ()Z convertsInWater
	h ()V tick
	h (D)Z removeWhenFarAway
	setOffers (Lnet/minecraft/server/NBTTagCompound;)V setTradeOffers
	startConversion (Ljava/util/UUID;I)V startConverting
	w_ ()V defineSynchedData
net/minecraft/server/EnumAnimation net/minecraft/world/item/UseAnim
	h $VALUES
net/minecraft/server/EnumArmorMaterial net/minecraft/world/item/ArmorMaterials
	g HEALTH_PER_SLOT
	h name
	i durabilityMultiplier
	j slotProtections
	k enchantmentValue
	l sound
	m toughness
	n repairIngredient
	o $VALUES
	a ()I getEnchantmentValue
	a (Lnet/minecraft/server/EnumItemSlot;)I getDurabilityForSlot
	b ()Lnet/minecraft/server/SoundEffect; getEquipSound
	b (Lnet/minecraft/server/EnumItemSlot;)I getDefenseForSlot
	c ()Lnet/minecraft/server/RecipeItemStack; getRepairIngredient
	d ()Ljava/lang/String; getName
	e ()F getToughness
net/minecraft/server/EnumAxisCycle net/minecraft/core/AxisCycle
	d AXIS_VALUES
	e VALUES
	f $VALUES
	a ()Lnet/minecraft/server/EnumAxisCycle; inverse
	a (DDDLnet/minecraft/server/EnumDirection$EnumAxis;)D cycle
	a (IIILnet/minecraft/server/EnumDirection$EnumAxis;)I cycle
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;)Lnet/minecraft/server/EnumDirection$EnumAxis; cycle
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;Lnet/minecraft/server/EnumDirection$EnumAxis;)Lnet/minecraft/server/EnumAxisCycle; between
net/minecraft/server/EnumBannerPatternType net/minecraft/world/level/block/entity/BannerPattern
	O COUNT
	P AVAILABLE_PATTERNS
	Q filename
	R hashname
	S patterns
	T patternItem
	U $VALUES
	a ()Ljava/lang/String; getFilename
	a (Ljava/lang/String;)Lnet/minecraft/server/EnumBannerPatternType; byHash
	a (Z)Lnet/minecraft/server/MinecraftKey; location
	b ()Ljava/lang/String; getHashname
	c ()[Ljava/lang/String; getPatterns
	d ()Z hasPattern
	e ()Z hasPatternItem
	f ()Lnet/minecraft/server/ItemStack; getPatternItem
net/minecraft/server/EnumBlockMirror net/minecraft/world/level/block/Mirror
	d $VALUES
	a (II)I mirror
	a (Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/EnumBlockRotation; getRotation
	b (Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/EnumDirection; mirror
net/minecraft/server/EnumBlockRotation net/minecraft/world/level/block/Rotation
	e $VALUES
	a (II)I rotate
	a (Ljava/util/Random;)Lnet/minecraft/server/EnumBlockRotation; getRandom
	a (Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/EnumBlockRotation; getRotated
	a (Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/EnumDirection; rotate
	b (Ljava/util/Random;)Ljava/util/List; getShuffled
net/minecraft/server/EnumChatFormat net/minecraft/ChatFormatting
	A isFormat
	B toString
	C id
	D color
	E $VALUES
	character code
	w FORMATTING_BY_NAME
	x STRIP_FORMATTING_PATTERN
	y name
	a ()C getChar
	a (C)Lnet/minecraft/server/EnumChatFormat; getByCode
	a (I)Lnet/minecraft/server/EnumChatFormat; getById
	a (Ljava/lang/String;)Ljava/lang/String; getLastColors
	a (ZZ)Ljava/util/Collection; getNames
	b ()I getId
	b (Ljava/lang/String;)Ljava/lang/String; stripFormatting
	c (Ljava/lang/String;)Lnet/minecraft/server/EnumChatFormat; getByName
	d ()Z isColor
	d (Ljava/lang/String;)Ljava/lang/String; cleanName
	e ()Ljava/lang/Integer; getColor
	f ()Z shouldReset
	g ()Ljava/lang/String; getName
net/minecraft/server/EnumChatVisibility net/minecraft/world/entity/player/ChatVisiblity
	d BY_ID
	e id
	f key
	g $VALUES
	a ()I getId
	a (I)Lnet/minecraft/server/EnumChatVisibility; byId
	b ()Ljava/lang/String; getKey
net/minecraft/server/EnumColor net/minecraft/world/item/DyeColor
	A $VALUES
	q BY_ID
	r BY_FIREWORK_COLOR
	s id
	t name
	u color
	v textureDiffuseColor
	w textureDiffuseColorBGR
	x textureDiffuseColors
	y fireworkColor
	z textColor
	a (Ljava/lang/String;Lnet/minecraft/server/EnumColor;)Lnet/minecraft/server/EnumColor; byName
	b ()Ljava/lang/String; getName
	b (I)Lnet/minecraft/server/EnumColor; byFireworkColor
	c ()I getTextureDiffuseColorBGR
	d ()[F getTextureDiffuseColors
	e ()Lnet/minecraft/server/MaterialMapColor; getMaterialColor
	f ()I getFireworkColor
	fromColorIndex (I)Lnet/minecraft/server/EnumColor; byId
	g ()I getTextColor
	getColorIndex ()I getId
	o ()Ljava/lang/String; getSerializedName
net/minecraft/server/EnumCreatureType net/minecraft/world/entity/MobCategory
	f BY_NAME
	g max
	h isFriendly
	i isPersistent
	j name
	k $VALUES
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lnet/minecraft/server/EnumCreatureType; byName
	b ()I getMaxInstancesPerChunk
	c ()Z isFriendly
	d ()Z isPersistent
net/minecraft/server/EnumDifficulty net/minecraft/world/Difficulty
	e BY_ID
	f id
	g key
	h $VALUES
	a ()I getId
	a (Ljava/lang/String;)Lnet/minecraft/server/EnumDifficulty; byName
	b ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
	c ()Ljava/lang/String; getKey
	getById (I)Lnet/minecraft/server/EnumDifficulty; byId
net/minecraft/server/EnumDirection net/minecraft/core/Direction
	g data3d
	h oppositeIndex
	i data2d
	j name
	k axis
	l axisDirection
	m normal
	n VALUES
	o BY_NAME
	p BY_3D_DATA
	q BY_2D_DATA
	r BY_NORMAL
	s $VALUES
	a ()Lnet/minecraft/server/Quaternion; getRotation
	a (DDD)Lnet/minecraft/server/EnumDirection; getNearest
	a (FFF)Lnet/minecraft/server/EnumDirection; getNearest
	a (III)Lnet/minecraft/server/EnumDirection; fromNormal
	a (Lb;Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/EnumDirection; rotate
	a (Ljava/lang/String;)Lnet/minecraft/server/EnumDirection; byName
	a (Ljava/util/Random;)Lnet/minecraft/server/EnumDirection; getRandomFace
	a (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/EnumDirection; fromNormal
	a (Lnet/minecraft/server/Entity;)[Lnet/minecraft/server/EnumDirection; orderedByNearest
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;)Lnet/minecraft/server/EnumDirection; getClockWise
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;Lnet/minecraft/server/EnumDirection$EnumAxisDirection;)Lnet/minecraft/server/EnumDirection; fromAxisAndDirection
	a (Lnet/minecraft/server/EnumDirection$EnumAxisDirection;Lnet/minecraft/server/EnumDirection$EnumAxis;)Lnet/minecraft/server/EnumDirection; get
	a (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/EnumDirection;)[Lnet/minecraft/server/EnumDirection; makeDirectionArray
	b ()I get3DDataValue
	b (Lnet/minecraft/server/EnumDirection$EnumAxis;)Lnet/minecraft/server/EnumDirection; getCounterClockWise
	d ()Lnet/minecraft/server/EnumDirection$EnumAxisDirection; getAxisDirection
	f ()Lnet/minecraft/server/EnumDirection; getClockWise
	fromAngle (D)Lnet/minecraft/server/EnumDirection; fromYRot
	fromType1 (I)Lnet/minecraft/server/EnumDirection; from3DDataValue
	fromType2 (I)Lnet/minecraft/server/EnumDirection; from2DDataValue
	g ()Lnet/minecraft/server/EnumDirection; getCounterClockWise
	get2DRotationValue ()I get2DDataValue
	getAdjacentX ()I getStepX
	getAdjacentY ()I getStepY
	getAdjacentZ ()I getStepZ
	k ()Lnet/minecraft/server/Vector3fa; step
	l ()Ljava/lang/String; getName
	m ()Lnet/minecraft/server/EnumDirection$EnumAxis; getAxis
	n ()F toYRot
	o ()Ljava/lang/String; getSerializedName
	opposite ()Lnet/minecraft/server/EnumDirection; getOpposite
	p ()Lnet/minecraft/server/BaseBlockPosition; getNormal
	q ()Lnet/minecraft/server/EnumDirection; getClockWiseX
	r ()Lnet/minecraft/server/EnumDirection; getCounterClockWiseX
	s ()Lnet/minecraft/server/EnumDirection; getClockWiseZ
	t ()Lnet/minecraft/server/EnumDirection; getCounterClockWiseZ
net/minecraft/server/EnumDirection$EnumAxis net/minecraft/core/Direction$Axis
	d BY_NAME
	e name
	f $VALUES
	a ()Ljava/lang/String; getName
	a (DDD)D choose
	a (III)I choose
	a (Ljava/lang/String;)Lnet/minecraft/server/EnumDirection$EnumAxis; byName
	a (Ljava/util/Random;)Lnet/minecraft/server/EnumDirection$EnumAxis; getRandomAxis
	a (Lnet/minecraft/server/EnumDirection;)Z test
	b ()Z isVertical
	c ()Z isHorizontal
	d ()Lnet/minecraft/server/EnumDirection$EnumDirectionLimit; getPlane
	o ()Ljava/lang/String; getSerializedName
net/minecraft/server/EnumDirection$EnumAxisDirection net/minecraft/core/Direction$AxisDirection
	c step
	d name
	e $VALUES
	a ()I getStep
	b ()Ljava/lang/String; getName
net/minecraft/server/EnumDirection$EnumDirectionLimit net/minecraft/core/Direction$Plane
	c faces
	d axis
	e $VALUES
	a (Ljava/util/Random;)Lnet/minecraft/server/EnumDirection; getRandomDirection
	a (Lnet/minecraft/server/EnumDirection;)Z test
	b (Ljava/util/Random;)Lnet/minecraft/server/EnumDirection$EnumAxis; getRandomAxis
net/minecraft/server/EnumDirection8 net/minecraft/core/Direction8
	i NORTH_WEST_MASK
	j WEST_MASK
	k SOUTH_WEST_MASK
	l SOUTH_MASK
	m SOUTH_EAST_MASK
	n EAST_MASK
	o NORTH_EAST_MASK
	p NORTH_MASK
	q directions
	r $VALUES
	a ()Ljava/util/Set; getDirections
	a (ZZZZ)I getSideMask
net/minecraft/server/EnumDragonRespawn net/minecraft/world/level/dimension/end/DragonRespawnAnimation
	f $VALUES
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EnderDragonBattle;Ljava/util/List;ILnet/minecraft/server/BlockPosition;)V tick
net/minecraft/server/EnumGamemode net/minecraft/world/level/GameType
	f id
	g name
	h $VALUES
	a (ILnet/minecraft/server/EnumGamemode;)Lnet/minecraft/server/EnumGamemode; byId
	a (Ljava/lang/String;)Lnet/minecraft/server/EnumGamemode; byName
	a (Ljava/lang/String;Lnet/minecraft/server/EnumGamemode;)Lnet/minecraft/server/EnumGamemode; byName
	a (Lnet/minecraft/server/PlayerAbilities;)V updatePlayerAbilities
	b ()Ljava/lang/String; getName
	c ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
	d ()Z isBlockPlacingRestricted
	f ()Z isSurvival
	getById (I)Lnet/minecraft/server/EnumGamemode; byId
net/minecraft/server/EnumHand net/minecraft/world/InteractionHand
	c $VALUES
net/minecraft/server/EnumInteractionResult net/minecraft/world/InteractionResult
	e $VALUES
	a ()Z consumesAction
	b ()Z shouldSwing
net/minecraft/server/EnumItemRarity net/minecraft/world/item/Rarity
	e color
	f $VALUES
net/minecraft/server/EnumItemSlot net/minecraft/world/entity/EquipmentSlot
	g type
	h index
	i filterFlag
	j name
	k $VALUES
	a ()Lnet/minecraft/server/EnumItemSlot$Function; getType
	a (Lnet/minecraft/server/EnumItemSlot$Function;I)Lnet/minecraft/server/EnumItemSlot; byTypeAndIndex
	b ()I getIndex
	c ()I getFilterFlag
	fromName (Ljava/lang/String;)Lnet/minecraft/server/EnumItemSlot; byName
	getSlotName ()Ljava/lang/String; getName
net/minecraft/server/EnumItemSlot$Function net/minecraft/world/entity/EquipmentSlot$Type
	c $VALUES
net/minecraft/server/EnumMainHand net/minecraft/world/entity/HumanoidArm
	c name
	d $VALUES
	a ()Lnet/minecraft/server/EnumMainHand; getOpposite
net/minecraft/server/EnumMobSpawn net/minecraft/world/entity/MobSpawnType
	q $VALUES
net/minecraft/server/EnumMonsterType net/minecraft/world/entity/MobType
	e WATER
net/minecraft/server/EnumMoveType net/minecraft/world/entity/MoverType
	f $VALUES
net/minecraft/server/EnumPistonReaction net/minecraft/world/level/material/PushReaction
	f $VALUES
net/minecraft/server/EnumProtocol net/minecraft/network/ConnectionProtocol
	e LOOKUP
	f PROTOCOL_BY_PACKET
	g id
	h flows
	i $VALUES
	a ()I getId
	a (I)Lnet/minecraft/server/EnumProtocol; getById
	a (Lnet/minecraft/server/EnumProtocolDirection;I)Lnet/minecraft/server/Packet; createPacket
	a (Lnet/minecraft/server/EnumProtocolDirection;Lnet/minecraft/server/Packet;)Ljava/lang/Integer; getPacketId
	a (Lnet/minecraft/server/Packet;)Lnet/minecraft/server/EnumProtocol; getProtocolForPacket
	b ()Lku$b; protocol
net/minecraft/server/EnumProtocolDirection net/minecraft/network/protocol/PacketFlow
	c $VALUES
	a ()Lnet/minecraft/server/EnumProtocolDirection; getOpposite
net/minecraft/server/EnumRenderType net/minecraft/world/level/block/RenderShape
	d $VALUES
net/minecraft/server/EnumResourcePackType net/minecraft/server/packs/PackType
	c directory
	d $VALUES
	a ()Ljava/lang/String; getDirectory
net/minecraft/server/EnumResourcePackVersion net/minecraft/server/packs/repository/PackCompatibility
	d description
	e confirmation
	f $VALUES
	a ()Z isCompatible
	a (I)Lnet/minecraft/server/EnumResourcePackVersion; forFormat
	b ()Lnet/minecraft/server/IChatBaseComponent; getDescription
	c ()Lnet/minecraft/server/IChatBaseComponent; getConfirmation
net/minecraft/server/EnumSkyBlock net/minecraft/world/level/LightLayer
	c surrounding
	d $VALUES
net/minecraft/server/EnumToolMaterial net/minecraft/world/item/Tiers
	f level
	g uses
	h speed
	i damage
	j enchantmentValue
	k repairIngredient
	l $VALUES
	a ()I getUses
	b ()F getSpeed
	c ()F getAttackDamageBonus
	d ()I getLevel
	e ()I getEnchantmentValue
	f ()Lnet/minecraft/server/RecipeItemStack; getRepairIngredient
net/minecraft/server/ExceptionWorldConflict net/minecraft/world/level/LevelConflictException
net/minecraft/server/ExpirableListEntry net/minecraft/server/players/BanListEntry
	a DATE_FORMAT
	b created
	c source
	d expires
	e reason
	a ()Ljava/util/Date; getCreated
	a (Lcom/google/gson/JsonObject;)V serialize
	e ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
	f ()Z hasExpired
net/minecraft/server/Explosion net/minecraft/world/level/Explosion
	a fire
	b blockInteraction
	blocks toBlow
	c random
	j damageSource
	l hitPlayers
	posX x
	posY y
	posZ z
	size radius
	world level
	a ()V explode
	a (Lit/unimi/dsi/fastutil/objects/ObjectArrayList;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/BlockPosition;)V addBlockDrops
	a (Lnet/minecraft/server/DamageSource;)V setDamageSource
	a (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Entity;)F getSeenPercent
	a (Z)V finalizeExplosion
	b ()Lnet/minecraft/server/DamageSource; getDamageSource
	c ()Ljava/util/Map; getHitPlayers
	clearBlocks ()V clearToBlow
	getBlocks ()Ljava/util/List; getToBlow
	getSource ()Lnet/minecraft/server/EntityLiving; getSourceMob
net/minecraft/server/Explosion$Effect net/minecraft/world/level/Explosion$BlockInteraction
	d $VALUES
net/minecraft/server/FileUtils net/minecraft/FileUtil
	a COPY_COUNTER_PATTERN
	b RESERVED_WINDOWS_FILENAMES
	a (Ljava/nio/file/Path;)Z isPathNormalized
	a (Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; findAvailableName
	b (Ljava/nio/file/Path;)Z isPathPortable
	b (Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;)Ljava/nio/file/Path; createPathToResource
net/minecraft/server/Fluid net/minecraft/world/level/material/FluidState
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/Fluid; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;Lnet/minecraft/server/Fluid;)Lcom/mojang/datafixers/Dynamic; serialize
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/FluidType;Lnet/minecraft/server/EnumDirection;)Z canBeReplacedWith
	a (Lnet/minecraft/server/Tag;)Z is
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V tick
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V animateTick
	b (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z shouldRenderBackwardUpFace
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V randomTick
	c (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/Vec3D; getFlow
	d (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; getShape
	f ()F getOwnHeight
	g ()I getAmount
	getBlockData ()Lnet/minecraft/server/IBlockData; createLegacyBlock
	h ()Z isRandomlyTicking
	j ()Lnet/minecraft/server/ParticleParam; getDripParticle
	k ()F getExplosionResistance
net/minecraft/server/FluidImpl net/minecraft/world/level/material/FluidStateImpl
	c ()Lnet/minecraft/server/FluidType; getType
net/minecraft/server/FluidType net/minecraft/world/level/material/Fluid
	a defaultFluidState
	c FLUID_STATE_REGISTRY
	d stateDefinition
	a ()Lnet/minecraft/server/Item; getBucket
	a (Lbyh$a;)V createFluidStateDefinition
	a (Lnet/minecraft/server/Fluid;)F getOwnHeight
	a (Lnet/minecraft/server/Fluid;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)F getHeight
	a (Lnet/minecraft/server/Fluid;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/FluidType;Lnet/minecraft/server/EnumDirection;)Z canBeReplacedWith
	a (Lnet/minecraft/server/FluidType;)Z isSame
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Fluid;)Lnet/minecraft/server/Vec3D; getFlow
	a (Lnet/minecraft/server/IWorldReader;)I getTickDelay
	a (Lnet/minecraft/server/Tag;)Z is
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Fluid;)V tick
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Fluid;Ljava/util/Random;)V animateTick
	b ()Z isEmpty
	b (Lnet/minecraft/server/Fluid;)Lnet/minecraft/server/IBlockData; createLegacyBlock
	b (Lnet/minecraft/server/Fluid;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; getShape
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Fluid;Ljava/util/Random;)V randomTick
	c ()F getExplosionResistance
	c (Lnet/minecraft/server/Fluid;)Z isSource
	d (Lnet/minecraft/server/Fluid;)I getAmount
	f (Lnet/minecraft/server/Fluid;)V registerDefaultState
	g ()Lnet/minecraft/server/BlockStateList; getStateDefinition
	h ()Lnet/minecraft/server/Fluid; defaultFluidState
	i ()Lnet/minecraft/server/ParticleParam; getDripParticle
	j ()Z isRandomlyTicking
net/minecraft/server/FluidTypeEmpty net/minecraft/world/level/material/EmptyFluid
	a ()Lnet/minecraft/server/Item; getBucket
	a (Lnet/minecraft/server/Fluid;)F getOwnHeight
	a (Lnet/minecraft/server/Fluid;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)F getHeight
	a (Lnet/minecraft/server/Fluid;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/FluidType;Lnet/minecraft/server/EnumDirection;)Z canBeReplacedWith
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Fluid;)Lnet/minecraft/server/Vec3D; getFlow
	a (Lnet/minecraft/server/IWorldReader;)I getTickDelay
	b ()Z isEmpty
	b (Lnet/minecraft/server/Fluid;)Lnet/minecraft/server/IBlockData; createLegacyBlock
	b (Lnet/minecraft/server/Fluid;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; getShape
	c ()F getExplosionResistance
	c (Lnet/minecraft/server/Fluid;)Z isSource
	d (Lnet/minecraft/server/Fluid;)I getAmount
net/minecraft/server/FluidTypeFlowing net/minecraft/world/level/material/FlowingFluid
	e OCCLUSION_CACHE
	f shapes
	a (IZ)Lnet/minecraft/server/Fluid; getFlowing
	a (Lbyh$a;)V createFluidStateDefinition
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)S getCacheKey
	a (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z canPassThroughWall
	a (Lnet/minecraft/server/Fluid;)F getOwnHeight
	a (Lnet/minecraft/server/Fluid;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)F getHeight
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Fluid;)V spread
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Fluid;Lnet/minecraft/server/IBlockData;)V spreadToSides
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V beforeDestroyingBlock
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/Fluid;)V spreadTo
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z isSolidFace
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Fluid;)Lnet/minecraft/server/Vec3D; getFlow
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/Fluid;Lnet/minecraft/server/FluidType;)Z canSpreadTo
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/FluidType;)Z canHoldFluid
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/FluidType;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z isWaterHole
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/FluidType;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/Fluid;)Z canPassThrough
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)I sourceNeighborCount
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lit/unimi/dsi/fastutil/shorts/Short2ObjectMap;Lit/unimi/dsi/fastutil/shorts/Short2BooleanMap;)I getSlopeDistance
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/Fluid; getNewLiquid
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Fluid;)V tick
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Fluid;Lnet/minecraft/server/Fluid;)I getSpreadDelay
	a (Z)Lnet/minecraft/server/Fluid; getSource
	b (Lnet/minecraft/server/Fluid;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; getShape
	b (Lnet/minecraft/server/IWorldReader;)I getSlopeFindDistance
	b (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Ljava/util/Map; getSpread
	c (Lnet/minecraft/server/Fluid;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z hasSameAbove
	c (Lnet/minecraft/server/IWorldReader;)I getDropOff
	d ()Lnet/minecraft/server/FluidType; getFlowing
	d (Lnet/minecraft/server/Fluid;)I getAmount
	e ()Lnet/minecraft/server/FluidType; getSource
	e (Lnet/minecraft/server/Fluid;)I getLegacyLevel
	f ()Z canConvertToSource
	g (Lnet/minecraft/server/Fluid;)Z affectsFlow
	h (Lnet/minecraft/server/Fluid;)Z isSourceBlockOfThisType
net/minecraft/server/FluidTypeLava net/minecraft/world/level/material/LavaFluid
	a ()Lnet/minecraft/server/Item; getBucket
	a (Lnet/minecraft/server/Fluid;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/FluidType;Lnet/minecraft/server/EnumDirection;)Z canBeReplacedWith
	a (Lnet/minecraft/server/FluidType;)Z isSame
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)V fizz
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V beforeDestroyingBlock
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/Fluid;)V spreadTo
	a (Lnet/minecraft/server/IWorldReader;)I getTickDelay
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z hasFlammableNeighbours
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Fluid;Ljava/util/Random;)V animateTick
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Fluid;Lnet/minecraft/server/Fluid;)I getSpreadDelay
	b (Lnet/minecraft/server/Fluid;)Lnet/minecraft/server/IBlockData; createLegacyBlock
	b (Lnet/minecraft/server/IWorldReader;)I getSlopeFindDistance
	b (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z isFlammable
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Fluid;Ljava/util/Random;)V randomTick
	c ()F getExplosionResistance
	c (Lnet/minecraft/server/IWorldReader;)I getDropOff
	d ()Lnet/minecraft/server/FluidType; getFlowing
	e ()Lnet/minecraft/server/FluidType; getSource
	f ()Z canConvertToSource
	i ()Lnet/minecraft/server/ParticleParam; getDripParticle
	j ()Z isRandomlyTicking
net/minecraft/server/FluidTypeWater net/minecraft/world/level/material/WaterFluid
	a ()Lnet/minecraft/server/Item; getBucket
	a (Lnet/minecraft/server/Fluid;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/FluidType;Lnet/minecraft/server/EnumDirection;)Z canBeReplacedWith
	a (Lnet/minecraft/server/FluidType;)Z isSame
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V beforeDestroyingBlock
	a (Lnet/minecraft/server/IWorldReader;)I getTickDelay
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Fluid;Ljava/util/Random;)V animateTick
	b (Lnet/minecraft/server/Fluid;)Lnet/minecraft/server/IBlockData; createLegacyBlock
	b (Lnet/minecraft/server/IWorldReader;)I getSlopeFindDistance
	c ()F getExplosionResistance
	c (Lnet/minecraft/server/IWorldReader;)I getDropOff
	d ()Lnet/minecraft/server/FluidType; getFlowing
	e ()Lnet/minecraft/server/FluidType; getSource
	f ()Z canConvertToSource
	i ()Lnet/minecraft/server/ParticleParam; getDripParticle
net/minecraft/server/FluidTypes net/minecraft/world/level/material/Fluids
	a (Ljava/lang/String;Lnet/minecraft/server/FluidType;)Lnet/minecraft/server/FluidType; register
net/minecraft/server/FoodInfo net/minecraft/world/food/FoodProperties
	a nutrition
	b saturationModifier
	c isMeat
	d canAlwaysEat
	e fastFood
	f effects
	c ()Z isMeat
	d ()Z canAlwaysEat
	e ()Z isFastFood
	f ()Ljava/util/List; getEffects
net/minecraft/server/FoodMetaData net/minecraft/world/food/FoodData
	e lastFoodLevel
	foodTickTimer tickTimer
	a (F)V addExhaustion
	a (I)V setFoodLevel
	a (Lnet/minecraft/server/EntityHuman;)V tick
	a (Lnet/minecraft/server/Item;Lnet/minecraft/server/ItemStack;)V eat
	a (Lnet/minecraft/server/NBTTagCompound;)V readAdditionalSaveData
	b ()I getLastFoodLevel
	b (F)V setSaturation
	b (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	c ()Z needsFood
	c (F)V setExhaustion
	d ()F getExhaustionLevel
net/minecraft/server/Foods net/minecraft/world/food/Foods
	A POISONOUS_POTATO
	B PORKCHOP
	C POTATO
	D PUFFERFISH
	E PUMPKIN_PIE
	F RABBIT
	G RABBIT_STEW
	H ROTTEN_FLESH
	I SALMON
	J SPIDER_EYE
	K SUSPICIOUS_STEW
	L SWEET_BERRIES
	M TROPICAL_FISH
	a APPLE
	b BAKED_POTATO
	c BEEF
	d BEETROOT
	e BEETROOT_SOUP
	f BREAD
	g CARROT
	h CHICKEN
	i CHORUS_FRUIT
	j COD
	k COOKED_BEEF
	l COOKED_CHICKEN
	m COOKED_COD
	n COOKED_MUTTON
	o COOKED_PORKCHOP
	p COOKED_RABBIT
	q COOKED_SALMON
	r COOKIE
	s DRIED_KELP
	t ENCHANTED_GOLDEN_APPLE
	u GOLDEN_APPLE
	v GOLDEN_CARROT
	w HONEY_BOTTLE
	x MELON_SLICE
	y MUSHROOM_STEW
	z MUTTON
	a (I)Lnet/minecraft/server/FoodInfo; stew
net/minecraft/server/ForcedChunk net/minecraft/world/level/ForcedChunksSavedData
	a chunks
	a ()Lit/unimi/dsi/fastutil/longs/LongSet; getChunks
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
net/minecraft/server/FurnaceRecipe net/minecraft/world/item/crafting/SmeltingRecipe
	W_ ()Lnet/minecraft/server/RecipeSerializer; getSerializer
	h ()Lnet/minecraft/server/ItemStack; getToastSymbol
net/minecraft/server/GameProfileBanEntry net/minecraft/server/players/UserBanListEntry
	a (Lcom/google/gson/JsonObject;)V serialize
	b (Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile; createGameProfile
	e ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
net/minecraft/server/GameProfileBanList net/minecraft/server/players/UserBanList
	a ()[Ljava/lang/String; getUserList
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/JsonListEntry; createEntry
	a (Ljava/lang/Object;)Ljava/lang/String; getKeyForUser
	a (Ljava/lang/String;)Lcom/mojang/authlib/GameProfile; find
	b (Lcom/mojang/authlib/GameProfile;)Ljava/lang/String; getKeyForUser
net/minecraft/server/GameProfileSerializer net/minecraft/nbt/NbtUtils
	a LOGGER
	a (ILjava/lang/StringBuilder;)Ljava/lang/StringBuilder; indent
	a (Lcom/mojang/datafixers/DataFixer;Lnet/minecraft/server/DataFixTypes;Lnet/minecraft/server/NBTTagCompound;I)Lnet/minecraft/server/NBTTagCompound; update
	a (Lcom/mojang/datafixers/DataFixer;Lnet/minecraft/server/DataFixTypes;Lnet/minecraft/server/NBTTagCompound;II)Lnet/minecraft/server/NBTTagCompound; update
	a (Ljava/lang/StringBuilder;Lnet/minecraft/server/NBTBase;IZ)Ljava/lang/StringBuilder; prettyPrint
	a (Ljava/util/UUID;)Lnet/minecraft/server/NBTTagCompound; createUUIDTag
	a (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/NBTTagCompound; writeBlockPos
	a (Lnet/minecraft/server/Fluid;)Lnet/minecraft/server/NBTTagCompound; writeFluidState
	a (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/NBTTagCompound; writeBlockState
	a (Lnet/minecraft/server/IBlockDataHolder;Lnet/minecraft/server/IBlockState;Ljava/lang/String;Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/IBlockDataHolder; setValueHelper
	a (Lnet/minecraft/server/IBlockState;Ljava/lang/Comparable;)Ljava/lang/String; getName
	a (Lnet/minecraft/server/NBTBase;)Ljava/lang/String; prettyPrint
	a (Lnet/minecraft/server/NBTBase;Lnet/minecraft/server/NBTBase;Z)Z compareNbt
	a (Lnet/minecraft/server/NBTBase;Z)Ljava/lang/String; prettyPrint
	b (Lnet/minecraft/server/NBTTagCompound;)Ljava/util/UUID; loadUUIDTag
	c (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/BlockPosition; readBlockPos
	d (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/IBlockData; readBlockState
	deserialize (Lnet/minecraft/server/NBTTagCompound;)Lcom/mojang/authlib/GameProfile; readGameProfile
	e (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/Fluid; readFluidState
	serialize (Lnet/minecraft/server/NBTTagCompound;Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/server/NBTTagCompound; writeGameProfile
net/minecraft/server/GameProfiler net/minecraft/util/profiling/GameProfiler
	a LOGGER
	b MAXIMUM_TICK_TIME_NANOS
	c getTickTime
	d continuous
	e perTick
	a ()V startTick
	a (Ljava/lang/String;)V push
	a (Ljava/util/function/Supplier;)V push
	b ()V endTick
	b (Ljava/lang/String;)V popPush
	b (Ljava/util/function/Supplier;)V popPush
	c ()V pop
	d ()Laii$a; continuous
net/minecraft/server/GameProfilerDisabled net/minecraft/util/profiling/InactiveProfiler
	a INACTIVE
	a ()V startTick
	a (Ljava/lang/String;)V push
	a (Ljava/util/function/Supplier;)V push
	b ()V endTick
	b (Ljava/lang/String;)V popPush
	b (Ljava/util/function/Supplier;)V popPush
	c ()V pop
	d ()Lnet/minecraft/server/MethodProfilerResults; getResults
net/minecraft/server/GameProfilerFiller net/minecraft/util/profiling/ProfilerFiller
	a ()V startTick
	a (Ljava/util/function/Supplier;)V push
	b ()V endTick
	b (Ljava/util/function/Supplier;)V popPush
	enter (Ljava/lang/String;)V push
	exit ()V pop
	exitEnter (Ljava/lang/String;)V popPush
net/minecraft/server/GameProfilerFillerActive net/minecraft/util/profiling/ProfileCollector
	a (Ljava/lang/String;)V push
	a (Ljava/util/function/Supplier;)V push
	b (Ljava/lang/String;)V popPush
	b (Ljava/util/function/Supplier;)V popPush
	c ()V pop
	d ()Lnet/minecraft/server/MethodProfilerResults; getResults
net/minecraft/server/GameRules net/minecraft/world/level/GameRules
	ANNOUNCE_ADVANCEMENTS RULE_ANNOUNCE_ADVANCEMENTS
	COMMAND_BLOCK_OUTPUT RULE_COMMANDBLOCKOUTPUT
	D LOGGER
	DISABLE_ELYTRA_MOVEMENT_CHECK RULE_DISABLE_ELYTRA_MOVEMENT_CHECK
	DISABLE_RAIDS RULE_DISABLE_RAIDS
	DO_DAYLIGHT_CYCLE RULE_DAYLIGHT
	DO_ENTITY_DROPS RULE_DOENTITYDROPS
	DO_FIRE_TICK RULE_DOFIRETICK
	DO_IMMEDIATE_RESPAWN RULE_DO_IMMEDIATE_RESPAWN
	DO_INSOMNIA RULE_DOINSOMNIA
	DO_LIMITED_CRAFTING RULE_LIMITED_CRAFTING
	DO_MOB_LOOT RULE_DOMOBLOOT
	DO_MOB_SPAWNING RULE_DOMOBSPAWNING
	DO_TILE_DROPS RULE_DOBLOCKDROPS
	DO_WEATHER_CYCLE RULE_WEATHER_CYCLE
	DROWNING_DAMAGE RULE_DROWNING_DAMAGE
	E GAME_RULE_TYPES
	F rules
	FALL_DAMAGE RULE_FALL_DAMAGE
	FIRE_DAMAGE RULE_FIRE_DAMAGE
	KEEP_INVENTORY RULE_KEEPINVENTORY
	LOG_ADMIN_COMMANDS RULE_LOGADMINCOMMANDS
	MAX_COMMAND_CHAIN_LENGTH RULE_MAX_COMMAND_CHAIN_LENGTH
	MAX_ENTITY_CRAMMING RULE_MAX_ENTITY_CRAMMING
	MOB_GRIEFING RULE_MOBGRIEFING
	NATURAL_REGENERATION RULE_NATURAL_REGENERATION
	RANDOM_TICK_SPEED RULE_RANDOMTICKING
	REDUCED_DEBUG_INFO RULE_REDUCEDDEBUGINFO
	SEND_COMMAND_FEEDBACK RULE_SENDCOMMANDFEEDBACK
	SHOW_DEATH_MESSAGES RULE_SHOWDEATHMESSAGES
	SPAWN_RADIUS RULE_SPAWN_RADIUS
	SPECTATORS_GENERATE_CHUNKS RULE_SPECTATORSGENERATECHUNKS
	a ()Lnet/minecraft/server/NBTTagCompound; createTag
	a (Ljava/lang/String;Lnet/minecraft/server/GameRules$GameRuleDefinition;)Lnet/minecraft/server/GameRules$GameRuleKey; register
	a (Lnet/minecraft/server/GameRules$GameRuleVisitor;)V visitGameRuleTypes
	a (Lnet/minecraft/server/GameRules$GameRuleVisitor;Lnet/minecraft/server/GameRules$GameRuleKey;Lnet/minecraft/server/GameRules$GameRuleDefinition;)V cap
	a (Lnet/minecraft/server/NBTTagCompound;)V loadFromTag
	get (Lnet/minecraft/server/GameRules$GameRuleKey;)Lnet/minecraft/server/GameRules$GameRuleValue; getRule
net/minecraft/server/GameRules$GameRuleBoolean net/minecraft/world/level/GameRules$BooleanValue
	a value
	a ()Z get
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V updateFromArgument
	a (Ljava/lang/String;)V deserialize
	a (ZLnet/minecraft/server/MinecraftServer;)V set
	b ()Ljava/lang/String; serialize
	b (Z)Lnet/minecraft/server/GameRules$GameRuleDefinition; create
	b (ZLjava/util/function/BiConsumer;)Lnet/minecraft/server/GameRules$GameRuleDefinition; create
	c ()I getCommandResult
	d ()Lnet/minecraft/server/GameRules$GameRuleBoolean; getSelf
	e ()Lnet/minecraft/server/GameRules$GameRuleValue; getSelf
net/minecraft/server/GameRules$GameRuleDefinition net/minecraft/world/level/GameRules$Type
	a argument
	b constructor
	c callback
	a (Ljava/lang/String;)Lcom/mojang/brigadier/builder/RequiredArgumentBuilder; createArgument
	getValue ()Lnet/minecraft/server/GameRules$GameRuleValue; createRule
net/minecraft/server/GameRules$GameRuleInt net/minecraft/world/level/GameRules$IntegerValue
	a value
	a ()I get
	a (ILjava/util/function/BiConsumer;)Lnet/minecraft/server/GameRules$GameRuleDefinition; create
	a (ILnet/minecraft/server/MinecraftServer;)V set
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V updateFromArgument
	a (Ljava/lang/String;)V deserialize
	b ()Ljava/lang/String; serialize
	b (I)Lnet/minecraft/server/GameRules$GameRuleDefinition; create
	b (Ljava/lang/String;)I safeParse
	c ()I getCommandResult
	d ()Lnet/minecraft/server/GameRules$GameRuleInt; getSelf
	e ()Lnet/minecraft/server/GameRules$GameRuleValue; getSelf
net/minecraft/server/GameRules$GameRuleKey net/minecraft/world/level/GameRules$Key
	a id
	a ()Ljava/lang/String; getId
net/minecraft/server/GameRules$GameRuleValue net/minecraft/world/level/GameRules$Value
	a type
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V updateFromArgument
	b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V setFromArgument
	e ()Lnet/minecraft/server/GameRules$GameRuleValue; getSelf
	getIntValue ()I getCommandResult
	getValue ()Ljava/lang/String; serialize
	onChange (Lnet/minecraft/server/MinecraftServer;)V onChanged
	setValue (Ljava/lang/String;)V deserialize
net/minecraft/server/GameRules$GameRuleVisitor net/minecraft/world/level/GameRules$GameRuleTypeVisitor
	a (Lnet/minecraft/server/GameRules$GameRuleKey;Lnet/minecraft/server/GameRules$GameRuleDefinition;)V visit
net/minecraft/server/GameTestHarnessAssertion net/minecraft/gametest/framework/GameTestAssertException
net/minecraft/server/GameTestHarnessAssertionPosition net/minecraft/gametest/framework/GameTestAssertPosException
	a absolutePos
	b relativePos
	c tick
	a ()Ljava/lang/String; getMessageToShowAtBlock
	b ()Lnet/minecraft/server/BlockPosition; getRelativePos
	c ()Lnet/minecraft/server/BlockPosition; getAbsolutePos
net/minecraft/server/GameTestHarnessBatch net/minecraft/gametest/framework/GameTestBatch
	a name
	b testFunctions
	c beforeBatchFunction
	a ()Ljava/lang/String; getName
	a (Lnet/minecraft/server/WorldServer;)V runBeforeBatchFunction
	b ()Ljava/util/Collection; getTestFunctions
net/minecraft/server/GameTestHarnessBatchRunner net/minecraft/gametest/framework/GameTestBatchRunner
	a LOGGER
	b startPos
	c level
	d testTicker
	e allTestInfos
	f batches
	g currentBatchTracker
	h currentBatchIndex
	i nextTestPos
	j maxDepthOnThisRow
	a ()Ljava/util/List; getTestInfos
	a (I)V runBatch
	a (Ljava/util/Collection;)V createStructuresForBatch
	a (Lnet/minecraft/server/GameTestHarnessInfo;)V testCompleted
	b ()V start
net/minecraft/server/GameTestHarnessCollector net/minecraft/gametest/framework/MultipleTestTracker
	a tests
	b listener
	a ()I getFailedRequiredCount
	a (Lnet/minecraft/server/GameTestHarnessInfo;)V add
	a (Lnet/minecraft/server/GameTestHarnessListener;)V setListener
	b ()I getFailedOptionalCount
	c ()I getDoneCount
	d ()Z hasFailedRequired
	e ()Z hasFailedOptional
	f ()Ljava/util/Collection; getFailedRequired
	g ()Ljava/util/Collection; getFailedOptional
	h ()I getTotalCount
	i ()Z isDone
	j ()Ljava/lang/String; getProgressBar
net/minecraft/server/GameTestHarnessEvent net/minecraft/gametest/framework/GameTestEvent
	a expectedDelay
	b assertion
	a (JLjava/lang/Runnable;)Lnet/minecraft/server/GameTestHarnessEvent; create
	a (Ljava/lang/Runnable;)Lnet/minecraft/server/GameTestHarnessEvent; create
net/minecraft/server/GameTestHarnessHelper net/minecraft/gametest/framework/GameTestHelper
	a testInfo
	b finalCheckAdded
	a ()Lnet/minecraft/server/WorldServer; getLevel
	a (I)V setDayTime
	a (III)V pressButton
	a (IIILnet/minecraft/server/Block;)V setBlock
	a (IIILnet/minecraft/server/IBlockData;)V setBlock
	a (ILjava/lang/Runnable;)V succeedOnTickWhen
	a (JLjava/lang/Runnable;)V runAtTickTime
	a (JLnet/minecraft/server/BlockPosition;)V assertAtTickTimeContainerEmpty
	a (JLnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Item;)V assertAtTickTimeContainerContains
	a (Ljava/lang/Runnable;)V succeedIf
	a (Lnet/minecraft/server/Block;III)V assertBlockPresent
	a (Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;)V assertBlockPresent
	a (Lnet/minecraft/server/BlockPosition;)V pressButton
	a (Lnet/minecraft/server/BlockPosition;J)V pulseRedstone
	a (Lnet/minecraft/server/BlockPosition;Ljava/util/function/Predicate;Ljava/lang/String;)V assertBlock
	a (Lnet/minecraft/server/BlockPosition;Ljava/util/function/Predicate;Ljava/util/function/Supplier;)V assertBlock
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;)V setBlock
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityTypes;Ljava/util/function/Function;Ljava/lang/Object;)V assertEntityData
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V setBlock
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockState;Ljava/lang/Comparable;)V assertBlockProperty
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockState;Ljava/util/function/Predicate;Ljava/lang/String;)V assertBlockProperty
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Item;)V assertContainerContains
	a (Lnet/minecraft/server/EntityTypes;)V assertEntityPresent
	a (Lnet/minecraft/server/EntityTypes;DDD)V assertEntityTouching
	a (Lnet/minecraft/server/EntityTypes;III)Lnet/minecraft/server/Entity; spawn
	a (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/Entity; spawn
	a (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/BlockPosition;D)V assertEntityPresent
	a (Lnet/minecraft/server/Item;Lnet/minecraft/server/BlockPosition;D)V assertItemEntityPresent
	a (Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/Vec3D; absoluteVec
	b ()Lnet/minecraft/server/BlockPosition; getTestPos
	b (III)V pullLever
	b (JLjava/lang/Runnable;)V runAfterDelay
	b (Ljava/lang/Runnable;)V succeedWhen
	b (Lnet/minecraft/server/Block;III)V assertBlockNotPresent
	b (Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;)V assertBlockNotPresent
	b (Lnet/minecraft/server/BlockPosition;)V pullLever
	b (Lnet/minecraft/server/BlockPosition;Ljava/util/function/Predicate;Ljava/util/function/Supplier;)V assertBlockState
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityTypes;Ljava/util/function/Function;Ljava/lang/Object;)V succeedWhenEntityData
	b (Lnet/minecraft/server/EntityTypes;)V assertEntityNotPresent
	b (Lnet/minecraft/server/EntityTypes;DDD)V assertEntityNotTouching
	b (Lnet/minecraft/server/EntityTypes;III)V assertEntityPresent
	b (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/BlockPosition;)V assertEntityPresent
	c ()Lnet/minecraft/server/BlockPosition; getStructureSize
	c (Ljava/lang/Runnable;)V failIf
	c (Lnet/minecraft/server/Block;III)V succeedWhenBlockPresent
	c (Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;)V succeedWhenBlockPresent
	c (Lnet/minecraft/server/BlockPosition;)V assertContainerEmpty
	c (Lnet/minecraft/server/EntityTypes;III)V assertEntityNotPresent
	c (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/BlockPosition;)V assertEntityNotPresent
	d ()V killAllEntities
	d (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/BlockPosition; absolutePos
	d (Lnet/minecraft/server/EntityTypes;III)V succeedWhenEntityPresent
	d (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/BlockPosition;)V succeedWhenEntityPresent
	e ()V setNight
	e (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/Block; getBlockType
	e (Lnet/minecraft/server/EntityTypes;III)V succeedWhenEntityNotPresent
	e (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/BlockPosition;)V succeedWhenEntityNotPresent
	f ()V succeed
	g ()Lnet/minecraft/server/GameTestHarnessSequence; startSequence
	h ()V ensureSingleFinalCheck
	i ()Lnet/minecraft/server/AxisAlignedBB; getBounds
net/minecraft/server/GameTestHarnessITestReporter net/minecraft/gametest/framework/TestReporter
	a (Lnet/minecraft/server/GameTestHarnessInfo;)V onTestFailed
	b (Lnet/minecraft/server/GameTestHarnessInfo;)V onTestSuccess
net/minecraft/server/GameTestHarnessInfo net/minecraft/gametest/framework/GameTestInfo
	a testFunction
	b testPos
	c level
	d listeners
	e timeoutTicks
	f sequences
	g runAtTickTimeMap
	h startTick
	i tickCount
	j started
	k timer
	l done
	m error
	a ()V startExecution
	a (I)V spawnStructure
	a (JLjava/lang/Runnable;)V setRunAtTickTime
	a (Ljava/lang/Throwable;)V fail
	a (Lnet/minecraft/server/BlockPosition;)V assignPosition
	a (Lnet/minecraft/server/GameTestHarnessListener;)V addListener
	b ()V tick
	c ()Ljava/lang/String; getTestName
	d ()Lnet/minecraft/server/BlockPosition; getTestPos
	e ()Lnet/minecraft/server/BlockPosition; getStructureSize
	f ()Lnet/minecraft/server/AxisAlignedBB; getStructureBounds
	g ()Lnet/minecraft/server/WorldServer; getLevel
	h ()Z hasSucceeded
	i ()Z hasFailed
	j ()Z hasStarted
	k ()Z isDone
	l ()J getRunTime
	m ()V succeed
	n ()Ljava/lang/Throwable; getError
	o ()J getTick
	p ()Lnet/minecraft/server/GameTestHarnessSequence; createSequence
	q ()Z isRequired
	r ()Z isOptional
	s ()Ljava/lang/String; getStructureName
	t ()V startTest
	u ()Lnet/minecraft/server/TileEntityStructure; getStructureBlockEntity
	v ()V finish
net/minecraft/server/GameTestHarnessListener net/minecraft/gametest/framework/GameTestListener
	a (Lnet/minecraft/server/GameTestHarnessInfo;)V testStructureLoaded
	b (Lnet/minecraft/server/GameTestHarnessInfo;)V testPassed
	c (Lnet/minecraft/server/GameTestHarnessInfo;)V testFailed
net/minecraft/server/GameTestHarnessLogger net/minecraft/gametest/framework/LogTestReporter
	a LOGGER
	a (Lnet/minecraft/server/GameTestHarnessInfo;)V onTestFailed
	b (Lnet/minecraft/server/GameTestHarnessInfo;)V onTestSuccess
net/minecraft/server/GameTestHarnessRegistry net/minecraft/gametest/framework/GameTestRegistry
	a testFunctions
	b testClassNames
	c beforeBatchFunctions
	a ()Ljava/util/Collection; getAllTestFunctions
	a (Ljava/lang/Class;)V register
	a (Ljava/lang/String;)Ljava/util/Collection; getTestFunctionsForClassName
	a (Ljava/lang/reflect/Method;)V register
	a (Lnet/minecraft/server/GameTestHarnessTestFunction;Ljava/lang/String;)Z isTestFunctionPartOfClass
	b ()Ljava/util/Collection; getAllTestClassNames
	b (Ljava/lang/String;)Z isTestClass
	b (Ljava/lang/reflect/Method;)Ljava/util/Collection; useTestGeneratorMethod
	c (Ljava/lang/String;)Ljava/util/function/Consumer; getBeforeBatchFunction
	c (Ljava/lang/reflect/Method;)Lnet/minecraft/server/GameTestHarnessTestFunction; turnMethodIntoTestFunction
	d (Ljava/lang/String;)Ljava/util/Optional; findTestFunction
	d (Ljava/lang/reflect/Method;)Ljava/util/function/Consumer; turnMethodIntoConsumer
	e (Ljava/lang/String;)Lnet/minecraft/server/GameTestHarnessTestFunction; getTestFunction
net/minecraft/server/GameTestHarnessRunner net/minecraft/gametest/framework/GameTestRunner
	a TEST_REPORTER
	a (Ljava/lang/String;ZLjava/lang/String;)Lnet/minecraft/server/ItemStack; createBook
	a (Ljava/util/Collection;)Ljava/util/Collection; groupTestsIntoBatches
	a (Ljava/util/Collection;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/GameTestHarnessTicker;)Ljava/util/Collection; runTestBatches
	a (Lnet/minecraft/server/GameTestHarnessInfo;Lnet/minecraft/server/GameTestHarnessTicker;)V runTest
	a (Lnet/minecraft/server/WorldServer;)V clearMarkers
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/lang/String;)V showRedBox
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/GameTestHarnessTicker;I)V clearAllTests
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EnumChatFormat;Ljava/lang/String;)V say
	b (Ljava/util/Collection;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/GameTestHarnessTicker;)Ljava/util/Collection; runTests
	b (Lnet/minecraft/server/GameTestHarnessInfo;Ljava/lang/String;)V spawnLectern
	b (Lnet/minecraft/server/GameTestHarnessInfo;Lnet/minecraft/server/Block;)V spawnBeacon
	c (Lnet/minecraft/server/GameTestHarnessInfo;)V visualizeFailedTest
	d (Lnet/minecraft/server/GameTestHarnessInfo;)V visualizePassedTest
net/minecraft/server/GameTestHarnessSequence net/minecraft/gametest/framework/GameTestSequence
	a parent
	b events
	c lastTick
	a ()V thenSucceed
	a (I)Lnet/minecraft/server/GameTestHarnessSequence; thenIdle
	a (ILjava/lang/Runnable;)Lnet/minecraft/server/GameTestHarnessSequence; thenExecuteAfter
	a (J)V tickAndContinue
	a (JLjava/lang/Runnable;)Lnet/minecraft/server/GameTestHarnessSequence; thenWait
	a (Ljava/lang/Runnable;)Lnet/minecraft/server/GameTestHarnessSequence; thenWait
	a (Ljava/util/function/Supplier;)V thenFail
	b ()Lja$a; thenTrigger
	b (J)V tickAndFailIfNotComplete
	b (Ljava/lang/Runnable;)Lnet/minecraft/server/GameTestHarnessSequence; thenExecute
	c (J)V tick
	c (Ljava/lang/Runnable;)V executeWithoutFail
net/minecraft/server/GameTestHarnessStructures net/minecraft/gametest/framework/StructureUtils
	a testStructuresDir
	a (ILnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldServer;)V clearBlock
	a (Ljava/lang/String;Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/WorldServer;Z)Lnet/minecraft/server/TileEntityStructure; spawnStructure
	a (Ljava/lang/String;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/WorldServer;)V createNewEmptyStructureBlock
	a (Ljava/lang/String;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldServer;Z)Lnet/minecraft/server/TileEntityStructure; createStructureBlock
	a (Ljava/lang/String;Lnet/minecraft/server/WorldServer;)Lnet/minecraft/server/DefinedStructure; getStructureTemplate
	a (Ljava/nio/file/Path;)Lnet/minecraft/server/NBTTagCompound; tryLoadStructure
	a (Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/WorldServer;)Ljava/util/Optional; findStructureBlockContainingPos
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;I)Lnet/minecraft/server/StructureBoundingBox; createStructureBoundingBox
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldServer;)Z doesStructureContain
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldServer;)V addCommandBlockAndButtonToStartTest
	a (Lnet/minecraft/server/StructureBoundingBox;ILnet/minecraft/server/WorldServer;)V clearSpaceForStructure
	a (Lnet/minecraft/server/TileEntityStructure;)Lnet/minecraft/server/AxisAlignedBB; getStructureBounds
	b (Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/WorldServer;)Lnet/minecraft/server/BlockPosition; findNearestStructureBlock
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldServer;)V forceLoadChunks
	c (Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/WorldServer;)Ljava/util/Collection; findStructureBlocks
net/minecraft/server/GameTestHarnessTestClassArgument net/minecraft/gametest/framework/TestClassNameArgument
	a EXAMPLES
	a ()Lnet/minecraft/server/GameTestHarnessTestClassArgument; testClassName
	a (Lcom/mojang/brigadier/StringReader;)Ljava/lang/String; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/lang/String; getTestClassName
net/minecraft/server/GameTestHarnessTestCommand net/minecraft/gametest/framework/TestCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/server/CommandListenerWrapper;)I runNearbyTest
	a (Lnet/minecraft/server/CommandListenerWrapper;I)I clearAllTests
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/lang/String;)I showPos
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/lang/String;III)I createNewStructure
	a (Lnet/minecraft/server/CommandListenerWrapper;Ljava/util/Collection;)V runTests
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/GameTestHarnessTestFunction;)I runTest
	a (Lnet/minecraft/server/GameTestHarnessTestFunction;Lnet/minecraft/server/WorldServer;)V runTestPreparation
	a (Lnet/minecraft/server/WorldServer;Ljava/lang/String;Lnet/minecraft/server/EnumChatFormat;)V say
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/GameTestHarnessCollector;)V runTest
	b (Lnet/minecraft/server/CommandListenerWrapper;)I runAllNearbyTests
	b (Lnet/minecraft/server/CommandListenerWrapper;Ljava/lang/String;)I runAllTestsInClass
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/GameTestHarnessCollector;)V showTestSummaryIfAllDone
	c (Lnet/minecraft/server/CommandListenerWrapper;)I runAllTests
	c (Lnet/minecraft/server/CommandListenerWrapper;Ljava/lang/String;)V say
	d (Lnet/minecraft/server/CommandListenerWrapper;Ljava/lang/String;)I exportTestStructure
	e (Lnet/minecraft/server/CommandListenerWrapper;Ljava/lang/String;)I importTestStructure
net/minecraft/server/GameTestHarnessTestFunction net/minecraft/gametest/framework/TestFunction
	a batchName
	b testName
	c structureName
	d required
	e function
	f maxTicks
	g setupTicks
	a ()Ljava/lang/String; getTestName
	a (Lnet/minecraft/server/GameTestHarnessHelper;)V run
	b ()Ljava/lang/String; getStructureName
	c ()I getMaxTicks
	d ()Z isRequired
	e ()Ljava/lang/String; getBatchName
	f ()J getSetupTicks
net/minecraft/server/GameTestHarnessTestFunctionArgument net/minecraft/gametest/framework/TestFunctionArgument
	a EXAMPLES
	a ()Lnet/minecraft/server/GameTestHarnessTestFunctionArgument; testFunctionArgument
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/GameTestHarnessTestFunction; parse
	a (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/GameTestHarnessTestFunction; getTestFunction
net/minecraft/server/GameTestHarnessTicker net/minecraft/gametest/framework/GameTestTicker
	a singleton
	b testInfos
	a ()V clear
	a (Lnet/minecraft/server/GameTestHarnessInfo;)V add
	b ()V tick
net/minecraft/server/GameTestHarnessTimeout net/minecraft/gametest/framework/GameTestTimeoutException
net/minecraft/server/GenLayer net/minecraft/world/level/newbiome/layer/Layer
	a LOGGER
	b area
	a (I)Lnet/minecraft/server/BiomeBase; getBiome
	a (II)Lnet/minecraft/server/BiomeBase; get
	a (IIII)[Lnet/minecraft/server/BiomeBase; getArea
net/minecraft/server/GenLayerBiome net/minecraft/world/level/newbiome/layer/BiomeInitLayer
	a BIRCH_FOREST
	b DESERT
	c MOUNTAINS
	d FOREST
	e SNOWY_TUNDRA
	f JUNGLE
	g BADLANDS_PLATEAU
	h WOODED_BADLANDS_PLATEAU
	i MUSHROOM_FIELDS
	j PLAINS
	k GIANT_TREE_TAIGA
	l DARK_FOREST
	m SAVANNA
	n SWAMP
	o TAIGA
	p SNOWY_TAIGA
	q LEGACY_WARM_BIOMES
	r WARM_BIOMES
	s MEDIUM_BIOMES
	t COLD_BIOMES
	u ICE_BIOMES
	v fixedBiome
	w warmBiomes
	a (Lnet/minecraft/server/WorldGenContext;I)I apply
net/minecraft/server/GenLayerCleaner net/minecraft/world/level/newbiome/layer/RiverInitLayer
	b $VALUES
	a (Lnet/minecraft/server/WorldGenContext;I)I apply
net/minecraft/server/GenLayerDeepOcean net/minecraft/world/level/newbiome/layer/AddDeepOceanLayer
	b $VALUES
	a (Lnet/minecraft/server/WorldGenContext;IIIII)I apply
net/minecraft/server/GenLayerDesert net/minecraft/world/level/newbiome/layer/BiomeEdgeLayer
	b DESERT
	c MOUNTAINS
	d WOODED_MOUNTAINS
	e SNOWY_TUNDRA
	f JUNGLE
	g BAMBOO_JUNGLE
	h JUNGLE_EDGE
	i BADLANDS
	j BADLANDS_PLATEAU
	k WOODED_BADLANDS_PLATEAU
	l PLAINS
	m GIANT_TREE_TAIGA
	n MOUNTAIN_EDGE
	o SWAMP
	p TAIGA
	q SNOWY_TAIGA
	r $VALUES
	a (II)Z isValidTemperatureEdge
	a (Lnet/minecraft/server/WorldGenContext;IIIII)I apply
	a ([IIIIIIII)Z checkEdge
	b ([IIIIIIII)Z checkEdgeStrict
net/minecraft/server/GenLayerIcePlains net/minecraft/world/level/newbiome/layer/RemoveTooMuchOceanLayer
	b $VALUES
	a (Lnet/minecraft/server/WorldGenContext;IIIII)I apply
net/minecraft/server/GenLayerIsland net/minecraft/world/level/newbiome/layer/AddIslandLayer
	b $VALUES
	a (Lnet/minecraft/server/WorldGenContext;IIIII)I apply
net/minecraft/server/GenLayerJungle net/minecraft/world/level/newbiome/layer/RareBiomeLargeLayer
	b JUNGLE
	c BAMBOO_JUNGLE
	d $VALUES
	a (Lnet/minecraft/server/WorldGenContext;I)I apply
net/minecraft/server/GenLayerMushroomIsland net/minecraft/world/level/newbiome/layer/AddMushroomIslandLayer
	b MUSHROOM_FIELDS
	c $VALUES
	a (Lnet/minecraft/server/WorldGenContext;IIIII)I apply
net/minecraft/server/GenLayerMushroomShore net/minecraft/world/level/newbiome/layer/ShoreLayer
	b BEACH
	c SNOWY_BEACH
	d DESERT
	e MOUNTAINS
	f WOODED_MOUNTAINS
	g FOREST
	h JUNGLE
	i JUNGLE_EDGE
	j JUNGLE_HILLS
	k BADLANDS
	l WOODED_BADLANDS_PLATEAU
	m BADLANDS_PLATEAU
	n ERODED_BADLANDS
	o MODIFIED_WOODED_BADLANDS_PLATEAU
	p MODIFIED_BADLANDS_PLATEAU
	q MUSHROOM_FIELDS
	r MUSHROOM_FIELD_SHORE
	s RIVER
	t MOUNTAIN_EDGE
	u STONE_SHORE
	v SWAMP
	w TAIGA
	x $VALUES
	a (Lnet/minecraft/server/WorldGenContext;IIIII)I apply
	c (I)Z isJungleCompatible
	d (I)Z isMesa
net/minecraft/server/GenLayerOcean net/minecraft/world/level/newbiome/layer/OceanMixerLayer
	b $VALUES
	a (Lnet/minecraft/server/WorldGenContext;Lnet/minecraft/server/Area;Lnet/minecraft/server/Area;II)I applyPixel
net/minecraft/server/GenLayerOceanEdge net/minecraft/world/level/newbiome/layer/OceanLayer
	b $VALUES
	a (Lnet/minecraft/server/WorldGenContext;II)I applyPixel
net/minecraft/server/GenLayerPlains net/minecraft/world/level/newbiome/layer/RareBiomeSpotLayer
	b PLAINS
	c SUNFLOWER_PLAINS
	d $VALUES
	a (Lnet/minecraft/server/WorldGenContext;I)I apply
net/minecraft/server/GenLayerRegionHills net/minecraft/world/level/newbiome/layer/RegionHillsLayer
	A SNOWY_TAIGA_HILLS
	B TAIGA_HILLS
	C $VALUES
	b LOGGER
	c BIRCH_FOREST
	d BIRCH_FOREST_HILLS
	e DESERT
	f DESERT_HILLS
	g MOUNTAINS
	h WOODED_MOUNTAINS
	i FOREST
	j WOODED_HILLS
	k SNOWY_TUNDRA
	l SNOWY_MOUNTAIN
	m JUNGLE
	n JUNGLE_HILLS
	o BAMBOO_JUNGLE
	p BAMBOO_JUNGLE_HILLS
	q BADLANDS
	r WOODED_BADLANDS_PLATEAU
	s PLAINS
	t GIANT_TREE_TAIGA
	u GIANT_TREE_TAIGA_HILLS
	v DARK_FOREST
	w SAVANNA
	x SAVANNA_PLATEAU
	y TAIGA
	z SNOWY_TAIGA
	a (Lnet/minecraft/server/WorldGenContext;Lnet/minecraft/server/Area;Lnet/minecraft/server/Area;II)I applyPixel
net/minecraft/server/GenLayerRiver net/minecraft/world/level/newbiome/layer/RiverLayer
	b RIVER
	c $VALUES
	a (Lnet/minecraft/server/WorldGenContext;IIIII)I apply
	c (I)I riverFilter
net/minecraft/server/GenLayerRiverMix net/minecraft/world/level/newbiome/layer/RiverMixerLayer
	b FROZEN_RIVER
	c SNOWY_TUNDRA
	d MUSHROOM_FIELDS
	e MUSHROOM_FIELD_SHORE
	f RIVER
	g $VALUES
	a (Lnet/minecraft/server/WorldGenContext;Lnet/minecraft/server/Area;Lnet/minecraft/server/Area;II)I applyPixel
net/minecraft/server/GenLayerSmooth net/minecraft/world/level/newbiome/layer/SmoothLayer
	b $VALUES
	a (Lnet/minecraft/server/WorldGenContext;IIIII)I apply
net/minecraft/server/GenLayerSpecial net/minecraft/world/level/newbiome/layer/AddEdgeLayer
net/minecraft/server/GenLayerSpecial$Special1 net/minecraft/world/level/newbiome/layer/AddEdgeLayer$CoolWarm
	b $VALUES
	a (Lnet/minecraft/server/WorldGenContext;IIIII)I apply
net/minecraft/server/GenLayerSpecial$Special2 net/minecraft/world/level/newbiome/layer/AddEdgeLayer$HeatIce
	b $VALUES
	a (Lnet/minecraft/server/WorldGenContext;IIIII)I apply
net/minecraft/server/GenLayerSpecial$Special3 net/minecraft/world/level/newbiome/layer/AddEdgeLayer$IntroduceSpecial
	b $VALUES
	a (Lnet/minecraft/server/WorldGenContext;I)I apply
net/minecraft/server/GenLayerTopSoil net/minecraft/world/level/newbiome/layer/AddSnowLayer
	b $VALUES
	a (Lnet/minecraft/server/WorldGenContext;I)I apply
net/minecraft/server/GenLayerZoom net/minecraft/world/level/newbiome/layer/ZoomLayer
	c $VALUES
	a (I)I getParentX
	a (Lnet/minecraft/server/AreaContextTransformed;IIII)I modeOrRandom
	a (Lnet/minecraft/server/AreaContextTransformed;Lnet/minecraft/server/Area;II)I applyPixel
	b (I)I getParentY
net/minecraft/server/GenLayerZoomVoronoi net/minecraft/world/level/biome/FuzzyOffsetBiomeZoomer
	b $VALUES
	a (D)D sqr
	a (J)D getFiddle
	a (JIIIDDD)D getFiddledDistance
	a (JIIILnet/minecraft/server/BiomeManager$Provider;)Lnet/minecraft/server/BiomeBase; getBiome
net/minecraft/server/GenLayerZoomVoronoiFixed net/minecraft/world/level/biome/FuzzyOffsetConstantColumnBiomeZoomer
	b $VALUES
	a (JIIILnet/minecraft/server/BiomeManager$Provider;)Lnet/minecraft/server/BiomeBase; getBiome
net/minecraft/server/GenLayerZoomer net/minecraft/world/level/biome/BiomeZoomer
	a (JIIILnet/minecraft/server/BiomeManager$Provider;)Lnet/minecraft/server/BiomeBase; getBiome
net/minecraft/server/GenLayers net/minecraft/world/level/newbiome/layer/Layers
	a WARM_OCEAN
	b LUKEWARM_OCEAN
	c OCEAN
	d COLD_OCEAN
	e FROZEN_OCEAN
	f DEEP_WARM_OCEAN
	g DEEP_LUKEWARM_OCEAN
	h DEEP_OCEAN
	i DEEP_COLD_OCEAN
	j DEEP_FROZEN_OCEAN
	a (I)Z isOcean
	a (II)Z isSame
	a (JLnet/minecraft/server/AreaTransformer2;Lnet/minecraft/server/AreaFactory;ILjava/util/function/LongFunction;)Lnet/minecraft/server/AreaFactory; zoom
	a (JLnet/minecraft/server/WorldType;Lnet/minecraft/server/GeneratorSettingsOverworld;)Lnet/minecraft/server/GenLayer; getDefaultLayer
	a (Lnet/minecraft/server/WorldType;Lnet/minecraft/server/GeneratorSettingsOverworld;Ljava/util/function/LongFunction;)Lnet/minecraft/server/AreaFactory; getDefaultLayer
	b (I)Z isShallowOcean
net/minecraft/server/GeneratorAccess net/minecraft/world/level/LevelAccessor
	Y ()F getMoonBrightness
	Z ()I getMoonPhase
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/VoxelShape;)Z isUnobstructed
	a (Lnet/minecraft/server/EntityHuman;ILnet/minecraft/server/BlockPosition;I)V levelEvent
	a (Lnet/minecraft/server/HeightMap$Type;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/BlockPosition; getHeightmapPos
	b (II)Z hasChunk
	b (Lnet/minecraft/server/Entity;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/Set;)Ljava/util/stream/Stream; getEntityCollisions
	f (F)F getTimeOfDay
	getBlockTickList ()Lnet/minecraft/server/TickList; getBlockTicks
	getChunkProvider ()Lnet/minecraft/server/IChunkProvider; getChunkSource
	getDamageScaler (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/DifficultyDamageScaler; getCurrentDifficultyAt
	getFluidTickList ()Lnet/minecraft/server/TickList; getLiquidTicks
	getMinecraftWorld ()Lnet/minecraft/server/World; getLevel
	getWorldData ()Lnet/minecraft/server/WorldData; getLevelData
	p ()Lnet/minecraft/server/MinecraftServer; getServer
	s_ ()Lnet/minecraft/server/BlockPosition; getSharedSpawnPos
	triggerEffect (ILnet/minecraft/server/BlockPosition;I)V levelEvent
	update (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;)V blockUpdated
net/minecraft/server/GeneratorSettingsDebug net/minecraft/world/level/levelgen/DebugGeneratorSettings
net/minecraft/server/GeneratorSettingsDefault net/minecraft/world/level/levelgen/ChunkGeneratorSettings
	a villagesSpacing
	b villagesSeparation
	c monumentsSpacing
	d monumentsSeparation
	e strongholdsDistance
	f strongholdsCount
	g strongholdsSpread
	h templesSpacing
	i templesSeparation
	j oceanRuinSpacing
	k oceanRuinSeparation
	l endCitySpacing
	m endCitySeparation
	n shipwreckSpacing
	o shipwreckSeparation
	p woodlandMansionSpacing
	q woodlandMangionSeparation
	r defaultBlock
	s defaultFluid
	a ()I getVillagesSpacing
	a (Lnet/minecraft/server/IBlockData;)V setDefaultBlock
	b ()I getVillagesSeparation
	b (Lnet/minecraft/server/IBlockData;)V setDefaultFluid
	c ()I getMonumentsSpacing
	d ()I getMonumentsSeparation
	e ()I getStrongholdsDistance
	f ()I getStrongholdsCount
	g ()I getStrongholdsSpread
	h ()I getTemplesSpacing
	i ()I getTemplesSeparation
	j ()I getShipwreckSpacing
	k ()I getShipwreckSeparation
	l ()I getOceanRuinSpacing
	m ()I getOceanRuinSeparation
	n ()I getEndCitySpacing
	o ()I getEndCitySeparation
	p ()I getWoodlandMansionSpacing
	q ()I getWoodlandMangionSeparation
	r ()Lnet/minecraft/server/IBlockData; getDefaultBlock
	s ()Lnet/minecraft/server/IBlockData; getDefaultFluid
	t ()I getBedrockRoofPosition
	u ()I getBedrockFloorPosition
net/minecraft/server/GeneratorSettingsEnd net/minecraft/world/level/levelgen/TheEndGeneratorSettings
	t spawnPosition
	a (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/GeneratorSettingsEnd; setSpawnPosition
	v ()Lnet/minecraft/server/BlockPosition; getSpawnPosition
net/minecraft/server/GeneratorSettingsFlat net/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings
	A SWAMPHUT_COMPOSITE_FEATURE
	B DESERT_PYRAMID_COMPOSITE_FEATURE
	C JUNGLE_PYRAMID_COMPOSITE_FEATURE
	D IGLOO_COMPOSITE_FEATURE
	E SHIPWRECK_COMPOSITE_FEATURE
	F OCEAN_MONUMENT_COMPOSITE_FEATURE
	G WATER_LAKE_COMPOSITE_FEATURE
	H LAVA_LAKE_COMPOSITE_FEATURE
	I ENDCITY_COMPOSITE_FEATURE
	J WOOLAND_MANSION_COMPOSITE_FEATURE
	K FORTRESS_COMPOSITE_FEATURE
	L OCEAN_RUIN_COMPOSITE_FEATURE
	M PILLAGER_OUTPOST_COMPOSITE_FEATURE
	N layersInfo
	O structuresOptions
	P biome
	Q layers
	R voidGen
	S seaLevel
	t STRUCTURE_FEATURES_STEP
	u STRUCTURE_FEATURES
	v STRUCTURE_FEATURES_DEFAULT
	w LOGGER
	x MINESHAFT_COMPOSITE_FEATURE
	y VILLAGE_COMPOSITE_FEATURE
	z STRONGHOLD_COMPOSITE_FEATURE
	A ()Z isVoidGen
	B ()I getSeaLevel
	C ()[Lnet/minecraft/server/IBlockData; getLayers
	a (I)V deleteLayer
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/GeneratorSettingsFlat; fromObject
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; toObject
	a (Ljava/lang/String;)Lnet/minecraft/server/Block; byString
	a (Ljava/lang/String;I)Lnet/minecraft/server/WorldGenFlatLayerInfo; getLayerInfoFromString
	a (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V addStructureOption
	a (Lnet/minecraft/server/BiomeBase;)V setBiome
	b (Ljava/lang/String;)Lnet/minecraft/server/GeneratorSettingsFlat; fromString
	c (Ljava/lang/String;)Ljava/util/List; getLayersInfoFromString
	d (Ljava/lang/String;)V addStructure
	v ()Lnet/minecraft/server/BiomeBase; getBiome
	w ()Ljava/util/Map; getStructuresOptions
	x ()Ljava/util/List; getLayersInfo
	y ()V updateLayers
	z ()Lnet/minecraft/server/GeneratorSettingsFlat; getDefault
net/minecraft/server/GeneratorSettingsNether net/minecraft/world/level/levelgen/NetherGeneratorSettings
	t ()I getBedrockRoofPosition
	u ()I getBedrockFloorPosition
net/minecraft/server/GeneratorSettingsOverworld net/minecraft/world/level/levelgen/OverworldGeneratorSettings
	t biomeSize
	u riverSize
	v fixedBiome
	w seaLevel
	u ()I getBedrockFloorPosition
	v ()I getBiomeSize
	w ()I getRiverSize
	x ()I getFixedBiome
	y ()I getSeaLevel
net/minecraft/server/GenericAttributes net/minecraft/world/entity/monster/SharedMonsterAttributes
	l LOGGER
	a (Lnet/minecraft/server/AttributeInstance;)Lnet/minecraft/server/NBTTagCompound; saveAttribute
	a (Lnet/minecraft/server/AttributeInstance;Lnet/minecraft/server/NBTTagCompound;)V loadAttribute
	a (Lnet/minecraft/server/AttributeMapBase;)Lnet/minecraft/server/NBTTagList; saveAttributes
	a (Lnet/minecraft/server/AttributeMapBase;Lnet/minecraft/server/NBTTagList;)V loadAttributes
	a (Lnet/minecraft/server/AttributeModifier;)Lnet/minecraft/server/NBTTagCompound; saveAttributeModifier
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/AttributeModifier; loadAttributeModifier
net/minecraft/server/GlobalPos net/minecraft/core/GlobalPos
	blockPosition pos
	dimensionManager dimension
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/GlobalPos; of
	a (Lcom/mojang/datafixers/types/DynamicOps;)Ljava/lang/Object; serialize
	create (Lnet/minecraft/server/DimensionManager;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/GlobalPos; of
	getBlockPosition ()Lnet/minecraft/server/BlockPosition; pos
	getDimensionManager ()Lnet/minecraft/server/DimensionManager; dimension
net/minecraft/server/GroupDataEntity net/minecraft/world/entity/SpawnGroupData
net/minecraft/server/GuiStatsComponent net/minecraft/server/gui/StatsComponent
	a DECIMAL_FORMAT
	b values
	c vp
	d msgs
	e server
	f timer
	a ()V close
	a ([J)D getAverage
	b ()V tick
net/minecraft/server/HandshakeListener net/minecraft/server/network/ServerHandshakePacketListenerImpl
	a server
	b connection
	a ()Lnet/minecraft/server/NetworkManager; getConnection
	a (Lnet/minecraft/server/IChatBaseComponent;)V onDisconnect
	a (Lnet/minecraft/server/PacketHandshakingInSetProtocol;)V handleIntention
net/minecraft/server/HashCache net/minecraft/data/HashCache
	a LOGGER
	b path
	c cachePath
	d hits
	e oldCache
	f newCache
	g keep
	a ()V purgeStaleAndWrite
	a (Ljava/nio/file/Path;)Ljava/lang/String; getHash
	a (Ljava/nio/file/Path;Ljava/lang/String;)V putNew
	b ()V removeStale
	b (Ljava/nio/file/Path;)Z had
	c ()Ljava/util/stream/Stream; walkOutputFiles
	c (Ljava/nio/file/Path;)V keep
net/minecraft/server/HeightMap net/minecraft/world/level/levelgen/Heightmap
	a NOT_AIR
	b MATERIAL_MOTION_BLOCKING
	c data
	d isOpaque
	e chunk
	a ()[J getRawData
	a (I)I getFirstAvailable
	a (II)I getFirstAvailable
	a (III)V setHeight
	a (IIILnet/minecraft/server/IBlockData;)Z update
	a (Lnet/minecraft/server/IChunkAccess;Ljava/util/Set;)V primeHeightmaps
	a ([J)V setRawData
	b (II)I getHighestTaken
	c (II)I getIndex
net/minecraft/server/HeightMap$Type net/minecraft/world/level/levelgen/Heightmap$Types
	g serializationKey
	h usage
	i isOpaque
	j REVERSE_LOOKUP
	k $VALUES
	a ()Ljava/lang/String; getSerializationKey
	a (Ljava/lang/String;)Lnet/minecraft/server/HeightMap$Type; getFromKey
	b ()Z sendToClient
	c ()Z keepAfterWorldgen
	d ()Ljava/util/function/Predicate; isOpaque
net/minecraft/server/HeightMap$Use net/minecraft/world/level/levelgen/Heightmap$Usage
	d $VALUES
net/minecraft/server/HttpUtilities net/minecraft/util/HttpUtil
	a DOWNLOAD_EXECUTOR
	b LOGGER
	a ()I getAvailablePort
	a (Ljava/io/File;Ljava/lang/String;Ljava/util/Map;ILnet/minecraft/server/IProgressUpdate;Ljava/net/Proxy;)Ljava/util/concurrent/CompletableFuture; downloadTo
	a (Ljava/net/URL;Ljava/lang/String;ZLjava/net/Proxy;)Ljava/lang/String; performPost
	a (Ljava/net/URL;Ljava/util/Map;ZLjava/net/Proxy;)Ljava/lang/String; performPost
	a (Ljava/util/Map;)Ljava/lang/String; buildQuery
net/minecraft/server/IAsyncTaskHandler net/minecraft/util/thread/BlockableEventLoop
	b name
	c LOGGER
	d pendingRunnables
	e blockingCount
	a (Ljava/lang/Object;)V tell
	a (Ljava/util/function/Supplier;)Ljava/util/concurrent/CompletableFuture; submit
	awaitTasks (Ljava/util/function/BooleanSupplier;)V managedBlock
	bg ()I getPendingTasksCount
	bh ()Ljava/lang/String; name
	bi ()V dropAllTasks
	bk ()V waitForTasks
	canExecute (Ljava/lang/Runnable;)Z shouldRun
	e (Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture; submit
	executeAll ()V runAllTasks
	executeFuture (Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture; submitAsync
	executeNext ()Z pollTask
	executeSync (Ljava/lang/Runnable;)V executeBlocking
	executeTask (Ljava/lang/Runnable;)V doRunTask
	g (Ljava/lang/Runnable;)V tell
	getThread ()Ljava/lang/Thread; getRunningThread
	isMainThread ()Z isSameThread
	isNotMainThread ()Z scheduleExecutables
	postToMainThread (Ljava/lang/Runnable;)Ljava/lang/Runnable; wrapRunnable
net/minecraft/server/IAsyncTaskHandlerReentrant net/minecraft/util/thread/ReentrantBlockableEventLoop
	depth reentrantCount
	ax ()Z scheduleExecutables
	h (Ljava/lang/Runnable;)V doRunTask
	isEntered ()Z runningTask
net/minecraft/server/IAttribute net/minecraft/world/entity/ai/attributes/Attribute
	a (D)D sanitizeValue
	c ()Z isClientSyncable
	d ()Lnet/minecraft/server/IAttribute; getParentAttribute
	getDefault ()D getDefaultValue
net/minecraft/server/IBeaconBeam net/minecraft/world/level/block/BeaconBeamBlock
	a ()Lnet/minecraft/server/EnumColor; getColor
net/minecraft/server/IBlockAccess net/minecraft/world/level/BlockGetter
	H ()I getMaxLightLevel
	a (Lnet/minecraft/server/RayTrace;Ljava/util/function/BiFunction;Ljava/util/function/Function;)Ljava/lang/Object; traverseBlocks
	g (Lnet/minecraft/server/BlockPosition;)I getLightBlock
	getBuildHeight ()I getMaxBuildHeight
	getFluid (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/Fluid; getFluidState
	getTileEntity (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/TileEntity; getBlockEntity
	getType (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getBlockState
	h (Lnet/minecraft/server/BlockPosition;)I getLightEmission
	rayTrace (Lnet/minecraft/server/RayTrace;)Lnet/minecraft/server/MovingObjectPositionBlock; clip
	rayTrace (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/MovingObjectPositionBlock; clipWithInteractionOverride
net/minecraft/server/IBlockData net/minecraft/world/level/block/state/BlockState
	c cache
	d lightEmission
	e useShapeForLightOcclusion
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/IBlockData; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;Lnet/minecraft/server/IBlockData;)Lcom/mojang/datafixers/Dynamic; serialize
	a (Lnet/minecraft/server/BlockActionContext;)Z canBeReplaced
	a (Lnet/minecraft/server/BlockPosition;)J getSeed
	a (Lnet/minecraft/server/EnumBlockMirror;)Lnet/minecraft/server/IBlockData; mirror
	a (Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/IBlockData; rotate
	a (Lnet/minecraft/server/FluidType;)Z canBeReplaced
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;I)V updateNeighbourShapes
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z propagatesSkylightDown
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)Z entityCanStandOn
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityTypes;)Z isValidSpawn
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/VoxelShape; getFaceOcclusionShape
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathMode;)Z isPathfindable
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/EnumDirection;)Z skipRendering
	a (Lnet/minecraft/server/LootTableInfo$Builder;)Ljava/util/List; getDrops
	a (Lnet/minecraft/server/Tag;)Z is
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I getAnalogOutputSignal
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;II)Z triggerEvent
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)V entityInside
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/MovingObjectPositionBlock;Lnet/minecraft/server/Entity;)V onProjectileHit
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V tick
	b (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;I)V updateIndirectNeighbourShapes
	b (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)I getLightBlock
	b (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getSignal
	b (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Lnet/minecraft/server/VoxelShape; getCollisionShape
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/ITileInventory; getMenuProvider
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)V randomTick
	c ()V initCache
	c (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/MaterialMapColor; getMapColor
	c (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getDirectSignal
	canPlace (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z canSurvive
	d (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)F getShadeBrightness
	d (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z isFaceSturdy
	doPhysics (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;Z)V neighborChanged
	dropNaturally (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ItemStack;)V spawnAfterBreak
	f ()Z hasLargeCollisionShape
	f (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)F getDestroySpeed
	g ()Z useShapeForLightOcclusion
	g (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z isSolidRender
	getDamage (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)F getDestroyProgress
	getFluid ()Lnet/minecraft/server/Fluid; getFluidState
	getPushReaction ()Lnet/minecraft/server/EnumPistonReaction; getPistonPushReaction
	h ()I getLightEmission
	interact (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; use
	isComplexRedstone ()Z hasAnalogOutputSignal
	isOccluding (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z isRedstoneConductor
	isPowerSource ()Z isSignalSource
	j ()Lnet/minecraft/server/EnumRenderType; getRenderShape
	j (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; getOcclusionShape
	k ()Z emissiveRendering
	k (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; getInteractionShape
	l (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/Vec3D; getOffset
	m (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z isSuffocating
	n (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z isViewBlocking
	o ()Z canOcclude
	o (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z hasPostProcess
	p (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z isCollisionShapeFullBlock
	q ()Z isRandomlyTicking
	r ()Lnet/minecraft/server/SoundEffectType; getSoundType
	remove (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)V onRemove
	updateState (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; updateShape
net/minecraft/server/IBlockDataHolder net/minecraft/world/level/block/state/StateHolder
	b LOGGER
	a ()Ljava/util/Collection; getProperties
	a (Lnet/minecraft/server/IBlockDataHolder;Lnet/minecraft/server/IBlockState;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/server/IBlockDataHolder; setValueHelper
	a (Lnet/minecraft/server/IBlockState;)Ljava/lang/Object; cycle
	b (Lnet/minecraft/server/IBlockState;)Z hasProperty
	b (Lnet/minecraft/server/IBlockState;Ljava/lang/Comparable;)Ljava/lang/String; getName
	get (Lnet/minecraft/server/IBlockState;)Ljava/lang/Comparable; getValue
	getStateMap ()Lcom/google/common/collect/ImmutableMap; getValues
	set (Lnet/minecraft/server/IBlockState;Ljava/lang/Comparable;)Ljava/lang/Object; setValue
net/minecraft/server/IBlockFragilePlantElement net/minecraft/world/level/block/BonemealableBlock
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Z isValidBonemealTarget
	a (Lnet/minecraft/server/World;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z isBonemealSuccess
	a (Lnet/minecraft/server/WorldServer;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V performBonemeal
net/minecraft/server/IBlockLightAccess net/minecraft/world/level/BlockAndTintGetter
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/world/level/ColorResolver;)I getBlockTint
	e ()Lnet/minecraft/server/LightEngine; getLightEngine
	f (Lnet/minecraft/server/BlockPosition;)Z canSeeSky
	getLightLevel (Lnet/minecraft/server/BlockPosition;I)I getRawBrightness
net/minecraft/server/IBlockState net/minecraft/world/level/block/state/properties/Property
	a ()Ljava/lang/String; getName
	a (Ljava/lang/Comparable;)Ljava/lang/String; getName
	b ()Ljava/lang/Class; getValueClass
	b (Ljava/lang/String;)Ljava/util/Optional; getValue
	getValues ()Ljava/util/Collection; getPossibleValues
net/minecraft/server/IBlockWaterlogged net/minecraft/world/level/block/SimpleWaterloggedBlock
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/Fluid;)Z placeLiquid
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/FluidType;)Z canPlaceLiquid
	b (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/FluidType; takeLiquid
net/minecraft/server/IChatBaseComponent net/minecraft/network/chat/Component
	a (I)Ljava/lang/String; getString
	a (Ljava/lang/String;)Lnet/minecraft/server/IChatBaseComponent; append
	a (Ljava/util/function/Consumer;)Lnet/minecraft/server/IChatBaseComponent; withStyle
	a (Lnet/minecraft/server/EnumChatFormat;)Lnet/minecraft/server/IChatBaseComponent; withStyle
	a ([Lnet/minecraft/server/EnumChatFormat;)Lnet/minecraft/server/IChatBaseComponent; withStyle
	addSibling (Lnet/minecraft/server/IChatBaseComponent;)Lnet/minecraft/server/IChatBaseComponent; append
	b (Lnet/minecraft/server/IChatBaseComponent;)Lnet/minecraft/server/IChatBaseComponent; flattenStyle
	c ()Ljava/util/stream/Stream; stream
	f ()Ljava/util/stream/Stream; flatStream
	g ()Lnet/minecraft/server/IChatBaseComponent; copy
	getChatModifier ()Lnet/minecraft/server/ChatModifier; getStyle
	getLegacyString ()Ljava/lang/String; getColoredString
	getText ()Ljava/lang/String; getContents
	h ()Lnet/minecraft/server/IChatBaseComponent; deepCopy
	setChatModifier (Lnet/minecraft/server/ChatModifier;)Lnet/minecraft/server/IChatBaseComponent; setStyle
net/minecraft/server/IChatBaseComponent$ChatSerializer net/minecraft/network/chat/Component$Serializer
	a GSON
	b JSON_READER_POS
	c JSON_READER_LINESTART
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/IChatBaseComponent; fromJson
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/IChatBaseComponent; deserialize
	a (Lcom/google/gson/stream/JsonReader;)I getPos
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/IChatBaseComponent; fromJson
	a (Ljava/lang/String;)Lnet/minecraft/server/IChatBaseComponent; fromJson
	a (Lnet/minecraft/server/ChatModifier;Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V serializeStyle
	a (Lnet/minecraft/server/IChatBaseComponent;)Ljava/lang/String; toJson
	a (Lnet/minecraft/server/IChatBaseComponent;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
	b (Ljava/lang/String;)Lnet/minecraft/server/IChatBaseComponent; fromJsonLenient
	b (Lnet/minecraft/server/IChatBaseComponent;)Lcom/google/gson/JsonElement; toJsonTree
net/minecraft/server/IChunkAccess net/minecraft/world/level/chunk/ChunkAccess
	a ()Lnet/minecraft/server/ChunkSection; getHighestSection
	a (II)Z isYSpaceEmpty
	a (Ljava/util/Map;)V setAllStarts
	a (Lnet/minecraft/server/Entity;)V addEntity
	a (Lnet/minecraft/server/HeightMap$Type;)Lnet/minecraft/server/HeightMap; getOrCreateHeightmapUnprimed
	a (Lnet/minecraft/server/HeightMap$Type;II)I getHeight
	a (Lnet/minecraft/server/HeightMap$Type;[J)V setHeightmap
	a (Lnet/minecraft/server/NBTTagCompound;)V setBlockEntityNbt
	a (Lnet/minecraft/server/WorldGenStage$Features;)Ljava/util/BitSet; getCarvingMask
	a (SI)V addPackedPostProcess
	a ([Lit/unimi/dsi/fastutil/shorts/ShortList;I)Lit/unimi/dsi/fastutil/shorts/ShortList; getOrCreateOffsetList
	b ()I getHighestSectionPosition
	b (Lnet/minecraft/server/HeightMap$Type;)Lnet/minecraft/server/BlockPosition; getHeighestPosition
	b (Z)V setLightCorrect
	c ()Ljava/util/Set; getBlockEntitiesPos
	e ()Lnet/minecraft/server/LightEngine; getLightEngine
	e (Lnet/minecraft/server/BlockPosition;)V markPosForPostprocessing
	f ()Ljava/util/Collection; getHeightmaps
	f (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/NBTTagCompound; getBlockEntityNbt
	getBiomeIndex ()Lnet/minecraft/server/BiomeStorage; getBiomes
	getChunkStatus ()Lnet/minecraft/server/ChunkStatus; getStatus
	h ()Ljava/util/Map; getAllStarts
	i (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/NBTTagCompound; getBlockEntityNbtForSaving
	isNeedsSaving ()Z isUnsaved
	l ()[Lit/unimi/dsi/fastutil/shorts/ShortList; getPostProcessing
	m ()Ljava/util/stream/Stream; getLights
	n ()Lnet/minecraft/server/TickList; getBlockTicks
	o ()Lnet/minecraft/server/TickList; getLiquidTicks
	p ()Lnet/minecraft/server/ChunkConverter; getUpgradeData
	r ()Z isLightCorrect
	removeTileEntity (Lnet/minecraft/server/BlockPosition;)V removeBlockEntity
	setLastSaved (J)V setLastSaveTime
	setNeedsSaving (Z)V setUnsaved
	setTileEntity (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/TileEntity;)V setBlockEntity
	setType (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Lnet/minecraft/server/IBlockData; setBlockState
net/minecraft/server/IChunkLoader net/minecraft/world/level/chunk/storage/ChunkStorage
	a worker
	b fixerUpper
	c legacyStructureHandler
	a (Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/NBTTagCompound;)V write
	a (Lnet/minecraft/server/NBTTagCompound;)I getVersion
	getChunkData (Lnet/minecraft/server/DimensionManager;Ljava/util/function/Supplier;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; upgradeChunkTag
	i ()V flushWorker
net/minecraft/server/IChunkProvider net/minecraft/world/level/chunk/ChunkSource
	a (II)Lnet/minecraft/server/Chunk; getChunkNow
	a (Ljava/util/function/BooleanSupplier;)V tick
	a (Lnet/minecraft/server/BlockPosition;)Z isTickingChunk
	a (Lnet/minecraft/server/ChunkCoordIntPair;)Z isEntityTickingChunk
	a (Lnet/minecraft/server/ChunkCoordIntPair;Z)V updateChunkForced
	a (Lnet/minecraft/server/Entity;)Z isEntityTickingChunk
	a (ZZ)V setSpawnSettings
	b (II)Z hasChunk
	c (II)Lnet/minecraft/server/IBlockAccess; getChunkForLighting
	getChunkAt (IILnet/minecraft/server/ChunkStatus;Z)Lnet/minecraft/server/IChunkAccess; getChunk
	getChunkAt (IIZ)Lnet/minecraft/server/Chunk; getChunk
	getName ()Ljava/lang/String; gatherStats
	h ()I getLoadedChunksCount
net/minecraft/server/ICollisionAccess net/minecraft/world/level/CollisionGetter
	a (Lnet/minecraft/server/AxisAlignedBB;)Z noCollision
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/Set;)Z noCollision
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/VoxelShape;)Z isUnobstructed
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/VoxelShape;Ljava/util/Set;)Ljava/util/stream/Stream; getEntityCollisions
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VoxelShapeCollision;)Z isUnobstructed
	b (Lnet/minecraft/server/Entity;Lnet/minecraft/server/AxisAlignedBB;)Ljava/util/stream/Stream; getBlockCollisions
	b (Lnet/minecraft/server/Entity;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/Set;)Ljava/util/stream/Stream; getEntityCollisions
	c (II)Lnet/minecraft/server/IBlockAccess; getChunkForCollisions
	c (Lnet/minecraft/server/Entity;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/Set;)Ljava/util/stream/Stream; getCollisions
	getCubes (Lnet/minecraft/server/Entity;)Z noCollision
	getCubes (Lnet/minecraft/server/Entity;Lnet/minecraft/server/AxisAlignedBB;)Z noCollision
	i (Lnet/minecraft/server/Entity;)Z isUnobstructed
net/minecraft/server/ICommandListener net/minecraft/commands/CommandSource
	DUMMY NULL
	shouldBroadcastCommands ()Z shouldInformAdmins
	shouldSendFailure ()Z acceptsFailure
	shouldSendSuccess ()Z acceptsSuccess
net/minecraft/server/ICompletionProvider net/minecraft/commands/SharedSuggestionProvider
	a (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; customSuggestion
	a (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestResource
	a (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; suggestResource
	a (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; suggestResource
	a (Ljava/lang/Iterable;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Consumer;)V filterResources
	a (Ljava/lang/Iterable;Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Consumer;)V filterResources
	a (Ljava/lang/String;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Predicate;)Ljava/util/concurrent/CompletableFuture; suggestCoordinates
	a (Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestResource
	a (Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; suggestResource
	a ([Ljava/lang/String;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggest
	b (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggest
	b (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; suggest
	b (Ljava/lang/String;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Predicate;)Ljava/util/concurrent/CompletableFuture; suggest2DCoordinates
	b (Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggest
	l ()Ljava/util/Collection; getOnlinePlayerNames
	m ()Ljava/util/Collection; getAllTeams
	n ()Ljava/util/Collection; getAvailableSoundEvents
	o ()Ljava/util/stream/Stream; getRecipeNames
	p ()Ljava/util/Collection; getSelectedEntities
	q ()Ljava/util/Collection; getRelevantCoordinates
	r ()Ljava/util/Collection; getAbsoluteCoordinates
net/minecraft/server/IContainerProperties net/minecraft/world/inventory/ContainerData
	a ()I getCount
	getProperty (I)I get
	setProperty (II)V set
net/minecraft/server/ICrafting net/minecraft/world/inventory/ContainerListener
	a (Lnet/minecraft/server/Container;ILnet/minecraft/server/ItemStack;)V slotChanged
	a (Lnet/minecraft/server/Container;Lnet/minecraft/server/NonNullList;)V refreshContainer
net/minecraft/server/ICrossbow net/minecraft/world/entity/monster/CrossbowAttackMob
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/IProjectile;F)V shootProjectile
	a (Z)V setChargingCrossbow
	getGoalTarget ()Lnet/minecraft/server/EntityLiving; getTarget
net/minecraft/server/IDispenseBehavior net/minecraft/core/dispenser/DispenseItemBehavior
	NONE NOOP
	c ()V bootStrap
net/minecraft/server/IDragonController net/minecraft/world/entity/boss/enderdragon/phases/DragonPhaseInstance
	a ()Z isSitting
	a (Lnet/minecraft/server/DamageSource;F)F onHurt
	a (Lnet/minecraft/server/EntityEnderCrystal;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/DamageSource;Lnet/minecraft/server/EntityHuman;)V onCrystalDestroyed
	b ()V doClientTick
	c ()V doServerTick
	d ()V begin
	e ()V end
	f ()F getFlySpeed
	g ()Lnet/minecraft/server/Vec3D; getFlyTargetLocation
	getControllerPhase ()Lnet/minecraft/server/DragonControllerPhase; getPhase
	h ()F getTurnSpeed
net/minecraft/server/IDyeable net/minecraft/world/item/DyeableLeatherItem
	a (Lnet/minecraft/server/ItemStack;)Z hasCustomColor
	a (Lnet/minecraft/server/ItemStack;I)V setColor
	a (Lnet/minecraft/server/ItemStack;Ljava/util/List;)Lnet/minecraft/server/ItemStack; dyeArmor
	b (Lnet/minecraft/server/ItemStack;)I getColor
	c (Lnet/minecraft/server/ItemStack;)V clearColor
net/minecraft/server/IDynamicTexture net/minecraft/world/item/ItemPropertyFunction
net/minecraft/server/IEntityAccess net/minecraft/world/level/EntityGetter
	a (DDD)Lnet/minecraft/server/EntityHuman; getNearestPlayerIgnoreY
	a (DDDDLjava/util/function/Predicate;)Lnet/minecraft/server/EntityHuman; getNearestPlayer
	a (DDDDZ)Lnet/minecraft/server/EntityHuman; getNearestPlayer
	a (Ljava/lang/Class;Lnet/minecraft/server/AxisAlignedBB;)Ljava/util/List; getEntitiesOfClass
	a (Ljava/lang/Class;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/function/Predicate;)Ljava/util/List; getEntitiesOfClass
	a (Ljava/lang/Class;Lnet/minecraft/server/PathfinderTargetCondition;Lnet/minecraft/server/EntityLiving;DDDLnet/minecraft/server/AxisAlignedBB;)Lnet/minecraft/server/EntityLiving; getNearestEntity
	a (Ljava/lang/Class;Lnet/minecraft/server/PathfinderTargetCondition;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/AxisAlignedBB;)Ljava/util/List; getNearbyEntities
	a (Ljava/util/List;Lnet/minecraft/server/PathfinderTargetCondition;Lnet/minecraft/server/EntityLiving;DDD)Lnet/minecraft/server/EntityLiving; getNearestEntity
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/VoxelShape;)Z isUnobstructed
	a (Lnet/minecraft/server/PathfinderTargetCondition;DDD)Lnet/minecraft/server/EntityHuman; getNearestPlayer
	a (Lnet/minecraft/server/PathfinderTargetCondition;Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/EntityHuman; getNearestPlayer
	a (Lnet/minecraft/server/PathfinderTargetCondition;Lnet/minecraft/server/EntityLiving;DDD)Lnet/minecraft/server/EntityHuman; getNearestPlayer
	a (Lnet/minecraft/server/PathfinderTargetCondition;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/AxisAlignedBB;)Ljava/util/List; getNearbyPlayers
	b (Ljava/lang/Class;Lnet/minecraft/server/AxisAlignedBB;)Ljava/util/List; getLoadedEntitiesOfClass
	b (Ljava/lang/Class;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/function/Predicate;)Ljava/util/List; getLoadedEntitiesOfClass
	b (Ljava/lang/Class;Lnet/minecraft/server/PathfinderTargetCondition;Lnet/minecraft/server/EntityLiving;DDDLnet/minecraft/server/AxisAlignedBB;)Lnet/minecraft/server/EntityLiving; getNearestLoadedEntity
	b (Ljava/lang/String;)Lnet/minecraft/server/EntityHuman; getPlayerByName
	b (Ljava/util/UUID;)Lnet/minecraft/server/EntityHuman; getPlayerByUUID
	b (Lnet/minecraft/server/Entity;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/Set;)Ljava/util/stream/Stream; getEntityCollisions
	findNearbyPlayer (Lnet/minecraft/server/Entity;D)Lnet/minecraft/server/EntityHuman; getNearestPlayer
	getPlayers ()Ljava/util/List; players
	isPlayerNearby (DDDD)Z hasNearbyAlivePlayer
net/minecraft/server/IEntitySelector net/minecraft/world/entity/EntitySelector
	a ENTITY_STILL_ALIVE
	b LIVING_ENTITY_STILL_ALIVE
	c ENTITY_NOT_BEING_RIDDEN
	d CONTAINER_ENTITY_SELECTOR
	e NO_CREATIVE_OR_SPECTATOR
	f NO_SPECTATORS
	a (DDDD)Ljava/util/function/Predicate; withinDistance
	a (Lnet/minecraft/server/Entity;)Ljava/util/function/Predicate; pushableBy
	b (Lnet/minecraft/server/Entity;)Ljava/util/function/Predicate; notRiding
net/minecraft/server/IEntitySelector$EntitySelectorEquipable net/minecraft/world/entity/EntitySelector$MobCanWearArmourEntitySelector
	a itemStack
	a (Lnet/minecraft/server/Entity;)Z test
net/minecraft/server/IFluidContainer net/minecraft/world/level/block/LiquidBlockContainer
	canPlace (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/FluidType;)Z canPlaceLiquid
	place (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/Fluid;)Z placeLiquid
net/minecraft/server/IFluidSource net/minecraft/world/level/block/BucketPickup
	removeFluid (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/FluidType; takeLiquid
net/minecraft/server/IHopper net/minecraft/world/level/block/entity/Hopper
	a INSIDE
	b ABOVE
	c SUCK
	A ()D getLevelY
	B ()D getLevelZ
	P_ ()Lnet/minecraft/server/VoxelShape; getSuckShape
	getWorld ()Lnet/minecraft/server/World; getLevel
	z ()D getLevelX
net/minecraft/server/IInventory net/minecraft/world/Container
	a (Ljava/util/Set;)Z hasAnyOf
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/Item;)I countItem
	b (ILnet/minecraft/server/ItemStack;)Z canPlaceItem
	closeContainer (Lnet/minecraft/server/EntityHuman;)V stopOpen
	getSize ()I getContainerSize
	isNotEmpty ()Z isEmpty
	splitStack (II)Lnet/minecraft/server/ItemStack; removeItem
	splitWithoutUpdate (I)Lnet/minecraft/server/ItemStack; removeItemNoUpdate
	update ()V setChanged
net/minecraft/server/IInventoryHolder net/minecraft/world/WorldlyContainerHolder
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IWorldInventory; getContainer
net/minecraft/server/IInventoryListener net/minecraft/world/ContainerListener
	a (Lnet/minecraft/server/IInventory;)V containerChanged
net/minecraft/server/IJumpable net/minecraft/world/entity/PlayerRideableJumping
	G_ ()Z canJump
	H_ ()F getJumpRidingScale
	a_ (F)V setJumpRidingScale
	a_ (I)V onPlayerJump
	b (I)V handleStartJump
	c ()V handleStopJump
net/minecraft/server/ILightAccess net/minecraft/world/level/chunk/LightChunkGetter
	a (Lnet/minecraft/server/EnumSkyBlock;Lnet/minecraft/server/SectionPosition;)V onLightUpdate
	c (II)Lnet/minecraft/server/IBlockAccess; getChunkForLighting
	getWorld ()Lnet/minecraft/server/IBlockAccess; getLevel
net/minecraft/server/ILightEngine net/minecraft/world/level/lighting/LightEventListener
	a ()Z hasLightWork
	a (IZZ)I runUpdates
	a (Lnet/minecraft/server/BlockPosition;)V checkBlock
	a (Lnet/minecraft/server/BlockPosition;I)V onBlockEmissionIncrease
	a (Lnet/minecraft/server/BlockPosition;Z)V updateSectionStatus
	a (Lnet/minecraft/server/ChunkCoordIntPair;Z)V enableLightSources
	a (Lnet/minecraft/server/SectionPosition;Z)V updateSectionStatus
net/minecraft/server/ILocationSource net/minecraft/core/LocatableSource
net/minecraft/server/IMaterial net/minecraft/world/level/ItemLike
	getItem ()Lnet/minecraft/server/Item; asItem
net/minecraft/server/IMerchant net/minecraft/world/item/trading/Merchant
	a (Lnet/minecraft/server/MerchantRecipe;)V notifyTrade
	a (Lnet/minecraft/server/MerchantRecipeList;)V overrideOffers
	eD ()Z canRestock
	getExperience ()I getVillagerXp
	getTradeSound ()Lnet/minecraft/server/SoundEffect; getNotifyTradeSound
	getTrader ()Lnet/minecraft/server/EntityHuman; getTradingPlayer
	getWorld ()Lnet/minecraft/server/World; getLevel
	i (Lnet/minecraft/server/ItemStack;)V notifyTradeUpdated
	isRegularVillager ()Z showProgressBar
	openTrade (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/IChatBaseComponent;I)V openTradingScreen
	setExperience (I)V overrideXp
net/minecraft/server/IMinecraftServer net/minecraft/server/ServerInterface
	e_ ()Ljava/lang/String; getServerIp
	executeRemoteCommand (Ljava/lang/String;)Ljava/lang/String; runCommand
	f_ ()Ljava/lang/String; getServerName
	g (Ljava/lang/String;)V error
	getDedicatedServerProperties ()Lnet/minecraft/server/DedicatedServerProperties; getProperties
	getPlayers ()[Ljava/lang/String; getPlayerNames
	getPlugins ()Ljava/lang/String; getPluginNames
	getVersion ()Ljava/lang/String; getServerVersion
	getWorld ()Ljava/lang/String; getLevelIdName
	h (Ljava/lang/String;)V debug
	q ()I getServerPort
	warning (Ljava/lang/String;)V warn
net/minecraft/server/IMojangStatistics net/minecraft/world/SnooperPopulator
	V ()Z isSnooperEnabled
	a (Lnet/minecraft/server/MojangStatisticsGenerator;)V populateSnooper
	b (Lnet/minecraft/server/MojangStatisticsGenerator;)V populateSnooperInitial
net/minecraft/server/IMonster net/minecraft/world/entity/monster/Enemy
net/minecraft/server/INamable net/minecraft/util/StringRepresentable
	getName ()Ljava/lang/String; getSerializedName
net/minecraft/server/INamableTileEntity net/minecraft/world/Nameable
	getDisplayName ()Lnet/minecraft/server/IChatBaseComponent; getName
	getScoreboardDisplayName ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
net/minecraft/server/IOWorker net/minecraft/world/level/chunk/storage/IOWorker
	a LOGGER
	b thread
	c shutdownRequested
	d inbox
	e storage
	f pendingWrites
	g running
	h shutdownListener
	a ()Ljava/util/concurrent/CompletableFuture; synchronize
	a (Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; submitTask
	a (Lnet/minecraft/server/ChunkCoordIntPair;)Lnet/minecraft/server/NBTTagCompound; load
	a (Lnet/minecraft/server/ChunkCoordIntPair;Lcaw$a;)V runStore
	a (Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/NBTTagCompound;)Ljava/util/concurrent/CompletableFuture; store
	b ()Ljava/util/concurrent/CompletableFuture; shutdown
	c ()V waitForQueueNonEmpty
	d ()V loop
	e ()Z storePendingChunk
	f ()V storeRemainingPendingChunks
	g ()V closeStorage
	h ()Z processInbox
net/minecraft/server/IPlayerFileData net/minecraft/world/level/storage/PlayerIO
net/minecraft/server/IPosition net/minecraft/core/Position
	getX ()D x
	getY ()D y
	getZ ()D z
net/minecraft/server/IProgressUpdate net/minecraft/util/ProgressListener
	a ()V stop
	a (I)V progressStagePercentage
	a (Lnet/minecraft/server/IChatBaseComponent;)V progressStartNoAbort
	b (Lnet/minecraft/server/IChatBaseComponent;)V progressStart
	c (Lnet/minecraft/server/IChatBaseComponent;)V progressStage
net/minecraft/server/IProjectile net/minecraft/world/entity/projectile/Projectile
	a (Lnet/minecraft/server/Entity;FFFFF)V shootFromRotation
net/minecraft/server/IRangedEntity net/minecraft/world/entity/monster/RangedAttackMob
	a (Lnet/minecraft/server/EntityLiving;F)V performRangedAttack
net/minecraft/server/IRecipe net/minecraft/world/item/crafting/Recipe
	a ()Lnet/minecraft/server/NonNullList; getIngredients
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Z matches
	b (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/NonNullList; getRemainingItems
	d ()Ljava/lang/String; getGroup
	g ()Lnet/minecraft/server/Recipes; getType
	getKey ()Lnet/minecraft/server/MinecraftKey; getId
	getRecipeSerializer ()Lnet/minecraft/server/RecipeSerializer; getSerializer
	getResult ()Lnet/minecraft/server/ItemStack; getResultItem
	h ()Lnet/minecraft/server/ItemStack; getToastSymbol
	isComplex ()Z isSpecial
net/minecraft/server/IRecipeComplex net/minecraft/world/item/crafting/CustomRecipe
	a id
	V_ ()Z isSpecial
	c ()Lnet/minecraft/server/ItemStack; getResultItem
	f ()Lnet/minecraft/server/MinecraftKey; getId
net/minecraft/server/IRegistry net/minecraft/core/Registry
	STATS STAT_TYPE
	a LOADERS
	e LOGGER
	f REGISTRY
	t BLOCKSTATE_PROVIDER_TYPES
	u BLOCK_PLACER_TYPES
	v FOLIAGE_PLACER_TYPES
	w TREE_DECORATOR_TYPES
	a (Ljava/lang/Object;)I getId
	a (Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Supplier;)Lnet/minecraft/server/RegistryBlocks; registerDefaulted
	a (Ljava/lang/String;Ljava/util/function/Supplier;)Lnet/minecraft/server/IRegistry; registerSimple
	a (Ljava/lang/String;Lnet/minecraft/server/IRegistryWritable;Ljava/util/function/Supplier;)Lnet/minecraft/server/IRegistryWritable; internalRegister
	a (Ljava/util/Random;)Ljava/lang/Object; getRandom
	a (Lnet/minecraft/server/IRegistry;ILjava/lang/String;Ljava/lang/Object;)Ljava/lang/Object; registerMapping
	a (Lnet/minecraft/server/IRegistry;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object; register
	a (Lnet/minecraft/server/IRegistry;Lnet/minecraft/server/MinecraftKey;Ljava/lang/Object;)Ljava/lang/Object; register
	b (I)Z containsId
	c (Lnet/minecraft/server/MinecraftKey;)Z containsKey
	d ()Ljava/util/stream/Stream; stream
net/minecraft/server/IRegistryWritable net/minecraft/core/WritableRegistry
	a (ILnet/minecraft/server/MinecraftKey;Ljava/lang/Object;)Ljava/lang/Object; registerMapping
	a (Lnet/minecraft/server/MinecraftKey;Ljava/lang/Object;)Ljava/lang/Object; register
	c ()Z isEmpty
net/minecraft/server/IReloadListener net/minecraft/server/packs/resources/PreparableReloadListener
	a (Lyw$a;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;Lnet/minecraft/server/GameProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; reload
	i ()Ljava/lang/String; getName
net/minecraft/server/IReloadable net/minecraft/server/packs/resources/ReloadInstance
	a ()Ljava/util/concurrent/CompletableFuture; done
	b ()F getActualProgress
	c ()Z isApplying
	d ()Z isDone
	e ()V checkExceptions
net/minecraft/server/IReloadableResourceManager net/minecraft/server/packs/resources/ReloadableResourceManager
	a (Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/List;Ljava/util/concurrent/CompletableFuture;)Ljava/util/concurrent/CompletableFuture; reload
	a (Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;)Lnet/minecraft/server/IReloadable; createQueuedReload
	a (Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;Ljava/util/List;)Lnet/minecraft/server/IReloadable; createFullReload
	a (Lnet/minecraft/server/IReloadListener;)V registerReloadListener
net/minecraft/server/IResource net/minecraft/server/packs/resources/Resource
	a ()Lnet/minecraft/server/MinecraftKey; getLocation
	a (Lnet/minecraft/server/ResourcePackMetaParser;)Ljava/lang/Object; getMetadata
	b ()Ljava/io/InputStream; getInputStream
	c ()Z hasMetadata
	d ()Ljava/lang/String; getSourceName
net/minecraft/server/IResourceManager net/minecraft/server/packs/resources/ResourceManager
	a ()Ljava/util/Set; getNamespaces
	a (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Collection; listResources
	a (Lnet/minecraft/server/IResourcePack;)V add
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/IResource; getResource
	b (Lnet/minecraft/server/MinecraftKey;)Z hasResource
	c (Lnet/minecraft/server/MinecraftKey;)Ljava/util/List; getResources
net/minecraft/server/IResourcePack net/minecraft/server/packs/Pack
	a ()Ljava/lang/String; getName
	a (Lnet/minecraft/server/EnumResourcePackType;)Ljava/util/Set; getNamespaces
	a (Lnet/minecraft/server/EnumResourcePackType;Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; getResources
	a (Lnet/minecraft/server/EnumResourcePackType;Lnet/minecraft/server/MinecraftKey;)Ljava/io/InputStream; getResource
	a (Lnet/minecraft/server/ResourcePackMetaParser;)Ljava/lang/Object; getMetadataSection
	b (Ljava/lang/String;)Ljava/io/InputStream; getRootResource
	b (Lnet/minecraft/server/EnumResourcePackType;Lnet/minecraft/server/MinecraftKey;)Z hasResource
net/minecraft/server/IResourcePackListener net/minecraft/server/packs/resources/ResourceManagerReloadListener
	a (Lnet/minecraft/server/IResourceManager;)V onResourceManagerReload
	a (Lyw$a;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;Lnet/minecraft/server/GameProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; reload
net/minecraft/server/IScoreboardCriteria net/minecraft/world/scores/criteria/ObjectiveCriteria
	PLAYER_KILL_COUNT KILL_COUNT_PLAYERS
	TOTAL_KILL_COUNT KILL_COUNT_ALL
	XP EXPERIENCE
	criteria CRITERIA_BY_NAME
	m TEAM_KILL
	n KILLED_BY_TEAM
	o name
	p readOnly
	q renderType
	a (Ljava/lang/String;)Ljava/util/Optional; byName
	a (Lnet/minecraft/server/StatisticWrapper;Lnet/minecraft/server/MinecraftKey;)Ljava/util/Optional; getStat
	e ()Lnet/minecraft/server/IScoreboardCriteria$EnumScoreboardHealthDisplay; getDefaultRenderType
net/minecraft/server/IScoreboardCriteria$EnumScoreboardHealthDisplay net/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType
	c id
	d BY_ID
	e $VALUES
	a ()Ljava/lang/String; getId
	a (Ljava/lang/String;)Lnet/minecraft/server/IScoreboardCriteria$EnumScoreboardHealthDisplay; byId
net/minecraft/server/ISource net/minecraft/core/Location
	getWorld ()Lnet/minecraft/server/World; getLevel
net/minecraft/server/ISourceBlock net/minecraft/core/BlockSource
	a ()D x
	b ()D y
	c ()D z
	f ()Lnet/minecraft/server/Material; getMaterial
	getBlockData ()Lnet/minecraft/server/IBlockData; getBlockState
	getBlockPosition ()Lnet/minecraft/server/BlockPosition; getPos
	getTileEntity ()Lnet/minecraft/server/TileEntity; getEntity
net/minecraft/server/IStructureAccess net/minecraft/world/level/chunk/FeatureAccess
	a (Ljava/lang/String;)Lnet/minecraft/server/StructureStart; getStartForFeature
	a (Ljava/lang/String;J)V addReferenceForFeature
	a (Ljava/lang/String;Lnet/minecraft/server/StructureStart;)V setStartForFeature
	b (Ljava/lang/String;)Lit/unimi/dsi/fastutil/longs/LongSet; getReferencesForFeature
	b (Ljava/util/Map;)V setAllReferences
	v ()Ljava/util/Map; getAllReferences
net/minecraft/server/ITickable net/minecraft/world/level/block/entity/TickableBlockEntity
net/minecraft/server/ITileEntity net/minecraft/world/level/block/EntityBlock
	createTile (Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/TileEntity; newBlockEntity
net/minecraft/server/ITileEntityContainer net/minecraft/world/inventory/MenuConstructor
net/minecraft/server/ITileInventory net/minecraft/world/MenuProvider
	getScoreboardDisplayName ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
net/minecraft/server/IVectorPosition net/minecraft/commands/arguments/coordinates/Coordinates
	a ()Z isXRelative
	a (Lnet/minecraft/server/CommandListenerWrapper;)Lnet/minecraft/server/Vec3D; getPosition
	b ()Z isYRelative
	b (Lnet/minecraft/server/CommandListenerWrapper;)Lnet/minecraft/server/Vec2F; getRotation
	c ()Z isZRelative
	c (Lnet/minecraft/server/CommandListenerWrapper;)Lnet/minecraft/server/BlockPosition; getBlockPos
net/minecraft/server/IWorldBorderListener net/minecraft/world/level/border/BorderChangeListener
	a (Lnet/minecraft/server/WorldBorder;D)V onBorderSizeSet
	a (Lnet/minecraft/server/WorldBorder;DD)V onBorderCenterSet
	a (Lnet/minecraft/server/WorldBorder;DDJ)V onBorderSizeLerping
	a (Lnet/minecraft/server/WorldBorder;I)V onBorderSetWarningTime
	b (Lnet/minecraft/server/WorldBorder;D)V onBorderSetDamagePerBlock
	b (Lnet/minecraft/server/WorldBorder;I)V onBorderSetWarningBlocks
	c (Lnet/minecraft/server/WorldBorder;D)V onBorderSetDamageSafeZOne
net/minecraft/server/IWorldInventory net/minecraft/world/WorldlyContainer
net/minecraft/server/IWorldReader net/minecraft/world/level/LevelReader
	a (III)Lnet/minecraft/server/BiomeBase; getUncachedNoiseBiome
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/world/level/ColorResolver;)I getBlockTint
	a (Lnet/minecraft/server/HeightMap$Type;II)I getHeight
	areChunksLoadedBetween (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Z hasChunksAt
	b (III)Lnet/minecraft/server/BiomeBase; getNoiseBiome
	c ()I getSkyDarken
	c (II)Lnet/minecraft/server/IBlockAccess; getChunkForCollisions
	c (Lnet/minecraft/server/BlockPosition;I)I getMaxLocalRawBrightness
	c (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getDirectSignal
	containsLiquid (Lnet/minecraft/server/AxisAlignedBB;)Z containsAnyLiquid
	d ()Lnet/minecraft/server/BiomeManager; getBiomeManager
	getChunkAt (II)Lnet/minecraft/server/IChunkAccess; getChunk
	getChunkAt (IILnet/minecraft/server/ChunkStatus;)Lnet/minecraft/server/IChunkAccess; getChunk
	getChunkAt (IILnet/minecraft/server/ChunkStatus;Z)Lnet/minecraft/server/IChunkAccess; getChunk
	getHighestBlockYAt (Lnet/minecraft/server/HeightMap$Type;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/BlockPosition; getHeightmapPos
	getLightLevel (Lnet/minecraft/server/BlockPosition;)I getMaxLocalRawBrightness
	getWorldProvider ()Lnet/minecraft/server/WorldProvider; getDimension
	isAreaLoaded (IIIIII)Z hasChunksAt
	isChunkLoaded (II)Z hasChunk
	isEmpty (Lnet/minecraft/server/BlockPosition;)Z isEmptyBlock
	isLoaded (Lnet/minecraft/server/BlockPosition;)Z hasChunkAt
	p_ ()Z isClientSide
	v (Lnet/minecraft/server/BlockPosition;)Z canSeeSkyFromBelowWater
	w (Lnet/minecraft/server/BlockPosition;)F getBrightness
	x (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IChunkAccess; getChunk
	y (Lnet/minecraft/server/BlockPosition;)Z isWaterAt
net/minecraft/server/IWorldWriter net/minecraft/world/level/LevelWriter
	a (Lnet/minecraft/server/BlockPosition;Z)Z removeBlock
	a (Lnet/minecraft/server/BlockPosition;ZLnet/minecraft/server/Entity;)Z destroyBlock
	addEntity (Lnet/minecraft/server/Entity;)Z addFreshEntity
	b (Lnet/minecraft/server/BlockPosition;Z)Z destroyBlock
	setTypeAndData (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;I)Z setBlock
net/minecraft/server/InsensitiveStringMap net/minecraft/util/InsensitiveStringMap
	a map
	a (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object; put
net/minecraft/server/InstantMobEffect net/minecraft/world/effect/InstantenousMobEffect
	a ()Z isInstantenous
	a (II)Z isDurationEffectTick
net/minecraft/server/InteractionResultWrapper net/minecraft/world/InteractionResultHolder
	a result
	b object
	a ()Lnet/minecraft/server/EnumInteractionResult; getResult
	a (Ljava/lang/Object;)Lnet/minecraft/server/InteractionResultWrapper; success
	b ()Ljava/lang/Object; getObject
	b (Ljava/lang/Object;)Lnet/minecraft/server/InteractionResultWrapper; consume
	c (Ljava/lang/Object;)Lnet/minecraft/server/InteractionResultWrapper; pass
	d (Ljava/lang/Object;)Lnet/minecraft/server/InteractionResultWrapper; fail
net/minecraft/server/InventoryClickType net/minecraft/world/inventory/ClickType
	h $VALUES
net/minecraft/server/InventoryCraftResult net/minecraft/world/inventory/ResultContainer
	b recipeUsed
	items itemStacks
	N_ ()V clearContent
	O_ ()I getContainerSize
	a (I)Lnet/minecraft/server/ItemStack; getItem
	a (II)Lnet/minecraft/server/ItemStack; removeItem
	a (ILnet/minecraft/server/ItemStack;)V setItem
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/IRecipe;)V setRecipeUsed
	aa_ ()Lnet/minecraft/server/IRecipe; getRecipeUsed
	b (I)Lnet/minecraft/server/ItemStack; removeItemNoUpdate
	c ()Z isEmpty
	e ()V setChanged
net/minecraft/server/InventoryCrafting net/minecraft/world/inventory/CraftingContainer
	b width
	c height
	container menu
	N_ ()V clearContent
	O_ ()I getContainerSize
	a (I)Lnet/minecraft/server/ItemStack; getItem
	a (II)Lnet/minecraft/server/ItemStack; removeItem
	a (ILnet/minecraft/server/ItemStack;)V setItem
	a (Lnet/minecraft/server/AutoRecipeStackManager;)V fillStackedContents
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	b (I)Lnet/minecraft/server/ItemStack; removeItemNoUpdate
	b (II)Lnet/minecraft/server/ItemStack; getItem
	c ()Z isEmpty
	e ()V setChanged
	f ()I getHeight
	g ()I getWidth
net/minecraft/server/InventoryEnderChest net/minecraft/world/inventory/PlayerEnderChestContainer
	a activeChest
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/NBTTagList;)V fromTag
	a (Lnet/minecraft/server/TileEntityEnderChest;)V setActiveChest
	a_ (Lnet/minecraft/server/EntityHuman;)V startOpen
	b_ (Lnet/minecraft/server/EntityHuman;)V stopOpen
	f ()Lnet/minecraft/server/NBTTagList; createTag
net/minecraft/server/InventoryLargeChest net/minecraft/world/CompoundContainer
	left container1
	right container2
	L_ ()I getMaxStackSize
	N_ ()V clearContent
	O_ ()I getContainerSize
	a (I)Lnet/minecraft/server/ItemStack; getItem
	a (II)Lnet/minecraft/server/ItemStack; removeItem
	a (ILnet/minecraft/server/ItemStack;)V setItem
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/IInventory;)Z contains
	a_ (Lnet/minecraft/server/EntityHuman;)V startOpen
	b (I)Lnet/minecraft/server/ItemStack; removeItemNoUpdate
	b (ILnet/minecraft/server/ItemStack;)Z canPlaceItem
	b_ (Lnet/minecraft/server/EntityHuman;)V stopOpen
	c ()Z isEmpty
	e ()V setChanged
net/minecraft/server/InventoryMerchant net/minecraft/world/inventory/MerchantContainer
	e futureXp
	itemsInSlots itemStacks
	recipe activeOffer
	selectedIndex selectionHint
	N_ ()V clearContent
	O_ ()I getContainerSize
	a (I)Lnet/minecraft/server/ItemStack; getItem
	a (II)Lnet/minecraft/server/ItemStack; removeItem
	a (ILnet/minecraft/server/ItemStack;)V setItem
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	b (I)Lnet/minecraft/server/ItemStack; removeItemNoUpdate
	c ()Z isEmpty
	c (I)V setSelectionHint
	d (I)Z isPaymentSlot
	e ()V setChanged
	f ()V updateSellItem
	getRecipe ()Lnet/minecraft/server/MerchantRecipe; getActiveOffer
	h ()I getFutureXp
net/minecraft/server/InventorySubcontainer net/minecraft/world/SimpleContainer
	a size
	c listeners
	N_ ()V clearContent
	O_ ()I getContainerSize
	a (I)Lnet/minecraft/server/ItemStack; getItem
	a (II)Lnet/minecraft/server/ItemStack; removeItem
	a (ILnet/minecraft/server/ItemStack;)V setItem
	a (Lnet/minecraft/server/AutoRecipeStackManager;)V fillStackedContents
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/IInventoryListener;)V addListener
	a (Lnet/minecraft/server/Item;I)Lnet/minecraft/server/ItemStack; removeItemType
	a (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; addItem
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)V moveItemsBetweenStacks
	b (I)Lnet/minecraft/server/ItemStack; removeItemNoUpdate
	b (Lnet/minecraft/server/IInventoryListener;)V removeListener
	b (Lnet/minecraft/server/ItemStack;)V moveItemToEmptySlots
	c ()Z isEmpty
	c (Lnet/minecraft/server/ItemStack;)V moveItemToOccupiedSlotsWithSameType
	update ()V setChanged
net/minecraft/server/InventoryUtils net/minecraft/world/Containers
	a RANDOM
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/NonNullList;)V dropContents
	dropEntity (Lnet/minecraft/server/World;Lnet/minecraft/server/Entity;Lnet/minecraft/server/IInventory;)V dropContents
	dropInventory (Lnet/minecraft/server/World;DDDLnet/minecraft/server/IInventory;)V dropContents
	dropInventory (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IInventory;)V dropContents
	dropItem (Lnet/minecraft/server/World;DDDLnet/minecraft/server/ItemStack;)V dropItemStack
net/minecraft/server/IpBanEntry net/minecraft/server/players/IpBanListEntry
	a (Lcom/google/gson/JsonObject;)V serialize
	b (Lcom/google/gson/JsonObject;)Ljava/lang/String; createIpInfo
	e ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
net/minecraft/server/IpBanList net/minecraft/server/players/IpBanList
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/JsonListEntry; createEntry
	a (Ljava/lang/String;)Z isBanned
	c (Ljava/net/SocketAddress;)Ljava/lang/String; getIpFromAddress
net/minecraft/server/Item net/minecraft/world/item/Item
	a PROPERTY_DAMAGED
	b PROPERTY_DAMAGE
	c PROPERTY_LEFTHANDED
	craftingResult craftingRemainingItem
	d PROPERTY_COOLDOWN
	durability maxDamage
	e PROPERTY_CUSTOM_MODEL_DATA
	f BY_BLOCK
	foodInfo foodProperties
	g BASE_ATTACK_DAMAGE_UUID
	h BASE_ATTACK_SPEED_UUID
	i random
	j category
	k properties
	l rarity
	name descriptionId
	R_ ()Z isComplex
	S_ ()Lnet/minecraft/server/SoundEffect; getEatingSound
	U_ ()Lnet/minecraft/server/SoundEffect; getDrinkingSound
	a (Lnet/minecraft/server/CreativeModeTab;)Z allowdedIn
	a (Lnet/minecraft/server/CreativeModeTab;Lnet/minecraft/server/NonNullList;)V fillItemCategory
	a (Lnet/minecraft/server/EnumItemSlot;)Lcom/google/common/collect/Multimap; getDefaultAttributeModifiers
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;)Z canAttackBlock
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EnumHand;)Z interactEnemy
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)Z hurtEnemy
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z isValidRepairItem
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Ljava/util/List;Lbft;)V appendHoverText
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/Entity;IZ)V inventoryTick
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/ItemStack; finishUsingItem
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;I)V releaseUsing
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityLiving;)Z mineBlock
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/IDynamicTexture; getProperty
	a (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/IDynamicTexture;)V addProperty
	a (Lnet/minecraft/server/NBTTagCompound;)Z verifyTagAfterLoad
	a (Lnet/minecraft/server/Tag;)Z is
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/RayTrace$FluidCollisionOption;)Lnet/minecraft/server/MovingObjectPosition; getPlayerPOVHitResult
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;I)V onUseTick
	b (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;)V onCraftedBy
	c ()I getEnchantmentValue
	canDestroySpecialBlock (Lnet/minecraft/server/IBlockData;)Z canDestroySpecial
	d_ (Lnet/minecraft/server/ItemStack;)Z isFoil
	e_ (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/EnumAnimation; getUseAnimation
	f (Lnet/minecraft/server/ItemStack;)Ljava/lang/String; getDescriptionId
	f_ (Lnet/minecraft/server/ItemStack;)I getUseDuration
	g (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/IChatBaseComponent; getName
	g_ (Lnet/minecraft/server/ItemStack;)Z isEnchantable
	getById (I)Lnet/minecraft/server/Item; byId
	getFoodInfo ()Lnet/minecraft/server/FoodInfo; getFoodProperties
	getItemOf (Lnet/minecraft/server/Block;)Lnet/minecraft/server/Item; byBlock
	getMaxDurability ()I getMaxDamage
	getName ()Ljava/lang/String; getDescriptionId
	h ()Z hasProperties
	h (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/EnumItemRarity; getRarity
	i ()Lnet/minecraft/server/Item; asItem
	i (Lnet/minecraft/server/ItemStack;)Z useOnRelease
	isFood ()Z isEdible
	m ()Lnet/minecraft/server/IChatBaseComponent; getDescription
	n ()Ljava/lang/String; getOrCreateDescriptionId
	o ()Z shouldOverrideMultiplayerNbt
	p ()Lnet/minecraft/server/Item; getCraftingRemainingItem
	q ()Z hasCraftingRemainingItem
	r ()Lnet/minecraft/server/CreativeModeTab; getItemCategory
	s ()Lnet/minecraft/server/ItemStack; getDefaultInstance
	usesDurability ()Z canBeDepleted
net/minecraft/server/Item$Info net/minecraft/world/item/Item$Properties
	a maxStackSize
	b maxDamage
	c craftingRemainingItem
	d category
	e rarity
	f foodProperties
	a (I)Lnet/minecraft/server/Item$Info; stacksTo
	a (Lnet/minecraft/server/CreativeModeTab;)Lnet/minecraft/server/Item$Info; tab
	a (Lnet/minecraft/server/EnumItemRarity;)Lnet/minecraft/server/Item$Info; rarity
	a (Lnet/minecraft/server/FoodInfo;)Lnet/minecraft/server/Item$Info; food
	a (Lnet/minecraft/server/Item;)Lnet/minecraft/server/Item$Info; craftRemainder
	b (I)Lnet/minecraft/server/Item$Info; defaultDurability
	c (I)Lnet/minecraft/server/Item$Info; durability
net/minecraft/server/ItemActionContext net/minecraft/world/item/UseOnContext
	b player
	c hand
	d hitResult
	e level
	f itemStack
	f ()Lnet/minecraft/server/EnumDirection; getHorizontalDirection
	getClickPosition ()Lnet/minecraft/server/BlockPosition; getClickedPos
	getEntity ()Lnet/minecraft/server/EntityHuman; getPlayer
	getItemStack ()Lnet/minecraft/server/ItemStack; getItemInHand
	getWorld ()Lnet/minecraft/server/World; getLevel
	h ()F getRotation
	isSneaking ()Z isSecondaryUseActive
	j ()Lnet/minecraft/server/Vec3D; getClickLocation
	k ()Z isInside
	n ()Lnet/minecraft/server/EnumHand; getHand
net/minecraft/server/ItemAir net/minecraft/world/item/AirItem
	a block
	a ()Ljava/lang/String; getDescriptionId
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Ljava/util/List;Lbft;)V appendHoverText
net/minecraft/server/ItemArmor net/minecraft/world/item/ArmorItem
	a DISPENSE_ITEM_BEHAVIOR
	b slot
	c defense
	d toughness
	e material
	k ARMOR_MODIFIER_UUID_PER_SLOT
	Q_ ()Lnet/minecraft/server/ArmorMaterial; getMaterial
	a (Lnet/minecraft/server/EnumItemSlot;)Lcom/google/common/collect/Multimap; getDefaultAttributeModifiers
	a (Lnet/minecraft/server/ISourceBlock;Lnet/minecraft/server/ItemStack;)Z dispenseArmor
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z isValidRepairItem
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
	b ()Lnet/minecraft/server/EnumItemSlot; getSlot
	c ()I getEnchantmentValue
	e ()I getDefense
net/minecraft/server/ItemArmorColorable net/minecraft/world/item/DyeableArmorItem
net/minecraft/server/ItemArmorStand net/minecraft/world/item/ArmorStandItem
	a (Lnet/minecraft/server/EntityArmorStand;Ljava/util/Random;)V randomizePose
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
net/minecraft/server/ItemArrow net/minecraft/world/item/ArrowItem
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/EntityArrow; createArrow
net/minecraft/server/ItemAxe net/minecraft/world/item/AxeItem
	a STRIPABLES
	e DIGGABLES
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/IBlockData;)F getDestroySpeed
net/minecraft/server/ItemBanner net/minecraft/world/item/BannerItem
	a (Lnet/minecraft/server/ItemStack;Ljava/util/List;)V appendHoverTextFromBannerBlockEntityTag
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Ljava/util/List;Lbft;)V appendHoverText
	b ()Lnet/minecraft/server/EnumColor; getColor
net/minecraft/server/ItemBannerPattern net/minecraft/world/item/BannerPatternItem
	a bannerPattern
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Ljava/util/List;Lbft;)V appendHoverText
	b ()Lnet/minecraft/server/EnumBannerPatternType; getBannerPattern
	d ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
net/minecraft/server/ItemBed net/minecraft/world/item/BedItem
	a (Lnet/minecraft/server/BlockActionContext;Lnet/minecraft/server/IBlockData;)Z placeBlock
net/minecraft/server/ItemBisected net/minecraft/world/item/DoubleHighBlockItem
	a (Lnet/minecraft/server/BlockActionContext;Lnet/minecraft/server/IBlockData;)Z placeBlock
net/minecraft/server/ItemBlock net/minecraft/world/item/BlockItem
	a block
	T_ ()Z mustSurvive
	a ()Ljava/lang/String; getDescriptionId
	a (Ljava/util/Map;Lnet/minecraft/server/Item;)V registerBlocks
	a (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/EnumInteractionResult; place
	a (Lnet/minecraft/server/BlockActionContext;Lnet/minecraft/server/IBlockData;)Z placeBlock
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/IBlockData;)Z updateCustomBlockEntityTag
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/World;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/IBlockData; updateBlockStateFromTag
	a (Lnet/minecraft/server/CreativeModeTab;Lnet/minecraft/server/NonNullList;)V fillItemCategory
	a (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/SoundEffect; getPlaceSound
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockState;Ljava/lang/String;)Lnet/minecraft/server/IBlockData; updateState
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Ljava/util/List;Lbft;)V appendHoverText
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/ItemStack;)Z updateCustomBlockEntityTag
	b (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/BlockActionContext; updatePlacementContext
	b (Lnet/minecraft/server/BlockActionContext;Lnet/minecraft/server/IBlockData;)Z canPlace
	c (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getPlacementState
net/minecraft/server/ItemBlockWallable net/minecraft/world/item/StandingAndWallBlockItem
	a (Ljava/util/Map;Lnet/minecraft/server/Item;)V registerBlocks
	c (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getPlacementState
net/minecraft/server/ItemBoat net/minecraft/world/item/BoatItem
	a ENTITY_PREDICATE
	b type
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
net/minecraft/server/ItemBoneMeal net/minecraft/world/item/BoneMealItem
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;I)V addGrowthParticles
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Z growCrop
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z growWaterPlant
net/minecraft/server/ItemBook net/minecraft/world/item/BookItem
	c ()I getEnchantmentValue
	g_ (Lnet/minecraft/server/ItemStack;)Z isEnchantable
net/minecraft/server/ItemBookAndQuill net/minecraft/world/item/WritableBookItem
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
	b (Lnet/minecraft/server/NBTTagCompound;)Z makeSureTagIsValid
net/minecraft/server/ItemBow net/minecraft/world/item/BowItem
	a (I)F getPowerForTime
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;I)V releaseUsing
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
	b ()Ljava/util/function/Predicate; getAllSupportedProjectiles
	e_ (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/EnumAnimation; getUseAnimation
	f_ (Lnet/minecraft/server/ItemStack;)I getUseDuration
net/minecraft/server/ItemBucket net/minecraft/world/item/BucketItem
	fluidType content
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)V playEmptySound
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/MovingObjectPositionBlock;)Z emptyBucket
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityHuman;)Lnet/minecraft/server/ItemStack; getEmptySuccessItem
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/Item;)Lnet/minecraft/server/ItemStack; createResultItem
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/BlockPosition;)V checkExtraContent
net/minecraft/server/ItemCarrotStick net/minecraft/world/item/CarrotOnAStickItem
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
net/minecraft/server/ItemChorusFruit net/minecraft/world/item/ChorusFruitItem
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/ItemStack; finishUsingItem
net/minecraft/server/ItemClock net/minecraft/world/item/ClockItem
net/minecraft/server/ItemCompass net/minecraft/world/item/CompassItem
net/minecraft/server/ItemCooldown net/minecraft/world/item/ItemCooldowns
	currentTick tickCount
	a ()V tick
	a (Lnet/minecraft/server/Item;F)F getCooldownPercent
	b (Lnet/minecraft/server/Item;)V removeCooldown
	b (Lnet/minecraft/server/Item;I)V onCooldownStarted
	c (Lnet/minecraft/server/Item;)V onCooldownEnded
	hasCooldown (Lnet/minecraft/server/Item;)Z isOnCooldown
	setCooldown (Lnet/minecraft/server/Item;I)V addCooldown
net/minecraft/server/ItemCooldown$Info net/minecraft/world/item/ItemCooldowns$CooldownInstance
	b startTime
	endTick endTime
net/minecraft/server/ItemCooldownPlayer net/minecraft/world/item/ServerItemCooldowns
	a player
	b (Lnet/minecraft/server/Item;I)V onCooldownStarted
	c (Lnet/minecraft/server/Item;)V onCooldownEnded
net/minecraft/server/ItemCrossbow net/minecraft/world/item/CrossbowItem
	c startSoundPlayed
	d midLoadSoundPlayed
	a (I)Lnet/minecraft/server/SoundEffect; getStartSound
	a (ILnet/minecraft/server/ItemStack;)F getPowerForTime
	a (Ljava/util/Random;)[F getShotPitches
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)Z tryLoadProjectiles
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;ZZ)Z loadProjectile
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/Item;)Z containsChargedProjectile
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Ljava/util/List;Lbft;)V appendHoverText
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;I)V releaseUsing
	a (Lnet/minecraft/server/ItemStack;Z)V setCharged
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/ItemStack;FF)V performShooting
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;FZFFF)V shootProjectile
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;)V onCrossbowShot
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;I)V onUseTick
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/EntityArrow; getArrow
	a (Z)F getRandomShotPitch
	b ()Ljava/util/function/Predicate; getAllSupportedProjectiles
	b (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)V addChargedProjectile
	d ()Ljava/util/function/Predicate; getSupportedHeldProjectiles
	d (Lnet/minecraft/server/ItemStack;)Z isCharged
	e (Lnet/minecraft/server/ItemStack;)I getChargeDuration
	e_ (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/EnumAnimation; getUseAnimation
	f_ (Lnet/minecraft/server/ItemStack;)I getUseDuration
	j (Lnet/minecraft/server/ItemStack;)Ljava/util/List; getChargedProjectiles
	k (Lnet/minecraft/server/ItemStack;)V clearChargedProjectiles
	l (Lnet/minecraft/server/ItemStack;)F getShootingPower
net/minecraft/server/ItemDebugStick net/minecraft/world/item/DebugStickItem
	a (Ljava/lang/Iterable;Ljava/lang/Object;Z)Ljava/lang/Object; getRelative
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;ZLnet/minecraft/server/ItemStack;)V handleInteraction
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/IChatBaseComponent;)V message
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockState;)Ljava/lang/String; getNameHelper
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockState;Z)Lnet/minecraft/server/IBlockData; cycleState
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;)Z canAttackBlock
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
	d_ (Lnet/minecraft/server/ItemStack;)Z isFoil
net/minecraft/server/ItemDye net/minecraft/world/item/DyeItem
	a ITEM_BY_COLOR
	b dyeColor
	a (Lnet/minecraft/server/EnumColor;)Lnet/minecraft/server/ItemDye; byColor
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EnumHand;)Z interactEnemy
	d ()Lnet/minecraft/server/EnumColor; getDyeColor
net/minecraft/server/ItemEgg net/minecraft/world/item/EggItem
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
net/minecraft/server/ItemElytra net/minecraft/world/item/ElytraItem
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z isValidRepairItem
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
	e (Lnet/minecraft/server/ItemStack;)Z isFlyEnabled
net/minecraft/server/ItemEnchantedBook net/minecraft/world/item/EnchantedBookItem
	a (Lnet/minecraft/server/CreativeModeTab;Lnet/minecraft/server/NonNullList;)V fillItemCategory
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/WeightedRandomEnchant;)V addEnchantment
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Ljava/util/List;Lbft;)V appendHoverText
	a (Lnet/minecraft/server/WeightedRandomEnchant;)Lnet/minecraft/server/ItemStack; createForEnchantment
	d_ (Lnet/minecraft/server/ItemStack;)Z isFoil
	e (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/NBTTagList; getEnchantments
	g_ (Lnet/minecraft/server/ItemStack;)Z isEnchantable
net/minecraft/server/ItemEndCrystal net/minecraft/world/item/EndCrystalItem
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
	d_ (Lnet/minecraft/server/ItemStack;)Z isFoil
net/minecraft/server/ItemEnderEye net/minecraft/world/item/EnderEyeItem
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
net/minecraft/server/ItemEnderPearl net/minecraft/world/item/EnderpearlItem
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
net/minecraft/server/ItemExpBottle net/minecraft/world/item/ExperienceBottleItem
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
	d_ (Lnet/minecraft/server/ItemStack;)Z isFoil
net/minecraft/server/ItemFireball net/minecraft/world/item/FireChargeItem
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V playSound
net/minecraft/server/ItemFireworks net/minecraft/world/item/FireworkRocketItem
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Ljava/util/List;Lbft;)V appendHoverText
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
net/minecraft/server/ItemFireworks$EffectType net/minecraft/world/item/FireworkRocketItem$Shape
	f BY_ID
	g id
	h name
	i $VALUES
	a ()I getId
	a (I)Lnet/minecraft/server/ItemFireworks$EffectType; byId
	b ()Ljava/lang/String; getName
net/minecraft/server/ItemFireworksCharge net/minecraft/world/item/FireworkStarItem
	a (I)Lnet/minecraft/server/IChatBaseComponent; getColorName
	a (Lnet/minecraft/server/IChatBaseComponent;[I)Lnet/minecraft/server/IChatBaseComponent; appendColors
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Ljava/util/List;Lbft;)V appendHoverText
	a (Lnet/minecraft/server/NBTTagCompound;Ljava/util/List;)V appendHoverText
net/minecraft/server/ItemFishBucket net/minecraft/world/item/FishBucketItem
	a type
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)V playEmptySound
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Ljava/util/List;Lbft;)V appendHoverText
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/BlockPosition;)V checkExtraContent
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/BlockPosition;)V spawn
net/minecraft/server/ItemFishingRod net/minecraft/world/item/FishingRodItem
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
	c ()I getEnchantmentValue
net/minecraft/server/ItemFlintAndSteel net/minecraft/world/item/FlintAndSteelItem
	a (Lnet/minecraft/server/IBlockData;)Z canLightCampFire
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)Z canUse
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
net/minecraft/server/ItemGlassBottle net/minecraft/world/item/BottleItem
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; turnBottleIntoItem
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
net/minecraft/server/ItemGoldenAppleEnchanted net/minecraft/world/item/EnchantedGoldenAppleItem
	d_ (Lnet/minecraft/server/ItemStack;)Z isFoil
net/minecraft/server/ItemHanging net/minecraft/world/item/HangingEntityItem
	a type
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/BlockPosition;)Z mayPlace
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
net/minecraft/server/ItemHoe net/minecraft/world/item/HoeItem
	a TILLABLES
	b attackSpeed
	a (Lnet/minecraft/server/EnumItemSlot;)Lcom/google/common/collect/Multimap; getDefaultAttributeModifiers
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)Z hurtEnemy
net/minecraft/server/ItemHoneyBottle net/minecraft/world/item/HoneyBottleItem
	S_ ()Lnet/minecraft/server/SoundEffect; getEatingSound
	U_ ()Lnet/minecraft/server/SoundEffect; getDrinkingSound
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/ItemStack; finishUsingItem
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
	e_ (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/EnumAnimation; getUseAnimation
	f_ (Lnet/minecraft/server/ItemStack;)I getUseDuration
net/minecraft/server/ItemHorseArmor net/minecraft/world/item/HorseArmorItem
	a protection
	b texture
	f ()Lnet/minecraft/server/MinecraftKey; getTexture
	g ()I getProtection
net/minecraft/server/ItemHorseArmorDyeable net/minecraft/world/item/DyeableHorseArmorItem
net/minecraft/server/ItemItemFrame net/minecraft/world/item/ItemFrameItem
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/BlockPosition;)Z mayPlace
net/minecraft/server/ItemKnowledgeBook net/minecraft/world/item/KnowledgeBookItem
	a LOGGER
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
net/minecraft/server/ItemLeash net/minecraft/world/item/LeadItem
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/EnumInteractionResult; bindPlayerMobs
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
net/minecraft/server/ItemLingeringPotion net/minecraft/world/item/LingeringPotionItem
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Ljava/util/List;Lbft;)V appendHoverText
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
net/minecraft/server/ItemMapEmpty net/minecraft/world/item/EmptyMapItem
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
net/minecraft/server/ItemMilkBucket net/minecraft/world/item/MilkBucketItem
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/ItemStack; finishUsingItem
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
	e_ (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/EnumAnimation; getUseAnimation
	f_ (Lnet/minecraft/server/ItemStack;)I getUseDuration
net/minecraft/server/ItemMinecart net/minecraft/world/item/MinecartItem
	a DISPENSE_ITEM_BEHAVIOR
	b type
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
net/minecraft/server/ItemMonsterEgg net/minecraft/world/item/SpawnEggItem
	a BY_ID
	b color1
	c color2
	d defaultType
	a (I)I getColor
	a (Lnet/minecraft/server/EntityTypes;)Lnet/minecraft/server/ItemMonsterEgg; byId
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/EntityTypes;)Z spawnsEntity
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/EntityTypes; getType
	f ()Ljava/lang/Iterable; eggs
net/minecraft/server/ItemNameTag net/minecraft/world/item/NameTagItem
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EnumHand;)Z interactEnemy
net/minecraft/server/ItemNamedBlock net/minecraft/world/item/ItemNameBlockItem
	a ()Ljava/lang/String; getDescriptionId
net/minecraft/server/ItemNetherStar net/minecraft/world/item/SimpleFoiledItem
	d_ (Lnet/minecraft/server/ItemStack;)Z isFoil
net/minecraft/server/ItemPickaxe net/minecraft/world/item/PickaxeItem
	a DIGGABLES
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/IBlockData;)F getDestroySpeed
	b (Lnet/minecraft/server/IBlockData;)Z canDestroySpecial
net/minecraft/server/ItemPotion net/minecraft/world/item/PotionItem
	a (Lnet/minecraft/server/CreativeModeTab;Lnet/minecraft/server/NonNullList;)V fillItemCategory
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Ljava/util/List;Lbft;)V appendHoverText
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/ItemStack; finishUsingItem
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
	d_ (Lnet/minecraft/server/ItemStack;)Z isFoil
	e_ (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/EnumAnimation; getUseAnimation
	f (Lnet/minecraft/server/ItemStack;)Ljava/lang/String; getDescriptionId
	f_ (Lnet/minecraft/server/ItemStack;)I getUseDuration
	s ()Lnet/minecraft/server/ItemStack; getDefaultInstance
net/minecraft/server/ItemPotionThrowable net/minecraft/world/item/ThrowablePotionItem
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
net/minecraft/server/ItemProjectileWeapon net/minecraft/world/item/ProjectileWeaponItem
	a ARROW_ONLY
	b ARROW_OR_FIREWORK
	a (Lnet/minecraft/server/EntityLiving;Ljava/util/function/Predicate;)Lnet/minecraft/server/ItemStack; getHeldProjectile
	b ()Ljava/util/function/Predicate; getAllSupportedProjectiles
	c ()I getEnchantmentValue
	d ()Ljava/util/function/Predicate; getSupportedHeldProjectiles
net/minecraft/server/ItemRecord net/minecraft/world/item/RecordItem
	a BY_NAME
	b analogOutput
	c sound
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Ljava/util/List;Lbft;)V appendHoverText
	a (Lnet/minecraft/server/SoundEffect;)Lnet/minecraft/server/ItemRecord; getBySound
	f ()I getAnalogOutput
	g ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
	v ()Lnet/minecraft/server/SoundEffect; getSound
net/minecraft/server/ItemRestricted net/minecraft/world/item/GameMasterBlockItem
	c (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/IBlockData; getPlacementState
net/minecraft/server/ItemSaddle net/minecraft/world/item/SaddleItem
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EnumHand;)Z interactEnemy
net/minecraft/server/ItemScaffolding net/minecraft/world/item/ScaffoldingBlockItem
	T_ ()Z mustSurvive
	b (Lnet/minecraft/server/BlockActionContext;)Lnet/minecraft/server/BlockActionContext; updatePlacementContext
net/minecraft/server/ItemShears net/minecraft/world/item/ShearsItem
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/IBlockData;)F getDestroySpeed
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityLiving;)Z mineBlock
	b (Lnet/minecraft/server/IBlockData;)Z canDestroySpecial
net/minecraft/server/ItemShield net/minecraft/world/item/ShieldItem
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z isValidRepairItem
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Ljava/util/List;Lbft;)V appendHoverText
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
	e (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/EnumColor; getColor
	e_ (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/EnumAnimation; getUseAnimation
	f (Lnet/minecraft/server/ItemStack;)Ljava/lang/String; getDescriptionId
	f_ (Lnet/minecraft/server/ItemStack;)I getUseDuration
net/minecraft/server/ItemSign net/minecraft/world/item/SignItem
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/IBlockData;)Z updateCustomBlockEntityTag
net/minecraft/server/ItemSkullPlayer net/minecraft/world/item/PlayerHeadItem
	a (Lnet/minecraft/server/NBTTagCompound;)Z verifyTagAfterLoad
	g (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/IChatBaseComponent; getName
net/minecraft/server/ItemSnowball net/minecraft/world/item/SnowballItem
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
net/minecraft/server/ItemSoup net/minecraft/world/item/BowlFoodItem
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/ItemStack; finishUsingItem
net/minecraft/server/ItemSpade net/minecraft/world/item/ShovelItem
	a FLATTENABLES
	e DIGGABLES
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
	b (Lnet/minecraft/server/IBlockData;)Z canDestroySpecial
net/minecraft/server/ItemSpectralArrow net/minecraft/world/item/SpectralArrowItem
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/EntityArrow; createArrow
net/minecraft/server/ItemSplashPotion net/minecraft/world/item/SplashPotionItem
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
net/minecraft/server/ItemStack net/minecraft/world/item/ItemStack
	a EMPTY
	b ATTRIBUTE_MODIFIER_FORMAT
	c LOGGER
	e popTime
	h emptyCacheFlag
	i frame
	j cachedBreakBlock
	k cachedBreakBlockResult
	l cachedPlaceBlock
	m cachedPlaceBlockResult
	B ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
	C ()I getPopTime
	E ()Z isEdible
	F ()Lnet/minecraft/server/SoundEffect; getDrinkingSound
	G ()Lnet/minecraft/server/SoundEffect; getEatingSound
	H ()Ljava/text/DecimalFormat; getAttributeDecimalFormat
	a (Ljava/lang/String;)Lnet/minecraft/server/NBTTagCompound; getOrCreateTagElement
	a (Ljava/lang/String;Lnet/minecraft/server/AttributeModifier;Lnet/minecraft/server/EnumItemSlot;)V addAttributeModifier
	a (Ljava/lang/String;Lnet/minecraft/server/NBTBase;)V addTagElement
	a (Ljava/util/List;Lnet/minecraft/server/NBTTagList;)V appendEnchantmentNames
	a (Lnet/minecraft/server/EntityHuman;Lbft;)Ljava/util/List; getTooltipLines
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EnumHand;)Z interactEnemy
	a (Lnet/minecraft/server/EntityItemFrame;)V setFramed
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityHuman;)V hurtEnemy
	a (Lnet/minecraft/server/EnumItemSlot;)Lcom/google/common/collect/Multimap; getAttributeModifiers
	a (Lnet/minecraft/server/IBlockData;)F getDestroySpeed
	a (Lnet/minecraft/server/IChatBaseComponent;)Lnet/minecraft/server/ItemStack; setHoverName
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/ItemStack; of
	a (Lnet/minecraft/server/ShapeDetectorBlock;Lnet/minecraft/server/ShapeDetectorBlock;)Z areSameBlocks
	a (Lnet/minecraft/server/TagRegistry;Lnet/minecraft/server/ShapeDetectorBlock;)Z hasAdventureModeBreakTagForBlock
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/Entity;IZ)V inventoryTick
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;I)V onCraftedBy
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/ItemStack; finishUsingItem
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;I)V releaseUsing
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;)V mineBlock
	add (I)V grow
	addEnchantment (Lnet/minecraft/server/Enchantment;I)V enchant
	b (Ljava/lang/String;)Lnet/minecraft/server/NBTTagCompound; getTagElement
	b (Lnet/minecraft/server/ItemStack;)Z sameItemStackIgnoreDurability
	b (Lnet/minecraft/server/TagRegistry;Lnet/minecraft/server/ShapeDetectorBlock;)Z hasAdventureModePlaceTagForBlock
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;I)V onUseTick
	c (Lnet/minecraft/server/ItemStack;)Z matches
	c (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z isSame
	canDestroySpecialBlock (Lnet/minecraft/server/IBlockData;)Z canDestroySpecial
	canEnchant ()Z isEnchantable
	checkEmpty ()V updateEmptyCacheFlag
	cloneAndSubtract (I)Lnet/minecraft/server/ItemStack; split
	cloneItemStack ()Lnet/minecraft/server/ItemStack; copy
	d (I)V setPopTime
	d (Ljava/lang/String;)Ljava/util/Collection; expandBlockState
	d (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z isSameIgnoreDurability
	damage (ILnet/minecraft/server/EntityLiving;Ljava/util/function/Consumer;)V hurtAndBreak
	doMaterialsMatch (Lnet/minecraft/server/ItemStack;)Z sameItem
	e ()Z isDamageableItem
	equals (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z tagMatches
	f ()Z isDamaged
	getDamage ()I getDamageValue
	getEnchantments ()Lnet/minecraft/server/NBTTagList; getEnchantmentTags
	getName ()Lnet/minecraft/server/IChatBaseComponent; getHoverName
	getRepairCost ()I getBaseRepairCost
	h ()I getMaxDamage
	hasEnchantments ()Z isEnchanted
	hasName ()Z hasCustomHoverName
	isDamaged (ILjava/util/Random;Lnet/minecraft/server/EntityPlayer;)Z hurt
	j ()Ljava/lang/String; getDescriptionId
	k ()I getUseDuration
	l ()Lnet/minecraft/server/EnumAnimation; getUseAnimation
	m ()Z useOnRelease
	placeItem (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
	removeTag (Ljava/lang/String;)V removeTagKey
	s ()V resetHoverName
	setDamage (I)V setDamageValue
	subtract (I)V shrink
	u ()Z hasFoil
	v ()Lnet/minecraft/server/EnumItemRarity; getRarity
	y ()Z isFramed
	z ()Lnet/minecraft/server/EntityItemFrame; getFrame
net/minecraft/server/ItemSuspiciousStew net/minecraft/world/item/SuspiciousStewItem
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/MobEffectList;I)V saveMobEffect
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;)Lnet/minecraft/server/ItemStack; finishUsingItem
net/minecraft/server/ItemSword net/minecraft/world/item/SwordItem
	a attackDamage
	b attackSpeed
	a (Lnet/minecraft/server/EnumItemSlot;)Lcom/google/common/collect/Multimap; getDefaultAttributeModifiers
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;)Z canAttackBlock
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)Z hurtEnemy
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/IBlockData;)F getDestroySpeed
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityLiving;)Z mineBlock
	b (Lnet/minecraft/server/IBlockData;)Z canDestroySpecial
	f ()F getDamage
net/minecraft/server/ItemTippedArrow net/minecraft/world/item/TippedArrowItem
	a (Lnet/minecraft/server/CreativeModeTab;Lnet/minecraft/server/NonNullList;)V fillItemCategory
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Ljava/util/List;Lbft;)V appendHoverText
	f (Lnet/minecraft/server/ItemStack;)Ljava/lang/String; getDescriptionId
	s ()Lnet/minecraft/server/ItemStack; getDefaultInstance
net/minecraft/server/ItemTool net/minecraft/world/item/DiggerItem
	a blocks
	b speed
	c attackDamage
	d attackSpeed
	a (Lnet/minecraft/server/EnumItemSlot;)Lcom/google/common/collect/Multimap; getDefaultAttributeModifiers
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)Z hurtEnemy
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/IBlockData;)F getDestroySpeed
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityLiving;)Z mineBlock
net/minecraft/server/ItemToolMaterial net/minecraft/world/item/TieredItem
	a tier
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z isValidRepairItem
	c ()I getEnchantmentValue
	g ()Lnet/minecraft/server/ToolMaterial; getTier
net/minecraft/server/ItemTrident net/minecraft/world/item/TridentItem
	a (Lnet/minecraft/server/EnumItemSlot;)Lcom/google/common/collect/Multimap; getDefaultAttributeModifiers
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;)Z canAttackBlock
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)Z hurtEnemy
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityLiving;I)V releaseUsing
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityLiving;)Z mineBlock
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
	c ()I getEnchantmentValue
	e_ (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/EnumAnimation; getUseAnimation
	f_ (Lnet/minecraft/server/ItemStack;)I getUseDuration
net/minecraft/server/ItemWaterLily net/minecraft/world/item/WaterLilyBlockItem
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
net/minecraft/server/ItemWorldMap net/minecraft/world/item/MapItem
	a (I)Ljava/lang/String; makeKey
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;)Lnet/minecraft/server/WorldMap; getSavedData
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;I)V scaleMap
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;IIIZZLnet/minecraft/server/DimensionManager;)Lnet/minecraft/server/WorldMap; createAndStoreSavedData
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Ljava/util/List;Lbft;)V appendHoverText
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/Entity;IZ)V inventoryTick
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;)Lnet/minecraft/server/Packet; getUpdatePacket
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/Entity;Lnet/minecraft/server/WorldMap;)V update
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getCorrectStateForFluidBlock
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; lockMap
	a ([Lnet/minecraft/server/BiomeBase;III)Z isLand
	applySepiaFilter (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/ItemStack;)V renderBiomePreviewMap
	b (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;)V onCraftedBy
	createFilledMapView (Lnet/minecraft/server/World;IIBZZ)Lnet/minecraft/server/ItemStack; create
	e (Lnet/minecraft/server/ItemStack;)I getMapId
	getSavedMap (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;)Lnet/minecraft/server/WorldMap; getOrCreateSavedData
	j (Lnet/minecraft/server/ItemStack;)I getColor
net/minecraft/server/ItemWorldMapBase net/minecraft/world/item/ComplexItem
	R_ ()Z isComplex
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;)Lnet/minecraft/server/Packet; getUpdatePacket
net/minecraft/server/ItemWrittenBook net/minecraft/world/item/WrittenBookItem
	a (Lnet/minecraft/server/ItemActionContext;)Lnet/minecraft/server/EnumInteractionResult; useOn
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/EntityHuman;)Z resolveBookComponents
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/World;Ljava/util/List;Lbft;)V appendHoverText
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/InteractionResultWrapper; use
	b (Lnet/minecraft/server/NBTTagCompound;)Z makeSureTagIsValid
	d_ (Lnet/minecraft/server/ItemStack;)Z isFoil
	e (Lnet/minecraft/server/ItemStack;)I getGeneration
	g (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/IChatBaseComponent; getName
	j (Lnet/minecraft/server/ItemStack;)I getPageCount
net/minecraft/server/Items net/minecraft/world/item/Items
	A SAND
	B RED_SAND
	C GRAVEL
	D GOLD_ORE
	E IRON_ORE
	F COAL_ORE
	G OAK_LOG
	GLOBE_BANNER_PATTERN GLOBE_BANNER_PATTER
	H SPRUCE_LOG
	I BIRCH_LOG
	J JUNGLE_LOG
	K ACACIA_LOG
	L DARK_OAK_LOG
	M STRIPPED_OAK_LOG
	N STRIPPED_SPRUCE_LOG
	O STRIPPED_BIRCH_LOG
	P STRIPPED_JUNGLE_LOG
	Q STRIPPED_ACACIA_LOG
	R STRIPPED_DARK_OAK_LOG
	S STRIPPED_OAK_WOOD
	T STRIPPED_SPRUCE_WOOD
	U STRIPPED_BIRCH_WOOD
	V STRIPPED_JUNGLE_WOOD
	W STRIPPED_ACACIA_WOOD
	X STRIPPED_DARK_OAK_WOOD
	Y OAK_WOOD
	Z SPRUCE_WOOD
	aA DEAD_BUSH
	aB SEAGRASS
	aC SEA_PICKLE
	aD PISTON
	aE WHITE_WOOL
	aF ORANGE_WOOL
	aG MAGENTA_WOOL
	aH LIGHT_BLUE_WOOL
	aI YELLOW_WOOL
	aJ LIME_WOOL
	aK PINK_WOOL
	aL GRAY_WOOL
	aM LIGHT_GRAY_WOOL
	aN CYAN_WOOL
	aO PURPLE_WOOL
	aP BLUE_WOOL
	aQ BROWN_WOOL
	aR GREEN_WOOL
	aS RED_WOOL
	aT BLACK_WOOL
	aU DANDELION
	aV POPPY
	aW BLUE_ORCHID
	aX ALLIUM
	aY AZURE_BLUET
	aZ RED_TULIP
	aa BIRCH_WOOD
	ab JUNGLE_WOOD
	ac ACACIA_WOOD
	ad DARK_OAK_WOOD
	ae OAK_LEAVES
	af SPRUCE_LEAVES
	ag BIRCH_LEAVES
	ah JUNGLE_LEAVES
	ai ACACIA_LEAVES
	aj DARK_OAK_LEAVES
	ak SPONGE
	al WET_SPONGE
	am GLASS
	an LAPIS_ORE
	ao LAPIS_BLOCK
	ap DISPENSER
	aq SANDSTONE
	ar CHISELED_SANDSTONE
	as CUT_SANDSTONE
	at NOTE_BLOCK
	au POWERED_RAIL
	av DETECTOR_RAIL
	aw STICKY_PISTON
	ax COBWEB
	ay GRASS
	az FERN
	b STONE
	bA QUARTZ_SLAB
	bB RED_SANDSTONE_SLAB
	bC CUT_RED_SANDSTONE_SLAB
	bD PURPUR_SLAB
	bE PRISMARINE_SLAB
	bF PRISMARINE_BRICK_SLAB
	bG DARK_PRISMARINE_SLAB
	bH SMOOTH_QUARTZ
	bI SMOOTH_RED_SANDSTONE
	bJ SMOOTH_SANDSTONE
	bK SMOOTH_STONE
	bL BRICKS
	bM TNT
	bN BOOKSHELF
	bO MOSSY_COBBLESTONE
	bP OBSIDIAN
	bQ TORCH
	bR END_ROD
	bS CHORUS_PLANT
	bT CHORUS_FLOWER
	bU PURPUR_BLOCK
	bV PURPUR_PILLAR
	bW PURPUR_STAIRS
	bX SPAWNER
	bY OAK_STAIRS
	bZ CHEST
	ba ORANGE_TULIP
	bb WHITE_TULIP
	bc PINK_TULIP
	bd OXEYE_DAISY
	be CORNFLOWER
	bf LILY_OF_THE_VALLEY
	bg WITHER_ROSE
	bh BROWN_MUSHROOM
	bi RED_MUSHROOM
	bj GOLD_BLOCK
	bk IRON_BLOCK
	bl OAK_SLAB
	bm SPRUCE_SLAB
	bn BIRCH_SLAB
	bo JUNGLE_SLAB
	bp ACACIA_SLAB
	bq DARK_OAK_SLAB
	br STONE_SLAB
	bs SMOOTH_STONE_SLAB
	bt SANDSTONE_SLAB
	bu CUT_STANDSTONE_SLAB
	bv PETRIFIED_OAK_SLAB
	bw COBBLESTONE_SLAB
	bx BRICK_SLAB
	by STONE_BRICK_SLAB
	bz NETHER_BRICK_SLAB
	c GRANITE
	cA SPRUCE_FENCE
	cB BIRCH_FENCE
	cC JUNGLE_FENCE
	cD ACACIA_FENCE
	cE DARK_OAK_FENCE
	cF PUMPKIN
	cG CARVED_PUMPKIN
	cH NETHERRACK
	cI SOUL_SAND
	cJ GLOWSTONE
	cK JACK_O_LANTERN
	cL OAK_TRAPDOOR
	cM SPRUCE_TRAPDOOR
	cN BIRCH_TRAPDOOR
	cO JUNGLE_TRAPDOOR
	cP ACACIA_TRAPDOOR
	cQ DARK_OAK_TRAPDOOR
	cR INFESTED_STONE
	cS INFESTED_COBBLESTONE
	cT INFESTED_STONE_BRICKS
	cU INFESTED_MOSSY_STONE_BRICKS
	cV INFESTED_CRACKED_STONE_BRICKS
	cW INFESTED_CHISELED_STONE_BRICKS
	cX STONE_BRICKS
	cY MOSSY_STONE_BRICKS
	cZ CRACKED_STONE_BRICKS
	ca DIAMOND_ORE
	cb DIAMOND_BLOCK
	cc CRAFTING_TABLE
	cd FARMLAND
	ce FURNACE
	cf LADDER
	cg RAIL
	ch COBBLESTONE_STAIRS
	ci LEVER
	cj STONE_PRESSURE_PLATE
	ck OAK_PRESSURE_PLATE
	cl SPRUCE_PRESSURE_PLATE
	cm BIRCH_PRESSURE_PLATE
	cn JUNGLE_PRESSURE_PLATE
	co ACACIA_PRESSURE_PLATE
	cp DARK_OAK_PRESSURE_PLATE
	cq REDSTONE_ORE
	cr REDSTONE_TORCH
	cs STONE_BUTTON
	ct SNOW
	cu ICE
	cv SNOW_BLOCK
	cw CACTUS
	cx CLAY
	cy JUKEBOX
	cz OAK_FENCE
	d POLISHED_GRANITE
	dA REDSTONE_LAMP
	dB SANDSTONE_STAIRS
	dC EMERALD_ORE
	dD ENDER_CHEST
	dE TRIPWIRE_HOOK
	dF EMERALD_BLOCK
	dG SPRUCE_STAIRS
	dH BIRCH_STAIRS
	dI JUNGLE_STAIRS
	dJ COMMAND_BLOCK
	dK BEACON
	dL COBBLESTONE_WALL
	dM MOSSY_COBBLESTONE_WALL
	dN BRICK_WALL
	dO PRISMARINE_WALL
	dP RED_SANDSTONE_WALL
	dQ MOSSY_STONE_BRICK_WALL
	dR GRANITE_WALL
	dS STONE_BRICK_WALL
	dT NETHER_BRICK_WALL
	dU ANDESITE_WALL
	dV RED_NETHER_BRICK_WALL
	dW SANDSTONE_WALL
	dX END_STONE_BRICK_WALL
	dY DIORITE_WALL
	dZ OAK_BUTTON
	da CHISELED_STONE_BRICKS
	db BROWN_MUSHROOM_BLOCK
	dc RED_MUSHROOM_BLOCK
	dd MUSHROOM_STEM
	de IRON_BARS
	df GLASS_PANE
	dg MELON
	dh VINE
	di OAK_FENCE_GATE
	dj SPRUCE_FENCE_GATE
	dk BIRCH_FENCE_GATE
	dl JUNGLE_FENCE_GATE
	dm ACACIA_FENCE_GATE
	dn DARK_OAK_FENCE_GATE
	do BRICK_STAIRS
	dp STONE_BRICK_STAIRS
	dq MYCELIUM
	dr LILY_PAD
	ds NETHER_BRICKS
	dt NETHER_BRICK_FENCE
	du NETHER_BRICK_STAIRS
	dv ENCHANTING_TABLE
	dw END_PORTAL_FRAME
	dx END_STONE
	dy END_STONE_BRICKS
	dz DRAGON_EGG
	e DIORITE
	eA LIME_TERRACOTTA
	eB PINK_TERRACOTTA
	eC GRAY_TERRACOTTA
	eD LIGHT_GRAY_TERRACOTTA
	eE CYAN_TERRACOTTA
	eF PURPLE_TERRACOTTA
	eG BLUE_TERRACOTTA
	eH BROWN_TERRACOTTA
	eI GREEN_TERRACOTTA
	eJ RED_TERRACOTTA
	eK BLACK_TERRACOTTA
	eL BARRIER
	eM IRON_TRAPDOOR
	eN HAY_BLOCK
	eO WHITE_CARPET
	eP ORANGE_CARPET
	eQ MAGENTA_CARPET
	eR LIGHT_BLUE_CARPET
	eS YELLOW_CARPET
	eT LIME_CARPET
	eU PINK_CARPET
	eV GRAY_CARPET
	eW LIGHT_GRAY_CARPET
	eX CYAN_CARPET
	eY PURPLE_CARPET
	eZ BLUE_CARPET
	ea SPRUCE_BUTTON
	eb BIRCH_BUTTON
	ec JUNGLE_BUTTON
	ed ACACIA_BUTTON
	ee DARK_OAK_BUTTON
	ef ANVIL
	eg CHIPPED_ANVIL
	eh DAMAGED_ANVIL
	ei TRAPPED_CHEST
	ej LIGHT_WEIGHTED_PRESSURE_PLATE
	ek HEAVY_WEIGHTED_PRESSURE_PLATE
	el DAYLIGHT_DETECTOR
	em REDSTONE_BLOCK
	en NETHER_QUARTZ_ORE
	eo HOPPER
	ep CHISELED_QUARTZ_BLOCK
	eq QUARTZ_BLOCK
	er QUARTZ_PILLAR
	es QUARTZ_STAIRS
	et ACTIVATOR_RAIL
	eu DROPPER
	ev WHITE_TERRACOTTA
	ew ORANGE_TERRACOTTA
	ex MAGENTA_TERRACOTTA
	ey LIGHT_BLUE_TERRACOTTA
	ez YELLOW_TERRACOTTA
	f POLISHED_DIORITE
	fA CYAN_STAINED_GLASS
	fB PURPLE_STAINED_GLASS
	fC BLUE_STAINED_GLASS
	fD BROWN_STAINED_GLASS
	fE GREEN_STAINED_GLASS
	fF RED_STAINED_GLASS
	fG BLACK_STAINED_GLASS
	fH WHITE_STAINED_GLASS_PANE
	fI ORANGE_STAINED_GLASS_PANE
	fJ MAGENTA_STAINED_GLASS_PANE
	fK LIGHT_BLUE_STAINED_GLASS_PANE
	fL YELLOW_STAINED_GLASS_PANE
	fM LIME_STAINED_GLASS_PANE
	fN PINK_STAINED_GLASS_PANE
	fO GRAY_STAINED_GLASS_PANE
	fP LIGHT_GRAY_STAINED_GLASS_PANE
	fQ CYAN_STAINED_GLASS_PANE
	fR PURPLE_STAINED_GLASS_PANE
	fS BLUE_STAINED_GLASS_PANE
	fT BROWN_STAINED_GLASS_PANE
	fU GREEN_STAINED_GLASS_PANE
	fV RED_STAINED_GLASS_PANE
	fW BLACK_STAINED_GLASS_PANE
	fX PRISMARINE
	fY PRISMARINE_BRICKS
	fZ DARK_PRISMARINE
	fa BROWN_CARPET
	fb GREEN_CARPET
	fc RED_CARPET
	fd BLACK_CARPET
	fe TERRACOTTA
	ff COAL_BLOCK
	fg PACKED_ICE
	fh ACACIA_STAIRS
	fi DARK_OAK_STAIRS
	fj SLIME_BLOCK
	fk GRASS_PATH
	fl SUNFLOWER
	fm LILAC
	fn ROSE_BUSH
	fo PEONY
	fp TALL_GRASS
	fq LARGE_FERN
	fr WHITE_STAINED_GLASS
	fs ORANGE_STAINED_GLASS
	ft MAGENTA_STAINED_GLASS
	fu LIGHT_BLUE_STAINED_GLASS
	fv YELLOW_STAINED_GLASS
	fw LIME_STAINED_GLASS
	fx PINK_STAINED_GLASS
	fy GRAY_STAINED_GLASS
	fz LIGHT_GRAY_STAINED_GLASS
	g ANDESITE
	gA CYAN_SHULKER_BOX
	gB PURPLE_SHULKER_BOX
	gC BLUE_SHULKER_BOX
	gD BROWN_SHULKER_BOX
	gE GREEN_SHULKER_BOX
	gF RED_SHULKER_BOX
	gG BLACK_SHULKER_BOX
	gH WHITE_GLAZED_TERRACOTTA
	gI ORANGE_GLAZED_TERRACOTTA
	gJ MAGENTA_GLAZED_TERRACOTTA
	gK LIGHT_BLUE_GLAZED_TERRACOTTA
	gL YELLOW_GLAZED_TERRACOTTA
	gM LIME_GLAZED_TERRACOTTA
	gN PINK_GLAZED_TERRACOTTA
	gO GRAY_GLAZED_TERRACOTTA
	gP LIGHT_GRAY_GLAZED_TERRACOTTA
	gQ CYAN_GLAZED_TERRACOTTA
	gR PURPLE_GLAZED_TERRACOTTA
	gS BLUE_GLAZED_TERRACOTTA
	gT BROWN_GLAZED_TERRACOTTA
	gU GREEN_GLAZED_TERRACOTTA
	gV RED_GLAZED_TERRACOTTA
	gW BLACK_GLAZED_TERRACOTTA
	gX WHITE_CONCRETE
	gY ORANGE_CONCRETE
	gZ MAGENTA_CONCRETE
	ga PRISMARINE_STAIRS
	gb PRISMARINE_BRICK_STAIRS
	gc DARK_PRISMARINE_STAIRS
	gd SEA_LANTERN
	ge RED_SANDSTONE
	gf CHISELED_RED_SANDSTONE
	gg CUT_RED_SANDSTONE
	gh RED_SANDSTONE_STAIRS
	gi REPEATING_COMMAND_BLOCK
	gj CHAIN_COMMAND_BLOCK
	gk MAGMA_BLOCK
	gl NETHER_WART_BLOCK
	gm RED_NETHER_BRICKS
	gn BONE_BLOCK
	go STRUCTURE_VOID
	gp OBSERVER
	gq SHULKER_BOX
	gr WHITE_SHULKER_BOX
	gs ORANGE_SHULKER_BOX
	gt MAGENTA_SHULKER_BOX
	gu LIGHT_BLUE_SHULKER_BOX
	gv YELLOW_SHULKER_BOX
	gw LIME_SHULKER_BOX
	gx PINK_SHULKER_BOX
	gy GRAY_SHULKER_BOX
	gz LIGHT_GRAY_SHULKER_BOX
	h POLISHED_ANDESITE
	hA GREEN_CONCRETE_POWDER
	hB RED_CONCRETE_POWDER
	hC BLACK_CONCRETE_POWDER
	hD TURTLE_EGG
	hE DEAD_TUBE_CORAL_BLOCK
	hF DEAD_BRAIN_CORAL_BLOCK
	hG DEAD_BUBBLE_CORAL_BLOCK
	hH DEAD_FIRE_CORAL_BLOCK
	hI DEAD_HORN_CORAL_BLOCK
	hJ TUBE_CORAL_BLOCK
	hK BRAIN_CORAL_BLOCK
	hL BUBBLE_CORAL_BLOCK
	hM FIRE_CORAL_BLOCK
	hN HORN_CORAL_BLOCK
	hO TUBE_CORAL
	hP BRAIN_CORAL
	hQ BUBBLE_CORAL
	hR FIRE_CORAL
	hS HORN_CORAL
	hT DEAD_BRAIN_CORAL
	hU DEAD_BUBBLE_CORAL
	hV DEAD_FIRE_CORAL
	hW DEAD_HORN_CORAL
	hX DEAD_TUBE_CORAL
	hY TUBE_CORAL_FAN
	hZ BRAIN_CORAL_FAN
	ha LIGHT_BLUE_CONCRETE
	hb YELLOW_CONCRETE
	hc LIME_CONCRETE
	hd PINK_CONCRETE
	he GRAY_CONCRETE
	hf LIGHT_GRAY_CONCRETE
	hg CYAN_CONCRETE
	hh PURPLE_CONCRETE
	hi BLUE_CONCRETE
	hj BROWN_CONCRETE
	hk GREEN_CONCRETE
	hl RED_CONCRETE
	hm BLACK_CONCRETE
	hn WHITE_CONCRETE_POWDER
	ho ORANGE_CONCRETE_POWDER
	hp MAGENTA_CONCRETE_POWDER
	hq LIGHT_BLUE_CONCRETE_POWDER
	hr YELLOW_CONCRETE_POWDER
	hs LIME_CONCRETE_POWDER
	ht PINK_CONCRETE_POWDER
	hu GRAY_CONCRETE_POWDER
	hv LIGHT_GRAY_CONCRETE_POWDER
	hw CYAN_CONCRETE_POWDER
	hx PURPLE_CONCRETE_POWDER
	hy BLUE_CONCRETE_POWDER
	hz BROWN_CONCRETE_POWDER
	i GRASS_BLOCK
	iA MOSSY_STONE_BRICK_SLAB
	iB POLISHED_DIORITE_SLAB
	iC MOSSY_COBBLESTONE_SLAB
	iD END_STONE_BRICK_SLAB
	iE SMOOTH_SANDSTONE_SLAB
	iF SMOOTH_QUARTZ_SLAB
	iG GRANITE_SLAB
	iH ANDESITE_SLAB
	iI RED_NETHER_BRICK_SLAB
	iJ POLISHED_ANDESITE_SLAB
	iK DIORITE_SLAB
	iL SCAFFOLDING
	iM IRON_DOOR
	iN OAK_DOOR
	iO SPRUCE_DOOR
	iP BIRCH_DOOR
	iQ JUNGLE_DOOR
	iR ACACIA_DOOR
	iS DARK_OAK_DOOR
	iT REPEATER
	iU COMPARATOR
	iV STRUCTURE_BLOCK
	iW JIGSAW
	iX COMPOSTER
	ia BUBBLE_CORAL_FAN
	ib FIRE_CORAL_FAN
	ic HORN_CORAL_FAN
	id DEAD_TUBE_CORAL_FAN
	ie DEAD_BRAIN_CORAL_FAN
	if DEAD_BUBBLE_CORAL_FAN
	ig DEAD_FIRE_CORAL_FAN
	ih DEAD_HORN_CORAL_FAN
	ii BLUE_ICE
	ij CONDUIT
	ik POLISHED_GRANITE_STAIRS
	il SMOOTH_RED_SANDSTONE_STAIRS
	im MOSSY_STONE_BRICK_STAIRS
	in POLISHED_DIORITE_STAIRS
	io MOSSY_COBBLESTONE_STAIRS
	ip END_STONE_BRICK_STAIRS
	iq STONE_STAIRS
	ir SMOOTH_SANDSTONE_STAIRS
	is SMOOTH_QUARTZ_STAIRS
	it GRANITE_STAIRS
	iu ANDESITE_STAIRS
	iv RED_NETHER_BRICK_STAIRS
	iw POLISHED_ANDESITE_STAIRS
	ix DIORITE_STAIRS
	iy POLISHED_GRANITE_SLAB
	iz SMOOTH_RED_SANDSTONE_SLAB
	j DIRT
	k COARSE_DIRT
	kN SUGAR_CANE
	kO KELP
	kP DRIED_KELP_BLOCK
	kQ BAMBOO
	l PODZOL
	lD CAKE
	m COBBLESTONE
	mr BREWING_STAND
	ms CAULDRON
	mw BEE_SPAWN_EGG
	n OAK_PLANKS
	nI FLOWER_POT
	o SPRUCE_PLANKS
	p BIRCH_PLANKS
	pB LOOM
	pH BARREL
	pI SMOKER
	pJ BLAST_FURNACE
	pK CARTOGRAPHY_TABLE
	pL FLETCHING_TABLE
	pM GRINDSTONE
	pN LECTERN
	pO SMITHING_TABLE
	pP STONECUTTER
	pQ BELL
	pR LANTERN
	pT CAMPFIRE
	pU HONEYCOMB
	pV BEE_NEST
	pW BEEHIVE
	pX HONEY_BOTTLE
	pY HONEY_BLOCK
	pZ HONEYCOMB_BLOCK
	q JUNGLE_PLANKS
	r ACACIA_PLANKS
	s DARK_OAK_PLANKS
	t OAK_SAPLING
	u SPRUCE_SAPLING
	v BIRCH_SAPLING
	w JUNGLE_SAPLING
	x ACACIA_SAPLING
	y DARK_OAK_SAPLING
	z BEDROCK
	a (Ljava/lang/String;Lnet/minecraft/server/Item;)Lnet/minecraft/server/Item; registerItem
	a (Lnet/minecraft/server/Block;)Lnet/minecraft/server/Item; registerBlock
	a (Lnet/minecraft/server/Block;Lnet/minecraft/server/CreativeModeTab;)Lnet/minecraft/server/Item; registerBlock
	a (Lnet/minecraft/server/Block;Lnet/minecraft/server/Item;)Lnet/minecraft/server/Item; registerBlock
	a (Lnet/minecraft/server/ItemBlock;)Lnet/minecraft/server/Item; registerBlock
	a (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/Item;)Lnet/minecraft/server/Item; registerItem
net/minecraft/server/JsonList net/minecraft/server/players/StoredUserList
	a LOGGER
	b gson
	c file
	d map
	e enabled
	f USERLIST_ENTRY_TYPE
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/JsonListEntry; createEntry
	a (Ljava/lang/Object;)Ljava/lang/String; getKeyForUser
	a (Z)V setEnabled
	b (Lnet/minecraft/server/JsonListEntry;)V remove
	c ()Ljava/io/File; getFile
	d (Ljava/lang/Object;)Z contains
	e ()Ljava/util/Collection; getEntries
	getEntries ()[Ljava/lang/String; getUserList
	h ()V removeExpired
net/minecraft/server/JsonList$JsonListEntrySerializer net/minecraft/server/players/StoredUserList$Serializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/JsonListEntry; deserialize
	a (Lnet/minecraft/server/JsonListEntry;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
net/minecraft/server/JsonListEntry net/minecraft/server/players/StoredUserEntry
	a user
	a (Lcom/google/gson/JsonObject;)V serialize
	getKey ()Ljava/lang/Object; getUser
net/minecraft/server/LayerIsland net/minecraft/world/level/newbiome/layer/IslandLayer
	b $VALUES
	a (Lnet/minecraft/server/WorldGenContext;II)I applyPixel
net/minecraft/server/LazyInitVar net/minecraft/util/LazyLoadedValue
	a factory
	b value
	a ()Ljava/lang/Object; get
net/minecraft/server/LegacyPingHandler net/minecraft/server/network/LegacyQueryHandler
	a LOGGER
	b serverConnectionListener
	a (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;)V sendFlushAndClose
	a (Ljava/lang/String;)Lio/netty/buffer/ByteBuf; createReply
net/minecraft/server/LightEngine net/minecraft/world/level/lighting/LevelLightEngine
	a blockEngine
	b skyEngine
	a ()Z hasLightWork
	a (IZZ)I runUpdates
	a (Lnet/minecraft/server/BlockPosition;)V checkBlock
	a (Lnet/minecraft/server/BlockPosition;I)V onBlockEmissionIncrease
	a (Lnet/minecraft/server/ChunkCoordIntPair;Z)V enableLightSources
	a (Lnet/minecraft/server/EnumSkyBlock;)Lnet/minecraft/server/LightEngineLayerEventListener; getLayerListener
	a (Lnet/minecraft/server/EnumSkyBlock;Lnet/minecraft/server/SectionPosition;)Ljava/lang/String; getDebugData
	a (Lnet/minecraft/server/EnumSkyBlock;Lnet/minecraft/server/SectionPosition;Lnet/minecraft/server/NibbleArray;)V queueSectionData
	a (Lnet/minecraft/server/SectionPosition;Z)V updateSectionStatus
	b (Lnet/minecraft/server/BlockPosition;I)I getRawBrightness
	b (Lnet/minecraft/server/ChunkCoordIntPair;Z)V retainData
net/minecraft/server/LightEngineBlock net/minecraft/world/level/lighting/BlockLightEngine
	e DIRECTIONS
	f pos
	a (JIZ)V checkNeighborsAfterUpdate
	a (JJI)I getComputedLevel
	a (Lnet/minecraft/server/BlockPosition;I)V onBlockEmissionIncrease
	b (JJI)I computeLevelFromNeighbor
	d (J)I getLightEmission
net/minecraft/server/LightEngineGraph net/minecraft/world/level/lighting/DynamicGraphMinFixedPoint
	a levelCount
	b queues
	c computedLevels
	d firstQueuedLevel
	e hasWork
	a (I)V checkFirstQueuedLevel
	a (II)I getKey
	a (J)Z isSource
	a (JI)V setLevel
	a (JII)V enqueue
	a (JIIZ)V dequeue
	a (JIZ)V checkNeighborsAfterUpdate
	a (JJI)I getComputedLevel
	a (JJIIIZ)V checkEdge
	a (JJIZ)V checkEdge
	a (Ljava/util/function/LongPredicate;)V removeIf
	b ()Z hasWork
	b (I)I runUpdates
	b (JJI)I computeLevelFromNeighbor
	b (JJIZ)V checkNeighbor
	c ()I getQueueSize
	c (J)I getLevel
	e (J)V removeFromQueue
	f (J)V checkNode
net/minecraft/server/LightEngineGraphSection net/minecraft/server/level/SectionTracker
	a (J)Z isSource
	a (JIZ)V checkNeighborsAfterUpdate
	a (JJI)I getComputedLevel
	b (J)I getLevelFromSource
	b (JIZ)V update
	b (JJI)I computeLevelFromNeighbor
net/minecraft/server/LightEngineLayer net/minecraft/world/level/lighting/LayerLightEngine
	a chunkSource
	b layer
	c storage
	d pos
	e DIRECTIONS
	f runningLightUpdates
	g lastChunkPos
	h lastChunk
	a ()Z hasLightWork
	a (II)Lnet/minecraft/server/IBlockAccess; getChunk
	a (IZZ)I runUpdates
	a (J)Z isSource
	a (JI)V setLevel
	a (JJI)I getComputedLevel
	a (JLnet/minecraft/server/NibbleArray;)V queueSectionData
	a (JLorg/apache/commons/lang3/mutable/MutableInt;)Lnet/minecraft/server/IBlockData; getStateAndOpacity
	a (Lnet/minecraft/server/BlockPosition;)V checkBlock
	a (Lnet/minecraft/server/BlockPosition;I)V onBlockEmissionIncrease
	a (Lnet/minecraft/server/ChunkCoordIntPair;Z)V enableLightSources
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;I)I getLightBlockInto
	a (Lnet/minecraft/server/IBlockData;JLnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/VoxelShape; getShape
	a (Lnet/minecraft/server/NibbleArray;J)I getLevel
	a (Lnet/minecraft/server/SectionPosition;)Lnet/minecraft/server/NibbleArray; getDataLayerData
	a (Lnet/minecraft/server/SectionPosition;Z)V updateSectionStatus
	b (J)Ljava/lang/String; getDebugData
	b (JJI)I computeLevelFromNeighbor
	b (Lnet/minecraft/server/BlockPosition;)I getLightValue
	b (Lnet/minecraft/server/ChunkCoordIntPair;Z)V retainData
	c (J)I getLevel
	d ()V clearCache
	f (J)V checkNode
net/minecraft/server/LightEngineLayerEventListener net/minecraft/world/level/lighting/LayerLightEventListener
	a (Lnet/minecraft/server/SectionPosition;)Lnet/minecraft/server/NibbleArray; getDataLayerData
	b (Lnet/minecraft/server/BlockPosition;)I getLightValue
net/minecraft/server/LightEngineLayerEventListener$Void net/minecraft/world/level/lighting/LayerLightEventListener$DummyLightLayerEventListener
	b $VALUES
	a ()Z hasLightWork
	a (IZZ)I runUpdates
	a (Lnet/minecraft/server/BlockPosition;)V checkBlock
	a (Lnet/minecraft/server/BlockPosition;I)V onBlockEmissionIncrease
	a (Lnet/minecraft/server/ChunkCoordIntPair;Z)V enableLightSources
	a (Lnet/minecraft/server/SectionPosition;)Lnet/minecraft/server/NibbleArray; getDataLayerData
	a (Lnet/minecraft/server/SectionPosition;Z)V updateSectionStatus
	b (Lnet/minecraft/server/BlockPosition;)I getLightValue
net/minecraft/server/LightEngineSky net/minecraft/world/level/lighting/SkyLightEngine
	e DIRECTIONS
	f HORIZONTALS
	a (JIZ)V checkNeighborsAfterUpdate
	a (JJI)I getComputedLevel
	b (J)Ljava/lang/String; getDebugData
	b (JJI)I computeLevelFromNeighbor
	f (J)V checkNode
net/minecraft/server/LightEngineStorage net/minecraft/world/level/lighting/LayerLightSectionStorage
	a EMPTY_DATA
	b dataSectionSet
	c toMarkNoData
	d toMarkData
	e visibleSectionData
	f updatingSectionData
	g changedSections
	h sectionsAffectedByLightUpdates
	i queuedSections
	j hasToRemove
	k DIRECTIONS
	l layer
	m chunkSource
	n columnsToRetainQueuedDataFor
	o toRemove
	a ()Z hasInconsistencies
	a (JI)V setLevel
	a (JLnet/minecraft/server/NibbleArray;)V queueSectionData
	a (JZ)Lnet/minecraft/server/NibbleArray; getDataLayer
	a (Lnet/minecraft/server/LightEngineLayer;J)V clearQueuedSectionBlocks
	a (Lnet/minecraft/server/LightEngineLayer;ZZ)V markNewInconsistencies
	a (Lnet/minecraft/server/LightEngineStorageArray;J)Lnet/minecraft/server/NibbleArray; getDataLayer
	b (J)I getLevelFromSource
	b (JI)V setStoredLevel
	b (JZ)V enableLightSources
	c (J)I getLevel
	c (JZ)V retainData
	d ()V runAllUpdates
	d (J)I getLightValue
	d (JZ)V updateSectionStatus
	e ()V swapSectionMap
	g (J)Z storingLightForSection
	h (J)Lnet/minecraft/server/NibbleArray; getDataLayerData
	i (J)I getStoredLevel
	j (J)Lnet/minecraft/server/NibbleArray; createDataLayer
	k (J)V onNodeAdded
	l (J)V onNodeRemoved
net/minecraft/server/LightEngineStorageArray net/minecraft/world/level/lighting/DataLayerStorageMap
	a map
	b lastSectionKeys
	c lastSections
	d cacheEnabled
	a (J)V copyDataLayer
	a (JLnet/minecraft/server/NibbleArray;)V setLayer
	b ()Lnet/minecraft/server/LightEngineStorageArray; copy
	b (J)Z hasLayer
	c ()V clearCache
	c (J)Lnet/minecraft/server/NibbleArray; getLayer
	d ()V disableCache
	d (J)Lnet/minecraft/server/NibbleArray; removeLayer
net/minecraft/server/LightEngineStorageBlock net/minecraft/world/level/lighting/BlockLightSectionStorage
	d (J)I getLightValue
net/minecraft/server/LightEngineStorageSky net/minecraft/world/level/lighting/SkyLightSectionStorage
	k HORIZONTALS
	l sectionsWithSources
	m sectionsToAddSourcesTo
	n sectionsToRemoveSourcesFrom
	o columnsWithSkySources
	p hasSourceInconsistencies
	a ()Z hasInconsistencies
	a (I)Z hasSectionsBelow
	a (Lnet/minecraft/server/LightEngineLayer;ZZ)V markNewInconsistencies
	b (JZ)V enableLightSources
	d (J)I getLightValue
	f ()V recheckInconsistencyFlag
	j (J)Lnet/minecraft/server/NibbleArray; createDataLayer
	k (J)V onNodeAdded
	l (J)V onNodeRemoved
	m (J)Z hasLightSource
	n (J)Z isAboveData
	o (J)Z lightOnInSection
	p (J)V queueRemoveSource
	q (J)V queueAddSource
net/minecraft/server/LightEngineThreaded net/minecraft/server/level/ThreadedLevelLightEngine
	a LOGGER
	b taskMailbox
	c lightTasks
	d chunkMap
	e sorterMailbox
	f taskPerBatch
	g scheduled
	a (I)V setTaskPerBatch
	a (IILjava/util/function/IntSupplier;Lnet/minecraft/server/LightEngineThreaded$Update;Ljava/lang/Runnable;)V addTask
	a (IILnet/minecraft/server/LightEngineThreaded$Update;Ljava/lang/Runnable;)V addTask
	a (IZZ)I runUpdates
	a (Lnet/minecraft/server/BlockPosition;)V checkBlock
	a (Lnet/minecraft/server/BlockPosition;I)V onBlockEmissionIncrease
	a (Lnet/minecraft/server/ChunkCoordIntPair;)V updateChunkStatus
	a (Lnet/minecraft/server/ChunkCoordIntPair;Z)V enableLightSources
	a (Lnet/minecraft/server/EnumSkyBlock;Lnet/minecraft/server/SectionPosition;Lnet/minecraft/server/NibbleArray;)V queueSectionData
	a (Lnet/minecraft/server/IChunkAccess;Z)Ljava/util/concurrent/CompletableFuture; lightChunk
	a (Lnet/minecraft/server/SectionPosition;Z)V updateSectionStatus
	b ()V runUpdate
	b (Lnet/minecraft/server/ChunkCoordIntPair;Z)V retainData
	queueUpdate ()V tryScheduleUpdate
net/minecraft/server/LightEngineThreaded$Update net/minecraft/server/level/ThreadedLevelLightEngine$TaskType
	c $VALUES
net/minecraft/server/LinearCongruentialGenerator net/minecraft/util/LinearCongruentialGenerator
	a (JJ)J next
net/minecraft/server/LocaleLanguage net/minecraft/locale/Language
	a LOGGER
	b UNSUPPORTED_FORMAT_PATTERN
	c SINGLETON
	d storage
	e lastUpdateTime
	a ()Lnet/minecraft/server/LocaleLanguage; getInstance
	a (Ljava/lang/String;)Ljava/lang/String; getElement
	a (Ljava/util/Map;)V forceData
	b ()J getLastUpdateTime
	b (Ljava/lang/String;)Z exists
	c (Ljava/lang/String;)Ljava/lang/String; getProperty
net/minecraft/server/LoginListener net/minecraft/server/network/ServerLoginPacketListenerImpl
	b UNIQUE_THREAD_ID
	c LOGGER
	e nonce
	g state
	h tick
	i gameProfile
	j serverId
	l delayedAcceptPlayer
	loginKey secretKey
	networkManager connection
	random RANDOM
	a ()Lnet/minecraft/server/NetworkManager; getConnection
	a (Lcom/mojang/authlib/GameProfile;)Lcom/mojang/authlib/GameProfile; createFakeProfile
	a (Lnet/minecraft/server/IChatBaseComponent;)V onDisconnect
	a (Lnet/minecraft/server/PacketLoginInCustomPayload;)V handleCustomQueryPacket
	a (Lnet/minecraft/server/PacketLoginInEncryptionBegin;)V handleKey
	a (Lnet/minecraft/server/PacketLoginInStart;)V handleHello
	c ()V handleAcceptedLogin
	d ()Ljava/lang/String; getUserName
net/minecraft/server/LoginListener$EnumProtocolState net/minecraft/server/network/ServerLoginPacketListenerImpl$State
	h $VALUES
net/minecraft/server/LootCollector net/minecraft/world/level/storage/loot/ValidationContext
	a problems
	b context
	c params
	d conditionResolver
	e visitedConditions
	f tableResolver
	g visitedTables
	h contextCache
	a ()Lcom/google/common/collect/Multimap; getProblems
	a (Ljava/lang/String;)V reportProblem
	a (Ljava/lang/String;Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/LootCollector; enterTable
	a (Lnet/minecraft/server/LootContextParameterSet;)Lnet/minecraft/server/LootCollector; setParams
	a (Lnet/minecraft/server/LootItemUser;)V validateUser
	a (Lnet/minecraft/server/MinecraftKey;)Z hasVisitedTable
	b ()Ljava/lang/String; getContext
	b (Ljava/lang/String;)Lnet/minecraft/server/LootCollector; forChild
	b (Ljava/lang/String;Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/LootCollector; enterCondition
	b (Lnet/minecraft/server/MinecraftKey;)Z hasVisitedCondition
	c (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/LootTable; resolveLootTable
	d (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/LootItemCondition; resolveCondition
net/minecraft/server/LootContextParameter net/minecraft/world/level/storage/loot/parameters/LootContextParam
	a name
	a ()Lnet/minecraft/server/MinecraftKey; getName
net/minecraft/server/LootContextParameterSet net/minecraft/world/level/storage/loot/parameters/LootContextParamSet
	a required
	b all
	a ()Ljava/util/Set; getRequired
	a (Lnet/minecraft/server/LootCollector;Lnet/minecraft/server/LootItemUser;)V validateUser
	a (Lnet/minecraft/server/LootContextParameter;)Z isAllowed
	b ()Ljava/util/Set; getAllowed
	c ()Lctv$a; builder
net/minecraft/server/LootContextParameterSets net/minecraft/world/level/storage/loot/parameters/LootContextParamSets
	GENERIC ALL_PARAMS
	k REGISTRY
	a (Ljava/lang/String;Ljava/util/function/Consumer;)Lnet/minecraft/server/LootContextParameterSet; register
	a (Lnet/minecraft/server/LootContextParameterSet;)Lnet/minecraft/server/MinecraftKey; getKey
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/LootContextParameterSet; get
net/minecraft/server/LootContextParameters net/minecraft/world/level/storage/loot/parameters/LootContextParams
	POSITION BLOCK_POS
	a (Ljava/lang/String;)Lnet/minecraft/server/LootContextParameter; create
net/minecraft/server/LootEnchantFunction net/minecraft/world/level/storage/loot/functions/LootingEnchantFunction
	a value
	c limit
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	a (Lnet/minecraft/server/LootValueBounds;)Lcth$a; lootingMultiplier
	b ()Z hasLimit
net/minecraft/server/LootEnchantLevel net/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction
	a levels
	c treasure
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	a (Lnet/minecraft/server/LootValue;)Lcsz$a; enchantWithLevels
net/minecraft/server/LootEntries net/minecraft/world/level/storage/loot/entries/LootPoolEntries
	a ID_TO_SERIALIZER
	b CLASS_TO_SERIALIZER
	a (Lcsn$b;)V register
net/minecraft/server/LootEntry net/minecraft/world/level/storage/loot/entries/LootPoolEntry
	a (F)I getWeight
	a (Ljava/util/function/Consumer;Lnet/minecraft/server/LootTableInfo;)V createItemStack
net/minecraft/server/LootEntryAbstract net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer
	c compositeCondition
	d conditions
	a (Lnet/minecraft/server/LootCollector;)V validate
	a (Lnet/minecraft/server/LootTableInfo;)Z canRun
net/minecraft/server/LootEntryAlternatives net/minecraft/world/level/storage/loot/entries/AlternativesEntry
	a (Lnet/minecraft/server/LootCollector;)V validate
	a ([Lcsn$a;)Lcse$a; alternatives
	a ([Lnet/minecraft/server/LootEntryChildren;)Lnet/minecraft/server/LootEntryChildren; compose
net/minecraft/server/LootEntryChildren net/minecraft/world/level/storage/loot/entries/ComposableEntryContainer
	a ALWAYS_FALSE
	b ALWAYS_TRUE
	a (Lnet/minecraft/server/LootEntryChildren;)Lnet/minecraft/server/LootEntryChildren; and
	b (Lnet/minecraft/server/LootEntryChildren;)Lnet/minecraft/server/LootEntryChildren; or
net/minecraft/server/LootEntryChildrenAbstract net/minecraft/world/level/storage/loot/entries/CompositeEntryBase
	c children
	e composedChildren
	a (Lnet/minecraft/server/LootCollector;)V validate
	a (Lnet/minecraft/server/MinecraftKey;Ljava/lang/Class;Lcsg$a;)Lcsg$b; createSerializer
	a ([Lnet/minecraft/server/LootEntryChildren;)Lnet/minecraft/server/LootEntryChildren; compose
net/minecraft/server/LootEntryGroup net/minecraft/world/level/storage/loot/entries/EntryGroup
	a ([Lcsn$a;)Lcsj$a; list
	a ([Lnet/minecraft/server/LootEntryChildren;)Lnet/minecraft/server/LootEntryChildren; compose
net/minecraft/server/LootEntrySequence net/minecraft/world/level/storage/loot/entries/SequentialEntry
	a ([Lcsn$a;)Lcsq$a; sequential
	a ([Lnet/minecraft/server/LootEntryChildren;)Lnet/minecraft/server/LootEntryChildren; compose
net/minecraft/server/LootIntegerLimit net/minecraft/world/level/storage/loot/IntLimiter
	a min
	b max
	c op
	a (I)Lnet/minecraft/server/LootIntegerLimit; lowerBound
	a (II)Lnet/minecraft/server/LootIntegerLimit; clamp
	b (I)Lnet/minecraft/server/LootIntegerLimit; upperBound
net/minecraft/server/LootItem net/minecraft/world/level/storage/loot/entries/LootItem
	c item
	a (Ljava/util/function/Consumer;Lnet/minecraft/server/LootTableInfo;)V createItemStack
	a (Lnet/minecraft/server/IMaterial;)Lcso$a; lootTableItem
net/minecraft/server/LootItemCondition net/minecraft/world/level/storage/loot/predicates/LootItemCondition
net/minecraft/server/LootItemConditionAlternative net/minecraft/world/level/storage/loot/predicates/AlternativeLootItemCondition
	a terms
	b composedPredicate
	a (Lnet/minecraft/server/LootCollector;)V validate
	a (Lnet/minecraft/server/LootTableInfo;)Z test
	a ([Lcuj$a;)Lctz$a; alternative
net/minecraft/server/LootItemConditionBlockStateProperty net/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition
	a block
	b properties
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/server/Block;)Lcui$a; hasBlockStateProperties
	a (Lnet/minecraft/server/LootTableInfo;)Z test
net/minecraft/server/LootItemConditionDamageSourceProperties net/minecraft/world/level/storage/loot/predicates/DamageSourceCondition
	a predicate
	a ()Ljava/util/Set; getReferencedContextParams
	a (Las$a;)Lcuj$a; hasDamageSource
	a (Lnet/minecraft/server/LootTableInfo;)Z test
net/minecraft/server/LootItemConditionEntityProperty net/minecraft/world/level/storage/loot/predicates/LootItemEntityPropertyCondition
	a predicate
	b entityTarget
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/server/LootTableInfo$EntityTarget;)Lcuj$a; entityPresent
	a (Lnet/minecraft/server/LootTableInfo$EntityTarget;Lbb$a;)Lcuj$a; hasProperties
	a (Lnet/minecraft/server/LootTableInfo;)Z test
net/minecraft/server/LootItemConditionEntityScore net/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition
	a scores
	b entityTarget
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/Scoreboard;Ljava/lang/String;Lnet/minecraft/server/LootValueBounds;)Z hasScore
	a (Lnet/minecraft/server/LootTableInfo$EntityTarget;)Lcue$a; hasScores
	a (Lnet/minecraft/server/LootTableInfo;)Z test
net/minecraft/server/LootItemConditionInverted net/minecraft/world/level/storage/loot/predicates/InvertedLootItemCondition
	a term
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lcuj$a;)Lcuj$a; invert
	a (Lnet/minecraft/server/LootCollector;)V validate
	a (Lnet/minecraft/server/LootTableInfo;)Z test
net/minecraft/server/LootItemConditionKilledByPlayer net/minecraft/world/level/storage/loot/predicates/LootItemKilledByPlayerCondition
	a INSTANCE
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/server/LootTableInfo;)Z test
	b ()Lcuj$a; killedByPlayer
net/minecraft/server/LootItemConditionLocationCheck net/minecraft/world/level/storage/loot/predicates/LocationCheck
	a predicate
	b offset
	a (Lbp$a;)Lcuj$a; checkLocation
	a (Lbp$a;Lnet/minecraft/server/BlockPosition;)Lcuj$a; checkLocation
	a (Lnet/minecraft/server/LootTableInfo;)Z test
net/minecraft/server/LootItemConditionMatchTool net/minecraft/world/level/storage/loot/predicates/MatchTool
	a predicate
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lbj$a;)Lcuj$a; toolMatches
	a (Lnet/minecraft/server/LootTableInfo;)Z test
net/minecraft/server/LootItemConditionRandomChance net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceCondition
	a probability
	a (F)Lcuj$a; randomChance
	a (Lnet/minecraft/server/LootTableInfo;)Z test
net/minecraft/server/LootItemConditionRandomChanceWithLooting net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceWithLootingCondition
	a percent
	b lootingMultiplier
	a ()Ljava/util/Set; getReferencedContextParams
	a (FF)Lcuj$a; randomChanceAndLootingBoost
	a (Lnet/minecraft/server/LootTableInfo;)Z test
net/minecraft/server/LootItemConditionReference net/minecraft/world/level/storage/loot/predicates/ConditionReference
	a LOGGER
	b name
	a (Lnet/minecraft/server/LootCollector;)V validate
	a (Lnet/minecraft/server/LootTableInfo;)Z test
	a (Lnet/minecraft/server/MinecraftKey;)Lcuj$a; conditionReference
net/minecraft/server/LootItemConditionSurvivesExplosion net/minecraft/world/level/storage/loot/predicates/ExplosionCondition
	a INSTANCE
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/server/LootTableInfo;)Z test
	b ()Lcuj$a; survivesExplosion
net/minecraft/server/LootItemConditionTableBonus net/minecraft/world/level/storage/loot/predicates/BonusLevelTableCondition
	a enchantment
	b values
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/server/Enchantment;[F)Lcuj$a; bonusLevelFlatChance
	a (Lnet/minecraft/server/LootTableInfo;)Z test
net/minecraft/server/LootItemConditionTimeCheck net/minecraft/world/level/storage/loot/predicates/TimeCheck
	a period
	b value
	a (Lnet/minecraft/server/LootTableInfo;)Z test
	a (Lnet/minecraft/server/LootValueBounds;)Lcuq$a; time
net/minecraft/server/LootItemConditionUser net/minecraft/world/level/storage/loot/predicates/ConditionUserBuilder
	b (Lcuj$a;)Ljava/lang/Object; when
	c ()Ljava/lang/Object; unwrap
net/minecraft/server/LootItemConditionWeatherCheck net/minecraft/world/level/storage/loot/predicates/WeatherCheck
	a isRaining
	b isThundering
	a (Lnet/minecraft/server/LootTableInfo;)Z test
	b ()Lcur$a; weather
net/minecraft/server/LootItemConditions net/minecraft/world/level/storage/loot/predicates/LootItemConditions
	a CONDITIONS_BY_NAME
	b CONDITIONS_BY_CLASS
	a (Lcuj$b;)V register
	a (Lnet/minecraft/server/LootItemCondition;)Lcuj$b; getSerializer
	a (Lnet/minecraft/server/MinecraftKey;)Lcuj$b; getSerializer
	a ([Ljava/util/function/Predicate;)Ljava/util/function/Predicate; andConditions
	b ([Ljava/util/function/Predicate;)Ljava/util/function/Predicate; orConditions
net/minecraft/server/LootItemFunction net/minecraft/world/level/storage/loot/functions/LootItemFunction
	a (Ljava/util/function/BiFunction;Ljava/util/function/Consumer;Lnet/minecraft/server/LootTableInfo;)Ljava/util/function/Consumer; decorate
net/minecraft/server/LootItemFunctionApplyBonus net/minecraft/world/level/storage/loot/functions/ApplyBonusCount
	a FORMULAS
	c enchantment
	d formula
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/server/Enchantment;)Lcte$a; addOreBonusCount
	a (Lnet/minecraft/server/Enchantment;FI)Lcte$a; addBonusBinomialDistributionCount
	a (Lnet/minecraft/server/Enchantment;I)Lcte$a; addUniformBonusCount
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	b (Lnet/minecraft/server/Enchantment;)Lcte$a; addUniformBonusCount
net/minecraft/server/LootItemFunctionConditional net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction
	a compositePredicates
	b predicates
	a (Ljava/util/function/Function;)Lcte$a; simpleBuilder
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	a (Lnet/minecraft/server/LootCollector;)V validate
	b (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; apply
net/minecraft/server/LootItemFunctionCopyNBT net/minecraft/world/level/storage/loot/functions/CopyNbtFunction
	a source
	c operations
	d ENTITY_GETTER
	e BLOCK_ENTITY_GETTER
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	a (Lnet/minecraft/server/LootItemFunctionCopyNBT$Source;)Lcsx$a; copyData
	b (Ljava/lang/String;)Lde$h; compileNbtPath
net/minecraft/server/LootItemFunctionCopyNBT$Action net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$MergeStrategy
	d name
	e $VALUES
	a (Ljava/lang/String;)Lnet/minecraft/server/LootItemFunctionCopyNBT$Action; getByName
	a (Lnet/minecraft/server/NBTBase;Lde$h;Ljava/util/List;)V merge
net/minecraft/server/LootItemFunctionCopyNBT$Source net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$DataSource
	e name
	f param
	g getter
	h $VALUES
	a (Ljava/lang/String;)Lnet/minecraft/server/LootItemFunctionCopyNBT$Source; getByName
net/minecraft/server/LootItemFunctionCopyName net/minecraft/world/level/storage/loot/functions/CopyNameFunction
	a source
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	a (Lnet/minecraft/server/LootItemFunctionCopyName$Source;)Lcte$a; copyName
net/minecraft/server/LootItemFunctionCopyName$Source net/minecraft/world/level/storage/loot/functions/CopyNameFunction$NameSource
	e name
	f param
	g $VALUES
	a (Ljava/lang/String;)Lnet/minecraft/server/LootItemFunctionCopyName$Source; getByName
net/minecraft/server/LootItemFunctionCopyState net/minecraft/world/level/storage/loot/functions/CopyBlockState
	a block
	c properties
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/server/Block;)Lcsv$a; copyState
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockState;)Ljava/lang/String; serialize
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
net/minecraft/server/LootItemFunctionEnchant net/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction
	a LOGGER
	c enchantments
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	b ()Lcsy$a; randomEnchantment
	c ()Lcte$a; randomApplicableEnchantment
net/minecraft/server/LootItemFunctionExplorationMap net/minecraft/world/level/storage/loot/functions/ExplorationMapFunction
	a DEFAULT_DECORATION
	c LOGGER
	d destination
	e mapDecoration
	f zoom
	g searchRadius
	h skipKnownStructures
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	b ()Lcta$a; makeExplorationMap
net/minecraft/server/LootItemFunctionExplosionDecay net/minecraft/world/level/storage/loot/functions/ApplyExplosionDecay
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	b ()Lcte$a; explosionDecay
net/minecraft/server/LootItemFunctionFillPlayerHead net/minecraft/world/level/storage/loot/functions/FillPlayerHead
	a entityTarget
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	a (Lnet/minecraft/server/LootTableInfo$EntityTarget;)Lcte$a; fillPlayerHead
net/minecraft/server/LootItemFunctionLimitCount net/minecraft/world/level/storage/loot/functions/LimitCount
	a limiter
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	a (Lnet/minecraft/server/LootIntegerLimit;)Lcte$a; limitCount
net/minecraft/server/LootItemFunctionSetAttribute net/minecraft/world/level/storage/loot/functions/SetAttributesFunction
	a modifiers
	a (Ljava/lang/String;Ljava/lang/String;Lnet/minecraft/server/AttributeModifier$Operation;Lnet/minecraft/server/LootValueBounds;)Lcti$c; modifier
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	b ()Lcti$a; setAttributes
net/minecraft/server/LootItemFunctionSetContents net/minecraft/world/level/storage/loot/functions/SetContainerContents
	a entries
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	a (Lnet/minecraft/server/LootCollector;)V validate
	b ()Lctj$a; setContents
net/minecraft/server/LootItemFunctionSetCount net/minecraft/world/level/storage/loot/functions/SetItemCountFunction
	a value
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	a (Lnet/minecraft/server/LootValue;)Lcte$a; setCount
net/minecraft/server/LootItemFunctionSetDamage net/minecraft/world/level/storage/loot/functions/SetItemDamageFunction
	a LOGGER
	c damage
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	a (Lnet/minecraft/server/LootValueBounds;)Lcte$a; setDamage
net/minecraft/server/LootItemFunctionSetLore net/minecraft/world/level/storage/loot/functions/SetLoreFunction
	a replace
	c lore
	d resolutionContext
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	a (Lnet/minecraft/server/ItemStack;Z)Lnet/minecraft/server/NBTTagList; getLoreTag
	b ()Lctn$a; setLore
net/minecraft/server/LootItemFunctionSetName net/minecraft/world/level/storage/loot/functions/SetNameFunction
	a LOGGER
	c name
	d resolutionContext
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/server/IChatBaseComponent;)Lcte$a; setName
	a (Lnet/minecraft/server/IChatBaseComponent;Lnet/minecraft/server/LootTableInfo$EntityTarget;)Lcte$a; setName
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	a (Lnet/minecraft/server/LootTableInfo;Lnet/minecraft/server/LootTableInfo$EntityTarget;)Ljava/util/function/UnaryOperator; createResolver
net/minecraft/server/LootItemFunctionSetStewEffect net/minecraft/world/level/storage/loot/functions/SetStewEffectFunction
	a effectDurationMap
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	b ()Lctq$a; stewEffect
net/minecraft/server/LootItemFunctionSetTable net/minecraft/world/level/storage/loot/functions/SetContainerLootTable
	a name
	c seed
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	a (Lnet/minecraft/server/LootCollector;)V validate
	a (Lnet/minecraft/server/MinecraftKey;)Lcte$a; withLootTable
	a (Lnet/minecraft/server/MinecraftKey;J)Lcte$a; withLootTable
net/minecraft/server/LootItemFunctionSetTag net/minecraft/world/level/storage/loot/functions/SetNbtFunction
	a tag
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	a (Lnet/minecraft/server/NBTTagCompound;)Lcte$a; setTag
net/minecraft/server/LootItemFunctionSmelt net/minecraft/world/level/storage/loot/functions/SmeltItemFunction
	a LOGGER
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/LootTableInfo;)Lnet/minecraft/server/ItemStack; run
	b ()Lcte$a; smelted
net/minecraft/server/LootItemFunctionUser net/minecraft/world/level/storage/loot/functions/FunctionUserBuilder
	b (Lctf$a;)Ljava/lang/Object; apply
	c ()Ljava/lang/Object; unwrap
net/minecraft/server/LootItemFunctions net/minecraft/world/level/storage/loot/functions/LootItemFunctions
	a IDENTITY
	b FUNCTIONS_BY_NAME
	c FUNCTIONS_BY_CLASS
	a (Lctf$b;)V register
	a (Lnet/minecraft/server/LootItemFunction;)Lctf$b; getSerializer
	a (Lnet/minecraft/server/MinecraftKey;)Lctf$b; getSerializer
	a ([Ljava/util/function/BiFunction;)Ljava/util/function/BiFunction; compose
net/minecraft/server/LootItemUser net/minecraft/world/level/storage/loot/LootContextUser
	a ()Ljava/util/Set; getReferencedContextParams
	a (Lnet/minecraft/server/LootCollector;)V validate
net/minecraft/server/LootPredicateManager net/minecraft/world/level/storage/loot/PredicateManager
	a LOGGER
	b GSON
	c conditions
	a ()Ljava/util/Set; getKeys
	a (Ljava/lang/Object;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	a (Ljava/util/Map;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/LootItemCondition; get
net/minecraft/server/LootSelector net/minecraft/world/level/storage/loot/LootPool
	a entries
	b conditions
	c compositeCondition
	d functions
	e compositeFunction
	f rolls
	g bonusRolls
	a ()Lcrw$a; lootPool
	a (Ljava/util/function/Consumer;Lnet/minecraft/server/LootTableInfo;)V addRandomItems
	a (Lnet/minecraft/server/LootCollector;)V validate
	b (Ljava/util/function/Consumer;Lnet/minecraft/server/LootTableInfo;)V addRandomItem
net/minecraft/server/LootSelectorDynamic net/minecraft/world/level/storage/loot/entries/DynamicLoot
	c TYPE
	h name
	a (Ljava/util/function/Consumer;Lnet/minecraft/server/LootTableInfo;)V createItemStack
	a (Lnet/minecraft/server/MinecraftKey;)Lcso$a; dynamicEntry
net/minecraft/server/LootSelectorEmpty net/minecraft/world/level/storage/loot/entries/EmptyLootItem
	a ()Lcso$a; emptyItem
	a (Ljava/util/function/Consumer;Lnet/minecraft/server/LootTableInfo;)V createItemStack
net/minecraft/server/LootSelectorEntry net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer
	c compositeFunction
	e weight
	f quality
	g functions
	h entry
	a (Lcso$d;)Lcso$a; simpleBuilder
	a (Ljava/util/function/Consumer;Lnet/minecraft/server/LootTableInfo;)V createItemStack
	a (Lnet/minecraft/server/LootCollector;)V validate
net/minecraft/server/LootSelectorLootTable net/minecraft/world/level/storage/loot/entries/LootTableReference
	c name
	a (Ljava/util/function/Consumer;Lnet/minecraft/server/LootTableInfo;)V createItemStack
	a (Lnet/minecraft/server/LootCollector;)V validate
	a (Lnet/minecraft/server/MinecraftKey;)Lcso$a; lootTableReference
net/minecraft/server/LootSelectorTag net/minecraft/world/level/storage/loot/entries/TagEntry
	c tag
	h expand
	a (Ljava/util/function/Consumer;Lnet/minecraft/server/LootTableInfo;)V createItemStack
	a (Lnet/minecraft/server/LootTableInfo;Ljava/util/function/Consumer;)Z expandTag
	a (Lnet/minecraft/server/Tag;)Lcso$a; tagContents
	b (Lnet/minecraft/server/Tag;)Lcso$a; expandTag
net/minecraft/server/LootTable net/minecraft/world/level/storage/loot/LootTable
	b DEFAULT_PARAM_SET
	c LOGGER
	d paramSet
	e pools
	f functions
	g compositeFunction
	a (Ljava/util/List;ILjava/util/Random;)V shuffleAndSplitItems
	a (Ljava/util/function/Consumer;)Ljava/util/function/Consumer; createStackSplitter
	a (Lnet/minecraft/server/IInventory;Ljava/util/Random;)Ljava/util/List; getAvailableSlots
	a (Lnet/minecraft/server/LootCollector;)V validate
	b ()Lcrx$a; lootTable
	fillInventory (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/LootTableInfo;)V fill
	getLootContextParameterSet ()Lnet/minecraft/server/LootContextParameterSet; getParamSet
	populateLoot (Lnet/minecraft/server/LootTableInfo;)Ljava/util/List; getRandomItems
	populateLoot (Lnet/minecraft/server/LootTableInfo;Ljava/util/function/Consumer;)V getRandomItems
	populateLootDirect (Lnet/minecraft/server/LootTableInfo;Ljava/util/function/Consumer;)V getRandomItemsRaw
net/minecraft/server/LootTableInfo net/minecraft/world/level/storage/loot/LootContext
	a random
	b luck
	c level
	d lootTables
	e visitedTables
	f conditions
	g visitedConditions
	h params
	i dynamicDrops
	a ()Ljava/util/Random; getRandom
	a (Lnet/minecraft/server/LootItemCondition;)Z addVisitedCondition
	a (Lnet/minecraft/server/LootTable;)Z addVisitedTable
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/LootTable; getLootTable
	a (Lnet/minecraft/server/MinecraftKey;Ljava/util/function/Consumer;)V addDynamicDrops
	b ()F getLuck
	b (Lnet/minecraft/server/LootContextParameter;)Ljava/lang/Object; getParam
	b (Lnet/minecraft/server/LootItemCondition;)V removeVisitedCondition
	b (Lnet/minecraft/server/LootTable;)V removeVisitedTable
	b (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/LootItemCondition; getCondition
	c ()Lnet/minecraft/server/WorldServer; getLevel
	getContextParameter (Lnet/minecraft/server/LootContextParameter;)Ljava/lang/Object; getParamOrNull
	hasContextParameter (Lnet/minecraft/server/LootContextParameter;)Z hasParam
net/minecraft/server/LootTableInfo$Builder net/minecraft/world/level/storage/loot/LootContext$Builder
	a level
	b params
	c dynamicDrops
	d random
	e luck
	a ()Lnet/minecraft/server/WorldServer; getLevel
	a (F)Lnet/minecraft/server/LootTableInfo$Builder; withLuck
	a (J)Lnet/minecraft/server/LootTableInfo$Builder; withOptionalRandomSeed
	a (JLjava/util/Random;)Lnet/minecraft/server/LootTableInfo$Builder; withOptionalRandomSeed
	a (Ljava/util/Random;)Lnet/minecraft/server/LootTableInfo$Builder; withRandom
	a (Lnet/minecraft/server/LootContextParameter;)Ljava/lang/Object; getParameter
	a (Lnet/minecraft/server/MinecraftKey;Lcru$b;)Lnet/minecraft/server/LootTableInfo$Builder; withDynamicDrop
	b (Lnet/minecraft/server/LootContextParameter;)Ljava/lang/Object; getOptionalParameter
	build (Lnet/minecraft/server/LootContextParameterSet;)Lnet/minecraft/server/LootTableInfo; create
	set (Lnet/minecraft/server/LootContextParameter;Ljava/lang/Object;)Lnet/minecraft/server/LootTableInfo$Builder; withParameter
	setOptional (Lnet/minecraft/server/LootContextParameter;Ljava/lang/Object;)Lnet/minecraft/server/LootTableInfo$Builder; withOptionalParameter
net/minecraft/server/LootTableInfo$EntityTarget net/minecraft/world/level/storage/loot/LootContext$EntityTarget
	e name
	f param
	g $VALUES
	a ()Lnet/minecraft/server/LootContextParameter; getParam
	a (Ljava/lang/String;)Lnet/minecraft/server/LootTableInfo$EntityTarget; getByName
net/minecraft/server/LootTableRegistry net/minecraft/world/level/storage/loot/LootTables
	a LOGGER
	b GSON
	c tables
	d predicateManager
	a ()Ljava/util/Set; getIds
	a (Ljava/lang/Object;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	a (Ljava/util/Map;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	a (Lnet/minecraft/server/LootCollector;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/LootTable;)V validate
	a (Lnet/minecraft/server/LootTable;)Lcom/google/gson/JsonElement; serialize
	getLootTable (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/LootTable; get
net/minecraft/server/LootTables net/minecraft/world/level/storage/loot/BuiltInLootTables
	A JUNGLE_TEMPLE
	B JUNGLE_TEMPLE_DISPENSER
	C IGLOO_CHEST
	D WOODLAND_MANSION
	E UNDERWATER_RUIN_SMALL
	F UNDERWATER_RUIN_BIG
	G BURIED_TREASURE
	H SHIPWRECK_MAP
	I SHIPWRECK_SUPPLY
	J SHIPWRECK_TREASURE
	K PILLAGER_OUTPOST
	L SHEEP_WHITE
	M SHEEP_ORANGE
	N SHEEP_MAGENTA
	O SHEEP_LIGHT_BLUE
	P SHEEP_YELLOW
	Q SHEEP_LIME
	R SHEEP_PINK
	S SHEEP_GRAY
	T SHEEP_LIGHT_GRAY
	U SHEEP_CYAN
	V SHEEP_PURPLE
	W SHEEP_BLUE
	X SHEEP_BROWN
	Y SHEEP_GREEN
	Z SHEEP_RED
	a EMPTY
	aa SHEEP_BLACK
	ab FISHING
	ac FISHING_JUNK
	ad FISHING_TREASURE
	ae FISHING_FISH
	af CAT_MORNING_GIFT
	ag ARMORER_GIFT
	ah BUTCHER_GIFT
	ai CARTOGRAPHER_GIFT
	aj CLERIC_GIFT
	ak FARMER_GIFT
	al FISHERMAN_GIFT
	am FLETCHER_GIFT
	an LEATHERWORKER_GIFT
	ao LIBRARIAN_GIFT
	ap MASON_GIFT
	aq SHEPHERD_GIFT
	ar TOOLSMITH_GIFT
	as WEAPONSMITH_GIFT
	at LOCATIONS
	au IMMUTABLE_LOCATIONS
	b SPAWN_BONUS_CHEST
	c END_CITY_TREASURE
	d SIMPLE_DUNGEON
	e VILLAGE_WEAPONSMITH
	f VILLAGE_TOOLSMITH
	g VILLAGE_ARMORER
	h VILLAGE_CARTOGRAPHER
	i VILLAGE_MASON
	j VILLAGE_SHEPHERD
	k VILLAGE_BUTCHER
	l VILLAGE_FLETCHER
	m VILLAGE_FISHER
	n VILLAGE_TANNERY
	o VILLAGE_TEMPLE
	p VILLAGE_DESERT_HOUSE
	q VILLAGE_PLAINS_HOUSE
	r VILLAGE_TAIGA_HOUSE
	s VILLAGE_SNOWY_HOUSE
	t VILLAGE_SAVANNA_HOUSE
	u ABANDONED_MINESHAFT
	v NETHER_BRIDGE
	w STRONGHOLD_LIBRARY
	x STRONGHOLD_CROSSING
	y STRONGHOLD_CORRIDOR
	z DESERT_PYRAMID
	a ()Ljava/util/Set; all
	a (Ljava/lang/String;)Lnet/minecraft/server/MinecraftKey; register
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/MinecraftKey; register
net/minecraft/server/LootValue net/minecraft/world/level/storage/loot/RandomIntGenerator
	a CONSTANT
	b UNIFORM
	c BINOMIAL
	a ()Lnet/minecraft/server/MinecraftKey; getType
	a (Ljava/util/Random;)I getInt
net/minecraft/server/LootValueBinomial net/minecraft/world/level/storage/loot/BinomialDistributionGenerator
	d n
	e p
	a ()Lnet/minecraft/server/MinecraftKey; getType
	a (IF)Lnet/minecraft/server/LootValueBinomial; binomial
	a (Ljava/util/Random;)I getInt
net/minecraft/server/LootValueBounds net/minecraft/world/level/storage/loot/RandomValueBounds
	d min
	e max
	a ()Lnet/minecraft/server/MinecraftKey; getType
	a (F)Lnet/minecraft/server/LootValueBounds; exactly
	a (FF)Lnet/minecraft/server/LootValueBounds; between
	a (I)Z matchesValue
	a (Ljava/util/Random;)I getInt
	b ()F getMin
	b (Ljava/util/Random;)F getFloat
	c ()F getMax
net/minecraft/server/LootValueConstant net/minecraft/world/level/storage/loot/ConstantIntValue
	d value
	a ()Lnet/minecraft/server/MinecraftKey; getType
	a (I)Lnet/minecraft/server/LootValueConstant; exactly
	a (Ljava/util/Random;)I getInt
net/minecraft/server/LootValueGenerators net/minecraft/world/level/storage/loot/RandomIntGenerators
	a GENERATORS
	a (Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/LootValue; deserialize
	a (Lnet/minecraft/server/LootValue;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
net/minecraft/server/Mailbox net/minecraft/util/thread/ProcessorHandle
	a (Ljava/lang/Object;)V tell
	a (Ljava/lang/String;Ljava/util/function/Consumer;)Lnet/minecraft/server/Mailbox; of
	a (Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; ask
	bh ()Ljava/lang/String; name
net/minecraft/server/MapGeneratorUtils net/minecraft/core/MapFiller
	a (Ljava/lang/Iterable;Ljava/lang/Iterable;)Ljava/util/Map; hashMapFrom
	a (Ljava/lang/Iterable;Ljava/lang/Iterable;Ljava/util/Map;)Ljava/util/Map; from
	b (Ljava/lang/Iterable;Ljava/lang/Iterable;)Ljava/util/Map; linkedHashMapFrom
net/minecraft/server/MapIcon net/minecraft/world/level/saveddata/maps/MapDecoration
	rotation rot
	a (B)V setX
	b (B)V setY
	c (B)V setRot
	f ()Z renderOnFrame
	getRotation ()B getRot
	getType ()B getImage
net/minecraft/server/MapIcon$Type net/minecraft/world/level/saveddata/maps/MapDecoration$Type
	B icon
	C renderedOnFrame
	D mapColor
	E $VALUES
	a ()B getIcon
	a (B)Lnet/minecraft/server/MapIcon$Type; byIcon
	b ()Z isRenderedOnFrame
	c ()Z hasMapColor
	d ()I getMapColor
net/minecraft/server/MapIconBanner net/minecraft/world/level/saveddata/maps/MapBanner
	a pos
	b color
	c name
	a ()Lnet/minecraft/server/BlockPosition; getPos
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/MapIconBanner; fromWorld
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/MapIconBanner; load
	b ()Lnet/minecraft/server/EnumColor; getColor
	c ()Lnet/minecraft/server/MapIcon$Type; getDecoration
	d ()Lnet/minecraft/server/IChatBaseComponent; getName
	e ()Lnet/minecraft/server/NBTTagCompound; save
	f ()Ljava/lang/String; getId
net/minecraft/server/Material net/minecraft/world/level/material/Material
	BANNER BARRIER
	CLOTH WOOL
	DRAGON_EGG EGG
	EARTH DIRT
	HEAVY HEAVY_METAL
	ORE METAL
	ORIENTABLE DECORATION
	PACKED_ICE TOP_SNOW
	PUMPKIN VEGETABLE
	Q color
	R pushReaction
	S blocksMotion
	SHATTERABLE GLASS
	SNOW_BLOCK SNOW
	SNOW_LAYER ICE_SOLID
	STRUCTURE_VOID STRUCTURAL_AIR
	TNT EXPLOSIVE
	U alwaysDestroyable
	V liquid
	W solidBlocking
	WOOL CLOTH_DECORATION
	X replaceable
	Y solid
	canBurn flammable
	f ()Z isSolidBlocking
	i ()Lnet/minecraft/server/MaterialMapColor; getColor
	isBuildable ()Z isSolid
	isBurnable ()Z isFlammable
	isSolid ()Z blocksMotion
net/minecraft/server/MaterialMapColor net/minecraft/world/level/material/MaterialColor
	A COLOR_BLUE
	B COLOR_BROWN
	C COLOR_GREEN
	D COLOR_RED
	E COLOR_BLACK
	F GOLD
	G DIAMOND
	H LAPIS
	I EMERALD
	J PODZOL
	K NETHER
	L TERRACOTTA_WHITE
	M TERRACOTTA_ORANGE
	N TERRACOTTA_MAGENTA
	O TERRACOTTA_LIGHT_BLUE
	P TERRACOTTA_YELLOW
	Q TERRACOTTA_LIGHT_GREEN
	R TERRACOTTA_PINK
	S TERRACOTTA_GRAY
	T TERRACOTTA_LIGHT_GRAY
	U TERRACOTTA_CYAN
	V TERRACOTTA_PURPLE
	W TERRACOTTA_BLUE
	X TERRACOTTA_BROWN
	Y TERRACOTTA_GREEN
	Z TERRACOTTA_RED
	a MATERIAL_COLORS
	aa TERRACOTTA_BLACK
	ac id
	b NONE
	c GRASS
	d SAND
	e WOOL
	f FIRE
	g ICE
	h METAL
	i PLANT
	j SNOW
	k CLAY
	l DIRT
	m STONE
	n WATER
	o WOOD
	p QUARTZ
	q COLOR_ORANGE
	r COLOR_MAGENTA
	rgb col
	s COLOR_LIGHT_BLUE
	t COLOR_YELLOW
	u COLOR_LIGHT_GREEN
	v COLOR_PINK
	w COLOR_GRAY
	x COLOR_LIGHT_GRAY
	y COLOR_CYAN
	z COLOR_PURPLE
	a (I)I calculateRGBColor
net/minecraft/server/MaterialPredicate net/minecraft/world/level/block/state/predicate/BlockMaterialPredicate
	a AIR
	b material
	a (Lnet/minecraft/server/IBlockData;)Z test
	a (Lnet/minecraft/server/Material;)Lnet/minecraft/server/MaterialPredicate; forMaterial
net/minecraft/server/MathHelper net/minecraft/util/Mth
	a SQRT_OF_TWO
	b SIN
	c RANDOM
	d MULTIPLY_DE_BRUIJN_BIT_POSITION
	e FRAC_BIAS
	f ASIN_TAB
	g COS_TAB
	a ()Ljava/util/UUID; createInsecureUUID
	a (BBB)B clamp
	a (DD)D absMax
	a (DDD)D clamp
	a (DDDDDD)D lerp2
	a (DDDDDDDDDDD)D lerp3
	a (DDDDDDII)[D binBiModalNormalDistribution
	a (DDDII)[D binNormalDistribution
	a (DDII)[D binLogDistribution
	a (FF)Z equal
	a (FFF)F clamp
	a (I)I abs
	a (IFFF)I colorMultiply
	a (II)I intFloorDiv
	a (IILjava/util/function/IntPredicate;)I binarySearch
	a (J)J murmurHash3Mixer
	a (JJJ)J clamp
	a (Ljava/lang/String;D)D getDouble
	a (Ljava/lang/String;DD)D getDouble
	a (Ljava/lang/String;I)I getInt
	a (Ljava/lang/String;II)I getInt
	a (Ljava/util/Random;)Ljava/util/UUID; createInsecureUUID
	a (Ljava/util/Random;DD)D nextDouble
	a (Ljava/util/Random;FF)F nextFloat
	a (Ljava/util/Random;[D)I getRandomForDistributionIntegral
	a (Lnet/minecraft/server/BaseBlockPosition;)J getSeed
	a (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/AxisAlignedBB;)Z rayIntersectsAABB
	a (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Vec3D;D)Lnet/minecraft/server/Vec3D; catmullRomSplinePos
	a ([D)[D cumulativeSum
	a ([J)D average
	b (D)I fastFloor
	b (DD)Z equal
	b (DDD)D clampedLerp
	b (FF)F positiveModulo
	b (FFF)F rotateIfNecessary
	b (I)I wrapDegrees
	b (II)I positiveModulo
	b (III)I color
	c (DD)D positiveModulo
	c (DDD)D pct
	c (F)F sqrt
	c (FF)F degreesDifference
	c (FFF)F approach
	c (I)I smallestEncompassingPowerOfTwo
	c (II)I roundUp
	c (III)J getSeed
	d (D)J lfloor
	d (DD)D atan2
	d (DDD)D lerp
	d (F)I floor
	d (FF)F degreesDifferenceAbs
	d (FFF)F approachDegrees
	d (I)I ceillog2
	d (II)I colorMultiply
	e (D)I absFloor
	e (F)F abs
	e (FFF)I color
	e (I)I log2
	f (D)I ceil
	f (F)I ceil
	f (FFF)I hsvToRgb
	f (I)I murmurHash3Mixer
	g (D)D wrapDegrees
	g (F)F wrapDegrees
	g (FFF)F lerp
	g (I)Z isPowerOfTwo
	h (D)D frac
	h (F)F frac
	h (FFF)F rotLerp
	i (D)D fastInvSqrt
	i (F)F fastInvSqrt
	i (FFF)F diffuseLight
	j (D)D smoothstep
	j (F)F fastInvCubeRoot
	j (FFF)F rotlerp
	k (D)I sign
	l (D)F rotWrap
net/minecraft/server/MemoryModuleType net/minecraft/world/entity/ai/memory/MemoryModuleType
	C deserializer
	MOBS LIVING_ENTITIES
	VISIBLE_MOBS VISIBLE_LIVING_ENTITIES
	a (Ljava/lang/String;)Lnet/minecraft/server/MemoryModuleType; register
	a (Ljava/lang/String;Ljava/util/Optional;)Lnet/minecraft/server/MemoryModuleType; register
	getSerializer ()Ljava/util/Optional; getDeserializer
net/minecraft/server/MemoryStatus net/minecraft/world/entity/ai/memory/MemoryStatus
	d $VALUES
net/minecraft/server/MemoryTarget net/minecraft/world/entity/ai/memory/WalkTarget
	a target
	b speed
	c closeEnoughDist
	a ()Lnet/minecraft/server/BehaviorPosition; getTarget
	b ()F getSpeed
	c ()I getCloseEnoughDist
net/minecraft/server/MerchantRecipe net/minecraft/world/item/trading/MerchantOffer
	buyingItem1 baseCostA
	buyingItem2 costB
	sellingItem result
	specialPrice specialPriceDiff
	a ()Lnet/minecraft/server/ItemStack; getBaseCostA
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z satisfiedBy
	a (Lnet/minecraft/server/MerchantRecipe;)Z isSame
	b (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z take
	c (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z isRequiredItem
	e ()V updateDemand
	f ()Lnet/minecraft/server/ItemStack; assemble
	getBuyItem1 ()Lnet/minecraft/server/ItemStack; getCostA
	getBuyItem2 ()Lnet/minecraft/server/ItemStack; getCostB
	getSellingItem ()Lnet/minecraft/server/ItemStack; getResult
	getSpecialPrice ()I getSpecialPriceDiff
	increaseSpecialPrice (I)V addToSpecialPriceDiff
	isFullyUsed ()Z isOutOfStock
	isRewardExp ()Z shouldRewardExp
	q ()V setToOutOfStock
	r ()Z needsRestock
	setSpecialPrice ()V resetSpecialPriceDiff
	setSpecialPrice (I)V setSpecialPriceDiff
	t ()Lnet/minecraft/server/NBTTagCompound; createTag
net/minecraft/server/MerchantRecipeList net/minecraft/world/item/trading/MerchantOffers
	a ()Lnet/minecraft/server/NBTTagCompound; createTag
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;I)Lnet/minecraft/server/MerchantRecipe; getRecipeFor
	a (Lnet/minecraft/server/PacketDataSerializer;)V writeToStream
	b (Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/MerchantRecipeList; createFromStream
net/minecraft/server/MerchantWrapper net/minecraft/world/entity/npc/ClientSideMerchant
	a container
	b source
	c offers
	d xp
	a ()Lnet/minecraft/server/IInventory; getContainer
	a (Lnet/minecraft/server/MerchantRecipe;)V notifyTrade
	a (Lnet/minecraft/server/MerchantRecipeList;)V overrideOffers
	e (Lnet/minecraft/server/EntityHuman;)V setTradingPlayer
	eB ()Lnet/minecraft/server/World; getLevel
	er ()I getVillagerXp
	es ()Lnet/minecraft/server/EntityHuman; getTradingPlayer
	eu ()Lnet/minecraft/server/MerchantRecipeList; getOffers
	ev ()Z showProgressBar
	ew ()Lnet/minecraft/server/SoundEffect; getNotifyTradeSound
	i (Lnet/minecraft/server/ItemStack;)V notifyTradeUpdated
	t (I)V overrideXp
net/minecraft/server/MethodProfiler net/minecraft/util/profiling/ActiveProfiler
	a WARNING_TIME_NANOS
	b LOGGER
	c paths
	d startTimes
	e times
	f counts
	g getTickTime
	h startTimeNano
	i startTimeTicks
	j path
	k started
	l warn
	a ()V startTick
	a (Ljava/lang/String;)V push
	a (Ljava/util/function/Supplier;)V push
	b ()V endTick
	b (Ljava/lang/String;)V popPush
	b (Ljava/util/function/Supplier;)V popPush
	c ()V pop
	d ()Lnet/minecraft/server/MethodProfilerResults; getResults
net/minecraft/server/MethodProfilerResults net/minecraft/util/profiling/ProfileResults
	a ()J getStartTimeNano
	a (Ljava/io/File;)Z saveResults
	a (Ljava/lang/String;)Ljava/util/List; getTimes
	b ()I getStartTimeTicks
	b (Ljava/lang/String;)Ljava/lang/String; demanglePath
	c ()J getEndTimeNano
	d ()I getEndTimeTicks
	e ()Ljava/lang/String; getProfilerResults
	f ()I getTickDuration
	g ()J getNanoDuration
net/minecraft/server/MethodProfilerResultsEmpty net/minecraft/util/profiling/EmptyProfileResults
	a EMPTY
	a ()J getStartTimeNano
	a (Ljava/io/File;)Z saveResults
	a (Ljava/lang/String;)Ljava/util/List; getTimes
	b ()I getStartTimeTicks
	c ()J getEndTimeNano
	d ()I getEndTimeTicks
	e ()Ljava/lang/String; getProfilerResults
net/minecraft/server/MethodProfilerResultsField net/minecraft/util/profiling/ResultField
	a percentage
	b globalPercentage
	c count
	d name
	a ()I getColor
	a (Lnet/minecraft/server/MethodProfilerResultsField;)I compareTo
net/minecraft/server/MethodProfilerResultsFilled net/minecraft/util/profiling/FilledProfileResults
	a LOGGER
	b times
	c counts
	d startTimeNano
	e startTimeTicks
	f endTimeNano
	g endTimeTicks
	h tickDuration
	a ()J getStartTimeNano
	a (ILjava/lang/String;Ljava/lang/StringBuilder;)V appendProfilerResults
	a (JI)Ljava/lang/String; getProfilerResults
	a (Ljava/io/File;)Z saveResults
	a (Ljava/lang/String;)Ljava/util/List; getTimes
	b ()I getStartTimeTicks
	c ()J getEndTimeNano
	d ()I getEndTimeTicks
	e ()Ljava/lang/String; getProfilerResults
	f ()I getTickDuration
	h ()Ljava/lang/String; getComment
net/minecraft/server/MinecartTrackLogic net/minecraft/world/level/block/RailState
	a level
	b pos
	c block
	d state
	e isStraight
	f connections
	a ()Ljava/util/List; getConnections
	a (Lnet/minecraft/server/BlockPosition;)Z hasRail
	a (Lnet/minecraft/server/BlockPropertyTrackPosition;)V updateConnections
	a (Lnet/minecraft/server/MinecartTrackLogic;)Z connectsTo
	a (ZZLnet/minecraft/server/BlockPropertyTrackPosition;)Lnet/minecraft/server/MinecartTrackLogic; place
	b ()I countPotentialConnections
	b (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/MinecartTrackLogic; getRail
	b (Lnet/minecraft/server/MinecartTrackLogic;)Z canConnectTo
	c ()Lnet/minecraft/server/IBlockData; getState
	c (Lnet/minecraft/server/BlockPosition;)Z hasConnection
	c (Lnet/minecraft/server/MinecartTrackLogic;)V connectTo
	d ()V removeSoftConnections
	d (Lnet/minecraft/server/BlockPosition;)Z hasNeighborRail
net/minecraft/server/MinecraftEncryption net/minecraft/util/Crypt
	a LOGGER
	a ()Ljavax/crypto/SecretKey; generateSecretKey
	a (ILjava/lang/String;Ljava/security/Key;)Ljavax/crypto/Cipher; setupCipher
	a (ILjava/security/Key;)Ljavax/crypto/Cipher; getCipher
	a (ILjava/security/Key;[B)[B cipherData
	a (Ljava/lang/String;Ljava/security/PublicKey;Ljavax/crypto/SecretKey;)[B digestData
	a (Ljava/lang/String;[[B)[B digestData
	a (Ljava/security/Key;[B)[B encryptUsingKey
	a (Ljava/security/PrivateKey;[B)Ljavax/crypto/SecretKey; decryptByteToSecretKey
	a ([B)Ljava/security/PublicKey; byteToPublicKey
	b ()Ljava/security/KeyPair; generateKeyPair
	b (Ljava/security/Key;[B)[B decryptUsingKey
net/minecraft/server/MinecraftKey net/minecraft/resources/ResourceLocation
	c ERROR_INVALID
	key path
	a (C)Z isAllowedInResourceLocation
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/MinecraftKey; read
	a (Ljava/lang/String;)Lnet/minecraft/server/MinecraftKey; tryParse
	a (Ljava/lang/String;C)Lnet/minecraft/server/MinecraftKey; of
	a (Lnet/minecraft/server/MinecraftKey;)I compareTo
	b (Ljava/lang/String;)Z isValidResourceLocation
	b (Ljava/lang/String;C)[Ljava/lang/String; decompose
	c (Ljava/lang/String;)Z isValidPath
	d (Ljava/lang/String;)Z isValidNamespace
	getKey ()Ljava/lang/String; getPath
net/minecraft/server/MinecraftSerializable net/minecraft/util/Serializable
	a (Lcom/mojang/datafixers/types/DynamicOps;)Ljava/lang/Object; serialize
net/minecraft/server/MinecraftSerializableLong net/minecraft/core/SerializableLong
	a value
	a ()J value
	a (J)Lnet/minecraft/server/MinecraftSerializableLong; of
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/MinecraftSerializableLong; of
	a (Lcom/mojang/datafixers/types/DynamicOps;)Ljava/lang/Object; serialize
net/minecraft/server/MinecraftVersion net/minecraft/DetectedVersion
	a LOGGER
	b id
	c name
	d stable
	e worldVersion
	f protocolVersion
	g packVersion
	h buildTime
	i releaseTarget
	a ()Lcom/mojang/bridge/game/GameVersion; tryDetectVersion
net/minecraft/server/MobEffect net/minecraft/world/effect/MobEffectInstance
	a LOGGER
	amplification amplifier
	b effect
	g noCounter
	h visible
	i showIcon
	a (Lnet/minecraft/server/MobEffect;)Z update
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	a (Z)V setSplash
	b (Lnet/minecraft/server/EntityLiving;)V applyEffect
	b (Lnet/minecraft/server/MobEffect;)I compareTo
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/MobEffect; load
	b (Z)V setNoCounter
	f ()Z showIcon
	g ()Ljava/lang/String; getDescriptionId
	getMobEffect ()Lnet/minecraft/server/MobEffectList; getEffect
	h ()Z isNoCounter
	i ()I tickDownDuration
	isShowParticles ()Z isVisible
net/minecraft/server/MobEffectAbsorption net/minecraft/world/effect/AbsoptionMobEffect
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/AttributeMapBase;I)V removeAttributeModifiers
	b (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/AttributeMapBase;I)V addAttributeModifiers
net/minecraft/server/MobEffectAttackDamage net/minecraft/world/effect/AttackDamageMobEffect
	a multiplier
	a (ILnet/minecraft/server/AttributeModifier;)D getAttributeModifierValue
net/minecraft/server/MobEffectHealthBoost net/minecraft/world/effect/HealthBoostMobEffect
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/AttributeMapBase;I)V removeAttributeModifiers
net/minecraft/server/MobEffectInfo net/minecraft/world/effect/MobEffectCategory
	d tooltipFormatting
	e $VALUES
	a ()Lnet/minecraft/server/EnumChatFormat; getTooltipFormatting
net/minecraft/server/MobEffectList net/minecraft/world/effect/MobEffect
	a attributeModifiers
	b category
	c color
	d descriptionId
	a (II)Z isDurationEffectTick
	a (ILnet/minecraft/server/AttributeModifier;)D getAttributeModifierValue
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/AttributeMapBase;I)V removeAttributeModifiers
	a (Lnet/minecraft/server/IAttribute;Ljava/lang/String;DLnet/minecraft/server/AttributeModifier$Operation;)Lnet/minecraft/server/MobEffectList; addAttributeModifier
	applyInstantEffect (Lnet/minecraft/server/Entity;Lnet/minecraft/server/Entity;Lnet/minecraft/server/EntityLiving;ID)V applyInstantenousEffect
	b ()Ljava/lang/String; getOrCreateDescriptionId
	b (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/AttributeMapBase;I)V addAttributeModifiers
	c ()Ljava/lang/String; getDescriptionId
	d ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
	e ()Lnet/minecraft/server/MobEffectInfo; getCategory
	fromId (I)Lnet/minecraft/server/MobEffectList; byId
	g ()Ljava/util/Map; getAttributeModifiers
	h ()Z isBeneficial
	isInstant ()Z isInstantenous
	tick (Lnet/minecraft/server/EntityLiving;I)V applyEffectTick
net/minecraft/server/MobEffectUtil net/minecraft/world/effect/MobEffectUtil
	a (Lnet/minecraft/server/EntityLiving;)Z hasDigSpeed
	a (Lnet/minecraft/server/MobEffect;F)Ljava/lang/String; formatDuration
	b (Lnet/minecraft/server/EntityLiving;)I getDigSpeedAmplification
	c (Lnet/minecraft/server/EntityLiving;)Z hasWaterBreathing
net/minecraft/server/MobEffects net/minecraft/world/effect/MobEffects
	ABSORBTION ABSORPTION
	FASTER_DIG DIG_SPEED
	FASTER_MOVEMENT MOVEMENT_SPEED
	INCREASE_DAMAGE DAMAGE_BOOST
	RESISTANCE DAMAGE_RESISTANCE
	SLOWER_DIG DIG_SLOWDOWN
	SLOWER_MOVEMENT MOVEMENT_SLOWDOWN
	a (ILjava/lang/String;Lnet/minecraft/server/MobEffectList;)Lnet/minecraft/server/MobEffectList; register
net/minecraft/server/MobSpawnerAbstract net/minecraft/world/level/BaseSpawner
	a LOGGER
	e spin
	f oSpin
	j displayEntity
	mobs spawnPotentials
	spawnData nextSpawnData
	a ()Lnet/minecraft/server/World; getLevel
	a (I)V broadcastEvent
	a (Lnet/minecraft/server/Entity;)V addWithPassengers
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	b ()Lnet/minecraft/server/BlockPosition; getPos
	b (I)Z onEventTriggered
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	c ()V tick
	d ()Lnet/minecraft/server/Entity; getOrCreateDisplayEntity
	e ()D getSpin
	f ()D getoSpin
	getMobName ()Lnet/minecraft/server/MinecraftKey; getEntityId
	h ()Z isNearPlayer
	i ()V delay
	setMobName (Lnet/minecraft/server/EntityTypes;)V setEntityId
	setSpawnData (Lnet/minecraft/server/MobSpawnerData;)V setNextSpawnData
net/minecraft/server/MobSpawnerCat net/minecraft/world/entity/npc/CatSpawner
	a nextTick
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/World;)I spawnCat
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)I spawnInHut
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;)I spawnInVillage
	a (Lnet/minecraft/server/WorldServer;ZZ)I tick
net/minecraft/server/MobSpawnerData net/minecraft/world/level/SpawnData
	entity tag
	a ()Lnet/minecraft/server/NBTTagCompound; save
	getEntity ()Lnet/minecraft/server/NBTTagCompound; getTag
net/minecraft/server/MobSpawnerPatrol net/minecraft/world/level/levelgen/PatrolSpawner
	a nextTick
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;Z)Z spawnPatrolMember
	a (Lnet/minecraft/server/WorldServer;ZZ)I tick
net/minecraft/server/MobSpawnerPhantom net/minecraft/world/level/levelgen/PhantomSpawner
	a nextTick
	a (Lnet/minecraft/server/WorldServer;ZZ)I tick
net/minecraft/server/MobSpawnerTrader net/minecraft/world/entity/npc/WanderingTraderSpawner
	a random
	b level
	c tickDelay
	d spawnDelay
	e spawnChance
	a ()V tick
	a (Lnet/minecraft/server/BlockPosition;)Z hasEnoughSpace
	a (Lnet/minecraft/server/BlockPosition;I)Lnet/minecraft/server/BlockPosition; findSpawnPositionNear
	a (Lnet/minecraft/server/EntityVillagerTrader;I)V tryToSpawnLlamaFor
	b ()Z spawn
net/minecraft/server/MojangStatisticsGenerator net/minecraft/world/Snooper
	a fixedData
	b dynamicData
	c token
	d url
	e populator
	f timer
	g lock
	h startupTime
	i started
	j count
	a ()V start
	a (Ljava/lang/String;Ljava/lang/Object;)V setDynamicData
	b ()V prepare
	b (Ljava/lang/String;Ljava/lang/Object;)V setFixedData
	c ()Ljava/util/Map; getValues
	d ()Z isStarted
	e ()V interrupt
	f ()Ljava/lang/String; getToken
	g ()J getStartupTime
	h ()V populateFixedData
	i ()V setJvmArgs
net/minecraft/server/MojangsonParser net/minecraft/nbt/TagParser
	a ERROR_TRAILING_DATA
	b ERROR_EXPECTED_KEY
	c ERROR_EXPECTED_VALUE
	d ERROR_INSERT_MIXED_LIST
	e ERROR_INSERT_MIXED_ARRAY
	f ERROR_INVALID_ARRAY
	g DOUBLE_PATTERN_NOSUFFIX
	h DOUBLE_PATTERN
	i FLOAT_PATTERN
	j BYTE_PATTERN
	k LONG_PATTERN
	l SHORT_PATTERN
	m INT_PATTERN
	n reader
	a ()Lnet/minecraft/server/NBTTagCompound; readSingleStruct
	a (C)V expect
	a (Lnet/minecraft/server/NBTTagType;Lnet/minecraft/server/NBTTagType;)Ljava/util/List; readArray
	b ()Ljava/lang/String; readKey
	c ()Lnet/minecraft/server/NBTBase; readTypedValue
	d ()Lnet/minecraft/server/NBTBase; readValue
	e ()Lnet/minecraft/server/NBTBase; readList
	f ()Lnet/minecraft/server/NBTTagCompound; readStruct
	g ()Lnet/minecraft/server/NBTBase; readListTag
	i ()Z hasElementSeparator
	parse (Ljava/lang/String;)Lnet/minecraft/server/NBTTagCompound; parseTag
	parseArray ()Lnet/minecraft/server/NBTBase; readArrayTag
	parseLiteral (Ljava/lang/String;)Lnet/minecraft/server/NBTBase; type
net/minecraft/server/MovingObjectPosition net/minecraft/world/phys/HitResult
	pos location
	a (Lnet/minecraft/server/Entity;)D distanceTo
	getPos ()Lnet/minecraft/server/Vec3D; getLocation
net/minecraft/server/MovingObjectPosition$EnumMovingObjectType net/minecraft/world/phys/HitResult$Type
	d $VALUES
net/minecraft/server/MovingObjectPositionBlock net/minecraft/world/phys/BlockHitResult
	b direction
	c blockPos
	d miss
	e inside
	a (Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/MovingObjectPositionBlock; withDirection
	a (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/MovingObjectPositionBlock; miss
	c ()Lnet/minecraft/server/MovingObjectPosition$EnumMovingObjectType; getType
	d ()Z isInside
	getBlockPosition ()Lnet/minecraft/server/BlockPosition; getBlockPos
net/minecraft/server/MovingObjectPositionEntity net/minecraft/world/phys/EntityHitResult
	b entity
	c ()Lnet/minecraft/server/MovingObjectPosition$EnumMovingObjectType; getType
net/minecraft/server/NBTBase net/minecraft/nbt/Tag
	d SYNTAX_HIGHLIGHTING_KEY
	e SYNTAX_HIGHLIGHTING_STRING
	f SYNTAX_HIGHLIGHTING_NUMBER
	g SYNTAX_HIGHLIGHTING_NUMBER_TYPE
	a (Ljava/lang/String;I)Lnet/minecraft/server/IChatBaseComponent; getPrettyDisplay
	asString ()Ljava/lang/String; getAsString
	b ()Lnet/minecraft/server/NBTTagType; getType
	b_ ()V stripEmptyChildren
	clone ()Lnet/minecraft/server/NBTBase; copy
	getTypeId ()B getId
	l ()Lnet/minecraft/server/IChatBaseComponent; getPrettyDisplay
net/minecraft/server/NBTCompressedStreamTools net/minecraft/nbt/NbtIo
	a (Ljava/io/DataInput;ILnet/minecraft/server/NBTReadLimiter;)Lnet/minecraft/server/NBTBase; readUnnamedTag
	a (Ljava/io/DataInput;Lnet/minecraft/server/NBTReadLimiter;)Lnet/minecraft/server/NBTTagCompound; read
	a (Ljava/io/DataInputStream;)Lnet/minecraft/server/NBTTagCompound; read
	a (Ljava/io/File;)Lnet/minecraft/server/NBTTagCompound; read
	a (Ljava/io/InputStream;)Lnet/minecraft/server/NBTTagCompound; readCompressed
	a (Lnet/minecraft/server/NBTBase;Ljava/io/DataOutput;)V writeUnnamedTag
	a (Lnet/minecraft/server/NBTTagCompound;Ljava/io/DataOutput;)V write
	a (Lnet/minecraft/server/NBTTagCompound;Ljava/io/File;)V safeWrite
	a (Lnet/minecraft/server/NBTTagCompound;Ljava/io/OutputStream;)V writeCompressed
	b (Lnet/minecraft/server/NBTTagCompound;Ljava/io/File;)V write
net/minecraft/server/NBTList net/minecraft/nbt/CollectionTag
	a (ILnet/minecraft/server/NBTBase;)Z setTag
	a_ ()I getElementType
	b (ILnet/minecraft/server/NBTBase;)Z addTag
	c (I)Lnet/minecraft/server/NBTBase; remove
	c (ILnet/minecraft/server/NBTBase;)V add
net/minecraft/server/NBTNumber net/minecraft/nbt/NumericTag
	asByte ()B getAsByte
	asDouble ()D getAsDouble
	asFloat ()F getAsFloat
	asInt ()I getAsInt
	asLong ()J getAsLong
	asShort ()S getAsShort
	k ()Ljava/lang/Number; getAsNumber
net/minecraft/server/NBTReadLimiter net/minecraft/nbt/NbtAccounter
	a UNLIMITED
	b quota
	c usage
	a (J)V accountBits
net/minecraft/server/NBTTagByte net/minecraft/nbt/ByteTag
	a TYPE
	b ZERO
	c ONE
	a ()B getId
	a (B)Lnet/minecraft/server/NBTTagByte; valueOf
	a (Ljava/io/DataOutput;)V write
	a (Ljava/lang/String;I)Lnet/minecraft/server/IChatBaseComponent; getPrettyDisplay
	a (Z)Lnet/minecraft/server/NBTTagByte; valueOf
	b ()Lnet/minecraft/server/NBTTagType; getType
	c ()Lnet/minecraft/server/NBTBase; copy
	d ()Lnet/minecraft/server/NBTTagByte; copy
	e ()J getAsLong
	f ()I getAsInt
	g ()S getAsShort
	h ()B getAsByte
	i ()D getAsDouble
	j ()F getAsFloat
	k ()Ljava/lang/Number; getAsNumber
net/minecraft/server/NBTTagByteArray net/minecraft/nbt/ByteArrayTag
	a TYPE
	a ()B getId
	a (I)Lnet/minecraft/server/NBTTagByte; get
	a (ILnet/minecraft/server/NBTBase;)Z setTag
	a (ILnet/minecraft/server/NBTTagByte;)Lnet/minecraft/server/NBTTagByte; set
	a (Ljava/io/DataOutput;)V write
	a (Ljava/lang/String;I)Lnet/minecraft/server/IChatBaseComponent; getPrettyDisplay
	a (Ljava/util/List;)[B toArray
	a_ ()I getElementType
	b ()Lnet/minecraft/server/NBTTagType; getType
	b (I)Lnet/minecraft/server/NBTTagByte; remove
	b (ILnet/minecraft/server/NBTBase;)Z addTag
	b (ILnet/minecraft/server/NBTTagByte;)V add
	c ()Lnet/minecraft/server/NBTBase; copy
	c (I)Lnet/minecraft/server/NBTBase; remove
	c (ILnet/minecraft/server/NBTBase;)V add
	d (ILnet/minecraft/server/NBTBase;)Lnet/minecraft/server/NBTBase; set
	getBytes ()[B getAsByteArray
net/minecraft/server/NBTTagCompound net/minecraft/nbt/CompoundTag
	a TYPE
	b LOGGER
	c SIMPLE_VALUE
	map tags
	a ()B getId
	a (Ljava/io/DataOutput;)V write
	a (Ljava/lang/String;)Ljava/util/UUID; getUUID
	a (Ljava/lang/String;I)Lnet/minecraft/server/IChatBaseComponent; getPrettyDisplay
	a (Ljava/lang/String;Ljava/util/List;)V putByteArray
	a (Ljava/lang/String;Ljava/util/UUID;)V putUUID
	a (Ljava/lang/String;Lnet/minecraft/server/NBTBase;Ljava/io/DataOutput;)V writeNamedTag
	a (Ljava/lang/String;Lnet/minecraft/server/NBTTagType;Ljava/lang/ClassCastException;)Lnet/minecraft/server/CrashReport; createReport
	a (Ljava/lang/String;[J)V putLongArray
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; merge
	b ()Lnet/minecraft/server/NBTTagType; getType
	b (Ljava/lang/String;)Z hasUUID
	b (Ljava/lang/String;Ljava/util/List;)V putIntArray
	b (Lnet/minecraft/server/NBTTagType;Ljava/lang/String;Ljava/io/DataInput;ILnet/minecraft/server/NBTReadLimiter;)Lnet/minecraft/server/NBTBase; readNamedTagData
	b_ ()V stripEmptyChildren
	c ()Lnet/minecraft/server/NBTBase; copy
	c (Ljava/io/DataInput;Lnet/minecraft/server/NBTReadLimiter;)B readNamedTagType
	c (Ljava/lang/String;)V removeUUID
	c (Ljava/lang/String;Ljava/util/List;)V putLongArray
	clone ()Lnet/minecraft/server/NBTTagCompound; copy
	d (Ljava/io/DataInput;Lnet/minecraft/server/NBTReadLimiter;)Ljava/lang/String; readNamedTagName
	e ()I size
	e (Ljava/lang/String;)B getTagType
	getKeys ()Ljava/util/Set; getAllKeys
	hasKey (Ljava/lang/String;)Z contains
	hasKeyOfType (Ljava/lang/String;I)Z contains
	set (Ljava/lang/String;Lnet/minecraft/server/NBTBase;)Lnet/minecraft/server/NBTBase; put
	setBoolean (Ljava/lang/String;Z)V putBoolean
	setByte (Ljava/lang/String;B)V putByte
	setByteArray (Ljava/lang/String;[B)V putByteArray
	setDouble (Ljava/lang/String;D)V putDouble
	setFloat (Ljava/lang/String;F)V putFloat
	setInt (Ljava/lang/String;I)V putInt
	setIntArray (Ljava/lang/String;[I)V putIntArray
	setLong (Ljava/lang/String;J)V putLong
	setShort (Ljava/lang/String;S)V putShort
	setString (Ljava/lang/String;Ljava/lang/String;)V putString
	t (Ljava/lang/String;)Ljava/lang/String; handleEscape
	u (Ljava/lang/String;)Lnet/minecraft/server/IChatBaseComponent; handleEscapePretty
net/minecraft/server/NBTTagDouble net/minecraft/nbt/DoubleTag
	a ZERO
	b TYPE
	a ()B getId
	a (D)Lnet/minecraft/server/NBTTagDouble; valueOf
	a (Ljava/io/DataOutput;)V write
	a (Ljava/lang/String;I)Lnet/minecraft/server/IChatBaseComponent; getPrettyDisplay
	b ()Lnet/minecraft/server/NBTTagType; getType
	c ()Lnet/minecraft/server/NBTBase; copy
	d ()Lnet/minecraft/server/NBTTagDouble; copy
	e ()J getAsLong
	f ()I getAsInt
	g ()S getAsShort
	h ()B getAsByte
	i ()D getAsDouble
	j ()F getAsFloat
	k ()Ljava/lang/Number; getAsNumber
net/minecraft/server/NBTTagEnd net/minecraft/nbt/EndTag
	a TYPE
	b INSTANCE
	a ()B getId
	a (Ljava/io/DataOutput;)V write
	a (Ljava/lang/String;I)Lnet/minecraft/server/IChatBaseComponent; getPrettyDisplay
	b ()Lnet/minecraft/server/NBTTagType; getType
	c ()Lnet/minecraft/server/NBTBase; copy
	d ()Lnet/minecraft/server/NBTTagEnd; copy
net/minecraft/server/NBTTagFloat net/minecraft/nbt/FloatTag
	a ZERO
	b TYPE
	a ()B getId
	a (F)Lnet/minecraft/server/NBTTagFloat; valueOf
	a (Ljava/io/DataOutput;)V write
	a (Ljava/lang/String;I)Lnet/minecraft/server/IChatBaseComponent; getPrettyDisplay
	b ()Lnet/minecraft/server/NBTTagType; getType
	c ()Lnet/minecraft/server/NBTBase; copy
	d ()Lnet/minecraft/server/NBTTagFloat; copy
	e ()J getAsLong
	f ()I getAsInt
	g ()S getAsShort
	h ()B getAsByte
	i ()D getAsDouble
	j ()F getAsFloat
	k ()Ljava/lang/Number; getAsNumber
net/minecraft/server/NBTTagInt net/minecraft/nbt/IntTag
	a TYPE
	a ()B getId
	a (I)Lnet/minecraft/server/NBTTagInt; valueOf
	a (Ljava/io/DataOutput;)V write
	a (Ljava/lang/String;I)Lnet/minecraft/server/IChatBaseComponent; getPrettyDisplay
	b ()Lnet/minecraft/server/NBTTagType; getType
	c ()Lnet/minecraft/server/NBTBase; copy
	d ()Lnet/minecraft/server/NBTTagInt; copy
	e ()J getAsLong
	f ()I getAsInt
	g ()S getAsShort
	h ()B getAsByte
	i ()D getAsDouble
	j ()F getAsFloat
	k ()Ljava/lang/Number; getAsNumber
net/minecraft/server/NBTTagIntArray net/minecraft/nbt/IntArrayTag
	a TYPE
	a ()B getId
	a (I)Lnet/minecraft/server/NBTTagInt; get
	a (ILnet/minecraft/server/NBTBase;)Z setTag
	a (ILnet/minecraft/server/NBTTagInt;)Lnet/minecraft/server/NBTTagInt; set
	a (Ljava/io/DataOutput;)V write
	a (Ljava/lang/String;I)Lnet/minecraft/server/IChatBaseComponent; getPrettyDisplay
	a (Ljava/util/List;)[I toArray
	a_ ()I getElementType
	b ()Lnet/minecraft/server/NBTTagType; getType
	b (I)Lnet/minecraft/server/NBTTagInt; remove
	b (ILnet/minecraft/server/NBTBase;)Z addTag
	b (ILnet/minecraft/server/NBTTagInt;)V add
	c ()Lnet/minecraft/server/NBTBase; copy
	c (I)Lnet/minecraft/server/NBTBase; remove
	c (ILnet/minecraft/server/NBTBase;)V add
	d ()Lnet/minecraft/server/NBTTagIntArray; copy
	d (ILnet/minecraft/server/NBTBase;)Lnet/minecraft/server/NBTBase; set
	getInts ()[I getAsIntArray
net/minecraft/server/NBTTagList net/minecraft/nbt/ListTag
	a TYPE
	b INLINE_ELEMENT_TYPES
	a ()B getId
	a (ILnet/minecraft/server/NBTBase;)Z setTag
	a (Ljava/io/DataOutput;)V write
	a (Ljava/lang/String;I)Lnet/minecraft/server/IChatBaseComponent; getPrettyDisplay
	a (Lnet/minecraft/server/NBTBase;)Z updateType
	a_ ()I getElementType
	b ()Lnet/minecraft/server/NBTTagType; getType
	b (I)Lnet/minecraft/server/NBTTagList; getList
	b (ILnet/minecraft/server/NBTBase;)Z addTag
	b_ ()V stripEmptyChildren
	c ()Lnet/minecraft/server/NBTBase; copy
	c (ILnet/minecraft/server/NBTBase;)V add
	d ()Lnet/minecraft/server/NBTTagList; copy
	d (I)S getShort
	d (ILnet/minecraft/server/NBTBase;)Lnet/minecraft/server/NBTBase; set
	e (I)I getInt
	f (I)[I getIntArray
	g ()V updateTypeAfterRemove
	g (I)[J getLongArray
	h (I)D getDouble
	i (I)F getFloat
	k (I)Lnet/minecraft/server/NBTBase; get
net/minecraft/server/NBTTagLong net/minecraft/nbt/LongTag
	a TYPE
	a ()B getId
	a (J)Lnet/minecraft/server/NBTTagLong; valueOf
	a (Ljava/io/DataOutput;)V write
	a (Ljava/lang/String;I)Lnet/minecraft/server/IChatBaseComponent; getPrettyDisplay
	b ()Lnet/minecraft/server/NBTTagType; getType
	c ()Lnet/minecraft/server/NBTBase; copy
	d ()Lnet/minecraft/server/NBTTagLong; copy
	e ()J getAsLong
	f ()I getAsInt
	g ()S getAsShort
	h ()B getAsByte
	i ()D getAsDouble
	j ()F getAsFloat
	k ()Ljava/lang/Number; getAsNumber
net/minecraft/server/NBTTagLongArray net/minecraft/nbt/LongArrayTag
	a TYPE
	b data
	a ()B getId
	a (I)Lnet/minecraft/server/NBTTagLong; get
	a (ILnet/minecraft/server/NBTBase;)Z setTag
	a (ILnet/minecraft/server/NBTTagLong;)Lnet/minecraft/server/NBTTagLong; set
	a (Ljava/io/DataOutput;)V write
	a (Ljava/lang/String;I)Lnet/minecraft/server/IChatBaseComponent; getPrettyDisplay
	a (Ljava/util/List;)[J toArray
	a_ ()I getElementType
	b ()Lnet/minecraft/server/NBTTagType; getType
	b (I)Lnet/minecraft/server/NBTTagLong; remove
	b (ILnet/minecraft/server/NBTBase;)Z addTag
	b (ILnet/minecraft/server/NBTTagLong;)V add
	c ()Lnet/minecraft/server/NBTBase; copy
	c (I)Lnet/minecraft/server/NBTBase; remove
	c (ILnet/minecraft/server/NBTBase;)V add
	d ()Lnet/minecraft/server/NBTTagLongArray; copy
	d (ILnet/minecraft/server/NBTBase;)Lnet/minecraft/server/NBTBase; set
	getLongs ()[J getAsLongArray
net/minecraft/server/NBTTagShort net/minecraft/nbt/ShortTag
	a TYPE
	a ()B getId
	a (Ljava/io/DataOutput;)V write
	a (Ljava/lang/String;I)Lnet/minecraft/server/IChatBaseComponent; getPrettyDisplay
	a (S)Lnet/minecraft/server/NBTTagShort; valueOf
	b ()Lnet/minecraft/server/NBTTagType; getType
	c ()Lnet/minecraft/server/NBTBase; copy
	d ()Lnet/minecraft/server/NBTTagShort; copy
	e ()J getAsLong
	f ()I getAsInt
	g ()S getAsShort
	h ()B getAsByte
	i ()D getAsDouble
	j ()F getAsFloat
	k ()Ljava/lang/Number; getAsNumber
net/minecraft/server/NBTTagString net/minecraft/nbt/StringTag
	a TYPE
	b EMPTY
	a ()B getId
	a (Ljava/io/DataOutput;)V write
	a (Ljava/lang/String;)Lnet/minecraft/server/NBTTagString; valueOf
	a (Ljava/lang/String;I)Lnet/minecraft/server/IChatBaseComponent; getPrettyDisplay
	b ()Lnet/minecraft/server/NBTTagType; getType
	b (Ljava/lang/String;)Ljava/lang/String; quoteAndEscape
	c ()Lnet/minecraft/server/NBTBase; copy
	c_ ()Ljava/lang/String; getAsString
	d ()Lnet/minecraft/server/NBTTagString; copy
net/minecraft/server/NBTTagType net/minecraft/nbt/TagType
	a ()Ljava/lang/String; getName
	a (I)Lnet/minecraft/server/NBTTagType; createInvalid
	b ()Ljava/lang/String; getPrettyName
	b (Ljava/io/DataInput;ILnet/minecraft/server/NBTReadLimiter;)Lnet/minecraft/server/NBTBase; load
	c ()Z isValue
net/minecraft/server/NBTTagTypes net/minecraft/nbt/TagTypes
	a TYPES
	a (I)Lnet/minecraft/server/NBTTagType; getType
net/minecraft/server/NPC net/minecraft/world/entity/npc/Npc
net/minecraft/server/NameReferencingFileConverter net/minecraft/server/players/OldUsersConverter
	a OLD_IPBANLIST
	b OLD_USERBANLIST
	c OLD_OPLIST
	d OLD_WHITELIST
	e LOGGER
	a (Ljava/io/File;Ljava/util/Map;)Ljava/util/List; readOldListFormat
	a (Lnet/minecraft/server/DedicatedServer;)Z convertPlayers
	a (Lnet/minecraft/server/MinecraftServer;)Z convertUserBanlist
	a (Lnet/minecraft/server/MinecraftServer;Ljava/lang/String;)Ljava/lang/String; convertMobOwnerIfNecessary
	a (Lnet/minecraft/server/MinecraftServer;Ljava/util/Collection;Lcom/mojang/authlib/ProfileLookupCallback;)V lookupPlayers
	b ()Z areOldUserlistsRemoved
	b (Ljava/io/File;)V ensureDirectoryExists
	b (Ljava/lang/String;Ljava/util/Date;)Ljava/util/Date; parseDate
	b (Lnet/minecraft/server/MinecraftServer;)Z convertIpBanlist
	c (Ljava/io/File;)V renameOldFile
	c (Lnet/minecraft/server/MinecraftServer;)Z convertOpsList
	d (Lnet/minecraft/server/MinecraftServer;)Z convertWhiteList
	e (Lnet/minecraft/server/MinecraftServer;)Z serverReadyAfterUserconversion
	f (Lnet/minecraft/server/MinecraftServer;)Z areOldPlayersConverted
	getPlayersFolder (Lnet/minecraft/server/MinecraftServer;)Ljava/io/File; getWorldPlayersDirectory
net/minecraft/server/NameReferencingFileConverter$FileConversionException net/minecraft/server/players/OldUsersConverter$ConversionError
net/minecraft/server/Navigation net/minecraft/world/entity/ai/navigation/GroundPathNavigation
	p avoidSun
	F_ ()V trimPath
	a ()Z canUpdatePath
	a (I)Lnet/minecraft/server/Pathfinder; createPathFinder
	a (IIIIIILnet/minecraft/server/Vec3D;DD)Z canWalkOn
	a (Lnet/minecraft/server/BlockPosition;I)Lnet/minecraft/server/PathEntity; createPath
	a (Lnet/minecraft/server/Entity;I)Lnet/minecraft/server/PathEntity; createPath
	a (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Vec3D;III)Z canMoveDirectly
	a (Z)V setCanOpenDoors
	b ()Lnet/minecraft/server/Vec3D; getTempMobPos
	b (IIIIIILnet/minecraft/server/Vec3D;DD)Z canWalkAbove
	b (Z)V setCanPassDoors
	c (Z)V setAvoidSun
	e ()Z canPassDoors
	f ()Z canOpenDoors
	t ()I getSurfaceY
net/minecraft/server/NavigationAbstract net/minecraft/world/entity/ai/navigation/PathNavigation
	a mob
	b level
	c path
	d speedModifier
	e tick
	f lastStuckCheck
	g lastStuckCheckPos
	h timeoutCachedNode
	i timeoutTimer
	j lastTimeoutCheck
	k timeoutLimit
	l maxDistanceToWaypoint
	m hasDelayedRecomputation
	n timeLastRecompute
	o nodeEvaluator
	p followRange
	q targetPos
	r reachRange
	s maxVisitedNodesMultiplier
	t pathFinder
	F_ ()V trimPath
	a ()Z canUpdatePath
	a (D)V setSpeedModifier
	a (DDDD)Z moveTo
	a (DDDI)Lnet/minecraft/server/PathEntity; createPath
	a (F)V setMaxVisitedNodesMultiplier
	a (I)Lnet/minecraft/server/Pathfinder; createPathFinder
	a (Ljava/util/Set;IZI)Lnet/minecraft/server/PathEntity; createPath
	a (Ljava/util/stream/Stream;I)Lnet/minecraft/server/PathEntity; createPath
	a (Lnet/minecraft/server/BlockPosition;)Z isStableDestination
	a (Lnet/minecraft/server/BlockPosition;I)Lnet/minecraft/server/PathEntity; createPath
	a (Lnet/minecraft/server/Entity;D)Z moveTo
	a (Lnet/minecraft/server/Entity;I)Lnet/minecraft/server/PathEntity; createPath
	a (Lnet/minecraft/server/PathEntity;D)Z moveTo
	a (Lnet/minecraft/server/Vec3D;)V doStuckDetection
	a (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Vec3D;III)Z canMoveDirectly
	b ()Lnet/minecraft/server/Vec3D; getTempMobPos
	b (Lnet/minecraft/server/BlockPosition;)V recomputePath
	c ()V tick
	d (Z)V setCanFloat
	g ()V resetMaxVisitedNodesMultiplier
	h ()Lnet/minecraft/server/BlockPosition; getTargetPos
	i ()Z hasDelayedRecomputation
	j ()V recomputePath
	k ()Lnet/minecraft/server/PathEntity; getPath
	l ()V updatePath
	m ()Z isDone
	n ()Z isInProgress
	o ()V stop
	p ()Z isInLiquid
	q ()Lnet/minecraft/server/PathfinderAbstract; getNodeEvaluator
	r ()Z canFloat
	s ()F getMaxDistanceToWaypoint
net/minecraft/server/NavigationFlying net/minecraft/world/entity/ai/navigation/FlyingPathNavigation
	a ()Z canUpdatePath
	a (I)Lnet/minecraft/server/Pathfinder; createPathFinder
	a (Lnet/minecraft/server/BlockPosition;)Z isStableDestination
	a (Lnet/minecraft/server/Entity;I)Lnet/minecraft/server/PathEntity; createPath
	a (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Vec3D;III)Z canMoveDirectly
	a (Z)V setCanOpenDoors
	b ()Lnet/minecraft/server/Vec3D; getTempMobPos
	b (Z)V setCanPassDoors
	c ()V tick
	d ()Z canPassDoors
	e ()Z canOpenDoors
net/minecraft/server/NavigationGuardian net/minecraft/world/entity/ai/navigation/WaterBoundPathNavigation
	p allowBreaching
	a ()Z canUpdatePath
	a (I)Lnet/minecraft/server/Pathfinder; createPathFinder
	a (Lnet/minecraft/server/BlockPosition;)Z isStableDestination
	a (Lnet/minecraft/server/Vec3D;)V doStuckDetection
	a (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Vec3D;III)Z canMoveDirectly
	b ()Lnet/minecraft/server/Vec3D; getTempMobPos
	c ()V tick
	d (Z)V setCanFloat
	l ()V updatePath
net/minecraft/server/NavigationSpider net/minecraft/world/entity/ai/navigation/WallClimberNavigation
	p pathToPosition
	a (Lnet/minecraft/server/BlockPosition;I)Lnet/minecraft/server/PathEntity; createPath
	a (Lnet/minecraft/server/Entity;D)Z moveTo
	a (Lnet/minecraft/server/Entity;I)Lnet/minecraft/server/PathEntity; createPath
	c ()V tick
net/minecraft/server/NetworkManager net/minecraft/network/Connection
	a ROOT_MARKER
	b PACKET_MARKER
	c ATTRIBUTE_PROTOCOL
	d NETWORK_WORKER_GROUP
	e NETWORK_EPOLL_WORKER_GROUP
	f LOCAL_WORKER_GROUP
	g LOGGER
	h receiving
	m disconnectedReason
	n encrypted
	o disconnectionHandled
	p receivedPackets
	packetQueue queue
	q sentPackets
	r averageReceivedPackets
	s averageSentPackets
	socketAddress address
	t tickCount
	u handlingFault
	a ()V tick
	a (Lio/netty/channel/ChannelHandlerContext;Lnet/minecraft/server/Packet;)V channelRead0
	a (Ljava/net/InetAddress;IZ)Lnet/minecraft/server/NetworkManager; connectToServer
	a (Ljava/net/SocketAddress;)Lnet/minecraft/server/NetworkManager; connectToLocalServer
	a (Ljavax/crypto/SecretKey;)V setEncryptionKey
	a (Lnet/minecraft/server/Packet;Lnet/minecraft/server/PacketListener;)V genericsFtw
	b (Lnet/minecraft/server/Packet;Lio/netty/util/concurrent/GenericFutureListener;)V sendPacket
	close (Lnet/minecraft/server/IChatBaseComponent;)V disconnect
	d ()Lnet/minecraft/server/EnumProtocolDirection; getReceiving
	e ()Lnet/minecraft/server/EnumProtocolDirection; getSending
	f ()Z isEncrypted
	getSocketAddress ()Ljava/net/SocketAddress; getRemoteAddress
	h ()Z isConnecting
	i ()Lnet/minecraft/server/PacketListener; getPacketListener
	isLocal ()Z isMemoryConnection
	j ()Lnet/minecraft/server/IChatBaseComponent; getDisconnectedReason
	m ()F getAverageReceivedPackets
	n ()F getAverageSentPackets
	o ()V flushQueue
	sendPacket (Lnet/minecraft/server/Packet;)V send
	sendPacket (Lnet/minecraft/server/Packet;Lio/netty/util/concurrent/GenericFutureListener;)V send
	setCompressionLevel (I)V setupCompression
	setPacketListener (Lnet/minecraft/server/PacketListener;)V setListener
	stopReading ()V setReadOnly
net/minecraft/server/NetworkManager$QueuedPacket net/minecraft/network/Connection$PacketHolder
	a packet
	b listener
net/minecraft/server/NewVillagePieces net/minecraft/world/level/levelgen/feature/VillagePieces
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/BlockPosition;Ljava/util/List;Lnet/minecraft/server/SeededRandom;Lnet/minecraft/server/WorldGenFeatureVillageConfiguration;)V addPieces
net/minecraft/server/NextTickListEntry net/minecraft/world/level/TickNextTickData
	a pos
	b delay
	c priority
	d counter
	e type
	f c
	a ()Ljava/util/Comparator; createTimeComparator
	b ()Ljava/lang/Object; getType
net/minecraft/server/NibbleArray net/minecraft/world/level/chunk/DataLayer
	a data
	a (I)Ljava/lang/String; layerToString
	a (II)V set
	a (III)I get
	a (IIII)V set
	asBytes ()[B getData
	b ()Lnet/minecraft/server/NibbleArray; copy
	b (I)I get
	b (III)I getIndex
	c ()Z isEmpty
	c (I)Z isFirst
	d (I)I getPosition
net/minecraft/server/NibbleArrayFlat net/minecraft/world/level/lighting/FlatDataLayer
	a ()[B getData
	b (III)I getIndex
net/minecraft/server/NoiseGenerator net/minecraft/world/level/levelgen/synth/SurfaceNoise
	a (DDDD)D getSurfaceNoiseValue
net/minecraft/server/NoiseGenerator3 net/minecraft/world/level/levelgen/synth/PerlinSimplexNoise
	a noiseLevels
	b highestFreqValueFactor
	c highestFreqInputFactor
	a (DDDD)D getSurfaceNoiseValue
	a (DDZ)D getValue
net/minecraft/server/NoiseGenerator3Handler net/minecraft/world/level/levelgen/synth/SimplexNoise
	a GRADIENT
	b xo
	c yo
	d zo
	e SQRT_3
	f F2
	g G2
	h p
	a (DD)D getValue
	a (DDD)D getValue
	a (I)I p
	a (IDDDD)D getCornerNoise3D
	a ([IDDD)D dot
net/minecraft/server/NoiseGeneratorOctaves net/minecraft/world/level/levelgen/synth/PerlinNoise
	a noiseLevels
	b highestFreqValueFactor
	c highestFreqInputFactor
	a (D)D wrap
	a (DDD)D getValue
	a (DDDD)D getSurfaceNoiseValue
	a (DDDDDZ)D getValue
	a (I)Lnet/minecraft/server/NoiseGeneratorPerlin; getOctaveNoise
net/minecraft/server/NoiseGeneratorPerlin net/minecraft/world/level/levelgen/synth/ImprovedNoise
	a xo
	b yo
	c zo
	d p
	a (DDDDD)D noise
	a (I)I p
	a (IDDD)D gradDot
	a (IIIDDDDDD)D sampleAndLerp
net/minecraft/server/NonNullList net/minecraft/core/NonNullList
	a list
	b defaultValue
	a ()Lnet/minecraft/server/NonNullList; create
	a (ILjava/lang/Object;)Lnet/minecraft/server/NonNullList; withSize
	a (Ljava/lang/Object;[Ljava/lang/Object;)Lnet/minecraft/server/NonNullList; of
net/minecraft/server/OldChunkLoader net/minecraft/world/level/chunk/storage/OldChunkStorage
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/OldChunkLoader$OldChunk; load
	a (Lnet/minecraft/server/OldChunkLoader$OldChunk;Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/WorldChunkManager;)V convertToAnvilFormat
net/minecraft/server/OldChunkLoader$OldChunk net/minecraft/world/level/chunk/storage/OldChunkStorage$OldLevelChunk
	a lastUpdated
	b terrainPopulated
	c heightmap
	d blockLight
	e skyLight
	f data
	g blocks
	h entities
	i blockEntities
	j blockTicks
	k x
	l z
net/minecraft/server/OldNibbleArray net/minecraft/world/level/chunk/OldDataLayer
	a data
	b depthBits
	c depthBitsPlusFour
	a ()Z isValid
	a (I)V setAll
	a (III)I get
	a (IIII)V set
net/minecraft/server/OpList net/minecraft/server/players/ServerOpList
	a ()[Ljava/lang/String; getUserList
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/JsonListEntry; createEntry
	a (Lcom/mojang/authlib/GameProfile;)I getOpLevel
	a (Ljava/lang/Object;)Ljava/lang/String; getKeyForUser
	a (Ljava/lang/String;)Lcom/mojang/authlib/GameProfile; find
	b (Lcom/mojang/authlib/GameProfile;)Z canBypassPlayerLimit
	c (Lcom/mojang/authlib/GameProfile;)Ljava/lang/String; getKeyForUser
net/minecraft/server/OpListEntry net/minecraft/server/players/ServerOpListEntry
	a level
	b bypassesPlayerLimit
	a ()I getLevel
	a (Lcom/google/gson/JsonObject;)V serialize
	b ()Z getBypassesPlayerLimit
	b (Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile; createGameProfile
net/minecraft/server/OperatorBoolean net/minecraft/world/phys/shapes/BooleanOp
net/minecraft/server/Packet net/minecraft/network/protocol/Packet
	a ()Z isSkippable
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/PacketCompressor net/minecraft/network/CompressionEncoder
	a encodeBuf
	b deflater
	c threshold
	a ()I getThreshold
	a (I)V setThreshold
	a (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V encode
net/minecraft/server/PacketDataSerializer net/minecraft/network/FriendlyByteBuf
	a source
	a ()[B readByteArray
	a (I)I getVarIntSize
	a (J)I getVarLongSize
	a (Ljava/lang/Class;)Ljava/lang/Enum; readEnum
	a (Ljava/lang/Enum;)Lnet/minecraft/server/PacketDataSerializer; writeEnum
	a (Ljava/lang/String;)Lnet/minecraft/server/PacketDataSerializer; writeUtf
	a (Ljava/lang/String;I)Lnet/minecraft/server/PacketDataSerializer; writeUtf
	a (Ljava/util/Collection;Ljava/util/function/BiConsumer;)V writeCollection
	a (Ljava/util/Date;)Lnet/minecraft/server/PacketDataSerializer; writeDate
	a (Ljava/util/UUID;)Lnet/minecraft/server/PacketDataSerializer; writeUUID
	a (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/PacketDataSerializer; writeBlockPos
	a (Lnet/minecraft/server/ChunkCoordIntPair;)Lnet/minecraft/server/PacketDataSerializer; writeChunkPos
	a (Lnet/minecraft/server/IChatBaseComponent;)Lnet/minecraft/server/PacketDataSerializer; writeComponent
	a (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/PacketDataSerializer; writeItem
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/PacketDataSerializer; writeResourceLocation
	a (Lnet/minecraft/server/MovingObjectPositionBlock;)V writeBlockHitResult
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/PacketDataSerializer; writeNbt
	a (Lnet/minecraft/server/SectionPosition;)Lnet/minecraft/server/PacketDataSerializer; writeSectionPos
	a ([B)Lnet/minecraft/server/PacketDataSerializer; writeByteArray
	a ([I)Lnet/minecraft/server/PacketDataSerializer; writeVarIntArray
	a ([J)Lnet/minecraft/server/PacketDataSerializer; writeLongArray
	a ([JI)[J readLongArray
	b ()[I readVarIntArray
	b (I)[B readByteArray
	b (J)Lnet/minecraft/server/PacketDataSerializer; writeVarLong
	b ([J)[J readLongArray
	c ()[J readLongArray
	c (I)[I readVarIntArray
	d ()[B accessByteBufWithCorrectSize
	d (I)Lnet/minecraft/server/PacketDataSerializer; writeVarInt
	e ()Lnet/minecraft/server/BlockPosition; readBlockPos
	e (I)Ljava/lang/String; readUtf
	f ()Lnet/minecraft/server/ChunkCoordIntPair; readChunkPos
	g ()Lnet/minecraft/server/SectionPosition; readSectionPos
	h ()Lnet/minecraft/server/IChatBaseComponent; readComponent
	i ()I readVarInt
	j ()J readVarLong
	k ()Ljava/util/UUID; readUUID
	l ()Lnet/minecraft/server/NBTTagCompound; readNbt
	m ()Lnet/minecraft/server/ItemStack; readItem
	n ()Ljava/lang/String; readUtf
	o ()Lnet/minecraft/server/MinecraftKey; readResourceLocation
	p ()Ljava/util/Date; readDate
	q ()Lnet/minecraft/server/MovingObjectPositionBlock; readBlockHitResult
net/minecraft/server/PacketDebug net/minecraft/network/protocol/game/DebugPackets
	a LOGGER
	a (JLnet/minecraft/server/BehaviorController;)Ljava/util/List; getMemoryDescriptions
	a (Ljava/lang/Object;)Ljava/lang/String; getShortDescription
	a (Lnet/minecraft/server/EntityBee;)V sendBeeInfo
	a (Lnet/minecraft/server/EntityLiving;)V sendEntityBrain
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/PacketDataSerializer;)V writeBrain
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/StructureStart;)V sendStructurePacket
	a (Lnet/minecraft/server/TileEntityBeehive;)V sendHiveInfo
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V sendNeighborsUpdatePacket
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityInsentient;Lnet/minecraft/server/PathEntity;F)V sendPathFindingPacket
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityInsentient;Lnet/minecraft/server/PathfinderGoalSelector;)V sendGoalSelector
	a (Lnet/minecraft/server/WorldServer;)V sendGameTestClearPacket
	a (Lnet/minecraft/server/WorldServer;Ljava/util/Collection;)V sendRaids
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;)V sendPoiAddedPacket
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;Ljava/lang/String;II)V sendGameTestAddMarker
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/ChunkCoordIntPair;)V sendPoiPacketsForChunk
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/MinecraftKey;)V sendPacketToAllPlayers
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;)V sendPoiRemovedPacket
	c (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;)V sendPoiTicketCountPacket
	d (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;)V sendVillageSectionsPacket
net/minecraft/server/PacketDecoder net/minecraft/network/PacketDecoder
	a LOGGER
	b MARKER
	c flow
net/minecraft/server/PacketDecompressor net/minecraft/network/CompressionDecoder
	a inflater
	b threshold
	a ()I getThreshold
	a (I)V setThreshold
net/minecraft/server/PacketDecrypter net/minecraft/network/CipherDecoder
	a cipher
	a (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Ljava/util/List;)V decode
net/minecraft/server/PacketEncoder net/minecraft/network/PacketEncoder
	a LOGGER
	b MARKER
	c flow
	a (Lio/netty/channel/ChannelHandlerContext;Lnet/minecraft/server/Packet;Lio/netty/buffer/ByteBuf;)V encode
net/minecraft/server/PacketEncrypter net/minecraft/network/CipherEncoder
	a cipher
	a (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V encode
net/minecraft/server/PacketEncryptionHandler net/minecraft/network/CipherBase
	a cipher
	b heapIn
	c heapOut
	a (Lio/netty/buffer/ByteBuf;)[B bufToByte
	a (Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V encipher
	a (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf; decipher
net/minecraft/server/PacketHandshakingInListener net/minecraft/network/protocol/handshake/ServerHandshakePacketListener
	a (Lnet/minecraft/server/PacketHandshakingInSetProtocol;)V handleIntention
net/minecraft/server/PacketHandshakingInSetProtocol net/minecraft/network/protocol/handshake/ClientIntentionPacket
	a protocolVersion
	d intention
	hostname hostName
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketHandshakingInListener;)V handle
	a (Lnet/minecraft/server/PacketListener;)V handle
	b ()Lnet/minecraft/server/EnumProtocol; getIntention
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getProtocolVersion
	d ()Ljava/lang/String; getHostName
	e ()I getPort
net/minecraft/server/PacketListener net/minecraft/network/PacketListener
	a ()Lnet/minecraft/server/NetworkManager; getConnection
	a (Lnet/minecraft/server/IChatBaseComponent;)V onDisconnect
net/minecraft/server/PacketListenerPlayIn net/minecraft/network/protocol/game/ServerGamePacketListener
	a (Lnet/minecraft/server/PacketPlayInAbilities;)V handlePlayerAbilities
	a (Lnet/minecraft/server/PacketPlayInAdvancements;)V handleSeenAdvancements
	a (Lnet/minecraft/server/PacketPlayInArmAnimation;)V handleAnimate
	a (Lnet/minecraft/server/PacketPlayInAutoRecipe;)V handlePlaceRecipe
	a (Lnet/minecraft/server/PacketPlayInBEdit;)V handleEditBook
	a (Lnet/minecraft/server/PacketPlayInBeacon;)V handleSetBeaconPacket
	a (Lnet/minecraft/server/PacketPlayInBlockDig;)V handlePlayerAction
	a (Lnet/minecraft/server/PacketPlayInBlockPlace;)V handleUseItem
	a (Lnet/minecraft/server/PacketPlayInBoatMove;)V handlePaddleBoat
	a (Lnet/minecraft/server/PacketPlayInChat;)V handleChat
	a (Lnet/minecraft/server/PacketPlayInClientCommand;)V handleClientCommand
	a (Lnet/minecraft/server/PacketPlayInCloseWindow;)V handleContainerClose
	a (Lnet/minecraft/server/PacketPlayInCustomPayload;)V handleCustomPayload
	a (Lnet/minecraft/server/PacketPlayInDifficultyChange;)V handleChangeDifficulty
	a (Lnet/minecraft/server/PacketPlayInDifficultyLock;)V handleLockDifficulty
	a (Lnet/minecraft/server/PacketPlayInEnchantItem;)V handleContainerButtonClick
	a (Lnet/minecraft/server/PacketPlayInEntityAction;)V handlePlayerCommand
	a (Lnet/minecraft/server/PacketPlayInEntityNBTQuery;)V handleEntityTagQuery
	a (Lnet/minecraft/server/PacketPlayInFlying;)V handleMovePlayer
	a (Lnet/minecraft/server/PacketPlayInHeldItemSlot;)V handleSetCarriedItem
	a (Lnet/minecraft/server/PacketPlayInItemName;)V handleRenameItem
	a (Lnet/minecraft/server/PacketPlayInKeepAlive;)V handleKeepAlive
	a (Lnet/minecraft/server/PacketPlayInPickItem;)V handlePickItem
	a (Lnet/minecraft/server/PacketPlayInRecipeDisplayed;)V handleRecipeBookUpdatePacket
	a (Lnet/minecraft/server/PacketPlayInResourcePackStatus;)V handleResourcePackResponse
	a (Lnet/minecraft/server/PacketPlayInSetCommandBlock;)V handleSetCommandBlock
	a (Lnet/minecraft/server/PacketPlayInSetCommandMinecart;)V handleSetCommandMinecart
	a (Lnet/minecraft/server/PacketPlayInSetCreativeSlot;)V handleSetCreativeModeSlot
	a (Lnet/minecraft/server/PacketPlayInSetJigsaw;)V handleSetJigsawBlock
	a (Lnet/minecraft/server/PacketPlayInSettings;)V handleClientInformation
	a (Lnet/minecraft/server/PacketPlayInSpectate;)V handleTeleportToEntityPacket
	a (Lnet/minecraft/server/PacketPlayInSteerVehicle;)V handlePlayerInput
	a (Lnet/minecraft/server/PacketPlayInStruct;)V handleSetStructureBlock
	a (Lnet/minecraft/server/PacketPlayInTabComplete;)V handleCustomCommandSuggestions
	a (Lnet/minecraft/server/PacketPlayInTeleportAccept;)V handleAcceptTeleportPacket
	a (Lnet/minecraft/server/PacketPlayInTileNBTQuery;)V handleBlockEntityTagQuery
	a (Lnet/minecraft/server/PacketPlayInTrSel;)V handleSelectTrade
	a (Lnet/minecraft/server/PacketPlayInTransaction;)V handleContainerAck
	a (Lnet/minecraft/server/PacketPlayInUpdateSign;)V handleSignUpdate
	a (Lnet/minecraft/server/PacketPlayInUseEntity;)V handleInteract
	a (Lnet/minecraft/server/PacketPlayInUseItem;)V handleUseItemOn
	a (Lnet/minecraft/server/PacketPlayInVehicleMove;)V handleMoveVehicle
	a (Lnet/minecraft/server/PacketPlayInWindowClick;)V handleContainerClick
net/minecraft/server/PacketListenerPlayOut net/minecraft/network/protocol/game/ClientGamePacketListener
	a (Lnet/minecraft/server/PacketPlayOutAbilities;)V handlePlayerAbilities
	a (Lnet/minecraft/server/PacketPlayOutAdvancements;)V handleUpdateAdvancementsPacket
	a (Lnet/minecraft/server/PacketPlayOutAnimation;)V handleAnimate
	a (Lnet/minecraft/server/PacketPlayOutAttachEntity;)V handleEntityLinkPacket
	a (Lnet/minecraft/server/PacketPlayOutAutoRecipe;)V handlePlaceRecipe
	a (Lnet/minecraft/server/PacketPlayOutBlockAction;)V handleBlockEvent
	a (Lnet/minecraft/server/PacketPlayOutBlockBreak;)V handleBlockBreakAck
	a (Lnet/minecraft/server/PacketPlayOutBlockBreakAnimation;)V handleBlockDestruction
	a (Lnet/minecraft/server/PacketPlayOutBlockChange;)V handleBlockUpdate
	a (Lnet/minecraft/server/PacketPlayOutBoss;)V handleBossUpdate
	a (Lnet/minecraft/server/PacketPlayOutCamera;)V handleSetCamera
	a (Lnet/minecraft/server/PacketPlayOutChat;)V handleChat
	a (Lnet/minecraft/server/PacketPlayOutCloseWindow;)V handleContainerClose
	a (Lnet/minecraft/server/PacketPlayOutCollect;)V handleTakeItemEntity
	a (Lnet/minecraft/server/PacketPlayOutCombatEvent;)V handlePlayerCombat
	a (Lnet/minecraft/server/PacketPlayOutCommands;)V handleCommands
	a (Lnet/minecraft/server/PacketPlayOutCustomPayload;)V handleCustomPayload
	a (Lnet/minecraft/server/PacketPlayOutCustomSoundEffect;)V handleCustomSoundEvent
	a (Lnet/minecraft/server/PacketPlayOutEntity;)V handleMoveEntity
	a (Lnet/minecraft/server/PacketPlayOutEntityDestroy;)V handleRemoveEntity
	a (Lnet/minecraft/server/PacketPlayOutEntityEffect;)V handleUpdateMobEffect
	a (Lnet/minecraft/server/PacketPlayOutEntityEquipment;)V handleSetEquippedItem
	a (Lnet/minecraft/server/PacketPlayOutEntityHeadRotation;)V handleRotateMob
	a (Lnet/minecraft/server/PacketPlayOutEntityMetadata;)V handleSetEntityData
	a (Lnet/minecraft/server/PacketPlayOutEntitySound;)V handleSoundEntityEvent
	a (Lnet/minecraft/server/PacketPlayOutEntityStatus;)V handleEntityEvent
	a (Lnet/minecraft/server/PacketPlayOutEntityTeleport;)V handleTeleportEntity
	a (Lnet/minecraft/server/PacketPlayOutEntityVelocity;)V handleSetEntityMotion
	a (Lnet/minecraft/server/PacketPlayOutExperience;)V handleSetExperience
	a (Lnet/minecraft/server/PacketPlayOutExplosion;)V handleExplosion
	a (Lnet/minecraft/server/PacketPlayOutGameStateChange;)V handleGameEvent
	a (Lnet/minecraft/server/PacketPlayOutHeldItemSlot;)V handleSetCarriedItem
	a (Lnet/minecraft/server/PacketPlayOutKeepAlive;)V handleKeepAlive
	a (Lnet/minecraft/server/PacketPlayOutKickDisconnect;)V handleDisconnect
	a (Lnet/minecraft/server/PacketPlayOutLightUpdate;)V handleLightUpdatePacked
	a (Lnet/minecraft/server/PacketPlayOutLogin;)V handleLogin
	a (Lnet/minecraft/server/PacketPlayOutLookAt;)V handleLookAt
	a (Lnet/minecraft/server/PacketPlayOutMap;)V handleMapItemData
	a (Lnet/minecraft/server/PacketPlayOutMapChunk;)V handleLevelChunk
	a (Lnet/minecraft/server/PacketPlayOutMount;)V handleSetEntityPassengersPacket
	a (Lnet/minecraft/server/PacketPlayOutMultiBlockChange;)V handleChunkBlocksUpdate
	a (Lnet/minecraft/server/PacketPlayOutNBTQuery;)V handleTagQueryPacket
	a (Lnet/minecraft/server/PacketPlayOutNamedEntitySpawn;)V handleAddPlayer
	a (Lnet/minecraft/server/PacketPlayOutNamedSoundEffect;)V handleSoundEvent
	a (Lnet/minecraft/server/PacketPlayOutOpenBook;)V handleOpenBook
	a (Lnet/minecraft/server/PacketPlayOutOpenSignEditor;)V handleOpenSignEditor
	a (Lnet/minecraft/server/PacketPlayOutOpenWindow;)V handleOpenScreen
	a (Lnet/minecraft/server/PacketPlayOutOpenWindowHorse;)V handleHorseScreenOpen
	a (Lnet/minecraft/server/PacketPlayOutOpenWindowMerchant;)V handleMerchantOffers
	a (Lnet/minecraft/server/PacketPlayOutPlayerInfo;)V handlePlayerInfo
	a (Lnet/minecraft/server/PacketPlayOutPlayerListHeaderFooter;)V handleTabListCustomisation
	a (Lnet/minecraft/server/PacketPlayOutPosition;)V handleMovePlayer
	a (Lnet/minecraft/server/PacketPlayOutRecipeUpdate;)V handleUpdateRecipes
	a (Lnet/minecraft/server/PacketPlayOutRecipes;)V handleAddOrRemoveRecipes
	a (Lnet/minecraft/server/PacketPlayOutRemoveEntityEffect;)V handleRemoveMobEffect
	a (Lnet/minecraft/server/PacketPlayOutResourcePackSend;)V handleResourcePack
	a (Lnet/minecraft/server/PacketPlayOutRespawn;)V handleRespawn
	a (Lnet/minecraft/server/PacketPlayOutScoreboardDisplayObjective;)V handleSetDisplayObjective
	a (Lnet/minecraft/server/PacketPlayOutScoreboardObjective;)V handleAddObjective
	a (Lnet/minecraft/server/PacketPlayOutScoreboardScore;)V handleSetScore
	a (Lnet/minecraft/server/PacketPlayOutScoreboardTeam;)V handleSetPlayerTeamPacket
	a (Lnet/minecraft/server/PacketPlayOutSelectAdvancementTab;)V handleSelectAdvancementsTab
	a (Lnet/minecraft/server/PacketPlayOutServerDifficulty;)V handleChangeDifficulty
	a (Lnet/minecraft/server/PacketPlayOutSetCooldown;)V handleItemCooldown
	a (Lnet/minecraft/server/PacketPlayOutSetSlot;)V handleContainerSetSlot
	a (Lnet/minecraft/server/PacketPlayOutSpawnEntity;)V handleAddEntity
	a (Lnet/minecraft/server/PacketPlayOutSpawnEntityExperienceOrb;)V handleAddExperienceOrb
	a (Lnet/minecraft/server/PacketPlayOutSpawnEntityLiving;)V handleAddMob
	a (Lnet/minecraft/server/PacketPlayOutSpawnEntityPainting;)V handleAddPainting
	a (Lnet/minecraft/server/PacketPlayOutSpawnEntityWeather;)V handleAddGlobalEntity
	a (Lnet/minecraft/server/PacketPlayOutSpawnPosition;)V handleSetSpawn
	a (Lnet/minecraft/server/PacketPlayOutStatistic;)V handleAwardStats
	a (Lnet/minecraft/server/PacketPlayOutStopSound;)V handleStopSoundEvent
	a (Lnet/minecraft/server/PacketPlayOutTabComplete;)V handleCommandSuggestions
	a (Lnet/minecraft/server/PacketPlayOutTags;)V handleUpdateTags
	a (Lnet/minecraft/server/PacketPlayOutTileEntityData;)V handleBlockEntityData
	a (Lnet/minecraft/server/PacketPlayOutTitle;)V handleSetTitles
	a (Lnet/minecraft/server/PacketPlayOutTransaction;)V handleContainerAck
	a (Lnet/minecraft/server/PacketPlayOutUnloadChunk;)V handleForgetLevelChunk
	a (Lnet/minecraft/server/PacketPlayOutUpdateAttributes;)V handleUpdateAttributes
	a (Lnet/minecraft/server/PacketPlayOutUpdateHealth;)V handleSetHealth
	a (Lnet/minecraft/server/PacketPlayOutUpdateTime;)V handleSetTime
	a (Lnet/minecraft/server/PacketPlayOutVehicleMove;)V handleMoveVehicle
	a (Lnet/minecraft/server/PacketPlayOutViewCentre;)V handleSetChunkCacheCenter
	a (Lnet/minecraft/server/PacketPlayOutViewDistance;)V handleSetChunkCacheRadius
	a (Lnet/minecraft/server/PacketPlayOutWindowData;)V handleContainerSetData
	a (Lnet/minecraft/server/PacketPlayOutWindowItems;)V handleContainerContent
	a (Lnet/minecraft/server/PacketPlayOutWorldBorder;)V handleSetBorder
	a (Lnet/minecraft/server/PacketPlayOutWorldEvent;)V handleLevelEvent
	a (Lnet/minecraft/server/PacketPlayOutWorldParticles;)V handleParticleEvent
net/minecraft/server/PacketLoginInCustomPayload net/minecraft/network/protocol/login/ServerboundCustomQueryPacket
	a transactionId
	b data
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketLoginInListener;)V handle
	b ()I getTransactionId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/PacketDataSerializer; getData
net/minecraft/server/PacketLoginInEncryptionBegin net/minecraft/network/protocol/login/ServerboundKeyPacket
	a keybytes
	b nonce
	a (Ljava/security/PrivateKey;)Ljavax/crypto/SecretKey; getSecretKey
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketLoginInListener;)V handle
	b (Ljava/security/PrivateKey;)[B getNonce
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/PacketLoginInListener net/minecraft/network/protocol/login/ServerLoginPacketListener
	a (Lnet/minecraft/server/PacketLoginInCustomPayload;)V handleCustomQueryPacket
	a (Lnet/minecraft/server/PacketLoginInEncryptionBegin;)V handleKey
	a (Lnet/minecraft/server/PacketLoginInStart;)V handleHello
net/minecraft/server/PacketLoginInStart net/minecraft/network/protocol/login/ServerboundHelloPacket
	a gameProfile
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketLoginInListener;)V handle
	b ()Lcom/mojang/authlib/GameProfile; getGameProfile
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/PacketLoginOutCustomPayload net/minecraft/network/protocol/login/ClientboundCustomQueryPacket
	a transactionId
	b identifier
	c data
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketLoginOutListener;)V handle
	b ()I getTransactionId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/MinecraftKey; getIdentifier
	d ()Lnet/minecraft/server/PacketDataSerializer; getData
net/minecraft/server/PacketLoginOutDisconnect net/minecraft/network/protocol/login/ClientboundLoginDisconnectPacket
	a reason
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketLoginOutListener;)V handle
	b ()Lnet/minecraft/server/IChatBaseComponent; getReason
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/PacketLoginOutEncryptionBegin net/minecraft/network/protocol/login/ClientboundHelloPacket
	a serverId
	b publicKey
	c nonce
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketLoginOutListener;)V handle
	b ()Ljava/lang/String; getServerId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Ljava/security/PublicKey; getPublicKey
	d ()[B getNonce
net/minecraft/server/PacketLoginOutListener net/minecraft/network/protocol/login/ClientLoginPacketListener
	a (Lnet/minecraft/server/PacketLoginOutCustomPayload;)V handleCustomQuery
	a (Lnet/minecraft/server/PacketLoginOutDisconnect;)V handleDisconnect
	a (Lnet/minecraft/server/PacketLoginOutEncryptionBegin;)V handleHello
	a (Lnet/minecraft/server/PacketLoginOutSetCompression;)V handleCompression
	a (Lnet/minecraft/server/PacketLoginOutSuccess;)V handleGameProfile
net/minecraft/server/PacketLoginOutSetCompression net/minecraft/network/protocol/login/ClientboundLoginCompressionPacket
	a compressionThreshold
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketLoginOutListener;)V handle
	b ()I getCompressionThreshold
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/PacketLoginOutSuccess net/minecraft/network/protocol/login/ClientboundGameProfilePacket
	a gameProfile
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketLoginOutListener;)V handle
	b ()Lcom/mojang/authlib/GameProfile; getGameProfile
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/PacketPlayInAbilities net/minecraft/network/protocol/game/ServerboundPlayerAbilitiesPacket
	a invulnerable
	b isFlying
	c canFly
	d instabuild
	e flyingSpeed
	f walkingSpeed
	a (F)V setFlyingSpeed
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	a (Z)V setInvulnerable
	b ()Z isInvulnerable
	b (F)V setWalkingSpeed
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	b (Z)V setFlying
	c (Z)V setCanFly
	d ()Z canFly
	d (Z)V setInstabuild
	e ()Z canInstabuild
	f ()F getFlyingSpeed
	g ()F getWalkingSpeed
net/minecraft/server/PacketPlayInAdvancements net/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket
	a action
	b tab
	a (Lnet/minecraft/server/Advancement;)Lnet/minecraft/server/PacketPlayInAdvancements; openedTab
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()Lnet/minecraft/server/PacketPlayInAdvancements; closedScreen
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/PacketPlayInAdvancements$Status; getAction
	d ()Lnet/minecraft/server/MinecraftKey; getTab
net/minecraft/server/PacketPlayInAdvancements$Status net/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket$Action
	c $VALUES
net/minecraft/server/PacketPlayInArmAnimation net/minecraft/network/protocol/game/ServerboundSwingPacket
	a hand
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()Lnet/minecraft/server/EnumHand; getHand
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/PacketPlayInAutoRecipe net/minecraft/network/protocol/game/ServerboundPlaceRecipePacket
	a containerId
	b recipe
	c shiftDown
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()I getContainerId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/MinecraftKey; getRecipe
	d ()Z isShiftDown
net/minecraft/server/PacketPlayInBEdit net/minecraft/network/protocol/game/ServerboundEditBookPacket
	a book
	b signing
	c hand
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()Lnet/minecraft/server/ItemStack; getBook
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Z isSigning
	d ()Lnet/minecraft/server/EnumHand; getHand
net/minecraft/server/PacketPlayInBeacon net/minecraft/network/protocol/game/ServerboundSetBeaconPacket
	a primary
	b secondary
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()I getPrimary
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getSecondary
net/minecraft/server/PacketPlayInBlockDig net/minecraft/network/protocol/game/ServerboundPlayerActionPacket
	a pos
	b direction
	c action
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()Lnet/minecraft/server/BlockPosition; getPos
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/EnumDirection; getDirection
	d ()Lnet/minecraft/server/PacketPlayInBlockDig$EnumPlayerDigType; getAction
net/minecraft/server/PacketPlayInBlockDig$EnumPlayerDigType net/minecraft/network/protocol/game/ServerboundPlayerActionPacket$Action
	h $VALUES
net/minecraft/server/PacketPlayInBlockPlace net/minecraft/network/protocol/game/ServerboundUseItemPacket
	a hand
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()Lnet/minecraft/server/EnumHand; getHand
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/PacketPlayInBoatMove net/minecraft/network/protocol/game/ServerboundPaddleBoatPacket
	a left
	b right
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()Z getLeft
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Z getRight
net/minecraft/server/PacketPlayInChat net/minecraft/network/protocol/game/ServerboundChatPacket
	a message
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()Ljava/lang/String; getMessage
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/PacketPlayInClientCommand net/minecraft/network/protocol/game/ServerboundClientCommandPacket
	a action
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()Lnet/minecraft/server/PacketPlayInClientCommand$EnumClientCommand; getAction
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/PacketPlayInClientCommand$EnumClientCommand net/minecraft/network/protocol/game/ServerboundClientCommandPacket$Action
	c $VALUES
net/minecraft/server/PacketPlayInCloseWindow net/minecraft/network/protocol/game/ServerboundContainerClosePacket
	id containerId
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()I getContainerId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/PacketPlayInCustomPayload net/minecraft/network/protocol/game/ServerboundCustomPayloadPacket
	a BRAND
	tag identifier
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()Lnet/minecraft/server/MinecraftKey; getIdentifier
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/PacketDataSerializer; getData
net/minecraft/server/PacketPlayInDifficultyChange net/minecraft/network/protocol/game/ServerboundChangeDifficultyPacket
	a difficulty
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()Lnet/minecraft/server/EnumDifficulty; getDifficulty
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/PacketPlayInDifficultyLock net/minecraft/network/protocol/game/ServerboundLockDifficultyPacket
	a locked
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()Z isLocked
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/PacketPlayInEnchantItem net/minecraft/network/protocol/game/ServerboundContainerButtonClickPacket
	a containerId
	b buttonId
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()I getContainerId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getButtonId
net/minecraft/server/PacketPlayInEntityAction net/minecraft/network/protocol/game/ServerboundPlayerCommandPacket
	a id
	animation action
	c data
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()I getId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/PacketPlayInEntityAction$EnumPlayerAction; getAction
	d ()I getData
net/minecraft/server/PacketPlayInEntityAction$EnumPlayerAction net/minecraft/network/protocol/game/ServerboundPlayerCommandPacket$Action
	j $VALUES
net/minecraft/server/PacketPlayInEntityNBTQuery net/minecraft/network/protocol/game/ServerboundEntityTagQuery
	a transactionId
	b entityId
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()I getTransactionId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getEntityId
net/minecraft/server/PacketPlayInFlying net/minecraft/network/protocol/game/ServerboundMovePlayerPacket
	f onGround
	hasLook hasRot
	pitch xRot
	yaw yRot
	a (D)D getX
	a (F)F getYRot
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	a (Z)V setHasPosition
	b ()Z isOnGround
	b (D)D getY
	b (F)F getXRot
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Z hasPosition
	c (D)D getZ
	d ()Z hasRotation
net/minecraft/server/PacketPlayInFlying$PacketPlayInLook net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$Rot
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/PacketPlayInFlying$PacketPlayInPosition net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$Pos
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/PacketPlayInFlying$PacketPlayInPositionLook net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$PosRot
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/PacketPlayInHeldItemSlot net/minecraft/network/protocol/game/ServerboundSetCarriedItemPacket
	itemInHandIndex slot
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()I getSlot
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/PacketPlayInItemName net/minecraft/network/protocol/game/ServerboundRenameItemPacket
	a name
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()Ljava/lang/String; getName
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/PacketPlayInKeepAlive net/minecraft/network/protocol/game/ServerboundKeepAlivePacket
	a id
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()J getId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/PacketPlayInPickItem net/minecraft/network/protocol/game/ServerboundPickItemPacket
	a slot
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()I getSlot
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/PacketPlayInRecipeDisplayed net/minecraft/network/protocol/game/ServerboundRecipeBookUpdatePacket
	a purpose
	b recipe
	c guiOpen
	d filteringCraftable
	e furnaceGuiOpen
	f furnaceFilteringCraftable
	g blastFurnaceGuiOpen
	h blastFurnaceFilteringCraftable
	i smokerGuiOpen
	j smokerFilteringCraftable
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()Lnet/minecraft/server/PacketPlayInRecipeDisplayed$Status; getPurpose
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/MinecraftKey; getRecipe
	d ()Z isGuiOpen
	e ()Z isFilteringCraftable
	f ()Z isFurnaceGuiOpen
	g ()Z isFurnaceFilteringCraftable
	h ()Z isBlastFurnaceGuiOpen
	i ()Z isBlastFurnaceFilteringCraftable
	j ()Z isSmokerGuiOpen
	k ()Z isSmokerFilteringCraftable
net/minecraft/server/PacketPlayInRecipeDisplayed$Status net/minecraft/network/protocol/game/ServerboundRecipeBookUpdatePacket$Purpose
	c $VALUES
net/minecraft/server/PacketPlayInResourcePackStatus net/minecraft/network/protocol/game/ServerboundResourcePackPacket
	status action
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()Lnet/minecraft/server/PacketPlayInResourcePackStatus$EnumResourcePackStatus; getAction
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/PacketPlayInResourcePackStatus$EnumResourcePackStatus net/minecraft/network/protocol/game/ServerboundResourcePackPacket$Action
	e $VALUES
net/minecraft/server/PacketPlayInSetCommandBlock net/minecraft/network/protocol/game/ServerboundSetCommandBlockPacket
	a pos
	b command
	c trackOutput
	d conditional
	e automatic
	f mode
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()Lnet/minecraft/server/BlockPosition; getPos
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Ljava/lang/String; getCommand
	d ()Z isTrackOutput
	e ()Z isConditional
	f ()Z isAutomatic
	g ()Lnet/minecraft/server/TileEntityCommand$Type; getMode
net/minecraft/server/PacketPlayInSetCommandMinecart net/minecraft/network/protocol/game/ServerboundSetCommandMinecartPacket
	a entity
	b command
	c trackOutput
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	a (Lnet/minecraft/server/World;)Lnet/minecraft/server/CommandBlockListenerAbstract; getCommandBlock
	b ()Ljava/lang/String; getCommand
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Z isTrackOutput
net/minecraft/server/PacketPlayInSetCreativeSlot net/minecraft/network/protocol/game/ServerboundSetCreativeModeSlotPacket
	b itemStack
	slot slotNum
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()I getSlotNum
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	getItemStack ()Lnet/minecraft/server/ItemStack; getItem
net/minecraft/server/PacketPlayInSetJigsaw net/minecraft/network/protocol/game/ServerboundSetJigsawBlockPacket
	a pos
	b attachementType
	c targetPool
	d finalState
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()Lnet/minecraft/server/BlockPosition; getPos
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/MinecraftKey; getTargetPool
	d ()Lnet/minecraft/server/MinecraftKey; getAttachementType
	e ()Ljava/lang/String; getFinalState
net/minecraft/server/PacketPlayInSettings net/minecraft/network/protocol/game/ServerboundClientInformationPacket
	a language
	c chatVisibility
	d chatColors
	e modelCustomisation
	f mainHand
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()Ljava/lang/String; getLanguage
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getViewDistance
	d ()Lnet/minecraft/server/EnumChatVisibility; getChatVisibility
	e ()Z getChatColors
	f ()I getModelCustomisation
net/minecraft/server/PacketPlayInSpectate net/minecraft/network/protocol/game/ServerboundTeleportToEntityPacket
	a uuid
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	a (Lnet/minecraft/server/WorldServer;)Lnet/minecraft/server/Entity; getEntity
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/PacketPlayInSteerVehicle net/minecraft/network/protocol/game/ServerboundPlayerInputPacket
	a xxa
	b zza
	c isJumping
	d isShiftKeyDown
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()F getXxa
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()F getZza
	d ()Z isJumping
	e ()Z isShiftKeyDown
net/minecraft/server/PacketPlayInStruct net/minecraft/network/protocol/game/ServerboundSetStructureBlockPacket
	a pos
	b updateType
	c mode
	d name
	e offset
	f size
	g mirror
	h rotation
	i data
	j ignoreEntities
	k showAir
	l showBoundingBox
	m integrity
	n seed
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()Lnet/minecraft/server/BlockPosition; getPos
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/TileEntityStructure$UpdateType; getUpdateType
	d ()Lnet/minecraft/server/BlockPropertyStructureMode; getMode
	e ()Ljava/lang/String; getName
	f ()Lnet/minecraft/server/BlockPosition; getOffset
	g ()Lnet/minecraft/server/BlockPosition; getSize
	h ()Lnet/minecraft/server/EnumBlockMirror; getMirror
	i ()Lnet/minecraft/server/EnumBlockRotation; getRotation
	j ()Ljava/lang/String; getData
	k ()Z isIgnoreEntities
	l ()Z isShowAir
	m ()Z isShowBoundingBox
	n ()F getIntegrity
	o ()J getSeed
net/minecraft/server/PacketPlayInTabComplete net/minecraft/network/protocol/game/ServerboundCommandSuggestionPacket
	a id
	b command
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()I getId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Ljava/lang/String; getCommand
net/minecraft/server/PacketPlayInTeleportAccept net/minecraft/network/protocol/game/ServerboundAcceptTeleportationPacket
	a id
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()I getId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/PacketPlayInTileNBTQuery net/minecraft/network/protocol/game/ServerboundBlockEntityTagQuery
	a transactionId
	b pos
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()I getTransactionId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/BlockPosition; getPos
net/minecraft/server/PacketPlayInTrSel net/minecraft/network/protocol/game/ServerboundSelectTradePacket
	a item
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()I getItem
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/PacketPlayInTransaction net/minecraft/network/protocol/game/ServerboundContainerAckPacket
	a containerId
	b uid
	c accepted
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()I getContainerId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()S getUid
	d ()Z isAccepted
net/minecraft/server/PacketPlayInUpdateSign net/minecraft/network/protocol/game/ServerboundSignUpdatePacket
	a pos
	b lines
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()Lnet/minecraft/server/BlockPosition; getPos
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()[Ljava/lang/String; getLines
net/minecraft/server/PacketPlayInUseEntity net/minecraft/network/protocol/game/ServerboundInteractPacket
	a entityId
	c location
	d hand
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	a (Lnet/minecraft/server/World;)Lnet/minecraft/server/Entity; getTarget
	b ()Lnet/minecraft/server/PacketPlayInUseEntity$EnumEntityUseAction; getAction
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/EnumHand; getHand
	d ()Lnet/minecraft/server/Vec3D; getLocation
net/minecraft/server/PacketPlayInUseEntity$EnumEntityUseAction net/minecraft/network/protocol/game/ServerboundInteractPacket$Action
	d $VALUES
net/minecraft/server/PacketPlayInUseItem net/minecraft/network/protocol/game/ServerboundUseItemOnPacket
	a blockHit
	b hand
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()Lnet/minecraft/server/EnumHand; getHand
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/MovingObjectPositionBlock; getHitResult
net/minecraft/server/PacketPlayInVehicleMove net/minecraft/network/protocol/game/ServerboundMoveVehiclePacket
	a x
	b y
	c z
	d yRot
	e xRot
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	getPitch ()F getXRot
	getYaw ()F getYRot
net/minecraft/server/PacketPlayInWindowClick net/minecraft/network/protocol/game/ServerboundContainerClickPacket
	a containerId
	button buttonNum
	d uid
	item itemStack
	shift clickType
	slot slotNum
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayIn;)V handle
	b ()I getContainerId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getSlotNum
	d ()I getButtonNum
	e ()S getUid
	f ()Lnet/minecraft/server/ItemStack; getItem
	g ()Lnet/minecraft/server/InventoryClickType; getClickType
net/minecraft/server/PacketPlayOutAbilities net/minecraft/network/protocol/game/ClientboundPlayerAbilitiesPacket
	a invulnerable
	b isFlying
	c canFly
	d instabuild
	e flyingSpeed
	f walkingSpeed
	a (F)V setFlyingSpeed
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	a (Z)V setInvulnerable
	b ()Z isInvulnerable
	b (F)V setWalkingSpeed
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	b (Z)V setFlying
	c ()Z isFlying
	c (Z)V setCanFly
	d ()Z canFly
	d (Z)V setInstabuild
	e ()Z canInstabuild
	f ()F getFlyingSpeed
	g ()F getWalkingSpeed
net/minecraft/server/PacketPlayOutAdvancements net/minecraft/network/protocol/game/ClientboundUpdateAdvancementsPacket
	a reset
	b added
	c removed
	d progress
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Ljava/util/Map; getAdded
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Ljava/util/Set; getRemoved
	d ()Ljava/util/Map; getProgress
	e ()Z shouldReset
net/minecraft/server/PacketPlayOutAnimation net/minecraft/network/protocol/game/ClientboundAnimatePacket
	a id
	b action
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getAction
net/minecraft/server/PacketPlayOutAttachEntity net/minecraft/network/protocol/game/ClientboundSetEntityLinkPacket
	a sourceId
	b destId
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getSourceId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getDestId
net/minecraft/server/PacketPlayOutAutoRecipe net/minecraft/network/protocol/game/ClientboundPlaceGhostRecipePacket
	a containerId
	b recipe
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/MinecraftKey; getRecipe
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getContainerId
net/minecraft/server/PacketPlayOutBlockAction net/minecraft/network/protocol/game/ClientboundBlockEventPacket
	a pos
	b b0
	c b1
	d block
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/BlockPosition; getPos
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getB0
	d ()I getB1
	e ()Lnet/minecraft/server/Block; getBlock
net/minecraft/server/PacketPlayOutBlockBreak net/minecraft/network/protocol/game/ClientboundBlockBreakAckPacket
	a action
	b LOGGER
	c pos
	d state
	e allGood
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/IBlockData; getState
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/BlockPosition; getPos
	d ()Z allGood
	e ()Lnet/minecraft/server/PacketPlayInBlockDig$EnumPlayerDigType; action
net/minecraft/server/PacketPlayOutBlockBreakAnimation net/minecraft/network/protocol/game/ClientboundBlockDestructionPacket
	a id
	b pos
	c progress
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/BlockPosition; getPos
	d ()I getProgress
net/minecraft/server/PacketPlayOutBlockChange net/minecraft/network/protocol/game/ClientboundBlockUpdatePacket
	a pos
	block blockState
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/IBlockData; getBlockState
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/BlockPosition; getPos
net/minecraft/server/PacketPlayOutBoss net/minecraft/network/protocol/game/ClientboundBossEventPacket
	a id
	b operation
	c name
	d pct
	e color
	f overlay
	g darkenScreen
	h playMusic
	i createWorldFog
	a (I)V decodeProperties
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Ljava/util/UUID; getId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/PacketPlayOutBoss$Action; getOperation
	d ()Lnet/minecraft/server/IChatBaseComponent; getName
	e ()F getPercent
	f ()Lnet/minecraft/server/BossBattle$BarColor; getColor
	g ()Lnet/minecraft/server/BossBattle$BarStyle; getOverlay
	h ()Z shouldDarkenScreen
	i ()Z shouldPlayMusic
	j ()Z shouldCreateWorldFog
	k ()I encodeProperties
net/minecraft/server/PacketPlayOutBoss$Action net/minecraft/network/protocol/game/ClientboundBossEventPacket$Operation
	g $VALUES
net/minecraft/server/PacketPlayOutCamera net/minecraft/network/protocol/game/ClientboundSetCameraPacket
	a cameraId
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	a (Lnet/minecraft/server/World;)Lnet/minecraft/server/Entity; getEntity
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/PacketPlayOutChat net/minecraft/network/protocol/game/ClientboundChatPacket
	a message
	b type
	a ()Z isSkippable
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/IChatBaseComponent; getMessage
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Z isSystem
	d ()Lnet/minecraft/server/ChatMessageType; getType
net/minecraft/server/PacketPlayOutCloseWindow net/minecraft/network/protocol/game/ClientboundContainerClosePacket
	a containerId
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getContainerId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/PacketPlayOutCollect net/minecraft/network/protocol/game/ClientboundTakeItemEntityPacket
	a itemId
	b playerId
	c amount
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getItemId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getPlayerId
	d ()I getAmount
net/minecraft/server/PacketPlayOutCombatEvent net/minecraft/network/protocol/game/ClientboundPlayerCombatPacket
	a event
	b playerId
	c killerId
	d duration
	e message
	a ()Z isSkippable
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/PacketPlayOutCombatEvent$EnumCombatEventType net/minecraft/network/protocol/game/ClientboundPlayerCombatPacket$Event
	d $VALUES
net/minecraft/server/PacketPlayOutCommands net/minecraft/network/protocol/game/ClientboundCommandsPacket
	a root
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketDataSerializer;B)Lcom/mojang/brigadier/builder/ArgumentBuilder; createBuilder
	a (Lnet/minecraft/server/PacketDataSerializer;Lcom/mojang/brigadier/tree/CommandNode;Ljava/util/Map;)V writeNode
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lcom/mojang/brigadier/tree/RootCommandNode; getRoot
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c (Lnet/minecraft/server/PacketDataSerializer;)Lmp$a; readNode
net/minecraft/server/PacketPlayOutCustomPayload net/minecraft/network/protocol/game/ClientboundCustomPayloadPacket
	a BRAND
	b DEBUG_PATHFINDING_PACKET
	c DEBUG_NEIGHBORSUPDATE_PACKET
	d DEBUG_CAVES_PACKET
	e DEBUG_STRUCTURES_PACKET
	f DEBUG_WORLDGENATTEMPT_PACKET
	g DEBUG_POI_TICKET_COUNT_PACKET
	h DEBUG_POI_ADDED_PACKET
	i DEBUG_POI_REMOVED_PACKET
	j DEBUG_VILLAGE_SECTIONS
	k DEBUG_GOAL_SELECTOR
	l DEBUG_BRAIN
	m DEBUG_BEE
	n DEBUG_HIVE
	o DEBUG_GAME_TEST_ADD_MARKER
	p DEBUG_GAME_TEST_CLEAR
	q DEBUG_RAIDS
	r identifier
	s data
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/MinecraftKey; getIdentifier
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/PacketDataSerializer; getData
net/minecraft/server/PacketPlayOutCustomSoundEffect net/minecraft/network/protocol/game/ClientboundCustomSoundPacket
	a name
	b source
	c x
	d y
	e z
	f volume
	g pitch
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/MinecraftKey; getName
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/SoundCategory; getSource
	d ()D getX
	e ()D getY
	f ()D getZ
	g ()F getVolume
	h ()F getPitch
net/minecraft/server/PacketPlayOutEntity net/minecraft/network/protocol/game/ClientboundMoveEntityPacket
	a entityId
	b xa
	c ya
	d za
	e yRot
	f xRot
	g onGround
	h hasRot
	i hasPos
	a (D)J entityToPacket
	a (JJJ)Lnet/minecraft/server/Vec3D; packetToEntity
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	a (Lnet/minecraft/server/World;)Lnet/minecraft/server/Entity; getEntity
	b ()S getXa
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()S getYa
	d ()S getZa
	e ()B getyRot
	f ()B getxRot
	g ()Z hasRotation
	h ()Z hasPosition
	i ()Z isOnGround
net/minecraft/server/PacketPlayOutEntity$PacketPlayOutEntityLook net/minecraft/network/protocol/game/ClientboundMoveEntityPacket$Rot
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/PacketPlayOutEntity$PacketPlayOutRelEntityMove net/minecraft/network/protocol/game/ClientboundMoveEntityPacket$Pos
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/PacketPlayOutEntity$PacketPlayOutRelEntityMoveLook net/minecraft/network/protocol/game/ClientboundMoveEntityPacket$PosRot
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/PacketPlayOutEntityDestroy net/minecraft/network/protocol/game/ClientboundRemoveEntitiesPacket
	a entityIds
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()[I getEntityIds
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/PacketPlayOutEntityEffect net/minecraft/network/protocol/game/ClientboundUpdateMobEffectPacket
	a entityId
	b effectId
	c effectAmplifier
	d effectDurationTicks
	e flags
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Z isSuperLongDuration
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getEntityId
	d ()B getEffectId
	e ()B getEffectAmplifier
	f ()I getEffectDurationTicks
	g ()Z isEffectVisible
	h ()Z isEffectAmbient
	i ()Z effectShowsIcon
net/minecraft/server/PacketPlayOutEntityEquipment net/minecraft/network/protocol/game/ClientboundSetEquippedItemPacket
	a entity
	b slot
	c itemStack
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/ItemStack; getItem
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getEntity
	d ()Lnet/minecraft/server/EnumItemSlot; getSlot
net/minecraft/server/PacketPlayOutEntityHeadRotation net/minecraft/network/protocol/game/ClientboundRotateHeadPacket
	a entityId
	b yHeadRot
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	a (Lnet/minecraft/server/World;)Lnet/minecraft/server/Entity; getEntity
	b ()B getYHeadRot
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/PacketPlayOutEntityMetadata net/minecraft/network/protocol/game/ClientboundSetEntityDataPacket
	a id
	b packedItems
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Ljava/util/List; getUnpackedData
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getId
net/minecraft/server/PacketPlayOutEntitySound net/minecraft/network/protocol/game/ClientboundSoundEntityPacket
	a sound
	b source
	c id
	d volume
	e pitch
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/SoundEffect; getSound
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/SoundCategory; getSource
	d ()I getId
	e ()F getVolume
	f ()F getPitch
net/minecraft/server/PacketPlayOutEntityStatus net/minecraft/network/protocol/game/ClientboundEntityEventPacket
	a entityId
	b eventId
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	a (Lnet/minecraft/server/World;)Lnet/minecraft/server/Entity; getEntity
	b ()B getEventId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/PacketPlayOutEntityTeleport net/minecraft/network/protocol/game/ClientboundTeleportEntityPacket
	a id
	b x
	c y
	d z
	e yRot
	f xRot
	g onGround
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()D getX
	d ()D getY
	e ()D getZ
	f ()B getyRot
	g ()B getxRot
	h ()Z isOnGround
net/minecraft/server/PacketPlayOutEntityVelocity net/minecraft/network/protocol/game/ClientboundSetEntityMotionPacket
	a id
	b xa
	c ya
	d za
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getXa
	d ()I getYa
	e ()I getZa
net/minecraft/server/PacketPlayOutExperience net/minecraft/network/protocol/game/ClientboundSetExperiencePacket
	a experienceProgress
	b totalExperience
	c experienceLevel
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()F getExperienceProgress
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getTotalExperience
	d ()I getExperienceLevel
net/minecraft/server/PacketPlayOutExplosion net/minecraft/network/protocol/game/ClientboundExplodePacket
	a x
	b y
	c z
	d power
	e toBlow
	f knockbackX
	g knockbackY
	h knockbackZ
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()F getKnockbackX
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()F getKnockbackY
	d ()F getKnockbackZ
	e ()D getX
	f ()D getY
	g ()D getZ
	h ()F getPower
	i ()Ljava/util/List; getToBlow
net/minecraft/server/PacketPlayOutGameStateChange net/minecraft/network/protocol/game/ClientboundGameEventPacket
	a EVENT_LANGUAGE_ID
	b event
	c param
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getEvent
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()F getParam
net/minecraft/server/PacketPlayOutHeldItemSlot net/minecraft/network/protocol/game/ClientboundSetCarriedItemPacket
	a slot
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getSlot
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/PacketPlayOutKeepAlive net/minecraft/network/protocol/game/ClientboundKeepAlivePacket
	a id
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()J getId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/PacketPlayOutKickDisconnect net/minecraft/network/protocol/game/ClientboundDisconnectPacket
	a reason
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/IChatBaseComponent; getReason
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/PacketPlayOutLightUpdate net/minecraft/network/protocol/game/ClientboundLightUpdatePacket
	a x
	b z
	c skyYMask
	d blockYMask
	e emptySkyYMask
	f emptyBlockYMask
	g skyUpdates
	h blockUpdates
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getX
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getZ
	d ()I getSkyYMask
	e ()I getEmptySkyYMask
	f ()Ljava/util/List; getSkyUpdates
	g ()I getBlockYMask
	h ()I getEmptyBlockYMask
	i ()Ljava/util/List; getBlockUpdates
net/minecraft/server/PacketPlayOutLogin net/minecraft/network/protocol/game/ClientboundLoginPacket
	a playerId
	b seed
	c hardcore
	d gameType
	e dimension
	f maxPlayers
	g levelType
	h chunkRadius
	i reducedDebugInfo
	j showDeathScreen
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getPlayerId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()J getSeed
	d ()Z isHardcore
	e ()Lnet/minecraft/server/EnumGamemode; getGameType
	f ()Lnet/minecraft/server/DimensionManager; getDimension
	g ()I getMaxPlayers
	h ()Lnet/minecraft/server/WorldType; getLevelType
	i ()I getChunkRadius
	j ()Z isReducedDebugInfo
	k ()Z shouldShowDeathScreen
net/minecraft/server/PacketPlayOutLookAt net/minecraft/network/protocol/game/ClientboundPlayerLookAtPacket
	a x
	b y
	c z
	d entity
	e fromAnchor
	f toAnchor
	g atEntity
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	a (Lnet/minecraft/server/World;)Lnet/minecraft/server/Vec3D; getPosition
	b ()Lnet/minecraft/server/ArgumentAnchor$Anchor; getFromAnchor
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/PacketPlayOutMap net/minecraft/network/protocol/game/ClientboundMapItemDataPacket
	a mapId
	b scale
	c trackingPosition
	d locked
	e decorations
	f startX
	g startY
	h width
	i height
	j mapColors
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	a (Lnet/minecraft/server/WorldMap;)V applyToMap
	b ()I getMapId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()B getScale
net/minecraft/server/PacketPlayOutMapChunk net/minecraft/network/protocol/game/ClientboundLevelChunkPacket
	a x
	b z
	c availableSections
	d heightmaps
	e biomes
	f buffer
	g blockEntitiesTags
	h fullChunk
	a (Lnet/minecraft/server/Chunk;I)I calculateChunkSize
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/Chunk;I)I extractChunkData
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/PacketDataSerializer; getReadBuffer
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getX
	d ()I getZ
	e ()I getAvailableSections
	f ()Z isFullChunk
	g ()Lnet/minecraft/server/NBTTagCompound; getHeightmaps
	h ()Ljava/util/List; getBlockEntitiesTags
	i ()Lnet/minecraft/server/BiomeStorage; getBiomes
	j ()Lio/netty/buffer/ByteBuf; getWriteBuffer
net/minecraft/server/PacketPlayOutMount net/minecraft/network/protocol/game/ClientboundSetPassengersPacket
	a vehicle
	b passengers
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()[I getPassengers
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getVehicle
net/minecraft/server/PacketPlayOutMultiBlockChange net/minecraft/network/protocol/game/ClientboundChunkBlocksUpdatePacket
	a chunkPos
	b updates
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()[Lnet/minecraft/server/PacketPlayOutMultiBlockChange$MultiBlockChangeInfo; getUpdates
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/PacketPlayOutMultiBlockChange$MultiBlockChangeInfo net/minecraft/network/protocol/game/ClientboundChunkBlocksUpdatePacket$BlockUpdate
	b offset
	c block
	a ()Lnet/minecraft/server/BlockPosition; getPos
	b ()S getOffset
	c ()Lnet/minecraft/server/IBlockData; getBlock
net/minecraft/server/PacketPlayOutNBTQuery net/minecraft/network/protocol/game/ClientboundTagQueryPacket
	a transactionId
	b tag
	a ()Z isSkippable
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getTransactionId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/NBTTagCompound; getTag
net/minecraft/server/PacketPlayOutNamedEntitySpawn net/minecraft/network/protocol/game/ClientboundAddPlayerPacket
	a entityId
	b playerId
	c x
	d y
	e z
	f yRot
	g xRot
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getEntityId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Ljava/util/UUID; getPlayerId
	d ()D getX
	e ()D getY
	f ()D getZ
	g ()B getyRot
	h ()B getxRot
net/minecraft/server/PacketPlayOutNamedSoundEffect net/minecraft/network/protocol/game/ClientboundSoundPacket
	a sound
	b source
	c x
	d y
	e z
	f volume
	g pitch
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/SoundEffect; getSound
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/SoundCategory; getSource
	d ()D getX
	e ()D getY
	f ()D getZ
	g ()F getVolume
	h ()F getPitch
net/minecraft/server/PacketPlayOutOpenBook net/minecraft/network/protocol/game/ClientboundOpenBookPacket
	a hand
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/EnumHand; getHand
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/PacketPlayOutOpenSignEditor net/minecraft/network/protocol/game/ClientboundOpenSignEditorPacket
	a pos
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/BlockPosition; getPos
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/PacketPlayOutOpenWindow net/minecraft/network/protocol/game/ClientboundOpenScreenPacket
	a containerId
	b type
	c title
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getContainerId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/Containers; getType
	d ()Lnet/minecraft/server/IChatBaseComponent; getTitle
net/minecraft/server/PacketPlayOutOpenWindowHorse net/minecraft/network/protocol/game/ClientboundHorseScreenOpenPacket
	a containerId
	b size
	c entityId
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getContainerId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getSize
	d ()I getEntityId
net/minecraft/server/PacketPlayOutOpenWindowMerchant net/minecraft/network/protocol/game/ClientboundMerchantOffersPacket
	a containerId
	b offers
	c villagerLevel
	d villagerXp
	e showProgress
	f canRestock
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getContainerId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/MerchantRecipeList; getOffers
	d ()I getVillagerLevel
	e ()I getVillagerXp
	f ()Z showProgress
	g ()Z canRestock
net/minecraft/server/PacketPlayOutPlayerInfo net/minecraft/network/protocol/game/ClientboundPlayerInfoPacket
	a action
	b entries
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Ljava/util/List; getEntries
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/PacketPlayOutPlayerInfo$EnumPlayerInfoAction; getAction
net/minecraft/server/PacketPlayOutPlayerInfo$EnumPlayerInfoAction net/minecraft/network/protocol/game/ClientboundPlayerInfoPacket$Action
	f $VALUES
net/minecraft/server/PacketPlayOutPlayerInfo$PlayerInfoData net/minecraft/network/protocol/game/ClientboundPlayerInfoPacket$PlayerUpdate
	b latency
	c gameMode
	d profile
	e displayName
	a ()Lcom/mojang/authlib/GameProfile; getProfile
	b ()I getLatency
	c ()Lnet/minecraft/server/EnumGamemode; getGameMode
	d ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
net/minecraft/server/PacketPlayOutPlayerListHeaderFooter net/minecraft/network/protocol/game/ClientboundTabListPacket
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/IChatBaseComponent; getHeader
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/IChatBaseComponent; getFooter
net/minecraft/server/PacketPlayOutPosition net/minecraft/network/protocol/game/ClientboundPlayerPositionPacket
	a x
	b y
	c z
	d yRot
	e xRot
	f relativeArguments
	g id
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()D getX
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()D getY
	d ()D getZ
	e ()F getYRot
	f ()F getXRot
	g ()I getId
	h ()Ljava/util/Set; getRelativeArguments
net/minecraft/server/PacketPlayOutPosition$EnumPlayerTeleportFlags net/minecraft/network/protocol/game/ClientboundPlayerPositionPacket$RelativeArgument
	f bit
	g $VALUES
	a ()I getMask
	a (I)Ljava/util/Set; unpack
	a (Ljava/util/Set;)I pack
	b (I)Z isSet
net/minecraft/server/PacketPlayOutRecipeUpdate net/minecraft/network/protocol/game/ClientboundUpdateRecipesPacket
	a recipes
	a (Lnet/minecraft/server/IRecipe;Lnet/minecraft/server/PacketDataSerializer;)V toNetwork
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Ljava/util/List; getRecipes
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c (Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/IRecipe; fromNetwork
net/minecraft/server/PacketPlayOutRecipes net/minecraft/network/protocol/game/ClientboundRecipePacket
	a state
	b recipes
	c toHighlight
	d guiOpen
	e filteringCraftable
	f furnaceGuiOpen
	g furnaceFilteringCraftable
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Ljava/util/List; getRecipes
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Ljava/util/List; getHighlights
	d ()Z isGuiOpen
	e ()Z isFilteringCraftable
	f ()Z isFurnaceGuiOpen
	g ()Z isFurnaceFilteringCraftable
	h ()Lnet/minecraft/server/PacketPlayOutRecipes$Action; getState
net/minecraft/server/PacketPlayOutRecipes$Action net/minecraft/network/protocol/game/ClientboundRecipePacket$State
	d $VALUES
net/minecraft/server/PacketPlayOutRemoveEntityEffect net/minecraft/network/protocol/game/ClientboundRemoveMobEffectPacket
	a entityId
	b effect
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	a (Lnet/minecraft/server/World;)Lnet/minecraft/server/Entity; getEntity
	b ()Lnet/minecraft/server/MobEffectList; getEffect
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/PacketPlayOutResourcePackSend net/minecraft/network/protocol/game/ClientboundResourcePackPacket
	a url
	b hash
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Ljava/lang/String; getUrl
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Ljava/lang/String; getHash
net/minecraft/server/PacketPlayOutRespawn net/minecraft/network/protocol/game/ClientboundRespawnPacket
	a dimension
	b seed
	c playerGameType
	d levelType
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/DimensionManager; getDimension
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()J getSeed
	d ()Lnet/minecraft/server/EnumGamemode; getPlayerGameType
	e ()Lnet/minecraft/server/WorldType; getLevelType
net/minecraft/server/PacketPlayOutScoreboardDisplayObjective net/minecraft/network/protocol/game/ClientboundSetDisplayObjectivePacket
	a slot
	b objectiveName
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getSlot
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Ljava/lang/String; getObjectiveName
net/minecraft/server/PacketPlayOutScoreboardObjective net/minecraft/network/protocol/game/ClientboundSetObjectivePacket
	a objectiveName
	b displayName
	c renderType
	d method
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Ljava/lang/String; getObjectiveName
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
	d ()I getMethod
	e ()Lnet/minecraft/server/IScoreboardCriteria$EnumScoreboardHealthDisplay; getRenderType
net/minecraft/server/PacketPlayOutScoreboardScore net/minecraft/network/protocol/game/ClientboundSetScorePacket
	a owner
	b objectiveName
	c score
	d method
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Ljava/lang/String; getOwner
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Ljava/lang/String; getObjectiveName
	d ()I getScore
	e ()Lnet/minecraft/server/ScoreboardServer$Action; getMethod
net/minecraft/server/PacketPlayOutScoreboardTeam net/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket
	a name
	b displayName
	c playerPrefix
	d playerSuffix
	e nametagVisibility
	f collisionRule
	g color
	h players
	i method
	j options
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Ljava/lang/String; getName
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
	d ()Ljava/util/Collection; getPlayers
	e ()I getMethod
	f ()I getOptions
	g ()Lnet/minecraft/server/EnumChatFormat; getColor
	h ()Ljava/lang/String; getNametagVisibility
	i ()Ljava/lang/String; getCollisionRule
	j ()Lnet/minecraft/server/IChatBaseComponent; getPlayerPrefix
	k ()Lnet/minecraft/server/IChatBaseComponent; getPlayerSuffix
net/minecraft/server/PacketPlayOutSelectAdvancementTab net/minecraft/network/protocol/game/ClientboundSelectAdvancementsTabPacket
	a tab
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/MinecraftKey; getTab
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/PacketPlayOutServerDifficulty net/minecraft/network/protocol/game/ClientboundChangeDifficultyPacket
	a difficulty
	b locked
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Z isLocked
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/EnumDifficulty; getDifficulty
net/minecraft/server/PacketPlayOutSetCooldown net/minecraft/network/protocol/game/ClientboundCooldownPacket
	a item
	b duration
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/Item; getItem
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getDuration
net/minecraft/server/PacketPlayOutSetSlot net/minecraft/network/protocol/game/ClientboundContainerSetSlotPacket
	a containerId
	b slot
	c itemStack
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getContainerId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getSlot
	d ()Lnet/minecraft/server/ItemStack; getItem
net/minecraft/server/PacketPlayOutSpawnEntity net/minecraft/network/protocol/game/ClientboundAddEntityPacket
	a id
	b uuid
	c x
	d y
	e z
	f xa
	g ya
	h za
	i xRot
	j yRot
	k type
	l data
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Ljava/util/UUID; getUUID
	d ()D getX
	e ()D getY
	f ()D getZ
	g ()D getXa
	h ()D getYa
	i ()D getZa
	j ()I getxRot
	k ()I getyRot
	l ()Lnet/minecraft/server/EntityTypes; getType
	m ()I getData
net/minecraft/server/PacketPlayOutSpawnEntityExperienceOrb net/minecraft/network/protocol/game/ClientboundAddExperienceOrbPacket
	a id
	b x
	c y
	d z
	e value
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()D getX
	d ()D getY
	e ()D getZ
	f ()I getValue
net/minecraft/server/PacketPlayOutSpawnEntityLiving net/minecraft/network/protocol/game/ClientboundAddMobPacket
	a id
	b uuid
	c type
	d x
	e y
	f z
	g xd
	h yd
	i zd
	j yRot
	k xRot
	l yHeadRot
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Ljava/util/UUID; getUUID
	d ()I getType
	e ()D getX
	f ()D getY
	g ()D getZ
	h ()I getXd
	i ()I getYd
	j ()I getZd
	k ()B getyRot
	l ()B getxRot
	m ()B getyHeadRot
net/minecraft/server/PacketPlayOutSpawnEntityPainting net/minecraft/network/protocol/game/ClientboundAddPaintingPacket
	a id
	b uuid
	c pos
	d direction
	e motive
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Ljava/util/UUID; getUUID
	d ()Lnet/minecraft/server/BlockPosition; getPos
	e ()Lnet/minecraft/server/EnumDirection; getDirection
	f ()Lnet/minecraft/server/Paintings; getMotive
net/minecraft/server/PacketPlayOutSpawnEntityWeather net/minecraft/network/protocol/game/ClientboundAddGlobalEntityPacket
	a id
	b x
	c y
	d z
	e type
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()D getX
	d ()D getY
	e ()D getZ
	f ()I getType
net/minecraft/server/PacketPlayOutSpawnPosition net/minecraft/network/protocol/game/ClientboundSetSpawnPositionPacket
	position pos
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/BlockPosition; getPos
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/PacketPlayOutStatistic net/minecraft/network/protocol/game/ClientboundAwardStatsPacket
	a stats
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	a (Lnet/minecraft/server/Statistic;)I getId
	a (Lnet/minecraft/server/StatisticWrapper;Lnet/minecraft/server/PacketDataSerializer;)V readStat
	b ()Ljava/util/Map; getStats
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/PacketPlayOutStopSound net/minecraft/network/protocol/game/ClientboundStopSoundPacket
	a name
	b source
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/MinecraftKey; getName
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/SoundCategory; getSource
net/minecraft/server/PacketPlayOutTabComplete net/minecraft/network/protocol/game/ClientboundCommandSuggestionsPacket
	a id
	b suggestions
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lcom/mojang/brigadier/suggestion/Suggestions; getSuggestions
net/minecraft/server/PacketPlayOutTags net/minecraft/network/protocol/game/ClientboundUpdateTagsPacket
	a tags
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/TagRegistry; getTags
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/PacketPlayOutTileEntityData net/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket
	a pos
	b type
	c tag
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/BlockPosition; getPos
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getType
	d ()Lnet/minecraft/server/NBTTagCompound; getTag
net/minecraft/server/PacketPlayOutTitle net/minecraft/network/protocol/game/ClientboundSetTitlesPacket
	a type
	b text
	c fadeInTime
	d stayTime
	e fadeOutTime
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Lnet/minecraft/server/PacketPlayOutTitle$EnumTitleAction; getType
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Lnet/minecraft/server/IChatBaseComponent; getText
	d ()I getFadeInTime
	e ()I getStayTime
	f ()I getFadeOutTime
net/minecraft/server/PacketPlayOutTitle$EnumTitleAction net/minecraft/network/protocol/game/ClientboundSetTitlesPacket$Type
	g $VALUES
net/minecraft/server/PacketPlayOutTransaction net/minecraft/network/protocol/game/ClientboundContainerAckPacket
	a containerId
	b uid
	c accepted
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getContainerId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()S getUid
	d ()Z isAccepted
net/minecraft/server/PacketPlayOutUnloadChunk net/minecraft/network/protocol/game/ClientboundForgetLevelChunkPacket
	a x
	b z
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getX
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getZ
net/minecraft/server/PacketPlayOutUpdateAttributes net/minecraft/network/protocol/game/ClientboundUpdateAttributesPacket
	a entityId
	b attributes
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getEntityId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Ljava/util/List; getValues
net/minecraft/server/PacketPlayOutUpdateAttributes$AttributeSnapshot net/minecraft/network/protocol/game/ClientboundUpdateAttributesPacket$AttributeSnapshot
	b name
	c base
	d modifiers
	a ()Ljava/lang/String; getName
	b ()D getBase
	c ()Ljava/util/Collection; getModifiers
net/minecraft/server/PacketPlayOutUpdateHealth net/minecraft/network/protocol/game/ClientboundSetHealthPacket
	a health
	b food
	c saturation
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()F getHealth
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getFood
	d ()F getSaturation
net/minecraft/server/PacketPlayOutUpdateTime net/minecraft/network/protocol/game/ClientboundSetTimePacket
	a gameTime
	b dayTime
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()J getGameTime
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()J getDayTime
net/minecraft/server/PacketPlayOutVehicleMove net/minecraft/network/protocol/game/ClientboundMoveVehiclePacket
	a x
	b y
	c z
	d yRot
	e xRot
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()D getX
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()D getY
	d ()D getZ
	e ()F getYRot
	f ()F getXRot
net/minecraft/server/PacketPlayOutViewCentre net/minecraft/network/protocol/game/ClientboundSetChunkCacheCenterPacket
	a x
	b z
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getX
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getZ
net/minecraft/server/PacketPlayOutViewDistance net/minecraft/network/protocol/game/ClientboundSetChunkCacheRadiusPacket
	a radius
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getRadius
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/PacketPlayOutWindowData net/minecraft/network/protocol/game/ClientboundContainerSetDataPacket
	a containerId
	b id
	c value
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getContainerId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getId
	d ()I getValue
net/minecraft/server/PacketPlayOutWindowItems net/minecraft/network/protocol/game/ClientboundContainerSetContentPacket
	a containerId
	b items
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()I getContainerId
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()Ljava/util/List; getItems
net/minecraft/server/PacketPlayOutWorldBorder net/minecraft/network/protocol/game/ClientboundSetBorderPacket
	a type
	b newAbsoluteMaxSize
	c newCenterX
	d newCenterZ
	e newSize
	f oldSize
	g lerpTime
	h warningTime
	i warningBlocks
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	a (Lnet/minecraft/server/WorldBorder;)V applyChanges
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/PacketPlayOutWorldBorder$EnumWorldBorderAction net/minecraft/network/protocol/game/ClientboundSetBorderPacket$Type
	g $VALUES
net/minecraft/server/PacketPlayOutWorldEvent net/minecraft/network/protocol/game/ClientboundLevelEventPacket
	a type
	b pos
	c data
	d globalEvent
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Z isGlobalEvent
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()I getType
	d ()I getData
	e ()Lnet/minecraft/server/BlockPosition; getPos
net/minecraft/server/PacketPlayOutWorldParticles net/minecraft/network/protocol/game/ClientboundLevelParticlesPacket
	a x
	b y
	c z
	d xDist
	e yDist
	f zDist
	g maxSpeed
	h count
	i overrideLimiter
	j particle
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/Particle;)Lnet/minecraft/server/ParticleParam; readParticle
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketListenerPlayOut;)V handle
	b ()Z isOverrideLimiter
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
	c ()D getX
	d ()D getY
	e ()D getZ
	f ()F getXDist
	g ()F getYDist
	h ()F getZDist
	i ()F getMaxSpeed
	j ()I getCount
	k ()Lnet/minecraft/server/ParticleParam; getParticle
net/minecraft/server/PacketPrepender net/minecraft/network/Varint21LengthFieldPrepender
	a (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V encode
net/minecraft/server/PacketSplitter net/minecraft/network/Varint21FrameDecoder
net/minecraft/server/PacketStatusInListener net/minecraft/network/protocol/status/ServerStatusPacketListener
	a (Lnet/minecraft/server/PacketStatusInPing;)V handlePingRequest
	a (Lnet/minecraft/server/PacketStatusInStart;)V handleStatusRequest
net/minecraft/server/PacketStatusInPing net/minecraft/network/protocol/status/ServerboundPingRequestPacket
	a time
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketStatusInListener;)V handle
	b ()J getTime
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/PacketStatusInStart net/minecraft/network/protocol/status/ServerboundStatusRequestPacket
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketStatusInListener;)V handle
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/PacketStatusListener net/minecraft/server/network/ServerStatusPacketListenerImpl
	a DISCONNECT_REASON
	d hasRequestedStatus
	minecraftServer server
	networkManager connection
	a ()Lnet/minecraft/server/NetworkManager; getConnection
	a (Lnet/minecraft/server/IChatBaseComponent;)V onDisconnect
	a (Lnet/minecraft/server/PacketStatusInPing;)V handlePingRequest
	a (Lnet/minecraft/server/PacketStatusInStart;)V handleStatusRequest
net/minecraft/server/PacketStatusOutListener net/minecraft/network/protocol/status/ClientStatusPacketListener
	a (Lnet/minecraft/server/PacketStatusOutPong;)V handlePongResponse
	a (Lnet/minecraft/server/PacketStatusOutServerInfo;)V handleStatusResponse
net/minecraft/server/PacketStatusOutPong net/minecraft/network/protocol/status/ClientboundPongResponsePacket
	a time
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketStatusOutListener;)V handle
	b ()J getTime
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/PacketStatusOutServerInfo net/minecraft/network/protocol/status/ClientboundStatusResponsePacket
	a GSON
	b status
	a (Lnet/minecraft/server/PacketDataSerializer;)V read
	a (Lnet/minecraft/server/PacketListener;)V handle
	a (Lnet/minecraft/server/PacketStatusOutListener;)V handle
	b ()Lnet/minecraft/server/ServerPing; getStatus
	b (Lnet/minecraft/server/PacketDataSerializer;)V write
net/minecraft/server/Paintings net/minecraft/world/entity/decoration/Motive
	A width
	B height
	a KEBAB
	b AZTEC
	c ALBAN
	d AZTEC2
	e BOMB
	f PLANT
	g WASTELAND
	h POOL
	i COURBET
	j SEA
	k SUNSET
	l CREEBET
	m WANDERER
	n GRAHAM
	o MATCH
	p BUST
	q STAGE
	r VOID
	s SKULL_AND_ROSES
	t WITHER
	u FIGHTERS
	v POINTER
	w PIGSCENE
	x BURNING_SKULL
	y SKELETON
	z DONKEY_KONG
	a (Ljava/lang/String;II)Lnet/minecraft/server/Paintings; register
net/minecraft/server/PairedQueue net/minecraft/util/thread/StrictQueue
	a ()Ljava/lang/Object; pop
	a (Ljava/lang/Object;)Z push
	b ()Z isEmpty
net/minecraft/server/Particle net/minecraft/core/particles/ParticleType
	a overrideLimiter
	b deserializer
	c ()Z getOverrideLimiter
	d ()Lgt$a; getDeserializer
net/minecraft/server/ParticleParam net/minecraft/core/particles/ParticleOptions
	a ()Ljava/lang/String; writeToString
	a (Lnet/minecraft/server/PacketDataSerializer;)V writeToNetwork
	getParticle ()Lnet/minecraft/server/Particle; getType
net/minecraft/server/ParticleParamBlock net/minecraft/core/particles/BlockParticleOption
	a DESERIALIZER
	b type
	c state
	a ()Ljava/lang/String; writeToString
	a (Lnet/minecraft/server/PacketDataSerializer;)V writeToNetwork
	b ()Lnet/minecraft/server/Particle; getType
	c ()Lnet/minecraft/server/IBlockData; getState
net/minecraft/server/ParticleParamItem net/minecraft/core/particles/ItemParticleOption
	a DESERIALIZER
	b type
	c itemStack
	a ()Ljava/lang/String; writeToString
	a (Lnet/minecraft/server/PacketDataSerializer;)V writeToNetwork
	b ()Lnet/minecraft/server/Particle; getType
	c ()Lnet/minecraft/server/ItemStack; getItem
net/minecraft/server/ParticleParamRedstone net/minecraft/core/particles/DustParticleOptions
	a REDSTONE
	b DESERIALIZER
	c r
	d g
	e b
	f scale
	a ()Ljava/lang/String; writeToString
	a (Lnet/minecraft/server/PacketDataSerializer;)V writeToNetwork
	b ()Lnet/minecraft/server/Particle; getType
	c ()F getR
	d ()F getG
	e ()F getB
	f ()F getScale
net/minecraft/server/ParticleType net/minecraft/core/particles/SimpleParticleType
	a DESERIALIZER
	a ()Ljava/lang/String; writeToString
	a (Lnet/minecraft/server/PacketDataSerializer;)V writeToNetwork
	b ()Lnet/minecraft/server/Particle; getType
net/minecraft/server/Particles net/minecraft/core/particles/ParticleTypes
	a (Ljava/lang/String;Lgt$a;)Lnet/minecraft/server/Particle; register
	a (Ljava/lang/String;Z)Lnet/minecraft/server/ParticleType; register
net/minecraft/server/Path net/minecraft/world/level/pathfinder/BinaryHeap
	a heap
	b size
	a ()V clear
	a (I)V upHeap
	a (Lnet/minecraft/server/PathPoint;)Lnet/minecraft/server/PathPoint; insert
	a (Lnet/minecraft/server/PathPoint;F)V changeCost
	b ()Lnet/minecraft/server/PathPoint; peek
	b (I)V downHeap
	b (Lnet/minecraft/server/PathPoint;)V remove
	c ()Lnet/minecraft/server/PathPoint; pop
	d ()I size
	e ()Z isEmpty
	f ()[Lnet/minecraft/server/PathPoint; getHeap
net/minecraft/server/PathDestination net/minecraft/world/level/pathfinder/Target
	m bestHeuristic
	n bestNode
	o reached
	a (FLnet/minecraft/server/PathPoint;)V updateBest
	c (Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/PathDestination; createFromStream
	d ()Lnet/minecraft/server/PathPoint; getBestNode
	e ()V setReached
	f ()Z isReached
net/minecraft/server/PathEntity net/minecraft/world/level/pathfinder/Path
	a nodes
	b openSet
	c closedSet
	d targetNodes
	e index
	f target
	g distToTarget
	h reached
	a ()V next
	a (I)Lnet/minecraft/server/PathPoint; get
	a (ILnet/minecraft/server/PathPoint;)V set
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/Vec3D; currentPos
	a (Lnet/minecraft/server/Entity;I)Lnet/minecraft/server/Vec3D; getPos
	a (Lnet/minecraft/server/PacketDataSerializer;)V writeToStream
	a (Lnet/minecraft/server/PathEntity;)Z sameAs
	a ([Lnet/minecraft/server/PathPoint;[Lnet/minecraft/server/PathPoint;Ljava/util/Set;)V setDebug
	b ()Z isDone
	b (I)V truncate
	b (Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/PathEntity; createFromStream
	c ()Lnet/minecraft/server/PathPoint; last
	c (I)V setIndex
	d ()Ljava/util/List; getNodes
	e ()I getSize
	f ()I getIndex
	g ()Lnet/minecraft/server/Vec3D; currentPos
	h ()Z canReach
	i ()[Lnet/minecraft/server/PathPoint; getOpenSet
	j ()[Lnet/minecraft/server/PathPoint; getClosedSet
	k ()Lnet/minecraft/server/BlockPosition; getTarget
	l ()F getDistToTarget
net/minecraft/server/PathMode net/minecraft/world/level/pathfinder/PathComputationType
	d $VALUES
net/minecraft/server/PathPoint net/minecraft/world/level/pathfinder/Node
	a x
	b y
	c z
	d heapIdx
	e g
	f h
	g f
	h cameFrom
	i closed
	j walkedDistance
	k costMalus
	l type
	m hash
	a ()Lnet/minecraft/server/BlockPosition; asBlockPos
	a (III)Lnet/minecraft/server/PathPoint; cloneMove
	a (Lnet/minecraft/server/BlockPosition;)F distanceTo
	a (Lnet/minecraft/server/PacketDataSerializer;)V writeToStream
	a (Lnet/minecraft/server/PathPoint;)F distanceTo
	b ()Lnet/minecraft/server/Vec3D; asVec3
	b (III)I createHash
	b (Lnet/minecraft/server/BlockPosition;)F distanceToSqr
	b (Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/PathPoint; createFromStream
	b (Lnet/minecraft/server/PathPoint;)F distanceToSqr
	c ()Z inOpenSet
	c (Lnet/minecraft/server/BlockPosition;)F distanceManhattan
	c (Lnet/minecraft/server/PathPoint;)F distanceManhattan
net/minecraft/server/PathType net/minecraft/world/level/pathfinder/BlockPathTypes
	w malus
	x $VALUES
	a ()F getMalus
net/minecraft/server/Pathfinder net/minecraft/world/level/pathfinder/PathFinder
	a openSet
	b closedSet
	c neighbors
	d maxVisitedNodes
	e nodeEvaluator
	a (Lnet/minecraft/server/ChunkCache;Lnet/minecraft/server/EntityInsentient;Ljava/util/Set;FIF)Lnet/minecraft/server/PathEntity; findPath
	a (Lnet/minecraft/server/PathPoint;Ljava/util/Map;FIF)Lnet/minecraft/server/PathEntity; findPath
	a (Lnet/minecraft/server/PathPoint;Ljava/util/Set;)F getBestH
	a (Lnet/minecraft/server/PathPoint;Lnet/minecraft/server/BlockPosition;Z)Lnet/minecraft/server/PathEntity; reconstructPath
net/minecraft/server/PathfinderAbstract net/minecraft/world/level/pathfinder/NodeEvaluator
	a level
	b mob
	c nodes
	d entityWidth
	e entityHeight
	f entityDepth
	g canPassDoors
	h canOpenDoors
	i canFloat
	a ()V done
	a (DDD)Lnet/minecraft/server/PathDestination; getGoal
	a (III)Lnet/minecraft/server/PathPoint; getNode
	a (Lnet/minecraft/server/ChunkCache;Lnet/minecraft/server/EntityInsentient;)V prepare
	a (Lnet/minecraft/server/IBlockAccess;III)Lnet/minecraft/server/PathType; getBlockPathType
	a (Lnet/minecraft/server/IBlockAccess;IIILnet/minecraft/server/EntityInsentient;IIIZZ)Lnet/minecraft/server/PathType; getBlockPathType
	a (Z)V setCanPassDoors
	a ([Lnet/minecraft/server/PathPoint;Lnet/minecraft/server/PathPoint;)I getNeighbors
	b ()Lnet/minecraft/server/PathPoint; getStart
	b (Z)V setCanOpenDoors
	c ()Z canPassDoors
	c (Z)V setCanFloat
	d ()Z canOpenDoors
	e ()Z canFloat
net/minecraft/server/PathfinderFlying net/minecraft/world/level/pathfinder/FlyNodeEvaluator
	a ()V done
	a (DDD)Lnet/minecraft/server/PathDestination; getGoal
	a (III)Lnet/minecraft/server/PathPoint; getNode
	a (Lnet/minecraft/server/ChunkCache;Lnet/minecraft/server/EntityInsentient;)V prepare
	a (Lnet/minecraft/server/EntityInsentient;III)Lnet/minecraft/server/PathType; getBlockPathType
	a (Lnet/minecraft/server/EntityInsentient;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/PathType; getBlockPathType
	a (Lnet/minecraft/server/IBlockAccess;III)Lnet/minecraft/server/PathType; getBlockPathType
	a (Lnet/minecraft/server/IBlockAccess;IIILnet/minecraft/server/EntityInsentient;IIIZZ)Lnet/minecraft/server/PathType; getBlockPathType
	a (Lnet/minecraft/server/PathPoint;)Z hasMalus
	a ([Lnet/minecraft/server/PathPoint;Lnet/minecraft/server/PathPoint;)I getNeighbors
	b ()Lnet/minecraft/server/PathPoint; getStart
	b (Lnet/minecraft/server/PathPoint;)Z isOpen
net/minecraft/server/PathfinderGoal net/minecraft/world/entity/ai/goal/Goal
	a flags
	E_ ()Z isInterruptable
	a ()Z canUse
	a (Ljava/util/EnumSet;)V setFlags
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	i ()Ljava/util/EnumSet; getFlags
net/minecraft/server/PathfinderGoal$Type net/minecraft/world/entity/ai/goal/Goal$Flag
	e $VALUES
net/minecraft/server/PathfinderGoalArrowAttack net/minecraft/world/entity/ai/goal/RangedAttackGoal
	a mob
	b rangedAttackMob
	c target
	d attackTime
	e speedModifier
	f seeTime
	g attackIntervalMin
	h attackIntervalMax
	i attackRadius
	j attackRadiusSqr
	a ()Z canUse
	b ()Z canContinueToUse
	d ()V stop
	e ()V tick
net/minecraft/server/PathfinderGoalAvoidTarget net/minecraft/world/entity/ai/goal/AvoidEntityGoal
	a mob
	b toAvoid
	c maxDist
	d path
	e pathNav
	f avoidClass
	g avoidPredicate
	h predicateOnAvoidEntity
	i walkSpeedModifier
	j sprintSpeedModifier
	k avoidEntityTargeting
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/server/PathfinderGoalBeg net/minecraft/world/entity/ai/goal/BegGoal
	a wolf
	b player
	c level
	d lookDistance
	e lookTime
	f begTargeting
	a ()Z canUse
	a (Lnet/minecraft/server/EntityHuman;)Z playerHoldingInteresting
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/server/PathfinderGoalBoat net/minecraft/world/entity/ai/goal/BoatGoals
	c $VALUES
net/minecraft/server/PathfinderGoalBowShoot net/minecraft/world/entity/ai/goal/RangedBowAttackGoal
	a mob
	b speedModifier
	c attackIntervalMin
	d attackRadiusSqr
	e attackTime
	f seeTime
	g strafingClockwise
	h strafingBackwards
	i strafingTime
	a ()Z canUse
	a (I)V setMinAttackInterval
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	g ()Z isHoldingBow
net/minecraft/server/PathfinderGoalBreakDoor net/minecraft/world/entity/ai/goal/BreakDoorGoal
	a breakTime
	b lastBreakProgress
	c doorBreakTime
	g validDifficulties
	a ()Z canUse
	a (Lnet/minecraft/server/EnumDifficulty;)Z isValidDifficulty
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	f ()I getDoorBreakTime
net/minecraft/server/PathfinderGoalBreath net/minecraft/world/entity/ai/goal/BreathAirGoal
	a mob
	E_ ()Z isInterruptable
	a ()Z canUse
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z givesAir
	b ()Z canContinueToUse
	c ()V start
	e ()V tick
	g ()V findAirPosition
net/minecraft/server/PathfinderGoalBreed net/minecraft/world/entity/ai/goal/BreedGoal
	b level
	d PARTNER_TARGETING
	e partnerClass
	f loveTime
	g speedModifier
	a ()Z canUse
	b ()Z canContinueToUse
	d ()V stop
	e ()V tick
	g ()V breed
	h ()Lnet/minecraft/server/EntityAnimal; getFreePartner
net/minecraft/server/PathfinderGoalCatSitOnBed net/minecraft/world/entity/ai/goal/CatLieOnBedGoal
	g cat
	a ()Z canUse
	a (Lnet/minecraft/server/EntityCreature;)I nextStartTick
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z isValidTarget
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/server/PathfinderGoalCrossbowAttack net/minecraft/world/entity/ai/goal/RangedCrossbowAttackGoal
	a mob
	b crossbowState
	c speedModifier
	d attackRadiusSqr
	e seeTime
	f attackDelay
	a ()Z canUse
	b ()Z canContinueToUse
	d ()V stop
	e ()V tick
	g ()Z isHoldingCrossbow
	h ()Z isValidTarget
	j ()Z canRun
net/minecraft/server/PathfinderGoalCrossbowAttack$State net/minecraft/world/entity/ai/goal/RangedCrossbowAttackGoal$CrossbowState
	e $VALUES
net/minecraft/server/PathfinderGoalDefendVillage net/minecraft/world/entity/ai/goal/target/DefendVillageTargetGoal
	a golem
	b potentialTarget
	c attackTargeting
	a ()Z canUse
	c ()V start
net/minecraft/server/PathfinderGoalDoorInteract net/minecraft/world/entity/ai/goal/DoorInteractGoal
	a passed
	b doorOpenDirX
	c doorOpenDirZ
	door doorPos
	entity mob
	f hasDoor
	a ()Z canUse
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Z isDoor
	a (Z)V setOpen
	b ()Z canContinueToUse
	c ()V start
	e ()V tick
	g ()Z isOpen
net/minecraft/server/PathfinderGoalDoorOpen net/minecraft/world/entity/ai/goal/OpenDoorGoal
	a closeDoor
	b forgetTime
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/server/PathfinderGoalEatTile net/minecraft/world/entity/ai/goal/EatBlockGoal
	a IS_TALL_GRASS
	b mob
	c level
	d eatAnimationTick
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	g ()I getEatAnimationTick
net/minecraft/server/PathfinderGoalFishSchool net/minecraft/world/entity/ai/goal/FollowFlockLeaderGoal
	a mob
	b timeToRecalcPath
	c nextStartTick
	a ()Z canUse
	a (Lnet/minecraft/server/EntityFishSchool;)I nextStartTick
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/server/PathfinderGoalFleeSun net/minecraft/world/entity/ai/goal/FleeSunGoal
	a mob
	b wantedX
	c wantedY
	d wantedZ
	e speedModifier
	f level
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	g ()Z setWantedPos
	h ()Lnet/minecraft/server/Vec3D; getHidePos
net/minecraft/server/PathfinderGoalFloat net/minecraft/world/entity/ai/goal/FloatGoal
	a mob
	a ()Z canUse
	e ()V tick
net/minecraft/server/PathfinderGoalFollowBoat net/minecraft/world/entity/ai/goal/FollowBoatGoal
	a timeToRecalcPath
	b mob
	c following
	d currentGoal
	E_ ()Z isInterruptable
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/server/PathfinderGoalFollowEntity net/minecraft/world/entity/ai/goal/FollowMobGoal
	a mob
	b followPredicate
	c followingMob
	d speedModifier
	e navigation
	f timeToRecalcPath
	g stopDistance
	h oldWaterCost
	i areaSize
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/server/PathfinderGoalFollowOwner net/minecraft/world/entity/ai/goal/FollowOwnerGoal
	a tamable
	b owner
	c level
	d speedModifier
	e navigation
	f timeToRecalcPath
	g stopDistance
	h startDistance
	i oldWaterCost
	j canFly
	a ()Z canUse
	a (II)I randomIntInclusive
	a (III)Z maybeTeleportTo
	a (Lnet/minecraft/server/BlockPosition;)Z canTeleportTo
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	g ()V teleportToOwner
net/minecraft/server/PathfinderGoalFollowParent net/minecraft/world/entity/ai/goal/FollowParentGoal
	a animal
	b parent
	c speedModifier
	d timeToRecalcPath
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/server/PathfinderGoalGotoTarget net/minecraft/world/entity/ai/goal/MoveToBlockGoal
	a mob
	b speedModifier
	c nextStartTick
	d tryTicks
	e blockPos
	f verticalSearchStart
	g maxStayTicks
	h reachedTarget
	i searchRange
	j verticalSearchRange
	a ()Z canUse
	a (Lnet/minecraft/server/EntityCreature;)I nextStartTick
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z isValidTarget
	b ()Z canContinueToUse
	c ()V start
	e ()V tick
	g ()V moveMobToBlock
	h ()D acceptedDistance
	j ()Z shouldRecalculatePath
	k ()Z isReachedTarget
	l ()Z findNearestBlock
net/minecraft/server/PathfinderGoalHorseTrap net/minecraft/world/entity/animal/horse/SkeletonTrapGoal
	a horse
	a ()Z canUse
	a (Lnet/minecraft/server/DifficultyDamageScaler;)Lnet/minecraft/server/EntityHorseAbstract; createHorse
	a (Lnet/minecraft/server/DifficultyDamageScaler;Lnet/minecraft/server/EntityHorseAbstract;)Lnet/minecraft/server/EntitySkeleton; createSkeleton
	e ()V tick
net/minecraft/server/PathfinderGoalHurtByTarget net/minecraft/world/entity/ai/goal/target/HurtByTargetGoal
	a HURT_BY_TARGETING
	b alertSameType
	c timestamp
	d toIgnoreDamage
	i toIgnoreAlert
	a ()Z canUse
	a (Lnet/minecraft/server/EntityInsentient;Lnet/minecraft/server/EntityLiving;)V alertOther
	a ([Ljava/lang/Class;)Lnet/minecraft/server/PathfinderGoalHurtByTarget; setAlertOthers
	c ()V start
	g ()V alertOthers
net/minecraft/server/PathfinderGoalInteract net/minecraft/world/entity/ai/goal/InteractGoal
net/minecraft/server/PathfinderGoalJumpOnBlock net/minecraft/world/entity/ai/goal/CatSitOnBlockGoal
	g cat
	a ()Z canUse
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z isValidTarget
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/server/PathfinderGoalLeapAtTarget net/minecraft/world/entity/ai/goal/LeapAtTargetGoal
	a mob
	b target
	c yd
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
net/minecraft/server/PathfinderGoalLlamaFollow net/minecraft/world/entity/ai/goal/LlamaFollowCaravanGoal
	a llama
	b speedModifier
	c distCheckCounter
	a ()Z canUse
	a (Lnet/minecraft/server/EntityLlama;I)Z firstIsLeashed
	b ()Z canContinueToUse
	d ()V stop
	e ()V tick
net/minecraft/server/PathfinderGoalLookAtPlayer net/minecraft/world/entity/ai/goal/LookAtPlayerGoal
	a mob
	b lookAt
	c lookDistance
	d probability
	e lookAtType
	f lookAtContext
	g lookTime
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/server/PathfinderGoalLookAtTradingPlayer net/minecraft/world/entity/ai/goal/LookAtTradingPlayerGoal
	g villager
	a ()Z canUse
net/minecraft/server/PathfinderGoalMeleeAttack net/minecraft/world/entity/ai/goal/MeleeAttackGoal
	a mob
	b attackTime
	c attackInterval
	d speedModifier
	e trackTarget
	f path
	g timeToRecalcPath
	h pathedTargetX
	i pathedTargetY
	j pathedTargetZ
	k lastUpdate
	a ()Z canUse
	a (Lnet/minecraft/server/EntityLiving;)D getAttackReachSqr
	a (Lnet/minecraft/server/EntityLiving;D)V checkAndPerformAttack
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/server/PathfinderGoalMoveThroughVillage net/minecraft/world/entity/ai/goal/MoveThroughVillageGoal
	a mob
	b speedModifier
	c path
	d poiPos
	e onlyAtNight
	f visited
	g distanceToPoi
	h canDealWithDoors
	a ()Z canUse
	a (Lnet/minecraft/server/BlockPosition;)Z hasNotVisited
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	g ()V updateVisited
net/minecraft/server/PathfinderGoalMoveTowardsRestriction net/minecraft/world/entity/ai/goal/MoveTowardsRestrictionGoal
	a mob
	b wantedX
	c wantedY
	d wantedZ
	e speedModifier
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
net/minecraft/server/PathfinderGoalMoveTowardsTarget net/minecraft/world/entity/ai/goal/MoveTowardsTargetGoal
	a mob
	b target
	c wantedX
	d wantedY
	e wantedZ
	f speedModifier
	g within
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
net/minecraft/server/PathfinderGoalNearestAttackableTarget net/minecraft/world/entity/ai/goal/target/NearestAttackableTargetGoal
	a targetType
	b randomInterval
	c target
	d targetConditions
	a ()Z canUse
	a (D)Lnet/minecraft/server/AxisAlignedBB; getTargetSearchArea
	c ()V start
	g ()V findTarget
net/minecraft/server/PathfinderGoalNearestAttackableTargetWitch net/minecraft/world/entity/ai/goal/target/NearestAttackableWitchTargetGoal
	i canAttack
	a ()Z canUse
	a (Z)V setCanAttack
net/minecraft/server/PathfinderGoalNearestHealableRaider net/minecraft/world/entity/ai/goal/target/NearestHealableRaiderTargetGoal
	i cooldown
	a ()Z canUse
	c ()V start
	h ()I getCooldown
	j ()V decrementCooldown
net/minecraft/server/PathfinderGoalNearestVillage net/minecraft/world/entity/ai/goal/StrollThroughVillageGoal
	a mob
	b interval
	c wantedPos
	a ()Z canUse
	b ()Z canContinueToUse
	e ()V tick
	g ()V moveRandomly
net/minecraft/server/PathfinderGoalOcelotAttack net/minecraft/world/entity/ai/goal/OcelotAttackGoal
	a level
	b mob
	c target
	d attackTime
	a ()Z canUse
	b ()Z canContinueToUse
	d ()V stop
	e ()V tick
net/minecraft/server/PathfinderGoalOfferFlower net/minecraft/world/entity/ai/goal/OfferFlowerGoal
	a OFFER_TARGER_CONTEXT
	b golem
	c villager
	d tick
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/server/PathfinderGoalOwnerHurtByTarget net/minecraft/world/entity/ai/goal/target/OwnerHurtByTargetGoal
	a tameAnimal
	b ownerLastHurtBy
	c timestamp
	a ()Z canUse
	c ()V start
net/minecraft/server/PathfinderGoalOwnerHurtTarget net/minecraft/world/entity/ai/goal/target/OwnerHurtTargetGoal
	a tameAnimal
	b ownerLastHurt
	c timestamp
	a ()Z canUse
	c ()V start
net/minecraft/server/PathfinderGoalPanic net/minecraft/world/entity/ai/goal/PanicGoal
	a mob
	b speedModifier
	c posX
	d posY
	e posZ
	a ()Z canUse
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/Entity;II)Lnet/minecraft/server/BlockPosition; lookForWater
	b ()Z canContinueToUse
	c ()V start
	g ()Z findRandomPosition
net/minecraft/server/PathfinderGoalPerch net/minecraft/world/entity/ai/goal/LandOnOwnersShoulderGoal
	a entity
	b owner
	c isSittingOnShoulder
	E_ ()Z isInterruptable
	a ()Z canUse
	c ()V start
	e ()V tick
net/minecraft/server/PathfinderGoalRaid net/minecraft/world/entity/ai/goal/PathfindToRaidGoal
	a mob
	a ()Z canUse
	a (Lnet/minecraft/server/Raid;)V recruitNearby
	b ()Z canContinueToUse
	e ()V tick
net/minecraft/server/PathfinderGoalRandomFly net/minecraft/world/entity/ai/goal/WaterAvoidingRandomFlyingGoal
	g ()Lnet/minecraft/server/Vec3D; getPosition
	j ()Lnet/minecraft/server/Vec3D; getTreePos
net/minecraft/server/PathfinderGoalRandomLookaround net/minecraft/world/entity/ai/goal/RandomLookAroundGoal
	a mob
	b relX
	c relZ
	d lookTime
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	e ()V tick
net/minecraft/server/PathfinderGoalRandomStroll net/minecraft/world/entity/ai/goal/RandomStrollGoal
	a mob
	b wantedX
	c wantedY
	d wantedZ
	e speedModifier
	f interval
	g forceTrigger
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	g ()Lnet/minecraft/server/Vec3D; getPosition
	h ()V trigger
	setTimeBetweenMovement (I)V setInterval
net/minecraft/server/PathfinderGoalRandomStrollLand net/minecraft/world/entity/ai/goal/WaterAvoidingRandomStrollGoal
	h probability
	g ()Lnet/minecraft/server/Vec3D; getPosition
net/minecraft/server/PathfinderGoalRandomSwim net/minecraft/world/entity/ai/goal/RandomSwimmingGoal
	g ()Lnet/minecraft/server/Vec3D; getPosition
net/minecraft/server/PathfinderGoalRandomTargetNonTamed net/minecraft/world/entity/ai/goal/target/NonTameRandomTargetGoal
	i tamableMob
	a ()Z canUse
	b ()Z canContinueToUse
net/minecraft/server/PathfinderGoalRemoveBlock net/minecraft/world/entity/ai/goal/RemoveBlockGoal
	entity removerMob
	g blockToRemove
	i ticksSinceReachedGoal
	a ()Z canUse
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockAccess;)Lnet/minecraft/server/BlockPosition; getPosWithBlock
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)V playDestroyProgressSound
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Z isValidTarget
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V playBreakSound
	c ()V start
	d ()V stop
	e ()V tick
	m ()Z tryFindBlock
net/minecraft/server/PathfinderGoalRestrictSun net/minecraft/world/entity/ai/goal/RestrictSunGoal
	a mob
	a ()Z canUse
	c ()V start
	d ()V stop
net/minecraft/server/PathfinderGoalSelector net/minecraft/world/entity/ai/goal/GoalSelector
	a LOGGER
	b NO_GOAL
	c lockedFlags
	d availableGoals
	e profiler
	f disabledFlags
	g newGoalRate
	a (I)V setNewGoalRate
	a (ILnet/minecraft/server/PathfinderGoal;)V addGoal
	a (Lnet/minecraft/server/PathfinderGoal$Type;)V disableControlFlag
	a (Lnet/minecraft/server/PathfinderGoal$Type;Z)V setControlFlag
	a (Lnet/minecraft/server/PathfinderGoal;)V removeGoal
	b ()Ljava/util/Set; getAvailableGoals
	b (Lnet/minecraft/server/PathfinderGoal$Type;)V enableControlFlag
	c ()Ljava/util/stream/Stream; getRunningGoals
	doTick ()V tick
net/minecraft/server/PathfinderGoalSit net/minecraft/world/entity/ai/goal/SitGoal
	entity mob
	willSit wantToSit
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	setSitting (Z)V wantToSit
net/minecraft/server/PathfinderGoalStrollVillage net/minecraft/world/entity/ai/goal/MoveBackToVillage
	a ()Z canUse
	g ()Lnet/minecraft/server/Vec3D; getPosition
net/minecraft/server/PathfinderGoalSwell net/minecraft/world/entity/ai/goal/SwellGoal
	a creeper
	b target
	a ()Z canUse
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/server/PathfinderGoalTame net/minecraft/world/entity/ai/goal/RunAroundLikeCrazyGoal
	b speedModifier
	c posX
	d posY
	e posZ
	entity horse
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	e ()V tick
net/minecraft/server/PathfinderGoalTarget net/minecraft/world/entity/ai/goal/target/TargetGoal
	a mustReach
	b reachCache
	c reachCacheTime
	d unseenTicks
	e mob
	f mustSee
	g targetMob
	h unseenMemoryTicks
	a (I)Lnet/minecraft/server/PathfinderGoalTarget; setUnseenMemoryTicks
	a (Lnet/minecraft/server/EntityLiving;)Z canReach
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/PathfinderTargetCondition;)Z canAttack
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	k ()D getFollowDistance
net/minecraft/server/PathfinderGoalTempt net/minecraft/world/entity/ai/goal/TemptGoal
	a mob
	c TEMP_TARGETING
	d speedModifier
	e px
	f py
	g pz
	h pRotX
	i pRotY
	j calmDown
	k isRunning
	l items
	m canScare
	target player
	a ()Z canUse
	a (Lnet/minecraft/server/ItemStack;)Z shouldFollowItem
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	g ()Z canScare
	h ()Z isRunning
net/minecraft/server/PathfinderGoalTradeWithPlayer net/minecraft/world/entity/ai/goal/TradeWithPlayerGoal
	a mob
	a ()Z canUse
	c ()V start
	d ()V stop
net/minecraft/server/PathfinderGoalUseItem net/minecraft/world/entity/ai/goal/UseItemGoal
	a mob
	b item
	c canUseSelector
	d finishUsingSound
	a ()Z canUse
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
net/minecraft/server/PathfinderGoalWater net/minecraft/world/entity/ai/goal/TryFindWaterGoal
	a mob
	a ()Z canUse
	c ()V start
net/minecraft/server/PathfinderGoalWaterJump net/minecraft/world/entity/ai/goal/DolphinJumpGoal
	a STEPS_TO_CHECK
	b dolphin
	c interval
	d breached
	E_ ()Z isInterruptable
	a ()Z canUse
	a (Lnet/minecraft/server/BlockPosition;III)Z waterIsClear
	b ()Z canContinueToUse
	b (Lnet/minecraft/server/BlockPosition;III)Z surfaceIsClear
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/server/PathfinderGoalWaterJumpAbstract net/minecraft/world/entity/ai/goal/JumpGoal
net/minecraft/server/PathfinderGoalWrapped net/minecraft/world/entity/ai/goal/WrappedGoal
	a goal
	b priority
	c isRunning
	E_ ()Z isInterruptable
	a ()Z canUse
	a (Ljava/util/EnumSet;)V setFlags
	a (Lnet/minecraft/server/PathfinderGoalWrapped;)Z canBeReplacedBy
	b ()Z canContinueToUse
	c ()V start
	d ()V stop
	e ()V tick
	g ()Z isRunning
	h ()I getPriority
	i ()Ljava/util/EnumSet; getFlags
	j ()Lnet/minecraft/server/PathfinderGoal; getGoal
net/minecraft/server/PathfinderGoalZombieAttack net/minecraft/world/entity/ai/goal/ZombieAttackGoal
	d zombie
	e raiseArmTicks
	c ()V start
	d ()V stop
	e ()V tick
net/minecraft/server/PathfinderNormal net/minecraft/world/level/pathfinder/WalkNodeEvaluator
	j oldWaterCost
	a ()V done
	a (DDD)Lnet/minecraft/server/PathDestination; getGoal
	a (IIIIDLnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/PathPoint; getLandNode
	a (Lnet/minecraft/server/ChunkCache;Lnet/minecraft/server/EntityInsentient;)V prepare
	a (Lnet/minecraft/server/EntityInsentient;III)Lnet/minecraft/server/PathType; getBlockPathType
	a (Lnet/minecraft/server/EntityInsentient;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/PathType; getBlockPathType
	a (Lnet/minecraft/server/IBlockAccess;III)Lnet/minecraft/server/PathType; getBlockPathType
	a (Lnet/minecraft/server/IBlockAccess;IIIIIIZZLjava/util/EnumSet;Lnet/minecraft/server/PathType;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/PathType; getBlockPathTypes
	a (Lnet/minecraft/server/IBlockAccess;IIILnet/minecraft/server/EntityInsentient;IIIZZ)Lnet/minecraft/server/PathType; getBlockPathType
	a (Lnet/minecraft/server/IBlockAccess;IIILnet/minecraft/server/PathType;)Lnet/minecraft/server/PathType; checkNeighbourBlocks
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)D getFloorLevel
	a (Lnet/minecraft/server/IBlockAccess;ZZLnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathType;)Lnet/minecraft/server/PathType; evaluateBlockPathType
	a (Lnet/minecraft/server/PathPoint;Lnet/minecraft/server/PathPoint;Lnet/minecraft/server/PathPoint;Lnet/minecraft/server/PathPoint;)Z isDiagonalValid
	a ([Lnet/minecraft/server/PathPoint;Lnet/minecraft/server/PathPoint;)I getNeighbors
	b ()Lnet/minecraft/server/PathPoint; getStart
	b (Lnet/minecraft/server/IBlockAccess;III)Lnet/minecraft/server/PathType; getBlockPathTypeStatic
	c (Lnet/minecraft/server/IBlockAccess;III)Lnet/minecraft/server/PathType; getBlockPathTypeRaw
net/minecraft/server/PathfinderTargetCondition net/minecraft/world/entity/ai/targeting/TargetingConditions
	a DEFAULT
	b range
	c allowInvulnerable
	d allowSameTeam
	e allowUnseeable
	f allowNonAttackable
	g testInvisible
	h selector
	a ()Lnet/minecraft/server/PathfinderTargetCondition; allowInvulnerable
	a (D)Lnet/minecraft/server/PathfinderTargetCondition; range
	a (Ljava/util/function/Predicate;)Lnet/minecraft/server/PathfinderTargetCondition; selector
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)Z test
	b ()Lnet/minecraft/server/PathfinderTargetCondition; allowSameTeam
	c ()Lnet/minecraft/server/PathfinderTargetCondition; allowUnseeable
	d ()Lnet/minecraft/server/PathfinderTargetCondition; allowNonAttackable
	e ()Lnet/minecraft/server/PathfinderTargetCondition; ignoreInvisibilityTesting
net/minecraft/server/PathfinderTurtle net/minecraft/world/level/pathfinder/TurtleNodeEvaluator
	k oldWalkableCost
	l oldWaterBorderCost
	a ()V done
	a (DDD)Lnet/minecraft/server/PathDestination; getGoal
	a (IIIID)Lnet/minecraft/server/PathPoint; getAcceptedNode
	a (Lnet/minecraft/server/BlockPosition;)D inWaterDependentPosHeight
	a (Lnet/minecraft/server/ChunkCache;Lnet/minecraft/server/EntityInsentient;)V prepare
	a (Lnet/minecraft/server/IBlockAccess;III)Lnet/minecraft/server/PathType; getBlockPathType
	a (Lnet/minecraft/server/IBlockAccess;ZZLnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PathType;)Lnet/minecraft/server/PathType; evaluateBlockPathType
	a ([Lnet/minecraft/server/PathPoint;Lnet/minecraft/server/PathPoint;)I getNeighbors
	b ()Lnet/minecraft/server/PathPoint; getStart
net/minecraft/server/PathfinderWater net/minecraft/world/level/pathfinder/SwimNodeEvaluator
	j allowBreaching
	a (DDD)Lnet/minecraft/server/PathDestination; getGoal
	a (III)Lnet/minecraft/server/PathPoint; getNode
	a (Lnet/minecraft/server/IBlockAccess;III)Lnet/minecraft/server/PathType; getBlockPathType
	a (Lnet/minecraft/server/IBlockAccess;IIILnet/minecraft/server/EntityInsentient;IIIZZ)Lnet/minecraft/server/PathType; getBlockPathType
	a ([Lnet/minecraft/server/PathPoint;Lnet/minecraft/server/PathPoint;)I getNeighbors
	b ()Lnet/minecraft/server/PathPoint; getStart
	b (III)Lnet/minecraft/server/PathPoint; getWaterNode
	c (III)Lnet/minecraft/server/PathType; isFree
net/minecraft/server/PersistentBase net/minecraft/world/level/saveddata/SavedData
	a LOGGER
	c dirty
	a (Ljava/io/File;)V save
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	a (Z)V setDirty
	b ()V setDirty
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	c ()Z isDirty
net/minecraft/server/PersistentCommandStorage net/minecraft/world/level/storage/CommandStorage
	a namespaces
	b storage
	a ()Ljava/util/stream/Stream; keys
	a (Ljava/lang/String;)Ljava/lang/String; createId
	a (Ljava/lang/String;Ljava/lang/String;)Lcrg$a; newStorage
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/NBTTagCompound; get
	a (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/NBTTagCompound;)V set
net/minecraft/server/PersistentIdCounts net/minecraft/world/level/saveddata/maps/MapIndex
	a usedAuxIds
	a ()I getFreeAuxValueForMap
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
net/minecraft/server/PersistentIndexed net/minecraft/world/level/levelgen/structure/StructureFeatureIndexSavedData
	a all
	b remaining
	a ()Lit/unimi/dsi/fastutil/longs/LongSet; getAll
	a (J)V addIndex
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	b (J)Z hasStartIndex
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	c (J)Z hasUnhandledIndex
	d (J)V removeIndex
net/minecraft/server/PersistentRaid net/minecraft/world/entity/raid/Raids
	b level
	c nextAvailableID
	d tick
	raids raidMap
	a ()V tick
	a (I)Lnet/minecraft/server/Raid; get
	a (Lnet/minecraft/server/EntityPlayer;)Lnet/minecraft/server/Raid; createOrExtendRaid
	a (Lnet/minecraft/server/EntityRaider;Lnet/minecraft/server/Raid;)Z canJoinRaid
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	a (Lnet/minecraft/server/WorldProvider;)Ljava/lang/String; getFileId
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/Raid; getOrCreateRaid
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	e ()I getUniqueId
net/minecraft/server/PersistentScoreboard net/minecraft/world/scores/ScoreboardSaveData
	a LOGGER
	b scoreboard
	c delayLoad
	a ()Lnet/minecraft/server/NBTTagList; saveTeams
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	a (Lnet/minecraft/server/NBTTagList;)V loadTeams
	a (Lnet/minecraft/server/Scoreboard;)V setScoreboard
	a (Lnet/minecraft/server/ScoreboardTeam;Lnet/minecraft/server/NBTTagList;)V loadTeamPlayers
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	b (Lnet/minecraft/server/NBTTagList;)V loadObjectives
	c (Lnet/minecraft/server/NBTTagCompound;)V loadDisplaySlots
	d (Lnet/minecraft/server/NBTTagCompound;)V saveDisplaySlots
	e ()Lnet/minecraft/server/NBTTagList; saveObjectives
net/minecraft/server/PersistentStructureLegacy net/minecraft/world/level/levelgen/structure/LegacyStructureDataHandler
	a CURRENT_TO_LEGACY_MAP
	b LEGACY_TO_CURRENT_MAP
	c hasLegacyData
	d dataMap
	e indexMap
	f legacyKeys
	g currentKeys
	a (II)Z isUnhandledStructureStart
	a (IILjava/lang/String;)Z hasLegacyStart
	a (J)V removeIndex
	a (Lnet/minecraft/server/DimensionManager;Lnet/minecraft/server/WorldPersistentData;)Lnet/minecraft/server/PersistentStructureLegacy; getLegacyStructureHandler
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; updateFromLegacy
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/ChunkCoordIntPair;)Lnet/minecraft/server/NBTTagCompound; updateStructureStart
	a (Lnet/minecraft/server/WorldPersistentData;)V populateCaches
net/minecraft/server/PistonExtendsChecker net/minecraft/world/level/block/piston/PistonStructureResolver
	a level
	b pistonPos
	c extending
	d startPos
	e pushDirection
	f toPush
	g toDestroy
	h pistonDirection
	a ()Z resolve
	a (II)V reorderListAtCollision
	a (Lnet/minecraft/server/Block;)Z isSticky
	a (Lnet/minecraft/server/Block;Lnet/minecraft/server/Block;)Z canStickToEachOther
	a (Lnet/minecraft/server/BlockPosition;)Z addBranchingBlocks
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z addBlockLine
	b ()Lnet/minecraft/server/EnumDirection; getPushDirection
	getBrokenBlocks ()Ljava/util/List; getToDestroy
	getMovedBlocks ()Ljava/util/List; getToPush
net/minecraft/server/PistonUtil net/minecraft/world/level/block/piston/PistonMath
	a (Lnet/minecraft/server/AxisAlignedBB;Lnet/minecraft/server/EnumDirection;D)Lnet/minecraft/server/AxisAlignedBB; getMovementArea
net/minecraft/server/PlayerAbilities net/minecraft/world/entity/player/Abilities
	canFly mayfly
	canInstantlyBuild instabuild
	flySpeed flyingSpeed
	isFlying flying
	isInvulnerable invulnerable
	walkSpeed walkingSpeed
	a ()F getFlyingSpeed
	a (F)V setFlyingSpeed
	a (Lnet/minecraft/server/NBTTagCompound;)V addSaveData
	b ()F getWalkingSpeed
	b (F)V setWalkingSpeed
	b (Lnet/minecraft/server/NBTTagCompound;)V loadSaveData
net/minecraft/server/PlayerChunk net/minecraft/server/level/ChunkHolder
	CHUNK_STATES FULL_CHUNK_STATUSES
	UNLOADED_CHUNK UNLOADED_LEVEL_CHUNK
	UNLOADED_CHUNK_ACCESS UNLOADED_CHUNK
	UNLOADED_CHUNK_ACCESS_FUTURE UNLOADED_CHUNK_FUTURE
	UNLOADED_CHUNK_FUTURE UNLOADED_LEVEL_CHUNK_FUTURE
	chunkSave chunkToSave
	dirtyBlocks changedBlocks
	dirtyCount changes
	entityTickingFuture entityTickingChunkFuture
	hasBeenLoaded wasAccessibleSinceLastSave
	location pos
	n queueLevel
	players playerProvider
	r changedSectionFilter
	s sectionsToForceSendLightFor
	statusFutures futures
	t blockChangedLightSectionFilter
	tickingFuture tickingChunkFuture
	u skyChangedLightSectionFilter
	w onLevelChange
	a ()Ljava/util/concurrent/CompletableFuture; getTickingChunkFuture
	a (I)V setTicketLevel
	a (III)V blockChanged
	a (Ljava/util/concurrent/CompletableFuture;)V updateChunkToSave
	a (Lnet/minecraft/server/Chunk;)V broadcastChanges
	a (Lnet/minecraft/server/ChunkStatus;Lnet/minecraft/server/PlayerChunkMap;)Ljava/util/concurrent/CompletableFuture; getOrScheduleFuture
	a (Lnet/minecraft/server/EnumSkyBlock;I)V sectionLightChanged
	a (Lnet/minecraft/server/Packet;Z)V broadcast
	a (Lnet/minecraft/server/PlayerChunkMap;)V updateFutures
	a (Lnet/minecraft/server/ProtoChunkExtension;)V replaceProtoChunk
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V broadcastBlockEntity
	b ()Ljava/util/concurrent/CompletableFuture; getEntityTickingChunkFuture
	b (Lnet/minecraft/server/ChunkStatus;)Ljava/util/concurrent/CompletableFuture; getFutureIfPresent
	c ()Ljava/util/concurrent/CompletableFuture; getFullChunkFuture
	d (I)V setQueueLevel
	e ()Lnet/minecraft/server/ChunkStatus; getLastAvailableStatus
	f ()Lnet/minecraft/server/IChunkAccess; getLastAvailable
	getChunk ()Lnet/minecraft/server/Chunk; getTickingChunk
	getChunkSave ()Ljava/util/concurrent/CompletableFuture; getChunkToSave
	getChunkState (I)Lnet/minecraft/server/PlayerChunk$State; getFullChunkStatus
	getChunkStatus (I)Lnet/minecraft/server/ChunkStatus; getStatus
	getStatusFutureUnchecked (Lnet/minecraft/server/ChunkStatus;)Ljava/util/concurrent/CompletableFuture; getFutureIfPresentUnchecked
	h ()Lnet/minecraft/server/PlayerChunk$State; getFullStatus
	hasBeenLoaded ()Z wasAccessibleSinceLastSave
	i ()Lnet/minecraft/server/ChunkCoordIntPair; getPos
	k ()I getQueueLevel
	m ()V refreshAccessibility
net/minecraft/server/PlayerChunk$Failure net/minecraft/server/level/ChunkHolder$ChunkLoadingFailure
	b UNLOADED
net/minecraft/server/PlayerChunk$State net/minecraft/server/level/ChunkHolder$FullChunkStatus
	e $VALUES
	isAtLeast (Lnet/minecraft/server/PlayerChunk$State;)Z isOrAfter
net/minecraft/server/PlayerChunkMap net/minecraft/server/level/ChunkMap
	GOLDEN_TICKET MAX_CHUNK_DISTANCE
	c LOGGER
	chunkDistanceManager distanceManager
	chunkGenerator generator
	definedStructureManager structureManager
	executor mainThreadExecutor
	l overworldDataStorage
	loadedChunks entitiesInLevel
	m poiManager
	mailboxMain mainThreadMailbox
	mailboxWorldGen worldgenMailbox
	p queueSorter
	pendingUnload pendingUnloads
	trackedEntities entityMap
	u tickingGenerated
	unloadQueue toDrop
	updatingChunks updatingChunkMap
	updatingChunksModified modified
	visibleChunks visibleChunkMap
	w storageFolder
	world level
	worldLoadListener progressListener
	z unloadQueue
	a ()Lnet/minecraft/server/LightEngineThreaded; getLightEngine
	a (JILnet/minecraft/server/PlayerChunk;I)Lnet/minecraft/server/PlayerChunk; updateChunkScheduling
	a (JLnet/minecraft/server/PlayerChunk;)V scheduleUnload
	a (Ljava/io/Writer;)V dumpChunks
	a (Ljava/util/concurrent/CompletableFuture;)Ljava/lang/String; printFuture
	a (Lnet/minecraft/server/Chunk;)Ljava/util/concurrent/CompletableFuture; packTicks
	a (Lnet/minecraft/server/ChunkCoordIntPair;)Ljava/lang/String; getChunkDebugData
	a (Lnet/minecraft/server/ChunkCoordIntPair;II)I checkerboardDistance
	a (Lnet/minecraft/server/ChunkCoordIntPair;ILjava/util/function/IntFunction;)Ljava/util/concurrent/CompletableFuture; getChunkRangeFuture
	a (Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/Entity;)D euclideanDistanceSquared
	a (Lnet/minecraft/server/ChunkCoordIntPair;Z)Ljava/util/stream/Stream; getPlayers
	a (Lnet/minecraft/server/ChunkStatus;I)Lnet/minecraft/server/ChunkStatus; getDependencyStatus
	a (Lnet/minecraft/server/EntityPlayer;Z)V updatePlayerStatus
	a (Lnet/minecraft/server/EntityPlayer;[Lnet/minecraft/server/Packet;Lnet/minecraft/server/Chunk;)V playerLoadedChunk
	a (Lnet/minecraft/server/PlayerChunk;)Ljava/util/concurrent/CompletableFuture; postProcess
	a (Lnet/minecraft/server/PlayerChunk;Lnet/minecraft/server/ChunkStatus;)Ljava/util/concurrent/CompletableFuture; schedule
	b ()Z promoteChunkMap
	b (Ljava/util/function/BooleanSupplier;)V processUnloads
	b (Lnet/minecraft/server/ChunkCoordIntPair;)Ljava/util/concurrent/CompletableFuture; getEntityTickingRangeFuture
	b (Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/Entity;)I checkerboardDistance
	b (Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/EntityPlayer;Z)I checkerboardDistance
	b (Lnet/minecraft/server/EntityPlayer;)Z skipPlayer
	b (Lnet/minecraft/server/PlayerChunk;)Ljava/util/concurrent/CompletableFuture; unpackTicks
	b (Lnet/minecraft/server/PlayerChunk;Lnet/minecraft/server/ChunkStatus;)Ljava/util/concurrent/CompletableFuture; scheduleChunkGeneration
	broadcastIncludingSelf (Lnet/minecraft/server/Entity;Lnet/minecraft/server/Packet;)V broadcastAndSend
	c ()I getTickingGenerated
	c (J)Ljava/util/function/IntSupplier; getChunkQueueLevel
	c (Lnet/minecraft/server/ChunkCoordIntPair;)V releaseLightTicket
	c (Lnet/minecraft/server/EntityPlayer;)Lnet/minecraft/server/SectionPosition; updatePlayerPos
	c (Lnet/minecraft/server/PlayerChunk;)Ljava/util/concurrent/CompletableFuture; protoChunkToFullChunk
	d ()I size
	e ()Lwp$a; getDistanceManager
	f ()Ljava/lang/Iterable; getChunks
	f (Lnet/minecraft/server/ChunkCoordIntPair;)Ljava/util/concurrent/CompletableFuture; scheduleChunkLoad
	g ()V tick
	getUpdatingChunk (J)Lnet/minecraft/server/PlayerChunk; getUpdatingChunkIfPresent
	getVisibleChunk (J)Lnet/minecraft/server/PlayerChunk; getVisibleChunkIfPresent
	h ()Lnet/minecraft/server/VillagePlace; getPoiManager
	isOutsideOfRange (Lnet/minecraft/server/ChunkCoordIntPair;)Z noPlayersCloseForSpawning
	movePlayer (Lnet/minecraft/server/EntityPlayer;)V move
	readChunkData (Lnet/minecraft/server/ChunkCoordIntPair;)Lnet/minecraft/server/NBTTagCompound; readChunk
	save (Z)V saveAllChunks
	saveChunk (Lnet/minecraft/server/IChunkAccess;)Z save
	sendChunk (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/ChunkCoordIntPair;[Lnet/minecraft/server/Packet;ZZ)V updateChunkTracking
	unloadChunks (Ljava/util/function/BooleanSupplier;)V tick
net/minecraft/server/PlayerChunkMap$EntityTracker net/minecraft/server/level/ChunkMap$TrackedEntity
	e lastSectionPos
	trackedPlayers seenBy
	tracker entity
	trackerEntry serverEntity
	trackingDistance range
	a ()V broadcastRemoved
	b ()I getEffectiveRange
	broadcastIncludingSelf (Lnet/minecraft/server/Packet;)V broadcastAndSend
	clear (Lnet/minecraft/server/EntityPlayer;)V removePlayer
	track (Ljava/util/List;)V updatePlayers
net/minecraft/server/PlayerConnection net/minecraft/server/network/ServerGamePacketListenerImpl
	A awaitingTeleportTime
	B clientIsFloating
	C aboveGroundTickCount
	D clientVehicleIsFloating
	E aboveGroundVehicleTickCount
	awaitingKeepAlive keepAlivePending
	c LOGGER
	chatThrottle chatSpamTickCount
	e tickCount
	h keepAliveChallenge
	j dropSpamTickCount
	k expectedAcks
	l firstGoodX
	lastKeepAlive keepAliveTime
	m firstGoodY
	minecraftServer server
	n firstGoodZ
	networkManager connection
	o lastGoodX
	p lastGoodY
	processedMovePackets knownMovePacketCount
	q lastGoodZ
	r lastVehicle
	receivedMovePackets receivedMovePacketCount
	s vehicleFirstGoodX
	t vehicleFirstGoodY
	teleportAwait awaitingTeleport
	teleportPos awaitingPositionFromClient
	u vehicleFirstGoodZ
	v vehicleLastGoodX
	w vehicleLastGoodY
	x vehicleLastGoodZ
	a ()Lnet/minecraft/server/NetworkManager; getConnection
	a (DDDFF)V teleport
	a (DDDFFLjava/util/Set;)V teleport
	a (Ljava/lang/String;)V info
	a (Lnet/minecraft/server/IChatBaseComponent;)V onDisconnect
	a (Lnet/minecraft/server/IWorldReader;)Z isPlayerCollidingWithAnything
	a (Lnet/minecraft/server/Packet;Lio/netty/util/concurrent/GenericFutureListener;)V send
	a (Lnet/minecraft/server/PacketPlayInAbilities;)V handlePlayerAbilities
	a (Lnet/minecraft/server/PacketPlayInAdvancements;)V handleSeenAdvancements
	a (Lnet/minecraft/server/PacketPlayInArmAnimation;)V handleAnimate
	a (Lnet/minecraft/server/PacketPlayInAutoRecipe;)V handlePlaceRecipe
	a (Lnet/minecraft/server/PacketPlayInBEdit;)V handleEditBook
	a (Lnet/minecraft/server/PacketPlayInBeacon;)V handleSetBeaconPacket
	a (Lnet/minecraft/server/PacketPlayInBlockDig;)V handlePlayerAction
	a (Lnet/minecraft/server/PacketPlayInBlockPlace;)V handleUseItem
	a (Lnet/minecraft/server/PacketPlayInBoatMove;)V handlePaddleBoat
	a (Lnet/minecraft/server/PacketPlayInChat;)V handleChat
	a (Lnet/minecraft/server/PacketPlayInClientCommand;)V handleClientCommand
	a (Lnet/minecraft/server/PacketPlayInCloseWindow;)V handleContainerClose
	a (Lnet/minecraft/server/PacketPlayInCustomPayload;)V handleCustomPayload
	a (Lnet/minecraft/server/PacketPlayInDifficultyChange;)V handleChangeDifficulty
	a (Lnet/minecraft/server/PacketPlayInDifficultyLock;)V handleLockDifficulty
	a (Lnet/minecraft/server/PacketPlayInEnchantItem;)V handleContainerButtonClick
	a (Lnet/minecraft/server/PacketPlayInEntityAction;)V handlePlayerCommand
	a (Lnet/minecraft/server/PacketPlayInEntityNBTQuery;)V handleEntityTagQuery
	a (Lnet/minecraft/server/PacketPlayInFlying;)V handleMovePlayer
	a (Lnet/minecraft/server/PacketPlayInHeldItemSlot;)V handleSetCarriedItem
	a (Lnet/minecraft/server/PacketPlayInItemName;)V handleRenameItem
	a (Lnet/minecraft/server/PacketPlayInKeepAlive;)V handleKeepAlive
	a (Lnet/minecraft/server/PacketPlayInPickItem;)V handlePickItem
	a (Lnet/minecraft/server/PacketPlayInRecipeDisplayed;)V handleRecipeBookUpdatePacket
	a (Lnet/minecraft/server/PacketPlayInResourcePackStatus;)V handleResourcePackResponse
	a (Lnet/minecraft/server/PacketPlayInSetCommandBlock;)V handleSetCommandBlock
	a (Lnet/minecraft/server/PacketPlayInSetCommandMinecart;)V handleSetCommandMinecart
	a (Lnet/minecraft/server/PacketPlayInSetCreativeSlot;)V handleSetCreativeModeSlot
	a (Lnet/minecraft/server/PacketPlayInSetJigsaw;)V handleSetJigsawBlock
	a (Lnet/minecraft/server/PacketPlayInSettings;)V handleClientInformation
	a (Lnet/minecraft/server/PacketPlayInSpectate;)V handleTeleportToEntityPacket
	a (Lnet/minecraft/server/PacketPlayInSteerVehicle;)V handlePlayerInput
	a (Lnet/minecraft/server/PacketPlayInStruct;)V handleSetStructureBlock
	a (Lnet/minecraft/server/PacketPlayInTabComplete;)V handleCustomCommandSuggestions
	a (Lnet/minecraft/server/PacketPlayInTeleportAccept;)V handleAcceptTeleportPacket
	a (Lnet/minecraft/server/PacketPlayInTileNBTQuery;)V handleBlockEntityTagQuery
	a (Lnet/minecraft/server/PacketPlayInTrSel;)V handleSelectTrade
	a (Lnet/minecraft/server/PacketPlayInTransaction;)V handleContainerAck
	a (Lnet/minecraft/server/PacketPlayInUpdateSign;)V handleSignUpdate
	a (Lnet/minecraft/server/PacketPlayInUseEntity;)V handleInteract
	a (Lnet/minecraft/server/PacketPlayInUseItem;)V handleUseItemOn
	a (Lnet/minecraft/server/PacketPlayInVehicleMove;)V handleMoveVehicle
	a (Lnet/minecraft/server/PacketPlayInWindowClick;)V handleContainerClick
	b (Ljava/lang/String;)V warn
	b (Lnet/minecraft/server/PacketPlayInFlying;)Z containsInvalidValues
	b (Lnet/minecraft/server/PacketPlayInVehicleMove;)Z containsInvalidValues
	isExemptPlayer ()Z isSingleplayerOwner
	sendPacket (Lnet/minecraft/server/Packet;)V send
	syncPosition ()V resetPosition
net/minecraft/server/PlayerConnectionUtils net/minecraft/network/protocol/PacketUtils
	a LOGGER
	ensureMainThread (Lnet/minecraft/server/Packet;Lnet/minecraft/server/PacketListener;Lnet/minecraft/server/IAsyncTaskHandler;)V ensureRunningOnSameThread
	ensureMainThread (Lnet/minecraft/server/Packet;Lnet/minecraft/server/PacketListener;Lnet/minecraft/server/WorldServer;)V ensureRunningOnSameThread
net/minecraft/server/PlayerInteractManager net/minecraft/server/level/ServerPlayerGameMode
	c LOGGER
	currentTick gameTicks
	e isDestroyingBlock
	g destroyPos
	gamemode gameModeForPlayer
	i hasDelayedDestroy
	j delayedDestroyPos
	k delayedTickStart
	l lastSentState
	lastDigTick destroyProgressStart
	world level
	a ()V tick
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PacketPlayInBlockDig$EnumPlayerDigType;Ljava/lang/String;)V destroyAndAck
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/PacketPlayInBlockDig$EnumPlayerDigType;Lnet/minecraft/server/EnumDirection;I)V handleBlockBreakAction
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/World;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumHand;)Lnet/minecraft/server/EnumInteractionResult; useItem
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/World;Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumHand;Lnet/minecraft/server/MovingObjectPositionBlock;)Lnet/minecraft/server/EnumInteractionResult; useItemOn
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/BlockPosition;I)F incrementDestroyProgress
	a (Lnet/minecraft/server/WorldServer;)V setLevel
	b (Lnet/minecraft/server/EnumGamemode;)V updateGameMode
	breakBlock (Lnet/minecraft/server/BlockPosition;)Z destroyBlock
	c ()Z isSurvival
	getGameMode ()Lnet/minecraft/server/EnumGamemode; getGameModeForPlayer
	setGameMode (Lnet/minecraft/server/EnumGamemode;)V setGameModeForPlayer
net/minecraft/server/PlayerInventory net/minecraft/world/entity/player/Inventory
	extraSlots offhand
	f compartments
	h timesChanged
	itemInHandIndex selected
	M ()Lnet/minecraft/server/IChatBaseComponent; getName
	N_ ()V clearContent
	O_ ()I getContainerSize
	a (D)V swapPaint
	a (F)V hurtArmor
	a (I)Lnet/minecraft/server/ItemStack; getItem
	a (II)Lnet/minecraft/server/ItemStack; removeItem
	a (ILnet/minecraft/server/ItemStack;)V setItem
	a (Ljava/util/function/Predicate;I)I clearInventory
	a (Lnet/minecraft/server/AutoRecipeStackManager;)V fillStackedContents
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/IBlockData;)F getDestroySpeed
	a (Lnet/minecraft/server/ItemStack;)V setPickedItem
	a (Lnet/minecraft/server/NBTTagList;)Lnet/minecraft/server/NBTTagList; save
	a (Lnet/minecraft/server/PlayerInventory;)V replaceWith
	a (Lnet/minecraft/server/Tag;)Z contains
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/ItemStack;)V placeItemBackInInventory
	b (I)Lnet/minecraft/server/ItemStack; removeItemNoUpdate
	b (Lnet/minecraft/server/IBlockData;)Z canDestroy
	b (Lnet/minecraft/server/ItemStack;)I findSlotMatchingItem
	b (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z isSameItem
	b (Lnet/minecraft/server/NBTTagList;)V load
	c ()Z isEmpty
	c (I)V pickSlot
	c (ILnet/minecraft/server/ItemStack;)Z add
	c (Lnet/minecraft/server/ItemStack;)I findSlotMatchingUnusedItem
	d (I)Z isHotbarSlot
	d (ILnet/minecraft/server/ItemStack;)I addResource
	dropContents ()V dropAll
	e ()V setChanged
	e (I)Lnet/minecraft/server/ItemStack; getArmor
	f (Lnet/minecraft/server/ItemStack;)V removeItem
	firstPartial (Lnet/minecraft/server/ItemStack;)I getSlotWithRemainingSpace
	getFirstEmptySlotIndex ()I getFreeSlot
	getHotbarSize ()I getSelectionSize
	getItemInHand ()Lnet/minecraft/server/ItemStack; getSelected
	h (Lnet/minecraft/server/ItemStack;)Z contains
	i ()I getSuitableHotbarSlot
	i (Lnet/minecraft/server/ItemStack;)I addResource
	isSimilarAndNotFull (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z hasRemainingSpaceForItem
	j ()V tick
	l ()I getTimesChanged
	pickup (Lnet/minecraft/server/ItemStack;)Z add
net/minecraft/server/PlayerList net/minecraft/server/players/PlayerList
	a LOGGER
	b USERBANLIST_FILE
	c IPBANLIST_FILE
	d OPLIST_FILE
	e WHITELIST_FILE
	g BAN_DATE_FORMAT
	hasWhitelist doWhiteList
	j playersByUUID
	k bans
	l ipBans
	o stats
	operators ops
	p advancements
	playerFileData playerIo
	t overrideGameMode
	u allowCheatsForAllPlayers
	v sendAllPlayerInfoIn
	a (I)V setViewDistance
	a (Ljava/util/UUID;)Lnet/minecraft/server/EntityPlayer; getPlayer
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/IChatBaseComponent;)V broadcastToTeam
	a (Lnet/minecraft/server/EntityPlayer;)Lnet/minecraft/server/NBTTagCompound; load
	a (Lnet/minecraft/server/EntityPlayer;I)V sendPlayerPermissionLevel
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/GeneratorAccess;)V updatePlayerGameMode
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/WorldServer;)V sendLevelInfo
	a (Lnet/minecraft/server/EnumGamemode;)V setOverrideGameMode
	a (Lnet/minecraft/server/NetworkManager;Lnet/minecraft/server/EntityPlayer;)V placeNewPlayer
	a (Lnet/minecraft/server/Packet;Lnet/minecraft/server/DimensionManager;)V broadcastAll
	addOp (Lcom/mojang/authlib/GameProfile;)V op
	attemptLogin (Ljava/net/SocketAddress;Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/server/IChatBaseComponent; canPlayerLogin
	b (Ljava/lang/String;)Ljava/util/List; getPlayersWithAddress
	b (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/IChatBaseComponent;)V broadcastToAllExceptTeam
	b (Z)Ljava/lang/String; getPlayerNames
	c (Lcom/mojang/authlib/GameProfile;)V blackList
	c (Z)V setAllowCheatsForAllPlayers
	d (Lcom/mojang/authlib/GameProfile;)V whiteList
	d (Lnet/minecraft/server/EntityPlayer;)V sendPlayerPermissionLevel
	disconnect (Lnet/minecraft/server/EntityPlayer;)V remove
	e ()[Ljava/lang/String; getPlayerNamesArray
	f ()[Lcom/mojang/authlib/GameProfile; getPlayerGameProfiles
	f (Lcom/mojang/authlib/GameProfile;)Z canBypassPlayerLimit
	f (Lnet/minecraft/server/EntityPlayer;)Lnet/minecraft/server/AdvancementDataPlayer; getPlayerAdvancements
	getHasWhitelist ()Z isUsingWhitelist
	getIPBans ()Lnet/minecraft/server/IpBanList; getIpBans
	getOPs ()Lnet/minecraft/server/OpList; getOps
	getPlayer (Ljava/lang/String;)Lnet/minecraft/server/EntityPlayer; getPlayerByName
	getProfileBans ()Lnet/minecraft/server/GameProfileBanList; getBans
	getStatisticManager (Lnet/minecraft/server/EntityHuman;)Lnet/minecraft/server/ServerStatisticManager; getPlayerStats
	getWhitelist ()Lnet/minecraft/server/WhiteList; getWhiteList
	getWhitelisted ()[Ljava/lang/String; getWhiteListNames
	isWhitelisted (Lcom/mojang/authlib/GameProfile;)Z isWhiteListed
	m ()[Ljava/lang/String; getOpNames
	moveToWorld (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/DimensionManager;Z)Lnet/minecraft/server/EntityPlayer; respawn
	processLogin (Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/server/EntityPlayer; getPlayerForLogin
	reload ()V reloadResources
	reloadWhitelist ()V reloadWhiteList
	removeOp (Lcom/mojang/authlib/GameProfile;)V deop
	save ()Lnet/minecraft/server/NBTTagCompound; getSingleplayerData
	savePlayerFile (Lnet/minecraft/server/EntityPlayer;)V save
	savePlayers ()V saveAll
	sendAll (Lnet/minecraft/server/Packet;)V broadcastAll
	sendMessage (Lnet/minecraft/server/IChatBaseComponent;)V broadcastMessage
	sendMessage (Lnet/minecraft/server/IChatBaseComponent;Z)V broadcastMessage
	sendPacketNearby (Lnet/minecraft/server/EntityHuman;DDDDLnet/minecraft/server/DimensionManager;Lnet/minecraft/server/Packet;)V broadcast
	sendScoreboard (Lnet/minecraft/server/ScoreboardServer;Lnet/minecraft/server/EntityPlayer;)V updateEntireScoreboard
	setHasWhitelist (Z)V setUsingWhiteList
	setPlayerFileData (Lnet/minecraft/server/WorldServer;)V setLevel
	shutdown ()V removeAll
	updateClient (Lnet/minecraft/server/EntityPlayer;)V sendAllPlayerInfo
	v ()Z isAllowCheatsForAllPlayers
net/minecraft/server/PlayerListBox net/minecraft/server/gui/PlayerListComponent
	a server
	b tickCount
net/minecraft/server/PlayerMap net/minecraft/server/level/PlayerMap
	a players
	a (J)Ljava/util/stream/Stream; getPlayers
	a (JJLnet/minecraft/server/EntityPlayer;)V updatePlayer
	a (JLnet/minecraft/server/EntityPlayer;)V removePlayer
	a (JLnet/minecraft/server/EntityPlayer;Z)V addPlayer
	a (Lnet/minecraft/server/EntityPlayer;)V ignorePlayer
	b (Lnet/minecraft/server/EntityPlayer;)V unIgnorePlayer
	c (Lnet/minecraft/server/EntityPlayer;)Z ignoredOrUnknown
	d (Lnet/minecraft/server/EntityPlayer;)Z ignored
net/minecraft/server/PlayerSelector net/minecraft/commands/arguments/selector/options/EntitySelectorOptions
	a ERROR_UNKNOWN_OPTION
	b ERROR_INAPPLICABLE_OPTION
	c ERROR_RANGE_NEGATIVE
	d ERROR_LEVEL_NEGATIVE
	e ERROR_LIMIT_TOO_SMALL
	f ERROR_SORT_UNKNOWN
	g ERROR_GAME_MODE_INVALID
	h ERROR_ENTITY_TYPE_INVALID
	i OPTIONS
	a ()V bootStrap
	a (Ljava/lang/String;Ler$a;Ljava/util/function/Predicate;Lnet/minecraft/server/IChatBaseComponent;)V register
	a (Lnet/minecraft/server/ArgumentParserSelector;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V suggestNames
	a (Lnet/minecraft/server/ArgumentParserSelector;Ljava/lang/String;I)Ler$a; get
net/minecraft/server/PortalTravelAgent net/minecraft/world/level/PortalForcer
	b random
	world level
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/EnumDirection;DDZ)Lnet/minecraft/server/ShapeDetector$Shape; findPortal
	a (Lnet/minecraft/server/Entity;)Z createPortal
	a (Lnet/minecraft/server/Entity;F)Z findAndMoveToPortal
net/minecraft/server/Position net/minecraft/core/PositionImpl
	a x
	b y
	c z
	a ()D x
	b ()D y
	c ()D z
net/minecraft/server/PotionBrewer net/minecraft/world/item/alchemy/PotionBrewing
	a POTION_MIXES
	b CONTAINER_MIXES
	c ALLOWED_CONTAINERS
	d ALLOWED_CONTAINER
	a ()V bootStrap
	a (Lnet/minecraft/server/Item;)V addContainer
	a (Lnet/minecraft/server/Item;Lnet/minecraft/server/Item;Lnet/minecraft/server/Item;)V addContainerRecipe
	a (Lnet/minecraft/server/ItemStack;)Z isIngredient
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z hasMix
	a (Lnet/minecraft/server/PotionRegistry;)Z isBrewablePotion
	a (Lnet/minecraft/server/PotionRegistry;Lnet/minecraft/server/Item;Lnet/minecraft/server/PotionRegistry;)V addMix
	b (Lnet/minecraft/server/ItemStack;)Z isContainerIngredient
	b (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z hasContainerMix
	c (Lnet/minecraft/server/ItemStack;)Z isPotionIngredient
	c (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z hasPotionMix
	d (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; mix
net/minecraft/server/PotionBrewer$PredicatedCombination net/minecraft/world/item/alchemy/PotionBrewing$Mix
	a from
	b ingredient
	c to
net/minecraft/server/PotionRegistry net/minecraft/world/item/alchemy/Potion
	a name
	b effects
	a ()Ljava/util/List; getEffects
	a (Ljava/lang/String;)Lnet/minecraft/server/PotionRegistry; byName
	b ()Z hasInstantEffects
	b (Ljava/lang/String;)Ljava/lang/String; getName
net/minecraft/server/PotionUtil net/minecraft/world/item/alchemy/PotionUtils
	a (Ljava/util/Collection;)I getColor
	a (Lnet/minecraft/server/ItemStack;Ljava/util/Collection;)Lnet/minecraft/server/ItemStack; setCustomEffects
	a (Lnet/minecraft/server/ItemStack;Ljava/util/List;F)V addPotionTooltip
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/PotionRegistry;)Lnet/minecraft/server/ItemStack; setPotion
	a (Lnet/minecraft/server/NBTTagCompound;)Ljava/util/List; getAllEffects
	a (Lnet/minecraft/server/NBTTagCompound;Ljava/util/List;)V getCustomEffects
	a (Lnet/minecraft/server/PotionRegistry;)I getColor
	a (Lnet/minecraft/server/PotionRegistry;Ljava/util/Collection;)Ljava/util/List; getAllEffects
	b (Lnet/minecraft/server/ItemStack;)Ljava/util/List; getCustomEffects
	b (Lnet/minecraft/server/NBTTagCompound;)Ljava/util/List; getCustomEffects
	c (Lnet/minecraft/server/ItemStack;)I getColor
	c (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/PotionRegistry; getPotion
	d (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/PotionRegistry; getPotion
	getEffects (Lnet/minecraft/server/ItemStack;)Ljava/util/List; getMobEffects
net/minecraft/server/Potions net/minecraft/world/item/alchemy/Potions
	a (Ljava/lang/String;Lnet/minecraft/server/PotionRegistry;)Lnet/minecraft/server/PotionRegistry; register
net/minecraft/server/ProjectileHelper net/minecraft/world/entity/projectile/ProjectileUtil
	a (Lnet/minecraft/server/Entity;)Ljava/util/Set; getIgnoredEntities
	a (Lnet/minecraft/server/Entity;F)V rotateTowardsMovement
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/function/Predicate;Lnet/minecraft/server/RayTrace$BlockCollisionOption;Z)Lnet/minecraft/server/MovingObjectPosition; getHitResult
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/function/Predicate;D)Lnet/minecraft/server/MovingObjectPositionEntity; getEntityHitResult
	a (Lnet/minecraft/server/Entity;ZZLnet/minecraft/server/Entity;Lnet/minecraft/server/RayTrace$BlockCollisionOption;)Lnet/minecraft/server/MovingObjectPosition; forwardsRaycast
	a (Lnet/minecraft/server/Entity;ZZLnet/minecraft/server/Entity;Lnet/minecraft/server/RayTrace$BlockCollisionOption;ZLjava/util/function/Predicate;Lnet/minecraft/server/AxisAlignedBB;)Lnet/minecraft/server/MovingObjectPosition; forwardsRaycast
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/Item;)Lnet/minecraft/server/EnumHand; getWeaponHoldingHand
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/ItemStack;F)Lnet/minecraft/server/EntityArrow; getMobArrow
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/Entity;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/function/Predicate;)Lnet/minecraft/server/MovingObjectPositionEntity; getHitResult
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/Entity;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/function/Predicate;D)Lnet/minecraft/server/MovingObjectPositionEntity; getHitResult
net/minecraft/server/PropertyManager net/minecraft/server/dedicated/Settings
	a LOGGER
	a ()Ljava/util/Properties; cloneProperties
	a (Ljava/lang/String;)Ljava/lang/String; getLegacyString
	a (Ljava/lang/String;Ljava/util/function/Function;)Ljava/lang/Object; getLegacy
	a (Ljava/lang/String;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object; get
	a (Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object; get
	a (Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/UnaryOperator;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object; get
	a (Ljava/lang/String;Ljava/util/function/UnaryOperator;I)I get
	a (Ljava/util/function/Function;)Ljava/util/function/Function; wrapNumberDeserializer
	a (Ljava/util/function/IntFunction;Ljava/util/function/Function;)Ljava/util/function/Function; dispatchNumberOrString
	b (Ljava/lang/String;)Ljava/lang/Boolean; getLegacyBoolean
	b (Ljava/lang/String;I)Lnet/minecraft/server/PropertyManager$EditableProperty; getMutable
	b (Ljava/lang/String;Ljava/util/function/Function;Ljava/lang/Object;)Lnet/minecraft/server/PropertyManager$EditableProperty; getMutable
	b (Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Lnet/minecraft/server/PropertyManager$EditableProperty; getMutable
	b (Ljava/lang/String;Z)Lnet/minecraft/server/PropertyManager$EditableProperty; getMutable
	c (Ljava/lang/String;)Ljava/lang/String; getStringRaw
	getBoolean (Ljava/lang/String;Z)Z get
	getInt (Ljava/lang/String;I)I get
	getLong (Ljava/lang/String;J)J get
	getString (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; get
	loadPropertiesFile (Ljava/nio/file/Path;)Ljava/util/Properties; loadFromFile
	savePropertiesFile (Ljava/nio/file/Path;)V store
net/minecraft/server/PropertyManager$EditableProperty net/minecraft/server/dedicated/Settings$MutableValue
	b key
	c value
	d serializer
	set (Ljava/lang/Object;)Lnet/minecraft/server/PropertyManager; update
net/minecraft/server/ProtoChunk net/minecraft/world/level/chunk/ProtoChunk
	a LOGGER
	b chunkPos
	c isDirty
	d biomes
	e lightEngine
	f heightmaps
	g status
	h blockEntities
	i blockEntityNbts
	j sections
	k entities
	l lights
	m postProcessing
	n structureStarts
	o structuresRefences
	p upgradeData
	q blockTicks
	r liquidTicks
	s inhabitedTime
	t carvingMasks
	u isLightCorrect
	a (I)Lnet/minecraft/server/ChunkSection; getOrCreateSection
	a (J)V setLastSaveTime
	a (Ljava/lang/String;)Lnet/minecraft/server/StructureStart; getStartForFeature
	a (Ljava/lang/String;J)V addReferenceForFeature
	a (Ljava/lang/String;Lnet/minecraft/server/StructureStart;)V setStartForFeature
	a (Ljava/util/Map;)V setAllStarts
	a (Lnet/minecraft/server/BiomeStorage;)V setBiomes
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Lnet/minecraft/server/IBlockData; setBlockState
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/TileEntity;)V setBlockEntity
	a (Lnet/minecraft/server/ChunkStatus;)V setStatus
	a (Lnet/minecraft/server/Entity;)V addEntity
	a (Lnet/minecraft/server/HeightMap$Type;)Lnet/minecraft/server/HeightMap; getOrCreateHeightmapUnprimed
	a (Lnet/minecraft/server/HeightMap$Type;II)I getHeight
	a (Lnet/minecraft/server/HeightMap$Type;[J)V setHeightmap
	a (Lnet/minecraft/server/LightEngine;)V setLightEngine
	a (Lnet/minecraft/server/NBTTagCompound;)V setBlockEntityNbt
	a (Lnet/minecraft/server/WorldGenStage$Features;)Ljava/util/BitSet; getCarvingMask
	a (Lnet/minecraft/server/WorldGenStage$Features;Ljava/util/BitSet;)V setCarvingMask
	a (SI)V addPackedPostProcess
	a (SILnet/minecraft/server/ChunkCoordIntPair;)Lnet/minecraft/server/BlockPosition; unpackOffsetCoordinates
	a (Z)V setUnsaved
	b (J)V setInhabitedTime
	b (Ljava/lang/String;)Lit/unimi/dsi/fastutil/longs/LongSet; getReferencesForFeature
	b (Ljava/util/Map;)V setAllReferences
	b (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/Fluid; getFluidState
	b (Lnet/minecraft/server/HeightMap$Type;)Lnet/minecraft/server/BlockPosition; getHeighestPosition
	b (Lnet/minecraft/server/NBTTagCompound;)V addEntity
	b (SI)V addLight
	b (Z)V setLightCorrect
	c ()Ljava/util/Set; getBlockEntitiesPos
	c (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/TileEntity; getBlockEntity
	d ()[Lnet/minecraft/server/ChunkSection; getSections
	d (Lnet/minecraft/server/BlockPosition;)V removeBlockEntity
	d_ (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getBlockState
	e ()Lnet/minecraft/server/LightEngine; getLightEngine
	e (Lnet/minecraft/server/BlockPosition;)V markPosForPostprocessing
	f ()Ljava/util/Collection; getHeightmaps
	f (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/NBTTagCompound; getBlockEntityNbt
	g ()Lnet/minecraft/server/ChunkCoordIntPair; getPos
	h ()Ljava/util/Map; getAllStarts
	i ()Lnet/minecraft/server/BiomeStorage; getBiomes
	i (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/NBTTagCompound; getBlockEntityNbtForSaving
	j ()Z isUnsaved
	j (Lnet/minecraft/server/BlockPosition;)V addLight
	k ()Lnet/minecraft/server/ChunkStatus; getStatus
	k (Lnet/minecraft/server/BlockPosition;)S packOffsetCoordinates
	l ()[Lit/unimi/dsi/fastutil/shorts/ShortList; getPostProcessing
	m ()Ljava/util/stream/Stream; getLights
	n ()Lnet/minecraft/server/TickList; getBlockTicks
	o ()Lnet/minecraft/server/TickList; getLiquidTicks
	p ()Lnet/minecraft/server/ChunkConverter; getUpgradeData
	q ()J getInhabitedTime
	r ()Z isLightCorrect
	s ()Lnet/minecraft/server/ProtoChunkTickList; getBlockTicks
	t ()Lnet/minecraft/server/ProtoChunkTickList; getLiquidTicks
	v ()Ljava/util/Map; getAllReferences
	w ()[Lit/unimi/dsi/fastutil/shorts/ShortList; getPackedLights
	x ()Ljava/util/Map; getBlockEntities
	y ()Ljava/util/List; getEntities
	z ()Ljava/util/Map; getBlockEntityNbts
net/minecraft/server/ProtoChunkExtension net/minecraft/world/level/chunk/ImposterProtoChunk
	a wrapped
	H ()I getMaxLightLevel
	a (J)V setLastSaveTime
	a (Ljava/lang/String;)Lnet/minecraft/server/StructureStart; getStartForFeature
	a (Ljava/lang/String;J)V addReferenceForFeature
	a (Ljava/lang/String;Lnet/minecraft/server/StructureStart;)V setStartForFeature
	a (Ljava/util/Map;)V setAllStarts
	a (Lnet/minecraft/server/BiomeStorage;)V setBiomes
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Z)Lnet/minecraft/server/IBlockData; setBlockState
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/TileEntity;)V setBlockEntity
	a (Lnet/minecraft/server/ChunkStatus;)V setStatus
	a (Lnet/minecraft/server/Entity;)V addEntity
	a (Lnet/minecraft/server/HeightMap$Type;II)I getHeight
	a (Lnet/minecraft/server/HeightMap$Type;[J)V setHeightmap
	a (Lnet/minecraft/server/NBTTagCompound;)V setBlockEntityNbt
	a (Lnet/minecraft/server/WorldGenStage$Features;)Ljava/util/BitSet; getCarvingMask
	a (Z)V setUnsaved
	b (Ljava/lang/String;)Lit/unimi/dsi/fastutil/longs/LongSet; getReferencesForFeature
	b (Ljava/util/Map;)V setAllReferences
	b (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/Fluid; getFluidState
	b (Lnet/minecraft/server/HeightMap$Type;)Lnet/minecraft/server/BlockPosition; getHeighestPosition
	b (Z)V setLightCorrect
	c (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/TileEntity; getBlockEntity
	c (Lnet/minecraft/server/HeightMap$Type;)Lnet/minecraft/server/HeightMap$Type; fixType
	d ()[Lnet/minecraft/server/ChunkSection; getSections
	d (Lnet/minecraft/server/BlockPosition;)V removeBlockEntity
	d_ (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getBlockState
	e ()Lnet/minecraft/server/LightEngine; getLightEngine
	e (Lnet/minecraft/server/BlockPosition;)V markPosForPostprocessing
	f (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/NBTTagCompound; getBlockEntityNbt
	g ()Lnet/minecraft/server/ChunkCoordIntPair; getPos
	h ()Ljava/util/Map; getAllStarts
	i ()Lnet/minecraft/server/BiomeStorage; getBiomes
	i (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/NBTTagCompound; getBlockEntityNbtForSaving
	j ()Z isUnsaved
	k ()Lnet/minecraft/server/ChunkStatus; getStatus
	m ()Ljava/util/stream/Stream; getLights
	n ()Lnet/minecraft/server/TickList; getBlockTicks
	o ()Lnet/minecraft/server/TickList; getLiquidTicks
	r ()Z isLightCorrect
	s ()Lnet/minecraft/server/ProtoChunkTickList; getBlockTicks
	t ()Lnet/minecraft/server/ProtoChunkTickList; getLiquidTicks
	u ()Lnet/minecraft/server/Chunk; getWrapped
	v ()Ljava/util/Map; getAllReferences
net/minecraft/server/ProtoChunkTickList net/minecraft/world/level/chunk/ProtoTickList
	a ignore
	b chunkPos
	c toBeTicked
	a ()I size
	a (Ljava/util/stream/Stream;)V addAll
	a (Lnet/minecraft/server/BlockPosition;Ljava/lang/Object;)Z hasScheduledTick
	a (Lnet/minecraft/server/BlockPosition;Ljava/lang/Object;ILnet/minecraft/server/TickListPriority;)V scheduleTick
	a (Lnet/minecraft/server/TickList;Ljava/util/function/Function;)V copyOut
	b ()Lnet/minecraft/server/NBTTagList; save
	b (Lnet/minecraft/server/BlockPosition;Ljava/lang/Object;)Z willTickThisTick
net/minecraft/server/Quaternion com/mojang/math/Quaternion
	a ONE
	b i
	c j
	d k
	e r
	a ()F i
	a (F)V mul
	a (FFFF)V set
	a (Lnet/minecraft/server/Quaternion;)V mul
	b ()F j
	b (F)F cos
	c ()F k
	c (F)F sin
	d ()F r
	e ()V conj
	f ()V normalize
	g ()Lnet/minecraft/server/Quaternion; copy
net/minecraft/server/Raid net/minecraft/world/entity/raid/Raid
	a RAID_NAME_COMPONENT
	b VICTORY
	bossBattle raidEvent
	c DEFEAT
	d RAID_BAR_VICTORY_COMPONENT
	e RAID_BAR_DEFEAT_COMPONENT
	f groupToLeaderMap
	heroes heroesOfTheVillage
	preRaidTicks raidCooldownTicks
	raiders groupRaiderMap
	world level
	x celebrationTicks
	y waveSpawnPos
	A ()Z hasMoreWaves
	B ()Z isFinalWave
	C ()Z hasBonusWave
	D ()Z hasSpawnedBonusWave
	E ()Z shouldSpawnBonusGroup
	F ()V updateRaiders
	G ()Z shouldSpawnGroup
	H ()V setDirty
	a ()Z isOver
	a (I)V setBadOmenLevel
	a (II)Lnet/minecraft/server/BlockPosition; findRandomSpawnPos
	a (ILnet/minecraft/server/EntityRaider;)V setLeader
	a (ILnet/minecraft/server/EntityRaider;Lnet/minecraft/server/BlockPosition;Z)V joinRaid
	a (ILnet/minecraft/server/EntityRaider;Z)Z addWaveMob
	a (Lnet/minecraft/server/BlockPosition;)V playSound
	a (Lnet/minecraft/server/Entity;)V addHeroOfTheVillage
	a (Lnet/minecraft/server/EntityHuman;)V absorbBadOmen
	a (Lnet/minecraft/server/EntityRaider;Z)V removeFromRaid
	a (Lnet/minecraft/server/EnumDifficulty;)I getNumGroups
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	a (Lnet/minecraft/server/Raid$Wave;IZ)I getDefaultNumSpawns
	a (Lnet/minecraft/server/Raid$Wave;Ljava/util/Random;ILnet/minecraft/server/DifficultyDamageScaler;Z)I getPotentialBonusSpawns
	b ()Z isBetweenWaves
	b (I)Lnet/minecraft/server/EntityRaider; getLeader
	b (ILnet/minecraft/server/EntityRaider;)Z addWaveMob
	b (Lnet/minecraft/server/BlockPosition;)V spawnGroup
	c ()Z hasFirstWaveSpawned
	c (I)V removeLeader
	c (Lnet/minecraft/server/BlockPosition;)V setCenter
	d (I)Ljava/util/Optional; getValidSpawnPos
	g ()F getTotalHealth
	getWorld ()Lnet/minecraft/server/World; getLevel
	h ()Ljava/util/Set; getAllRaiders
	o ()V tick
	r ()I getTotalRaidersAlive
	s ()Lnet/minecraft/server/ItemStack; getLeaderBannerInstance
	sumMobHealth ()F getHealthOfLivingRaiders
	updateProgress ()V updateBossbar
	v ()Z isActive
	w ()F getEnchantOdds
	x ()Ljava/util/function/Predicate; validPlayer
	y ()V updatePlayers
	z ()V moveRaidCenterToNearbyVillageSection
net/minecraft/server/Raid$Status net/minecraft/world/entity/raid/Raid$RaidStatus
	e VALUES
	f $VALUES
	a ()Ljava/lang/String; getName
	b (Ljava/lang/String;)Lnet/minecraft/server/Raid$Status; getByName
net/minecraft/server/Raid$Wave net/minecraft/world/entity/raid/Raid$RaiderType
	f VALUES
	g entityType
	h spawnsPerWaveBeforeBonus
	i $VALUES
net/minecraft/server/RandomPositionGenerator net/minecraft/world/entity/ai/util/RandomPos
	a (Ljava/util/Random;IIILnet/minecraft/server/Vec3D;D)Lnet/minecraft/server/BlockPosition; getRandomDelta
	a (Lnet/minecraft/server/BlockPosition;IILjava/util/function/Predicate;)Lnet/minecraft/server/BlockPosition; moveUpToAboveSolid
	a (Lnet/minecraft/server/EntityCreature;II)Lnet/minecraft/server/Vec3D; getPos
	a (Lnet/minecraft/server/EntityCreature;IIILnet/minecraft/server/Vec3D;D)Lnet/minecraft/server/Vec3D; getAirPos
	a (Lnet/minecraft/server/EntityCreature;IIILnet/minecraft/server/Vec3D;ZDLjava/util/function/ToDoubleFunction;ZIIZ)Lnet/minecraft/server/Vec3D; generateRandomPos
	a (Lnet/minecraft/server/EntityCreature;IILjava/util/function/ToDoubleFunction;)Lnet/minecraft/server/Vec3D; getLandPos
	a (Lnet/minecraft/server/EntityCreature;IILnet/minecraft/server/Vec3D;)Lnet/minecraft/server/Vec3D; getPosTowards
	a (Lnet/minecraft/server/EntityCreature;IILnet/minecraft/server/Vec3D;D)Lnet/minecraft/server/Vec3D; getPosTowards
	a (Lnet/minecraft/server/EntityCreature;IILnet/minecraft/server/Vec3D;FII)Lnet/minecraft/server/Vec3D; getAboveLandPos
	b (Lnet/minecraft/server/EntityCreature;II)Lnet/minecraft/server/Vec3D; getLandPos
	b (Lnet/minecraft/server/EntityCreature;IIILnet/minecraft/server/Vec3D;D)Lnet/minecraft/server/Vec3D; getAirPosTowards
	b (Lnet/minecraft/server/EntityCreature;IILnet/minecraft/server/Vec3D;)Lnet/minecraft/server/Vec3D; getPosAvoid
	c (Lnet/minecraft/server/EntityCreature;IILnet/minecraft/server/Vec3D;)Lnet/minecraft/server/Vec3D; getLandPosAvoid
net/minecraft/server/RayTrace net/minecraft/world/level/ClipContext
	a from
	b to
	c block
	d fluid
	e collisionContext
	a ()Lnet/minecraft/server/Vec3D; getTo
	a (Lnet/minecraft/server/Fluid;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; getFluidShape
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; getBlockShape
	b ()Lnet/minecraft/server/Vec3D; getFrom
net/minecraft/server/RayTrace$BlockCollisionOption net/minecraft/world/level/ClipContext$Block
	c shapeGetter
	d $VALUES
net/minecraft/server/RayTrace$FluidCollisionOption net/minecraft/world/level/ClipContext$Fluid
	e $VALUES
	predicate canPick
	a (Lnet/minecraft/server/Fluid;)Z canPick
net/minecraft/server/RecipeArmorDye net/minecraft/world/item/crafting/ArmorDyeRecipe
	W_ ()Lnet/minecraft/server/RecipeSerializer; getSerializer
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Z matches
	a (Lnet/minecraft/server/InventoryCrafting;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/InventoryCrafting;Lnet/minecraft/server/World;)Z matches
net/minecraft/server/RecipeBannerDuplicate net/minecraft/world/item/crafting/BannerDuplicateRecipe
	W_ ()Lnet/minecraft/server/RecipeSerializer; getSerializer
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Z matches
	a (Lnet/minecraft/server/InventoryCrafting;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/InventoryCrafting;Lnet/minecraft/server/World;)Z matches
	b (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/NonNullList; getRemainingItems
	b (Lnet/minecraft/server/InventoryCrafting;)Lnet/minecraft/server/NonNullList; getRemainingItems
net/minecraft/server/RecipeBlasting net/minecraft/world/item/crafting/BlastingRecipe
	W_ ()Lnet/minecraft/server/RecipeSerializer; getSerializer
	h ()Lnet/minecraft/server/ItemStack; getToastSymbol
net/minecraft/server/RecipeBook net/minecraft/stats/RecipeBook
	a known
	b highlight
	c guiOpen
	d filteringCraftable
	e furnaceGuiOpen
	f furnaceFilteringCraftable
	g blastingFurnaceGuiOpen
	h blastingFurnaceFilteringCraftable
	i smokerGuiOpen
	j smokerFilteringCraftable
	a ()Z isGuiOpen
	a (Lnet/minecraft/server/ContainerRecipeBook;)Z isFilteringCraftable
	a (Lnet/minecraft/server/IRecipe;)V add
	a (Lnet/minecraft/server/MinecraftKey;)V add
	a (Lnet/minecraft/server/RecipeBook;)V copyOverData
	a (Z)V setGuiOpen
	b ()Z isFilteringCraftable
	b (Lnet/minecraft/server/IRecipe;)Z contains
	b (Lnet/minecraft/server/MinecraftKey;)Z contains
	b (Z)V setFilteringCraftable
	c ()Z isFurnaceGuiOpen
	c (Lnet/minecraft/server/IRecipe;)V remove
	c (Lnet/minecraft/server/MinecraftKey;)V remove
	c (Z)V setFurnaceGuiOpen
	d ()Z isFurnaceFilteringCraftable
	d (Lnet/minecraft/server/IRecipe;)Z willHighlight
	d (Lnet/minecraft/server/MinecraftKey;)V addHighlight
	d (Z)V setFurnaceFilteringCraftable
	e ()Z isBlastingFurnaceGuiOpen
	e (Lnet/minecraft/server/IRecipe;)V removeHighlight
	e (Z)V setBlastingFurnaceGuiOpen
	f ()Z isBlastingFurnaceFilteringCraftable
	f (Lnet/minecraft/server/IRecipe;)V addHighlight
	f (Z)V setBlastingFurnaceFilteringCraftable
	g ()Z isSmokerGuiOpen
	g (Z)V setSmokerGuiOpen
	h ()Z isSmokerFilteringCraftable
	h (Z)V setSmokerFilteringCraftable
net/minecraft/server/RecipeBookClone net/minecraft/world/item/crafting/BookCloningRecipe
	W_ ()Lnet/minecraft/server/RecipeSerializer; getSerializer
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Z matches
	a (Lnet/minecraft/server/InventoryCrafting;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/InventoryCrafting;Lnet/minecraft/server/World;)Z matches
	b (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/NonNullList; getRemainingItems
	b (Lnet/minecraft/server/InventoryCrafting;)Lnet/minecraft/server/NonNullList; getRemainingItems
net/minecraft/server/RecipeBookServer net/minecraft/stats/ServerRecipeBook
	k LOGGER
	l manager
	a (Ljava/util/Collection;Lnet/minecraft/server/EntityPlayer;)I addRecipes
	a (Lnet/minecraft/server/EntityPlayer;)V sendInitialRecipeBook
	a (Lnet/minecraft/server/NBTTagCompound;)V fromNbt
	a (Lnet/minecraft/server/NBTTagList;Ljava/util/function/Consumer;)V loadRecipes
	a (Lnet/minecraft/server/PacketPlayOutRecipes$Action;Lnet/minecraft/server/EntityPlayer;Ljava/util/List;)V sendRecipes
	b (Ljava/util/Collection;Lnet/minecraft/server/EntityPlayer;)I removeRecipes
	save ()Lnet/minecraft/server/NBTTagCompound; toNbt
net/minecraft/server/RecipeCampfire net/minecraft/world/item/crafting/CampfireCookingRecipe
	W_ ()Lnet/minecraft/server/RecipeSerializer; getSerializer
	h ()Lnet/minecraft/server/ItemStack; getToastSymbol
net/minecraft/server/RecipeCooking net/minecraft/world/item/crafting/AbstractCookingRecipe
	a type
	key id
	a ()Lnet/minecraft/server/NonNullList; getIngredients
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Z matches
	b ()F getExperience
	c ()Lnet/minecraft/server/ItemStack; getResultItem
	d ()Ljava/lang/String; getGroup
	e ()I getCookingTime
	f ()Lnet/minecraft/server/MinecraftKey; getId
	g ()Lnet/minecraft/server/Recipes; getType
net/minecraft/server/RecipeCrafting net/minecraft/world/item/crafting/CraftingRecipe
	g ()Lnet/minecraft/server/Recipes; getType
net/minecraft/server/RecipeFireworks net/minecraft/world/item/crafting/FireworkRocketRecipe
	a PAPER_INGREDIENT
	b GUNPOWDER_INGREDIENT
	c STAR_INGREDIENT
	W_ ()Lnet/minecraft/server/RecipeSerializer; getSerializer
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Z matches
	a (Lnet/minecraft/server/InventoryCrafting;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/InventoryCrafting;Lnet/minecraft/server/World;)Z matches
	c ()Lnet/minecraft/server/ItemStack; getResultItem
net/minecraft/server/RecipeFireworksFade net/minecraft/world/item/crafting/FireworkStarFadeRecipe
	a STAR_INGREDIENT
	W_ ()Lnet/minecraft/server/RecipeSerializer; getSerializer
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Z matches
	a (Lnet/minecraft/server/InventoryCrafting;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/InventoryCrafting;Lnet/minecraft/server/World;)Z matches
net/minecraft/server/RecipeFireworksStar net/minecraft/world/item/crafting/FireworkStarRecipe
	a SHAPE_INGREDIENT
	b TRAIL_INGREDIENT
	c FLICKER_INGREDIENT
	d SHAPE_BY_ITEM
	e GUNPOWDER_INGREDIENT
	W_ ()Lnet/minecraft/server/RecipeSerializer; getSerializer
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Z matches
	a (Lnet/minecraft/server/InventoryCrafting;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/InventoryCrafting;Lnet/minecraft/server/World;)Z matches
	c ()Lnet/minecraft/server/ItemStack; getResultItem
net/minecraft/server/RecipeHolder net/minecraft/world/inventory/RecipeHolder
	a (Lnet/minecraft/server/IRecipe;)V setRecipeUsed
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/IRecipe;)Z setRecipeUsed
	aa_ ()Lnet/minecraft/server/IRecipe; getRecipeUsed
	b (Lnet/minecraft/server/EntityHuman;)V awardAndReset
net/minecraft/server/RecipeItemStack net/minecraft/world/item/crafting/Ingredient
	a EMPTY
	b NON_ALL_EMPTY
	c values
	choices itemStacks
	e stackingIds
	a ()[Lnet/minecraft/server/ItemStack; getItems
	a (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/RecipeItemStack; fromJson
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/RecipeItemStack$Provider; valueFromJson
	a (Ljava/util/stream/Stream;)Lnet/minecraft/server/RecipeItemStack; fromValues
	a (Lnet/minecraft/server/ItemStack;)Z test
	a (Lnet/minecraft/server/PacketDataSerializer;)V toNetwork
	a (Lnet/minecraft/server/Tag;)Lnet/minecraft/server/RecipeItemStack; of
	a ([Lnet/minecraft/server/IMaterial;)Lnet/minecraft/server/RecipeItemStack; of
	a ([Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/RecipeItemStack; of
	b ()Lit/unimi/dsi/fastutil/ints/IntList; getStackingIds
	b (Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/RecipeItemStack; fromNetwork
	buildChoices ()V dissolve
	c ()Lcom/google/gson/JsonElement; toJson
	d ()Z isEmpty
	e ()Lnet/minecraft/server/RecipeItemStack; of
net/minecraft/server/RecipeItemStack$Provider net/minecraft/world/item/crafting/Ingredient$Value
	a ()Ljava/util/Collection; getItems
	b ()Lcom/google/gson/JsonObject; serialize
net/minecraft/server/RecipeItemStack$StackProvider net/minecraft/world/item/crafting/Ingredient$ItemValue
	a item
	a ()Ljava/util/Collection; getItems
	b ()Lcom/google/gson/JsonObject; serialize
net/minecraft/server/RecipeMapClone net/minecraft/world/item/crafting/MapCloningRecipe
	W_ ()Lnet/minecraft/server/RecipeSerializer; getSerializer
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Z matches
	a (Lnet/minecraft/server/InventoryCrafting;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/InventoryCrafting;Lnet/minecraft/server/World;)Z matches
net/minecraft/server/RecipeMapExtend net/minecraft/world/item/crafting/MapExtendingRecipe
	V_ ()Z isSpecial
	W_ ()Lnet/minecraft/server/RecipeSerializer; getSerializer
	a (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Z matches
	a (Lnet/minecraft/server/InventoryCrafting;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/InventoryCrafting;Lnet/minecraft/server/World;)Z matches
	a (Lnet/minecraft/server/WorldMap;)Z isExplorationMap
net/minecraft/server/RecipeRepair net/minecraft/world/item/crafting/RepairItemRecipe
	W_ ()Lnet/minecraft/server/RecipeSerializer; getSerializer
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Z matches
	a (Lnet/minecraft/server/InventoryCrafting;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/InventoryCrafting;Lnet/minecraft/server/World;)Z matches
net/minecraft/server/RecipeSerializer net/minecraft/world/item/crafting/RecipeSerializer
	a SHAPED_RECIPE
	b SHAPELESS_RECIPE
	c ARMOR_DYE
	d BOOK_CLONING
	e MAP_CLONING
	f MAP_EXTENDING
	g FIREWORK_ROCKET
	h FIREWORK_STAR
	i FIREWORK_STAR_FADE
	j TIPPED_ARROW
	k BANNER_DUPLICATE
	l SHIELD_DECORATION
	m SHULKER_BOX_COLORING
	n SUSPICIOUS_STEW
	o REPAIR_ITEM
	p SMELTING_RECIPE
	q BLASTING_RECIPE
	r SMOKING_RECIPE
	s CAMPFIRE_COOKING_RECIPE
	t STONECUTTER
	a (Ljava/lang/String;Lnet/minecraft/server/RecipeSerializer;)Lnet/minecraft/server/RecipeSerializer; register
	a (Lnet/minecraft/server/MinecraftKey;Lcom/google/gson/JsonObject;)Lnet/minecraft/server/IRecipe; fromJson
	a (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/IRecipe; fromNetwork
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/IRecipe;)V toNetwork
net/minecraft/server/RecipeSerializerComplex net/minecraft/world/item/crafting/SimpleRecipeSerializer
	u constructor
	a (Lnet/minecraft/server/MinecraftKey;Lcom/google/gson/JsonObject;)Lnet/minecraft/server/IRecipe; fromJson
	a (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/IRecipe; fromNetwork
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/IRecipe;)V toNetwork
net/minecraft/server/RecipeSerializerCooking net/minecraft/world/item/crafting/SimpleCookingSerializer
	u defaultCookingTime
	v factory
	a (Lnet/minecraft/server/MinecraftKey;Lcom/google/gson/JsonObject;)Lnet/minecraft/server/IRecipe; fromJson
	a (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/IRecipe; fromNetwork
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/IRecipe;)V toNetwork
	a (Lnet/minecraft/server/PacketDataSerializer;Lnet/minecraft/server/RecipeCooking;)V toNetwork
	b (Lnet/minecraft/server/MinecraftKey;Lcom/google/gson/JsonObject;)Lnet/minecraft/server/RecipeCooking; fromJson
	b (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/RecipeCooking; fromNetwork
net/minecraft/server/RecipeShulkerBox net/minecraft/world/item/crafting/ShulkerBoxColoring
	W_ ()Lnet/minecraft/server/RecipeSerializer; getSerializer
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Z matches
	a (Lnet/minecraft/server/InventoryCrafting;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/InventoryCrafting;Lnet/minecraft/server/World;)Z matches
net/minecraft/server/RecipeSingleItem net/minecraft/world/item/crafting/SingleItemRecipe
	e type
	f serializer
	key id
	W_ ()Lnet/minecraft/server/RecipeSerializer; getSerializer
	a ()Lnet/minecraft/server/NonNullList; getIngredients
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/ItemStack; assemble
	c ()Lnet/minecraft/server/ItemStack; getResultItem
	d ()Ljava/lang/String; getGroup
	f ()Lnet/minecraft/server/MinecraftKey; getId
	g ()Lnet/minecraft/server/Recipes; getType
net/minecraft/server/RecipeSmoking net/minecraft/world/item/crafting/SmokingRecipe
	W_ ()Lnet/minecraft/server/RecipeSerializer; getSerializer
	h ()Lnet/minecraft/server/ItemStack; getToastSymbol
net/minecraft/server/RecipeStonecutting net/minecraft/world/item/crafting/StonecutterRecipe
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Z matches
	h ()Lnet/minecraft/server/ItemStack; getToastSymbol
net/minecraft/server/RecipeSuspiciousStew net/minecraft/world/item/crafting/SuspiciousStewRecipe
	W_ ()Lnet/minecraft/server/RecipeSerializer; getSerializer
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Z matches
	a (Lnet/minecraft/server/InventoryCrafting;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/InventoryCrafting;Lnet/minecraft/server/World;)Z matches
net/minecraft/server/RecipeTippedArrow net/minecraft/world/item/crafting/TippedArrowRecipe
	W_ ()Lnet/minecraft/server/RecipeSerializer; getSerializer
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Z matches
	a (Lnet/minecraft/server/InventoryCrafting;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/InventoryCrafting;Lnet/minecraft/server/World;)Z matches
net/minecraft/server/Recipes net/minecraft/world/item/crafting/RecipeType
	a (Ljava/lang/String;)Lnet/minecraft/server/Recipes; register
	a (Lnet/minecraft/server/IRecipe;Lnet/minecraft/server/World;Lnet/minecraft/server/IInventory;)Ljava/util/Optional; tryMatch
net/minecraft/server/RecipiesShield net/minecraft/world/item/crafting/ShieldDecorationRecipe
	W_ ()Lnet/minecraft/server/RecipeSerializer; getSerializer
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Z matches
	a (Lnet/minecraft/server/InventoryCrafting;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/InventoryCrafting;Lnet/minecraft/server/World;)Z matches
net/minecraft/server/RedirectStream net/minecraft/server/LoggedPrintStream
	a LOGGER
	b name
	a (Ljava/lang/String;)V logLine
net/minecraft/server/RegionFile net/minecraft/world/level/chunk/storage/RegionFile
	a LOGGER
	b PADDING_BUFFER
	d externalFileDir
	dataFile file
	e version
	f header
	freeSectors usedSectors
	g offsets
	h timestamps
	a ()Ljava/nio/ByteBuffer; createExternalStub
	a (B)Z isExternalStreamChunk
	a (I)I getNumSectors
	a (II)I packSectorOffset
	a (Ljava/nio/ByteBuffer;I)Ljava/io/ByteArrayInputStream; createStream
	a (Ljava/nio/file/Path;Ljava/nio/ByteBuffer;)Lcaz$b; writeToExternalFile
	a (Lnet/minecraft/server/ChunkCoordIntPair;)Ljava/io/DataInputStream; getChunkDataInputStream
	a (Lnet/minecraft/server/ChunkCoordIntPair;B)Ljava/io/DataInputStream; createExternalChunkInputStream
	a (Lnet/minecraft/server/ChunkCoordIntPair;BLjava/io/InputStream;)Ljava/io/DataInputStream; createChunkInputStream
	a (Lnet/minecraft/server/ChunkCoordIntPair;Ljava/nio/ByteBuffer;)V write
	b ()V writeHeader
	b (B)B getExternalChunkVersion
	b (I)I getSectorNumber
	b (Lnet/minecraft/server/ChunkCoordIntPair;)Z doesChunkExist
	c ()V padToFullSector
	c (I)I sizeToSectors
	c (Lnet/minecraft/server/ChunkCoordIntPair;)Ljava/io/DataOutputStream; getChunkDataOutputStream
	chunkExists (Lnet/minecraft/server/ChunkCoordIntPair;)Z hasChunk
	e (Lnet/minecraft/server/ChunkCoordIntPair;)Ljava/nio/file/Path; getExternalChunkPath
	g (Lnet/minecraft/server/ChunkCoordIntPair;)I getOffsetIndex
net/minecraft/server/RegionFile$ChunkBuffer net/minecraft/world/level/chunk/storage/RegionFile$ChunkBuffer
	b pos
net/minecraft/server/RegionFileBitSet net/minecraft/world/level/chunk/storage/RegionBitmap
	a used
	a ()Lit/unimi/dsi/fastutil/ints/IntSet; getUsed
	a (I)I allocate
	a (II)V force
	b (II)V free
net/minecraft/server/RegionFileCache net/minecraft/world/level/chunk/storage/RegionFileStorage
	b folder
	cache regionCache
	getFile (Lnet/minecraft/server/ChunkCoordIntPair;)Lnet/minecraft/server/RegionFile; getRegionFile
net/minecraft/server/RegionFileCompression net/minecraft/world/level/chunk/storage/RegionFileVersion
	a VERSION_GZIP
	b VERSION_DEFLATE
	c VERSION_NONE
	d VERSIONS
	e id
	f inputWrapper
	g outputWrapper
	a ()I getId
	a (I)Lnet/minecraft/server/RegionFileCompression; fromId
	a (Ljava/io/InputStream;)Ljava/io/InputStream; wrap
	a (Ljava/io/OutputStream;)Ljava/io/OutputStream; wrap
	a (Lnet/minecraft/server/RegionFileCompression;)Lnet/minecraft/server/RegionFileCompression; register
	b (I)Z isValidVersion
net/minecraft/server/RegionFileSection net/minecraft/world/level/chunk/storage/SectionStorage
	a LOGGER
	b worker
	c storage
	d dirty
	e deserializer
	f factory
	g fixerUpper
	h type
	a (J)V setDirty
	a (Lcom/mojang/datafixers/Dynamic;)I getVersion
	a (Ljava/util/function/BooleanSupplier;)V tick
	a (Lnet/minecraft/server/ChunkCoordIntPair;)V flush
	a (Lnet/minecraft/server/ChunkCoordIntPair;Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; writeColumn
	a (Lnet/minecraft/server/ChunkCoordIntPair;Lcom/mojang/datafixers/types/DynamicOps;Ljava/lang/Object;)V readColumn
	b (J)V onSectionLoad
	b (Lnet/minecraft/server/ChunkCoordIntPair;)V readColumn
	b (Lnet/minecraft/server/SectionPosition;)Z outsideStoredRange
	c (J)Ljava/util/Optional; get
	c (Lnet/minecraft/server/ChunkCoordIntPair;)Lnet/minecraft/server/NBTTagCompound; tryRead
	d (J)Ljava/util/Optional; getOrLoad
	d (Lnet/minecraft/server/ChunkCoordIntPair;)V writeColumn
	e (J)Lnet/minecraft/server/MinecraftSerializable; getOrCreate
net/minecraft/server/RegionLimitedWorldAccess net/minecraft/server/level/WorldGenRegion
	a LOGGER
	b cache
	c x
	d z
	e size
	f level
	g seed
	h seaLevel
	i levelData
	j random
	k dimension
	l settings
	m blockTicks
	n liquidTicks
	o biomeManager
	A ()Ljava/util/List; players
	E ()Lnet/minecraft/server/IChunkProvider; getChunkSource
	F ()Lnet/minecraft/server/TickList; getLiquidTicks
	G ()Lnet/minecraft/server/TickList; getBlockTicks
	a ()I getCenterX
	a (DDDDLjava/util/function/Predicate;)Lnet/minecraft/server/EntityHuman; getNearestPlayer
	a (II)Lnet/minecraft/server/IChunkAccess; getChunk
	a (III)Lnet/minecraft/server/BiomeBase; getUncachedNoiseBiome
	a (IILnet/minecraft/server/ChunkStatus;Z)Lnet/minecraft/server/IChunkAccess; getChunk
	a (Ljava/lang/Class;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/function/Predicate;)Ljava/util/List; getEntitiesOfClass
	a (Lnet/minecraft/server/BlockPosition;Ljava/util/function/Predicate;)Z isStateAtPosition
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;)V blockUpdated
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;I)Z setBlock
	a (Lnet/minecraft/server/BlockPosition;Z)Z removeBlock
	a (Lnet/minecraft/server/BlockPosition;ZLnet/minecraft/server/Entity;)Z destroyBlock
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/function/Predicate;)Ljava/util/List; getEntities
	a (Lnet/minecraft/server/EntityHuman;ILnet/minecraft/server/BlockPosition;I)V levelEvent
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/SoundEffect;Lnet/minecraft/server/SoundCategory;FF)V playSound
	a (Lnet/minecraft/server/HeightMap$Type;II)I getHeight
	a (Lnet/minecraft/server/ParticleParam;DDDDDD)V addParticle
	b ()I getCenterZ
	b (II)Z hasChunk
	b (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/Fluid; getFluidState
	b (Lnet/minecraft/server/BlockPosition;Ljava/util/function/Predicate;)Z isFluidAtPosition
	c ()I getSkyDarken
	c (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/TileEntity; getBlockEntity
	c (Lnet/minecraft/server/Entity;)Z addFreshEntity
	d ()Lnet/minecraft/server/BiomeManager; getBiomeManager
	d (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/DifficultyDamageScaler; getCurrentDifficultyAt
	d_ (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getBlockState
	e ()Lnet/minecraft/server/LightEngine; getLightEngine
	e (Lnet/minecraft/server/BlockPosition;)V markPosForPostprocessing
	f ()Lnet/minecraft/server/WorldBorder; getWorldBorder
	h ()Lnet/minecraft/server/WorldServer; getLevel
	i ()Lnet/minecraft/server/WorldData; getLevelData
	l ()Lnet/minecraft/server/GeneratorSettingsDefault; getSettings
	o ()Lnet/minecraft/server/WorldProvider; getDimension
	p ()Lnet/minecraft/server/MinecraftServer; getServer
	p_ ()Z isClientSide
	q ()Lnet/minecraft/server/World; getLevel
	q_ ()I getSeaLevel
	r_ ()J getSeed
	s_ ()Lnet/minecraft/server/BlockPosition; getSharedSpawnPos
	t_ ()Ljava/util/Random; getRandom
net/minecraft/server/Registry net/minecraft/core/IdMap
	a (Ljava/lang/Object;)I getId
	fromId (I)Ljava/lang/Object; byId
net/minecraft/server/RegistryBlockID net/minecraft/core/IdMapper
	a nextId
	b tToId
	c idToT
	a ()I size
	a (Ljava/lang/Object;I)V addMapping
	b (I)Z contains
	b (Ljava/lang/Object;)V add
	fromId (I)Ljava/lang/Object; byId
net/minecraft/server/RegistryBlocks net/minecraft/core/DefaultedRegistry
	V defaultKey
	W defaultValue
	a ()Lnet/minecraft/server/MinecraftKey; getDefaultKey
	a (I)Ljava/lang/Object; byId
	a (ILnet/minecraft/server/MinecraftKey;Ljava/lang/Object;)Ljava/lang/Object; registerMapping
	a (Ljava/lang/Object;)I getId
	a (Ljava/util/Random;)Ljava/lang/Object; getRandom
	a (Lnet/minecraft/server/MinecraftKey;)Ljava/lang/Object; get
	b (Ljava/lang/Object;)Lnet/minecraft/server/MinecraftKey; getKey
net/minecraft/server/RegistryID net/minecraft/util/CrudeIncrementalIntIdentityHashBiMap
	a EMPTY_SLOT
	b keys
	c values
	d byId
	e nextId
	f size
	a ()V clear
	a (Ljava/lang/Object;I)V addMapping
	b ()I size
	b (I)Z contains
	b (Ljava/lang/Object;)Z contains
	b (Ljava/lang/Object;I)I indexOf
	c ()I nextId
	c (I)I getValue
	c (Ljava/lang/Object;)I add
	d (I)V grow
	d (Ljava/lang/Object;)I hash
	e (I)I findEmpty
	fromId (I)Ljava/lang/Object; byId
net/minecraft/server/RegistryMaterials net/minecraft/core/MappedRegistry
	V nextId
	a LOGGER
	b map
	c storage
	d randomCache
	a (I)Ljava/lang/Object; byId
	a (ILnet/minecraft/server/MinecraftKey;Ljava/lang/Object;)Ljava/lang/Object; registerMapping
	a (Ljava/lang/Object;)I getId
	a (Ljava/util/Random;)Ljava/lang/Object; getRandom
	a (Lnet/minecraft/server/MinecraftKey;)Ljava/lang/Object; get
	a (Lnet/minecraft/server/MinecraftKey;Ljava/lang/Object;)Ljava/lang/Object; register
	b ()Ljava/util/Set; keySet
	b (I)Z containsId
	b (Ljava/lang/Object;)Lnet/minecraft/server/MinecraftKey; getKey
	b (Lnet/minecraft/server/MinecraftKey;)Ljava/util/Optional; getOptional
	c ()Z isEmpty
	c (Lnet/minecraft/server/MinecraftKey;)Z containsKey
net/minecraft/server/Reloadable net/minecraft/server/packs/resources/SimpleReloadInstance
	a resourceManager
	b allPreparations
	c allDone
	d preparingListeners
	e listenerCount
	f startedReloads
	g finishedReloads
	h startedTaskCounter
	i doneTaskCounter
	a ()Ljava/util/concurrent/CompletableFuture; done
	a (Lnet/minecraft/server/IResourceManager;Ljava/util/List;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;)Lnet/minecraft/server/Reloadable; of
	b ()F getActualProgress
	c ()Z isApplying
	d ()Z isDone
	e ()V checkExceptions
net/minecraft/server/ReloadableProfiled net/minecraft/server/packs/resources/ProfiledReloadInstance
	d LOGGER
	e total
	a (Ljava/util/List;)V finish
net/minecraft/server/RemoteConnectionThread net/minecraft/server/rcon/thread/GenericThread
	a running
	b serverInterface
	c name
	d thread
	e maxStopWait
	f datagramSockets
	g serverSockets
	h LOGGER
	i UNIQUE_THREAD_ID
	a ()V start
	a (Ljava/lang/String;)V debug
	a (Ljava/net/DatagramSocket;)V registerSocket
	a (Ljava/net/DatagramSocket;Z)Z closeSocket
	a (Ljava/net/ServerSocket;)V registerSocket
	a (Ljava/net/ServerSocket;Z)Z closeSocket
	a (Z)V closeSockets
	b ()V stop
	b (Ljava/lang/String;)V info
	b (Ljava/net/DatagramSocket;)Z closeSocket
	b (Ljava/net/ServerSocket;)Z closeSocket
	c ()Z isRunning
	c (Ljava/lang/String;)V warn
	d ()I currentPlayerCount
	d (Ljava/lang/String;)V error
	e ()V closeSockets
net/minecraft/server/RemoteControlCommandListener net/minecraft/server/rcon/RconConsoleSource
	I_ ()Z shouldInformAdmins
	a ()Z acceptsSuccess
	a (Lnet/minecraft/server/IChatBaseComponent;)V sendMessage
	b ()Z acceptsFailure
	clearMessages ()V prepareForCommand
	getMessages ()Ljava/lang/String; getCommandResponse
	getWrapper ()Lnet/minecraft/server/CommandListenerWrapper; createCommandSourceStack
net/minecraft/server/RemoteControlListener net/minecraft/server/rcon/thread/RconThread
	h port
	i serverIp
	j socket
	k rconPassword
	l clients
	a ()V start
	b ()V stop
	f ()V initClients
	g ()V clearClients
net/minecraft/server/RemoteControlSession net/minecraft/server/rcon/thread/RconClient
	h LOGGER
	i authed
	j client
	k buf
	l rconPassword
	a (IILjava/lang/String;)V send
	a (ILjava/lang/String;)V sendCmdResponse
	b ()V stop
	f ()V sendAuthFailure
	g ()V closeSocket
net/minecraft/server/RemoteStatusListener net/minecraft/server/rcon/thread/QueryThreadGs4
	h lastChallengeCheck
	i port
	j serverPort
	k maxPlayers
	l serverName
	m worldName
	n socket
	o buffer
	p request
	q idents
	r hostIp
	s serverIp
	t validChallenges
	u lastChallengeClean
	v rulesResponse
	w lastRulesResponse
	a ()V start
	a (Ljava/lang/Exception;)V recoverSocketError
	a (Ljava/net/DatagramPacket;)Z processPacket
	a (Ljava/net/SocketAddress;)[B getIdentBytes
	a ([BLjava/net/DatagramPacket;)V sendTo
	b (Ljava/net/DatagramPacket;)[B buildRuleResponse
	c (Ljava/net/DatagramPacket;)Ljava/lang/Boolean; validChallenge
	d (Ljava/net/DatagramPacket;)V sendChallenge
	f ()V pruneChallenges
	g ()Z initSocket
net/minecraft/server/RemoteStatusListener$RemoteStatusChallenge net/minecraft/server/rcon/thread/QueryThreadGs4$RequestChallenge
	e challengeBytes
	f ident
	identity identBytes
	token challenge
	a ()I getChallenge
	a (J)Ljava/lang/Boolean; before
	b ()[B getChallengeBytes
	c ()[B getIdentBytes
	d ()Ljava/lang/String; getIdent
net/minecraft/server/RemoteStatusReply net/minecraft/server/rcon/NetworkDataOutputStream
	a outputStream
	b dataOutputStream
	a ()[B toByteArray
	a (F)V writeFloat
	a (I)V write
	a (Ljava/lang/String;)V writeString
	a (S)V writeShort
	a ([B)V writeBytes
	b ()V reset
	b (I)V writeInt
net/minecraft/server/ReportedException net/minecraft/ReportedException
	a report
	a ()Lnet/minecraft/server/CrashReport; getReport
net/minecraft/server/Reputation net/minecraft/world/entity/ai/gossip/GossipContainer
	a gossips
	a ()Ljava/util/Map; getGossipEntries
	a (II)I mergeValuesForTransfer
	a (Lcom/mojang/datafixers/Dynamic;)V update
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; store
	a (Ljava/util/Random;I)Ljava/util/Collection; selectGossipsForTransfer
	a (Ljava/util/UUID;)Larf$a; getOrCreate
	a (Ljava/util/UUID;Ljava/util/function/Predicate;)I getReputation
	a (Ljava/util/UUID;Lnet/minecraft/server/ReputationType;)V remove
	a (Ljava/util/UUID;Lnet/minecraft/server/ReputationType;I)V add
	a (Lnet/minecraft/server/Reputation;Ljava/util/Random;I)V transferFrom
	a (Lnet/minecraft/server/ReputationType;)V remove
	a (Lnet/minecraft/server/ReputationType;II)I mergeValuesForAddition
	a (Lnet/minecraft/server/ReputationType;Ljava/util/function/DoublePredicate;)J getCountForType
	b ()V decay
	b (Ljava/util/UUID;Lnet/minecraft/server/ReputationType;I)V remove
	c ()Ljava/util/stream/Stream; unpack
net/minecraft/server/ReputationEvent net/minecraft/world/entity/ai/village/ReputationEventType
	a ZOMBIE_VILLAGER_CURED
	b GOLEM_KILLED
	c VILLAGER_HURT
	d VILLAGER_KILLED
	e TRADE
	a (Ljava/lang/String;)Lnet/minecraft/server/ReputationEvent; register
net/minecraft/server/ReputationHandler net/minecraft/world/entity/ReputationEventHandler
	a (Lnet/minecraft/server/ReputationEvent;Lnet/minecraft/server/Entity;)V onReputationEventFrom
net/minecraft/server/ReputationType net/minecraft/world/entity/ai/gossip/GossipType
	f id
	g weight
	h max
	i decayPerDay
	j decayPerTransfer
	k BY_ID
	l $VALUES
	a (Ljava/lang/String;)Lnet/minecraft/server/ReputationType; byId
net/minecraft/server/Resource net/minecraft/server/packs/resources/SimpleResource
	a IO_EXECUTOR
	b LOGGER
	c sourceName
	d location
	e resourceStream
	f metadataStream
	g triedMetadata
	h metadata
	a ()Lnet/minecraft/server/MinecraftKey; getLocation
	a (Lnet/minecraft/server/ResourcePackMetaParser;)Ljava/lang/Object; getMetadata
	b ()Ljava/io/InputStream; getInputStream
	c ()Z hasMetadata
	d ()Ljava/lang/String; getSourceName
net/minecraft/server/ResourceDataAbstract net/minecraft/server/packs/resources/SimplePreparableReloadListener
	a (Ljava/lang/Object;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)V apply
	a (Lyw$a;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;Lnet/minecraft/server/GameProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; reload
	b (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)Ljava/lang/Object; prepare
net/minecraft/server/ResourceDataJson net/minecraft/server/packs/resources/SimpleJsonResourceReloadListener
	a LOGGER
	b PATH_SUFFIX_LENGTH
	c gson
	d directory
	a (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)Ljava/util/Map; prepare
	b (Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;)Ljava/lang/Object; prepare
net/minecraft/server/ResourceKeyInvalidException net/minecraft/ResourceLocationException
net/minecraft/server/ResourceManager net/minecraft/server/packs/resources/SimpleReloadableResourceManager
	a LOGGER
	b namespacedPacks
	c listeners
	d recentlyRegistered
	e namespaces
	f type
	g mainThread
	a ()Ljava/util/Set; getNamespaces
	a (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Collection; listResources
	a (Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/List;Ljava/util/concurrent/CompletableFuture;)Ljava/util/concurrent/CompletableFuture; reload
	a (Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;)Lnet/minecraft/server/IReloadable; createQueuedReload
	a (Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;Ljava/util/List;)Lnet/minecraft/server/IReloadable; createFullReload
	a (Lnet/minecraft/server/IReloadListener;)V registerReloadListener
	a (Lnet/minecraft/server/IResourcePack;)V add
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/IResource; getResource
	b ()V clear
	b (Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/List;Ljava/util/concurrent/CompletableFuture;)Lnet/minecraft/server/IReloadable; createReload
	b (Lnet/minecraft/server/MinecraftKey;)Z hasResource
	c (Lnet/minecraft/server/MinecraftKey;)Ljava/util/List; getResources
net/minecraft/server/ResourceManagerFallback net/minecraft/server/packs/resources/FallbackResourceManager
	a fallbacks
	b LOGGER
	c type
	d namespace
	a ()Ljava/util/Set; getNamespaces
	a (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Collection; listResources
	a (Lnet/minecraft/server/IResourcePack;)V add
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/IResource; getResource
	a (Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/IResourcePack;)Ljava/io/InputStream; getWrappedResource
	b (Lnet/minecraft/server/MinecraftKey;)Z hasResource
	c (Lnet/minecraft/server/MinecraftKey;)Ljava/util/List; getResources
	d (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/MinecraftKey; getMetadataLocation
	e (Lnet/minecraft/server/MinecraftKey;)V validateLocation
	f (Lnet/minecraft/server/MinecraftKey;)Z isValidLocation
net/minecraft/server/ResourceNotFoundException net/minecraft/server/packs/ResourcePackFileNotFoundException
net/minecraft/server/ResourcePackAbstract net/minecraft/server/packs/AbstractResourcePack
	a file
	b LOGGER
	a ()Ljava/lang/String; getName
	a (Ljava/io/File;Ljava/io/File;)Ljava/lang/String; getRelativePath
	a (Ljava/lang/String;)Ljava/io/InputStream; getResource
	a (Lnet/minecraft/server/EnumResourcePackType;Lnet/minecraft/server/MinecraftKey;)Ljava/io/InputStream; getResource
	a (Lnet/minecraft/server/ResourcePackMetaParser;)Ljava/lang/Object; getMetadataSection
	a (Lnet/minecraft/server/ResourcePackMetaParser;Ljava/io/InputStream;)Ljava/lang/Object; getMetadataFromStream
	b (Ljava/lang/String;)Ljava/io/InputStream; getRootResource
	b (Lnet/minecraft/server/EnumResourcePackType;Lnet/minecraft/server/MinecraftKey;)Z hasResource
	c (Ljava/lang/String;)Z hasResource
	c (Lnet/minecraft/server/EnumResourcePackType;Lnet/minecraft/server/MinecraftKey;)Ljava/lang/String; getPathFromLocation
	d (Ljava/lang/String;)V logWarning
net/minecraft/server/ResourcePackFile net/minecraft/server/packs/FileResourcePack
	b SPLITTER
	c zipFile
	a (Ljava/lang/String;)Ljava/io/InputStream; getResource
	a (Lnet/minecraft/server/EnumResourcePackType;)Ljava/util/Set; getNamespaces
	a (Lnet/minecraft/server/EnumResourcePackType;Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; getResources
	b ()Ljava/util/zip/ZipFile; getOrCreateZipFile
	c (Ljava/lang/String;)Z hasResource
net/minecraft/server/ResourcePackFolder net/minecraft/server/packs/FolderResourcePack
	b LOGGER
	c ON_WINDOWS
	d BACKSLASH_MATCHER
	a (Ljava/io/File;ILjava/lang/String;Ljava/util/List;Ljava/lang/String;Ljava/util/function/Predicate;)V listResources
	a (Ljava/io/File;Ljava/lang/String;)Z validatePath
	a (Ljava/lang/String;)Ljava/io/InputStream; getResource
	a (Lnet/minecraft/server/EnumResourcePackType;)Ljava/util/Set; getNamespaces
	a (Lnet/minecraft/server/EnumResourcePackType;Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; getResources
	c (Ljava/lang/String;)Z hasResource
	e (Ljava/lang/String;)Ljava/io/File; getFile
net/minecraft/server/ResourcePackInfo net/minecraft/server/packs/metadata/pack/PackMetadataSection
	a SERIALIZER
	b description
	c packFormat
	a ()Lnet/minecraft/server/IChatBaseComponent; getDescription
	b ()I getPackFormat
net/minecraft/server/ResourcePackInfoDeserializer net/minecraft/server/packs/metadata/pack/PackMetadataSectionSerializer
	a ()Ljava/lang/String; getMetadataSectionName
	a (Lcom/google/gson/JsonObject;)Ljava/lang/Object; fromJson
	b (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/ResourcePackInfo; fromJson
net/minecraft/server/ResourcePackLoader net/minecraft/server/packs/repository/UnopenedPack
	a LOGGER
	b BROKEN_ASSETS_FALLBACK
	c id
	d supplier
	e title
	f description
	g compatibility
	h defaultPosition
	i required
	j fixedPosition
	a ()Lnet/minecraft/server/IChatBaseComponent; getTitle
	a (Ljava/lang/String;ZLjava/util/function/Supplier;Lyt$b;Lnet/minecraft/server/ResourcePackLoader$Position;)Lnet/minecraft/server/ResourcePackLoader; create
	a (Z)Lnet/minecraft/server/IChatBaseComponent; getChatLink
	b ()Lnet/minecraft/server/IChatBaseComponent; getDescription
	c ()Lnet/minecraft/server/EnumResourcePackVersion; getCompatibility
	d ()Lnet/minecraft/server/IResourcePack; open
	e ()Ljava/lang/String; getId
	f ()Z isRequired
	g ()Z isFixedPosition
	h ()Lnet/minecraft/server/ResourcePackLoader$Position; getDefaultPosition
net/minecraft/server/ResourcePackLoader$Position net/minecraft/server/packs/repository/UnopenedPack$Position
	c $VALUES
	a ()Lnet/minecraft/server/ResourcePackLoader$Position; opposite
	a (Ljava/util/List;Ljava/lang/Object;Ljava/util/function/Function;Z)I insert
net/minecraft/server/ResourcePackMetaParser net/minecraft/server/packs/metadata/MetadataSectionSerializer
	a ()Ljava/lang/String; getMetadataSectionName
	a (Lcom/google/gson/JsonObject;)Ljava/lang/Object; fromJson
net/minecraft/server/ResourcePackRepository net/minecraft/server/packs/repository/PackRepository
	a sources
	b available
	c selected
	d constructor
	a ()V reload
	a (Ljava/lang/String;)Lnet/minecraft/server/ResourcePackLoader; getPack
	a (Ljava/util/Collection;)V setSelected
	a (Lnet/minecraft/server/ResourcePackSource;)V addSource
	b ()Ljava/util/Collection; getAvailable
	c ()Ljava/util/Collection; getUnselected
	d ()Ljava/util/Collection; getSelected
	e ()V sortAvailable
net/minecraft/server/ResourcePackSource net/minecraft/server/packs/repository/RepositorySource
	a (Ljava/util/Map;Lyt$b;)V loadPacks
net/minecraft/server/ResourcePackSourceFolder net/minecraft/server/packs/repository/FolderRepositorySource
	a RESOURCEPACK_FILTER
	file folder
	a (Ljava/io/File;)Ljava/util/function/Supplier; createSupplier
	a (Ljava/util/Map;Lyt$b;)V loadPacks
net/minecraft/server/ResourcePackSourceVanilla net/minecraft/server/packs/repository/ServerPacksSource
	a vanillaPack
	a (Ljava/util/Map;Lyt$b;)V loadPacks
net/minecraft/server/ResourcePackVanilla net/minecraft/server/packs/VanillaPack
	a generatedDir
	b clientObject
	c namespaces
	d LOGGER
	e JAR_FILESYSTEM_BY_TYPE
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Ljava/io/InputStream; getResourceAsStream
	a (Ljava/lang/String;Ljava/net/URL;)Z isResourceUrlValid
	a (Ljava/util/Collection;ILjava/lang/String;Ljava/nio/file/Path;Ljava/lang/String;Ljava/util/function/Predicate;)V getResources
	a (Lnet/minecraft/server/EnumResourcePackType;)Ljava/util/Set; getNamespaces
	a (Lnet/minecraft/server/EnumResourcePackType;Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; getResources
	a (Lnet/minecraft/server/EnumResourcePackType;Lnet/minecraft/server/MinecraftKey;)Ljava/io/InputStream; getResource
	a (Lnet/minecraft/server/ResourcePackMetaParser;)Ljava/lang/Object; getMetadataSection
	b (Ljava/lang/String;)Ljava/io/InputStream; getRootResource
	b (Lnet/minecraft/server/EnumResourcePackType;Lnet/minecraft/server/MinecraftKey;)Z hasResource
	c (Lnet/minecraft/server/EnumResourcePackType;Lnet/minecraft/server/MinecraftKey;)Ljava/io/InputStream; getResourceAsStream
	d (Lnet/minecraft/server/EnumResourcePackType;Lnet/minecraft/server/MinecraftKey;)Ljava/lang/String; createPath
net/minecraft/server/RunnableSaveScoreboard net/minecraft/world/level/saveddata/SaveDataDirtyRunnable
	a savedData
net/minecraft/server/Schedule net/minecraft/world/entity/schedule/Schedule
	e timelines
	a (I)Lnet/minecraft/server/Activity; getActivityAt
	a (Ljava/lang/String;)Lnet/minecraft/server/ScheduleBuilder; register
	a (Lnet/minecraft/server/Activity;)V ensureTimelineExistsFor
	b (Lnet/minecraft/server/Activity;)Lnet/minecraft/server/ScheduleActivity; getTimelineFor
	c (Lnet/minecraft/server/Activity;)Ljava/util/List; getAllTimelinesExceptFor
net/minecraft/server/ScheduleActivity net/minecraft/world/entity/schedule/Timeline
	a keyframes
	b previousIndex
	a ()Lcom/google/common/collect/ImmutableList; getKeyframes
	a (I)F getValueAt
	a (IF)Lnet/minecraft/server/ScheduleActivity; addKeyframe
	a (Ljava/util/Collection;)Lnet/minecraft/server/ScheduleActivity; addKeyframes
	b ()V sortAndDeduplicateKeyframes
net/minecraft/server/ScheduleBuilder net/minecraft/world/entity/schedule/ScheduleBuilder
	a schedule
	b transitions
	a ()Lnet/minecraft/server/Schedule; build
	a (ILnet/minecraft/server/Activity;)Lnet/minecraft/server/ScheduleBuilder; changeActivityAt
net/minecraft/server/Scoreboard net/minecraft/world/scores/Scoreboard
	displaySlots displayObjectives
	g displaySlotNames
	a (Ljava/lang/String;Lnet/minecraft/server/ScoreboardObjective;)V onPlayerScoreRemoved
	a (Lnet/minecraft/server/Entity;)V entityRemoved
	a (Lnet/minecraft/server/NBTTagList;)V loadPlayerScores
	b (Ljava/lang/String;)Z hasObjective
	b (Ljava/lang/String;Lnet/minecraft/server/ScoreboardObjective;)Z hasPlayerScore
	c (Ljava/lang/String;)Lnet/minecraft/server/ScoreboardObjective; getOrCreateObjective
	createTeam (Ljava/lang/String;)Lnet/minecraft/server/ScoreboardTeam; addPlayerTeam
	d ()Ljava/util/Collection; getObjectiveNames
	f ()Ljava/util/Collection; getTeamNames
	getObjectiveForSlot (I)Lnet/minecraft/server/ScoreboardObjective; getDisplayObjective
	getObjectivesForCriteria (Lnet/minecraft/server/IScoreboardCriteria;Ljava/lang/String;Ljava/util/function/Consumer;)V forAllObjectives
	getPlayerObjectives (Ljava/lang/String;)Ljava/util/Map; getPlayerScores
	getPlayerScoreForObjective (Ljava/lang/String;Lnet/minecraft/server/ScoreboardObjective;)Lnet/minecraft/server/ScoreboardScore; getOrCreatePlayerScore
	getPlayerTeam (Ljava/lang/String;)Lnet/minecraft/server/ScoreboardTeam; getPlayersTeam
	getPlayers ()Ljava/util/Collection; getTrackedPlayers
	getScoresForObjective (Lnet/minecraft/server/ScoreboardObjective;)Ljava/util/Collection; getPlayerScores
	getSlotForName (Ljava/lang/String;)I getDisplaySlotByName
	getSlotName (I)Ljava/lang/String; getDisplaySlotName
	getTeam (Ljava/lang/String;)Lnet/minecraft/server/ScoreboardTeam; getPlayerTeam
	getTeams ()Ljava/util/Collection; getPlayerTeams
	h ()[Ljava/lang/String; getDisplaySlotNames
	handleObjectiveAdded (Lnet/minecraft/server/ScoreboardObjective;)V onObjectiveAdded
	handleObjectiveChanged (Lnet/minecraft/server/ScoreboardObjective;)V onObjectiveChanged
	handleObjectiveRemoved (Lnet/minecraft/server/ScoreboardObjective;)V onObjectiveRemoved
	handlePlayerRemoved (Ljava/lang/String;)V onPlayerRemoved
	handleScoreChanged (Lnet/minecraft/server/ScoreboardScore;)V onScoreChanged
	handleTeamAdded (Lnet/minecraft/server/ScoreboardTeam;)V onTeamAdded
	handleTeamChanged (Lnet/minecraft/server/ScoreboardTeam;)V onTeamChanged
	handleTeamRemoved (Lnet/minecraft/server/ScoreboardTeam;)V onTeamRemoved
	i ()Lnet/minecraft/server/NBTTagList; savePlayerScores
	registerObjective (Ljava/lang/String;Lnet/minecraft/server/IScoreboardCriteria;Lnet/minecraft/server/IChatBaseComponent;Lnet/minecraft/server/IScoreboardCriteria$EnumScoreboardHealthDisplay;)Lnet/minecraft/server/ScoreboardObjective; addObjective
	removeTeam (Lnet/minecraft/server/ScoreboardTeam;)V removePlayerTeam
	resetPlayerScores (Ljava/lang/String;Lnet/minecraft/server/ScoreboardObjective;)V resetPlayerScore
	setDisplaySlot (ILnet/minecraft/server/ScoreboardObjective;)V setDisplayObjective
	unregisterObjective (Lnet/minecraft/server/ScoreboardObjective;)V removeObjective
net/minecraft/server/ScoreboardObjective net/minecraft/world/scores/Objective
	a scoreboard
	b name
	c criteria
	e renderType
	a ()Lnet/minecraft/server/Scoreboard; getScoreboard
	e ()Lnet/minecraft/server/IChatBaseComponent; getFormattedDisplayName
net/minecraft/server/ScoreboardScore net/minecraft/world/scores/Score
	a SCORE_COMPARATOR
	b scoreboard
	c objective
	f locked
	g forceUpdate
	playerName owner
	score count
	a (Z)V setLocked
	addScore (I)V add
	b (I)V remove
	c ()V reset
	f ()Lnet/minecraft/server/Scoreboard; getScoreboard
	g ()Z isLocked
	getPlayerName ()Ljava/lang/String; getOwner
	incrementScore ()V increment
net/minecraft/server/ScoreboardServer net/minecraft/server/ServerScoreboard
	a server
	b trackedObjectives
	c dirtyListeners
	a ()Lnet/minecraft/server/MinecraftServer; getServer
	a (ILnet/minecraft/server/ScoreboardObjective;)V setDisplayObjective
	a (Ljava/lang/Runnable;)V addDirtyListener
	a (Ljava/lang/String;)V onPlayerRemoved
	a (Ljava/lang/String;Lnet/minecraft/server/ScoreboardObjective;)V onPlayerScoreRemoved
	a (Ljava/lang/String;Lnet/minecraft/server/ScoreboardTeam;)Z addPlayerToTeam
	a (Lnet/minecraft/server/ScoreboardObjective;)V onObjectiveAdded
	a (Lnet/minecraft/server/ScoreboardScore;)V onScoreChanged
	a (Lnet/minecraft/server/ScoreboardTeam;)V onTeamAdded
	b ()V setDirty
	b (Ljava/lang/String;Lnet/minecraft/server/ScoreboardTeam;)V removePlayerFromTeam
	b (Lnet/minecraft/server/ScoreboardObjective;)V onObjectiveChanged
	b (Lnet/minecraft/server/ScoreboardTeam;)V onTeamChanged
	c (Lnet/minecraft/server/ScoreboardObjective;)V onObjectiveRemoved
	c (Lnet/minecraft/server/ScoreboardTeam;)V onTeamRemoved
	e (Lnet/minecraft/server/ScoreboardObjective;)V startTrackingObjective
	f (Lnet/minecraft/server/ScoreboardObjective;)Ljava/util/List; getStopTrackingPackets
	g (Lnet/minecraft/server/ScoreboardObjective;)V stopTrackingObjective
	getScoreboardScorePacketsForObjective (Lnet/minecraft/server/ScoreboardObjective;)Ljava/util/List; getStartTrackingPackets
	h (Lnet/minecraft/server/ScoreboardObjective;)I getObjectiveDisplaySlotCount
net/minecraft/server/ScoreboardServer$Action net/minecraft/server/ServerScoreboard$Method
	c $VALUES
net/minecraft/server/ScoreboardTeam net/minecraft/world/scores/PlayerTeam
	a scoreboard
	b name
	c players
	d displayName
	e playerPrefix
	f playerSuffix
	g allowFriendlyFire
	h seeFriendlyInvisibles
	i nameTagVisibility
	j deathMessageVisibility
	k color
	l collisionRule
	a ()Lnet/minecraft/server/Scoreboard; getScoreboard
	a (I)V unpackOptions
	a (Lnet/minecraft/server/ScoreboardTeamBase;Lnet/minecraft/server/IChatBaseComponent;)Lnet/minecraft/server/IChatBaseComponent; formatNameForTeam
	b ()Ljava/lang/String; getName
	d ()Lnet/minecraft/server/IChatBaseComponent; getFormattedDisplayName
	d (Lnet/minecraft/server/IChatBaseComponent;)Lnet/minecraft/server/IChatBaseComponent; getFormattedName
	g ()Ljava/util/Collection; getPlayers
	getPrefix ()Lnet/minecraft/server/IChatBaseComponent; getPlayerPrefix
	getSuffix ()Lnet/minecraft/server/IChatBaseComponent; getPlayerSuffix
	h ()Z isAllowFriendlyFire
	k ()Lnet/minecraft/server/ScoreboardTeamBase$EnumNameTagVisibility; getDeathMessageVisibility
	l ()Lnet/minecraft/server/ScoreboardTeamBase$EnumTeamPush; getCollisionRule
	packOptionData ()I packOptions
	setCanSeeFriendlyInvisibles (Z)V setSeeFriendlyInvisibles
	setPrefix (Lnet/minecraft/server/IChatBaseComponent;)V setPlayerPrefix
	setSuffix (Lnet/minecraft/server/IChatBaseComponent;)V setPlayerSuffix
net/minecraft/server/ScoreboardTeamBase net/minecraft/world/scores/Team
	allowFriendlyFire ()Z isAllowFriendlyFire
	getPlayerNameSet ()Ljava/util/Collection; getPlayers
	i ()Z canSeeFriendlyInvisibles
	isAlly (Lnet/minecraft/server/ScoreboardTeamBase;)Z isAlliedTo
	j ()Lnet/minecraft/server/ScoreboardTeamBase$EnumNameTagVisibility; getNameTagVisibility
	n ()Lnet/minecraft/server/EnumChatFormat; getColor
net/minecraft/server/ScoreboardTeamBase$EnumNameTagVisibility net/minecraft/world/scores/Team$Visibility
	e name
	f id
	g BY_NAME
	h $VALUES
	a ()[Ljava/lang/String; getAllNames
	a (Ljava/lang/String;)Lnet/minecraft/server/ScoreboardTeamBase$EnumNameTagVisibility; byName
	b ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
net/minecraft/server/ScoreboardTeamBase$EnumTeamPush net/minecraft/world/scores/Team$CollisionRule
	e name
	f id
	g BY_NAME
	h $VALUES
	a ()[Ljava/lang/String; getAllNames
	a (Ljava/lang/String;)Lnet/minecraft/server/ScoreboardTeamBase$EnumTeamPush; byName
	b ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
net/minecraft/server/SecondaryWorldData net/minecraft/world/level/storage/DerivedLevelData
	b wrapped
	a ()J getSeed
	a (I)V setXSpawn
	a (J)V setGameTime
	a (Ljava/lang/String;)V setLevelName
	a (Lnet/minecraft/server/BlockPosition;)V setSpawn
	a (Lnet/minecraft/server/CrashReportSystemDetails;)V fillCrashReportCategory
	a (Lnet/minecraft/server/DimensionManager;)Lnet/minecraft/server/NBTTagCompound; getDimensionData
	a (Lnet/minecraft/server/DimensionManager;Lnet/minecraft/server/NBTTagCompound;)V setDimensionData
	a (Lnet/minecraft/server/EnumDifficulty;)V setDifficulty
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; createTag
	a (Lnet/minecraft/server/WorldType;)V setGenerator
	a (Z)V setThundering
	b ()I getXSpawn
	b (I)V setYSpawn
	b (J)V setDayTime
	b (Z)V setRaining
	c ()I getYSpawn
	c (I)V setZSpawn
	c (Z)V setAllowCommands
	d ()I getZSpawn
	d (I)V setVersion
	d (Z)V setInitialized
	e ()J getGameTime
	e (I)V setThunderTime
	e (Z)V setDifficultyLocked
	f ()J getDayTime
	f (I)V setRainTime
	g ()J getSizeOnDisk
	h ()Lnet/minecraft/server/NBTTagCompound; getLoadedPlayerTag
	i ()Ljava/lang/String; getLevelName
	j ()I getVersion
	k ()J getLastPlayed
	l ()Z isThundering
	m ()I getThunderTime
	n ()Z isRaining
	o ()I getRainTime
	p ()Lnet/minecraft/server/EnumGamemode; getGameType
	q ()Z isGenerateMapFeatures
	r ()Z isHardcore
	s ()Lnet/minecraft/server/WorldType; getGeneratorType
	t ()Z getAllowCommands
	u ()Z isInitialized
	v ()Lnet/minecraft/server/GameRules; getGameRules
	w ()Lnet/minecraft/server/EnumDifficulty; getDifficulty
	x ()Z isDifficultyLocked
	y ()Lnet/minecraft/server/CustomFunctionCallbackTimerQueue; getScheduledEvents
net/minecraft/server/SecondaryWorldServer net/minecraft/server/level/DerivedServerLevel
	a ()V tickTime
net/minecraft/server/SectionPosition net/minecraft/core/SectionPos
	a ()I x
	a (I)I blockToSectionCoord
	a (III)Lnet/minecraft/server/SectionPosition; of
	a (IIIIII)Ljava/util/stream/Stream; betweenClosedStream
	a (J)Lnet/minecraft/server/SectionPosition; of
	a (JIII)J offset
	a (JLnet/minecraft/server/EnumDirection;)J offset
	a (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/SectionPosition; of
	a (Lnet/minecraft/server/ChunkCoordIntPair;I)Lnet/minecraft/server/SectionPosition; of
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/SectionPosition; of
	a (Lnet/minecraft/server/SectionPosition;I)Ljava/util/stream/Stream; cube
	b ()I y
	b (I)I sectionRelative
	b (III)J asLong
	b (J)I x
	b (Lnet/minecraft/server/BlockPosition;)S sectionRelativePos
	b (Lnet/minecraft/server/ChunkCoordIntPair;I)Ljava/util/stream/Stream; aroundChunk
	c ()I z
	c (I)I sectionToBlockCoord
	c (III)Lnet/minecraft/server/BaseBlockPosition; offset
	c (J)I y
	d ()I minBlockX
	d (III)Lnet/minecraft/server/SectionPosition; offset
	d (J)I z
	e ()I minBlockY
	e (J)J blockToSection
	f ()I minBlockZ
	f (J)J getZeroNode
	g ()I maxBlockX
	h ()I maxBlockY
	r ()I maxBlockZ
	s ()Lnet/minecraft/server/BlockPosition; origin
	t ()Lnet/minecraft/server/BlockPosition; center
	u ()Lnet/minecraft/server/ChunkCoordIntPair; chunk
	v ()J asLong
	w ()Ljava/util/stream/Stream; blocksInside
net/minecraft/server/SeededRandom net/minecraft/world/level/levelgen/WorldgenRandom
	a count
	a ()I getCount
	a (I)V consumeCount
	a (II)J setBaseChunkSeed
	a (IIJJ)Ljava/util/Random; seedSlimeChunk
	a (JII)J setDecorationSeed
	a (JIII)J setLargeFeatureWithSalt
	b (JII)J setFeatureSeed
	c (JII)J setLargeFeatureSeed
net/minecraft/server/Sensor net/minecraft/world/entity/ai/sensing/Sensor
	a RANDOM
	b scanRate
	c timeToTick
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)V doTick
	b (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)V tick
net/minecraft/server/SensorDummy net/minecraft/world/entity/ai/sensing/DummySensor
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)V doTick
net/minecraft/server/SensorGolemLastSeen net/minecraft/world/entity/ai/sensing/GolemSensor
	a ()Ljava/util/Set; requires
	a (JLnet/minecraft/server/EntityLiving;)V checkForNearbyGolem
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)V doTick
net/minecraft/server/SensorHurtBy net/minecraft/world/entity/ai/sensing/HurtBySensor
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)V doTick
net/minecraft/server/SensorInteractableDoors net/minecraft/world/entity/ai/sensing/InteractableDoorsSensor
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)V doTick
net/minecraft/server/SensorNearestBed net/minecraft/world/entity/ai/sensing/NearestBedSensor
	a batchCache
	b triedCount
	c lastUpdate
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityInsentient;)V doTick
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)V doTick
net/minecraft/server/SensorNearestLivingEntities net/minecraft/world/entity/ai/sensing/NearestLivingEntitySensor
	a TARGETING
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)V doTick
net/minecraft/server/SensorNearestPlayers net/minecraft/world/entity/ai/sensing/PlayerSensor
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)V doTick
net/minecraft/server/SensorSecondaryPlaces net/minecraft/world/entity/ai/sensing/SecondaryPoiSensor
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)V doTick
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityVillager;)V doTick
net/minecraft/server/SensorType net/minecraft/world/entity/ai/sensing/SensorType
	a DUMMY
	b NEAREST_LIVING_ENTITIES
	c NEAREST_PLAYERS
	d INTERACTABLE_DOORS
	e NEAREST_BED
	f HURT_BY
	g VILLAGER_HOSTILES
	h VILLAGER_BABIES
	i SECONDARY_POIS
	j GOLEM_LAST_SEEN
	k factory
	a ()Lnet/minecraft/server/Sensor; create
	a (Ljava/lang/String;Ljava/util/function/Supplier;)Lnet/minecraft/server/SensorType; register
net/minecraft/server/SensorVillagerBabies net/minecraft/world/entity/ai/sensing/VillagerBabiesSensor
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/EntityLiving;)Ljava/util/List; getNearestVillagerBabies
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)V doTick
	b (Lnet/minecraft/server/EntityLiving;)Z isVillagerBaby
	c (Lnet/minecraft/server/EntityLiving;)Ljava/util/List; getVisibleEntities
net/minecraft/server/SensorVillagerHostiles net/minecraft/world/entity/ai/sensing/VillagerHostilesSensor
	a ACCEPTABLE_DISTANCE_FROM_HOSTILES
	a ()Ljava/util/Set; requires
	a (Lnet/minecraft/server/EntityLiving;)Ljava/util/Optional; getNearestHostile
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)Z isClose
	a (Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;Lnet/minecraft/server/EntityLiving;)I compareMobDistance
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/EntityLiving;)V doTick
	b (Lnet/minecraft/server/EntityLiving;)Ljava/util/Optional; getVisibleEntities
	c (Lnet/minecraft/server/EntityLiving;)Z isHostile
net/minecraft/server/ServerCommand net/minecraft/server/ConsoleInput
	command msg
net/minecraft/server/ServerConnection net/minecraft/server/network/ServerConnectionListener
	a SERVER_EVENT_GROUP
	b SERVER_EPOLL_EVENT_GROUP
	c running
	d LOGGER
	e server
	f channels
	listeningChannels connections
	a ()Ljava/net/SocketAddress; startMemoryChannel
	a (Ljava/net/InetAddress;I)V startTcpServerListener
	b ()V stop
	c ()V tick
	d ()Lnet/minecraft/server/MinecraftServer; getServer
net/minecraft/server/ServerGUI net/minecraft/server/gui/MinecraftServerGui
	a MONOSPACED
	b LOGGER
	c server
	d logAppenderThread
	e finalizers
	f isClosing
	a ()V start
	a (Ljava/lang/Runnable;)V addFinalizer
	a (Ljavax/swing/JTextArea;Ljavax/swing/JScrollPane;Ljava/lang/String;)V print
	a (Lnet/minecraft/server/DedicatedServer;)Lnet/minecraft/server/ServerGUI; showFrameFor
	b ()V close
	c ()Ljavax/swing/JComponent; buildInfoPanel
	d ()Ljavax/swing/JComponent; buildPlayerPanel
	e ()Ljavax/swing/JComponent; buildChatPanel
	f ()V runFinalizers
net/minecraft/server/ServerPing net/minecraft/network/protocol/status/ServerStatus
	a description
	b players
	c version
	d favicon
	a ()Lnet/minecraft/server/IChatBaseComponent; getDescription
	b ()Lnet/minecraft/server/ServerPing$ServerPingPlayerSample; getPlayers
	d ()Ljava/lang/String; getFavicon
	getServerData ()Lnet/minecraft/server/ServerPing$ServerData; getVersion
	setMOTD (Lnet/minecraft/server/IChatBaseComponent;)V setDescription
	setPlayerSample (Lnet/minecraft/server/ServerPing$ServerPingPlayerSample;)V setPlayers
	setServerInfo (Lnet/minecraft/server/ServerPing$ServerData;)V setVersion
net/minecraft/server/ServerPing$Serializer net/minecraft/network/protocol/status/ServerStatus$Serializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/ServerPing; deserialize
	a (Lnet/minecraft/server/ServerPing;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
net/minecraft/server/ServerPing$ServerData net/minecraft/network/protocol/status/ServerStatus$Version
	a name
	b protocol
	a ()Ljava/lang/String; getName
	getProtocolVersion ()I getProtocol
net/minecraft/server/ServerPing$ServerData$Serializer net/minecraft/network/protocol/status/ServerStatus$Version$Serializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/ServerPing$ServerData; deserialize
	a (Lnet/minecraft/server/ServerPing$ServerData;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
net/minecraft/server/ServerPing$ServerPingPlayerSample net/minecraft/network/protocol/status/ServerStatus$Players
	a maxPlayers
	b numPlayers
	c sample
	a ()I getMaxPlayers
	a ([Lcom/mojang/authlib/GameProfile;)V setSample
	b ()I getNumPlayers
	c ()[Lcom/mojang/authlib/GameProfile; getSample
net/minecraft/server/ServerPing$ServerPingPlayerSample$Serializer net/minecraft/network/protocol/status/ServerStatus$Players$Serializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/ServerPing$ServerPingPlayerSample; deserialize
	a (Lnet/minecraft/server/ServerPing$ServerPingPlayerSample;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
net/minecraft/server/ServerStatisticManager net/minecraft/stats/ServerStatsCounter
	b LOGGER
	c server
	d file
	e dirty
	f lastStatRequest
	a ()V save
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/NBTTagCompound; fromJson
	a (Lcom/mojang/datafixers/DataFixer;Ljava/lang/String;)V parseLocal
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/Statistic;I)V setValue
	a (Lnet/minecraft/server/EntityPlayer;)V sendStats
	a (Lnet/minecraft/server/StatisticWrapper;Ljava/lang/String;)Ljava/util/Optional; getStat
	b ()Ljava/lang/String; toJson
	b (Lnet/minecraft/server/Statistic;)Lnet/minecraft/server/MinecraftKey; getKey
	c ()V markAllDirty
	d ()Ljava/util/Set; getDirty
net/minecraft/server/ShapeDetector net/minecraft/world/level/block/state/pattern/BlockPattern
	a pattern
	b depth
	c height
	d width
	a ()I getDepth
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/EnumDirection;III)Lnet/minecraft/server/BlockPosition; translateAndRotate
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/EnumDirection;Lcom/google/common/cache/LoadingCache;)Lnet/minecraft/server/ShapeDetector$ShapeDetectorCollection; matches
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/ShapeDetector$ShapeDetectorCollection; find
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/ShapeDetector$ShapeDetectorCollection; matches
	a (Lnet/minecraft/server/IWorldReader;Z)Lcom/google/common/cache/LoadingCache; createLevelCache
	b ()I getHeight
	c ()I getWidth
	d ()[[[Ljava/util/function/Predicate; getPattern
net/minecraft/server/ShapeDetector$BlockLoader net/minecraft/world/level/block/state/pattern/BlockPattern$BlockCacheLoader
	a level
	b loadChunks
	a (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/ShapeDetectorBlock; load
net/minecraft/server/ShapeDetector$Shape net/minecraft/world/level/block/state/pattern/BlockPattern$PortalInfo
	position pos
	velocity speed
	yaw angle
net/minecraft/server/ShapeDetector$ShapeDetectorCollection net/minecraft/world/level/block/state/pattern/BlockPattern$BlockPatternMatch
	a frontTopLeft
	b forwards
	c up
	d cache
	e width
	f height
	g depth
	a ()Lnet/minecraft/server/BlockPosition; getFrontTopLeft
	a (III)Lnet/minecraft/server/ShapeDetectorBlock; getBlock
	a (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/BlockPosition;DLnet/minecraft/server/Vec3D;D)Lnet/minecraft/server/ShapeDetector$Shape; getPortalOutput
	c ()Lnet/minecraft/server/EnumDirection; getUp
	d ()I getWidth
	e ()I getHeight
	f ()I getDepth
	getFacing ()Lnet/minecraft/server/EnumDirection; getForwards
net/minecraft/server/ShapeDetectorBlock net/minecraft/world/level/block/state/pattern/BlockInWorld
	a level
	b pos
	c loadChunks
	d state
	e entity
	f cachedEntity
	a ()Lnet/minecraft/server/IBlockData; getState
	a (Ljava/util/function/Predicate;)Ljava/util/function/Predicate; hasState
	a (Lnet/minecraft/server/IBlockData;)Ljava/util/function/Predicate; hasState
	b ()Lnet/minecraft/server/TileEntity; getEntity
	c ()Lnet/minecraft/server/IWorldReader; getLevel
	getPosition ()Lnet/minecraft/server/BlockPosition; getPos
net/minecraft/server/ShapeDetectorBuilder net/minecraft/world/level/block/state/pattern/BlockPatternBuilder
	a COMMA_JOINED
	b pattern
	c lookup
	d height
	e width
	a ()Lnet/minecraft/server/ShapeDetectorBuilder; start
	a (CLjava/util/function/Predicate;)Lnet/minecraft/server/ShapeDetectorBuilder; where
	a ([Ljava/lang/String;)Lnet/minecraft/server/ShapeDetectorBuilder; aisle
	b ()Lnet/minecraft/server/ShapeDetector; build
	c ()[[[Ljava/util/function/Predicate; createPattern
	d ()V ensureAllCharactersMatched
net/minecraft/server/ShapedRecipes net/minecraft/world/item/crafting/ShapedRecipe
	items recipeItems
	key id
	W_ ()Lnet/minecraft/server/RecipeSerializer; getSerializer
	a ()Lnet/minecraft/server/NonNullList; getIngredients
	a (II)Z canCraftInDimensions
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/ItemStack; itemFromJson
	a (Ljava/lang/String;)I firstNonSpace
	a (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Z matches
	a (Lnet/minecraft/server/InventoryCrafting;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/InventoryCrafting;IIZ)Z matches
	a (Lnet/minecraft/server/InventoryCrafting;Lnet/minecraft/server/World;)Z matches
	a ([Ljava/lang/String;)[Ljava/lang/String; shrink
	b (Lcom/google/gson/JsonArray;)[Ljava/lang/String; patternFromJson
	b (Ljava/lang/String;)I lastNonSpace
	b ([Ljava/lang/String;Ljava/util/Map;II)Lnet/minecraft/server/NonNullList; dissolvePattern
	c ()Lnet/minecraft/server/ItemStack; getResultItem
	c (Lcom/google/gson/JsonObject;)Ljava/util/Map; keyFromJson
	d ()Ljava/lang/String; getGroup
	f ()Lnet/minecraft/server/MinecraftKey; getId
	i ()I getWidth
	j ()I getHeight
net/minecraft/server/ShapelessRecipes net/minecraft/world/item/crafting/ShapelessRecipe
	key id
	W_ ()Lnet/minecraft/server/RecipeSerializer; getSerializer
	a ()Lnet/minecraft/server/NonNullList; getIngredients
	a (II)Z canCraftInDimensions
	a (Lnet/minecraft/server/IInventory;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/World;)Z matches
	a (Lnet/minecraft/server/InventoryCrafting;)Lnet/minecraft/server/ItemStack; assemble
	a (Lnet/minecraft/server/InventoryCrafting;Lnet/minecraft/server/World;)Z matches
	c ()Lnet/minecraft/server/ItemStack; getResultItem
	d ()Ljava/lang/String; getGroup
	f ()Lnet/minecraft/server/MinecraftKey; getId
net/minecraft/server/SharedConstants net/minecraft/SharedConstants
	a NETTY_LEAK_DETECTION
	allowedCharacters ILLEGAL_FILE_CHARACTERS
	b IS_RUNNING_IN_IDE
	d CURRENT_VERSION
	a (Lcom/mojang/bridge/game/GameVersion;)V setVersion
	a (Ljava/lang/String;)Ljava/lang/String; filterText
	b (Ljava/lang/String;)Ljava/lang/String; filterUnicodeSupplementary
	getGameVersion ()Lcom/mojang/bridge/game/GameVersion; getCurrentVersion
net/minecraft/server/SkipEncodeException net/minecraft/network/SkipPacketException
net/minecraft/server/Slot net/minecraft/world/inventory/Slot
	e x
	f y
	index slot
	inventory container
	rawSlotIndex index
	a (I)Lnet/minecraft/server/ItemStack; remove
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; onTake
	a (Lnet/minecraft/server/IInventory;I)Z isAt
	a (Lnet/minecraft/server/ItemStack;I)V onQuickCraft
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)V onQuickCraft
	a (Lnet/minecraft/server/Slot;)V swap
	b ()Z isActive
	b (I)V onSwapCraft
	c ()Lcom/mojang/datafixers/util/Pair; getNoItemIcon
	c (Lnet/minecraft/server/ItemStack;)V checkTakeAchievements
	d ()V setChanged
	isAllowed (Lnet/minecraft/server/EntityHuman;)Z mayPickup
	isAllowed (Lnet/minecraft/server/ItemStack;)Z mayPlace
net/minecraft/server/SlotFurnaceFuel net/minecraft/world/inventory/FurnaceFuelSlot
	a menu
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
	b (Lnet/minecraft/server/ItemStack;)I getMaxStackSize
	c_ (Lnet/minecraft/server/ItemStack;)Z isBucket
net/minecraft/server/SlotFurnaceResult net/minecraft/world/inventory/FurnaceResultSlot
	a player
	b removeCount
	a (I)Lnet/minecraft/server/ItemStack; remove
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; onTake
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
	a (Lnet/minecraft/server/ItemStack;I)V onQuickCraft
	c (Lnet/minecraft/server/ItemStack;)V checkTakeAchievements
net/minecraft/server/SlotMerchantResult net/minecraft/world/inventory/MerchantResultSlot
	a slots
	b player
	g removeCount
	h merchant
	a (I)Lnet/minecraft/server/ItemStack; remove
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; onTake
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
	a (Lnet/minecraft/server/ItemStack;I)V onQuickCraft
	c (Lnet/minecraft/server/ItemStack;)V checkTakeAchievements
net/minecraft/server/SlotResult net/minecraft/world/inventory/ResultSlot
	a craftSlots
	b player
	g removeCount
	a (I)Lnet/minecraft/server/ItemStack; remove
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/ItemStack; onTake
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
	a (Lnet/minecraft/server/ItemStack;I)V onQuickCraft
	b (I)V onSwapCraft
	c (Lnet/minecraft/server/ItemStack;)V checkTakeAchievements
net/minecraft/server/SlotShulkerBox net/minecraft/world/inventory/ShulkerBoxSlot
	a (Lnet/minecraft/server/ItemStack;)Z mayPlace
net/minecraft/server/SoundCategory net/minecraft/sounds/SoundSource
	k BY_NAME
	l name
	m $VALUES
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lnet/minecraft/server/SoundCategory; byName
	b ()Ljava/util/Set; getNames
net/minecraft/server/SoundEffect net/minecraft/sounds/SoundEvent
	a location
	a ()Lnet/minecraft/server/MinecraftKey; getLocation
net/minecraft/server/SoundEffectType net/minecraft/world/level/block/SoundType
	A stepSound
	B placeSound
	C hitSound
	D fallSound
	a WOOD
	b GRAVEL
	c GRASS
	d STONE
	e METAL
	f GLASS
	g WOOL
	h SAND
	i SNOW
	j LADDER
	k ANVIL
	l SLIME_BLOCK
	m HONEY_BLOCK
	n WET_GRASS
	o CORAL_BLOCK
	p BAMBOO
	q BAMBOO_SAPLING
	r SCAFFOLDING
	s SWEET_BERRY_BUSH
	t CROP
	u HARD_CROP
	v NETHER_WART
	w LANTERN
	x volume
	y pitch
	z breakSound
	a ()F getVolume
	b ()F getPitch
	c ()Lnet/minecraft/server/SoundEffect; getBreakSound
	d ()Lnet/minecraft/server/SoundEffect; getStepSound
	e ()Lnet/minecraft/server/SoundEffect; getPlaceSound
	f ()Lnet/minecraft/server/SoundEffect; getHitSound
	g ()Lnet/minecraft/server/SoundEffect; getFallSound
net/minecraft/server/SoundEffects net/minecraft/sounds/SoundEvents
	BLOCK_ANVIL_BREAK ANVIL_BREAK
	BLOCK_ANVIL_DESTROY ANVIL_DESTROY
	BLOCK_ANVIL_FALL ANVIL_FALL
	BLOCK_ANVIL_HIT ANVIL_HIT
	BLOCK_ANVIL_LAND ANVIL_LAND
	BLOCK_ANVIL_PLACE ANVIL_PLACE
	BLOCK_ANVIL_STEP ANVIL_STEP
	BLOCK_ANVIL_USE ANVIL_USE
	BLOCK_BAMBOO_BREAK BAMBOO_BREAK
	BLOCK_BAMBOO_FALL BAMBOO_FALL
	BLOCK_BAMBOO_HIT BAMBOO_HIT
	BLOCK_BAMBOO_PLACE BAMBOO_PLACE
	BLOCK_BAMBOO_SAPLING_BREAK BAMBOO_SAPLING_BREAK
	BLOCK_BAMBOO_SAPLING_HIT BAMBOO_SAPLING_HIT
	BLOCK_BAMBOO_SAPLING_PLACE BAMBOO_SAPLING_PLACE
	BLOCK_BAMBOO_STEP BAMBOO_STEP
	BLOCK_BARREL_CLOSE BARREL_CLOSE
	BLOCK_BARREL_OPEN BARREL_OPEN
	BLOCK_BEACON_ACTIVATE BEACON_ACTIVATE
	BLOCK_BEACON_AMBIENT BEACON_AMBIENT
	BLOCK_BEACON_DEACTIVATE BEACON_DEACTIVATE
	BLOCK_BEACON_POWER_SELECT BEACON_POWER_SELECT
	BLOCK_BEEHIVE_DRIP BEEHIVE_DRIP
	BLOCK_BEEHIVE_ENTER BEEHIVE_ENTER
	BLOCK_BEEHIVE_EXIT BEEHIVE_EXIT
	BLOCK_BEEHIVE_SHEAR BEEHIVE_SHEAR
	BLOCK_BEEHIVE_WORK BEEHIVE_WORK
	BLOCK_BELL_RESONATE BELL_RESONATE
	BLOCK_BELL_USE BELL_BLOCK
	BLOCK_BLASTFURNACE_FIRE_CRACKLE BLASTFURNACE_FIRE_CRACKLE
	BLOCK_BREWING_STAND_BREW BREWING_STAND_BREW
	BLOCK_BUBBLE_COLUMN_BUBBLE_POP BUBBLE_COLUMN_BUBBLE_POP
	BLOCK_BUBBLE_COLUMN_UPWARDS_AMBIENT BUBBLE_COLUMN_UPWARDS_AMBIENT
	BLOCK_BUBBLE_COLUMN_UPWARDS_INSIDE BUBBLE_COLUMN_UPWARDS_INSIDE
	BLOCK_BUBBLE_COLUMN_WHIRLPOOL_AMBIENT BUBBLE_COLUMN_WHIRLPOOL_AMBIENT
	BLOCK_BUBBLE_COLUMN_WHIRLPOOL_INSIDE BUBBLE_COLUMN_WHIRLPOOL_INSIDE
	BLOCK_CAMPFIRE_CRACKLE CAMPFIRE_CRACKLE
	BLOCK_CHEST_CLOSE CHEST_CLOSE
	BLOCK_CHEST_LOCKED CHEST_LOCKED
	BLOCK_CHEST_OPEN CHEST_OPEN
	BLOCK_CHORUS_FLOWER_DEATH CHORUS_FLOWER_DEATH
	BLOCK_CHORUS_FLOWER_GROW CHORUS_FLOWER_GROW
	BLOCK_COMPARATOR_CLICK COMPARATOR_CLICK
	BLOCK_COMPOSTER_EMPTY COMPOSTER_EMPTY
	BLOCK_COMPOSTER_FILL COMPOSTER_FILL
	BLOCK_COMPOSTER_FILL_SUCCESS COMPOSTER_FILL_SUCCESS
	BLOCK_COMPOSTER_READY COMPOSTER_READY
	BLOCK_CONDUIT_ACTIVATE CONDUIT_ACTIVATE
	BLOCK_CONDUIT_AMBIENT CONDUIT_AMBIENT
	BLOCK_CONDUIT_AMBIENT_SHORT CONDUIT_AMBIENT_SHORT
	BLOCK_CONDUIT_ATTACK_TARGET CONDUIT_ATTACK_TARGET
	BLOCK_CONDUIT_DEACTIVATE CONDUIT_DEACTIVATE
	BLOCK_CORAL_BLOCK_BREAK CORAL_BLOCK_BREAK
	BLOCK_CORAL_BLOCK_FALL CORAL_BLOCK_FALL
	BLOCK_CORAL_BLOCK_HIT CORAL_BLOCK_HIT
	BLOCK_CORAL_BLOCK_PLACE CORAL_BLOCK_PLACE
	BLOCK_CORAL_BLOCK_STEP CORAL_BLOCK_STEP
	BLOCK_CROP_BREAK CROP_BREAK
	BLOCK_DISPENSER_DISPENSE DISPENSER_DISPENSE
	BLOCK_DISPENSER_FAIL DISPENSER_FAIL
	BLOCK_DISPENSER_LAUNCH DISPENSER_LAUNCH
	BLOCK_ENCHANTMENT_TABLE_USE ENCHANTMENT_TABLE_USE
	BLOCK_ENDER_CHEST_CLOSE ENDER_CHEST_CLOSE
	BLOCK_ENDER_CHEST_OPEN ENDER_CHEST_OPEN
	BLOCK_END_GATEWAY_SPAWN END_GATEWAY_SPAWN
	BLOCK_END_PORTAL_FRAME_FILL END_PORTAL_FRAME_FILL
	BLOCK_END_PORTAL_SPAWN END_PORTAL_SPAWN
	BLOCK_FENCE_GATE_CLOSE FENCE_GATE_CLOSE
	BLOCK_FENCE_GATE_OPEN FENCE_GATE_OPEN
	BLOCK_FIRE_AMBIENT FIRE_AMBIENT
	BLOCK_FIRE_EXTINGUISH FIRE_EXTINGUISH
	BLOCK_FURNACE_FIRE_CRACKLE FURNACE_FIRE_CRACKLE
	BLOCK_GLASS_BREAK GLASS_BREAK
	BLOCK_GLASS_FALL GLASS_FALL
	BLOCK_GLASS_HIT GLASS_HIT
	BLOCK_GLASS_PLACE GLASS_PLACE
	BLOCK_GLASS_STEP GLASS_STEP
	BLOCK_GRASS_BREAK GRASS_BREAK
	BLOCK_GRASS_FALL GRASS_FALL
	BLOCK_GRASS_HIT GRASS_HIT
	BLOCK_GRASS_PLACE GRASS_PLACE
	BLOCK_GRASS_STEP GRASS_STEP
	BLOCK_GRAVEL_BREAK GRAVEL_BREAK
	BLOCK_GRAVEL_FALL GRAVEL_FALL
	BLOCK_GRAVEL_HIT GRAVEL_HIT
	BLOCK_GRAVEL_PLACE GRAVEL_PLACE
	BLOCK_GRAVEL_STEP GRAVEL_STEP
	BLOCK_GRINDSTONE_USE GRINDSTONE_USE
	BLOCK_HONEY_BLOCK_BREAK HONEY_BLOCK_BREAK
	BLOCK_HONEY_BLOCK_FALL HONEY_BLOCK_FALL
	BLOCK_HONEY_BLOCK_HIT HONEY_BLOCK_HIT
	BLOCK_HONEY_BLOCK_PLACE HONEY_BLOCK_PLACE
	BLOCK_HONEY_BLOCK_SLIDE HONEY_BLOCK_SLIDE
	BLOCK_HONEY_BLOCK_STEP HONEY_BLOCK_STEP
	BLOCK_IRON_DOOR_CLOSE IRON_DOOR_CLOSE
	BLOCK_IRON_DOOR_OPEN IRON_DOOR_OPEN
	BLOCK_IRON_TRAPDOOR_CLOSE IRON_TRAPDOOR_CLOSE
	BLOCK_IRON_TRAPDOOR_OPEN IRON_TRAPDOOR_OPEN
	BLOCK_LADDER_BREAK LADDER_BREAK
	BLOCK_LADDER_FALL LADDER_FALL
	BLOCK_LADDER_HIT LADDER_HIT
	BLOCK_LADDER_PLACE LADDER_PLACE
	BLOCK_LADDER_STEP LADDER_STEP
	BLOCK_LANTERN_BREAK LANTERN_BREAK
	BLOCK_LANTERN_FALL LANTERN_FALL
	BLOCK_LANTERN_HIT LANTERN_HIT
	BLOCK_LANTERN_PLACE LANTERN_PLACE
	BLOCK_LANTERN_STEP LANTERN_STEP
	BLOCK_LAVA_AMBIENT LAVA_AMBIENT
	BLOCK_LAVA_EXTINGUISH LAVA_EXTINGUISH
	BLOCK_LAVA_POP LAVA_POP
	BLOCK_LEVER_CLICK LEVER_CLICK
	BLOCK_LILY_PAD_PLACE LILY_PAD_PLACE
	BLOCK_METAL_BREAK METAL_BREAK
	BLOCK_METAL_FALL METAL_FALL
	BLOCK_METAL_HIT METAL_HIT
	BLOCK_METAL_PLACE METAL_PLACE
	BLOCK_METAL_PRESSURE_PLATE_CLICK_OFF METAL_PRESSURE_PLATE_CLICK_OFF
	BLOCK_METAL_PRESSURE_PLATE_CLICK_ON METAL_PRESSURE_PLATE_CLICK_ON
	BLOCK_METAL_STEP METAL_STEP
	BLOCK_NETHER_WART_BREAK NETHER_WART_BREAK
	BLOCK_NOTE_BLOCK_BANJO NOTE_BLOCK_BANJO
	BLOCK_NOTE_BLOCK_BASEDRUM NOTE_BLOCK_BASEDRUM
	BLOCK_NOTE_BLOCK_BASS NOTE_BLOCK_BASS
	BLOCK_NOTE_BLOCK_BELL NOTE_BLOCK_BELL
	BLOCK_NOTE_BLOCK_BIT NOTE_BLOCK_BIT
	BLOCK_NOTE_BLOCK_CHIME NOTE_BLOCK_CHIME
	BLOCK_NOTE_BLOCK_COW_BELL NOTE_BLOCK_COW_BELL
	BLOCK_NOTE_BLOCK_DIDGERIDOO NOTE_BLOCK_DIDGERIDOO
	BLOCK_NOTE_BLOCK_FLUTE NOTE_BLOCK_FLUTE
	BLOCK_NOTE_BLOCK_GUITAR NOTE_BLOCK_GUITAR
	BLOCK_NOTE_BLOCK_HARP NOTE_BLOCK_HARP
	BLOCK_NOTE_BLOCK_HAT NOTE_BLOCK_HAT
	BLOCK_NOTE_BLOCK_IRON_XYLOPHONE NOTE_BLOCK_IRON_XYLOPHONE
	BLOCK_NOTE_BLOCK_PLING NOTE_BLOCK_PLING
	BLOCK_NOTE_BLOCK_SNARE NOTE_BLOCK_SNARE
	BLOCK_NOTE_BLOCK_XYLOPHONE NOTE_BLOCK_XYLOPHONE
	BLOCK_PISTON_CONTRACT PISTON_CONTRACT
	BLOCK_PISTON_EXTEND PISTON_EXTEND
	BLOCK_PORTAL_AMBIENT PORTAL_AMBIENT
	BLOCK_PORTAL_TRAVEL PORTAL_TRAVEL
	BLOCK_PORTAL_TRIGGER PORTAL_TRIGGER
	BLOCK_PUMPKIN_CARVE PUMPKIN_CARVE
	BLOCK_REDSTONE_TORCH_BURNOUT REDSTONE_TORCH_BURNOUT
	BLOCK_SAND_BREAK SAND_BREAK
	BLOCK_SAND_FALL SAND_FALL
	BLOCK_SAND_HIT SAND_HIT
	BLOCK_SAND_PLACE SAND_PLACE
	BLOCK_SAND_STEP SAND_STEP
	BLOCK_SCAFFOLDING_BREAK SCAFFOLDING_BREAK
	BLOCK_SCAFFOLDING_FALL SCAFFOLDING_FALL
	BLOCK_SCAFFOLDING_HIT SCAFFOLDING_HIT
	BLOCK_SCAFFOLDING_PLACE SCAFFOLDING_PLACE
	BLOCK_SCAFFOLDING_STEP SCAFFOLDING_STEP
	BLOCK_SHULKER_BOX_CLOSE SHULKER_BOX_CLOSE
	BLOCK_SHULKER_BOX_OPEN SHULKER_BOX_OPEN
	BLOCK_SLIME_BLOCK_BREAK SLIME_BLOCK_BREAK
	BLOCK_SLIME_BLOCK_FALL SLIME_BLOCK_FALL
	BLOCK_SLIME_BLOCK_HIT SLIME_BLOCK_HIT
	BLOCK_SLIME_BLOCK_PLACE SLIME_BLOCK_PLACE
	BLOCK_SLIME_BLOCK_STEP SLIME_BLOCK_STEP
	BLOCK_SMOKER_SMOKE SMOKER_SMOKE
	BLOCK_SNOW_BREAK SNOW_BREAK
	BLOCK_SNOW_FALL SNOW_FALL
	BLOCK_SNOW_HIT SNOW_HIT
	BLOCK_SNOW_PLACE SNOW_PLACE
	BLOCK_SNOW_STEP SNOW_STEP
	BLOCK_STONE_BREAK STONE_BREAK
	BLOCK_STONE_BUTTON_CLICK_OFF STONE_BUTTON_CLICK_OFF
	BLOCK_STONE_BUTTON_CLICK_ON STONE_BUTTON_CLICK_ON
	BLOCK_STONE_FALL STONE_FALL
	BLOCK_STONE_HIT STONE_HIT
	BLOCK_STONE_PLACE STONE_PLACE
	BLOCK_STONE_PRESSURE_PLATE_CLICK_OFF STONE_PRESSURE_PLATE_CLICK_OFF
	BLOCK_STONE_PRESSURE_PLATE_CLICK_ON STONE_PRESSURE_PLATE_CLICK_ON
	BLOCK_STONE_STEP STONE_STEP
	BLOCK_SWEET_BERRY_BUSH_BREAK SWEET_BERRY_BUSH_BREAK
	BLOCK_SWEET_BERRY_BUSH_PLACE SWEET_BERRY_BUSH_PLACE
	BLOCK_TRIPWIRE_ATTACH TRIPWIRE_ATTACH
	BLOCK_TRIPWIRE_CLICK_OFF TRIPWIRE_CLICK_OFF
	BLOCK_TRIPWIRE_CLICK_ON TRIPWIRE_CLICK_ON
	BLOCK_TRIPWIRE_DETACH TRIPWIRE_DETACH
	BLOCK_WATER_AMBIENT WATER_AMBIENT
	BLOCK_WET_GRASS_BREAK WET_GRASS_BREAK
	BLOCK_WET_GRASS_FALL WET_GRASS_FALL
	BLOCK_WET_GRASS_HIT WET_GRASS_HIT
	BLOCK_WET_GRASS_PLACE WET_GRASS_PLACE
	BLOCK_WET_GRASS_STEP WET_GRASS_STEP
	BLOCK_WOODEN_BUTTON_CLICK_OFF WOODEN_BUTTON_CLICK_OFF
	BLOCK_WOODEN_BUTTON_CLICK_ON WOODEN_BUTTON_CLICK_ON
	BLOCK_WOODEN_DOOR_CLOSE WOODEN_DOOR_CLOSE
	BLOCK_WOODEN_DOOR_OPEN WOODEN_DOOR_OPEN
	BLOCK_WOODEN_PRESSURE_PLATE_CLICK_OFF WOODEN_PRESSURE_PLATE_CLICK_OFF
	BLOCK_WOODEN_PRESSURE_PLATE_CLICK_ON WOODEN_PRESSURE_PLATE_CLICK_ON
	BLOCK_WOODEN_TRAPDOOR_CLOSE WOODEN_TRAPDOOR_CLOSE
	BLOCK_WOODEN_TRAPDOOR_OPEN WOODEN_TRAPDOOR_OPEN
	BLOCK_WOOD_BREAK WOOD_BREAK
	BLOCK_WOOD_FALL WOOD_FALL
	BLOCK_WOOD_HIT WOOD_HIT
	BLOCK_WOOD_PLACE WOOD_PLACE
	BLOCK_WOOD_STEP WOOD_STEP
	BLOCK_WOOL_BREAK WOOL_BREAK
	BLOCK_WOOL_FALL WOOL_FALL
	BLOCK_WOOL_HIT WOOL_HIT
	BLOCK_WOOL_PLACE WOOL_PLACE
	BLOCK_WOOL_STEP WOOL_STEP
	ENCHANT_THORNS_HIT THORNS_HIT
	ENTITY_ARMOR_STAND_BREAK ARMOR_STAND_BREAK
	ENTITY_ARMOR_STAND_FALL ARMOR_STAND_FALL
	ENTITY_ARMOR_STAND_HIT ARMOR_STAND_HIT
	ENTITY_ARMOR_STAND_PLACE ARMOR_STAND_PLACE
	ENTITY_ARROW_HIT ARROW_HIT
	ENTITY_ARROW_HIT_PLAYER ARROW_HIT_PLAYER
	ENTITY_ARROW_SHOOT ARROW_SHOOT
	ENTITY_BAT_AMBIENT BAT_AMBIENT
	ENTITY_BAT_DEATH BAT_DEATH
	ENTITY_BAT_HURT BAT_HURT
	ENTITY_BAT_LOOP BAT_LOOP
	ENTITY_BAT_TAKEOFF BAT_TAKEOFF
	ENTITY_BEE_DEATH BEE_DEATH
	ENTITY_BEE_HURT BEE_HURT
	ENTITY_BEE_LOOP BEE_LOOP
	ENTITY_BEE_LOOP_AGGRESSIVE BEE_LOOP_AGGRESSIVE
	ENTITY_BEE_POLLINATE BEE_POLLINATE
	ENTITY_BEE_STING BEE_STING
	ENTITY_BLAZE_AMBIENT BLAZE_AMBIENT
	ENTITY_BLAZE_BURN BLAZE_BURN
	ENTITY_BLAZE_DEATH BLAZE_DEATH
	ENTITY_BLAZE_HURT BLAZE_HURT
	ENTITY_BLAZE_SHOOT BLAZE_SHOOT
	ENTITY_BOAT_PADDLE_LAND BOAT_PADDLE_LAND
	ENTITY_BOAT_PADDLE_WATER BOAT_PADDLE_WATER
	ENTITY_CAT_AMBIENT CAT_AMBIENT
	ENTITY_CAT_BEG_FOR_FOOD CAT_BEG_FOR_FOOD
	ENTITY_CAT_DEATH CAT_DEATH
	ENTITY_CAT_EAT CAT_EAT
	ENTITY_CAT_HISS CAT_HISS
	ENTITY_CAT_HURT CAT_HURT
	ENTITY_CAT_PURR CAT_PURR
	ENTITY_CAT_PURREOW CAT_PURREOW
	ENTITY_CAT_STRAY_AMBIENT CAT_STRAY_AMBIENT
	ENTITY_CHICKEN_AMBIENT CHICKEN_AMBIENT
	ENTITY_CHICKEN_DEATH CHICKEN_DEATH
	ENTITY_CHICKEN_EGG CHICKEN_EGG
	ENTITY_CHICKEN_HURT CHICKEN_HURT
	ENTITY_CHICKEN_STEP CHICKEN_STEP
	ENTITY_COD_AMBIENT COD_AMBIENT
	ENTITY_COD_DEATH COD_DEATH
	ENTITY_COD_FLOP COD_FLOP
	ENTITY_COD_HURT COD_HURT
	ENTITY_COW_AMBIENT COW_AMBIENT
	ENTITY_COW_DEATH COW_DEATH
	ENTITY_COW_HURT COW_HURT
	ENTITY_COW_MILK COW_MILK
	ENTITY_COW_STEP COW_STEP
	ENTITY_CREEPER_DEATH CREEPER_DEATH
	ENTITY_CREEPER_HURT CREEPER_HURT
	ENTITY_CREEPER_PRIMED CREEPER_PRIMED
	ENTITY_DOLPHIN_AMBIENT DOLPHIN_AMBIENT
	ENTITY_DOLPHIN_AMBIENT_WATER DOLPHIN_AMBIENT_WATER
	ENTITY_DOLPHIN_ATTACK DOLPHIN_ATTACK
	ENTITY_DOLPHIN_DEATH DOLPHIN_DEATH
	ENTITY_DOLPHIN_EAT DOLPHIN_EAT
	ENTITY_DOLPHIN_HURT DOLPHIN_HURT
	ENTITY_DOLPHIN_JUMP DOLPHIN_JUMP
	ENTITY_DOLPHIN_PLAY DOLPHIN_PLAY
	ENTITY_DOLPHIN_SPLASH DOLPHIN_SPLASH
	ENTITY_DOLPHIN_SWIM DOLPHIN_SWIM
	ENTITY_DONKEY_AMBIENT DONKEY_AMBIENT
	ENTITY_DONKEY_ANGRY DONKEY_ANGRY
	ENTITY_DONKEY_CHEST DONKEY_CHEST
	ENTITY_DONKEY_DEATH DONKEY_DEATH
	ENTITY_DONKEY_HURT DONKEY_HURT
	ENTITY_DRAGON_FIREBALL_EXPLODE DRAGON_FIREBALL_EXPLODE
	ENTITY_DROWNED_AMBIENT DROWNED_AMBIENT
	ENTITY_DROWNED_AMBIENT_WATER DROWNED_AMBIENT_WATER
	ENTITY_DROWNED_DEATH DROWNED_DEATH
	ENTITY_DROWNED_DEATH_WATER DROWNED_DEATH_WATER
	ENTITY_DROWNED_HURT DROWNED_HURT
	ENTITY_DROWNED_HURT_WATER DROWNED_HURT_WATER
	ENTITY_DROWNED_SHOOT DROWNED_SHOOT
	ENTITY_DROWNED_STEP DROWNED_STEP
	ENTITY_DROWNED_SWIM DROWNED_SWIM
	ENTITY_EGG_THROW EGG_THROW
	ENTITY_ELDER_GUARDIAN_AMBIENT ELDER_GUARDIAN_AMBIENT
	ENTITY_ELDER_GUARDIAN_AMBIENT_LAND ELDER_GUARDIAN_AMBIENT_LAND
	ENTITY_ELDER_GUARDIAN_CURSE ELDER_GUARDIAN_CURSE
	ENTITY_ELDER_GUARDIAN_DEATH ELDER_GUARDIAN_DEATH
	ENTITY_ELDER_GUARDIAN_DEATH_LAND ELDER_GUARDIAN_DEATH_LAND
	ENTITY_ELDER_GUARDIAN_FLOP ELDER_GUARDIAN_FLOP
	ENTITY_ELDER_GUARDIAN_HURT ELDER_GUARDIAN_HURT
	ENTITY_ELDER_GUARDIAN_HURT_LAND ELDER_GUARDIAN_HURT_LAND
	ENTITY_ENDERMAN_AMBIENT ENDERMAN_AMBIENT
	ENTITY_ENDERMAN_DEATH ENDERMAN_DEATH
	ENTITY_ENDERMAN_HURT ENDERMAN_HURT
	ENTITY_ENDERMAN_SCREAM ENDERMAN_SCREAM
	ENTITY_ENDERMAN_STARE ENDERMAN_STARE
	ENTITY_ENDERMAN_TELEPORT ENDERMAN_TELEPORT
	ENTITY_ENDERMITE_AMBIENT ENDERMITE_AMBIENT
	ENTITY_ENDERMITE_DEATH ENDERMITE_DEATH
	ENTITY_ENDERMITE_HURT ENDERMITE_HURT
	ENTITY_ENDERMITE_STEP ENDERMITE_STEP
	ENTITY_ENDER_DRAGON_AMBIENT ENDER_DRAGON_AMBIENT
	ENTITY_ENDER_DRAGON_DEATH ENDER_DRAGON_DEATH
	ENTITY_ENDER_DRAGON_FLAP ENDER_DRAGON_FLAP
	ENTITY_ENDER_DRAGON_GROWL ENDER_DRAGON_GROWL
	ENTITY_ENDER_DRAGON_HURT ENDER_DRAGON_HURT
	ENTITY_ENDER_DRAGON_SHOOT ENDER_DRAGON_SHOOT
	ENTITY_ENDER_EYE_DEATH ENDER_EYE_DEATH
	ENTITY_ENDER_EYE_LAUNCH ENDER_EYE_LAUNCH
	ENTITY_ENDER_PEARL_THROW ENDER_PEARL_THROW
	ENTITY_EVOKER_AMBIENT EVOKER_AMBIENT
	ENTITY_EVOKER_CAST_SPELL EVOKER_CAST_SPELL
	ENTITY_EVOKER_CELEBRATE EVOKER_CELEBRATE
	ENTITY_EVOKER_DEATH EVOKER_DEATH
	ENTITY_EVOKER_FANGS_ATTACK EVOKER_FANGS_ATTACK
	ENTITY_EVOKER_HURT EVOKER_HURT
	ENTITY_EVOKER_PREPARE_ATTACK EVOKER_PREPARE_ATTACK
	ENTITY_EVOKER_PREPARE_SUMMON EVOKER_PREPARE_SUMMON
	ENTITY_EVOKER_PREPARE_WOLOLO EVOKER_PREPARE_WOLOLO
	ENTITY_EXPERIENCE_BOTTLE_THROW EXPERIENCE_BOTTLE_THROW
	ENTITY_EXPERIENCE_ORB_PICKUP EXPERIENCE_ORB_PICKUP
	ENTITY_FIREWORK_ROCKET_BLAST FIREWORK_ROCKET_BLAST
	ENTITY_FIREWORK_ROCKET_BLAST_FAR FIREWORK_ROCKET_BLAST_FAR
	ENTITY_FIREWORK_ROCKET_LARGE_BLAST FIREWORK_ROCKET_LARGE_BLAST
	ENTITY_FIREWORK_ROCKET_LARGE_BLAST_FAR FIREWORK_ROCKET_LARGE_BLAST_FAR
	ENTITY_FIREWORK_ROCKET_LAUNCH FIREWORK_ROCKET_LAUNCH
	ENTITY_FIREWORK_ROCKET_SHOOT FIREWORK_ROCKET_SHOOT
	ENTITY_FIREWORK_ROCKET_TWINKLE FIREWORK_ROCKET_TWINKLE
	ENTITY_FIREWORK_ROCKET_TWINKLE_FAR FIREWORK_ROCKET_TWINKLE_FAR
	ENTITY_FISHING_BOBBER_RETRIEVE FISHING_BOBBER_RETRIEVE
	ENTITY_FISHING_BOBBER_SPLASH FISHING_BOBBER_SPLASH
	ENTITY_FISHING_BOBBER_THROW FISHING_BOBBER_THROW
	ENTITY_FISH_SWIM FISH_SWIM
	ENTITY_FOX_AGGRO FOX_AGGRO
	ENTITY_FOX_AMBIENT FOX_AMBIENT
	ENTITY_FOX_BITE FOX_BITE
	ENTITY_FOX_DEATH FOX_DEATH
	ENTITY_FOX_EAT FOX_EAT
	ENTITY_FOX_HURT FOX_HURT
	ENTITY_FOX_SCREECH FOX_SCREECH
	ENTITY_FOX_SLEEP FOX_SLEEP
	ENTITY_FOX_SNIFF FOX_SNIFF
	ENTITY_FOX_SPIT FOX_SPIT
	ENTITY_GENERIC_BIG_FALL GENERIC_BIG_FALL
	ENTITY_GENERIC_BURN GENERIC_BURN
	ENTITY_GENERIC_DEATH GENERIC_DEATH
	ENTITY_GENERIC_DRINK GENERIC_DRINK
	ENTITY_GENERIC_EAT GENERIC_EAT
	ENTITY_GENERIC_EXPLODE GENERIC_EXPLODE
	ENTITY_GENERIC_EXTINGUISH_FIRE GENERIC_EXTINGUISH_FIRE
	ENTITY_GENERIC_HURT GENERIC_HURT
	ENTITY_GENERIC_SMALL_FALL GENERIC_SMALL_FALL
	ENTITY_GENERIC_SPLASH GENERIC_SPLASH
	ENTITY_GENERIC_SWIM GENERIC_SWIM
	ENTITY_GHAST_AMBIENT GHAST_AMBIENT
	ENTITY_GHAST_DEATH GHAST_DEATH
	ENTITY_GHAST_HURT GHAST_HURT
	ENTITY_GHAST_SCREAM GHAST_SCREAM
	ENTITY_GHAST_SHOOT GHAST_SHOOT
	ENTITY_GHAST_WARN GHAST_WARN
	ENTITY_GUARDIAN_AMBIENT GUARDIAN_AMBIENT
	ENTITY_GUARDIAN_AMBIENT_LAND GUARDIAN_AMBIENT_LAND
	ENTITY_GUARDIAN_ATTACK GUARDIAN_ATTACK
	ENTITY_GUARDIAN_DEATH GUARDIAN_DEATH
	ENTITY_GUARDIAN_DEATH_LAND GUARDIAN_DEATH_LAND
	ENTITY_GUARDIAN_FLOP GUARDIAN_FLOP
	ENTITY_GUARDIAN_HURT GUARDIAN_HURT
	ENTITY_GUARDIAN_HURT_LAND GUARDIAN_HURT_LAND
	ENTITY_HORSE_AMBIENT HORSE_AMBIENT
	ENTITY_HORSE_ANGRY HORSE_ANGRY
	ENTITY_HORSE_ARMOR HORSE_ARMOR
	ENTITY_HORSE_BREATHE HORSE_BREATHE
	ENTITY_HORSE_DEATH HORSE_DEATH
	ENTITY_HORSE_EAT HORSE_EAT
	ENTITY_HORSE_GALLOP HORSE_GALLOP
	ENTITY_HORSE_HURT HORSE_HURT
	ENTITY_HORSE_JUMP HORSE_JUMP
	ENTITY_HORSE_LAND HORSE_LAND
	ENTITY_HORSE_SADDLE HORSE_SADDLE
	ENTITY_HORSE_STEP HORSE_STEP
	ENTITY_HORSE_STEP_WOOD HORSE_STEP_WOOD
	ENTITY_HOSTILE_BIG_FALL HOSTILE_BIG_FALL
	ENTITY_HOSTILE_DEATH HOSTILE_DEATH
	ENTITY_HOSTILE_HURT HOSTILE_HURT
	ENTITY_HOSTILE_SMALL_FALL HOSTILE_SMALL_FALL
	ENTITY_HOSTILE_SPLASH HOSTILE_SPLASH
	ENTITY_HOSTILE_SWIM HOSTILE_SWIM
	ENTITY_HUSK_AMBIENT HUSK_AMBIENT
	ENTITY_HUSK_CONVERTED_TO_ZOMBIE HUSK_CONVERTED_TO_ZOMBIE
	ENTITY_HUSK_DEATH HUSK_DEATH
	ENTITY_HUSK_HURT HUSK_HURT
	ENTITY_HUSK_STEP HUSK_STEP
	ENTITY_ILLUSIONER_AMBIENT ILLUSIONER_AMBIENT
	ENTITY_ILLUSIONER_CAST_SPELL ILLUSIONER_CAST_SPELL
	ENTITY_ILLUSIONER_DEATH ILLUSIONER_DEATH
	ENTITY_ILLUSIONER_HURT ILLUSIONER_HURT
	ENTITY_ILLUSIONER_MIRROR_MOVE ILLUSIONER_MIRROR_MOVE
	ENTITY_ILLUSIONER_PREPARE_BLINDNESS ILLUSIONER_PREPARE_BLINDNESS
	ENTITY_ILLUSIONER_PREPARE_MIRROR ILLUSIONER_PREPARE_MIRROR
	ENTITY_IRON_GOLEM_ATTACK IRON_GOLEM_ATTACK
	ENTITY_IRON_GOLEM_DAMAGE IRON_GOLEM_DAMAGE
	ENTITY_IRON_GOLEM_DEATH IRON_GOLEM_DEATH
	ENTITY_IRON_GOLEM_HURT IRON_GOLEM_HURT
	ENTITY_IRON_GOLEM_REPAIR IRON_GOLEM_REPAIR
	ENTITY_IRON_GOLEM_STEP IRON_GOLEM_STEP
	ENTITY_ITEM_BREAK ITEM_BREAK
	ENTITY_ITEM_FRAME_ADD_ITEM ITEM_FRAME_ADD_ITEM
	ENTITY_ITEM_FRAME_BREAK ITEM_FRAME_BREAK
	ENTITY_ITEM_FRAME_PLACE ITEM_FRAME_PLACE
	ENTITY_ITEM_FRAME_REMOVE_ITEM ITEM_FRAME_REMOVE_ITEM
	ENTITY_ITEM_FRAME_ROTATE_ITEM ITEM_FRAME_ROTATE_ITEM
	ENTITY_ITEM_PICKUP ITEM_PICKUP
	ENTITY_LEASH_KNOT_BREAK LEASH_KNOT_BREAK
	ENTITY_LEASH_KNOT_PLACE LEASH_KNOT_PLACE
	ENTITY_LIGHTNING_BOLT_IMPACT LIGHTNING_BOLT_IMPACT
	ENTITY_LIGHTNING_BOLT_THUNDER LIGHTNING_BOLT_THUNDER
	ENTITY_LINGERING_POTION_THROW LINGERING_POTION_THROW
	ENTITY_LLAMA_AMBIENT LLAMA_AMBIENT
	ENTITY_LLAMA_ANGRY LLAMA_ANGRY
	ENTITY_LLAMA_CHEST LLAMA_CHEST
	ENTITY_LLAMA_DEATH LLAMA_DEATH
	ENTITY_LLAMA_EAT LLAMA_EAT
	ENTITY_LLAMA_HURT LLAMA_HURT
	ENTITY_LLAMA_SPIT LLAMA_SPIT
	ENTITY_LLAMA_STEP LLAMA_STEP
	ENTITY_LLAMA_SWAG LLAMA_SWAG
	ENTITY_MAGMA_CUBE_DEATH MAGMA_CUBE_DEATH
	ENTITY_MAGMA_CUBE_DEATH_SMALL MAGMA_CUBE_DEATH_SMALL
	ENTITY_MAGMA_CUBE_HURT MAGMA_CUBE_HURT
	ENTITY_MAGMA_CUBE_HURT_SMALL MAGMA_CUBE_HURT_SMALL
	ENTITY_MAGMA_CUBE_JUMP MAGMA_CUBE_JUMP
	ENTITY_MAGMA_CUBE_SQUISH MAGMA_CUBE_SQUISH
	ENTITY_MAGMA_CUBE_SQUISH_SMALL MAGMA_CUBE_SQUISH_SMALL
	ENTITY_MINECART_INSIDE MINECART_INSIDE
	ENTITY_MINECART_RIDING MINECART_RIDING
	ENTITY_MOOSHROOM_CONVERT MOOSHROOM_CONVERT
	ENTITY_MOOSHROOM_EAT MOOSHROOM_EAT
	ENTITY_MOOSHROOM_MILK MOOSHROOM_MILK
	ENTITY_MOOSHROOM_SHEAR MOOSHROOM_SHEAR
	ENTITY_MOOSHROOM_SUSPICIOUS_MILK MOOSHROOM_MILK_SUSPICIOUSLY
	ENTITY_MULE_AMBIENT MULE_AMBIENT
	ENTITY_MULE_CHEST MULE_CHEST
	ENTITY_MULE_DEATH MULE_DEATH
	ENTITY_MULE_HURT MULE_HURT
	ENTITY_OCELOT_AMBIENT OCELOT_AMBIENT
	ENTITY_OCELOT_DEATH OCELOT_DEATH
	ENTITY_OCELOT_HURT OCELOT_HURT
	ENTITY_PAINTING_BREAK PAINTING_BREAK
	ENTITY_PAINTING_PLACE PAINTING_PLACE
	ENTITY_PANDA_AGGRESSIVE_AMBIENT PANDA_AGGRESSIVE_AMBIENT
	ENTITY_PANDA_AMBIENT PANDA_AMBIENT
	ENTITY_PANDA_BITE PANDA_BITE
	ENTITY_PANDA_CANT_BREED PANDA_CANT_BREED
	ENTITY_PANDA_DEATH PANDA_DEATH
	ENTITY_PANDA_EAT PANDA_EAT
	ENTITY_PANDA_HURT PANDA_HURT
	ENTITY_PANDA_PRE_SNEEZE PANDA_PRE_SNEEZE
	ENTITY_PANDA_SNEEZE PANDA_SNEEZE
	ENTITY_PANDA_STEP PANDA_STEP
	ENTITY_PANDA_WORRIED_AMBIENT PANDA_WORRIED_AMBIENT
	ENTITY_PARROT_AMBIENT PARROT_AMBIENT
	ENTITY_PARROT_DEATH PARROT_DEATH
	ENTITY_PARROT_EAT PARROT_EAT
	ENTITY_PARROT_FLY PARROT_FLY
	ENTITY_PARROT_HURT PARROT_HURT
	ENTITY_PARROT_IMITATE_BLAZE PARROT_IMITATE_BLAZE
	ENTITY_PARROT_IMITATE_CREEPER PARROT_IMITATE_CREEPER
	ENTITY_PARROT_IMITATE_DROWNED PARROT_IMITATE_DROWNED
	ENTITY_PARROT_IMITATE_ELDER_GUARDIAN PARROT_IMITATE_ELDER_GUARDIAN
	ENTITY_PARROT_IMITATE_ENDERMITE PARROT_IMITATE_ENDERMITE
	ENTITY_PARROT_IMITATE_ENDER_DRAGON PARROT_IMITATE_ENDER_DRAGON
	ENTITY_PARROT_IMITATE_EVOKER PARROT_IMITATE_EVOKER
	ENTITY_PARROT_IMITATE_GHAST PARROT_IMITATE_GHAST
	ENTITY_PARROT_IMITATE_GUARDIAN PARROT_IMITATE_GUARDIAN
	ENTITY_PARROT_IMITATE_HUSK PARROT_IMITATE_HUSK
	ENTITY_PARROT_IMITATE_ILLUSIONER PARROT_IMITATE_ILLUSIONER
	ENTITY_PARROT_IMITATE_MAGMA_CUBE PARROT_IMITATE_MAGMA_CUBE
	ENTITY_PARROT_IMITATE_PHANTOM PARROT_IMITATE_PHANTOM
	ENTITY_PARROT_IMITATE_PILLAGER PARROT_IMITATE_PILLAGER
	ENTITY_PARROT_IMITATE_RAVAGER PARROT_IMITATE_RAVAGER
	ENTITY_PARROT_IMITATE_SHULKER PARROT_IMITATE_SHULKER
	ENTITY_PARROT_IMITATE_SILVERFISH PARROT_IMITATE_SILVERFISH
	ENTITY_PARROT_IMITATE_SKELETON PARROT_IMITATE_SKELETON
	ENTITY_PARROT_IMITATE_SLIME PARROT_IMITATE_SLIME
	ENTITY_PARROT_IMITATE_SPIDER PARROT_IMITATE_SPIDER
	ENTITY_PARROT_IMITATE_STRAY PARROT_IMITATE_STRAY
	ENTITY_PARROT_IMITATE_VEX PARROT_IMITATE_VEX
	ENTITY_PARROT_IMITATE_VINDICATOR PARROT_IMITATE_VINDICATOR
	ENTITY_PARROT_IMITATE_WITCH PARROT_IMITATE_WITCH
	ENTITY_PARROT_IMITATE_WITHER PARROT_IMITATE_WITHER
	ENTITY_PARROT_IMITATE_WITHER_SKELETON PARROT_IMITATE_WITHER_SKELETON
	ENTITY_PARROT_IMITATE_ZOMBIE PARROT_IMITATE_ZOMBIE
	ENTITY_PARROT_IMITATE_ZOMBIE_VILLAGER PARROT_IMITATE_ZOMBIE_VILLAGER
	ENTITY_PARROT_STEP PARROT_STEP
	ENTITY_PHANTOM_AMBIENT PHANTOM_AMBIENT
	ENTITY_PHANTOM_BITE PHANTOM_BITE
	ENTITY_PHANTOM_DEATH PHANTOM_DEATH
	ENTITY_PHANTOM_FLAP PHANTOM_FLAP
	ENTITY_PHANTOM_HURT PHANTOM_HURT
	ENTITY_PHANTOM_SWOOP PHANTOM_SWOOP
	ENTITY_PIG_AMBIENT PIG_AMBIENT
	ENTITY_PIG_DEATH PIG_DEATH
	ENTITY_PIG_HURT PIG_HURT
	ENTITY_PIG_SADDLE PIG_SADDLE
	ENTITY_PIG_STEP PIG_STEP
	ENTITY_PILLAGER_AMBIENT PILLAGER_AMBIENT
	ENTITY_PILLAGER_CELEBRATE PILLAGER_CELEBRATE
	ENTITY_PILLAGER_DEATH PILLAGER_DEATH
	ENTITY_PILLAGER_HURT PILLAGER_HURT
	ENTITY_PLAYER_ATTACK_CRIT PLAYER_ATTACK_CRIT
	ENTITY_PLAYER_ATTACK_KNOCKBACK PLAYER_ATTACK_KNOCKBACK
	ENTITY_PLAYER_ATTACK_NODAMAGE PLAYER_ATTACK_NODAMAGE
	ENTITY_PLAYER_ATTACK_STRONG PLAYER_ATTACK_STRONG
	ENTITY_PLAYER_ATTACK_SWEEP PLAYER_ATTACK_SWEEP
	ENTITY_PLAYER_ATTACK_WEAK PLAYER_ATTACK_WEAK
	ENTITY_PLAYER_BIG_FALL PLAYER_BIG_FALL
	ENTITY_PLAYER_BREATH PLAYER_BREATH
	ENTITY_PLAYER_BURP PLAYER_BURP
	ENTITY_PLAYER_DEATH PLAYER_DEATH
	ENTITY_PLAYER_HURT PLAYER_HURT
	ENTITY_PLAYER_HURT_DROWN PLAYER_HURT_DROWN
	ENTITY_PLAYER_HURT_ON_FIRE PLAYER_HURT_ON_FIRE
	ENTITY_PLAYER_HURT_SWEET_BERRY_BUSH PLAYER_HURT_SWEET_BERRY_BUSH
	ENTITY_PLAYER_LEVELUP PLAYER_LEVELUP
	ENTITY_PLAYER_SMALL_FALL PLAYER_SMALL_FALL
	ENTITY_PLAYER_SPLASH PLAYER_SPLASH
	ENTITY_PLAYER_SPLASH_HIGH_SPEED PLAYER_SPLASH_HIGH_SPEED
	ENTITY_PLAYER_SWIM PLAYER_SWIM
	ENTITY_POLAR_BEAR_AMBIENT POLAR_BEAR_AMBIENT
	ENTITY_POLAR_BEAR_AMBIENT_BABY POLAR_BEAR_AMBIENT_BABY
	ENTITY_POLAR_BEAR_DEATH POLAR_BEAR_DEATH
	ENTITY_POLAR_BEAR_HURT POLAR_BEAR_HURT
	ENTITY_POLAR_BEAR_STEP POLAR_BEAR_STEP
	ENTITY_POLAR_BEAR_WARNING POLAR_BEAR_WARNING
	ENTITY_PUFFER_FISH_AMBIENT PUFFER_FISH_AMBIENT
	ENTITY_PUFFER_FISH_BLOW_OUT PUFFER_FISH_BLOW_OUT
	ENTITY_PUFFER_FISH_BLOW_UP PUFFER_FISH_BLOW_UP
	ENTITY_PUFFER_FISH_DEATH PUFFER_FISH_DEATH
	ENTITY_PUFFER_FISH_FLOP PUFFER_FISH_FLOP
	ENTITY_PUFFER_FISH_HURT PUFFER_FISH_HURT
	ENTITY_PUFFER_FISH_STING PUFFER_FISH_STING
	ENTITY_RABBIT_AMBIENT RABBIT_AMBIENT
	ENTITY_RABBIT_ATTACK RABBIT_ATTACK
	ENTITY_RABBIT_DEATH RABBIT_DEATH
	ENTITY_RABBIT_HURT RABBIT_HURT
	ENTITY_RABBIT_JUMP RABBIT_JUMP
	ENTITY_RAVAGER_AMBIENT RAVAGER_AMBIENT
	ENTITY_RAVAGER_ATTACK RAVAGER_ATTACK
	ENTITY_RAVAGER_CELEBRATE RAVAGER_CELEBRATE
	ENTITY_RAVAGER_DEATH RAVAGER_DEATH
	ENTITY_RAVAGER_HURT RAVAGER_HURT
	ENTITY_RAVAGER_ROAR RAVAGER_ROAR
	ENTITY_RAVAGER_STEP RAVAGER_STEP
	ENTITY_RAVAGER_STUNNED RAVAGER_STUNNED
	ENTITY_SALMON_AMBIENT SALMON_AMBIENT
	ENTITY_SALMON_DEATH SALMON_DEATH
	ENTITY_SALMON_FLOP SALMON_FLOP
	ENTITY_SALMON_HURT SALMON_HURT
	ENTITY_SHEEP_AMBIENT SHEEP_AMBIENT
	ENTITY_SHEEP_DEATH SHEEP_DEATH
	ENTITY_SHEEP_HURT SHEEP_HURT
	ENTITY_SHEEP_SHEAR SHEEP_SHEAR
	ENTITY_SHEEP_STEP SHEEP_STEP
	ENTITY_SHULKER_AMBIENT SHULKER_AMBIENT
	ENTITY_SHULKER_BULLET_HIT SHULKER_BULLET_HIT
	ENTITY_SHULKER_BULLET_HURT SHULKER_BULLET_HURT
	ENTITY_SHULKER_CLOSE SHULKER_CLOSE
	ENTITY_SHULKER_DEATH SHULKER_DEATH
	ENTITY_SHULKER_HURT SHULKER_HURT
	ENTITY_SHULKER_HURT_CLOSED SHULKER_HURT_CLOSED
	ENTITY_SHULKER_OPEN SHULKER_OPEN
	ENTITY_SHULKER_SHOOT SHULKER_SHOOT
	ENTITY_SHULKER_TELEPORT SHULKER_TELEPORT
	ENTITY_SILVERFISH_AMBIENT SILVERFISH_AMBIENT
	ENTITY_SILVERFISH_DEATH SILVERFISH_DEATH
	ENTITY_SILVERFISH_HURT SILVERFISH_HURT
	ENTITY_SILVERFISH_STEP SILVERFISH_STEP
	ENTITY_SKELETON_AMBIENT SKELETON_AMBIENT
	ENTITY_SKELETON_DEATH SKELETON_DEATH
	ENTITY_SKELETON_HORSE_AMBIENT SKELETON_HORSE_AMBIENT
	ENTITY_SKELETON_HORSE_AMBIENT_WATER SKELETON_HORSE_AMBIENT_WATER
	ENTITY_SKELETON_HORSE_DEATH SKELETON_HORSE_DEATH
	ENTITY_SKELETON_HORSE_GALLOP_WATER SKELETON_HORSE_GALLOP_WATER
	ENTITY_SKELETON_HORSE_HURT SKELETON_HORSE_HURT
	ENTITY_SKELETON_HORSE_JUMP_WATER SKELETON_HORSE_JUMP_WATER
	ENTITY_SKELETON_HORSE_STEP_WATER SKELETON_HORSE_STEP_WATER
	ENTITY_SKELETON_HORSE_SWIM SKELETON_HORSE_SWIM
	ENTITY_SKELETON_HURT SKELETON_HURT
	ENTITY_SKELETON_SHOOT SKELETON_SHOOT
	ENTITY_SKELETON_STEP SKELETON_STEP
	ENTITY_SLIME_ATTACK SLIME_ATTACK
	ENTITY_SLIME_DEATH SLIME_DEATH
	ENTITY_SLIME_DEATH_SMALL SLIME_DEATH_SMALL
	ENTITY_SLIME_HURT SLIME_HURT
	ENTITY_SLIME_HURT_SMALL SLIME_HURT_SMALL
	ENTITY_SLIME_JUMP SLIME_JUMP
	ENTITY_SLIME_JUMP_SMALL SLIME_JUMP_SMALL
	ENTITY_SLIME_SQUISH SLIME_SQUISH
	ENTITY_SLIME_SQUISH_SMALL SLIME_SQUISH_SMALL
	ENTITY_SNOWBALL_THROW SNOWBALL_THROW
	ENTITY_SNOW_GOLEM_AMBIENT SNOW_GOLEM_AMBIENT
	ENTITY_SNOW_GOLEM_DEATH SNOW_GOLEM_DEATH
	ENTITY_SNOW_GOLEM_HURT SNOW_GOLEM_HURT
	ENTITY_SNOW_GOLEM_SHOOT SNOW_GOLEM_SHOOT
	ENTITY_SPIDER_AMBIENT SPIDER_AMBIENT
	ENTITY_SPIDER_DEATH SPIDER_DEATH
	ENTITY_SPIDER_HURT SPIDER_HURT
	ENTITY_SPIDER_STEP SPIDER_STEP
	ENTITY_SPLASH_POTION_BREAK SPLASH_POTION_BREAK
	ENTITY_SPLASH_POTION_THROW SPLASH_POTION_THROW
	ENTITY_SQUID_AMBIENT SQUID_AMBIENT
	ENTITY_SQUID_DEATH SQUID_DEATH
	ENTITY_SQUID_HURT SQUID_HURT
	ENTITY_SQUID_SQUIRT SQUID_SQUIRT
	ENTITY_STRAY_AMBIENT STRAY_AMBIENT
	ENTITY_STRAY_DEATH STRAY_DEATH
	ENTITY_STRAY_HURT STRAY_HURT
	ENTITY_STRAY_STEP STRAY_STEP
	ENTITY_TNT_PRIMED TNT_PRIMED
	ENTITY_TROPICAL_FISH_AMBIENT TROPICAL_FISH_AMBIENT
	ENTITY_TROPICAL_FISH_DEATH TROPICAL_FISH_DEATH
	ENTITY_TROPICAL_FISH_FLOP TROPICAL_FISH_FLOP
	ENTITY_TROPICAL_FISH_HURT TROPICAL_FISH_HURT
	ENTITY_TURTLE_AMBIENT_LAND TURTLE_AMBIENT_LAND
	ENTITY_TURTLE_DEATH TURTLE_DEATH
	ENTITY_TURTLE_DEATH_BABY TURTLE_DEATH_BABY
	ENTITY_TURTLE_EGG_BREAK TURTLE_EGG_BREAK
	ENTITY_TURTLE_EGG_CRACK TURTLE_EGG_CRACK
	ENTITY_TURTLE_EGG_HATCH TURTLE_EGG_HATCH
	ENTITY_TURTLE_HURT TURTLE_HURT
	ENTITY_TURTLE_HURT_BABY TURTLE_HURT_BABY
	ENTITY_TURTLE_LAY_EGG TURTLE_LAY_EGG
	ENTITY_TURTLE_SHAMBLE TURTLE_SHAMBLE
	ENTITY_TURTLE_SHAMBLE_BABY TURTLE_SHAMBLE_BABY
	ENTITY_TURTLE_SWIM TURTLE_SWIM
	ENTITY_VEX_AMBIENT VEX_AMBIENT
	ENTITY_VEX_CHARGE VEX_CHARGE
	ENTITY_VEX_DEATH VEX_DEATH
	ENTITY_VEX_HURT VEX_HURT
	ENTITY_VILLAGER_AMBIENT VILLAGER_AMBIENT
	ENTITY_VILLAGER_CELEBRATE VILLAGER_CELEBRATE
	ENTITY_VILLAGER_DEATH VILLAGER_DEATH
	ENTITY_VILLAGER_HURT VILLAGER_HURT
	ENTITY_VILLAGER_NO VILLAGER_NO
	ENTITY_VILLAGER_TRADE VILLAGER_TRADE
	ENTITY_VILLAGER_WORK_ARMORER VILLAGER_WORK_ARMORER
	ENTITY_VILLAGER_WORK_BUTCHER VILLAGER_WORK_BUTCHER
	ENTITY_VILLAGER_WORK_CARTOGRAPHER VILLAGER_WORK_CARTOGRAPHER
	ENTITY_VILLAGER_WORK_CLERIC VILLAGER_WORK_CLERIC
	ENTITY_VILLAGER_WORK_FARMER VILLAGER_WORK_FARMER
	ENTITY_VILLAGER_WORK_FISHERMAN VILLAGER_WORK_FISHERMAN
	ENTITY_VILLAGER_WORK_FLETCHER VILLAGER_WORK_FLETCHER
	ENTITY_VILLAGER_WORK_LEATHERWORKER VILLAGER_WORK_LEATHERWORKER
	ENTITY_VILLAGER_WORK_LIBRARIAN VILLAGER_WORK_LIBRARIAN
	ENTITY_VILLAGER_WORK_MASON VILLAGER_WORK_MASON
	ENTITY_VILLAGER_WORK_SHEPHERD VILLAGER_WORK_SHEPHERD
	ENTITY_VILLAGER_WORK_TOOLSMITH VILLAGER_WORK_TOOLSMITH
	ENTITY_VILLAGER_WORK_WEAPONSMITH VILLAGER_WORK_WEAPONSMITH
	ENTITY_VILLAGER_YES VILLAGER_YES
	ENTITY_VINDICATOR_AMBIENT VINDICATOR_AMBIENT
	ENTITY_VINDICATOR_CELEBRATE VINDICATOR_CELEBRATE
	ENTITY_VINDICATOR_DEATH VINDICATOR_DEATH
	ENTITY_VINDICATOR_HURT VINDICATOR_HURT
	ENTITY_WANDERING_TRADER_AMBIENT WANDERING_TRADER_AMBIENT
	ENTITY_WANDERING_TRADER_DEATH WANDERING_TRADER_DEATH
	ENTITY_WANDERING_TRADER_DISAPPEARED WANDERING_TRADER_DISAPPEARED
	ENTITY_WANDERING_TRADER_DRINK_MILK WANDERING_TRADER_DRINK_MILK
	ENTITY_WANDERING_TRADER_DRINK_POTION WANDERING_TRADER_DRINK_POTION
	ENTITY_WANDERING_TRADER_HURT WANDERING_TRADER_HURT
	ENTITY_WANDERING_TRADER_NO WANDERING_TRADER_NO
	ENTITY_WANDERING_TRADER_REAPPEARED WANDERING_TRADER_REAPPEARED
	ENTITY_WANDERING_TRADER_TRADE WANDERING_TRADER_TRADE
	ENTITY_WANDERING_TRADER_YES WANDERING_TRADER_YES
	ENTITY_WITCH_AMBIENT WITCH_AMBIENT
	ENTITY_WITCH_CELEBRATE WITCH_CELEBRATE
	ENTITY_WITCH_DEATH WITCH_DEATH
	ENTITY_WITCH_DRINK WITCH_DRINK
	ENTITY_WITCH_HURT WITCH_HURT
	ENTITY_WITCH_THROW WITCH_THROW
	ENTITY_WITHER_AMBIENT WITHER_AMBIENT
	ENTITY_WITHER_BREAK_BLOCK WITHER_BREAK_BLOCK
	ENTITY_WITHER_DEATH WITHER_DEATH
	ENTITY_WITHER_HURT WITHER_HURT
	ENTITY_WITHER_SHOOT WITHER_SHOOT
	ENTITY_WITHER_SKELETON_AMBIENT WITHER_SKELETON_AMBIENT
	ENTITY_WITHER_SKELETON_DEATH WITHER_SKELETON_DEATH
	ENTITY_WITHER_SKELETON_HURT WITHER_SKELETON_HURT
	ENTITY_WITHER_SKELETON_STEP WITHER_SKELETON_STEP
	ENTITY_WITHER_SPAWN WITHER_SPAWN
	ENTITY_WOLF_AMBIENT WOLF_AMBIENT
	ENTITY_WOLF_DEATH WOLF_DEATH
	ENTITY_WOLF_GROWL WOLF_GROWL
	ENTITY_WOLF_HOWL WOLF_HOWL
	ENTITY_WOLF_HURT WOLF_HURT
	ENTITY_WOLF_PANT WOLF_PANT
	ENTITY_WOLF_SHAKE WOLF_SHAKE
	ENTITY_WOLF_STEP WOLF_STEP
	ENTITY_WOLF_WHINE WOLF_WHINE
	ENTITY_ZOMBIE_AMBIENT ZOMBIE_AMBIENT
	ENTITY_ZOMBIE_ATTACK_IRON_DOOR ZOMBIE_ATTACK_IRON_DOOR
	ENTITY_ZOMBIE_ATTACK_WOODEN_DOOR ZOMBIE_ATTACK_WOODEN_DOOR
	ENTITY_ZOMBIE_BREAK_WOODEN_DOOR ZOMBIE_BREAK_WOODEN_DOOR
	ENTITY_ZOMBIE_CONVERTED_TO_DROWNED ZOMBIE_CONVERTED_TO_DROWNED
	ENTITY_ZOMBIE_DEATH ZOMBIE_DEATH
	ENTITY_ZOMBIE_DESTROY_EGG ZOMBIE_DESTROY_EGG
	ENTITY_ZOMBIE_HORSE_AMBIENT ZOMBIE_HORSE_AMBIENT
	ENTITY_ZOMBIE_HORSE_DEATH ZOMBIE_HORSE_DEATH
	ENTITY_ZOMBIE_HORSE_HURT ZOMBIE_HORSE_HURT
	ENTITY_ZOMBIE_HURT ZOMBIE_HURT
	ENTITY_ZOMBIE_INFECT ZOMBIE_INFECT
	ENTITY_ZOMBIE_PIGMAN_AMBIENT ZOMBIE_PIGMAN_AMBIENT
	ENTITY_ZOMBIE_PIGMAN_ANGRY ZOMBIE_PIGMAN_ANGRY
	ENTITY_ZOMBIE_PIGMAN_DEATH ZOMBIE_PIGMAN_DEATH
	ENTITY_ZOMBIE_PIGMAN_HURT ZOMBIE_PIGMAN_HURT
	ENTITY_ZOMBIE_STEP ZOMBIE_STEP
	ENTITY_ZOMBIE_VILLAGER_AMBIENT ZOMBIE_VILLAGER_AMBIENT
	ENTITY_ZOMBIE_VILLAGER_CONVERTED ZOMBIE_VILLAGER_CONVERTED
	ENTITY_ZOMBIE_VILLAGER_CURE ZOMBIE_VILLAGER_CURE
	ENTITY_ZOMBIE_VILLAGER_DEATH ZOMBIE_VILLAGER_DEATH
	ENTITY_ZOMBIE_VILLAGER_HURT ZOMBIE_VILLAGER_HURT
	ENTITY_ZOMBIE_VILLAGER_STEP ZOMBIE_VILLAGER_STEP
	EVENT_RAID_HORN RAID_HORN
	ITEM_ARMOR_EQUIP_CHAIN ARMOR_EQUIP_CHAIN
	ITEM_ARMOR_EQUIP_DIAMOND ARMOR_EQUIP_DIAMOND
	ITEM_ARMOR_EQUIP_ELYTRA ARMOR_EQUIP_ELYTRA
	ITEM_ARMOR_EQUIP_GENERIC ARMOR_EQUIP_GENERIC
	ITEM_ARMOR_EQUIP_GOLD ARMOR_EQUIP_GOLD
	ITEM_ARMOR_EQUIP_IRON ARMOR_EQUIP_IRON
	ITEM_ARMOR_EQUIP_LEATHER ARMOR_EQUIP_LEATHER
	ITEM_ARMOR_EQUIP_TURTLE ARMOR_EQUIP_TURTLE
	ITEM_AXE_STRIP AXE_STRIP
	ITEM_BOOK_PAGE_TURN BOOK_PAGE_TURN
	ITEM_BOOK_PUT BOOK_PUT
	ITEM_BOTTLE_EMPTY BOTTLE_EMPTY
	ITEM_BOTTLE_FILL BOTTLE_FILL
	ITEM_BOTTLE_FILL_DRAGONBREATH BOTTLE_FILL_DRAGONBREATH
	ITEM_BUCKET_EMPTY BUCKET_EMPTY
	ITEM_BUCKET_EMPTY_FISH BUCKET_EMPTY_FISH
	ITEM_BUCKET_EMPTY_LAVA BUCKET_EMPTY_LAVA
	ITEM_BUCKET_FILL BUCKET_FILL
	ITEM_BUCKET_FILL_FISH BUCKET_FILL_FISH
	ITEM_BUCKET_FILL_LAVA BUCKET_FILL_LAVA
	ITEM_CHORUS_FRUIT_TELEPORT CHORUS_FRUIT_TELEPORT
	ITEM_CROP_PLANT CROP_PLANTED
	ITEM_CROSSBOW_HIT CROSSBOW_HIT
	ITEM_CROSSBOW_LOADING_END CROSSBOW_LOADING_END
	ITEM_CROSSBOW_LOADING_MIDDLE CROSSBOW_LOADING_MIDDLE
	ITEM_CROSSBOW_LOADING_START CROSSBOW_LOADING_START
	ITEM_CROSSBOW_QUICK_CHARGE_1 CROSSBOW_QUICK_CHARGE_1
	ITEM_CROSSBOW_QUICK_CHARGE_2 CROSSBOW_QUICK_CHARGE_2
	ITEM_CROSSBOW_QUICK_CHARGE_3 CROSSBOW_QUICK_CHARGE_3
	ITEM_CROSSBOW_SHOOT CROSSBOW_SHOOT
	ITEM_ELYTRA_FLYING ELYTRA_FLYING
	ITEM_FIRECHARGE_USE FIRECHARGE_USE
	ITEM_FLINTANDSTEEL_USE FLINTANDSTEEL_USE
	ITEM_HOE_TILL HOE_TILL
	ITEM_HONEY_BOTTLE_DRINK HONEY_DRINK
	ITEM_NETHER_WART_PLANT NETHER_WART_PLANTED
	ITEM_SHIELD_BLOCK SHIELD_BLOCK
	ITEM_SHIELD_BREAK SHIELD_BREAK
	ITEM_SHOVEL_FLATTEN SHOVEL_FLATTEN
	ITEM_SWEET_BERRIES_PICK_FROM_BUSH SWEET_BERRY_BUSH_PICK_BERRIES
	ITEM_TOTEM_USE TOTEM_USE
	ITEM_TRIDENT_HIT TRIDENT_HIT
	ITEM_TRIDENT_HIT_GROUND TRIDENT_HIT_GROUND
	ITEM_TRIDENT_RETURN TRIDENT_RETURN
	ITEM_TRIDENT_RIPTIDE_1 TRIDENT_RIPTIDE_1
	ITEM_TRIDENT_RIPTIDE_2 TRIDENT_RIPTIDE_2
	ITEM_TRIDENT_RIPTIDE_3 TRIDENT_RIPTIDE_3
	ITEM_TRIDENT_THROW TRIDENT_THROW
	ITEM_TRIDENT_THUNDER TRIDENT_THUNDER
	a (Ljava/lang/String;)Lnet/minecraft/server/SoundEffect; register
net/minecraft/server/SourceBlock net/minecraft/core/BlockSourceImpl
	a level
	b pos
	a ()D x
	b ()D y
	c ()D z
	d ()Lnet/minecraft/server/BlockPosition; getPos
	e ()Lnet/minecraft/server/IBlockData; getBlockState
	f ()Lnet/minecraft/server/Material; getMaterial
	g ()Lnet/minecraft/server/TileEntity; getEntity
	h ()Lnet/minecraft/server/World; getLevel
net/minecraft/server/SpawnerCreature net/minecraft/world/level/NaturalSpawner
	a LOGGER
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/EnumCreatureType;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/BiomeBase$BiomeMeta; getRandomSpawnMobAt
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/EnumCreatureType;Lnet/minecraft/server/BiomeBase$BiomeMeta;Lnet/minecraft/server/BlockPosition;)Z canSpawnMobAt
	a (Lnet/minecraft/server/EntityPositionTypes$Surface;Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityTypes;)Z isSpawnPositionOk
	a (Lnet/minecraft/server/EnumCreatureType;Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/Chunk;Lnet/minecraft/server/BlockPosition;)V spawnCategoryForChunk
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BiomeBase;IILjava/util/Random;)V spawnMobsForChunkGeneration
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/Fluid;)Z isValidEmptySpawnBlock
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/EntityTypes;II)Lnet/minecraft/server/BlockPosition; getTopNonCollidingPos
	getRandomPosition (Lnet/minecraft/server/World;Lnet/minecraft/server/Chunk;)Lnet/minecraft/server/BlockPosition; getRandomPosWithin
net/minecraft/server/Statistic net/minecraft/stats/Stat
	o formatter
	p value
	q type
	a (I)Ljava/lang/String; format
	a (Lnet/minecraft/server/MinecraftKey;)Ljava/lang/String; locationToKey
	a (Lnet/minecraft/server/StatisticWrapper;Ljava/lang/Object;)Ljava/lang/String; buildName
	b ()Ljava/lang/Object; getValue
	getWrapper ()Lnet/minecraft/server/StatisticWrapper; getType
net/minecraft/server/StatisticList net/minecraft/stats/Stats
	SNEAK_TIME CROUCH_TIME
	a (Ljava/lang/String;Lnet/minecraft/server/Counter;)Lnet/minecraft/server/MinecraftKey; makeCustomStat
	a (Ljava/lang/String;Lnet/minecraft/server/IRegistry;)Lnet/minecraft/server/StatisticWrapper; makeRegistryStatType
net/minecraft/server/StatisticManager net/minecraft/stats/StatsCounter
	a stats
	a (Lnet/minecraft/server/StatisticWrapper;Ljava/lang/Object;)I getValue
	b (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/Statistic;I)V increment
	getStatisticValue (Lnet/minecraft/server/Statistic;)I getValue
	setStatistic (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/Statistic;I)V setValue
net/minecraft/server/StatisticWrapper net/minecraft/stats/StatType
	a registry
	b map
	a (Ljava/lang/Object;)Z contains
	a (Ljava/lang/Object;Lnet/minecraft/server/Counter;)Lnet/minecraft/server/Statistic; get
	b ()I size
	b (Ljava/lang/Object;)Lnet/minecraft/server/Statistic; get
	c ()Ljava/lang/String; getTranslationKey
net/minecraft/server/StatusChallengeUtils net/minecraft/server/rcon/PktUtils
	a HEX_CHAR
	a (B)Ljava/lang/String; toHexString
	a ([BI)I intFromByteArray
	a ([BII)Ljava/lang/String; stringFromByteArray
	b ([BII)I intFromByteArray
	c ([BII)I intFromNetworkByteArray
net/minecraft/server/StreamAccumulator net/minecraft/util/RewindableStream
	a cache
	b source
	a ()Ljava/util/stream/Stream; getStream
net/minecraft/server/StructureAbstract net/minecraft/world/level/levelgen/structure/BeardedStructureStart
	b ()V calculateBoundingBox
net/minecraft/server/StructureBoundingBox net/minecraft/world/level/levelgen/structure/BoundingBox
	a x0
	b y0
	c z0
	d x1
	e y1
	f z1
	a ()Lnet/minecraft/server/StructureBoundingBox; getUnknownBox
	a (III)V move
	a (IIII)Z intersects
	a (IIIIII)Lnet/minecraft/server/StructureBoundingBox; createProper
	a (IIIIIIIIILnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/StructureBoundingBox; orientBox
	a (Lnet/minecraft/server/BaseBlockPosition;)V move
	a (Lnet/minecraft/server/BaseBlockPosition;Lnet/minecraft/server/BaseBlockPosition;)Z intersects
	a (Lnet/minecraft/server/StructureBoundingBox;)Z isInsideOf
	b ()Lnet/minecraft/server/BaseBlockPosition; getLength
	b (III)Lnet/minecraft/server/StructureBoundingBox; moved
	b (IIIIII)Z intersects
	b (Lnet/minecraft/server/BaseBlockPosition;)Z isInside
	b (Lnet/minecraft/server/StructureBoundingBox;)Z intersects
	c ()I getXSpan
	c (Lnet/minecraft/server/StructureBoundingBox;)V expand
	d ()I getYSpan
	d (Lnet/minecraft/server/StructureBoundingBox;)Lnet/minecraft/server/StructureBoundingBox; getIntersection
	e ()I getZSpan
	f ()Lnet/minecraft/server/BaseBlockPosition; getCenter
	g ()Lnet/minecraft/server/NBTTagIntArray; createTag
net/minecraft/server/StructureGenerator net/minecraft/world/level/levelgen/feature/StructureFeature
	a LOGGER
	a ()Lcfi$a; getStartFactory
	a (Lnet/minecraft/server/BiomeManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;IILnet/minecraft/server/BiomeBase;)Z isFeatureChunk
	a (Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;IIII)Lnet/minecraft/server/ChunkCoordIntPair; getPotentialFeatureChunkFromLocationWithOffset
	a (Lnet/minecraft/server/GeneratorAccess;II)Ljava/util/List; dereferenceStructureStarts
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)Z isInsideBoundingFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Z)Lnet/minecraft/server/StructureStart; getStructureAt
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	b ()Ljava/lang/String; getFeatureName
	b (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)Z isInsideFeature
	b (Lnet/minecraft/server/WorldGenFeatureConfiguration;)Lnet/minecraft/server/WorldGenFeatureConfigured; configured
	c ()I getLookupRange
	g ()Z supportsProjection
net/minecraft/server/StructurePiece net/minecraft/world/level/levelgen/structure/StructurePiece
	a orientation
	b mirror
	c rotation
	d type
	e SHAPE_CHECK_BLOCKS
	m CAVE_AIR
	n boundingBox
	o genDepth
	a (II)I getWorldX
	a (III)V move
	a (Ljava/util/List;Lnet/minecraft/server/StructureBoundingBox;)Lnet/minecraft/server/StructurePiece; findCollisionPiece
	a (Lnet/minecraft/server/ChunkCoordIntPair;I)Z isCloseToChunk
	a (Lnet/minecraft/server/EnumDirection;)V setOrientation
	a (Lnet/minecraft/server/GeneratorAccess;IIILnet/minecraft/server/StructureBoundingBox;)V generateAirColumnUp
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/IBlockData;IIILnet/minecraft/server/StructureBoundingBox;)V placeBlock
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/StructureBoundingBox;IIIIIILnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;Z)V generateBox
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/StructureBoundingBox;IIIIIILnet/minecraft/server/IBlockData;Z)V generateUpperHalfSphere
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/StructureBoundingBox;IIIIIIZLjava/util/Random;Lnet/minecraft/server/StructurePiece$StructurePieceBlockSelector;)V generateBox
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/StructureBoundingBox;Ljava/util/Random;FIIIIIILnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;ZZ)V generateMaybeBox
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/StructureBoundingBox;Ljava/util/Random;FIIILnet/minecraft/server/IBlockData;)V maybeGenerateBlock
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/StructureBoundingBox;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;Lnet/minecraft/server/BlockDoor;)V createDoor
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/StructureBoundingBox;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;Lnet/minecraft/server/MinecraftKey;)Z createDispenser
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/StructureBoundingBox;Ljava/util/Random;IIILnet/minecraft/server/MinecraftKey;)Z createChest
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/StructureBoundingBox;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/MinecraftKey;Lnet/minecraft/server/IBlockData;)Z createChest
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;Z)V generateBox
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/StructureBoundingBox;ZLjava/util/Random;Lnet/minecraft/server/StructurePiece$StructurePieceBlockSelector;)V generateBox
	a (Lnet/minecraft/server/IBlockAccess;IIILnet/minecraft/server/StructureBoundingBox;)Lnet/minecraft/server/IBlockData; getBlock
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/IBlockData; reorient
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/StructureBoundingBox;)Z edgesLiquid
	a (Lnet/minecraft/server/IWorldReader;IIILnet/minecraft/server/StructureBoundingBox;)Z isInterior
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
	ac_ ()Lnet/minecraft/server/BlockPosition; getLocatorPosition
	ad_ ()Lnet/minecraft/server/EnumBlockRotation; getRotation
	b (II)I getWorldZ
	b (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/IBlockData;IIILnet/minecraft/server/StructureBoundingBox;)V fillColumnDown
	b (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/StructureBoundingBox;IIIIII)V generateAirBox
	c (III)Lnet/minecraft/server/BlockPosition; getWorldPos
	d (I)I getWorldY
	f ()Lnet/minecraft/server/NBTTagCompound; createTag
	g ()Lnet/minecraft/server/StructureBoundingBox; getBoundingBox
	h ()I getGenDepth
	i ()Lnet/minecraft/server/EnumDirection; getOrientation
	j ()Lnet/minecraft/server/EnumBlockMirror; getMirror
	k ()Lnet/minecraft/server/WorldGenFeatureStructurePieceType; getType
net/minecraft/server/StructurePiece$StructurePieceBlockSelector net/minecraft/world/level/levelgen/structure/StructurePiece$BlockSelector
	a next
	a ()Lnet/minecraft/server/IBlockData; getNext
	a (Ljava/util/Random;IIIZ)V next
net/minecraft/server/StructureStart net/minecraft/world/level/levelgen/structure/StructureStart
	a INVALID_START
	b pieces
	c boundingBox
	d random
	e feature
	f chunkX
	g chunkZ
	h references
	a ()Lnet/minecraft/server/BlockPosition; getLocatePos
	a (II)Lnet/minecraft/server/NBTTagCompound; createTag
	a (ILjava/util/Random;I)V moveBelowSeaLevel
	a (Ljava/util/Random;II)V moveInsideHeights
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;IILnet/minecraft/server/BiomeBase;)V generatePieces
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)V postProcess
	b ()V calculateBoundingBox
	c ()Lnet/minecraft/server/StructureBoundingBox; getBoundingBox
	d ()Ljava/util/List; getPieces
	e ()Z isValid
	f ()I getChunkX
	g ()I getChunkZ
	h ()Z canBeReferenced
	i ()V addReference
	j ()I getReferences
	k ()I getMaxReferences
	l ()Lnet/minecraft/server/StructureGenerator; getFeature
net/minecraft/server/SystemUtils net/minecraft/Util
	a timeSource
	b WORKER_COUNT
	c BACKGROUND_EXECUTOR
	d LOGGER
	a ()Ljava/util/stream/Collector; toMap
	a (Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object; findNextInIterable
	a (Ljava/lang/Object;Ljava/util/function/Consumer;)Ljava/lang/Object; make
	a (Ljava/lang/Runnable;Ljava/util/function/Supplier;)Ljava/lang/Runnable; name
	a (Ljava/lang/String;Lcom/mojang/datafixers/Dynamic;)Ljava/util/Optional; readUUID
	a (Ljava/lang/String;Ljava/util/UUID;Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; writeUUID
	a (Ljava/lang/String;Lnet/minecraft/server/MinecraftKey;)Ljava/lang/String; makeDescriptionId
	a (Ljava/lang/Throwable;)Ljava/util/concurrent/CompletableFuture; failedFuture
	a (Ljava/util/List;)Ljava/lang/Object; lastOf
	a (Ljava/util/Optional;)Ljava/util/stream/Stream; toStream
	a (Ljava/util/Optional;Ljava/util/function/Consumer;Ljava/lang/Runnable;)Ljava/util/Optional; ifElse
	a (Ljava/util/function/Supplier;)Ljava/lang/Object; make
	a (Lnet/minecraft/server/IBlockState;Ljava/lang/Object;)Ljava/lang/String; getPropertyName
	b (Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object; findPreviousInIterable
	b (Ljava/lang/Throwable;)V throwAsRuntime
	b (Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; sequence
	c (Ljava/lang/Throwable;)Ljava/lang/Throwable; pauseInIde
	d (Ljava/lang/Throwable;)Ljava/lang/String; describeError
	e ()Ljava/util/concurrent/Executor; backgroundExecutor
	f ()V shutdownBackgroundExecutor
	g ()Lnet/minecraft/server/SystemUtils$OS; getPlatform
	getMonotonicMillis ()J getMillis
	getMonotonicNanos ()J getNanos
	getTimeMillis ()J getEpochMillis
	h ()Ljava/util/stream/Stream; getVmArguments
	i ()Lit/unimi/dsi/fastutil/Hash$Strategy; identityStrategy
	k ()Ljava/util/concurrent/ExecutorService; makeBackgroundExecutor
net/minecraft/server/SystemUtils$IdentityHashingStrategy net/minecraft/Util$IdentityStrategy
	b $VALUES
net/minecraft/server/SystemUtils$OS net/minecraft/Util$OS
	f $VALUES
	a (Ljava/io/File;)V openFile
	a (Ljava/lang/String;)V openUri
	a (Ljava/net/URI;)V openUri
	a (Ljava/net/URL;)V openUrl
	b (Ljava/net/URL;)[Ljava/lang/String; getOpenUrlArguments
net/minecraft/server/Tag net/minecraft/tags/Tag
	a id
	b values
	c source
	a ()Ljava/util/Collection; getValues
	a (Ljava/util/Random;)Ljava/lang/Object; getRandomElement
	a (Ljava/util/function/Function;)Lcom/google/gson/JsonObject; serializeToJson
	b ()Ljava/util/Collection; getSource
	c ()Lnet/minecraft/server/MinecraftKey; getId
	isTagged (Ljava/lang/Object;)Z contains
net/minecraft/server/TagRegistry net/minecraft/tags/TagManager
	blockTags blocks
	entityTags entityTypes
	fluidTags fluids
	itemTags items
	a (Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	a (Lyw$a;Lnet/minecraft/server/IResourceManager;Lnet/minecraft/server/GameProfilerFiller;Lnet/minecraft/server/GameProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; reload
	b (Lnet/minecraft/server/PacketDataSerializer;)Lnet/minecraft/server/TagRegistry; deserializeFromNetwork
	getBlockTags ()Lnet/minecraft/server/TagsServer; getBlocks
	getEntityTags ()Lnet/minecraft/server/TagsServer; getEntityTypes
	getFluidTags ()Lnet/minecraft/server/TagsServer; getFluids
	getItemTags ()Lnet/minecraft/server/TagsServer; getItems
net/minecraft/server/Tags net/minecraft/tags/TagCollection
	a LOGGER
	b GSON
	c PATH_SUFFIX_LENGTH
	d tags
	e idToValue
	f directory
	g ordered
	h name
	a ()Ljava/util/Collection; getAvailableTags
	a (Ljava/lang/Object;)Ljava/util/Collection; getMatchingTags
	a (Ljava/util/Map;)V load
	a (Lnet/minecraft/server/IResourceManager;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; prepare
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/Tag; getTag
	b ()Ljava/util/Map; getAllTags
	b (Ljava/util/Map;)V replace
	b (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/Tag; getTagOrEmpty
	c (Lnet/minecraft/server/MinecraftKey;)Z hasTag
net/minecraft/server/TagsBlock net/minecraft/tags/BlockTags
	ae source
	af resetCount
	a ()Lnet/minecraft/server/Tags; getAllTags
	a (Ljava/lang/String;)Lnet/minecraft/server/Tag; bind
	a (Lnet/minecraft/server/Tags;)V reset
net/minecraft/server/TagsEntity net/minecraft/tags/EntityTypeTags
	RADIERS RAIDERS
	e source
	f resetCount
	a ()Lnet/minecraft/server/Tags; getAllTags
	a (Ljava/lang/String;)Lnet/minecraft/server/Tag; bind
	a (Lnet/minecraft/server/Tags;)V reset
net/minecraft/server/TagsFluid net/minecraft/tags/FluidTags
	c source
	d resetCount
	a ()Lnet/minecraft/server/Tags; getAllTags
	a (Ljava/lang/String;)Lnet/minecraft/server/Tag; bind
	a (Lnet/minecraft/server/Tags;)V reset
net/minecraft/server/TagsItem net/minecraft/tags/ItemTags
	Q source
	R resetCount
	a ()Lnet/minecraft/server/Tags; getAllTags
	a (Ljava/lang/String;)Lnet/minecraft/server/Tag; bind
	a (Lnet/minecraft/server/Tags;)V reset
net/minecraft/server/TagsServer net/minecraft/tags/SynchronizableTagCollection
	a registry
	a (Lnet/minecraft/server/PacketDataSerializer;)V serializeToNetwork
	b (Lnet/minecraft/server/PacketDataSerializer;)V loadFromNetwork
net/minecraft/server/ThreadNamedUncaughtExceptionHandler net/minecraft/DefaultUncaughtExceptionHandlerWithName
	a logger
net/minecraft/server/ThreadWatchdog net/minecraft/server/dedicated/ServerWatchdog
	a LOGGER
	b server
	c maxTickTime
	a ()V exit
net/minecraft/server/ThreadedMailbox net/minecraft/util/thread/ProcessorMailbox
	a queue
	b LOGGER
	c status
	d dispatcher
	e name
	a ()Z setAsScheduled
	a (Lit/unimi/dsi/fastutil/ints/Int2BooleanFunction;)I pollUntil
	a (Ljava/lang/Object;)V tell
	a (Ljava/util/concurrent/Executor;Ljava/lang/String;)Lnet/minecraft/server/ThreadedMailbox; create
	b ()V setAsIdle
	bh ()Ljava/lang/String; name
	c ()Z canBeScheduled
	d ()Z shouldProcess
	e ()Z pollTask
	f ()V registerForExecution
net/minecraft/server/TickList net/minecraft/world/level/TickList
	a ()I size
	a (Ljava/util/stream/Stream;)V addAll
	a (Lnet/minecraft/server/BlockPosition;Ljava/lang/Object;)Z hasScheduledTick
	a (Lnet/minecraft/server/BlockPosition;Ljava/lang/Object;I)V scheduleTick
	a (Lnet/minecraft/server/BlockPosition;Ljava/lang/Object;ILnet/minecraft/server/TickListPriority;)V scheduleTick
	b (Lnet/minecraft/server/BlockPosition;Ljava/lang/Object;)Z willTickThisTick
net/minecraft/server/TickListChunk net/minecraft/world/level/ChunkTickList
	a ticks
	b toId
	a ()I size
	a (J)Lnet/minecraft/server/NBTTagList; save
	a (Ljava/util/stream/Stream;)V addAll
	a (Lnet/minecraft/server/BlockPosition;Ljava/lang/Object;)Z hasScheduledTick
	a (Lnet/minecraft/server/BlockPosition;Ljava/lang/Object;ILnet/minecraft/server/TickListPriority;)V scheduleTick
	a (Lnet/minecraft/server/NBTTagList;Ljava/util/function/Function;Ljava/util/function/Function;)Lnet/minecraft/server/TickListChunk; create
	b ()Ljava/util/stream/Stream; ticks
	b (Lnet/minecraft/server/BlockPosition;Ljava/lang/Object;)Z willTickThisTick
net/minecraft/server/TickListEmpty net/minecraft/world/level/EmptyTickList
	a INSTANCE
	a ()I size
	a (Ljava/util/stream/Stream;)V addAll
	a (Lnet/minecraft/server/BlockPosition;Ljava/lang/Object;)Z hasScheduledTick
	a (Lnet/minecraft/server/BlockPosition;Ljava/lang/Object;I)V scheduleTick
	a (Lnet/minecraft/server/BlockPosition;Ljava/lang/Object;ILnet/minecraft/server/TickListPriority;)V scheduleTick
	b ()Lnet/minecraft/server/TickListEmpty; empty
	b (Lnet/minecraft/server/BlockPosition;Ljava/lang/Object;)Z willTickThisTick
net/minecraft/server/TickListPriority net/minecraft/world/level/TickPriority
	h value
	i $VALUES
	a ()I getValue
	a (I)Lnet/minecraft/server/TickListPriority; byValue
net/minecraft/server/TickListServer net/minecraft/world/level/ServerTickList
	a ignore
	b toId
	c fromId
	f level
	g currentlyTicking
	h alreadyTicked
	i ticker
	nextTickList tickNextTickList
	nextTickListHash tickNextTickSet
	a ()I size
	a (Ljava/util/List;Ljava/util/Collection;Lnet/minecraft/server/StructureBoundingBox;Z)Ljava/util/List; fetchTicksInArea
	a (Ljava/util/function/Function;Ljava/lang/Iterable;J)Lnet/minecraft/server/NBTTagList; saveTickList
	a (Ljava/util/stream/Stream;)V addAll
	a (Lnet/minecraft/server/BlockPosition;Ljava/lang/Object;)Z hasScheduledTick
	a (Lnet/minecraft/server/BlockPosition;Ljava/lang/Object;ILnet/minecraft/server/TickListPriority;)V scheduleTick
	a (Lnet/minecraft/server/ChunkCoordIntPair;)Lnet/minecraft/server/NBTTagList; save
	a (Lnet/minecraft/server/ChunkCoordIntPair;ZZ)Ljava/util/List; fetchTicksInChunk
	a (Lnet/minecraft/server/NBTTagList;)V load
	a (Lnet/minecraft/server/NextTickListEntry;)V addTickData
	a (Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/BlockPosition;)V copy
	a (Lnet/minecraft/server/StructureBoundingBox;ZZ)Ljava/util/List; fetchTicksInArea
	b ()V tick
	b (Lnet/minecraft/server/BlockPosition;Ljava/lang/Object;)Z willTickThisTick
net/minecraft/server/TickListWorldGen net/minecraft/server/level/WorldGenTickList
	a index
	a ()I size
	a (Ljava/util/stream/Stream;)V addAll
	a (Lnet/minecraft/server/BlockPosition;Ljava/lang/Object;)Z hasScheduledTick
	a (Lnet/minecraft/server/BlockPosition;Ljava/lang/Object;ILnet/minecraft/server/TickListPriority;)V scheduleTick
	b (Lnet/minecraft/server/BlockPosition;Ljava/lang/Object;)Z willTickThisTick
net/minecraft/server/Ticket net/minecraft/server/level/Ticket
	a type
	b ticketLevel
	d createdTick
	identifier key
	a (J)V setCreatedTick
	a (Lnet/minecraft/server/Ticket;)I compareTo
	b ()I getTicketLevel
	b (J)Z timedOut
	getTicketType ()Lnet/minecraft/server/TicketType; getType
net/minecraft/server/TicketType net/minecraft/server/level/TicketType
	i name
	j comparator
	loadPeriod timeout
	a ()Ljava/util/Comparator; getComparator
	a (Ljava/lang/String;Ljava/util/Comparator;)Lnet/minecraft/server/TicketType; create
	a (Ljava/lang/String;Ljava/util/Comparator;I)Lnet/minecraft/server/TicketType; create
	b ()J timeout
net/minecraft/server/TileEntity net/minecraft/world/level/block/entity/BlockEntity
	a LOGGER
	c blockState
	f remove
	g hasLoggedInvalidStateBefore
	position worldPosition
	tileType type
	world level
	a (DDD)D distanceToSqr
	a (Lnet/minecraft/server/CrashReportSystemDetails;)V fillCrashReportCategory
	a (Lnet/minecraft/server/EnumBlockMirror;)V mirror
	a (Lnet/minecraft/server/EnumBlockRotation;)V rotate
	ab_ ()V setRemoved
	b ()Lnet/minecraft/server/NBTTagCompound; getUpdateTag
	create (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/TileEntity; loadStatic
	d (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; saveMetadata
	getBlock ()Lnet/minecraft/server/IBlockData; getBlockState
	getPosition ()Lnet/minecraft/server/BlockPosition; getBlockPos
	getTileType ()Lnet/minecraft/server/TileEntityTypes; getType
	getWorld ()Lnet/minecraft/server/World; getLevel
	hasWorld ()Z hasLevel
	i ()D getViewDistance
	invalidateBlockCache ()V clearCache
	isFilteredNBT ()Z onlyOpCanSetNbt
	r ()V clearRemoved
	setLocation (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)V setLevelAndPosition
	setProperty (II)Z triggerEvent
	update ()V setChanged
	v ()V logInvalidState
net/minecraft/server/TileEntityBanner net/minecraft/world/level/block/entity/BannerBlockEntity
	a name
	color baseColor
	g receivedData
	h patterns
	i colors
	j textureHashName
	k onlyRenderPattern
	patterns itemPatterns
	M ()Lnet/minecraft/server/IChatBaseComponent; getName
	O ()Lnet/minecraft/server/IChatBaseComponent; getCustomName
	a ()Lnet/minecraft/server/PacketPlayOutTileEntityData; getUpdatePacket
	a (Ljava/util/function/Supplier;)Lnet/minecraft/server/EnumColor; getBaseColor
	a (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/ItemStack; getItem
	a (Lnet/minecraft/server/IChatBaseComponent;)V setCustomName
	a (Lnet/minecraft/server/ItemStack;)I getPatternCount
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumColor;)V fromItem
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	a (Z)V setOnlyRenderPattern
	b ()Lnet/minecraft/server/NBTTagCompound; getUpdateTag
	b (Lnet/minecraft/server/ItemStack;)V removeLastPattern
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	c ()Ljava/util/List; getPatterns
	f ()Ljava/util/List; getColors
	g ()Ljava/lang/String; getTextureHashName
	h ()Z onlyRenderPattern
	j ()V createPatternList
net/minecraft/server/TileEntityBarrel net/minecraft/world/level/block/entity/BarrelBlockEntity
	b openCount
	O_ ()I getContainerSize
	a (ILnet/minecraft/server/PlayerInventory;)Lnet/minecraft/server/Container; createMenu
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/SoundEffect;)V playSound
	a (Lnet/minecraft/server/IBlockData;Z)V updateBlockState
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	a (Lnet/minecraft/server/NonNullList;)V setItems
	a_ (Lnet/minecraft/server/EntityHuman;)V startOpen
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	b_ (Lnet/minecraft/server/EntityHuman;)V stopOpen
	f ()Lnet/minecraft/server/NonNullList; getItems
	g ()Lnet/minecraft/server/IChatBaseComponent; getDefaultName
	h ()V recheckOpen
	j ()V scheduleRecheck
net/minecraft/server/TileEntityBeacon net/minecraft/world/level/block/entity/BeaconBlockEntity
	a BEACON_EFFECTS
	b VALID_EFFECTS
	c beamSections
	chestLock lockKey
	containerProperties dataAccess
	customName name
	g checkingBeamSections
	i lastCheckY
	primaryEffect primaryPower
	secondaryEffect secondaryPower
	Z_ ()V tick
	a ()Lnet/minecraft/server/PacketPlayOutTileEntityData; getUpdatePacket
	a (III)V updateBase
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	a (Lnet/minecraft/server/SoundEffect;)V playSound
	ab_ ()V setRemoved
	b ()Lnet/minecraft/server/NBTTagCompound; getUpdateTag
	b (I)Lnet/minecraft/server/MobEffectList; getValidEffectById
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	d ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
	f ()Ljava/util/List; getBeamSections
	h ()I getLevels
	i ()D getViewDistance
net/minecraft/server/TileEntityBeacon$BeaconColorTracker net/minecraft/world/level/block/entity/BeaconBlockEntity$BeaconBeamSection
	a color
	b height
	a ()V increaseHeight
	b ()[F getColor
	c ()I getHeight
net/minecraft/server/TileEntityBed net/minecraft/world/level/block/entity/BedBlockEntity
	a ()Lnet/minecraft/server/PacketPlayOutTileEntityData; getUpdatePacket
	a (Lnet/minecraft/server/EnumColor;)V setColor
	d ()Lnet/minecraft/server/EnumColor; getColor
net/minecraft/server/TileEntityBeehive net/minecraft/world/level/block/entity/BeehiveBlockEntity
	bees stored
	flowerPos savedFlowerPos
	Z_ ()V tick
	a (Lnet/minecraft/server/Entity;Z)V addOccupant
	a (Lnet/minecraft/server/Entity;ZI)V addOccupantWithPresetTicks
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/TileEntityBeehive$ReleaseStatus;)V emptyAllLivingFromHive
	a (Lnet/minecraft/server/IBlockData;)I getHoneyLevel
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/NBTTagCompound;Ljava/util/List;Lnet/minecraft/server/TileEntityBeehive$ReleaseStatus;)Z releaseOccupant
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/TileEntityBeehive$ReleaseStatus;)Ljava/util/List; releaseAllOccupants
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	d ()Z isFireNearby
	e ()V setChanged
	j ()I getOccupantCount
	k ()Z isSedated
	l ()V sendDebugPackets
	m ()Lnet/minecraft/server/NBTTagList; writeBees
	x ()Z hasSavedFlowerPos
	y ()V tickOccupants
net/minecraft/server/TileEntityBeehive$ReleaseStatus net/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeReleaseStatus
	d $VALUES
net/minecraft/server/TileEntityBell net/minecraft/world/level/block/entity/BellBlockEntity
	a ticks
	b shaking
	c clickDirection
	g lastRingTimestamp
	h nearbyEntities
	i resonating
	j resonationTicks
	Z_ ()V tick
	a (Lnet/minecraft/server/EntityLiving;)Z isRaiderWithinRange
	a (Lnet/minecraft/server/EnumDirection;)V onHit
	a (Lnet/minecraft/server/World;)V makeRaidersGlow
	a_ (II)Z triggerEvent
	b (Lnet/minecraft/server/EntityLiving;)V glow
	b (Lnet/minecraft/server/World;)V showBellParticles
	d ()V playResonateSound
	f ()V updateEntities
	h ()Z areRaidersNearby
net/minecraft/server/TileEntityBlastFurnace net/minecraft/world/level/block/entity/BlastFurnaceBlockEntity
	a (ILnet/minecraft/server/PlayerInventory;)Lnet/minecraft/server/Container; createMenu
	a (Lnet/minecraft/server/ItemStack;)I getBurnDuration
	g ()Lnet/minecraft/server/IChatBaseComponent; getDefaultName
net/minecraft/server/TileEntityBrewingStand net/minecraft/world/level/block/entity/BrewingStandBlockEntity
	a dataAccess
	b SLOTS_FOR_UP
	c SLOTS_FOR_DOWN
	fuelLevel fuel
	g SLOTS_FOR_SIDES
	j lastPotionCount
	k ingredient
	N_ ()V clearContent
	O_ ()I getContainerSize
	Z_ ()V tick
	a (I)Lnet/minecraft/server/ItemStack; getItem
	a (II)Lnet/minecraft/server/ItemStack; removeItem
	a (ILnet/minecraft/server/ItemStack;)V setItem
	a (ILnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumDirection;)Z canPlaceItemThroughFace
	a (ILnet/minecraft/server/PlayerInventory;)Lnet/minecraft/server/Container; createMenu
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/EnumDirection;)[I getSlotsForFace
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	b (I)Lnet/minecraft/server/ItemStack; removeItemNoUpdate
	b (ILnet/minecraft/server/ItemStack;)Z canPlaceItem
	b (ILnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumDirection;)Z canTakeItemThroughFace
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	c ()Z isEmpty
	f ()[Z getPotionBits
	g ()Lnet/minecraft/server/IChatBaseComponent; getDefaultName
	h ()Z isBrewable
	j ()V doBrew
net/minecraft/server/TileEntityCampfire net/minecraft/world/level/block/entity/CampfireBlockEntity
	cookingTimes cookingProgress
	cookingTotalTimes cookingTime
	N_ ()V clearContent
	Z_ ()V tick
	a ()Lnet/minecraft/server/PacketPlayOutTileEntityData; getUpdatePacket
	a (Lnet/minecraft/server/ItemStack;)Ljava/util/Optional; getCookableRecipe
	a (Lnet/minecraft/server/ItemStack;I)Z placeFood
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	b ()Lnet/minecraft/server/NBTTagCompound; getUpdateTag
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	d (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; saveMetadataAndItems
	f ()V dowse
	h ()V cook
	j ()V makeParticles
	k ()V markUpdated
net/minecraft/server/TileEntityChest net/minecraft/world/level/block/entity/ChestBlockEntity
	a openness
	b oOpenness
	j tickInterval
	viewingCount openCount
	O_ ()I getContainerSize
	Z_ ()V tick
	a (F)F getOpenNess
	a (ILnet/minecraft/server/PlayerInventory;)Lnet/minecraft/server/Container; createMenu
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)I getOpenCount
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	a (Lnet/minecraft/server/NonNullList;)V setItems
	a (Lnet/minecraft/server/SoundEffect;)V playSound
	a (Lnet/minecraft/server/TileEntityChest;Lnet/minecraft/server/TileEntityChest;)V swapContents
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/TileEntityContainer;III)I getOpenCount
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/TileEntityContainer;IIIII)I getOpenCount
	a_ (II)Z triggerEvent
	a_ (Lnet/minecraft/server/EntityHuman;)V startOpen
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	b_ (Lnet/minecraft/server/EntityHuman;)V stopOpen
	f ()Lnet/minecraft/server/NonNullList; getItems
	g ()Lnet/minecraft/server/IChatBaseComponent; getDefaultName
	onOpen ()V signalOpenCount
net/minecraft/server/TileEntityChestTrapped net/minecraft/world/level/block/entity/TrappedChestBlockEntity
	h ()V signalOpenCount
net/minecraft/server/TileEntityCommand net/minecraft/world/level/block/entity/CommandBlockEntity
	a powered
	b auto
	c conditionMet
	g sendToClient
	h commandBlock
	a ()Lnet/minecraft/server/PacketPlayOutTileEntityData; getUpdatePacket
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	a (Z)V setPowered
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	b (Z)V setAutomatic
	c (Z)V setSendToClient
	f ()Z isPowered
	g ()Z isAutomatic
	h ()V onModeSwitch
	j ()Z wasConditionMet
	k ()Z markConditionMet
	l ()Z isSendToClient
	m ()Lnet/minecraft/server/TileEntityCommand$Type; getMode
	r ()V clearRemoved
	t ()Z onlyOpCanSetNbt
	x ()Z isConditional
	y ()V scheduleTick
net/minecraft/server/TileEntityCommand$Type net/minecraft/world/level/block/entity/CommandBlockEntity$Mode
	d $VALUES
net/minecraft/server/TileEntityComparator net/minecraft/world/level/block/entity/ComparatorBlockEntity
	a output
	a (I)V setOutputSignal
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	d ()I getOutputSignal
net/minecraft/server/TileEntityConduit net/minecraft/world/level/block/entity/ConduitBlockEntity
	a tickCount
	b VALID_BLOCKS
	c activeRotation
	g isActive
	h isHunting
	i effectBlocks
	k destroyTargetUUID
	l nextAmbientSoundActivation
	target destroyTarget
	Z_ ()V tick
	a ()Lnet/minecraft/server/PacketPlayOutTileEntityData; getUpdatePacket
	a (F)F getActiveRotation
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	a (Lnet/minecraft/server/SoundEffect;)V playSound
	a (Z)V setActive
	b ()Lnet/minecraft/server/NBTTagCompound; getUpdateTag
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	b (Z)V setHunting
	d ()Z isActive
	f ()Z isHunting
	h ()Z updateShape
	j ()V applyEffects
	k ()V updateDestroyTarget
	l ()V updateClientTarget
	m ()Lnet/minecraft/server/AxisAlignedBB; getDestroyRangeAABB
	x ()Lnet/minecraft/server/EntityLiving; findDestroyTarget
	y ()V animationTick
net/minecraft/server/TileEntityContainer net/minecraft/world/level/block/entity/BaseContainerBlockEntity
	chestLock lockKey
	customName name
	M ()Lnet/minecraft/server/IChatBaseComponent; getName
	O ()Lnet/minecraft/server/IChatBaseComponent; getCustomName
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ChestLock;Lnet/minecraft/server/IChatBaseComponent;)Z canUnlock
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	createContainer (ILnet/minecraft/server/PlayerInventory;)Lnet/minecraft/server/Container; createMenu
	d ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
	e (Lnet/minecraft/server/EntityHuman;)Z canOpen
	getContainerName ()Lnet/minecraft/server/IChatBaseComponent; getDefaultName
net/minecraft/server/TileEntityDispenser net/minecraft/world/level/block/entity/DispenserBlockEntity
	a RANDOM
	O_ ()I getContainerSize
	a (ILnet/minecraft/server/PlayerInventory;)Lnet/minecraft/server/Container; createMenu
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	a (Lnet/minecraft/server/NonNullList;)V setItems
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	f ()Lnet/minecraft/server/NonNullList; getItems
	g ()Lnet/minecraft/server/IChatBaseComponent; getDefaultName
	h ()I getRandomSlot
net/minecraft/server/TileEntityDropper net/minecraft/world/level/block/entity/DropperBlockEntity
	g ()Lnet/minecraft/server/IChatBaseComponent; getDefaultName
net/minecraft/server/TileEntityEnchantTable net/minecraft/world/level/block/entity/EnchantmentTableBlockEntity
	a time
	b flip
	c oFlip
	g flipT
	h flipA
	i open
	j oOpen
	k rot
	l oRot
	m tRot
	n RANDOM
	o name
	M ()Lnet/minecraft/server/IChatBaseComponent; getName
	O ()Lnet/minecraft/server/IChatBaseComponent; getCustomName
	Z_ ()V tick
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
net/minecraft/server/TileEntityEndGateway net/minecraft/world/level/block/entity/TheEndGatewayBlockEntity
	a LOGGER
	c teleportCooldown
	Z_ ()V tick
	a ()Lnet/minecraft/server/PacketPlayOutTileEntityData; getUpdatePacket
	a (F)F getSpawnPercent
	a (Lnet/minecraft/server/BlockPosition;Z)V setExitPosition
	a (Lnet/minecraft/server/Chunk;)Lnet/minecraft/server/BlockPosition; findValidSpawnInChunk
	a (Lnet/minecraft/server/Entity;)V teleportEntity
	a (Lnet/minecraft/server/EnumDirection;)Z shouldRenderFace
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;IZ)Lnet/minecraft/server/BlockPosition; findTallestBlock
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/Chunk; getChunk
	a (Lnet/minecraft/server/WorldServer;)V findExitPortal
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;)V createExitPortal
	a_ (II)Z triggerEvent
	b ()Lnet/minecraft/server/NBTTagCompound; getUpdateTag
	b (F)F getCooldownPercent
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	d ()Z isSpawning
	f ()Z isCoolingDown
	h ()V triggerCooldown
	i ()D getViewDistance
	j ()I getParticleAmount
	k ()Lnet/minecraft/server/BlockPosition; findExitPosition
net/minecraft/server/TileEntityEnderChest net/minecraft/world/level/block/entity/EnderChestBlockEntity
	a openness
	b oOpenness
	c openCount
	g tickInterval
	Z_ ()V tick
	a (F)F getOpenNess
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a_ (II)Z triggerEvent
	ab_ ()V setRemoved
	d ()V startOpen
	f ()V stopOpen
net/minecraft/server/TileEntityEnderPortal net/minecraft/world/level/block/entity/TheEndPortalBlockEntity
	a (Lnet/minecraft/server/EnumDirection;)Z shouldRenderFace
net/minecraft/server/TileEntityFurnace net/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity
	b dataAccess
	burnTime litTime
	c recipeType
	cookTime cookingProgress
	cookTimeTotal cookingTotalTime
	g SLOTS_FOR_UP
	h SLOTS_FOR_DOWN
	i SLOTS_FOR_SIDES
	n recipesUsed
	ticksForCurrentFuel litDuration
	N_ ()V clearContent
	O_ ()I getContainerSize
	Z_ ()V tick
	a (I)Lnet/minecraft/server/ItemStack; getItem
	a (II)Lnet/minecraft/server/ItemStack; removeItem
	a (ILnet/minecraft/server/ItemStack;)V setItem
	a (ILnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumDirection;)Z canPlaceItemThroughFace
	a (Ljava/util/Map;Lnet/minecraft/server/IMaterial;I)V add
	a (Ljava/util/Map;Lnet/minecraft/server/Tag;I)V add
	a (Lnet/minecraft/server/AutoRecipeStackManager;)V fillStackedContents
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/EntityHuman;IF)V createExperience
	a (Lnet/minecraft/server/EnumDirection;)[I getSlotsForFace
	a (Lnet/minecraft/server/IRecipe;)V setRecipeUsed
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	aa_ ()Lnet/minecraft/server/IRecipe; getRecipeUsed
	b (I)Lnet/minecraft/server/ItemStack; removeItemNoUpdate
	b (ILnet/minecraft/server/ItemStack;)Z canPlaceItem
	b (ILnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumDirection;)Z canTakeItemThroughFace
	b (Lnet/minecraft/server/EntityHuman;)V awardAndReset
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	c ()Z isEmpty
	d (Lnet/minecraft/server/EntityHuman;)V awardResetAndExperience
	f ()Ljava/util/Map; getFuel
	fuelTime (Lnet/minecraft/server/ItemStack;)I getBurnDuration
	getRecipeCookingTime ()I getTotalCookTime
	isBurning ()Z isLit
net/minecraft/server/TileEntityFurnaceFurnace net/minecraft/world/level/block/entity/FurnaceBlockEntity
	a (ILnet/minecraft/server/PlayerInventory;)Lnet/minecraft/server/Container; createMenu
	g ()Lnet/minecraft/server/IChatBaseComponent; getDefaultName
net/minecraft/server/TileEntityHopper net/minecraft/world/level/block/entity/HopperBlockEntity
	j cooldownTime
	k tickedGameTime
	A ()D getLevelY
	B ()D getLevelZ
	O_ ()I getContainerSize
	Z_ ()V tick
	a (II)Lnet/minecraft/server/ItemStack; removeItem
	a (ILnet/minecraft/server/ItemStack;)V setItem
	a (ILnet/minecraft/server/PlayerInventory;)Lnet/minecraft/server/Container; createMenu
	a (Ljava/util/function/Supplier;)Z tryMoveItems
	a (Lnet/minecraft/server/Entity;)V entityInside
	a (Lnet/minecraft/server/IHopper;)Z suckInItems
	a (Lnet/minecraft/server/IHopper;Lnet/minecraft/server/IInventory;ILnet/minecraft/server/EnumDirection;)Z tryTakeInItemFromSlot
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/EntityItem;)Z addItem
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/EnumDirection;)Ljava/util/stream/IntStream; getSlots
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/IInventory;Lnet/minecraft/server/ItemStack;ILnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/ItemStack; tryMoveInItem
	a (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/ItemStack;ILnet/minecraft/server/EnumDirection;)Z canPlaceItemInContainer
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/ItemStack;)Z canMergeItems
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	a (Lnet/minecraft/server/NonNullList;)V setItems
	a (Lnet/minecraft/server/World;DDD)Lnet/minecraft/server/IInventory; getContainerAt
	b (Lnet/minecraft/server/IHopper;)Lnet/minecraft/server/IInventory; getSourceContainer
	b (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/EnumDirection;)Z isFullContainer
	b (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/ItemStack;ILnet/minecraft/server/EnumDirection;)Z canTakeItemFromContainer
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	b (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IInventory; getContainerAt
	c (Lnet/minecraft/server/IHopper;)Ljava/util/List; getItemsAtAndAbove
	c (Lnet/minecraft/server/IInventory;Lnet/minecraft/server/EnumDirection;)Z isEmptyContainer
	f ()Lnet/minecraft/server/NonNullList; getItems
	g ()Lnet/minecraft/server/IChatBaseComponent; getDefaultName
	h ()Z inventoryFull
	j ()Z ejectItems
	k ()Lnet/minecraft/server/IInventory; getAttachedContainer
	l ()Z isOnCooldown
	m ()Z isOnCustomCooldown
	z ()D getLevelX
net/minecraft/server/TileEntityJigsaw net/minecraft/world/level/block/entity/JigsawBlockEntity
	a attachementType
	b targetPool
	c finalState
	a ()Lnet/minecraft/server/PacketPlayOutTileEntityData; getUpdatePacket
	a (Ljava/lang/String;)V setFinalState
	a (Lnet/minecraft/server/MinecraftKey;)V setAttachementType
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	b ()Lnet/minecraft/server/NBTTagCompound; getUpdateTag
	b (Lnet/minecraft/server/MinecraftKey;)V setTargetPool
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	d ()Lnet/minecraft/server/MinecraftKey; getAttachementType
	f ()Lnet/minecraft/server/MinecraftKey; getTargetPool
	g ()Ljava/lang/String; getFinalState
net/minecraft/server/TileEntityJukeBox net/minecraft/world/level/block/entity/JukeboxBlockEntity
	a record
	N_ ()V clearContent
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
net/minecraft/server/TileEntityLectern net/minecraft/world/level/block/entity/LecternBlockEntity
	containerProperties dataAccess
	inventory bookAccess
	maxPage pageCount
	N_ ()V clearContent
	a (Lnet/minecraft/server/EntityHuman;)Lnet/minecraft/server/CommandListenerWrapper; createCommandSourceStack
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityHuman;)V setBook
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	b (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/EntityHuman;)Lnet/minecraft/server/ItemStack; resolveBook
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	d ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
	j ()I getRedstoneSignal
	k ()V onBookItemRemove
	t ()Z onlyOpCanSetNbt
net/minecraft/server/TileEntityLightDetector net/minecraft/world/level/block/entity/DaylightDetectorBlockEntity
	Z_ ()V tick
net/minecraft/server/TileEntityLootable net/minecraft/world/level/block/entity/RandomizableContainerBlockEntity
	N_ ()V clearContent
	a (I)Lnet/minecraft/server/ItemStack; getItem
	a (II)Lnet/minecraft/server/ItemStack; removeItem
	a (ILnet/minecraft/server/ItemStack;)V setItem
	a (Lnet/minecraft/server/EntityHuman;)Z stillValid
	a (Lnet/minecraft/server/IBlockAccess;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/MinecraftKey;)V setLootTable
	a (Lnet/minecraft/server/NonNullList;)V setItems
	b (I)Lnet/minecraft/server/ItemStack; removeItemNoUpdate
	c ()Z isEmpty
	d (Lnet/minecraft/server/EntityHuman;)V unpackLootTable
	d (Lnet/minecraft/server/NBTTagCompound;)Z tryLoadLootTable
	e (Lnet/minecraft/server/EntityHuman;)Z canOpen
	e (Lnet/minecraft/server/NBTTagCompound;)Z trySaveLootTable
	f ()Lnet/minecraft/server/NonNullList; getItems
net/minecraft/server/TileEntityMobSpawner net/minecraft/world/level/block/entity/SpawnerBlockEntity
	a spawner
	Z_ ()V tick
	a ()Lnet/minecraft/server/PacketPlayOutTileEntityData; getUpdatePacket
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	a_ (II)Z triggerEvent
	b ()Lnet/minecraft/server/NBTTagCompound; getUpdateTag
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	t ()Z onlyOpCanSetNbt
net/minecraft/server/TileEntityPiston net/minecraft/world/level/block/piston/PistonMovingBlockEntity
	a movedState
	b direction
	c extending
	g isSourcePiston
	h NOCLIP
	i progress
	j progressO
	k lastTicked
	Z_ ()V tick
	a (F)F getProgress
	a (Ljava/util/List;)Lnet/minecraft/server/AxisAlignedBB; getMinMaxPiecesAABB
	a (Lnet/minecraft/server/AxisAlignedBB;)Lnet/minecraft/server/AxisAlignedBB; moveByPositionAndProgress
	a (Lnet/minecraft/server/AxisAlignedBB;Lnet/minecraft/server/Entity;)Z matchesStickyCritera
	a (Lnet/minecraft/server/AxisAlignedBB;Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/AxisAlignedBB;)D getMovement
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/EnumDirection;D)V fixEntityWithinPistonBase
	a (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/Entity;DLnet/minecraft/server/EnumDirection;)V moveEntityByPiston
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/VoxelShape; getCollisionShape
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	b ()Lnet/minecraft/server/NBTTagCompound; getUpdateTag
	b (F)F getXOff
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	c (F)F getYOff
	d ()Z isExtending
	d (F)F getZOff
	e (F)F getExtendedProgress
	f ()Lnet/minecraft/server/EnumDirection; getDirection
	f (F)V moveCollidedEntities
	g (F)V moveStuckEntities
	h ()Z isSourcePiston
	j ()Lnet/minecraft/server/EnumDirection; getMovementDirection
	k ()Lnet/minecraft/server/IBlockData; getMovedState
	l ()V finalTick
	m ()J getLastTicked
	x ()Lnet/minecraft/server/IBlockData; getCollisionRelatedBlockState
	y ()Z isStickyForEntities
net/minecraft/server/TileEntityShulkerBox net/minecraft/world/level/block/entity/ShulkerBoxBlockEntity
	a SLOTS
	c openCount
	contents itemStacks
	i animationStatus
	j progress
	k progressOld
	l color
	m loadColorFromBlock
	O_ ()I getContainerSize
	Z_ ()V tick
	a (F)F getProgress
	a (ILnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumDirection;)Z canPlaceItemThroughFace
	a (ILnet/minecraft/server/PlayerInventory;)Lnet/minecraft/server/Container; createMenu
	a (Lnet/minecraft/server/EnumDirection;)[I getSlotsForFace
	a (Lnet/minecraft/server/IBlockData;)Lnet/minecraft/server/AxisAlignedBB; getBoundingBox
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	a (Lnet/minecraft/server/NonNullList;)V setItems
	a_ (II)Z triggerEvent
	a_ (Lnet/minecraft/server/EntityHuman;)V startOpen
	b (ILnet/minecraft/server/ItemStack;Lnet/minecraft/server/EnumDirection;)Z canTakeItemThroughFace
	b (Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/AxisAlignedBB; getBoundingBox
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	b_ (Lnet/minecraft/server/EntityHuman;)V stopOpen
	c (Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/AxisAlignedBB; getTopBoundingBox
	f ()Lnet/minecraft/server/NonNullList; getItems
	f (Lnet/minecraft/server/NBTTagCompound;)V loadFromTag
	g ()Lnet/minecraft/server/IChatBaseComponent; getDefaultName
	g (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; saveToTag
	h ()V updateAnimation
	j ()Lnet/minecraft/server/TileEntityShulkerBox$AnimationPhase; getAnimationStatus
	k ()Lnet/minecraft/server/EnumColor; getColor
	l ()V moveCollidedEntities
	m ()V doNeighborUpdates
net/minecraft/server/TileEntityShulkerBox$AnimationPhase net/minecraft/world/level/block/entity/ShulkerBoxBlockEntity$AnimationStatus
	e $VALUES
net/minecraft/server/TileEntitySign net/minecraft/world/level/block/entity/SignBlockEntity
	c playerWhoMayEdit
	g renderMessages
	lines messages
	a ()Lnet/minecraft/server/PacketPlayOutTileEntityData; getUpdatePacket
	a (I)Lnet/minecraft/server/IChatBaseComponent; getMessage
	a (ILjava/util/function/Function;)Ljava/lang/String; getRenderMessage
	a (ILnet/minecraft/server/IChatBaseComponent;)V setMessage
	a (Lnet/minecraft/server/EntityHuman;)V setAllowedPlayerEditor
	a (Lnet/minecraft/server/EntityPlayer;)Lnet/minecraft/server/CommandListenerWrapper; createCommandSourceStack
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	a (Z)V setEditable
	b ()Lnet/minecraft/server/NBTTagCompound; getUpdateTag
	b (Lnet/minecraft/server/EntityHuman;)Z executeClickCommands
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	d ()Z isEditable
	f ()Lnet/minecraft/server/EntityHuman; getPlayerWhoMayEdit
	t ()Z onlyOpCanSetNbt
net/minecraft/server/TileEntitySkull net/minecraft/world/level/block/entity/SkullBlockEntity
	b mouthTickCount
	c isMovingMouth
	gameProfile owner
	userCache profileCache
	Z_ ()V tick
	a ()Lnet/minecraft/server/PacketPlayOutTileEntityData; getUpdatePacket
	a (F)F getMouthAnimation
	a (Lcom/mojang/authlib/minecraft/MinecraftSessionService;)V setSessionService
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	a (Lnet/minecraft/server/UserCache;)V setProfileCache
	b ()Lnet/minecraft/server/NBTTagCompound; getUpdateTag
	b (Lcom/mojang/authlib/GameProfile;)Lcom/mojang/authlib/GameProfile; updateGameprofile
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	d ()Lcom/mojang/authlib/GameProfile; getOwnerProfile
	f ()V updateOwnerProfile
	setGameProfile (Lcom/mojang/authlib/GameProfile;)V setOwner
net/minecraft/server/TileEntitySmoker net/minecraft/world/level/block/entity/SmokerBlockEntity
	a (ILnet/minecraft/server/PlayerInventory;)Lnet/minecraft/server/Container; createMenu
	a (Lnet/minecraft/server/ItemStack;)I getBurnDuration
	g ()Lnet/minecraft/server/IChatBaseComponent; getDefaultName
net/minecraft/server/TileEntityStructure net/minecraft/world/level/block/entity/StructureBlockEntity
	metadata metaData
	relativePosition structurePos
	size structureSize
	usageMode mode
	A ()F getIntegrity
	B ()J getSeed
	C ()Z detectSize
	D ()Z saveStructure
	E ()Z loadStructure
	F ()V unloadStructure
	G ()Z isStructureLoadable
	H ()Z isPowered
	I ()Z getShowAir
	J ()Z getShowBoundingBox
	K ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
	L ()V updateBlockState
	a ()Lnet/minecraft/server/PacketPlayOutTileEntityData; getUpdatePacket
	a (F)V setIntegrity
	a (J)V setSeed
	a (Ljava/util/List;)Ljava/util/List; filterRelatedCornerBlocks
	a (Lnet/minecraft/server/BlockPosition;Ljava/util/List;)Lnet/minecraft/server/StructureBoundingBox; calculateEnclosingBoundingBox
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Ljava/util/List; getNearbyCornerBlocks
	a (Lnet/minecraft/server/EntityHuman;)Z usedBy
	a (Lnet/minecraft/server/MinecraftKey;)V setStructureName
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	a (Z)V setIgnoreEntities
	a (ZLnet/minecraft/server/DefinedStructure;)Z loadStructure
	b ()Lnet/minecraft/server/NBTTagCompound; getUpdateTag
	b (J)Ljava/util/Random; createRandom
	b (Ljava/lang/String;)V setMetaData
	b (Lnet/minecraft/server/BlockPosition;)V setStructurePos
	b (Lnet/minecraft/server/EnumBlockMirror;)V setMirror
	b (Lnet/minecraft/server/EnumBlockRotation;)V setRotation
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	b (Z)Z saveStructure
	c (Lnet/minecraft/server/BlockPosition;)V setStructureSize
	c (Z)Z loadStructure
	d (Z)V setPowered
	e (Z)V setShowAir
	f ()Ljava/lang/String; getStructurePath
	f (Z)V setShowBoundingBox
	g ()Z hasStructureName
	getUsageMode ()Lnet/minecraft/server/BlockPropertyStructureMode; getMode
	h ()Lnet/minecraft/server/BlockPosition; getStructurePos
	j ()Lnet/minecraft/server/BlockPosition; getStructureSize
	k ()Lnet/minecraft/server/EnumBlockMirror; getMirror
	l ()Lnet/minecraft/server/EnumBlockRotation; getRotation
	m ()Ljava/lang/String; getMetaData
	setAuthor (Lnet/minecraft/server/EntityLiving;)V createdBy
	setUsageMode (Lnet/minecraft/server/BlockPropertyStructureMode;)V setMode
	y ()V nextMode
	z ()Z isIgnoreEntities
net/minecraft/server/TileEntityStructure$UpdateType net/minecraft/world/level/block/entity/StructureBlockEntity$UpdateType
	e $VALUES
net/minecraft/server/TileEntityTypes net/minecraft/world/level/block/entity/BlockEntityType
	H LOGGER
	I factory
	J validBlocks
	K dataType
	a ()Lnet/minecraft/server/TileEntity; create
	a (Ljava/lang/String;Lbwj$a;)Lnet/minecraft/server/TileEntityTypes; register
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/TileEntity; getBlockEntity
	a (Lnet/minecraft/server/TileEntityTypes;)Lnet/minecraft/server/MinecraftKey; getKey
	isValidBlock (Lnet/minecraft/server/Block;)Z isValid
net/minecraft/server/TileInventory net/minecraft/world/SimpleMenuProvider
	a title
	b menuConstructor
	d ()Lnet/minecraft/server/IChatBaseComponent; getDisplayName
net/minecraft/server/ToolMaterial net/minecraft/world/item/Tier
	a ()I getUses
	b ()F getSpeed
	c ()F getAttackDamageBonus
	d ()I getLevel
	e ()I getEnchantmentValue
	f ()Lnet/minecraft/server/RecipeItemStack; getRepairIngredient
net/minecraft/server/Tuple net/minecraft/util/Tuple
	a ()Ljava/lang/Object; getA
	a (Ljava/lang/Object;)V setA
	b ()Ljava/lang/Object; getB
	b (Ljava/lang/Object;)V setB
net/minecraft/server/Unit net/minecraft/util/Unit
	b $VALUES
net/minecraft/server/UserCache net/minecraft/server/players/GameProfileCache
	a DATE_FORMAT
	b gson
	c usesAuthentication
	d profilesByName
	e profilesByUUID
	f profileMRUList
	g profileRepository
	h file
	i GAMEPROFILE_ENTRY_TYPE
	a ()[Ljava/lang/String; getKnownNames
	a (I)Ljava/util/List; getTopMRUProfiles
	a (Lcom/mojang/authlib/GameProfile;)V add
	a (Lcom/mojang/authlib/GameProfile;Ljava/util/Date;)V add
	a (Lcom/mojang/authlib/GameProfileRepository;Ljava/lang/String;)Lcom/mojang/authlib/GameProfile; lookupGameProfile
	a (Z)V setUsesAuthentication
	b ()V load
	b (Ljava/util/UUID;)Lnet/minecraft/server/UserCache$UserCacheEntry; getProfileInfo
	c ()V save
	d ()Z usesAuthentication
	getProfile (Ljava/lang/String;)Lcom/mojang/authlib/GameProfile; get
	getProfile (Ljava/util/UUID;)Lcom/mojang/authlib/GameProfile; get
net/minecraft/server/UserCache$BanEntrySerializer net/minecraft/server/players/GameProfileCache$Serializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/UserCache$UserCacheEntry; deserialize
	a (Lnet/minecraft/server/UserCache$UserCacheEntry;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
net/minecraft/server/UserCache$UserCacheEntry net/minecraft/server/players/GameProfileCache$GameProfileInfo
	b profile
	c expirationDate
	a ()Lcom/mojang/authlib/GameProfile; getProfile
	b ()Ljava/util/Date; getExpirationDate
net/minecraft/server/UtilColor net/minecraft/util/StringUtil
	a STRIP_COLOR_PATTERN
	a (I)Ljava/lang/String; formatTickDuration
	a (Ljava/lang/String;)Ljava/lang/String; stripColor
	a (Ljava/lang/String;IZ)Ljava/lang/String; truncateStringIfNecessary
	b (Ljava/lang/String;)Z isNullOrEmpty
net/minecraft/server/Vec2F net/minecraft/world/phys/Vec2
	a ZERO
	b ONE
	c UNIT_X
	d NEG_UNIT_X
	e UNIT_Y
	f NEG_UNIT_Y
	g MAX
	h MIN
	i x
	j y
	a ()Lnet/minecraft/server/Vec2F; normalized
	a (F)Lnet/minecraft/server/Vec2F; scale
	a (Lnet/minecraft/server/Vec2F;)F dot
	b ()F length
	b (F)Lnet/minecraft/server/Vec2F; add
	b (Lnet/minecraft/server/Vec2F;)Lnet/minecraft/server/Vec2F; add
	c ()F lengthSquared
	c (Lnet/minecraft/server/Vec2F;)Z equals
	d ()Lnet/minecraft/server/Vec2F; negated
	d (Lnet/minecraft/server/Vec2F;)F distanceToSqr
net/minecraft/server/Vec3D net/minecraft/world/phys/Vec3
	a ZERO
	a ()D x
	a (D)Lnet/minecraft/server/Vec3D; scale
	a (DDD)Lnet/minecraft/server/Vec3D; subtract
	a (F)Lnet/minecraft/server/Vec3D; xRot
	a (FF)Lnet/minecraft/server/Vec3D; directionFromRotation
	a (Ljava/util/EnumSet;)Lnet/minecraft/server/Vec3D; align
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;)D get
	a (Lnet/minecraft/server/Vec2F;)Lnet/minecraft/server/Vec3D; directionFromRotation
	a (Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/Vec3D; vectorTo
	a (Lnet/minecraft/server/Vec3D;D)Lnet/minecraft/server/Vec3D; lerp
	b ()D y
	b (F)Lnet/minecraft/server/Vec3D; yRot
	b (Lnet/minecraft/server/Vec3D;)D dot
	c ()D z
	c (DDD)D distanceToSqr
	c (F)Lnet/minecraft/server/Vec3D; zRot
	c (Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/Vec3D; cross
	d ()Lnet/minecraft/server/Vec3D; normalize
	d (DDD)Lnet/minecraft/server/Vec3D; multiply
	d (Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/Vec3D; subtract
	distanceSquared (Lnet/minecraft/server/Vec3D;)D distanceToSqr
	e ()Lnet/minecraft/server/Vec3D; reverse
	e (Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/Vec3D; add
	f ()D length
	f (Lnet/minecraft/server/Vec3D;)D distanceTo
	g ()D lengthSqr
	h (Lnet/minecraft/server/Vec3D;)Lnet/minecraft/server/Vec3D; multiply
net/minecraft/server/Vector3f net/minecraft/core/Rotations
	a ()Lnet/minecraft/server/NBTTagList; save
	e ()F getWrappedX
	f ()F getWrappedY
	g ()F getWrappedZ
net/minecraft/server/Vector3fa com/mojang/math/Vector3f
	a XN
	b XP
	c YN
	d YP
	e ZN
	f ZP
	g x
	h y
	i z
	a ()F x
	a (F)Lnet/minecraft/server/Quaternion; rotationDegrees
	a (FF)V clamp
	a (FFF)V set
	a (La;)V transform
	a (Lit/unimi/dsi/fastutil/floats/Float2FloatFunction;)V map
	a (Lnet/minecraft/server/Quaternion;)V transform
	a (Lnet/minecraft/server/Vector3fa;)V add
	a (Lnet/minecraft/server/Vector3fa;F)V lerp
	b ()F y
	b (F)V mul
	b (FFF)V mul
	b (Lnet/minecraft/server/Vector3fa;)V sub
	c ()F z
	c (F)Lnet/minecraft/server/Quaternion; rotation
	c (FFF)V add
	c (Lnet/minecraft/server/Vector3fa;)F dot
	d ()Z normalize
	d (Lnet/minecraft/server/Vector3fa;)V cross
	e ()Lnet/minecraft/server/Vector3fa; copy
net/minecraft/server/VectorPosition net/minecraft/commands/arguments/coordinates/WorldCoordinates
	a x
	b y
	c z
	a ()Z isXRelative
	a (DDD)Lnet/minecraft/server/VectorPosition; absolute
	a (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/server/VectorPosition; parseInt
	a (Lcom/mojang/brigadier/StringReader;Z)Lnet/minecraft/server/VectorPosition; parseDouble
	a (Lnet/minecraft/server/CommandListenerWrapper;)Lnet/minecraft/server/Vec3D; getPosition
	a (Lnet/minecraft/server/Vec2F;)Lnet/minecraft/server/VectorPosition; absolute
	b ()Z isYRelative
	b (Lnet/minecraft/server/CommandListenerWrapper;)Lnet/minecraft/server/Vec2F; getRotation
	c ()Z isZRelative
	d ()Lnet/minecraft/server/VectorPosition; current
net/minecraft/server/VillagePlace net/minecraft/world/entity/ai/village/poi/PoiManager
	a distanceTracker
	b loadedChunks
	a (J)V setDirty
	a (Ljava/util/function/BooleanSupplier;)V tick
	a (Ljava/util/function/Predicate;JLnet/minecraft/server/VillagePlace$Occupancy;)Ljava/util/stream/Stream; getInSection
	a (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/server/BlockPosition;I)Ljava/util/Optional; take
	a (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/VillagePlace$Occupancy;)Ljava/util/stream/Stream; findAll
	a (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/server/VillagePlace$Occupancy;Lnet/minecraft/server/BlockPosition;ILjava/util/Random;)Ljava/util/Optional; getRandom
	a (Ljava/util/function/Predicate;Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/VillagePlace$Occupancy;)J getCountInRange
	a (Ljava/util/function/Predicate;Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/VillagePlace$Occupancy;)Ljava/util/stream/Stream; getInChunk
	a (Lnet/minecraft/server/BlockPosition;)V remove
	a (Lnet/minecraft/server/BlockPosition;Ljava/util/function/Predicate;)Z exists
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VillagePlaceType;)V add
	a (Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/ChunkSection;)V checkConsistencyWithBlocks
	a (Lnet/minecraft/server/ChunkSection;)Z mayHavePoi
	a (Lnet/minecraft/server/ChunkSection;Lnet/minecraft/server/SectionPosition;Ljava/util/function/BiConsumer;)V updateFromSection
	a (Lnet/minecraft/server/IWorldReader;Lnet/minecraft/server/BlockPosition;I)V ensureLoadedAndValid
	a (Lnet/minecraft/server/SectionPosition;)I sectionsToVillage
	b (J)V onSectionLoad
	b (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/server/BlockPosition;I)Ljava/util/Optional; takeClosest
	b (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/VillagePlace$Occupancy;)Ljava/util/Optional; find
	b (Ljava/util/function/Predicate;Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/VillagePlace$Occupancy;)Ljava/util/stream/Stream; getInSquare
	b (Lnet/minecraft/server/BlockPosition;)Z release
	c (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/VillagePlace$Occupancy;)Ljava/util/Optional; findClosest
	c (Ljava/util/function/Predicate;Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/VillagePlace$Occupancy;)Ljava/util/stream/Stream; getInRange
	c (Lnet/minecraft/server/BlockPosition;)Ljava/util/Optional; getType
	d (Lnet/minecraft/server/BlockPosition;)I getFreeTickets
	f (J)Z isVillageCenter
net/minecraft/server/VillagePlace$Occupancy net/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy
	d test
	e $VALUES
	a ()Ljava/util/function/Predicate; getTest
net/minecraft/server/VillagePlaceRecord net/minecraft/world/entity/ai/village/poi/PoiRecord
	a pos
	b poiType
	c freeTickets
	d setDirty
	a ()I getFreeTickets
	a (Lcom/mojang/datafixers/types/DynamicOps;)Ljava/lang/Object; serialize
	b ()Z acquireTicket
	c ()Z releaseTicket
	d ()Z hasSpace
	e ()Z isOccupied
	f ()Lnet/minecraft/server/BlockPosition; getPos
	g ()Lnet/minecraft/server/VillagePlaceType; getPoiType
net/minecraft/server/VillagePlaceSection net/minecraft/world/entity/ai/village/poi/PoiSection
	a LOGGER
	b records
	c byType
	d setDirty
	e isValid
	a ()Z isValid
	a (Lcom/mojang/datafixers/types/DynamicOps;)Ljava/lang/Object; serialize
	a (Ljava/util/function/Consumer;)V refresh
	a (Ljava/util/function/Predicate;Lnet/minecraft/server/VillagePlace$Occupancy;)Ljava/util/stream/Stream; getRecords
	a (Lnet/minecraft/server/BlockPosition;)V remove
	a (Lnet/minecraft/server/BlockPosition;Ljava/util/function/Predicate;)Z exists
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/VillagePlaceType;)V add
	a (Lnet/minecraft/server/VillagePlaceRecord;)Z add
	b ()V clear
	b (Lnet/minecraft/server/BlockPosition;)I getFreeTickets
	c (Lnet/minecraft/server/BlockPosition;)Z release
	d (Lnet/minecraft/server/BlockPosition;)Ljava/util/Optional; getType
net/minecraft/server/VillagePlaceType net/minecraft/world/entity/ai/village/poi/PoiType
	A maxTickets
	B predicate
	C validRange
	a ALL
	b UNEMPLOYED
	c ARMORER
	d BUTCHER
	e CARTOGRAPHER
	f CLERIC
	g FARMER
	h FISHERMAN
	i FLETCHER
	j LEATHERWORKER
	k LIBRARIAN
	l MASON
	m NITWIT
	n SHEPHERD
	o TOOLSMITH
	p WEAPONSMITH
	q HOME
	r MEETING
	s BEEHIVE
	t BEE_NEST
	u NETHER_PORTAL
	v ALL_JOBS
	w BEDS
	x TYPE_BY_STATE
	y name
	z matchingStates
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;Ljava/util/Set;II)Lnet/minecraft/server/VillagePlaceType; register
	a (Ljava/lang/String;Ljava/util/Set;ILjava/util/function/Predicate;I)Lnet/minecraft/server/VillagePlaceType; register
	a (Lnet/minecraft/server/Block;)Ljava/util/Set; getBlockStates
	a (Lnet/minecraft/server/IBlockData;)Z is
	a (Lnet/minecraft/server/VillagePlaceType;)Lnet/minecraft/server/VillagePlaceType; registerBlockStates
	b ()I getMaxTickets
	b (Lnet/minecraft/server/IBlockData;)Ljava/util/Optional; forState
	c ()Ljava/util/function/Predicate; getPredicate
	d ()I getValidRange
	e ()Ljava/util/stream/Stream; allPoiStates
net/minecraft/server/VillageSiege net/minecraft/world/entity/ai/village/VillageSiege
	a hasSetupSiege
	b siegeState
	c zombiesToSpawn
	d nextSpawnTime
	e spawnX
	f spawnY
	g spawnZ
	a (Lnet/minecraft/server/WorldServer;)Z tryToSetupSiege
	a (Lnet/minecraft/server/WorldServer;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/Vec3D; findRandomSpawnPos
	a (Lnet/minecraft/server/WorldServer;ZZ)I tick
	b (Lnet/minecraft/server/WorldServer;)V trySpawn
net/minecraft/server/VillageSiege$State net/minecraft/world/entity/ai/village/VillageSiege$State
	d $VALUES
net/minecraft/server/VillagerData net/minecraft/world/entity/npc/VillagerData
	a NEXT_LEVEL_XP_THRESHOLDS
	b type
	c profession
	d level
	a (Lcom/mojang/datafixers/types/DynamicOps;)Ljava/lang/Object; serialize
	b (I)I getMinXpPerLevel
	c (I)I getMaxXpPerLevel
	d (I)Z canLevelUp
	withLevel (I)Lnet/minecraft/server/VillagerData; setLevel
	withProfession (Lnet/minecraft/server/VillagerProfession;)Lnet/minecraft/server/VillagerData; setProfession
	withType (Lnet/minecraft/server/VillagerType;)Lnet/minecraft/server/VillagerData; setType
net/minecraft/server/VillagerDataHolder net/minecraft/world/entity/npc/VillagerDataHolder
	a (Lnet/minecraft/server/VillagerData;)V setVillagerData
net/minecraft/server/VillagerProfession net/minecraft/world/entity/npc/VillagerProfession
	p name
	q jobPoiType
	r requestedItems
	s secondaryPoi
	t workSound
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;Lnet/minecraft/server/VillagePlaceType;Lcom/google/common/collect/ImmutableSet;Lcom/google/common/collect/ImmutableSet;Lnet/minecraft/server/SoundEffect;)Lnet/minecraft/server/VillagerProfession; register
	a (Ljava/lang/String;Lnet/minecraft/server/VillagePlaceType;Lnet/minecraft/server/SoundEffect;)Lnet/minecraft/server/VillagerProfession; register
	b ()Lnet/minecraft/server/VillagePlaceType; getJobPoiType
	c ()Lcom/google/common/collect/ImmutableSet; getRequestedItems
	d ()Lcom/google/common/collect/ImmutableSet; getSecondaryPoi
	e ()Lnet/minecraft/server/SoundEffect; getWorkSound
net/minecraft/server/VillagerTrades net/minecraft/world/entity/npc/VillagerTrades
	a TRADES
	b WANDERING_TRADER_TRADES
	a (Lcom/google/common/collect/ImmutableMap;)Lit/unimi/dsi/fastutil/ints/Int2ObjectMap; toIntMap
net/minecraft/server/VillagerTrades$IMerchantRecipeOption net/minecraft/world/entity/npc/VillagerTrades$ItemListing
	a (Lnet/minecraft/server/Entity;Ljava/util/Random;)Lnet/minecraft/server/MerchantRecipe; getOffer
net/minecraft/server/VillagerType net/minecraft/world/entity/npc/VillagerType
	h BY_BIOME
	a (Ljava/lang/String;)Lnet/minecraft/server/VillagerType; register
	a (Lnet/minecraft/server/BiomeBase;)Lnet/minecraft/server/VillagerType; byBiome
net/minecraft/server/VirtualLevelReadable net/minecraft/world/level/LevelSimulatedReader
	a (Lnet/minecraft/server/BlockPosition;Ljava/util/function/Predicate;)Z isStateAtPosition
	b (Lnet/minecraft/server/BlockPosition;Ljava/util/function/Predicate;)Z isFluidAtPosition
	getHighestBlockYAt (Lnet/minecraft/server/HeightMap$Type;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/BlockPosition; getHeightmapPos
net/minecraft/server/VirtualLevelWritable net/minecraft/world/level/LevelSimulatedRW
net/minecraft/server/VoxelShape net/minecraft/world/phys/shapes/VoxelShape
	a shape
	b faces
	a (DDD)Lnet/minecraft/server/VoxelShape; move
	a (Lcvz$a;)V forAllEdges
	a (Lnet/minecraft/server/EnumAxisCycle;Lnet/minecraft/server/AxisAlignedBB;D)D collideX
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;)Lit/unimi/dsi/fastutil/doubles/DoubleList; getCoords
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;D)I findIndex
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;DD)D min
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;I)D get
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;Lnet/minecraft/server/AxisAlignedBB;D)D collide
	a (Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/VoxelShape; getFaceShape
	b (DDD)Z isFullWide
	b (Lcvz$a;)V forAllBoxes
	b (Lnet/minecraft/server/EnumDirection$EnumAxis;)D min
	b (Lnet/minecraft/server/EnumDirection$EnumAxis;DD)D max
	b (Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/VoxelShape; calculateFace
	c ()Lnet/minecraft/server/VoxelShape; optimize
	c (Lnet/minecraft/server/EnumDirection$EnumAxis;)D max
	d ()Ljava/util/List; toAabbs
	getBoundingBox ()Lnet/minecraft/server/AxisAlignedBB; bounds
	rayTrace (Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/Vec3D;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/MovingObjectPositionBlock; clip
net/minecraft/server/VoxelShapeArray net/minecraft/world/phys/shapes/ArrayVoxelShape
	b xs
	c ys
	d zs
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;)Lit/unimi/dsi/fastutil/doubles/DoubleList; getCoords
net/minecraft/server/VoxelShapeBitSet net/minecraft/world/phys/shapes/BitSetDiscreteVoxelShape
	d storage
	e xMin
	f yMin
	g zMin
	h xMax
	i yMax
	j zMax
	a ()Z isEmpty
	a (III)I getIndex
	a (IIII)Z isZStripFull
	a (IIIIZ)V setZStrip
	a (IIIZZ)V setFull
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;)I firstFull
	a (Lnet/minecraft/server/VoxelShapeDiscrete;Lnet/minecraft/server/VoxelShapeDiscrete;Lnet/minecraft/server/VoxelShapeMerger;Lnet/minecraft/server/VoxelShapeMerger;Lnet/minecraft/server/VoxelShapeMerger;Lnet/minecraft/server/OperatorBoolean;)Lnet/minecraft/server/VoxelShapeBitSet; join
	b (III)Z isFull
	b (Lnet/minecraft/server/EnumDirection$EnumAxis;)I lastFull
net/minecraft/server/VoxelShapeCollision net/minecraft/world/phys/shapes/CollisionContext
	a ()Lnet/minecraft/server/VoxelShapeCollision; empty
	a (Lnet/minecraft/server/Entity;)Lnet/minecraft/server/VoxelShapeCollision; of
	a (Lnet/minecraft/server/Item;)Z isHoldingItem
	a (Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/BlockPosition;Z)Z isAbove
	b ()Z isDescending
net/minecraft/server/VoxelShapeCollisionEntity net/minecraft/world/phys/shapes/EntityCollisionContext
	a EMPTY
	b descending
	c entityBottom
	d heldItem
	a (Lnet/minecraft/server/Item;)Z isHoldingItem
	a (Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/BlockPosition;Z)Z isAbove
	b ()Z isDescending
net/minecraft/server/VoxelShapeCube net/minecraft/world/phys/shapes/CubeVoxelShape
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;)Lit/unimi/dsi/fastutil/doubles/DoubleList; getCoords
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;D)I findIndex
net/minecraft/server/VoxelShapeCubeMerger net/minecraft/world/phys/shapes/DiscreteCubeMerger
	a result
	b firstSize
	c secondSize
	d gcd
	a ()Lit/unimi/dsi/fastutil/doubles/DoubleList; getList
	a (Lcvu$a;)Z forMergedIndexes
net/minecraft/server/VoxelShapeCubePoint net/minecraft/world/phys/shapes/CubePointRange
	a parts
net/minecraft/server/VoxelShapeDiscrete net/minecraft/world/phys/shapes/DiscreteVoxelShape
	a xSize
	b ySize
	c zSize
	d AXIS_VALUES
	a ()Z isEmpty
	a (IIII)Z isZStripFull
	a (IIIII)Z isXZRectangleFull
	a (IIIIZ)V setZStrip
	a (IIIZZ)V setFull
	a (Lcvr$a;)V forAllFaces
	a (Lcvr$a;Lnet/minecraft/server/EnumAxisCycle;)V forAllAxisFaces
	a (Lcvr$b;Lnet/minecraft/server/EnumAxisCycle;Z)V forAllAxisEdges
	a (Lcvr$b;Z)V forAllEdges
	a (Lnet/minecraft/server/EnumAxisCycle;III)Z isFullWide
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;)I firstFull
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;II)I firstFull
	b ()I getXSize
	b (III)Z isFull
	b (Lcvr$b;Z)V forAllBoxes
	b (Lnet/minecraft/server/EnumAxisCycle;III)Z isFull
	b (Lnet/minecraft/server/EnumDirection$EnumAxis;)I lastFull
	b (Lnet/minecraft/server/EnumDirection$EnumAxis;II)I lastFull
	c ()I getYSize
	c (III)Z isFullWide
	c (Lnet/minecraft/server/EnumDirection$EnumAxis;)I getSize
	d ()I getZSize
net/minecraft/server/VoxelShapeDiscreteSlice net/minecraft/world/phys/shapes/SubShape
	d parent
	e startX
	f startY
	g startZ
	h endX
	i endY
	j endZ
	a (IIIZZ)V setFull
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;)I firstFull
	b (III)Z isFull
	b (Lnet/minecraft/server/EnumDirection$EnumAxis;)I lastFull
net/minecraft/server/VoxelShapeMerger net/minecraft/world/phys/shapes/IndexMerger
	a ()Lit/unimi/dsi/fastutil/doubles/DoubleList; getList
	a (Lcvu$a;)Z forMergedIndexes
net/minecraft/server/VoxelShapeMergerDisjoint net/minecraft/world/phys/shapes/NonOverlappingMerger
	a lower
	b upper
	c swap
	a ()Lit/unimi/dsi/fastutil/doubles/DoubleList; getList
	a (Lcvu$a;)Z forMergedIndexes
	b (Lcvu$a;)Z forNonSwappedIndexes
net/minecraft/server/VoxelShapeMergerIdentical net/minecraft/world/phys/shapes/IdenticalMerger
	a coords
	a ()Lit/unimi/dsi/fastutil/doubles/DoubleList; getList
	a (Lcvu$a;)Z forMergedIndexes
net/minecraft/server/VoxelShapeMergerList net/minecraft/world/phys/shapes/IndirectMerger
	a result
	b firstIndices
	c secondIndices
	a ()Lit/unimi/dsi/fastutil/doubles/DoubleList; getList
	a (Lcvu$a;)Z forMergedIndexes
net/minecraft/server/VoxelShapeSlice net/minecraft/world/phys/shapes/SliceShape
	b delegate
	c axis
	d SLICE_COORDS
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;)Lit/unimi/dsi/fastutil/doubles/DoubleList; getCoords
	a (Lnet/minecraft/server/VoxelShapeDiscrete;Lnet/minecraft/server/EnumDirection$EnumAxis;I)Lnet/minecraft/server/VoxelShapeDiscrete; makeSlice
net/minecraft/server/VoxelShapes net/minecraft/world/phys/shapes/Shapes
	a INFINITY
	b BLOCK
	c EMPTY
	a ()Lnet/minecraft/server/VoxelShape; empty
	a (DD)I findBits
	a (DDD)I lastC
	a (II)J lcm
	a (ILit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;ZZ)Lnet/minecraft/server/VoxelShapeMerger; createIndexMerger
	a (Lnet/minecraft/server/AxisAlignedBB;)Lnet/minecraft/server/VoxelShape; create
	a (Lnet/minecraft/server/AxisAlignedBB;Lnet/minecraft/server/IWorldReader;DLnet/minecraft/server/VoxelShapeCollision;Lnet/minecraft/server/EnumAxisCycle;Ljava/util/stream/Stream;)D collide
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/stream/Stream;D)D collide
	a (Lnet/minecraft/server/EnumDirection$EnumAxis;Lnet/minecraft/server/AxisAlignedBB;Lnet/minecraft/server/IWorldReader;DLnet/minecraft/server/VoxelShapeCollision;Ljava/util/stream/Stream;)D collide
	a (Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/VoxelShape; getFaceShape
	a (Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/VoxelShape;)Lnet/minecraft/server/VoxelShape; or
	a (Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/EnumDirection;)Z blockOccudes
	a (Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/OperatorBoolean;)Lnet/minecraft/server/VoxelShape; join
	a (Lnet/minecraft/server/VoxelShape;[Lnet/minecraft/server/VoxelShape;)Lnet/minecraft/server/VoxelShape; or
	a (Lnet/minecraft/server/VoxelShapeMerger;Lnet/minecraft/server/VoxelShapeMerger;Lnet/minecraft/server/VoxelShapeMerger;Lnet/minecraft/server/VoxelShapeDiscrete;Lnet/minecraft/server/VoxelShapeDiscrete;Lnet/minecraft/server/OperatorBoolean;)Z joinIsNotEmpty
	b ()Lnet/minecraft/server/VoxelShape; block
	b (Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/VoxelShape;)Z faceShapeOccludes
	b (Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/EnumDirection;)Z mergedFaceOccludes
	b (Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/OperatorBoolean;)Lnet/minecraft/server/VoxelShape; joinUnoptimized
	c (Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/VoxelShape;Lnet/minecraft/server/OperatorBoolean;)Z joinIsNotEmpty
	create (DDDDDD)Lnet/minecraft/server/VoxelShape; box
net/minecraft/server/WeightedList net/minecraft/world/entity/ai/behavior/WeightedList
	a entries
	b random
	a ()Lnet/minecraft/server/WeightedList; shuffle
	a (Lcom/mojang/datafixers/types/DynamicOps;Ljava/util/function/Function;)Ljava/lang/Object; serialize
	a (Ljava/lang/Object;I)Lnet/minecraft/server/WeightedList; add
	a (Ljava/util/Random;)Lnet/minecraft/server/WeightedList; shuffle
	b ()Ljava/util/stream/Stream; stream
	b (Ljava/util/Random;)Ljava/lang/Object; getOne
	c ()Ljava/util/stream/Stream; streamEntries
	d ()Ljava/lang/Object; getOne
net/minecraft/server/WeightedRandom net/minecraft/util/WeighedRandom
	a (Ljava/util/List;)I getTotalWeight
	a (Ljava/util/List;I)Lnet/minecraft/server/WeightedRandom$WeightedRandomChoice; getWeightedItem
	a (Ljava/util/Random;Ljava/util/List;)Lnet/minecraft/server/WeightedRandom$WeightedRandomChoice; getRandomItem
	a (Ljava/util/Random;Ljava/util/List;I)Lnet/minecraft/server/WeightedRandom$WeightedRandomChoice; getRandomItem
net/minecraft/server/WeightedRandom$WeightedRandomChoice net/minecraft/util/WeighedRandom$WeighedRandomItem
	a weight
net/minecraft/server/WeightedRandomEnchant net/minecraft/world/item/enchantment/EnchantmentInstance
net/minecraft/server/WhiteList net/minecraft/server/players/UserWhiteList
	a ()[Ljava/lang/String; getUserList
	a (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/JsonListEntry; createEntry
	a (Ljava/lang/Object;)Ljava/lang/String; getKeyForUser
	a (Ljava/lang/String;)Lcom/mojang/authlib/GameProfile; find
	b (Lcom/mojang/authlib/GameProfile;)Ljava/lang/String; getKeyForUser
	isWhitelisted (Lcom/mojang/authlib/GameProfile;)Z isWhiteListed
net/minecraft/server/WhiteListEntry net/minecraft/server/players/UserWhiteListEntry
	a (Lcom/google/gson/JsonObject;)V serialize
	b (Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile; createGameProfile
net/minecraft/server/World net/minecraft/world/level/Level
	a DIRECTIONS
	c skyDarken
	chunkProvider chunkSource
	d LOGGER
	i randValue
	j addend
	lastRainLevel oRainLevel
	lastThunderLevel oThunderLevel
	methodProfiler profiler
	serverThread thread
	tickingTileEntities updatingBlockEntities
	tileEntityList blockEntityList
	tileEntityListPending pendingBlockEntities
	tileEntityListTick tickableBlockEntities
	tileEntityListUnload blockEntitiesToUnload
	worldData levelData
	worldProvider dimension
	E ()Lnet/minecraft/server/IChunkProvider; getChunkSource
	M ()Ljava/lang/String; gatherChunkSourceStats
	N ()V updateSkyBrightness
	O ()V prepareWeather
	P ()Lnet/minecraft/server/WorldType; getGeneratorType
	Q ()V disconnect
	U ()Z isThundering
	a ()V tickTime
	a (DDDDDDLnet/minecraft/server/NBTTagCompound;)V createFireworks
	a (DDDLnet/minecraft/server/SoundEffect;Lnet/minecraft/server/SoundCategory;FFZ)V playLocalSound
	a (F)F getSunAngle
	a (II)Lnet/minecraft/server/IChunkAccess; getChunk
	a (IIII)Lnet/minecraft/server/BlockPosition; getBlockRandomPos
	a (IILnet/minecraft/server/ChunkStatus;Z)Lnet/minecraft/server/IChunkAccess; getChunk
	a (ILnet/minecraft/server/BlockPosition;I)V destroyBlockProgress
	a (J)V setGameTime
	a (Ljava/lang/Class;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/function/Predicate;)Ljava/util/List; getEntitiesOfClass
	a (Ljava/lang/String;)Lnet/minecraft/server/WorldMap; getMapData
	a (Ljava/util/Collection;)V addAllPendingBlockEntities
	a (Ljava/util/function/Consumer;Lnet/minecraft/server/Entity;)V guardEntityTick
	a (Lnet/minecraft/server/AxisAlignedBB;Lnet/minecraft/server/Block;)Lnet/minecraft/server/IBlockData; containsBlock
	a (Lnet/minecraft/server/AxisAlignedBB;Lnet/minecraft/server/Material;)Z containsMaterial
	a (Lnet/minecraft/server/BlockPosition;Ljava/util/function/Predicate;)Z isStateAtPosition
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;)V blockUpdated
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/BlockPosition;)V neighborChanged
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;Lnet/minecraft/server/EnumDirection;)V updateNeighborsAtExceptFromFacing
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Entity;)Z loadedAndEntityCanStandOn
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;I)Z setBlock
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;)V onBlockStateChange
	a (Lnet/minecraft/server/BlockPosition;Z)Z removeBlock
	a (Lnet/minecraft/server/BlockPosition;ZLnet/minecraft/server/Entity;)Z destroyBlock
	a (Lnet/minecraft/server/CrashReport;)Lnet/minecraft/server/CrashReportSystemDetails; fillReportDetails
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/BlockPosition;)Z mayInteract
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/SoundEffect;Lnet/minecraft/server/SoundCategory;FF)V playSound
	a (Lnet/minecraft/server/EntityTypes;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/function/Predicate;)Ljava/util/List; getEntities
	a (Lnet/minecraft/server/HeightMap$Type;II)I getHeight
	a (Lnet/minecraft/server/Packet;)V sendPacketToServer
	a (Lnet/minecraft/server/ParticleParam;DDDDDD)V addParticle
	a (Lnet/minecraft/server/ParticleParam;ZDDDDDD)V addParticle
	a (Lnet/minecraft/server/TileEntity;)Z addBlockEntity
	a (Lnet/minecraft/server/WorldMap;)V setMapData
	a_ (Lnet/minecraft/server/BlockPosition;)V setSpawnPos
	applyPhysics (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;)V updateNeighborsAt
	b (F)F getThunderLevel
	b (I)Z isOutsideBuildHeight
	b (ILnet/minecraft/server/BlockPosition;I)V globalLevelEvent
	b (Ljava/lang/Class;Lnet/minecraft/server/AxisAlignedBB;Ljava/util/function/Predicate;)Ljava/util/List; getLoadedEntitiesOfClass
	b (Lnet/minecraft/server/AxisAlignedBB;)Z containsAnyBlocks
	b (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/Fluid; getFluidState
	b (Lnet/minecraft/server/BlockPosition;Ljava/util/function/Predicate;)Z isFluidAtPosition
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;)V setBlocksDirty
	b (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/TileEntity;)V blockEntityChanged
	b (Lnet/minecraft/server/ParticleParam;DDDDDD)V addAlwaysVisibleParticle
	b (Lnet/minecraft/server/ParticleParam;ZDDDDDD)V addAlwaysVisibleParticle
	broadcastEntityEffect (Lnet/minecraft/server/Entity;B)V broadcastEntityEvent
	c ()I getSkyDarken
	c (F)V setThunderLevel
	c (I)V setSkyFlashTime
	c (II)Lnet/minecraft/server/IBlockAccess; getChunkForCollisions
	c (Lnet/minecraft/server/AxisAlignedBB;)Z containsFireBlock
	c (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/TileEntity; getBlockEntity
	createExplosion (Lnet/minecraft/server/Entity;DDDFZLnet/minecraft/server/Explosion$Effect;)Lnet/minecraft/server/Explosion; explode
	createExplosion (Lnet/minecraft/server/Entity;Lnet/minecraft/server/DamageSource;DDDFZLnet/minecraft/server/Explosion$Effect;)Lnet/minecraft/server/Explosion; explode
	d ()Lnet/minecraft/server/BiomeManager; getBiomeManager
	d (F)F getRainLevel
	d (II)Lnet/minecraft/server/Chunk; getChunk
	d (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/DifficultyDamageScaler; getCurrentDifficultyAt
	d_ (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getBlockState
	douseFire (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z extinguishFire
	e ()Lnet/minecraft/server/LightEngine; getLightEngine
	e (F)V setRainLevel
	e (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/TileEntity; getPendingBlockEntityAt
	f ()Lnet/minecraft/server/WorldBorder; getWorldBorder
	getBlockFacePower (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)I getSignal
	getBlockPower (Lnet/minecraft/server/BlockPosition;)I getDirectSignalTo
	getChunkAtWorldCoords (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/Chunk; getChunkAt
	getCraftingManager ()Lnet/minecraft/server/CraftingManager; getRecipeManager
	getMethodProfiler ()Lnet/minecraft/server/GameProfilerFiller; getProfiler
	getMinecraftServer ()Lnet/minecraft/server/MinecraftServer; getServer
	getSpawn ()Lnet/minecraft/server/BlockPosition; getSharedSpawnPos
	getTime ()J getGameTime
	getWorldMapCount ()I getFreeMapId
	i ()Lnet/minecraft/server/WorldData; getLevelData
	i (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getTopBlockState
	isBlockFacePowered (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumDirection;)Z hasSignal
	isBlockIndirectlyPowered (Lnet/minecraft/server/BlockPosition;)Z hasNeighborSignal
	isOutsideWorld (Lnet/minecraft/server/BlockPosition;)Z isOutsideBuildHeight
	isSavingDisabled ()Z noSave
	isValidLocation (Lnet/minecraft/server/BlockPosition;)Z isInWorldBounds
	k_ ()V validateSpawn
	n (Lnet/minecraft/server/BlockPosition;)Z isLoaded
	notify (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;I)V sendBlockUpdated
	o ()Lnet/minecraft/server/WorldProvider; getDimension
	p_ ()Z isClientSide
	playBlockAction (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;II)V blockEvent
	q ()Lnet/minecraft/server/World; getLevel
	q (Lnet/minecraft/server/BlockPosition;)I getBestNeighborSignal
	q_ ()I getSeaLevel
	r_ ()J getSeed
	removeTileEntity (Lnet/minecraft/server/BlockPosition;)V removeBlockEntity
	s (Lnet/minecraft/server/BlockPosition;)Z isHumidAt
	setSpawnFlags (ZZ)V setSpawnSettings
	setTileEntity (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/TileEntity;)V setBlockEntity
	setTypeUpdate (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z setBlockAndUpdate
	t ()Lnet/minecraft/server/TagRegistry; getTagManager
	t_ ()Ljava/util/Random; getRandom
	updateAdjacentComparators (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;)V updateNeighbourForOutputSignal
	v ()V checkSession
net/minecraft/server/WorldBorder net/minecraft/world/level/border/WorldBorder
	a listeners
	b damagePerBlock
	c damageSafeZone
	d warningTime
	e warningBlocks
	f centerX
	g centerZ
	h absoluteMaxSize
	i extent
	a ()Lnet/minecraft/server/VoxelShape; getCollisionShape
	a (DD)Z isWithinBounds
	a (I)V setAbsoluteMaxSize
	a (Lnet/minecraft/server/AxisAlignedBB;)Z isWithinBounds
	a (Lnet/minecraft/server/BlockPosition;)Z isWithinBounds
	a (Lnet/minecraft/server/Entity;)D getDistanceToBorder
	a (Lnet/minecraft/server/IWorldBorderListener;)V addListener
	b ()Lbzs; getStatus
	b (DD)D getDistanceToBorder
	b (Lnet/minecraft/server/IWorldBorderListener;)V removeListener
	b (Lnet/minecraft/server/WorldData;)V readBorderData
	c ()D getMinX
	d ()D getMinZ
	e ()D getMaxX
	f ()D getMaxZ
	getDamageAmount ()D getDamagePerBlock
	getDamageBuffer ()D getDamageSafeZone
	getWarningDistance ()I getWarningBlocks
	isInBounds (Lnet/minecraft/server/ChunkCoordIntPair;)Z isWithinBounds
	j ()J getLerpRemainingTime
	k ()D getLerpTarget
	l ()Ljava/util/List; getListeners
	m ()I getAbsoluteMaxSize
	p ()D getLerpSpeed
	s ()V tick
	save (Lnet/minecraft/server/WorldData;)V saveWorldBorderData
	setDamageAmount (D)V setDamagePerBlock
	setDamageBuffer (D)V setDamageSafeZone
	setWarningDistance (I)V setWarningBlocks
	transitionSizeBetween (DDJ)V lerpSizeBetween
net/minecraft/server/WorldChunkManager net/minecraft/world/level/biome/BiomeSource
	a supportedStructures
	b surfaceBlocks
	c possibleBiomes
	d PLAYER_SPAWN_BIOMES
	a ()Ljava/util/List; getPlayerSpawnBiomes
	a (II)F getHeightValue
	a (IIII)Ljava/util/Set; getBiomesWithin
	a (IIIILjava/util/List;Ljava/util/Random;)Lnet/minecraft/server/BlockPosition; findBiomeHorizontal
	a (Lnet/minecraft/server/StructureGenerator;)Z canGenerateStructure
	b ()Ljava/util/Set; getSurfaceBlocks
net/minecraft/server/WorldChunkManagerCheckerBoard net/minecraft/world/level/biome/CheckerboardColumnBiomeSource
	d allowedBiomes
	e bitShift
	b (III)Lnet/minecraft/server/BiomeBase; getNoiseBiome
net/minecraft/server/WorldChunkManagerHell net/minecraft/world/level/biome/FixedBiomeSource
	d biome
	a (IIII)Ljava/util/Set; getBiomesWithin
	a (IIIILjava/util/List;Ljava/util/Random;)Lnet/minecraft/server/BlockPosition; findBiomeHorizontal
	b (III)Lnet/minecraft/server/BiomeBase; getNoiseBiome
net/minecraft/server/WorldChunkManagerOverworld net/minecraft/world/level/biome/OverworldBiomeSource
	d noiseBiomeLayer
	e POSSIBLE_BIOMES
	b (III)Lnet/minecraft/server/BiomeBase; getNoiseBiome
net/minecraft/server/WorldChunkManagerTheEnd net/minecraft/world/level/biome/TheEndBiomeSource
	d islandNoise
	e random
	f POSSIBLE_BIOMES
	a (II)F getHeightValue
	b (III)Lnet/minecraft/server/BiomeBase; getNoiseBiome
net/minecraft/server/WorldData net/minecraft/world/level/storage/LevelData
	A gameType
	B generateMapFeatures
	C hardcore
	D allowCommands
	E initialized
	F difficulty
	G difficultyLocked
	H borderX
	I borderZ
	J borderSize
	K borderSizeLerpTime
	L borderSizeLerpTarget
	M borderSafeZone
	N borderDamagePerBlock
	O borderWarningBlocks
	P borderWarningTime
	Q disabledDataPacks
	R enabledDataPacks
	S dimensionData
	U wanderingTraderSpawnDelay
	V wanderingTraderSpawnChance
	W wanderingTraderId
	X gameRules
	Y scheduledEvents
	a DEFAULT_DIFFICULTY
	b minecraftVersionName
	c minecraftVersion
	d snapshot
	e seed
	f generator
	g generatorOptions
	h legacyCustomOptions
	i xSpawn
	j ySpawn
	k zSpawn
	l gameTime
	m dayTime
	n lastPlayed
	o sizeOnDisk
	p fixerUpper
	q playerDataVersion
	r upgradedPlayerTag
	s loadedPlayerTag
	u version
	B ()D getBorderX
	C ()D getBorderZ
	D ()D getBorderSize
	E ()J getBorderSizeLerpTime
	F ()D getBorderSizeLerpTarget
	G ()D getBorderSafeZone
	H ()D getBorderDamagePerBlock
	I ()I getBorderWarningBlocks
	J ()I getBorderWarningTime
	K ()I getMinecraftVersion
	L ()Z isSnapshot
	M ()Ljava/lang/String; getMinecraftVersionName
	N ()Ljava/util/Set; getDisabledDataPacks
	O ()Ljava/util/Set; getEnabledDataPacks
	Q ()I getWanderingTraderSpawnDelay
	R ()I getWanderingTraderSpawnChance
	S ()Ljava/util/UUID; getWanderingTraderId
	T ()V updatePlayerTag
	a (D)V setBorderSize
	a (I)V setXSpawn
	a (Ljava/util/UUID;)V setWanderingTraderId
	a (Lnet/minecraft/server/CrashReportSystemDetails;)V fillCrashReportCategory
	a (Lnet/minecraft/server/DimensionManager;)Lnet/minecraft/server/NBTTagCompound; getDimensionData
	a (Lnet/minecraft/server/DimensionManager;Lnet/minecraft/server/NBTTagCompound;)V setDimensionData
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; createTag
	a (Lnet/minecraft/server/NBTTagCompound;Lnet/minecraft/server/NBTTagCompound;)V setTagData
	a (Lnet/minecraft/server/WorldSettings;)V setLevelSettings
	a (Lnet/minecraft/server/WorldType;)V setGenerator
	b ()I getXSpawn
	b (D)V setBorderSizeLerpTarget
	b (I)V setYSpawn
	b (Lnet/minecraft/server/NBTTagCompound;)V setGeneratorOptions
	c ()I getYSpawn
	c (D)V setBorderZ
	c (I)V setZSpawn
	c (J)J obfuscateSeed
	c (Z)V setAllowCommands
	d ()I getZSpawn
	d (D)V setBorderX
	d (I)V setVersion
	d (J)V setBorderSizeLerpTime
	d (Z)V setInitialized
	e (D)V setBorderSafeZone
	e (Z)V setDifficultyLocked
	f (D)V setBorderDamagePerBlock
	f (Z)V setGenerateMapFeatures
	g ()J getSizeOnDisk
	g (I)V setClearWeatherTime
	g (Z)V setHardcore
	getName ()Ljava/lang/String; getLevelName
	getThunderDuration ()I getThunderTime
	getTime ()J getGameTime
	getType ()Lnet/minecraft/server/WorldType; getGeneratorType
	getWeatherDuration ()I getRainTime
	h ()Lnet/minecraft/server/NBTTagCompound; getLoadedPlayerTag
	h (I)V setBorderWarningBlocks
	hasStorm ()Z isRaining
	i (I)V setBorderWarningTime
	j ()I getVersion
	j (I)V setWanderingTraderSpawnDelay
	k ()J getLastPlayed
	k (I)V setWanderingTraderSpawnChance
	setName (Ljava/lang/String;)V setLevelName
	setStorm (Z)V setRaining
	setThunderDuration (I)V setThunderTime
	setTime (J)V setGameTime
	setWeatherDuration (I)V setRainTime
	shouldGenerateMapFeatures ()Z isGenerateMapFeatures
	t ()Z getAllowCommands
	u ()Z isInitialized
	v ()Lnet/minecraft/server/GameRules; getGameRules
	y ()Lnet/minecraft/server/CustomFunctionCallbackTimerQueue; getScheduledEvents
	z ()I getClearWeatherTime
net/minecraft/server/WorldGenAcaciaTree net/minecraft/world/level/levelgen/feature/AcaciaFeature
	a (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Ljava/util/Set;Ljava/util/Set;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/WorldGenFeatureSmallTreeConfigurationConfiguration;)Z doPlace
	a (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Ljava/util/Set;Ljava/util/Set;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/WorldGenFeatureTreeConfiguration;)Z doPlace
net/minecraft/server/WorldGenBigTree net/minecraft/world/level/levelgen/feature/FancyTreeFeature
	a (I)F foliageShape
	a (II)F treeShape
	a (Lnet/minecraft/server/BlockPosition;)I getSteps
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/EnumDirection$EnumAxis; getLogAxis
	a (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;ILnet/minecraft/server/BlockPosition;Ljava/util/List;Ljava/util/Set;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/WorldGenFeatureSmallTreeConfigurationConfiguration;)V makeFoliage
	a (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;FLjava/util/Set;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/WorldGenFeatureSmallTreeConfigurationConfiguration;)V crossSection
	a (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;ILjava/util/Set;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/WorldGenFeatureSmallTreeConfigurationConfiguration;)V makeTrunk
	a (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Ljava/util/Set;Ljava/util/Set;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/WorldGenFeatureSmallTreeConfigurationConfiguration;)Z doPlace
	a (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Ljava/util/Set;Ljava/util/Set;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/WorldGenFeatureTreeConfiguration;)Z doPlace
	a (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Ljava/util/Set;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/WorldGenFeatureSmallTreeConfigurationConfiguration;)V foliageCluster
	a (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockPosition;ZLjava/util/Set;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/WorldGenFeatureSmallTreeConfigurationConfiguration;)I makeLimb
	b (II)Z trimBranches
	b (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;ILnet/minecraft/server/BlockPosition;Ljava/util/List;Ljava/util/Set;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/WorldGenFeatureSmallTreeConfigurationConfiguration;)V makeBranches
	b (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;ILjava/util/Set;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/WorldGenFeatureSmallTreeConfigurationConfiguration;)I checkLocation
net/minecraft/server/WorldGenBlockPlacer net/minecraft/world/level/levelgen/feature/blockplacers/BlockPlacer
	a type
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Ljava/util/Random;)V place
net/minecraft/server/WorldGenBlockPlacerColumn net/minecraft/world/level/levelgen/feature/blockplacers/ColumnPlacer
	b minSize
	c extraSize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Ljava/lang/Object; serialize
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Ljava/util/Random;)V place
net/minecraft/server/WorldGenBlockPlacerDoublePlant net/minecraft/world/level/levelgen/feature/blockplacers/DoublePlantPlacer
	a (Lcom/mojang/datafixers/types/DynamicOps;)Ljava/lang/Object; serialize
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Ljava/util/Random;)V place
net/minecraft/server/WorldGenBlockPlacerSimple net/minecraft/world/level/levelgen/feature/blockplacers/SimpleBlockPlacer
	a (Lcom/mojang/datafixers/types/DynamicOps;)Ljava/lang/Object; serialize
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Ljava/util/Random;)V place
net/minecraft/server/WorldGenBlockPlacers net/minecraft/world/level/levelgen/feature/blockplacers/BlockPlacerType
	a SIMPLE_BLOCK_PLACER
	b DOUBLE_PLANT_PLACER
	c COLUMN_PLACER
	d deserializer
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenBlockPlacer; deserialize
	a (Ljava/lang/String;Ljava/util/function/Function;)Lnet/minecraft/server/WorldGenBlockPlacers; register
net/minecraft/server/WorldGenBonusChest net/minecraft/world/level/levelgen/feature/BonusChestFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z place
net/minecraft/server/WorldGenBuriedTreasure net/minecraft/world/level/levelgen/feature/BuriedTreasureFeature
	a ()Lcfi$a; getStartFactory
	a (Lnet/minecraft/server/BiomeManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;IILnet/minecraft/server/BiomeBase;)Z isFeatureChunk
	b ()Ljava/lang/String; getFeatureName
	c ()I getLookupRange
net/minecraft/server/WorldGenBuriedTreasureConfiguration net/minecraft/world/level/levelgen/feature/configurations/BuriedTreasureConfiguration
	a probability
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenBuriedTreasureConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/WorldGenBuriedTreasurePieces net/minecraft/world/level/levelgen/structure/BuriedTreasurePieces
net/minecraft/server/WorldGenCanyon net/minecraft/world/level/levelgen/carver/CanyonWorldCarver
	m rs
	a (DDDI)Z skip
	a (Ljava/util/Random;IILnet/minecraft/server/WorldGenCarverConfiguration;)Z isStartChunk
	a (Ljava/util/Random;IILnet/minecraft/server/WorldGenFeatureConfigurationChance;)Z isStartChunk
	a (Lnet/minecraft/server/IChunkAccess;Ljava/util/function/Function;JIIIDDDFFFIIDLjava/util/BitSet;)V genCanyon
	a (Lnet/minecraft/server/IChunkAccess;Ljava/util/function/Function;Ljava/util/Random;IIIIILjava/util/BitSet;Lnet/minecraft/server/WorldGenCarverConfiguration;)Z carve
	a (Lnet/minecraft/server/IChunkAccess;Ljava/util/function/Function;Ljava/util/Random;IIIIILjava/util/BitSet;Lnet/minecraft/server/WorldGenFeatureConfigurationChance;)Z carve
net/minecraft/server/WorldGenCanyonOcean net/minecraft/world/level/levelgen/carver/UnderwaterCanyonWorldCarver
	a (Lnet/minecraft/server/IChunkAccess;IIIIIIII)Z hasWater
	a (Lnet/minecraft/server/IChunkAccess;Ljava/util/function/Function;Ljava/util/BitSet;Ljava/util/Random;Lnet/minecraft/server/BlockPosition$MutableBlockPosition;Lnet/minecraft/server/BlockPosition$MutableBlockPosition;Lnet/minecraft/server/BlockPosition$MutableBlockPosition;IIIIIIIILjava/util/concurrent/atomic/AtomicBoolean;)Z carveBlock
net/minecraft/server/WorldGenCarverAbstract net/minecraft/world/level/levelgen/carver/WorldCarver
	a CAVE
	b HELL_CAVE
	c CANYON
	d UNDERWATER_CANYON
	e UNDERWATER_CAVE
	f AIR
	g CAVE_AIR
	h WATER
	i LAVA
	j replaceableBlocks
	k liquids
	l genHeight
	m configurationFactory
	a (DDDI)Z skip
	a (IIDDIIF)Z canReach
	a (IIIIII)Z isEdge
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenCarverConfiguration; createSettings
	a (Ljava/lang/String;Lnet/minecraft/server/WorldGenCarverAbstract;)Lnet/minecraft/server/WorldGenCarverAbstract; register
	a (Ljava/util/Random;IILnet/minecraft/server/WorldGenCarverConfiguration;)Z isStartChunk
	a (Lnet/minecraft/server/IBlockData;)Z canReplaceBlock
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;)Z canReplaceBlock
	a (Lnet/minecraft/server/IChunkAccess;IIIIIIII)Z hasWater
	a (Lnet/minecraft/server/IChunkAccess;Ljava/util/function/Function;JIIIDDDDDLjava/util/BitSet;)Z carveSphere
	a (Lnet/minecraft/server/IChunkAccess;Ljava/util/function/Function;Ljava/util/BitSet;Ljava/util/Random;Lnet/minecraft/server/BlockPosition$MutableBlockPosition;Lnet/minecraft/server/BlockPosition$MutableBlockPosition;Lnet/minecraft/server/BlockPosition$MutableBlockPosition;IIIIIIIILjava/util/concurrent/atomic/AtomicBoolean;)Z carveBlock
	a (Lnet/minecraft/server/IChunkAccess;Ljava/util/function/Function;Ljava/util/Random;IIIIILjava/util/BitSet;Lnet/minecraft/server/WorldGenCarverConfiguration;)Z carve
	c ()I getRange
net/minecraft/server/WorldGenCarverConfiguration net/minecraft/world/level/levelgen/carver/CarverConfiguration
	a NONE
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/WorldGenCarverConfigurationEmpty net/minecraft/world/level/levelgen/carver/NoneCarverConfiguration
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenCarverConfigurationEmpty; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/WorldGenCarverWrapper net/minecraft/world/level/levelgen/carver/ConfiguredWorldCarver
	a worldCarver
	b config
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenCarverWrapper; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
	a (Ljava/util/Random;II)Z isStartChunk
	a (Lnet/minecraft/server/IChunkAccess;Ljava/util/function/Function;Ljava/util/Random;IIIIILjava/util/BitSet;)Z carve
net/minecraft/server/WorldGenCaves net/minecraft/world/level/levelgen/carver/CaveWorldCarver
	a ()I getCaveBound
	a (DDDI)Z skip
	a (Ljava/util/Random;)F getThickness
	a (Ljava/util/Random;IILnet/minecraft/server/WorldGenCarverConfiguration;)Z isStartChunk
	a (Ljava/util/Random;IILnet/minecraft/server/WorldGenFeatureConfigurationChance;)Z isStartChunk
	a (Lnet/minecraft/server/IChunkAccess;Ljava/util/function/Function;JIIIDDDFDLjava/util/BitSet;)V genRoom
	a (Lnet/minecraft/server/IChunkAccess;Ljava/util/function/Function;JIIIDDDFFFIIDLjava/util/BitSet;)V genTunnel
	a (Lnet/minecraft/server/IChunkAccess;Ljava/util/function/Function;Ljava/util/Random;IIIIILjava/util/BitSet;Lnet/minecraft/server/WorldGenCarverConfiguration;)Z carve
	a (Lnet/minecraft/server/IChunkAccess;Ljava/util/function/Function;Ljava/util/Random;IIIIILjava/util/BitSet;Lnet/minecraft/server/WorldGenFeatureConfigurationChance;)Z carve
	b ()D getYScale
	b (Ljava/util/Random;)I getCaveY
net/minecraft/server/WorldGenCavesHell net/minecraft/world/level/levelgen/carver/HellCaveWorldCarver
	a ()I getCaveBound
	a (Ljava/util/Random;)F getThickness
	a (Lnet/minecraft/server/IChunkAccess;Ljava/util/function/Function;Ljava/util/BitSet;Ljava/util/Random;Lnet/minecraft/server/BlockPosition$MutableBlockPosition;Lnet/minecraft/server/BlockPosition$MutableBlockPosition;Lnet/minecraft/server/BlockPosition$MutableBlockPosition;IIIIIIIILjava/util/concurrent/atomic/AtomicBoolean;)Z carveBlock
	b ()D getYScale
	b (Ljava/util/Random;)I getCaveY
net/minecraft/server/WorldGenCavesOcean net/minecraft/world/level/levelgen/carver/UnderwaterCaveWorldCarver
	a (Lnet/minecraft/server/IChunkAccess;IIIIIIII)Z hasWater
	a (Lnet/minecraft/server/IChunkAccess;Ljava/util/function/Function;Ljava/util/BitSet;Ljava/util/Random;Lnet/minecraft/server/BlockPosition$MutableBlockPosition;Lnet/minecraft/server/BlockPosition$MutableBlockPosition;Lnet/minecraft/server/BlockPosition$MutableBlockPosition;IIIIIIIILjava/util/concurrent/atomic/AtomicBoolean;)Z carveBlock
	a (Lnet/minecraft/server/WorldGenCarverAbstract;Lnet/minecraft/server/IChunkAccess;Ljava/util/BitSet;Ljava/util/Random;Lnet/minecraft/server/BlockPosition$MutableBlockPosition;IIIIIIII)Z carveBlock
net/minecraft/server/WorldGenContext net/minecraft/world/level/newbiome/context/Context
	a (I)I nextRandom
	b ()Lnet/minecraft/server/NoiseGeneratorPerlin; getBiomeNoise
net/minecraft/server/WorldGenContextArea net/minecraft/world/level/newbiome/context/LazyAreaContext
	a cache
	b maxCache
	c biomeNoise
	d seed
	e rval
	a ()J getMixedSeed
	a (I)I nextRandom
	a (JJ)V initRandom
	a (Lnet/minecraft/server/AreaTransformer8;)Lnet/minecraft/server/Area; createResult
	a (Lnet/minecraft/server/AreaTransformer8;Lnet/minecraft/server/Area;)Lnet/minecraft/server/Area; createResult
	a (Lnet/minecraft/server/AreaTransformer8;Lnet/minecraft/server/Area;Lnet/minecraft/server/Area;)Lnet/minecraft/server/Area; createResult
	a (Lnet/minecraft/server/AreaTransformer8;Lnet/minecraft/server/AreaLazy;)Lnet/minecraft/server/AreaLazy; createResult
	a (Lnet/minecraft/server/AreaTransformer8;Lnet/minecraft/server/AreaLazy;Lnet/minecraft/server/AreaLazy;)Lnet/minecraft/server/AreaLazy; createResult
	b ()Lnet/minecraft/server/NoiseGeneratorPerlin; getBiomeNoise
	b (JJ)J mixSeed
	b (Lnet/minecraft/server/AreaTransformer8;)Lnet/minecraft/server/AreaLazy; createResult
net/minecraft/server/WorldGenDecorator net/minecraft/world/level/levelgen/placement/FeatureDecorator
	A HELL_FIRE
	B MAGMA
	C EMERALD_ORE
	D LAVA_LAKE
	E WATER_LAKE
	F DUNGEONS
	G DARK_OAK_TREE
	H ICEBERG
	I LIGHT_GEM_CHANCE
	J END_ISLAND
	K CHORUS_PLANT
	L END_GATEWAY
	M configurationFactory
	a NOPE
	b COUNT_HEIGHTMAP
	c COUNT_TOP_SOLID
	d COUNT_HEIGHTMAP_32
	e COUNT_HEIGHTMAP_DOUBLE
	f COUNT_HEIGHT_64
	g NOISE_HEIGHTMAP_32
	h NOISE_HEIGHTMAP_DOUBLE
	i CHANCE_HEIGHTMAP
	j CHANCE_HEIGHTMAP_DOUBLE
	k CHANCE_PASSTHROUGH
	l CHANCE_TOP_SOLID_HEIGHTMAP
	m COUNT_EXTRA_HEIGHTMAP
	n COUNT_RANGE
	o COUNT_BIASED_RANGE
	p COUNT_VERY_BIASED_RANGE
	q RANDOM_COUNT_RANGE
	r CHANCE_RANGE
	s COUNT_CHANCE_HEIGHTMAP
	t COUNT_CHANCE_HEIGHTMAP_DOUBLE
	u COUNT_DEPTH_AVERAGE
	v TOP_SOLID_HEIGHTMAP
	w TOP_SOLID_HEIGHTMAP_RANGE
	x TOP_SOLID_HEIGHTMAP_NOISE_BIASED
	y CARVING_MASK
	z FOREST_ROCK
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration; createSettings
	a (Ljava/lang/String;Lnet/minecraft/server/WorldGenDecorator;)Lnet/minecraft/server/WorldGenDecorator; register
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/WorldGenFeatureConfigured;)Z placeFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;)Lnet/minecraft/server/WorldGenDecoratorConfigured; configured
net/minecraft/server/WorldGenDecoratorCarveMask net/minecraft/world/level/levelgen/placement/CarvingMaskDecorator
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorCarveMaskConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
net/minecraft/server/WorldGenDecoratorCarveMaskConfiguration net/minecraft/world/level/levelgen/placement/CarvingMaskDecoratorConfiguration
	a step
	b probability
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenDecoratorCarveMaskConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/WorldGenDecoratorChance net/minecraft/world/level/levelgen/placement/ChanceHeightmapDecorator
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorDungeonConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
net/minecraft/server/WorldGenDecoratorChanceHeight net/minecraft/world/level/levelgen/placement/ChanceHeightmapDoubleDecorator
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorDungeonConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
net/minecraft/server/WorldGenDecoratorChancePass net/minecraft/world/level/levelgen/placement/ChancePassthroughDecorator
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorDungeonConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
net/minecraft/server/WorldGenDecoratorChorusPlant net/minecraft/world/level/levelgen/placement/ChorusPlantPlacementDecorator
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration2;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
net/minecraft/server/WorldGenDecoratorConfigured net/minecraft/world/level/levelgen/placement/ConfiguredDecorator
	a decorator
	b config
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenDecoratorConfigured; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfigured;)Z place
net/minecraft/server/WorldGenDecoratorDungeon net/minecraft/world/level/levelgen/placement/MonsterRoomPlacementDecorator
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorDungeonConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
net/minecraft/server/WorldGenDecoratorDungeonConfiguration net/minecraft/world/level/levelgen/placement/ChanceDecoratorConfiguration
	a chance
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenDecoratorDungeonConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/WorldGenDecoratorEmerald net/minecraft/world/level/levelgen/placement/EmeraldPlacementDecorator
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration2;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
net/minecraft/server/WorldGenDecoratorEmpty net/minecraft/world/level/levelgen/placement/NopePlacementDecorator
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration2;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
net/minecraft/server/WorldGenDecoratorEndGateway net/minecraft/world/level/levelgen/placement/EndGatewayPlacementDecorator
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration2;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
net/minecraft/server/WorldGenDecoratorEndIsland net/minecraft/world/level/levelgen/placement/EndIslandPlacementDecorator
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration2;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
net/minecraft/server/WorldGenDecoratorFeatureSimple net/minecraft/world/level/levelgen/placement/SimpleFeatureDecorator
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
net/minecraft/server/WorldGenDecoratorForestRock net/minecraft/world/level/levelgen/placement/ForestRockPlacementDecorator
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorFrequencyConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
net/minecraft/server/WorldGenDecoratorFrequencyChanceConfiguration net/minecraft/world/level/levelgen/placement/FrequencyChanceDecoratorConfiguration
	a count
	b chance
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenDecoratorFrequencyChanceConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/WorldGenDecoratorFrequencyConfiguration net/minecraft/world/level/levelgen/placement/FrequencyDecoratorConfiguration
	a count
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenDecoratorFrequencyConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/WorldGenDecoratorFrequencyExtraChanceConfiguration net/minecraft/world/level/levelgen/placement/FrequencyWithExtraChanceDecoratorConfiguration
	a count
	b extraChance
	c extraCount
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenDecoratorFrequencyExtraChanceConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/WorldGenDecoratorHeight net/minecraft/world/level/levelgen/placement/CountHeightmapDecorator
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorFrequencyConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
net/minecraft/server/WorldGenDecoratorHeight32 net/minecraft/world/level/levelgen/placement/CountHeightmap32Decorator
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorFrequencyConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
net/minecraft/server/WorldGenDecoratorHeight64 net/minecraft/world/level/levelgen/placement/CountHeight64Decorator
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorFrequencyConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
net/minecraft/server/WorldGenDecoratorHeightAverage net/minecraft/world/level/levelgen/placement/CountDepthAverageDecorator
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorHeightAverageConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
net/minecraft/server/WorldGenDecoratorHeightAverageConfiguration net/minecraft/world/level/levelgen/placement/DepthAverageConfigation
	a count
	b baseline
	c spread
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenDecoratorHeightAverageConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/WorldGenDecoratorHeightBiased net/minecraft/world/level/levelgen/placement/CountBiasedRangeDecorator
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureChanceDecoratorCountConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
net/minecraft/server/WorldGenDecoratorHeightBiased2 net/minecraft/world/level/levelgen/placement/CountVeryBiasedRangeDecorator
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureChanceDecoratorCountConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
net/minecraft/server/WorldGenDecoratorHeightDouble net/minecraft/world/level/levelgen/placement/CountHeighmapDoubleDecorator
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorFrequencyConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
net/minecraft/server/WorldGenDecoratorHeightExtraChance net/minecraft/world/level/levelgen/placement/CountWithExtraChanceHeightmapDecorator
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorFrequencyExtraChanceConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
net/minecraft/server/WorldGenDecoratorIceburg net/minecraft/world/level/levelgen/placement/IcebergPlacementDecorator
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorDungeonConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
net/minecraft/server/WorldGenDecoratorLakeLava net/minecraft/world/level/levelgen/placement/LakeLavaPlacementDecorator
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorDungeonConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
net/minecraft/server/WorldGenDecoratorLakeWater net/minecraft/world/level/levelgen/placement/LakeWaterPlacementDecorator
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorDungeonConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
net/minecraft/server/WorldGenDecoratorNetherChance net/minecraft/world/level/levelgen/placement/nether/ChanceRangeDecorator
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureChanceDecoratorRangeConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
net/minecraft/server/WorldGenDecoratorNetherFire net/minecraft/world/level/levelgen/placement/nether/HellFireDecorator
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorFrequencyConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
net/minecraft/server/WorldGenDecoratorNetherGlowstone net/minecraft/world/level/levelgen/placement/nether/LightGemChanceDecorator
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorFrequencyConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
net/minecraft/server/WorldGenDecoratorNetherHeight net/minecraft/world/level/levelgen/placement/nether/CountRangeDecorator
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureChanceDecoratorCountConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
net/minecraft/server/WorldGenDecoratorNetherMagma net/minecraft/world/level/levelgen/placement/nether/MagmaDecorator
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorFrequencyConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
net/minecraft/server/WorldGenDecoratorNetherRandomCount net/minecraft/world/level/levelgen/placement/nether/RandomCountRangeDecorator
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureChanceDecoratorCountConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; place
net/minecraft/server/WorldGenDecoratorNoiseConfiguration net/minecraft/world/level/levelgen/placement/NoiseCountFactorDecoratorConfiguration
	a noiseToCountRatio
	b noiseFactor
	c noiseOffset
	d heightmap
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenDecoratorNoiseConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/WorldGenDecoratorNoiseHeight32 net/minecraft/world/level/levelgen/placement/NoiseHeightmap32Decorator
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorNoiseConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
net/minecraft/server/WorldGenDecoratorNoiseHeightDouble net/minecraft/world/level/levelgen/placement/NoiseHeightmapDoubleDecorator
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorNoiseConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
net/minecraft/server/WorldGenDecoratorRangeConfiguration net/minecraft/world/level/levelgen/placement/RangeDecoratorConfiguration
	a min
	b max
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenDecoratorRangeConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/WorldGenDecoratorRoofedTree net/minecraft/world/level/levelgen/placement/DarkOakTreePlacementDecorator
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration2;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
net/minecraft/server/WorldGenDecoratorSkyVisible net/minecraft/world/level/levelgen/placement/CountTopSolidDecorator
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorFrequencyConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
net/minecraft/server/WorldGenDecoratorSkyVisibleBiased net/minecraft/world/level/levelgen/placement/ChanceTopSolidHeightmapDecorator
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorDungeonConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
net/minecraft/server/WorldGenDecoratorSolidTop net/minecraft/world/level/levelgen/placement/TopSolidHeightMapDecorator
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration2;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
net/minecraft/server/WorldGenDecoratorSolidTopHeight net/minecraft/world/level/levelgen/placement/TopSolidHeightMapRangeDecorator
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorRangeConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
net/minecraft/server/WorldGenDecoratorSolidTopNoise net/minecraft/world/level/levelgen/placement/TopSolidHeightMapNoiseBasedDecorator
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorNoiseConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
net/minecraft/server/WorldGenDesertPyramidPiece net/minecraft/world/level/levelgen/structure/DesertPyramidPiece
	e hasPlacedChest
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
net/minecraft/server/WorldGenDesertWell net/minecraft/world/level/levelgen/feature/DesertWellFeature
	a IS_SAND
	aq sandSlab
	ar sandstone
	as water
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z place
net/minecraft/server/WorldGenDungeons net/minecraft/world/level/levelgen/feature/MonsterRoomFeature
	a LOGGER
	aq MOBS
	ar AIR
	a (Ljava/util/Random;)Lnet/minecraft/server/EntityTypes; randomEntityId
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z place
net/minecraft/server/WorldGenEndCity net/minecraft/world/level/levelgen/feature/EndCityFeature
	a ()Lcfi$a; getStartFactory
	a (Lnet/minecraft/server/BiomeManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;IILnet/minecraft/server/BiomeBase;)Z isFeatureChunk
	a (Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;IIII)Lnet/minecraft/server/ChunkCoordIntPair; getPotentialFeatureChunkFromLocationWithOffset
	b ()Ljava/lang/String; getFeatureName
	b (IILnet/minecraft/server/ChunkGenerator;)I getYPositionForFeature
	c ()I getLookupRange
net/minecraft/server/WorldGenEndCityPieces net/minecraft/world/level/levelgen/structure/EndCityPieces
	a OVERWRITE
	b INSERT
	c HOUSE_TOWER_GENERATOR
	d TOWER_BRIDGES
	e TOWER_GENERATOR
	f TOWER_BRIDGE_GENERATOR
	g FAT_TOWER_BRIDGES
	h FAT_TOWER_GENERATOR
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Ljava/util/List;Ljava/util/Random;)V startHouseTower
	b (Ljava/util/List;Lnet/minecraft/server/WorldGenEndCityPieces$Piece;)Lnet/minecraft/server/WorldGenEndCityPieces$Piece; addHelper
	b (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/WorldGenEndCityPieces$Piece;Lnet/minecraft/server/BlockPosition;Ljava/lang/String;Lnet/minecraft/server/EnumBlockRotation;Z)Lnet/minecraft/server/WorldGenEndCityPieces$Piece; addPiece
	b (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/WorldGenEndCityPieces$PieceGenerator;ILnet/minecraft/server/WorldGenEndCityPieces$Piece;Lnet/minecraft/server/BlockPosition;Ljava/util/List;Ljava/util/Random;)Z recursiveChildren
net/minecraft/server/WorldGenEndCityPieces$Piece net/minecraft/world/level/levelgen/structure/EndCityPieces$EndCityPiece
	d templateName
	e rotation
	f overwrite
	a (Ljava/lang/String;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;)V handleDataMarker
	a (Lnet/minecraft/server/DefinedStructureManager;)V loadTemplate
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
net/minecraft/server/WorldGenEndCityPieces$PieceGenerator net/minecraft/world/level/levelgen/structure/EndCityPieces$SectionGenerator
	a ()V init
	a (Lnet/minecraft/server/DefinedStructureManager;ILnet/minecraft/server/WorldGenEndCityPieces$Piece;Lnet/minecraft/server/BlockPosition;Ljava/util/List;Ljava/util/Random;)Z generate
net/minecraft/server/WorldGenEndGateway net/minecraft/world/level/levelgen/feature/EndGatewayFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenEndGatewayConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
net/minecraft/server/WorldGenEndGatewayConfiguration net/minecraft/world/level/levelgen/feature/configurations/EndGatewayConfiguration
	a exit
	b exact
	a ()Lnet/minecraft/server/WorldGenEndGatewayConfiguration; delayedExitSearch
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenEndGatewayConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
	a (Lnet/minecraft/server/BlockPosition;Z)Lnet/minecraft/server/WorldGenEndGatewayConfiguration; knownExit
	b ()Ljava/util/Optional; getExit
	c ()Z isExitExact
net/minecraft/server/WorldGenEndIsland net/minecraft/world/level/levelgen/feature/EndIslandFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z place
net/minecraft/server/WorldGenEndTrophy net/minecraft/world/level/levelgen/feature/EndPodiumFeature
	a END_PODIUM_LOCATION
	aq active
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z place
net/minecraft/server/WorldGenEnder net/minecraft/world/level/levelgen/feature/SpikeFeature
	a SPIKE_CACHE
	a (Lnet/minecraft/server/GeneratorAccess;)Ljava/util/List; getSpikesForLevel
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureEndSpikeConfiguration;Lnet/minecraft/server/WorldGenEnder$Spike;)V placeSpike
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEndSpikeConfiguration;)Z place
net/minecraft/server/WorldGenEnder$Spike net/minecraft/world/level/levelgen/feature/SpikeFeature$EndSpike
	a centerX
	b centerZ
	c radius
	d height
	e guarded
	f topBoundingBox
	a ()I getCenterX
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenEnder$Spike; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
	a (Lnet/minecraft/server/BlockPosition;)Z isCenterWithinChunk
	b ()I getCenterZ
	c ()I getRadius
	d ()I getHeight
	e ()Z isGuarded
	f ()Lnet/minecraft/server/AxisAlignedBB; getTopBoundingBox
net/minecraft/server/WorldGenFactory net/minecraft/world/level/levelgen/structure/StructureFeatureIO
	a MINESHAFT
	b PILLAGER_OUTPOST
	c NETHER_FORTRESS
	d STRONGHOLD
	e JUNGLE_PYRAMID
	f OCEAN_RUIN
	g DESERT_PYRAMID
	h IGLOO
	i SWAMP_HUT
	j OCEAN_MONUMENT
	k END_CITY
	l WOODLAND_MANSION
	m BURIED_TREASURE
	n SHIPWRECK
	o VILLAGE
	p LOGGER
	a ()V bootstrap
	a (Ljava/lang/String;Lnet/minecraft/server/StructureGenerator;)Lnet/minecraft/server/StructureGenerator; register
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/StructureStart; loadStaticStart
net/minecraft/server/WorldGenFeatureBamboo net/minecraft/world/level/levelgen/feature/BambooFeature
	a BAMBOO_TRUNK
	aq BAMBOO_FINAL_LARGE
	ar BAMBOO_TOP_LARGE
	as BAMBOO_TOP_SMALL
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfigurationChance;)Z place
net/minecraft/server/WorldGenFeatureBlock net/minecraft/world/level/levelgen/feature/SimpleBlockFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureBlockConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
net/minecraft/server/WorldGenFeatureBlockConfiguration net/minecraft/world/level/levelgen/feature/configurations/SimpleBlockConfiguration
	a toPlace
	b placeOn
	c placeIn
	d placeUnder
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureBlockConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/WorldGenFeatureBlockOffsetConfiguration net/minecraft/world/level/levelgen/feature/configurations/BlockBlobConfiguration
	a state
	b startRadius
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureBlockOffsetConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/WorldGenFeatureBlockPile net/minecraft/world/level/levelgen/feature/BlockPileFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;)Z mayPlaceOn
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureBlockPileConfiguration;)V tryPlaceBlock
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureBlockPileConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
net/minecraft/server/WorldGenFeatureBlockPileConfiguration net/minecraft/world/level/levelgen/feature/configurations/BlockPileConfiguration
	a stateProvider
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureBlockPileConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/WorldGenFeatureBlueIce net/minecraft/world/level/levelgen/feature/BlueIceFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z place
net/minecraft/server/WorldGenFeatureChanceDecorator net/minecraft/world/level/levelgen/placement/CountChanceHeightmapDecorator
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorFrequencyChanceConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
net/minecraft/server/WorldGenFeatureChanceDecoratorCountConfiguration net/minecraft/world/level/levelgen/feature/configurations/CountRangeDecoratorConfiguration
	a count
	b bottomOffset
	c topOffset
	d maximum
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureChanceDecoratorCountConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/WorldGenFeatureChanceDecoratorHeight net/minecraft/world/level/levelgen/placement/CountChanceHeightmapDoubleDecorator
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenDecoratorFrequencyChanceConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureDecoratorConfiguration;Lnet/minecraft/server/BlockPosition;)Ljava/util/stream/Stream; getPositions
net/minecraft/server/WorldGenFeatureChanceDecoratorRangeConfiguration net/minecraft/world/level/levelgen/feature/configurations/ChanceRangeDecoratorConfiguration
	a chance
	b bottomOffset
	c topOffset
	d top
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureChanceDecoratorRangeConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/WorldGenFeatureChoice net/minecraft/world/level/levelgen/feature/RandomBooleanSelectorFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureChoiceConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
net/minecraft/server/WorldGenFeatureChoiceConfiguration net/minecraft/world/level/levelgen/feature/configurations/RandomBooleanFeatureConfiguration
	a featureTrue
	b featureFalse
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureChoiceConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/WorldGenFeatureChorusPlant net/minecraft/world/level/levelgen/feature/ChorusPlantFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z place
net/minecraft/server/WorldGenFeatureCircle net/minecraft/world/level/levelgen/feature/DiskReplaceFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureCircleConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
net/minecraft/server/WorldGenFeatureCircleConfiguration net/minecraft/world/level/levelgen/feature/configurations/DiskConfiguration
	a state
	b radius
	c ySize
	d targets
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureCircleConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/WorldGenFeatureComposite net/minecraft/world/level/levelgen/feature/DecoratedFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureCompositeConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
net/minecraft/server/WorldGenFeatureCompositeConfiguration net/minecraft/world/level/levelgen/feature/configurations/DecoratedFeatureConfiguration
	a feature
	b decorator
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureCompositeConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/WorldGenFeatureCompositeFlower net/minecraft/world/level/levelgen/feature/DecoratedFlowerFeature
net/minecraft/server/WorldGenFeatureConfiguration net/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration
	e NONE
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/WorldGenFeatureConfigurationChance net/minecraft/world/level/levelgen/feature/configurations/ProbabilityFeatureConfiguration
	b probability
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureConfigurationChance; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/WorldGenFeatureConfigured net/minecraft/world/level/levelgen/feature/ConfiguredFeature
	a LOGGER
	b feature
	c config
	a (F)Lnet/minecraft/server/WorldGenFeatureRandomChoiceConfigurationWeight; weighted
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureConfigured; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;)Z place
	a (Lnet/minecraft/server/WorldGenDecoratorConfigured;)Lnet/minecraft/server/WorldGenFeatureConfigured; decorated
net/minecraft/server/WorldGenFeatureCoral net/minecraft/world/level/levelgen/feature/CoralFeature
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z placeFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z place
	b (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z placeCoralBlock
net/minecraft/server/WorldGenFeatureCoralClaw net/minecraft/world/level/levelgen/feature/CoralClawFeature
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z placeFeature
net/minecraft/server/WorldGenFeatureCoralMushroom net/minecraft/world/level/levelgen/feature/CoralMushroomFeature
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z placeFeature
net/minecraft/server/WorldGenFeatureCoralTree net/minecraft/world/level/levelgen/feature/CoralTreeFeature
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)Z placeFeature
net/minecraft/server/WorldGenFeatureDecoratorConfiguration net/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration
	e NONE
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/WorldGenFeatureDecoratorNoiseConfiguration net/minecraft/world/level/levelgen/feature/configurations/NoiseDependantDecoratorConfiguration
	a noiseLevel
	b belowNoise
	c aboveNoise
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureDecoratorNoiseConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/WorldGenFeatureDefinedStructureJigsawJunction net/minecraft/world/level/levelgen/feature/structures/JigsawJunction
	a sourceX
	b sourceGroundY
	c sourceZ
	d deltaY
	e destProjection
	a ()I getSourceX
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureDefinedStructureJigsawJunction; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
	b ()I getSourceGroundY
	c ()I getSourceZ
	d ()I getDeltaY
	e ()Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolTemplate$Matching; getDestProjection
net/minecraft/server/WorldGenFeatureDefinedStructureJigsawPlacement net/minecraft/world/level/levelgen/feature/structures/JigsawPlacement
	a POOLS
	b LOGGER
	a (Lnet/minecraft/server/MinecraftKey;ILcie$a;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/BlockPosition;Ljava/util/List;Ljava/util/Random;)V addPieces
net/minecraft/server/WorldGenFeatureDefinedStructurePoolEmpty net/minecraft/world/level/levelgen/feature/structures/EmptyPoolElement
	a INSTANCE
	a ()Lnet/minecraft/server/WorldGenFeatureDefinedStructurePools; getType
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; getDynamic
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/StructureBoundingBox; getBoundingBox
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Ljava/util/Random;)Ljava/util/List; getShuffledJigsawBlocks
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/BlockPosition; getSize
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Lnet/minecraft/server/StructureBoundingBox;Ljava/util/Random;)Z place
net/minecraft/server/WorldGenFeatureDefinedStructurePoolFeature net/minecraft/world/level/levelgen/feature/structures/FeaturePoolElement
	a feature
	b defaultJigsawNBT
	a ()Lnet/minecraft/server/WorldGenFeatureDefinedStructurePools; getType
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; getDynamic
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/StructureBoundingBox; getBoundingBox
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Ljava/util/Random;)Ljava/util/List; getShuffledJigsawBlocks
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/BlockPosition; getSize
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Lnet/minecraft/server/StructureBoundingBox;Ljava/util/Random;)Z place
	b ()Lnet/minecraft/server/NBTTagCompound; fillDefaultJigsawNBT
net/minecraft/server/WorldGenFeatureDefinedStructurePoolList net/minecraft/world/level/levelgen/feature/structures/ListPoolElement
	a elements
	a ()Lnet/minecraft/server/WorldGenFeatureDefinedStructurePools; getType
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; getDynamic
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/StructureBoundingBox; getBoundingBox
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Ljava/util/Random;)Ljava/util/List; getShuffledJigsawBlocks
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/BlockPosition; getSize
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Lnet/minecraft/server/StructureBoundingBox;Ljava/util/Random;)Z place
	a (Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolTemplate$Matching;)Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolStructure; setProjection
	b (Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolTemplate$Matching;)V setProjectionOnEachElement
net/minecraft/server/WorldGenFeatureDefinedStructurePoolSingle net/minecraft/world/level/levelgen/feature/structures/SinglePoolElement
	a location
	b processors
	a ()Lnet/minecraft/server/WorldGenFeatureDefinedStructurePools; getType
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; getDynamic
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/StructureBoundingBox; getBoundingBox
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Ljava/util/Random;)Ljava/util/List; getShuffledJigsawBlocks
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Z)Ljava/util/List; getDataMarkers
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/BlockPosition; getSize
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Lnet/minecraft/server/StructureBoundingBox;Ljava/util/Random;)Z place
	a (Lnet/minecraft/server/EnumBlockRotation;Lnet/minecraft/server/StructureBoundingBox;)Lnet/minecraft/server/DefinedStructureInfo; getSettings
net/minecraft/server/WorldGenFeatureDefinedStructurePoolStructure net/minecraft/world/level/levelgen/feature/structures/StructurePoolElement
	a projection
	a ()Lnet/minecraft/server/WorldGenFeatureDefinedStructurePools; getType
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; getDynamic
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/StructureBoundingBox; getBoundingBox
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Ljava/util/Random;)Ljava/util/List; getShuffledJigsawBlocks
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/EnumBlockRotation;)Lnet/minecraft/server/BlockPosition; getSize
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Lnet/minecraft/server/StructureBoundingBox;Ljava/util/Random;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/DefinedStructure$BlockInfo;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;)V handleDataMarker
	a (Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolTemplate$Matching;)Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolStructure; setProjection
	b (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
	c ()Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolTemplate$Matching; getProjection
	d ()I getGroundLevelDelta
net/minecraft/server/WorldGenFeatureDefinedStructurePoolTemplate net/minecraft/world/level/levelgen/feature/structures/StructureTemplatePool
	a EMPTY
	b INVALID
	c name
	d rawTemplates
	e templates
	f fallback
	g projection
	h maxSize
	a ()Lnet/minecraft/server/MinecraftKey; getFallback
	a (I)Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolStructure; getTemplate
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolTemplate; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
	a (Ljava/util/Random;)Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolStructure; getRandomTemplate
	a (Lnet/minecraft/server/DefinedStructureManager;)I getMaxSize
	b ()Lnet/minecraft/server/MinecraftKey; getName
	b (Ljava/util/Random;)Ljava/util/List; getShuffledTemplates
	c ()I size
net/minecraft/server/WorldGenFeatureDefinedStructurePoolTemplate$Matching net/minecraft/world/level/levelgen/feature/structures/StructureTemplatePool$Projection
	c BY_NAME
	d name
	e processors
	f $VALUES
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolTemplate$Matching; byName
	b ()Lcom/google/common/collect/ImmutableList; getProcessors
net/minecraft/server/WorldGenFeatureDefinedStructurePoolTemplates net/minecraft/world/level/levelgen/feature/structures/StructureTemplatePools
	a pools
	a ()Ljava/util/Set; getPoolLocations
	a (Lnet/minecraft/server/MinecraftKey;)Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolTemplate; getPool
	a (Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolTemplate;)V register
net/minecraft/server/WorldGenFeatureDefinedStructurePools net/minecraft/world/level/levelgen/feature/structures/StructurePoolElementType
	b SINGLE
	c LIST
	d FEATURE
	e EMPTY
	a (Ljava/lang/String;Lnet/minecraft/server/WorldGenFeatureDefinedStructurePools;)Lnet/minecraft/server/WorldGenFeatureDefinedStructurePools; register
net/minecraft/server/WorldGenFeatureDesertPyramid net/minecraft/world/level/levelgen/feature/DesertPyramidFeature
	a ()Lcfi$a; getStartFactory
	b ()Ljava/lang/String; getFeatureName
	c ()I getLookupRange
	d ()I getRandomSalt
net/minecraft/server/WorldGenFeatureDesertVillage net/minecraft/world/level/levelgen/feature/DesertVillagePools
	a ()V bootstrap
net/minecraft/server/WorldGenFeatureEmpty net/minecraft/world/level/levelgen/feature/NoOpFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z place
net/minecraft/server/WorldGenFeatureEmptyConfiguration net/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/WorldGenFeatureEmptyConfiguration2 net/minecraft/world/level/levelgen/feature/configurations/NoneDecoratorConfiguration
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration2; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/WorldGenFeatureEndPlatform net/minecraft/world/level/levelgen/feature/VoidStartPlatformFeature
	a PLATFORM_ORIGIN
	aq PLATFORM_ORIGIN_CHUNK
	a (IIII)I checkerboardDistance
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z place
net/minecraft/server/WorldGenFeatureEndSpikeConfiguration net/minecraft/world/level/levelgen/feature/configurations/SpikeConfiguration
	a crystalInvulnerable
	b spikes
	c crystalBeamTarget
	a ()Z isCrystalInvulnerable
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureEndSpikeConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
	b ()Ljava/util/List; getSpikes
	c ()Lnet/minecraft/server/BlockPosition; getCrystalBeamTarget
net/minecraft/server/WorldGenFeatureFill net/minecraft/world/level/levelgen/feature/FillLayerFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureFillConfiguration;)Z place
net/minecraft/server/WorldGenFeatureFillConfiguration net/minecraft/world/level/levelgen/feature/configurations/LayerConfiguration
	a height
	b state
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureFillConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/WorldGenFeatureFlower net/minecraft/world/level/levelgen/feature/DefaultFlowerFeature
	a (Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Lnet/minecraft/server/BlockPosition; getPos
	a (Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureRandomPatchConfiguration;)Lnet/minecraft/server/BlockPosition; getPos
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z isValid
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureRandomPatchConfiguration;)Z isValid
	a (Lnet/minecraft/server/WorldGenFeatureConfiguration;)I getCount
	a (Lnet/minecraft/server/WorldGenFeatureRandomPatchConfiguration;)I getCount
	b (Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Lnet/minecraft/server/IBlockData; getRandomFlower
	b (Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureRandomPatchConfiguration;)Lnet/minecraft/server/IBlockData; getRandomFlower
net/minecraft/server/WorldGenFeatureHellFlowingLavaConfiguration net/minecraft/world/level/levelgen/feature/configurations/SpringConfiguration
	a state
	b requiresBlockBelow
	c rockCount
	d holeCount
	f validBlocks
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureHellFlowingLavaConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/WorldGenFeatureIceSnow net/minecraft/world/level/levelgen/feature/SnowAndFreezeFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z place
net/minecraft/server/WorldGenFeatureIceburg net/minecraft/world/level/levelgen/feature/IcebergFeature
	a (III)I getEllipseC
	a (IILnet/minecraft/server/BlockPosition;IID)D signedDistanceEllipse
	a (IILnet/minecraft/server/BlockPosition;ILjava/util/Random;)D signedDistanceCircle
	a (IILnet/minecraft/server/BlockPosition;Lnet/minecraft/server/GeneratorAccess;ZDLnet/minecraft/server/BlockPosition;II)V carve
	a (Ljava/util/Random;III)I heightDependentRadiusRound
	a (Ljava/util/Random;Lnet/minecraft/server/GeneratorAccess;IILnet/minecraft/server/BlockPosition;ZIDI)V generateCutOut
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;IIZZLnet/minecraft/server/IBlockData;)V setIcebergBlock
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;IIIIIIZIDZLnet/minecraft/server/IBlockData;)V generateIcebergBlock
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)V removeFloatingSnowLayer
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;IIZI)V smooth
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureLakeConfiguration;)Z place
	a (Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;)Z belowIsAir
	b (III)I heightDependentRadiusEllipse
	b (Ljava/util/Random;III)I heightDependentRadiusSteep
	c (Lnet/minecraft/server/Block;)Z isIcebergBlock
net/minecraft/server/WorldGenFeatureIgloo net/minecraft/world/level/levelgen/feature/IglooFeature
	a ()Lcfi$a; getStartFactory
	b ()Ljava/lang/String; getFeatureName
	c ()I getLookupRange
	d ()I getRandomSalt
net/minecraft/server/WorldGenFeatureJunglePyramid net/minecraft/world/level/levelgen/feature/JunglePyramidFeature
	a ()Lcfi$a; getStartFactory
	b ()Ljava/lang/String; getFeatureName
	c ()I getLookupRange
	d ()I getRandomSalt
net/minecraft/server/WorldGenFeatureKelp net/minecraft/world/level/levelgen/feature/KelpFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z place
net/minecraft/server/WorldGenFeatureKelpConfiguration net/minecraft/world/level/levelgen/feature/configurations/CountFeatureConfiguration
	a count
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureKelpConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/WorldGenFeatureLakeConfiguration net/minecraft/world/level/levelgen/feature/configurations/BlockStateConfiguration
	a state
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureLakeConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/WorldGenFeatureMushroomConfiguration net/minecraft/world/level/levelgen/feature/configurations/HugeMushroomFeatureConfiguration
	a capProvider
	b stemProvider
	c foliageRadius
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureMushroomConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/WorldGenFeatureOceanRuin net/minecraft/world/level/levelgen/structure/OceanRuinFeature
	a ()Lcfi$a; getStartFactory
	a (Lnet/minecraft/server/ChunkGenerator;)I getSpacing
	b ()Ljava/lang/String; getFeatureName
	b (Lnet/minecraft/server/ChunkGenerator;)I getSeparation
	c ()I getLookupRange
	d ()I getRandomSalt
net/minecraft/server/WorldGenFeatureOceanRuin$Temperature net/minecraft/world/level/levelgen/structure/OceanRuinFeature$Type
	c BY_NAME
	d name
	e $VALUES
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lnet/minecraft/server/WorldGenFeatureOceanRuin$Temperature; byName
net/minecraft/server/WorldGenFeatureOceanRuinConfiguration net/minecraft/world/level/levelgen/feature/configurations/OceanRuinConfiguration
	a biomeTemp
	b largeProbability
	c clusterProbability
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureOceanRuinConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/WorldGenFeatureOceanRuinPieces net/minecraft/world/level/levelgen/structure/OceanRuinPieces
	a WARM_RUINS
	b RUINS_BRICK
	c RUINS_CRACKED
	d RUINS_MOSSY
	e BIG_RUINS_BRICK
	f BIG_RUINS_MOSSY
	g BIG_RUINS_CRACKED
	h BIG_WARM_RUINS
	a (Ljava/util/Random;)Lnet/minecraft/server/MinecraftKey; getSmallWarmRuin
	a (Ljava/util/Random;II)Ljava/util/List; allPositions
	a (Lnet/minecraft/server/DefinedStructureManager;Ljava/util/Random;Lnet/minecraft/server/EnumBlockRotation;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureOceanRuinConfiguration;Ljava/util/List;)V addClusterRuins
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Ljava/util/List;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureOceanRuinConfiguration;)V addPieces
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Ljava/util/List;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureOceanRuinConfiguration;ZF)V addPiece
	b (Ljava/util/Random;)Lnet/minecraft/server/MinecraftKey; getBigWarmRuin
net/minecraft/server/WorldGenFeatureOreConfiguration net/minecraft/world/level/levelgen/feature/configurations/OreConfiguration
	a target
	b size
	c state
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureOreConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/WorldGenFeatureOreConfiguration$Target net/minecraft/world/level/levelgen/feature/configurations/OreConfiguration$Predicates
	c BY_NAME
	d name
	e predicate
	f $VALUES
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lnet/minecraft/server/WorldGenFeatureOreConfiguration$Target; byName
	b ()Ljava/util/function/Predicate; getPredicate
net/minecraft/server/WorldGenFeaturePillagerOutpost net/minecraft/world/level/levelgen/feature/PillagerOutpostFeature
	a OUTPOST_ENEMIES
	a ()Lcfi$a; getStartFactory
	a (Lnet/minecraft/server/BiomeManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;IILnet/minecraft/server/BiomeBase;)Z isFeatureChunk
	b ()Ljava/lang/String; getFeatureName
	c ()I getLookupRange
	d ()I getRandomSalt
	e ()Ljava/util/List; getSpecialEnemies
net/minecraft/server/WorldGenFeaturePillagerOutpostPieces net/minecraft/world/level/levelgen/structure/PillagerOutpostPieces
	a (Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/BlockPosition;Ljava/util/List;Lnet/minecraft/server/SeededRandom;)V addPieces
net/minecraft/server/WorldGenFeaturePillagerOutpostPoolPiece net/minecraft/world/level/levelgen/structure/PoolElementStructurePiece
	a element
	b position
	c rotation
	d groundLevelDelta
	e junctions
	f structureManager
	a (III)V move
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	a (Lnet/minecraft/server/WorldGenFeatureDefinedStructureJigsawJunction;)V addJunction
	ad_ ()Lnet/minecraft/server/EnumBlockRotation; getRotation
	b ()Lnet/minecraft/server/WorldGenFeatureDefinedStructurePoolStructure; getElement
	c ()Lnet/minecraft/server/BlockPosition; getPosition
	d ()I getGroundLevelDelta
	e ()Ljava/util/List; getJunctions
net/minecraft/server/WorldGenFeatureRadiusConfiguration net/minecraft/world/level/levelgen/feature/configurations/FeatureRadiusConfiguration
	a radius
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureRadiusConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/WorldGenFeatureRandom net/minecraft/world/level/levelgen/feature/RandomRandomFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureRandomConfiguration;)Z place
net/minecraft/server/WorldGenFeatureRandom2 net/minecraft/world/level/levelgen/feature/configurations/SimpleRandomFeatureConfiguration
	a features
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureRandom2; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/WorldGenFeatureRandom2Configuration net/minecraft/world/level/levelgen/feature/SimpleRandomSelectorFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureRandom2;)Z place
net/minecraft/server/WorldGenFeatureRandomChoice net/minecraft/world/level/levelgen/feature/RandomSelectorFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureRandomChoiceConfiguration;)Z place
net/minecraft/server/WorldGenFeatureRandomChoiceConfiguration net/minecraft/world/level/levelgen/feature/configurations/RandomFeatureConfiguration
	a features
	b defaultFeature
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureRandomChoiceConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/WorldGenFeatureRandomChoiceConfigurationWeight net/minecraft/world/level/levelgen/feature/WeightedConfiguredFeature
	a feature
	b chance
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureRandomChoiceConfigurationWeight; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;)Z place
net/minecraft/server/WorldGenFeatureRandomConfiguration net/minecraft/world/level/levelgen/feature/configurations/RandomRandomFeatureConfiguration
	a features
	b count
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureRandomConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/WorldGenFeatureRandomPatch net/minecraft/world/level/levelgen/feature/RandomPatchFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureRandomPatchConfiguration;)Z place
net/minecraft/server/WorldGenFeatureRandomPatchConfiguration net/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration
	a stateProvider
	b blockPlacer
	c whitelist
	d blacklist
	f tries
	g xspread
	h yspread
	i zspread
	j canReplace
	k project
	l needWater
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureRandomPatchConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/WorldGenFeatureRandomScattered net/minecraft/world/level/levelgen/feature/RandomScatteredFeature
	a (Lnet/minecraft/server/BiomeManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;IILnet/minecraft/server/BiomeBase;)Z isFeatureChunk
	a (Lnet/minecraft/server/ChunkGenerator;)I getSpacing
	a (Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;IIII)Lnet/minecraft/server/ChunkCoordIntPair; getPotentialFeatureChunkFromLocationWithOffset
	b (Lnet/minecraft/server/ChunkGenerator;)I getSeparation
	getSeed ()I getRandomSalt
net/minecraft/server/WorldGenFeatureReplaceBlock net/minecraft/world/level/levelgen/feature/ReplaceBlockFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureReplaceBlockConfiguration;)Z place
net/minecraft/server/WorldGenFeatureReplaceBlockConfiguration net/minecraft/world/level/levelgen/feature/configurations/ReplaceBlockConfiguration
	a target
	b state
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureReplaceBlockConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/WorldGenFeatureSeaGrass net/minecraft/world/level/levelgen/feature/SeagrassFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureSeaGrassConfiguration;)Z place
net/minecraft/server/WorldGenFeatureSeaGrassConfiguration net/minecraft/world/level/levelgen/feature/configurations/SeagrassFeatureConfiguration
	a count
	b tallSeagrassProbability
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureSeaGrassConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/WorldGenFeatureSeaPickel net/minecraft/world/level/levelgen/feature/SeaPickleFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureKelpConfiguration;)Z place
net/minecraft/server/WorldGenFeatureShipwreck net/minecraft/world/level/levelgen/feature/ShipwreckFeature
	a ()Lcfi$a; getStartFactory
	a (Lnet/minecraft/server/ChunkGenerator;)I getSpacing
	b ()Ljava/lang/String; getFeatureName
	b (Lnet/minecraft/server/ChunkGenerator;)I getSeparation
	c ()I getLookupRange
	d ()I getRandomSalt
net/minecraft/server/WorldGenFeatureShipwreckConfiguration net/minecraft/world/level/levelgen/feature/configurations/ShipwreckConfiguration
	a isBeached
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureShipwreckConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/WorldGenFeatureSmallTree net/minecraft/world/level/levelgen/feature/AbstractSmallTreeFeature
	a (Lnet/minecraft/server/VirtualLevelWritable;IIILnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureSmallTreeConfigurationConfiguration;)Ljava/util/Optional; getProjectedOrigin
	a (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;ILnet/minecraft/server/BlockPosition;ILjava/util/Set;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/WorldGenFeatureSmallTreeConfigurationConfiguration;)V placeTrunk
net/minecraft/server/WorldGenFeatureSmallTreeConfigurationConfiguration net/minecraft/world/level/levelgen/feature/configurations/SmallTreeConfiguration
	a foliagePlacer
	b heightRandA
	c heightRandB
	d trunkHeight
	f trunkHeightRandom
	g trunkTopOffset
	h trunkTopOffsetRandom
	i foliageHeight
	j foliageHeightRandom
	k maxWaterDepth
	l ignoreVines
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureSmallTreeConfigurationConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/WorldGenFeatureStateProvider net/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider
	a type
	a (Ljava/util/Random;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getState
net/minecraft/server/WorldGenFeatureStateProviderForestFlower net/minecraft/world/level/levelgen/feature/stateproviders/ForestFlowerProvider
	b FLOWERS
	a (Lcom/mojang/datafixers/types/DynamicOps;)Ljava/lang/Object; serialize
	a (Ljava/util/Random;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getState
net/minecraft/server/WorldGenFeatureStateProviderPlainFlower net/minecraft/world/level/levelgen/feature/stateproviders/PlainFlowerProvider
	b LOW_NOISE_FLOWERS
	c HIGH_NOISE_FLOWERS
	a (Lcom/mojang/datafixers/types/DynamicOps;)Ljava/lang/Object; serialize
	a (Ljava/util/Random;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getState
net/minecraft/server/WorldGenFeatureStateProviderRotatedBlock net/minecraft/world/level/levelgen/feature/stateproviders/RotatedBlockProvider
	b block
	a (Lcom/mojang/datafixers/types/DynamicOps;)Ljava/lang/Object; serialize
	a (Ljava/util/Random;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getState
net/minecraft/server/WorldGenFeatureStateProviderSimpl net/minecraft/world/level/levelgen/feature/stateproviders/SimpleStateProvider
	b state
	a (Lcom/mojang/datafixers/types/DynamicOps;)Ljava/lang/Object; serialize
	a (Ljava/util/Random;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getState
net/minecraft/server/WorldGenFeatureStateProviderWeighted net/minecraft/world/level/levelgen/feature/stateproviders/WeightedStateProvider
	b weightedList
	a (Lcom/mojang/datafixers/types/DynamicOps;)Ljava/lang/Object; serialize
	a (Ljava/util/Random;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/IBlockData; getState
	a (Lnet/minecraft/server/IBlockData;I)Lnet/minecraft/server/WorldGenFeatureStateProviderWeighted; add
net/minecraft/server/WorldGenFeatureStateProviders net/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType
	a SIMPLE_STATE_PROVIDER
	b WEIGHTED_STATE_PROVIDER
	c PLAIN_FLOWER_PROVIDER
	d FOREST_FLOWER_PROVIDER
	e deserializer
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureStateProvider; deserialize
	a (Ljava/lang/String;Ljava/util/function/Function;)Lnet/minecraft/server/WorldGenFeatureStateProviders; register
net/minecraft/server/WorldGenFeatureStructurePieceType net/minecraft/world/level/levelgen/feature/StructurePieceType
	A STRONGHOLD_PORTAL_ROOM
	B STRONGHOLD_PRISON_HALL
	C STRONGHOLD_RIGHT_TURN
	D STRONGHOLD_ROOM_CROSSING
	E STRONGHOLD_STAIRS_DOWN
	F STRONGHOLD_START
	G STRONGHOLD_STRAIGHT
	H STRONGHOLD_STRAIGHT_STAIRS_DOWN
	I JUNGLE_PYRAMID_PIECE
	J OCEAN_RUIN
	K IGLOO
	L SWAMPLAND_HUT
	M DESERT_PYRAMID_PIECE
	N OCEAN_MONUMENT_BUILDING
	O OCEAN_MONUMENT_CORE_ROOM
	P OCEAN_MONUMENT_DOUBLE_X_ROOM
	Q OCEAN_MONUMENT_DOUBLE_XY_ROOM
	R OCEAN_MONUMENT_DOUBLE_Y_ROOM
	S OCEAN_MONUMENT_DOUBLE_YZ_ROOM
	T OCEAN_MONUMENT_DOUBLE_Z_ROOM
	U OCEAN_MONUMENT_ENTRY_ROOM
	V OCEAN_MONUMENT_PENTHOUSE
	W OCEAN_MONUMENT_SIMPLE_ROOM
	X OCEAN_MONUMENT_SIMPLE_TOP_ROOM
	Y OCEAN_MONUMENT_WING_ROOM
	Z END_CITY_PIECE
	a MINE_SHAFT_CORRIDOR
	aa WOODLAND_MANSION_PIECE
	ab BURIED_TREASURE_PIECE
	ac SHIPWRECK_PIECE
	b MINE_SHAFT_CROSSING
	c MINE_SHAFT_ROOM
	d MINE_SHAFT_STAIRS
	e PILLAGER_OUTPOST
	f VILLAGE
	g NETHER_FORTRESS_BRIDGE_CROSSING
	h NETHER_FORTRESS_BRIDGE_END_FILLER
	i NETHER_FORTRESS_BRIDGE_STRAIGHT
	j NETHER_FORTRESS_CASTLE_CORRIDOR_STAIRS
	k NETHER_FORTRESS_CASTLE_CORRIDOR_T_BALCONY
	l NETHER_FORTRESS_CASTLE_ENTRANCE
	m NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_CROSSING
	n NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_LEFT_TURN
	o NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR
	p NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_RIGHT_TURN
	q NETHER_FORTRESS_CASTLE_STALK_ROOM
	r NETHER_FORTRESS_MONSTER_THRONE
	s NETHER_FORTRESS_ROOM_CROSSING
	t NETHER_FORTRESS_STAIRS_ROOM
	u NETHER_FORTRESS_START
	v STRONGHOLD_CHEST_CORRIDOR
	w STRONGHOLD_FILLER_CORRIDOR
	x STRONGHOLD_FIVE_CROSSING
	y STRONGHOLD_LEFT_TURN
	z STRONGHOLD_LIBRARY
	a (Lnet/minecraft/server/WorldGenFeatureStructurePieceType;Ljava/lang/String;)Lnet/minecraft/server/WorldGenFeatureStructurePieceType; setPieceId
net/minecraft/server/WorldGenFeatureSwampHut net/minecraft/world/level/levelgen/feature/SwamplandHutFeature
	a SWAMPHUT_ENEMIES
	aq SWAMPHUT_ANIMALS
	a ()Lcfi$a; getStartFactory
	b ()Ljava/lang/String; getFeatureName
	c ()I getLookupRange
	c (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)Z isSwamphut
	d ()I getRandomSalt
	e ()Ljava/util/List; getSpecialEnemies
	f ()Ljava/util/List; getSpecialAnimals
net/minecraft/server/WorldGenFeatureTree net/minecraft/world/level/levelgen/feature/treedecorators/TreeDecorator
	a type
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Lnet/minecraft/server/StructureBoundingBox;)V place
	a (Lnet/minecraft/server/IWorldWriter;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockStateBoolean;Ljava/util/Set;Lnet/minecraft/server/StructureBoundingBox;)V placeVine
	a (Lnet/minecraft/server/IWorldWriter;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Ljava/util/Set;Lnet/minecraft/server/StructureBoundingBox;)V setBlock
net/minecraft/server/WorldGenFeatureTreeAlterGround net/minecraft/world/level/levelgen/feature/treedecorators/AlterGroundDecorator
	b provider
	a (Lcom/mojang/datafixers/types/DynamicOps;)Ljava/lang/Object; serialize
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Lnet/minecraft/server/StructureBoundingBox;)V place
	a (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;)V placeCircle
	b (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;)V placeBlockAt
net/minecraft/server/WorldGenFeatureTreeBeehive net/minecraft/world/level/levelgen/feature/treedecorators/BeehiveDecorator
	b probability
	a (Lcom/mojang/datafixers/types/DynamicOps;)Ljava/lang/Object; serialize
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Lnet/minecraft/server/StructureBoundingBox;)V place
net/minecraft/server/WorldGenFeatureTreeCocoa net/minecraft/world/level/levelgen/feature/treedecorators/CocoaDecorator
	b probability
	a (Lcom/mojang/datafixers/types/DynamicOps;)Ljava/lang/Object; serialize
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Lnet/minecraft/server/StructureBoundingBox;)V place
net/minecraft/server/WorldGenFeatureTreeConfiguration net/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration
	m trunkProvider
	n leavesProvider
	o decorators
	p baseHeight
	q fromSapling
	a ()V setFromSapling
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
	b (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureTreeConfiguration; deserialize
net/minecraft/server/WorldGenFeatureTreeVineLeaves net/minecraft/world/level/levelgen/feature/treedecorators/LeaveVineDecorator
	a (Lcom/mojang/datafixers/types/DynamicOps;)Ljava/lang/Object; serialize
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Lnet/minecraft/server/StructureBoundingBox;)V place
	a (Lnet/minecraft/server/VirtualLevelWritable;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/BlockStateBoolean;Ljava/util/Set;Lnet/minecraft/server/StructureBoundingBox;)V addHangingVine
net/minecraft/server/WorldGenFeatureTreeVineTrunk net/minecraft/world/level/levelgen/feature/treedecorators/TrunkVineDecorator
	a (Lcom/mojang/datafixers/types/DynamicOps;)Ljava/lang/Object; serialize
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Lnet/minecraft/server/StructureBoundingBox;)V place
net/minecraft/server/WorldGenFeatureTrees net/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType
	a TRUNK_VINE
	b LEAVE_VINE
	c COCOA
	d BEEHIVE
	e ALTER_GROUND
	f deserializer
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureTree; deserialize
	a (Ljava/lang/String;Ljava/util/function/Function;)Lnet/minecraft/server/WorldGenFeatureTrees; register
net/minecraft/server/WorldGenFeatureVillageConfiguration net/minecraft/world/level/levelgen/feature/configurations/VillageConfiguration
	a startPool
	b size
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureVillageConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/WorldGenFeatureVillagePlain net/minecraft/world/level/levelgen/feature/PlainVillagePools
	a ()V bootstrap
net/minecraft/server/WorldGenFeatureVillageSavanna net/minecraft/world/level/levelgen/feature/SavannaVillagePools
	a ()V bootstrap
net/minecraft/server/WorldGenFeatureVillageSnowy net/minecraft/world/level/levelgen/feature/SnowyVillagePools
	a ()V bootstrap
net/minecraft/server/WorldGenFeatureVillageTaiga net/minecraft/world/level/levelgen/feature/TaigaVillagePools
	a ()V bootstrap
net/minecraft/server/WorldGenFlatLayerInfo net/minecraft/world/level/levelgen/flat/FlatLayerInfo
	a blockState
	b height
	c start
	a ()I getHeight
	a (I)V setStart
	b ()Lnet/minecraft/server/IBlockData; getBlockState
	c ()I getStart
net/minecraft/server/WorldGenFlowers net/minecraft/world/level/levelgen/feature/AbstractFlowerFeature
	a (Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Lnet/minecraft/server/BlockPosition; getPos
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z isValid
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/WorldGenFeatureConfiguration;)I getCount
	b (Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Lnet/minecraft/server/IBlockData; getRandomFlower
net/minecraft/server/WorldGenFoilagePlacer net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer
	a radius
	b radiusRandom
	c type
	a (IIII)I getTreeRadiusForHeight
	a (Lcom/mojang/datafixers/types/DynamicOps;)Ljava/lang/Object; serialize
	a (Ljava/util/Random;IIIII)Z shouldSkipLocation
	a (Ljava/util/Random;IILnet/minecraft/server/WorldGenFeatureSmallTreeConfigurationConfiguration;)I foliageRadius
	a (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureSmallTreeConfigurationConfiguration;Ljava/util/Set;)V placeLeaf
	a (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureSmallTreeConfigurationConfiguration;IIILnet/minecraft/server/BlockPosition;Ljava/util/Set;)V createFoliage
	a (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureSmallTreeConfigurationConfiguration;ILnet/minecraft/server/BlockPosition;IILjava/util/Set;)V placeLeavesRow
net/minecraft/server/WorldGenFoilagePlacerAcacia net/minecraft/world/level/levelgen/feature/foliageplacers/AcaciaFoliagePlacer
	a (IIII)I getTreeRadiusForHeight
	a (Ljava/util/Random;IIIII)Z shouldSkipLocation
	a (Ljava/util/Random;IILnet/minecraft/server/WorldGenFeatureSmallTreeConfigurationConfiguration;)I foliageRadius
	a (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureSmallTreeConfigurationConfiguration;IIILnet/minecraft/server/BlockPosition;Ljava/util/Set;)V createFoliage
net/minecraft/server/WorldGenFoilagePlacerBlob net/minecraft/world/level/levelgen/feature/foliageplacers/BlobFoliagePlacer
	a (IIII)I getTreeRadiusForHeight
	a (Ljava/util/Random;IIIII)Z shouldSkipLocation
	a (Ljava/util/Random;IILnet/minecraft/server/WorldGenFeatureSmallTreeConfigurationConfiguration;)I foliageRadius
	a (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureSmallTreeConfigurationConfiguration;IIILnet/minecraft/server/BlockPosition;Ljava/util/Set;)V createFoliage
net/minecraft/server/WorldGenFoilagePlacerPine net/minecraft/world/level/levelgen/feature/foliageplacers/PineFoliagePlacer
	a (IIII)I getTreeRadiusForHeight
	a (Ljava/util/Random;IIIII)Z shouldSkipLocation
	a (Ljava/util/Random;IILnet/minecraft/server/WorldGenFeatureSmallTreeConfigurationConfiguration;)I foliageRadius
	a (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureSmallTreeConfigurationConfiguration;IIILnet/minecraft/server/BlockPosition;Ljava/util/Set;)V createFoliage
net/minecraft/server/WorldGenFoilagePlacerSpruce net/minecraft/world/level/levelgen/feature/foliageplacers/SpruceFoliagePlacer
	a (IIII)I getTreeRadiusForHeight
	a (Ljava/util/Random;IIIII)Z shouldSkipLocation
	a (Ljava/util/Random;IILnet/minecraft/server/WorldGenFeatureSmallTreeConfigurationConfiguration;)I foliageRadius
	a (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureSmallTreeConfigurationConfiguration;IIILnet/minecraft/server/BlockPosition;Ljava/util/Set;)V createFoliage
net/minecraft/server/WorldGenFoilagePlacers net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType
	a BLOB_FOLIAGE_PLACER
	b SPRUCE_FOLIAGE_PLACER
	c PINE_FOLIAGE_PLACER
	d ACACIA_FOLIAGE_PLACER
	e deserializer
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFoilagePlacer; deserialize
	a (Ljava/lang/String;Ljava/util/function/Function;)Lnet/minecraft/server/WorldGenFoilagePlacers; register
net/minecraft/server/WorldGenForestTree net/minecraft/world/level/levelgen/feature/DarkOakFeature
	a (Lnet/minecraft/server/VirtualLevelReadable;Lnet/minecraft/server/BlockPosition;I)Z canPlaceTreeOfHeight
	a (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Ljava/util/Set;Ljava/util/Set;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/WorldGenFeatureTreeConfiguration;)Z doPlace
	a (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Ljava/util/Set;Ljava/util/Set;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/WorldGenMegaTreeConfiguration;)Z doPlace
net/minecraft/server/WorldGenFossils net/minecraft/world/level/levelgen/feature/FossilFeature
	a SPINE_1
	aA SKULL_4
	aB SKULL_1_COAL
	aC SKULL_2_COAL
	aD SKULL_3_COAL
	aE SKULL_4_COAL
	aF fossils
	aG fossilsCoal
	aq SPINE_2
	ar SPINE_3
	as SPINE_4
	at SPINE_1_COAL
	au SPINE_2_COAL
	av SPINE_3_COAL
	aw SPINE_4_COAL
	ax SKULL_1
	ay SKULL_2
	az SKULL_3
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z place
net/minecraft/server/WorldGenGroundBush net/minecraft/world/level/levelgen/feature/GroundBushFeature
	a (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Ljava/util/Set;Ljava/util/Set;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/WorldGenFeatureTreeConfiguration;)Z doPlace
net/minecraft/server/WorldGenHugeMushroomBrown net/minecraft/world/level/levelgen/feature/HugeBrownMushroomFeature
	a (IIII)I getTreeRadiusForHeight
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/BlockPosition$MutableBlockPosition;Lnet/minecraft/server/WorldGenFeatureMushroomConfiguration;)V makeCap
net/minecraft/server/WorldGenHugeMushroomRed net/minecraft/world/level/levelgen/feature/HugeRedMushroomFeature
	a (IIII)I getTreeRadiusForHeight
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/BlockPosition$MutableBlockPosition;Lnet/minecraft/server/WorldGenFeatureMushroomConfiguration;)V makeCap
net/minecraft/server/WorldGenIglooPiece net/minecraft/world/level/levelgen/structure/IglooPieces
	a STRUCTURE_LOCATION_IGLOO
	b STRUCTURE_LOCATION_LADDER
	c STRUCTURE_LOCATION_LABORATORY
	d PIVOTS
	e OFFSETS
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Ljava/util/List;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)V addPieces
net/minecraft/server/WorldGenJunglePyramidPiece net/minecraft/world/level/levelgen/structure/JunglePyramidPiece
	e placedMainChest
	f placedHiddenChest
	g placedTrap1
	h placedTrap2
	i STONE_SELECTOR
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
net/minecraft/server/WorldGenJungleTree net/minecraft/world/level/levelgen/feature/MegaJungleTreeFeature
	a (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Ljava/util/Set;Ljava/util/Set;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/WorldGenFeatureTreeConfiguration;)Z doPlace
	a (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Ljava/util/Set;Ljava/util/Set;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/WorldGenMegaTreeConfiguration;)Z doPlace
	c (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;ILjava/util/Set;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/WorldGenFeatureTreeConfiguration;)V createCrown
net/minecraft/server/WorldGenLakes net/minecraft/world/level/levelgen/feature/LakeFeature
	a AIR
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureLakeConfiguration;)Z place
net/minecraft/server/WorldGenLightStone1 net/minecraft/world/level/levelgen/feature/GlowstoneFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z place
net/minecraft/server/WorldGenLiquids net/minecraft/world/level/levelgen/feature/SpringFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureHellFlowingLavaConfiguration;)Z place
net/minecraft/server/WorldGenMegaTree net/minecraft/world/level/levelgen/feature/MegaPineTreeFeature
	a (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;IIIILjava/util/Set;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/WorldGenMegaTreeConfiguration;)V createCrown
	a (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Ljava/util/Set;Ljava/util/Set;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/WorldGenFeatureTreeConfiguration;)Z doPlace
	a (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Ljava/util/Set;Ljava/util/Set;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/WorldGenMegaTreeConfiguration;)Z doPlace
net/minecraft/server/WorldGenMegaTreeAbstract net/minecraft/world/level/levelgen/feature/MegaTreeFeature
	a (Ljava/util/Random;Lnet/minecraft/server/WorldGenMegaTreeConfiguration;)I calcTreeHeigth
	a (Lnet/minecraft/server/VirtualLevelReadable;Lnet/minecraft/server/BlockPosition;I)Z checkIsFree
	a (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;ILjava/util/Set;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/WorldGenFeatureTreeConfiguration;)V placeDoubleTrunkLeaves
	a (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;ILjava/util/Set;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/WorldGenMegaTreeConfiguration;)V placeTrunk
	a (Lnet/minecraft/server/VirtualLevelWritable;Lnet/minecraft/server/BlockPosition;I)Z prepareTree
	b (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;ILjava/util/Set;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/WorldGenFeatureTreeConfiguration;)V placeSingleTrunkLeaves
	b (Lnet/minecraft/server/VirtualLevelWritable;Lnet/minecraft/server/BlockPosition;)Z makeDirtFloor
net/minecraft/server/WorldGenMegaTreeConfiguration net/minecraft/world/level/levelgen/feature/configurations/MegaTreeConfiguration
	a heightInterval
	b crownHeight
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenMegaTreeConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/WorldGenMegaTreeProvider net/minecraft/world/level/block/grower/AbstractMegaTreeGrower
	a (Ljava/util/Random;)Lnet/minecraft/server/WorldGenFeatureConfigured; getConfiguredMegaFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Ljava/util/Random;)Z growTree
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Ljava/util/Random;II)Z placeMega
	a (Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/BlockPosition;II)Z isTwoByTwoSapling
net/minecraft/server/WorldGenMegaTreeProviderDarkOak net/minecraft/world/level/block/grower/DarkOakTreeGrower
	a (Ljava/util/Random;)Lnet/minecraft/server/WorldGenFeatureConfigured; getConfiguredMegaFeature
	b (Ljava/util/Random;)Lnet/minecraft/server/WorldGenFeatureConfigured; getConfiguredFeature
net/minecraft/server/WorldGenMegaTreeProviderJungle net/minecraft/world/level/block/grower/JungleTreeGrower
	a (Ljava/util/Random;)Lnet/minecraft/server/WorldGenFeatureConfigured; getConfiguredMegaFeature
	b (Ljava/util/Random;)Lnet/minecraft/server/WorldGenFeatureConfigured; getConfiguredFeature
net/minecraft/server/WorldGenMinable net/minecraft/world/level/levelgen/feature/OreFeature
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureOreConfiguration;DDDDDDIIIII)Z doPlace
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureOreConfiguration;)Z place
net/minecraft/server/WorldGenMineshaft net/minecraft/world/level/levelgen/feature/MineshaftFeature
	a ()Lcfi$a; getStartFactory
	a (Lnet/minecraft/server/BiomeManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;IILnet/minecraft/server/BiomeBase;)Z isFeatureChunk
	b ()Ljava/lang/String; getFeatureName
	c ()I getLookupRange
net/minecraft/server/WorldGenMineshaft$Type net/minecraft/world/level/levelgen/feature/MineshaftFeature$Type
	c BY_NAME
	d name
	e $VALUES
	a ()Ljava/lang/String; getName
	a (I)Lnet/minecraft/server/WorldGenMineshaft$Type; byId
	a (Ljava/lang/String;)Lnet/minecraft/server/WorldGenMineshaft$Type; byName
net/minecraft/server/WorldGenMineshaftConfiguration net/minecraft/world/level/levelgen/feature/configurations/MineshaftConfiguration
	a probability
	b type
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenMineshaftConfiguration; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
net/minecraft/server/WorldGenMineshaftPieces net/minecraft/world/level/levelgen/structure/MineShaftPieces
	a (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;ILnet/minecraft/server/WorldGenMineshaft$Type;)Lclf$c; createRandomShaftPiece
	b (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lclf$c; generateAndAddPiece
net/minecraft/server/WorldGenMineshaftPieces$WorldGenMineshaftCorridor net/minecraft/world/level/levelgen/structure/MineShaftPieces$MineShaftCorridor
	b hasRails
	c spiderCorridor
	d hasPlacedSpider
	e numSections
	a (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/StructureBoundingBox; findCorridorSize
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/StructureBoundingBox;IIIIILjava/util/Random;)V placeSupport
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/StructureBoundingBox;Ljava/util/Random;FIII)V placeCobWeb
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/StructureBoundingBox;Ljava/util/Random;IIILnet/minecraft/server/MinecraftKey;)Z createChest
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
net/minecraft/server/WorldGenMineshaftPieces$WorldGenMineshaftCross net/minecraft/world/level/levelgen/structure/MineShaftPieces$MineShaftCrossing
	b direction
	c isTwoFloored
	a (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/StructureBoundingBox; findCrossing
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/StructureBoundingBox;IIII)V placeSupportPillar
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
net/minecraft/server/WorldGenMineshaftPieces$WorldGenMineshaftRoom net/minecraft/world/level/levelgen/structure/MineShaftPieces$MineShaftRoom
	b childEntranceBoxes
	a (III)V move
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
net/minecraft/server/WorldGenMineshaftPieces$WorldGenMineshaftStairs net/minecraft/world/level/levelgen/structure/MineShaftPieces$MineShaftStairs
	a (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/StructureBoundingBox; findStairs
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
net/minecraft/server/WorldGenMonument net/minecraft/world/level/levelgen/feature/OceanMonumentFeature
	a MONUMENT_ENEMIES
	a ()Lcfi$a; getStartFactory
	a (Lnet/minecraft/server/BiomeManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;IILnet/minecraft/server/BiomeBase;)Z isFeatureChunk
	a (Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;IIII)Lnet/minecraft/server/ChunkCoordIntPair; getPotentialFeatureChunkFromLocationWithOffset
	b ()Ljava/lang/String; getFeatureName
	c ()I getLookupRange
	e ()Ljava/util/List; getSpecialEnemies
net/minecraft/server/WorldGenMonumentPieces net/minecraft/world/level/levelgen/structure/OceanMonumentPieces
net/minecraft/server/WorldGenMonumentPieces$IWorldGenMonumentPieceSelector net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$MonumentRoomFitter
	a (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker;Ljava/util/Random;)Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPiece; create
	a (Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker;)Z fits
net/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPiece net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentPiece
	a BASE_GRAY
	b BASE_LIGHT
	c BASE_BLACK
	d DOT_DECO_DATA
	e LAMP_BLOCK
	f FILL_BLOCK
	g FILL_KEEP
	h GRIDROOM_SOURCE_INDEX
	i GRIDROOM_TOP_CONNECT_INDEX
	j GRIDROOM_LEFTWING_CONNECT_INDEX
	k GRIDROOM_RIGHTWING_CONNECT_INDEX
	l roomDefinition
	a (I)I getRoomX
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/StructureBoundingBox;III)Z spawnElder
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/StructureBoundingBox;IIIIII)V generateWaterBox
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/StructureBoundingBox;IIIIIILnet/minecraft/server/IBlockData;)V generateBoxOnFillOnly
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/StructureBoundingBox;IIZ)V generateDefaultFloor
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	a (Lnet/minecraft/server/StructureBoundingBox;IIII)Z chunkIntersects
	b (I)I getRoomY
	b (III)I getRoomIndex
	c (I)I getRoomZ
net/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPiece1 net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$MonumentBuilding
	p sourceRoom
	q coreRoom
	r childPieces
	a (Ljava/util/Random;)Ljava/util/List; generateRoomGraph
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;)V generateEntranceArchs
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (ZILnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;)V generateWing
	b (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;)V generateEntranceWall
	c (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;)V generateRoofPiece
	d (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;)V generateLowerWall
	e (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;)V generateMiddleWall
	f (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;)V generateUpperWall
net/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPiece2 net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentCoreRoom
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
net/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPiece3 net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentDoubleXRoom
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
net/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPiece4 net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentDoubleXYRoom
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
net/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPiece5 net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentDoubleYRoom
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
net/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPiece6 net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentDoubleYZRoom
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
net/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPiece7 net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentDoubleZRoom
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
net/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPiece8 net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentWingRoom
	p mainDesign
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
net/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPieceEntry net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentEntryRoom
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
net/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPiecePenthouse net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentPenthouse
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
net/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPieceSelector1 net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$FitSimpleTopRoom
	a (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker;Ljava/util/Random;)Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPiece; create
	a (Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker;)Z fits
net/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPieceSelector2 net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$FitSimpleRoom
	a (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker;Ljava/util/Random;)Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPiece; create
	a (Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker;)Z fits
net/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPieceSelector3 net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$FitDoubleZRoom
	a (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker;Ljava/util/Random;)Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPiece; create
	a (Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker;)Z fits
net/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPieceSelector4 net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$FitDoubleYZRoom
	a (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker;Ljava/util/Random;)Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPiece; create
	a (Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker;)Z fits
net/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPieceSelector5 net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$FitDoubleYRoom
	a (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker;Ljava/util/Random;)Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPiece; create
	a (Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker;)Z fits
net/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPieceSelector6 net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$FitDoubleXYRoom
	a (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker;Ljava/util/Random;)Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPiece; create
	a (Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker;)Z fits
net/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPieceSelector7 net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$FitDoubleXRoom
	a (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker;Ljava/util/Random;)Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPiece; create
	a (Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker;)Z fits
net/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPieceSimple net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentSimpleRoom
	p mainDesign
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
net/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentPieceSimpleT net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentSimpleTopRoom
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
net/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition
	a index
	b connections
	c hasOpening
	d claimed
	e isSource
	f scanIndex
	a ()V updateOpenings
	a (I)Z findSource
	a (Lnet/minecraft/server/EnumDirection;Lnet/minecraft/server/WorldGenMonumentPieces$WorldGenMonumentStateTracker;)V setConnection
	b ()Z isSpecial
	c ()I countOpenings
net/minecraft/server/WorldGenMushrooms net/minecraft/world/level/levelgen/feature/AbstractHugeMushroomFeature
	a (IIII)I getTreeRadiusForHeight
	a (Ljava/util/Random;)I getTreeHeight
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/BlockPosition$MutableBlockPosition;Lnet/minecraft/server/WorldGenFeatureMushroomConfiguration;)V makeCap
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureMushroomConfiguration;ILnet/minecraft/server/BlockPosition$MutableBlockPosition;)V placeTrunk
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;ILnet/minecraft/server/BlockPosition$MutableBlockPosition;Lnet/minecraft/server/WorldGenFeatureMushroomConfiguration;)Z isValidPosition
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureMushroomConfiguration;)Z place
net/minecraft/server/WorldGenNether net/minecraft/world/level/levelgen/feature/NetherFortressFeature
	a FORTRESS_ENEMIES
	a ()Lcfi$a; getStartFactory
	a (Lnet/minecraft/server/BiomeManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;IILnet/minecraft/server/BiomeBase;)Z isFeatureChunk
	b ()Ljava/lang/String; getFeatureName
	c ()I getLookupRange
	e ()Ljava/util/List; getSpecialEnemies
net/minecraft/server/WorldGenNetherPieces net/minecraft/world/level/levelgen/structure/NetherBridgePieces
	a BRIDGE_PIECE_WEIGHTS
	b CASTLE_PIECE_WEIGHTS
	b (Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPieceWeight;Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece; findAndCreateBridgePieceFactory
net/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece net/minecraft/world/level/levelgen/structure/NetherBridgePieces$NetherBridgePiece
	a (Ljava/util/List;)I updatePieceWeight
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;III)V generateLightPostFacingRight
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;IIIII)V generateLightPost
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	a (Lnet/minecraft/server/StructureBoundingBox;)Z isOkBox
	a (Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece15;Ljava/util/List;Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece; generatePiece
	a (Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece15;Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;IZ)Lnet/minecraft/server/StructurePiece; generateAndAddPiece
	a (Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece15;Ljava/util/List;Ljava/util/Random;IIZ)Lnet/minecraft/server/StructurePiece; generateChildForward
	b (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;III)V generateLightPostFacingLeft
	b (Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece15;Ljava/util/List;Ljava/util/Random;IIZ)Lnet/minecraft/server/StructurePiece; generateChildLeft
	c (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;III)V generateLightPostFacingUp
	c (Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece15;Ljava/util/List;Ljava/util/Random;IIZ)Lnet/minecraft/server/StructurePiece; generateChildRight
	d (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;III)V generateLightPostFacingDown
net/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece1 net/minecraft/world/level/levelgen/structure/NetherBridgePieces$BridgeCrossing
	a (Ljava/util/List;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece1; createPiece
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
net/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece10 net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleSmallCorridorRightTurnPiece
	a isNeedingChest
	a (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece10; createPiece
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
net/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece11 net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleStalkRoom
	a (Ljava/util/List;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece11; createPiece
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
net/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece12 net/minecraft/world/level/levelgen/structure/NetherBridgePieces$MonsterThrone
	a hasPlacedSpawner
	a (Ljava/util/List;IIIILnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece12; createPiece
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
net/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece13 net/minecraft/world/level/levelgen/structure/NetherBridgePieces$RoomCrossing
	a (Ljava/util/List;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece13; createPiece
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
net/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece14 net/minecraft/world/level/levelgen/structure/NetherBridgePieces$StairsRoom
	a (Ljava/util/List;IIIILnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece14; createPiece
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
net/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece15 net/minecraft/world/level/levelgen/structure/NetherBridgePieces$StartPiece
	a previousPiece
	b availableBridgePieces
	c availableCastlePieces
	d pendingChildren
net/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece2 net/minecraft/world/level/levelgen/structure/NetherBridgePieces$BridgeEndFiller
	a selfSeed
	a (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece2; createPiece
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
net/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece3 net/minecraft/world/level/levelgen/structure/NetherBridgePieces$BridgeStraight
	a (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece3; createPiece
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
net/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece4 net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleCorridorStairsPiece
	a (Ljava/util/List;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece4; createPiece
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
net/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece5 net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleCorridorTBalconyPiece
	a (Ljava/util/List;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece5; createPiece
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
net/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece6 net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleEntrance
	a (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece6; createPiece
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
net/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece7 net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleSmallCorridorCrossingPiece
	a (Ljava/util/List;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece7; createPiece
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
net/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece8 net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleSmallCorridorLeftTurnPiece
	a isNeedingChest
	a (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece8; createPiece
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
net/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece9 net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleSmallCorridorPiece
	a (Ljava/util/List;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenNetherPieces$WorldGenNetherPiece9; createPiece
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
net/minecraft/server/WorldGenNetherPieces$WorldGenNetherPieceWeight net/minecraft/world/level/levelgen/structure/NetherBridgePieces$PieceWeight
	a pieceClass
	b weight
	c placeCount
	d maxPlaceCount
	e allowInRow
	a ()Z isValid
	a (I)Z doPlace
net/minecraft/server/WorldGenPackedIce1 net/minecraft/world/level/levelgen/feature/IcePatchFeature
	a block
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureRadiusConfiguration;)Z place
net/minecraft/server/WorldGenPackedIce2 net/minecraft/world/level/levelgen/feature/IceSpikeFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z place
net/minecraft/server/WorldGenScatteredPiece net/minecraft/world/level/levelgen/structure/ScatteredFeaturePiece
	a width
	b height
	c depth
	d heightPosition
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/StructureBoundingBox;I)Z updateAverageGroundHeight
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
net/minecraft/server/WorldGenShipwreck net/minecraft/world/level/levelgen/structure/ShipwreckPieces
	a PIVOT
	b STRUCTURE_LOCATION_BEACHED
	c STRUCTURE_LOCATION_OCEAN
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Ljava/util/List;Ljava/util/Random;Lnet/minecraft/server/WorldGenFeatureShipwreckConfiguration;)V addPieces
net/minecraft/server/WorldGenStage net/minecraft/world/level/levelgen/GenerationStep
net/minecraft/server/WorldGenStage$Decoration net/minecraft/world/level/levelgen/GenerationStep$Decoration
	i BY_NAME
	j name
	k $VALUES
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lnet/minecraft/server/WorldGenStage$Decoration; byName
net/minecraft/server/WorldGenStage$Features net/minecraft/world/level/levelgen/GenerationStep$Carving
	c BY_NAME
	d name
	e $VALUES
	a ()Ljava/lang/String; getName
	a (Ljava/lang/String;)Lnet/minecraft/server/WorldGenStage$Features; byName
net/minecraft/server/WorldGenStronghold net/minecraft/world/level/levelgen/feature/StrongholdFeature
	a isSpotSelected
	aq strongholdPos
	ar discoveredStarts
	as currentSeed
	a ()Lcfi$a; getStartFactory
	a (Lnet/minecraft/server/BiomeManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;IILnet/minecraft/server/BiomeBase;)Z isFeatureChunk
	a (Lnet/minecraft/server/ChunkGenerator;)V generatePositions
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/BlockPosition;IZ)Lnet/minecraft/server/BlockPosition; getNearestGeneratedFeature
	b ()Ljava/lang/String; getFeatureName
	c ()I getLookupRange
	d ()V reset
net/minecraft/server/WorldGenStrongholdPieces net/minecraft/world/level/levelgen/structure/StrongholdPieces
	a STRONGHOLD_PIECE_WEIGHTS
	b currentPieces
	c imposedPiece
	d totalWeight
	e SMOOTH_STONE_SELECTOR
	a ()V resetPieces
	a (Ljava/lang/Class;Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdPiece; findAndCreatePieceFactory
	b (Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdStart;Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdPiece; generatePieceFromSmallDoor
	c ()Z updatePieceWeight
	c (Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdStart;Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/StructurePiece; generateAndAddPiece
net/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdChestCorridor net/minecraft/world/level/levelgen/structure/StrongholdPieces$ChestCorridor
	a hasPlacedChest
	a (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdChestCorridor; createPiece
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
net/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdCorridor net/minecraft/world/level/levelgen/structure/StrongholdPieces$FillerCorridor
	a steps
	a (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;)Lnet/minecraft/server/StructureBoundingBox; findPieceBox
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
net/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdCrossing net/minecraft/world/level/levelgen/structure/StrongholdPieces$FiveCrossing
	a leftLow
	b leftHigh
	c rightLow
	e rightHigh
	a (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdCrossing; createPiece
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
net/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdLeftTurn net/minecraft/world/level/levelgen/structure/StrongholdPieces$LeftTurn
	a (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdLeftTurn; createPiece
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
net/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdLibrary net/minecraft/world/level/levelgen/structure/StrongholdPieces$Library
	a isTall
	a (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdLibrary; createPiece
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
net/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdPiece net/minecraft/world/level/levelgen/structure/StrongholdPieces$StrongholdPiece
	d entryDoor
	a (Ljava/util/Random;)Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdPiece$WorldGenStrongholdDoorType; randomSmallDoor
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdPiece$WorldGenStrongholdDoorType;III)V generateSmallDoor
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	a (Lnet/minecraft/server/StructureBoundingBox;)Z isOkBox
	a (Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdStart;Ljava/util/List;Ljava/util/Random;II)Lnet/minecraft/server/StructurePiece; generateSmallDoorChildForward
	b (Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdStart;Ljava/util/List;Ljava/util/Random;II)Lnet/minecraft/server/StructurePiece; generateSmallDoorChildLeft
	c (Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdStart;Ljava/util/List;Ljava/util/Random;II)Lnet/minecraft/server/StructurePiece; generateSmallDoorChildRight
net/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdPiece$WorldGenStrongholdDoorType net/minecraft/world/level/levelgen/structure/StrongholdPieces$StrongholdPiece$SmallDoorType
	e $VALUES
net/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdPieceWeight net/minecraft/world/level/levelgen/structure/StrongholdPieces$PieceWeight
	a pieceClass
	b weight
	c placeCount
	d maxPlaceCount
	a ()Z isValid
	a (I)Z doPlace
net/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdPortalRoom net/minecraft/world/level/levelgen/structure/StrongholdPieces$PortalRoom
	a hasPlacedSpawner
	a (Ljava/util/List;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdPortalRoom; createPiece
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
net/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdPrison net/minecraft/world/level/levelgen/structure/StrongholdPieces$PrisonHall
	a (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdPrison; createPiece
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
net/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdRightTurn net/minecraft/world/level/levelgen/structure/StrongholdPieces$RightTurn
	a (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdRightTurn; createPiece
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
net/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdRoomCrossing net/minecraft/world/level/levelgen/structure/StrongholdPieces$RoomCrossing
	a type
	a (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdRoomCrossing; createPiece
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
net/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdStairs net/minecraft/world/level/levelgen/structure/StrongholdPieces$Straight
	a leftChild
	b rightChild
	a (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdStairs; createPiece
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
net/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdStairs2 net/minecraft/world/level/levelgen/structure/StrongholdPieces$StairsDown
	a isSource
	a (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdStairs2; createPiece
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
net/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdStairsStraight net/minecraft/world/level/levelgen/structure/StrongholdPieces$StraightStairsDown
	a (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/server/EnumDirection;I)Lnet/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdStairsStraight; createPiece
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/StructurePiece;Ljava/util/List;Ljava/util/Random;)V addChildren
net/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdStart net/minecraft/world/level/levelgen/structure/StrongholdPieces$StartPiece
	a previousPiece
	b portalRoomPiece
	c pendingChildren
	ac_ ()Lnet/minecraft/server/BlockPosition; getLocatorPosition
net/minecraft/server/WorldGenStrongholdPieces$WorldGenStrongholdStones net/minecraft/world/level/levelgen/structure/StrongholdPieces$SmoothStoneSelector
	a (Ljava/util/Random;IIIZ)V next
net/minecraft/server/WorldGenSurface net/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilder
	A CONFIG_OCEAN_SAND
	B CONFIG_FULL_SAND
	C CONFIG_BADLANDS
	D CONFIG_MYCELIUM
	E CONFIG_HELL
	F CONFIG_THEEND
	G DEFAULT
	H MOUNTAIN
	I SHATTERED_SAVANNA
	J GRAVELLY_MOUNTAIN
	K GIANT_TREE_TAIGA
	L SWAMP
	M BADLANDS
	N WOODED_BADLANDS
	O ERODED_BADLANDS
	P FROZEN_OCEAN
	Q NETHER
	R NOPE
	a configurationFactory
	f AIR
	g DIRT
	h GRASS_BLOCK
	i PODZOL
	j GRAVEL
	k STONE
	l COARSE_DIRT
	m SAND
	n RED_SAND
	o WHITE_TERRACOTTA
	p MYCELIUM
	q NETHERRACK
	r ENDSTONE
	s CONFIG_EMPTY
	t CONFIG_PODZOL
	u CONFIG_GRAVEL
	v CONFIG_GRASS
	w CONFIG_DIRT
	x CONFIG_STONE
	y CONFIG_COARSE_DIRT
	z CONFIG_DESERT
	a (J)V initNoise
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenSurfaceConfiguration; createSettings
	a (Ljava/lang/String;Lnet/minecraft/server/WorldGenSurface;)Lnet/minecraft/server/WorldGenSurface; register
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfiguration;)V apply
net/minecraft/server/WorldGenSurfaceComposite net/minecraft/world/level/levelgen/surfacebuilders/ConfiguredSurfaceBuilder
	a surfaceBuilder
	b config
	a ()Lnet/minecraft/server/WorldGenSurfaceConfiguration; getSurfaceBuilderConfiguration
	a (J)V initNoise
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenSurfaceComposite; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJ)V apply
net/minecraft/server/WorldGenSurfaceConfiguration net/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderConfiguration
	a ()Lnet/minecraft/server/IBlockData; getTopMaterial
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
	b ()Lnet/minecraft/server/IBlockData; getUnderMaterial
	c ()Lnet/minecraft/server/IBlockData; getUnderwaterMaterial
net/minecraft/server/WorldGenSurfaceConfigurationBase net/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderBaseConfiguration
	a topMaterial
	b underMaterial
	c underwaterMaterial
	a ()Lnet/minecraft/server/IBlockData; getTopMaterial
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenSurfaceConfigurationBase; deserialize
	a (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
	b ()Lnet/minecraft/server/IBlockData; getUnderMaterial
	c ()Lnet/minecraft/server/IBlockData; getUnderwaterMaterial
net/minecraft/server/WorldGenSurfaceDefaultBlock net/minecraft/world/level/levelgen/surfacebuilders/DefaultSurfaceBuilder
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfiguration;)V apply
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfigurationBase;)V apply
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;I)V apply
net/minecraft/server/WorldGenSurfaceEmpty net/minecraft/world/level/levelgen/surfacebuilders/NopeSurfaceBuilder
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfiguration;)V apply
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfigurationBase;)V apply
net/minecraft/server/WorldGenSurfaceExtremeHillMutated net/minecraft/world/level/levelgen/surfacebuilders/GravellyMountainSurfaceBuilder
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfiguration;)V apply
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfigurationBase;)V apply
net/minecraft/server/WorldGenSurfaceExtremeHills net/minecraft/world/level/levelgen/surfacebuilders/MountainSurfaceBuilder
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfiguration;)V apply
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfigurationBase;)V apply
net/minecraft/server/WorldGenSurfaceFrozenOcean net/minecraft/world/level/levelgen/surfacebuilders/FrozenOceanSurfaceBuilder
	S icebergNoise
	T icebergRoofNoise
	U seed
	a PACKED_ICE
	b SNOW_BLOCK
	c AIR
	d GRAVEL
	e ICE
	a (J)V initNoise
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfiguration;)V apply
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfigurationBase;)V apply
net/minecraft/server/WorldGenSurfaceMesa net/minecraft/world/level/levelgen/surfacebuilders/BadlandsSurfaceBuilder
	S WHITE_TERRACOTTA
	T ORANGE_TERRACOTTA
	U TERRACOTTA
	V YELLOW_TERRACOTTA
	W BROWN_TERRACOTTA
	X RED_TERRACOTTA
	Y LIGHT_GRAY_TERRACOTTA
	a clayBands
	b seed
	c pillarNoise
	d pillarRoofNoise
	e clayBandsOffsetNoise
	a (III)Lnet/minecraft/server/IBlockData; getBand
	a (J)V initNoise
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfiguration;)V apply
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfigurationBase;)V apply
	b (J)V generateBands
net/minecraft/server/WorldGenSurfaceMesaBryce net/minecraft/world/level/levelgen/surfacebuilders/ErodedBadlandsSurfaceBuilder
	S WHITE_TERRACOTTA
	T ORANGE_TERRACOTTA
	U TERRACOTTA
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfiguration;)V apply
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfigurationBase;)V apply
net/minecraft/server/WorldGenSurfaceMesaForest net/minecraft/world/level/levelgen/surfacebuilders/WoodedBadlandsSurfaceBuilder
	S WHITE_TERRACOTTA
	T ORANGE_TERRACOTTA
	U TERRACOTTA
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfiguration;)V apply
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfigurationBase;)V apply
net/minecraft/server/WorldGenSurfaceNether net/minecraft/world/level/levelgen/surfacebuilders/NetherSurfaceBuilder
	S SOUL_SAND
	a seed
	b decorationNoise
	c AIR
	d NETHERRACK
	e GRAVEL
	a (J)V initNoise
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfiguration;)V apply
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfigurationBase;)V apply
net/minecraft/server/WorldGenSurfaceSavannaMutated net/minecraft/world/level/levelgen/surfacebuilders/ShatteredSavanaSurfaceBuilder
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfiguration;)V apply
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfigurationBase;)V apply
net/minecraft/server/WorldGenSurfaceSwamp net/minecraft/world/level/levelgen/surfacebuilders/SwampSurfaceBuilder
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfiguration;)V apply
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfigurationBase;)V apply
net/minecraft/server/WorldGenSurfaceTaigaMega net/minecraft/world/level/levelgen/surfacebuilders/GiantTreeTaigaSurfaceBuilder
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfiguration;)V apply
	a (Ljava/util/Random;Lnet/minecraft/server/IChunkAccess;Lnet/minecraft/server/BiomeBase;IIIDLnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;IJLnet/minecraft/server/WorldGenSurfaceConfigurationBase;)V apply
net/minecraft/server/WorldGenTaigaStructure net/minecraft/world/level/levelgen/feature/BlockBlobFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureBlockOffsetConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
net/minecraft/server/WorldGenTreeAbstract net/minecraft/world/level/levelgen/feature/AbstractTreeFeature
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureTreeConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/StructureBoundingBox;Ljava/util/Set;Ljava/util/Set;)Lnet/minecraft/server/VoxelShapeDiscrete; updateLeaves
	a (Lnet/minecraft/server/IWorldWriter;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V setBlock
	a (Lnet/minecraft/server/IWorldWriter;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/StructureBoundingBox;)V setBlock
	a (Lnet/minecraft/server/VirtualLevelReadable;Lnet/minecraft/server/BlockPosition;)Z isFree
	a (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Ljava/util/Set;Ljava/util/Set;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/WorldGenFeatureTreeConfiguration;)Z doPlace
	a (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Ljava/util/Set;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/WorldGenFeatureTreeConfiguration;)Z placeLog
	a (Lnet/minecraft/server/VirtualLevelWritable;Lnet/minecraft/server/BlockPosition;)V setDirtAt
	a (Lwx;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)V simulate
	a (Lwx;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureTreeConfiguration;)V simulate
	b (Lnet/minecraft/server/IWorldWriter;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V setBlockKnownShape
	b (Lnet/minecraft/server/VirtualLevelReadable;Lnet/minecraft/server/BlockPosition;)Z isAir
	b (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Ljava/util/Set;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/WorldGenFeatureTreeConfiguration;)Z placeLeaf
	c (Lnet/minecraft/server/VirtualLevelReadable;Lnet/minecraft/server/BlockPosition;)Z isDirt
	d (Lnet/minecraft/server/VirtualLevelReadable;Lnet/minecraft/server/BlockPosition;)Z isVine
	e (Lnet/minecraft/server/VirtualLevelReadable;Lnet/minecraft/server/BlockPosition;)Z isBlockWater
	f (Lnet/minecraft/server/VirtualLevelReadable;Lnet/minecraft/server/BlockPosition;)Z isAirOrLeaves
	g (Lnet/minecraft/server/VirtualLevelReadable;Lnet/minecraft/server/BlockPosition;)Z isGrassOrDirt
	h (Lnet/minecraft/server/VirtualLevelReadable;Lnet/minecraft/server/BlockPosition;)Z isGrassOrDirtOrFarmland
	i (Lnet/minecraft/server/VirtualLevelReadable;Lnet/minecraft/server/BlockPosition;)Z isReplaceablePlant
net/minecraft/server/WorldGenTreeProvider net/minecraft/world/level/block/grower/AbstractTreeGrower
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Ljava/util/Random;)Z growTree
	b (Ljava/util/Random;)Lnet/minecraft/server/WorldGenFeatureConfigured; getConfiguredFeature
net/minecraft/server/WorldGenTreeProviderAcacia net/minecraft/world/level/block/grower/AcaciaTreeGrower
	b (Ljava/util/Random;)Lnet/minecraft/server/WorldGenFeatureConfigured; getConfiguredFeature
net/minecraft/server/WorldGenTreeProviderBirch net/minecraft/world/level/block/grower/BirchTreeGrower
	b (Ljava/util/Random;)Lnet/minecraft/server/WorldGenFeatureConfigured; getConfiguredFeature
net/minecraft/server/WorldGenTreeProviderOak net/minecraft/world/level/block/grower/OakTreeGrower
	b (Ljava/util/Random;)Lnet/minecraft/server/WorldGenFeatureConfigured; getConfiguredFeature
net/minecraft/server/WorldGenTreeProviderSpruce net/minecraft/world/level/block/grower/SpruceTreeGrower
	a (Ljava/util/Random;)Lnet/minecraft/server/WorldGenFeatureConfigured; getConfiguredMegaFeature
	b (Ljava/util/Random;)Lnet/minecraft/server/WorldGenFeatureConfigured; getConfiguredFeature
net/minecraft/server/WorldGenTrees net/minecraft/world/level/levelgen/feature/TreeFeature
	a (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Ljava/util/Set;Ljava/util/Set;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/WorldGenFeatureSmallTreeConfigurationConfiguration;)Z doPlace
	a (Lnet/minecraft/server/VirtualLevelWritable;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Ljava/util/Set;Ljava/util/Set;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/WorldGenFeatureTreeConfiguration;)Z doPlace
net/minecraft/server/WorldGenVillage net/minecraft/world/level/levelgen/feature/VillageFeature
	a ()Lcfi$a; getStartFactory
	a (Lnet/minecraft/server/BiomeManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;IILnet/minecraft/server/BiomeBase;)Z isFeatureChunk
	a (Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;IIII)Lnet/minecraft/server/ChunkCoordIntPair; getPotentialFeatureChunkFromLocationWithOffset
	b ()Ljava/lang/String; getFeatureName
	c ()I getLookupRange
	g ()Z supportsProjection
net/minecraft/server/WorldGenVines net/minecraft/world/level/levelgen/feature/VinesFeature
	a DIRECTIONS
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureEmptyConfiguration;)Z place
net/minecraft/server/WorldGenWitchHut net/minecraft/world/level/levelgen/structure/SwamplandHutPiece
	e spawnedWitch
	f spawnedCat
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/StructureBoundingBox;Lnet/minecraft/server/ChunkCoordIntPair;)Z postProcess
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/StructureBoundingBox;)V spawnCat
	a (Lnet/minecraft/server/NBTTagCompound;)V addAdditionalSaveData
net/minecraft/server/WorldGenWoodlandMansion net/minecraft/world/level/levelgen/feature/WoodlandMansionFeature
	a ()Lcfi$a; getStartFactory
	a (Lnet/minecraft/server/BiomeManager;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;IILnet/minecraft/server/BiomeBase;)Z isFeatureChunk
	a (Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;IIII)Lnet/minecraft/server/ChunkCoordIntPair; getPotentialFeatureChunkFromLocationWithOffset
	b ()Ljava/lang/String; getFeatureName
	c ()I getLookupRange
net/minecraft/server/WorldGenWoodlandMansionPieces net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces
	a (Lnet/minecraft/server/DefinedStructureManager;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EnumBlockRotation;Ljava/util/List;Ljava/util/Random;)V generateMansion
	a ([Ljava/lang/String;)V main
net/minecraft/server/WorldGenerator net/minecraft/world/level/levelgen/feature/Feature
	SPRING_FEATURE SPRING
	a configurationFactory
	ao STRUCTURES_REGISTRY
	ap NOISE_AFFECTING_FEATURES
	a (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureConfigured; configured
	a (Ljava/lang/String;Lnet/minecraft/server/WorldGenerator;)Lnet/minecraft/server/WorldGenerator; register
	a (Lnet/minecraft/server/Block;)Z isStone
	a (Lnet/minecraft/server/GeneratorAccess;Ljava/lang/String;Lnet/minecraft/server/BlockPosition;)Z isInsideStructure
	a (Lnet/minecraft/server/IWorldWriter;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;)V setBlock
	b (Lcom/mojang/datafixers/Dynamic;)Lnet/minecraft/server/WorldGenFeatureConfiguration; createSettings
	b (Lnet/minecraft/server/Block;)Z isDirt
	b (Lnet/minecraft/server/WorldGenFeatureConfiguration;)Lnet/minecraft/server/WorldGenFeatureConfigured; configured
	e ()Ljava/util/List; getSpecialEnemies
	f ()Ljava/util/List; getSpecialAnimals
	generate (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/WorldGenFeatureConfiguration;)Z place
net/minecraft/server/WorldLoadListener net/minecraft/server/level/progress/ChunkProgressListener
	a ()V start
	a (Lnet/minecraft/server/ChunkCoordIntPair;)V updateSpawnPos
	a (Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/ChunkStatus;)V onStatusChange
	b ()V stop
net/minecraft/server/WorldLoadListenerFactory net/minecraft/server/level/progress/ChunkProgressListenerFactory
net/minecraft/server/WorldLoadListenerLogger net/minecraft/server/level/progress/LoggerChunkProgressListener
	a LOGGER
	b maxCount
	c count
	d startTime
	e nextTickTime
	a ()V start
	a (Lnet/minecraft/server/ChunkCoordIntPair;)V updateSpawnPos
	a (Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/ChunkStatus;)V onStatusChange
	b ()V stop
	c ()I getProgress
net/minecraft/server/WorldMap net/minecraft/world/level/saveddata/maps/MapItemSavedData
	centerX x
	centerZ z
	humans carriedByPlayers
	i carriedBy
	l bannerMarkers
	m frameMarkers
	map dimension
	track trackingPosition
	a ()Ljava/util/Collection; getBanners
	a (DDI)V setOrigin
	a (IIIZZLnet/minecraft/server/DimensionManager;)V setProperties
	a (Lnet/minecraft/server/BlockPosition;I)V removedFromFrame
	a (Lnet/minecraft/server/EntityHuman;)Lnet/minecraft/server/WorldMap$WorldMapHumanTracker; getHoldingPlayer
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/ItemStack;)V tickCarriedBy
	a (Lnet/minecraft/server/GeneratorAccess;Lnet/minecraft/server/BlockPosition;)V toggleBanner
	a (Lnet/minecraft/server/IBlockAccess;II)V checkBanners
	a (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/IBlockAccess;Lnet/minecraft/server/EntityHuman;)Lnet/minecraft/server/Packet; getUpdatePacket
	a (Lnet/minecraft/server/MapIcon$Type;Lnet/minecraft/server/GeneratorAccess;Ljava/lang/String;DDDLnet/minecraft/server/IChatBaseComponent;)V addDecoration
	a (Lnet/minecraft/server/NBTTagCompound;)V load
	a (Lnet/minecraft/server/WorldMap;)V lockData
	b (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/NBTTagCompound; save
	decorateMap (Lnet/minecraft/server/ItemStack;Lnet/minecraft/server/BlockPosition;Ljava/lang/String;Lnet/minecraft/server/MapIcon$Type;)V addTargetDecoration
	flagDirty (II)V setDirty
net/minecraft/server/WorldMap$WorldMapHumanTracker net/minecraft/world/level/saveddata/maps/MapItemSavedData$HoldingPlayer
	b step
	d dirtyData
	e minDirtyX
	f minDirtyY
	g maxDirtyX
	h maxDirtyY
	i tick
	trackee player
	worldMap c
	a (II)V markDirty
	a (Lnet/minecraft/server/ItemStack;)Lnet/minecraft/server/Packet; nextUpdatePacket
net/minecraft/server/WorldMapFrame net/minecraft/world/level/saveddata/maps/MapFrame
	a pos
	b rotation
	c entityId
	a ()Lnet/minecraft/server/NBTTagCompound; save
	a (Lnet/minecraft/server/BlockPosition;)Ljava/lang/String; frameId
	a (Lnet/minecraft/server/NBTTagCompound;)Lnet/minecraft/server/WorldMapFrame; load
	b ()Lnet/minecraft/server/BlockPosition; getPos
	c ()I getRotation
	d ()I getEntityId
	e ()Ljava/lang/String; getId
net/minecraft/server/WorldNBTStorage net/minecraft/world/level/storage/LevelStorage
	a fixerUpper
	b LOGGER
	baseDir worldDir
	f levelId
	g structureManager
	a (Lnet/minecraft/server/EntityHuman;)V save
	b (Lnet/minecraft/server/EntityHuman;)Lnet/minecraft/server/NBTTagCompound; load
	e ()Ljava/lang/String; getLevelId
	f ()Lnet/minecraft/server/DefinedStructureManager; getStructureManager
	getDataFixer ()Lcom/mojang/datafixers/DataFixer; getFixerUpper
	getDirectory ()Ljava/io/File; getFolder
	getWorldData ()Lnet/minecraft/server/WorldData; prepareLevel
	h ()V initiateSession
	saveWorldData (Lnet/minecraft/server/WorldData;)V saveLevelData
	saveWorldData (Lnet/minecraft/server/WorldData;Lnet/minecraft/server/NBTTagCompound;)V saveLevelData
net/minecraft/server/WorldPersistentData net/minecraft/world/level/storage/DimensionDataStorage
	a LOGGER
	c fixerUpper
	d dataFolder
	data cache
	a ()V save
	a (Ljava/io/PushbackInputStream;)Z isGzip
	a (Ljava/lang/String;)Ljava/io/File; getDataFile
	a (Ljava/lang/String;I)Lnet/minecraft/server/NBTTagCompound; readTagFromDisk
	a (Ljava/util/function/Supplier;Ljava/lang/String;)Lnet/minecraft/server/PersistentBase; computeIfAbsent
	a (Lnet/minecraft/server/PersistentBase;)V set
	b (Ljava/util/function/Supplier;Ljava/lang/String;)Lnet/minecraft/server/PersistentBase; get
	c (Ljava/util/function/Supplier;Ljava/lang/String;)Lnet/minecraft/server/PersistentBase; readSavedData
net/minecraft/server/WorldProvider net/minecraft/world/level/dimension/Dimension
	a MOON_BRIGHTNESS_PER_PHASE
	b level
	c ultraWarm
	d hasCeiling
	e brightnessRamp
	f type
	g sunriseCol
	a ()F getCloudHeight
	a (FF)[F getSunriseColor
	a (I)F getBrightness
	a (II)Z isFoggyAt
	a (IIZ)Lnet/minecraft/server/BlockPosition; getValidSpawnPosition
	a (J)I getMoonPhase
	a (JF)F getTimeOfDay
	a (Lnet/minecraft/server/ChunkCoordIntPair;Z)Lnet/minecraft/server/BlockPosition; getSpawnPosInChunk
	b ()Z hasGround
	b (FF)Lnet/minecraft/server/Vec3D; getFogColor
	c ()Lnet/minecraft/server/BlockPosition; getDimensionSpecificSpawn
	canRespawn ()Z mayRespawn
	d ()D getClearColorScale
	f ()Z isHasSkyLight
	g ()Z isHasCeiling
	getChunkGenerator ()Lnet/minecraft/server/ChunkGenerator; createRandomLevelGenerator
	getDimensionManager ()Lnet/minecraft/server/DimensionManager; getType
	getWorldBorder ()Lnet/minecraft/server/WorldBorder; createWorldBorder
	i ()V saveData
	isNether ()Z isUltraWarm
	isOverworld ()Z isNaturalDimension
	j ()V tick
net/minecraft/server/WorldProviderHell net/minecraft/world/level/dimension/NetherDimension
	f NETHER_FOG_COLOR
	a (II)Z isFoggyAt
	a (IIZ)Lnet/minecraft/server/BlockPosition; getValidSpawnPosition
	a (JF)F getTimeOfDay
	a (Lnet/minecraft/server/ChunkCoordIntPair;Z)Lnet/minecraft/server/BlockPosition; getSpawnPosInChunk
	b (FF)Lnet/minecraft/server/Vec3D; getFogColor
	h ()Lnet/minecraft/server/WorldBorder; createWorldBorder
	k ()Lnet/minecraft/server/ChunkGenerator; createRandomLevelGenerator
	l ()Z isNaturalDimension
	m ()Z mayRespawn
	n ()Lnet/minecraft/server/DimensionManager; getType
net/minecraft/server/WorldProviderNormal net/minecraft/world/level/dimension/NormalDimension
	a (II)Z isFoggyAt
	a (IIZ)Lnet/minecraft/server/BlockPosition; getValidSpawnPosition
	a (JF)F getTimeOfDay
	a (Lnet/minecraft/server/ChunkCoordIntPair;Z)Lnet/minecraft/server/BlockPosition; getSpawnPosInChunk
	b (FF)Lnet/minecraft/server/Vec3D; getFogColor
	k ()Lnet/minecraft/server/ChunkGenerator; createRandomLevelGenerator
	l ()Z isNaturalDimension
	m ()Z mayRespawn
	n ()Lnet/minecraft/server/DimensionManager; getType
net/minecraft/server/WorldProviderTheEnd net/minecraft/world/level/dimension/end/TheEndDimension
	f END_SPAWN_POINT
	g dragonFight
	a ()F getCloudHeight
	a (FF)[F getSunriseColor
	a (II)Z isFoggyAt
	a (IIZ)Lnet/minecraft/server/BlockPosition; getValidSpawnPosition
	a (JF)F getTimeOfDay
	a (Lnet/minecraft/server/ChunkCoordIntPair;Z)Lnet/minecraft/server/BlockPosition; getSpawnPosInChunk
	b ()Z hasGround
	b (FF)Lnet/minecraft/server/Vec3D; getFogColor
	c ()Lnet/minecraft/server/BlockPosition; getDimensionSpecificSpawn
	i ()V saveData
	j ()V tick
	k ()Lnet/minecraft/server/ChunkGenerator; createRandomLevelGenerator
	l ()Z isNaturalDimension
	m ()Z mayRespawn
	n ()Lnet/minecraft/server/DimensionManager; getType
	o ()Lnet/minecraft/server/EnderDragonBattle; getDragonFight
net/minecraft/server/WorldServer net/minecraft/server/level/ServerLevel
	C allPlayersSleeping
	I blockEvents
	dataManager levelStorage
	entitiesByUUID entitiesByUuid
	entitiesToAdd toAddAfterTick
	globalEntityList globalEntities
	mobSpawnerTrader wanderingTraderSpawner
	navigators navigations
	nextTickListBlock blockTicks
	nextTickListFluid liquidTicks
	persistentRaid raids
	portalTravelAgent portalForcer
	savingDisabled noSave
	ticking handlingTick
	u LOGGER
	A ()Ljava/util/List; players
	B ()Lnet/minecraft/server/VillagePlace; getPoiManager
	D ()Lnet/minecraft/server/Scoreboard; getScoreboard
	E ()Lnet/minecraft/server/IChunkProvider; getChunkSource
	F ()Lnet/minecraft/server/TickList; getLiquidTicks
	G ()Lnet/minecraft/server/TickList; getBlockTicks
	a (I)Lnet/minecraft/server/Entity; getEntity
	a (III)Lnet/minecraft/server/BiomeBase; getUncachedNoiseBiome
	a (ILnet/minecraft/server/BlockPosition;I)V destroyBlockProgress
	a (J)V setGameTime
	a (Ljava/io/Writer;)V dumpBlockEntities
	a (Ljava/io/Writer;Ljava/lang/Iterable;)V dumpEntities
	a (Ljava/lang/String;)Lnet/minecraft/server/WorldMap; getMapData
	a (Ljava/lang/String;Lnet/minecraft/server/BlockPosition;IZ)Lnet/minecraft/server/BlockPosition; findNearestMapFeature
	a (Ljava/nio/file/Path;)V saveDebugReport
	a (Ljava/util/function/Predicate;)Ljava/util/List; getPlayers
	a (Lnet/minecraft/server/BlockActionData;)Z doBlockEvent
	a (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/BlockPosition; findLightingTargetAround
	a (Lnet/minecraft/server/BlockPosition;I)Z closeToVillage
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/Block;II)V blockEvent
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;)V onBlockStateChange
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;Lnet/minecraft/server/IBlockData;I)V sendBlockUpdated
	a (Lnet/minecraft/server/Chunk;I)V tickChunk
	a (Lnet/minecraft/server/Entity;B)V broadcastEntityEvent
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/DamageSource;DDDFZLnet/minecraft/server/Explosion$Effect;)Lnet/minecraft/server/Explosion; explode
	a (Lnet/minecraft/server/Entity;Lnet/minecraft/server/Entity;)V tickPassenger
	a (Lnet/minecraft/server/EntityHuman;DDDLnet/minecraft/server/SoundEffect;Lnet/minecraft/server/SoundCategory;FF)V playSound
	a (Lnet/minecraft/server/EntityHuman;ILnet/minecraft/server/BlockPosition;I)V levelEvent
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/BlockPosition;)Z mayInteract
	a (Lnet/minecraft/server/EntityHuman;Lnet/minecraft/server/Entity;Lnet/minecraft/server/SoundEffect;Lnet/minecraft/server/SoundCategory;FF)V playSound
	a (Lnet/minecraft/server/EntityPlayer;Lnet/minecraft/server/ParticleParam;ZDDDIDDDD)Z sendParticles
	a (Lnet/minecraft/server/EntityPlayer;ZDDDLnet/minecraft/server/Packet;)Z sendParticles
	a (Lnet/minecraft/server/EntityTypes;Ljava/util/function/Predicate;)Ljava/util/List; getEntities
	a (Lnet/minecraft/server/NextTickListEntry;)V tickLiquid
	a (Lnet/minecraft/server/ParticleParam;DDDIDDDD)I sendParticles
	a (Lnet/minecraft/server/ReputationEvent;Lnet/minecraft/server/Entity;Lnet/minecraft/server/ReputationHandler;)V onReputationEvent
	a (Lnet/minecraft/server/SectionPosition;)Z isVillage
	a (Lnet/minecraft/server/StructureBoundingBox;)V clearBlockEvents
	a (Lnet/minecraft/server/WorldMap;)V setMapData
	a (Lnet/minecraft/server/WorldSettings;)V setInitialSpawn
	a_ (Lnet/minecraft/server/BlockPosition;)V setSpawnPos
	ab ()V wakeUpAllPlayers
	ad ()V runBlockEvents
	addEntity0 (Lnet/minecraft/server/Entity;)Z addEntity
	addEntityChunk (Lnet/minecraft/server/Entity;)Z loadFromChunk
	addEntitySerialized (Lnet/minecraft/server/Entity;)Z addWithUUID
	addEntityTeleport (Lnet/minecraft/server/Entity;)V addFromAnotherDimension
	addPlayer0 (Lnet/minecraft/server/EntityPlayer;)V addPlayer
	addPlayerCommand (Lnet/minecraft/server/EntityPlayer;)V addDuringCommandTeleport
	addPlayerJoin (Lnet/minecraft/server/EntityPlayer;)V addNewPlayer
	addPlayerPortal (Lnet/minecraft/server/EntityPlayer;)V addDuringPortalTeleport
	addPlayerRespawn (Lnet/minecraft/server/EntityPlayer;)V addRespawnedPlayer
	b ()Z isHandlingTick
	b (ILnet/minecraft/server/BlockPosition;I)V globalLevelEvent
	b (Lnet/minecraft/server/NextTickListEntry;)V tickBlock
	b (Lnet/minecraft/server/SectionPosition;)I sectionsToVillage
	b_ (Lnet/minecraft/server/BlockPosition;)Z isVillage
	c (Lnet/minecraft/server/Entity;)Z addFreshEntity
	c_ (Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/Raid; getRaidAt
	chunkCheck (Lnet/minecraft/server/Entity;)V updateChunkPos
	clearWeather ()V stopWeather
	doTick (Ljava/util/function/BooleanSupplier;)V tick
	e (Lnet/minecraft/server/BlockPosition;)Z isRaided
	entityJoinedWorld (Lnet/minecraft/server/Entity;)V tickNonPassenger
	everyoneSleeping ()V updateSleepingPlayerList
	g ()V generateBonusItemsNearSpawn
	getDataManager ()Lnet/minecraft/server/WorldNBTStorage; getLevelStorage
	getDimensionSpawn ()Lnet/minecraft/server/BlockPosition; getDimensionSpecificSpawn
	getForceLoadedChunks ()Lit/unimi/dsi/fastutil/longs/LongSet; getForcedChunks
	getPersistentRaid ()Lnet/minecraft/server/PersistentRaid; getRaids
	getTravelAgent ()Lnet/minecraft/server/PortalTravelAgent; getPortalForcer
	getWorldPersistentData ()Lnet/minecraft/server/WorldPersistentData; getDataStorage
	isUUIDTaken (Lnet/minecraft/server/Entity;)Z isUUIDUsed
	j ()Ljava/util/List; getDragons
	j_ ()Lnet/minecraft/server/ScoreboardServer; getScoreboard
	k ()Lnet/minecraft/server/EntityPlayer; getRandomPlayer
	k_ ()V validateSpawn
	l ()Lit/unimi/dsi/fastutil/objects/Object2IntMap; getMobCategoryCounts
	m ()Lnet/minecraft/server/ChunkProviderServer; getChunkSource
	m_ ()V saveLevelData
	n ()Lnet/minecraft/server/TickListServer; getBlockTicks
	n_ ()Lnet/minecraft/server/TickListServer; getLiquidTicks
	p ()Lnet/minecraft/server/MinecraftServer; getServer
	r ()Lnet/minecraft/server/DefinedStructureManager; getStructureManager
	registerEntity (Lnet/minecraft/server/Entity;)V add
	removeEntity (Lnet/minecraft/server/Entity;)V despawn
	removeEntityFromChunk (Lnet/minecraft/server/Entity;)V removeFromChunk
	removePlayer (Lnet/minecraft/server/EntityPlayer;)V removePlayerImmediately
	s ()Lnet/minecraft/server/CraftingManager; getRecipeManager
	setForceLoaded (IIZ)Z setChunkForced
	strikeLightning (Lnet/minecraft/server/EntityLightning;)V addGlobalEntity
	t ()Lnet/minecraft/server/TagRegistry; getTagManager
	u ()Z noSave
	unloadChunk (Lnet/minecraft/server/Chunk;)V unload
	unregisterEntity (Lnet/minecraft/server/Entity;)V onEntityRemoved
	y ()I getFreeMapId
net/minecraft/server/WorldSettings net/minecraft/world/level/LevelSettings
	a seed
	b gameType
	c generateMapFeatures
	d hardcore
	e levelType
	f allowCommands
	g startingBonusItems
	h levelTypeOptions
	a ()Lnet/minecraft/server/WorldSettings; enableStartingBonusItems
	b ()Lnet/minecraft/server/WorldSettings; enableSinglePlayerCommands
	c ()Z hasStartingBonusItems
	d ()J getSeed
	e ()Lnet/minecraft/server/EnumGamemode; getGameType
	f ()Z isHardcore
	g ()Z isGenerateMapFeatures
	h ()Lnet/minecraft/server/WorldType; getLevelType
	i ()Z getAllowCommands
	j ()Lcom/google/gson/JsonElement; getLevelTypeOptions
	setGeneratorSettings (Lcom/google/gson/JsonElement;)Lnet/minecraft/server/WorldSettings; setLevelTypeOptions
net/minecraft/server/WorldType net/minecraft/world/level/LevelType
	g BUFFET
	j id
	l generatorSerialization
	n selectable
	name generatorName
	o replacement
	p hasHelpText
	q hasCustomOptions
	types LEVEL_TYPES
	a (I)Lnet/minecraft/server/WorldType; getReplacementForVersion
	a (Z)Lnet/minecraft/server/WorldType; setCustomOptions
	b ()Ljava/lang/String; getSerialization
	b (Z)Lnet/minecraft/server/WorldType; setSelectableByUser
	c ()Ljava/lang/String; getDescriptionId
	d ()Ljava/lang/String; getHelpTextId
	f ()Z hasCustomOptions
	g ()Z isSelectable
	getType (Ljava/lang/String;)Lnet/minecraft/server/WorldType; getLevelType
	h ()Z hasReplacement
	i ()I getId
	j ()Z hasHelpText
	k ()Lnet/minecraft/server/WorldType; setHasReplacement
	l ()Lnet/minecraft/server/WorldType; setHasHelpText
	name ()Ljava/lang/String; getName
net/minecraft/server/WorldUpgrader net/minecraft/util/worldupdate/WorldUpgrader
	a LOGGER
	b THREAD_FACTORY
	c levelName
	d eraseCache
	e levelStorage
	f thread
	g pathToWorld
	h running
	i finished
	j progress
	k totalChunks
	l converted
	m skipped
	n progressMap
	o status
	p REGEX
	q overworldDataStorage
	a ()V cancel
	a (Lnet/minecraft/server/DimensionManager;)F dimensionProgress
	b ()Z isFinished
	b (Lnet/minecraft/server/DimensionManager;)Ljava/util/List; getAllChunkPos
	c ()F getProgress
	d ()I getTotalChunks
	e ()I getConverted
	f ()I getSkipped
	g ()Lnet/minecraft/server/IChatBaseComponent; getStatus
	h ()Ljava/lang/String; getLevelName
	i ()V work
net/minecraft/server/WorldUpgraderIterator net/minecraft/world/level/storage/McRegionUpgrader
	a LOGGER
	a (Ljava/io/File;Ljava/io/File;Lnet/minecraft/server/WorldChunkManager;IILnet/minecraft/server/IProgressUpdate;)V convertRegion
	a (Ljava/io/File;Ljava/lang/Iterable;Lnet/minecraft/server/WorldChunkManager;IILnet/minecraft/server/IProgressUpdate;)V convertRegions
	a (Ljava/io/File;Ljava/util/Collection;)V addRegionFiles
	a (Ljava/nio/file/Path;Lcom/mojang/datafixers/DataFixer;Ljava/lang/String;Lnet/minecraft/server/IProgressUpdate;)Z convertLevel
	a (Ljava/nio/file/Path;Ljava/lang/String;)V makeMcrLevelDatBackup
p net/minecraft/MethodsReturnNonnullByDefault
pj net/minecraft/network/protocol/game/DebugMobNameGenerator
	a NAMES_FIRST_PART
	b NAMES_SECOND_PART
	a (Ljava/util/Random;[Ljava/lang/String;)Ljava/lang/String; getRandomString
	a (Ljava/util/UUID;)Ljava/lang/String; getMobName
	b (Ljava/util/UUID;)Ljava/util/Random; getRandom
sm$a net/minecraft/resources/ResourceLocation$Serializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/MinecraftKey; deserialize
	a (Lnet/minecraft/server/MinecraftKey;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
sp net/minecraft/server/ChainedJsonException
	a entries
	b message
	a (Ljava/lang/Exception;)Lsp; forException
	a (Ljava/lang/String;)V prependJsonKey
	b (Ljava/lang/String;)V setFilenameAndFlush
sp$a net/minecraft/server/ChainedJsonException$Entry
	a filename
	b jsonKeys
	a ()Ljava/lang/String; getFilename
	a (Ljava/lang/String;)V addJsonKey
	b ()Ljava/lang/String; getJsonKeys
sr net/minecraft/server/ConsoleInputSource
	a (Ljava/lang/String;)V info
	b (Ljava/lang/String;)V warn
sy$a net/minecraft/server/ServerFunctionManager$QueuedCommand
	a manager
	b sender
	c entry
	a (Ljava/util/ArrayDeque;I)V execute
tm$a net/minecraft/server/commands/DataPackCommand$Inserter
tp net/minecraft/server/commands/DebugPathCommand
	a ERROR_NOT_MOB
	b ERROR_NO_PATH
	c ERROR_NOT_COMPLETE
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/BlockPosition;)I fillBlocks
tv$a net/minecraft/server/commands/ExecuteCommand$CommandNumericPredicate
tv$b net/minecraft/server/commands/ExecuteCommand$CommandPredicate
ui$a net/minecraft/server/commands/LootCommand$Callback
ui$b net/minecraft/server/commands/LootCommand$DropConsumer
ui$c net/minecraft/server/commands/LootCommand$TailProvider
uq net/minecraft/server/commands/RaidCommand
	a (Lcom/mojang/brigadier/CommandDispatcher;)V register
	a (Lnet/minecraft/server/CommandListenerWrapper;)I glow
	a (Lnet/minecraft/server/CommandListenerWrapper;I)I setBadOmenLevel
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/IChatBaseComponent;)I playSound
	a (Lnet/minecraft/server/EntityPlayer;)Lnet/minecraft/server/Raid; getRaid
	b (Lnet/minecraft/server/CommandListenerWrapper;)I spawnLeader
	b (Lnet/minecraft/server/CommandListenerWrapper;I)I start
	c (Lnet/minecraft/server/CommandListenerWrapper;)I stop
	d (Lnet/minecraft/server/CommandListenerWrapper;)I check
v$a net/minecraft/advancements/AdvancementList$Listener
	a ()V onAdvancementsCleared
	a (Lnet/minecraft/server/Advancement;)V onAddAdvancementRoot
	b (Lnet/minecraft/server/Advancement;)V onRemoveAdvancementRoot
	c (Lnet/minecraft/server/Advancement;)V onAddAdvancementTask
	d (Lnet/minecraft/server/Advancement;)V onRemoveAdvancementTask
vg$a net/minecraft/server/commands/SpreadPlayersCommand$Position
	a x
	b z
	a ()V normalize
	a (DD)V set
	a (DDDD)Z clamp
	a (Ljava/util/Random;DDDD)V randomize
	a (Lnet/minecraft/server/IBlockAccess;)I getSpawnY
	a (Lvg$a;)D dist
	b ()F getLength
	b (Lnet/minecraft/server/IBlockAccess;)Z isSafe
	b (Lvg$a;)V moveAway
vn$a net/minecraft/server/commands/TeleportCommand$LookAt
	a position
	b entity
	c anchor
	a (Lnet/minecraft/server/CommandListenerWrapper;Lnet/minecraft/server/Entity;)V perform
vx$a net/minecraft/server/commands/data/DataCommands$DataManipulator
vx$b net/minecraft/server/commands/data/DataCommands$DataManipulatorDecorator
vx$c net/minecraft/server/commands/data/DataCommands$DataProvider
	a (Lcom/mojang/brigadier/builder/ArgumentBuilder;Ljava/util/function/Function;)Lcom/mojang/brigadier/builder/ArgumentBuilder; wrap
	a (Lcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/server/CommandDataAccessor; access
w$a net/minecraft/advancements/AdvancementProgress$Serializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/AdvancementProgress; deserialize
	a (Lnet/minecraft/server/AdvancementProgress;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
wn net/minecraft/server/level/BlockDestructionProgress
	a id
	b pos
	c progress
	d updatedRenderTick
	a ()I getId
	a (I)V setProgress
	a (Lwn;)I compareTo
	b ()Lnet/minecraft/server/BlockPosition; getPos
	b (I)V updateTick
	c ()I getProgress
	d ()I getUpdatedRenderTick
wo$c net/minecraft/server/level/ChunkHolder$LevelChangeListener
	a (Lnet/minecraft/server/ChunkCoordIntPair;Ljava/util/function/IntSupplier;ILjava/util/function/IntConsumer;)V onLevelChange
wo$d net/minecraft/server/level/ChunkHolder$PlayerProvider
	a (Lnet/minecraft/server/ChunkCoordIntPair;Z)Ljava/util/stream/Stream; getPlayers
wp$a net/minecraft/server/level/ChunkMap$DistanceManager
	a (J)Z isChunkToRemove
	a (JILnet/minecraft/server/PlayerChunk;I)Lnet/minecraft/server/PlayerChunk; updateChunkScheduling
	b (J)Lnet/minecraft/server/PlayerChunk; getChunk
wr$a net/minecraft/server/level/ChunkTaskPriorityQueueSorter$Message
	a task
	b pos
	c level
wr$b net/minecraft/server/level/ChunkTaskPriorityQueueSorter$Release
	a task
	b pos
	c clearQueue
ww$a net/minecraft/server/level/DistanceManager$ChunkTicketTracker
	a (I)I runDistnaceUpdates
	a (JI)V setLevel
	b (J)I getLevelFromSource
	c (J)I getLevel
ww$b net/minecraft/server/level/DistanceManager$FixedPlayerDistanceChunkTracker
	a chunks
	b maxDistance
	a ()V runAllUpdates
	a (JI)V setLevel
	a (JII)V onLevelChange
	a (Ljava/lang/String;)V dumpChunks
	b (J)I getLevelFromSource
	c (J)I getLevel
	d (J)Z havePlayer
ww$c net/minecraft/server/level/DistanceManager$PlayerTicketTracker
	e viewDistance
	f queueLevels
	g toUpdate
	a ()V runAllUpdates
	a (I)V updateViewDistance
	a (JII)V onLevelChange
	a (JIZZ)V onLevelChange
	c (I)Z haveTicketFor
wx net/minecraft/server/level/FeatureSimulator
	a minPos
	b maxPos
	a ()Lnet/minecraft/server/StructureBoundingBox; getBoundingBox
	a (Lnet/minecraft/server/BlockPosition;Ljava/util/function/Predicate;)Z isStateAtPosition
	a (Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/IBlockData;I)Z setBlock
	a (Lnet/minecraft/server/BlockPosition;Z)Z removeBlock
	a (Lnet/minecraft/server/BlockPosition;ZLnet/minecraft/server/Entity;)Z destroyBlock
	a (Lnet/minecraft/server/HeightMap$Type;Lnet/minecraft/server/BlockPosition;)Lnet/minecraft/server/BlockPosition; getHeightmapPos
	b (Lnet/minecraft/server/BlockPosition;Ljava/util/function/Predicate;)Z isFluidAtPosition
x$a net/minecraft/advancements/AdvancementRewards$Builder
	a experience
	b loot
	c recipes
	d function
	a ()Lnet/minecraft/server/AdvancementRewards; build
	a (I)Lx$a; experience
	a (Lnet/minecraft/server/MinecraftKey;)Lx$a; loot
	b (I)Lx$a; addExperience
	b (Lnet/minecraft/server/MinecraftKey;)Lx$a; addLootTable
	c (Lnet/minecraft/server/MinecraftKey;)Lx$a; recipe
	d (Lnet/minecraft/server/MinecraftKey;)Lx$a; addRecipe
	e (Lnet/minecraft/server/MinecraftKey;)Lx$a; function
	f (Lnet/minecraft/server/MinecraftKey;)Lx$a; runs
x$b net/minecraft/advancements/AdvancementRewards$Deserializer
	a (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/AdvancementRewards; deserialize
xb$a net/minecraft/server/level/ServerChunkCache$MainThreadExecutor
	ax ()Z scheduleExecutables
	ay ()Ljava/lang/Thread; getRunningThread
	c (Ljava/lang/Runnable;)Z shouldRun
	d (Ljava/lang/Runnable;)Ljava/lang/Runnable; wrapRunnable
	v ()Z pollTask
xp net/minecraft/server/level/progress/ProcessorChunkProgressListener
	a delegate
	b mailbox
	a ()V start
	a (Lnet/minecraft/server/ChunkCoordIntPair;)V updateSpawnPos
	a (Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/ChunkStatus;)V onStatusChange
	b ()V stop
xq net/minecraft/server/level/progress/StoringChunkProgressListener
	a delegate
	b statuses
	c spawnPos
	d fullDiameter
	e radius
	f diameter
	g started
	a ()V start
	a (II)Lnet/minecraft/server/ChunkStatus; getStatus
	a (Lnet/minecraft/server/ChunkCoordIntPair;)V updateSpawnPos
	a (Lnet/minecraft/server/ChunkCoordIntPair;Lnet/minecraft/server/ChunkStatus;)V onStatusChange
	b ()V stop
	c ()I getFullDiameter
	d ()I getDiameter
	e ()I getProgress
xt net/minecraft/server/network/MemoryServerHandshakePacketListenerImpl
	a server
	b connection
	a ()Lnet/minecraft/server/NetworkManager; getConnection
	a (Lnet/minecraft/server/IChatBaseComponent;)V onDisconnect
	a (Lnet/minecraft/server/PacketHandshakingInSetProtocol;)V handleIntention
xu$a net/minecraft/server/network/ServerConnectionListener$LatencySimulator
	a TIMER
	b delay
	a (Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)V delayDownstream
yt$b net/minecraft/server/packs/repository/UnopenedPack$UnopenedPackConstructor
yv$a net/minecraft/server/packs/resources/FallbackResourceManager$LeakedResourceWarningInputStream
	a message
	b closed
yw$a net/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier
	a (Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture; wait
yx$a net/minecraft/server/packs/resources/ProfiledReloadInstance$State
	a name
	b preparationResult
	c reloadResult
	d preparationNanos
	e reloadNanos
zf$a net/minecraft/server/packs/resources/SimpleReloadInstance$StateFactory
zg$a net/minecraft/server/packs/resources/SimpleReloadableResourceManager$FailingReloadInstance
	a exception
	b failedFuture
	a ()Ljava/util/concurrent/CompletableFuture; done
	b ()F getActualProgress
	c ()Z isApplying
	d ()Z isDone
	e ()V checkExceptions
zg$b net/minecraft/server/packs/resources/SimpleReloadableResourceManager$ResourcePackLoadingFailure
	a pack
	a ()Lnet/minecraft/server/IResourcePack; getPack
net/minecraft/client/main/Main net/minecraft/client/main/Main
	a LOGGER
	a (Ljava/lang/Integer;)Ljava/util/OptionalInt; ofNullable
	a (Ljava/lang/String;)Z stringHasValue
	a (Ljoptsimple/OptionSet;Ljoptsimple/OptionSpec;)Ljava/lang/Object; parseArgument
net/minecraft/server/MinecraftServer net/minecraft/server/MinecraftServer
	A preventProxyConnections
	G maxBuildHeight
	H playerIdleTimeout
	I keyPair
	J singleplayerName
	K levelIdName
	L levelName
	O resourcePack
	P resourcePackHash
	S startupState
	T delayProfilerStart
	U forceGameType
	Z lastServerStatus
	ab delayedTasksMaxNextTickTime
	ac mayHaveDelayedTasks
	ad hasWorldScreenshot
	advancementDataWorld advancements
	ae resources
	as enforceWhitelist
	av averageTickTime
	ax serverId
	b USERID_CACHE_FILE
	bonusChest levelHasStartingBonusChest
	bossBattleCustomData customBossEvents
	c DEMO_SETTINGS
	circularTimer frameTimer
	commandDispatcher commands
	convertable storageSource
	craftingManager recipes
	customFunctionData functions
	dataConverterManager fixerUpper
	demoMode isDemo
	executorService executor
	f tickTimes
	gameProfileRepository profileRepository
	h LOGGER
	hasTicked isReady
	i DATA_RELOAD_INITIAL_TASK
	isRunning running
	isStopped stopped
	lastOverloadTime lastOverloadWarning
	lootPredicateManager predicateManager
	lootTableRegistry lootTables
	methodProfiler profiler
	minecraftSessionService sessionService
	nextTick nextTickTime
	persistentCommandStorage commandStorage
	pvpMode pvp
	q random
	resourcePackFolder folderPackSource
	resourcePackRepository packRepository
	scoreboardServer scoreboard
	serverConnection connection
	serverIp localIp
	serverPing status
	serverPort port
	spawnAnimals animals
	spawnNPCs npcs
	tagRegistry tags
	ticks tickCount
	userCache profileCache
	worldLoadListenerFactory progressListenerFactory
	worldServer levels
	yggdrasilAuthenticationService authenticationService
	B ()Z isShutdown
	H ()[Lcom/mojang/authlib/GameProfile; getPlayerGameProfiles
	I_ ()Z shouldInformAdmins
	J ()Z isInitialized
	P ()Ljava/lang/String; getLevelName
	V ()Z isSnooperEnabled
	X ()Z getPreventProxyConnections
	a ()Z acceptsSuccess
	a (Lcom/mojang/authlib/GameProfile;)Z isSingleplayerOwner
	a (Ljava/io/File;Lnet/minecraft/server/WorldData;)V loadDataPacks
	a (Ljava/lang/Runnable;)Lnet/minecraft/server/TickTask; wrapRunnable
	a (Ljava/lang/String;Ljava/lang/String;JLnet/minecraft/server/WorldType;Lcom/google/gson/JsonElement;)V loadLevel
	a (Ljava/lang/String;Lnet/minecraft/server/WorldNBTStorage;)V detectBundledResources
	a (Ljava/nio/file/Path;)V saveDebugReport
	a (Ljava/security/KeyPair;)V setKeyPair
	a (Ljava/util/UUID;)Lnet/minecraft/server/Entity; getEntityByUUID
	a (Ljava/util/function/BooleanSupplier;)V tickServer
	a (Lnet/minecraft/server/CommandListenerWrapper;)V kickUnlistedPlayers
	a (Lnet/minecraft/server/CrashReport;)V onServerCrash
	a (Lnet/minecraft/server/EntityPlayer;)V sendDifficultyUpdate
	a (Lnet/minecraft/server/EnumDifficulty;Z)V setDifficulty
	a (Lnet/minecraft/server/EnumGamemode;ZI)Z publishServer
	a (Lnet/minecraft/server/IChatBaseComponent;)V sendMessage
	a (Lnet/minecraft/server/MojangStatisticsGenerator;)V populateSnooper
	a (Lnet/minecraft/server/PlayerList;)V setPlayerList
	a (Lnet/minecraft/server/ServerPing;)V updateStatusIcon
	a (Lnet/minecraft/server/TickTask;)Z shouldRun
	a (Lnet/minecraft/server/World;Lnet/minecraft/server/BlockPosition;Lnet/minecraft/server/EntityHuman;)Z isUnderSpawnProtection
	a (Lnet/minecraft/server/WorldData;)V setupDebugLevel
	a (Lnet/minecraft/server/WorldNBTStorage;Lnet/minecraft/server/WorldData;Lnet/minecraft/server/WorldSettings;Lnet/minecraft/server/WorldLoadListener;)V createLevels
	a (Lnet/minecraft/server/WorldServer;)I getSpawnRadius
	aA ()J getNextTickTime
	aB ()Lcom/mojang/datafixers/DataFixer; getFixerUpper
	aH ()Lnet/minecraft/server/ResourcePackSourceFolder; getFolderPackSource
	aN ()Lnet/minecraft/server/PersistentCommandStorage; getCommandStorage
	aP ()Lnet/minecraft/server/LootPredicateManager; getPredicateManager
	aS ()Z isEnforceWhitelist
	aT ()F getAverageTickTime
	aU ()Lnet/minecraft/server/CircularTimer; getFrameTimer
	aW ()Ljava/util/concurrent/Executor; getBackgroundTaskExecutor
	aZ ()Z pollTaskInternal
	ah ()Z isReady
	ai ()Z hasGui
	aj ()I getTickCount
	ak ()V delayStartProfiler
	al ()Lnet/minecraft/server/MojangStatisticsGenerator; getSnooper
	am ()Lnet/minecraft/server/IBlockAccess; getCommandSenderWorld
	ap ()Ljava/net/Proxy; getProxy
	aw ()I getAbsoluteMaxWorldSize
	ax ()Z scheduleExecutables
	ay ()Ljava/lang/Thread; getRunningThread
	az ()I getCompressionThreshold
	b ()Z acceptsFailure
	b (I)V setMaxBuildHeight
	b (Lcom/mojang/authlib/GameProfile;)I getProfilePermissions
	b (Ljava/lang/Runnable;)V addTickable
	b (Ljava/lang/String;)V setLocalIp
	b (Ljava/nio/file/Path;)V dumpMiscStats
	b (Ljava/util/function/BooleanSupplier;)V tickChildren
	b (Lnet/minecraft/server/CrashReport;)Lnet/minecraft/server/CrashReport; fillReport
	b (Lnet/minecraft/server/IChatBaseComponent;)V setServerStartupState
	b (Lnet/minecraft/server/MojangStatisticsGenerator;)V populateSnooperInitial
	b (Lnet/minecraft/server/WorldData;)V updateSelectedPacks
	ba ()V refreshRegistries
	c (Ljava/lang/Runnable;)Z shouldRun
	c (Ljava/lang/String;)V setId
	c (Ljava/nio/file/Path;)V dumpCrashCategory
	canExecute (Lnet/minecraft/server/TickTask;)Z c
	canSleepForTick ()Z haveTime
	convertWorld (Ljava/lang/String;)V ensureLevelConversion
	d (Ljava/lang/Runnable;)Ljava/lang/Runnable; wrapRunnable
	d (Ljava/lang/String;)Ljava/io/File; getFile
	d (Ljava/nio/file/Path;)V dumpGameRules
	d (Z)V setDifficultyLocked
	e (Ljava/nio/file/Path;)V dumpClasspath
	e (Z)V setDemo
	exit ()V onServerExit
	f (Ljava/nio/file/Path;)V dumpThreads
	f (Z)V setBonusChest
	g (Ljava/lang/String;)V error
	g_ ()Lnet/minecraft/server/IChatBaseComponent; getStartupState
	getAdvancementData ()Lnet/minecraft/server/AdvancementDataWorld; getAdvancements
	getAllowFlight ()Z isFlightAllowed
	getAllowNether ()Z isNetherEnabled
	getBossBattleCustomData ()Lnet/minecraft/server/BossBattleCustomData; getCustomBossEvents
	getCommandDispatcher ()Lnet/minecraft/server/CommandDispatcher; getCommands
	getConvertable ()Lnet/minecraft/server/Convertable; getStorageSource
	getCraftingManager ()Lnet/minecraft/server/CraftingManager; getRecipeManager
	getDifficulty ()Lnet/minecraft/server/EnumDifficulty; getDefaultDifficulty
	getEnableCommandBlock ()Z isCommandBlockEnabled
	getForceGamemode ()Z getForceGameType
	getFunctionData ()Lnet/minecraft/server/CustomFunctionData; getFunctions
	getGameProfileRepository ()Lcom/mojang/authlib/GameProfileRepository; getProfileRepository
	getGamemode ()Lnet/minecraft/server/EnumGamemode; getDefaultGameType
	getGenerateStructures ()Z canGenerateStructures
	getIdleTimeout ()I getPlayerIdleTimeout
	getLogger ()Lorg/apache/logging/log4j/Logger; aX
	getLootTableRegistry ()Lnet/minecraft/server/LootTableRegistry; getLootTables
	getMethodProfiler ()Lnet/minecraft/server/GameProfiler; getProfiler
	getMinecraftSessionService ()Lcom/mojang/authlib/minecraft/MinecraftSessionService; getSessionService
	getOnlineMode ()Z usesAuthentication
	getPVP ()Z isPvpAllowed
	getPlayers ()[Ljava/lang/String; getPlayerNames
	getResourceManager ()Lnet/minecraft/server/IReloadableResourceManager; getResources
	getResourcePackRepository ()Lnet/minecraft/server/ResourcePackRepository; getPackRepository
	getServerCommandListener ()Lnet/minecraft/server/CommandListenerWrapper; createCommandSourceStack
	getServerConnection ()Lnet/minecraft/server/ServerConnection; getConnection
	getServerIp ()Ljava/lang/String; getLocalIp
	getServerPing ()Lnet/minecraft/server/ServerPing; getStatus
	getSinglePlayerName ()Ljava/lang/String; getSingleplayerName
	getSpawnAnimals ()Z isAnimals
	getSpawnNPCs ()Z isNpcsEnabled
	getSpawnProtection ()I getSpawnProtectionRadius
	getTagRegistry ()Lnet/minecraft/server/TagRegistry; getTags
	getUserCache ()Lnet/minecraft/server/UserCache; getProfileCache
	getVersion ()Ljava/lang/String; getServerVersion
	getWorld ()Ljava/lang/String; getLevelIdName
	getWorldServer (Lnet/minecraft/server/DimensionManager;)Lnet/minecraft/server/WorldServer; getLevel
	getWorlds ()Ljava/lang/Iterable; getAllLevels
	h (Ljava/lang/String;)V debug
	h (Z)V setPreventProxyConnections
	i (Ljava/lang/String;)V setSingleplayerName
	init ()Z initServer
	initializeScoreboards (Lnet/minecraft/server/WorldPersistentData;)V readScoreboard
	invalidatePingSample ()V invalidateStatus
	isDemoMode ()Z isDemo
	isEmbeddedServer ()Z isSingleplayer
	j ()I getOperatorUserPermissionLevel
	j (Ljava/lang/String;)V setLevelName
	k ()I getFunctionCompilationLevel
	l ()Z shouldRconBroadcast
	loadSpawn (Lnet/minecraft/server/WorldLoadListener;)V prepareLevels
	m ()Z isDedicatedServer
	n ()Z isEpollEnabled
	n (Z)V setEnforceWhitelist
	p ()Z isPublished
	reload ()V reloadResources
	safeShutdown (Z)V halt
	saveChunks (ZZZ)Z saveAllChunks
	setAllowFlight (Z)V setFlightAllowed
	setEraseCache (Z)V eraseCache
	setForceGamemode (Z)V setForceGameType
	setForceUpgrade (Z)V forceUpgrade
	setGamemode (Lnet/minecraft/server/EnumGamemode;)V setDefaultGameMode
	setIdleTimeout (I)V setPlayerIdleTimeout
	setOnlineMode (Z)V setUsesAuthentication
	setPVP (Z)V setPvpAllowed
	setSpawnAnimals (Z)V setAnimals
	setSpawnNPCs (Z)V setNpcsEnabled
	sleepForTick ()V waitUntilNextTick
	startServerThread ()V forkAndRun
	stop ()V stopServer
	v ()Z pollTask
	w ()Z hasWorldScreenshot
	warning (Ljava/lang/String;)V warn
	x ()Ljava/io/File; getWorldScreenshotFile
	y ()Ljava/io/File; getServerDirectory
net/minecraft/server/TickTask net/minecraft/server/TickTask
	a tick
	b runnable
	a ()I getTick
net/minecraft/data/Main net/minecraft/data/Main
	a (Ljava/nio/file/Path;Ljava/util/Collection;ZZZZZ)Lnet/minecraft/server/DebugReportGenerator; createStandardGenerator

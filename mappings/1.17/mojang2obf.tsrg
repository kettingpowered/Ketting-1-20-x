com/mojang/blaze3d/Blaze3D doe
	getTime ()D b
	process (Lcom/mojang/blaze3d/pipeline/RenderPipeline;F)V a
	render (Lcom/mojang/blaze3d/pipeline/RenderPipeline;F)V b
	youJustLostTheGame ()V a
com/mojang/blaze3d/DontObfuscate dof
com/mojang/blaze3d/FieldsAreNonnullByDefault dog
com/mojang/blaze3d/MethodsReturnNonnullByDefault doh
com/mojang/blaze3d/audio/Channel doi
	BUFFER_DURATION_SECONDS a
	LOGGER b
	QUEUED_BUFFER_COUNT c
	initialized e
	source d
	stream g
	streamingBufferSize f
	attachBufferStream (Lnet/minecraft/client/sounds/AudioStream;)V a
	attachStaticBuffer (Lcom/mojang/blaze3d/audio/SoundBuffer;)V a
	calculateBufferSize (Ljavax/sound/sampled/AudioFormat;I)I a
	create ()Lcom/mojang/blaze3d/audio/Channel; a
	destroy ()V b
	disableAttenuation ()V i
	getState ()I k
	linearAttenuation (F)V c
	pause ()V d
	play ()V c
	playing ()Z g
	pumpBuffers (I)V a
	removeProcessedBuffers ()I l
	setLooping (Z)V a
	setPitch (F)V a
	setRelative (Z)V b
	setSelfPosition (Lnet/minecraft/world/phys/Vec3;)V a
	setVolume (F)V b
	stop ()V f
	stopped ()Z h
	unpause ()V e
	updateStream ()V j
com/mojang/blaze3d/audio/Library doj
	DEFAULT_CHANNEL_COUNT c
	EMPTY f
	LOGGER b
	NUM_OPEN_DEVICE_RETRIES a
	context e
	device d
	listener i
	staticChannels g
	streamingChannels h
	acquireChannel (Lcom/mojang/blaze3d/audio/Library$Pool;)Lcom/mojang/blaze3d/audio/Channel; a
	cleanup ()V b
	getChannelCount ()I e
	getDebugString ()Ljava/lang/String; d
	getListener ()Lcom/mojang/blaze3d/audio/Listener; c
	init ()V a
	releaseChannel (Lcom/mojang/blaze3d/audio/Channel;)V a
	tryOpenDevice ()J f
com/mojang/blaze3d/audio/Library$ChannelPool doj$a
	acquire ()Lcom/mojang/blaze3d/audio/Channel; a
	cleanup ()V b
	getMaxCount ()I c
	getUsedCount ()I d
	release (Lcom/mojang/blaze3d/audio/Channel;)Z a
com/mojang/blaze3d/audio/Library$CountingChannelPool doj$b
	activeChannels b
	limit a
	acquire ()Lcom/mojang/blaze3d/audio/Channel; a
	cleanup ()V b
	getMaxCount ()I c
	getUsedCount ()I d
	release (Lcom/mojang/blaze3d/audio/Channel;)Z a
com/mojang/blaze3d/audio/Library$Pool doj$c
	$VALUES c
	STATIC a
	STREAMING b
	$values ()[Lcom/mojang/blaze3d/audio/Library$Pool; a
com/mojang/blaze3d/audio/Listener dok
	gain a
	position b
	getGain ()F b
	getListenerPosition ()Lnet/minecraft/world/phys/Vec3; a
	reset ()V c
	setGain (F)V a
	setListenerOrientation (Lcom/mojang/math/Vector3f;Lcom/mojang/math/Vector3f;)V a
	setListenerPosition (Lnet/minecraft/world/phys/Vec3;)V a
com/mojang/blaze3d/audio/OggAudioStream dol
	EXPECTED_MAX_FRAME_SIZE a
	audioFormat c
	buffer e
	handle b
	input d
	convertMono (Ljava/nio/FloatBuffer;Lcom/mojang/blaze3d/audio/OggAudioStream$OutputConcat;)V a
	convertStereo (Ljava/nio/FloatBuffer;Ljava/nio/FloatBuffer;Lcom/mojang/blaze3d/audio/OggAudioStream$OutputConcat;)V a
	forwardBuffer ()V d
	getFormat ()Ljavax/sound/sampled/AudioFormat; a
	read (I)Ljava/nio/ByteBuffer; a
	readAll ()Ljava/nio/ByteBuffer; b
	readFrame (Lcom/mojang/blaze3d/audio/OggAudioStream$OutputConcat;)Z a
	refillFromStream ()Z c
com/mojang/blaze3d/audio/OggAudioStream$OutputConcat dol$a
	bufferSize b
	buffers a
	byteCount c
	currentBuffer d
	createNewBuffer ()V b
	get ()Ljava/nio/ByteBuffer; a
	put (F)V a
com/mojang/blaze3d/audio/OpenAlUtil dom
	LOGGER a
	alErrorToString (I)Ljava/lang/String; a
	alcErrorToString (I)Ljava/lang/String; b
	audioFormatToOpenAl (Ljavax/sound/sampled/AudioFormat;)I a
	checkALCError (JLjava/lang/String;)Z a
	checkALError (Ljava/lang/String;)Z a
com/mojang/blaze3d/audio/SoundBuffer don
	alBuffer d
	data a
	format b
	hasAlBuffer c
	discardAlBuffer ()V b
	getAlBuffer ()Ljava/util/OptionalInt; a
	releaseAlBuffer ()Ljava/util/OptionalInt; c
com/mojang/blaze3d/font/GlyphInfo dop
	getAdvance (Z)F a
	getBearingX ()F a
	getBearingY ()F b
	getBoldOffset ()F c
	getShadowOffset ()F d
com/mojang/blaze3d/font/GlyphProvider doq
	getGlyph (I)Lcom/mojang/blaze3d/font/RawGlyph; a
	getSupportedGlyphs ()Lit/unimi/dsi/fastutil/ints/IntSet; a
com/mojang/blaze3d/font/RawGlyph dor
	getBearingY ()F b
	getDown ()F l
	getLeft ()F i
	getOversample ()F h
	getPixelHeight ()I f
	getPixelWidth ()I e
	getRight ()F j
	getUp ()F k
	isColored ()Z g
	upload (II)V a
com/mojang/blaze3d/font/TrueTypeGlyphProvider dos
	ascent h
	font b
	fontMemory a
	oversample c
	pointScale g
	shiftX e
	shiftY f
	skip d
	getGlyph (I)Lcom/mojang/blaze3d/font/RawGlyph; a
	getGlyph (I)Lcom/mojang/blaze3d/font/TrueTypeGlyphProvider$Glyph; b
	getSupportedGlyphs ()Lit/unimi/dsi/fastutil/ints/IntSet; a
com/mojang/blaze3d/font/TrueTypeGlyphProvider$Glyph dos$a
	advance f
	bearingX d
	bearingY e
	height c
	index g
	width b
	getBearingX ()F a
	getBearingY ()F b
	getOversample ()F h
	getPixelHeight ()I f
	getPixelWidth ()I e
	isColored ()Z g
	upload (II)V a
com/mojang/blaze3d/pipeline/MainTarget dov
	DEFAULT_DIMENSIONS l
	DEFAULT_HEIGHT b
	DEFAULT_WIDTH a
	allocateAttachments (II)Lcom/mojang/blaze3d/pipeline/MainTarget$Dimension; c
	allocateColorAttachment (Lcom/mojang/blaze3d/pipeline/MainTarget$Dimension;)Z a
	allocateDepthAttachment (Lcom/mojang/blaze3d/pipeline/MainTarget$Dimension;)Z b
	createFrameBuffer (II)V b
com/mojang/blaze3d/pipeline/MainTarget$AttachmentState dov$a
	$VALUES f
	COLOR b
	COLOR_DEPTH d
	DEPTH c
	NONE a
	VALUES e
	$values ()[Lcom/mojang/blaze3d/pipeline/MainTarget$AttachmentState; a
	with (Lcom/mojang/blaze3d/pipeline/MainTarget$AttachmentState;)Lcom/mojang/blaze3d/pipeline/MainTarget$AttachmentState; a
com/mojang/blaze3d/pipeline/MainTarget$Dimension dov$b
	height b
	width a
	listWithFallback (II)Ljava/util/List; a
com/mojang/blaze3d/pipeline/RenderCall dow
com/mojang/blaze3d/pipeline/RenderPipeline dox
	isProcessing d
	isRecording b
	processedBuffer e
	recordingBuffer c
	renderCalls a
	renderingBuffer f
	beginProcessing ()Z e
	beginRecording ()Z b
	canBeginProcessing ()Z d
	canBeginRecording ()Z a
	endProcessing ()V g
	endRecording ()V c
	getProcessedQueue ()Ljava/util/concurrent/ConcurrentLinkedQueue; j
	getRecordingQueue ()Ljava/util/concurrent/ConcurrentLinkedQueue; i
	processRecordedQueue ()V f
	recordRenderCall (Lcom/mojang/blaze3d/pipeline/RenderCall;)V a
	startRendering ()Ljava/util/concurrent/ConcurrentLinkedQueue; h
com/mojang/blaze3d/pipeline/RenderTarget doy
	ALPHA_CHANNEL m
	BLUE_CHANNEL l
	GREEN_CHANNEL b
	RED_CHANNEL a
	clearChannels n
	colorTextureId i
	depthBufferId j
	filterMode k
	frameBufferId h
	height d
	useDepth g
	viewHeight f
	viewWidth e
	width c
	_bindWrite (Z)V c
	_blitToScreen (IIZ)V e
	_resize (IIZ)V d
	bindRead ()V c
	bindWrite (Z)V a
	blitToScreen (II)V a
	blitToScreen (IIZ)V c
	checkStatus ()V b
	clear (Z)V b
	copyDepthFrom (Lcom/mojang/blaze3d/pipeline/RenderTarget;)V a
	createBuffers (IIZ)V b
	destroyBuffers ()V a
	getColorTextureId ()I f
	getDepthTextureId ()I g
	resize (IIZ)V a
	setClearColor (FFFF)V a
	setFilterMode (I)V a
	unbindRead ()V d
	unbindWrite ()V e
com/mojang/blaze3d/pipeline/TextureTarget doz
com/mojang/blaze3d/platform/ClipboardManager dpb
	FORMAT_UNAVAILABLE a
	clipboardScratchBuffer b
	getClipboard (JLorg/lwjgl/glfw/GLFWErrorCallbackI;)Ljava/lang/String; a
	pushClipboard (JLjava/nio/ByteBuffer;[B)V a
	setClipboard (JLjava/lang/String;)V a
com/mojang/blaze3d/platform/DebugMemoryUntracker dpc
	UNTRACK a
	untrack (J)V a
	untrack (Lorg/lwjgl/system/Pointer;)V a
com/mojang/blaze3d/platform/DisplayData dpd
	fullscreenHeight d
	fullscreenWidth c
	height b
	isFullscreen e
	width a
com/mojang/blaze3d/platform/GlDebug dpe
	CIRCULAR_LOG_SIZE b
	DEBUG_LEVELS e
	DEBUG_LEVELS_ARB f
	LOGGER a
	MESSAGE_BUFFER c
	debugEnabled g
	lastEntry d
	enableDebugCallback (IZ)V a
	getLastOpenGlDebugMessages ()Ljava/util/List; a
	isDebugEnabled ()Z b
	printDebugLog (IIIIIJJ)V a
	printUnknownToken (I)Ljava/lang/String; d
	severityToString (I)Ljava/lang/String; c
	sourceToString (I)Ljava/lang/String; a
	typeToString (I)Ljava/lang/String; b
com/mojang/blaze3d/platform/GlDebug$LogEntry dpe$a
	count f
	id a
	message e
	severity d
	source b
	type c
	isSame (IIIILjava/lang/String;)Z a
com/mojang/blaze3d/platform/GlStateManager$BlendState com/mojang/blaze3d/platform/GlStateManager$a
	dstAlpha e
	dstRgb c
	mode a
	srcAlpha d
	srcRgb b
com/mojang/blaze3d/platform/GlStateManager$BooleanState com/mojang/blaze3d/platform/GlStateManager$b
	enabled b
	state a
	disable ()V a
	enable ()V b
	setEnabled (Z)V a
com/mojang/blaze3d/platform/GlStateManager$ColorLogicState com/mojang/blaze3d/platform/GlStateManager$c
	enable a
	op b
com/mojang/blaze3d/platform/GlStateManager$ColorMask com/mojang/blaze3d/platform/GlStateManager$d
	alpha d
	blue c
	green b
	red a
com/mojang/blaze3d/platform/GlStateManager$CullState com/mojang/blaze3d/platform/GlStateManager$e
	enable a
	mode b
com/mojang/blaze3d/platform/GlStateManager$DepthState com/mojang/blaze3d/platform/GlStateManager$f
	func c
	mask b
	mode a
com/mojang/blaze3d/platform/GlStateManager$LogicOp com/mojang/blaze3d/platform/GlStateManager$g
	$VALUES r
	AND a
	AND_INVERTED b
	AND_REVERSE c
	CLEAR d
	COPY e
	COPY_INVERTED f
	EQUIV g
	INVERT h
	NAND i
	NOOP j
	NOR k
	OR l
	OR_INVERTED m
	OR_REVERSE n
	SET o
	XOR p
	value q
	$values ()[Lcom/mojang/blaze3d/platform/GlStateManager$LogicOp; a
com/mojang/blaze3d/platform/GlStateManager$PolygonOffsetState com/mojang/blaze3d/platform/GlStateManager$h
	factor c
	fill a
	line b
	units d
com/mojang/blaze3d/platform/GlStateManager$ScissorState com/mojang/blaze3d/platform/GlStateManager$i
	mode a
com/mojang/blaze3d/platform/GlStateManager$StencilFunc com/mojang/blaze3d/platform/GlStateManager$j
	func a
	mask c
	ref b
com/mojang/blaze3d/platform/GlStateManager$StencilState com/mojang/blaze3d/platform/GlStateManager$k
	fail c
	func a
	mask b
	zfail d
	zpass e
com/mojang/blaze3d/platform/GlStateManager$TextureState com/mojang/blaze3d/platform/GlStateManager$l
	binding b
	enable a
com/mojang/blaze3d/platform/GlStateManager$Viewport com/mojang/blaze3d/platform/GlStateManager$m
	$VALUES f
	INSTANCE a
	height e
	width d
	x b
	y c
	$values ()[Lcom/mojang/blaze3d/platform/GlStateManager$Viewport; e
	height ()I d
	width ()I c
	x ()I a
	y ()I b
com/mojang/blaze3d/platform/GlUtil dpf
	allocateMemory (I)Ljava/nio/ByteBuffer; a
	freeMemory (Ljava/nio/Buffer;)V a
	getCpuInfo ()Ljava/lang/String; b
	getOpenGLVersion ()Ljava/lang/String; d
	getRenderer ()Ljava/lang/String; c
	getVendor ()Ljava/lang/String; a
	populateSnooperWithOpenGL (Lcom/mojang/blaze3d/platform/SnooperAccess;)V a
com/mojang/blaze3d/platform/InputConstants dpg
	CURSOR bs
	CURSOR_DISABLED bt
	CURSOR_NORMAL bu
	GLFW_RAW_MOUSE_MOTION bx
	GLFW_RAW_MOUSE_MOTION_SUPPORTED bw
	KEY_0 a
	KEY_1 b
	KEY_2 c
	KEY_3 d
	KEY_4 e
	KEY_5 f
	KEY_6 g
	KEY_7 h
	KEY_8 i
	KEY_9 j
	KEY_A k
	KEY_ADD aB
	KEY_APOSTROPHE aC
	KEY_B l
	KEY_BACKSLASH aD
	KEY_BACKSPACE ba
	KEY_C m
	KEY_CAPSLOCK bh
	KEY_COMMA aE
	KEY_D n
	KEY_DELETE bb
	KEY_DOWN ax
	KEY_E o
	KEY_END bc
	KEY_EQUALS aF
	KEY_ESCAPE aZ
	KEY_F p
	KEY_F1 K
	KEY_F10 T
	KEY_F11 U
	KEY_F12 V
	KEY_F13 W
	KEY_F14 X
	KEY_F15 Y
	KEY_F16 Z
	KEY_F17 aa
	KEY_F18 ab
	KEY_F19 ac
	KEY_F2 L
	KEY_F20 ad
	KEY_F21 ae
	KEY_F22 af
	KEY_F23 ag
	KEY_F24 ah
	KEY_F25 ai
	KEY_F3 M
	KEY_F4 N
	KEY_F5 O
	KEY_F6 P
	KEY_F7 Q
	KEY_F8 R
	KEY_F9 S
	KEY_G q
	KEY_GRAVE aG
	KEY_H r
	KEY_HOME bd
	KEY_I s
	KEY_INSERT be
	KEY_J t
	KEY_K u
	KEY_L v
	KEY_LALT aQ
	KEY_LBRACKET aH
	KEY_LCONTROL aR
	KEY_LEFT ay
	KEY_LSHIFT aS
	KEY_LWIN aT
	KEY_M w
	KEY_MINUS aI
	KEY_MULTIPLY aJ
	KEY_N x
	KEY_NUMLOCK aj
	KEY_NUMPAD0 ak
	KEY_NUMPAD1 al
	KEY_NUMPAD2 am
	KEY_NUMPAD3 an
	KEY_NUMPAD4 ao
	KEY_NUMPAD5 ap
	KEY_NUMPAD6 aq
	KEY_NUMPAD7 ar
	KEY_NUMPAD8 as
	KEY_NUMPAD9 at
	KEY_NUMPADCOMMA au
	KEY_NUMPADENTER av
	KEY_NUMPADEQUALS aw
	KEY_O y
	KEY_P z
	KEY_PAGEDOWN bf
	KEY_PAGEUP bg
	KEY_PAUSE bi
	KEY_PERIOD aK
	KEY_PRINTSCREEN bk
	KEY_Q A
	KEY_R B
	KEY_RALT aU
	KEY_RBRACKET aL
	KEY_RCONTROL aV
	KEY_RETURN aY
	KEY_RIGHT az
	KEY_RSHIFT aW
	KEY_RWIN aX
	KEY_S C
	KEY_SCROLLLOCK bj
	KEY_SEMICOLON aM
	KEY_SLASH aN
	KEY_SPACE aO
	KEY_T D
	KEY_TAB aP
	KEY_U E
	KEY_UP aA
	KEY_V F
	KEY_W G
	KEY_X H
	KEY_Y I
	KEY_Z J
	MOD_CONTROL br
	MOUSE_BUTTON_LEFT bo
	MOUSE_BUTTON_MIDDLE bp
	MOUSE_BUTTON_RIGHT bq
	PRESS bl
	RELEASE bm
	REPEAT bn
	UNKNOWN bv
	getKey (II)Lcom/mojang/blaze3d/platform/InputConstants$Key; a
	getKey (Ljava/lang/String;)Lcom/mojang/blaze3d/platform/InputConstants$Key; a
	grabOrReleaseMouse (JIDD)V a
	isKeyDown (JI)Z a
	isRawMouseInputSupported ()Z a
	setupKeyboardCallbacks (JLorg/lwjgl/glfw/GLFWKeyCallbackI;Lorg/lwjgl/glfw/GLFWCharModsCallbackI;)V a
	setupMouseCallbacks (JLorg/lwjgl/glfw/GLFWCursorPosCallbackI;Lorg/lwjgl/glfw/GLFWMouseButtonCallbackI;Lorg/lwjgl/glfw/GLFWScrollCallbackI;Lorg/lwjgl/glfw/GLFWDropCallbackI;)V a
	updateRawMouseInput (JZ)V a
com/mojang/blaze3d/platform/InputConstants$Key dpg$a
	NAME_MAP e
	displayName d
	name a
	type b
	value c
	getDisplayName ()Lnet/minecraft/network/chat/Component; d
	getName ()Ljava/lang/String; c
	getNumericKeyValue ()Ljava/util/OptionalInt; e
	getType ()Lcom/mojang/blaze3d/platform/InputConstants$Type; a
	getValue ()I b
com/mojang/blaze3d/platform/InputConstants$Type dpg$b
	$VALUES g
	KEYSYM a
	MOUSE c
	SCANCODE b
	defaultPrefix e
	displayTextSupplier f
	map d
	$values ()[Lcom/mojang/blaze3d/platform/InputConstants$Type; a
	addKey (Lcom/mojang/blaze3d/platform/InputConstants$Type;Ljava/lang/String;I)V a
	getOrCreate (I)Lcom/mojang/blaze3d/platform/InputConstants$Key; a
com/mojang/blaze3d/platform/Lighting dph
	DIFFUSE_LIGHT_0 a
	DIFFUSE_LIGHT_1 b
	INVENTORY_DIFFUSE_LIGHT_0 e
	INVENTORY_DIFFUSE_LIGHT_1 f
	NETHER_DIFFUSE_LIGHT_0 c
	NETHER_DIFFUSE_LIGHT_1 d
	setupFor3DItems ()V b
	setupForEntityInInventory ()V c
	setupForFlatItems ()V a
	setupLevel (Lcom/mojang/math/Matrix4f;)V b
	setupNetherLevel (Lcom/mojang/math/Matrix4f;)V a
com/mojang/blaze3d/platform/MemoryTracker dpi
	createByteBuffer (I)Ljava/nio/ByteBuffer; a
	createCharBuffer (I)Ljava/nio/CharBuffer; c
	createDoubleBuffer (I)Ljava/nio/DoubleBuffer; g
	createFloatBuffer (I)Ljava/nio/FloatBuffer; f
	createIntBuffer (I)Ljava/nio/IntBuffer; d
	createLongBuffer (I)Ljava/nio/LongBuffer; e
	createShortBuffer (I)Ljava/nio/ShortBuffer; b
com/mojang/blaze3d/platform/Monitor dpj
	currentMode c
	monitor a
	videoModes b
	x d
	y e
	getCurrentMode ()Lcom/mojang/blaze3d/platform/VideoMode; b
	getMode (I)Lcom/mojang/blaze3d/platform/VideoMode; a
	getModeCount ()I e
	getMonitor ()J f
	getPreferredVidMode (Ljava/util/Optional;)Lcom/mojang/blaze3d/platform/VideoMode; a
	getVideoModeIndex (Lcom/mojang/blaze3d/platform/VideoMode;)I a
	getX ()I c
	getY ()I d
	refreshVideoModes ()V a
com/mojang/blaze3d/platform/MonitorCreator dpk
com/mojang/blaze3d/platform/NativeImage dpl
	LOGGER a
	OFFSET_A b
	OFFSET_B c
	OFFSET_G d
	OFFSET_R e
	OPEN_OPTIONS f
	format g
	height i
	pixels k
	size l
	useStbFree j
	width h
	_upload (IIIIIIIZZZZ)V b
	asByteArray ()[B f
	blendPixel (III)V b
	checkAllocated ()V i
	combine (IIII)I a
	copyFrom (Lcom/mojang/blaze3d/platform/NativeImage;)V a
	copyFromFont (Lorg/lwjgl/stb/STBTTFontinfo;IIIFFFFII)V a
	copyRect (IIIIIIZZ)V a
	downloadDepthBuffer (F)V a
	downloadTexture (IZ)V a
	drawPixels ()V e
	fillRect (IIIII)V a
	flipY ()V g
	format ()Lcom/mojang/blaze3d/platform/NativeImage$Format; c
	fromBase64 (Ljava/lang/String;)Lcom/mojang/blaze3d/platform/NativeImage; b
	getA (I)I a
	getB (I)I d
	getBlueOrLuminance (II)B d
	getG (I)I c
	getGreenOrLuminance (II)B c
	getHeight ()I b
	getLuminanceOrAlpha (II)B e
	getPixelRGBA (II)I a
	getR (I)I b
	getRedOrLuminance (II)B b
	getWidth ()I a
	isOutsideBounds (II)Z f
	makePixelArray ()[I d
	read (Lcom/mojang/blaze3d/platform/NativeImage$Format;Ljava/io/InputStream;)Lcom/mojang/blaze3d/platform/NativeImage; a
	read (Lcom/mojang/blaze3d/platform/NativeImage$Format;Ljava/nio/ByteBuffer;)Lcom/mojang/blaze3d/platform/NativeImage; a
	read (Ljava/io/InputStream;)Lcom/mojang/blaze3d/platform/NativeImage; a
	read (Ljava/nio/ByteBuffer;)Lcom/mojang/blaze3d/platform/NativeImage; a
	resizeSubRectTo (IIIILcom/mojang/blaze3d/platform/NativeImage;)V a
	setFilter (ZZ)V a
	setPixelLuminance (IIB)V a
	setPixelRGBA (III)V a
	untrack ()V h
	upload (IIIIIIIZZ)V a
	upload (IIIIIIIZZZZ)V a
	upload (IIIZ)V a
	writeToChannel (Ljava/nio/channels/WritableByteChannel;)Z a
	writeToFile (Ljava/io/File;)V a
	writeToFile (Ljava/lang/String;)V a
	writeToFile (Ljava/nio/file/Path;)V a
com/mojang/blaze3d/platform/NativeImage$Format dpl$a
	$VALUES r
	LUMINANCE d
	LUMINANCE_ALPHA c
	RGB b
	RGBA a
	alphaOffset p
	blueOffset n
	components e
	glFormat f
	greenOffset m
	hasAlpha k
	hasBlue i
	hasGreen h
	hasLuminance j
	hasRed g
	luminanceOffset o
	redOffset l
	supportedByStb q
	$values ()[Lcom/mojang/blaze3d/platform/NativeImage$Format; x
	alphaOffset ()I n
	blueOffset ()I l
	components ()I a
	getStbFormat (I)Lcom/mojang/blaze3d/platform/NativeImage$Format; a
	glFormat ()I d
	greenOffset ()I k
	hasAlpha ()Z i
	hasBlue ()Z g
	hasGreen ()Z f
	hasLuminance ()Z h
	hasLuminanceOrAlpha ()Z r
	hasLuminanceOrBlue ()Z q
	hasLuminanceOrGreen ()Z p
	hasLuminanceOrRed ()Z o
	hasRed ()Z e
	luminanceOffset ()I m
	luminanceOrAlphaOffset ()I v
	luminanceOrBlueOffset ()I u
	luminanceOrGreenOffset ()I t
	luminanceOrRedOffset ()I s
	redOffset ()I j
	setPackPixelStoreState ()V b
	setUnpackPixelStoreState ()V c
	supportedByStb ()Z w
com/mojang/blaze3d/platform/NativeImage$InternalGlFormat dpl$b
	$VALUES f
	RED d
	RG c
	RGB b
	RGBA a
	glFormat e
	$values ()[Lcom/mojang/blaze3d/platform/NativeImage$InternalGlFormat; b
	glFormat ()I a
com/mojang/blaze3d/platform/NativeImage$WriteCallback dpl$c
	exception b
	output a
	throwIfException ()V a
com/mojang/blaze3d/platform/PngInfo dpm
	height b
	width a
	createCallbacks (Ljava/io/InputStream;)Lcom/mojang/blaze3d/platform/PngInfo$StbReader; a
com/mojang/blaze3d/platform/PngInfo$StbReader dpm$a
	closed a
	eof (J)I a
	read (JI)I b
	read (JJI)I a
	skip (I)V a
	skip (JI)V a
com/mojang/blaze3d/platform/PngInfo$StbReaderBufferedChannel dpm$b
	START_BUFFER_SIZE b
	bufferSize e
	channel c
	consumed g
	read f
	readBufferAddress d
	fillReadBuffer (I)V b
	read (JI)I b
	skip (I)V a
com/mojang/blaze3d/platform/PngInfo$StbReaderSeekableByteChannel dpm$c
	channel b
	eof (J)I a
	read (JI)I b
	skip (I)V a
com/mojang/blaze3d/platform/ScreenManager dpn
	monitorCreator b
	monitors a
	clamp (III)I a
	findBestMonitor (Lcom/mojang/blaze3d/platform/Window;)Lcom/mojang/blaze3d/platform/Monitor; a
	getMonitor (J)Lcom/mojang/blaze3d/platform/Monitor; a
	onMonitorChange (JI)V a
	shutdown ()V a
com/mojang/blaze3d/platform/SnooperAccess dpo
com/mojang/blaze3d/platform/VideoMode dpp
	PATTERN g
	blueBits e
	greenBits d
	height b
	redBits c
	refreshRate f
	width a
	getBlueBits ()I e
	getGreenBits ()I d
	getHeight ()I b
	getRedBits ()I c
	getRefreshRate ()I f
	getWidth ()I a
	read (Ljava/lang/String;)Ljava/util/Optional; a
	write ()Ljava/lang/String; g
com/mojang/blaze3d/platform/Window dpq
	LOGGER a
	actuallyFullscreen l
	defaultErrorCallback b
	dirty w
	errorSection v
	eventHandler c
	framebufferHeight r
	framebufferWidth q
	framerateLimit x
	fullscreen k
	guiScale u
	guiScaledHeight t
	guiScaledWidth s
	height p
	preferredFullscreenVideoMode j
	screenManager d
	vsync y
	width o
	window e
	windowedHeight i
	windowedWidth h
	windowedX f
	windowedY g
	x m
	y n
	bootCrash (IJ)V b
	calculateScale (IZ)I a
	changeFullscreenVideoMode ()V g
	checkGlfwError (Ljava/util/function/BiConsumer;)V a
	defaultErrorCallback (IJ)V a
	findBestMonitor ()Lcom/mojang/blaze3d/platform/Monitor; t
	getFramerateLimit ()I d
	getGuiScale ()D s
	getGuiScaledHeight ()I p
	getGuiScaledWidth ()I o
	getHeight ()I l
	getPreferredFullscreenVideoMode ()Ljava/util/Optional; f
	getRefreshRate ()I a
	getScreenHeight ()I n
	getScreenWidth ()I m
	getWidth ()I k
	getWindow ()J i
	getX ()I q
	getY ()I r
	isFullscreen ()Z j
	onEnter (JZ)V b
	onFocus (JZ)V a
	onFramebufferResize (JII)V b
	onMove (JII)V a
	onResize (JII)V c
	readIconPixels (Ljava/io/InputStream;Ljava/nio/IntBuffer;Ljava/nio/IntBuffer;Ljava/nio/IntBuffer;)Ljava/nio/ByteBuffer; a
	refreshFramebufferSize ()V v
	setBootErrorCallback ()V u
	setDefaultErrorCallback ()V c
	setErrorSection (Ljava/lang/String;)V a
	setFramerateLimit (I)V a
	setGuiScale (D)V a
	setHeight (I)V c
	setIcon (Ljava/io/InputStream;Ljava/io/InputStream;)V a
	setMode ()V w
	setPreferredFullscreenVideoMode (Ljava/util/Optional;)V a
	setTitle (Ljava/lang/String;)V b
	setWidth (I)V b
	setWindowed (II)V a
	shouldClose ()Z b
	toggleFullScreen ()V h
	updateDisplay ()V e
	updateFullscreen (Z)V c
	updateRawMouseInput (Z)V b
	updateVsync (Z)V a
com/mojang/blaze3d/platform/Window$WindowInitFailed dpq$a
com/mojang/blaze3d/platform/WindowEventHandler dpr
	cursorEntered ()V b
	resizeDisplay ()V a
	setWindowActive (Z)V a
com/mojang/blaze3d/preprocessor/GlslPreprocessor dpt
	C_COMMENT a
	LINE_COMMENT b
	REGEX_ENDS_WITH_WHITESPACE e
	REGEX_MOJ_IMPORT c
	REGEX_VERSION d
	applyImport (ZLjava/lang/String;)Ljava/lang/String; a
	isDirectiveDisabled (Ljava/lang/String;Ljava/util/regex/Matcher;I)Z a
	isDirectiveEnabled (Ljava/lang/String;Ljava/util/regex/Matcher;)Z a
	process (Ljava/lang/String;)Ljava/util/List; a
	processImports (Ljava/lang/String;Lcom/mojang/blaze3d/preprocessor/GlslPreprocessor$Context;Ljava/lang/String;)Ljava/util/List; a
	processVersions (Ljava/lang/String;Lcom/mojang/blaze3d/preprocessor/GlslPreprocessor$Context;)Ljava/lang/String; a
	setVersion (Ljava/lang/String;I)Ljava/lang/String; a
com/mojang/blaze3d/preprocessor/GlslPreprocessor$Context dpt$a
	glslVersion a
	sourceId b
com/mojang/blaze3d/shaders/AbstractUniform dpv
	set (F)V a
	set (FF)V a
	set (FFF)V a
	set (FFFF)V a
	set (I)V a
	set (II)V a
	set (III)V a
	set (IIII)V b
	set (Lcom/mojang/math/Matrix4f;)V a
	set (Lcom/mojang/math/Vector3f;)V a
	set (Lcom/mojang/math/Vector4f;)V a
	set ([F)V a
	setMat2x2 (FFFF)V c
	setMat2x3 (FFFFFF)V a
	setMat2x4 (FFFFFFFF)V a
	setMat3x2 (FFFFFF)V b
	setMat3x3 (FFFFFFFFF)V a
	setMat3x4 (FFFFFFFFFFFF)V a
	setMat4x2 (FFFFFFFF)V b
	setMat4x3 (FFFFFFFFFFFF)V b
	setMat4x4 (FFFFFFFFFFFFFFFF)V a
	setSafe (FFFF)V b
	setSafe (IIII)V a
com/mojang/blaze3d/shaders/BlendMode dpw
	blendFunc f
	dstAlphaFactor e
	dstColorFactor d
	lastApplied a
	opaque h
	separateBlend g
	srcAlphaFactor c
	srcColorFactor b
	apply ()V a
	isOpaque ()Z b
	stringToBlendFactor (Ljava/lang/String;)I b
	stringToBlendFunc (Ljava/lang/String;)I a
com/mojang/blaze3d/shaders/Effect dpx
com/mojang/blaze3d/shaders/EffectProgram dpy
	PREPROCESSOR a
	references b
	attachToEffect (Lcom/mojang/blaze3d/shaders/Effect;)V a
	close ()V a
	compileShader (Lcom/mojang/blaze3d/shaders/Program$Type;Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lcom/mojang/blaze3d/shaders/EffectProgram; a
com/mojang/blaze3d/shaders/Program dpz
	LOGGER a
	MAX_LOG_LENGTH b
	id e
	name d
	type c
	attachToShader (Lcom/mojang/blaze3d/shaders/Shader;)V a
	close ()V a
	compileShader (Lcom/mojang/blaze3d/shaders/Program$Type;Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Lcom/mojang/blaze3d/preprocessor/GlslPreprocessor;)Lcom/mojang/blaze3d/shaders/Program; a
	compileShaderInternal (Lcom/mojang/blaze3d/shaders/Program$Type;Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Lcom/mojang/blaze3d/preprocessor/GlslPreprocessor;)I b
	createProgram (Lcom/mojang/blaze3d/shaders/Program$Type;Ljava/lang/String;I)Lcom/mojang/blaze3d/shaders/Program; a
	getId ()I c
	getName ()Ljava/lang/String; b
com/mojang/blaze3d/shaders/Program$Type dpz$a
	$VALUES g
	FRAGMENT b
	VERTEX a
	extension d
	glType e
	name c
	programs f
	$values ()[Lcom/mojang/blaze3d/shaders/Program$Type; e
	getExtension ()Ljava/lang/String; b
	getGlType ()I d
	getName ()Ljava/lang/String; a
	getPrograms ()Ljava/util/Map; c
com/mojang/blaze3d/shaders/ProgramManager dqa
	LOGGER a
	createProgram ()I a
	glUseProgram (I)V a
	linkShader (Lcom/mojang/blaze3d/shaders/Shader;)V b
	releaseProgram (Lcom/mojang/blaze3d/shaders/Shader;)V a
com/mojang/blaze3d/shaders/Shader dqb
	attachToProgram ()V e
	getFragmentProgram ()Lcom/mojang/blaze3d/shaders/Program; d
	getId ()I a
	getVertexProgram ()Lcom/mojang/blaze3d/shaders/Program; c
	markDirty ()V b
com/mojang/blaze3d/shaders/Uniform dqc
	LOGGER l
	TRANSPOSE_MATRICIES m
	UT_FLOAT1 e
	UT_FLOAT2 f
	UT_FLOAT3 g
	UT_FLOAT4 h
	UT_INT1 a
	UT_INT2 b
	UT_INT3 c
	UT_INT4 d
	UT_MAT2 i
	UT_MAT3 j
	UT_MAT4 k
	count o
	dirty t
	floatValues r
	intValues q
	location n
	name s
	parent u
	type p
	getCount ()I d
	getFloatBuffer ()Ljava/nio/FloatBuffer; g
	getIntBuffer ()Ljava/nio/IntBuffer; f
	getLocation ()I c
	getName ()Ljava/lang/String; a
	getType ()I e
	getTypeFromString (Ljava/lang/String;)I a
	glBindAttribLocation (IILjava/lang/CharSequence;)V a
	glGetAttribLocation (ILjava/lang/CharSequence;)I b
	glGetUniformLocation (ILjava/lang/CharSequence;)I a
	markDirty ()V h
	set (F)V a
	set (FF)V a
	set (FFF)V a
	set (FFFF)V a
	set (I)V a
	set (IF)V a
	set (II)V a
	set (III)V a
	set (IIII)V b
	set (Lcom/mojang/math/Matrix4f;)V a
	set (Lcom/mojang/math/Vector3f;)V a
	set (Lcom/mojang/math/Vector4f;)V a
	set ([F)V a
	setLocation (I)V b
	setMat2x2 (FFFF)V c
	setMat2x3 (FFFFFF)V a
	setMat2x4 (FFFFFFFF)V a
	setMat3x2 (FFFFFF)V b
	setMat3x3 (FFFFFFFFF)V a
	setMat3x4 (FFFFFFFFFFFF)V a
	setMat4x2 (FFFFFFFF)V b
	setMat4x3 (FFFFFFFFFFFF)V b
	setMat4x4 (FFFFFFFFFFFFFFFF)V a
	setSafe (FFFF)V b
	setSafe (IIII)V a
	upload ()V b
	uploadAsFloat ()V j
	uploadAsInteger ()V i
	uploadAsMatrix ()V k
	uploadInteger (II)V b
com/mojang/blaze3d/systems/RenderSystem$AutoStorageIndexBuffer com/mojang/blaze3d/systems/RenderSystem$a
	generator c
	indexCount f
	indexStride b
	name d
	type e
	vertexStride a
	ensureStorage (I)V a
	intConsumer (Ljava/nio/ByteBuffer;)Lit/unimi/dsi/fastutil/ints/IntConsumer; a
	name ()I a
	type ()Lcom/mojang/blaze3d/vertex/VertexFormat$IndexType; b
com/mojang/blaze3d/systems/RenderSystem$AutoStorageIndexBuffer$IndexGenerator com/mojang/blaze3d/systems/RenderSystem$a$a
com/mojang/blaze3d/vertex/BufferBuilder dqf
	GROWTH_SIZE g
	LOGGER h
	buffer i
	building v
	currentElement p
	drawStates j
	elementIndex q
	fastFormat t
	format r
	fullFormat u
	indexOnly A
	lastPoppedStateIndex k
	mode s
	nextElementByte m
	sortX x
	sortY y
	sortZ z
	sortingPoints w
	totalRenderedBytes l
	totalUploadedBytes n
	vertices o
	begin (Lcom/mojang/blaze3d/vertex/VertexFormat$Mode;Lcom/mojang/blaze3d/vertex/VertexFormat;)V a
	building ()Z i
	clear ()V f
	color (IIII)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	currentElement ()Lcom/mojang/blaze3d/vertex/VertexFormatElement; h
	discard ()V g
	end ()V b
	endVertex ()V c
	ensureCapacity (I)V c
	ensureVertexCapacity ()V k
	getSortState ()Lcom/mojang/blaze3d/vertex/BufferBuilder$SortState; a
	intConsumer (Lcom/mojang/blaze3d/vertex/VertexFormat$IndexType;)Lit/unimi/dsi/fastutil/ints/IntConsumer; a
	makeQuadSortingPoints ()[Lcom/mojang/math/Vector3f; l
	nextElement ()V d
	popNextBuffer ()Lcom/mojang/datafixers/util/Pair; e
	putByte (IB)V a
	putFloat (IF)V a
	putShort (IS)V a
	putSortedQuadIndices (Lcom/mojang/blaze3d/vertex/VertexFormat$IndexType;)V b
	restoreSortState (Lcom/mojang/blaze3d/vertex/BufferBuilder$SortState;)V a
	roundUp (I)I d
	setQuadSortOrigin (FFF)V a
	switchFormat (Lcom/mojang/blaze3d/vertex/VertexFormat;)V a
	vertex (FFFFFFFFFIIFFF)V a
com/mojang/blaze3d/vertex/BufferBuilder$DrawState dqf$a
	format a
	indexCount c
	indexOnly f
	indexType e
	mode d
	sequentialIndex g
	vertexCount b
	bufferSize ()I g
	format ()Lcom/mojang/blaze3d/vertex/VertexFormat; a
	indexBufferSize ()I j
	indexCount ()I c
	indexOnly ()Z h
	indexType ()Lcom/mojang/blaze3d/vertex/VertexFormat$IndexType; e
	mode ()Lcom/mojang/blaze3d/vertex/VertexFormat$Mode; d
	sequentialIndex ()Z i
	vertexBufferSize ()I f
	vertexCount ()I b
com/mojang/blaze3d/vertex/BufferBuilder$SortState dqf$b
	mode a
	sortX d
	sortY e
	sortZ f
	sortingPoints c
	vertices b
com/mojang/blaze3d/vertex/BufferUploader dqg
	lastFormat d
	lastIndexBufferObject c
	lastVertexArrayObject a
	lastVertexBufferObject b
	_end (Ljava/nio/ByteBuffer;Lcom/mojang/blaze3d/vertex/VertexFormat$Mode;Lcom/mojang/blaze3d/vertex/VertexFormat;ILcom/mojang/blaze3d/vertex/VertexFormat$IndexType;IZ)V a
	_endInternal (Lcom/mojang/blaze3d/vertex/BufferBuilder;)V b
	end (Lcom/mojang/blaze3d/vertex/BufferBuilder;)V a
	invalidateElementArrayBufferBinding ()V b
	reset ()V a
	updateVertexSetup (Lcom/mojang/blaze3d/vertex/VertexFormat;)V a
com/mojang/blaze3d/vertex/BufferVertexConsumer dqh
	color (IIII)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	currentElement ()Lcom/mojang/blaze3d/vertex/VertexFormatElement; h
	nextElement ()V d
	normal (FFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	normalIntValue (F)B a
	overlayCoords (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	putByte (IB)V a
	putFloat (IF)V a
	putShort (IS)V a
	uv (FF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	uv2 (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	uvShort (SSI)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	vertex (DDD)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
com/mojang/blaze3d/vertex/DefaultVertexFormat dqi
	BLIT_SCREEN i
	BLOCK j
	ELEMENT_COLOR b
	ELEMENT_NORMAL f
	ELEMENT_PADDING g
	ELEMENT_POSITION a
	ELEMENT_UV h
	ELEMENT_UV0 c
	ELEMENT_UV1 d
	ELEMENT_UV2 e
	NEW_ENTITY k
	PARTICLE l
	POSITION m
	POSITION_COLOR n
	POSITION_COLOR_LIGHTMAP p
	POSITION_COLOR_NORMAL o
	POSITION_COLOR_TEX r
	POSITION_COLOR_TEX_LIGHTMAP t
	POSITION_TEX q
	POSITION_TEX_COLOR s
	POSITION_TEX_COLOR_NORMAL v
	POSITION_TEX_LIGHTMAP_COLOR u
com/mojang/blaze3d/vertex/DefaultedVertexConsumer dqj
	defaultA e
	defaultB d
	defaultColorSet a
	defaultG c
	defaultR b
	defaultColor (IIII)V b
	unsetDefaultColor ()V j
com/mojang/blaze3d/vertex/PoseStack dqk
	poseStack a
	clear ()Z d
	last ()Lcom/mojang/blaze3d/vertex/PoseStack$Pose; c
	mulPose (Lcom/mojang/math/Quaternion;)V a
	mulPoseMatrix (Lcom/mojang/math/Matrix4f;)V a
	popPose ()V b
	pushPose ()V a
	scale (FFF)V a
	setIdentity ()V e
	translate (DDD)V a
com/mojang/blaze3d/vertex/PoseStack$Pose dqk$a
	normal b
	pose a
	normal ()Lcom/mojang/math/Matrix3f; b
	pose ()Lcom/mojang/math/Matrix4f; a
com/mojang/blaze3d/vertex/SheetedDecalTextureGenerator dql
	cameraInversePose h
	delegate g
	lightCoords o
	normalInversePose i
	nx p
	ny q
	nz r
	overlayU m
	overlayV n
	x j
	y k
	z l
	color (IIII)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	endVertex ()V c
	normal (FFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	overlayCoords (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	resetState ()V a
	uv (FF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	uv2 (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	vertex (DDD)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
com/mojang/blaze3d/vertex/Tesselator dqm
	INSTANCE d
	MAX_FLOATS b
	MAX_MEMORY_USE a
	builder c
	end ()V b
	getBuilder ()Lcom/mojang/blaze3d/vertex/BufferBuilder; c
	getInstance ()Lcom/mojang/blaze3d/vertex/Tesselator; a
com/mojang/blaze3d/vertex/VertexBuffer dqn
	arrayObjectId d
	format h
	indexBufferId b
	indexCount e
	indexType c
	mode f
	sequentialIndices g
	vertextBufferId a
	_drawWithShader (Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Matrix4f;Lnet/minecraft/client/renderer/ShaderInstance;)V b
	bind ()V a
	bindVertexArray ()V g
	draw ()V c
	drawChunkLayer ()V d
	drawWithShader (Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Matrix4f;Lnet/minecraft/client/renderer/ShaderInstance;)V a
	getFormat ()Lcom/mojang/blaze3d/vertex/VertexFormat; f
	unbind ()V e
	unbindVertexArray ()V b
	upload (Lcom/mojang/blaze3d/vertex/BufferBuilder;)V a
	uploadLater (Lcom/mojang/blaze3d/vertex/BufferBuilder;)Ljava/util/concurrent/CompletableFuture; b
	upload_ (Lcom/mojang/blaze3d/vertex/BufferBuilder;)V c
com/mojang/blaze3d/vertex/VertexConsumer dqo
	LOGGER f
	color (FFFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	color (IIII)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	defaultColor (IIII)V b
	endVertex ()V c
	normal (FFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	normal (Lcom/mojang/math/Matrix3f;FFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	overlayCoords (I)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	overlayCoords (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	putBulkData (Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lnet/minecraft/client/renderer/block/model/BakedQuad;FFFII)V a
	putBulkData (Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lnet/minecraft/client/renderer/block/model/BakedQuad;[FFFF[IIZ)V a
	unsetDefaultColor ()V j
	uv (FF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	uv2 (I)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	uv2 (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	vertex (DDD)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	vertex (FFFFFFFFFIIFFF)V a
	vertex (Lcom/mojang/math/Matrix4f;FFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
com/mojang/blaze3d/vertex/VertexFormat dqp
	elementMapping b
	elements a
	indexBufferObject g
	offsets c
	vertexArrayObject e
	vertexBufferObject f
	vertexSize d
	_clearBufferState ()V k
	_setupBufferState ()V j
	clearBufferState ()V f
	getElementAttributeNames ()Lcom/google/common/collect/ImmutableList; d
	getElements ()Lcom/google/common/collect/ImmutableList; c
	getIntegerSize ()I a
	getOrCreateIndexBufferObject ()I i
	getOrCreateVertexArrayObject ()I g
	getOrCreateVertexBufferObject ()I h
	getVertexSize ()I b
	setupBufferState ()V e
com/mojang/blaze3d/vertex/VertexFormat$IndexType dqp$a
	$VALUES f
	BYTE a
	INT c
	SHORT b
	asGLType d
	bytes e
	$values ()[Lcom/mojang/blaze3d/vertex/VertexFormat$IndexType; a
	least (I)Lcom/mojang/blaze3d/vertex/VertexFormat$IndexType; a
com/mojang/blaze3d/vertex/VertexFormat$Mode dqp$b
	$VALUES l
	DEBUG_LINES c
	DEBUG_LINE_STRIP d
	LINES a
	LINE_STRIP b
	QUADS h
	TRIANGLES e
	TRIANGLE_FAN g
	TRIANGLE_STRIP f
	asGLMode i
	primitiveLength j
	primitiveStride k
	$values ()[Lcom/mojang/blaze3d/vertex/VertexFormat$Mode; a
	indexCount (I)I a
com/mojang/blaze3d/vertex/VertexFormatElement dqq
	byteSize e
	count d
	index c
	type a
	usage b
	clearBufferState (I)V a
	getByteSize ()I e
	getCount ()I c
	getIndex ()I d
	getType ()Lcom/mojang/blaze3d/vertex/VertexFormatElement$Type; a
	getUsage ()Lcom/mojang/blaze3d/vertex/VertexFormatElement$Usage; b
	isPosition ()Z f
	setupBufferState (IJI)V a
	supportsUsage (ILcom/mojang/blaze3d/vertex/VertexFormatElement$Usage;)Z a
com/mojang/blaze3d/vertex/VertexFormatElement$Type dqq$a
	$VALUES k
	BYTE c
	FLOAT a
	INT g
	SHORT e
	UBYTE b
	UINT f
	USHORT d
	glType j
	name i
	size h
	$values ()[Lcom/mojang/blaze3d/vertex/VertexFormatElement$Type; d
	getGlType ()I c
	getName ()Ljava/lang/String; b
	getSize ()I a
com/mojang/blaze3d/vertex/VertexFormatElement$Usage dqq$b
	$VALUES j
	COLOR c
	GENERIC f
	NORMAL b
	PADDING e
	POSITION a
	UV d
	clearState i
	name g
	setupState h
	$values ()[Lcom/mojang/blaze3d/vertex/VertexFormatElement$Usage; b
	clearBufferState (II)V a
	getName ()Ljava/lang/String; a
	setupBufferState (IIIJII)V a
com/mojang/blaze3d/vertex/VertexFormatElement$Usage$ClearState dqq$b$a
com/mojang/blaze3d/vertex/VertexFormatElement$Usage$SetupState dqq$b$b
com/mojang/blaze3d/vertex/VertexMultiConsumer dqr
	create ()Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	create (Lcom/mojang/blaze3d/vertex/VertexConsumer;)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	create (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/blaze3d/vertex/VertexConsumer;)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	create ([Lcom/mojang/blaze3d/vertex/VertexConsumer;)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
com/mojang/blaze3d/vertex/VertexMultiConsumer$Double dqr$a
	first a
	second b
	color (IIII)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	defaultColor (IIII)V b
	endVertex ()V c
	normal (FFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	overlayCoords (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	unsetDefaultColor ()V j
	uv (FF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	uv2 (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	vertex (DDD)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	vertex (FFFFFFFFFIIFFF)V a
com/mojang/blaze3d/vertex/VertexMultiConsumer$Multiple dqr$b
	delegates a
	color (IIII)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	defaultColor (IIII)V b
	endVertex ()V c
	forEach (Ljava/util/function/Consumer;)V a
	normal (FFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	overlayCoords (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	unsetDefaultColor ()V j
	uv (FF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	uv2 (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	vertex (DDD)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	vertex (FFFFFFFFFIIFFF)V a
com/mojang/math/Constants a
	DEG_TO_RAD c
	EPSILON d
	PI a
	RAD_TO_DEG b
com/mojang/math/FieldsAreNonnullByDefault b
com/mojang/math/Matrix3f c
	CS l
	G k
	ORDER j
	SQ2 n
	SS m
	m00 a
	m01 b
	m02 c
	m10 d
	m11 e
	m12 f
	m20 g
	m21 h
	m22 i
	add (Lcom/mojang/math/Matrix3f;)V c
	adjugateAndDet ()F d
	approxGivensQuat (FFF)Lcom/mojang/datafixers/util/Pair; b
	bufferIndex (II)I a
	copy ()Lcom/mojang/math/Matrix3f; h
	createScaleMatrix (FFF)Lcom/mojang/math/Matrix3f; a
	determinant ()F e
	invert ()Z f
	load (Lcom/mojang/math/Matrix3f;)V a
	load (Ljava/nio/FloatBuffer;)V a
	load (Ljava/nio/FloatBuffer;Z)V a
	loadTransposed (Ljava/nio/FloatBuffer;)V b
	mul (F)V a
	mul (Lcom/mojang/math/Matrix3f;)V b
	mul (Lcom/mojang/math/Quaternion;)V a
	qrGivensQuat (FF)Lcom/mojang/datafixers/util/Pair; a
	set (IIF)V a
	setIdentity ()V c
	sortSingularValues (Lcom/mojang/math/Matrix3f;Lcom/mojang/math/Quaternion;)V a
	stepJacobi (Lcom/mojang/math/Matrix3f;)Lcom/mojang/math/Quaternion; e
	store (Ljava/nio/FloatBuffer;)V c
	store (Ljava/nio/FloatBuffer;Z)V b
	storeTransposed (Ljava/nio/FloatBuffer;)V d
	sub (Lcom/mojang/math/Matrix3f;)V d
	svdDecompose ()Lorg/apache/commons/lang3/tuple/Triple; b
	trace ()F g
	transpose ()V a
com/mojang/math/Matrix4f d
	ORDER q
	m00 a
	m01 b
	m02 c
	m03 d
	m10 e
	m11 f
	m12 g
	m13 h
	m20 i
	m21 j
	m22 k
	m23 l
	m30 m
	m31 n
	m32 o
	m33 p
	add (Lcom/mojang/math/Matrix4f;)V c
	adjugateAndDet ()F c
	bufferIndex (II)I a
	copy ()Lcom/mojang/math/Matrix4f; h
	createScaleMatrix (FFF)Lcom/mojang/math/Matrix4f; b
	createTranslateMatrix (FFF)Lcom/mojang/math/Matrix4f; c
	determinant ()F d
	invert ()Z f
	isInteger ()Z a
	isInteger (F)Z b
	load (Lcom/mojang/math/Matrix4f;)V a
	load (Ljava/nio/FloatBuffer;)V a
	load (Ljava/nio/FloatBuffer;Z)V a
	loadTransposed (Ljava/nio/FloatBuffer;)V b
	multiply (F)V a
	multiply (Lcom/mojang/math/Matrix4f;)V b
	multiply (Lcom/mojang/math/Quaternion;)V a
	multiplyWithTranslation (FFF)V a
	orthographic (FFFF)Lcom/mojang/math/Matrix4f; a
	orthographic (FFFFFF)Lcom/mojang/math/Matrix4f; a
	perspective (DFFF)Lcom/mojang/math/Matrix4f; a
	setIdentity ()V b
	store (Ljava/nio/FloatBuffer;)V c
	store (Ljava/nio/FloatBuffer;Z)V b
	storeTransposed (Ljava/nio/FloatBuffer;)V d
	subtract (Lcom/mojang/math/Matrix4f;)V d
	trace ()F g
	translate (Lcom/mojang/math/Vector3f;)V a
	transpose ()V e
com/mojang/math/MethodsReturnNonnullByDefault e
com/mojang/math/OctahedralGroup f
	$VALUES af
	IDENTITY a
	INVERSION y
	INVERT_X z
	INVERT_Y A
	INVERT_Z B
	ROT_120_NNN e
	ROT_120_NNP f
	ROT_120_NPN g
	ROT_120_NPP h
	ROT_120_PNN i
	ROT_120_PNP j
	ROT_120_PPN k
	ROT_120_PPP l
	ROT_180_EDGE_XY_NEG m
	ROT_180_EDGE_XY_POS n
	ROT_180_EDGE_XZ_NEG o
	ROT_180_EDGE_XZ_POS p
	ROT_180_EDGE_YZ_NEG q
	ROT_180_EDGE_YZ_POS r
	ROT_180_FACE_XY b
	ROT_180_FACE_XZ c
	ROT_180_FACE_YZ d
	ROT_60_REF_NNN C
	ROT_60_REF_NNP D
	ROT_60_REF_NPN E
	ROT_60_REF_NPP F
	ROT_60_REF_PNN G
	ROT_60_REF_PNP H
	ROT_60_REF_PPN I
	ROT_60_REF_PPP J
	ROT_90_REF_X_NEG Q
	ROT_90_REF_X_POS R
	ROT_90_REF_Y_NEG S
	ROT_90_REF_Y_POS T
	ROT_90_REF_Z_NEG U
	ROT_90_REF_Z_POS V
	ROT_90_X_NEG s
	ROT_90_X_POS t
	ROT_90_Y_NEG u
	ROT_90_Y_POS v
	ROT_90_Z_NEG w
	ROT_90_Z_POS x
	SWAP_NEG_XY N
	SWAP_NEG_XZ P
	SWAP_NEG_YZ O
	SWAP_XY K
	SWAP_XZ M
	SWAP_YZ L
	cayleyTable ad
	inverseTable ae
	invertX Z
	invertY aa
	invertZ ab
	name X
	permutation ac
	rotatedDirections Y
	transformation W
	$values ()[Lcom/mojang/math/OctahedralGroup; e
	compose (Lcom/mojang/math/OctahedralGroup;)Lcom/mojang/math/OctahedralGroup; a
	getSerializedName ()Ljava/lang/String; c
	inverse ()Lcom/mojang/math/OctahedralGroup; a
	inverts (Lnet/minecraft/core/Direction$Axis;)Z a
	packInversions ()Lit/unimi/dsi/fastutil/booleans/BooleanList; d
	rotate (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Direction; a
	rotate (Lnet/minecraft/core/FrontAndTop;)Lnet/minecraft/core/FrontAndTop; a
	transformation ()Lcom/mojang/math/Matrix3f; b
com/mojang/math/Quaternion g
	ONE a
	i b
	j c
	k d
	r e
	conj ()V i
	copy ()Lcom/mojang/math/Quaternion; k
	cos (F)F b
	fromXYZ (FFF)Lcom/mojang/math/Quaternion; b
	fromXYZ (Lcom/mojang/math/Vector3f;)Lcom/mojang/math/Quaternion; b
	fromXYZDegrees (Lcom/mojang/math/Vector3f;)Lcom/mojang/math/Quaternion; a
	fromYXZ (FFF)Lcom/mojang/math/Quaternion; a
	i ()F e
	j ()F f
	k ()F g
	mul (F)V a
	mul (Lcom/mojang/math/Quaternion;)V a
	normalize ()V j
	r ()F h
	set (FFFF)V a
	sin (F)F c
	slerp (Lcom/mojang/math/Quaternion;F)V a
	toXYZ ()Lcom/mojang/math/Vector3f; a
	toXYZDegrees ()Lcom/mojang/math/Vector3f; b
	toYXZ ()Lcom/mojang/math/Vector3f; c
	toYXZDegrees ()Lcom/mojang/math/Vector3f; d
com/mojang/math/SymmetricGroup3 h
	$VALUES k
	ORDER i
	P123 a
	P132 c
	P213 b
	P231 d
	P312 e
	P321 f
	cayleyTable j
	permutation g
	transformation h
	$values ()[Lcom/mojang/math/SymmetricGroup3; b
	compose (Lcom/mojang/math/SymmetricGroup3;)Lcom/mojang/math/SymmetricGroup3; a
	permutation (I)I a
	transformation ()Lcom/mojang/math/Matrix3f; a
com/mojang/math/Transformation i
	IDENTITY g
	decomposed b
	leftRotation d
	matrix a
	rightRotation f
	scale e
	translation c
	compose (Lcom/mojang/math/Transformation;)Lcom/mojang/math/Transformation; a
	compose (Lcom/mojang/math/Vector3f;Lcom/mojang/math/Quaternion;Lcom/mojang/math/Vector3f;Lcom/mojang/math/Quaternion;)Lcom/mojang/math/Matrix4f; a
	ensureDecomposed ()V h
	getLeftRotation ()Lcom/mojang/math/Quaternion; e
	getMatrix ()Lcom/mojang/math/Matrix4f; c
	getRightRotation ()Lcom/mojang/math/Quaternion; g
	getScale ()Lcom/mojang/math/Vector3f; f
	getTranslation ()Lcom/mojang/math/Vector3f; d
	identity ()Lcom/mojang/math/Transformation; a
	inverse ()Lcom/mojang/math/Transformation; b
	slerp (Lcom/mojang/math/Transformation;F)Lcom/mojang/math/Transformation; a
	toAffine (Lcom/mojang/math/Matrix4f;)Lcom/mojang/datafixers/util/Pair; a
com/mojang/math/Vector3d j
	x a
	y b
	z c
	add (Lcom/mojang/math/Vector3d;)V b
	scale (D)V a
	set (DDD)V a
	set (Lcom/mojang/math/Vector3d;)V a
com/mojang/math/Vector3f k
	CODEC a
	XN b
	XP c
	YN d
	YP e
	ZERO h
	ZN f
	ZP g
	x i
	y j
	z k
	add (FFF)V c
	add (Lcom/mojang/math/Vector3f;)V b
	clamp (FF)V a
	clamp (Lcom/mojang/math/Vector3f;Lcom/mojang/math/Vector3f;)V a
	copy ()Lcom/mojang/math/Vector3f; e
	cross (Lcom/mojang/math/Vector3f;)V e
	dot (Lcom/mojang/math/Vector3f;)F d
	lerp (Lcom/mojang/math/Vector3f;F)V a
	load (Lcom/mojang/math/Vector3f;)V a
	map (Lit/unimi/dsi/fastutil/floats/Float2FloatFunction;)V a
	mul (F)V a
	mul (FFF)V a
	normalize ()Z d
	rotation (F)Lcom/mojang/math/Quaternion; b
	rotationDegrees (F)Lcom/mojang/math/Quaternion; c
	set (FFF)V b
	sub (Lcom/mojang/math/Vector3f;)V c
	transform (Lcom/mojang/math/Matrix3f;)V a
	transform (Lcom/mojang/math/Quaternion;)V a
	x ()F a
	y ()F b
	z ()F c
com/mojang/math/Vector4f l
	w d
	x a
	y b
	z c
	add (FFFF)V b
	dot (Lcom/mojang/math/Vector4f;)F a
	lerp (Lcom/mojang/math/Vector4f;F)V a
	mul (F)V a
	mul (Lcom/mojang/math/Vector3f;)V a
	normalize ()Z e
	perspectiveDivide ()V f
	set (FFFF)V a
	transform (Lcom/mojang/math/Matrix4f;)V a
	transform (Lcom/mojang/math/Quaternion;)V a
	w ()F d
	x ()F a
	y ()F b
	z ()F c
com/mojang/realmsclient/KeyCombo dqt
	chars a
	matchIndex b
	onCompletion c
	keyPressed (C)Z a
	reset ()V a
com/mojang/realmsclient/RealmsMainScreen dqu
	BUTTON_LOCATION af
	CONFIGURE_LOCATION Y
	CONFIGURE_SERVER_TOOLTIP aw
	CROSS_ICON_LOCATION ad
	DARKEN_LOCATION ac
	EXPIRED_ICON_LOCATION R
	EXPIRES_SOON_ICON_LOCATION S
	INVITATION_ICONS_LOCATION U
	INVITE_ICON_LOCATION V
	LEAVE_ICON_LOCATION T
	LEAVE_SERVER_TOOLTIP av
	LOGGER a
	LOGO_LOCATION X
	NEWS_LOCATION aa
	NEWS_TOOLTIP ay
	NO_PENDING_INVITES_TEXT ag
	OFF_ICON_LOCATION c
	ON_ICON_LOCATION b
	PENDING_INVITES_TEXT ah
	POPUP_LOCATION ab
	POPUP_TEXT ap
	QUESTIONMARK_LOCATION Z
	REALMS_DATA_FETCHER aC
	SELECT_MINIGAME_PREFIX ao
	SERVER_CLOSED_TOOLTIP au
	SERVER_EXPIRED_TOOLTIP aq
	SERVER_EXPIRES_IN_DAY_TOOLTIP as
	SERVER_EXPIRES_SOON_TOOLTIP ar
	SERVER_INFO_TOOLTIP ax
	SERVER_OPEN_TOOLTIP at
	SERVER_UNITIALIZED_TEXT aj
	SUBSCRIPTION_CREATE_TEXT an
	SUBSCRIPTION_EXPIRED_TEXT ak
	SUBSCRIPTION_RENEW_TEXT al
	TRIAL_EXPIRED_TEXT am
	TRIAL_ICON_LOCATION ae
	TRIAL_MESSAGE_LINES ai
	TRIAL_TEXT aA
	UNITIALIZED_WORLD_NARRATION az
	WORLDICON_LOCATION W
	animTick aY
	backButton aR
	buyARealmButton bt
	carouselIndex bh
	carouselTick bi
	checkedClientCompatability aH
	checkedParentalConsent aG
	clicks bl
	closeButton bu
	configureButton aT
	connectLock bm
	createTrialButton bs
	createdTrial bd
	dontSetConnectedToRealms aL
	formattedPopup bn
	hasFetchedServers aZ
	hasParentalConsent aF
	hasSwitchedCarouselImage bj
	hasUnreadNews bf
	hoveredElement bo
	inviteNarrationLimiter aK
	justClosedPopup bb
	keyCombos bk
	lastScreen aM
	lastScrollYPosition aE
	leaveButton aU
	newsButton br
	newsLink bg
	numberOfPendingInvites aX
	overrideConfigure aD
	pendingInvitesButton bq
	playButton aQ
	popupOpenedByUser ba
	realmSelectionList aN
	realmsGenericErrorScreen aI
	realmsSelectionListAdded aO
	realmsServers aW
	regionsPinged aJ
	renewButton aS
	selectedServerId aP
	showPopupButton bp
	showingPopup be
	teaserImages aB
	toolTip aV
	trialsAvailable bc
	addButtons ()V c
	charTyped (CI)Z a
	checkClientCompatability ()V C
	checkParentalConsent ()V E
	checkUnreadNews ()V D
	closePopup ()V h
	configureClicked (Lcom/mojang/realmsclient/dto/RealmsServer;)V f
	drawClose (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V e
	drawConfigure (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V g
	drawExpired (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V c
	drawExpiring (Lcom/mojang/blaze3d/vertex/PoseStack;IIIII)V b
	drawInvitationPendingIcon (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIZZ)V a
	drawLeave (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V f
	drawOpen (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V d
	drawPopup (Lcom/mojang/blaze3d/vertex/PoseStack;II)V b
	drawRealmsLogo (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	findServer (J)Lcom/mojang/realmsclient/dto/RealmsServer; a
	getOwnedNonExpiredWorldIds ()Ljava/util/List; A
	hasParentalConsent ()Z x
	inPendingInvitationArea (DD)Z c
	init ()V b
	isOutsidePopup (DD)Z a
	isSelfOwnedNonExpiredServer (Lcom/mojang/realmsclient/dto/RealmsServer;)Z j
	isSelfOwnedServer (Lcom/mojang/realmsclient/dto/RealmsServer;)Z i
	keyPressed (III)Z a
	leaveClicked (Lcom/mojang/realmsclient/dto/RealmsServer;)V g
	leaveServer (Z)V c
	mouseClicked (DDI)Z a
	newScreen ()Lcom/mojang/realmsclient/RealmsMainScreen; g
	onClosePopup ()V K
	onRenew ()V B
	pendingButtonPress (Lnet/minecraft/client/gui/components/Button;)V a
	pingRegions ()V z
	play (Lcom/mojang/realmsclient/dto/RealmsServer;Lnet/minecraft/client/gui/screens/Screen;)V a
	popupX0 ()I L
	popupY0 ()I M
	removeSelection ()V f
	removeServer (Lcom/mojang/realmsclient/dto/RealmsServer;)V h
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderLocal (Lcom/mojang/blaze3d/vertex/PoseStack;)V b
	renderMoreInfo (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIZ)V a
	renderMousehoverTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;Ljava/util/List;II)V a
	renderNews (Lcom/mojang/blaze3d/vertex/PoseStack;IIZIIZZ)V a
	renderStage (Lcom/mojang/blaze3d/vertex/PoseStack;)V c
	saveListScrollPosition ()V J
	setCreatedTrial (Z)V a
	setTooltip (Ljava/lang/Iterable;)V a
	setTooltip ([Lnet/minecraft/network/chat/Component;)V a
	shouldConfigureButtonBeVisible (Lcom/mojang/realmsclient/dto/RealmsServer;)Z d
	shouldLeaveButtonBeVisible (Lcom/mojang/realmsclient/dto/RealmsServer;)Z e
	shouldPlayButtonBeActive (Lcom/mojang/realmsclient/dto/RealmsServer;)Z b
	shouldRenewButtonBeActive (Lcom/mojang/realmsclient/dto/RealmsServer;)Z c
	shouldShowMessageInList ()Z w
	shouldShowPopup ()Z a
	shouldShowPopupButton ()Z y
	stopRealmsFetcher ()V I
	switchToLocal ()V G
	switchToProd ()V H
	switchToStage ()V F
	tick ()V d
	updateButtonStates (Lcom/mojang/realmsclient/dto/RealmsServer;)V a
	updateTeaserImages (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
com/mojang/realmsclient/RealmsMainScreen$CloseButton dqu$a
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
com/mojang/realmsclient/RealmsMainScreen$Entry dqu$b
com/mojang/realmsclient/RealmsMainScreen$HoveredElement dqu$c
	$VALUES e
	CONFIGURE d
	EXPIRED b
	LEAVE c
	NONE a
	$values ()[Lcom/mojang/realmsclient/RealmsMainScreen$HoveredElement; a
com/mojang/realmsclient/RealmsMainScreen$NewsButton dqu$d
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
com/mojang/realmsclient/RealmsMainScreen$PendingInvitesButton dqu$e
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	tick ()V a
com/mojang/realmsclient/RealmsMainScreen$RealmSelectionList dqu$f
	showingMessage o
	addMessageEntry (Lcom/mojang/realmsclient/RealmsMainScreen$Entry;)I a
	clear ()V a
	getMaxPosition ()I c
	getRowWidth ()I d
	isFocused ()Z b
	itemClicked (IIDDI)V a
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	selectItem (I)V a
	setSelected (Lcom/mojang/realmsclient/RealmsMainScreen$Entry;)V b
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
com/mojang/realmsclient/RealmsMainScreen$ServerEntry dqu$g
	SKIN_HEAD_LARGE_WIDTH c
	serverData d
	getNarration ()Lnet/minecraft/network/chat/Component; a
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	renderLegacy (Lcom/mojang/realmsclient/dto/RealmsServer;Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V b
	renderMcoServerItem (Lcom/mojang/realmsclient/dto/RealmsServer;Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V a
com/mojang/realmsclient/RealmsMainScreen$ShowPopupButton dqu$h
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
com/mojang/realmsclient/RealmsMainScreen$TrialEntry dqu$i
	getNarration ()Lnet/minecraft/network/chat/Component; a
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	renderTrialItem (Lcom/mojang/blaze3d/vertex/PoseStack;IIIII)V a
com/mojang/realmsclient/Unit dqv
	$VALUES f
	B a
	BASE_UNIT e
	GB d
	KB b
	MB c
	$values ()[Lcom/mojang/realmsclient/Unit; a
	convertTo (JLcom/mojang/realmsclient/Unit;)D a
	getLargest (J)Lcom/mojang/realmsclient/Unit; a
	humanReadable (J)Ljava/lang/String; b
	humanReadable (JLcom/mojang/realmsclient/Unit;)Ljava/lang/String; b
com/mojang/realmsclient/client/FileDownload dqw
	INVALID_FILE_NAMES k
	LOGGER a
	cancelled b
	currentThread i
	error d
	extracting e
	finished c
	request h
	requestConfig j
	resourcePackPath g
	tempFile f
	cancel ()V a
	contentLength (Ljava/lang/String;)J a
	deletePlayerTag (Ljava/io/File;)V a
	download (Lcom/mojang/realmsclient/dto/WorldDownload;Ljava/lang/String;Lcom/mojang/realmsclient/gui/screens/RealmsDownloadLatestWorldScreen$DownloadStatus;Lnet/minecraft/world/level/storage/LevelStorageSource;)V a
	findAvailableFolderName (Ljava/lang/String;)Ljava/lang/String; b
	isError ()Z c
	isExtracting ()Z d
	isFinished ()Z b
	untarGzipArchive (Ljava/lang/String;Ljava/io/File;Lnet/minecraft/world/level/storage/LevelStorageSource;)V a
com/mojang/realmsclient/client/FileDownload$DownloadCountingOutputStream dqw$a
	listener b
	setListener (Ljava/awt/event/ActionListener;)V a
com/mojang/realmsclient/client/FileDownload$ProgressListener dqw$b
	downloadStatus e
	levelStorageSource d
	tempFile c
	worldName b
com/mojang/realmsclient/client/FileDownload$ResourcePackProgressListener dqw$c
	downloadStatus c
	tempFile b
	worldDownload d
com/mojang/realmsclient/client/FileUpload dqx
	LOGGER a
	MAX_RETRIES b
	UPLOAD_PATH c
	cancelled l
	clientVersion j
	file d
	requestConfig n
	sessionId h
	slotId f
	uploadInfo g
	uploadStatus k
	uploadTask m
	username i
	worldId e
	cancel ()V a
	cleanup (Lorg/apache/http/client/methods/HttpPost;Lorg/apache/http/impl/client/CloseableHttpClient;)V a
	getRetryDelaySeconds (Lorg/apache/http/HttpResponse;)J a
	handleResponse (Lorg/apache/http/HttpResponse;Lcom/mojang/realmsclient/gui/screens/UploadResult$Builder;)V a
	isFinished ()Z b
	requestUpload (I)Lcom/mojang/realmsclient/gui/screens/UploadResult; a
	retryUploadAfter (JI)Lcom/mojang/realmsclient/gui/screens/UploadResult; b
	setupRequest (Lorg/apache/http/client/methods/HttpPost;)V a
	shouldRetry (JI)Z a
	upload (Ljava/util/function/Consumer;)V a
com/mojang/realmsclient/client/FileUpload$CustomInputStreamEntity dqx$a
	content b
	length a
	uploadStatus c
com/mojang/realmsclient/client/Ping dqy
	close (Ljava/net/Socket;)V a
	now ()J b
	ping (Ljava/lang/String;)I a
	ping ([Lcom/mojang/realmsclient/client/Ping$Region;)Ljava/util/List; a
	pingAllRegions ()Ljava/util/List; a
com/mojang/realmsclient/client/Ping$Region dqy$a
	$VALUES k
	AP_NORTHEAST_1 g
	AP_SOUTHEAST_1 e
	AP_SOUTHEAST_2 f
	EU_WEST_1 d
	SA_EAST_1 h
	US_EAST_1 a
	US_WEST_1 c
	US_WEST_2 b
	endpoint j
	name i
	$values ()[Lcom/mojang/realmsclient/client/Ping$Region; a
com/mojang/realmsclient/client/RealmsClient dqz
	ACTIVITIES_RESOURCE k
	GSON S
	INVITES_RESOURCE_PATH h
	LOGGER c
	MCO_RESOURCE_PATH i
	OPS_RESOURCE l
	PATH_ACCEPT_INVITE C
	PATH_AVAILABLE u
	PATH_CLIENT_COMPATIBLE O
	PATH_DELETE_WORLD K
	PATH_GET_ACTIVTIES p
	PATH_GET_LIVESTATS q
	PATH_GET_SUBSCRIPTION r
	PATH_INITIALIZE o
	PATH_NEWS Q
	PATH_OP s
	PATH_PENDING_INVITES B
	PATH_PENDING_INVITES_COUNT A
	PATH_PUT_INTO_MINIGAMES_MODE t
	PATH_REJECT_INVITE D
	PATH_SLOT G
	PATH_STAGE_AVAILABLE R
	PATH_TEMPLATES v
	PATH_TOS_AGREED P
	PATH_UNINVITE_MYSELF E
	PATH_WORLD_BACKUPS L
	PATH_WORLD_CLOSE I
	PATH_WORLD_DOWNLOAD M
	PATH_WORLD_GET x
	PATH_WORLD_INVITES y
	PATH_WORLD_JOIN w
	PATH_WORLD_OPEN H
	PATH_WORLD_RESET J
	PATH_WORLD_UNINVITE z
	PATH_WORLD_UPDATE F
	PATH_WORLD_UPLOAD N
	REGIONS_RESOURCE m
	SUBSCRIPTION_RESOURCE j
	TRIALS_RESOURCE n
	WORLDS_RESOURCE_PATH g
	currentEnvironment a
	initialized b
	minecraft f
	sessionId d
	username e
	acceptInvitation (Ljava/lang/String;)V a
	agreeToTos ()V l
	backupsFor (J)Lcom/mojang/realmsclient/dto/BackupList; e
	clientCompatible ()Lcom/mojang/realmsclient/client/RealmsClient$CompatibleVersionResponse; i
	close (J)Ljava/lang/Boolean; g
	create ()Lcom/mojang/realmsclient/client/RealmsClient; a
	deleteWorld (J)V i
	deop (JLjava/lang/String;)Lcom/mojang/realmsclient/dto/Ops; f
	execute (Lcom/mojang/realmsclient/client/Request;)Ljava/lang/String; a
	fetchWorldTemplates (IILcom/mojang/realmsclient/dto/RealmsServer$WorldType;)Lcom/mojang/realmsclient/dto/WorldTemplatePaginatedList; a
	getActivity (J)Lcom/mojang/realmsclient/dto/ServerActivityList; b
	getLiveStats ()Lcom/mojang/realmsclient/dto/RealmsServerPlayerLists; f
	getNews ()Lcom/mojang/realmsclient/dto/RealmsNews; m
	getOwnWorld (J)Lcom/mojang/realmsclient/dto/RealmsServer; a
	initializeWorld (JLjava/lang/String;Ljava/lang/String;)V a
	invite (JLjava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsServer; b
	isBlocked (Lcom/mojang/realmsclient/dto/PendingInvite;)Z a
	join (J)Lcom/mojang/realmsclient/dto/RealmsServerAddress; c
	listWorlds ()Lcom/mojang/realmsclient/dto/RealmsServerList; e
	mcoEnabled ()Ljava/lang/Boolean; g
	op (JLjava/lang/String;)Lcom/mojang/realmsclient/dto/Ops; e
	open (J)Ljava/lang/Boolean; f
	pendingInvites ()Lcom/mojang/realmsclient/dto/PendingInvitesList; k
	pendingInvitesCount ()I j
	putIntoMinigameMode (JLjava/lang/String;)Ljava/lang/Boolean; d
	rejectInvitation (Ljava/lang/String;)V b
	requestDownloadInfo (JI)Lcom/mojang/realmsclient/dto/WorldDownload; b
	requestUploadInfo (JLjava/lang/String;)Lcom/mojang/realmsclient/dto/UploadInfo; h
	resetWorldWithSeed (JLcom/mojang/realmsclient/util/WorldGenerationInfo;)Ljava/lang/Boolean; a
	resetWorldWithTemplate (JLjava/lang/String;)Ljava/lang/Boolean; g
	restoreWorld (JLjava/lang/String;)V c
	sendPingResults (Lcom/mojang/realmsclient/dto/PingResult;)V a
	stageAvailable ()Ljava/lang/Boolean; h
	subscriptionFor (J)Lcom/mojang/realmsclient/dto/Subscription; h
	switchSlot (JI)Z a
	switchToLocal ()V d
	switchToProd ()V c
	switchToStage ()V b
	trialAvailable ()Ljava/lang/Boolean; n
	uninvite (JLjava/lang/String;)V a
	uninviteMyselfFrom (J)V d
	update (JLjava/lang/String;Ljava/lang/String;)V b
	updateSlot (JILcom/mojang/realmsclient/dto/RealmsWorldOptions;)V a
	url (Ljava/lang/String;)Ljava/lang/String; c
	url (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; a
com/mojang/realmsclient/client/RealmsClient$CompatibleVersionResponse dqz$a
	$VALUES d
	COMPATIBLE a
	OTHER c
	OUTDATED b
	$values ()[Lcom/mojang/realmsclient/client/RealmsClient$CompatibleVersionResponse; a
com/mojang/realmsclient/client/RealmsClient$Environment dqz$b
	$VALUES f
	LOCAL c
	PRODUCTION a
	STAGE b
	baseUrl d
	protocol e
	$values ()[Lcom/mojang/realmsclient/client/RealmsClient$Environment; a
com/mojang/realmsclient/client/RealmsClientConfig dra
	proxy a
	getProxy ()Ljava/net/Proxy; a
	setProxy (Ljava/net/Proxy;)V a
com/mojang/realmsclient/client/RealmsError drb
	LOGGER a
	errorCode c
	errorMessage b
	create (Ljava/lang/String;)Lcom/mojang/realmsclient/client/RealmsError; a
	getErrorCode ()I b
	getErrorMessage ()Ljava/lang/String; a
com/mojang/realmsclient/client/Request drc
	DEFAULT_CONNECT_TIMEOUT e
	DEFAULT_READ_TIMEOUT d
	connected c
	connection a
	url b
	connect ()Lcom/mojang/realmsclient/client/Request; d
	cookie (Ljava/lang/String;Ljava/lang/String;)V a
	cookie (Ljava/net/HttpURLConnection;Ljava/lang/String;Ljava/lang/String;)V a
	delete (Ljava/lang/String;)Lcom/mojang/realmsclient/client/Request; b
	dispose ()V f
	doConnect ()Lcom/mojang/realmsclient/client/Request; e
	get (Ljava/lang/String;)Lcom/mojang/realmsclient/client/Request; a
	get (Ljava/lang/String;II)Lcom/mojang/realmsclient/client/Request; a
	getHeader (Ljava/lang/String;)Ljava/lang/String; c
	getHeader (Ljava/net/HttpURLConnection;Ljava/lang/String;)Ljava/lang/String; a
	getRetryAfterHeader ()I a
	getRetryAfterHeader (Ljava/net/HttpURLConnection;)I a
	header (Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/realmsclient/client/Request; b
	post (Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/realmsclient/client/Request; c
	post (Ljava/lang/String;Ljava/lang/String;II)Lcom/mojang/realmsclient/client/Request; a
	put (Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/realmsclient/client/Request; d
	put (Ljava/lang/String;Ljava/lang/String;II)Lcom/mojang/realmsclient/client/Request; b
	read (Ljava/io/InputStream;)Ljava/lang/String; a
	responseCode ()I b
	text ()Ljava/lang/String; c
com/mojang/realmsclient/client/Request$Delete drc$a
	doConnect ()Lcom/mojang/realmsclient/client/Request$Delete; f
	doConnect ()Lcom/mojang/realmsclient/client/Request; e
com/mojang/realmsclient/client/Request$Get drc$b
	doConnect ()Lcom/mojang/realmsclient/client/Request$Get; f
	doConnect ()Lcom/mojang/realmsclient/client/Request; e
com/mojang/realmsclient/client/Request$Post drc$c
	content c
	doConnect ()Lcom/mojang/realmsclient/client/Request$Post; f
	doConnect ()Lcom/mojang/realmsclient/client/Request; e
com/mojang/realmsclient/client/Request$Put drc$d
	content c
	doConnect ()Lcom/mojang/realmsclient/client/Request$Put; f
	doConnect ()Lcom/mojang/realmsclient/client/Request; e
com/mojang/realmsclient/client/UploadStatus drd
	bytesWritten a
	totalBytes b
com/mojang/realmsclient/dto/Backup drf
	LOGGER f
	backupId a
	changeList e
	lastModifiedDate b
	metadata d
	size c
	uploadedVersion g
	format (Ljava/lang/String;)Ljava/lang/String; a
	isUploadedVersion ()Z a
	parse (Lcom/google/gson/JsonElement;)Lcom/mojang/realmsclient/dto/Backup; a
	setUploadedVersion (Z)V a
com/mojang/realmsclient/dto/BackupList drg
	LOGGER b
	backups a
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/BackupList; a
com/mojang/realmsclient/dto/GuardedSerializer drh
	gson a
	fromJson (Ljava/lang/String;Ljava/lang/Class;)Lcom/mojang/realmsclient/dto/ReflectionBasedSerialization; a
	toJson (Lcom/mojang/realmsclient/dto/ReflectionBasedSerialization;)Ljava/lang/String; a
com/mojang/realmsclient/dto/Ops dri
	ops a
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/Ops; a
com/mojang/realmsclient/dto/PendingInvite drj
	LOGGER f
	date e
	invitationId a
	worldName b
	worldOwnerName c
	worldOwnerUuid d
	parse (Lcom/google/gson/JsonObject;)Lcom/mojang/realmsclient/dto/PendingInvite; a
com/mojang/realmsclient/dto/PendingInvitesList drk
	LOGGER b
	pendingInvites a
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/PendingInvitesList; a
com/mojang/realmsclient/dto/PingResult drl
	pingResults a
	worldIds b
com/mojang/realmsclient/dto/PlayerInfo drm
	accepted d
	name a
	online e
	operator c
	uuid b
	getAccepted ()Z d
	getName ()Ljava/lang/String; a
	getOnline ()Z e
	getUuid ()Ljava/lang/String; b
	isOperator ()Z c
	setAccepted (Z)V b
	setName (Ljava/lang/String;)V a
	setOnline (Z)V c
	setOperator (Z)V a
	setUuid (Ljava/lang/String;)V b
com/mojang/realmsclient/dto/RealmsDescriptionDto drn
	description b
	name a
com/mojang/realmsclient/dto/RealmsNews dro
	LOGGER b
	newsLink a
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsNews; a
com/mojang/realmsclient/dto/RealmsServer drp
	LOGGER s
	activeSlot n
	daysLeft l
	expired j
	expiredTrial k
	id a
	minigameId p
	minigameImage q
	minigameName o
	motd d
	name c
	owner f
	ownerUUID g
	players h
	remoteSubscriptionId b
	serverPing r
	slots i
	state e
	worldType m
	clone ()Lcom/mojang/realmsclient/dto/RealmsServer; d
	cloneSlots (Ljava/util/Map;)Ljava/util/Map; a
	createEmptySlots ()Ljava/util/Map; e
	getDescription ()Ljava/lang/String; a
	getMinigameName ()Ljava/lang/String; c
	getName ()Ljava/lang/String; b
	getState (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsServer$State; e
	getWorldName (I)Ljava/lang/String; a
	getWorldType (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsServer$WorldType; f
	parse (Lcom/google/gson/JsonObject;)Lcom/mojang/realmsclient/dto/RealmsServer; a
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsServer; c
	parseInvited (Lcom/google/gson/JsonArray;)Ljava/util/List; a
	parseSlots (Lcom/google/gson/JsonArray;)Ljava/util/Map; b
	setDescription (Ljava/lang/String;)V b
	setName (Ljava/lang/String;)V a
	sortInvited (Lcom/mojang/realmsclient/dto/RealmsServer;)V a
	toServerData (Ljava/lang/String;)Lnet/minecraft/client/multiplayer/ServerData; d
	updateServerPing (Lcom/mojang/realmsclient/dto/RealmsServerPlayerList;)V a
com/mojang/realmsclient/dto/RealmsServer$McoServerComparator drp$a
	refOwner a
	compare (Lcom/mojang/realmsclient/dto/RealmsServer;Lcom/mojang/realmsclient/dto/RealmsServer;)I a
com/mojang/realmsclient/dto/RealmsServer$State drp$b
	$VALUES d
	CLOSED a
	OPEN b
	UNINITIALIZED c
	$values ()[Lcom/mojang/realmsclient/dto/RealmsServer$State; a
com/mojang/realmsclient/dto/RealmsServer$WorldType drp$c
	$VALUES f
	ADVENTUREMAP c
	EXPERIENCE d
	INSPIRATION e
	MINIGAME b
	NORMAL a
	$values ()[Lcom/mojang/realmsclient/dto/RealmsServer$WorldType; a
com/mojang/realmsclient/dto/RealmsServerAddress drq
	LOGGER d
	address a
	resourcePackHash c
	resourcePackUrl b
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsServerAddress; a
com/mojang/realmsclient/dto/RealmsServerList drr
	LOGGER b
	servers a
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsServerList; a
com/mojang/realmsclient/dto/RealmsServerPing drs
	nrOfPlayers a
	playerList b
com/mojang/realmsclient/dto/RealmsServerPlayerList drt
	JSON_PARSER d
	LOGGER c
	players b
	serverId a
	parse (Lcom/google/gson/JsonObject;)Lcom/mojang/realmsclient/dto/RealmsServerPlayerList; a
	parsePlayers (Lcom/google/gson/JsonArray;)Ljava/util/List; a
com/mojang/realmsclient/dto/RealmsServerPlayerLists dru
	LOGGER b
	servers a
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsServerPlayerLists; a
com/mojang/realmsclient/dto/RealmsWorldOptions drv
	DEFAULT_COMMAND_BLOCKS t
	DEFAULT_DIFFICULTY u
	DEFAULT_FORCE_GAME_MODE n
	DEFAULT_GAME_MODE v
	DEFAULT_PVP o
	DEFAULT_SLOT_NAME w
	DEFAULT_SPAWN_ANIMALS p
	DEFAULT_SPAWN_MONSTERS q
	DEFAULT_SPAWN_NPCS r
	DEFAULT_SPAWN_PROTECTION s
	DEFAULT_TEMPLATE_ID x
	DEFAULT_TEMPLATE_IMAGE y
	commandBlocks f
	difficulty h
	empty l
	forceGameMode g
	gameMode i
	pvp a
	slotName m
	spawnAnimals b
	spawnMonsters c
	spawnNPCs d
	spawnProtection e
	templateId j
	templateImage k
	clone ()Lcom/mojang/realmsclient/dto/RealmsWorldOptions; d
	createDefaults ()Lcom/mojang/realmsclient/dto/RealmsWorldOptions; a
	createEmptyDefaults ()Lcom/mojang/realmsclient/dto/RealmsWorldOptions; b
	getDefaultSlotName (I)Ljava/lang/String; b
	getSlotName (I)Ljava/lang/String; a
	parse (Lcom/google/gson/JsonObject;)Lcom/mojang/realmsclient/dto/RealmsWorldOptions; a
	setEmpty (Z)V a
	toJson ()Ljava/lang/String; c
com/mojang/realmsclient/dto/RealmsWorldResetDto drw
	generateStructures d
	levelType c
	seed a
	worldTemplateId b
com/mojang/realmsclient/dto/ReflectionBasedSerialization drx
com/mojang/realmsclient/dto/RegionPingResult dry
	ping b
	regionName a
	ping ()I a
com/mojang/realmsclient/dto/ServerActivity drz
	joinTime b
	leaveTime c
	profileUuid a
	parse (Lcom/google/gson/JsonObject;)Lcom/mojang/realmsclient/dto/ServerActivity; a
com/mojang/realmsclient/dto/ServerActivityList dsa
	periodInMillis a
	serverActivities b
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/ServerActivityList; a
com/mojang/realmsclient/dto/Subscription dsb
	LOGGER d
	daysLeft b
	startDate a
	type c
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/Subscription; a
	typeFrom (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/Subscription$SubscriptionType; b
com/mojang/realmsclient/dto/Subscription$SubscriptionType dsb$a
	$VALUES c
	NORMAL a
	RECURRING b
	$values ()[Lcom/mojang/realmsclient/dto/Subscription$SubscriptionType; a
com/mojang/realmsclient/dto/UploadInfo dsc
	DEFAULT_PORT c
	DEFAULT_SCHEMA b
	LOGGER a
	URI_SCHEMA_PATTERN d
	token f
	uploadEndpoint g
	worldClosed e
	assembleUri (Ljava/lang/String;I)Ljava/net/URI; a
	createRequest (Ljava/lang/String;)Ljava/lang/String; b
	ensureEndpointSchema (Ljava/lang/String;Ljava/util/regex/Matcher;)Ljava/lang/String; a
	getToken ()Ljava/lang/String; a
	getUploadEndpoint ()Ljava/net/URI; b
	isWorldClosed ()Z c
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/UploadInfo; a
	selectPortOrDefault (II)I a
com/mojang/realmsclient/dto/ValueObject dsd
	getName (Ljava/lang/reflect/Field;)Ljava/lang/String; a
	isStatic (Ljava/lang/reflect/Field;)Z b
com/mojang/realmsclient/dto/WorldDownload dse
	LOGGER d
	downloadLink a
	resourcePackHash c
	resourcePackUrl b
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/WorldDownload; a
com/mojang/realmsclient/dto/WorldTemplate dsf
	LOGGER j
	author d
	id a
	image f
	link e
	name b
	recommendedPlayers h
	trailer g
	type i
	version c
	parse (Lcom/google/gson/JsonObject;)Lcom/mojang/realmsclient/dto/WorldTemplate; a
com/mojang/realmsclient/dto/WorldTemplate$WorldTemplateType dsf$a
	$VALUES f
	ADVENTUREMAP c
	EXPERIENCE d
	INSPIRATION e
	MINIGAME b
	WORLD_TEMPLATE a
	$values ()[Lcom/mojang/realmsclient/dto/WorldTemplate$WorldTemplateType; a
com/mojang/realmsclient/dto/WorldTemplatePaginatedList dsg
	LOGGER e
	page b
	size c
	templates a
	total d
	isLastPage ()Z a
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/WorldTemplatePaginatedList; a
com/mojang/realmsclient/exception/RealmsDefaultUncaughtExceptionHandler dsi
	logger a
com/mojang/realmsclient/exception/RealmsHttpException dsj
com/mojang/realmsclient/exception/RealmsServiceException dsk
	errorCode c
	errorMsg d
	httpResponseContent b
	httpResultCode a
com/mojang/realmsclient/exception/RetryCallException dsl
	DEFAULT_DELAY e
	delaySeconds f
com/mojang/realmsclient/gui/ErrorCallback dsn
	error (Ljava/lang/String;)V b_
	error (Lnet/minecraft/network/chat/Component;)V a
com/mojang/realmsclient/gui/RealmsDataFetcher dso
	LOGGER a
	fetchStatus x
	hasUnreadNews q
	liveStatsScheduledFuture v
	liveStatsTask g
	livestats n
	minecraft b
	newsLink r
	newsLocalStorage k
	pendingInviteScheduledFuture t
	pendingInviteUpdateTask h
	pendingInvitesCount o
	realmsClient c
	removedServers l
	scheduler d
	serverListScheduledFuture s
	serverListUpdateTask f
	servers m
	stopped e
	trialAvailabilityTask i
	trialAvailable p
	trialAvailableScheduledFuture u
	unreadNewsScheduledFuture w
	unreadNewsTask j
	cancelTasks ()V n
	fetchAndUpdateNewsStorage ()Lcom/mojang/realmsclient/util/RealmsPersistence$RealmsPersistenceData; u
	forceUpdate ()V e
	getLivestats ()Lcom/mojang/realmsclient/dto/RealmsServerPlayerLists; i
	getPendingInvitesCount ()I g
	getServers ()Ljava/util/List; f
	hasUnreadNews ()Z j
	init ()V b
	initWithSpecificTaskList ()V c
	isActive ()Z o
	isFetchedSinceLastTry (Lcom/mojang/realmsclient/gui/RealmsDataFetcher$Task;)Z a
	isStopped ()Z a
	isTrialAvailable ()Z h
	markClean ()V d
	newsLink ()Ljava/lang/String; k
	removeItem (Lcom/mojang/realmsclient/dto/RealmsServer;)V a
	scheduleTasks ()V m
	setServers (Ljava/util/List;)V a
	stop ()V l
	updateLiveStats ()V s
	updatePendingInvites ()V q
	updateServersList ()V p
	updateTrialAvailable ()V r
	updateUnreadNews ()V t
com/mojang/realmsclient/gui/RealmsDataFetcher$Task dso$a
	$VALUES f
	LIVE_STATS d
	PENDING_INVITE b
	SERVER_LIST a
	TRIAL_AVAILABLE c
	UNREAD_NEWS e
	$values ()[Lcom/mojang/realmsclient/gui/RealmsDataFetcher$Task; a
com/mojang/realmsclient/gui/RealmsWorldSlotButton dsp
	DEFAULT_WORLD_SLOT_1 c
	DEFAULT_WORLD_SLOT_2 d
	DEFAULT_WORLD_SLOT_3 e
	EMPTY_SLOT_LOCATION b
	SLOT_ACTIVE_TOOLTIP u
	SLOT_FRAME_LOCATION a
	SWITCH_TO_MINIGAME_SLOT_TOOLTIP v
	SWITCH_TO_WORLD_SLOT_TOOLTIP w
	animTick A
	serverDataProvider x
	slotIndex z
	state B
	toolTipSetter y
	drawSlotFrame (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIZLjava/lang/String;IJLjava/lang/String;ZZLcom/mojang/realmsclient/gui/RealmsWorldSlotButton$Action;Lnet/minecraft/network/chat/Component;)V a
	getAction (Lcom/mojang/realmsclient/dto/RealmsServer;ZZ)Lcom/mojang/realmsclient/gui/RealmsWorldSlotButton$Action; a
	getState ()Lcom/mojang/realmsclient/gui/RealmsWorldSlotButton$State; a
	getTooltipAndNarration (Lcom/mojang/realmsclient/dto/RealmsServer;Ljava/lang/String;ZZLcom/mojang/realmsclient/gui/RealmsWorldSlotButton$Action;)Lcom/mojang/datafixers/util/Pair; a
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	tick ()V b
com/mojang/realmsclient/gui/RealmsWorldSlotButton$Action dsp$a
	$VALUES d
	JOIN c
	NOTHING a
	SWITCH_SLOT b
	$values ()[Lcom/mojang/realmsclient/gui/RealmsWorldSlotButton$Action; a
com/mojang/realmsclient/gui/RealmsWorldSlotButton$State dsp$b
	action c
	actionPrompt h
	empty a
	image g
	imageId f
	isCurrentlyActiveSlot d
	minigame b
	slotName e
com/mojang/realmsclient/gui/RowButton dsq
	height b
	width a
	xOffset c
	yOffset d
	draw (Lcom/mojang/blaze3d/vertex/PoseStack;IIZ)V a
	drawButtonsInRow (Lcom/mojang/blaze3d/vertex/PoseStack;Ljava/util/List;Lnet/minecraft/realms/RealmsObjectSelectionList;IIII)V a
	drawForRowAt (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V a
	getBottom ()I b
	getRight ()I a
	onClick (I)V a
	rowButtonMouseClicked (Lnet/minecraft/realms/RealmsObjectSelectionList;Lnet/minecraft/client/gui/components/ObjectSelectionList$Entry;Ljava/util/List;IDD)V a
com/mojang/realmsclient/gui/screens/RealmsBackupInfoScreen dss
	TEXT_UNKNOWN a
	backup c
	backupInfoList R
	lastScreen b
	checkForSpecificMetadata (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
	gameDifficultyMetadata (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; b
	gameModeMetadata (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; c
	init ()V b
	keyPressed (III)Z a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	tick ()V d
com/mojang/realmsclient/gui/screens/RealmsBackupInfoScreen$BackupInfoList dss$a
com/mojang/realmsclient/gui/screens/RealmsBackupInfoScreen$BackupInfoListEntry dss$b
	key b
	value c
	getNarration ()Lnet/minecraft/network/chat/Component; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
com/mojang/realmsclient/gui/screens/RealmsBackupScreen dst
	HAS_CHANGES_TOOLTIP S
	LOGGER a
	NO_BACKUPS_LABEL U
	PLUS_ICON_LOCATION b
	RESTORE_ICON_LOCATION c
	RESTORE_TOOLTIP R
	TITLE T
	UPLOADED_KEY ah
	backupObjectSelectionList Z
	backups X
	changesButton ae
	downloadButton ac
	lastScreen W
	lastScrollPosition V
	noBackups af
	restoreButton ad
	selectedBackup aa
	serverData ag
	slotId ab
	toolTip Y
	addToChangeList (Lcom/mojang/realmsclient/dto/Backup;Ljava/lang/String;)V a
	downloadClicked ()V z
	downloadWorldData ()V A
	generateChangeList ()V h
	init ()V b
	keyPressed (III)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderMousehoverTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/network/chat/Component;II)V a
	restore ()V B
	restoreClicked (I)V a
	shouldChangesButtonBeVisible ()Z x
	shouldRestoreButtonBeVisible ()Z y
	updateButtonStates ()V w
com/mojang/realmsclient/gui/screens/RealmsBackupScreen$BackupObjectSelectionList dst$a
	addEntry (Lcom/mojang/realmsclient/dto/Backup;)V a
	getMaxPosition ()I c
	getRowWidth ()I d
	getScrollbarPosition ()I e
	isFocused ()Z b
	itemClicked (IIDDI)V a
	mouseClicked (DDI)Z a
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	selectInviteListItem (I)V b
	selectItem (I)V a
	setSelected (Lcom/mojang/realmsclient/gui/screens/RealmsBackupScreen$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
com/mojang/realmsclient/gui/screens/RealmsBackupScreen$Entry dst$b
	backup b
	drawInfo (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V b
	drawRestore (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V a
	getMediumDatePresentation (Ljava/util/Date;)Ljava/lang/String; a
	getNarration ()Lnet/minecraft/network/chat/Component; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	renderBackupItem (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/realmsclient/dto/Backup;IIII)V a
com/mojang/realmsclient/gui/screens/RealmsBrokenWorldScreen dsu
	DEFAULT_BUTTON_WIDTH b
	LOGGER a
	animTick Y
	lastScreen c
	leftX V
	mainScreen R
	message U
	rightX W
	serverData S
	serverId T
	slotsThatHasBeenDownloaded X
	addButtons ()V h
	backButtonClicked ()V w
	doSwitchOrReset ()V c
	downloadWorld (I)V b
	drawSlotFrame (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIZLjava/lang/String;IJLjava/lang/String;Z)V a
	fetchServerData (J)V a
	getFramePositionX (I)I a
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; af_
	init ()V b
	isMinigame ()Z x
	keyPressed (III)Z a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	tick ()V d
com/mojang/realmsclient/gui/screens/RealmsClientOutdatedScreen dsv
	INCOMPATIBLE_MESSAGES R
	INCOMPATIBLE_TITLE c
	OUTDATED_MESSAGES b
	OUTDATED_TITLE a
	lastScreen S
	outdated T
	init ()V b
	keyPressed (III)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
com/mojang/realmsclient/gui/screens/RealmsConfigureWorldScreen dsw
	DEFAULT_BUTTON_OFFSET ac
	DEFAULT_BUTTON_WIDTH ab
	EXPIRED_ICON_LOCATION R
	EXPIRES_SOON_ICON_LOCATION S
	LOGGER a
	MINIGAME_PREFIX V
	OFF_ICON_LOCATION c
	ON_ICON_LOCATION b
	SERVER_CLOSED_TOOLTIP aa
	SERVER_EXPIRED_TOOLTIP W
	SERVER_EXPIRING_IN_DAY_TOOLTIP Y
	SERVER_EXPIRING_SOON_TOOLTIP X
	SERVER_OPEN_TOOLTIP Z
	TITLE U
	WORLD_LIST_TITLE T
	animTick ar
	backupButton an
	clicks as
	lastScreen ae
	leftX ah
	optionsButton am
	playersButton aj
	resetWorldButton ao
	rightX ai
	serverData af
	serverId ag
	settingsButton ak
	slotButtonList at
	stateChanged aq
	subscriptionButton al
	switchMinigameButton ap
	toolTip ad
	addSlotButton (I)Lcom/mojang/realmsclient/gui/RealmsWorldSlotButton; a
	backButtonClicked ()V h
	centerButton (II)I a
	closeTheWorld (Lnet/minecraft/client/gui/screens/Screen;)V a
	disableButtons ()V w
	drawClose (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V f
	drawExpired (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V d
	drawExpiring (Lcom/mojang/blaze3d/vertex/PoseStack;IIIII)V b
	drawOpen (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V e
	drawServerStatus (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V c
	fetchServerData (J)V a
	frame (I)I c
	getNewScreen ()Lcom/mojang/realmsclient/gui/screens/RealmsConfigureWorldScreen; f
	hide (Lnet/minecraft/client/gui/components/Button;)V a
	hideMinigameButtons ()V A
	hideRegularButtons ()V z
	init ()V b
	isMinigame ()Z y
	joinRealm (Lcom/mojang/realmsclient/dto/RealmsServer;)V a
	keyPressed (III)Z a
	leftButton (I)I b
	openTheWorld (ZLnet/minecraft/client/gui/screens/Screen;)V a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderMousehoverTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/network/chat/Component;II)V a
	saveSettings (Ljava/lang/String;Ljava/lang/String;)V a
	saveSlotSettings (Lcom/mojang/realmsclient/dto/RealmsWorldOptions;)V a
	show (Lnet/minecraft/client/gui/components/Button;)V b
	stateChanged ()V c
	switchToEmptySlot (ILcom/mojang/realmsclient/dto/RealmsServer;)V b
	switchToFullSlot (ILcom/mojang/realmsclient/dto/RealmsServer;)V a
	switchToMinigame ()V x
	templateSelectionCallback (Lcom/mojang/realmsclient/dto/WorldTemplate;)V a
	tick ()V d
com/mojang/realmsclient/gui/screens/RealmsConfirmScreen dsx
	callback a
	title1 b
	title2 c
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
com/mojang/realmsclient/gui/screens/RealmsCreateRealmScreen dsy
	DESCRIPTION_LABEL b
	NAME_LABEL a
	createButton U
	descriptionBox T
	lastScreen R
	nameBox S
	server c
	charTyped (CI)Z a
	createWorld ()V h
	init ()V b
	keyPressed (III)Z a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	tick ()V d
	valid ()Z w
com/mojang/realmsclient/gui/screens/RealmsDownloadLatestWorldScreen dsz
	DOTS ai
	DOWNLOAD_LOCK b
	LOGGER a
	animTick ah
	bytesPersSecond ag
	callback al
	cancelButton U
	cancelled aa
	checked ak
	dotIndex aj
	downloadStatus W
	downloadTitle S
	errorMessage X
	extracting ad
	finished ac
	lastScreen c
	narrationRateLimiter T
	previousTimeSnapshot af
	previousWrittenBytes ae
	progress Z
	showDots ab
	status Y
	worldDownload R
	worldName V
	backButtonClicked ()V x
	checkDownloadSize ()V h
	createProgressNarrationMessage ()Lnet/minecraft/network/chat/Component; w
	downloadCancelled ()V z
	downloadSave ()V y
	drawDots (Lcom/mojang/blaze3d/vertex/PoseStack;)V b
	drawDownloadSpeed (Lcom/mojang/blaze3d/vertex/PoseStack;)V d
	drawDownloadSpeed0 (Lcom/mojang/blaze3d/vertex/PoseStack;J)V a
	drawProgressBar (Lcom/mojang/blaze3d/vertex/PoseStack;)V c
	getContentLength (Ljava/lang/String;)J b
	init ()V b
	keyPressed (III)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	tick ()V d
com/mojang/realmsclient/gui/screens/RealmsDownloadLatestWorldScreen$DownloadStatus dsz$a
	bytesWritten a
	totalBytes b
com/mojang/realmsclient/gui/screens/RealmsGenericErrorScreen dta
	line1 b
	line2 c
	nextScreen a
	errorMessage (Lcom/mojang/realmsclient/exception/RealmsServiceException;)V a
	errorMessage (Lnet/minecraft/network/chat/Component;)V a
	errorMessage (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)V a
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; af_
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
com/mojang/realmsclient/gui/screens/RealmsInviteScreen dtb
	LOGGER a
	NAME_LABEL b
	NO_SUCH_PLAYER_ERROR_TEXT c
	configureScreen T
	errorMsg V
	lastScreen U
	profileName R
	serverData S
	init ()V b
	keyPressed (III)Z a
	onInvite ()V h
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	showError (Lnet/minecraft/network/chat/Component;)V a
	tick ()V d
com/mojang/realmsclient/gui/screens/RealmsLongConfirmationScreen dtc
	callback a
	line2 c
	line3 R
	type b
	yesNoQuestion S
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; af_
	init ()V b
	keyPressed (III)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
com/mojang/realmsclient/gui/screens/RealmsLongConfirmationScreen$Type dtc$a
	$VALUES e
	Info b
	Warning a
	colorCode c
	text d
	$values ()[Lcom/mojang/realmsclient/gui/screens/RealmsLongConfirmationScreen$Type; a
com/mojang/realmsclient/gui/screens/RealmsLongRunningMcoTaskScreen dtd
	LOGGER c
	REPEATED_NARRATOR b
	SYMBOLS a
	aborted U
	animTicks V
	buttonLength X
	cancelOrBackButton Y
	errorMessage T
	lastScreen R
	task W
	title S
	aborted ()Z c
	cancelOrBackButtonClicked ()V h
	error (Lnet/minecraft/network/chat/Component;)V a
	init ()V b
	keyPressed (III)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setTitle (Lnet/minecraft/network/chat/Component;)V b
	tick ()V d
com/mojang/realmsclient/gui/screens/RealmsNotificationsScreen dte
	INVITE_ICON_LOCATION a
	NEWS_ICON_LOCATION c
	REALMS_DATA_FETCHER R
	TRIAL_ICON_LOCATION b
	checkedMcoAvailability T
	hasUnreadNews W
	numberOfPendingInvites S
	trialAvailable U
	validClient V
	checkIfMcoEnabled ()V x
	drawIcons (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	getRealmsNotificationsEnabled ()Z h
	inTitleScreen ()Z w
	init ()V b
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	tick ()V d
com/mojang/realmsclient/gui/screens/RealmsParentalConsentScreen dtf
	MESSAGE a
	messageLines c
	nextScreen b
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; af_
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen dtg
	ACCEPT_ICON_LOCATION b
	ACCEPT_INVITE_TOOLTIP S
	LOGGER a
	NO_PENDING_INVITES_TEXT R
	REJECT_ICON_LOCATION c
	REJECT_INVITE_TOOLTIP T
	acceptButton Z
	lastScreen U
	loaded W
	pendingInvitationSelectionList X
	rejectButton aa
	selectedInvite Y
	toolTip V
	accept (I)V c
	init ()V b
	keyPressed (III)Z a
	reject (I)V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderMousehoverTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/network/chat/Component;II)V a
	shouldAcceptAndRejectButtonBeVisible (I)Z k
	updateButtonStates ()V h
	updateList (I)V a
com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$Entry dtg$a
	TEXT_LEFT b
	pendingInvite c
	rowButtons d
	getNarration ()Lnet/minecraft/network/chat/Component; a
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	renderPendingInvitationItem (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/realmsclient/dto/PendingInvite;IIII)V a
com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$Entry$AcceptRowButton dtg$a$a
	draw (Lcom/mojang/blaze3d/vertex/PoseStack;IIZ)V a
	onClick (I)V a
com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$Entry$RejectRowButton dtg$a$b
	draw (Lcom/mojang/blaze3d/vertex/PoseStack;IIZ)V a
	onClick (I)V a
com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$PendingInvitationSelectionList dtg$b
	getMaxPosition ()I c
	getRowWidth ()I d
	isFocused ()Z b
	removeAtIndex (I)V b
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	selectInviteListItem (I)V c
	selectItem (I)V a
	setSelected (Lcom/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
com/mojang/realmsclient/gui/screens/RealmsPlayerScreen dth
	CROSS_ICON_LOCATION R
	INVITED_LABEL W
	LOGGER a
	NORMAL_USER_TOOLTIP T
	OPTIONS_BACKGROUND S
	OP_ICON_LOCATION b
	OP_TOOLTIP U
	REMOVE_ENTRY_TOOLTIP V
	USER_ICON_LOCATION c
	column1X ab
	column2X ad
	columnWidth ac
	hoveredUserAction ak
	invitedObjectSelectionList aa
	lastScreen Y
	opdeopButton af
	player ai
	removeButton ae
	selectedInvited ah
	selectedInvitedIndex ag
	serverData Z
	stateChanged aj
	toolTip X
	backButtonClicked ()V w
	deleteFromInvitedList (I)V o
	deop (I)V m
	drawNormal (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V e
	drawOpped (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V d
	drawRemoveIcon (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V c
	init ()V b
	keyPressed (III)Z a
	op (I)V l
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderMousehoverTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/network/chat/Component;II)V a
	shouldRemoveAndOpdeopButtonBeVisible (I)Z k
	uninvite (I)V n
	updateButtonStates ()V h
	updateOps (Lcom/mojang/realmsclient/dto/Ops;)V a
com/mojang/realmsclient/gui/screens/RealmsPlayerScreen$Entry dth$a
	playerInfo b
	getNarration ()Lnet/minecraft/network/chat/Component; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	renderInvitedItem (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/realmsclient/dto/PlayerInfo;IIII)V a
com/mojang/realmsclient/gui/screens/RealmsPlayerScreen$InvitedObjectSelectionList dth$b
	addEntry (Lcom/mojang/realmsclient/dto/PlayerInfo;)V a
	getMaxPosition ()I c
	getRowWidth ()I d
	getScrollbarPosition ()I e
	isFocused ()Z b
	itemClicked (IIDDI)V a
	mouseClicked (DDI)Z a
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	selectInviteListItem (I)V b
	selectItem (I)V a
	setSelected (Lcom/mojang/realmsclient/gui/screens/RealmsPlayerScreen$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
com/mojang/realmsclient/gui/screens/RealmsPlayerScreen$UserAction dth$c
	$VALUES d
	NONE c
	REMOVE b
	TOGGLE_OP a
	$values ()[Lcom/mojang/realmsclient/gui/screens/RealmsPlayerScreen$UserAction; a
com/mojang/realmsclient/gui/screens/RealmsResetNormalWorldScreen dti
	SEED_LABEL a
	buttonTitle T
	callback b
	generateStructures S
	levelType R
	seedEdit c
	init ()V b
	onClose ()V ah_
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	tick ()V d
com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen dtj
	ADVENTURE_MAP_LOCATION X
	EXPERIENCE_LOCATION aa
	INSPIRATION_LOCATION ab
	LOGGER b
	NEW_WORLD_LOCATION Z
	SLOT_FRAME_LOCATION V
	SURVIVAL_SPAWN_LOCATION Y
	UPLOAD_LOCATION W
	adventuremaps ad
	buttonTitle T
	callback ai
	experiences ae
	inspirations af
	lastScreen c
	resetTitle ag
	resetWorldRunnable ah
	serverData R
	slot a
	subtitle S
	subtitleColor U
	templates ac
	drawFrame (Lcom/mojang/blaze3d/vertex/PoseStack;IILnet/minecraft/network/chat/Component;Lnet/minecraft/resources/ResourceLocation;ZZ)V a
	frame (I)I b
	generationSelectionCallback (Lcom/mojang/realmsclient/util/WorldGenerationInfo;)V a
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; af_
	init ()V b
	keyPressed (III)Z a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	resetWorld (Ljava/lang/Runnable;)V b
	setResetTitle (Lnet/minecraft/network/chat/Component;)V a
	setSlot (I)V a
	startTask (Lcom/mojang/realmsclient/util/task/LongRunningTask;)V a
	switchSlot (Ljava/lang/Runnable;)V a
	templateSelectionCallback (Lcom/mojang/realmsclient/dto/WorldTemplate;)V a
com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen$FrameButton dtj$a
	image b
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
com/mojang/realmsclient/gui/screens/RealmsSelectFileToUploadScreen dtk
	CHEATS_TEXT S
	DATE_FORMAT T
	HARDCORE_TEXT R
	LOGGER a
	REQUIRES_CONVERSION_TEXT c
	WORLD_TEXT b
	callback ab
	lastScreen U
	levelList Y
	selectedWorld Z
	slotId W
	uploadButton X
	worldId V
	worldSelectionList aa
	formatLastPlayed (Lnet/minecraft/world/level/storage/LevelSummary;)Ljava/lang/String; b
	gameModeName (Lnet/minecraft/world/level/storage/LevelSummary;)Lnet/minecraft/network/chat/Component; a
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; af_
	init ()V b
	keyPressed (III)Z a
	loadLevelList ()V h
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	upload ()V w
com/mojang/realmsclient/gui/screens/RealmsSelectFileToUploadScreen$Entry dtk$a
	id d
	info e
	levelSummary b
	name c
	getNarration ()Lnet/minecraft/network/chat/Component; a
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	renderItem (Lcom/mojang/blaze3d/vertex/PoseStack;III)V a
com/mojang/realmsclient/gui/screens/RealmsSelectFileToUploadScreen$WorldSelectionList dtk$b
	addEntry (Lnet/minecraft/world/level/storage/LevelSummary;)V a
	getMaxPosition ()I c
	isFocused ()Z b
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	setSelected (Lcom/mojang/realmsclient/gui/screens/RealmsSelectFileToUploadScreen$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
com/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen dtl
	LINK_ICON b
	LOGGER a
	PUBLISHER_LINK_TOOLTIP S
	SLOT_FRAME_LOCATION R
	TRAILER_ICON c
	TRAILER_LINK_TOOLTIP T
	callback U
	clicks ad
	currentLink ab
	displayWarning ag
	hoverWarning ah
	noTemplatesMessage ai
	publisherButton Z
	selectButton X
	selectedTemplate W
	toolTip aa
	trailerButton Y
	warning ae
	warningURL af
	worldTemplateObjectSelectionList V
	worldType ac
	fetchTemplates (Lcom/mojang/realmsclient/dto/WorldTemplatePaginatedList;Lcom/mojang/realmsclient/client/RealmsClient;)Lcom/mojang/datafixers/util/Either; a
	fetchTemplatesAsync (Lcom/mojang/realmsclient/dto/WorldTemplatePaginatedList;)V a
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; af_
	getSelectedTemplate ()Lcom/mojang/realmsclient/dto/WorldTemplate; y
	hasValidTemplate ()Z B
	init ()V b
	mouseClicked (DDI)Z a
	onClose ()V ah_
	onPublish ()V D
	onTrailer ()V C
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderMousehoverTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/network/chat/Component;II)V a
	renderMultilineMessage (Lcom/mojang/blaze3d/vertex/PoseStack;IILjava/util/List;)V a
	selectTemplate ()V A
	setWarning ([Lnet/minecraft/network/chat/Component;)V a
	shouldPublisherBeVisible ()Z x
	shouldSelectButtonBeActive ()Z w
	shouldTrailerBeVisible ()Z z
	tick ()V d
	updateButtonStates ()V h
com/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen$Entry dtl$a
	template b
	drawIcons (Lcom/mojang/blaze3d/vertex/PoseStack;IIIILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V a
	drawImage (Lcom/mojang/blaze3d/vertex/PoseStack;IIIILcom/mojang/realmsclient/dto/WorldTemplate;)V a
	getNarration ()Lnet/minecraft/network/chat/Component; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	renderWorldTemplateItem (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/realmsclient/dto/WorldTemplate;IIII)V a
com/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen$WorldTemplateObjectSelectionList dtl$b
	addEntry (Lcom/mojang/realmsclient/dto/WorldTemplate;)V a
	get (I)Lcom/mojang/realmsclient/dto/WorldTemplate; b
	getMaxPosition ()I c
	getRowWidth ()I d
	getTemplates ()Ljava/util/List; g
	isEmpty ()Z f
	isFocused ()Z b
	mouseClicked (DDI)Z a
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	setSelected (Lcom/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
com/mojang/realmsclient/gui/screens/RealmsSettingsScreen dtm
	COMPONENT_WIDTH a
	DESCRIPTION_LABEL c
	NAME_LABEL b
	configureWorldScreen R
	descEdit U
	doneButton T
	nameEdit V
	serverData S
	init ()V b
	keyPressed (III)Z a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	save ()V f
	tick ()V d
com/mojang/realmsclient/gui/screens/RealmsSlotOptionsScreen dtn
	DEFAULT_DIFFICULTY R
	DEFAULT_GAME_MODE S
	DIFFICULTIES a
	GAME_MODES b
	NAME_LABEL T
	SPAWN_PROTECTION_TEXT U
	activeSlot aa
	column1X W
	columnWidth X
	commandBlocks ai
	difficulty ab
	forceGameMode aj
	gameMode ac
	nameEdit V
	options Y
	parent c
	pvp ad
	spawnAnimals af
	spawnMonsters ag
	spawnNPCs ae
	spawnProtection ah
	spawnProtectionButton ak
	worldType Z
	findByIndex (Ljava/util/List;II)Ljava/lang/Object; a
	findIndex (Ljava/util/List;Ljava/lang/Object;I)I a
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; af_
	getSlotName ()Ljava/lang/String; h
	init ()V b
	keyPressed (III)Z a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	saveSettings ()V w
	tick ()V d
com/mojang/realmsclient/gui/screens/RealmsSlotOptionsScreen$SettingsSlider dtn$a
	maxValue d
	minValue c
	applyValue ()V a
	onClick (DD)V a
	onRelease (DD)V b
	updateMessage ()V b
com/mojang/realmsclient/gui/screens/RealmsSubscriptionInfoScreen dto
	DAYS_LEFT_LABEL S
	DAYS_SUFFIX Y
	DAY_SUFFIX X
	LOGGER a
	MONTHS_SUFFIX W
	MONTH_SUFFIX V
	PURCHASE_LINK af
	SUBSCRIPTION_EXPIRED_TEXT T
	SUBSCRIPTION_LESS_THAN_A_DAY_TEXT U
	SUBSCRIPTION_START_LABEL c
	SUBSCRIPTION_TITLE b
	TIME_LEFT_LABEL R
	daysLeft ac
	lastScreen Z
	mainScreen ab
	serverData aa
	startDate ad
	type ae
	daysLeftPresentation (I)Lnet/minecraft/network/chat/Component; a
	deleteRealm (Z)V c
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; af_
	getSubscription (J)V a
	init ()V b
	keyPressed (III)Z a
	localPresentation (J)Ljava/lang/String; b
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
com/mojang/realmsclient/gui/screens/RealmsTermsScreen dtp
	LOGGER a
	TERMS_LINK_TEXT R
	TERMS_STATIC_TEXT c
	TITLE b
	lastScreen S
	mainScreen T
	onLink V
	realmsServer U
	realmsToSUrl W
	agreedToTos ()V h
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; af_
	init ()V b
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
com/mojang/realmsclient/gui/screens/RealmsUploadScreen dtq
	DOTS c
	LOGGER a
	UPLOAD_LOCK b
	VERIFYING_TEXT R
	backButton af
	bytesPersSecond ak
	callback al
	cancelButton ag
	cancelled ab
	errorMessage Y
	lastScreen S
	narrationRateLimiter X
	previousTimeSnapshot aj
	previousWrittenBytes ai
	progress aa
	selectedLevel T
	showDots ad
	slotId V
	status Z
	tickCount ah
	uploadFinished ac
	uploadStarted ae
	uploadStatus W
	worldId U
	addFileToTarGz (Lorg/apache/commons/compress/archivers/tar/TarArchiveOutputStream;Ljava/lang/String;Ljava/lang/String;Z)V a
	createProgressNarrationMessage ()Lnet/minecraft/network/chat/Component; x
	drawDots (Lcom/mojang/blaze3d/vertex/PoseStack;)V b
	drawProgressBar (Lcom/mojang/blaze3d/vertex/PoseStack;)V c
	drawUploadSpeed (Lcom/mojang/blaze3d/vertex/PoseStack;)V d
	drawUploadSpeed0 (Lcom/mojang/blaze3d/vertex/PoseStack;J)V a
	init ()V b
	keyPressed (III)Z a
	onBack ()V h
	onCancel ()V w
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setErrorMessage ([Lnet/minecraft/network/chat/Component;)V a
	tarGzipArchive (Ljava/io/File;)Ljava/io/File; b
	tick ()V d
	upload ()V y
	uploadCancelled ()V z
	verify (Ljava/io/File;)Z a
com/mojang/realmsclient/gui/screens/UploadResult dtr
	errorMessage b
	statusCode a
com/mojang/realmsclient/gui/screens/UploadResult$Builder dtr$a
	errorMessage b
	statusCode a
	build ()Lcom/mojang/realmsclient/gui/screens/UploadResult; a
	withErrorMessage (Ljava/lang/String;)Lcom/mojang/realmsclient/gui/screens/UploadResult$Builder; a
	withStatusCode (I)Lcom/mojang/realmsclient/gui/screens/UploadResult$Builder; a
com/mojang/realmsclient/gui/task/IntervalBasedStartupDelay dtt
	clock b
	interval a
	lastStartedTimestamp c
	getNextDelayMs ()J b
	markExecutionStart ()V a
com/mojang/realmsclient/gui/task/NoStartupDelay dtu
	getNextDelayMs ()J b
	markExecutionStart ()V a
com/mojang/realmsclient/gui/task/RepeatableTask dtv
	interval c
	isActive a
	restartDelayCalculator b
	runnable d
	schedule (Ljava/util/concurrent/ScheduledExecutorService;)Ljava/util/concurrent/ScheduledFuture; a
	withImmediateRestart (Ljava/lang/Runnable;Ljava/time/Duration;Ljava/util/function/BooleanSupplier;)Lcom/mojang/realmsclient/gui/task/RepeatableTask; b
	withRestartDelayAccountingForInterval (Ljava/lang/Runnable;Ljava/time/Duration;Ljava/util/function/BooleanSupplier;)Lcom/mojang/realmsclient/gui/task/RepeatableTask; a
com/mojang/realmsclient/gui/task/RestartDelayCalculator dtw
	getNextDelayMs ()J b
	markExecutionStart ()V a
com/mojang/realmsclient/util/JsonUtils dtz
	getBooleanOr (Ljava/lang/String;Lcom/google/gson/JsonObject;Z)Z a
	getDateOr (Ljava/lang/String;Lcom/google/gson/JsonObject;)Ljava/util/Date; a
	getIntOr (Ljava/lang/String;Lcom/google/gson/JsonObject;I)I a
	getLongOr (Ljava/lang/String;Lcom/google/gson/JsonObject;J)J a
	getStringOr (Ljava/lang/String;Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/String; a
com/mojang/realmsclient/util/LevelType dua
	$VALUES g
	AMPLIFIED d
	DEFAULT a
	FLAT b
	LARGE_BIOMES c
	index e
	name f
	$values ()[Lcom/mojang/realmsclient/util/LevelType; c
	getDtoIndex ()I b
	getName ()Lnet/minecraft/network/chat/Component; a
com/mojang/realmsclient/util/RealmsPersistence dub
	FILE_NAME a
	GSON b
	getPathToData ()Ljava/io/File; c
	read ()Lcom/mojang/realmsclient/util/RealmsPersistence$RealmsPersistenceData; a
	readFile ()Lcom/mojang/realmsclient/util/RealmsPersistence$RealmsPersistenceData; b
	save (Lcom/mojang/realmsclient/util/RealmsPersistence$RealmsPersistenceData;)V a
	writeFile (Lcom/mojang/realmsclient/util/RealmsPersistence$RealmsPersistenceData;)V b
com/mojang/realmsclient/util/RealmsPersistence$RealmsPersistenceData dub$a
	hasUnreadNews b
	newsLink a
com/mojang/realmsclient/util/RealmsTextureManager duc
	FETCHED_SKINS c
	LOGGER d
	SKIN_FETCH_STATUS b
	TEMPLATE_ICON_LOCATION e
	TEXTURES a
	bindDefaultFace (Ljava/util/UUID;)V a
	bindFace (Ljava/lang/String;)V a
	bindWorldTemplate (Ljava/lang/String;Ljava/lang/String;)V a
	getTextureId (Ljava/lang/String;Ljava/lang/String;)I b
	withBoundFace (Ljava/lang/String;Ljava/lang/Runnable;)V a
com/mojang/realmsclient/util/RealmsTextureManager$RealmsTexture duc$a
	image a
	textureId b
com/mojang/realmsclient/util/RealmsUtil dud
	AUTHENTICATION_SERVICE b
	DAYS f
	HOURS e
	MINUTES d
	SESSION_SERVICE c
	gameProfileCache a
	convertToAgePresentation (J)Ljava/lang/String; a
	convertToAgePresentationFromInstant (Ljava/util/Date;)Ljava/lang/String; a
	getTextures (Ljava/lang/String;)Ljava/util/Map; b
	uuidToName (Ljava/lang/String;)Ljava/lang/String; a
com/mojang/realmsclient/util/SkinProcessor due
	height c
	pixels a
	width b
	doLegacyTransparencyHack (IIII)V a
	process (Ljava/awt/image/BufferedImage;)Ljava/awt/image/BufferedImage; a
	setNoAlpha (IIII)V b
com/mojang/realmsclient/util/TextRenderingUtils duf
	decompose (Ljava/lang/String;Ljava/util/List;)Ljava/util/List; a
	decompose (Ljava/lang/String;[Lcom/mojang/realmsclient/util/TextRenderingUtils$LineSegment;)Ljava/util/List; a
	insertLinks (Ljava/util/List;Ljava/util/List;)Ljava/util/List; a
	lineBreak (Ljava/lang/String;)Ljava/util/List; a
	split (Ljava/lang/String;Ljava/lang/String;)Ljava/util/List; a
com/mojang/realmsclient/util/TextRenderingUtils$Line duf$a
	segments a
com/mojang/realmsclient/util/TextRenderingUtils$LineSegment duf$b
	fullText a
	linkTitle b
	linkUrl c
	getLinkUrl ()Ljava/lang/String; c
	isLink ()Z b
	link (Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/realmsclient/util/TextRenderingUtils$LineSegment; a
	renderedText ()Ljava/lang/String; a
	text (Ljava/lang/String;)Lcom/mojang/realmsclient/util/TextRenderingUtils$LineSegment; a
com/mojang/realmsclient/util/UploadTokenCache dug
	TOKEN_CACHE a
	get (J)Ljava/lang/String; a
	invalidate (J)V b
	put (JLjava/lang/String;)V a
com/mojang/realmsclient/util/WorldGenerationInfo duh
	generateStructures c
	levelType b
	seed a
	getLevelType ()Lcom/mojang/realmsclient/util/LevelType; b
	getSeed ()Ljava/lang/String; a
	shouldGenerateStructures ()Z c
com/mojang/realmsclient/util/task/CloseServerTask duj
	configureScreen e
	serverData d
com/mojang/realmsclient/util/task/ConnectTask duk
	address f
	realmsConnect d
	server e
	abortTask ()V a
	tick ()V b
com/mojang/realmsclient/util/task/DownloadTask dul
	downloadName g
	lastScreen f
	slot e
	worldId d
com/mojang/realmsclient/util/task/GetServerDetailsTask dum
	connectLock g
	lastScreen e
	mainScreen f
	server d
	connectScreen (Lcom/mojang/realmsclient/dto/RealmsServerAddress;)Lcom/mojang/realmsclient/gui/screens/RealmsLongRunningMcoTaskScreen; a
	fetchServerAddress ()Lcom/mojang/realmsclient/dto/RealmsServerAddress; e
	resourcePackDownloadConfirmationScreen (Lcom/mojang/realmsclient/dto/RealmsServerAddress;Ljava/util/function/Function;)Lcom/mojang/realmsclient/gui/screens/RealmsLongConfirmationScreen; a
	scheduleResourcePackDownload (Lcom/mojang/realmsclient/dto/RealmsServerAddress;)Ljava/util/concurrent/CompletableFuture; b
com/mojang/realmsclient/util/task/LongRunningTask dun
	LOGGER b
	NUMBER_OF_RETRIES a
	longRunningMcoTaskScreen c
	abortTask ()V a
	aborted ()Z c
	error (Lnet/minecraft/network/chat/Component;)V a
	init ()V d
	pause (J)V a
	setScreen (Lcom/mojang/realmsclient/gui/screens/RealmsLongRunningMcoTaskScreen;)V a
	setScreen (Lnet/minecraft/client/gui/screens/Screen;)V a
	setTitle (Lnet/minecraft/network/chat/Component;)V b
	tick ()V b
com/mojang/realmsclient/util/task/OpenServerTask duo
	join f
	mainScreen g
	minecraft h
	returnScreen e
	serverData d
com/mojang/realmsclient/util/task/ResettingGeneratedWorldTask dup
	generationInfo d
	sendResetRequest (Lcom/mojang/realmsclient/client/RealmsClient;J)V a
com/mojang/realmsclient/util/task/ResettingTemplateWorldTask duq
	template d
	sendResetRequest (Lcom/mojang/realmsclient/client/RealmsClient;J)V a
com/mojang/realmsclient/util/task/ResettingWorldTask dur
	callback f
	serverId d
	title e
	sendResetRequest (Lcom/mojang/realmsclient/client/RealmsClient;J)V a
com/mojang/realmsclient/util/task/RestoreTask dus
	backup d
	lastScreen f
	worldId e
com/mojang/realmsclient/util/task/SwitchMinigameTask dut
	lastScreen f
	worldId d
	worldTemplate e
com/mojang/realmsclient/util/task/SwitchSlotTask duu
	callback f
	slot e
	worldId d
com/mojang/realmsclient/util/task/WorldCreationTask duv
	lastScreen g
	motd e
	name d
	worldId f
net/minecraft/BlockUtil n
	getLargestRectangleAround (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction$Axis;ILnet/minecraft/core/Direction$Axis;ILjava/util/function/Predicate;)Lnet/minecraft/BlockUtil$FoundRectangle; a
	getLimit (Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/core/Direction;I)I a
	getMaxRectangleLocation ([I)Lcom/mojang/datafixers/util/Pair; a
	getTopConnectedBlock (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/Block;)Ljava/util/Optional; a
net/minecraft/BlockUtil$FoundRectangle n$a
	axis1Size b
	axis2Size c
	minCorner a
net/minecraft/BlockUtil$IntBounds n$b
	max b
	min a
net/minecraft/CharPredicate o
	and (Lnet/minecraft/CharPredicate;)Lnet/minecraft/CharPredicate; a
	negate ()Lnet/minecraft/CharPredicate; a
	or (Lnet/minecraft/CharPredicate;)Lnet/minecraft/CharPredicate; b
net/minecraft/ChatFormatting p
	$VALUES F
	AQUA l
	BLACK a
	BLUE j
	BOLD r
	DARK_AQUA d
	DARK_BLUE b
	DARK_GRAY i
	DARK_GREEN c
	DARK_PURPLE f
	DARK_RED e
	FORMATTING_BY_NAME x
	GOLD g
	GRAY h
	GREEN k
	ITALIC u
	LIGHT_PURPLE n
	OBFUSCATED q
	PREFIX_CODE w
	RED m
	RESET v
	STRIKETHROUGH s
	STRIP_FORMATTING_PATTERN y
	UNDERLINE t
	WHITE p
	YELLOW o
	code A
	color E
	id D
	isFormat B
	name z
	toString C
	$values ()[Lnet/minecraft/ChatFormatting; g
	cleanName (Ljava/lang/String;)Ljava/lang/String; c
	getByCode (C)Lnet/minecraft/ChatFormatting; a
	getById (I)Lnet/minecraft/ChatFormatting; a
	getByName (Ljava/lang/String;)Lnet/minecraft/ChatFormatting; b
	getChar ()C a
	getColor ()Ljava/lang/Integer; e
	getId ()I b
	getName ()Ljava/lang/String; f
	getNames (ZZ)Ljava/util/Collection; a
	isColor ()Z d
	isFormat ()Z c
	stripFormatting (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/CrashReport q
	LOGGER a
	details d
	exception c
	saveFile e
	systemReport h
	title b
	trackingStackTrace f
	uncategorizedStackTrace g
	addCategory (Ljava/lang/String;)Lnet/minecraft/CrashReportCategory; a
	addCategory (Ljava/lang/String;I)Lnet/minecraft/CrashReportCategory; a
	forThrowable (Ljava/lang/Throwable;Ljava/lang/String;)Lnet/minecraft/CrashReport; a
	getDetails ()Ljava/lang/String; c
	getDetails (Ljava/lang/StringBuilder;)V a
	getErrorComment ()Ljava/lang/String; i
	getException ()Ljava/lang/Throwable; b
	getExceptionMessage ()Ljava/lang/String; d
	getFriendlyReport ()Ljava/lang/String; e
	getSaveFile ()Ljava/io/File; f
	getSystemReport ()Lnet/minecraft/SystemReport; g
	getTitle ()Ljava/lang/String; a
	preload ()V h
	saveToFile (Ljava/io/File;)Z a
net/minecraft/CrashReportCategory r
	entries b
	stackTrace c
	title a
	fillInStackTrace (I)I a
	formatLocation (Lnet/minecraft/world/level/LevelHeightAccessor;DDD)Ljava/lang/String; a
	formatLocation (Lnet/minecraft/world/level/LevelHeightAccessor;III)Ljava/lang/String; a
	formatLocation (Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/core/BlockPos;)Ljava/lang/String; a
	getDetails (Ljava/lang/StringBuilder;)V a
	getStacktrace ()[Ljava/lang/StackTraceElement; a
	populateBlockDetails (Lnet/minecraft/CrashReportCategory;Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	setDetail (Ljava/lang/String;Ljava/lang/Object;)Lnet/minecraft/CrashReportCategory; a
	setDetail (Ljava/lang/String;Lnet/minecraft/CrashReportDetail;)Lnet/minecraft/CrashReportCategory; a
	setDetailError (Ljava/lang/String;Ljava/lang/Throwable;)V a
	trimStacktrace (I)V b
	validateStackTrace (Ljava/lang/StackTraceElement;Ljava/lang/StackTraceElement;)Z a
net/minecraft/CrashReportCategory$Entry r$a
	key a
	value b
	getKey ()Ljava/lang/String; a
	getValue ()Ljava/lang/String; b
net/minecraft/CrashReportDetail s
net/minecraft/DefaultUncaughtExceptionHandler t
	logger a
net/minecraft/DefaultUncaughtExceptionHandlerWithName u
	logger a
net/minecraft/DetectedVersion v
	BUILT_IN a
	LOGGER b
	buildTime j
	dataPackVersion i
	id c
	name d
	protocolVersion g
	releaseTarget k
	resourcePackVersion h
	stable e
	worldVersion f
	tryDetectVersion ()Lcom/mojang/bridge/game/GameVersion; a
net/minecraft/FieldsAreNonnullByDefault w
net/minecraft/FileUtil x
	COPY_COUNTER_PATTERN a
	MAX_FILE_NAME b
	RESERVED_WINDOWS_FILENAMES c
	createPathToResource (Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;)Ljava/nio/file/Path; b
	findAvailableName (Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; a
	getFullResourcePath (Ljava/lang/String;)Ljava/lang/String; a
	isPathNormalized (Ljava/nio/file/Path;)Z a
	isPathPortable (Ljava/nio/file/Path;)Z b
	normalizeResourcePath (Ljava/lang/String;)Ljava/lang/String; b
net/minecraft/MethodsReturnNonnullByDefault y
net/minecraft/ReportedException z
	report a
	getReport ()Lnet/minecraft/CrashReport; a
net/minecraft/ResourceLocationException aa
net/minecraft/SharedConstants ab
	ALLOW_INCOMPATIBLE_WORLD_HEIGHT v
	AQUIFER_ENABLED_CARVERS o
	AVERAGE_GAME_TICKS_PER_RANDOM_TICK_PER_BLOCK aN
	AVERAGE_RANDOM_TICKS_PER_BLOCK_PER_GAME_DAY aP
	AVERAGE_RANDOM_TICKS_PER_BLOCK_PER_MINUTE aO
	CHECK_DATA_FIXER_SCHEMA aE
	CNC_PART_2 k
	CNC_PART_2_ITEMS_AND_BLOCKS l
	COMMAND_STACK_TRACES ay
	CURRENT_VERSION aR
	DATA_PACK_FORMAT i
	DATA_VERSION_TAG j
	DEBUG_BEES V
	DEBUG_BLOCK_BREAK X
	DEBUG_BRAIN U
	DEBUG_CARVERS ae
	DEBUG_CHUNKS J
	DEBUG_COLLISION C
	DEBUG_DISABLE_AQUIFERS ak
	DEBUG_DISABLE_CARVERS an
	DEBUG_DISABLE_FEATURES ap
	DEBUG_DISABLE_FLUID_GENERATION aj
	DEBUG_DISABLE_LIQUID_SPREADING ah
	DEBUG_DISABLE_NOISE_CAVES al
	DEBUG_DISABLE_NOODLE_CAVES ar
	DEBUG_DISABLE_ORE_VEINS aq
	DEBUG_DISABLE_STRUCTURES ao
	DEBUG_DISABLE_SURFACE am
	DEBUG_DONT_SAVE_WORLD ab
	DEBUG_DUMP_INTERPOLATED_TEXTURE_FRAMES M
	DEBUG_DUMP_TEXTURE_ATLAS L
	DEBUG_GAME_EVENT_LISTENERS K
	DEBUG_GOAL_SELECTOR S
	DEBUG_HEIGHTMAP B
	DEBUG_HOTKEYS w
	DEBUG_KEEP_JIGSAW_BLOCKS_DURING_STRUCTURE_GEN aa
	DEBUG_LARGE_DRIPSTONE ac
	DEBUG_LIGHT G
	DEBUG_MONITOR_TICK_TIMES Z
	DEBUG_NAMED_RUNNABLES R
	DEBUG_NEIGHBORSUPDATE E
	DEBUG_ONLY_GENERATE_HALF_THE_WORLD ai
	DEBUG_ORE_VEINS af
	DEBUG_PACKET_SERIALIZATION ad
	DEBUG_PATHFINDING z
	DEBUG_RAIDS W
	DEBUG_RENDER y
	DEBUG_RESOURCE_LOAD_TIMES Y
	DEBUG_SAVE_STRUCTURES_AS_SNBT O
	DEBUG_SHAPES D
	DEBUG_SHOW_SERVER_DEBUG_VALUES aA
	DEBUG_SMALL_SPAWN ag
	DEBUG_SOLID_FACE I
	DEBUG_STORE_CHUNK_STACKTRACES aB
	DEBUG_STRUCTURES F
	DEBUG_STRUCTURE_EDIT_MODE N
	DEBUG_SUBTITLES au
	DEBUG_SYNCHRONOUS_GL_LOGS P
	DEBUG_UI_NARRATION x
	DEBUG_VERBOSE_SERVER_EVENTS Q
	DEBUG_VILLAGE_SECTIONS T
	DEBUG_WATER A
	DEBUG_WORLDGENATTEMPT H
	DEBUG_WORLD_RECREATE az
	DEFAULT_MINECRAFT_PORT as
	ENABLE_SNOOPER t
	EXTENDED_WORLD_HEIGHT n
	FAKE_MS_JITTER aw
	FAKE_MS_LATENCY av
	FIX_SAND_DUPE s
	FIX_TNT_DUPE r
	ILLEGAL_FILE_CHARACTERS aJ
	INGAME_DEBUG_OUTPUT at
	IS_RUNNING_IN_IDE aF
	MAXIMUM_TICK_TIME_NANOS aD
	MAX_CHAT_LENGTH aH
	MAX_COMMAND_LENGTH aI
	MULTITHREADED_RENDERING q
	NETTY_LEAK_DETECTION ax
	NEW_WORLD_GENERATION m
	RAIN_THRESHOLD aC
	RELEASE_NETWORK_PROTOCOL_VERSION e
	RELEASE_TARGET d
	RESOURCE_PACK_FORMAT h
	SNAPSHOT a
	SNAPSHOT_NETWORK_PROTOCOL_VERSION f
	SNAPSHOT_PROTOCOL_BIT aQ
	SNBT_NAG_VERSION g
	TICKS_PER_GAME_DAY aM
	TICKS_PER_MINUTE aL
	TICKS_PER_SECOND aK
	USE_DEBUG_FEATURES u
	USE_NEW_RENDERSYSTEM p
	VERSION_STRING c
	WORLD_RESOLUTION aG
	WORLD_VERSION b
	filterText (Ljava/lang/String;)Ljava/lang/String; a
	getCurrentVersion ()Lcom/mojang/bridge/game/GameVersion; b
	getProtocolVersion ()I c
	isAllowedChatCharacter (C)Z a
	setVersion (Lcom/mojang/bridge/game/GameVersion;)V a
	tryDetectVersion ()V a
net/minecraft/SystemReport ac
	BYTES_PER_MEBIBYTE a
	JAVA_VERSION e
	JAVA_VM_VERSION f
	LOGGER c
	ONE_GIGA b
	OPERATING_SYSTEM d
	entries g
	appendToCrashReportString (Ljava/lang/StringBuilder;)V a
	ignoreErrors (Ljava/lang/String;Ljava/lang/Runnable;)V a
	putGraphics (Ljava/util/List;)V b
	putHardware (Loshi/SystemInfo;)V a
	putMemory (Loshi/hardware/GlobalMemory;)V a
	putPhysicalMemory (Ljava/util/List;)V a
	putProcessor (Loshi/hardware/CentralProcessor;)V a
	putVirtualMemory (Loshi/hardware/VirtualMemory;)V a
	setDetail (Ljava/lang/String;Ljava/lang/String;)V a
	setDetail (Ljava/lang/String;Ljava/util/function/Supplier;)V a
	toLineSeparatedString ()Ljava/lang/String; a
net/minecraft/Util ad
	BACKGROUND_EXECUTOR f
	BOOTSTRAP_EXECUTOR e
	IO_POOL g
	LOGGER h
	NIL_UUID b
	WORKER_COUNT d
	ZIP_FILE_SYSTEM_PROVIDER c
	timeSource a
	backgroundExecutor ()Ljava/util/concurrent/Executor; f
	bootstrapExecutor ()Ljava/util/concurrent/Executor; e
	copyBetweenDirs (Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)V b
	createDeleter (Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier; a
	createFileCreatedCheck (Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier; c
	createFileDeletedCheck (Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier; b
	createRenamer (Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier; a
	describeError (Ljava/lang/Throwable;)Ljava/lang/String; d
	doFetchChoiceType (Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)Lcom/mojang/datafixers/types/Type; b
	doPause ()V n
	executeInSequence ([Ljava/util/function/BooleanSupplier;)Z a
	failedFuture (Ljava/lang/Throwable;)Ljava/util/concurrent/CompletableFuture; a
	fetchChoiceType (Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)Lcom/mojang/datafixers/types/Type; a
	findNextInIterable (Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object; a
	findPreviousInIterable (Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object; b
	fixedSize (Ljava/util/List;I)Lcom/mojang/serialization/DataResult; a
	fixedSize (Ljava/util/stream/IntStream;I)Lcom/mojang/serialization/DataResult; a
	getEpochMillis ()J d
	getMillis ()J b
	getNanos ()J c
	getPlatform ()Lnet/minecraft/Util$OS; i
	getPropertyName (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Object;)Ljava/lang/String; a
	getRandom (Ljava/util/List;Ljava/util/Random;)Ljava/lang/Object; a
	getRandom ([ILjava/util/Random;)I a
	getRandom ([Ljava/lang/Object;Ljava/util/Random;)Ljava/lang/Object; a
	getVmArguments ()Ljava/util/stream/Stream; j
	identityStrategy ()Lit/unimi/dsi/fastutil/Hash$Strategy; k
	ifElse (Ljava/util/Optional;Ljava/util/function/Consumer;Ljava/lang/Runnable;)Ljava/util/Optional; a
	ioPool ()Ljava/util/concurrent/Executor; g
	lastOf (Ljava/util/List;)Ljava/lang/Object; a
	logAndPauseIfInIde (Ljava/lang/String;)V a
	make (Ljava/lang/Object;Ljava/util/function/Consumer;)Ljava/lang/Object; a
	make (Ljava/util/function/Supplier;)Ljava/lang/Object; a
	makeDescriptionId (Ljava/lang/String;Lnet/minecraft/resources/ResourceLocation;)Ljava/lang/String; a
	makeExecutor (Ljava/lang/String;)Ljava/util/concurrent/ExecutorService; b
	makeIoExecutor ()Ljava/util/concurrent/ExecutorService; m
	memoize (Ljava/util/function/BiFunction;)Ljava/util/function/BiFunction; a
	memoize (Ljava/util/function/Function;)Ljava/util/function/Function; a
	name (Ljava/lang/Runnable;Ljava/util/function/Supplier;)Ljava/lang/Runnable; a
	offsetByCodepoints (Ljava/lang/String;II)I a
	onThreadException (Ljava/lang/Thread;Ljava/lang/Throwable;)V a
	pauseInIde (Ljava/lang/Throwable;)Ljava/lang/Throwable; c
	prefix (Ljava/lang/String;Ljava/util/function/Consumer;)Ljava/util/function/Consumer; a
	runWithRetries (ILjava/lang/String;[Ljava/util/function/BooleanSupplier;)Z a
	safeReplaceFile (Ljava/io/File;Ljava/io/File;Ljava/io/File;)V a
	safeReplaceFile (Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)V a
	sanitizeName (Ljava/lang/String;Lnet/minecraft/CharPredicate;)Ljava/lang/String; a
	sequence (Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; b
	sequenceFailFast (Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; c
	shutdownExecutor (Ljava/util/concurrent/ExecutorService;)V a
	shutdownExecutors ()V h
	startTimerHackThread ()V l
	throwAsRuntime (Ljava/lang/Throwable;)V b
	toMap ()Ljava/util/stream/Collector; a
	toStream (Ljava/util/Optional;)Ljava/util/stream/Stream; a
	wrapThreadWithTaskName (Ljava/lang/String;Ljava/lang/Runnable;)Ljava/lang/Runnable; a
net/minecraft/Util$IdentityStrategy ad$a
	$VALUES b
	INSTANCE a
	$values ()[Lnet/minecraft/Util$IdentityStrategy; a
net/minecraft/Util$OS ad$b
	$VALUES f
	LINUX a
	OSX d
	SOLARIS b
	UNKNOWN e
	WINDOWS c
	$values ()[Lnet/minecraft/Util$OS; a
	getOpenUrlArguments (Ljava/net/URL;)[Ljava/lang/String; b
	openFile (Ljava/io/File;)V a
	openUri (Ljava/lang/String;)V a
	openUri (Ljava/net/URI;)V a
	openUrl (Ljava/net/URL;)V a
net/minecraft/advancements/Advancement ae
	chatComponent h
	children g
	criteria e
	display b
	id d
	parent a
	requirements f
	rewards c
	addChild (Lnet/minecraft/advancements/Advancement;)V a
	deconstruct ()Lnet/minecraft/advancements/Advancement$Builder; a
	getChatComponent ()Lnet/minecraft/network/chat/Component; j
	getChildren ()Ljava/lang/Iterable; e
	getCriteria ()Ljava/util/Map; f
	getDisplay ()Lnet/minecraft/advancements/DisplayInfo; c
	getId ()Lnet/minecraft/resources/ResourceLocation; h
	getMaxCriteraRequired ()I g
	getParent ()Lnet/minecraft/advancements/Advancement; b
	getRequirements ()[[Ljava/lang/String; i
	getRewards ()Lnet/minecraft/advancements/AdvancementRewards; d
net/minecraft/advancements/Advancement$Builder ae$a
	criteria e
	display c
	parent b
	parentId a
	requirements f
	requirementsStrategy g
	rewards d
	addCriterion (Ljava/lang/String;Lnet/minecraft/advancements/Criterion;)Lnet/minecraft/advancements/Advancement$Builder; a
	addCriterion (Ljava/lang/String;Lnet/minecraft/advancements/CriterionTriggerInstance;)Lnet/minecraft/advancements/Advancement$Builder; a
	advancement ()Lnet/minecraft/advancements/Advancement$Builder; a
	build (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/Advancement; b
	canBuild (Ljava/util/function/Function;)Z a
	display (Lnet/minecraft/advancements/DisplayInfo;)Lnet/minecraft/advancements/Advancement$Builder; a
	display (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/advancements/FrameType;ZZZ)Lnet/minecraft/advancements/Advancement$Builder; a
	display (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/advancements/FrameType;ZZZ)Lnet/minecraft/advancements/Advancement$Builder; a
	fromJson (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/Advancement$Builder; a
	fromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/advancements/Advancement$Builder; b
	getCriteria ()Ljava/util/Map; c
	parent (Lnet/minecraft/advancements/Advancement;)Lnet/minecraft/advancements/Advancement$Builder; a
	parent (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/Advancement$Builder; a
	requirements (Lnet/minecraft/advancements/RequirementsStrategy;)Lnet/minecraft/advancements/Advancement$Builder; a
	requirements ([[Ljava/lang/String;)Lnet/minecraft/advancements/Advancement$Builder; a
	rewards (Lnet/minecraft/advancements/AdvancementRewards$Builder;)Lnet/minecraft/advancements/Advancement$Builder; a
	rewards (Lnet/minecraft/advancements/AdvancementRewards;)Lnet/minecraft/advancements/Advancement$Builder; a
	save (Ljava/util/function/Consumer;Ljava/lang/String;)Lnet/minecraft/advancements/Advancement; a
	serializeToJson ()Lcom/google/gson/JsonObject; b
	serializeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/advancements/AdvancementList af
	LOGGER a
	advancements b
	listener e
	roots c
	tasks d
	add (Ljava/util/Map;)V a
	clear ()V a
	get (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/Advancement; a
	getAllAdvancements ()Ljava/util/Collection; c
	getRoots ()Ljava/lang/Iterable; b
	remove (Ljava/util/Set;)V a
	remove (Lnet/minecraft/advancements/Advancement;)V a
	setListener (Lnet/minecraft/advancements/AdvancementList$Listener;)V a
net/minecraft/advancements/AdvancementList$Listener af$a
	onAddAdvancementRoot (Lnet/minecraft/advancements/Advancement;)V a
	onAddAdvancementTask (Lnet/minecraft/advancements/Advancement;)V c
	onAdvancementsCleared ()V a
	onRemoveAdvancementRoot (Lnet/minecraft/advancements/Advancement;)V b
	onRemoveAdvancementTask (Lnet/minecraft/advancements/Advancement;)V d
net/minecraft/advancements/AdvancementProgress ag
	criteria a
	requirements b
	compareTo (Lnet/minecraft/advancements/AdvancementProgress;)I a
	countCompletedRequirements ()I h
	fromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/advancements/AdvancementProgress; b
	getCompletedCriteria ()Ljava/lang/Iterable; f
	getCriterion (Ljava/lang/String;)Lnet/minecraft/advancements/CriterionProgress; c
	getFirstProgressDate ()Ljava/util/Date; g
	getPercent ()F c
	getProgressText ()Ljava/lang/String; d
	getRemainingCriteria ()Ljava/lang/Iterable; e
	grantProgress (Ljava/lang/String;)Z a
	hasProgress ()Z b
	isDone ()Z a
	revokeProgress (Ljava/lang/String;)Z b
	serializeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	update (Ljava/util/Map;[[Ljava/lang/String;)V a
net/minecraft/advancements/AdvancementProgress$Serializer ag$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/advancements/AdvancementProgress; a
	serialize (Lnet/minecraft/advancements/AdvancementProgress;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/advancements/AdvancementRewards ah
	EMPTY a
	experience b
	function e
	loot c
	recipes d
	deserialize (Lcom/google/gson/JsonObject;)Lnet/minecraft/advancements/AdvancementRewards; a
	getRecipes ()[Lnet/minecraft/resources/ResourceLocation; a
	grant (Lnet/minecraft/server/level/ServerPlayer;)V a
	serializeToJson ()Lcom/google/gson/JsonElement; b
net/minecraft/advancements/AdvancementRewards$Builder ah$a
	experience a
	function d
	loot b
	recipes c
	addExperience (I)Lnet/minecraft/advancements/AdvancementRewards$Builder; b
	addLootTable (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/AdvancementRewards$Builder; b
	addRecipe (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/AdvancementRewards$Builder; d
	build ()Lnet/minecraft/advancements/AdvancementRewards; a
	experience (I)Lnet/minecraft/advancements/AdvancementRewards$Builder; a
	function (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/AdvancementRewards$Builder; e
	loot (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/AdvancementRewards$Builder; a
	recipe (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/AdvancementRewards$Builder; c
	runs (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/AdvancementRewards$Builder; f
net/minecraft/advancements/CriteriaTriggers ai
	BAD_OMEN I
	BEE_NEST_DESTROYED K
	BRED_ANIMALS o
	BREWED_POTION k
	CHANGED_DIMENSION v
	CHANNELED_LIGHTNING E
	CONSTRUCT_BEACON l
	CONSUME_ITEM z
	CRITERIA T
	CURED_ZOMBIE_VILLAGER r
	EFFECTS_CHANGED A
	ENCHANTED_ITEM i
	ENTER_BLOCK d
	ENTITY_HURT_PLAYER h
	ENTITY_KILLED_PLAYER c
	FILLED_BUCKET j
	FISHING_ROD_HOOKED D
	GENERATE_LOOT N
	HONEY_BLOCK_SLIDE J
	IMPOSSIBLE a
	INVENTORY_CHANGED e
	ITEM_DURABILITY_CHANGED t
	ITEM_PICKED_UP_BY_ENTITY O
	ITEM_USED_ON_BLOCK M
	KILLED_BY_CROSSBOW G
	LEVITATION u
	LIGHTNING_STRIKE R
	LOCATION p
	NETHER_TRAVEL C
	PLACED_BLOCK y
	PLAYER_HURT_ENTITY g
	PLAYER_INTERACTED_WITH_ENTITY P
	PLAYER_KILLED_ENTITY b
	RAID_WIN H
	RECIPE_UNLOCKED f
	SHOT_CROSSBOW F
	SLEPT_IN_BED q
	START_RIDING_TRIGGER Q
	SUMMONED_ENTITY n
	TAME_ANIMAL x
	TARGET_BLOCK_HIT L
	TICK w
	TRADE s
	USED_ENDER_EYE m
	USED_TOTEM B
	USING_ITEM S
	all ()Ljava/lang/Iterable; a
	getCriterion (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/CriterionTrigger; a
	register (Lnet/minecraft/advancements/CriterionTrigger;)Lnet/minecraft/advancements/CriterionTrigger; a
net/minecraft/advancements/Criterion aj
	trigger a
	criteriaFromJson (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/DeserializationContext;)Ljava/util/Map; b
	criteriaFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Ljava/util/Map; c
	criterionFromJson (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/Criterion; a
	criterionFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/advancements/Criterion; b
	getTrigger ()Lnet/minecraft/advancements/CriterionTriggerInstance; a
	serializeToJson ()Lcom/google/gson/JsonElement; b
	serializeToNetwork (Ljava/util/Map;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/advancements/CriterionProgress ak
	DATE_FORMAT a
	obtained b
	fromJson (Ljava/lang/String;)Lnet/minecraft/advancements/CriterionProgress; a
	fromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/advancements/CriterionProgress; b
	getObtained ()Ljava/util/Date; d
	grant ()V b
	isDone ()Z a
	revoke ()V c
	serializeToJson ()Lcom/google/gson/JsonElement; e
	serializeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/advancements/CriterionTrigger al
	addPlayerListener (Lnet/minecraft/server/PlayerAdvancements;Lnet/minecraft/advancements/CriterionTrigger$Listener;)V a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/CriterionTriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	removePlayerListener (Lnet/minecraft/server/PlayerAdvancements;Lnet/minecraft/advancements/CriterionTrigger$Listener;)V b
	removePlayerListeners (Lnet/minecraft/server/PlayerAdvancements;)V a
net/minecraft/advancements/CriterionTrigger$Listener al$a
	advancement b
	criterion c
	trigger a
	getTriggerInstance ()Lnet/minecraft/advancements/CriterionTriggerInstance; a
	run (Lnet/minecraft/server/PlayerAdvancements;)V a
net/minecraft/advancements/CriterionTriggerInstance am
	getCriterion ()Lnet/minecraft/resources/ResourceLocation; a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/DisplayInfo an
	announceChat g
	background d
	description b
	frame e
	hidden h
	icon c
	showToast f
	title a
	x i
	y j
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/advancements/DisplayInfo; a
	fromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/advancements/DisplayInfo; b
	getBackground ()Lnet/minecraft/resources/ResourceLocation; d
	getDescription ()Lnet/minecraft/network/chat/Component; b
	getFrame ()Lnet/minecraft/advancements/FrameType; e
	getIcon ()Lnet/minecraft/world/item/ItemStack; c
	getIcon (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/ItemStack; b
	getTitle ()Lnet/minecraft/network/chat/Component; a
	getX ()F f
	getY ()F g
	isHidden ()Z j
	serializeIcon ()Lcom/google/gson/JsonObject; l
	serializeToJson ()Lcom/google/gson/JsonElement; k
	serializeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	setLocation (FF)V a
	shouldAnnounceChat ()Z i
	shouldShowToast ()Z h
net/minecraft/advancements/FrameType ao
	$VALUES h
	CHALLENGE b
	GOAL c
	TASK a
	chatColor f
	displayName g
	name d
	texture e
	$values ()[Lnet/minecraft/advancements/FrameType; e
	byName (Ljava/lang/String;)Lnet/minecraft/advancements/FrameType; a
	getChatColor ()Lnet/minecraft/ChatFormatting; c
	getDisplayName ()Lnet/minecraft/network/chat/Component; d
	getName ()Ljava/lang/String; a
	getTexture ()I b
net/minecraft/advancements/RequirementsStrategy ap
	AND a
	OR b
net/minecraft/advancements/TreeNodePosition aq
	advancement a
	ancestor f
	change k
	childIndex d
	children e
	mod j
	parent b
	previousSibling c
	shift l
	thread g
	x h
	y i
	addChild (Lnet/minecraft/advancements/Advancement;Lnet/minecraft/advancements/TreeNodePosition;)Lnet/minecraft/advancements/TreeNodePosition; a
	apportion (Lnet/minecraft/advancements/TreeNodePosition;)Lnet/minecraft/advancements/TreeNodePosition; a
	executeShifts ()V b
	finalizePosition ()V e
	firstWalk ()V a
	getAncestor (Lnet/minecraft/advancements/TreeNodePosition;Lnet/minecraft/advancements/TreeNodePosition;)Lnet/minecraft/advancements/TreeNodePosition; a
	moveSubtree (Lnet/minecraft/advancements/TreeNodePosition;F)V a
	nextOrThread ()Lnet/minecraft/advancements/TreeNodePosition; d
	previousOrThread ()Lnet/minecraft/advancements/TreeNodePosition; c
	run (Lnet/minecraft/advancements/Advancement;)V a
	secondWalk (FIF)F a
	thirdWalk (F)V a
net/minecraft/advancements/critereon/AbstractCriterionTriggerInstance ar
	criterion a
	player b
	getCriterion ()Lnet/minecraft/resources/ResourceLocation; a
	getPlayerPredicate ()Lnet/minecraft/advancements/critereon/EntityPredicate$Composite; b
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/BeeNestDestroyedTrigger as
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/BeeNestDestroyedTrigger$TriggerInstance; a
	deserializeBlock (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/level/block/Block; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/ItemStack;I)V a
net/minecraft/advancements/critereon/BeeNestDestroyedTrigger$TriggerInstance as$a
	block a
	item b
	numBees c
	destroyedBeeNest (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/advancements/critereon/ItemPredicate$Builder;Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/BeeNestDestroyedTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/ItemStack;I)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/BlockPredicate at
	ANY a
	blocks c
	nbt e
	properties d
	tag b
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/BlockPredicate; a
	matches (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/BlockPredicate$Builder at$a
	blocks a
	nbt d
	properties c
	tag b
	block ()Lnet/minecraft/advancements/critereon/BlockPredicate$Builder; a
	build ()Lnet/minecraft/advancements/critereon/BlockPredicate; b
	hasNbt (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/advancements/critereon/BlockPredicate$Builder; a
	of (Ljava/lang/Iterable;)Lnet/minecraft/advancements/critereon/BlockPredicate$Builder; a
	of (Lnet/minecraft/tags/Tag;)Lnet/minecraft/advancements/critereon/BlockPredicate$Builder; a
	of ([Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/advancements/critereon/BlockPredicate$Builder; a
	setProperties (Lnet/minecraft/advancements/critereon/StatePropertiesPredicate;)Lnet/minecraft/advancements/critereon/BlockPredicate$Builder; a
net/minecraft/advancements/critereon/BredAnimalsTrigger au
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/BredAnimalsTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/animal/Animal;Lnet/minecraft/world/entity/animal/Animal;Lnet/minecraft/world/entity/AgeableMob;)V a
net/minecraft/advancements/critereon/BredAnimalsTrigger$TriggerInstance au$a
	child c
	parent a
	partner b
	bredAnimals ()Lnet/minecraft/advancements/critereon/BredAnimalsTrigger$TriggerInstance; c
	bredAnimals (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/critereon/BredAnimalsTrigger$TriggerInstance; a
	bredAnimals (Lnet/minecraft/advancements/critereon/EntityPredicate;Lnet/minecraft/advancements/critereon/EntityPredicate;Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/BredAnimalsTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/BrewedPotionTrigger av
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/BrewedPotionTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/alchemy/Potion;)V a
net/minecraft/advancements/critereon/BrewedPotionTrigger$TriggerInstance av$a
	potion a
	brewedPotion ()Lnet/minecraft/advancements/critereon/BrewedPotionTrigger$TriggerInstance; c
	matches (Lnet/minecraft/world/item/alchemy/Potion;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/ChangeDimensionTrigger aw
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/ChangeDimensionTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;)V a
net/minecraft/advancements/critereon/ChangeDimensionTrigger$TriggerInstance aw$a
	from a
	to b
	changedDimension ()Lnet/minecraft/advancements/critereon/ChangeDimensionTrigger$TriggerInstance; c
	changedDimension (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/advancements/critereon/ChangeDimensionTrigger$TriggerInstance; a
	changedDimensionFrom (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/advancements/critereon/ChangeDimensionTrigger$TriggerInstance; b
	changedDimensionTo (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/advancements/critereon/ChangeDimensionTrigger$TriggerInstance; a
	matches (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;)Z b
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/ChanneledLightningTrigger ax
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/ChanneledLightningTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Ljava/util/Collection;)V a
net/minecraft/advancements/critereon/ChanneledLightningTrigger$TriggerInstance ax$a
	victims a
	channeledLightning ([Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/ChanneledLightningTrigger$TriggerInstance; a
	matches (Ljava/util/Collection;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/ConstructBeaconTrigger ay
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/ConstructBeaconTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;I)V a
net/minecraft/advancements/critereon/ConstructBeaconTrigger$TriggerInstance ay$a
	level a
	constructedBeacon ()Lnet/minecraft/advancements/critereon/ConstructBeaconTrigger$TriggerInstance; c
	constructedBeacon (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/ConstructBeaconTrigger$TriggerInstance; a
	matches (I)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/ConsumeItemTrigger az
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/ConsumeItemTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/advancements/critereon/ConsumeItemTrigger$TriggerInstance az$a
	item a
	matches (Lnet/minecraft/world/item/ItemStack;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
	usedItem ()Lnet/minecraft/advancements/critereon/ConsumeItemTrigger$TriggerInstance; c
	usedItem (Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/ConsumeItemTrigger$TriggerInstance; a
	usedItem (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/advancements/critereon/ConsumeItemTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/CuredZombieVillagerTrigger ba
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/CuredZombieVillagerTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/monster/Zombie;Lnet/minecraft/world/entity/npc/Villager;)V a
net/minecraft/advancements/critereon/CuredZombieVillagerTrigger$TriggerInstance ba$a
	villager b
	zombie a
	curedZombieVillager ()Lnet/minecraft/advancements/critereon/CuredZombieVillagerTrigger$TriggerInstance; c
	matches (Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/DamagePredicate bb
	ANY a
	blocked e
	dealtDamage b
	sourceEntity d
	takenDamage c
	type f
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/DamagePredicate; a
	matches (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/damagesource/DamageSource;FFZ)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/DamagePredicate$Builder bb$a
	blocked d
	dealtDamage a
	sourceEntity c
	takenDamage b
	type e
	blocked (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/DamagePredicate$Builder; a
	build ()Lnet/minecraft/advancements/critereon/DamagePredicate; b
	damageInstance ()Lnet/minecraft/advancements/critereon/DamagePredicate$Builder; a
	dealtDamage (Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles;)Lnet/minecraft/advancements/critereon/DamagePredicate$Builder; a
	sourceEntity (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/DamagePredicate$Builder; a
	takenDamage (Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles;)Lnet/minecraft/advancements/critereon/DamagePredicate$Builder; b
	type (Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder;)Lnet/minecraft/advancements/critereon/DamagePredicate$Builder; a
	type (Lnet/minecraft/advancements/critereon/DamageSourcePredicate;)Lnet/minecraft/advancements/critereon/DamagePredicate$Builder; a
net/minecraft/advancements/critereon/DamageSourcePredicate bc
	ANY a
	bypassesArmor d
	bypassesInvulnerability e
	bypassesMagic f
	directEntity j
	isExplosion c
	isFire g
	isLightning i
	isMagic h
	isProjectile b
	sourceEntity k
	addOptionally (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/Boolean;)V a
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate; a
	getOptionalBoolean (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/Boolean; a
	matches (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/damagesource/DamageSource;)Z a
	matches (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/damagesource/DamageSource;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/DamageSourcePredicate$Builder bc$a
	bypassesArmor c
	bypassesInvulnerability d
	bypassesMagic e
	directEntity i
	isExplosion b
	isFire f
	isLightning h
	isMagic g
	isProjectile a
	sourceEntity j
	build ()Lnet/minecraft/advancements/critereon/DamageSourcePredicate; b
	bypassesArmor (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; c
	bypassesInvulnerability (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; d
	bypassesMagic (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; e
	damageType ()Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; a
	direct (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; a
	direct (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; a
	isExplosion (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; b
	isFire (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; f
	isLightning (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; h
	isMagic (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; g
	isProjectile (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; a
	source (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; b
	source (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; b
net/minecraft/advancements/critereon/DeserializationContext bd
	LOGGER a
	id b
	predicateGson d
	predicateManager c
	deserializeConditions (Lcom/google/gson/JsonArray;Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet;)[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition; a
	getAdvancementId ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/advancements/critereon/DistancePredicate be
	ANY a
	absolute f
	horizontal e
	x b
	y c
	z d
	absolute (Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles;)Lnet/minecraft/advancements/critereon/DistancePredicate; c
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/DistancePredicate; a
	horizontal (Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles;)Lnet/minecraft/advancements/critereon/DistancePredicate; a
	matches (DDDDDD)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
	vertical (Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles;)Lnet/minecraft/advancements/critereon/DistancePredicate; b
net/minecraft/advancements/critereon/EffectsChangedTrigger bf
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/EffectsChangedTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/advancements/critereon/EffectsChangedTrigger$TriggerInstance bf$a
	effects a
	source b
	gotEffectsFrom (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/EffectsChangedTrigger$TriggerInstance; a
	hasEffects (Lnet/minecraft/advancements/critereon/MobEffectsPredicate;)Lnet/minecraft/advancements/critereon/EffectsChangedTrigger$TriggerInstance; a
	matches (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/EnchantedItemTrigger bg
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/EnchantedItemTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;I)V a
net/minecraft/advancements/critereon/EnchantedItemTrigger$TriggerInstance bg$a
	item a
	levels b
	enchantedItem ()Lnet/minecraft/advancements/critereon/EnchantedItemTrigger$TriggerInstance; c
	matches (Lnet/minecraft/world/item/ItemStack;I)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/EnchantmentPredicate bh
	ANY a
	NONE b
	enchantment c
	level d
	containedIn (Ljava/util/Map;)Z a
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/EnchantmentPredicate; a
	fromJsonArray (Lcom/google/gson/JsonElement;)[Lnet/minecraft/advancements/critereon/EnchantmentPredicate; b
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/EnterBlockTrigger bi
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/EnterBlockTrigger$TriggerInstance; a
	deserializeBlock (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/level/block/Block; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/advancements/critereon/EnterBlockTrigger$TriggerInstance bi$a
	block a
	state b
	entersBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/advancements/critereon/EnterBlockTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/EntityEquipmentPredicate bj
	ANY a
	CAPTAIN b
	chest d
	feet f
	head c
	legs e
	mainhand g
	offhand h
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate; a
	matches (Lnet/minecraft/world/entity/Entity;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder bj$a
	chest b
	feet d
	head a
	legs c
	mainhand e
	offhand f
	build ()Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate; b
	chest (Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder; b
	equipment ()Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder; a
	feet (Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder; d
	head (Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder; a
	legs (Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder; c
	mainhand (Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder; e
	offhand (Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder; f
net/minecraft/advancements/critereon/EntityFlagsPredicate bk
	ANY a
	isBaby f
	isCrouching c
	isOnFire b
	isSprinting d
	isSwimming e
	addOptionalBoolean (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/Boolean;)V a
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/EntityFlagsPredicate; a
	getOptionalBoolean (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/Boolean; a
	matches (Lnet/minecraft/world/entity/Entity;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/EntityFlagsPredicate$Builder bk$a
	isBaby e
	isCrouching b
	isOnFire a
	isSprinting c
	isSwimming d
	build ()Lnet/minecraft/advancements/critereon/EntityFlagsPredicate; b
	flags ()Lnet/minecraft/advancements/critereon/EntityFlagsPredicate$Builder; a
	setCrouching (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/EntityFlagsPredicate$Builder; b
	setIsBaby (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/EntityFlagsPredicate$Builder; e
	setOnFire (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/EntityFlagsPredicate$Builder; a
	setSprinting (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/EntityFlagsPredicate$Builder; c
	setSwimming (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/EntityFlagsPredicate$Builder; d
net/minecraft/advancements/critereon/EntityHurtPlayerTrigger bl
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/EntityHurtPlayerTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/damagesource/DamageSource;FFZ)V a
net/minecraft/advancements/critereon/EntityHurtPlayerTrigger$TriggerInstance bl$a
	damage a
	entityHurtPlayer ()Lnet/minecraft/advancements/critereon/EntityHurtPlayerTrigger$TriggerInstance; c
	entityHurtPlayer (Lnet/minecraft/advancements/critereon/DamagePredicate$Builder;)Lnet/minecraft/advancements/critereon/EntityHurtPlayerTrigger$TriggerInstance; a
	entityHurtPlayer (Lnet/minecraft/advancements/critereon/DamagePredicate;)Lnet/minecraft/advancements/critereon/EntityHurtPlayerTrigger$TriggerInstance; a
	matches (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/damagesource/DamageSource;FFZ)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/EntityPredicate bm
	ANY a
	catType q
	distanceToPlayer c
	effects f
	entityType b
	equipment i
	fishingHook k
	flags h
	lighthingBolt l
	location d
	nbt g
	passenger n
	player j
	steppingOnLocation e
	targetedEntity o
	team p
	vehicle m
	createContext (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/level/storage/loot/LootContext; b
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/EntityPredicate; a
	matches (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/entity/Entity;)Z a
	matches (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/Entity;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/EntityPredicate$Builder bm$a
	catType p
	distanceToPlayer b
	effects e
	entityType a
	equipment h
	fishingHook j
	flags g
	lighthingBolt k
	location c
	nbt f
	passenger m
	player i
	steppingOnLocation d
	targetedEntity n
	team o
	vehicle l
	build ()Lnet/minecraft/advancements/critereon/EntityPredicate; b
	catType (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; b
	distance (Lnet/minecraft/advancements/critereon/DistancePredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	effects (Lnet/minecraft/advancements/critereon/MobEffectsPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	entity ()Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	entityType (Lnet/minecraft/advancements/critereon/EntityTypePredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	equipment (Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	fishingHook (Lnet/minecraft/advancements/critereon/FishingHookPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	flags (Lnet/minecraft/advancements/critereon/EntityFlagsPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	lighthingBolt (Lnet/minecraft/advancements/critereon/LighthingBoltPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	located (Lnet/minecraft/advancements/critereon/LocationPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	nbt (Lnet/minecraft/advancements/critereon/NbtPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	of (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	of (Lnet/minecraft/tags/Tag;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	of (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	passenger (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; b
	player (Lnet/minecraft/advancements/critereon/PlayerPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	steppingOn (Lnet/minecraft/advancements/critereon/LocationPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; b
	targetedEntity (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; c
	team (Ljava/lang/String;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	vehicle (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
net/minecraft/advancements/critereon/EntityPredicate$Composite bm$b
	ANY a
	compositePredicates c
	conditions b
	create ([Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/advancements/critereon/EntityPredicate$Composite; a
	fromElement (Ljava/lang/String;Lnet/minecraft/advancements/critereon/DeserializationContext;Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/EntityPredicate$Composite; a
	fromJson (Lcom/google/gson/JsonObject;Ljava/lang/String;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/EntityPredicate$Composite; a
	fromJsonArray (Lcom/google/gson/JsonObject;Ljava/lang/String;Lnet/minecraft/advancements/critereon/DeserializationContext;)[Lnet/minecraft/advancements/critereon/EntityPredicate$Composite; b
	matches (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	toJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonElement; a
	toJson ([Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonElement; a
	wrap (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Composite; a
net/minecraft/advancements/critereon/EntityTypePredicate bn
	ANY a
	COMMA_JOINER b
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/EntityTypePredicate; a
	matches (Lnet/minecraft/world/entity/EntityType;)Z a
	of (Lnet/minecraft/tags/Tag;)Lnet/minecraft/advancements/critereon/EntityTypePredicate; a
	of (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/advancements/critereon/EntityTypePredicate; b
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/EntityTypePredicate$TagPredicate bn$a
	tag b
	matches (Lnet/minecraft/world/entity/EntityType;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/EntityTypePredicate$TypePredicate bn$b
	type b
	matches (Lnet/minecraft/world/entity/EntityType;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/FilledBucketTrigger bo
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/FilledBucketTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/advancements/critereon/FilledBucketTrigger$TriggerInstance bo$a
	item a
	filledBucket (Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/FilledBucketTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/item/ItemStack;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/FishingHookPredicate bp
	ANY a
	IN_OPEN_WATER_KEY b
	inOpenWater c
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/FishingHookPredicate; a
	inOpenWater (Z)Lnet/minecraft/advancements/critereon/FishingHookPredicate; a
	matches (Lnet/minecraft/world/entity/Entity;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/FishingRodHookedTrigger bq
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/FishingRodHookedTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/projectile/FishingHook;Ljava/util/Collection;)V a
net/minecraft/advancements/critereon/FishingRodHookedTrigger$TriggerInstance bq$a
	entity b
	item c
	rod a
	fishedItem (Lnet/minecraft/advancements/critereon/ItemPredicate;Lnet/minecraft/advancements/critereon/EntityPredicate;Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/FishingRodHookedTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;Ljava/util/Collection;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/FluidPredicate br
	ANY a
	fluid c
	properties d
	tag b
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/FluidPredicate; a
	matches (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/FluidPredicate$Builder br$a
	fluid a
	fluids b
	properties c
	build ()Lnet/minecraft/advancements/critereon/FluidPredicate; b
	fluid ()Lnet/minecraft/advancements/critereon/FluidPredicate$Builder; a
	of (Lnet/minecraft/tags/Tag;)Lnet/minecraft/advancements/critereon/FluidPredicate$Builder; a
	of (Lnet/minecraft/world/level/material/Fluid;)Lnet/minecraft/advancements/critereon/FluidPredicate$Builder; a
	setProperties (Lnet/minecraft/advancements/critereon/StatePropertiesPredicate;)Lnet/minecraft/advancements/critereon/FluidPredicate$Builder; a
net/minecraft/advancements/critereon/ImpossibleTrigger bs
	ID a
	addPlayerListener (Lnet/minecraft/server/PlayerAdvancements;Lnet/minecraft/advancements/CriterionTrigger$Listener;)V a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/CriterionTriggerInstance; a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/ImpossibleTrigger$TriggerInstance; b
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	removePlayerListener (Lnet/minecraft/server/PlayerAdvancements;Lnet/minecraft/advancements/CriterionTrigger$Listener;)V b
	removePlayerListeners (Lnet/minecraft/server/PlayerAdvancements;)V a
net/minecraft/advancements/critereon/ImpossibleTrigger$TriggerInstance bs$a
	getCriterion ()Lnet/minecraft/resources/ResourceLocation; a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/InventoryChangeTrigger bt
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/player/Inventory;Lnet/minecraft/world/item/ItemStack;)V a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/player/Inventory;Lnet/minecraft/world/item/ItemStack;III)V a
net/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance bt$a
	predicates d
	slotsEmpty c
	slotsFull b
	slotsOccupied a
	hasItems ([Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance; a
	hasItems ([Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/entity/player/Inventory;Lnet/minecraft/world/item/ItemStack;III)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/ItemDurabilityTrigger bu
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/ItemDurabilityTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;I)V a
net/minecraft/advancements/critereon/ItemDurabilityTrigger$TriggerInstance bu$a
	delta c
	durability b
	item a
	changedDurability (Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/ItemPredicate;Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/ItemDurabilityTrigger$TriggerInstance; a
	changedDurability (Lnet/minecraft/advancements/critereon/ItemPredicate;Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/ItemDurabilityTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/item/ItemStack;I)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/ItemPickedUpByEntityTrigger bv
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/ItemPickedUpByEntityTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/advancements/critereon/ItemPickedUpByEntityTrigger$TriggerInstance bv$a
	entity b
	item a
	itemPickedUpByEntity (Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/ItemPredicate$Builder;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;)Lnet/minecraft/advancements/critereon/ItemPickedUpByEntityTrigger$TriggerInstance; a
	matches (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/ItemPredicate bw
	ANY a
	count d
	durability e
	enchantments f
	items c
	nbt i
	potion h
	storedEnchantments g
	tag b
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/ItemPredicate; a
	fromJsonArray (Lcom/google/gson/JsonElement;)[Lnet/minecraft/advancements/critereon/ItemPredicate; b
	matches (Lnet/minecraft/world/item/ItemStack;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/ItemPredicate$Builder bw$a
	count e
	durability f
	enchantments a
	items c
	nbt h
	potion g
	storedEnchantments b
	tag d
	build ()Lnet/minecraft/advancements/critereon/ItemPredicate; b
	hasDurability (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/ItemPredicate$Builder; b
	hasEnchantment (Lnet/minecraft/advancements/critereon/EnchantmentPredicate;)Lnet/minecraft/advancements/critereon/ItemPredicate$Builder; a
	hasNbt (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/advancements/critereon/ItemPredicate$Builder; a
	hasStoredEnchantment (Lnet/minecraft/advancements/critereon/EnchantmentPredicate;)Lnet/minecraft/advancements/critereon/ItemPredicate$Builder; b
	isPotion (Lnet/minecraft/world/item/alchemy/Potion;)Lnet/minecraft/advancements/critereon/ItemPredicate$Builder; a
	item ()Lnet/minecraft/advancements/critereon/ItemPredicate$Builder; a
	of (Lnet/minecraft/tags/Tag;)Lnet/minecraft/advancements/critereon/ItemPredicate$Builder; a
	of ([Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/advancements/critereon/ItemPredicate$Builder; a
	withCount (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/ItemPredicate$Builder; a
net/minecraft/advancements/critereon/ItemUsedOnBlockTrigger bx
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/ItemUsedOnBlockTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/advancements/critereon/ItemUsedOnBlockTrigger$TriggerInstance bx$a
	item b
	location a
	itemUsedOnBlock (Lnet/minecraft/advancements/critereon/LocationPredicate$Builder;Lnet/minecraft/advancements/critereon/ItemPredicate$Builder;)Lnet/minecraft/advancements/critereon/ItemUsedOnBlockTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/KilledByCrossbowTrigger by
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/KilledByCrossbowTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Ljava/util/Collection;)V a
net/minecraft/advancements/critereon/KilledByCrossbowTrigger$TriggerInstance by$a
	uniqueEntityTypes b
	victims a
	crossbowKilled (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/KilledByCrossbowTrigger$TriggerInstance; a
	crossbowKilled ([Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/critereon/KilledByCrossbowTrigger$TriggerInstance; a
	matches (Ljava/util/Collection;I)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/KilledTrigger bz
	id a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/damagesource/DamageSource;)V a
net/minecraft/advancements/critereon/KilledTrigger$TriggerInstance bz$a
	entityPredicate a
	killingBlow b
	entityKilledPlayer ()Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; d
	entityKilledPlayer (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; b
	entityKilledPlayer (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; b
	entityKilledPlayer (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;Lnet/minecraft/advancements/critereon/DamageSourcePredicate;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; b
	entityKilledPlayer (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; b
	entityKilledPlayer (Lnet/minecraft/advancements/critereon/EntityPredicate;Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; b
	entityKilledPlayer (Lnet/minecraft/advancements/critereon/EntityPredicate;Lnet/minecraft/advancements/critereon/DamageSourcePredicate;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; b
	matches (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/world/damagesource/DamageSource;)Z a
	playerKilledEntity ()Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; c
	playerKilledEntity (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; a
	playerKilledEntity (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; a
	playerKilledEntity (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;Lnet/minecraft/advancements/critereon/DamageSourcePredicate;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; a
	playerKilledEntity (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; a
	playerKilledEntity (Lnet/minecraft/advancements/critereon/EntityPredicate;Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; a
	playerKilledEntity (Lnet/minecraft/advancements/critereon/EntityPredicate;Lnet/minecraft/advancements/critereon/DamageSourcePredicate;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/LevitationTrigger ca
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/LevitationTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/phys/Vec3;I)V a
net/minecraft/advancements/critereon/LevitationTrigger$TriggerInstance ca$a
	distance a
	duration b
	levitated (Lnet/minecraft/advancements/critereon/DistancePredicate;)Lnet/minecraft/advancements/critereon/LevitationTrigger$TriggerInstance; a
	matches (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/phys/Vec3;I)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/LightPredicate cb
	ANY a
	composite b
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/LightPredicate; a
	matches (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/LightPredicate$Builder cb$a
	composite a
	build ()Lnet/minecraft/advancements/critereon/LightPredicate; b
	light ()Lnet/minecraft/advancements/critereon/LightPredicate$Builder; a
	setComposite (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/LightPredicate$Builder; a
net/minecraft/advancements/critereon/LighthingBoltPredicate cc
	ANY a
	BLOCKS_SET_ON_FIRE_KEY b
	ENTITY_STRUCK_KEY c
	blocksSetOnFire d
	entityStruck e
	blockSetOnFire (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/LighthingBoltPredicate; a
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/LighthingBoltPredicate; a
	matches (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/LightningStrikeTrigger cd
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/LightningStrikeTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/LightningBolt;Ljava/util/List;)V a
net/minecraft/advancements/critereon/LightningStrikeTrigger$TriggerInstance cd$a
	bystander b
	lightning a
	lighthingStrike (Lnet/minecraft/advancements/critereon/EntityPredicate;Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/LightningStrikeTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/level/storage/loot/LootContext;Ljava/util/List;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/LocationPredicate ce
	ANY a
	LOGGER b
	biome f
	block k
	dimension h
	feature g
	fluid l
	light j
	smokey i
	x c
	y d
	z e
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/LocationPredicate; a
	inBiome (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/advancements/critereon/LocationPredicate; a
	inDimension (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/advancements/critereon/LocationPredicate; b
	inFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Lnet/minecraft/advancements/critereon/LocationPredicate; a
	matches (Lnet/minecraft/server/level/ServerLevel;DDD)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/LocationPredicate$Builder ce$a
	biome d
	block i
	dimension f
	feature e
	fluid j
	light h
	smokey g
	x a
	y b
	z c
	build ()Lnet/minecraft/advancements/critereon/LocationPredicate; b
	location ()Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; a
	setBiome (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; a
	setBlock (Lnet/minecraft/advancements/critereon/BlockPredicate;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; a
	setDimension (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; b
	setFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; a
	setFluid (Lnet/minecraft/advancements/critereon/FluidPredicate;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; a
	setLight (Lnet/minecraft/advancements/critereon/LightPredicate;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; a
	setSmokey (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; a
	setX (Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; a
	setY (Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; b
	setZ (Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; c
net/minecraft/advancements/critereon/LocationTrigger cf
	id a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/LocationTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;)V a
net/minecraft/advancements/critereon/LocationTrigger$TriggerInstance cf$a
	location a
	located (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/LocationTrigger$TriggerInstance; a
	located (Lnet/minecraft/advancements/critereon/LocationPredicate;)Lnet/minecraft/advancements/critereon/LocationTrigger$TriggerInstance; a
	matches (Lnet/minecraft/server/level/ServerLevel;DDD)Z a
	raidWon ()Lnet/minecraft/advancements/critereon/LocationTrigger$TriggerInstance; d
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
	sleptInBed ()Lnet/minecraft/advancements/critereon/LocationTrigger$TriggerInstance; c
	walkOnBlockWithEquipment (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/Item;)Lnet/minecraft/advancements/critereon/LocationTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/LootTableTrigger cg
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/LootTableTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/resources/ResourceLocation;)V a
net/minecraft/advancements/critereon/LootTableTrigger$TriggerInstance cg$a
	lootTable a
	lootTableUsed (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/critereon/LootTableTrigger$TriggerInstance; a
	matches (Lnet/minecraft/resources/ResourceLocation;)Z b
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/MinMaxBounds ch
	ERROR_EMPTY a
	ERROR_SWAPPED b
	max d
	min c
	fromJson (Lcom/google/gson/JsonElement;Lnet/minecraft/advancements/critereon/MinMaxBounds;Ljava/util/function/BiFunction;Lnet/minecraft/advancements/critereon/MinMaxBounds$BoundsFactory;)Lnet/minecraft/advancements/critereon/MinMaxBounds; a
	fromReader (Lcom/mojang/brigadier/StringReader;Lnet/minecraft/advancements/critereon/MinMaxBounds$BoundsFromReaderFactory;Ljava/util/function/Function;Ljava/util/function/Supplier;Ljava/util/function/Function;)Lnet/minecraft/advancements/critereon/MinMaxBounds; a
	getMax ()Ljava/lang/Number; b
	getMin ()Ljava/lang/Number; a
	isAllowedInputChat (Lcom/mojang/brigadier/StringReader;)Z a
	isAny ()Z c
	optionallyFormat (Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object; a
	readNumber (Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;Ljava/util/function/Supplier;)Ljava/lang/Number; a
	serializeToJson ()Lcom/google/gson/JsonElement; d
net/minecraft/advancements/critereon/MinMaxBounds$BoundsFactory ch$a
net/minecraft/advancements/critereon/MinMaxBounds$BoundsFromReaderFactory ch$b
net/minecraft/advancements/critereon/MinMaxBounds$Doubles ch$c
	ANY e
	maxSq g
	minSq f
	atLeast (D)Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; b
	atMost (D)Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; c
	between (DD)Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; a
	create (Lcom/mojang/brigadier/StringReader;Ljava/lang/Double;Ljava/lang/Double;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; a
	exactly (D)Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; a
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; a
	fromReader (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; a
	fromReader (Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; a
	matches (D)Z d
	matchesSqr (D)Z e
	squareOpt (Ljava/lang/Double;)Ljava/lang/Double; a
net/minecraft/advancements/critereon/MinMaxBounds$Ints ch$d
	ANY e
	maxSq g
	minSq f
	atLeast (I)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; b
	atMost (I)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; c
	between (II)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; a
	create (Lcom/mojang/brigadier/StringReader;Ljava/lang/Integer;Ljava/lang/Integer;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; a
	exactly (I)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; a
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; a
	fromReader (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; a
	fromReader (Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; a
	matches (I)Z d
	matchesSqr (J)Z a
	squareOpt (Ljava/lang/Integer;)Ljava/lang/Long; a
net/minecraft/advancements/critereon/MobEffectsPredicate ci
	ANY a
	effects b
	and (Lnet/minecraft/world/effect/MobEffect;)Lnet/minecraft/advancements/critereon/MobEffectsPredicate; a
	and (Lnet/minecraft/world/effect/MobEffect;Lnet/minecraft/advancements/critereon/MobEffectsPredicate$MobEffectInstancePredicate;)Lnet/minecraft/advancements/critereon/MobEffectsPredicate; a
	effects ()Lnet/minecraft/advancements/critereon/MobEffectsPredicate; a
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/MobEffectsPredicate; a
	matches (Ljava/util/Map;)Z a
	matches (Lnet/minecraft/world/entity/Entity;)Z a
	matches (Lnet/minecraft/world/entity/LivingEntity;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; b
net/minecraft/advancements/critereon/MobEffectsPredicate$MobEffectInstancePredicate ci$a
	ambient c
	amplifier a
	duration b
	visible d
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/advancements/critereon/MobEffectsPredicate$MobEffectInstancePredicate; a
	matches (Lnet/minecraft/world/effect/MobEffectInstance;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/NbtPredicate cj
	ANY a
	tag b
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/NbtPredicate; a
	getEntityTagToCompare (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/nbt/CompoundTag; b
	matches (Lnet/minecraft/nbt/Tag;)Z a
	matches (Lnet/minecraft/world/entity/Entity;)Z a
	matches (Lnet/minecraft/world/item/ItemStack;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/NetherTravelTrigger ck
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/NetherTravelTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/phys/Vec3;)V a
net/minecraft/advancements/critereon/NetherTravelTrigger$TriggerInstance ck$a
	distance c
	entered a
	exited b
	matches (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;DDD)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
	travelledThroughNether (Lnet/minecraft/advancements/critereon/DistancePredicate;)Lnet/minecraft/advancements/critereon/NetherTravelTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/PlacedBlockTrigger cl
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/PlacedBlockTrigger$TriggerInstance; a
	deserializeBlock (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/level/block/Block; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/advancements/critereon/PlacedBlockTrigger$TriggerInstance cl$a
	block a
	item d
	location c
	state b
	matches (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/item/ItemStack;)Z a
	placedBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/advancements/critereon/PlacedBlockTrigger$TriggerInstance; a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/PlayerHurtEntityTrigger cm
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/PlayerHurtEntityTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/damagesource/DamageSource;FFZ)V a
net/minecraft/advancements/critereon/PlayerHurtEntityTrigger$TriggerInstance cm$a
	damage a
	entity b
	matches (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/world/damagesource/DamageSource;FFZ)Z a
	playerHurtEntity ()Lnet/minecraft/advancements/critereon/PlayerHurtEntityTrigger$TriggerInstance; c
	playerHurtEntity (Lnet/minecraft/advancements/critereon/DamagePredicate$Builder;)Lnet/minecraft/advancements/critereon/PlayerHurtEntityTrigger$TriggerInstance; a
	playerHurtEntity (Lnet/minecraft/advancements/critereon/DamagePredicate$Builder;Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/PlayerHurtEntityTrigger$TriggerInstance; a
	playerHurtEntity (Lnet/minecraft/advancements/critereon/DamagePredicate;)Lnet/minecraft/advancements/critereon/PlayerHurtEntityTrigger$TriggerInstance; a
	playerHurtEntity (Lnet/minecraft/advancements/critereon/DamagePredicate;Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/PlayerHurtEntityTrigger$TriggerInstance; a
	playerHurtEntity (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/PlayerHurtEntityTrigger$TriggerInstance; a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/PlayerInteractTrigger cn
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/PlayerInteractTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/advancements/critereon/PlayerInteractTrigger$TriggerInstance cn$a
	entity b
	item a
	itemUsedOnEntity (Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/ItemPredicate$Builder;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;)Lnet/minecraft/advancements/critereon/PlayerInteractTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/PlayerPredicate co
	ANY a
	LOOKING_AT_RANGE b
	advancements g
	gameType d
	level c
	lookingAt h
	recipes f
	stats e
	advancementPredicateFromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/PlayerPredicate$AdvancementPredicate; b
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/PlayerPredicate; a
	getStat (Lnet/minecraft/stats/StatType;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/stats/Stat; a
	getStatValueId (Lnet/minecraft/stats/Stat;)Lnet/minecraft/resources/ResourceLocation; a
	matches (Lnet/minecraft/world/entity/Entity;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/PlayerPredicate$AdvancementCriterionsPredicate co$a
	criterions a
	test (Lnet/minecraft/advancements/AdvancementProgress;)Z a
	toJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/PlayerPredicate$AdvancementDonePredicate co$b
	state a
	test (Lnet/minecraft/advancements/AdvancementProgress;)Z a
	toJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/PlayerPredicate$AdvancementPredicate co$c
	toJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/PlayerPredicate$Builder co$d
	advancements e
	gameType b
	level a
	lookingAt f
	recipes d
	stats c
	addRecipe (Lnet/minecraft/resources/ResourceLocation;Z)Lnet/minecraft/advancements/critereon/PlayerPredicate$Builder; a
	addStat (Lnet/minecraft/stats/Stat;Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/PlayerPredicate$Builder; a
	build ()Lnet/minecraft/advancements/critereon/PlayerPredicate; b
	checkAdvancementCriterions (Lnet/minecraft/resources/ResourceLocation;Ljava/util/Map;)Lnet/minecraft/advancements/critereon/PlayerPredicate$Builder; a
	checkAdvancementDone (Lnet/minecraft/resources/ResourceLocation;Z)Lnet/minecraft/advancements/critereon/PlayerPredicate$Builder; b
	player ()Lnet/minecraft/advancements/critereon/PlayerPredicate$Builder; a
	setGameType (Lnet/minecraft/world/level/GameType;)Lnet/minecraft/advancements/critereon/PlayerPredicate$Builder; a
	setLevel (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/PlayerPredicate$Builder; a
	setLookingAt (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/PlayerPredicate$Builder; a
net/minecraft/advancements/critereon/RecipeUnlockedTrigger cp
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/RecipeUnlockedTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/crafting/Recipe;)V a
	unlocked (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/critereon/RecipeUnlockedTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/RecipeUnlockedTrigger$TriggerInstance cp$a
	recipe a
	matches (Lnet/minecraft/world/item/crafting/Recipe;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/SerializationContext cq
	INSTANCE a
	predicateGson b
	serializeConditions ([Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/ShotCrossbowTrigger cr
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/ShotCrossbowTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/advancements/critereon/ShotCrossbowTrigger$TriggerInstance cr$a
	item a
	matches (Lnet/minecraft/world/item/ItemStack;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
	shotCrossbow (Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/ShotCrossbowTrigger$TriggerInstance; a
	shotCrossbow (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/advancements/critereon/ShotCrossbowTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/SimpleCriterionTrigger cs
	players a
	addPlayerListener (Lnet/minecraft/server/PlayerAdvancements;Lnet/minecraft/advancements/CriterionTrigger$Listener;)V a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/CriterionTriggerInstance; a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	removePlayerListener (Lnet/minecraft/server/PlayerAdvancements;Lnet/minecraft/advancements/CriterionTrigger$Listener;)V b
	removePlayerListeners (Lnet/minecraft/server/PlayerAdvancements;)V a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Ljava/util/function/Predicate;)V a
net/minecraft/advancements/critereon/SlideDownBlockTrigger ct
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/SlideDownBlockTrigger$TriggerInstance; a
	deserializeBlock (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/level/block/Block; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/advancements/critereon/SlideDownBlockTrigger$TriggerInstance ct$a
	block a
	state b
	matches (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
	slidesDownBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/advancements/critereon/SlideDownBlockTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/StartRidingTrigger cu
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/StartRidingTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;)V a
net/minecraft/advancements/critereon/StartRidingTrigger$TriggerInstance cu$a
	playerStartsRiding (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/critereon/StartRidingTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/StatePropertiesPredicate cv
	ANY a
	properties b
	checkState (Lnet/minecraft/world/level/block/state/StateDefinition;Ljava/util/function/Consumer;)V a
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/StatePropertiesPredicate; a
	fromJson (Ljava/lang/String;Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/StatePropertiesPredicate$PropertyMatcher; a
	getStringOrNull (Lcom/google/gson/JsonElement;)Ljava/lang/String; b
	matches (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	matches (Lnet/minecraft/world/level/block/state/StateDefinition;Lnet/minecraft/world/level/block/state/StateHolder;)Z a
	matches (Lnet/minecraft/world/level/material/FluidState;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/StatePropertiesPredicate$Builder cv$a
	matchers a
	build ()Lnet/minecraft/advancements/critereon/StatePropertiesPredicate; b
	hasProperty (Lnet/minecraft/world/level/block/state/properties/Property;I)Lnet/minecraft/advancements/critereon/StatePropertiesPredicate$Builder; a
	hasProperty (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)Lnet/minecraft/advancements/critereon/StatePropertiesPredicate$Builder; a
	hasProperty (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/String;)Lnet/minecraft/advancements/critereon/StatePropertiesPredicate$Builder; a
	hasProperty (Lnet/minecraft/world/level/block/state/properties/Property;Z)Lnet/minecraft/advancements/critereon/StatePropertiesPredicate$Builder; a
	properties ()Lnet/minecraft/advancements/critereon/StatePropertiesPredicate$Builder; a
net/minecraft/advancements/critereon/StatePropertiesPredicate$ExactPropertyMatcher cv$b
	value a
	match (Lnet/minecraft/world/level/block/state/StateHolder;Lnet/minecraft/world/level/block/state/properties/Property;)Z a
	toJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/StatePropertiesPredicate$PropertyMatcher cv$c
	name a
	checkState (Lnet/minecraft/world/level/block/state/StateDefinition;Ljava/util/function/Consumer;)V a
	getName ()Ljava/lang/String; b
	match (Lnet/minecraft/world/level/block/state/StateDefinition;Lnet/minecraft/world/level/block/state/StateHolder;)Z a
	match (Lnet/minecraft/world/level/block/state/StateHolder;Lnet/minecraft/world/level/block/state/properties/Property;)Z a
	toJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/StatePropertiesPredicate$RangedPropertyMatcher cv$d
	maxValue b
	minValue a
	match (Lnet/minecraft/world/level/block/state/StateHolder;Lnet/minecraft/world/level/block/state/properties/Property;)Z a
	toJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/SummonedEntityTrigger cw
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/SummonedEntityTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/advancements/critereon/SummonedEntityTrigger$TriggerInstance cw$a
	entity a
	matches (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
	summonedEntity (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/critereon/SummonedEntityTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/TameAnimalTrigger cx
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/TameAnimalTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/animal/Animal;)V a
net/minecraft/advancements/critereon/TameAnimalTrigger$TriggerInstance cx$a
	entity a
	matches (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
	tamedAnimal ()Lnet/minecraft/advancements/critereon/TameAnimalTrigger$TriggerInstance; c
	tamedAnimal (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/TameAnimalTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/TargetBlockTrigger cy
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/TargetBlockTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/Vec3;I)V a
net/minecraft/advancements/critereon/TargetBlockTrigger$TriggerInstance cy$a
	projectile b
	signalStrength a
	matches (Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/world/phys/Vec3;I)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
	targetHit (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;)Lnet/minecraft/advancements/critereon/TargetBlockTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/TickTrigger cz
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/TickTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;)V a
net/minecraft/advancements/critereon/TickTrigger$TriggerInstance cz$a
net/minecraft/advancements/critereon/TradeTrigger da
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/TradeTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/npc/AbstractVillager;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/advancements/critereon/TradeTrigger$TriggerInstance da$a
	item b
	villager a
	matches (Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/world/item/ItemStack;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
	tradedWithVillager ()Lnet/minecraft/advancements/critereon/TradeTrigger$TriggerInstance; c
net/minecraft/advancements/critereon/UsedEnderEyeTrigger db
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/UsedEnderEyeTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/advancements/critereon/UsedEnderEyeTrigger$TriggerInstance db$a
	level a
	matches (D)Z a
net/minecraft/advancements/critereon/UsedTotemTrigger dc
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/UsedTotemTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/advancements/critereon/UsedTotemTrigger$TriggerInstance dc$a
	item a
	matches (Lnet/minecraft/world/item/ItemStack;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
	usedTotem (Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/UsedTotemTrigger$TriggerInstance; a
	usedTotem (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/advancements/critereon/UsedTotemTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/UsingItemTrigger dd
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/UsingItemTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/advancements/critereon/UsingItemTrigger$TriggerInstance dd$a
	item a
	lookingAt (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;Lnet/minecraft/advancements/critereon/ItemPredicate$Builder;)Lnet/minecraft/advancements/critereon/UsingItemTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/item/ItemStack;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/WrappedMinMaxBounds de
	ANY a
	ERROR_INTS_ONLY b
	max d
	min c
	atLeast (F)Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds; b
	atMost (F)Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds; c
	between (FF)Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds; a
	exactly (F)Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds; a
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds; a
	fromReader (Lcom/mojang/brigadier/StringReader;Z)Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds; a
	fromReader (Lcom/mojang/brigadier/StringReader;ZLjava/util/function/Function;)Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds; a
	getMax ()Ljava/lang/Float; b
	getMin ()Ljava/lang/Float; a
	isAllowedNumber (Lcom/mojang/brigadier/StringReader;Z)Z c
	matches (F)Z d
	matchesSqr (D)Z a
	optionallyFormat (Ljava/lang/Float;Ljava/util/function/Function;)Ljava/lang/Float; a
	readNumber (Lcom/mojang/brigadier/StringReader;Z)Ljava/lang/Float; b
	serializeToJson ()Lcom/google/gson/JsonElement; c
net/minecraft/client/AmbientOcclusionStatus dux
	$VALUES g
	BY_ID d
	MAX c
	MIN b
	OFF a
	id e
	key f
	$values ()[Lnet/minecraft/client/AmbientOcclusionStatus; c
	byId (I)Lnet/minecraft/client/AmbientOcclusionStatus; a
	getId ()I a
	getKey ()Ljava/lang/String; b
net/minecraft/client/AttackIndicatorStatus duy
	$VALUES g
	BY_ID d
	CROSSHAIR b
	HOTBAR c
	OFF a
	id e
	key f
	$values ()[Lnet/minecraft/client/AttackIndicatorStatus; c
	byId (I)Lnet/minecraft/client/AttackIndicatorStatus; a
	getId ()I a
	getKey ()Ljava/lang/String; b
net/minecraft/client/Camera duz
	FOG_DISTANCE_SCALE a
	blockPosition f
	detached m
	entity d
	eyeHeight n
	eyeHeightOld o
	forwards g
	initialized b
	left i
	level c
	position e
	rotation l
	up h
	xRot j
	yRot k
	getBlockPosition ()Lnet/minecraft/core/BlockPos; c
	getEntity ()Lnet/minecraft/world/entity/Entity; g
	getFluidInCamera ()Lnet/minecraft/world/level/material/FogType; k
	getLeftVector ()Lcom/mojang/math/Vector3f; n
	getLookVector ()Lcom/mojang/math/Vector3f; l
	getMaxZoom (D)D a
	getNearPlane ()Lnet/minecraft/client/Camera$NearPlane; j
	getPosition ()Lnet/minecraft/world/phys/Vec3; b
	getUpVector ()Lcom/mojang/math/Vector3f; m
	getXRot ()F d
	getYRot ()F e
	isDetached ()Z i
	isInitialized ()Z h
	move (DDD)V a
	reset ()V o
	rotation ()Lcom/mojang/math/Quaternion; f
	setPosition (DDD)V b
	setPosition (Lnet/minecraft/world/phys/Vec3;)V a
	setRotation (FF)V a
	setup (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/entity/Entity;ZZF)V a
	tick ()V a
net/minecraft/client/Camera$NearPlane duz$a
	forward a
	left b
	up c
	getBottomLeft ()Lnet/minecraft/world/phys/Vec3; c
	getBottomRight ()Lnet/minecraft/world/phys/Vec3; d
	getPointOnPlane (FF)Lnet/minecraft/world/phys/Vec3; a
	getTopLeft ()Lnet/minecraft/world/phys/Vec3; a
	getTopRight ()Lnet/minecraft/world/phys/Vec3; b
net/minecraft/client/CameraType dva
	$VALUES g
	FIRST_PERSON a
	THIRD_PERSON_BACK b
	THIRD_PERSON_FRONT c
	VALUES d
	firstPerson e
	mirrored f
	$values ()[Lnet/minecraft/client/CameraType; d
	cycle ()Lnet/minecraft/client/CameraType; c
	isFirstPerson ()Z a
	isMirrored ()Z b
net/minecraft/client/ClientRecipeBook dvb
	LOGGER c
	allCollections e
	collectionsByTab d
	categorizeAndGroupRecipes (Ljava/lang/Iterable;)Ljava/util/Map; b
	getCategory (Lnet/minecraft/world/item/crafting/Recipe;)Lnet/minecraft/client/RecipeBookCategories; g
	getCollection (Lnet/minecraft/client/RecipeBookCategories;)Ljava/util/List; a
	getCollections ()Ljava/util/List; b
	setupCollections (Ljava/lang/Iterable;)V a
net/minecraft/client/CloudStatus dvc
	$VALUES e
	FANCY c
	FAST b
	OFF a
	key d
	$values ()[Lnet/minecraft/client/CloudStatus; b
	getKey ()Ljava/lang/String; a
net/minecraft/client/ComponentCollector dvd
	parts a
	append (Lnet/minecraft/network/chat/FormattedText;)V a
	getResult ()Lnet/minecraft/network/chat/FormattedText; a
	getResultOrEmpty ()Lnet/minecraft/network/chat/FormattedText; b
	reset ()V c
net/minecraft/client/CycleOption dve
	buttonSetup ac
	getter ab
	setter aa
	tooltip ad
	create (Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/function/BooleanSupplier;Ljava/util/function/Function;Ljava/util/function/Function;Lnet/minecraft/client/CycleOption$OptionSetter;)Lnet/minecraft/client/CycleOption; a
	create (Ljava/lang/String;Ljava/util/List;Ljava/util/function/Function;Ljava/util/function/Function;Lnet/minecraft/client/CycleOption$OptionSetter;)Lnet/minecraft/client/CycleOption; a
	create (Ljava/lang/String;Ljava/util/function/Supplier;Ljava/util/function/Function;Ljava/util/function/Function;Lnet/minecraft/client/CycleOption$OptionSetter;)Lnet/minecraft/client/CycleOption; a
	create (Ljava/lang/String;[Ljava/lang/Object;Ljava/util/function/Function;Ljava/util/function/Function;Lnet/minecraft/client/CycleOption$OptionSetter;)Lnet/minecraft/client/CycleOption; a
	createBinaryOption (Ljava/lang/String;Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;Ljava/util/function/Function;Lnet/minecraft/client/CycleOption$OptionSetter;)Lnet/minecraft/client/CycleOption; a
	createButton (Lnet/minecraft/client/Options;III)Lnet/minecraft/client/gui/components/AbstractWidget; a
	createOnOff (Ljava/lang/String;Ljava/util/function/Function;Lnet/minecraft/client/CycleOption$OptionSetter;)Lnet/minecraft/client/CycleOption; a
	createOnOff (Ljava/lang/String;Lnet/minecraft/network/chat/Component;Ljava/util/function/Function;Lnet/minecraft/client/CycleOption$OptionSetter;)Lnet/minecraft/client/CycleOption; a
	setTooltip (Ljava/util/function/Function;)Lnet/minecraft/client/CycleOption; a
net/minecraft/client/CycleOption$OptionSetter dve$a
net/minecraft/client/DebugQueryHandler dvf
	callback c
	connection a
	transactionId b
	handleResponse (ILnet/minecraft/nbt/CompoundTag;)Z a
	queryBlockEntityTag (Lnet/minecraft/core/BlockPos;Ljava/util/function/Consumer;)V a
	queryEntityTag (ILjava/util/function/Consumer;)V a
	startTransaction (Ljava/util/function/Consumer;)I a
net/minecraft/client/FullscreenResolutionProgressOption dvg
	CURRENT_MODE ad
net/minecraft/client/Game dvh
	launcher b
	listener c
	minecraft a
	onLeaveGameSession ()V b
	onStartGameSession ()V a
net/minecraft/client/Game$Metrics dvh$a
	average c
	max b
	min a
	samples d
net/minecraft/client/GraphicsStatus dvi
	$VALUES g
	BY_ID d
	FABULOUS c
	FANCY b
	FAST a
	id e
	key f
	$values ()[Lnet/minecraft/client/GraphicsStatus; c
	byId (I)Lnet/minecraft/client/GraphicsStatus; a
	getId ()I a
	getKey ()Ljava/lang/String; b
net/minecraft/client/GuiMessage dvj
	addedTime a
	id c
	message b
	getAddedTime ()I b
	getId ()I c
	getMessage ()Ljava/lang/Object; a
net/minecraft/client/HotbarManager dvk
	LOGGER b
	NUM_HOTBAR_GROUPS a
	fixerUpper d
	hotbars e
	loaded f
	optionsFile c
	get (I)Lnet/minecraft/client/player/inventory/Hotbar; a
	load ()V b
	save ()V a
net/minecraft/client/KeyMapping dvl
	ALL h
	CATEGORIES j
	CATEGORY_CREATIVE g
	CATEGORY_GAMEPLAY d
	CATEGORY_INTERFACE f
	CATEGORY_INVENTORY e
	CATEGORY_MISC b
	CATEGORY_MOVEMENT a
	CATEGORY_MULTIPLAYER c
	CATEGORY_SORT_ORDER k
	MAP i
	category n
	clickCount q
	defaultKey m
	isDown p
	key o
	name l
	click (Lcom/mojang/blaze3d/platform/InputConstants$Key;)V a
	compareTo (Lnet/minecraft/client/KeyMapping;)I a
	consumeClick ()Z f
	createNameSupplier (Ljava/lang/String;)Ljava/util/function/Supplier; a
	getCategory ()Ljava/lang/String; e
	getDefaultKey ()Lcom/mojang/blaze3d/platform/InputConstants$Key; h
	getName ()Ljava/lang/String; g
	getTranslatedKeyMessage ()Lnet/minecraft/network/chat/Component; j
	isDefault ()Z k
	isDown ()Z d
	isUnbound ()Z i
	matches (II)Z a
	matchesMouse (I)Z a
	release ()V m
	releaseAll ()V b
	resetMapping ()V c
	same (Lnet/minecraft/client/KeyMapping;)Z b
	saveString ()Ljava/lang/String; l
	set (Lcom/mojang/blaze3d/platform/InputConstants$Key;Z)V a
	setAll ()V a
	setDown (Z)V a
	setKey (Lcom/mojang/blaze3d/platform/InputConstants$Key;)V b
net/minecraft/client/KeyboardHandler dvm
	DEBUG_CRASH_TIME a
	clipboardManager d
	debugCrashKeyReportedCount g
	debugCrashKeyReportedTime f
	debugCrashKeyTime e
	handledDebugKey h
	minecraft b
	sendRepeatsToGui c
	charTyped (JII)V a
	copyCreateBlockCommand (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/nbt/CompoundTag;)V a
	copyCreateEntityCommand (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/nbt/CompoundTag;)V a
	copyRecreateCommand (ZZ)V a
	debugComponent (Lnet/minecraft/ChatFormatting;Lnet/minecraft/network/chat/Component;)V a
	debugFeedback (Ljava/lang/String;[Ljava/lang/Object;)V c
	debugFeedbackComponent (Lnet/minecraft/network/chat/Component;)V a
	debugFeedbackTranslated (Ljava/lang/String;[Ljava/lang/Object;)V a
	debugWarningTranslated (Ljava/lang/String;[Ljava/lang/Object;)V b
	getClipboard ()Ljava/lang/String; a
	handleChunkDebugKeys (I)Z a
	handleDebugKeys (I)Z b
	keyPress (JIIII)V a
	setClipboard (Ljava/lang/String;)V a
	setSendRepeatsToGui (Z)V a
	setup (J)V a
	tick ()V b
net/minecraft/client/LogaritmicProgressOption dvn
	toPct (D)D a
	toValue (D)D b
net/minecraft/client/Minecraft dvo
	ALT_FONT d
	DEFAULT_FONT b
	LOGGER G
	MAX_TICKS_PER_UPDATE H
	ON_OSX a
	RESOURCE_RELOAD_INITIAL_TASK I
	SOCIAL_INTERACTIONS_NOT_AVAILABLE J
	UNIFORM_FONT c
	UPDATE_DRIVERS_ADVICE e
	allowsChat ah
	allowsMultiplayer ag
	blockColors am
	blockEntityRenderDispatcher aG
	blockRenderer ay
	cameraEntity u
	chunkPath C
	chunkVisibility D
	clientPackSource aj
	connectedToRealms aS
	crosshairPickEntity v
	currentServer aI
	debugPath bh
	debugRenderer j
	delayedCrash aV
	demo af
	entityModels aF
	entityRenderDispatcher T
	fixerUpper N
	font h
	fontManager ar
	fps aW
	fpsPieProfiler bd
	fpsPieRenderTicks bc
	fpsPieResults be
	fpsString A
	frameTimer p
	frames aQ
	game aC
	gameDirectory o
	gameMode r
	gameRenderer i
	gameThread aT
	gpuWarnlistManager at
	gui k
	hitResult w
	hotbarManager Z
	instance F
	is64bit ae
	isLocalServer aK
	itemColors an
	itemInHandRenderer V
	itemRenderer U
	keyboardHandler n
	languageManager al
	lastNanoTime aO
	lastTime aP
	launchedVersion aa
	level s
	levelRenderer f
	levelSource ad
	mainRenderTarget ao
	metricsRecorder bf
	minecraftSessionService au
	missTime x
	mobEffectTextures aA
	modelManager ax
	mouseHandler m
	musicManager aq
	noRender y
	options l
	overlay aR
	paintingTextures az
	particleEngine g
	pause aM
	pausePartialTick aN
	pendingConnection aJ
	pendingReload aZ
	player t
	playerSocialManager aE
	profileProperties L
	profiler bb
	progressListener Y
	progressTasks aY
	proxy ac
	reloadStateTracker bg
	renderBuffers S
	reserve q
	resourceManager ai
	resourcePackDirectory K
	resourcePackRepository ak
	rightClickDelay aL
	running aU
	screen z
	searchRegistry W
	singleplayerServer aH
	skinManager aw
	smartCull E
	snooper R
	socialInteractionsService av
	socialInteractionsToast ba
	soundManager ap
	splashManager as
	textureManager M
	timer Q
	toast aB
	tutorial aD
	user X
	versionType ab
	virtualScreen O
	window P
	windowActive aX
	wireframe B
	adaptV3 (Ljava/util/function/Supplier;)Ljava/util/function/Supplier; b
	adaptV4 (Ljava/util/function/Supplier;)Ljava/util/function/Supplier; c
	addCustomNbtData (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/entity/BlockEntity;)Lnet/minecraft/world/item/ItemStack; a
	allowsMultiplayer ()Z s
	allowsRealms ()Z t
	archiveProfilingReport (Lnet/minecraft/SystemReport;Ljava/util/List;)Ljava/nio/file/Path; a
	checkIs64Bit ()Z aJ
	clearLevel ()V r
	clearLevel (Lnet/minecraft/client/gui/screens/Screen;)V b
	clearResourcePacksOnError (Ljava/lang/Throwable;Lnet/minecraft/network/chat/Component;)V a
	constructProfiler (ZLnet/minecraft/util/profiling/SingleTickProfiler;)Lnet/minecraft/util/profiling/ProfilerFiller; a
	continueAttack (Z)V g
	crash (Lnet/minecraft/CrashReport;)V b
	createClientPackAdapter (Ljava/lang/String;Lnet/minecraft/network/chat/Component;ZLjava/util/function/Supplier;Lnet/minecraft/server/packs/metadata/pack/PackMetadataSection;Lnet/minecraft/server/packs/repository/Pack$Position;Lnet/minecraft/server/packs/repository/PackSource;)Lnet/minecraft/server/packs/repository/Pack; a
	createLevel (Ljava/lang/String;Lnet/minecraft/world/level/LevelSettings;Lnet/minecraft/core/RegistryAccess$RegistryHolder;Lnet/minecraft/world/level/levelgen/WorldGenSettings;)V a
	createSearchTrees ()V aI
	createSocialInteractions (Lcom/mojang/authlib/yggdrasil/YggdrasilAuthenticationService;Lnet/minecraft/client/main/GameConfig;)Lcom/mojang/authlib/minecraft/SocialInteractionsService; a
	createTitle ()Ljava/lang/String; aH
	cursorEntered ()V b
	debugClientMetricsStart (Ljava/util/function/Consumer;)Z a
	debugClientMetricsStop ()V aN
	debugFpsMeterKeyPress (I)V a
	delayCrash (Lnet/minecraft/CrashReport;)V a
	delayTextureReload ()Ljava/util/concurrent/CompletableFuture; D
	destroy ()V l
	displayExperimentalConfirmationDialog (Lnet/minecraft/client/Minecraft$ExperimentalDialogType;Ljava/lang/String;ZLjava/lang/Runnable;)V a
	doLoadLevel (Ljava/lang/String;Lnet/minecraft/core/RegistryAccess$RegistryHolder;Ljava/util/function/Function;Lcom/mojang/datafixers/util/Function4;ZLnet/minecraft/client/Minecraft$ExperimentalDialogType;)V a
	emergencySave ()V m
	fillReport (Lnet/minecraft/CrashReport;)Lnet/minecraft/CrashReport; c
	fillReport (Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/resources/language/LanguageManager;Ljava/lang/String;Lnet/minecraft/client/Options;Lnet/minecraft/CrashReport;)V a
	fillSystemReport (Lnet/minecraft/SystemReport;Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/resources/language/LanguageManager;Ljava/lang/String;Lnet/minecraft/client/Options;)Lnet/minecraft/SystemReport; a
	finishProfilers (ZLnet/minecraft/util/profiling/SingleTickProfiler;)V b
	forceSetScreen (Lnet/minecraft/client/gui/screens/Screen;)V c
	getBlockColors ()Lnet/minecraft/client/color/block/BlockColors; al
	getBlockEntityRenderDispatcher ()Lnet/minecraft/client/renderer/blockentity/BlockEntityRenderDispatcher; ad
	getBlockRenderer ()Lnet/minecraft/client/renderer/block/BlockRenderDispatcher; ab
	getCameraEntity ()Lnet/minecraft/world/entity/Entity; aa
	getChatStatus ()Lnet/minecraft/client/Minecraft$ChatStatus; u
	getClientPackSource ()Lnet/minecraft/client/resources/ClientPackSource; P
	getConnection ()Lnet/minecraft/client/multiplayer/ClientPacketListener; w
	getCurrentServer ()Lnet/minecraft/client/multiplayer/ServerData; E
	getCurrentSnooperAction ()Ljava/lang/String; aT
	getDeltaFrameTime ()F ak
	getEntityModels ()Lnet/minecraft/client/model/geom/EntityModelSet; aF
	getEntityRenderDispatcher ()Lnet/minecraft/client/renderer/entity/EntityRenderDispatcher; ac
	getFixerUpper ()Lcom/mojang/datafixers/DataFixer; ai
	getFrameTime ()F aj
	getFrameTimer ()Lnet/minecraft/util/FrameTimer; ag
	getFramerateLimit ()I aM
	getGame ()Lnet/minecraft/client/Game; ax
	getGpuWarnlistManager ()Lnet/minecraft/client/renderer/GpuWarnlistManager; U
	getHotbarManager ()Lnet/minecraft/client/HotbarManager; aq
	getInstance ()Lnet/minecraft/client/Minecraft; C
	getItemInHandRenderer ()Lnet/minecraft/client/renderer/ItemInHandRenderer; af
	getItemRenderer ()Lnet/minecraft/client/renderer/entity/ItemRenderer; ae
	getLanguageManager ()Lnet/minecraft/client/resources/language/LanguageManager; R
	getLaunchedVersion ()Ljava/lang/String; g
	getLevelSource ()Lnet/minecraft/world/level/storage/LevelStorageSource; k
	getMainRenderTarget ()Lcom/mojang/blaze3d/pipeline/RenderTarget; f
	getMinecraftSessionService ()Lcom/mojang/authlib/minecraft/MinecraftSessionService; Y
	getMobEffectTextures ()Lnet/minecraft/client/resources/MobEffectTextureManager; at
	getModelManager ()Lnet/minecraft/client/resources/model/ModelManager; ar
	getMusicManager ()Lnet/minecraft/client/sounds/MusicManager; p
	getOverlay ()Lnet/minecraft/client/gui/screens/Overlay; aA
	getPaintingTextures ()Lnet/minecraft/client/resources/PaintingTextureManager; as
	getPlayerSocialManager ()Lnet/minecraft/client/gui/screens/social/PlayerSocialManager; aB
	getProfileProperties ()Lcom/mojang/authlib/properties/PropertyMap; K
	getProfiler ()Lnet/minecraft/util/profiling/ProfilerFiller; aw
	getProgressListener ()Lnet/minecraft/server/level/progress/StoringChunkProgressListener; ay
	getProxy ()Ljava/net/Proxy; L
	getResourceManager ()Lnet/minecraft/server/packs/resources/ResourceManager; N
	getResourcePackDirectory ()Ljava/io/File; Q
	getResourcePackRepository ()Lnet/minecraft/server/packs/repository/PackRepository; O
	getRunningThread ()Ljava/lang/Thread; av
	getSearchTree (Lnet/minecraft/client/searchtree/SearchRegistry$Key;)Lnet/minecraft/client/searchtree/MutableSearchTree; a
	getSingleplayerServer ()Lnet/minecraft/client/server/IntegratedServer; H
	getSituationalMusic ()Lnet/minecraft/sounds/Music; X
	getSkinManager ()Lnet/minecraft/client/resources/SkinManager; Z
	getSnooper ()Lnet/minecraft/world/Snooper; I
	getSoundManager ()Lnet/minecraft/client/sounds/SoundManager; W
	getSplashManager ()Lnet/minecraft/client/resources/SplashManager; az
	getTextureAtlas (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/function/Function; a
	getTextureManager ()Lnet/minecraft/client/renderer/texture/TextureManager; M
	getToasts ()Lnet/minecraft/client/gui/components/toasts/ToastComponent; an
	getTutorial ()Lnet/minecraft/client/tutorial/Tutorial; ao
	getUser ()Lnet/minecraft/client/User; J
	getVersionType ()Ljava/lang/String; h
	getWindow ()Lcom/mojang/blaze3d/platform/Window; aD
	grabHugeScreenshot (Ljava/io/File;IIII)Lnet/minecraft/network/chat/Component; a
	grabPanoramixScreenshot (Ljava/io/File;II)Lnet/minecraft/network/chat/Component; a
	handleKeybinds ()V aR
	hasSingleplayerServer ()Z G
	is64Bit ()Z S
	isBlocked (Ljava/util/UUID;)Z a
	isConnectedToRealms ()Z ah
	isDemo ()Z v
	isEnforceUnicode ()Z i
	isLocalServer ()Z F
	isMultiplayerServer ()Z aQ
	isPaused ()Z T
	isProbablyModded ()Z d
	isRunning ()Z o
	isSnooperEnabled ()Z V
	isTextFilteringEnabled ()Z aG
	isWindowActive ()Z ap
	loadDataPacks (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;)Lnet/minecraft/world/level/DataPackConfig; a
	loadLevel (Ljava/lang/String;)V a
	loadWorldData (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;Lnet/minecraft/core/RegistryAccess$RegistryHolder;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/world/level/DataPackConfig;)Lnet/minecraft/world/level/storage/WorldData; a
	makeServerStem (Lnet/minecraft/core/RegistryAccess$RegistryHolder;Ljava/util/function/Function;Lcom/mojang/datafixers/util/Function4;ZLnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;)Lnet/minecraft/client/Minecraft$ServerStem; a
	onFullscreenError (IJ)V a
	openChatScreen (Ljava/lang/String;)V b
	pauseGame (Z)V c
	pickBlock ()V aS
	populateSnooper (Lnet/minecraft/world/Snooper;)V a
	populateSnooperInitial (Lnet/minecraft/world/Snooper;)V b
	populateSnooperWithOpenGL (Lnet/minecraft/world/Snooper;)V c
	reloadResourcePacks ()Ljava/util/concurrent/CompletableFuture; j
	reloadResourcePacks (Z)Ljava/util/concurrent/CompletableFuture; e
	renderBuffers ()Lnet/minecraft/client/renderer/RenderBuffers; aE
	renderFpsMeter (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/util/profiling/ProfileResults;)V a
	renderNames ()Z x
	renderOnThread ()Z aC
	resizeDisplay ()V a
	rollbackResourcePacks (Ljava/lang/Throwable;)V a
	run ()V e
	runTick (Z)V f
	selectMainFont (Z)V b
	selfTest ()V aK
	setCameraEntity (Lnet/minecraft/world/entity/Entity;)V a
	setConnectedToRealms (Z)V d
	setCurrentServer (Lnet/minecraft/client/multiplayer/ServerData;)V a
	setLevel (Lnet/minecraft/client/multiplayer/ClientLevel;)V a
	setOverlay (Lnet/minecraft/client/gui/screens/Overlay;)V a
	setScreen (Lnet/minecraft/client/gui/screens/Screen;)V a
	setWindowActive (Z)V a
	shouldEntityAppearGlowing (Lnet/minecraft/world/entity/Entity;)Z b
	shouldRenderFpsPie ()Z aL
	shouldRun (Ljava/lang/Runnable;)Z d
	showOnlyReducedInfo ()Z am
	startAttack ()V aO
	startUseItem ()V aP
	stop ()V n
	tick ()V q
	updateLevelInEngines (Lnet/minecraft/client/multiplayer/ClientLevel;)V b
	updateMaxMipLevel (I)V b
	updateScreenAndTick (Lnet/minecraft/client/gui/screens/Screen;)V d
	updateTitle ()V c
	useAmbientOcclusion ()Z B
	useFancyGraphics ()Z y
	useShaderTransparency ()Z A
	wrapRunnable (Ljava/lang/Runnable;)Ljava/lang/Runnable; e
net/minecraft/client/Minecraft$ChatStatus dvo$a
	$VALUES f
	DISABLED_BY_LAUNCHER c
	DISABLED_BY_OPTIONS b
	DISABLED_BY_PROFILE d
	ENABLED a
	message e
	$values ()[Lnet/minecraft/client/Minecraft$ChatStatus; b
	getMessage ()Lnet/minecraft/network/chat/Component; a
	isChatAllowed (Z)Z a
net/minecraft/client/Minecraft$ExperimentalDialogType dvo$b
	$VALUES d
	BACKUP c
	CREATE b
	NONE a
	$values ()[Lnet/minecraft/client/Minecraft$ExperimentalDialogType; a
net/minecraft/client/Minecraft$ServerStem dvo$c
	packRepository a
	serverResources b
	worldData c
	packRepository ()Lnet/minecraft/server/packs/repository/PackRepository; a
	serverResources ()Lnet/minecraft/server/ServerResources; b
	worldData ()Lnet/minecraft/world/level/storage/WorldData; c
net/minecraft/client/MouseHandler dvp
	accumulatedDX n
	accumulatedDY o
	accumulatedScroll p
	activeButton h
	clickDepth j
	fakeRightMouse g
	ignoreFirstMove i
	isLeftPressed b
	isMiddlePressed c
	isRightPressed d
	lastMouseEventTime q
	minecraft a
	mouseGrabbed r
	mousePressedTime k
	smoothTurnX l
	smoothTurnY m
	xpos e
	ypos f
	cursorEntered ()V k
	grabMouse ()V i
	isLeftPressed ()Z b
	isMiddlePressed ()Z c
	isMouseGrabbed ()Z h
	isRightPressed ()Z d
	onDrop (JLjava/util/List;)V a
	onMove (JDD)V b
	onPress (JIII)V a
	onScroll (JDD)V a
	releaseMouse ()V j
	setIgnoreFirstMove ()V g
	setup (J)V a
	turnPlayer ()V a
	xpos ()D e
	ypos ()D f
net/minecraft/client/NarratorStatus dvq
	$VALUES h
	ALL b
	BY_ID e
	CHAT c
	OFF a
	SYSTEM d
	id f
	name g
	$values ()[Lnet/minecraft/client/NarratorStatus; c
	byId (I)Lnet/minecraft/client/NarratorStatus; a
	getId ()I a
	getName ()Lnet/minecraft/network/chat/Component; b
net/minecraft/client/Option dvr
	ACCESSIBILITY_TOOLTIP_DARK_MOJANG_BACKGROUND ai
	ACCESSIBILITY_TOOLTIP_FOV_EFFECT aa
	ACCESSIBILITY_TOOLTIP_SCREEN_EFFECT ab
	AMBIENT_OCCLUSION v
	ATTACK_INDICATOR w
	AUTO_JUMP F
	AUTO_SUGGESTIONS G
	BIOME_BLEND_RADIUS b
	CHAT_COLOR H
	CHAT_DELAY i
	CHAT_HEIGHT_FOCUSED c
	CHAT_HEIGHT_UNFOCUSED d
	CHAT_LINE_SPACING h
	CHAT_LINKS J
	CHAT_LINKS_PROMPT K
	CHAT_OPACITY e
	CHAT_SCALE f
	CHAT_TOOLTIP_HIDE_MATCHED_NAMES af
	CHAT_VISIBILITY x
	CHAT_WIDTH g
	DARK_MOJANG_STUDIOS_BACKGROUND_COLOR Z
	DISCRETE_MOUSE_SCROLL L
	ENABLE_VSYNC M
	ENTITY_DISTANCE_SCALING s
	ENTITY_SHADOWS N
	FORCE_UNICODE_FONT O
	FOV j
	FOV_EFFECTS_SCALE k
	FRAMERATE_LIMIT m
	GAMMA n
	GRAPHICS y
	GRAPHICS_TOOLTIP_FABULOUS ad
	GRAPHICS_TOOLTIP_FANCY ae
	GRAPHICS_TOOLTIP_FAST ac
	GUI_SCALE z
	HIDE_MATCHED_NAMES I
	INVERT_MOUSE P
	MAIN_HAND A
	MIPMAP_LEVELS o
	MOUSE_WHEEL_SENSITIVITY p
	MOVEMENT_HOLD ah
	MOVEMENT_TOGGLE ag
	NARRATOR B
	OPTIONS_TOOLTIP_WIDTH a
	PARTICLES C
	RAW_MOUSE_INPUT q
	REALMS_NOTIFICATIONS Q
	REDUCED_DEBUG_INFO R
	RENDER_CLOUDS D
	RENDER_DISTANCE r
	SCREEN_EFFECTS_SCALE l
	SENSITIVITY t
	SHOW_SUBTITLES S
	SNOOPER_ENABLED T
	TEXT_BACKGROUND E
	TEXT_BACKGROUND_OPACITY u
	TOGGLE_CROUCH U
	TOGGLE_SPRINT V
	TOUCHSCREEN W
	USE_FULLSCREEN X
	VIEW_BOBBING Y
	caption aj
	createButton (Lnet/minecraft/client/Options;III)Lnet/minecraft/client/gui/components/AbstractWidget; a
	genericValueLabel (I)Lnet/minecraft/network/chat/Component; c
	genericValueLabel (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/Component; a
	getCaption ()Lnet/minecraft/network/chat/Component; a
	percentAddValueLabel (I)Lnet/minecraft/network/chat/Component; b
	percentValueLabel (D)Lnet/minecraft/network/chat/Component; c
	pixelValueLabel (I)Lnet/minecraft/network/chat/Component; a
net/minecraft/client/Options dvs
	DEFAULT_VOLUME bj
	GSON bg
	LOGGER bf
	OPTION_SPLITTER bi
	RENDER_DISTANCE_EXTREME f
	RENDER_DISTANCE_FAR d
	RENDER_DISTANCE_NORMAL c
	RENDER_DISTANCE_REALLY_FAR e
	RENDER_DISTANCE_SHORT b
	RENDER_DISTANCE_TINY a
	RESOURCE_PACK_TYPE bh
	advancedItemTooltips w
	ambientOcclusion n
	attackIndicator J
	autoJump R
	autoSuggestions S
	backgroundForChatOnly af
	biomeBlendRadius N
	bobView ai
	cameraType bn
	chatColors T
	chatDelay G
	chatHeightFocused F
	chatHeightUnfocused E
	chatLineSpacing s
	chatLinks U
	chatLinksPrompt V
	chatOpacity r
	chatScale C
	chatVisibility q
	chatWidth D
	darkMojangStudiosBackground g
	difficulty aP
	discreteMouseScroll aa
	enableVsync W
	entityDistanceScaling j
	entityShadows X
	forceUnicodeFont Y
	fov aW
	fovEffectScale aY
	framerateLimit k
	fullscreen ah
	fullscreenVideoModeString u
	gamma aZ
	glDebugVerbosity Q
	graphicsMode m
	guiScale ba
	heldItemTooltips B
	hideBundleTutorial M
	hideGui aQ
	hideMatchedNames am
	hideServerAddress v
	incompatibleResourcePacks p
	invertYMouse Z
	joinedFirstServer L
	keyAdvancements aJ
	keyAttack ay
	keyChat aA
	keyCommand aC
	keyDown ap
	keyDrop aw
	keyFullscreen aH
	keyHotbarSlots aK
	keyInventory au
	keyJump ar
	keyLeft ao
	keyLoadHotbarActivator aM
	keyMappings aN
	keyPickItem az
	keyPlayerList aB
	keyRight aq
	keySaveHotbarActivator aL
	keyScreenshot aE
	keyShift as
	keySmoothCamera aG
	keySocialInteractions aD
	keySpectatorOutlines aI
	keySprint at
	keySwapOffhand av
	keyTogglePerspective aF
	keyUp an
	keyUse ax
	languageCode bd
	lastMpIp aU
	mainHand y
	minecraft aO
	mipmapLevels H
	modelParts bk
	mouseWheelSensitivity O
	narratorStatus bc
	optionsFile bm
	overrideHeight A
	overrideWidth z
	particles bb
	pauseOnLostFocus x
	rawMouseInput P
	realmsNotifications ab
	reducedDebugInfo ac
	renderClouds l
	renderDebug aR
	renderDebugCharts aS
	renderDistance i
	renderFpsChart aT
	resourcePacks o
	screenEffectScale aX
	sensitivity h
	showSubtitles ae
	skipMultiplayerWarning al
	smoothCamera aV
	snooperEnabled ad
	sourceVolumes bl
	syncWrites be
	textBackgroundOpacity t
	toggleCrouch aj
	toggleSprint ak
	touchscreen ag
	tutorialStep K
	useNativeTransport I
	broadcastOptions ()V c
	dataFix (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	dumpOptionsForReport ()Ljava/lang/String; h
	getBackgroundColor (F)I b
	getBackgroundColor (I)I a
	getBackgroundOpacity (F)F a
	getCameraType ()Lnet/minecraft/client/CameraType; f
	getCloudsType ()Lnet/minecraft/client/CloudStatus; d
	getFile ()Ljava/io/File; g
	getSoundSourceVolume (Lnet/minecraft/sounds/SoundSource;)F a
	isFalse (Ljava/lang/String;)Z b
	isModelPartEnabled (Lnet/minecraft/world/entity/player/PlayerModelPart;)Z a
	isTrue (Ljava/lang/String;)Z a
	load ()V a
	loadSelectedResourcePacks (Lnet/minecraft/server/packs/repository/PackRepository;)V a
	processOptions (Lnet/minecraft/client/Options$FieldAccess;)V a
	readAmbientOcclusion (Ljava/lang/String;)Lnet/minecraft/client/AmbientOcclusionStatus; e
	readCloudStatus (Ljava/lang/String;)Lnet/minecraft/client/CloudStatus; d
	readMainHand (Ljava/lang/String;)Lnet/minecraft/world/entity/HumanoidArm; f
	readPackList (Ljava/lang/String;)Ljava/util/List; c
	save ()V b
	setCameraType (Lnet/minecraft/client/CameraType;)V a
	setKey (Lnet/minecraft/client/KeyMapping;Lcom/mojang/blaze3d/platform/InputConstants$Key;)V a
	setModelPart (Lnet/minecraft/world/entity/player/PlayerModelPart;Z)V b
	setSoundCategoryVolume (Lnet/minecraft/sounds/SoundSource;F)V a
	toggleModelPart (Lnet/minecraft/world/entity/player/PlayerModelPart;Z)V a
	useNativeTransport ()Z e
	writeCloudStatus (Lnet/minecraft/client/CloudStatus;)Ljava/lang/String; a
	writeMainHand (Lnet/minecraft/world/entity/HumanoidArm;)Ljava/lang/String; a
net/minecraft/client/Options$FieldAccess dvs$a
	process (Ljava/lang/String;D)D a
	process (Ljava/lang/String;F)F a
	process (Ljava/lang/String;I)I a
	process (Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/lang/Object; a
	process (Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/IntFunction;Ljava/util/function/ToIntFunction;)Ljava/lang/Object; a
	process (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; a
	process (Ljava/lang/String;Z)Z a
net/minecraft/client/ParticleStatus dvt
	$VALUES g
	ALL a
	BY_ID d
	DECREASED b
	MINIMAL c
	id e
	key f
	$values ()[Lnet/minecraft/client/ParticleStatus; c
	byId (I)Lnet/minecraft/client/ParticleStatus; a
	getId ()I b
	getKey ()Ljava/lang/String; a
net/minecraft/client/ProgressOption dvu
	getter ad
	maxValue ac
	minValue ab
	setter ae
	steps aa
	toString af
	tooltipSupplier ag
	clamp (D)D d
	createButton (Lnet/minecraft/client/Options;III)Lnet/minecraft/client/gui/components/AbstractWidget; a
	get (Lnet/minecraft/client/Options;)D a
	getMaxValue ()D c
	getMessage (Lnet/minecraft/client/Options;)Lnet/minecraft/network/chat/Component; b
	getMinValue ()D b
	set (Lnet/minecraft/client/Options;D)V a
	setMaxValue (F)V a
	toPct (D)D a
	toValue (D)D b
net/minecraft/client/RecipeBookCategories dvv
	$VALUES y
	AGGREGATE_CATEGORIES w
	BLAST_FURNACE_BLOCKS k
	BLAST_FURNACE_CATEGORIES t
	BLAST_FURNACE_MISC l
	BLAST_FURNACE_SEARCH j
	CAMPFIRE q
	CRAFTING_BUILDING_BLOCKS b
	CRAFTING_CATEGORIES v
	CRAFTING_EQUIPMENT d
	CRAFTING_MISC e
	CRAFTING_REDSTONE c
	CRAFTING_SEARCH a
	FURNACE_BLOCKS h
	FURNACE_CATEGORIES u
	FURNACE_FOOD g
	FURNACE_MISC i
	FURNACE_SEARCH f
	SMITHING p
	SMOKER_CATEGORIES s
	SMOKER_FOOD n
	SMOKER_SEARCH m
	STONECUTTER o
	UNKNOWN r
	itemIcons x
	$values ()[Lnet/minecraft/client/RecipeBookCategories; b
	getCategories (Lnet/minecraft/world/inventory/RecipeBookType;)Ljava/util/List; a
	getIconItems ()Ljava/util/List; a
net/minecraft/client/ResourceLoadStateTracker dvw
	LOGGER a
	reloadCount c
	reloadState b
	fillCrashReport (Lnet/minecraft/CrashReport;)V a
	finishReload ()V a
	startRecovery (Ljava/lang/Throwable;)V a
	startReload (Lnet/minecraft/client/ResourceLoadStateTracker$ReloadReason;Ljava/util/List;)V a
net/minecraft/client/ResourceLoadStateTracker$RecoveryInfo dvw$a
	error a
	fillCrashInfo (Lnet/minecraft/CrashReportCategory;)V a
net/minecraft/client/ResourceLoadStateTracker$ReloadReason dvw$b
	$VALUES e
	INITIAL a
	MANUAL b
	UNKNOWN c
	name d
	$values ()[Lnet/minecraft/client/ResourceLoadStateTracker$ReloadReason; a
net/minecraft/client/ResourceLoadStateTracker$ReloadState dvw$c
	finished d
	packs b
	recoveryReloadInfo c
	reloadReason a
	fillCrashInfo (Lnet/minecraft/CrashReportCategory;)V a
net/minecraft/client/Screenshot dvx
	DATE_FORMAT b
	LOGGER a
	bytes e
	file h
	height g
	outputStream d
	rowHeight c
	width f
	_grab (Ljava/io/File;Ljava/lang/String;IILcom/mojang/blaze3d/pipeline/RenderTarget;Ljava/util/function/Consumer;)V b
	addRegion (Ljava/nio/ByteBuffer;IIII)V a
	close ()Ljava/io/File; b
	getFile (Ljava/io/File;)Ljava/io/File; a
	grab (Ljava/io/File;IILcom/mojang/blaze3d/pipeline/RenderTarget;Ljava/util/function/Consumer;)V a
	grab (Ljava/io/File;Ljava/lang/String;IILcom/mojang/blaze3d/pipeline/RenderTarget;Ljava/util/function/Consumer;)V a
	saveRow ()V a
	takeScreenshot (IILcom/mojang/blaze3d/pipeline/RenderTarget;)Lcom/mojang/blaze3d/platform/NativeImage; a
net/minecraft/client/Session dvy
	difficulty c
	gameMode d
	id e
	isRemoteServer b
	players a
net/minecraft/client/StringSplitter dvz
	widthProvider a
	componentStyleAtWidth (Lnet/minecraft/network/chat/FormattedText;I)Lnet/minecraft/network/chat/Style; a
	componentStyleAtWidth (Lnet/minecraft/util/FormattedCharSequence;I)Lnet/minecraft/network/chat/Style; a
	findLineBreak (Ljava/lang/String;ILnet/minecraft/network/chat/Style;)I f
	formattedHeadByWidth (Ljava/lang/String;ILnet/minecraft/network/chat/Style;)Ljava/lang/String; e
	formattedIndexByWidth (Ljava/lang/String;ILnet/minecraft/network/chat/Style;)I d
	getWordPosition (Ljava/lang/String;IIZ)I a
	headByWidth (Lnet/minecraft/network/chat/FormattedText;ILnet/minecraft/network/chat/Style;)Lnet/minecraft/network/chat/FormattedText; a
	plainHeadByWidth (Ljava/lang/String;ILnet/minecraft/network/chat/Style;)Ljava/lang/String; b
	plainIndexAtWidth (Ljava/lang/String;ILnet/minecraft/network/chat/Style;)I a
	plainTailByWidth (Ljava/lang/String;ILnet/minecraft/network/chat/Style;)Ljava/lang/String; c
	splitLines (Ljava/lang/String;ILnet/minecraft/network/chat/Style;)Ljava/util/List; g
	splitLines (Ljava/lang/String;ILnet/minecraft/network/chat/Style;ZLnet/minecraft/client/StringSplitter$LinePosConsumer;)V a
	splitLines (Lnet/minecraft/network/chat/FormattedText;ILnet/minecraft/network/chat/Style;)Ljava/util/List; b
	splitLines (Lnet/minecraft/network/chat/FormattedText;ILnet/minecraft/network/chat/Style;Ljava/util/function/BiConsumer;)V a
	splitLines (Lnet/minecraft/network/chat/FormattedText;ILnet/minecraft/network/chat/Style;Lnet/minecraft/network/chat/FormattedText;)Ljava/util/List; a
	stringWidth (Ljava/lang/String;)F a
	stringWidth (Lnet/minecraft/network/chat/FormattedText;)F a
	stringWidth (Lnet/minecraft/util/FormattedCharSequence;)F a
net/minecraft/client/StringSplitter$FlatComponents dvz$a
	flatParts b
	parts a
	charAt (I)C a
	getRemainder ()Lnet/minecraft/network/chat/FormattedText; a
	splitAt (IILnet/minecraft/network/chat/Style;)Lnet/minecraft/network/chat/FormattedText; a
net/minecraft/client/StringSplitter$LineBreakFinder dvz$b
	hadNonZeroWidthChar e
	lastSpace g
	lastSpaceStyle h
	lineBreak c
	lineBreakStyle d
	maxWidth b
	nextChar i
	offset j
	width f
	addToOffset (I)V a
	finishIteration (ILnet/minecraft/network/chat/Style;)Z a
	getSplitPosition ()I a
	getSplitStyle ()Lnet/minecraft/network/chat/Style; b
	lineBreakFound ()Z c
net/minecraft/client/StringSplitter$LineComponent dvz$c
	contents a
	style d
	visit (Lnet/minecraft/network/chat/FormattedText$ContentConsumer;)Ljava/util/Optional; a
	visit (Lnet/minecraft/network/chat/FormattedText$StyledContentConsumer;Lnet/minecraft/network/chat/Style;)Ljava/util/Optional; a
net/minecraft/client/StringSplitter$LinePosConsumer dvz$d
net/minecraft/client/StringSplitter$WidthLimitedCharSink dvz$e
	maxWidth b
	position c
	getPosition ()I a
	resetPosition ()V b
net/minecraft/client/StringSplitter$WidthProvider dvz$f
net/minecraft/client/Timer dwa
	lastMs c
	msPerTick d
	partialTick a
	tickDelta b
	advanceTime (J)I a
net/minecraft/client/ToggleKeyMapping dwb
	needsToggle h
	setDown (Z)V a
net/minecraft/client/User dwc
	accessToken c
	name a
	type d
	uuid b
	getAccessToken ()Ljava/lang/String; d
	getGameProfile ()Lcom/mojang/authlib/GameProfile; e
	getName ()Ljava/lang/String; c
	getSessionId ()Ljava/lang/String; a
	getType ()Lnet/minecraft/client/User$Type; f
	getUuid ()Ljava/lang/String; b
net/minecraft/client/User$Type dwc$a
	$VALUES e
	BY_NAME c
	LEGACY a
	MOJANG b
	name d
	$values ()[Lnet/minecraft/client/User$Type; a
	byName (Ljava/lang/String;)Lnet/minecraft/client/User$Type; a
net/minecraft/client/color/block/BlockColor dwd
net/minecraft/client/color/block/BlockColors dwe
	DEFAULT a
	blockColors b
	coloringStates c
	addColoringState (Lnet/minecraft/world/level/block/state/properties/Property;[Lnet/minecraft/world/level/block/Block;)V a
	addColoringStates (Ljava/util/Set;[Lnet/minecraft/world/level/block/Block;)V a
	createDefault ()Lnet/minecraft/client/color/block/BlockColors; a
	getColor (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;I)I a
	getColor (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getColoringProperties (Lnet/minecraft/world/level/block/Block;)Ljava/util/Set; a
	register (Lnet/minecraft/client/color/block/BlockColor;[Lnet/minecraft/world/level/block/Block;)V a
net/minecraft/client/color/block/BlockTintCache dwf
	MAX_CACHE_ENTRIES a
	cache c
	latestChunkOnThread b
	lock d
	findOrCreateChunkCache (II)[I b
	getColor (Lnet/minecraft/core/BlockPos;Ljava/util/function/IntSupplier;)I a
	invalidateAll ()V a
	invalidateForChunk (II)V a
net/minecraft/client/color/block/BlockTintCache$LatestCacheInfo dwf$a
	cache c
	x a
	z b
net/minecraft/client/color/item/ItemColor dwh
net/minecraft/client/color/item/ItemColors dwi
	DEFAULT a
	itemColors b
	createDefault (Lnet/minecraft/client/color/block/BlockColors;)Lnet/minecraft/client/color/item/ItemColors; a
	getColor (Lnet/minecraft/world/item/ItemStack;I)I a
	register (Lnet/minecraft/client/color/item/ItemColor;[Lnet/minecraft/world/level/ItemLike;)V a
net/minecraft/client/gui/Font dwk
	EFFECT_DEPTH c
	SHADOW_OFFSET d
	fonts e
	lineHeight a
	random b
	splitter f
	adjustColor (I)I a
	bidirectionalShaping (Ljava/lang/String;)Ljava/lang/String; a
	draw (Lcom/mojang/blaze3d/vertex/PoseStack;Ljava/lang/String;FFI)I b
	draw (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/network/chat/Component;FFI)I b
	draw (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/util/FormattedCharSequence;FFI)I b
	drawInBatch (Ljava/lang/String;FFIZLcom/mojang/math/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource;ZII)I a
	drawInBatch (Ljava/lang/String;FFIZLcom/mojang/math/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource;ZIIZ)I a
	drawInBatch (Lnet/minecraft/network/chat/Component;FFIZLcom/mojang/math/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource;ZII)I a
	drawInBatch (Lnet/minecraft/util/FormattedCharSequence;FFIZLcom/mojang/math/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource;ZII)I a
	drawInBatch8xOutline (Lnet/minecraft/util/FormattedCharSequence;FFIILcom/mojang/math/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	drawInternal (Ljava/lang/String;FFILcom/mojang/math/Matrix4f;ZZ)I a
	drawInternal (Ljava/lang/String;FFIZLcom/mojang/math/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource;ZIIZ)I b
	drawInternal (Lnet/minecraft/util/FormattedCharSequence;FFILcom/mojang/math/Matrix4f;Z)I a
	drawInternal (Lnet/minecraft/util/FormattedCharSequence;FFIZLcom/mojang/math/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource;ZII)I b
	drawShadow (Lcom/mojang/blaze3d/vertex/PoseStack;Ljava/lang/String;FFI)I a
	drawShadow (Lcom/mojang/blaze3d/vertex/PoseStack;Ljava/lang/String;FFIZ)I a
	drawShadow (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/network/chat/Component;FFI)I a
	drawShadow (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/util/FormattedCharSequence;FFI)I a
	drawWordWrap (Lnet/minecraft/network/chat/FormattedText;IIII)V a
	getFontSet (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/gui/font/FontSet; a
	getSplitter ()Lnet/minecraft/client/StringSplitter; b
	isBidirectional ()Z a
	plainSubstrByWidth (Ljava/lang/String;I)Ljava/lang/String; a
	plainSubstrByWidth (Ljava/lang/String;IZ)Ljava/lang/String; a
	renderChar (Lnet/minecraft/client/gui/font/glyphs/BakedGlyph;ZZFFFLcom/mojang/math/Matrix4f;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFI)V a
	renderText (Ljava/lang/String;FFIZLcom/mojang/math/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource;ZII)F b
	renderText (Lnet/minecraft/util/FormattedCharSequence;FFIZLcom/mojang/math/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource;ZII)F c
	split (Lnet/minecraft/network/chat/FormattedText;I)Ljava/util/List; b
	substrByWidth (Lnet/minecraft/network/chat/FormattedText;I)Lnet/minecraft/network/chat/FormattedText; a
	width (Ljava/lang/String;)I b
	width (Lnet/minecraft/network/chat/FormattedText;)I a
	width (Lnet/minecraft/util/FormattedCharSequence;)I a
	wordWrapHeight (Ljava/lang/String;I)I b
net/minecraft/client/gui/Font$DisplayMode dwk$a
	$VALUES d
	NORMAL a
	POLYGON_OFFSET c
	SEE_THROUGH b
	$values ()[Lnet/minecraft/client/gui/Font$DisplayMode; a
net/minecraft/client/gui/Font$StringRenderOutput dwk$b
	a h
	b g
	bufferSource a
	dimFactor d
	dropShadow c
	effects n
	g f
	mode j
	packedLightCoords k
	pose i
	r e
	x l
	y m
	addEffect (Lnet/minecraft/client/gui/font/glyphs/BakedGlyph$Effect;)V a
	finish (IF)F a
net/minecraft/client/gui/Gui dwl
	COLOR_WHITE k
	DEMO_EXPIRED_TEXT j
	HEART_SEPARATION r
	HEART_SIZE q
	LINE_HEIGHT n
	MIN_CROSSHAIR_ATTACK_SPEED l
	NUM_HEARTS_PER_ROW m
	PORTAL_OVERLAY_ALPHA_MIN p
	POWDER_SNOW_OUTLINE_LOCATION i
	PUMPKIN_BLUR_LOCATION d
	SPACER o
	SPYGLASS_SCOPE_LOCATION e
	VIGNETTE_LOCATION b
	WIDGETS_LOCATION c
	animateOverlayMessageColor z
	bossOverlay G
	chat v
	chatListeners T
	debugScreen C
	displayHealth O
	healthBlinkTime Q
	itemRenderer u
	lastHealth N
	lastHealthTime P
	lastToolHighlight B
	minecraft t
	overlayMessageString x
	overlayMessageTime y
	random s
	scopeScale U
	screenHeight S
	screenWidth R
	spectatorGui E
	subtitle J
	subtitleOverlay D
	tabList F
	tickCount w
	title I
	titleFadeInTime K
	titleFadeOutTime M
	titleStayTime L
	titleTime H
	toolHighlightTimer A
	vignetteBrightness a
	canRenderCrosshairForSpectator (Lnet/minecraft/world/phys/HitResult;)Z a
	clear ()V c
	clearCache ()V k
	displayScoreboardSidebar (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/scores/Objective;)V a
	drawBackdrop (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/Font;III)V a
	getBossOverlay ()Lnet/minecraft/client/gui/components/BossHealthOverlay; j
	getCameraPlayer ()Lnet/minecraft/world/entity/player/Player; m
	getChat ()Lnet/minecraft/client/gui/components/ChatComponent; d
	getFont ()Lnet/minecraft/client/gui/Font; f
	getGuiTicks ()I e
	getPlayerVehicleWithHealth ()Lnet/minecraft/world/entity/LivingEntity; n
	getSpectatorGui ()Lnet/minecraft/client/gui/components/spectator/SpectatorGui; g
	getTabList ()Lnet/minecraft/client/gui/components/PlayerTabOverlay; h
	getVehicleMaxHearts (Lnet/minecraft/world/entity/LivingEntity;)I a
	getVisibleVehicleHeartRows (I)I a
	guessChatUUID (Lnet/minecraft/network/chat/Component;)Ljava/util/UUID; d
	handleChat (Lnet/minecraft/network/chat/ChatType;Lnet/minecraft/network/chat/Component;Ljava/util/UUID;)V a
	onDisconnected ()V i
	render (Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	renderCrosshair (Lcom/mojang/blaze3d/vertex/PoseStack;)V d
	renderDemoOverlay (Lcom/mojang/blaze3d/vertex/PoseStack;)V c
	renderEffects (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	renderExperienceBar (Lcom/mojang/blaze3d/vertex/PoseStack;I)V b
	renderHeart (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/Gui$HeartType;IIIZZ)V a
	renderHearts (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/entity/player/Player;IIIIFIIIZ)V a
	renderHotbar (FLcom/mojang/blaze3d/vertex/PoseStack;)V a
	renderJumpMeter (Lcom/mojang/blaze3d/vertex/PoseStack;I)V a
	renderPlayerHealth (Lcom/mojang/blaze3d/vertex/PoseStack;)V e
	renderPortalOverlay (F)V b
	renderSelectedItemName (Lcom/mojang/blaze3d/vertex/PoseStack;)V b
	renderSlot (IIFLnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;I)V a
	renderSpyglassOverlay (F)V a
	renderTextureOverlay (Lnet/minecraft/resources/ResourceLocation;F)V a
	renderVehicleHealth (Lcom/mojang/blaze3d/vertex/PoseStack;)V f
	renderVignette (Lnet/minecraft/world/entity/Entity;)V b
	resetTitleTimes ()V a
	setNowPlaying (Lnet/minecraft/network/chat/Component;)V a
	setOverlayMessage (Lnet/minecraft/network/chat/Component;Z)V a
	setSubtitle (Lnet/minecraft/network/chat/Component;)V b
	setTimes (III)V a
	setTitle (Lnet/minecraft/network/chat/Component;)V c
	tick ()V b
	updateVignetteBrightness (Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/client/gui/Gui$HeartType dwl$a
	$VALUES i
	ABSORBING e
	CONTAINER a
	FROZEN f
	NORMAL b
	POISIONED c
	WITHERED d
	canBlink h
	index g
	$values ()[Lnet/minecraft/client/gui/Gui$HeartType; a
	forPlayer (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/client/gui/Gui$HeartType; a
	getX (ZZ)I a
net/minecraft/client/gui/GuiComponent dwm
	BACKGROUND_LOCATION f
	GUI_ICONS_LOCATION h
	STATS_ICON_LOCATION g
	blitOffset a
	blit (Lcom/mojang/blaze3d/vertex/PoseStack;IIFFIIII)V a
	blit (Lcom/mojang/blaze3d/vertex/PoseStack;IIIFFIIII)V a
	blit (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIFFIIII)V a
	blit (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIII)V b
	blit (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIILnet/minecraft/client/renderer/texture/TextureAtlasSprite;)V a
	blitOutlineBlack (IILjava/util/function/BiConsumer;)V a
	drawCenteredString (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/Font;Ljava/lang/String;III)V a
	drawCenteredString (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/Font;Lnet/minecraft/network/chat/Component;III)V a
	drawCenteredString (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/Font;Lnet/minecraft/util/FormattedCharSequence;III)V a
	drawString (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/Font;Ljava/lang/String;III)V b
	drawString (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/Font;Lnet/minecraft/network/chat/Component;III)V b
	drawString (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/Font;Lnet/minecraft/util/FormattedCharSequence;III)V b
	fill (Lcom/mojang/blaze3d/vertex/PoseStack;IIIII)V a
	fillGradient (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIII)V a
	fillGradient (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIII)V a
	fillGradient (Lcom/mojang/math/Matrix4f;Lcom/mojang/blaze3d/vertex/BufferBuilder;IIIIIII)V a
	getBlitOffset ()I l
	hLine (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V a
	innerBlit (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIFFII)V a
	innerBlit (Lcom/mojang/math/Matrix4f;IIIIIFFFF)V a
	innerFill (Lcom/mojang/math/Matrix4f;IIIII)V a
	setBlitOffset (I)V d
	vLine (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V b
net/minecraft/client/gui/MapRenderer dwn
	HEIGHT d
	MAP_ICONS b
	MAP_ICONS_LOCATION a
	WIDTH c
	maps f
	textureManager e
	getOrCreateMapInstance (ILnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)Lnet/minecraft/client/gui/MapRenderer$MapInstance; b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/level/saveddata/maps/MapItemSavedData;ZI)V a
	resetData ()V a
	update (ILnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)V a
net/minecraft/client/gui/MapRenderer$MapInstance dwn$a
	data b
	renderType d
	texture c
	draw (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ZI)V a
	updateTexture ()V a
net/minecraft/client/gui/chat/ChatListener dwo
	handle (Lnet/minecraft/network/chat/ChatType;Lnet/minecraft/network/chat/Component;Ljava/util/UUID;)V a
net/minecraft/client/gui/chat/NarratorChatListener dwp
	INSTANCE b
	LOGGER c
	NO_TITLE a
	narrator d
	clear ()V b
	destroy ()V c
	getStatus ()Lnet/minecraft/client/NarratorStatus; d
	handle (Lnet/minecraft/network/chat/ChatType;Lnet/minecraft/network/chat/Component;Ljava/util/UUID;)V a
	isActive ()Z a
	logNarratedMessage (Ljava/lang/String;)V b
	sayNow (Ljava/lang/String;)V a
	sayNow (Lnet/minecraft/network/chat/Component;)V a
	updateNarratorStatus (Lnet/minecraft/client/NarratorStatus;)V a
net/minecraft/client/gui/chat/OverlayChatListener dwq
	minecraft a
	handle (Lnet/minecraft/network/chat/ChatType;Lnet/minecraft/network/chat/Component;Ljava/util/UUID;)V a
net/minecraft/client/gui/chat/StandardChatListener dwr
	minecraft a
	handle (Lnet/minecraft/network/chat/ChatType;Lnet/minecraft/network/chat/Component;Ljava/util/UUID;)V a
net/minecraft/client/gui/components/AbstractButton dwt
	keyPressed (III)Z a
	onClick (DD)V a
	onPress ()V c
net/minecraft/client/gui/components/AbstractOptionSliderButton dwu
	options a
net/minecraft/client/gui/components/AbstractSelectionList dwv
	centerListVertically m
	children a
	headerHeight n
	height e
	hovered v
	itemHeight c
	minecraft b
	renderBackground t
	renderHeader q
	renderSelection p
	renderTopAndBottom u
	scrollAmount o
	scrolling r
	selected s
	width d
	x0 l
	x1 k
	y0 i
	y1 j
	addEntry (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)I b
	bindEntryToSelf (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V f
	centerScrollOn (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V c
	children ()Ljava/util/List; j
	clearEntries ()V k
	clickedHeader (II)V a
	ensureVisible (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V d
	getEntry (I)Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; e
	getEntryAtPosition (DD)Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; a
	getFocused ()Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; i
	getFocused ()Lnet/minecraft/client/gui/components/events/GuiEventListener; v
	getHovered ()Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; u
	getItemCount ()I m
	getMaxPosition ()I c
	getMaxScroll ()I o
	getRowBottom (I)I b
	getRowLeft ()I r
	getRowRight ()I s
	getRowTop (I)I h
	getRowWidth ()I d
	getScrollAmount ()D n
	getScrollBottom ()I p
	getScrollbarPosition ()I e
	getSelected ()Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; h
	isFocused ()Z b
	isMouseOver (DD)Z a_
	isSelectedItem (I)Z f
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseReleased (DDI)Z c
	mouseScrolled (DDD)Z a
	moveSelection (Lnet/minecraft/client/gui/components/AbstractSelectionList$SelectionDirection;)V a
	moveSelection (Lnet/minecraft/client/gui/components/AbstractSelectionList$SelectionDirection;Ljava/util/function/Predicate;)V a
	narrateListElementPosition (Lnet/minecraft/client/gui/narration/NarrationElementOutput;Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
	narrationPriority ()Lnet/minecraft/client/gui/narration/NarratableEntry$NarrationPriority; t
	refreshSelection ()V q
	remove (I)Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; i
	removeEntry (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)Z e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	renderDecorations (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	renderHeader (Lcom/mojang/blaze3d/vertex/PoseStack;IILcom/mojang/blaze3d/vertex/Tesselator;)V a
	renderList (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIF)V a
	replaceEntries (Ljava/util/Collection;)V a
	scroll (I)V a
	setLeftPos (I)V g
	setRenderBackground (Z)V c_
	setRenderHeader (ZI)V a
	setRenderSelection (Z)V a
	setRenderTopAndBottom (Z)V c
	setScrollAmount (D)V a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
	updateScrollingState (DDI)V b
	updateSize (IIII)V a
net/minecraft/client/gui/components/AbstractSelectionList$Entry dwv$a
	list a
	isMouseOver (DD)Z a_
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/components/AbstractSelectionList$SelectionDirection dwv$b
	$VALUES c
	DOWN b
	UP a
	$values ()[Lnet/minecraft/client/gui/components/AbstractSelectionList$SelectionDirection; a
net/minecraft/client/gui/components/AbstractSelectionList$TrackedList dwv$c
	delegate b
	add (ILnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V b
	get (I)Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; a
	remove (I)Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; b
	set (ILnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; a
net/minecraft/client/gui/components/AbstractSliderButton dww
	value b
	applyValue ()V a
	createNarrationMessage ()Lnet/minecraft/network/chat/MutableComponent; ak_
	getYImage (Z)I a
	keyPressed (III)Z a
	onClick (DD)V a
	onDrag (DDDD)V a
	onRelease (DD)V b
	playDownSound (Lnet/minecraft/client/sounds/SoundManager;)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/Minecraft;II)V a
	setValue (D)V b
	setValueFromMouse (D)V a
	updateMessage ()V b
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/components/AbstractWidget dwx
	WIDGETS_LOCATION i
	active o
	alpha q
	focused b
	height k
	isHovered n
	message a
	visible p
	width j
	x l
	y m
	changeFocus (Z)Z b
	clicked (DD)Z c
	createNarrationMessage ()Lnet/minecraft/network/chat/MutableComponent; ak_
	defaultButtonNarrationText (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V b
	getHeight ()I d
	getMessage ()Lnet/minecraft/network/chat/Component; g
	getWidth ()I f
	getYImage (Z)I a
	isActive ()Z al_
	isFocused ()Z h
	isHovered ()Z e
	isMouseOver (DD)Z a_
	isValidClickButton (I)Z d_
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseReleased (DDI)Z c
	narrationPriority ()Lnet/minecraft/client/gui/narration/NarratableEntry$NarrationPriority; t
	onClick (DD)V a
	onDrag (DDDD)V a
	onFocusedChanged (Z)V c
	onRelease (DD)V b
	playDownSound (Lnet/minecraft/client/sounds/SoundManager;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/Minecraft;II)V a
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	renderToolTip (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	setAlpha (F)V a
	setFocused (Z)V d
	setMessage (Lnet/minecraft/network/chat/Component;)V b
	setWidth (I)V b
	wrapDefaultNarrationMessage (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/MutableComponent; a
net/minecraft/client/gui/components/BossHealthOverlay dwy
	BAR_HEIGHT c
	BAR_WIDTH b
	GUI_BARS_LOCATION a
	OVERLAY_OFFSET d
	events i
	minecraft e
	drawBar (Lcom/mojang/blaze3d/vertex/PoseStack;IILnet/minecraft/world/BossEvent;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	reset ()V a
	shouldCreateWorldFog ()Z d
	shouldDarkenScreen ()Z c
	shouldPlayMusic ()Z b
	update (Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket;)V a
net/minecraft/client/gui/components/Button dwz
	NO_TOOLTIP r
	onPress s
	onTooltip t
	onPress ()V c
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	renderToolTip (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/components/Button$OnPress dwz$a
net/minecraft/client/gui/components/Button$OnTooltip dwz$b
	narrateTooltip (Ljava/util/function/Consumer;)V a
net/minecraft/client/gui/components/ChatComponent dxa
	LOGGER a
	MAX_CHAT_HISTORY b
	allMessages e
	chatQueue j
	chatScrollbarPos k
	lastMessage m
	minecraft c
	newMessageSinceScroll l
	recentChat d
	trimmedMessages i
	addMessage (Lnet/minecraft/network/chat/Component;)V a
	addMessage (Lnet/minecraft/network/chat/Component;I)V a
	addMessage (Lnet/minecraft/network/chat/Component;IIZ)V a
	addRecentChat (Ljava/lang/String;)V a
	clearMessages (Z)V a
	enqueueMessage (Lnet/minecraft/network/chat/Component;)V b
	getChatRateMillis ()J j
	getClickedComponentStyleAt (DD)Lnet/minecraft/network/chat/Style; b
	getHeight ()I e
	getHeight (D)I c
	getLinesPerPage ()I g
	getRecentChat ()Ljava/util/List; b
	getScale ()D f
	getTimeFactor (I)D a
	getWidth ()I d
	getWidth (D)I b
	handleChatQueueClicked (DD)Z a
	isChatFocused ()Z i
	isChatHidden ()Z h
	processPendingMessages ()V k
	removeById (I)V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;I)V a
	rescaleChat ()V a
	resetChatScroll ()V c
	scrollChat (D)V a
net/minecraft/client/gui/components/Checkbox dxb
	TEXTURE a
	TEXT_COLOR b
	selected c
	showLabel d
	onPress ()V c
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	selected ()Z a
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/components/CommandSuggestions dxc
	ARGUMENT_STYLES d
	LITERAL_STYLE c
	UNPARSED_STYLE b
	WHITESPACE_PATTERN a
	allowSuggestions u
	anchorToBottom m
	commandUsage o
	commandUsagePosition p
	commandUsageWidth q
	commandsOnly i
	currentParse r
	fillColor n
	font h
	input g
	keepSuggestions v
	lineStartOffset k
	minecraft e
	onlyShowIfCursorPastError j
	pendingSuggestions s
	screen f
	suggestionLineLimit l
	suggestions t
	calculateSuggestionSuffix (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; a
	fillNodeUsage (Lnet/minecraft/ChatFormatting;)V a
	formatChat (Ljava/lang/String;I)Lnet/minecraft/util/FormattedCharSequence; a
	formatText (Lcom/mojang/brigadier/ParseResults;Ljava/lang/String;I)Lnet/minecraft/util/FormattedCharSequence; a
	getExceptionMessage (Lcom/mojang/brigadier/exceptions/CommandSyntaxException;)Lnet/minecraft/util/FormattedCharSequence; a
	getLastWordIndex (Ljava/lang/String;)I a
	getNarrationMessage ()Ljava/lang/String; b
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	mouseScrolled (D)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	setAllowSuggestions (Z)V a
	showSuggestions (Z)V b
	sortSuggestions (Lcom/mojang/brigadier/suggestion/Suggestions;)Ljava/util/List; a
	updateCommandInfo ()V a
	updateUsageInfo ()V c
net/minecraft/client/gui/components/CommandSuggestions$SuggestionsList dxc$a
	current f
	lastMouse g
	lastNarratedEntry i
	offset e
	originalContents c
	rect b
	suggestionList d
	tabCycles h
	cycle (I)V a
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; c
	hide ()V b
	keyPressed (III)Z b
	mouseClicked (III)Z a
	mouseScrolled (D)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	select (I)V b
	useSuggestion ()V a
net/minecraft/client/gui/components/ComponentRenderUtils dxd
	INDENT a
	stripColor (Ljava/lang/String;)Ljava/lang/String; a
	wrapComponents (Lnet/minecraft/network/chat/FormattedText;ILnet/minecraft/client/gui/Font;)Ljava/util/List; a
net/minecraft/client/gui/components/ContainerObjectSelectionList dxe
	hasFocus a
	changeFocus (Z)Z b
	isSelectedItem (I)Z f
	narrationPriority ()Lnet/minecraft/client/gui/narration/NarratableEntry$NarrationPriority; t
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/components/ContainerObjectSelectionList$Entry dxe$a
	dragging c
	focused a
	lastNarratable b
	getFocused ()Lnet/minecraft/client/gui/components/events/GuiEventListener; v
	isDragging ()Z aj_
	narratables ()Ljava/util/List; b
	setDragging (Z)V b_
	setFocused (Lnet/minecraft/client/gui/components/events/GuiEventListener;)V a
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/components/CycleButton dxf
	BOOLEAN_OPTIONS b
	DEFAULT_ALT_LIST_SELECTOR a
	displayOnlyValue w
	index d
	name c
	narrationProvider t
	onValueChange u
	tooltipSupplier v
	value e
	valueStringifier s
	values r
	booleanBuilder (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/client/gui/components/CycleButton$Builder; a
	builder (Ljava/util/function/Function;)Lnet/minecraft/client/gui/components/CycleButton$Builder; a
	createDefaultNarrationMessage ()Lnet/minecraft/network/chat/MutableComponent; b
	createFullName (Ljava/lang/Object;)Lnet/minecraft/network/chat/MutableComponent; d
	createLabelForValue (Ljava/lang/Object;)Lnet/minecraft/network/chat/Component; c
	createNarrationMessage ()Lnet/minecraft/network/chat/MutableComponent; ak_
	cycleValue (I)V c
	getCycledValue (I)Ljava/lang/Object; e
	getTooltip ()Ljava/util/List; j
	getValue ()Ljava/lang/Object; a
	mouseScrolled (DDD)Z a
	onOffBuilder ()Lnet/minecraft/client/gui/components/CycleButton$Builder; k
	onOffBuilder (Z)Lnet/minecraft/client/gui/components/CycleButton$Builder; e
	onPress ()V c
	setValue (Ljava/lang/Object;)V a
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
	updateValue (Ljava/lang/Object;)V b
net/minecraft/client/gui/components/CycleButton$Builder dxf$a
	displayOnlyValue g
	initialIndex a
	initialValue b
	narrationProvider e
	tooltipSupplier d
	valueStringifier c
	values f
	create (IIIILnet/minecraft/network/chat/Component;)Lnet/minecraft/client/gui/components/CycleButton; a
	create (IIIILnet/minecraft/network/chat/Component;Lnet/minecraft/client/gui/components/CycleButton$OnValueChange;)Lnet/minecraft/client/gui/components/CycleButton; a
	displayOnlyValue ()Lnet/minecraft/client/gui/components/CycleButton$Builder; a
	withCustomNarration (Ljava/util/function/Function;)Lnet/minecraft/client/gui/components/CycleButton$Builder; a
	withInitialValue (Ljava/lang/Object;)Lnet/minecraft/client/gui/components/CycleButton$Builder; a
	withTooltip (Lnet/minecraft/client/gui/components/CycleButton$TooltipSupplier;)Lnet/minecraft/client/gui/components/CycleButton$Builder; a
	withValues (Ljava/util/List;)Lnet/minecraft/client/gui/components/CycleButton$Builder; a
	withValues (Ljava/util/List;Ljava/util/List;)Lnet/minecraft/client/gui/components/CycleButton$Builder; a
	withValues (Ljava/util/function/BooleanSupplier;Ljava/util/List;Ljava/util/List;)Lnet/minecraft/client/gui/components/CycleButton$Builder; a
	withValues ([Ljava/lang/Object;)Lnet/minecraft/client/gui/components/CycleButton$Builder; a
net/minecraft/client/gui/components/CycleButton$OnValueChange dxf$b
net/minecraft/client/gui/components/CycleButton$TooltipSupplier dxf$c
net/minecraft/client/gui/components/CycleButton$ValueListSupplier dxf$d
	create (Ljava/util/List;)Lnet/minecraft/client/gui/components/CycleButton$ValueListSupplier; a
	create (Ljava/util/function/BooleanSupplier;Ljava/util/List;Ljava/util/List;)Lnet/minecraft/client/gui/components/CycleButton$ValueListSupplier; a
	getDefaultList ()Ljava/util/List; b
	getSelectedList ()Ljava/util/List; a
net/minecraft/client/gui/components/DebugScreenOverlay dxg
	COLOR_GREY a
	GREEN r
	HEIGHTMAP_NAMES e
	MARGIN_LEFT c
	MARGIN_RIGHT b
	MARGIN_TOP d
	RED p
	YELLOW q
	block k
	clientChunk n
	font j
	lastPos m
	liquid l
	minecraft i
	serverChunk o
	bytesToMegabytes (J)J a
	clearChunkCache ()V a
	colorLerp (IIF)I a
	drawChart (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/util/FrameTimer;IIZ)V a
	drawGameInformation (Lcom/mojang/blaze3d/vertex/PoseStack;)V b
	drawSystemInformation (Lcom/mojang/blaze3d/vertex/PoseStack;)V c
	getClientChunk ()Lnet/minecraft/world/level/chunk/LevelChunk; h
	getGameInformation ()Ljava/util/List; b
	getLevel ()Lnet/minecraft/world/level/Level; f
	getPropertyValueString (Ljava/util/Map$Entry;)Ljava/lang/String; a
	getSampleColor (IIII)I a
	getServerChunk ()Lnet/minecraft/world/level/chunk/LevelChunk; g
	getServerChunkStats ()Ljava/lang/String; e
	getServerLevel ()Lnet/minecraft/server/level/ServerLevel; d
	getSystemInformation ()Ljava/util/List; c
	render (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/gui/components/EditBox dxh
	BACKGROUND_COLOR u
	BACKWARDS a
	BORDER_COLOR t
	BORDER_COLOR_FOCUSED s
	CURSOR_APPEND_CHARACTER r
	CURSOR_INSERT_COLOR e
	CURSOR_INSERT_WIDTH d
	DEFAULT_TEXT_COLOR c
	FORWARDS b
	bordered z
	canLoseFocus A
	cursorPos E
	displayPos D
	filter K
	font v
	formatter L
	frame y
	highlightPos F
	isEditable B
	maxLength x
	responder J
	shiftPressed C
	suggestion I
	textColor G
	textColorUneditable H
	value w
	canConsumeInput ()Z n
	changeFocus (Z)Z b
	charTyped (CI)Z a
	createNarrationMessage ()Lnet/minecraft/network/chat/MutableComponent; ak_
	deleteChars (I)V e
	deleteText (I)V p
	deleteWords (I)V c
	getCursorPos (I)I q
	getCursorPosition ()I o
	getHighlighted ()Ljava/lang/String; j
	getInnerWidth ()I p
	getMaxLength ()I r
	getScreenX (I)I n
	getValue ()Ljava/lang/String; b
	getWordPosition (I)I f
	getWordPosition (II)I a
	getWordPosition (IIZ)I a
	insertText (Ljava/lang/String;)V b
	isBordered ()Z s
	isEditable ()Z u
	isMouseOver (DD)Z a_
	isVisible ()Z q
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	moveCursor (I)V g
	moveCursorTo (I)V h
	moveCursorToEnd ()V m
	moveCursorToStart ()V k
	onFocusedChanged (Z)V c
	onValueChange (Ljava/lang/String;)V d
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	renderHighlight (IIII)V a
	setBordered (Z)V f
	setCanLoseFocus (Z)V h
	setCursorPosition (I)V i
	setEditable (Z)V g
	setFilter (Ljava/util/function/Predicate;)V a
	setFocus (Z)V e
	setFormatter (Ljava/util/function/BiFunction;)V a
	setHighlightPos (I)V m
	setMaxLength (I)V j
	setResponder (Ljava/util/function/Consumer;)V a
	setSuggestion (Ljava/lang/String;)V c
	setTextColor (I)V k
	setTextColorUneditable (I)V l
	setValue (Ljava/lang/String;)V a
	setVisible (Z)V i
	setX (I)V o
	tick ()V a
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/components/ImageButton dxi
	resourceLocation a
	textureHeight u
	textureWidth e
	xTexStart b
	yDiffTex d
	yTexStart c
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	setPosition (II)V a
net/minecraft/client/gui/components/LerpingBossEvent dxj
	LERP_MILLISECONDS j
	setTime i
	targetPercent h
	getProgress ()F k
	setProgress (F)V a
net/minecraft/client/gui/components/LockIconButton dxk
	locked a
	createNarrationMessage ()Lnet/minecraft/network/chat/MutableComponent; ak_
	isLocked ()Z a
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	setLocked (Z)V e
net/minecraft/client/gui/components/LockIconButton$Icon dxk$a
	$VALUES i
	LOCKED a
	LOCKED_DISABLED c
	LOCKED_HOVER b
	UNLOCKED d
	UNLOCKED_DISABLED f
	UNLOCKED_HOVER e
	x g
	y h
	$values ()[Lnet/minecraft/client/gui/components/LockIconButton$Icon; c
	getX ()I a
	getY ()I b
net/minecraft/client/gui/components/MultiLineLabel dxl
	EMPTY a
	create (Lnet/minecraft/client/gui/Font;Ljava/util/List;)Lnet/minecraft/client/gui/components/MultiLineLabel; a
	create (Lnet/minecraft/client/gui/Font;Lnet/minecraft/network/chat/FormattedText;I)Lnet/minecraft/client/gui/components/MultiLineLabel; a
	create (Lnet/minecraft/client/gui/Font;Lnet/minecraft/network/chat/FormattedText;II)Lnet/minecraft/client/gui/components/MultiLineLabel; a
	create (Lnet/minecraft/client/gui/Font;[Lnet/minecraft/network/chat/Component;)Lnet/minecraft/client/gui/components/MultiLineLabel; a
	createFixed (Lnet/minecraft/client/gui/Font;Ljava/util/List;)Lnet/minecraft/client/gui/components/MultiLineLabel; b
	getLineCount ()I a
	renderCentered (Lcom/mojang/blaze3d/vertex/PoseStack;II)I a
	renderCentered (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)I a
	renderLeftAligned (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)I b
	renderLeftAlignedNoShadow (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)I c
net/minecraft/client/gui/components/MultiLineLabel$TextWithWidth dxl$a
	text a
	width b
net/minecraft/client/gui/components/ObjectSelectionList dxm
	USAGE_NARRATION a
	inFocus o
	changeFocus (Z)Z b
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/components/ObjectSelectionList$Entry dxm$a
	changeFocus (Z)Z b
	getNarration ()Lnet/minecraft/network/chat/Component; a
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/components/OptionsList dxn
	addBig (Lnet/minecraft/client/Option;)I a
	addSmall (Lnet/minecraft/client/Option;Lnet/minecraft/client/Option;)V a
	addSmall ([Lnet/minecraft/client/Option;)V a
	findOption (Lnet/minecraft/client/Option;)Lnet/minecraft/client/gui/components/AbstractWidget; b
	getMouseOver (DD)Ljava/util/Optional; c
	getRowWidth ()I d
	getScrollbarPosition ()I e
net/minecraft/client/gui/components/OptionsList$Entry dxn$a
	children b
	options a
	big (Lnet/minecraft/client/Options;ILnet/minecraft/client/Option;)Lnet/minecraft/client/gui/components/OptionsList$Entry; a
	children ()Ljava/util/List; j
	narratables ()Ljava/util/List; b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	small (Lnet/minecraft/client/Options;ILnet/minecraft/client/Option;Lnet/minecraft/client/Option;)Lnet/minecraft/client/gui/components/OptionsList$Entry; a
net/minecraft/client/gui/components/PlayerTabOverlay dxo
	HEART_EMPTY_CONTAINER b
	HEART_EMPTY_CONTAINER_BLINKING c
	HEART_FULL d
	HEART_GHOST_FULL k
	HEART_GHOST_HALF_FULL l
	HEART_GOLDEN_FULL i
	HEART_GOLDEN_HALF_FULL j
	HEART_HALF_FULL e
	MAX_ROWS_PER_COL a
	PLAYER_ORDERING m
	footer p
	gui o
	header q
	minecraft n
	visibilityId r
	visible s
	decorateName (Lnet/minecraft/client/multiplayer/PlayerInfo;Lnet/minecraft/network/chat/MutableComponent;)Lnet/minecraft/network/chat/Component; a
	getNameForDisplay (Lnet/minecraft/client/multiplayer/PlayerInfo;)Lnet/minecraft/network/chat/Component; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;ILnet/minecraft/world/scores/Scoreboard;Lnet/minecraft/world/scores/Objective;)V a
	renderPingIcon (Lcom/mojang/blaze3d/vertex/PoseStack;IIILnet/minecraft/client/multiplayer/PlayerInfo;)V a
	renderTablistScore (Lnet/minecraft/world/scores/Objective;ILjava/lang/String;IILnet/minecraft/client/multiplayer/PlayerInfo;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	reset ()V a
	setFooter (Lnet/minecraft/network/chat/Component;)V a
	setHeader (Lnet/minecraft/network/chat/Component;)V b
	setVisible (Z)V a
net/minecraft/client/gui/components/PlayerTabOverlay$PlayerInfoComparator dxo$a
	compare (Lnet/minecraft/client/multiplayer/PlayerInfo;Lnet/minecraft/client/multiplayer/PlayerInfo;)I a
net/minecraft/client/gui/components/SliderButton dxp
	option c
	tooltip d
	applyValue ()V a
	getTooltip ()Ljava/util/List; j
	updateMessage ()V b
net/minecraft/client/gui/components/StateSwitchingButton dxq
	isStateTriggered b
	resourceLocation a
	xDiffTex e
	xTexStart c
	yDiffTex r
	yTexStart d
	initTextureValues (IIIILnet/minecraft/resources/ResourceLocation;)V a
	isStateTriggered ()Z a
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	setPosition (II)V a
	setStateTriggered (Z)V e
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/components/SubtitleOverlay dxr
	DISPLAY_TIME a
	isListening d
	minecraft b
	subtitles c
	onPlaySound (Lnet/minecraft/client/resources/sounds/SoundInstance;Lnet/minecraft/client/sounds/WeighedSoundEvents;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/gui/components/SubtitleOverlay$Subtitle dxr$a
	location c
	text a
	time b
	getLocation ()Lnet/minecraft/world/phys/Vec3; c
	getText ()Lnet/minecraft/network/chat/Component; a
	getTime ()J b
	refresh (Lnet/minecraft/world/phys/Vec3;)V a
net/minecraft/client/gui/components/TooltipAccessor dxs
	getTooltip ()Ljava/util/List; j
net/minecraft/client/gui/components/VolumeSlider dxt
	source c
	applyValue ()V a
	updateMessage ()V b
net/minecraft/client/gui/components/Widget dxu
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/client/gui/components/events/AbstractContainerEventHandler dxv
	focused a
	isDragging b
	getFocused ()Lnet/minecraft/client/gui/components/events/GuiEventListener; v
	isDragging ()Z aj_
	setDragging (Z)V b_
	setFocused (Lnet/minecraft/client/gui/components/events/GuiEventListener;)V a
net/minecraft/client/gui/components/events/ContainerEventHandler dxw
	changeFocus (Z)Z b
	charTyped (CI)Z a
	children ()Ljava/util/List; j
	getChildAt (DD)Ljava/util/Optional; d
	getFocused ()Lnet/minecraft/client/gui/components/events/GuiEventListener; v
	isDragging ()Z aj_
	keyPressed (III)Z a
	keyReleased (III)Z b
	magicalSpecialHackyFocus (Lnet/minecraft/client/gui/components/events/GuiEventListener;)V c
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseReleased (DDI)Z c
	mouseScrolled (DDD)Z a
	setDragging (Z)V b_
	setFocused (Lnet/minecraft/client/gui/components/events/GuiEventListener;)V a
	setInitialFocus (Lnet/minecraft/client/gui/components/events/GuiEventListener;)V b
net/minecraft/client/gui/components/events/GuiEventListener dxx
	changeFocus (Z)Z b
	charTyped (CI)Z a
	isMouseOver (DD)Z a_
	keyPressed (III)Z a
	keyReleased (III)Z b
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseMoved (DD)V e
	mouseReleased (DDI)Z c
	mouseScrolled (DDD)Z a
net/minecraft/client/gui/components/spectator/SpectatorGui dya
	FADE_OUT_DELAY c
	FADE_OUT_TIME d
	SPECTATOR_LOCATION a
	WIDGETS_LOCATION b
	lastSelectionTime i
	menu j
	minecraft e
	getHotbarAlpha ()F c
	isMenuActive ()Z a
	onHotbarSelected (I)V a
	onMouseMiddleClick ()V b
	onMouseScrolled (D)V a
	onSpectatorMenuClosed (Lnet/minecraft/client/gui/spectator/SpectatorMenu;)V a
	renderHotbar (Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	renderPage (Lcom/mojang/blaze3d/vertex/PoseStack;FIILnet/minecraft/client/gui/spectator/categories/SpectatorPage;)V a
	renderSlot (Lcom/mojang/blaze3d/vertex/PoseStack;IIFFLnet/minecraft/client/gui/spectator/SpectatorMenuItem;)V a
	renderTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/gui/components/toasts/AdvancementToast dyc
	advancement c
	playedSound d
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/components/toasts/ToastComponent;J)Lnet/minecraft/client/gui/components/toasts/Toast$Visibility; a
net/minecraft/client/gui/components/toasts/RecipeToast dyd
	DESCRIPTION_TEXT e
	DISPLAY_TIME c
	TITLE_TEXT d
	changed h
	lastChanged g
	recipes f
	addItem (Lnet/minecraft/world/item/crafting/Recipe;)V a
	addOrUpdate (Lnet/minecraft/client/gui/components/toasts/ToastComponent;Lnet/minecraft/world/item/crafting/Recipe;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/components/toasts/ToastComponent;J)Lnet/minecraft/client/gui/components/toasts/Toast$Visibility; a
net/minecraft/client/gui/components/toasts/SystemToast dye
	DISPLAY_TIME c
	MAX_LINE_SIZE d
	changed i
	id e
	lastChanged h
	messageLines g
	title f
	width j
	add (Lnet/minecraft/client/gui/components/toasts/ToastComponent;Lnet/minecraft/client/gui/components/toasts/SystemToast$SystemToastIds;Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)V a
	addOrUpdate (Lnet/minecraft/client/gui/components/toasts/ToastComponent;Lnet/minecraft/client/gui/components/toasts/SystemToast$SystemToastIds;Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)V b
	getToken ()Ljava/lang/Object; c
	getToken ()Lnet/minecraft/client/gui/components/toasts/SystemToast$SystemToastIds; b
	multiline (Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/gui/components/toasts/SystemToast$SystemToastIds;Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/client/gui/components/toasts/SystemToast; a
	nullToEmpty (Lnet/minecraft/network/chat/Component;)Lcom/google/common/collect/ImmutableList; a
	onPackCopyFailure (Lnet/minecraft/client/Minecraft;Ljava/lang/String;)V c
	onWorldAccessFailure (Lnet/minecraft/client/Minecraft;Ljava/lang/String;)V a
	onWorldDeleteFailure (Lnet/minecraft/client/Minecraft;Ljava/lang/String;)V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/components/toasts/ToastComponent;J)Lnet/minecraft/client/gui/components/toasts/Toast$Visibility; a
	renderBackgroundRow (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/components/toasts/ToastComponent;IIII)V a
	reset (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)V a
	width ()I a
net/minecraft/client/gui/components/toasts/SystemToast$SystemToastIds dye$a
	$VALUES h
	NARRATOR_TOGGLE b
	PACK_COPY_FAILURE g
	PACK_LOAD_FAILURE e
	TUTORIAL_HINT a
	WORLD_ACCESS_FAILURE f
	WORLD_BACKUP c
	WORLD_GEN_SETTINGS_TRANSFER d
	$values ()[Lnet/minecraft/client/gui/components/toasts/SystemToast$SystemToastIds; a
net/minecraft/client/gui/components/toasts/Toast dyf
	NO_TOKEN b
	TEXTURE a
	getToken ()Ljava/lang/Object; c
	height ()I d
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/components/toasts/ToastComponent;J)Lnet/minecraft/client/gui/components/toasts/Toast$Visibility; a
	width ()I a
net/minecraft/client/gui/components/toasts/Toast$Visibility dyf$a
	$VALUES d
	HIDE b
	SHOW a
	soundEvent c
	$values ()[Lnet/minecraft/client/gui/components/toasts/Toast$Visibility; a
	playSound (Lnet/minecraft/client/sounds/SoundManager;)V a
net/minecraft/client/gui/components/toasts/ToastComponent dyg
	VISIBLE_TOASTS a
	minecraft b
	queued d
	visible c
	addToast (Lnet/minecraft/client/gui/components/toasts/Toast;)V a
	clear ()V a
	getMinecraft ()Lnet/minecraft/client/Minecraft; b
	getToast (Ljava/lang/Class;Ljava/lang/Object;)Lnet/minecraft/client/gui/components/toasts/Toast; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/gui/components/toasts/ToastComponent$ToastInstance dyg$a
	ANIMATION_TIME b
	animationTime d
	toast c
	visibility f
	visibleTime e
	getToast ()Lnet/minecraft/client/gui/components/toasts/Toast; a
	getVisibility (J)F a
	render (IILcom/mojang/blaze3d/vertex/PoseStack;)Z a
net/minecraft/client/gui/components/toasts/TutorialToast dyh
	PROGRESS_BAR_HEIGHT d
	PROGRESS_BAR_WIDTH c
	PROGRESS_BAR_X e
	PROGRESS_BAR_Y f
	icon g
	lastProgress l
	lastProgressTime k
	message i
	progress m
	progressable n
	title h
	visibility j
	hide ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/components/toasts/ToastComponent;J)Lnet/minecraft/client/gui/components/toasts/Toast$Visibility; a
	updateProgress (F)V a
net/minecraft/client/gui/components/toasts/TutorialToast$Icons dyh$a
	$VALUES j
	MOUSE b
	MOVEMENT_KEYS a
	RECIPE_BOOK d
	RIGHT_CLICK g
	SOCIAL_INTERACTIONS f
	TREE c
	WOODEN_PLANKS e
	x h
	y i
	$values ()[Lnet/minecraft/client/gui/components/toasts/TutorialToast$Icons; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/GuiComponent;II)V a
net/minecraft/client/gui/font/AllMissingGlyphProvider dyj
	getGlyph (I)Lcom/mojang/blaze3d/font/RawGlyph; a
	getSupportedGlyphs ()Lit/unimi/dsi/fastutil/ints/IntSet; a
net/minecraft/client/gui/font/FontManager dyk
	FONTS_PATH c
	LOGGER b
	MISSING_FONT a
	fontSets e
	missingFontSet d
	reloadListener h
	renames g
	textureManager f
	createFont ()Lnet/minecraft/client/gui/Font; a
	getReloadListener ()Lnet/minecraft/server/packs/resources/PreparableReloadListener; b
	setRenames (Ljava/util/Map;)V a
net/minecraft/client/gui/font/FontSet dyl
	RANDOM c
	SPACE_GLYPH a
	SPACE_INFO b
	glyphInfos j
	glyphs i
	glyphsByWidth k
	missingGlyph f
	name e
	providers h
	textureManager d
	textures l
	whiteGlyph g
	closeProviders ()V b
	closeTextures ()V c
	getGlyph (I)Lnet/minecraft/client/gui/font/glyphs/BakedGlyph; b
	getGlyphInfo (I)Lcom/mojang/blaze3d/font/GlyphInfo; a
	getRandomGlyph (Lcom/mojang/blaze3d/font/GlyphInfo;)Lnet/minecraft/client/gui/font/glyphs/BakedGlyph; a
	getRaw (I)Lcom/mojang/blaze3d/font/RawGlyph; c
	reload (Ljava/util/List;)V a
	stitch (Lcom/mojang/blaze3d/font/RawGlyph;)Lnet/minecraft/client/gui/font/glyphs/BakedGlyph; a
	whiteGlyph ()Lnet/minecraft/client/gui/font/glyphs/BakedGlyph; a
net/minecraft/client/gui/font/FontTexture dym
	SIZE e
	colored j
	name f
	normalType g
	polygonOffsetType i
	root k
	seeThroughType h
	add (Lcom/mojang/blaze3d/font/RawGlyph;)Lnet/minecraft/client/gui/font/glyphs/BakedGlyph; a
	getName ()Lnet/minecraft/resources/ResourceLocation; a
	load (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
net/minecraft/client/gui/font/FontTexture$Node dym$a
	height d
	left e
	occupied g
	right f
	width c
	x a
	y b
	insert (Lcom/mojang/blaze3d/font/RawGlyph;)Lnet/minecraft/client/gui/font/FontTexture$Node; a
net/minecraft/client/gui/font/TextFieldHelper dyn
	cursorPos f
	getClipboardFn c
	getMessageFn a
	selectionPos g
	setClipboardFn d
	setMessageFn b
	stringValidator e
	charTyped (C)Z a
	clampToMsgLength (I)I g
	copy ()V c
	createClipboardGetter (Lnet/minecraft/client/Minecraft;)Ljava/util/function/Supplier; a
	createClipboardSetter (Lnet/minecraft/client/Minecraft;)Ljava/util/function/Consumer; c
	cut ()V a
	deleteSelection (Ljava/lang/String;)Ljava/lang/String; c
	getClipboardContents (Lnet/minecraft/client/Minecraft;)Ljava/lang/String; b
	getCursorPos ()I g
	getSelected (Ljava/lang/String;)Ljava/lang/String; b
	getSelectionPos ()I h
	insertText (Ljava/lang/String;)V a
	insertText (Ljava/lang/String;Ljava/lang/String;)V a
	isSelecting ()Z i
	keyPressed (I)Z a
	moveByChars (I)V b
	moveByChars (IZ)V a
	moveByWords (I)V c
	moveByWords (IZ)V b
	paste ()V b
	removeCharsFromCursor (I)V d
	resetSelectionIfNeeded (Z)V a
	selectAll ()V d
	setClipboardContents (Lnet/minecraft/client/Minecraft;Ljava/lang/String;)V a
	setCursorPos (I)V e
	setCursorPos (IZ)V c
	setCursorToEnd ()V f
	setCursorToEnd (Z)V c
	setCursorToStart ()V e
	setCursorToStart (Z)V b
	setSelectionPos (I)V f
	setSelectionRange (II)V a
net/minecraft/client/gui/font/glyphs/BakedGlyph dyo
	down k
	left h
	normalType a
	polygonOffsetType c
	right i
	seeThroughType b
	u0 d
	u1 e
	up j
	v0 f
	v1 g
	render (ZFFLcom/mojang/math/Matrix4f;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFI)V a
	renderEffect (Lnet/minecraft/client/gui/font/glyphs/BakedGlyph$Effect;Lcom/mojang/math/Matrix4f;Lcom/mojang/blaze3d/vertex/VertexConsumer;I)V a
	renderType (Lnet/minecraft/client/gui/Font$DisplayMode;)Lnet/minecraft/client/renderer/RenderType; a
net/minecraft/client/gui/font/glyphs/BakedGlyph$Effect dyo$a
	a i
	b h
	depth e
	r f
	x0 a
	x1 c
	y0 b
	y1 d
net/minecraft/client/gui/font/glyphs/EmptyGlyph dyp
	render (ZFFLcom/mojang/math/Matrix4f;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFI)V a
net/minecraft/client/gui/font/glyphs/MissingGlyph dyq
	$VALUES e
	IMAGE_DATA d
	INSTANCE a
	MISSING_IMAGE_HEIGHT c
	MISSING_IMAGE_WIDTH b
	$values ()[Lnet/minecraft/client/gui/font/glyphs/MissingGlyph; m
	getOversample ()F h
	getPixelHeight ()I f
	getPixelWidth ()I e
	isColored ()Z g
	upload (II)V a
net/minecraft/client/gui/font/glyphs/WhiteGlyph dyr
	$VALUES e
	HEIGHT c
	IMAGE_DATA d
	INSTANCE a
	WIDTH b
	$values ()[Lnet/minecraft/client/gui/font/glyphs/WhiteGlyph; m
	getOversample ()F h
	getPixelHeight ()I f
	getPixelWidth ()I e
	isColored ()Z g
	upload (II)V a
net/minecraft/client/gui/font/providers/BitmapProvider dyu
	LOGGER a
	glyphs c
	image b
	getGlyph (I)Lcom/mojang/blaze3d/font/RawGlyph; a
	getSupportedGlyphs ()Lit/unimi/dsi/fastutil/ints/IntSet; a
net/minecraft/client/gui/font/providers/BitmapProvider$Builder dyu$a
	ascent d
	chars b
	height c
	texture a
	create (Lnet/minecraft/server/packs/resources/ResourceManager;)Lcom/mojang/blaze3d/font/GlyphProvider; a
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/gui/font/providers/BitmapProvider$Builder; a
	getActualGlyphWidth (Lcom/mojang/blaze3d/platform/NativeImage;IIII)I a
net/minecraft/client/gui/font/providers/BitmapProvider$Glyph dyu$b
	advance g
	ascent h
	height f
	image b
	offsetX c
	offsetY d
	scale a
	width e
	getBearingY ()F b
	getOversample ()F h
	getPixelHeight ()I f
	getPixelWidth ()I e
	isColored ()Z g
	upload (II)V a
net/minecraft/client/gui/font/providers/GlyphProviderBuilder dyv
	create (Lnet/minecraft/server/packs/resources/ResourceManager;)Lcom/mojang/blaze3d/font/GlyphProvider; a
net/minecraft/client/gui/font/providers/GlyphProviderBuilderType dyw
	$VALUES g
	BITMAP a
	BY_NAME d
	LEGACY_UNICODE c
	TTF b
	factory f
	name e
	$values ()[Lnet/minecraft/client/gui/font/providers/GlyphProviderBuilderType; a
	byName (Ljava/lang/String;)Lnet/minecraft/client/gui/font/providers/GlyphProviderBuilderType; a
	create (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/gui/font/providers/GlyphProviderBuilder; a
net/minecraft/client/gui/font/providers/LegacyUnicodeBitmapsProvider dyx
	CHARS_PER_SHEET c
	LOGGER a
	TEXTURE_SIZE d
	UNICODE_SHEETS b
	resourceManager e
	sizes f
	texturePattern g
	textures h
	getGlyph (I)Lcom/mojang/blaze3d/font/RawGlyph; a
	getLeft (B)I a
	getRight (B)I b
	getSheetLocation (I)Lnet/minecraft/resources/ResourceLocation; b
	getSupportedGlyphs ()Lit/unimi/dsi/fastutil/ints/IntSet; a
	loadTexture (Lnet/minecraft/resources/ResourceLocation;)Lcom/mojang/blaze3d/platform/NativeImage; a
net/minecraft/client/gui/font/providers/LegacyUnicodeBitmapsProvider$Builder dyx$a
	metadata a
	texturePattern b
	create (Lnet/minecraft/server/packs/resources/ResourceManager;)Lcom/mojang/blaze3d/font/GlyphProvider; a
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/gui/font/providers/GlyphProviderBuilder; a
net/minecraft/client/gui/font/providers/LegacyUnicodeBitmapsProvider$Glyph dyx$b
	height b
	source e
	sourceX c
	sourceY d
	width a
	getBoldOffset ()F c
	getOversample ()F h
	getPixelHeight ()I f
	getPixelWidth ()I e
	getShadowOffset ()F d
	isColored ()Z g
	upload (II)V a
net/minecraft/client/gui/font/providers/TrueTypeGlyphProviderBuilder dyy
	LOGGER a
	location b
	oversample d
	shiftX e
	shiftY f
	size c
	skip g
	create (Lnet/minecraft/server/packs/resources/ResourceManager;)Lcom/mojang/blaze3d/font/GlyphProvider; a
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/gui/font/providers/GlyphProviderBuilder; a
net/minecraft/client/gui/narration/NarratableEntry dza
	isActive ()Z al_
	narrationPriority ()Lnet/minecraft/client/gui/narration/NarratableEntry$NarrationPriority; t
net/minecraft/client/gui/narration/NarratableEntry$NarrationPriority dza$a
	$VALUES d
	FOCUSED c
	HOVERED b
	NONE a
	$values ()[Lnet/minecraft/client/gui/narration/NarratableEntry$NarrationPriority; b
	isTerminal ()Z a
net/minecraft/client/gui/narration/NarratedElementType dzb
	$VALUES e
	HINT c
	POSITION b
	TITLE a
	USAGE d
	$values ()[Lnet/minecraft/client/gui/narration/NarratedElementType; a
net/minecraft/client/gui/narration/NarrationElementOutput dzc
	add (Lnet/minecraft/client/gui/narration/NarratedElementType;Ljava/lang/String;)V a
	add (Lnet/minecraft/client/gui/narration/NarratedElementType;Lnet/minecraft/client/gui/narration/NarrationThunk;)V a
	add (Lnet/minecraft/client/gui/narration/NarratedElementType;Lnet/minecraft/network/chat/Component;)V a
	add (Lnet/minecraft/client/gui/narration/NarratedElementType;[Lnet/minecraft/network/chat/Component;)V a
	nest ()Lnet/minecraft/client/gui/narration/NarrationElementOutput; a
net/minecraft/client/gui/narration/NarrationSupplier dzd
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/narration/NarrationThunk dze
	EMPTY a
	contents b
	converter c
	from (Ljava/lang/String;)Lnet/minecraft/client/gui/narration/NarrationThunk; a
	from (Ljava/util/List;)Lnet/minecraft/client/gui/narration/NarrationThunk; a
	from (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/client/gui/narration/NarrationThunk; a
	getText (Ljava/util/function/Consumer;)V a
net/minecraft/client/gui/narration/ScreenNarrationCollector dzf
	entries b
	generation a
	collectNarrationText (Z)Ljava/lang/String; a
	update (Ljava/util/function/Consumer;)V a
net/minecraft/client/gui/narration/ScreenNarrationCollector$EntryKey dzf$a
	depth b
	type a
net/minecraft/client/gui/narration/ScreenNarrationCollector$NarrationEntry dzf$b
	alreadyNarrated c
	contents a
	generation b
	update (ILnet/minecraft/client/gui/narration/NarrationThunk;)Lnet/minecraft/client/gui/narration/ScreenNarrationCollector$NarrationEntry; a
net/minecraft/client/gui/narration/ScreenNarrationCollector$Output dzf$c
	depth b
	add (Lnet/minecraft/client/gui/narration/NarratedElementType;Lnet/minecraft/client/gui/narration/NarrationThunk;)V a
	nest ()Lnet/minecraft/client/gui/narration/NarrationElementOutput; a
net/minecraft/client/gui/screens/AccessibilityOptionsScreen dzi
	GUIDE_LINK n
	OPTIONS c
	createFooter ()V f
net/minecraft/client/gui/screens/AlertScreen dzj
	callback c
	message n
	okButton b
	text a
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/client/gui/screens/BackupConfirmScreen dzk
	description n
	eraseCache q
	id b
	lastScreen c
	listener a
	message p
	promptForCacheErase o
	init ()V b
	keyPressed (III)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	shouldCloseOnEsc ()Z ag_
net/minecraft/client/gui/screens/BackupConfirmScreen$Listener dzk$a
net/minecraft/client/gui/screens/ChatOptionsScreen dzl
	CHAT_OPTIONS c
net/minecraft/client/gui/screens/ChatScreen dzm
	MOUSE_SCROLL_SPEED a
	USAGE_TEXT c
	commandSuggestions q
	historyBuffer n
	historyPos o
	initial p
	input b
	init ()V b
	insertText (Ljava/lang/String;Z)V a
	isPauseScreen ()Z ai_
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	mouseScrolled (DDD)Z a
	moveInHistory (I)V a
	onEdited (Ljava/lang/String;)V b
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	setChatLine (Ljava/lang/String;)V c
	tick ()V d
	updateNarrationState (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/screens/ConfirmLinkScreen dzn
	COPY_BUTTON_TEXT n
	WARNING_TEXT o
	showWarning q
	url p
	addButtons (I)V a
	copyToClipboard ()V h
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/client/gui/screens/ConfirmScreen dzo
	LABEL_Y n
	callback c
	delayTicker q
	exitButtons r
	message p
	noButton b
	title2 o
	yesButton a
	addButtons (I)V a
	addExitButton (Lnet/minecraft/client/gui/components/Button;)V a
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; af_
	init ()V b
	keyPressed (III)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setDelay (I)V b
	shouldCloseOnEsc ()Z ag_
	tick ()V d
net/minecraft/client/gui/screens/ConnectScreen dzp
	LOGGER c
	NARRATION_DELAY_MS n
	UNIQUE_THREAD_ID b
	UNKNOWN_HOST_MESSAGE a
	aborted p
	connection o
	lastNarration s
	parent q
	status r
	connect (Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/multiplayer/resolver/ServerAddress;)V a
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	shouldCloseOnEsc ()Z ag_
	startConnecting (Lnet/minecraft/client/gui/screens/Screen;Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/multiplayer/resolver/ServerAddress;Lnet/minecraft/client/multiplayer/ServerData;)V a
	tick ()V d
	updateStatus (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/client/gui/screens/CreateBuffetWorldScreen dzq
	BIOME_SELECT_INFO a
	applySettings c
	biome p
	biomes n
	doneButton q
	list o
	parent b
	init ()V b
	onClose ()V ah_
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	updateButtonValidity ()V h
net/minecraft/client/gui/screens/CreateBuffetWorldScreen$BiomeList dzq$a
	isFocused ()Z b
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/screens/CreateBuffetWorldScreen$BiomeList$Entry;)V a
net/minecraft/client/gui/screens/CreateBuffetWorldScreen$BiomeList$Entry dzq$a$a
	biome b
	name c
	getNarration ()Lnet/minecraft/network/chat/Component; a
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/screens/CreateFlatWorldScreen dzr
	SLOT_BG_SIZE c
	SLOT_BG_X o
	SLOT_BG_Y p
	SLOT_FG_X q
	SLOT_FG_Y r
	SLOT_STAT_HEIGHT n
	SLOT_TEX_SIZE b
	applySettings s
	columnHeight v
	columnType u
	deleteLayerButton x
	generator t
	list w
	parent a
	hasValidSelection ()Z w
	init ()V b
	onClose ()V ah_
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setConfig (Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings;)V a
	settings ()Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings; h
	updateButtonValidity ()V u
net/minecraft/client/gui/screens/CreateFlatWorldScreen$DetailsList dzr$a
	getScrollbarPosition ()I e
	isFocused ()Z b
	resetRows ()V f
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/screens/CreateFlatWorldScreen$DetailsList$Entry;)V a
net/minecraft/client/gui/screens/CreateFlatWorldScreen$DetailsList$Entry dzr$a$a
	blitSlot (Lcom/mojang/blaze3d/vertex/PoseStack;IILnet/minecraft/world/item/ItemStack;)V a
	blitSlotBg (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	getDisplayItem (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getNarration ()Lnet/minecraft/network/chat/Component; a
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/screens/DatapackLoadFailureScreen dzs
	callback b
	message a
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	shouldCloseOnEsc ()Z ag_
net/minecraft/client/gui/screens/DeathScreen dzt
	causeOfDeath b
	deathScore n
	delayTicker a
	exitButtons o
	hardcore c
	confirmResult (Z)V c
	exitToTitleScreen ()V h
	getClickedComponentStyleAt (I)Lnet/minecraft/network/chat/Style; a
	init ()V b
	isPauseScreen ()Z ai_
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	shouldCloseOnEsc ()Z ag_
	tick ()V d
net/minecraft/client/gui/screens/DemoIntroScreen dzu
	DEMO_BACKGROUND_LOCATION a
	durationMessage c
	movementMessage b
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/gui/screens/DirectJoinServerScreen dzv
	ENTER_IP_LABEL a
	callback o
	ipEdit n
	lastScreen p
	selectButton b
	serverData c
	init ()V b
	keyPressed (III)Z a
	onClose ()V ah_
	onSelect ()V h
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	tick ()V d
	updateSelectButtonStatus ()V u
net/minecraft/client/gui/screens/DisconnectedScreen dzw
	message b
	parent c
	reason a
	textHeight n
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	shouldCloseOnEsc ()Z ag_
net/minecraft/client/gui/screens/EditServerScreen dzx
	IP_LABEL b
	NAME_LABEL a
	addButton c
	callback n
	ipEdit p
	lastScreen r
	nameEdit q
	serverData o
	init ()V b
	onAdd ()V h
	onClose ()V ah_
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	tick ()V d
	updateAddButtonStatus ()V u
net/minecraft/client/gui/screens/ErrorScreen dzy
	message a
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	shouldCloseOnEsc ()Z ag_
net/minecraft/client/gui/screens/GenericDirtMessageScreen dzz
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	shouldCloseOnEsc ()Z ag_
net/minecraft/client/gui/screens/InBedChatScreen eaa
	init ()V b
	keyPressed (III)Z a
	onClose ()V ah_
	sendWakeUp ()V h
net/minecraft/client/gui/screens/LanguageSelectScreen eab
	WARNING_LABEL c
	languageManager o
	packSelectionList n
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/client/gui/screens/LanguageSelectScreen$LanguageSelectionList eab$a
	getRowWidth ()I d
	getScrollbarPosition ()I e
	isFocused ()Z b
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/gui/screens/LanguageSelectScreen$LanguageSelectionList$Entry eab$a$a
	language b
	getNarration ()Lnet/minecraft/network/chat/Component; a
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	select ()V b
net/minecraft/client/gui/screens/LevelLoadingScreen eac
	COLORS o
	NARRATION_DELAY_MS a
	done n
	lastNarration c
	progressListener b
	getFormattedProgress ()Ljava/lang/String; h
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderChunks (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/server/level/progress/StoringChunkProgressListener;IIII)V a
	shouldCloseOnEsc ()Z ag_
	updateNarratedWidget (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V b
net/minecraft/client/gui/screens/LoadingOverlay ead
	BRAND_BACKGROUND i
	FADE_IN_TIME b
	FADE_OUT_TIME a
	LOGO_BACKGROUND_COLOR d
	LOGO_BACKGROUND_COLOR_DARK e
	LOGO_HALF m
	LOGO_OVERLAP n
	LOGO_QUARTER l
	LOGO_QUARTER_FLOAT k
	LOGO_SCALE j
	MOJANG_STUDIOS_LOGO_LOCATION c
	SMOOTHING o
	currentProgress t
	fadeIn s
	fadeInStart v
	fadeOutStart u
	minecraft p
	onFinish r
	reload q
	drawProgressBar (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIF)V a
	isPauseScreen ()Z a
	registerTextures (Lnet/minecraft/client/Minecraft;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	replaceAlpha (II)I a
net/minecraft/client/gui/screens/LoadingOverlay$LogoTexture ead$a
	getTextureImage (Lnet/minecraft/server/packs/resources/ResourceManager;)Lnet/minecraft/client/renderer/texture/SimpleTexture$TextureImage; b
net/minecraft/client/gui/screens/MenuScreens eae
	LOGGER a
	SCREENS b
	create (Lnet/minecraft/world/inventory/MenuType;Lnet/minecraft/client/Minecraft;ILnet/minecraft/network/chat/Component;)V a
	getConstructor (Lnet/minecraft/world/inventory/MenuType;)Lnet/minecraft/client/gui/screens/MenuScreens$ScreenConstructor; a
	register (Lnet/minecraft/world/inventory/MenuType;Lnet/minecraft/client/gui/screens/MenuScreens$ScreenConstructor;)V a
	selfTest ()Z a
net/minecraft/client/gui/screens/MenuScreens$ScreenConstructor eae$a
	fromPacket (Lnet/minecraft/network/chat/Component;Lnet/minecraft/world/inventory/MenuType;Lnet/minecraft/client/Minecraft;I)V a
net/minecraft/client/gui/screens/MouseSettingsScreen eaf
	OPTIONS n
	list c
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/client/gui/screens/OptionsScreen eag
	OPTION_SCREEN_OPTIONS a
	difficultyButton n
	lastScreen b
	lockButton o
	options c
	init ()V b
	lockCallback (Z)V c
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	updatePackList (Lnet/minecraft/server/packs/repository/PackRepository;)V a
net/minecraft/client/gui/screens/OptionsSubScreen eah
	lastScreen a
	options b
	onClose ()V ah_
	removed ()V e
	tooltipAt (Lnet/minecraft/client/gui/components/OptionsList;II)Ljava/util/List; a
net/minecraft/client/gui/screens/OutOfMemoryScreen eai
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	shouldCloseOnEsc ()Z ag_
net/minecraft/client/gui/screens/Overlay eaj
	isPauseScreen ()Z a
net/minecraft/client/gui/screens/PauseScreen eak
	URL_BUGS c
	URL_FEEDBACK_RELEASE b
	URL_FEEDBACK_SNAPSHOT a
	showPauseMenu n
	createPauseMenu ()V h
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	tick ()V d
net/minecraft/client/gui/screens/PopupScreen eal
	BUTTON_HEIGHT c
	BUTTON_MARGIN b
	BUTTON_PADDING a
	buttonOptions p
	buttonWidth s
	contentTop r
	message o
	messageLines q
	narrationMessage n
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; af_
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	shouldCloseOnEsc ()Z ag_
net/minecraft/client/gui/screens/PopupScreen$ButtonOption eal$a
	message a
	onPress b
net/minecraft/client/gui/screens/PresetFlatWorldScreen eam
	DEFAULT_BIOME t
	LOGGER a
	PRESETS s
	SLOT_BG_SIZE c
	SLOT_BG_X o
	SLOT_BG_Y p
	SLOT_FG_X q
	SLOT_FG_Y r
	SLOT_STAT_HEIGHT n
	SLOT_TEX_SIZE b
	export z
	list x
	listText w
	parent u
	selectButton y
	settings A
	shareText v
	fromString (Lnet/minecraft/core/Registry;Ljava/lang/String;Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings;)Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings; a
	getLayerInfoFromString (Ljava/lang/String;I)Lnet/minecraft/world/level/levelgen/flat/FlatLayerInfo; a
	getLayersInfoFromString (Ljava/lang/String;)Ljava/util/List; b
	init ()V b
	mouseScrolled (DDD)Z a
	onClose ()V ah_
	preset (Lnet/minecraft/network/chat/Component;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/resources/ResourceKey;Ljava/util/List;ZZZ[Lnet/minecraft/world/level/levelgen/flat/FlatLayerInfo;)V a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	save (Lnet/minecraft/core/Registry;Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings;)Ljava/lang/String; a
	tick ()V d
	updateButtonValidity (Z)V c
net/minecraft/client/gui/screens/PresetFlatWorldScreen$PresetInfo eam$a
	icon a
	name b
	settings c
	getName ()Lnet/minecraft/network/chat/Component; a
net/minecraft/client/gui/screens/PresetFlatWorldScreen$PresetsList eam$b
	isFocused ()Z b
	keyPressed (III)Z a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/screens/PresetFlatWorldScreen$PresetsList$Entry;)V a
net/minecraft/client/gui/screens/PresetFlatWorldScreen$PresetsList$Entry eam$b$a
	preset b
	blitSlot (Lcom/mojang/blaze3d/vertex/PoseStack;IILnet/minecraft/world/item/Item;)V a
	blitSlotBg (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	getNarration ()Lnet/minecraft/network/chat/Component; a
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	select ()V b
net/minecraft/client/gui/screens/ProgressScreen ean
	clearScreenAfterStop o
	header a
	progress c
	stage b
	stop n
	progressStage (Lnet/minecraft/network/chat/Component;)V c
	progressStagePercentage (I)V a
	progressStart (Lnet/minecraft/network/chat/Component;)V b
	progressStartNoAbort (Lnet/minecraft/network/chat/Component;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	shouldCloseOnEsc ()Z ag_
	stop ()V a
net/minecraft/client/gui/screens/ReceivingLevelScreen eao
	DOWNLOADING_TERRAIN_TEXT a
	isPauseScreen ()Z ai_
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	shouldCloseOnEsc ()Z ag_
net/minecraft/client/gui/screens/Screen eap
	ALLOWED_PROTOCOLS b
	EXTRA_SPACE_AFTER_FIRST_TOOLTIP_LINE c
	LOGGER a
	NARRATE_DELAY_KEYBOARD_ACTION w
	NARRATE_DELAY_MOUSE_ACTION v
	NARRATE_DELAY_MOUSE_MOVE u
	NARRATE_DELAY_NARRATOR_ENABLED t
	NARRATE_SUPPRESS_AFTER_INIT_TIME s
	USAGE_NARRATION n
	children o
	clickedLink r
	font m
	height k
	itemRenderer i
	lastNarratable A
	minecraft e
	narratables p
	narrationState x
	narrationSuppressTime y
	nextNarrationTime z
	passEvents l
	renderables q
	title d
	width j
	addRenderableOnly (Lnet/minecraft/client/gui/components/Widget;)Lnet/minecraft/client/gui/components/Widget; a
	addRenderableWidget (Lnet/minecraft/client/gui/components/events/GuiEventListener;)Lnet/minecraft/client/gui/components/events/GuiEventListener; d
	addWidget (Lnet/minecraft/client/gui/components/events/GuiEventListener;)Lnet/minecraft/client/gui/components/events/GuiEventListener; e
	afterKeyboardAction ()V r
	afterMouseAction ()V q
	afterMouseMove ()V p
	children ()Ljava/util/List; j
	clearWidgets ()V k
	confirmLink (Z)V c
	findNarratableWidget (Ljava/util/List;Lnet/minecraft/client/gui/narration/NarratableEntry;)Lnet/minecraft/client/gui/screens/Screen$NarratableSearchResult; a
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; af_
	getTitle ()Lnet/minecraft/network/chat/Component; i
	getTooltipFromItem (Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; a
	handleComponentClicked (Lnet/minecraft/network/chat/Style;)Z a
	handleDelayedNarration ()V s
	hasAltDown ()Z o
	hasControlDown ()Z m
	hasShiftDown ()Z n
	init ()V b
	init (Lnet/minecraft/client/Minecraft;II)V b
	insertText (Ljava/lang/String;Z)V a
	isCopy (I)Z h
	isCut (I)Z f
	isMouseOver (DD)Z a_
	isPaste (I)Z g
	isPauseScreen ()Z ai_
	isSelectAll (I)Z i
	isValidCharacterForName (Ljava/lang/String;CI)Z a
	keyPressed (III)Z a
	narrationEnabled ()V t
	onClose ()V ah_
	onFilesDrop (Ljava/util/List;)V a
	openLink (Ljava/net/URI;)V a
	removeWidget (Lnet/minecraft/client/gui/components/events/GuiEventListener;)V f
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;I)V a
	renderComponentHoverEffect (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/network/chat/Style;II)V a
	renderComponentTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;Ljava/util/List;II)V b
	renderDirtBackground (I)V e
	renderTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;Ljava/util/List;II)V c
	renderTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;Ljava/util/List;Ljava/util/Optional;II)V a
	renderTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/network/chat/Component;II)V b
	renderTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/item/ItemStack;II)V a
	renderTooltipInternal (Lcom/mojang/blaze3d/vertex/PoseStack;Ljava/util/List;II)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	runNarration (Z)V e
	scheduleNarration (JZ)V a
	sendMessage (Ljava/lang/String;)V a
	sendMessage (Ljava/lang/String;Z)V b
	shouldCloseOnEsc ()Z ag_
	shouldRunNarration ()Z x
	suppressNarration (J)V a
	tick ()V d
	triggerImmediateNarration (Z)V d
	updateNarratedWidget (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V b
	updateNarrationState (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
	wrapScreenError (Ljava/lang/Runnable;Ljava/lang/String;Ljava/lang/String;)V a
net/minecraft/client/gui/screens/Screen$NarratableSearchResult eap$a
	entry a
	index b
	priority c
net/minecraft/client/gui/screens/ShareToLanScreen eaq
	ALLOW_COMMANDS_LABEL a
	GAME_MODE_LABEL b
	INFO_TEXT c
	commands p
	gameMode o
	lastScreen n
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/client/gui/screens/SimpleOptionsSubScreen ear
	list o
	narratorButton n
	smallOptions c
	createFooter ()V f
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	updateNarratorButton ()V h
net/minecraft/client/gui/screens/SkinCustomizationScreen eas
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/client/gui/screens/SoundOptionsScreen eat
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/client/gui/screens/TitleScreen eau
	ACCESSIBILITY_TEXTURE p
	COPYRIGHT_TEXT a
	CUBE_MAP b
	DEMO_LEVEL_ID n
	LOGGER c
	MINECRAFT_EDITION u
	MINECRAFT_LOGO t
	PANORAMA_OVERLAY o
	copyrightWidth w
	copyrightX x
	fadeInStart A
	fading z
	minceraftEasterEgg q
	panorama y
	realmsNotificationsScreen v
	resetDemoButton s
	splash r
	checkDemoWorldPresence ()Z u
	confirmDemo (Z)V c
	createDemoMenuOptions (II)V b
	createNormalMenuOptions (II)V a
	init ()V b
	isPauseScreen ()Z ai_
	mouseClicked (DDI)Z a
	preloadResources (Lnet/minecraft/client/renderer/texture/TextureManager;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
	realmsButtonClicked ()V w
	realmsNotificationsEnabled ()Z h
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	shouldCloseOnEsc ()Z ag_
	tick ()V d
net/minecraft/client/gui/screens/VideoSettingsScreen eav
	BUTTON_ACCEPT p
	BUTTON_CANCEL q
	FABULOUS c
	NEW_LINE r
	OPTIONS s
	WARNING_MESSAGE n
	WARNING_TITLE o
	gpuWarnlistManager u
	list t
	oldMipmaps v
	init ()V b
	mouseClicked (DDI)Z a
	mouseReleased (DDI)Z c
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/client/gui/screens/WinScreen eaw
	EDITION_LOCATION c
	LOGGER a
	LOGO_LOCATION b
	LOGO_WIDTH r
	NAME_PREFIX p
	OBFUSCATE_TOKEN q
	SECTION_HEADING o
	SPEEDUP_FACTOR s
	SPEEDUP_FACTOR_FAST t
	VIGNETTE_LOCATION n
	centeredLines y
	lines x
	onFinished v
	poem u
	scroll w
	scrollSpeed C
	speedupActive A
	speedupModifiers B
	totalScrollLength z
	unmodifiedScrollSpeed D
	addCreditsLine (Lnet/minecraft/network/chat/Component;Z)V a
	addEmptyLine ()V w
	addPoemLines (Ljava/lang/String;)V b
	calculateScrollSpeed ()F h
	init ()V b
	keyPressed (III)Z a
	keyReleased (III)Z b
	onClose ()V ah_
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg ()V x
	respawn ()V u
	tick ()V d
net/minecraft/client/gui/screens/achievement/StatsScreen eax
	PENDING_TEXT c
	SLOT_BG_SIZE u
	SLOT_BG_X w
	SLOT_BG_Y x
	SLOT_FG_X y
	SLOT_FG_Y z
	SLOT_LEFT_INSERT A
	SLOT_STAT_HEIGHT v
	SLOT_TEXT_OFFSET B
	SLOT_TEX_SIZE t
	SORT_DOWN D
	SORT_NONE C
	SORT_UP E
	activeList r
	isLoading s
	itemStatsList o
	lastScreen a
	mobsStatsList p
	stats q
	statsList n
	blitSlot (Lcom/mojang/blaze3d/vertex/PoseStack;IILnet/minecraft/world/item/Item;)V a
	blitSlotIcon (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V c
	getActiveList ()Lnet/minecraft/client/gui/components/ObjectSelectionList; x
	getColumnX (I)I a
	getTranslationKey (Lnet/minecraft/stats/Stat;)Ljava/lang/String; a
	init ()V b
	initButtons ()V u
	initLists ()V h
	isPauseScreen ()Z ai_
	onStatsUpdated ()V w
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setActiveList (Lnet/minecraft/client/gui/components/ObjectSelectionList;)V a
net/minecraft/client/gui/screens/achievement/StatsScreen$GeneralStatisticsList eax$a
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/gui/screens/achievement/StatsScreen$GeneralStatisticsList$Entry eax$a$a
	stat b
	statDisplay c
	getNarration ()Lnet/minecraft/network/chat/Component; a
	getValueText ()Ljava/lang/String; b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/screens/achievement/StatsScreen$ItemStatisticsList eax$b
	blockColumns a
	headerPressed p
	iconOffsets u
	itemColumns o
	itemStatSorter q
	sortColumn r
	sortOrder s
	clickedHeader (II)V a
	getColumn (I)Lnet/minecraft/stats/StatType; a
	getColumnIndex (Lnet/minecraft/stats/StatType;)I b
	getRowWidth ()I d
	getScrollbarPosition ()I e
	getString (Lnet/minecraft/world/item/Item;)Lnet/minecraft/network/chat/Component; a
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	renderDecorations (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	renderHeader (Lcom/mojang/blaze3d/vertex/PoseStack;IILcom/mojang/blaze3d/vertex/Tesselator;)V a
	renderMousehoverTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/network/chat/Component;II)V a
	sortByColumn (Lnet/minecraft/stats/StatType;)V a
net/minecraft/client/gui/screens/achievement/StatsScreen$ItemStatisticsList$ItemRow eax$b$a
	item b
	getItem ()Lnet/minecraft/world/item/Item; b
	getNarration ()Lnet/minecraft/network/chat/Component; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	renderStat (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/stats/Stat;IIZ)V a
net/minecraft/client/gui/screens/achievement/StatsScreen$ItemStatisticsList$ItemRowComparator eax$b$b
	compare (Lnet/minecraft/client/gui/screens/achievement/StatsScreen$ItemStatisticsList$ItemRow;Lnet/minecraft/client/gui/screens/achievement/StatsScreen$ItemStatisticsList$ItemRow;)I a
net/minecraft/client/gui/screens/achievement/StatsScreen$MobsStatisticsList eax$c
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/gui/screens/achievement/StatsScreen$MobsStatisticsList$MobRow eax$c$a
	hasKills d
	killedBy e
	kills c
	mobName b
	wasKilledBy f
	getNarration ()Lnet/minecraft/network/chat/Component; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/screens/achievement/StatsUpdateListener eay
	LOADING_SYMBOLS b
	onStatsUpdated ()V w
net/minecraft/client/gui/screens/advancements/AdvancementTab eba
	advancement e
	centered u
	display i
	fade t
	icon j
	index d
	maxX r
	maxY s
	minX p
	minY q
	minecraft a
	root l
	screen b
	scrollX n
	scrollY o
	title k
	type c
	widgets m
	addAdvancement (Lnet/minecraft/advancements/Advancement;)V a
	addWidget (Lnet/minecraft/client/gui/screens/advancements/AdvancementWidget;Lnet/minecraft/advancements/Advancement;)V a
	create (Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/gui/screens/advancements/AdvancementsScreen;ILnet/minecraft/advancements/Advancement;)Lnet/minecraft/client/gui/screens/advancements/AdvancementTab; a
	drawContents (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	drawIcon (IILnet/minecraft/client/renderer/entity/ItemRenderer;)V a
	drawTab (Lcom/mojang/blaze3d/vertex/PoseStack;IIZ)V a
	drawTooltips (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V c
	getAdvancement ()Lnet/minecraft/advancements/Advancement; c
	getDisplay ()Lnet/minecraft/advancements/DisplayInfo; e
	getIndex ()I b
	getScreen ()Lnet/minecraft/client/gui/screens/advancements/AdvancementsScreen; f
	getTitle ()Lnet/minecraft/network/chat/Component; d
	getType ()Lnet/minecraft/client/gui/screens/advancements/AdvancementTabType; a
	getWidget (Lnet/minecraft/advancements/Advancement;)Lnet/minecraft/client/gui/screens/advancements/AdvancementWidget; b
	isMouseOver (IIDD)Z a
	scroll (DD)V a
net/minecraft/client/gui/screens/advancements/AdvancementTabType ebb
	$VALUES j
	ABOVE a
	BELOW b
	LEFT c
	RIGHT d
	height h
	max i
	textureX e
	textureY f
	width g
	$values ()[Lnet/minecraft/client/gui/screens/advancements/AdvancementTabType; b
	draw (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/GuiComponent;IIZI)V a
	drawIcon (IIILnet/minecraft/client/renderer/entity/ItemRenderer;Lnet/minecraft/world/item/ItemStack;)V a
	getMax ()I a
	getX (I)I a
	getY (I)I b
	isMouseOver (IIIDD)Z a
net/minecraft/client/gui/screens/advancements/AdvancementWidget ebc
	BOX_WIDTH d
	BOX_X c
	FRAME_WIDTH e
	HEIGHT b
	ICON_WIDTH k
	ICON_X i
	ICON_Y j
	TEST_SPLIT_OFFSETS q
	TITLE_MAX_WIDTH p
	TITLE_PADDING_LEFT l
	TITLE_PADDING_RIGHT m
	TITLE_X n
	TITLE_Y o
	WIDGETS_LOCATION a
	advancement s
	children z
	description w
	display t
	minecraft x
	parent y
	progress A
	tab r
	title u
	width v
	x B
	y C
	addChild (Lnet/minecraft/client/gui/screens/advancements/AdvancementWidget;)V a
	attachToParent ()V b
	draw (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	drawConnectivity (Lcom/mojang/blaze3d/vertex/PoseStack;IIZ)V a
	drawHover (Lcom/mojang/blaze3d/vertex/PoseStack;IIFII)V a
	findOptimalLines (Lnet/minecraft/network/chat/Component;I)Ljava/util/List; a
	getFirstVisibleParent (Lnet/minecraft/advancements/Advancement;)Lnet/minecraft/client/gui/screens/advancements/AdvancementWidget; a
	getMaxWidth (Lnet/minecraft/client/StringSplitter;Ljava/util/List;)F a
	getWidth ()I a
	getX ()I d
	getY ()I c
	isMouseOver (IIII)Z a
	render9Sprite (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIII)V a
	renderRepeating (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIII)V a
	setProgress (Lnet/minecraft/advancements/AdvancementProgress;)V a
net/minecraft/client/gui/screens/advancements/AdvancementWidgetType ebd
	$VALUES d
	OBTAINED a
	UNOBTAINED b
	y c
	$values ()[Lnet/minecraft/client/gui/screens/advancements/AdvancementWidgetType; b
	getIndex ()I a
net/minecraft/client/gui/screens/advancements/AdvancementsScreen ebe
	BACKGROUND_TILE_COUNT_X q
	BACKGROUND_TILE_COUNT_Y r
	BACKGROUND_TILE_HEIGHT p
	BACKGROUND_TILE_WIDTH o
	NO_ADVANCEMENTS_LABEL z
	TABS_LOCATION t
	TITLE A
	VERY_SAD_LABEL y
	WINDOW_HEIGHT b
	WINDOW_INSIDE_HEIGHT n
	WINDOW_INSIDE_WIDTH c
	WINDOW_INSIDE_X u
	WINDOW_INSIDE_Y v
	WINDOW_LOCATION s
	WINDOW_TITLE_X w
	WINDOW_TITLE_Y x
	WINDOW_WIDTH a
	advancements B
	isScrolling E
	selectedTab D
	tabs C
	getAdvancementWidget (Lnet/minecraft/advancements/Advancement;)Lnet/minecraft/client/gui/screens/advancements/AdvancementWidget; f
	getTab (Lnet/minecraft/advancements/Advancement;)Lnet/minecraft/client/gui/screens/advancements/AdvancementTab; g
	init ()V b
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	onAddAdvancementRoot (Lnet/minecraft/advancements/Advancement;)V a
	onAddAdvancementTask (Lnet/minecraft/advancements/Advancement;)V c
	onAdvancementsCleared ()V a
	onRemoveAdvancementRoot (Lnet/minecraft/advancements/Advancement;)V b
	onRemoveAdvancementTask (Lnet/minecraft/advancements/Advancement;)V d
	onSelectedTabChanged (Lnet/minecraft/advancements/Advancement;)V e
	onUpdateAdvancementProgress (Lnet/minecraft/advancements/Advancement;Lnet/minecraft/advancements/AdvancementProgress;)V a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderInside (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V c
	renderTooltips (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V d
	renderWindow (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
net/minecraft/client/gui/screens/controls/ControlList ebg
	controlsScreen a
	maxNameWidth o
	getRowWidth ()I d
	getScrollbarPosition ()I e
net/minecraft/client/gui/screens/controls/ControlList$CategoryEntry ebg$a
	name b
	width c
	changeFocus (Z)Z b
	children ()Ljava/util/List; j
	narratables ()Ljava/util/List; b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/screens/controls/ControlList$Entry ebg$b
net/minecraft/client/gui/screens/controls/ControlList$KeyEntry ebg$c
	changeButton d
	key b
	name c
	resetButton e
	children ()Ljava/util/List; j
	mouseClicked (DDI)Z a
	mouseReleased (DDI)Z c
	narratables ()Ljava/util/List; b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/screens/controls/ControlsScreen ebh
	controlList o
	lastKeySelection n
	resetButton p
	selectedKey c
	init ()V b
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/client/gui/screens/debug/GameModeSwitcherScreen ebj
	ALL_SLOTS_WIDTH r
	GAMEMODE_SWITCHER_LOCATION a
	HELP_TIPS_OFFSET_Y q
	SELECT_KEY s
	SLOT_AREA n
	SLOT_AREA_PADDED p
	SLOT_PADDING o
	SPRITE_SHEET_HEIGHT c
	SPRITE_SHEET_WIDTH b
	currentlyHovered u
	firstMouseX v
	firstMouseY w
	previousHovered t
	setFirstMousePos x
	slots y
	checkToClose ()Z w
	getDefaultSelected ()Lnet/minecraft/world/level/GameType; h
	init ()V b
	isPauseScreen ()Z ai_
	keyPressed (III)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	switchToHoveredGameMode ()V u
	switchToHoveredGameMode (Lnet/minecraft/client/Minecraft;Ljava/util/Optional;)V a
net/minecraft/client/gui/screens/debug/GameModeSwitcherScreen$GameModeIcon ebj$a
	$VALUES k
	ADVENTURE c
	CREATIVE a
	ICON_AREA j
	ICON_TOP_LEFT f
	SPECTATOR d
	SURVIVAL b
	VALUES e
	command h
	name g
	renderStack i
	$values ()[Lnet/minecraft/client/gui/screens/debug/GameModeSwitcherScreen$GameModeIcon; d
	drawIcon (Lnet/minecraft/client/renderer/entity/ItemRenderer;II)V a
	getCommand ()Ljava/lang/String; b
	getFromGameType (Lnet/minecraft/world/level/GameType;)Ljava/util/Optional; a
	getName ()Lnet/minecraft/network/chat/Component; a
	getNext ()Ljava/util/Optional; c
net/minecraft/client/gui/screens/debug/GameModeSwitcherScreen$GameModeSlot ebj$b
	icon b
	isSelected c
	drawSelection (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/texture/TextureManager;)V b
	drawSlot (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/texture/TextureManager;)V a
	isHovered ()Z e
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	setSelected (Z)V e
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/screens/inventory/AbstractCommandBlockEditScreen ebl
	COMMAND_LABEL q
	PREVIOUS_OUTPUT_LABEL r
	SET_COMMAND_LABEL p
	cancelButton n
	commandEdit a
	commandSuggestions s
	doneButton c
	outputButton o
	previousEdit b
	getCommandBlock ()Lnet/minecraft/world/level/BaseCommandBlock; h
	getPreviousY ()I u
	init ()V b
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	mouseScrolled (DDD)Z a
	onDone ()V w
	onEdited (Ljava/lang/String;)V b
	populateAndSendPacket (Lnet/minecraft/world/level/BaseCommandBlock;)V a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	tick ()V d
	updatePreviousOutput (Z)V c
net/minecraft/client/gui/screens/inventory/AbstractContainerScreen ebm
	DOUBLECLICK_SPEED B
	HOVER_ITEM_BLIT_OFFSET C
	INVENTORY_LOCATION a
	QUICKDROP_DELAY A
	SLOT_ITEM_BLIT_OFFSET b
	SNAPBACK_SPEED z
	clickedSlot D
	doubleclick U
	draggingItem I
	hoveredSlot u
	imageHeight n
	imageWidth c
	inventoryLabelX q
	inventoryLabelY r
	isQuickCrafting y
	isSplittingStack H
	lastClickButton T
	lastClickSlot G
	lastClickTime S
	lastQuickMoved V
	leftPos v
	menu s
	playerInventoryTitle t
	quickCraftSlots x
	quickCraftingButton P
	quickCraftingRemainder R
	quickCraftingType O
	quickdropSlot F
	quickdropTime N
	skipNextRelease Q
	snapbackEnd E
	snapbackItem M
	snapbackStartX J
	snapbackStartY K
	snapbackTime L
	titleLabelX o
	titleLabelY p
	topPos w
	checkHotbarKeyPressed (II)Z a
	checkHotbarMouseClicked (I)V a
	findSlot (DD)Lnet/minecraft/world/inventory/Slot; a
	getMenu ()Lnet/minecraft/world/inventory/AbstractContainerMenu; h
	hasClickedOutside (DDIII)Z a
	init ()V b
	isHovering (IIIIDD)Z a
	isHovering (Lnet/minecraft/world/inventory/Slot;DD)Z a
	isPauseScreen ()Z ai_
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseReleased (DDI)Z c
	onClose ()V ah_
	recalculateQuickCraftRemaining ()V x
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
	renderFloatingItem (Lnet/minecraft/world/item/ItemStack;IILjava/lang/String;)V a
	renderLabels (Lcom/mojang/blaze3d/vertex/PoseStack;II)V b
	renderSlot (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/inventory/Slot;)V a
	renderSlotHighlight (Lcom/mojang/blaze3d/vertex/PoseStack;III)V a
	renderTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	slotClicked (Lnet/minecraft/world/inventory/Slot;IILnet/minecraft/world/inventory/ClickType;)V a
	tick ()V d
net/minecraft/client/gui/screens/inventory/AbstractFurnaceScreen ebn
	RECIPE_BUTTON_LOCATION A
	recipeBookComponent z
	texture C
	widthTooNarrow B
	charTyped (CI)Z a
	getRecipeBookComponent ()Lnet/minecraft/client/gui/screens/recipebook/RecipeBookComponent; w
	hasClickedOutside (DDIII)Z a
	init ()V b
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	recipesUpdated ()V u
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
	slotClicked (Lnet/minecraft/world/inventory/Slot;IILnet/minecraft/world/inventory/ClickType;)V a
	tick ()V d
net/minecraft/client/gui/screens/inventory/AnvilScreen ebo
	ANVIL_LOCATION z
	TOO_EXPENSIVE_TEXT A
	name B
	player C
	keyPressed (III)Z a
	onNameChanged (Ljava/lang/String;)V b
	removed ()V e
	renderFg (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	renderLabels (Lcom/mojang/blaze3d/vertex/PoseStack;II)V b
	resize (Lnet/minecraft/client/Minecraft;II)V a
	slotChanged (Lnet/minecraft/world/inventory/AbstractContainerMenu;ILnet/minecraft/world/item/ItemStack;)V a
	subInit ()V u
	tick ()V d
net/minecraft/client/gui/screens/inventory/BeaconScreen ebp
	BEACON_LOCATION z
	PRIMARY_EFFECT_LABEL A
	SECONDARY_EFFECT_LABEL B
	beaconButtons C
	primary D
	secondary E
	addBeaconButton (Lnet/minecraft/client/gui/components/AbstractWidget;)V a
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
	renderLabels (Lcom/mojang/blaze3d/vertex/PoseStack;II)V b
	tick ()V d
	updateButtons ()V u
net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconButton ebp$a
	isShowingTooltip ()Z a
	renderToolTip (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	updateStatus (I)V a
net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconCancelButton ebp$b
	onPress ()V c
	updateStatus (I)V a
net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconConfirmButton ebp$c
	onPress ()V c
	updateStatus (I)V a
net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconPowerButton ebp$d
	effect d
	isPrimary c
	sprite e
	tier a
	tooltip r
	createEffectDescription (Lnet/minecraft/world/effect/MobEffect;)Lnet/minecraft/network/chat/MutableComponent; b
	createNarrationMessage ()Lnet/minecraft/network/chat/MutableComponent; ak_
	onPress ()V c
	renderIcon (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	renderToolTip (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	setEffect (Lnet/minecraft/world/effect/MobEffect;)V a
	updateStatus (I)V a
net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconScreenButton ebp$e
	selected a
	isSelected ()Z b
	isShowingTooltip ()Z a
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	renderIcon (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	setSelected (Z)V e
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconSpriteScreenButton ebp$f
	iconX a
	iconY c
	renderIcon (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	renderToolTip (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconUpgradePowerButton ebp$g
	createEffectDescription (Lnet/minecraft/world/effect/MobEffect;)Lnet/minecraft/network/chat/MutableComponent; b
	updateStatus (I)V a
net/minecraft/client/gui/screens/inventory/BlastFurnaceScreen ebq
	TEXTURE A
net/minecraft/client/gui/screens/inventory/BookEditScreen ebr
	BLACK_CURSOR r
	DOUBLECLICK_SPEED c
	EDIT_TITLE_LABEL p
	FINALIZE_WARNING_LABEL q
	GRAY_CURSOR s
	IMAGE_HEIGHT o
	IMAGE_WIDTH n
	TEXT_HEIGHT b
	TEXT_WIDTH a
	backButton G
	book u
	cancelButton K
	currentPage y
	displayCache M
	doneButton H
	finalizeButton J
	forwardButton F
	frameTick x
	hand L
	isModified v
	isSigning w
	lastClickTime D
	lastIndex E
	owner t
	ownerText O
	pageEdit B
	pageMsg N
	pages z
	signButton I
	title A
	titleEdit C
	appendPageToBook ()V A
	bookKeyPressed (III)Z c
	changeLine (I)V a
	charTyped (CI)Z a
	clearDisplayCache ()V H
	clearDisplayCacheAfterPageChange ()V I
	convertLocalToScreen (Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i;)Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i; b
	convertScreenToLocal (Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i;)Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i; a
	createPartialLineSelection (Ljava/lang/String;Lnet/minecraft/client/StringSplitter;IIII)Lnet/minecraft/client/renderer/Rect2i; a
	createSelection (Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i;Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i;)Lnet/minecraft/client/renderer/Rect2i; a
	eraseEmptyTrailingPages ()V z
	findLineFromPos ([II)I a
	getClipboard ()Ljava/lang/String; h
	getCurrentPageText ()Ljava/lang/String; F
	getDisplayCache ()Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$DisplayCache; G
	getNumPages ()I u
	init ()V b
	keyDown ()V C
	keyEnd ()V E
	keyHome ()V D
	keyPressed (III)Z a
	keyUp ()V B
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	pageBack ()V w
	pageForward ()V x
	rebuildDisplayCache ()Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$DisplayCache; J
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderCursor (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i;Z)V a
	renderHighlight ([Lnet/minecraft/client/renderer/Rect2i;)V a
	saveChanges (Z)V c
	selectWord (I)V b
	setClipboard (Ljava/lang/String;)V b
	setCurrentPageText (Ljava/lang/String;)V c
	tick ()V d
	titleKeyPressed (III)Z d
	updateButtonVisibility ()V y
net/minecraft/client/gui/screens/inventory/BookEditScreen$DisplayCache ebr$a
	EMPTY a
	cursor c
	cursorAtEnd d
	fullText b
	lineStarts e
	lines f
	selection g
	changeLine (II)I a
	findLineEnd (I)I b
	findLineStart (I)I a
	getIndexAtPosition (Lnet/minecraft/client/gui/Font;Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i;)I a
net/minecraft/client/gui/screens/inventory/BookEditScreen$LineInfo ebr$b
	asComponent c
	contents b
	style a
	x d
	y e
net/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i ebr$c
	x a
	y b
net/minecraft/client/gui/screens/inventory/BookViewScreen ebs
	BOOK_LOCATION o
	EMPTY_ACCESS n
	IMAGE_HEIGHT s
	IMAGE_WIDTH r
	PAGE_INDICATOR_TEXT_Y_OFFSET a
	PAGE_TEXT_X_OFFSET b
	PAGE_TEXT_Y_OFFSET c
	TEXT_HEIGHT q
	TEXT_WIDTH p
	backButton z
	bookAccess t
	cachedPage w
	cachedPageComponents v
	currentPage u
	forwardButton y
	pageMsg x
	playTurnSound A
	closeScreen ()V z
	createMenuControls ()V u
	createPageControlButtons ()V w
	forcePage (I)Z b
	getClickedComponentStyleAt (DD)Lnet/minecraft/network/chat/Style; a
	getNumPages ()I h
	handleComponentClicked (Lnet/minecraft/network/chat/Style;)Z a
	init ()V b
	keyPressed (III)Z a
	loadPages (Lnet/minecraft/nbt/CompoundTag;)Ljava/util/List; a
	loadPages (Lnet/minecraft/nbt/CompoundTag;Ljava/util/function/Consumer;)V a
	mouseClicked (DDI)Z a
	pageBack ()V x
	pageForward ()V y
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setBookAccess (Lnet/minecraft/client/gui/screens/inventory/BookViewScreen$BookAccess;)V a
	setPage (I)Z a
	updateButtonVisibility ()V A
net/minecraft/client/gui/screens/inventory/BookViewScreen$BookAccess ebs$a
	fromItem (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/client/gui/screens/inventory/BookViewScreen$BookAccess; a
	getPage (I)Lnet/minecraft/network/chat/FormattedText; b
	getPageCount ()I a
	getPageRaw (I)Lnet/minecraft/network/chat/FormattedText; a
net/minecraft/client/gui/screens/inventory/BookViewScreen$WritableBookAccess ebs$b
	pages a
	getPageCount ()I a
	getPageRaw (I)Lnet/minecraft/network/chat/FormattedText; a
	readPages (Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; b
net/minecraft/client/gui/screens/inventory/BookViewScreen$WrittenBookAccess ebs$c
	pages a
	getPageCount ()I a
	getPageRaw (I)Lnet/minecraft/network/chat/FormattedText; a
	readPages (Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; b
net/minecraft/client/gui/screens/inventory/BrewingStandScreen ebt
	BREWING_STAND_LOCATION z
	BUBBLELENGTHS A
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
net/minecraft/client/gui/screens/inventory/CartographyTableScreen ebu
	BG_LOCATION z
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
	renderMap (Lcom/mojang/blaze3d/vertex/PoseStack;Ljava/lang/Integer;Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;IIF)V a
	renderResultingMap (Lcom/mojang/blaze3d/vertex/PoseStack;Ljava/lang/Integer;Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;ZZZZ)V a
net/minecraft/client/gui/screens/inventory/CommandBlockEditScreen ebv
	autoCommandBlock p
	autoexec v
	autoexecButton s
	conditional u
	conditionalButton r
	mode t
	modeButton q
	enableControls (Z)V e
	getCommandBlock ()Lnet/minecraft/world/level/BaseCommandBlock; h
	getPreviousY ()I u
	init ()V b
	populateAndSendPacket (Lnet/minecraft/world/level/BaseCommandBlock;)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	updateGui ()V x
net/minecraft/client/gui/screens/inventory/ContainerScreen ebw
	CONTAINER_BACKGROUND z
	containerRows A
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
net/minecraft/client/gui/screens/inventory/CraftingScreen ebx
	CRAFTING_TABLE_LOCATION z
	RECIPE_BUTTON_LOCATION A
	recipeBookComponent B
	widthTooNarrow C
	getRecipeBookComponent ()Lnet/minecraft/client/gui/screens/recipebook/RecipeBookComponent; w
	hasClickedOutside (DDIII)Z a
	init ()V b
	isHovering (IIIIDD)Z a
	mouseClicked (DDI)Z a
	recipesUpdated ()V u
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
	slotClicked (Lnet/minecraft/world/inventory/Slot;IILnet/minecraft/world/inventory/ClickType;)V a
	tick ()V d
net/minecraft/client/gui/screens/inventory/CreativeInventoryListener eby
	minecraft a
	dataChanged (Lnet/minecraft/world/inventory/AbstractContainerMenu;II)V a
	slotChanged (Lnet/minecraft/world/inventory/AbstractContainerMenu;ILnet/minecraft/world/item/ItemStack;)V a
net/minecraft/client/gui/screens/inventory/CreativeModeInventoryScreen ebz
	CONTAINER J
	CREATIVE_TABS_LOCATION A
	CUSTOM_SLOT_LOCK C
	GUI_CREATIVE_TAB_PREFIX B
	NUM_COLS E
	NUM_ROWS D
	SCROLLER_HEIGHT I
	SCROLLER_WIDTH H
	TAB_HEIGHT G
	TAB_WIDTH F
	TEXT_COLOR L
	TRASH_SLOT_TOOLTIP K
	destroyItemSlot R
	hasClickedOutside U
	ignoreTextInput T
	listener S
	originalSlots Q
	scrollOffs N
	scrolling O
	searchBox P
	selectedTab M
	visibleTags V
	canScroll ()Z y
	charTyped (CI)Z a
	checkEffectRendering ()V am_
	checkTabClicked (Lnet/minecraft/world/item/CreativeModeTab;DD)Z a
	checkTabHovering (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/item/CreativeModeTab;II)Z a
	getSelectedTab ()I w
	handleHotbarLoadOrSave (Lnet/minecraft/client/Minecraft;IZZ)V a
	hasClickedOutside (DDIII)Z a
	init ()V b
	insideScrollbar (DD)Z a
	isCreativeSlot (Lnet/minecraft/world/inventory/Slot;)Z a
	keyPressed (III)Z a
	keyReleased (III)Z b
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseReleased (DDI)Z c
	mouseScrolled (DDD)Z a
	refreshSearchResults ()V x
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
	renderLabels (Lcom/mojang/blaze3d/vertex/PoseStack;II)V b
	renderTabButton (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/item/CreativeModeTab;)V a
	renderTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/item/ItemStack;II)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	selectTab (Lnet/minecraft/world/item/CreativeModeTab;)V a
	slotClicked (Lnet/minecraft/world/inventory/Slot;IILnet/minecraft/world/inventory/ClickType;)V a
	tick ()V d
	updateVisibleTags (Ljava/lang/String;)V b
net/minecraft/client/gui/screens/inventory/CreativeModeInventoryScreen$CustomCreativeSlot ebz$a
	mayPickup (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/client/gui/screens/inventory/CreativeModeInventoryScreen$ItemPickerMenu ebz$b
	inventoryMenu l
	items k
	canDragTo (Lnet/minecraft/world/inventory/Slot;)Z b
	canScroll ()Z i
	canTakeItemForPickAll (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z a
	getCarried ()Lnet/minecraft/world/item/ItemStack; f
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	scrollTo (F)V a
	setCarried (Lnet/minecraft/world/item/ItemStack;)V b
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/client/gui/screens/inventory/CreativeModeInventoryScreen$SlotWrapper ebz$c
	target a
	getItem ()Lnet/minecraft/world/item/ItemStack; e
	getMaxStackSize ()I a
	getMaxStackSize (Lnet/minecraft/world/item/ItemStack;)I a_
	getNoItemIcon ()Lcom/mojang/datafixers/util/Pair; c
	hasItem ()Z f
	isActive ()Z b
	mayPickup (Lnet/minecraft/world/entity/player/Player;)Z a
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
	remove (I)Lnet/minecraft/world/item/ItemStack; a
	set (Lnet/minecraft/world/item/ItemStack;)V d
	setChanged ()V d
net/minecraft/client/gui/screens/inventory/DispenserScreen eca
	CONTAINER_LOCATION z
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
net/minecraft/client/gui/screens/inventory/EffectRenderingInventoryScreen ecb
	doRenderEffects z
	checkEffectRendering ()V am_
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBackgrounds (Lcom/mojang/blaze3d/vertex/PoseStack;IILjava/lang/Iterable;)V a
	renderEffects (Lcom/mojang/blaze3d/vertex/PoseStack;)V b
	renderIcons (Lcom/mojang/blaze3d/vertex/PoseStack;IILjava/lang/Iterable;)V b
	renderLabels (Lcom/mojang/blaze3d/vertex/PoseStack;IILjava/lang/Iterable;)V c
net/minecraft/client/gui/screens/inventory/EnchantmentNames ecc
	ALT_FONT a
	INSTANCE c
	ROOT_STYLE b
	random d
	words e
	getInstance ()Lnet/minecraft/client/gui/screens/inventory/EnchantmentNames; a
	getRandomName (Lnet/minecraft/client/gui/Font;I)Lnet/minecraft/network/chat/FormattedText; a
	initSeed (J)V a
net/minecraft/client/gui/screens/inventory/EnchantmentScreen ecd
	ENCHANTING_BOOK_LOCATION H
	ENCHANTING_TABLE_LOCATION G
	bookModel J
	flip A
	flipA D
	flipT C
	last K
	oFlip B
	oOpen F
	open E
	random I
	time z
	init ()V b
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
	tick ()V d
	tickBook ()V u
net/minecraft/client/gui/screens/inventory/FurnaceScreen ece
	TEXTURE A
net/minecraft/client/gui/screens/inventory/GrindstoneScreen ecf
	GRINDSTONE_LOCATION z
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
net/minecraft/client/gui/screens/inventory/HopperScreen ecg
	HOPPER_LOCATION z
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
net/minecraft/client/gui/screens/inventory/HorseInventoryScreen ech
	HORSE_INVENTORY_LOCATION z
	horse A
	xMouse B
	yMouse C
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
net/minecraft/client/gui/screens/inventory/InventoryScreen eci
	RECIPE_BUTTON_LOCATION A
	buttonClicked G
	recipeBookComponent D
	recipeBookComponentInitialized E
	widthTooNarrow F
	xMouse B
	yMouse C
	getRecipeBookComponent ()Lnet/minecraft/client/gui/screens/recipebook/RecipeBookComponent; w
	hasClickedOutside (DDIII)Z a
	init ()V b
	isHovering (IIIIDD)Z a
	mouseClicked (DDI)Z a
	mouseReleased (DDI)Z c
	recipesUpdated ()V u
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
	renderEntityInInventory (IIIFFLnet/minecraft/world/entity/LivingEntity;)V a
	renderLabels (Lcom/mojang/blaze3d/vertex/PoseStack;II)V b
	slotClicked (Lnet/minecraft/world/inventory/Slot;IILnet/minecraft/world/inventory/ClickType;)V a
	tick ()V d
net/minecraft/client/gui/screens/inventory/ItemCombinerScreen ecj
	menuResource z
	dataChanged (Lnet/minecraft/world/inventory/AbstractContainerMenu;II)V a
	init ()V b
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
	renderFg (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	slotChanged (Lnet/minecraft/world/inventory/AbstractContainerMenu;ILnet/minecraft/world/item/ItemStack;)V a
	subInit ()V u
net/minecraft/client/gui/screens/inventory/JigsawBlockEditScreen eck
	FINAL_STATE_LABEL p
	JOINT_LABEL b
	MAX_LEVELS a
	NAME_LABEL n
	POOL_LABEL c
	TARGET_LABEL o
	doneButton y
	finalStateEdit u
	generateButton z
	jigsawEntity q
	joint A
	jointButton x
	keepJigsaws w
	levels v
	nameEdit r
	poolEdit t
	targetEdit s
	init ()V b
	keyPressed (III)Z a
	onCancel ()V u
	onClose ()V ah_
	onDone ()V h
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	sendGenerate ()V x
	sendToServer ()V w
	tick ()V d
	updateValidity ()V y
net/minecraft/client/gui/screens/inventory/LecternScreen ecl
	listener u
	menu t
	bookChanged ()V B
	closeScreen ()V z
	createMenuControls ()V u
	forcePage (I)Z b
	getMenu ()Lnet/minecraft/world/inventory/AbstractContainerMenu; h
	getMenu ()Lnet/minecraft/world/inventory/LecternMenu; A
	init ()V b
	isPauseScreen ()Z ai_
	onClose ()V ah_
	pageBack ()V x
	pageChanged ()V C
	pageForward ()V y
	removed ()V e
	sendButtonClick (I)V c
net/minecraft/client/gui/screens/inventory/LoomScreen ecm
	BASE_PATTERN_INDEX A
	BG_LOCATION z
	PATTERNS_X I
	PATTERNS_Y J
	PATTERN_COLUMNS B
	PATTERN_IMAGE_SIZE G
	PATTERN_ROWS C
	SCROLLER_FULL_HEIGHT H
	SCROLLER_HEIGHT F
	SCROLLER_WIDTH E
	TOTAL_PATTERN_ROWS D
	bannerStack M
	displayPatterns P
	displaySpecialPattern Q
	dyeStack N
	flag K
	hasMaxPatterns R
	patternStack O
	resultBannerPatterns L
	scrollOffs S
	scrolling T
	startIndex U
	containerChanged ()V u
	hasClickedOutside (DDIII)Z a
	init ()V b
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseScrolled (DDD)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
	renderPattern (III)V c
net/minecraft/client/gui/screens/inventory/MenuAccess ecn
	getMenu ()Lnet/minecraft/world/inventory/AbstractContainerMenu; h
net/minecraft/client/gui/screens/inventory/MerchantScreen eco
	BUY_ITEM_X H
	DEPRECATED_TOOLTIP U
	LABEL_Y I
	LEVEL_SEPARATOR T
	MERCHANT_MENU_PART_X C
	NUMBER_OF_OFFER_BUTTONS J
	PROGRESS_BAR_X D
	PROGRESS_BAR_Y E
	SCROLLER_HEIGHT N
	SCROLLER_WIDTH O
	SCROLL_BAR_HEIGHT P
	SCROLL_BAR_START_X R
	SCROLL_BAR_TOP_POS_Y Q
	SELL_ITEM_1_X F
	SELL_ITEM_2_X G
	TEXTURE_HEIGHT B
	TEXTURE_WIDTH A
	TRADES_LABEL S
	TRADE_BUTTON_HEIGHT L
	TRADE_BUTTON_WIDTH M
	TRADE_BUTTON_X K
	VILLAGER_LOCATION z
	isDragging Y
	scrollOff X
	shopItem V
	tradeOfferButtons W
	canScroll (I)Z a
	init ()V b
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseScrolled (DDD)Z a
	postButtonClick ()V u
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderAndDecorateCostA (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;II)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
	renderButtonArrows (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/item/trading/MerchantOffer;II)V a
	renderLabels (Lcom/mojang/blaze3d/vertex/PoseStack;II)V b
	renderProgressBar (Lcom/mojang/blaze3d/vertex/PoseStack;IILnet/minecraft/world/item/trading/MerchantOffer;)V a
	renderScroller (Lcom/mojang/blaze3d/vertex/PoseStack;IILnet/minecraft/world/item/trading/MerchantOffers;)V a
net/minecraft/client/gui/screens/inventory/MerchantScreen$TradeOfferButton eco$a
	index a
	getIndex ()I a
	renderToolTip (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
net/minecraft/client/gui/screens/inventory/MinecartCommandBlockEditScreen ecp
	commandBlock p
	getCommandBlock ()Lnet/minecraft/world/level/BaseCommandBlock; h
	getPreviousY ()I u
	init ()V b
	populateAndSendPacket (Lnet/minecraft/world/level/BaseCommandBlock;)V a
net/minecraft/client/gui/screens/inventory/PageButton ecq
	isForward a
	playTurnSound b
	playDownSound (Lnet/minecraft/client/sounds/SoundManager;)V a
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
net/minecraft/client/gui/screens/inventory/ShulkerBoxScreen ecr
	CONTAINER_TEXTURE z
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
net/minecraft/client/gui/screens/inventory/SignEditScreen ecs
	frame b
	line c
	messages q
	sign a
	signField n
	signModel p
	woodType o
	charTyped (CI)Z a
	init ()V b
	keyPressed (III)Z a
	onClose ()V ah_
	onDone ()V h
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	tick ()V d
net/minecraft/client/gui/screens/inventory/SmithingScreen ect
	SMITHING_LOCATION z
	renderLabels (Lcom/mojang/blaze3d/vertex/PoseStack;II)V b
net/minecraft/client/gui/screens/inventory/SmokerScreen ecu
	TEXTURE A
net/minecraft/client/gui/screens/inventory/StonecutterScreen ecv
	BG_LOCATION z
	RECIPES_COLUMNS C
	RECIPES_IMAGE_SIZE_HEIGHT F
	RECIPES_IMAGE_SIZE_WIDTH E
	RECIPES_ROWS D
	RECIPES_X H
	RECIPES_Y I
	SCROLLER_FULL_HEIGHT G
	SCROLLER_HEIGHT B
	SCROLLER_WIDTH A
	displayRecipes M
	scrollOffs J
	scrolling K
	startIndex L
	containerChanged ()V x
	getOffscreenRows ()I u
	isScrollBarActive ()Z w
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseScrolled (DDD)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
	renderButtons (Lcom/mojang/blaze3d/vertex/PoseStack;IIIII)V b
	renderRecipes (III)V c
	renderTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
net/minecraft/client/gui/screens/inventory/StructureBlockEditScreen ecw
	ALL_MODES t
	CUSTOM_DATA_LABEL o
	DEFAULT_MODES u
	DETECT_SIZE_LABEL q
	INCLUDE_ENTITIES_LABEL p
	INTEGRITY_LABEL n
	NAME_LABEL a
	POSITION_LABEL b
	SHOW_AIR_LABEL r
	SHOW_BOUNDING_BOX_LABEL s
	SIZE_LABEL c
	dataEdit L
	decimalFormat X
	detectButton S
	includeEntitiesButton T
	initialEntityIgnoring z
	initialMirror w
	initialMode y
	initialRotation x
	initialShowAir A
	initialShowBoundingBox B
	integrityEdit J
	loadButton N
	mirrorButton U
	nameEdit C
	posXEdit D
	posYEdit E
	posZEdit F
	rot0Button O
	rot180Button Q
	rot270Button R
	rot90Button P
	saveButton M
	seedEdit K
	sizeXEdit G
	sizeYEdit H
	sizeZEdit I
	structure v
	toggleAirButton V
	toggleBoundingBox W
	init ()V b
	isPauseScreen ()Z ai_
	keyPressed (III)Z a
	onCancel ()V u
	onClose ()V ah_
	onDone ()V h
	parseCoordinate (Ljava/lang/String;)I d
	parseIntegrity (Ljava/lang/String;)F c
	parseSeed (Ljava/lang/String;)J b
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	sendToServer (Lnet/minecraft/world/level/block/entity/StructureBlockEntity$UpdateType;)Z a
	tick ()V d
	updateDirectionButtons ()V w
	updateMode (Lnet/minecraft/world/level/block/state/properties/StructureMode;)V a
net/minecraft/client/gui/screens/inventory/tooltip/ClientBundleTooltip ecy
	BORDER_WIDTH c
	MARGIN_Y b
	SLOT_SIZE_X e
	SLOT_SIZE_Y f
	TEXTURE_LOCATION a
	TEX_SIZE d
	items g
	weight h
	blit (Lcom/mojang/blaze3d/vertex/PoseStack;IIILnet/minecraft/client/renderer/texture/TextureManager;Lnet/minecraft/client/gui/screens/inventory/tooltip/ClientBundleTooltip$Texture;)V a
	drawBorder (IIIILcom/mojang/blaze3d/vertex/PoseStack;ILnet/minecraft/client/renderer/texture/TextureManager;)V a
	getHeight ()I a
	getWidth (Lnet/minecraft/client/gui/Font;)I a
	gridSizeX ()I b
	gridSizeY ()I c
	renderImage (Lnet/minecraft/client/gui/Font;IILcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/entity/ItemRenderer;ILnet/minecraft/client/renderer/texture/TextureManager;)V a
	renderSlot (IIIZLnet/minecraft/client/gui/Font;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/entity/ItemRenderer;ILnet/minecraft/client/renderer/texture/TextureManager;)V a
net/minecraft/client/gui/screens/inventory/tooltip/ClientBundleTooltip$Texture ecy$a
	$VALUES l
	BLOCKED_SLOT b
	BORDER_CORNER_BOTTOM g
	BORDER_CORNER_TOP f
	BORDER_HORIZONTAL_BOTTOM e
	BORDER_HORIZONTAL_TOP d
	BORDER_VERTICAL c
	SLOT a
	h k
	w j
	x h
	y i
	$values ()[Lnet/minecraft/client/gui/screens/inventory/tooltip/ClientBundleTooltip$Texture; a
net/minecraft/client/gui/screens/inventory/tooltip/ClientTextTooltip ecz
	text a
	getHeight ()I a
	getWidth (Lnet/minecraft/client/gui/Font;)I a
	renderText (Lnet/minecraft/client/gui/Font;IILcom/mojang/math/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource;)V a
net/minecraft/client/gui/screens/inventory/tooltip/ClientTooltipComponent eda
	create (Lnet/minecraft/util/FormattedCharSequence;)Lnet/minecraft/client/gui/screens/inventory/tooltip/ClientTooltipComponent; a
	create (Lnet/minecraft/world/inventory/tooltip/TooltipComponent;)Lnet/minecraft/client/gui/screens/inventory/tooltip/ClientTooltipComponent; a
	getHeight ()I a
	getWidth (Lnet/minecraft/client/gui/Font;)I a
	renderImage (Lnet/minecraft/client/gui/Font;IILcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/entity/ItemRenderer;ILnet/minecraft/client/renderer/texture/TextureManager;)V a
	renderText (Lnet/minecraft/client/gui/Font;IILcom/mojang/math/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource;)V a
net/minecraft/client/gui/screens/multiplayer/JoinMultiplayerScreen edb
	LOGGER b
	deleteButton r
	editButton p
	editingServer t
	initedOnce w
	lanServerDetector v
	lanServerList u
	lastScreen n
	pinger c
	selectButton q
	serverSelectionList a
	servers o
	toolTip s
	addServerCallback (Z)V f
	deleteCallback (Z)V c
	directJoinCallback (Z)V g
	editServerCallback (Z)V e
	getPinger ()Lnet/minecraft/client/multiplayer/ServerStatusPinger; w
	getServers ()Lnet/minecraft/client/multiplayer/ServerList; x
	init ()V b
	join (Lnet/minecraft/client/multiplayer/ServerData;)V a
	joinSelectedServer ()V h
	keyPressed (III)Z a
	onSelectedChange ()V u
	refreshServerList ()V y
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setSelected (Lnet/minecraft/client/gui/screens/multiplayer/ServerSelectionList$Entry;)V a
	setToolTip (Ljava/util/List;)V b
	tick ()V d
net/minecraft/client/gui/screens/multiplayer/SafetyScreen edc
	CHECK n
	CONTENT c
	NARRATION o
	TITLE b
	message q
	previous a
	stopShowing p
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; af_
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/client/gui/screens/multiplayer/ServerSelectionList edd
	CANT_CONNECT_TEXT t
	CANT_RESOLVE_TEXT s
	ICON_MISSING p
	ICON_OVERLAY_LOCATION q
	INCOMPATIBLE_TOOLTIP u
	LOGGER a
	NO_CONNECTION_TOOLTIP v
	PINGING_TOOLTIP w
	SCANNING_LABEL r
	THREAD_POOL o
	lanHeader z
	networkServers A
	onlineServers y
	screen x
	getRowWidth ()I d
	getScrollbarPosition ()I e
	isFocused ()Z b
	keyPressed (III)Z a
	moveSelection (Lnet/minecraft/client/gui/components/AbstractSelectionList$SelectionDirection;)V a
	refreshEntries ()V f
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/screens/multiplayer/ServerSelectionList$Entry;)V a
	updateNetworkServers (Ljava/util/List;)V a
	updateOnlineServers (Lnet/minecraft/client/multiplayer/ServerList;)V a
net/minecraft/client/gui/screens/multiplayer/ServerSelectionList$Entry edd$a
net/minecraft/client/gui/screens/multiplayer/ServerSelectionList$LANHeader edd$b
	minecraft a
	getNarration ()Lnet/minecraft/network/chat/Component; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/screens/multiplayer/ServerSelectionList$NetworkServerEntry edd$c
	HIDDEN_ADDRESS_TEXT e
	ICON_WIDTH c
	LAN_SERVER_HEADER d
	lastClickTime g
	minecraft a
	screen f
	serverData b
	getNarration ()Lnet/minecraft/network/chat/Component; a
	getServerData ()Lnet/minecraft/client/server/LanServer; b
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/screens/multiplayer/ServerSelectionList$OnlineServerEntry edd$d
	ICON_HEIGHT c
	ICON_OVERLAY_X_MOVE_DOWN f
	ICON_OVERLAY_X_MOVE_LEFT e
	ICON_OVERLAY_X_MOVE_RIGHT d
	ICON_OVERLAY_X_MOVE_UP g
	ICON_OVERLAY_Y_SELECTED i
	ICON_OVERLAY_Y_UNSELECTED h
	ICON_WIDTH b
	icon o
	iconLocation m
	lastClickTime p
	lastIconB64 n
	minecraft k
	screen j
	serverData l
	canJoin ()Z d
	drawIcon (Lcom/mojang/blaze3d/vertex/PoseStack;IILnet/minecraft/resources/ResourceLocation;)V a
	getNarration ()Lnet/minecraft/network/chat/Component; a
	getServerData ()Lnet/minecraft/client/multiplayer/ServerData; c
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	swap (II)V a
	updateServerList ()V b
	uploadServerIcon (Ljava/lang/String;)Z a
net/minecraft/client/gui/screens/packs/PackSelectionModel edg
	iconGetter d
	onListChanged e
	output f
	repository a
	selected b
	unselected c
	commit ()V c
	findNewPacks ()V d
	getSelected ()Ljava/util/stream/Stream; b
	getUnselected ()Ljava/util/stream/Stream; a
net/minecraft/client/gui/screens/packs/PackSelectionModel$Entry edg$a
	canMoveDown ()Z q
	canMoveUp ()Z p
	canSelect ()Z n
	canUnselect ()Z o
	getCompatibility ()Lnet/minecraft/server/packs/repository/PackCompatibility; b
	getDescription ()Lnet/minecraft/network/chat/Component; d
	getExtendedDescription ()Lnet/minecraft/network/chat/Component; f
	getIconTexture ()Lnet/minecraft/resources/ResourceLocation; a
	getPackSource ()Lnet/minecraft/server/packs/repository/PackSource; e
	getTitle ()Lnet/minecraft/network/chat/Component; c
	isFixedPosition ()Z g
	isRequired ()Z h
	isSelected ()Z m
	moveDown ()V l
	moveUp ()V k
	select ()V i
	unselect ()V j
net/minecraft/client/gui/screens/packs/PackSelectionModel$EntryBase edg$b
	pack b
	canMoveDown ()Z q
	canMoveUp ()Z p
	getCompatibility ()Lnet/minecraft/server/packs/repository/PackCompatibility; b
	getDescription ()Lnet/minecraft/network/chat/Component; d
	getIconTexture ()Lnet/minecraft/resources/ResourceLocation; a
	getOtherList ()Ljava/util/List; s
	getPackSource ()Lnet/minecraft/server/packs/repository/PackSource; e
	getSelfList ()Ljava/util/List; r
	getTitle ()Lnet/minecraft/network/chat/Component; c
	isFixedPosition ()Z g
	isRequired ()Z h
	move (I)V a
	moveDown ()V l
	moveUp ()V k
	toggleSelection ()V t
net/minecraft/client/gui/screens/packs/PackSelectionModel$SelectedPackEntry edg$c
	getOtherList ()Ljava/util/List; s
	getSelfList ()Ljava/util/List; r
	isSelected ()Z m
	select ()V i
	unselect ()V j
net/minecraft/client/gui/screens/packs/PackSelectionModel$UnselectedPackEntry edg$d
	getOtherList ()Ljava/util/List; s
	getSelfList ()Ljava/util/List; r
	isSelected ()Z m
	select ()V i
	unselect ()V j
net/minecraft/client/gui/screens/packs/PackSelectionScreen edh
	DEFAULT_ICON p
	DIRECTORY_BUTTON_TOOLTIP n
	DRAG_AND_DROP c
	LIST_WIDTH b
	LOGGER a
	RELOAD_COOLDOWN o
	availablePackList u
	doneButton x
	lastScreen r
	model q
	packDir w
	packIcons y
	selectedPackList v
	ticksToReload t
	watcher s
	closeWatcher ()V h
	copyPacks (Lnet/minecraft/client/Minecraft;Ljava/util/List;Ljava/nio/file/Path;)V a
	getPackIcon (Lnet/minecraft/server/packs/repository/Pack;)Lnet/minecraft/resources/ResourceLocation; a
	init ()V b
	loadPackIcon (Lnet/minecraft/client/renderer/texture/TextureManager;Lnet/minecraft/server/packs/repository/Pack;)Lnet/minecraft/resources/ResourceLocation; a
	onClose ()V ah_
	onFilesDrop (Ljava/util/List;)V a
	populateLists ()V u
	reload ()V w
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	tick ()V d
	updateList (Lnet/minecraft/client/gui/screens/packs/TransferableSelectionList;Ljava/util/stream/Stream;)V a
net/minecraft/client/gui/screens/packs/PackSelectionScreen$Watcher edh$a
	packPath b
	watcher a
	create (Ljava/io/File;)Lnet/minecraft/client/gui/screens/packs/PackSelectionScreen$Watcher; a
	pollForChanges ()Z a
	watchDir (Ljava/nio/file/Path;)V a
net/minecraft/client/gui/screens/packs/TransferableSelectionList edi
	ICON_OVERLAY_LOCATION a
	INCOMPATIBLE_CONFIRM_TITLE p
	INCOMPATIBLE_TITLE o
	title q
	getRowWidth ()I d
	getScrollbarPosition ()I e
	renderHeader (Lcom/mojang/blaze3d/vertex/PoseStack;IILcom/mojang/blaze3d/vertex/Tesselator;)V a
net/minecraft/client/gui/screens/packs/TransferableSelectionList$PackEntry edi$a
	ICON_OVERLAY_X_MOVE_DOWN e
	ICON_OVERLAY_X_MOVE_LEFT d
	ICON_OVERLAY_X_MOVE_RIGHT c
	ICON_OVERLAY_X_MOVE_UP f
	ICON_OVERLAY_Y_SELECTED h
	ICON_OVERLAY_Y_UNSELECTED g
	MAX_DESCRIPTION_WIDTH_PIXELS i
	MAX_NAME_WIDTH_PIXELS j
	TOO_LONG_NAME_SUFFIX k
	descriptionDisplayCache o
	incompatibleDescriptionDisplayCache q
	incompatibleNameDisplayCache p
	minecraft a
	nameDisplayCache n
	pack m
	parent l
	screen b
	cacheDescription (Lnet/minecraft/client/Minecraft;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/client/gui/components/MultiLineLabel; b
	cacheName (Lnet/minecraft/client/Minecraft;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/util/FormattedCharSequence; a
	getNarration ()Lnet/minecraft/network/chat/Component; a
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	showHoverOverlay ()Z b
net/minecraft/client/gui/screens/recipebook/AbstractFurnaceRecipeBookComponent edk
	fuels k
	getFuelItems ()Ljava/util/Set; b
	initFilterButtonTextures ()V a
	setupGhostRecipe (Lnet/minecraft/world/item/crafting/Recipe;Ljava/util/List;)V a
	slotClicked (Lnet/minecraft/world/inventory/Slot;)V a
net/minecraft/client/gui/screens/recipebook/BlastingRecipeBookComponent edl
	FILTER_NAME k
	getFuelItems ()Ljava/util/Set; b
	getRecipeFilterName ()Lnet/minecraft/network/chat/Component; c
net/minecraft/client/gui/screens/recipebook/GhostRecipe edm
	ingredients b
	recipe a
	time c
	addIngredient (Lnet/minecraft/world/item/crafting/Ingredient;II)V a
	clear ()V a
	get (I)Lnet/minecraft/client/gui/screens/recipebook/GhostRecipe$GhostIngredient; a
	getRecipe ()Lnet/minecraft/world/item/crafting/Recipe; c
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/Minecraft;IIZF)V a
	setRecipe (Lnet/minecraft/world/item/crafting/Recipe;)V a
	size ()I b
net/minecraft/client/gui/screens/recipebook/GhostRecipe$GhostIngredient edm$a
	ingredient b
	x c
	y d
	getItem ()Lnet/minecraft/world/item/ItemStack; c
	getX ()I a
	getY ()I b
net/minecraft/client/gui/screens/recipebook/OverlayRecipeComponent edn
	ITEM_RENDER_SCALE d
	MAX_ROW b
	MAX_ROW_LARGE c
	RECIPE_BOOK_LOCATION a
	collection m
	isFurnaceMenu p
	isVisible i
	lastRecipeClicked n
	minecraft l
	recipeButtons e
	time o
	x j
	y k
	changeFocus (Z)Z b
	getLastRecipeClicked ()Lnet/minecraft/world/item/crafting/Recipe; b
	getRecipeCollection ()Lnet/minecraft/client/gui/screens/recipebook/RecipeCollection; a
	init (Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/gui/screens/recipebook/RecipeCollection;IIIIF)V a
	isMouseOver (DD)Z a_
	isVisible ()Z c
	mouseClicked (DDI)Z a
	nineInchSprite (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIII)V c
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setVisible (Z)V a
net/minecraft/client/gui/screens/recipebook/OverlayRecipeComponent$OverlayRecipeButton edn$a
	ingredientPos a
	isCraftable d
	recipe c
	addItemToSlot (Ljava/util/Iterator;IIII)V a
	calculateIngredientsPositions (Lnet/minecraft/world/item/crafting/Recipe;)V a
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/screens/recipebook/OverlayRecipeComponent$OverlayRecipeButton$Pos edn$a$a
	ingredients a
	x b
	y c
net/minecraft/client/gui/screens/recipebook/OverlayRecipeComponent$OverlaySmeltingRecipeButton edn$b
	calculateIngredientsPositions (Lnet/minecraft/world/item/crafting/Recipe;)V a
net/minecraft/client/gui/screens/recipebook/RecipeBookComponent edo
	ALL_RECIPES_TOOLTIP n
	IMAGE_HEIGHT c
	IMAGE_WIDTH b
	OFFSET_X_POSITION l
	ONLY_CRAFTABLES_TOOLTIP m
	RECIPE_BOOK_LOCATION a
	SEARCH_HINT k
	book v
	filterButton e
	ghostRecipe d
	height q
	ignoreTextInput z
	lastSearch u
	menu i
	minecraft j
	recipeBookPage w
	searchBox t
	selectedTab s
	stackedContents x
	tabButtons r
	timesInventoryChanged y
	visible A
	width p
	widthTooNarrow B
	xOffset o
	addItemToSlot (Ljava/util/Iterator;IIII)V a
	changeFocus (Z)Z b
	charTyped (CI)Z a
	checkSearchStringUpdate ()V q
	getFilterButtonTooltip ()Lnet/minecraft/network/chat/Component; o
	getRecipeFilterName ()Lnet/minecraft/network/chat/Component; c
	hasClickedOutside (DDIIIII)Z a
	init (IILnet/minecraft/client/Minecraft;ZLnet/minecraft/world/inventory/RecipeBookMenu;)V a
	initFilterButtonTextures ()V a
	initVisuals ()V d
	isMouseOver (DD)Z a_
	isOffsetNextToMainGUI ()Z r
	isVisible ()Z g
	isVisibleAccordingToBookData ()Z b
	keyPressed (III)Z a
	keyReleased (III)Z b
	mouseClicked (DDI)Z a
	narrationPriority ()Lnet/minecraft/client/gui/narration/NarratableEntry$NarrationPriority; t
	pirateSpeechForThePeople (Ljava/lang/String;)V a
	recipesShown (Ljava/util/List;)V a
	recipesUpdated ()V j
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderGhostRecipe (Lcom/mojang/blaze3d/vertex/PoseStack;IIZF)V a
	renderGhostRecipeTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V d
	renderTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V c
	sendUpdateSettings ()V k
	setVisible (Z)V a
	setupGhostRecipe (Lnet/minecraft/world/item/crafting/Recipe;Ljava/util/List;)V a
	slotClicked (Lnet/minecraft/world/inventory/Slot;)V a
	tick ()V h
	toggleFiltering ()Z p
	toggleVisibility ()V f
	updateCollections (Z)V c
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
	updateScreenPosition (II)I a
	updateStackedContents ()V n
	updateTabs ()V m
net/minecraft/client/gui/screens/recipebook/RecipeBookPage edp
	ITEMS_PER_PAGE a
	backButton i
	buttons b
	currentPage k
	forwardButton h
	hoveredButton c
	lastClickedRecipe m
	lastClickedRecipeCollection n
	minecraft e
	overlay d
	recipeBook l
	recipeCollections g
	showListeners f
	totalPages j
	addListener (Lnet/minecraft/client/gui/screens/recipebook/RecipeBookComponent;)V a
	getLastClickedRecipe ()Lnet/minecraft/world/item/crafting/Recipe; a
	getLastClickedRecipeCollection ()Lnet/minecraft/client/gui/screens/recipebook/RecipeCollection; b
	getMinecraft ()Lnet/minecraft/client/Minecraft; d
	getRecipeBook ()Lnet/minecraft/stats/RecipeBook; e
	init (Lnet/minecraft/client/Minecraft;II)V a
	listButtons (Ljava/util/function/Consumer;)V a
	mouseClicked (DDIIIII)Z a
	recipesShown (Ljava/util/List;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIF)V a
	renderTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	setInvisible ()V c
	updateArrowButtons ()V g
	updateButtonsForPage ()V f
	updateCollections (Ljava/util/List;Z)V a
net/minecraft/client/gui/screens/recipebook/RecipeBookTabButton edq
	ANIMATION_TIME t
	animationTime u
	category s
	getCategory ()Lnet/minecraft/client/RecipeBookCategories; b
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	renderIcon (Lnet/minecraft/client/renderer/entity/ItemRenderer;)V a
	startAnimation (Lnet/minecraft/client/Minecraft;)V a
	updateVisibility (Lnet/minecraft/client/ClientRecipeBook;)Z a
net/minecraft/client/gui/screens/recipebook/RecipeButton edr
	ANIMATION_TIME c
	BACKGROUND_SIZE d
	MORE_RECIPES_TOOLTIP e
	RECIPE_BOOK_LOCATION b
	TICKS_TO_SWAP a
	animationTime v
	book s
	collection t
	currentIndex w
	menu r
	time u
	getCollection ()Lnet/minecraft/client/gui/screens/recipebook/RecipeCollection; a
	getOrderedRecipes ()Ljava/util/List; k
	getRecipe ()Lnet/minecraft/world/item/crafting/Recipe; j
	getTooltipText (Lnet/minecraft/client/gui/screens/Screen;)Ljava/util/List; a
	getWidth ()I f
	init (Lnet/minecraft/client/gui/screens/recipebook/RecipeCollection;Lnet/minecraft/client/gui/screens/recipebook/RecipeBookPage;)V a
	isOnlyOption ()Z b
	isValidClickButton (I)Z d_
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	setPosition (II)V a
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/screens/recipebook/RecipeCollection eds
	craftable c
	fitsDimensions d
	known e
	recipes a
	singleResultItem b
	allRecipesHaveSameResult (Ljava/util/List;)Z a
	canCraft (Lnet/minecraft/world/entity/player/StackedContents;IILnet/minecraft/stats/RecipeBook;)V a
	getDisplayRecipes (Z)Ljava/util/List; b
	getRecipes ()Ljava/util/List; d
	getRecipes (Z)Ljava/util/List; a
	hasCraftable ()Z b
	hasFitting ()Z c
	hasKnownRecipes ()Z a
	hasSingleResultItem ()Z e
	isCraftable (Lnet/minecraft/world/item/crafting/Recipe;)Z a
	updateKnownRecipes (Lnet/minecraft/stats/RecipeBook;)V a
net/minecraft/client/gui/screens/recipebook/RecipeShownListener edt
	recipesShown (Ljava/util/List;)V a
net/minecraft/client/gui/screens/recipebook/RecipeUpdateListener edu
	getRecipeBookComponent ()Lnet/minecraft/client/gui/screens/recipebook/RecipeBookComponent; w
	recipesUpdated ()V u
net/minecraft/client/gui/screens/recipebook/SmeltingRecipeBookComponent edv
	FILTER_NAME k
	getFuelItems ()Ljava/util/Set; b
	getRecipeFilterName ()Lnet/minecraft/network/chat/Component; c
net/minecraft/client/gui/screens/recipebook/SmokingRecipeBookComponent edw
	FILTER_NAME k
	getFuelItems ()Ljava/util/Set; b
	getRecipeFilterName ()Lnet/minecraft/network/chat/Component; c
net/minecraft/client/gui/screens/social/PlayerEntry edy
	BG_FILL b
	BG_FILL_REMOVED c
	BLOCKED v
	BLOCKED_OFFLINE y
	CHAT_TOGGLE_ICON_SIZE B
	CHAT_TOGGLE_ICON_X C
	CHAT_TOGGLE_ICON_Y D
	HIDDEN u
	HIDDEN_OFFLINE x
	OFFLINE w
	PADDING A
	PLAYERNAME_COLOR d
	PLAYER_STATUS_COLOR e
	SKIN_SHADE a
	SKIN_SIZE z
	TOOLTIP_DELAY f
	TOOLTIP_MAX_WIDTH g
	children i
	hideButton n
	hideText p
	hideTooltip r
	id j
	isRemoved m
	minecraft h
	playerName k
	showButton o
	showText q
	showTooltip s
	skinGetter l
	tooltipHoverTime t
	children ()Ljava/util/List; j
	getEntryNarationMessage (Lnet/minecraft/network/chat/MutableComponent;)Lnet/minecraft/network/chat/MutableComponent; a
	getPlayerId ()Ljava/util/UUID; d
	getPlayerName ()Ljava/lang/String; c
	getStatusComponent ()Lnet/minecraft/network/chat/Component; e
	narratables ()Ljava/util/List; b
	onHiddenOrShown (ZLnet/minecraft/network/chat/Component;)V a
	postRenderTooltip (Lnet/minecraft/client/gui/screens/social/SocialInteractionsScreen;Lcom/mojang/blaze3d/vertex/PoseStack;Ljava/util/List;II)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	setRemoved (Z)V c
net/minecraft/client/gui/screens/social/PlayerSocialManager edz
	discoveredNamesToUUID d
	hiddenPlayers b
	minecraft a
	service c
	addPlayer (Lnet/minecraft/client/multiplayer/PlayerInfo;)V a
	getDiscoveredUUID (Ljava/lang/String;)Ljava/util/UUID; a
	getHiddenPlayers ()Ljava/util/Set; a
	hidePlayer (Ljava/util/UUID;)V a
	isBlocked (Ljava/util/UUID;)Z e
	isHidden (Ljava/util/UUID;)Z d
	removePlayer (Ljava/util/UUID;)V f
	shouldHideMessageFrom (Ljava/util/UUID;)Z c
	showPlayer (Ljava/util/UUID;)V b
net/minecraft/client/gui/screens/social/SocialInteractionsPlayerList eea
	filter p
	players o
	socialInteractionsScreen a
	addPlayer (Lnet/minecraft/client/multiplayer/PlayerInfo;Lnet/minecraft/client/gui/screens/social/SocialInteractionsScreen$Page;)V a
	isEmpty ()Z f
	removePlayer (Ljava/util/UUID;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setFilter (Ljava/lang/String;)V a
	updateFilteredPlayers ()V g
	updatePlayerList (Ljava/util/Collection;D)V a
net/minecraft/client/gui/screens/social/SocialInteractionsScreen eeb
	BG_BORDER_SIZE z
	BG_UNITS A
	BG_WIDTH B
	BLOCKING_HINT x
	BLOCK_LINK y
	BUTTON_HEIGHT F
	EMPTY_BLOCKED w
	EMPTY_HIDDEN v
	EMPTY_SEARCH u
	IMAGE_WIDTH E
	ITEM_HEIGHT G
	LIST_START b
	MARGIN_Y D
	SEARCH_HEIGHT C
	SEARCH_HINT t
	SEARCH_START c
	SOCIAL_INTERACTIONS_LOCATION a
	TAB_ALL n
	TAB_ALL_SELECTED q
	TAB_BLOCKED p
	TAB_BLOCKED_SELECTED s
	TAB_HIDDEN o
	TAB_HIDDEN_SELECTED r
	allButton L
	blockedButton N
	blockingHintButton O
	hiddenButton M
	initialized R
	lastSearch J
	page K
	playerCount Q
	postRenderRunnable S
	searchBox I
	serverLabel P
	socialInteractionsPlayerList H
	backgroundUnits ()I u
	checkSearchStringUpdate (Ljava/lang/String;)V b
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; af_
	init ()V b
	isPauseScreen ()Z ai_
	keyPressed (III)Z a
	listEnd ()I w
	marginX ()I x
	mouseClicked (DDI)Z a
	onAddPlayer (Lnet/minecraft/client/multiplayer/PlayerInfo;)V a
	onRemovePlayer (Ljava/util/UUID;)V a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	setPostRenderRunnable (Ljava/lang/Runnable;)V a
	showPage (Lnet/minecraft/client/gui/screens/social/SocialInteractionsScreen$Page;)V a
	tick ()V d
	updateServerLabel (Lnet/minecraft/client/Minecraft;)V a
	windowHeight ()I h
net/minecraft/client/gui/screens/social/SocialInteractionsScreen$Page eeb$a
	$VALUES d
	ALL a
	BLOCKED c
	HIDDEN b
	$values ()[Lnet/minecraft/client/gui/screens/social/SocialInteractionsScreen$Page; a
net/minecraft/client/gui/screens/worldselection/CreateWorldScreen eed
	COMMANDS_INFO u
	GAME_MODEL_LABEL p
	LOGGER n
	NAME_LABEL s
	OUTPUT_DIR_INFO t
	SEED_INFO r
	SEED_LABEL q
	TEMP_WORLD_PREFIX o
	commands B
	commandsButton M
	commandsChanged C
	createButton G
	dataPacks b
	dataPacksButton L
	difficulty A
	difficultyButton I
	gameMode y
	gameModeHelp1 N
	gameModeHelp2 O
	gameRules Q
	gameRulesButton K
	hardCore a
	initName P
	lastScreen v
	modeButton H
	moreOptionsButton J
	nameEdit w
	oldGameMode z
	resultFolder x
	tempDataPackDir D
	tempDataPackRepository E
	worldGenSettingsComponent c
	worldGenSettingsVisible F
	addRenderableWidget (Lnet/minecraft/client/gui/components/events/GuiEventListener;)Lnet/minecraft/client/gui/components/events/GuiEventListener; d
	addWidget (Lnet/minecraft/client/gui/components/events/GuiEventListener;)Lnet/minecraft/client/gui/components/events/GuiEventListener; e
	cleanupTempResources ()V C
	copyBetweenDirs (Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)V a
	copyTempDataPackDirToNewWorld ()Z F
	create (Lnet/minecraft/client/gui/screens/Screen;)Lnet/minecraft/client/gui/screens/worldselection/CreateWorldScreen; a
	createTempDataPackDirFromExistingWorld (Ljava/nio/file/Path;Lnet/minecraft/client/Minecraft;)Ljava/nio/file/Path; a
	getDataPackSelectionSettings ()Lcom/mojang/datafixers/util/Pair; G
	getEffectiveDifficulty ()Lnet/minecraft/world/Difficulty; x
	getTempDataPackDir ()Ljava/nio/file/Path; w
	init ()V b
	keyPressed (III)Z a
	onClose ()V ah_
	onCreate ()V A
	openDataPackSelectionScreen ()V D
	popScreen ()V u
	refreshWorldGenSettingsVisibility ()V h
	removeTempDataPackDir ()V E
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setGameMode (Lnet/minecraft/client/gui/screens/worldselection/CreateWorldScreen$SelectedGameMode;)V a
	setWorldGenSettingsVisible (Z)V c
	tick ()V d
	toggleWorldGenSettingsVisibility ()V B
	tryApplyNewDataPacks (Lnet/minecraft/server/packs/repository/PackRepository;)V a
	updateGameModeHelp ()V y
	updateResultFolder ()V z
net/minecraft/client/gui/screens/worldselection/CreateWorldScreen$OperationFailedException eed$a
net/minecraft/client/gui/screens/worldselection/CreateWorldScreen$SelectedGameMode eed$b
	$VALUES h
	CREATIVE c
	DEBUG d
	HARDCORE b
	SURVIVAL a
	displayName g
	gameType f
	name e
	$values ()[Lnet/minecraft/client/gui/screens/worldselection/CreateWorldScreen$SelectedGameMode; b
	getDisplayName ()Lnet/minecraft/network/chat/Component; a
net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen eee
	doneButton n
	exitCallback a
	gameRules p
	invalidEntries c
	rules b
	tooltip o
	clearInvalid (Lnet/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$RuleEntry;)V b
	init ()V b
	markInvalid (Lnet/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$RuleEntry;)V a
	onClose ()V ah_
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setTooltip (Ljava/util/List;)V b
	updateDoneButton ()V h
net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$BooleanRuleEntry eee$a
	checkbox e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$CategoryRuleEntry eee$b
	label b
	children ()Ljava/util/List; j
	narratables ()Ljava/util/List; b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$EntryFactory eee$c
net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$GameRuleEntry eee$d
	children b
	label a
	children ()Ljava/util/List; j
	narratables ()Ljava/util/List; b
	renderLabel (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$IntegerRuleEntry eee$e
	input e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$RuleEntry eee$f
	tooltip a
net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$RuleList eee$g
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/client/gui/screens/worldselection/EditWorldScreen eef
	LOGGER a
	NAME_LABEL c
	WORLD_GEN_SETTINGS_GSON b
	callback o
	levelAccess q
	nameEdit p
	renameButton n
	init ()V b
	makeBackupAndShowToast (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;)Z a
	makeBackupAndShowToast (Lnet/minecraft/world/level/storage/LevelStorageSource;Ljava/lang/String;)V a
	onClose ()V ah_
	onRename ()V h
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	tick ()V d
net/minecraft/client/gui/screens/worldselection/OptimizeWorldScreen eeg
	DIMENSION_COLORS b
	LOGGER a
	callback c
	upgrader n
	create (Lnet/minecraft/client/Minecraft;Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;Lcom/mojang/datafixers/DataFixer;Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;Z)Lnet/minecraft/client/gui/screens/worldselection/OptimizeWorldScreen; a
	init ()V b
	onClose ()V ah_
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	tick ()V d
net/minecraft/client/gui/screens/worldselection/SelectWorldScreen eeh
	LOGGER c
	copyButton r
	deleteButton o
	lastScreen a
	list s
	renameButton q
	searchBox b
	selectButton p
	toolTip n
	charTyped (CI)Z a
	init ()V b
	keyPressed (III)Z a
	mouseScrolled (DDD)Z a
	onClose ()V ah_
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setToolTip (Ljava/util/List;)V b
	tick ()V d
	updateButtonStatus (Z)V c
net/minecraft/client/gui/screens/worldselection/WorldGenSettingsComponent eei
	AMPLIFIED_HELP_TEXT c
	CUSTOM_WORLD_DESCRIPTION b
	LOGGER a
	MAP_FEATURES_INFO d
	SELECT_FILE_PROMPT e
	amplifiedWorldInfo f
	bonusItemsButton k
	customWorldDummyButton m
	customizeTypeButton n
	featuresButton j
	font g
	importSettingsButton o
	preset r
	registryHolder p
	seed s
	seedEdit i
	settings q
	typeButton l
	width h
	importSettings (Lnet/minecraft/core/RegistryAccess$RegistryHolder;Lnet/minecraft/world/level/levelgen/WorldGenSettings;)V a
	init (Lnet/minecraft/client/gui/screens/worldselection/CreateWorldScreen;Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/gui/Font;)V a
	isDebug ()Z b
	makeSettings (Z)Lnet/minecraft/world/level/levelgen/WorldGenSettings; a
	parseLong (Ljava/lang/String;)Ljava/util/OptionalLong; a
	parseSeed ()Ljava/util/OptionalLong; f
	registryHolder ()Lnet/minecraft/core/RegistryAccess$RegistryHolder; c
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	selectWorldTypeButton (Z)V c
	setVisibility (Z)V b
	switchOutOfHardcode ()V e
	switchToHardcore ()V d
	tick ()V a
	toString (Ljava/util/OptionalLong;)Ljava/lang/String; a
	updateDataPacks (Lnet/minecraft/server/ServerResources;)V a
	updateSettings (Lnet/minecraft/world/level/levelgen/WorldGenSettings;)V a
net/minecraft/client/gui/screens/worldselection/WorldPreset eej
	AMPLIFIED b
	DEBUG j
	EDITORS d
	FLAT e
	LARGE_BIOMES f
	NORMAL a
	PRESETS c
	SINGLE_BIOME_CAVES h
	SINGLE_BIOME_FLOATING_ISLANDS i
	SINGLE_BIOME_SURFACE g
	description k
	create (Lnet/minecraft/core/RegistryAccess$RegistryHolder;JZZ)Lnet/minecraft/world/level/levelgen/WorldGenSettings; a
	description ()Lnet/minecraft/network/chat/Component; a
	fromBuffetSettings (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/levelgen/WorldGenSettings;Lnet/minecraft/client/gui/screens/worldselection/WorldPreset;Lnet/minecraft/world/level/biome/Biome;)Lnet/minecraft/world/level/levelgen/WorldGenSettings; a
	generator (Lnet/minecraft/core/Registry;Lnet/minecraft/core/Registry;J)Lnet/minecraft/world/level/chunk/ChunkGenerator; a
	isVisibleByDefault (Lnet/minecraft/client/gui/screens/worldselection/WorldPreset;)Z a
	of (Lnet/minecraft/world/level/levelgen/WorldGenSettings;)Ljava/util/Optional; a
	parseBuffetSettings (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/levelgen/WorldGenSettings;)Lnet/minecraft/world/level/biome/Biome; a
net/minecraft/client/gui/screens/worldselection/WorldPreset$PresetEditor eej$a
net/minecraft/client/gui/screens/worldselection/WorldSelectionList eek
	DATE_FORMAT o
	FROM_NEWER_TOOLTIP_1 r
	FROM_NEWER_TOOLTIP_2 s
	ICON_MISSING p
	ICON_OVERLAY_LOCATION q
	LOGGER a
	SNAPSHOT_TOOLTIP_1 t
	SNAPSHOT_TOOLTIP_2 u
	WORLD_LOCKED_TOOLTIP v
	WORLD_PRE_WORLDHEIGHT_TOOLTIP w
	cachedList y
	screen x
	getRowWidth ()I d
	getScreen ()Lnet/minecraft/client/gui/screens/worldselection/SelectWorldScreen; g
	getScrollbarPosition ()I e
	getSelectedOpt ()Ljava/util/Optional; f
	isFocused ()Z b
	moveSelection (Lnet/minecraft/client/gui/components/AbstractSelectionList$SelectionDirection;)V a
	refreshList (Ljava/util/function/Supplier;Z)V a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/screens/worldselection/WorldSelectionList$WorldListEntry;)V a
net/minecraft/client/gui/screens/worldselection/WorldSelectionList$WorldListEntry eek$a
	ICON_HEIGHT c
	ICON_OVERLAY_X_ERROR g
	ICON_OVERLAY_X_JOIN d
	ICON_OVERLAY_X_JOIN_WITH_NOTIFY e
	ICON_OVERLAY_X_WARNING f
	ICON_OVERLAY_Y_SELECTED i
	ICON_OVERLAY_Y_UNSELECTED h
	ICON_WIDTH b
	icon o
	iconFile n
	iconLocation m
	lastClickTime p
	minecraft j
	screen k
	summary l
	deleteWorld ()V c
	doDeleteWorld ()V d
	editWorld ()V e
	getLevelName ()Ljava/lang/String; g
	getNarration ()Lnet/minecraft/network/chat/Component; a
	joinWorld ()V b
	loadServerIcon ()Lnet/minecraft/client/renderer/texture/DynamicTexture; j
	loadWorld ()V h
	mouseClicked (DDI)Z a
	queueLoadScreen ()V i
	recreateWorld ()V f
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/spectator/PlayerMenuItem eem
	location b
	name c
	profile a
	getName ()Lnet/minecraft/network/chat/Component; an_
	isEnabled ()Z ao_
	renderIcon (Lcom/mojang/blaze3d/vertex/PoseStack;FI)V a
	selectItem (Lnet/minecraft/client/gui/spectator/SpectatorMenu;)V a
net/minecraft/client/gui/spectator/RootSpectatorMenuCategory een
	PROMPT_TEXT a
	items b
	getItems ()Ljava/util/List; a
	getPrompt ()Lnet/minecraft/network/chat/Component; b
net/minecraft/client/gui/spectator/SpectatorMenu eeo
	CLOSE_ITEM b
	CLOSE_MENU_TEXT g
	EMPTY_SLOT a
	MAX_PER_PAGE f
	NEXT_PAGE_TEXT i
	PREVIOUS_PAGE_TEXT h
	SCROLL_LEFT c
	SCROLL_RIGHT_DISABLED e
	SCROLL_RIGHT_ENABLED d
	category k
	listener j
	page m
	selectedSlot l
	exit ()V d
	getCurrentPage ()Lnet/minecraft/client/gui/spectator/categories/SpectatorPage; f
	getItem (I)Lnet/minecraft/client/gui/spectator/SpectatorMenuItem; a
	getItems ()Ljava/util/List; a
	getSelectedCategory ()Lnet/minecraft/client/gui/spectator/SpectatorMenuCategory; c
	getSelectedItem ()Lnet/minecraft/client/gui/spectator/SpectatorMenuItem; b
	getSelectedSlot ()I e
	selectCategory (Lnet/minecraft/client/gui/spectator/SpectatorMenuCategory;)V a
	selectSlot (I)V b
net/minecraft/client/gui/spectator/SpectatorMenu$CloseSpectatorItem eeo$a
	getName ()Lnet/minecraft/network/chat/Component; an_
	isEnabled ()Z ao_
	renderIcon (Lcom/mojang/blaze3d/vertex/PoseStack;FI)V a
	selectItem (Lnet/minecraft/client/gui/spectator/SpectatorMenu;)V a
net/minecraft/client/gui/spectator/SpectatorMenu$ScrollMenuItem eeo$b
	direction a
	enabled b
	getName ()Lnet/minecraft/network/chat/Component; an_
	isEnabled ()Z ao_
	renderIcon (Lcom/mojang/blaze3d/vertex/PoseStack;FI)V a
	selectItem (Lnet/minecraft/client/gui/spectator/SpectatorMenu;)V a
net/minecraft/client/gui/spectator/SpectatorMenuCategory eep
	getItems ()Ljava/util/List; a
	getPrompt ()Lnet/minecraft/network/chat/Component; b
net/minecraft/client/gui/spectator/SpectatorMenuItem eeq
	getName ()Lnet/minecraft/network/chat/Component; an_
	isEnabled ()Z ao_
	renderIcon (Lcom/mojang/blaze3d/vertex/PoseStack;FI)V a
	selectItem (Lnet/minecraft/client/gui/spectator/SpectatorMenu;)V a
net/minecraft/client/gui/spectator/SpectatorMenuListener eer
	onSpectatorMenuClosed (Lnet/minecraft/client/gui/spectator/SpectatorMenu;)V a
net/minecraft/client/gui/spectator/categories/SpectatorPage ees
	NO_SELECTION a
	items b
	selection c
	getItem (I)Lnet/minecraft/client/gui/spectator/SpectatorMenuItem; a
	getSelectedSlot ()I a
net/minecraft/client/gui/spectator/categories/TeleportToPlayerMenuCategory eet
	PROFILE_ORDER a
	TELEPORT_PROMPT c
	TELEPORT_TEXT b
	items d
	getItems ()Ljava/util/List; a
	getName ()Lnet/minecraft/network/chat/Component; an_
	getPrompt ()Lnet/minecraft/network/chat/Component; b
	isEnabled ()Z ao_
	renderIcon (Lcom/mojang/blaze3d/vertex/PoseStack;FI)V a
	selectItem (Lnet/minecraft/client/gui/spectator/SpectatorMenu;)V a
net/minecraft/client/gui/spectator/categories/TeleportToTeamMenuCategory eeu
	TELEPORT_PROMPT b
	TELEPORT_TEXT a
	items c
	getItems ()Ljava/util/List; a
	getName ()Lnet/minecraft/network/chat/Component; an_
	getPrompt ()Lnet/minecraft/network/chat/Component; b
	isEnabled ()Z ao_
	renderIcon (Lcom/mojang/blaze3d/vertex/PoseStack;FI)V a
	selectItem (Lnet/minecraft/client/gui/spectator/SpectatorMenu;)V a
net/minecraft/client/gui/spectator/categories/TeleportToTeamMenuCategory$TeamSelectionItem eeu$a
	location c
	players d
	team b
	getName ()Lnet/minecraft/network/chat/Component; an_
	isEnabled ()Z ao_
	renderIcon (Lcom/mojang/blaze3d/vertex/PoseStack;FI)V a
	selectItem (Lnet/minecraft/client/gui/spectator/SpectatorMenu;)V a
net/minecraft/client/main/GameConfig eex
	display b
	game d
	location c
	server e
	user a
net/minecraft/client/main/GameConfig$FolderData eex$a
	assetDirectory c
	assetIndex d
	gameDirectory a
	resourcePackDirectory b
	getAssetIndex ()Lnet/minecraft/client/resources/AssetIndex; a
net/minecraft/client/main/GameConfig$GameData eex$b
	demo a
	disableChat e
	disableMultiplayer d
	launchVersion b
	versionType c
net/minecraft/client/main/GameConfig$ServerData eex$c
	hostname a
	port b
net/minecraft/client/main/GameConfig$UserData eex$d
	profileProperties c
	proxy d
	user a
	userProperties b
net/minecraft/client/main/SilentInitException eey
net/minecraft/client/model/AbstractZombieModel efa
	isAggressive (Lnet/minecraft/world/entity/monster/Monster;)Z a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Monster;FFFFF)V a
net/minecraft/client/model/AgeableListModel efb
	babyBodyScale h
	babyHeadScale g
	babyYHeadOffset b
	babyZHeadOffset f
	bodyYOffset i
	scaleHead a
	bodyParts ()Ljava/lang/Iterable; b
	headParts ()Ljava/lang/Iterable; a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
net/minecraft/client/model/AnimationUtils efc
	animateCrossbowCharge (Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/world/entity/LivingEntity;Z)V a
	animateCrossbowHold (Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Z)V a
	animateZombieArms (Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;ZFF)V a
	bobArms (Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;F)V a
	bobModelPart (Lnet/minecraft/client/model/geom/ModelPart;FF)V a
	swingWeaponDown (Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/world/entity/Mob;FF)V a
net/minecraft/client/model/ArmedModel efd
	translateToHand (Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/model/ArmorStandArmorModel efe
	createBodyLayer (Lnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/decoration/ArmorStand;FFFFF)V a
net/minecraft/client/model/ArmorStandModel eff
	BASE_PLATE u
	LEFT_BODY_STICK b
	RIGHT_BODY_STICK a
	SHOULDER_STICK t
	basePlate y
	leftBodyStick w
	rightBodyStick v
	shoulderStick x
	bodyParts ()Ljava/lang/Iterable; b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/LivingEntity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/decoration/ArmorStand;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/decoration/ArmorStand;FFFFF)V a
	translateToHand (Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/model/AxolotlModel efg
	SWIMMING_LEG_XROT a
	body j
	head k
	leftFrontLeg h
	leftGills m
	leftHindLeg f
	rightFrontLeg i
	rightGills n
	rightHindLeg g
	tail b
	topGills l
	applyMirrorLegRotations ()V d
	bodyParts ()Ljava/lang/Iterable; b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	getRotationVector (Lnet/minecraft/client/model/geom/ModelPart;)Lcom/mojang/math/Vector3f; a
	headParts ()Ljava/lang/Iterable; a
	lerpPart (Lnet/minecraft/client/model/geom/ModelPart;FFF)V a
	lerpTo (FF)F a
	lerpTo (FFF)F a
	saveAnimationValues (Lnet/minecraft/world/entity/animal/axolotl/Axolotl;)V a
	setRotationFromVector (Lnet/minecraft/client/model/geom/ModelPart;Lcom/mojang/math/Vector3f;)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/axolotl/Axolotl;FFFFF)V a
	setupGroundCrawlingAnimation (FF)V c
	setupInitialAnimationValues (Lnet/minecraft/world/entity/animal/axolotl/Axolotl;FF)V a
	setupLayStillOnGroundAnimation (FF)V b
	setupPlayDeadAnimation (F)V b
	setupSwimmingAnimation (FF)V d
	setupWaterHoveringAnimation (F)V a
net/minecraft/client/model/BatModel efh
	body f
	head b
	leftWing h
	leftWingTip j
	rightWing g
	rightWingTip i
	root a
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/ambient/Bat;FFFFF)V a
net/minecraft/client/model/BeeModel efi
	BACK_LEGS k
	BEE_Y_BASE a
	BONE b
	FRONT_LEGS i
	LEFT_ANTENNA g
	MIDDLE_LEGS j
	RIGHT_ANTENNA h
	STINGER f
	backLeg q
	bone l
	frontLeg o
	leftAntenna t
	leftWing n
	midLeg p
	rightAntenna u
	rightWing m
	rollAmount v
	stinger r
	bodyParts ()Ljava/lang/Iterable; b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	headParts ()Ljava/lang/Iterable; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/Bee;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Bee;FFFFF)V a
net/minecraft/client/model/BlazeModel efj
	head f
	root a
	upperBodyParts b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	getPartName (I)Ljava/lang/String; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/BoatModel efk
	BACK h
	BOTTOM g
	FRONT i
	LEFT k
	LEFT_PADDLE a
	RIGHT j
	RIGHT_PADDLE b
	WATER_PATCH f
	leftPaddle l
	parts o
	rightPaddle m
	waterPatch n
	animatePaddle (Lnet/minecraft/world/entity/vehicle/Boat;ILnet/minecraft/client/model/geom/ModelPart;F)V a
	createBodyModel ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	parts ()Lcom/google/common/collect/ImmutableList; b
	parts ()Ljava/lang/Iterable; d
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/vehicle/Boat;FFFFF)V a
	waterPatch ()Lnet/minecraft/client/model/geom/ModelPart; c
net/minecraft/client/model/BookModel efl
	FLIP_PAGE_1 c
	FLIP_PAGE_2 d
	LEFT_PAGES a
	RIGHT_PAGES b
	flipPage1 j
	flipPage2 k
	leftLid f
	leftPages h
	rightLid g
	rightPages i
	root e
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V b
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setupAnim (FFFF)V a
net/minecraft/client/model/CatModel efm
	lieDownAmount q
	lieDownAmountTail r
	relaxStateOneAmount t
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/Cat;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Cat;FFFFF)V a
net/minecraft/client/model/ChestedHorseModel efn
	leftChest g
	rightChest h
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/horse/AbstractChestedHorse;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/horse/AbstractHorse;FFFFF)V a
net/minecraft/client/model/ChickenModel efo
	RED_THING a
	beak k
	body f
	head b
	leftLeg h
	leftWing j
	redThing l
	rightLeg g
	rightWing i
	bodyParts ()Ljava/lang/Iterable; b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	headParts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/CodModel efp
	root a
	tailFin b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/ColorableAgeableListModel efq
	b f
	g b
	r a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setColor (FFF)V a
net/minecraft/client/model/ColorableHierarchicalModel efr
	b f
	g b
	r a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setColor (FFF)V a
net/minecraft/client/model/CowModel efs
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	getHead ()Lnet/minecraft/client/model/geom/ModelPart; d
net/minecraft/client/model/CreeperModel eft
	Y_OFFSET j
	head b
	leftFrontLeg i
	leftHindLeg g
	rightFrontLeg h
	rightHindLeg f
	root a
	createBodyLayer (Lnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/DolphinModel efu
	body b
	root a
	tail f
	tailFin g
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/DrownedModel efv
	createBodyLayer (Lnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/LivingEntity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/monster/Zombie;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Monster;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Zombie;FFFFF)V a
net/minecraft/client/model/ElytraModel efw
	leftWing b
	rightWing a
	bodyParts ()Ljava/lang/Iterable; b
	createLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	headParts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
net/minecraft/client/model/EndermanModel efx
	carrying a
	creepy b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
net/minecraft/client/model/EndermiteModel efy
	BODY_COUNT a
	BODY_SIZES b
	BODY_TEXS f
	bodyParts h
	root g
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	createSegmentName (I)Ljava/lang/String; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/EntityModel efz
	attackTime c
	riding d
	young e
	copyPropertiesTo (Lnet/minecraft/client/model/EntityModel;)V a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/EvokerFangsModel ega
	BASE a
	LOWER_JAW f
	UPPER_JAW b
	base h
	lowerJaw j
	root g
	upperJaw i
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/FoxModel egb
	HEAD_HEIGHT l
	LEG_POS m
	LEG_SIZE k
	body b
	head a
	leftFrontLeg i
	leftHindLeg g
	legMotionPos n
	rightFrontLeg h
	rightHindLeg f
	tail j
	bodyParts ()Ljava/lang/Iterable; b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	headParts ()Ljava/lang/Iterable; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/Fox;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Fox;FFFFF)V a
net/minecraft/client/model/GhastModel egc
	root a
	tentacles b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	createTentacleName (I)Ljava/lang/String; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/GiantZombieModel egd
	isAggressive (Lnet/minecraft/world/entity/monster/Giant;)Z a
	isAggressive (Lnet/minecraft/world/entity/monster/Monster;)Z a
net/minecraft/client/model/GoatModel ege
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/goat/Goat;FFFFF)V a
net/minecraft/client/model/GuardianModel egf
	EYE j
	SPIKE_X g
	SPIKE_X_ROT a
	SPIKE_Y h
	SPIKE_Y_ROT b
	SPIKE_Z i
	SPIKE_Z_ROT f
	TAIL_0 k
	TAIL_1 l
	TAIL_2 m
	eye p
	head o
	root n
	spikeParts q
	tailParts r
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	createSpikeName (I)Ljava/lang/String; a
	getSpikeOffset (IFF)F a
	getSpikeX (IFF)F b
	getSpikeY (IFF)F c
	getSpikeZ (IFF)F d
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Guardian;FFFFF)V a
	setupSpikes (FF)V a
net/minecraft/client/model/HeadedModel egg
	getHead ()Lnet/minecraft/client/model/geom/ModelPart; d
net/minecraft/client/model/HierarchicalModel egh
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
net/minecraft/client/model/HoglinModel egi
	ATTACK_HEAD_X_ROT_END b
	DEFAULT_HEAD_X_ROT a
	body i
	head f
	leftEar h
	leftFrontLeg k
	leftHindLeg m
	mane n
	rightEar g
	rightFrontLeg j
	rightHindLeg l
	bodyParts ()Ljava/lang/Iterable; b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	headParts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/Mob;FFFFF)V a
net/minecraft/client/model/HorseModel egj
	DEG_125 g
	DEG_15 k
	DEG_30 j
	DEG_45 i
	DEG_60 h
	HEAD_PARTS a
	HEAD_SADDLE v
	LEFT_FRONT_BABY_LEG n
	LEFT_HIND_BABY_LEG l
	LEFT_SADDLE_LINE r
	LEFT_SADDLE_MOUTH q
	MOUTH_SADDLE_WRAP w
	RIGHT_FRONT_BABY_LEG o
	RIGHT_HIND_BABY_LEG m
	RIGHT_SADDLE_LINE u
	RIGHT_SADDLE_MOUTH t
	SADDLE p
	body b
	headParts f
	leftFrontBabyLeg E
	leftFrontLeg A
	leftHindBabyLeg C
	leftHindLeg y
	ridingParts H
	rightFrontBabyLeg D
	rightFrontLeg z
	rightHindBabyLeg B
	rightHindLeg x
	saddleParts G
	tail F
	bodyParts ()Ljava/lang/Iterable; b
	createBodyMesh (Lnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/MeshDefinition; a
	headParts ()Ljava/lang/Iterable; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/horse/AbstractHorse;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/horse/AbstractHorse;FFFFF)V a
net/minecraft/client/model/HumanoidModel egk
	HAT_OVERLAY_SCALE g
	OVERLAY_SCALE f
	SPYGLASS_ARM_CROUCH_ROT_X t
	SPYGLASS_ARM_ROT_X b
	SPYGLASS_ARM_ROT_Y a
	body j
	crouching q
	hat i
	head h
	leftArm l
	leftArmPose o
	leftLeg n
	rightArm k
	rightArmPose p
	rightLeg m
	swimAmount r
	bodyParts ()Ljava/lang/Iterable; b
	copyPropertiesTo (Lnet/minecraft/client/model/HumanoidModel;)V a
	createMesh (Lnet/minecraft/client/model/geom/builders/CubeDeformation;F)Lnet/minecraft/client/model/geom/builders/MeshDefinition; a
	getArm (Lnet/minecraft/world/entity/HumanoidArm;)Lnet/minecraft/client/model/geom/ModelPart; a
	getAttackArm (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/HumanoidArm; c
	getHead ()Lnet/minecraft/client/model/geom/ModelPart; d
	headParts ()Ljava/lang/Iterable; a
	poseLeftArm (Lnet/minecraft/world/entity/LivingEntity;)V b
	poseRightArm (Lnet/minecraft/world/entity/LivingEntity;)V a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/LivingEntity;FFF)V a
	quadraticArmUpdate (F)F a
	rotlerpRad (FFF)F a
	setAllVisible (Z)V d_
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	setupAttackAnimation (Lnet/minecraft/world/entity/LivingEntity;F)V a
	translateToHand (Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/model/HumanoidModel$ArmPose egk$a
	$VALUES j
	BLOCK c
	BOW_AND_ARROW d
	CROSSBOW_CHARGE f
	CROSSBOW_HOLD g
	EMPTY a
	ITEM b
	SPYGLASS h
	THROW_SPEAR e
	twoHanded i
	$values ()[Lnet/minecraft/client/model/HumanoidModel$ArmPose; b
	isTwoHanded ()Z a
net/minecraft/client/model/IllagerModel egl
	arms g
	hat f
	head b
	leftArm k
	leftLeg h
	rightArm j
	rightLeg i
	root a
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	getArm (Lnet/minecraft/world/entity/HumanoidArm;)Lnet/minecraft/client/model/geom/ModelPart; a
	getHat ()Lnet/minecraft/client/model/geom/ModelPart; c
	getHead ()Lnet/minecraft/client/model/geom/ModelPart; d
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/AbstractIllager;FFFFF)V a
	translateToHand (Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/model/IronGolemModel egm
	head b
	leftArm g
	leftLeg i
	rightArm f
	rightLeg h
	root a
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	getFlowerHoldingArm ()Lnet/minecraft/client/model/geom/ModelPart; c
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/IronGolem;FFF)V a
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/IronGolem;FFFFF)V a
net/minecraft/client/model/LavaSlimeModel egn
	SEGMENT_COUNT a
	bodyCubes f
	root b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	getSegmentName (I)Ljava/lang/String; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/monster/Slime;FFF)V a
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Slime;FFFFF)V a
net/minecraft/client/model/LeashKnotModel ego
	KNOT a
	knot f
	root b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/ListModel egp
	parts ()Ljava/lang/Iterable; d
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
net/minecraft/client/model/LlamaModel egq
	body b
	head a
	leftChest k
	leftFrontLeg i
	leftHindLeg g
	rightChest j
	rightFrontLeg h
	rightHindLeg f
	createBodyLayer (Lnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/horse/AbstractChestedHorse;FFFFF)V a
net/minecraft/client/model/LlamaSpitModel egr
	MAIN a
	root b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/MinecartModel egs
	CONTENTS b
	contents f
	root a
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/Model egt
	renderType s
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	renderType (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; a
net/minecraft/client/model/ModelUtils egu
	rotlerpRad (FFF)F a
net/minecraft/client/model/OcelotModel egv
	BACK_LEG_Y b
	BACK_LEG_Z f
	BODY_WALK_Y z
	BODY_WALK_Z A
	CROUCH_STATE q
	FRONT_LEG_Y g
	FRONT_LEG_Z F
	HEAD_WALK_Y x
	HEAD_WALK_Z y
	SITTING_STATE a
	SPRINT_STATE t
	TAIL_1 G
	TAIL_1_WALK_Y B
	TAIL_1_WALK_Z C
	TAIL_2 H
	TAIL_2_WALK_Y D
	TAIL_2_WALK_Z E
	WALK_STATE r
	XO u
	YO v
	ZO w
	body o
	head n
	leftFrontLeg j
	leftHindLeg h
	rightFrontLeg k
	rightHindLeg i
	state p
	tail1 l
	tail2 m
	bodyParts ()Ljava/lang/Iterable; b
	createBodyMesh (Lnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/MeshDefinition; a
	headParts ()Ljava/lang/Iterable; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/PandaModel egw
	lieOnBackAmount k
	rollAmount l
	sitAmount j
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/Panda;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Panda;FFFFF)V a
net/minecraft/client/model/ParrotModel egx
	FEATHER a
	body f
	feather k
	head j
	leftLeg l
	leftWing h
	rightLeg m
	rightWing i
	root b
	tail g
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	getState (Lnet/minecraft/world/entity/animal/Parrot;)Lnet/minecraft/client/model/ParrotModel$State; a
	prepare (Lnet/minecraft/client/model/ParrotModel$State;)V a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/Parrot;FFF)V a
	renderOnShoulder (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFFI)V a
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/client/model/ParrotModel$State;IFFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Parrot;FFFFF)V a
net/minecraft/client/model/ParrotModel$State egx$a
	$VALUES f
	FLYING a
	ON_SHOULDER e
	PARTY d
	SITTING c
	STANDING b
	$values ()[Lnet/minecraft/client/model/ParrotModel$State; a
net/minecraft/client/model/PhantomModel egy
	TAIL_BASE a
	TAIL_TIP b
	leftWingBase g
	leftWingTip h
	rightWingBase i
	rightWingTip j
	root f
	tailBase k
	tailTip l
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Phantom;FFFFF)V a
net/minecraft/client/model/PigModel egz
	createBodyLayer (Lnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
net/minecraft/client/model/PiglinModel eha
	bodyDefault y
	headDefault z
	leftArmDefault A
	leftEar x
	rightArmDefault B
	rightEar a
	createMesh (Lnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/MeshDefinition; a
	holdWeaponHigh (Lnet/minecraft/world/entity/Mob;)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/Mob;FFFFF)V a
	setupAttackAnimation (Lnet/minecraft/world/entity/LivingEntity;F)V a
	setupAttackAnimation (Lnet/minecraft/world/entity/Mob;F)V a
net/minecraft/client/model/PlayerModel ehb
	CLOAK x
	EAR a
	LEFT_PANTS A
	LEFT_SLEEVE y
	RIGHT_PANTS B
	RIGHT_SLEEVE z
	cloak D
	ear E
	jacket w
	leftPants u
	leftSleeve b
	parts C
	rightPants v
	rightSleeve t
	slim F
	bodyParts ()Ljava/lang/Iterable; b
	createMesh (Lnet/minecraft/client/model/geom/builders/CubeDeformation;Z)Lnet/minecraft/client/model/geom/builders/MeshDefinition; a
	getRandomModelPart (Ljava/util/Random;)Lnet/minecraft/client/model/geom/ModelPart; a
	renderCloak (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;II)V b
	renderEars (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;II)V a
	setAllVisible (Z)V d_
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	translateToHand (Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/model/PolarBearModel ehc
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/PolarBear;FFFFF)V a
net/minecraft/client/model/PufferfishBigModel ehd
	leftBlueFin b
	rightBlueFin f
	root a
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/PufferfishMidModel ehe
	leftBlueFin b
	rightBlueFin f
	root a
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/PufferfishSmallModel ehf
	leftFin b
	rightFin f
	root a
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/QuadrupedModel ehg
	body b
	head a
	leftFrontLeg i
	leftHindLeg g
	rightFrontLeg h
	rightHindLeg f
	bodyParts ()Ljava/lang/Iterable; b
	createBodyMesh (ILnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/MeshDefinition; a
	headParts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/RabbitModel ehh
	FRONT_JUMP_ANGLE b
	LEFT_HAUNCH f
	NEW_SCALE v
	REAR_JUMP_ANGLE a
	RIGHT_HAUNCH g
	body l
	head o
	jumpRotation u
	leftEar q
	leftFrontLeg m
	leftHaunch j
	leftRearFoot h
	nose t
	rightEar p
	rightFrontLeg n
	rightHaunch k
	rightRearFoot i
	tail r
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/Rabbit;FFF)V a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Rabbit;FFFFF)V a
net/minecraft/client/model/RavagerModel ehi
	head b
	leftFrontLeg j
	leftHindLeg h
	mouth f
	neck k
	rightFrontLeg i
	rightHindLeg g
	root a
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/monster/Ravager;FFF)V a
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Ravager;FFFFF)V a
net/minecraft/client/model/SalmonModel ehj
	BODY_BACK b
	BODY_FRONT a
	bodyBack g
	root f
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/SheepFurModel ehk
	headXRot j
	createFurLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/Sheep;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Sheep;FFFFF)V a
net/minecraft/client/model/SheepModel ehl
	headXRot j
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/Sheep;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Sheep;FFFFF)V a
net/minecraft/client/model/ShieldModel ehm
	HANDLE b
	PLATE a
	SHIELD_HEIGHT d
	SHIELD_WIDTH c
	handle g
	plate f
	root e
	createLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	handle ()Lnet/minecraft/client/model/geom/ModelPart; c
	plate ()Lnet/minecraft/client/model/geom/ModelPart; b
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
net/minecraft/client/model/ShulkerBulletModel ehn
	MAIN a
	main f
	root b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/ShulkerModel eho
	BASE b
	LID a
	base f
	head h
	lid g
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	getHead ()Lnet/minecraft/client/model/geom/ModelPart; c
	getLid ()Lnet/minecraft/client/model/geom/ModelPart; b
	parts ()Ljava/lang/Iterable; d
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Shulker;FFFFF)V a
net/minecraft/client/model/SilverfishModel ehp
	BODY_COUNT a
	BODY_SIZES h
	BODY_TEXS i
	bodyLayers g
	bodyParts f
	root b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	getLayerName (I)Ljava/lang/String; a
	getSegmentName (I)Ljava/lang/String; b
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/SkeletonModel ehq
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/LivingEntity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/Mob;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/Mob;FFFFF)V a
	translateToHand (Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/model/SkullModel ehr
	head a
	root b
	createHeadModel ()Lnet/minecraft/client/model/geom/builders/MeshDefinition; a
	createHumanoidHeadLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	createMobHeadLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setupAnim (FFF)V a
net/minecraft/client/model/SkullModelBase ehs
	setupAnim (FFF)V a
net/minecraft/client/model/SlimeModel eht
	root a
	createInnerBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	createOuterBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/SnowGolemModel ehu
	UPPER_BODY a
	head g
	leftArm h
	rightArm i
	root b
	upperBody f
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	getHead ()Lnet/minecraft/client/model/geom/ModelPart; c
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/SpiderModel ehv
	BODY_0 a
	BODY_1 b
	LEFT_MIDDLE_FRONT_LEG g
	LEFT_MIDDLE_HIND_LEG i
	RIGHT_MIDDLE_FRONT_LEG f
	RIGHT_MIDDLE_HIND_LEG h
	head k
	leftFrontLeg t
	leftHindLeg m
	leftMiddleFrontLeg q
	leftMiddleHindLeg o
	rightFrontLeg r
	rightHindLeg l
	rightMiddleFrontLeg p
	rightMiddleHindLeg n
	root j
	createSpiderBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/SquidModel ehw
	root b
	tentacles a
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	createTentacleName (I)Ljava/lang/String; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/StriderModel ehx
	LEFT_BOTTOM_BRISTLE i
	LEFT_MIDDLE_BRISTLE h
	LEFT_TOP_BRISTLE g
	RIGHT_BOTTOM_BRISTLE a
	RIGHT_MIDDLE_BRISTLE b
	RIGHT_TOP_BRISTLE f
	body m
	leftBottomBristle t
	leftLeg l
	leftMiddleBristle r
	leftTopBristle q
	rightBottomBristle n
	rightLeg k
	rightMiddleBristle o
	rightTopBristle p
	root j
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Strider;FFFFF)V a
net/minecraft/client/model/TridentModel ehy
	TEXTURE a
	root b
	createLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
net/minecraft/client/model/TropicalFishModelA ehz
	root a
	tail b
	createBodyLayer (Lnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/TropicalFishModelB eia
	root a
	tail b
	createBodyLayer (Lnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/TurtleModel eib
	EGG_BELLY j
	eggBelly k
	bodyParts ()Ljava/lang/Iterable; b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Turtle;FFFFF)V a
net/minecraft/client/model/VexModel eic
	leftWing a
	rightWing b
	bodyParts ()Ljava/lang/Iterable; b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Vex;FFFFF)V a
net/minecraft/client/model/VillagerHeadModel eid
	hatVisible (Z)V a
net/minecraft/client/model/VillagerModel eie
	hat g
	hatRim h
	head f
	leftLeg j
	nose a
	rightLeg i
	root b
	createBodyModel ()Lnet/minecraft/client/model/geom/builders/MeshDefinition; a
	getHead ()Lnet/minecraft/client/model/geom/ModelPart; d
	hatVisible (Z)V a
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/WitchModel eif
	holdingItem b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	getNose ()Lnet/minecraft/client/model/geom/ModelPart; e
	setHoldingItem (Z)V b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/WitherBossModel eig
	CENTER_HEAD b
	LEFT_HEAD g
	RIBCAGE a
	RIBCAGE_X_ROT_OFFSET h
	RIGHT_HEAD f
	TAIL_X_ROT_OFFSET i
	centerHead k
	leftHead m
	ribcage n
	rightHead l
	root j
	tail o
	createBodyLayer (Lnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/boss/wither/WitherBoss;FFF)V a
	root ()Lnet/minecraft/client/model/geom/ModelPart; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/boss/wither/WitherBoss;FFFFF)V a
	setupHeadRotation (Lnet/minecraft/world/entity/boss/wither/WitherBoss;Lnet/minecraft/client/model/geom/ModelPart;I)V a
net/minecraft/client/model/WolfModel eih
	LEG_SIZE q
	REAL_HEAD a
	REAL_TAIL f
	UPPER_BODY b
	body i
	head g
	leftFrontLeg m
	leftHindLeg k
	realHead h
	realTail o
	rightFrontLeg l
	rightHindLeg j
	tail n
	upperBody p
	bodyParts ()Ljava/lang/Iterable; b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	headParts ()Ljava/lang/Iterable; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/Wolf;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Wolf;FFFFF)V a
net/minecraft/client/model/ZombieModel eii
	isAggressive (Lnet/minecraft/world/entity/monster/Monster;)Z a
	isAggressive (Lnet/minecraft/world/entity/monster/Zombie;)Z a
net/minecraft/client/model/ZombieVillagerModel eij
	hatRim a
	createArmorLayer (Lnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	hatVisible (Z)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Zombie;FFFFF)V a
net/minecraft/client/model/dragon/DragonHeadModel eik
	head a
	jaw b
	createHeadLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setupAnim (FFF)V a
net/minecraft/client/model/geom/EntityModelSet eim
	roots a
	bakeLayer (Lnet/minecraft/client/model/geom/ModelLayerLocation;)Lnet/minecraft/client/model/geom/ModelPart; a
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
net/minecraft/client/model/geom/LayerDefinitions ein
	FISH_PATTERN_DEFORMATION a
	INNER_ARMOR_DEFORMATION c
	OUTER_ARMOR_DEFORMATION b
	createRoots ()Ljava/util/Map; a
net/minecraft/client/model/geom/ModelLayerLocation eio
	layer b
	model a
	getLayer ()Ljava/lang/String; b
	getModel ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/model/geom/ModelLayers eip
	ALL_MODELS ca
	ARMOR_STAND a
	ARMOR_STAND_INNER_ARMOR b
	ARMOR_STAND_OUTER_ARMOR c
	AXOLOTL d
	BANNER e
	BAT f
	BED_FOOT g
	BED_HEAD h
	BEE i
	BELL j
	BLAZE k
	BOOK l
	CAT m
	CAT_COLLAR n
	CAVE_SPIDER o
	CHEST p
	CHEST_MINECART q
	CHICKEN r
	COD s
	COMMAND_BLOCK_MINECART t
	CONDUIT_CAGE u
	CONDUIT_EYE v
	CONDUIT_SHELL w
	CONDUIT_WIND x
	COW y
	CREEPER z
	CREEPER_ARMOR A
	CREEPER_HEAD B
	DEFAULT_LAYER bZ
	DOLPHIN C
	DONKEY D
	DOUBLE_CHEST_LEFT E
	DOUBLE_CHEST_RIGHT F
	DRAGON_SKULL G
	DROWNED H
	DROWNED_INNER_ARMOR I
	DROWNED_OUTER_ARMOR J
	DROWNED_OUTER_LAYER K
	ELDER_GUARDIAN L
	ELYTRA M
	ENDERMAN N
	ENDERMITE O
	ENDER_DRAGON P
	END_CRYSTAL Q
	EVOKER R
	EVOKER_FANGS S
	FOX T
	FURNACE_MINECART U
	GHAST V
	GIANT W
	GIANT_INNER_ARMOR X
	GIANT_OUTER_ARMOR Y
	GLOW_SQUID Z
	GOAT aa
	GUARDIAN ab
	HOGLIN ac
	HOPPER_MINECART ad
	HORSE ae
	HORSE_ARMOR af
	HUSK ag
	HUSK_INNER_ARMOR ah
	HUSK_OUTER_ARMOR ai
	ILLUSIONER aj
	IRON_GOLEM ak
	LEASH_KNOT al
	LLAMA am
	LLAMA_DECOR an
	LLAMA_SPIT ao
	MAGMA_CUBE ap
	MINECART aq
	MOOSHROOM ar
	MULE as
	OCELOT at
	PANDA au
	PARROT av
	PHANTOM aw
	PIG ax
	PIGLIN ay
	PIGLIN_BRUTE az
	PIGLIN_BRUTE_INNER_ARMOR aA
	PIGLIN_BRUTE_OUTER_ARMOR aB
	PIGLIN_INNER_ARMOR aC
	PIGLIN_OUTER_ARMOR aD
	PIG_SADDLE aE
	PILLAGER aF
	PLAYER aG
	PLAYER_HEAD aH
	PLAYER_INNER_ARMOR aI
	PLAYER_OUTER_ARMOR aJ
	PLAYER_SLIM aK
	PLAYER_SLIM_INNER_ARMOR aL
	PLAYER_SLIM_OUTER_ARMOR aM
	PLAYER_SPIN_ATTACK aN
	POLAR_BEAR aO
	PUFFERFISH_BIG aP
	PUFFERFISH_MEDIUM aQ
	PUFFERFISH_SMALL aR
	RABBIT aS
	RAVAGER aT
	SALMON aU
	SHEEP aV
	SHEEP_FUR aW
	SHIELD aX
	SHULKER aY
	SHULKER_BULLET aZ
	SILVERFISH ba
	SKELETON bb
	SKELETON_HORSE bc
	SKELETON_INNER_ARMOR bd
	SKELETON_OUTER_ARMOR be
	SKELETON_SKULL bf
	SLIME bg
	SLIME_OUTER bh
	SNOW_GOLEM bi
	SPAWNER_MINECART bj
	SPIDER bk
	SQUID bl
	STRAY bm
	STRAY_INNER_ARMOR bn
	STRAY_OUTER_ARMOR bo
	STRAY_OUTER_LAYER bp
	STRIDER bq
	STRIDER_SADDLE br
	TNT_MINECART bs
	TRADER_LLAMA bt
	TRIDENT bu
	TROPICAL_FISH_LARGE bv
	TROPICAL_FISH_LARGE_PATTERN bw
	TROPICAL_FISH_SMALL bx
	TROPICAL_FISH_SMALL_PATTERN by
	TURTLE bz
	VEX bA
	VILLAGER bB
	VINDICATOR bC
	WANDERING_TRADER bD
	WITCH bE
	WITHER bF
	WITHER_ARMOR bG
	WITHER_SKELETON bH
	WITHER_SKELETON_INNER_ARMOR bI
	WITHER_SKELETON_OUTER_ARMOR bJ
	WITHER_SKELETON_SKULL bK
	WITHER_SKULL bL
	WOLF bM
	ZOGLIN bN
	ZOMBIE bO
	ZOMBIE_HEAD bP
	ZOMBIE_HORSE bQ
	ZOMBIE_INNER_ARMOR bR
	ZOMBIE_OUTER_ARMOR bS
	ZOMBIE_VILLAGER bT
	ZOMBIE_VILLAGER_INNER_ARMOR bU
	ZOMBIE_VILLAGER_OUTER_ARMOR bV
	ZOMBIFIED_PIGLIN bW
	ZOMBIFIED_PIGLIN_INNER_ARMOR bX
	ZOMBIFIED_PIGLIN_OUTER_ARMOR bY
	createBoatModelName (Lnet/minecraft/world/entity/vehicle/Boat$Type;)Lnet/minecraft/client/model/geom/ModelLayerLocation; a
	createLocation (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/client/model/geom/ModelLayerLocation; b
	createSignModelName (Lnet/minecraft/world/level/block/state/properties/WoodType;)Lnet/minecraft/client/model/geom/ModelLayerLocation; a
	getKnownLocations ()Ljava/util/stream/Stream; a
	register (Ljava/lang/String;)Lnet/minecraft/client/model/geom/ModelLayerLocation; a
	register (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/client/model/geom/ModelLayerLocation; a
	registerInnerArmor (Ljava/lang/String;)Lnet/minecraft/client/model/geom/ModelLayerLocation; b
	registerOuterArmor (Ljava/lang/String;)Lnet/minecraft/client/model/geom/ModelLayerLocation; c
net/minecraft/client/model/geom/ModelPart eiq
	children i
	cubes h
	visible g
	x a
	xRot d
	y b
	yRot e
	z c
	zRot f
	compile (Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	copyFrom (Lnet/minecraft/client/model/geom/ModelPart;)V a
	getAllParts ()Ljava/util/stream/Stream; c
	getChild (Ljava/lang/String;)Lnet/minecraft/client/model/geom/ModelPart; a
	getRandomCube (Ljava/util/Random;)Lnet/minecraft/client/model/geom/ModelPart$Cube; a
	isEmpty ()Z b
	loadPose (Lnet/minecraft/client/model/geom/PartPose;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;II)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setPos (FFF)V a
	setRotation (FFF)V b
	storePose ()Lnet/minecraft/client/model/geom/PartPose; a
	translateAndRotate (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	visit (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/model/geom/ModelPart$Visitor;)V a
	visit (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/model/geom/ModelPart$Visitor;Ljava/lang/String;)V a
net/minecraft/client/model/geom/ModelPart$Cube eiq$a
	maxX d
	maxY e
	maxZ f
	minX a
	minY b
	minZ c
	polygons g
	compile (Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
net/minecraft/client/model/geom/ModelPart$Polygon eiq$b
	normal b
	vertices a
net/minecraft/client/model/geom/ModelPart$Vertex eiq$c
	pos a
	u b
	v c
	remap (FF)Lnet/minecraft/client/model/geom/ModelPart$Vertex; a
net/minecraft/client/model/geom/ModelPart$Visitor eiq$d
	visit (Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Ljava/lang/String;ILnet/minecraft/client/model/geom/ModelPart$Cube;)V a
net/minecraft/client/model/geom/PartNames eir
	ARMS P
	BACK_FIN T
	BEAK S
	BODY Z
	BOTTOM_FIN d
	CUBE R
	HAT Y
	HAT_RIM aa
	HEAD X
	JACKET ab
	JAW N
	LEFT_ARM h
	LEFT_BLUE_FIN f
	LEFT_CHEST H
	LEFT_EAR p
	LEFT_EYE L
	LEFT_FIN a
	LEFT_FRONT_FOOT z
	LEFT_FRONT_LEG v
	LEFT_FRONT_LEG_TIP D
	LEFT_GILLS ad
	LEFT_HIND_FOOT x
	LEFT_HIND_LEG t
	LEFT_HIND_LEG_TIP B
	LEFT_HORN J
	LEFT_LEG r
	LEFT_LID F
	LEFT_WING j
	LEFT_WING_BASE l
	LEFT_WING_TIP n
	MANE U
	MOUTH W
	NECK V
	NOSE O
	RIGHT_ARM i
	RIGHT_BLUE_FIN g
	RIGHT_CHEST I
	RIGHT_EAR q
	RIGHT_EYE M
	RIGHT_FIN b
	RIGHT_FRONT_FOOT A
	RIGHT_FRONT_LEG w
	RIGHT_FRONT_LEG_TIP E
	RIGHT_GILLS ae
	RIGHT_HIND_FOOT y
	RIGHT_HIND_LEG u
	RIGHT_HIND_LEG_TIP C
	RIGHT_HORN K
	RIGHT_LEG s
	RIGHT_LID G
	RIGHT_WING k
	RIGHT_WING_BASE m
	RIGHT_WING_TIP o
	TAIL Q
	TAIL_FIN e
	TOP_FIN c
	TOP_GILLS ac
net/minecraft/client/model/geom/PartPose eis
	ZERO a
	x b
	xRot e
	y c
	yRot f
	z d
	zRot g
	offset (FFF)Lnet/minecraft/client/model/geom/PartPose; a
	offsetAndRotation (FFFFFF)Lnet/minecraft/client/model/geom/PartPose; a
	rotation (FFF)Lnet/minecraft/client/model/geom/PartPose; b
net/minecraft/client/model/geom/builders/CubeDefinition eit
	comment a
	dimensions c
	grow d
	mirror e
	origin b
	texCoord f
	texScale g
	bake (II)Lnet/minecraft/client/model/geom/ModelPart$Cube; a
net/minecraft/client/model/geom/builders/CubeDeformation eiu
	NONE a
	growX b
	growY c
	growZ d
	extend (F)Lnet/minecraft/client/model/geom/builders/CubeDeformation; a
	extend (FFF)Lnet/minecraft/client/model/geom/builders/CubeDeformation; a
net/minecraft/client/model/geom/builders/CubeListBuilder eiv
	cubes a
	mirror d
	xTexOffs b
	yTexOffs c
	addBox (FFFFFF)Lnet/minecraft/client/model/geom/builders/CubeListBuilder; a
	addBox (FFFFFFLnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/CubeListBuilder; a
	addBox (FFFFFFLnet/minecraft/client/model/geom/builders/CubeDeformation;FF)Lnet/minecraft/client/model/geom/builders/CubeListBuilder; a
	addBox (FFFFFFZ)Lnet/minecraft/client/model/geom/builders/CubeListBuilder; a
	addBox (Ljava/lang/String;FFFFFF)Lnet/minecraft/client/model/geom/builders/CubeListBuilder; a
	addBox (Ljava/lang/String;FFFFFFLnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/CubeListBuilder; a
	addBox (Ljava/lang/String;FFFIIIII)Lnet/minecraft/client/model/geom/builders/CubeListBuilder; a
	addBox (Ljava/lang/String;FFFIIILnet/minecraft/client/model/geom/builders/CubeDeformation;II)Lnet/minecraft/client/model/geom/builders/CubeListBuilder; a
	create ()Lnet/minecraft/client/model/geom/builders/CubeListBuilder; c
	getCubes ()Ljava/util/List; b
	mirror ()Lnet/minecraft/client/model/geom/builders/CubeListBuilder; a
	mirror (Z)Lnet/minecraft/client/model/geom/builders/CubeListBuilder; a
	texOffs (II)Lnet/minecraft/client/model/geom/builders/CubeListBuilder; a
net/minecraft/client/model/geom/builders/LayerDefinition eiw
	material b
	mesh a
	bakeRoot ()Lnet/minecraft/client/model/geom/ModelPart; a
	create (Lnet/minecraft/client/model/geom/builders/MeshDefinition;II)Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
net/minecraft/client/model/geom/builders/MaterialDefinition eix
	xTexSize a
	yTexSize b
net/minecraft/client/model/geom/builders/MeshDefinition eiy
	root a
	getRoot ()Lnet/minecraft/client/model/geom/builders/PartDefinition; a
net/minecraft/client/model/geom/builders/PartDefinition eiz
	children c
	cubes a
	partPose b
	addOrReplaceChild (Ljava/lang/String;Lnet/minecraft/client/model/geom/builders/CubeListBuilder;Lnet/minecraft/client/model/geom/PartPose;)Lnet/minecraft/client/model/geom/builders/PartDefinition; a
	bake (II)Lnet/minecraft/client/model/geom/ModelPart; a
	getChild (Ljava/lang/String;)Lnet/minecraft/client/model/geom/builders/PartDefinition; a
net/minecraft/client/model/geom/builders/UVPair eja
	u a
	v b
	u ()F a
	v ()F b
net/minecraft/client/multiplayer/ClientAdvancements eje
	LOGGER a
	advancements c
	listener e
	minecraft b
	progress d
	selectedTab f
	getAdvancements ()Lnet/minecraft/advancements/AdvancementList; a
	setListener (Lnet/minecraft/client/multiplayer/ClientAdvancements$Listener;)V a
	setSelectedTab (Lnet/minecraft/advancements/Advancement;Z)V a
	update (Lnet/minecraft/network/protocol/game/ClientboundUpdateAdvancementsPacket;)V a
net/minecraft/client/multiplayer/ClientAdvancements$Listener eje$a
	onSelectedTabChanged (Lnet/minecraft/advancements/Advancement;)V e
	onUpdateAdvancementProgress (Lnet/minecraft/advancements/Advancement;Lnet/minecraft/advancements/AdvancementProgress;)V a
net/minecraft/client/multiplayer/ClientChunkCache ejf
	LOGGER a
	emptyChunk b
	level e
	lightEngine c
	storage d
	calculateStorageRange (I)I b
	drop (II)V d
	gatherStats ()Ljava/lang/String; e
	getChunk (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunk (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/LevelChunk; b
	getLevel ()Lnet/minecraft/world/level/BlockGetter; m
	getLightEngine ()Lnet/minecraft/world/level/lighting/LevelLightEngine; l
	getLoadedChunksCount ()I h
	isValidChunk (Lnet/minecraft/world/level/chunk/LevelChunk;II)Z a
	onLightUpdate (Lnet/minecraft/world/level/LightLayer;Lnet/minecraft/core/SectionPos;)V a
	replaceWithPacketData (IILnet/minecraft/world/level/chunk/ChunkBiomeContainer;Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/nbt/CompoundTag;Ljava/util/BitSet;)Lnet/minecraft/world/level/chunk/LevelChunk; a
	tick (Ljava/util/function/BooleanSupplier;)V a
	updateViewCenter (II)V e
	updateViewRadius (I)V a
net/minecraft/client/multiplayer/ClientChunkCache$Storage ejf$a
	chunkCount g
	chunkRadius c
	chunks b
	viewCenterX e
	viewCenterZ f
	viewRange d
	dumpChunks (Ljava/lang/String;)V a
	getChunk (I)Lnet/minecraft/world/level/chunk/LevelChunk; a
	getIndex (II)I a
	inRange (II)Z b
	replace (ILnet/minecraft/world/level/chunk/LevelChunk;)V a
	replace (ILnet/minecraft/world/level/chunk/LevelChunk;Lnet/minecraft/world/level/chunk/LevelChunk;)Lnet/minecraft/world/level/chunk/LevelChunk; a
net/minecraft/client/multiplayer/ClientHandshakePacketListenerImpl ejg
	LOGGER a
	connection e
	localGameProfile f
	minecraft b
	parent c
	updateStatus d
	authenticateServer (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
	getConnection ()Lnet/minecraft/network/Connection; a
	getMinecraftSessionService ()Lcom/mojang/authlib/minecraft/MinecraftSessionService; b
	handleCompression (Lnet/minecraft/network/protocol/login/ClientboundLoginCompressionPacket;)V a
	handleCustomQuery (Lnet/minecraft/network/protocol/login/ClientboundCustomQueryPacket;)V a
	handleDisconnect (Lnet/minecraft/network/protocol/login/ClientboundLoginDisconnectPacket;)V a
	handleGameProfile (Lnet/minecraft/network/protocol/login/ClientboundGameProfilePacket;)V a
	handleHello (Lnet/minecraft/network/protocol/login/ClientboundHelloPacket;)V a
	onDisconnect (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/client/multiplayer/ClientLevel ejh
	CLOUD_COLOR H
	FLUID_PARTICLE_SPAWN_OFFSET a
	chunkSource K
	clientLevelData B
	connection z
	effects C
	entityStorage c
	levelRenderer A
	mapData G
	minecraft D
	players E
	scoreboard F
	skyFlashTime I
	tickingEntities b
	tintCaches J
	addAlwaysVisibleParticle (Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)V b
	addAlwaysVisibleParticle (Lnet/minecraft/core/particles/ParticleOptions;ZDDDDDD)V b
	addDestroyBlockEffect (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	addEntity (ILnet/minecraft/world/entity/Entity;)V b
	addMapData (Ljava/util/Map;)V a
	addParticle (Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)V a
	addParticle (Lnet/minecraft/core/particles/ParticleOptions;ZDDDDDD)V a
	addPlayer (ILnet/minecraft/client/player/AbstractClientPlayer;)V a
	animateTick (III)V c
	calculateBlockTint (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ColorResolver;)I b
	clearTintCaches ()V d
	createFireworks (DDDDDDLnet/minecraft/nbt/CompoundTag;)V a
	destroyBlockProgress (ILnet/minecraft/core/BlockPos;I)V a
	disconnect ()V U
	doAnimateTick (IIIILjava/util/Random;Lnet/minecraft/client/multiplayer/ClientLevel$MarkerParticleStatus;Lnet/minecraft/core/BlockPos$MutableBlockPos;)V a
	effects ()Lnet/minecraft/client/renderer/DimensionSpecialEffects; a
	entitiesForRendering ()Ljava/lang/Iterable; b
	fillReportDetails (Lnet/minecraft/CrashReport;)Lnet/minecraft/CrashReportCategory; a
	gameEvent (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/core/BlockPos;)V a
	gatherChunkSourceStats ()Ljava/lang/String; J
	getAllMapData ()Ljava/util/Map; l
	getBlockTicks ()Lnet/minecraft/world/level/TickList; N
	getBlockTint (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ColorResolver;)I a
	getChunkSource ()Lnet/minecraft/client/multiplayer/ClientChunkCache; f
	getChunkSource ()Lnet/minecraft/world/level/chunk/ChunkSource; L
	getCloudColor (F)Lnet/minecraft/world/phys/Vec3; h
	getEntities ()Lnet/minecraft/world/level/entity/LevelEntityGetter; I
	getEntity (I)Lnet/minecraft/world/entity/Entity; a
	getEntityCount ()I e
	getFreeMapId ()I v
	getLevelData ()Lnet/minecraft/client/multiplayer/ClientLevel$ClientLevelData; k
	getLevelData ()Lnet/minecraft/world/level/storage/LevelData; m_
	getLiquidTicks ()Lnet/minecraft/world/level/TickList; M
	getMapData (Ljava/lang/String;)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; a
	getMarkerParticleStatus ()Lnet/minecraft/client/multiplayer/ClientLevel$MarkerParticleStatus; o
	getRecipeManager ()Lnet/minecraft/world/item/crafting/RecipeManager; q
	getScoreboard ()Lnet/minecraft/world/scores/Scoreboard; K
	getShade (Lnet/minecraft/core/Direction;Z)F a
	getSharedSpawnAngle ()F i
	getSharedSpawnPos ()Lnet/minecraft/core/BlockPos; h
	getSkyColor (Lnet/minecraft/world/phys/Vec3;F)Lnet/minecraft/world/phys/Vec3; a
	getSkyDarken (F)F g
	getSkyFlashTime ()I g
	getStarBrightness (F)F i
	getTagManager ()Lnet/minecraft/tags/TagContainer; r
	getUncachedNoiseBiome (III)Lnet/minecraft/world/level/biome/Biome; a
	globalLevelEvent (ILnet/minecraft/core/BlockPos;I)V b
	hasChunk (II)Z b
	levelEvent (Lnet/minecraft/world/entity/player/Player;ILnet/minecraft/core/BlockPos;I)V a
	onChunkLoaded (Lnet/minecraft/world/level/ChunkPos;)V a
	playLocalSound (DDDLnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FFZ)V a
	playLocalSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FFZ)V a
	playSound (Lnet/minecraft/world/entity/player/Player;DDDLnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	playSound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	players ()Ljava/util/List; z
	putNonPlayerEntity (ILnet/minecraft/world/entity/Entity;)V a
	registryAccess ()Lnet/minecraft/core/RegistryAccess; t
	removeEntity (ILnet/minecraft/world/entity/Entity$RemovalReason;)V a
	sendBlockUpdated (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;I)V a
	sendPacketToServer (Lnet/minecraft/network/protocol/Packet;)V a
	setBlocksDirty (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)V b
	setDayTime (J)V b
	setDefaultSpawnPos (Lnet/minecraft/core/BlockPos;F)V a
	setGameTime (J)V a
	setKnownState (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V c
	setMapData (Ljava/lang/String;Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)V a
	setScoreboard (Lnet/minecraft/world/scores/Scoreboard;)V a
	setSectionDirtyWithNeighbors (III)V d
	setSkyFlashTime (I)V c
	spawnFluidParticle (DDDDDLnet/minecraft/core/particles/ParticleOptions;)V a
	spawnParticle (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/world/phys/shapes/VoxelShape;D)V a
	tick (Ljava/util/function/BooleanSupplier;)V a
	tickEntities ()V c
	tickNonPassenger (Lnet/minecraft/world/entity/Entity;)V a
	tickPassenger (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)V a
	tickTime ()V m
	trySpawnDripParticles (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/particles/ParticleOptions;Z)V a
	unload (Lnet/minecraft/world/level/chunk/LevelChunk;)V a
net/minecraft/client/multiplayer/ClientLevel$ClientLevelData ejh$a
	dayTime i
	difficulty k
	difficultyLocked l
	gameRules b
	gameTime h
	hardcore a
	isFlat c
	raining j
	spawnAngle g
	xSpawn d
	ySpawn e
	zSpawn f
	fillCrashReportCategory (Lnet/minecraft/CrashReportCategory;Lnet/minecraft/world/level/LevelHeightAccessor;)V a
	getClearColorScale ()D g
	getDayTime ()J f
	getDifficulty ()Lnet/minecraft/world/Difficulty; s
	getGameRules ()Lnet/minecraft/world/level/GameRules; q
	getGameTime ()J e
	getHorizonHeight (Lnet/minecraft/world/level/LevelHeightAccessor;)D a
	getSpawnAngle ()F d
	getXSpawn ()I a
	getYSpawn ()I b
	getZSpawn ()I c
	isDifficultyLocked ()Z t
	isHardcore ()Z n
	isRaining ()Z k
	isThundering ()Z i
	setDayTime (J)V b
	setDifficulty (Lnet/minecraft/world/Difficulty;)V a
	setDifficultyLocked (Z)V a
	setGameTime (J)V a
	setRaining (Z)V b
	setSpawn (Lnet/minecraft/core/BlockPos;F)V a
	setSpawnAngle (F)V a
	setXSpawn (I)V b
	setYSpawn (I)V c
	setZSpawn (I)V d
net/minecraft/client/multiplayer/ClientLevel$EntityCallbacks ejh$b
	onCreated (Ljava/lang/Object;)V f
	onCreated (Lnet/minecraft/world/entity/Entity;)V a
	onDestroyed (Ljava/lang/Object;)V e
	onDestroyed (Lnet/minecraft/world/entity/Entity;)V b
	onTickingEnd (Ljava/lang/Object;)V c
	onTickingEnd (Lnet/minecraft/world/entity/Entity;)V d
	onTickingStart (Ljava/lang/Object;)V d
	onTickingStart (Lnet/minecraft/world/entity/Entity;)V c
	onTrackingEnd (Ljava/lang/Object;)V a
	onTrackingEnd (Lnet/minecraft/world/entity/Entity;)V f
	onTrackingStart (Ljava/lang/Object;)V b
	onTrackingStart (Lnet/minecraft/world/entity/Entity;)V e
net/minecraft/client/multiplayer/ClientLevel$MarkerParticleStatus ejh$c
	$VALUES e
	BARRIER a
	LIGHT b
	block c
	particle d
	$values ()[Lnet/minecraft/client/multiplayer/ClientLevel$MarkerParticleStatus; a
net/minecraft/client/multiplayer/ClientPacketListener eji
	GENERIC_DISCONNECT_MESSAGE b
	LOGGER a
	advancements k
	callbackScreen e
	commands q
	connection c
	debugQueryHandler n
	id s
	level g
	levelData h
	levels t
	localGameProfile d
	minecraft f
	playerInfoMap j
	random p
	recipeManager r
	registryAccess u
	serverChunkRadius o
	started i
	suggestionsProvider l
	tags m
	cleanup ()V c
	downloadCallback (Ljava/util/concurrent/CompletableFuture;)V a
	findTotem (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/item/ItemStack; a
	getAdvancements ()Lnet/minecraft/client/multiplayer/ClientAdvancements; h
	getCommands ()Lcom/mojang/brigadier/CommandDispatcher; i
	getConnection ()Lnet/minecraft/network/Connection; a
	getDebugQueryHandler ()Lnet/minecraft/client/DebugQueryHandler; l
	getId ()Ljava/util/UUID; m
	getLevel ()Lnet/minecraft/client/multiplayer/ClientLevel; j
	getLocalGameProfile ()Lcom/mojang/authlib/GameProfile; g
	getOnlinePlayerIds ()Ljava/util/Collection; f
	getOnlinePlayers ()Ljava/util/Collection; e
	getPlayerInfo (Ljava/lang/String;)Lnet/minecraft/client/multiplayer/PlayerInfo; a
	getPlayerInfo (Ljava/util/UUID;)Lnet/minecraft/client/multiplayer/PlayerInfo; a
	getRecipeManager ()Lnet/minecraft/world/item/crafting/RecipeManager; d
	getSuggestionsProvider ()Lnet/minecraft/client/multiplayer/ClientSuggestionProvider; b
	getTags ()Lnet/minecraft/tags/TagContainer; k
	handleAddEntity (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	handleAddExperienceOrb (Lnet/minecraft/network/protocol/game/ClientboundAddExperienceOrbPacket;)V a
	handleAddMob (Lnet/minecraft/network/protocol/game/ClientboundAddMobPacket;)V a
	handleAddObjective (Lnet/minecraft/network/protocol/game/ClientboundSetObjectivePacket;)V a
	handleAddOrRemoveRecipes (Lnet/minecraft/network/protocol/game/ClientboundRecipePacket;)V a
	handleAddPainting (Lnet/minecraft/network/protocol/game/ClientboundAddPaintingPacket;)V a
	handleAddPlayer (Lnet/minecraft/network/protocol/game/ClientboundAddPlayerPacket;)V a
	handleAddVibrationSignal (Lnet/minecraft/network/protocol/game/ClientboundAddVibrationSignalPacket;)V a
	handleAnimate (Lnet/minecraft/network/protocol/game/ClientboundAnimatePacket;)V a
	handleAwardStats (Lnet/minecraft/network/protocol/game/ClientboundAwardStatsPacket;)V a
	handleBlockBreakAck (Lnet/minecraft/network/protocol/game/ClientboundBlockBreakAckPacket;)V a
	handleBlockDestruction (Lnet/minecraft/network/protocol/game/ClientboundBlockDestructionPacket;)V a
	handleBlockEntityData (Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket;)V a
	handleBlockEvent (Lnet/minecraft/network/protocol/game/ClientboundBlockEventPacket;)V a
	handleBlockUpdate (Lnet/minecraft/network/protocol/game/ClientboundBlockUpdatePacket;)V a
	handleBossUpdate (Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket;)V a
	handleChangeDifficulty (Lnet/minecraft/network/protocol/game/ClientboundChangeDifficultyPacket;)V a
	handleChat (Lnet/minecraft/network/protocol/game/ClientboundChatPacket;)V a
	handleChunkBlocksUpdate (Lnet/minecraft/network/protocol/game/ClientboundSectionBlocksUpdatePacket;)V a
	handleCommandSuggestions (Lnet/minecraft/network/protocol/game/ClientboundCommandSuggestionsPacket;)V a
	handleCommands (Lnet/minecraft/network/protocol/game/ClientboundCommandsPacket;)V a
	handleContainerClose (Lnet/minecraft/network/protocol/game/ClientboundContainerClosePacket;)V a
	handleContainerContent (Lnet/minecraft/network/protocol/game/ClientboundContainerSetContentPacket;)V a
	handleContainerSetData (Lnet/minecraft/network/protocol/game/ClientboundContainerSetDataPacket;)V a
	handleContainerSetSlot (Lnet/minecraft/network/protocol/game/ClientboundContainerSetSlotPacket;)V a
	handleCustomPayload (Lnet/minecraft/network/protocol/game/ClientboundCustomPayloadPacket;)V a
	handleCustomSoundEvent (Lnet/minecraft/network/protocol/game/ClientboundCustomSoundPacket;)V a
	handleDisconnect (Lnet/minecraft/network/protocol/game/ClientboundDisconnectPacket;)V a
	handleEntityEvent (Lnet/minecraft/network/protocol/game/ClientboundEntityEventPacket;)V a
	handleEntityLinkPacket (Lnet/minecraft/network/protocol/game/ClientboundSetEntityLinkPacket;)V a
	handleExplosion (Lnet/minecraft/network/protocol/game/ClientboundExplodePacket;)V a
	handleForgetLevelChunk (Lnet/minecraft/network/protocol/game/ClientboundForgetLevelChunkPacket;)V a
	handleGameEvent (Lnet/minecraft/network/protocol/game/ClientboundGameEventPacket;)V a
	handleHorseScreenOpen (Lnet/minecraft/network/protocol/game/ClientboundHorseScreenOpenPacket;)V a
	handleInitializeBorder (Lnet/minecraft/network/protocol/game/ClientboundInitializeBorderPacket;)V a
	handleItemCooldown (Lnet/minecraft/network/protocol/game/ClientboundCooldownPacket;)V a
	handleKeepAlive (Lnet/minecraft/network/protocol/game/ClientboundKeepAlivePacket;)V a
	handleLevelChunk (Lnet/minecraft/network/protocol/game/ClientboundLevelChunkPacket;)V a
	handleLevelEvent (Lnet/minecraft/network/protocol/game/ClientboundLevelEventPacket;)V a
	handleLightUpdatePacked (Lnet/minecraft/network/protocol/game/ClientboundLightUpdatePacket;)V a
	handleLogin (Lnet/minecraft/network/protocol/game/ClientboundLoginPacket;)V a
	handleLookAt (Lnet/minecraft/network/protocol/game/ClientboundPlayerLookAtPacket;)V a
	handleMapItemData (Lnet/minecraft/network/protocol/game/ClientboundMapItemDataPacket;)V a
	handleMerchantOffers (Lnet/minecraft/network/protocol/game/ClientboundMerchantOffersPacket;)V a
	handleMoveEntity (Lnet/minecraft/network/protocol/game/ClientboundMoveEntityPacket;)V a
	handleMovePlayer (Lnet/minecraft/network/protocol/game/ClientboundPlayerPositionPacket;)V a
	handleMoveVehicle (Lnet/minecraft/network/protocol/game/ClientboundMoveVehiclePacket;)V a
	handleOpenBook (Lnet/minecraft/network/protocol/game/ClientboundOpenBookPacket;)V a
	handleOpenScreen (Lnet/minecraft/network/protocol/game/ClientboundOpenScreenPacket;)V a
	handleOpenSignEditor (Lnet/minecraft/network/protocol/game/ClientboundOpenSignEditorPacket;)V a
	handleParticleEvent (Lnet/minecraft/network/protocol/game/ClientboundLevelParticlesPacket;)V a
	handlePing (Lnet/minecraft/network/protocol/game/ClientboundPingPacket;)V a
	handlePlaceRecipe (Lnet/minecraft/network/protocol/game/ClientboundPlaceGhostRecipePacket;)V a
	handlePlayerAbilities (Lnet/minecraft/network/protocol/game/ClientboundPlayerAbilitiesPacket;)V a
	handlePlayerCombatEnd (Lnet/minecraft/network/protocol/game/ClientboundPlayerCombatEndPacket;)V a
	handlePlayerCombatEnter (Lnet/minecraft/network/protocol/game/ClientboundPlayerCombatEnterPacket;)V a
	handlePlayerCombatKill (Lnet/minecraft/network/protocol/game/ClientboundPlayerCombatKillPacket;)V a
	handlePlayerInfo (Lnet/minecraft/network/protocol/game/ClientboundPlayerInfoPacket;)V a
	handleRemoveEntity (Lnet/minecraft/network/protocol/game/ClientboundRemoveEntityPacket;)V a
	handleRemoveMobEffect (Lnet/minecraft/network/protocol/game/ClientboundRemoveMobEffectPacket;)V a
	handleResourcePack (Lnet/minecraft/network/protocol/game/ClientboundResourcePackPacket;)V a
	handleRespawn (Lnet/minecraft/network/protocol/game/ClientboundRespawnPacket;)V a
	handleRotateMob (Lnet/minecraft/network/protocol/game/ClientboundRotateHeadPacket;)V a
	handleSelectAdvancementsTab (Lnet/minecraft/network/protocol/game/ClientboundSelectAdvancementsTabPacket;)V a
	handleSetBorderCenter (Lnet/minecraft/network/protocol/game/ClientboundSetBorderCenterPacket;)V a
	handleSetBorderLerpSize (Lnet/minecraft/network/protocol/game/ClientboundSetBorderLerpSizePacket;)V a
	handleSetBorderSize (Lnet/minecraft/network/protocol/game/ClientboundSetBorderSizePacket;)V a
	handleSetBorderWarningDelay (Lnet/minecraft/network/protocol/game/ClientboundSetBorderWarningDelayPacket;)V a
	handleSetBorderWarningDistance (Lnet/minecraft/network/protocol/game/ClientboundSetBorderWarningDistancePacket;)V a
	handleSetCamera (Lnet/minecraft/network/protocol/game/ClientboundSetCameraPacket;)V a
	handleSetCarriedItem (Lnet/minecraft/network/protocol/game/ClientboundSetCarriedItemPacket;)V a
	handleSetChunkCacheCenter (Lnet/minecraft/network/protocol/game/ClientboundSetChunkCacheCenterPacket;)V a
	handleSetChunkCacheRadius (Lnet/minecraft/network/protocol/game/ClientboundSetChunkCacheRadiusPacket;)V a
	handleSetDisplayObjective (Lnet/minecraft/network/protocol/game/ClientboundSetDisplayObjectivePacket;)V a
	handleSetEntityData (Lnet/minecraft/network/protocol/game/ClientboundSetEntityDataPacket;)V a
	handleSetEntityMotion (Lnet/minecraft/network/protocol/game/ClientboundSetEntityMotionPacket;)V a
	handleSetEntityPassengersPacket (Lnet/minecraft/network/protocol/game/ClientboundSetPassengersPacket;)V a
	handleSetEquipment (Lnet/minecraft/network/protocol/game/ClientboundSetEquipmentPacket;)V a
	handleSetExperience (Lnet/minecraft/network/protocol/game/ClientboundSetExperiencePacket;)V a
	handleSetHealth (Lnet/minecraft/network/protocol/game/ClientboundSetHealthPacket;)V a
	handleSetPlayerTeamPacket (Lnet/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket;)V a
	handleSetScore (Lnet/minecraft/network/protocol/game/ClientboundSetScorePacket;)V a
	handleSetSpawn (Lnet/minecraft/network/protocol/game/ClientboundSetDefaultSpawnPositionPacket;)V a
	handleSetTime (Lnet/minecraft/network/protocol/game/ClientboundSetTimePacket;)V a
	handleSoundEntityEvent (Lnet/minecraft/network/protocol/game/ClientboundSoundEntityPacket;)V a
	handleSoundEvent (Lnet/minecraft/network/protocol/game/ClientboundSoundPacket;)V a
	handleStopSoundEvent (Lnet/minecraft/network/protocol/game/ClientboundStopSoundPacket;)V a
	handleTabListCustomisation (Lnet/minecraft/network/protocol/game/ClientboundTabListPacket;)V a
	handleTagQueryPacket (Lnet/minecraft/network/protocol/game/ClientboundTagQueryPacket;)V a
	handleTakeItemEntity (Lnet/minecraft/network/protocol/game/ClientboundTakeItemEntityPacket;)V a
	handleTeleportEntity (Lnet/minecraft/network/protocol/game/ClientboundTeleportEntityPacket;)V a
	handleTitlesClear (Lnet/minecraft/network/protocol/game/ClientboundClearTitlesPacket;)V a
	handleUpdateAdvancementsPacket (Lnet/minecraft/network/protocol/game/ClientboundUpdateAdvancementsPacket;)V a
	handleUpdateAttributes (Lnet/minecraft/network/protocol/game/ClientboundUpdateAttributesPacket;)V a
	handleUpdateMobEffect (Lnet/minecraft/network/protocol/game/ClientboundUpdateMobEffectPacket;)V a
	handleUpdateRecipes (Lnet/minecraft/network/protocol/game/ClientboundUpdateRecipesPacket;)V a
	handleUpdateTags (Lnet/minecraft/network/protocol/game/ClientboundUpdateTagsPacket;)V a
	levels ()Ljava/util/Set; n
	onDisconnect (Lnet/minecraft/network/chat/Component;)V a
	preparePackPrompt (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/Component; a
	readSectionList (IILnet/minecraft/world/level/lighting/LevelLightEngine;Lnet/minecraft/world/level/LightLayer;Ljava/util/BitSet;Ljava/util/BitSet;Ljava/util/Iterator;Z)V a
	registryAccess ()Lnet/minecraft/core/RegistryAccess; o
	send (Lnet/minecraft/network/protocol/Packet;)V a
	send (Lnet/minecraft/network/protocol/game/ServerboundResourcePackPacket$Action;)V a
	setActionBarText (Lnet/minecraft/network/protocol/game/ClientboundSetActionBarTextPacket;)V a
	setSubtitleText (Lnet/minecraft/network/protocol/game/ClientboundSetSubtitleTextPacket;)V a
	setTitleText (Lnet/minecraft/network/protocol/game/ClientboundSetTitleTextPacket;)V a
	setTitlesAnimation (Lnet/minecraft/network/protocol/game/ClientboundSetTitlesAnimationPacket;)V a
	validateResourcePackUrl (Ljava/lang/String;)Z b
net/minecraft/client/multiplayer/ClientSuggestionProvider ejj
	connection a
	minecraft b
	pendingSuggestionsFuture d
	pendingSuggestionsId c
	completeCustomSuggestions (ILcom/mojang/brigadier/suggestion/Suggestions;)V a
	customSuggestion (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; a
	getAbsoluteCoordinates ()Ljava/util/Collection; t
	getAllTeams ()Ljava/util/Collection; m
	getAvailableSoundEvents ()Ljava/util/Collection; n
	getOnlinePlayerNames ()Ljava/util/Collection; l
	getRecipeNames ()Ljava/util/stream/Stream; o
	getRelevantCoordinates ()Ljava/util/Collection; s
	getSelectedEntities ()Ljava/util/Collection; r
	hasPermission (I)Z c
	levels ()Ljava/util/Set; p
	prettyPrint (D)Ljava/lang/String; a
	prettyPrint (I)Ljava/lang/String; a
	registryAccess ()Lnet/minecraft/core/RegistryAccess; q
net/minecraft/client/multiplayer/MultiPlayerGameMode ejk
	LOGGER a
	MAX_ACTIONS_SIZE m
	carriedIndex n
	connection c
	destroyBlockPos d
	destroyDelay h
	destroyProgress f
	destroyTicks g
	destroyingItem e
	isDestroying i
	localPlayerMode j
	minecraft b
	previousLocalPlayerMode k
	unAckedActions l
	adjustPlayer (Lnet/minecraft/world/entity/player/Player;)V a
	attack (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Entity;)V a
	canHurtPlayer ()Z a
	continueDestroyBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z b
	createPlayer (Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/stats/StatsCounter;Lnet/minecraft/client/ClientRecipeBook;)Lnet/minecraft/client/player/LocalPlayer; a
	createPlayer (Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/stats/StatsCounter;Lnet/minecraft/client/ClientRecipeBook;ZZ)Lnet/minecraft/client/player/LocalPlayer; a
	destroyBlock (Lnet/minecraft/core/BlockPos;)Z a
	ensureHasSentCarriedItem ()V n
	getPickRange ()F c
	getPlayerMode ()Lnet/minecraft/world/level/GameType; l
	getPreviousPlayerMode ()Lnet/minecraft/world/level/GameType; k
	handleBlockBreakAck (Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/network/protocol/game/ServerboundPlayerActionPacket$Action;Z)V a
	handleCreativeModeItemAdd (Lnet/minecraft/world/item/ItemStack;I)V a
	handleCreativeModeItemDrop (Lnet/minecraft/world/item/ItemStack;)V a
	handleInventoryButtonClick (II)V a
	handleInventoryMouseClick (IIILnet/minecraft/world/inventory/ClickType;Lnet/minecraft/world/entity/player/Player;)V a
	handlePickItem (I)V a
	handlePlaceRecipe (ILnet/minecraft/world/item/crafting/Recipe;Z)V a
	hasExperience ()Z e
	hasFarPickRange ()Z h
	hasInfiniteItems ()Z g
	hasMissTime ()Z f
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	interactAt (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/EntityHitResult;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	isAlwaysFlying ()Z j
	isDestroying ()Z m
	isServerControlledInventory ()Z i
	releaseUsingItem (Lnet/minecraft/world/entity/player/Player;)V b
	sameDestroyTarget (Lnet/minecraft/core/BlockPos;)Z b
	sendBlockAction (Lnet/minecraft/network/protocol/game/ServerboundPlayerActionPacket$Action;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)V a
	setLocalMode (Lnet/minecraft/world/level/GameType;)V a
	setLocalMode (Lnet/minecraft/world/level/GameType;Lnet/minecraft/world/level/GameType;)V a
	startDestroyBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	stopDestroyBlock ()V b
	tick ()V d
	useItem (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	useItemOn (Lnet/minecraft/client/player/LocalPlayer;Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/client/multiplayer/PlayerInfo ejl
	displayHealth i
	gameMode c
	healthBlinkTime k
	lastHealth h
	lastHealthTime j
	latency d
	pendingTextures e
	profile a
	renderVisibilityId l
	skinModel f
	tabListDisplayName g
	textureLocations b
	getCapeLocation ()Lnet/minecraft/resources/ResourceLocation; h
	getDisplayHealth ()I n
	getElytraLocation ()Lnet/minecraft/resources/ResourceLocation; i
	getGameMode ()Lnet/minecraft/world/level/GameType; b
	getHealthBlinkTime ()J p
	getLastHealth ()I m
	getLastHealthTime ()J o
	getLatency ()I c
	getModelName ()Ljava/lang/String; f
	getProfile ()Lcom/mojang/authlib/GameProfile; a
	getRenderVisibilityId ()J q
	getSkinLocation ()Lnet/minecraft/resources/ResourceLocation; g
	getTabListDisplayName ()Lnet/minecraft/network/chat/Component; l
	getTeam ()Lnet/minecraft/world/scores/PlayerTeam; j
	isCapeLoaded ()Z d
	isSkinLoaded ()Z e
	registerTextures ()V k
	setDisplayHealth (I)V c
	setGameMode (Lnet/minecraft/world/level/GameType;)V a
	setHealthBlinkTime (J)V b
	setLastHealth (I)V b
	setLastHealthTime (J)V a
	setLatency (I)V a
	setRenderVisibilityId (J)V c
	setTabListDisplayName (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/client/multiplayer/ServerData ejm
	iconB64 k
	ip b
	lan l
	motd d
	name a
	packStatus j
	ping e
	pinged h
	playerList i
	protocol f
	status c
	version g
	copyFrom (Lnet/minecraft/client/multiplayer/ServerData;)V a
	getIconB64 ()Ljava/lang/String; c
	getResourcePackStatus ()Lnet/minecraft/client/multiplayer/ServerData$ServerPackStatus; b
	isLan ()Z d
	read (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/client/multiplayer/ServerData; a
	setIconB64 (Ljava/lang/String;)V a
	setResourcePackStatus (Lnet/minecraft/client/multiplayer/ServerData$ServerPackStatus;)V a
	write ()Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/client/multiplayer/ServerData$ServerPackStatus ejm$a
	$VALUES e
	DISABLED b
	ENABLED a
	PROMPT c
	name d
	$values ()[Lnet/minecraft/client/multiplayer/ServerData$ServerPackStatus; b
	getName ()Lnet/minecraft/network/chat/Component; a
net/minecraft/client/multiplayer/ServerList ejn
	LOGGER a
	minecraft b
	serverList c
	add (Lnet/minecraft/client/multiplayer/ServerData;)V b
	get (I)Lnet/minecraft/client/multiplayer/ServerData; a
	load ()V a
	remove (Lnet/minecraft/client/multiplayer/ServerData;)V a
	replace (ILnet/minecraft/client/multiplayer/ServerData;)V a
	save ()V b
	saveSingleServer (Lnet/minecraft/client/multiplayer/ServerData;)V c
	size ()I c
	swap (II)V a
net/minecraft/client/multiplayer/ServerStatusPinger ejo
	CANT_CONNECT_MESSAGE c
	LOGGER b
	SPLITTER a
	connections d
	formatPlayerCount (II)Lnet/minecraft/network/chat/Component; a
	onPingFailed (Lnet/minecraft/network/chat/Component;Lnet/minecraft/client/multiplayer/ServerData;)V a
	pingLegacyServer (Ljava/net/InetSocketAddress;Lnet/minecraft/client/multiplayer/ServerData;)V a
	pingServer (Lnet/minecraft/client/multiplayer/ServerData;Ljava/lang/Runnable;)V a
	removeAll ()V b
	tick ()V a
net/minecraft/client/multiplayer/resolver/AddressCheck ejq
	createFromService ()Lnet/minecraft/client/multiplayer/resolver/AddressCheck; a
	isAllowed (Lnet/minecraft/client/multiplayer/resolver/ResolvedServerAddress;)Z a
	isAllowed (Lnet/minecraft/client/multiplayer/resolver/ServerAddress;)Z a
net/minecraft/client/multiplayer/resolver/ResolvedServerAddress ejr
	asInetSocketAddress ()Ljava/net/InetSocketAddress; d
	from (Ljava/net/InetSocketAddress;)Lnet/minecraft/client/multiplayer/resolver/ResolvedServerAddress; a
	getHostIp ()Ljava/lang/String; b
	getHostName ()Ljava/lang/String; a
	getPort ()I c
net/minecraft/client/multiplayer/resolver/ServerAddress ejs
	INVALID c
	LOGGER a
	hostAndPort b
	getHost ()Ljava/lang/String; a
	getPort ()I b
	isValidAddress (Ljava/lang/String;)Z b
	parsePort (Ljava/lang/String;)I c
	parseString (Ljava/lang/String;)Lnet/minecraft/client/multiplayer/resolver/ServerAddress; a
net/minecraft/client/multiplayer/resolver/ServerAddressResolver ejt
	LOGGER a
	SYSTEM b
net/minecraft/client/multiplayer/resolver/ServerNameResolver eju
	DEFAULT a
	addressCheck d
	redirectHandler c
	resolver b
	resolveAddress (Lnet/minecraft/client/multiplayer/resolver/ServerAddress;)Ljava/util/Optional; a
net/minecraft/client/multiplayer/resolver/ServerRedirectHandler ejv
	EMPTY b
	LOGGER a
	createDnsSrvRedirectHandler ()Lnet/minecraft/client/multiplayer/resolver/ServerRedirectHandler; a
net/minecraft/client/particle/AshParticle ejy
net/minecraft/client/particle/AshParticle$Provider ejy$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/AttackSweepParticle ejz
	sprites a
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/AttackSweepParticle$Provider ejz$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/BaseAshSmokeParticle eka
	sprites a
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/BreakingItemParticle ekb
	uo a
	vo b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	getU0 ()F c
	getU1 ()F d
	getV0 ()F e
	getV1 ()F f
net/minecraft/client/particle/BreakingItemParticle$Provider ekb$a
	createParticle (Lnet/minecraft/core/particles/ItemParticleOption;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/BreakingItemParticle$SlimeProvider ekb$b
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/BreakingItemParticle$SnowballProvider ekb$c
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/BubbleColumnUpParticle ekc
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/BubbleColumnUpParticle$Provider ekc$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/BubbleParticle ekd
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/BubbleParticle$Provider ekd$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/BubblePopParticle eke
	sprites a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/BubblePopParticle$Provider eke$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/CampfireSmokeParticle ekf
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/CampfireSmokeParticle$CosyProvider ekf$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/CampfireSmokeParticle$SignalProvider ekf$b
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/CritParticle ekg
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/CritParticle$DamageIndicatorProvider ekg$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/CritParticle$MagicProvider ekg$b
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/CritParticle$Provider ekg$c
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DragonBreathParticle ekh
	COLOR_MAX b
	COLOR_MAX_BLUE K
	COLOR_MAX_GREEN J
	COLOR_MAX_RED I
	COLOR_MIN a
	COLOR_MIN_BLUE H
	COLOR_MIN_GREEN G
	COLOR_MIN_RED F
	hasHitGround L
	sprites M
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/DragonBreathParticle$Provider ekh$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle eki
	isGlowing a
	type b
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	getType ()Lnet/minecraft/world/level/material/Fluid; g
	postMoveUpdate ()V i
	preMoveUpdate ()V h
	tick ()V a
net/minecraft/client/particle/DripParticle$CoolingDripHangParticle eki$a
	preMoveUpdate ()V h
net/minecraft/client/particle/DripParticle$DripHangParticle eki$b
	fallingParticle b
	postMoveUpdate ()V i
	preMoveUpdate ()V h
net/minecraft/client/particle/DripParticle$DripLandParticle eki$c
net/minecraft/client/particle/DripParticle$DripstoneFallAndLandParticle eki$d
	postMoveUpdate ()V i
net/minecraft/client/particle/DripParticle$DripstoneLavaFallProvider eki$e
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$DripstoneLavaHangProvider eki$f
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$DripstoneWaterFallProvider eki$g
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$DripstoneWaterHangProvider eki$h
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$FallAndLandParticle eki$i
	landParticle b
	postMoveUpdate ()V i
net/minecraft/client/particle/DripParticle$FallingParticle eki$j
	postMoveUpdate ()V i
net/minecraft/client/particle/DripParticle$HoneyFallAndLandParticle eki$k
	postMoveUpdate ()V i
net/minecraft/client/particle/DripParticle$HoneyFallProvider eki$l
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$HoneyHangProvider eki$m
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$HoneyLandProvider eki$n
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$LavaFallProvider eki$o
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$LavaHangProvider eki$p
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$LavaLandProvider eki$q
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$NectarFallProvider eki$r
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$ObsidianTearFallProvider eki$s
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$ObsidianTearHangProvider eki$t
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$ObsidianTearLandProvider eki$u
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$SporeBlossomFallProvider eki$v
	random b
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$WaterFallProvider eki$w
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$WaterHangProvider eki$x
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DustColorTransitionParticle ekj
	fromColor a
	toColor b
	lerpColors (F)V f
	randomizeColor (Lcom/mojang/math/Vector3f;F)Lcom/mojang/math/Vector3f; a
	render (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;F)V a
net/minecraft/client/particle/DustColorTransitionParticle$Provider ekj$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/DustColorTransitionOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DustParticle ekk
net/minecraft/client/particle/DustParticle$Provider ekk$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/DustParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DustParticleBase ekl
	sprites a
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	randomizeColor (FF)F a
	tick ()V a
net/minecraft/client/particle/EnchantmentTableParticle ekm
	xStart a
	yStart b
	zStart F
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	move (DDD)V a
	tick ()V a
net/minecraft/client/particle/EnchantmentTableParticle$NautilusProvider ekm$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/EnchantmentTableParticle$Provider ekm$b
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/EndRodParticle ekn
	move (DDD)V a
net/minecraft/client/particle/EndRodParticle$Provider ekn$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/ExplodeParticle eko
	sprites a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/ExplodeParticle$Provider eko$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/FallingDustParticle ekp
	rotSpeed a
	sprites b
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/FallingDustParticle$Provider ekp$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/BlockParticleOption;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/FireworkParticles ekq
net/minecraft/client/particle/FireworkParticles$FlashProvider ekq$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/FireworkParticles$OverlayParticle ekq$b
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	render (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;F)V a
net/minecraft/client/particle/FireworkParticles$SparkParticle ekq$c
	engine G
	fadeB J
	fadeG I
	fadeR H
	flicker F
	hasFade K
	trail b
	render (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;F)V a
	setFlicker (Z)V b
	setTrail (Z)V a
	tick ()V a
net/minecraft/client/particle/FireworkParticles$SparkProvider ekq$d
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/FireworkParticles$Starter ekq$e
	engine b
	explosions D
	life a
	twinkleDelay E
	createParticle (DDDDDD[I[IZZ)V a
	createParticleBall (DI[I[IZZ)V a
	createParticleBurst ([I[IZZ)V a
	createParticleShape (D[[D[I[IZZZ)V a
	isFarAwayFromCamera ()Z c
	tick ()V a
net/minecraft/client/particle/FlameParticle ekr
	getLightColor (F)I a
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	move (DDD)V a
net/minecraft/client/particle/FlameParticle$Provider ekr$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/FlameParticle$SmallFlameProvider ekr$b
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/GlowParticle eks
	RANDOM a
	sprites b
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/GlowParticle$ElectricSparkProvider eks$a
	SPEED_FACTOR a
	sprite b
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/GlowParticle$GlowSquidProvider eks$b
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/GlowParticle$ScrapeProvider eks$c
	SPEED_FACTOR a
	sprite b
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/GlowParticle$WaxOffProvider eks$d
	SPEED_FACTOR a
	sprite b
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/GlowParticle$WaxOnProvider eks$e
	SPEED_FACTOR a
	sprite b
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/HeartParticle ekt
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
net/minecraft/client/particle/HeartParticle$AngryVillagerProvider ekt$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/HeartParticle$Provider ekt$b
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/HugeExplosionParticle eku
	sprites a
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/HugeExplosionParticle$Provider eku$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/HugeExplosionSeedParticle ekv
	life a
	lifeTime b
	tick ()V a
net/minecraft/client/particle/HugeExplosionSeedParticle$Provider ekv$a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/ItemPickupParticle ekw
	LIFE_TIME a
	entityRenderDispatcher G
	itemEntity D
	life F
	renderBuffers b
	target E
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	getSafeCopy (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/entity/Entity; a
	render (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;F)V a
	tick ()V a
net/minecraft/client/particle/LargeSmokeParticle ekx
net/minecraft/client/particle/LargeSmokeParticle$Provider ekx$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/LavaParticle eky
	getLightColor (F)I a
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/LavaParticle$Provider eky$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/MobAppearanceParticle ekz
	model a
	renderType b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	render (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;F)V a
net/minecraft/client/particle/MobAppearanceParticle$Provider ekz$a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/NoRenderParticle ela
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	render (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;F)V a
net/minecraft/client/particle/NoteParticle elb
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
net/minecraft/client/particle/NoteParticle$Provider elb$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/Particle elc
	INITIAL_AABB a
	age s
	alpha y
	bCol x
	bb b
	bbHeight q
	bbWidth p
	friction B
	gCol w
	gravity u
	hasPhysics n
	level c
	lifetime t
	oRoll A
	onGround m
	rCol v
	random r
	removed o
	roll z
	speedUpWhenYMotionIsBlocked C
	stoppedByCollision D
	x g
	xd j
	xo d
	y h
	yd k
	yo e
	z i
	zd l
	zo f
	getBoundingBox ()Lnet/minecraft/world/phys/AABB; n
	getLifetime ()I j
	getLightColor (F)I a
	getParticleGroup ()Ljava/util/Optional; o
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	isAlive ()Z m
	move (DDD)V a
	remove ()V k
	render (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;F)V a
	scale (F)Lnet/minecraft/client/particle/Particle; d
	setAlpha (F)V e
	setBoundingBox (Lnet/minecraft/world/phys/AABB;)V a
	setColor (FFF)V a
	setLifetime (I)V a
	setLocationFromBoundingbox ()V l
	setParticleSpeed (DDD)V b
	setPos (DDD)V c
	setPower (F)Lnet/minecraft/client/particle/Particle; c
	setSize (FF)V b
	tick ()V a
net/minecraft/client/particle/ParticleDescription eld
	textures a
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/particle/ParticleDescription; a
	getTextures ()Ljava/util/List; a
net/minecraft/client/particle/ParticleEngine ele
	MAX_PARTICLES_PER_LAYER b
	RENDER_ORDER c
	level a
	particles d
	particlesToAdd i
	providers h
	random g
	spriteSets j
	textureAtlas k
	textureManager f
	trackedParticleCounts l
	trackingEmitters e
	add (Lnet/minecraft/client/particle/Particle;)V a
	close ()V a
	countParticles ()Ljava/lang/String; d
	crack (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)V a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createTrackingEmitter (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/particles/ParticleOptions;)V a
	createTrackingEmitter (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/particles/ParticleOptions;I)V a
	destroy (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	hasSpaceInParticleLimit (Lnet/minecraft/core/particles/ParticleGroup;)Z a
	loadParticleDescription (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/resources/ResourceLocation;Ljava/util/Map;)V a
	makeParticle (Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)Lnet/minecraft/client/particle/Particle; b
	register (Lnet/minecraft/core/particles/ParticleType;Lnet/minecraft/client/particle/ParticleEngine$SpriteParticleRegistration;)V a
	register (Lnet/minecraft/core/particles/ParticleType;Lnet/minecraft/client/particle/ParticleProvider;)V a
	registerProviders ()V e
	reload (Lnet/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource;Lnet/minecraft/client/renderer/LightTexture;Lnet/minecraft/client/Camera;F)V a
	setLevel (Lnet/minecraft/client/multiplayer/ClientLevel;)V a
	tick ()V b
	tickParticle (Lnet/minecraft/client/particle/Particle;)V b
	tickParticleList (Ljava/util/Collection;)V a
	updateCount (Lnet/minecraft/core/particles/ParticleGroup;I)V a
net/minecraft/client/particle/ParticleEngine$MutableSpriteSet ele$a
	sprites b
	get (II)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	get (Ljava/util/Random;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	rebind (Ljava/util/List;)V a
net/minecraft/client/particle/ParticleEngine$SpriteParticleRegistration ele$b
net/minecraft/client/particle/ParticleProvider elf
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/ParticleRenderType elg
	CUSTOM e
	NO_RENDER f
	PARTICLE_SHEET_LIT d
	PARTICLE_SHEET_OPAQUE b
	PARTICLE_SHEET_TRANSLUCENT c
	TERRAIN_SHEET a
	begin (Lcom/mojang/blaze3d/vertex/BufferBuilder;Lnet/minecraft/client/renderer/texture/TextureManager;)V a
	end (Lcom/mojang/blaze3d/vertex/Tesselator;)V a
net/minecraft/client/particle/PlayerCloudParticle elh
	sprites a
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/PlayerCloudParticle$Provider elh$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/PlayerCloudParticle$SneezeProvider elh$b
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/PortalParticle eli
	xStart a
	yStart b
	zStart F
	getLightColor (F)I a
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	move (DDD)V a
	tick ()V a
net/minecraft/client/particle/PortalParticle$Provider eli$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/ReversePortalParticle elj
	getQuadSize (F)F b
	tick ()V a
net/minecraft/client/particle/ReversePortalParticle$ReversePortalProvider elj$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/RisingParticle elk
net/minecraft/client/particle/SimpleAnimatedParticle ell
	fadeB G
	fadeG F
	fadeR b
	hasFade H
	sprites a
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	setColor (I)V b
	setFadeColor (I)V c
	tick ()V a
net/minecraft/client/particle/SingleQuadParticle elm
	quadSize D
	getQuadSize (F)F b
	getU0 ()F c
	getU1 ()F d
	getV0 ()F e
	getV1 ()F f
	render (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;F)V a
	scale (F)Lnet/minecraft/client/particle/Particle; d
net/minecraft/client/particle/SmokeParticle eln
net/minecraft/client/particle/SmokeParticle$Provider eln$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SnowflakeParticle elo
	sprites a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/SnowflakeParticle$Provider elo$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SoulParticle elp
	sprites a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/SoulParticle$Provider elp$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SpellParticle elq
	RANDOM a
	sprites b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	isCloseToScopingPlayer ()Z g
	tick ()V a
net/minecraft/client/particle/SpellParticle$AmbientMobProvider elq$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SpellParticle$InstantProvider elq$b
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SpellParticle$MobProvider elq$c
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SpellParticle$Provider elq$d
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SpellParticle$WitchProvider elq$e
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SpitParticle elr
net/minecraft/client/particle/SpitParticle$Provider elr$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SplashParticle els
net/minecraft/client/particle/SplashParticle$Provider els$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SpriteSet elt
	get (II)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	get (Ljava/util/Random;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
net/minecraft/client/particle/SquidInkParticle elu
	tick ()V a
net/minecraft/client/particle/SquidInkParticle$GlowInkProvider elu$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SquidInkParticle$Provider elu$b
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/StationaryItemParticle elv
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
net/minecraft/client/particle/StationaryItemParticle$BarrierProvider elv$a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/StationaryItemParticle$LightProvider elv$b
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SuspendedParticle elw
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
net/minecraft/client/particle/SuspendedParticle$CrimsonSporeProvider elw$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SuspendedParticle$SporeBlossomAirProvider elw$b
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SuspendedParticle$UnderwaterProvider elw$c
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SuspendedParticle$WarpedSporeProvider elw$d
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SuspendedTownParticle elx
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	move (DDD)V a
	tick ()V a
net/minecraft/client/particle/SuspendedTownParticle$ComposterFillProvider elx$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SuspendedTownParticle$DolphinSpeedProvider elx$b
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SuspendedTownParticle$HappyVillagerProvider elx$c
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SuspendedTownParticle$Provider elx$d
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/TerrainParticle ely
	pos a
	uo b
	vo F
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	getU0 ()F c
	getU1 ()F d
	getV0 ()F e
	getV1 ()F f
net/minecraft/client/particle/TerrainParticle$Provider ely$a
	createParticle (Lnet/minecraft/core/particles/BlockParticleOption;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/TextureSheetParticle elz
	sprite E
	getU0 ()F c
	getU1 ()F d
	getV0 ()F e
	getV1 ()F f
	pickSprite (Lnet/minecraft/client/particle/SpriteSet;)V a
	setSprite (Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;)V a
	setSpriteFromAge (Lnet/minecraft/client/particle/SpriteSet;)V b
net/minecraft/client/particle/TotemParticle ema
net/minecraft/client/particle/TotemParticle$Provider ema$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/TrackingEmitter emb
	entity a
	life b
	lifeTime D
	particleType E
	tick ()V a
net/minecraft/client/particle/VibrationSignalParticle emc
	vibrationPath a
	yRot b
	yRotO F
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	render (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;F)V a
	renderSignal (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;FLjava/util/function/Consumer;)V a
	tick ()V a
net/minecraft/client/particle/VibrationSignalParticle$Provider emc$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/VibrationParticleOption;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/WakeParticle emd
	sprites a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/WakeParticle$Provider emd$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/WaterCurrentDownParticle eme
	angle a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/WaterCurrentDownParticle$Provider eme$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/WaterDropParticle emf
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/WaterDropParticle$Provider emf$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/WhiteAshParticle emg
	COLOR_RGB24 a
net/minecraft/client/particle/WhiteAshParticle$Provider emg$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/player/AbstractClientPlayer emi
	SKIN_HAT_HEIGHT cq
	SKIN_HAT_U f
	SKIN_HAT_V co
	SKIN_HAT_WIDTH cp
	SKIN_HEAD_HEIGHT e
	SKIN_HEAD_U b
	SKIN_HEAD_V c
	SKIN_HEAD_WIDTH d
	SKIN_TEX_HEIGHT cs
	SKIN_TEX_WIDTH cr
	SKIN_URL_TEMPLATE cx
	clientLevel cw
	elytraRotX ct
	elytraRotY cu
	elytraRotZ cv
	playerInfo cy
	getCloakTextureLocation ()Lnet/minecraft/resources/ResourceLocation; e
	getElytraTextureLocation ()Lnet/minecraft/resources/ResourceLocation; l
	getFieldOfViewModifier ()F p
	getModelName ()Ljava/lang/String; o
	getPlayerInfo ()Lnet/minecraft/client/multiplayer/PlayerInfo; b
	getSkinLocation (Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; d
	getSkinTextureLocation ()Lnet/minecraft/resources/ResourceLocation; d
	isCapeLoaded ()Z a
	isCreative ()Z f
	isElytraLoaded ()Z g
	isSkinLoaded ()Z c
	isSpectator ()Z A_
	registerSkinTexture (Lnet/minecraft/resources/ResourceLocation;Ljava/lang/String;)V a
net/minecraft/client/player/Input emj
	down d
	forwardImpulse b
	jumping g
	left e
	leftImpulse a
	right f
	shiftKeyDown h
	up c
	getMoveVector ()Lnet/minecraft/world/phys/Vec2; a
	hasForwardImpulse ()Z b
	tick (Z)V a
net/minecraft/client/player/KeyboardInput emk
	MOVING_SLOW_FACTOR j
	options i
	tick (Z)V a
net/minecraft/client/player/LocalPlayer eml
	POSITION_REMINDER_INTERVAL cI
	SUFFOCATING_COLLISION_CHECK_SCALE cM
	WATER_VISION_MAX_TIME cJ
	WATER_VISION_QUICK_PERCENT cL
	WATER_VISION_QUICK_TIME cK
	ambientSoundHandlers cP
	autoJumpEnabled di
	autoJumpTime dj
	connection cx
	crouching cX
	flashOnSetHealth db
	handsBusy dh
	input cy
	jumpRidingScale de
	jumpRidingTicks dd
	lastOnGround cW
	minecraft cz
	oPortalTime cH
	permissionLevel cQ
	portalTime cG
	positionReminder da
	recipeBook cO
	serverBrand dc
	showDeathScreen dm
	sprintTime cB
	sprintTriggerTime cA
	startedUsingItem df
	stats cN
	usingItemHand dg
	wasFallFlying dk
	wasShiftKeyDown cY
	wasSprinting cZ
	waterVisionTime dl
	xBob cD
	xBobO cF
	xLast cR
	xRotLast cV
	yBob cC
	yBobO cE
	yLast1 cS
	yRotLast cU
	zLast cT
	actuallyHurt (Lnet/minecraft/world/damagesource/DamageSource;F)V f
	aiStep ()V u_
	canAutoJump ()Z N
	canSpawnSoulSpeedParticle ()Z ds
	canSpawnSprintParticle ()Z aV
	chat (Ljava/lang/String;)V e
	clientSideCloseContainer ()V r
	closeContainer ()V n
	crit (Lnet/minecraft/world/entity/Entity;)V a
	displayClientMessage (Lnet/minecraft/network/chat/Component;Z)V a
	drop (Z)Z a
	getCurrentMood ()F q
	getJumpRidingScale ()F D
	getPermissionLevel ()I y
	getRecipeBook ()Lnet/minecraft/client/ClientRecipeBook; z
	getRopeHoldPosition (F)Lnet/minecraft/world/phys/Vec3; n
	getServerBrand ()Ljava/lang/String; w
	getStats ()Lnet/minecraft/stats/StatsCounter; x
	getUsedItemHand ()Lnet/minecraft/world/InteractionHand; eF
	getViewXRot (F)F f
	getViewYRot (F)F g
	getWaterVision ()F K
	handleEntityEvent (B)V a
	handleNetherPortalClient ()V M
	hasEnoughImpulseToStartSprinting ()Z Q
	heal (F)V b
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	hurtTo (F)V w
	isAutoJumpEnabled ()Z J
	isControlledCamera ()Z G
	isCrouching ()Z bI
	isEffectiveAi ()Z eA
	isHandsBusy ()Z I
	isLocalPlayer ()Z fh
	isMoving ()Z O
	isMovingSlowly ()Z F
	isRidingJumpable ()Z B
	isShiftKeyDown ()Z bD
	isSuppressingSlidingDownLadder ()Z eM
	isUnderWater ()Z aP
	isUsingItem ()Z eE
	magicCrit (Lnet/minecraft/world/entity/Entity;)V b
	move (Lnet/minecraft/world/entity/MoverType;Lnet/minecraft/world/phys/Vec3;)V a
	moveTowardsClosestSpace (DD)V b
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	onUpdateAbilities ()V t
	openCommandBlock (Lnet/minecraft/world/level/block/entity/CommandBlockEntity;)V a
	openItemGui (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/InteractionHand;)V a
	openJigsawBlock (Lnet/minecraft/world/level/block/entity/JigsawBlockEntity;)V a
	openMinecartCommandBlock (Lnet/minecraft/world/level/BaseCommandBlock;)V a
	openStructureBlock (Lnet/minecraft/world/level/block/entity/StructureBlockEntity;)V a
	openTextEdit (Lnet/minecraft/world/level/block/entity/SignBlockEntity;)V a
	playNotifySound (Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	playSound (Lnet/minecraft/sounds/SoundEvent;FF)V a
	removeEffectNoUpdate (Lnet/minecraft/world/effect/MobEffect;)Lnet/minecraft/world/effect/MobEffectInstance; c
	removeRecipeHighlight (Lnet/minecraft/world/item/crafting/Recipe;)V a
	removeVehicle ()V bo
	resetPos ()V H
	respawn ()V fg
	rideTick ()V bj
	sendMessage (Lnet/minecraft/network/chat/Component;Ljava/util/UUID;)V a
	sendOpenInventory ()V v
	sendPosition ()V L
	sendRidingJump ()V u
	serverAiStep ()V ex
	setExperienceValues (FII)V a
	setPermissionLevel (I)V a
	setServerBrand (Ljava/lang/String;)V f
	setShowDeathScreen (Z)V b
	setSprinting (Z)V g
	shouldShowDeathScreen ()Z A
	startRiding (Lnet/minecraft/world/entity/Entity;Z)Z a
	startUsingItem (Lnet/minecraft/world/InteractionHand;)V c
	stopUsingItem ()V eK
	suffocatesAt (Lnet/minecraft/core/BlockPos;)Z g
	swing (Lnet/minecraft/world/InteractionHand;)V a
	tick ()V k
	tickDeath ()V dB
	updateAutoJump (FF)V f
	updateIsUnderwater ()Z fb
	updateTutorialInventoryAction (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/ClickAction;)V a
net/minecraft/client/player/RemotePlayer emm
	aiStep ()V u_
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	sendMessage (Lnet/minecraft/network/chat/Component;Ljava/util/UUID;)V a
	shouldRenderAtSqrDistance (D)Z a
	tick ()V k
	updatePlayerPose ()V fc
net/minecraft/client/player/inventory/Hotbar emn
	items a
	createTag ()Lnet/minecraft/nbt/ListTag; a
	fromTag (Lnet/minecraft/nbt/ListTag;)V a
net/minecraft/client/profiling/ClientMetricsSamplersProvider emq
	levelRenderer a
	samplerFactory c
	samplers b
	registerStaticSamplers ()V a
	samplers (Ljava/util/function/Supplier;)Ljava/util/Set; a
net/minecraft/client/renderer/BiomeColors ems
	FOLIAGE_COLOR_RESOLVER b
	GRASS_COLOR_RESOLVER a
	WATER_COLOR_RESOLVER c
	getAverageColor (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ColorResolver;)I a
	getAverageFoliageColor (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;)I b
	getAverageGrassColor (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;)I a
	getAverageWaterColor (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;)I c
net/minecraft/client/renderer/BlockEntityWithoutLevelRenderer emt
	DEFAULT_SHULKER_BOX b
	SHULKER_BOXES a
	banner f
	bed g
	blockEntityRenderDispatcher l
	chest c
	conduit h
	enderChest e
	entityModelSet m
	shieldModel i
	skullModels k
	trappedChest d
	tridentModel j
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	renderByItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/client/renderer/block/model/ItemTransforms$TransformType;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/ChunkBufferBuilderPack emu
	builders a
	builder (Lnet/minecraft/client/renderer/RenderType;)Lcom/mojang/blaze3d/vertex/BufferBuilder; a
	clearAll ()V a
	discardAll ()V b
net/minecraft/client/renderer/CubeMap emv
	SIDES a
	images b
	preload (Lnet/minecraft/client/renderer/texture/TextureManager;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
	render (Lnet/minecraft/client/Minecraft;FFF)V a
net/minecraft/client/renderer/DimensionSpecialEffects emw
	EFFECTS a
	cloudLevel c
	constantAmbientLight g
	forceBrightLightmap f
	hasGround d
	skyType e
	sunriseCol b
	constantAmbientLight ()Z e
	forType (Lnet/minecraft/world/level/dimension/DimensionType;)Lnet/minecraft/client/renderer/DimensionSpecialEffects; a
	forceBrightLightmap ()Z d
	getBrightnessDependentFogColor (Lnet/minecraft/world/phys/Vec3;F)Lnet/minecraft/world/phys/Vec3; a
	getCloudHeight ()F a
	getSunriseColor (FF)[F a
	hasGround ()Z b
	isFoggyAt (II)Z a
	skyType ()Lnet/minecraft/client/renderer/DimensionSpecialEffects$SkyType; c
net/minecraft/client/renderer/DimensionSpecialEffects$EndEffects emw$a
	getBrightnessDependentFogColor (Lnet/minecraft/world/phys/Vec3;F)Lnet/minecraft/world/phys/Vec3; a
	getSunriseColor (FF)[F a
	isFoggyAt (II)Z a
net/minecraft/client/renderer/DimensionSpecialEffects$NetherEffects emw$b
	getBrightnessDependentFogColor (Lnet/minecraft/world/phys/Vec3;F)Lnet/minecraft/world/phys/Vec3; a
	isFoggyAt (II)Z a
net/minecraft/client/renderer/DimensionSpecialEffects$OverworldEffects emw$c
	CLOUD_LEVEL a
	getBrightnessDependentFogColor (Lnet/minecraft/world/phys/Vec3;F)Lnet/minecraft/world/phys/Vec3; a
	isFoggyAt (II)Z a
net/minecraft/client/renderer/DimensionSpecialEffects$SkyType emw$d
	$VALUES d
	END c
	NONE a
	NORMAL b
	$values ()[Lnet/minecraft/client/renderer/DimensionSpecialEffects$SkyType; a
net/minecraft/client/renderer/EffectInstance emx
	ALWAYS_REAPPLY d
	DUMMY_UNIFORM c
	EFFECT_SHADER_PATH a
	LOGGER b
	attributeNames r
	attributes q
	blend p
	dirty o
	fragmentProgram t
	lastAppliedEffect e
	lastProgramId f
	name n
	programId m
	samplerLocations i
	samplerMap g
	samplerNames h
	uniformLocations k
	uniformMap l
	uniforms j
	vertexProgram s
	apply ()V g
	attachToProgram ()V e
	clear ()V f
	getFragmentProgram ()Lcom/mojang/blaze3d/shaders/Program; d
	getId ()I a
	getName ()Ljava/lang/String; h
	getOrCreate (Lnet/minecraft/server/packs/resources/ResourceManager;Lcom/mojang/blaze3d/shaders/Program$Type;Ljava/lang/String;)Lcom/mojang/blaze3d/shaders/EffectProgram; a
	getUniform (Ljava/lang/String;)Lcom/mojang/blaze3d/shaders/Uniform; a
	getVertexProgram ()Lcom/mojang/blaze3d/shaders/Program; c
	markDirty ()V b
	parseBlendNode (Lcom/google/gson/JsonObject;)Lcom/mojang/blaze3d/shaders/BlendMode; a
	parseSamplerNode (Lcom/google/gson/JsonElement;)V a
	parseUniformNode (Lcom/google/gson/JsonElement;)V b
	safeGetUniform (Ljava/lang/String;)Lcom/mojang/blaze3d/shaders/AbstractUniform; b
	setSampler (Ljava/lang/String;Ljava/util/function/IntSupplier;)V a
	updateLocations ()V i
net/minecraft/client/renderer/FaceInfo emy
	$VALUES i
	BY_FACING g
	DOWN a
	EAST f
	NORTH c
	SOUTH d
	UP b
	WEST e
	infos h
	$values ()[Lnet/minecraft/client/renderer/FaceInfo; a
	fromFacing (Lnet/minecraft/core/Direction;)Lnet/minecraft/client/renderer/FaceInfo; a
	getVertexInfo (I)Lnet/minecraft/client/renderer/FaceInfo$VertexInfo; a
net/minecraft/client/renderer/FaceInfo$Constants emy$a
	MAX_X c
	MAX_Y b
	MAX_Z a
	MIN_X f
	MIN_Y e
	MIN_Z d
net/minecraft/client/renderer/FaceInfo$VertexInfo emy$b
	xFace a
	yFace b
	zFace c
net/minecraft/client/renderer/FogRenderer emz
	BIOME_FOG_TRANSITION_TIME a
	WATER_FOG_DISTANCE b
	biomeChangedTime h
	fogBlue e
	fogGreen d
	fogRed c
	previousBiomeFog g
	targetBiomeFog f
	levelFogColor ()V b
	setupColor (Lnet/minecraft/client/Camera;FLnet/minecraft/client/multiplayer/ClientLevel;IF)V a
	setupFog (Lnet/minecraft/client/Camera;Lnet/minecraft/client/renderer/FogRenderer$FogMode;FZ)V a
	setupNoFog ()V a
net/minecraft/client/renderer/FogRenderer$FogMode emz$a
	$VALUES c
	FOG_SKY a
	FOG_TERRAIN b
	$values ()[Lnet/minecraft/client/renderer/FogRenderer$FogMode; a
net/minecraft/client/renderer/GameRenderer ena
	DEPTH_BUFFER_DEBUG h
	EFFECTS I
	EFFECT_NONE d
	ITEM_ACTIVATION_ANIMATION_LENGTH c
	LOGGER g
	NAUSEA_LOCATION f
	PROJECTION_Z_NEAR a
	blitShader e
	blockShader S
	darkenWorldAmount r
	darkenWorldAmountO s
	effectActive K
	effectIndex J
	fov p
	itemActivationItem D
	itemActivationOffX F
	itemActivationOffY G
	itemActivationTicks E
	itemInHandRenderer b
	lastActiveTime w
	lastScreenshotAttempt v
	lightTexture x
	mainCamera L
	mapRenderer m
	minecraft i
	newEntityShader T
	oldFov q
	overlayTexture y
	panoramicMode z
	particleShader U
	positionColorLightmapShader V
	positionColorShader O
	positionColorTexLightmapShader W
	positionColorTexShader P
	positionShader N
	positionTexColorNormalShader X
	positionTexColorShader R
	positionTexLightmapColorShader Y
	positionTexShader Q
	postEffect H
	random k
	renderBlockOutline u
	renderBuffers n
	renderDistance l
	renderHand t
	rendertypeArmorCutoutNoCullShader af
	rendertypeArmorEntityGlintShader az
	rendertypeArmorGlintShader ay
	rendertypeBeaconBeamShader ao
	rendertypeCrumblingShader aO
	rendertypeCutoutMippedShader aa
	rendertypeCutoutShader ab
	rendertypeEndGatewayShader aM
	rendertypeEndPortalShader aL
	rendertypeEnergySwirlShader au
	rendertypeEntityAlphaShader as
	rendertypeEntityCutoutNoCullShader ai
	rendertypeEntityCutoutNoCullZOffsetShader aj
	rendertypeEntityCutoutShader ah
	rendertypeEntityDecalShader ap
	rendertypeEntityGlintDirectShader aE
	rendertypeEntityGlintShader aD
	rendertypeEntityNoOutlineShader aq
	rendertypeEntityShadowShader ar
	rendertypeEntitySmoothCutoutShader an
	rendertypeEntitySolidShader ag
	rendertypeEntityTranslucentCullShader al
	rendertypeEntityTranslucentShader am
	rendertypeEyesShader at
	rendertypeGlintDirectShader aC
	rendertypeGlintShader aB
	rendertypeGlintTranslucentShader aA
	rendertypeItemEntityTranslucentCullShader ak
	rendertypeLeashShader av
	rendertypeLightningShader aJ
	rendertypeLinesShader aN
	rendertypeOutlineShader ax
	rendertypeSolidShader Z
	rendertypeTextIntensitySeeThroughShader aI
	rendertypeTextIntensityShader aG
	rendertypeTextSeeThroughShader aH
	rendertypeTextShader aF
	rendertypeTranslucentMovingBlockShader ad
	rendertypeTranslucentNoCrumblingShader ae
	rendertypeTranslucentShader ac
	rendertypeTripwireShader aK
	rendertypeWaterMaskShader aw
	resourceManager j
	shaders M
	tick o
	zoom A
	zoomX B
	zoomY C
	bobHurt (Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	bobView (Lcom/mojang/blaze3d/vertex/PoseStack;F)V b
	checkEntityPostEffect (Lnet/minecraft/world/entity/Entity;)V a
	currentEffect ()Lnet/minecraft/client/renderer/PostChain; g
	cycleEffect ()V e
	displayItemActivation (Lnet/minecraft/world/item/ItemStack;)V a
	getBlockShader ()Lnet/minecraft/client/renderer/ShaderInstance; u
	getDarkenWorldAmount (F)F b
	getDepthFar ()F h
	getFov (Lnet/minecraft/client/Camera;FZ)D a
	getMainCamera ()Lnet/minecraft/client/Camera; m
	getMapRenderer ()Lnet/minecraft/client/gui/MapRenderer; j
	getMinecraft ()Lnet/minecraft/client/Minecraft; k
	getNewEntityShader ()Lnet/minecraft/client/renderer/ShaderInstance; v
	getNightVisionScale (Lnet/minecraft/world/entity/LivingEntity;F)F a
	getParticleShader ()Lnet/minecraft/client/renderer/ShaderInstance; w
	getPositionColorLightmapShader ()Lnet/minecraft/client/renderer/ShaderInstance; x
	getPositionColorShader ()Lnet/minecraft/client/renderer/ShaderInstance; q
	getPositionColorTexLightmapShader ()Lnet/minecraft/client/renderer/ShaderInstance; y
	getPositionColorTexShader ()Lnet/minecraft/client/renderer/ShaderInstance; r
	getPositionShader ()Lnet/minecraft/client/renderer/ShaderInstance; p
	getPositionTexColorNormalShader ()Lnet/minecraft/client/renderer/ShaderInstance; z
	getPositionTexColorShader ()Lnet/minecraft/client/renderer/ShaderInstance; t
	getPositionTexLightmapColorShader ()Lnet/minecraft/client/renderer/ShaderInstance; A
	getPositionTexShader ()Lnet/minecraft/client/renderer/ShaderInstance; s
	getProjectionMatrix (D)Lcom/mojang/math/Matrix4f; a
	getRenderDistance ()F l
	getRendertypeArmorCutoutNoCullShader ()Lnet/minecraft/client/renderer/ShaderInstance; H
	getRendertypeArmorEntityGlintShader ()Lnet/minecraft/client/renderer/ShaderInstance; ab
	getRendertypeArmorGlintShader ()Lnet/minecraft/client/renderer/ShaderInstance; aa
	getRendertypeBeaconBeamShader ()Lnet/minecraft/client/renderer/ShaderInstance; Q
	getRendertypeCrumblingShader ()Lnet/minecraft/client/renderer/ShaderInstance; aq
	getRendertypeCutoutMippedShader ()Lnet/minecraft/client/renderer/ShaderInstance; C
	getRendertypeCutoutShader ()Lnet/minecraft/client/renderer/ShaderInstance; D
	getRendertypeEndGatewayShader ()Lnet/minecraft/client/renderer/ShaderInstance; ao
	getRendertypeEndPortalShader ()Lnet/minecraft/client/renderer/ShaderInstance; an
	getRendertypeEnergySwirlShader ()Lnet/minecraft/client/renderer/ShaderInstance; W
	getRendertypeEntityAlphaShader ()Lnet/minecraft/client/renderer/ShaderInstance; U
	getRendertypeEntityCutoutNoCullShader ()Lnet/minecraft/client/renderer/ShaderInstance; K
	getRendertypeEntityCutoutNoCullZOffsetShader ()Lnet/minecraft/client/renderer/ShaderInstance; L
	getRendertypeEntityCutoutShader ()Lnet/minecraft/client/renderer/ShaderInstance; J
	getRendertypeEntityDecalShader ()Lnet/minecraft/client/renderer/ShaderInstance; R
	getRendertypeEntityGlintDirectShader ()Lnet/minecraft/client/renderer/ShaderInstance; ag
	getRendertypeEntityGlintShader ()Lnet/minecraft/client/renderer/ShaderInstance; af
	getRendertypeEntityNoOutlineShader ()Lnet/minecraft/client/renderer/ShaderInstance; S
	getRendertypeEntityShadowShader ()Lnet/minecraft/client/renderer/ShaderInstance; T
	getRendertypeEntitySmoothCutoutShader ()Lnet/minecraft/client/renderer/ShaderInstance; P
	getRendertypeEntitySolidShader ()Lnet/minecraft/client/renderer/ShaderInstance; I
	getRendertypeEntityTranslucentCullShader ()Lnet/minecraft/client/renderer/ShaderInstance; N
	getRendertypeEntityTranslucentShader ()Lnet/minecraft/client/renderer/ShaderInstance; O
	getRendertypeEyesShader ()Lnet/minecraft/client/renderer/ShaderInstance; V
	getRendertypeGlintDirectShader ()Lnet/minecraft/client/renderer/ShaderInstance; ae
	getRendertypeGlintShader ()Lnet/minecraft/client/renderer/ShaderInstance; ad
	getRendertypeGlintTranslucentShader ()Lnet/minecraft/client/renderer/ShaderInstance; ac
	getRendertypeItemEntityTranslucentCullShader ()Lnet/minecraft/client/renderer/ShaderInstance; M
	getRendertypeLeashShader ()Lnet/minecraft/client/renderer/ShaderInstance; X
	getRendertypeLightningShader ()Lnet/minecraft/client/renderer/ShaderInstance; al
	getRendertypeLinesShader ()Lnet/minecraft/client/renderer/ShaderInstance; ap
	getRendertypeOutlineShader ()Lnet/minecraft/client/renderer/ShaderInstance; Z
	getRendertypeSolidShader ()Lnet/minecraft/client/renderer/ShaderInstance; B
	getRendertypeTextIntensitySeeThroughShader ()Lnet/minecraft/client/renderer/ShaderInstance; ak
	getRendertypeTextIntensityShader ()Lnet/minecraft/client/renderer/ShaderInstance; ai
	getRendertypeTextSeeThroughShader ()Lnet/minecraft/client/renderer/ShaderInstance; aj
	getRendertypeTextShader ()Lnet/minecraft/client/renderer/ShaderInstance; ah
	getRendertypeTranslucentMovingBlockShader ()Lnet/minecraft/client/renderer/ShaderInstance; F
	getRendertypeTranslucentNoCrumblingShader ()Lnet/minecraft/client/renderer/ShaderInstance; G
	getRendertypeTranslucentShader ()Lnet/minecraft/client/renderer/ShaderInstance; E
	getRendertypeTripwireShader ()Lnet/minecraft/client/renderer/ShaderInstance; am
	getRendertypeWaterMaskShader ()Lnet/minecraft/client/renderer/ShaderInstance; Y
	getShader (Ljava/lang/String;)Lnet/minecraft/client/renderer/ShaderInstance; a
	isPanoramicMode ()Z a
	lightTexture ()Lnet/minecraft/client/renderer/LightTexture; n
	loadEffect (Lnet/minecraft/resources/ResourceLocation;)V a
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	overlayTexture ()Lnet/minecraft/client/renderer/texture/OverlayTexture; o
	pick (F)V a
	preloadShader (Lnet/minecraft/server/packs/resources/ResourceProvider;Ljava/lang/String;Lcom/mojang/blaze3d/vertex/VertexFormat;)Lnet/minecraft/client/renderer/ShaderInstance; a
	preloadUiShader (Lnet/minecraft/server/packs/resources/ResourceProvider;)V a
	reloadShaders (Lnet/minecraft/server/packs/resources/ResourceManager;)V b
	render (FJZ)V a
	renderConfusionOverlay (F)V c
	renderItemActivationAnimation (IIF)V a
	renderItemInHand (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/Camera;F)V a
	renderLevel (FJLcom/mojang/blaze3d/vertex/PoseStack;)V a
	renderZoomed (FFF)V a
	resetData ()V i
	resetProjectionMatrix (Lcom/mojang/math/Matrix4f;)V a
	resize (II)V a
	setPanoramicMode (Z)V c
	setRenderBlockOutline (Z)V b
	setRenderHand (Z)V a
	shouldRenderBlockOutline ()Z au
	shutdownEffect ()V b
	shutdownShaders ()V ar
	takeAutoScreenshot ()V at
	tick ()V f
	tickFov ()V as
	togglePostEffect ()V d
net/minecraft/client/renderer/GpuWarnlistManager enb
	GPU_WARNLIST_LOCATION b
	LOGGER a
	showWarning d
	skipFabulous f
	warningDismissed e
	warnings c
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply (Lnet/minecraft/client/renderer/GpuWarnlistManager$Preparations;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	compilePatterns (Lcom/google/gson/JsonArray;Ljava/util/List;)V a
	dismissWarning ()V e
	dismissWarningAndSkipFabulous ()V f
	getAllWarnings ()Ljava/lang/String; m
	getRendererWarnings ()Ljava/lang/String; j
	getVendorWarnings ()Ljava/lang/String; l
	getVersionWarnings ()Ljava/lang/String; k
	hasWarnings ()Z a
	isShowingWarning ()Z g
	isSkippingFabulous ()Z h
	parseJson (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Lcom/google/gson/JsonObject; c
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/lang/Object; b
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Lnet/minecraft/client/renderer/GpuWarnlistManager$Preparations; a
	resetWarnings ()V i
	showWarning ()V d
	willShowWarning ()Z b
net/minecraft/client/renderer/GpuWarnlistManager$Preparations enb$a
	rendererPatterns a
	vendorPatterns c
	versionPatterns b
	apply ()Lcom/google/common/collect/ImmutableMap; a
	matchAny (Ljava/util/List;Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/client/renderer/ItemBlockRenderTypes enc
	TYPE_BY_BLOCK a
	TYPE_BY_FLUID b
	renderCutout c
	getChunkRenderType (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/client/renderer/RenderType; a
	getMovingBlockRenderType (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/client/renderer/RenderType; b
	getRenderLayer (Lnet/minecraft/world/level/material/FluidState;)Lnet/minecraft/client/renderer/RenderType; a
	getRenderType (Lnet/minecraft/world/item/ItemStack;Z)Lnet/minecraft/client/renderer/RenderType; a
	getRenderType (Lnet/minecraft/world/level/block/state/BlockState;Z)Lnet/minecraft/client/renderer/RenderType; a
	setFancy (Z)V a
net/minecraft/client/renderer/ItemInHandRenderer end
	ARM_HEIGHT_SCALE B
	ARM_POSTROTATION_X_OFFSET K
	ARM_POS_SCALE C
	ARM_POS_X D
	ARM_POS_Y E
	ARM_POS_Z F
	ARM_PREROTATION_X_OFFSET H
	ARM_PREROTATION_Y_OFFSET I
	ARM_PREROTATION_Z_OFFSET J
	ARM_PRESWING_ROT_Y G
	ARM_ROT_X L
	ARM_ROT_Y M
	ARM_ROT_Z N
	ARM_SWING_X_POS_SCALE w
	ARM_SWING_Y_POS_SCALE x
	ARM_SWING_Y_ROT_AMOUNT z
	ARM_SWING_Z_POS_SCALE y
	ARM_SWING_Z_ROT_AMOUNT A
	BOW_CHARGE_SHAKE_X_SCALE ap
	BOW_CHARGE_SHAKE_Y_SCALE aq
	BOW_CHARGE_SHAKE_Z_SCALE ar
	BOW_CHARGE_X_POS_SCALE am
	BOW_CHARGE_Y_POS_SCALE an
	BOW_CHARGE_Z_POS_SCALE ao
	BOW_CHARGE_Z_SCALE as
	BOW_MIN_SHAKE_CHARGE at
	EAT_EXTRA_JIGGLE_CUTOFF u
	EAT_EXTRA_JIGGLE_SCALE v
	EAT_JIGGLE_EXPONENT t
	EAT_JIGGLE_X_POS_SCALE q
	EAT_JIGGLE_X_ROT_AMOUNT n
	EAT_JIGGLE_Y_POS_SCALE r
	EAT_JIGGLE_Y_ROT_AMOUNT o
	EAT_JIGGLE_Z_POS_SCALE s
	EAT_JIGGLE_Z_ROT_AMOUNT p
	ITEM_HEIGHT_SCALE f
	ITEM_POS_X g
	ITEM_POS_Y h
	ITEM_POS_Z i
	ITEM_PRESWING_ROT_Y j
	ITEM_SWING_X_POS_SCALE c
	ITEM_SWING_X_ROT_AMOUNT k
	ITEM_SWING_Y_POS_SCALE d
	ITEM_SWING_Y_ROT_AMOUNT l
	ITEM_SWING_Z_POS_SCALE e
	ITEM_SWING_Z_ROT_AMOUNT m
	MAPHAND_X_ROT_AMOUNT X
	MAPHAND_Y_ROT_AMOUNT Y
	MAPHAND_Z_ROT_AMOUNT Z
	MAP_BACKGROUND a
	MAP_BACKGROUND_CHECKERBOARD b
	MAP_BORDER aj
	MAP_FINAL_SCALE ai
	MAP_GLOBAL_X_POS af
	MAP_GLOBAL_Y_POS ag
	MAP_GLOBAL_Z_POS ah
	MAP_HANDS_HEIGHT_SCALE T
	MAP_HANDS_POS_X Q
	MAP_HANDS_POS_Y R
	MAP_HANDS_POS_Z S
	MAP_HANDS_TILT_SCALE U
	MAP_HANDS_Z_ROT_AMOUNT W
	MAP_HAND_X_POS aa
	MAP_HAND_Y_POS ab
	MAP_HAND_Z_POS ac
	MAP_HEIGHT ak
	MAP_PLAYER_PITCH_SCALE V
	MAP_PRE_ROT_SCALE ae
	MAP_SWING_X_POS_SCALE O
	MAP_SWING_X_ROT_AMOUNT ad
	MAP_SWING_Z_POS_SCALE P
	MAP_WIDTH al
	entityRenderDispatcher aB
	itemRenderer aC
	mainHandHeight ax
	mainHandItem av
	minecraft au
	oMainHandHeight ay
	oOffHandHeight aA
	offHandHeight az
	offHandItem aw
	applyEatTransform (Lcom/mojang/blaze3d/vertex/PoseStack;FLnet/minecraft/world/entity/HumanoidArm;Lnet/minecraft/world/item/ItemStack;)V a
	applyItemArmAttackTransform (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/entity/HumanoidArm;F)V a
	applyItemArmTransform (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/entity/HumanoidArm;F)V b
	calculateMapTilt (F)F a
	evaluateWhichHandsToRender (Lnet/minecraft/client/player/LocalPlayer;)Lnet/minecraft/client/renderer/ItemInHandRenderer$HandRenderSelection; a
	isChargedCrossbow (Lnet/minecraft/world/item/ItemStack;)Z a
	itemUsed (Lnet/minecraft/world/InteractionHand;)V a
	renderArmWithItem (Lnet/minecraft/client/player/AbstractClientPlayer;FFLnet/minecraft/world/InteractionHand;FLnet/minecraft/world/item/ItemStack;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderHandsWithItems (FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource;Lnet/minecraft/client/player/LocalPlayer;I)V a
	renderItem (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/client/renderer/block/model/ItemTransforms$TransformType;ZLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderMap (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/item/ItemStack;)V a
	renderMapHand (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/HumanoidArm;)V a
	renderOneHandedMap (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IFLnet/minecraft/world/entity/HumanoidArm;FLnet/minecraft/world/item/ItemStack;)V a
	renderPlayerArm (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IFFLnet/minecraft/world/entity/HumanoidArm;)V a
	renderTwoHandedMap (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IFFF)V a
	selectionUsingItemWhileHoldingBowLike (Lnet/minecraft/client/player/LocalPlayer;)Lnet/minecraft/client/renderer/ItemInHandRenderer$HandRenderSelection; b
	tick ()V a
net/minecraft/client/renderer/ItemInHandRenderer$HandRenderSelection end$a
	$VALUES f
	RENDER_BOTH_HANDS a
	RENDER_MAIN_HAND_ONLY b
	RENDER_OFF_HAND_ONLY c
	renderMainHand d
	renderOffHand e
	$values ()[Lnet/minecraft/client/renderer/ItemInHandRenderer$HandRenderSelection; a
	onlyForHand (Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/client/renderer/ItemInHandRenderer$HandRenderSelection; a
net/minecraft/client/renderer/ItemModelShaper ene
	modelManager c
	shapes a
	shapesCache b
	getIndex (Lnet/minecraft/world/item/Item;)I b
	getItemModel (Lnet/minecraft/world/item/Item;)Lnet/minecraft/client/resources/model/BakedModel; a
	getItemModel (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/client/resources/model/BakedModel; b
	getModelManager ()Lnet/minecraft/client/resources/model/ModelManager; a
	getParticleIcon (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	getParticleIcon (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	rebuildCache ()V b
	register (Lnet/minecraft/world/item/Item;Lnet/minecraft/client/resources/model/ModelResourceLocation;)V a
net/minecraft/client/renderer/LevelRenderer enf
	CHUNK_SIZE a
	CLOUDS_LOCATION m
	DIRECTIONS d
	END_SKY_LOCATION n
	FORCEFIELD_LOCATION o
	LOGGER e
	MAX_CHUNKS_AREA c
	MAX_CHUNKS_WIDTH b
	MIN_FOG_DISTANCE g
	MOON_LOCATION k
	RAIN_DIAMETER i
	RAIN_LOCATION p
	RAIN_RADIUS h
	SKY_DISC_RADIUS f
	SNOW_LOCATION q
	SUN_LOCATION l
	TRANSPARENT_SORT_COUNT j
	blockEntityRenderDispatcher u
	captureFrustum ap
	capturedFrustum aq
	chunkRenderDispatcher ak
	chunksToCompile x
	cloudBuffer G
	cloudsTarget S
	culledEntities an
	cullingFrustum ao
	darkBuffer E
	destroyingBlocks J
	destructionProgress K
	entityEffect N
	entityRenderDispatcher t
	entityTarget M
	frameId ax
	frameTimes H
	frustumPoints ar
	frustumPos as
	generateClouds F
	globalBlockEntities z
	itemEntityTarget P
	lastCameraChunkX X
	lastCameraChunkY Y
	lastCameraChunkZ Z
	lastCameraX U
	lastCameraY V
	lastCameraZ W
	lastViewDistance al
	level w
	minecraft r
	needsUpdate aw
	particlesTarget Q
	playingRecords L
	prevCamRotX ad
	prevCamRotY ae
	prevCamX aa
	prevCamY ab
	prevCamZ ac
	prevCloudColor ai
	prevCloudX af
	prevCloudY ag
	prevCloudZ ah
	prevCloudsType aj
	rainSizeX az
	rainSizeZ aA
	rainSoundTime ay
	renderBuffers v
	renderChunks y
	renderInfoMap B
	renderedEntities am
	skyBuffer D
	starBuffer C
	textureManager s
	ticks I
	translucentTarget O
	transparencyChain T
	viewArea A
	weatherTarget R
	xTransparentOld at
	yTransparentOld au
	zTransparentOld av
	addChainedFilledBoxVertices (Lcom/mojang/blaze3d/vertex/BufferBuilder;DDDDDDFFFF)V a
	addFrustumQuad (Lcom/mojang/blaze3d/vertex/VertexConsumer;IIIIIII)V a
	addFrustumVertex (Lcom/mojang/blaze3d/vertex/VertexConsumer;I)V a
	addParticle (Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)V a
	addParticle (Lnet/minecraft/core/particles/ParticleOptions;ZDDDDDD)V a
	addParticle (Lnet/minecraft/core/particles/ParticleOptions;ZZDDDDDD)V a
	addParticleInternal (Lnet/minecraft/core/particles/ParticleOptions;ZDDDDDD)Lnet/minecraft/client/particle/Particle; b
	addParticleInternal (Lnet/minecraft/core/particles/ParticleOptions;ZZDDDDDD)Lnet/minecraft/client/particle/Particle; b
	allChanged ()V f
	blockChanged (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;I)V a
	buildClouds (Lcom/mojang/blaze3d/vertex/BufferBuilder;DDDLnet/minecraft/world/phys/Vec3;)V a
	buildSkyDisc (Lcom/mojang/blaze3d/vertex/BufferBuilder;F)V a
	calculateParticleLevel (Z)Lnet/minecraft/client/ParticleStatus; a
	captureFrustum ()V n
	captureFrustum (Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Matrix4f;DDDLnet/minecraft/client/renderer/culling/Frustum;)V a
	checkPoseStack (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	clear ()V q
	compileChunksUntil (J)V a
	countRenderedChunks ()I l
	createDarkSky ()V B
	createLightSky ()V C
	createStars ()V D
	deinitTransparency ()V A
	destroyBlockProgress (ILnet/minecraft/core/BlockPos;I)V b
	doEntityOutline ()V b
	drawStars (Lcom/mojang/blaze3d/vertex/BufferBuilder;)V a
	entityTarget ()Lcom/mojang/blaze3d/pipeline/RenderTarget; t
	getChunkRenderDispatcher ()Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher; i
	getChunkStatistics ()Ljava/lang/String; h
	getCloudsTarget ()Lcom/mojang/blaze3d/pipeline/RenderTarget; y
	getEntityStatistics ()Ljava/lang/String; m
	getItemEntityTarget ()Lcom/mojang/blaze3d/pipeline/RenderTarget; v
	getLastViewDistance ()D k
	getLightColor (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;)I a
	getLightColor (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)I a
	getParticlesTarget ()Lcom/mojang/blaze3d/pipeline/RenderTarget; w
	getRelativeFrom (Lnet/minecraft/core/BlockPos;Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk;Lnet/minecraft/core/Direction;)Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk; a
	getTotalChunks ()D j
	getTranslucentTarget ()Lcom/mojang/blaze3d/pipeline/RenderTarget; u
	getWeatherTarget ()Lcom/mojang/blaze3d/pipeline/RenderTarget; x
	globalLevelEvent (ILnet/minecraft/core/BlockPos;I)V a
	graphicsChanged ()V e
	hasRenderedAllChunks ()Z r
	initOutline ()V a
	initTransparency ()V z
	killFrustum ()V o
	levelEvent (Lnet/minecraft/world/entity/player/Player;ILnet/minecraft/core/BlockPos;I)V a
	needsUpdate ()V s
	notifyNearbyEntities (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)V a
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	playStreamingMusic (Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/core/BlockPos;)V a
	prepareCullFrustum (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/phys/Vec3;Lcom/mojang/math/Matrix4f;)V a
	removeProgress (Lnet/minecraft/server/level/BlockDestructionProgress;)V a
	renderChunkLayer (Lnet/minecraft/client/renderer/RenderType;Lcom/mojang/blaze3d/vertex/PoseStack;DDDLcom/mojang/math/Matrix4f;)V a
	renderClouds (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/math/Matrix4f;FDDD)V a
	renderDebug (Lnet/minecraft/client/Camera;)V b
	renderEndSky (Lcom/mojang/blaze3d/vertex/PoseStack;)V b
	renderEntity (Lnet/minecraft/world/entity/Entity;DDDFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;)V a
	renderHitOutline (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/entity/Entity;DDDLnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	renderLevel (Lcom/mojang/blaze3d/vertex/PoseStack;FJZLnet/minecraft/client/Camera;Lnet/minecraft/client/renderer/GameRenderer;Lnet/minecraft/client/renderer/LightTexture;Lcom/mojang/math/Matrix4f;)V a
	renderLineBox (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;DDDDDDFFFF)V a
	renderLineBox (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;DDDDDDFFFFFFF)V a
	renderLineBox (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/phys/AABB;FFFF)V a
	renderLineBox (Lcom/mojang/blaze3d/vertex/VertexConsumer;DDDDDDFFFF)V a
	renderShape (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/phys/shapes/VoxelShape;DDDFFFF)V b
	renderSky (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/math/Matrix4f;FLjava/lang/Runnable;)V a
	renderSnowAndRain (Lnet/minecraft/client/renderer/LightTexture;FDDD)V a
	renderVoxelShape (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/phys/shapes/VoxelShape;DDDFFFF)V a
	renderWorldBorder (Lnet/minecraft/client/Camera;)V c
	resetChunksToCompile ()V g
	resize (II)V a
	setBlockDirty (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)V a
	setBlockDirty (Lnet/minecraft/core/BlockPos;Z)V a
	setBlocksDirty (IIIIII)V a
	setLevel (Lnet/minecraft/client/multiplayer/ClientLevel;)V a
	setSectionDirty (III)V b
	setSectionDirty (IIIZ)V a
	setSectionDirtyWithNeighbors (III)V a
	setupRender (Lnet/minecraft/client/Camera;Lnet/minecraft/client/renderer/culling/Frustum;ZIZ)V a
	shouldShowEntityOutlines ()Z d
	tick ()V p
	tickRain (Lnet/minecraft/client/Camera;)V a
	updateGlobalBlockEntities (Ljava/util/Collection;Ljava/util/Collection;)V a
	updateRenderChunks (Lnet/minecraft/client/renderer/culling/Frustum;IZLnet/minecraft/world/phys/Vec3;Lnet/minecraft/core/BlockPos;Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk;ILnet/minecraft/core/BlockPos;)V a
net/minecraft/client/renderer/LevelRenderer$RenderChunkInfo enf$a
	chunk a
	directions c
	sourceDirections b
	step d
	addSourceDirection (Lnet/minecraft/core/Direction;)V b
	hasDirection (Lnet/minecraft/core/Direction;)Z a
	hasSourceDirection (I)Z a
	hasSourceDirections ()Z a
	setDirections (BLnet/minecraft/core/Direction;)V a
net/minecraft/client/renderer/LevelRenderer$RenderInfoMap enf$b
	blank b
	infos a
	clear ()V a
	get (Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk;)Lnet/minecraft/client/renderer/LevelRenderer$RenderChunkInfo; a
	put (Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk;Lnet/minecraft/client/renderer/LevelRenderer$RenderChunkInfo;)V a
net/minecraft/client/renderer/LevelRenderer$TransparencyShaderException enf$c
net/minecraft/client/renderer/LightTexture eng
	FULL_BLOCK c
	FULL_BRIGHT a
	FULL_SKY b
	blockLightRedFlicker h
	lightPixels e
	lightTexture d
	lightTextureLocation f
	minecraft j
	renderer i
	updateLightTexture g
	block (I)I a
	getBrightness (Lnet/minecraft/world/level/Level;I)F a
	notGamma (F)F b
	pack (II)I a
	sky (I)I b
	tick ()V a
	turnOffLightLayer ()V b
	turnOnLightLayer ()V c
	updateLightTexture (F)V a
net/minecraft/client/renderer/MultiBufferSource enh
	immediate (Lcom/mojang/blaze3d/vertex/BufferBuilder;)Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource; a
	immediateWithBuffers (Ljava/util/Map;Lcom/mojang/blaze3d/vertex/BufferBuilder;)Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource; a
net/minecraft/client/renderer/MultiBufferSource$BufferSource enh$a
	builder a
	fixedBuffers b
	lastState c
	startedBuffers d
	endBatch ()V b
	endBatch (Lnet/minecraft/client/renderer/RenderType;)V a
	endLastBatch ()V a
	getBuilderRaw (Lnet/minecraft/client/renderer/RenderType;)Lcom/mojang/blaze3d/vertex/BufferBuilder; b
net/minecraft/client/renderer/OutlineBufferSource eni
	bufferSource a
	outlineBufferSource b
	teamA f
	teamB e
	teamG d
	teamR c
	endOutlineBatch ()V a
	setColor (IIII)V a
net/minecraft/client/renderer/OutlineBufferSource$EntityOutlineGenerator eni$a
	delegate g
	u k
	v l
	x h
	y i
	z j
	color (IIII)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	defaultColor (IIII)V b
	endVertex ()V c
	normal (FFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	overlayCoords (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	unsetDefaultColor ()V j
	uv (FF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	uv2 (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	vertex (DDD)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	vertex (FFFFFFFFFIIFFF)V a
net/minecraft/client/renderer/PanoramaRenderer enj
	cubeMap b
	minecraft a
	time c
	render (FF)V a
net/minecraft/client/renderer/PostChain enk
	MAIN_RENDER_TARGET a
	customRenderTargets f
	fullSizedTargets g
	lastStamp l
	name d
	passes e
	resourceManager c
	screenHeight j
	screenTarget b
	screenWidth i
	shaderOrthoMatrix h
	time k
	addPass (Ljava/lang/String;Lcom/mojang/blaze3d/pipeline/RenderTarget;Lcom/mojang/blaze3d/pipeline/RenderTarget;)Lnet/minecraft/client/renderer/PostPass; a
	addTempTarget (Ljava/lang/String;II)V a
	getName ()Ljava/lang/String; a
	getRenderTarget (Ljava/lang/String;)Lcom/mojang/blaze3d/pipeline/RenderTarget; b
	getTempTarget (Ljava/lang/String;)Lcom/mojang/blaze3d/pipeline/RenderTarget; a
	load (Lnet/minecraft/client/renderer/texture/TextureManager;Lnet/minecraft/resources/ResourceLocation;)V a
	parsePassNode (Lnet/minecraft/client/renderer/texture/TextureManager;Lcom/google/gson/JsonElement;)V a
	parseTargetNode (Lcom/google/gson/JsonElement;)V a
	parseUniformNode (Lcom/google/gson/JsonElement;)V b
	process (F)V a
	resize (II)V a
	updateOrthoMatrix ()V b
net/minecraft/client/renderer/PostPass enl
	auxAssets d
	auxHeights g
	auxNames e
	auxWidths f
	effect c
	inTarget a
	outTarget b
	shaderOrthoMatrix h
	addAuxAsset (Ljava/lang/String;Ljava/util/function/IntSupplier;II)V a
	getEffect ()Lnet/minecraft/client/renderer/EffectInstance; b
	getName ()Ljava/lang/String; a
	process (F)V a
	setOrthoMatrix (Lcom/mojang/math/Matrix4f;)V a
net/minecraft/client/renderer/Rect2i enm
	height d
	width c
	xPos a
	yPos b
	contains (II)Z b
	getHeight ()I d
	getWidth ()I c
	getX ()I a
	getY ()I b
	intersect (Lnet/minecraft/client/renderer/Rect2i;)Lnet/minecraft/client/renderer/Rect2i; a
	setHeight (I)V d
	setPosition (II)V a
	setWidth (I)V c
	setX (I)V a
	setY (I)V b
net/minecraft/client/renderer/RenderBuffers enn
	bufferSource c
	crumblingBufferSource d
	fixedBufferPack a
	fixedBuffers b
	outlineBufferSource e
	bufferSource ()Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource; b
	crumblingBufferSource ()Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource; c
	fixedBufferPack ()Lnet/minecraft/client/renderer/ChunkBufferBuilderPack; a
	outlineBufferSource ()Lnet/minecraft/client/renderer/OutlineBufferSource; d
	put (Lit/unimi/dsi/fastutil/objects/Object2ObjectLinkedOpenHashMap;Lnet/minecraft/client/renderer/RenderType;)V a
net/minecraft/client/renderer/RenderStateShard eno
	ADDITIVE_TRANSPARENCY c
	BLOCK_SHADER i
	BLOCK_SHEET ah
	BLOCK_SHEET_MIPPED ag
	CLOUDS_TARGET aG
	COLOR_DEPTH_WRITE av
	COLOR_WRITE aw
	CRUMBLING_TRANSPARENCY f
	CULL aq
	DEFAULT_LINE aI
	DEFAULT_TEXTURING aj
	DEPTH_WRITE ax
	ENTITY_GLINT_TEXTURING al
	EQUAL_DEPTH_TEST at
	GLINT_TEXTURING ak
	GLINT_TRANSPARENCY e
	ITEM_ENTITY_TARGET aH
	LEQUAL_DEPTH_TEST au
	LIGHTMAP am
	LIGHTNING_TRANSPARENCY d
	MAIN_TARGET aB
	NEW_ENTITY_SHADER j
	NO_CULL ar
	NO_DEPTH_TEST as
	NO_LAYERING ay
	NO_LIGHTMAP an
	NO_OVERLAY ap
	NO_SHADER h
	NO_TEXTURE ai
	NO_TRANSPARENCY b
	OUTLINE_TARGET aC
	OVERLAY ao
	PARTICLES_TARGET aE
	POLYGON_OFFSET_LAYERING az
	POSITION_COLOR_LIGHTMAP_SHADER k
	POSITION_COLOR_SHADER p
	POSITION_COLOR_TEX_LIGHTMAP_SHADER o
	POSITION_COLOR_TEX_SHADER m
	POSITION_SHADER l
	POSITION_TEX_SHADER n
	RENDERTYPE_ARMOR_CUTOUT_NO_CULL_SHADER w
	RENDERTYPE_ARMOR_ENTITY_GLINT_SHADER Q
	RENDERTYPE_ARMOR_GLINT_SHADER P
	RENDERTYPE_BEACON_BEAM_SHADER F
	RENDERTYPE_CRUMBLING_SHADER W
	RENDERTYPE_CUTOUT_MIPPED_SHADER r
	RENDERTYPE_CUTOUT_SHADER s
	RENDERTYPE_END_GATEWAY_SHADER ae
	RENDERTYPE_END_PORTAL_SHADER ad
	RENDERTYPE_ENERGY_SWIRL_SHADER L
	RENDERTYPE_ENTITY_ALPHA_SHADER J
	RENDERTYPE_ENTITY_CUTOUT_NO_CULL_SHADER z
	RENDERTYPE_ENTITY_CUTOUT_NO_CULL_Z_OFFSET_SHADER A
	RENDERTYPE_ENTITY_CUTOUT_SHADER y
	RENDERTYPE_ENTITY_DECAL_SHADER G
	RENDERTYPE_ENTITY_GLINT_DIRECT_SHADER V
	RENDERTYPE_ENTITY_GLINT_SHADER U
	RENDERTYPE_ENTITY_NO_OUTLINE_SHADER H
	RENDERTYPE_ENTITY_SHADOW_SHADER I
	RENDERTYPE_ENTITY_SMOOTH_CUTOUT_SHADER E
	RENDERTYPE_ENTITY_SOLID_SHADER x
	RENDERTYPE_ENTITY_TRANSLUCENT_CULL_SHADER C
	RENDERTYPE_ENTITY_TRANSLUCENT_SHADER D
	RENDERTYPE_EYES_SHADER K
	RENDERTYPE_GLINT_DIRECT_SHADER T
	RENDERTYPE_GLINT_SHADER S
	RENDERTYPE_GLINT_TRANSLUCENT_SHADER R
	RENDERTYPE_ITEM_ENTITY_TRANSLUCENT_CULL_SHADER B
	RENDERTYPE_LEASH_SHADER M
	RENDERTYPE_LIGHTNING_SHADER ab
	RENDERTYPE_LINES_SHADER af
	RENDERTYPE_OUTLINE_SHADER O
	RENDERTYPE_SOLID_SHADER q
	RENDERTYPE_TEXT_INTENSITY_SEE_THROUGH_SHADER aa
	RENDERTYPE_TEXT_INTENSITY_SHADER Y
	RENDERTYPE_TEXT_SEE_THROUGH_SHADER Z
	RENDERTYPE_TEXT_SHADER X
	RENDERTYPE_TRANSLUCENT_MOVING_BLOCK_SHADER u
	RENDERTYPE_TRANSLUCENT_NO_CRUMBLING_SHADER v
	RENDERTYPE_TRANSLUCENT_SHADER t
	RENDERTYPE_TRIPWIRE_SHADER ac
	RENDERTYPE_WATER_MASK_SHADER N
	TRANSLUCENT_TARGET aD
	TRANSLUCENT_TRANSPARENCY g
	VIEW_OFFSET_Z_LAYERING aA
	VIEW_SCALE_Z_EPSILON aJ
	WEATHER_TARGET aF
	clearState aL
	name a
	setupState aK
	clearRenderState ()V b
	setupGlintTexturing (F)V a
	setupRenderState ()V a
net/minecraft/client/renderer/RenderStateShard$BooleanStateShard eno$a
	enabled aJ
net/minecraft/client/renderer/RenderStateShard$CullStateShard eno$b
net/minecraft/client/renderer/RenderStateShard$DepthTestStateShard eno$c
	functionName aJ
net/minecraft/client/renderer/RenderStateShard$EmptyTextureStateShard eno$d
	cutoutTexture ()Ljava/util/Optional; c
net/minecraft/client/renderer/RenderStateShard$LayeringStateShard eno$e
net/minecraft/client/renderer/RenderStateShard$LightmapStateShard eno$f
net/minecraft/client/renderer/RenderStateShard$LineStateShard eno$g
	width aJ
net/minecraft/client/renderer/RenderStateShard$MultiTextureStateShard eno$h
	cutoutTexture aJ
	builder ()Lnet/minecraft/client/renderer/RenderStateShard$MultiTextureStateShard$Builder; d
	cutoutTexture ()Ljava/util/Optional; c
net/minecraft/client/renderer/RenderStateShard$MultiTextureStateShard$Builder eno$h$a
	builder a
	add (Lnet/minecraft/resources/ResourceLocation;ZZ)Lnet/minecraft/client/renderer/RenderStateShard$MultiTextureStateShard$Builder; a
	build ()Lnet/minecraft/client/renderer/RenderStateShard$MultiTextureStateShard; a
net/minecraft/client/renderer/RenderStateShard$OffsetTexturingStateShard eno$i
net/minecraft/client/renderer/RenderStateShard$OutputStateShard eno$j
net/minecraft/client/renderer/RenderStateShard$OverlayStateShard eno$k
net/minecraft/client/renderer/RenderStateShard$ShaderStateShard eno$l
	shader aJ
net/minecraft/client/renderer/RenderStateShard$TextureStateShard eno$m
	blur aK
	mipmap aL
	texture aJ
	cutoutTexture ()Ljava/util/Optional; c
net/minecraft/client/renderer/RenderStateShard$TexturingStateShard eno$n
net/minecraft/client/renderer/RenderStateShard$TransparencyStateShard eno$o
net/minecraft/client/renderer/RenderStateShard$WriteMaskStateShard eno$p
	writeColor aJ
	writeDepth aK
net/minecraft/client/renderer/RenderType enp
	ARMOR_CUTOUT_NO_CULL aX
	ARMOR_ENTITY_GLINT bp
	ARMOR_GLINT bo
	BEACON_BEAM bg
	BIG_BUFFER_SIZE aJ
	BYTES_IN_INT aP
	CRUMBLING bv
	CUTOUT aT
	CUTOUT_MIPPED aS
	DRAGON_EXPLOSION_ALPHA bk
	END_GATEWAY bF
	END_PORTAL bE
	ENTITY_CUTOUT aZ
	ENTITY_CUTOUT_NO_CULL ba
	ENTITY_CUTOUT_NO_CULL_Z_OFFSET bb
	ENTITY_DECAL bh
	ENTITY_GLINT bt
	ENTITY_GLINT_DIRECT bu
	ENTITY_NO_OUTLINE bi
	ENTITY_SHADOW bj
	ENTITY_SMOOTH_CUTOUT bf
	ENTITY_SOLID aY
	ENTITY_TRANSLUCENT be
	ENTITY_TRANSLUCENT_CULL bd
	EYES bl
	GLINT br
	GLINT_DIRECT bs
	GLINT_TRANSLUCENT bq
	ITEM_ENTITY_TRANSLUCENT_CULL bc
	LEASH bm
	LIGHTNING bC
	LINES aN
	LINE_STRIP aO
	MEDIUM_BUFFER_SIZE aK
	MEGABYTE aQ
	SMALL_BUFFER_SIZE aL
	SOLID aR
	TEXT bw
	TEXT_INTENSITY bx
	TEXT_INTENSITY_POLYGON_OFFSET bz
	TEXT_INTENSITY_SEE_THROUGH bB
	TEXT_POLYGON_OFFSET by
	TEXT_SEE_THROUGH bA
	TRANSIENT_BUFFER_SIZE aM
	TRANSLUCENT aU
	TRANSLUCENT_MOVING_BLOCK aV
	TRANSLUCENT_NO_CRUMBLING aW
	TRIPWIRE bD
	WATER_MASK bn
	affectsCrumbling bJ
	asOptional bL
	bufferSize bI
	format bG
	mode bH
	sortOnUpload bK
	affectsCrumbling ()Z D
	armorCutoutNoCull (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; a
	armorEntityGlint ()Lnet/minecraft/client/renderer/RenderType; l
	armorGlint ()Lnet/minecraft/client/renderer/RenderType; k
	asOptional ()Ljava/util/Optional; E
	beaconBeam (Lnet/minecraft/resources/ResourceLocation;Z)Lnet/minecraft/client/renderer/RenderType; d
	bufferSize ()I y
	chunkBufferLayers ()Ljava/util/List; x
	create (Ljava/lang/String;Lcom/mojang/blaze3d/vertex/VertexFormat;Lcom/mojang/blaze3d/vertex/VertexFormat$Mode;ILnet/minecraft/client/renderer/RenderType$CompositeState;)Lnet/minecraft/client/renderer/RenderType$CompositeRenderType; a
	create (Ljava/lang/String;Lcom/mojang/blaze3d/vertex/VertexFormat;Lcom/mojang/blaze3d/vertex/VertexFormat$Mode;IZZLnet/minecraft/client/renderer/RenderType$CompositeState;)Lnet/minecraft/client/renderer/RenderType$CompositeRenderType; a
	crumbling (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; p
	cutout ()Lnet/minecraft/client/renderer/RenderType; e
	cutoutMipped ()Lnet/minecraft/client/renderer/RenderType; d
	dragonExplosionAlpha (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; m
	end (Lcom/mojang/blaze3d/vertex/BufferBuilder;III)V a
	endGateway ()Lnet/minecraft/client/renderer/RenderType; u
	endPortal ()Lnet/minecraft/client/renderer/RenderType; t
	energySwirl (Lnet/minecraft/resources/ResourceLocation;FF)Lnet/minecraft/client/renderer/RenderType; a
	entityCutout (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; c
	entityCutoutNoCull (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; d
	entityCutoutNoCull (Lnet/minecraft/resources/ResourceLocation;Z)Lnet/minecraft/client/renderer/RenderType; a
	entityCutoutNoCullZOffset (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; e
	entityCutoutNoCullZOffset (Lnet/minecraft/resources/ResourceLocation;Z)Lnet/minecraft/client/renderer/RenderType; b
	entityDecal (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; j
	entityGlint ()Lnet/minecraft/client/renderer/RenderType; p
	entityGlintDirect ()Lnet/minecraft/client/renderer/RenderType; q
	entityNoOutline (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; k
	entityShadow (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; l
	entitySmoothCutout (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; i
	entitySolid (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; b
	entityTranslucent (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; h
	entityTranslucent (Lnet/minecraft/resources/ResourceLocation;Z)Lnet/minecraft/client/renderer/RenderType; c
	entityTranslucentCull (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; g
	eyes (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; n
	format ()Lcom/mojang/blaze3d/vertex/VertexFormat; z
	glint ()Lnet/minecraft/client/renderer/RenderType; n
	glintDirect ()Lnet/minecraft/client/renderer/RenderType; o
	glintTranslucent ()Lnet/minecraft/client/renderer/RenderType; m
	isOutline ()Z C
	itemEntityTranslucentCull (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; f
	leash ()Lnet/minecraft/client/renderer/RenderType; i
	lightning ()Lnet/minecraft/client/renderer/RenderType; r
	lineStrip ()Lnet/minecraft/client/renderer/RenderType; w
	lines ()Lnet/minecraft/client/renderer/RenderType; v
	mode ()Lcom/mojang/blaze3d/vertex/VertexFormat$Mode; A
	outline ()Ljava/util/Optional; B
	outline (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; o
	solid ()Lnet/minecraft/client/renderer/RenderType; c
	text (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; q
	textIntensity (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; r
	textIntensityPolygonOffset (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; t
	textIntensitySeeThrough (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; v
	textPolygonOffset (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; s
	textSeeThrough (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; u
	translucent ()Lnet/minecraft/client/renderer/RenderType; f
	translucentMovingBlock ()Lnet/minecraft/client/renderer/RenderType; g
	translucentMovingBlockState ()Lnet/minecraft/client/renderer/RenderType$CompositeState; F
	translucentNoCrumbling ()Lnet/minecraft/client/renderer/RenderType; h
	translucentState (Lnet/minecraft/client/renderer/RenderStateShard$ShaderStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState; a
	tripwire ()Lnet/minecraft/client/renderer/RenderType; s
	tripwireState ()Lnet/minecraft/client/renderer/RenderType$CompositeState; G
	waterMask ()Lnet/minecraft/client/renderer/RenderType; j
net/minecraft/client/renderer/RenderType$CompositeRenderType enp$a
	OUTLINE aP
	isOutline aS
	outline aR
	state aQ
	isOutline ()Z C
	outline ()Ljava/util/Optional; B
	state ()Lnet/minecraft/client/renderer/RenderType$CompositeState; F
net/minecraft/client/renderer/RenderType$CompositeState enp$b
	cullState e
	depthTestState d
	layeringState h
	lightmapState f
	lineState l
	outlineProperty m
	outputState i
	overlayState g
	shaderState b
	states n
	textureState a
	texturingState j
	transparencyState c
	writeMaskState k
	builder ()Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
net/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder enp$b$a
	cullState e
	depthTestState d
	layeringState h
	lightmapState f
	lineState l
	outputState i
	overlayState g
	shaderState b
	textureState a
	texturingState j
	transparencyState c
	writeMaskState k
	createCompositeState (Lnet/minecraft/client/renderer/RenderType$OutlineProperty;)Lnet/minecraft/client/renderer/RenderType$CompositeState; a
	createCompositeState (Z)Lnet/minecraft/client/renderer/RenderType$CompositeState; a
	setCullState (Lnet/minecraft/client/renderer/RenderStateShard$CullStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setDepthTestState (Lnet/minecraft/client/renderer/RenderStateShard$DepthTestStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setLayeringState (Lnet/minecraft/client/renderer/RenderStateShard$LayeringStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setLightmapState (Lnet/minecraft/client/renderer/RenderStateShard$LightmapStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setLineState (Lnet/minecraft/client/renderer/RenderStateShard$LineStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setOutputState (Lnet/minecraft/client/renderer/RenderStateShard$OutputStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setOverlayState (Lnet/minecraft/client/renderer/RenderStateShard$OverlayStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setShaderState (Lnet/minecraft/client/renderer/RenderStateShard$ShaderStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setTextureState (Lnet/minecraft/client/renderer/RenderStateShard$EmptyTextureStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setTexturingState (Lnet/minecraft/client/renderer/RenderStateShard$TexturingStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setTransparencyState (Lnet/minecraft/client/renderer/RenderStateShard$TransparencyStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setWriteMaskState (Lnet/minecraft/client/renderer/RenderStateShard$WriteMaskStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
net/minecraft/client/renderer/RenderType$OutlineProperty enp$c
	$VALUES e
	AFFECTS_OUTLINE c
	IS_OUTLINE b
	NONE a
	name d
	$values ()[Lnet/minecraft/client/renderer/RenderType$OutlineProperty; a
net/minecraft/client/renderer/RunningTrimmedMean enq
	count b
	cursor c
	values a
	registerValueAndGetMean (J)J a
net/minecraft/client/renderer/ScreenEffectRenderer enr
	UNDERWATER_LOCATION a
	getViewBlockingState (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/level/block/state/BlockState; a
	renderFire (Lnet/minecraft/client/Minecraft;Lcom/mojang/blaze3d/vertex/PoseStack;)V c
	renderScreenEffect (Lnet/minecraft/client/Minecraft;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	renderTex (Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	renderWater (Lnet/minecraft/client/Minecraft;Lcom/mojang/blaze3d/vertex/PoseStack;)V b
net/minecraft/client/renderer/ShaderInstance ens
	ALWAYS_REAPPLY r
	CHUNK_OFFSET m
	COLOR_MODULATOR e
	DUMMY_UNIFORM q
	FOG_COLOR j
	FOG_END i
	FOG_START h
	GAME_TIME l
	LIGHT0_DIRECTION f
	LIGHT1_DIRECTION g
	LINE_WIDTH k
	LOGGER p
	MODEL_VIEW_MATRIX a
	PROJECTION_MATRIX b
	SCREEN_SIZE d
	SHADER_INCLUDE_PATH o
	SHADER_PATH n
	TEXTURE_MATRIX c
	attributeNames F
	attributes E
	blend D
	dirty C
	fragmentProgram H
	lastAppliedShader s
	lastProgramId t
	name B
	programId A
	samplerLocations w
	samplerMap u
	samplerNames v
	uniformLocations y
	uniformMap z
	uniforms x
	vertexFormat I
	vertexProgram G
	apply ()V g
	attachToProgram ()V e
	clear ()V f
	getFragmentProgram ()Lcom/mojang/blaze3d/shaders/Program; d
	getId ()I a
	getName ()Ljava/lang/String; i
	getOrCreate (Lnet/minecraft/server/packs/resources/ResourceProvider;Lcom/mojang/blaze3d/shaders/Program$Type;Ljava/lang/String;)Lcom/mojang/blaze3d/shaders/Program; a
	getUniform (Ljava/lang/String;)Lcom/mojang/blaze3d/shaders/Uniform; a
	getVertexFormat ()Lcom/mojang/blaze3d/vertex/VertexFormat; h
	getVertexProgram ()Lcom/mojang/blaze3d/shaders/Program; c
	markDirty ()V b
	parseBlendNode (Lcom/google/gson/JsonObject;)Lcom/mojang/blaze3d/shaders/BlendMode; a
	parseSamplerNode (Lcom/google/gson/JsonElement;)V a
	parseUniformNode (Lcom/google/gson/JsonElement;)V b
	safeGetUniform (Ljava/lang/String;)Lcom/mojang/blaze3d/shaders/AbstractUniform; b
	setSampler (Ljava/lang/String;Ljava/lang/Object;)V a
	updateLocations ()V j
net/minecraft/client/renderer/Sheets ent
	BANNER_MATERIALS j
	BANNER_SHEET c
	BANNER_SHEET_TYPE y
	BED_SHEET b
	BED_SHEET_TYPE x
	BED_TEXTURES l
	CHEST_LOCATION s
	CHEST_LOCATION_LEFT t
	CHEST_LOCATION_RIGHT u
	CHEST_SHEET f
	CHEST_SHEET_TYPE B
	CHEST_TRAP_LOCATION m
	CHEST_TRAP_LOCATION_LEFT n
	CHEST_TRAP_LOCATION_RIGHT o
	CHEST_XMAS_LOCATION p
	CHEST_XMAS_LOCATION_LEFT q
	CHEST_XMAS_LOCATION_RIGHT r
	CUTOUT_BLOCK_SHEET D
	DEFAULT_SHULKER_TEXTURE_LOCATION g
	ENDER_CHEST_LOCATION v
	SHIELD_MATERIALS k
	SHIELD_SHEET d
	SHIELD_SHEET_TYPE z
	SHULKER_BOX_SHEET_TYPE w
	SHULKER_SHEET a
	SHULKER_TEXTURE_LOCATION h
	SIGN_MATERIALS i
	SIGN_SHEET e
	SIGN_SHEET_TYPE A
	SOLID_BLOCK_SHEET C
	TRANSLUCENT_CULL_BLOCK_SHEET F
	TRANSLUCENT_ITEM_CULL_BLOCK_SHEET E
	bannerSheet ()Lnet/minecraft/client/renderer/RenderType; a
	bedSheet ()Lnet/minecraft/client/renderer/RenderType; c
	chestMaterial (Ljava/lang/String;)Lnet/minecraft/client/resources/model/Material; a
	chestSheet ()Lnet/minecraft/client/renderer/RenderType; f
	chooseMaterial (Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/level/block/state/properties/ChestType;Z)Lnet/minecraft/client/resources/model/Material; a
	chooseMaterial (Lnet/minecraft/world/level/block/state/properties/ChestType;Lnet/minecraft/client/resources/model/Material;Lnet/minecraft/client/resources/model/Material;Lnet/minecraft/client/resources/model/Material;)Lnet/minecraft/client/resources/model/Material; a
	createBannerMaterial (Lnet/minecraft/world/level/block/entity/BannerPattern;)Lnet/minecraft/client/resources/model/Material; c
	createShieldMaterial (Lnet/minecraft/world/level/block/entity/BannerPattern;)Lnet/minecraft/client/resources/model/Material; d
	createSignMaterial (Lnet/minecraft/world/level/block/state/properties/WoodType;)Lnet/minecraft/client/resources/model/Material; b
	cutoutBlockSheet ()Lnet/minecraft/client/renderer/RenderType; h
	getAllMaterials (Ljava/util/function/Consumer;)V a
	getBannerMaterial (Lnet/minecraft/world/level/block/entity/BannerPattern;)Lnet/minecraft/client/resources/model/Material; a
	getShieldMaterial (Lnet/minecraft/world/level/block/entity/BannerPattern;)Lnet/minecraft/client/resources/model/Material; b
	getSignMaterial (Lnet/minecraft/world/level/block/state/properties/WoodType;)Lnet/minecraft/client/resources/model/Material; a
	shieldSheet ()Lnet/minecraft/client/renderer/RenderType; b
	shulkerBoxSheet ()Lnet/minecraft/client/renderer/RenderType; d
	signSheet ()Lnet/minecraft/client/renderer/RenderType; e
	solidBlockSheet ()Lnet/minecraft/client/renderer/RenderType; g
	translucentCullBlockSheet ()Lnet/minecraft/client/renderer/RenderType; j
	translucentItemSheet ()Lnet/minecraft/client/renderer/RenderType; i
net/minecraft/client/renderer/SpriteCoordinateExpander enu
	delegate a
	sprite b
	color (IIII)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	defaultColor (IIII)V b
	endVertex ()V c
	normal (FFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	overlayCoords (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	unsetDefaultColor ()V j
	uv (FF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	uv2 (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	vertex (DDD)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	vertex (FFFFFFFFFIIFFF)V a
net/minecraft/client/renderer/ViewArea env
	chunkGridSizeX d
	chunkGridSizeY c
	chunkGridSizeZ e
	chunks f
	level b
	levelRenderer a
	createChunks (Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher;)V a
	getChunkIndex (III)I a
	getRenderChunkAt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk; a
	releaseAllBuffers ()V a
	repositionCamera (DD)V a
	setDirty (IIIZ)V a
	setViewDistance (I)V a
net/minecraft/client/renderer/VirtualScreen enw
	minecraft a
	screenManager b
	newWindow (Lcom/mojang/blaze3d/platform/DisplayData;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/blaze3d/platform/Window; a
net/minecraft/client/renderer/block/BlockModelShaper enx
	modelByStateCache a
	modelManager b
	getBlockModel (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/client/resources/model/BakedModel; b
	getModelManager ()Lnet/minecraft/client/resources/model/ModelManager; a
	getParticleIcon (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	getValue (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)Ljava/lang/String; a
	rebuildCache ()V b
	statePropertiesToString (Ljava/util/Map;)Ljava/lang/String; a
	stateToModelLocation (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/client/resources/model/ModelResourceLocation; a
	stateToModelLocation (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/client/resources/model/ModelResourceLocation; c
net/minecraft/client/renderer/block/BlockRenderDispatcher eny
	blockColors f
	blockEntityRenderer c
	blockModelShaper a
	liquidBlockRenderer d
	modelRenderer b
	random e
	getBlockModel (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/client/resources/model/BakedModel; a
	getBlockModelShaper ()Lnet/minecraft/client/renderer/block/BlockModelShaper; a
	getModelRenderer ()Lnet/minecraft/client/renderer/block/ModelBlockRenderer; b
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	renderBatched (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/BlockAndTintGetter;Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;ZLjava/util/Random;)Z a
	renderBreakingTexture (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/BlockAndTintGetter;Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;)V a
	renderLiquid (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/BlockAndTintGetter;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/level/material/FluidState;)Z a
	renderSingleBlock (Lnet/minecraft/world/level/block/state/BlockState;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/block/LiquidBlockRenderer enz
	MAX_FLUID_HEIGHT a
	lavaIcons b
	waterIcons c
	waterOverlay d
	getLightColor (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;)I a
	getWaterHeight (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;)F a
	isFaceOccludedByNeighbor (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;F)Z a
	isFaceOccludedBySelf (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	isFaceOccludedByState (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/Direction;FLnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isNeighborSameFluid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/material/FluidState;)Z a
	setupSprites ()V a
	shouldRenderFace (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	tesselate (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/level/material/FluidState;)Z a
	vertex (Lcom/mojang/blaze3d/vertex/VertexConsumer;DDDFFFFFI)V a
net/minecraft/client/renderer/block/ModelBlockRenderer eoa
	CACHE f
	CACHE_SIZE e
	DIRECTIONS c
	FACE_CUBIC a
	FACE_PARTIAL b
	blockColors d
	calculateShape (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;[ILnet/minecraft/core/Direction;[FLjava/util/BitSet;)V a
	clearCache ()V b
	enableCaching ()V a
	putQuadData (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lnet/minecraft/client/renderer/block/model/BakedQuad;FFFFIIIII)V a
	renderModel (Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/client/resources/model/BakedModel;FFFII)V a
	renderModelFaceAO (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Ljava/util/List;[FLjava/util/BitSet;Lnet/minecraft/client/renderer/block/ModelBlockRenderer$AmbientOcclusionFace;I)V a
	renderModelFaceFlat (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;IIZLcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Ljava/util/List;Ljava/util/BitSet;)V a
	renderQuadList (Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFLjava/util/List;II)V a
	tesselateBlock (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/client/resources/model/BakedModel;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;ZLjava/util/Random;JI)Z a
	tesselateWithAO (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/client/resources/model/BakedModel;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;ZLjava/util/Random;JI)Z b
	tesselateWithoutAO (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/client/resources/model/BakedModel;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;ZLjava/util/Random;JI)Z c
net/minecraft/client/renderer/block/ModelBlockRenderer$AdjacencyInfo eoa$a
	$VALUES n
	BY_FACING m
	DOWN a
	EAST f
	NORTH c
	SOUTH d
	UP b
	WEST e
	corners g
	doNonCubicWeight h
	vert0Weights i
	vert1Weights j
	vert2Weights k
	vert3Weights l
	$values ()[Lnet/minecraft/client/renderer/block/ModelBlockRenderer$AdjacencyInfo; a
	fromFacing (Lnet/minecraft/core/Direction;)Lnet/minecraft/client/renderer/block/ModelBlockRenderer$AdjacencyInfo; a
net/minecraft/client/renderer/block/ModelBlockRenderer$AmbientOcclusionFace eoa$b
	brightness b
	lightmap c
	blend (IIII)I a
	blend (IIIIFFFF)I a
	calculate (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;[FLjava/util/BitSet;Z)V a
net/minecraft/client/renderer/block/ModelBlockRenderer$AmbientVertexRemap eoa$c
	$VALUES l
	BY_FACING k
	DOWN a
	EAST f
	NORTH c
	SOUTH d
	UP b
	WEST e
	vert0 g
	vert1 h
	vert2 i
	vert3 j
	$values ()[Lnet/minecraft/client/renderer/block/ModelBlockRenderer$AmbientVertexRemap; a
	fromFacing (Lnet/minecraft/core/Direction;)Lnet/minecraft/client/renderer/block/ModelBlockRenderer$AmbientVertexRemap; a
net/minecraft/client/renderer/block/ModelBlockRenderer$Cache eoa$d
	brightnessCache c
	colorCache b
	enabled a
	disable ()V b
	enable ()V a
	getLightColor (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;)I a
	getShadeBrightness (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;)F b
net/minecraft/client/renderer/block/ModelBlockRenderer$SizeInfo eoa$e
	$VALUES n
	DOWN a
	EAST f
	FLIP_DOWN g
	FLIP_EAST l
	FLIP_NORTH i
	FLIP_SOUTH j
	FLIP_UP h
	FLIP_WEST k
	NORTH c
	SOUTH d
	UP b
	WEST e
	shape m
	$values ()[Lnet/minecraft/client/renderer/block/ModelBlockRenderer$SizeInfo; a
net/minecraft/client/renderer/block/model/BakedQuad eob
	direction c
	shade e
	sprite d
	tintIndex b
	vertices a
	getDirection ()Lnet/minecraft/core/Direction; e
	getSprite ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	getTintIndex ()I d
	getVertices ()[I b
	isShade ()Z f
	isTinted ()Z c
net/minecraft/client/renderer/block/model/BlockElement eoc
	DEFAULT_RESCALE f
	MAX_EXTENT h
	MIN_EXTENT g
	faces c
	from a
	rotation d
	shade e
	to b
	fillUvs ()V a
	uvsByFace (Lnet/minecraft/core/Direction;)[F a
net/minecraft/client/renderer/block/model/BlockElement$Deserializer eoc$a
	DEFAULT_SHADE a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/BlockElement; a
	filterNullFromFaces (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/Map; b
	getAngle (Lcom/google/gson/JsonObject;)F b
	getAxis (Lcom/google/gson/JsonObject;)Lnet/minecraft/core/Direction$Axis; c
	getFaces (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/Map; a
	getFacing (Ljava/lang/String;)Lnet/minecraft/core/Direction; a
	getFrom (Lcom/google/gson/JsonObject;)Lcom/mojang/math/Vector3f; e
	getRotation (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/renderer/block/model/BlockElementRotation; a
	getTo (Lcom/google/gson/JsonObject;)Lcom/mojang/math/Vector3f; d
	getVector3f (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lcom/mojang/math/Vector3f; a
net/minecraft/client/renderer/block/model/BlockElementFace eod
	NO_TINT a
	cullForDirection b
	texture d
	tintIndex c
	uv e
net/minecraft/client/renderer/block/model/BlockElementFace$Deserializer eod$a
	DEFAULT_TINT_INDEX a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/BlockElementFace; a
	getCullFacing (Lcom/google/gson/JsonObject;)Lnet/minecraft/core/Direction; c
	getTexture (Lcom/google/gson/JsonObject;)Ljava/lang/String; b
	getTintIndex (Lcom/google/gson/JsonObject;)I a
net/minecraft/client/renderer/block/model/BlockElementRotation eoe
	angle c
	axis b
	origin a
	rescale d
net/minecraft/client/renderer/block/model/BlockFaceUV eof
	rotation b
	uvs a
	getReverseIndex (I)I c
	getShiftedIndex (I)I d
	getU (I)F a
	getV (I)F b
	setMissingUv ([F)V a
net/minecraft/client/renderer/block/model/BlockFaceUV$Deserializer eof$a
	DEFAULT_ROTATION a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/BlockFaceUV; a
	getRotation (Lcom/google/gson/JsonObject;)I a
	getUVs (Lcom/google/gson/JsonObject;)[F b
net/minecraft/client/renderer/block/model/BlockModel eog
	FACE_BAKERY h
	GSON a
	LOGGER g
	PARTICLE_TEXTURE_REFERENCE b
	REFERENCE_CHAR i
	elements j
	guiLight k
	hasAmbientOcclusion l
	name c
	overrides n
	parent e
	parentLocation f
	textureMap d
	transforms m
	bake (Lnet/minecraft/client/resources/model/ModelBakery;Ljava/util/function/Function;Lnet/minecraft/client/resources/model/ModelState;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/resources/model/BakedModel; a
	bake (Lnet/minecraft/client/resources/model/ModelBakery;Lnet/minecraft/client/renderer/block/model/BlockModel;Ljava/util/function/Function;Lnet/minecraft/client/resources/model/ModelState;Lnet/minecraft/resources/ResourceLocation;Z)Lnet/minecraft/client/resources/model/BakedModel; a
	bakeFace (Lnet/minecraft/client/renderer/block/model/BlockElement;Lnet/minecraft/client/renderer/block/model/BlockElementFace;Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;Lnet/minecraft/core/Direction;Lnet/minecraft/client/resources/model/ModelState;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/block/model/BakedQuad; a
	findTextureEntry (Ljava/lang/String;)Lcom/mojang/datafixers/util/Either; d
	fromStream (Ljava/io/Reader;)Lnet/minecraft/client/renderer/block/model/BlockModel; a
	fromString (Ljava/lang/String;)Lnet/minecraft/client/renderer/block/model/BlockModel; a
	getDependencies ()Ljava/util/Collection; f
	getElements ()Ljava/util/List; a
	getGuiLight ()Lnet/minecraft/client/renderer/block/model/BlockModel$GuiLight; c
	getItemOverrides (Lnet/minecraft/client/resources/model/ModelBakery;Lnet/minecraft/client/renderer/block/model/BlockModel;)Lnet/minecraft/client/renderer/block/model/ItemOverrides; a
	getMaterial (Ljava/lang/String;)Lnet/minecraft/client/resources/model/Material; c
	getMaterials (Ljava/util/function/Function;Ljava/util/Set;)Ljava/util/Collection; a
	getOverrides ()Ljava/util/List; e
	getRootModel ()Lnet/minecraft/client/renderer/block/model/BlockModel; g
	getTransform (Lnet/minecraft/client/renderer/block/model/ItemTransforms$TransformType;)Lnet/minecraft/client/renderer/block/model/ItemTransform; a
	getTransforms ()Lnet/minecraft/client/renderer/block/model/ItemTransforms; h
	hasAmbientOcclusion ()Z b
	hasTexture (Ljava/lang/String;)Z b
	isResolved ()Z d
	isTextureReference (Ljava/lang/String;)Z e
net/minecraft/client/renderer/block/model/BlockModel$Deserializer eog$a
	DEFAULT_AMBIENT_OCCLUSION a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/BlockModel; a
	getAmbientOcclusion (Lcom/google/gson/JsonObject;)Z a
	getElements (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/List; b
	getOverrides (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/List; a
	getParentName (Lcom/google/gson/JsonObject;)Ljava/lang/String; c
	getTextureMap (Lcom/google/gson/JsonObject;)Ljava/util/Map; b
	parseTextureLocationOrReference (Lnet/minecraft/resources/ResourceLocation;Ljava/lang/String;)Lcom/mojang/datafixers/util/Either; a
net/minecraft/client/renderer/block/model/BlockModel$GuiLight eog$b
	$VALUES d
	FRONT a
	SIDE b
	name c
	$values ()[Lnet/minecraft/client/renderer/block/model/BlockModel$GuiLight; b
	getByName (Ljava/lang/String;)Lnet/minecraft/client/renderer/block/model/BlockModel$GuiLight; a
	lightLikeBlock ()Z a
net/minecraft/client/renderer/block/model/BlockModel$LoopException eog$c
net/minecraft/client/renderer/block/model/BlockModelDefinition eoh
	multiPart b
	variants a
	fromStream (Lnet/minecraft/client/renderer/block/model/BlockModelDefinition$Context;Ljava/io/Reader;)Lnet/minecraft/client/renderer/block/model/BlockModelDefinition; a
	getMultiPart ()Lnet/minecraft/client/renderer/block/model/multipart/MultiPart; d
	getMultiVariants ()Ljava/util/Set; b
	getVariant (Ljava/lang/String;)Lnet/minecraft/client/renderer/block/model/MultiVariant; b
	getVariants ()Ljava/util/Map; a
	hasVariant (Ljava/lang/String;)Z a
	isMultiPart ()Z c
net/minecraft/client/renderer/block/model/BlockModelDefinition$Context eoh$a
	definition b
	gson a
	getDefinition ()Lnet/minecraft/world/level/block/state/StateDefinition; a
	setDefinition (Lnet/minecraft/world/level/block/state/StateDefinition;)V a
net/minecraft/client/renderer/block/model/BlockModelDefinition$Deserializer eoh$b
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/BlockModelDefinition; a
	getMultiPart (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Lnet/minecraft/client/renderer/block/model/multipart/MultiPart; b
	getVariants (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/Map; a
net/minecraft/client/renderer/block/model/BlockModelDefinition$MissingVariantException eoh$c
net/minecraft/client/renderer/block/model/FaceBakery eoi
	COLOR_INDEX f
	RESCALE_22_5 d
	RESCALE_45 e
	UV_INDEX c
	VERTEX_COUNT b
	VERTEX_INT_SIZE a
	applyElementRotation (Lcom/mojang/math/Vector3f;Lnet/minecraft/client/renderer/block/model/BlockElementRotation;)V a
	applyModelRotation (Lcom/mojang/math/Vector3f;Lcom/mojang/math/Transformation;)V a
	bakeQuad (Lcom/mojang/math/Vector3f;Lcom/mojang/math/Vector3f;Lnet/minecraft/client/renderer/block/model/BlockElementFace;Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;Lnet/minecraft/core/Direction;Lnet/minecraft/client/resources/model/ModelState;Lnet/minecraft/client/renderer/block/model/BlockElementRotation;ZLnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/block/model/BakedQuad; a
	bakeVertex ([IILnet/minecraft/core/Direction;Lnet/minecraft/client/renderer/block/model/BlockFaceUV;[FLnet/minecraft/client/renderer/texture/TextureAtlasSprite;Lcom/mojang/math/Transformation;Lnet/minecraft/client/renderer/block/model/BlockElementRotation;Z)V a
	calculateFacing ([I)Lnet/minecraft/core/Direction; a
	fillVertex ([IILcom/mojang/math/Vector3f;Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;Lnet/minecraft/client/renderer/block/model/BlockFaceUV;)V a
	makeVertices (Lnet/minecraft/client/renderer/block/model/BlockFaceUV;Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;Lnet/minecraft/core/Direction;[FLcom/mojang/math/Transformation;Lnet/minecraft/client/renderer/block/model/BlockElementRotation;Z)[I a
	recalculateWinding ([ILnet/minecraft/core/Direction;)V a
	recomputeUVs (Lnet/minecraft/client/renderer/block/model/BlockFaceUV;Lnet/minecraft/core/Direction;Lcom/mojang/math/Transformation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/block/model/BlockFaceUV; a
	rotateVertexBy (Lcom/mojang/math/Vector3f;Lcom/mojang/math/Vector3f;Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Vector3f;)V a
	setupShape (Lcom/mojang/math/Vector3f;Lcom/mojang/math/Vector3f;)[F a
net/minecraft/client/renderer/block/model/ItemModelGenerator eoj
	LAYERS a
	MAX_Z c
	MIN_Z b
	checkTransition (Lnet/minecraft/client/renderer/block/model/ItemModelGenerator$SpanFacing;Ljava/util/List;Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;IIIIIZ)V a
	createOrExpandSpan (Ljava/util/List;Lnet/minecraft/client/renderer/block/model/ItemModelGenerator$SpanFacing;II)V a
	createSideElements (Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;Ljava/lang/String;I)Ljava/util/List; a
	generateBlockModel (Ljava/util/function/Function;Lnet/minecraft/client/renderer/block/model/BlockModel;)Lnet/minecraft/client/renderer/block/model/BlockModel; a
	getSpans (Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;)Ljava/util/List; a
	isTransparent (Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;IIIII)Z a
	processFrames (ILjava/lang/String;Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;)Ljava/util/List; a
net/minecraft/client/renderer/block/model/ItemModelGenerator$Span eoj$a
	anchor d
	facing a
	max c
	min b
	expand (I)V a
	getAnchor ()I d
	getFacing ()Lnet/minecraft/client/renderer/block/model/ItemModelGenerator$SpanFacing; a
	getMax ()I c
	getMin ()I b
net/minecraft/client/renderer/block/model/ItemModelGenerator$SpanFacing eoj$b
	$VALUES h
	DOWN b
	LEFT c
	RIGHT d
	UP a
	direction e
	xOffset f
	yOffset g
	$values ()[Lnet/minecraft/client/renderer/block/model/ItemModelGenerator$SpanFacing; e
	getDirection ()Lnet/minecraft/core/Direction; a
	getXOffset ()I b
	getYOffset ()I c
	isHorizontal ()Z d
net/minecraft/client/renderer/block/model/ItemOverride eok
	model a
	predicates b
	getModel ()Lnet/minecraft/resources/ResourceLocation; a
	getPredicates ()Ljava/util/stream/Stream; b
net/minecraft/client/renderer/block/model/ItemOverride$Deserializer eok$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/ItemOverride; a
	getPredicates (Lcom/google/gson/JsonObject;)Ljava/util/List; a
net/minecraft/client/renderer/block/model/ItemOverride$Predicate eok$b
	property a
	value b
	getProperty ()Lnet/minecraft/resources/ResourceLocation; a
	getValue ()F b
net/minecraft/client/renderer/block/model/ItemOverrides eol
	EMPTY a
	overrides b
	properties c
	bakeModel (Lnet/minecraft/client/resources/model/ModelBakery;Lnet/minecraft/client/renderer/block/model/BlockModel;Ljava/util/function/Function;Lnet/minecraft/client/renderer/block/model/ItemOverride;)Lnet/minecraft/client/resources/model/BakedModel; a
	resolve (Lnet/minecraft/client/resources/model/BakedModel;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/world/entity/LivingEntity;I)Lnet/minecraft/client/resources/model/BakedModel; a
net/minecraft/client/renderer/block/model/ItemOverrides$BakedOverride eol$a
	matchers a
	model b
	test ([F)Z a
net/minecraft/client/renderer/block/model/ItemOverrides$PropertyMatcher eol$b
	index a
	value b
net/minecraft/client/renderer/block/model/ItemTransform eom
	NO_TRANSFORM a
	rotation b
	scale d
	translation c
	apply (ZLcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/renderer/block/model/ItemTransform$Deserializer eom$a
	DEFAULT_ROTATION c
	DEFAULT_SCALE e
	DEFAULT_TRANSLATION d
	MAX_SCALE b
	MAX_TRANSLATION a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/ItemTransform; a
	getVector3f (Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/mojang/math/Vector3f;)Lcom/mojang/math/Vector3f; a
net/minecraft/client/renderer/block/model/ItemTransforms eon
	NO_TRANSFORMS a
	firstPersonLeftHand d
	firstPersonRightHand e
	fixed i
	ground h
	gui g
	head f
	thirdPersonLeftHand b
	thirdPersonRightHand c
	getTransform (Lnet/minecraft/client/renderer/block/model/ItemTransforms$TransformType;)Lnet/minecraft/client/renderer/block/model/ItemTransform; a
	hasTransform (Lnet/minecraft/client/renderer/block/model/ItemTransforms$TransformType;)Z b
net/minecraft/client/renderer/block/model/ItemTransforms$Deserializer eon$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/ItemTransforms; a
	getTransform (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;Ljava/lang/String;)Lnet/minecraft/client/renderer/block/model/ItemTransform; a
net/minecraft/client/renderer/block/model/ItemTransforms$TransformType eon$b
	$VALUES j
	FIRST_PERSON_LEFT_HAND d
	FIRST_PERSON_RIGHT_HAND e
	FIXED i
	GROUND h
	GUI g
	HEAD f
	NONE a
	THIRD_PERSON_LEFT_HAND b
	THIRD_PERSON_RIGHT_HAND c
	$values ()[Lnet/minecraft/client/renderer/block/model/ItemTransforms$TransformType; b
	firstPerson ()Z a
net/minecraft/client/renderer/block/model/MultiVariant eoo
	variants a
	bake (Lnet/minecraft/client/resources/model/ModelBakery;Ljava/util/function/Function;Lnet/minecraft/client/resources/model/ModelState;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/resources/model/BakedModel; a
	getDependencies ()Ljava/util/Collection; f
	getMaterials (Ljava/util/function/Function;Ljava/util/Set;)Ljava/util/Collection; a
	getVariants ()Ljava/util/List; a
net/minecraft/client/renderer/block/model/MultiVariant$Deserializer eoo$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/MultiVariant; a
net/minecraft/client/renderer/block/model/Variant eop
	modelLocation a
	rotation b
	uvLock c
	weight d
	getModelLocation ()Lnet/minecraft/resources/ResourceLocation; a
	getRotation ()Lcom/mojang/math/Transformation; b
	getWeight ()I d
	isUvLocked ()Z c
net/minecraft/client/renderer/block/model/Variant$Deserializer eop$a
	DEFAULT_UVLOCK a
	DEFAULT_WEIGHT b
	DEFAULT_X_ROTATION c
	DEFAULT_Y_ROTATION d
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/Variant; a
	getBlockRotation (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/resources/model/BlockModelRotation; a
	getModel (Lcom/google/gson/JsonObject;)Lnet/minecraft/resources/ResourceLocation; b
	getUvLock (Lcom/google/gson/JsonObject;)Z d
	getWeight (Lcom/google/gson/JsonObject;)I c
net/minecraft/client/renderer/block/model/multipart/AndCondition eoq
	TOKEN a
	conditions d
net/minecraft/client/renderer/block/model/multipart/Condition eor
	FALSE c
	TRUE b
net/minecraft/client/renderer/block/model/multipart/KeyValueCondition eos
	PIPE_SPLITTER a
	key d
	value e
	getBlockStatePredicate (Lnet/minecraft/world/level/block/state/StateDefinition;Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/String;)Ljava/util/function/Predicate; a
net/minecraft/client/renderer/block/model/multipart/MultiPart eot
	definition a
	selectors b
	bake (Lnet/minecraft/client/resources/model/ModelBakery;Ljava/util/function/Function;Lnet/minecraft/client/resources/model/ModelState;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/resources/model/BakedModel; a
	getDependencies ()Ljava/util/Collection; f
	getMaterials (Ljava/util/function/Function;Ljava/util/Set;)Ljava/util/Collection; a
	getMultiVariants ()Ljava/util/Set; b
	getSelectors ()Ljava/util/List; a
net/minecraft/client/renderer/block/model/multipart/MultiPart$Deserializer eot$a
	context a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/multipart/MultiPart; a
	getSelectors (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonArray;)Ljava/util/List; a
net/minecraft/client/renderer/block/model/multipart/OrCondition eou
	TOKEN a
	conditions d
net/minecraft/client/renderer/block/model/multipart/Selector eov
	condition a
	variant b
	getPredicate (Lnet/minecraft/world/level/block/state/StateDefinition;)Ljava/util/function/Predicate; a
	getVariant ()Lnet/minecraft/client/renderer/block/model/MultiVariant; a
net/minecraft/client/renderer/block/model/multipart/Selector$Deserializer eov$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/multipart/Selector; a
	getCondition (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/renderer/block/model/multipart/Condition; a
	getKeyValueCondition (Ljava/util/Map$Entry;)Lnet/minecraft/client/renderer/block/model/multipart/Condition; a
	getSelector (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/renderer/block/model/multipart/Condition; b
net/minecraft/client/renderer/blockentity/BannerRenderer eoz
	BANNER_HEIGHT c
	BANNER_WIDTH b
	BAR f
	FLAG a
	MAX_PATTERNS d
	POLE e
	bar i
	flag g
	pole h
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	render (Lnet/minecraft/world/level/block/entity/BannerBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	renderPatterns (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IILnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/resources/model/Material;ZLjava/util/List;)V a
	renderPatterns (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IILnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/resources/model/Material;ZLjava/util/List;Z)V a
net/minecraft/client/renderer/blockentity/BeaconRenderer epa
	BEAM_LOCATION a
	MAX_RENDER_Y b
	addVertex (Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Matrix3f;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFIFFFF)V a
	getViewDistance ()I ap_
	render (Lnet/minecraft/world/level/block/entity/BeaconBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	renderBeaconBeam (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;FJII[F)V a
	renderBeaconBeam (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/resources/ResourceLocation;FFJII[FFF)V a
	renderPart (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFIIFFFFFFFFFFFF)V a
	renderQuad (Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Matrix3f;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFIIFFFFFFFF)V a
	shouldRender (Lnet/minecraft/world/level/block/entity/BeaconBlockEntity;Lnet/minecraft/world/phys/Vec3;)Z a
	shouldRender (Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/phys/Vec3;)Z a
	shouldRenderOffScreen (Lnet/minecraft/world/level/block/entity/BeaconBlockEntity;)Z a
	shouldRenderOffScreen (Lnet/minecraft/world/level/block/entity/BlockEntity;)Z a
net/minecraft/client/renderer/blockentity/BedRenderer epb
	footRoot b
	headRoot a
	createFootLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	createHeadLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	render (Lnet/minecraft/world/level/block/entity/BedBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	renderPiece (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/core/Direction;Lnet/minecraft/client/resources/model/Material;IIZ)V a
net/minecraft/client/renderer/blockentity/BellRenderer epc
	BELL_BODY b
	BELL_RESOURCE_LOCATION a
	bellBody c
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	render (Lnet/minecraft/world/level/block/entity/BellBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/blockentity/BlockEntityRenderDispatcher epd
	blockRenderDispatcher h
	camera b
	cameraHitResult c
	entityModelSet g
	font f
	level a
	renderers d
	singleRenderBuffer e
	getRenderer (Lnet/minecraft/world/level/block/entity/BlockEntity;)Lnet/minecraft/client/renderer/blockentity/BlockEntityRenderer; a
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	prepare (Lnet/minecraft/world/level/Level;Lnet/minecraft/client/Camera;Lnet/minecraft/world/phys/HitResult;)V a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;)V a
	renderItem (Lnet/minecraft/world/level/block/entity/BlockEntity;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)Z a
	setLevel (Lnet/minecraft/world/level/Level;)V a
	setupAndRender (Lnet/minecraft/client/renderer/blockentity/BlockEntityRenderer;Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;)V a
	tryRender (Lnet/minecraft/world/level/block/entity/BlockEntity;Ljava/lang/Runnable;)V a
net/minecraft/client/renderer/blockentity/BlockEntityRenderer epe
	getViewDistance ()I ap_
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	shouldRender (Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/phys/Vec3;)Z a
	shouldRenderOffScreen (Lnet/minecraft/world/level/block/entity/BlockEntity;)Z a
net/minecraft/client/renderer/blockentity/BlockEntityRendererProvider epf
net/minecraft/client/renderer/blockentity/BlockEntityRendererProvider$Context epf$a
	blockEntityRenderDispatcher a
	blockRenderDispatcher b
	font d
	modelSet c
	bakeLayer (Lnet/minecraft/client/model/geom/ModelLayerLocation;)Lnet/minecraft/client/model/geom/ModelPart; a
	getBlockEntityRenderDispatcher ()Lnet/minecraft/client/renderer/blockentity/BlockEntityRenderDispatcher; a
	getBlockRenderDispatcher ()Lnet/minecraft/client/renderer/block/BlockRenderDispatcher; b
	getFont ()Lnet/minecraft/client/gui/Font; d
	getModelSet ()Lnet/minecraft/client/model/geom/EntityModelSet; c
net/minecraft/client/renderer/blockentity/BlockEntityRenderers epg
	PROVIDERS a
	createEntityRenderers (Lnet/minecraft/client/renderer/blockentity/BlockEntityRendererProvider$Context;)Ljava/util/Map; a
	register (Lnet/minecraft/world/level/block/entity/BlockEntityType;Lnet/minecraft/client/renderer/blockentity/BlockEntityRendererProvider;)V a
net/minecraft/client/renderer/blockentity/BrightnessCombiner eph
	acceptDouble (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; a
	acceptDouble (Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/level/block/entity/BlockEntity;)Lit/unimi/dsi/fastutil/ints/Int2IntFunction; a
	acceptNone ()Lit/unimi/dsi/fastutil/ints/Int2IntFunction; a
	acceptNone ()Ljava/lang/Object; b
	acceptSingle (Ljava/lang/Object;)Ljava/lang/Object; a
	acceptSingle (Lnet/minecraft/world/level/block/entity/BlockEntity;)Lit/unimi/dsi/fastutil/ints/Int2IntFunction; a
net/minecraft/client/renderer/blockentity/CampfireRenderer epi
	SIZE a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/CampfireBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/blockentity/ChestRenderer epj
	BOTTOM a
	LID b
	LOCK c
	bottom e
	doubleLeftBottom h
	doubleLeftLid g
	doubleLeftLock i
	doubleRightBottom k
	doubleRightLid j
	doubleRightLock l
	lid d
	lock f
	xmasTextures m
	createDoubleBodyLeftLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; d
	createDoubleBodyRightLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	createSingleBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;FII)V a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/blockentity/ConduitRenderer epk
	ACTIVE_SHELL_TEXTURE b
	CLOSED_EYE_TEXTURE f
	OPEN_EYE_TEXTURE e
	SHELL_TEXTURE a
	VERTICAL_WIND_TEXTURE d
	WIND_TEXTURE c
	cage j
	eye g
	renderer k
	shell i
	wind h
	createCageLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; e
	createEyeLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	createShellLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; d
	createWindLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/ConduitBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/blockentity/EnchantTableRenderer epl
	BOOK_LOCATION a
	bookModel b
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/EnchantmentTableBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/blockentity/LecternRenderer epm
	bookModel a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/LecternBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/blockentity/PistonHeadRenderer epn
	blockRenderer a
	getViewDistance ()I ap_
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/piston/PistonMovingBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	renderBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/world/level/Level;ZI)V a
net/minecraft/client/renderer/blockentity/ShulkerBoxRenderer epo
	model a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/ShulkerBoxBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/blockentity/SignRenderer epp
	BLACK_TEXT_OUTLINE_COLOR d
	LINE_HEIGHT b
	MAX_LINE_WIDTH a
	OUTLINE_RENDER_DISTANCE e
	STICK c
	font g
	signModels f
	createSignLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	createSignModel (Lnet/minecraft/client/model/geom/EntityModelSet;Lnet/minecraft/world/level/block/state/properties/WoodType;)Lnet/minecraft/client/renderer/blockentity/SignRenderer$SignModel; a
	getDarkColor (Lnet/minecraft/world/level/block/entity/SignBlockEntity;)I a
	getWoodType (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/state/properties/WoodType; a
	isOutlineVisible (Lnet/minecraft/world/level/block/entity/SignBlockEntity;I)Z a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/SignBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/blockentity/SignRenderer$SignModel epp$a
	root a
	stick b
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
net/minecraft/client/renderer/blockentity/SkullBlockRenderer epq
	SKIN_BY_TYPE b
	modelByType a
	createSkullRenderers (Lnet/minecraft/client/model/geom/EntityModelSet;)Ljava/util/Map; a
	getRenderType (Lnet/minecraft/world/level/block/SkullBlock$Type;Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/client/renderer/RenderType; a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/SkullBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	renderSkull (Lnet/minecraft/core/Direction;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/client/model/SkullModelBase;Lnet/minecraft/client/renderer/RenderType;)V a
net/minecraft/client/renderer/blockentity/SpawnerRenderer epr
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/SpawnerBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/blockentity/StructureBlockRenderer eps
	getViewDistance ()I ap_
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/StructureBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	renderInvisibleBlocks (Lnet/minecraft/world/level/block/entity/StructureBlockEntity;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/core/BlockPos;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	shouldRenderOffScreen (Lnet/minecraft/world/level/block/entity/BlockEntity;)Z a
	shouldRenderOffScreen (Lnet/minecraft/world/level/block/entity/StructureBlockEntity;)Z a
net/minecraft/client/renderer/blockentity/TheEndGatewayRenderer ept
	BEAM_LOCATION c
	getOffsetDown ()F c
	getOffsetUp ()F b
	getViewDistance ()I ap_
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/TheEndGatewayBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/TheEndPortalBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	renderType ()Lnet/minecraft/client/renderer/RenderType; d
net/minecraft/client/renderer/blockentity/TheEndPortalRenderer epu
	END_PORTAL_LOCATION b
	END_SKY_LOCATION a
	getOffsetDown ()F c
	getOffsetUp ()F b
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/TheEndPortalBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	renderCube (Lnet/minecraft/world/level/block/entity/TheEndPortalBlockEntity;Lcom/mojang/math/Matrix4f;Lcom/mojang/blaze3d/vertex/VertexConsumer;)V a
	renderFace (Lnet/minecraft/world/level/block/entity/TheEndPortalBlockEntity;Lcom/mojang/math/Matrix4f;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFFFFFLnet/minecraft/core/Direction;)V a
	renderType ()Lnet/minecraft/client/renderer/RenderType; d
net/minecraft/client/renderer/chunk/ChunkRenderDispatcher epw
	LOGGER a
	MAX_WORKERS_32_BIT b
	VERTEX_FORMAT c
	camera n
	executor k
	fixedBuffers i
	freeBufferCount h
	freeBuffers e
	level l
	mailbox j
	renderer m
	toBatch d
	toBatchCount g
	toUpload f
	blockUntilClear ()V g
	clearBatchQueue ()V k
	dispose ()V i
	doUploadChunkLayer (Lcom/mojang/blaze3d/vertex/BufferBuilder;Lcom/mojang/blaze3d/vertex/VertexBuffer;)Ljava/util/concurrent/CompletableFuture; b
	getCameraPosition ()Lnet/minecraft/world/phys/Vec3; e
	getFreeBufferCount ()I d
	getStats ()Ljava/lang/String; a
	getToBatchCount ()I b
	getToUpload ()I c
	isQueueEmpty ()Z h
	rebuildChunkSync (Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk;)V a
	runTask ()V j
	schedule (Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk$ChunkCompileTask;)V a
	setCamera (Lnet/minecraft/world/phys/Vec3;)V a
	setLevel (Lnet/minecraft/world/level/Level;)V a
	uploadAllPendingUploads ()Z f
	uploadChunkLayer (Lcom/mojang/blaze3d/vertex/BufferBuilder;Lcom/mojang/blaze3d/vertex/VertexBuffer;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$ChunkTaskResult epw$a
	$VALUES c
	CANCELLED b
	SUCCESSFUL a
	$values ()[Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$ChunkTaskResult; a
net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$CompiledChunk epw$b
	UNCOMPILED a
	hasBlocks b
	hasLayer c
	isCompletelyEmpty d
	renderableBlockEntities e
	transparencyState g
	visibilitySet f
	facesCanSeeEachother (Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)Z a
	getRenderableBlockEntities ()Ljava/util/List; b
	hasNoRenderableLayers ()Z a
	isEmpty (Lnet/minecraft/client/renderer/RenderType;)Z a
net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk epw$c
	SIZE a
	bb d
	buffers i
	compiled c
	dirty k
	globalBlockEntities h
	index b
	lastFrame j
	lastRebuildTask f
	lastResortTransparencyTask g
	origin l
	playerChanged n
	relativeOrigins m
	beginLayer (Lcom/mojang/blaze3d/vertex/BufferBuilder;)V a
	cancelTasks ()V i
	compileSync ()V k
	createCompileTask ()Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk$ChunkCompileTask; j
	doesChunkExistAt (Lnet/minecraft/core/BlockPos;)Z a
	getBuffer (Lnet/minecraft/client/renderer/RenderType;)Lcom/mojang/blaze3d/vertex/VertexBuffer; a
	getCompiledChunk ()Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$CompiledChunk; c
	getDistToPlayerSqr ()D b
	getOrigin ()Lnet/minecraft/core/BlockPos; e
	getRelativeOrigin (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/BlockPos; a
	hasAllNeighbors ()Z a
	isDirty ()Z g
	isDirtyFromPlayer ()Z h
	rebuildChunkAsync (Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher;)V a
	releaseBuffers ()V d
	reset ()V l
	resortTransparency (Lnet/minecraft/client/renderer/RenderType;Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher;)Z a
	setDirty (Z)V a
	setFrame (I)Z a
	setNotDirty ()V f
	setOrigin (III)V a
	updateGlobalBlockEntities (Ljava/util/Set;)V a
net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk$ChunkCompileTask epw$c$a
	distAtCreation a
	isCancelled b
	cancel ()V a
	compareTo (Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk$ChunkCompileTask;)I a
	doTask (Lnet/minecraft/client/renderer/ChunkBufferBuilderPack;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk$RebuildTask epw$c$b
	region d
	cancel ()V a
	compile (FFFLnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$CompiledChunk;Lnet/minecraft/client/renderer/ChunkBufferBuilderPack;)Ljava/util/Set; a
	doTask (Lnet/minecraft/client/renderer/ChunkBufferBuilderPack;)Ljava/util/concurrent/CompletableFuture; a
	handleBlockEntity (Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$CompiledChunk;Ljava/util/Set;Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk$ResortTransparencyTask epw$c$c
	compiledChunk e
	cancel ()V a
	doTask (Lnet/minecraft/client/renderer/ChunkBufferBuilderPack;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/client/renderer/chunk/RenderChunkRegion epx
	blockStates h
	centerX a
	centerZ b
	chunks g
	fluidStates i
	level j
	start c
	xLength d
	yLength e
	zLength f
	createIfNotEmpty (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;I)Lnet/minecraft/client/renderer/chunk/RenderChunkRegion; a
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c_
	getBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/chunk/LevelChunk$EntityCreationType;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a_
	getBlockTint (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ColorResolver;)I a
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b_
	getHeight ()I t_
	getLightEngine ()Lnet/minecraft/world/level/lighting/LevelLightEngine; k_
	getMinBuildHeight ()I s_
	getShade (Lnet/minecraft/core/Direction;Z)F a
	index (III)I a
	index (Lnet/minecraft/core/BlockPos;)I a
	isAllEmpty (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;II[[Lnet/minecraft/world/level/chunk/LevelChunk;)Z a
net/minecraft/client/renderer/chunk/VisGraph epy
	DIRECTIONS l
	DX h
	DY j
	DZ i
	INDEX_OF_EDGES n
	INVALID_INDEX k
	LEN b
	MASK c
	SIZE d
	SIZE_IN_BITS a
	X_SHIFT e
	Y_SHIFT g
	Z_SHIFT f
	bitSet m
	empty o
	addEdges (ILjava/util/Set;)V a
	floodFill (I)Ljava/util/Set; a
	getIndex (III)I a
	getIndex (Lnet/minecraft/core/BlockPos;)I b
	getNeighborIndexAtFace (ILnet/minecraft/core/Direction;)I a
	resolve ()Lnet/minecraft/client/renderer/chunk/VisibilitySet; a
	setOpaque (Lnet/minecraft/core/BlockPos;)V a
net/minecraft/client/renderer/chunk/VisibilitySet epz
	FACINGS a
	data b
	add (Ljava/util/Set;)V a
	set (Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;Z)V a
	setAll (Z)V a
	visibilityBetween (Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)Z a
net/minecraft/client/renderer/culling/Frustum eqb
	camX b
	camY c
	camZ d
	frustumData a
	calculateFrustum (Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Matrix4f;)V a
	cubeInFrustum (DDDDDD)Z a
	cubeInFrustum (FFFFFF)Z a
	getPlane (Lcom/mojang/math/Matrix4f;IIII)V a
	isVisible (Lnet/minecraft/world/phys/AABB;)Z a
	prepare (DDD)V a
net/minecraft/client/renderer/debug/BeeDebugRenderer eqd
	GRAY x
	GREEN w
	HIVE_TIMEOUT r
	MAX_RENDER_DIST_FOR_BEE_OVERLAY p
	MAX_RENDER_DIST_FOR_HIVE_OVERLAY o
	MAX_TARGETING_DIST q
	ORANGE v
	PINK y
	RED z
	SHOW_BLACKLISTS n
	SHOW_FLOWER_POS_FOR_ALL_BEES d
	SHOW_FLOWER_POS_FOR_SELECTED_BEE j
	SHOW_GOAL_FOR_ALL_BEES a
	SHOW_GOAL_FOR_SELECTED_BEE g
	SHOW_HIVE_FOR_ALL_BEES c
	SHOW_HIVE_FOR_SELECTED_BEE i
	SHOW_HIVE_MEMBERS m
	SHOW_NAME_FOR_ALL_BEES b
	SHOW_NAME_FOR_SELECTED_BEE h
	SHOW_PATH_FOR_ALL_BEES f
	SHOW_PATH_FOR_SELECTED_BEE l
	SHOW_TRAVEL_TICKS_FOR_ALL_BEES e
	SHOW_TRAVEL_TICKS_FOR_SELECTED_BEE k
	TEXT_SCALE s
	WHITE t
	YELLOW u
	beeInfosPerEntity C
	hives B
	lastLookedAtUuid D
	minecraft A
	addOrUpdateBeeInfo (Lnet/minecraft/client/renderer/debug/BeeDebugRenderer$BeeInfo;)V a
	addOrUpdateHiveInfo (Lnet/minecraft/client/renderer/debug/BeeDebugRenderer$HiveInfo;)V a
	clear ()V a
	clearRemovedBees ()V b
	clearRemovedHives ()V c
	createHiveBlacklistMap ()Ljava/util/Map; e
	doRender ()V d
	getBeeUuidsAsString (Ljava/util/Collection;)Ljava/lang/String; a
	getCamera ()Lnet/minecraft/client/Camera; g
	getGhostHives ()Ljava/util/Map; h
	getHiveMemberNames (Lnet/minecraft/client/renderer/debug/BeeDebugRenderer$HiveInfo;)Ljava/util/Set; b
	getHiveMembers (Lnet/minecraft/core/BlockPos;)Ljava/util/Collection; b
	getPosDescription (Lnet/minecraft/client/renderer/debug/BeeDebugRenderer$BeeInfo;Lnet/minecraft/core/BlockPos;)Ljava/lang/String; a
	highlightHive (Lnet/minecraft/core/BlockPos;)V a
	isBeeSelected (Lnet/minecraft/client/renderer/debug/BeeDebugRenderer$BeeInfo;)Z d
	isPlayerCloseEnoughToMob (Lnet/minecraft/client/renderer/debug/BeeDebugRenderer$BeeInfo;)Z e
	removeBeeInfo (I)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
	renderBeeInfo (Lnet/minecraft/client/renderer/debug/BeeDebugRenderer$BeeInfo;)V c
	renderFlowerInfos ()V f
	renderGhostHive (Lnet/minecraft/core/BlockPos;Ljava/util/List;)V a
	renderHiveInfo (Lnet/minecraft/client/renderer/debug/BeeDebugRenderer$HiveInfo;Ljava/util/Collection;)V a
	renderPath (Lnet/minecraft/client/renderer/debug/BeeDebugRenderer$BeeInfo;)V b
	renderTextOverHive (Ljava/lang/String;Lnet/minecraft/client/renderer/debug/BeeDebugRenderer$HiveInfo;II)V a
	renderTextOverMob (Lnet/minecraft/core/Position;ILjava/lang/String;IF)V a
	renderTextOverPos (Ljava/lang/String;Lnet/minecraft/core/BlockPos;II)V a
	renderTransparentFilledBox (Lnet/minecraft/core/BlockPos;FFFFF)V a
	updateLastLookedAtUuid ()V i
net/minecraft/client/renderer/debug/BeeDebugRenderer$BeeInfo eqd$a
	blacklistedHives i
	flowerPos f
	goals h
	hivePos e
	id b
	path d
	pos c
	travelTicks g
	uuid a
	getName ()Ljava/lang/String; b
	getUuid ()Ljava/util/UUID; a
	hasFlower ()Z c
	hasHive (Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/client/renderer/debug/BeeDebugRenderer$HiveInfo eqd$b
	hiveType b
	honeyLevel d
	lastSeen f
	occupantCount c
	pos a
	sedated e
net/minecraft/client/renderer/debug/BrainDebugRenderer eqe
	CYAN B
	GRAY D
	GREEN C
	LOGGER a
	MAX_RENDER_DIST_FOR_BRAIN_INFO v
	MAX_RENDER_DIST_FOR_POI_INFO w
	MAX_TARGETING_DIST x
	ORANGE G
	PINK E
	RED F
	SHOW_ACTIVITIES_FOR_ALL e
	SHOW_ACTIVITIES_FOR_SELECTED n
	SHOW_BEHAVIORS_FOR_ALL d
	SHOW_BEHAVIORS_FOR_SELECTED m
	SHOW_GOSSIPS_FOR_ALL g
	SHOW_GOSSIPS_FOR_SELECTED q
	SHOW_HEALTH_FOR_ALL i
	SHOW_HEALTH_FOR_SELECTED s
	SHOW_INVENTORY_FOR_ALL f
	SHOW_INVENTORY_FOR_SELECTED p
	SHOW_MEMORIES_FOR_SELECTED o
	SHOW_NAME_FOR_ALL b
	SHOW_NAME_FOR_SELECTED k
	SHOW_PATH_FOR_ALL h
	SHOW_PATH_FOR_SELECTED r
	SHOW_POI_INFO u
	SHOW_PROFESSION_FOR_ALL c
	SHOW_PROFESSION_FOR_SELECTED l
	SHOW_WANTS_GOLEM_FOR_ALL j
	SHOW_WANTS_GOLEM_FOR_SELECTED t
	TEXT_SCALE y
	WHITE z
	YELLOW A
	brainDumpsPerEntity J
	lastLookedAtUuid K
	minecraft H
	pois I
	addOrUpdateBrainDump (Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$BrainDump;)V a
	addPoi (Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$PoiInfo;)V a
	clear ()V a
	clearRemovedEntities ()V b
	doRender (DDD)V a
	getGhostPois ()Ljava/util/Map; c
	getPotentialTicketHolderNames (Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$PoiInfo;)Ljava/util/Set; d
	getPotentialTicketHolders (Lnet/minecraft/core/BlockPos;)Ljava/util/Collection; d
	getTicketHolderNames (Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$PoiInfo;)Ljava/util/Set; c
	getTicketHolders (Lnet/minecraft/core/BlockPos;)Ljava/util/Collection; c
	highlightPoi (Lnet/minecraft/core/BlockPos;)V b
	isMobSelected (Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$BrainDump;)Z b
	isPlayerCloseEnoughToMob (Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$BrainDump;)Z c
	removeBrainDump (I)V a
	removePoi (Lnet/minecraft/core/BlockPos;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
	renderBrainInfo (Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$BrainDump;DDD)V b
	renderGhostPoi (Lnet/minecraft/core/BlockPos;Ljava/util/List;)V a
	renderPath (Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$BrainDump;DDD)V a
	renderPoiInfo (Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$PoiInfo;)V b
	renderTextOverMob (Lnet/minecraft/core/Position;ILjava/lang/String;IF)V a
	renderTextOverPoi (Ljava/lang/String;Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$PoiInfo;II)V a
	renderTextOverPos (Ljava/lang/String;Lnet/minecraft/core/BlockPos;II)V a
	setFreeTicketCount (Lnet/minecraft/core/BlockPos;I)V a
	updateLastLookedAtUuid ()V d
net/minecraft/client/renderer/debug/BrainDebugRenderer$BrainDump eqe$a
	activities l
	behaviors m
	gossips o
	health f
	id b
	inventory i
	maxHealth g
	memories n
	name c
	path j
	pois p
	pos h
	potentialPois q
	profession d
	uuid a
	wantsGolem k
	xp e
	getUuid ()Ljava/util/UUID; a
	hasPoi (Lnet/minecraft/core/BlockPos;)Z a
	hasPotentialPoi (Lnet/minecraft/core/BlockPos;)Z b
net/minecraft/client/renderer/debug/BrainDebugRenderer$PoiInfo eqe$b
	freeTicketCount c
	pos a
	type b
net/minecraft/client/renderer/debug/ChunkBorderRenderer eqf
	minecraft a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/ChunkDebugRenderer eqg
	data d
	lastUpdateTime b
	minecraft a
	radius c
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/ChunkDebugRenderer$ChunkData eqg$a
	clientData b
	serverData c
net/minecraft/client/renderer/debug/CollisionBoxRenderer eqh
	lastUpdateTime b
	minecraft a
	shapes c
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/DebugRenderer eqi
	beeDebugRenderer n
	brainDebugRenderer l
	chunkBorderRenderer c
	chunkRenderer k
	collisionBoxRenderer e
	gameEventListenerRenderer r
	gameTestDebugRenderer q
	goalSelectorRenderer p
	heightMapRenderer d
	lightDebugRenderer h
	neighborsUpdateRenderer f
	pathfindingRenderer a
	raidDebugRenderer o
	renderChunkborder s
	solidFaceRenderer j
	structureRenderer g
	villageSectionsDebugRenderer m
	waterDebugRenderer b
	worldGenAttemptRenderer i
	clear ()V a
	getTargetedEntity (Lnet/minecraft/world/entity/Entity;I)Ljava/util/Optional; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource;DDD)V a
	renderFilledBox (DDDDDDFFFF)V a
	renderFilledBox (Lnet/minecraft/core/BlockPos;FFFFF)V a
	renderFilledBox (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;FFFF)V a
	renderFilledBox (Lnet/minecraft/world/phys/AABB;FFFF)V a
	renderFloatingText (Ljava/lang/String;DDDI)V a
	renderFloatingText (Ljava/lang/String;DDDIF)V a
	renderFloatingText (Ljava/lang/String;DDDIFZFZ)V a
	renderFloatingText (Ljava/lang/String;IIII)V a
	switchRenderChunkborder ()Z b
net/minecraft/client/renderer/debug/DebugRenderer$SimpleDebugRenderer eqi$a
	clear ()V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/GameEventListenerRenderer eqj
	BOX_HEIGHT c
	LISTENER_RENDER_DIST b
	minecraft a
	trackedGameEvents d
	trackedListeners e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
	renderTransparentFilledBox (Lnet/minecraft/world/phys/AABB;FFFF)V a
	trackGameEvent (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/core/BlockPos;)V a
	trackListener (Lnet/minecraft/world/level/gameevent/PositionSource;I)V a
net/minecraft/client/renderer/debug/GameEventListenerRenderer$TrackedGameEvent eqj$a
	gameEvent b
	position c
	timeStamp a
	isExpired ()Z a
net/minecraft/client/renderer/debug/GameEventListenerRenderer$TrackedListener eqj$b
	listenerRange b
	listenerSource a
	getListenerRadius ()I b
	getListenerSource ()Lnet/minecraft/world/level/gameevent/PositionSource; a
	getPosition (Lnet/minecraft/world/level/Level;)Ljava/util/Optional; a
	handleGameEvent (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)Z a
	isExpired (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/client/renderer/debug/GameTestDebugRenderer eqk
	PADDING a
	markers b
	addMarker (Lnet/minecraft/core/BlockPos;ILjava/lang/String;I)V a
	clear ()V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
	renderMarker (Lnet/minecraft/core/BlockPos;Lnet/minecraft/client/renderer/debug/GameTestDebugRenderer$Marker;)V a
net/minecraft/client/renderer/debug/GameTestDebugRenderer$Marker eqk$a
	color a
	removeAtTime c
	text b
	getA ()F d
	getB ()F c
	getG ()F b
	getR ()F a
net/minecraft/client/renderer/debug/GoalSelectorDebugRenderer eql
	MAX_RENDER_DIST a
	goalSelectors c
	minecraft b
	addGoalSelector (ILjava/util/List;)V a
	clear ()V a
	removeGoalSelector (I)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/GoalSelectorDebugRenderer$DebugGoal eql$a
	isRunning d
	name c
	pos a
	priority b
net/minecraft/client/renderer/debug/HeightMapRenderer eqm
	BOX_HEIGHT c
	CHUNK_DIST b
	minecraft a
	getColor (Lnet/minecraft/world/level/levelgen/Heightmap$Types;)Lcom/mojang/math/Vector3f; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/LightDebugRenderer eqn
	MAX_RENDER_DIST b
	minecraft a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/NeighborsUpdateRenderer eqo
	lastUpdate b
	minecraft a
	addUpdate (JLnet/minecraft/core/BlockPos;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/PathfindingRenderer eqp
	MAX_RENDER_DIST e
	SHOW_GROUND_LABELS j
	SHOW_OPEN_CLOSED f
	SHOW_OPEN_CLOSED_COST_MALUS g
	SHOW_OPEN_CLOSED_NODE_TYPE_WITH_BOX i
	SHOW_OPEN_CLOSED_NODE_TYPE_WITH_TEXT h
	TEXT_SCALE k
	TIMEOUT d
	creationMap c
	pathMap a
	pathMaxDist b
	addPath (ILnet/minecraft/world/level/pathfinder/Path;F)V a
	distanceToCamera (Lnet/minecraft/core/BlockPos;DDD)F a
	doRenderPath (Lnet/minecraft/world/level/pathfinder/Path;FZZDDD)V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
	renderPath (Lnet/minecraft/world/level/pathfinder/Path;FZZDDD)V a
	renderPathLine (Lnet/minecraft/world/level/pathfinder/Path;DDD)V a
net/minecraft/client/renderer/debug/RaidDebugRenderer eqq
	MAX_RENDER_DIST a
	TEXT_SCALE b
	minecraft c
	raidCenters d
	getCamera ()Lnet/minecraft/client/Camera; b
	highlightRaidCenter (Lnet/minecraft/core/BlockPos;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
	renderTextOverBlock (Ljava/lang/String;Lnet/minecraft/core/BlockPos;I)V a
	setRaidCenters (Ljava/util/Collection;)V a
net/minecraft/client/renderer/debug/SolidFaceRenderer eqr
	minecraft a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/StructureRenderer eqs
	MAX_RENDER_DIST e
	minecraft a
	postMainBoxes b
	postPiecesBoxes c
	startPiecesMap d
	addBoundingBox (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/List;Ljava/util/List;Lnet/minecraft/world/level/dimension/DimensionType;)V a
	clear ()V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/VillageSectionsDebugRenderer eqt
	MAX_RENDER_DIST_FOR_VILLAGE_SECTIONS a
	villageSections b
	clear ()V a
	doRender (DDD)V a
	highlightVillageSection (Lnet/minecraft/core/SectionPos;)V c
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
	setNotVillageSection (Lnet/minecraft/core/SectionPos;)V b
	setVillageSection (Lnet/minecraft/core/SectionPos;)V a
net/minecraft/client/renderer/debug/WaterDebugRenderer equ
	minecraft a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/WorldGenAttemptRenderer eqv
	alphas c
	blues f
	greens e
	reds d
	scales b
	toRender a
	addPos (Lnet/minecraft/core/BlockPos;FFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/entity/AbstractHorseRenderer eqx
	scale a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/animal/horse/AbstractHorse;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/AbstractZombieRenderer eqy
	ZOMBIE_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Zombie;)Lnet/minecraft/resources/ResourceLocation; a
	isShaking (Lnet/minecraft/world/entity/LivingEntity;)Z a
	isShaking (Lnet/minecraft/world/entity/monster/Zombie;)Z b
net/minecraft/client/renderer/entity/ArmorStandRenderer eqz
	DEFAULT_SKIN_LOCATION a
	getRenderType (Lnet/minecraft/world/entity/LivingEntity;ZZZ)Lnet/minecraft/client/renderer/RenderType; a
	getRenderType (Lnet/minecraft/world/entity/decoration/ArmorStand;ZZZ)Lnet/minecraft/client/renderer/RenderType; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/decoration/ArmorStand;)Lnet/minecraft/resources/ResourceLocation; a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/decoration/ArmorStand;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	shouldShowName (Lnet/minecraft/world/entity/Entity;)Z b
	shouldShowName (Lnet/minecraft/world/entity/LivingEntity;)Z b
	shouldShowName (Lnet/minecraft/world/entity/decoration/ArmorStand;)Z b
net/minecraft/client/renderer/entity/ArrowRenderer era
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/AbstractArrow;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	vertex (Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Matrix3f;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIIFFIIII)V a
net/minecraft/client/renderer/entity/AxolotlRenderer erb
	TEXTURE_BY_TYPE a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/axolotl/Axolotl;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/BatRenderer erc
	BAT_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/ambient/Bat;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/ambient/Bat;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/ambient/Bat;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/BeeRenderer erd
	ANGRY_BEE_TEXTURE a
	ANGRY_NECTAR_BEE_TEXTURE i
	BEE_TEXTURE j
	NECTAR_BEE_TEXTURE k
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Bee;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/BlazeRenderer ere
	BLAZE_LOCATION a
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/monster/Blaze;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Blaze;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/BoatRenderer erf
	boatResources a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/vehicle/Boat;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/vehicle/Boat;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/CatRenderer erg
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Cat;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/animal/Cat;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/animal/Cat;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/CaveSpiderRenderer erh
	CAVE_SPIDER_LOCATION a
	SCALE i
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/CaveSpider;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Spider;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/CaveSpider;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/ChestedHorseRenderer eri
	MAP a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/horse/AbstractChestedHorse;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/ChickenRenderer erj
	CHICKEN_LOCATION a
	getBob (Lnet/minecraft/world/entity/LivingEntity;F)F a
	getBob (Lnet/minecraft/world/entity/animal/Chicken;F)F a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Chicken;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/CodRenderer erk
	COD_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Cod;)Lnet/minecraft/resources/ResourceLocation; a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/animal/Cod;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/CowRenderer erl
	COW_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Cow;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/CreeperRenderer erm
	CREEPER_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Creeper;)Lnet/minecraft/resources/ResourceLocation; a
	getWhiteOverlayProgress (Lnet/minecraft/world/entity/LivingEntity;F)F b
	getWhiteOverlayProgress (Lnet/minecraft/world/entity/monster/Creeper;F)F a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Creeper;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/DolphinRenderer ern
	DOLPHIN_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Dolphin;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/DragonFireballRenderer ero
	RENDER_TYPE f
	TEXTURE_LOCATION a
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/projectile/DragonFireball;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/DragonFireball;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/DragonFireball;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	vertex (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Matrix3f;IFIII)V a
net/minecraft/client/renderer/entity/DrownedRenderer erp
	DROWNED_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Zombie;)Lnet/minecraft/resources/ResourceLocation; a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/monster/Drowned;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/ElderGuardianRenderer erq
	GUARDIAN_ELDER_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Guardian;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Guardian;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/EndCrystalRenderer err
	BASE i
	END_CRYSTAL_LOCATION a
	GLASS h
	RENDER_TYPE f
	SIN_45 g
	base l
	cube j
	glass k
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/boss/enderdragon/EndCrystal;)Lnet/minecraft/resources/ResourceLocation; a
	getY (Lnet/minecraft/world/entity/boss/enderdragon/EndCrystal;F)F a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/boss/enderdragon/EndCrystal;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	shouldRender (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	shouldRender (Lnet/minecraft/world/entity/boss/enderdragon/EndCrystal;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
net/minecraft/client/renderer/entity/EnderDragonRenderer ers
	BEAM l
	CRYSTAL_BEAM_LOCATION a
	DECAL j
	DRAGON_EXPLODING_LOCATION f
	DRAGON_EYES_LOCATION h
	DRAGON_LOCATION g
	EYES k
	HALF_SQRT_3 m
	RENDER_TYPE i
	model n
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/boss/enderdragon/EnderDragon;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/boss/enderdragon/EnderDragon;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderCrystalBeams (FFFFILcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	vertex01 (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/math/Matrix4f;I)V a
	vertex2 (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/math/Matrix4f;FF)V a
	vertex3 (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/math/Matrix4f;FF)V b
	vertex4 (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/math/Matrix4f;FF)V c
net/minecraft/client/renderer/entity/EnderDragonRenderer$DragonModel ers$a
	a z
	body g
	entity y
	head a
	jaw f
	leftFrontFoot l
	leftFrontLeg j
	leftFrontLegTip k
	leftRearFoot o
	leftRearLeg m
	leftRearLegTip n
	leftWing h
	leftWingTip i
	neck b
	rightFrontFoot u
	rightFrontLeg r
	rightFrontLegTip t
	rightRearFoot x
	rightRearLeg v
	rightRearLegTip w
	rightWing p
	rightWingTip q
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/boss/enderdragon/EnderDragon;FFF)V a
	renderSide (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFLnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;F)V a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/boss/enderdragon/EnderDragon;FFFFF)V a
net/minecraft/client/renderer/entity/EndermanRenderer ert
	ENDERMAN_LOCATION a
	random i
	getRenderOffset (Lnet/minecraft/world/entity/Entity;F)Lnet/minecraft/world/phys/Vec3; a
	getRenderOffset (Lnet/minecraft/world/entity/monster/EnderMan;F)Lnet/minecraft/world/phys/Vec3; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/EnderMan;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/monster/EnderMan;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/EndermiteRenderer eru
	ENDERMITE_LOCATION a
	getFlipDegrees (Lnet/minecraft/world/entity/LivingEntity;)F c
	getFlipDegrees (Lnet/minecraft/world/entity/monster/Endermite;)F a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Endermite;)Lnet/minecraft/resources/ResourceLocation; b
net/minecraft/client/renderer/entity/EntityRenderDispatcher erv
	SHADOW_RENDER_TYPE e
	camera b
	cameraOrientation i
	crosshairPickEntity c
	entityModels l
	font k
	itemRenderer j
	level h
	options d
	playerRenderers g
	renderHitBoxes n
	renderers f
	shouldRenderShadow m
	textureManager a
	cameraOrientation ()Lcom/mojang/math/Quaternion; b
	distanceToSqr (DDD)D a
	distanceToSqr (Lnet/minecraft/world/entity/Entity;)D b
	fireVertex (Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFF)V a
	getPackedLightCoords (Lnet/minecraft/world/entity/Entity;F)I a
	getRenderer (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/client/renderer/entity/EntityRenderer; a
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	overrideCameraOrientation (Lcom/mojang/math/Quaternion;)V a
	prepare (Lnet/minecraft/world/level/Level;Lnet/minecraft/client/Camera;Lnet/minecraft/world/entity/Entity;)V a
	render (Lnet/minecraft/world/entity/Entity;DDDFFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderBlockShadow (Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;DDDFF)V a
	renderFlame (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/world/entity/Entity;)V a
	renderHitbox (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/entity/Entity;F)V a
	renderShadow (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/world/entity/Entity;FFLnet/minecraft/world/level/LevelReader;F)V a
	setLevel (Lnet/minecraft/world/level/Level;)V a
	setRenderHitBoxes (Z)V b
	setRenderShadow (Z)V a
	shadowVertex (Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFFF)V a
	shouldRender (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	shouldRenderHitBoxes ()Z a
net/minecraft/client/renderer/entity/EntityRenderer erw
	NAMETAG_SCALE b
	entityRenderDispatcher c
	font a
	shadowRadius d
	shadowStrength e
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getFont ()Lnet/minecraft/client/gui/Font; b
	getPackedLightCoords (Lnet/minecraft/world/entity/Entity;F)I b
	getRenderOffset (Lnet/minecraft/world/entity/Entity;F)Lnet/minecraft/world/phys/Vec3; a
	getSkyLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I b
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderNameTag (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/chat/Component;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	shouldRender (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	shouldShowName (Lnet/minecraft/world/entity/Entity;)Z b
net/minecraft/client/renderer/entity/EntityRendererProvider erx
net/minecraft/client/renderer/entity/EntityRendererProvider$Context erx$a
	entityRenderDispatcher a
	font e
	itemRenderer b
	modelSet d
	resourceManager c
	bakeLayer (Lnet/minecraft/client/model/geom/ModelLayerLocation;)Lnet/minecraft/client/model/geom/ModelPart; a
	getEntityRenderDispatcher ()Lnet/minecraft/client/renderer/entity/EntityRenderDispatcher; a
	getFont ()Lnet/minecraft/client/gui/Font; e
	getItemRenderer ()Lnet/minecraft/client/renderer/entity/ItemRenderer; b
	getModelSet ()Lnet/minecraft/client/model/geom/EntityModelSet; d
	getResourceManager ()Lnet/minecraft/server/packs/resources/ResourceManager; c
net/minecraft/client/renderer/entity/EntityRenderers ery
	DEFAULT_PLAYER_MODEL a
	LOGGER b
	PLAYER_PROVIDERS d
	PROVIDERS c
	createEntityRenderers (Lnet/minecraft/client/renderer/entity/EntityRendererProvider$Context;)Ljava/util/Map; a
	createPlayerRenderers (Lnet/minecraft/client/renderer/entity/EntityRendererProvider$Context;)Ljava/util/Map; b
	register (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/client/renderer/entity/EntityRendererProvider;)V a
	validateRegistrations ()Z a
net/minecraft/client/renderer/entity/EvokerFangsRenderer erz
	TEXTURE_LOCATION a
	model f
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/EvokerFangs;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/EvokerFangs;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/EvokerRenderer esa
	EVOKER_ILLAGER a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/SpellcasterIllager;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/ExperienceOrbRenderer esb
	EXPERIENCE_ORB_LOCATION a
	RENDER_TYPE f
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/ExperienceOrb;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/ExperienceOrb;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/ExperienceOrb;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	vertex (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Matrix3f;FFIIIFFI)V a
net/minecraft/client/renderer/entity/FallingBlockRenderer esc
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/item/FallingBlockEntity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/item/FallingBlockEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/FireworkEntityRenderer esd
	itemRenderer a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/FireworkRocketEntity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/FireworkRocketEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/FishingHookRenderer ese
	RENDER_TYPE f
	TEXTURE_LOCATION a
	VIEW_BOBBING_SCALE g
	fraction (II)F a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/FishingHook;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/FishingHook;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	stringVertex (FFFLcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/blaze3d/vertex/PoseStack$Pose;FF)V a
	vertex (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Matrix3f;IFIII)V a
net/minecraft/client/renderer/entity/FoxRenderer esf
	RED_FOX_SLEEP_TEXTURE i
	RED_FOX_TEXTURE a
	SNOW_FOX_SLEEP_TEXTURE k
	SNOW_FOX_TEXTURE j
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Fox;)Lnet/minecraft/resources/ResourceLocation; a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/animal/Fox;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/GhastRenderer esg
	GHAST_LOCATION a
	GHAST_SHOOTING_LOCATION i
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Ghast;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Ghast;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/GiantMobRenderer esh
	ZOMBIE_LOCATION a
	scale i
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Giant;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Giant;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/GlowSquidRenderer esi
	GLOW_SQUID_LOCATION a
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/GlowSquid;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/GlowSquid;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Squid;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/GoatRenderer esj
	GOAT_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/goat/Goat;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/GuardianRenderer esk
	BEAM_RENDER_TYPE j
	GUARDIAN_BEAM_LOCATION i
	GUARDIAN_LOCATION a
	getPosition (Lnet/minecraft/world/entity/LivingEntity;DF)Lnet/minecraft/world/phys/Vec3; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Guardian;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/monster/Guardian;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	shouldRender (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	shouldRender (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	shouldRender (Lnet/minecraft/world/entity/monster/Guardian;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	vertex (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Matrix3f;FFFIIIFF)V a
net/minecraft/client/renderer/entity/HoglinRenderer esl
	HOGLIN_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Lnet/minecraft/resources/ResourceLocation; a
	isShaking (Lnet/minecraft/world/entity/LivingEntity;)Z a
	isShaking (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Z b
net/minecraft/client/renderer/entity/HorseRenderer esm
	LOCATION_BY_VARIANT a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/horse/Horse;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/HumanoidMobRenderer esn
	DEFAULT_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/HuskRenderer eso
	HUSK_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Zombie;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Zombie;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/IllagerRenderer esp
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/AbstractIllager;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/IllusionerRenderer esq
	ILLUSIONER a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Illusioner;)Lnet/minecraft/resources/ResourceLocation; a
	isBodyVisible (Lnet/minecraft/world/entity/LivingEntity;)Z d
	isBodyVisible (Lnet/minecraft/world/entity/monster/Illusioner;)Z b
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/monster/Illusioner;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/IronGolemRenderer esr
	GOLEM_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/IronGolem;)Lnet/minecraft/resources/ResourceLocation; a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/animal/IronGolem;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/ItemEntityRenderer ess
	FLAT_ITEM_BUNDLE_OFFSET_X j
	FLAT_ITEM_BUNDLE_OFFSET_Y k
	FLAT_ITEM_BUNDLE_OFFSET_Z l
	ITEM_BUNDLE_OFFSET_SCALE a
	ITEM_COUNT_FOR_2_BUNDLE i
	ITEM_COUNT_FOR_3_BUNDLE h
	ITEM_COUNT_FOR_4_BUNDLE g
	ITEM_COUNT_FOR_5_BUNDLE f
	itemRenderer m
	random n
	getRenderAmount (Lnet/minecraft/world/item/ItemStack;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/item/ItemEntity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/item/ItemEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/ItemFrameRenderer est
	BRIGHT_MAP_LIGHT_ADJUSTMENT f
	FRAME_LOCATION g
	GLOW_FRAME_BRIGHTNESS a
	GLOW_FRAME_LOCATION i
	GLOW_MAP_FRAME_LOCATION j
	MAP_FRAME_LOCATION h
	itemRenderer l
	minecraft k
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/decoration/ItemFrame;Lnet/minecraft/core/BlockPos;)I a
	getFrameModelResourceLoc (Lnet/minecraft/world/entity/decoration/ItemFrame;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/client/resources/model/ModelResourceLocation; a
	getLightVal (Lnet/minecraft/world/entity/decoration/ItemFrame;II)I a
	getRenderOffset (Lnet/minecraft/world/entity/Entity;F)Lnet/minecraft/world/phys/Vec3; a
	getRenderOffset (Lnet/minecraft/world/entity/decoration/ItemFrame;F)Lnet/minecraft/world/phys/Vec3; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/decoration/ItemFrame;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/decoration/ItemFrame;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderNameTag (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/chat/Component;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderNameTag (Lnet/minecraft/world/entity/decoration/ItemFrame;Lnet/minecraft/network/chat/Component;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	shouldShowName (Lnet/minecraft/world/entity/Entity;)Z b
	shouldShowName (Lnet/minecraft/world/entity/decoration/ItemFrame;)Z b
net/minecraft/client/renderer/entity/ItemRenderer esu
	COMPASS_FOIL_FIRST_PERSON_SCALE d
	COMPASS_FOIL_UI_SCALE c
	ENCHANT_GLINT_LOCATION a
	GUI_SLOT_CENTER_X g
	GUI_SLOT_CENTER_Y h
	IGNORED f
	ITEM_COUNT_BLIT_OFFSET b
	blitOffset e
	blockEntityRenderer l
	itemColors k
	itemModelShaper i
	textureManager j
	fillRect (Lcom/mojang/blaze3d/vertex/BufferBuilder;IIIIIIII)V a
	getArmorFoilBuffer (Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/renderer/RenderType;ZZ)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	getCompassFoilBuffer (Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/renderer/RenderType;Lcom/mojang/blaze3d/vertex/PoseStack$Pose;)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	getCompassFoilBufferDirect (Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/renderer/RenderType;Lcom/mojang/blaze3d/vertex/PoseStack$Pose;)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	getFoilBuffer (Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/renderer/RenderType;ZZ)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	getFoilBufferDirect (Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/renderer/RenderType;ZZ)Lcom/mojang/blaze3d/vertex/VertexConsumer; c
	getItemModelShaper ()Lnet/minecraft/client/renderer/ItemModelShaper; a
	getModel (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;I)Lnet/minecraft/client/resources/model/BakedModel; a
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	render (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/client/renderer/block/model/ItemTransforms$TransformType;ZLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IILnet/minecraft/client/resources/model/BakedModel;)V a
	renderAndDecorateFakeItem (Lnet/minecraft/world/item/ItemStack;II)V c
	renderAndDecorateItem (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;III)V a
	renderAndDecorateItem (Lnet/minecraft/world/item/ItemStack;II)V b
	renderAndDecorateItem (Lnet/minecraft/world/item/ItemStack;III)V a
	renderAndDecorateItem (Lnet/minecraft/world/item/ItemStack;IIII)V a
	renderGuiItem (Lnet/minecraft/world/item/ItemStack;II)V a
	renderGuiItem (Lnet/minecraft/world/item/ItemStack;IILnet/minecraft/client/resources/model/BakedModel;)V a
	renderGuiItemDecorations (Lnet/minecraft/client/gui/Font;Lnet/minecraft/world/item/ItemStack;II)V a
	renderGuiItemDecorations (Lnet/minecraft/client/gui/Font;Lnet/minecraft/world/item/ItemStack;IILjava/lang/String;)V a
	renderModelLists (Lnet/minecraft/client/resources/model/BakedModel;Lnet/minecraft/world/item/ItemStack;IILcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;)V a
	renderQuadList (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Ljava/util/List;Lnet/minecraft/world/item/ItemStack;II)V a
	renderStatic (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/client/renderer/block/model/ItemTransforms$TransformType;ZLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/world/level/Level;III)V a
	renderStatic (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/client/renderer/block/model/ItemTransforms$TransformType;IILcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	tryRenderGuiItem (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;III)V b
	tryRenderGuiItem (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;IIII)V a
net/minecraft/client/renderer/entity/LeashKnotRenderer esv
	KNOT_LOCATION a
	model f
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/decoration/LeashFenceKnotEntity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/decoration/LeashFenceKnotEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/LightningBoltRenderer esw
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/LightningBolt;)Lnet/minecraft/resources/ResourceLocation; a
	quad (Lcom/mojang/math/Matrix4f;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFIFFFFFFFZZZZ)V a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LightningBolt;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/LivingEntityRenderer esx
	EYE_BED_OFFSET h
	LOGGER a
	layers g
	model f
	addLayer (Lnet/minecraft/client/renderer/entity/layers/RenderLayer;)Z a
	getAttackAnim (Lnet/minecraft/world/entity/LivingEntity;F)F d
	getBob (Lnet/minecraft/world/entity/LivingEntity;F)F a
	getFlipDegrees (Lnet/minecraft/world/entity/LivingEntity;)F c
	getModel ()Lnet/minecraft/client/model/EntityModel; a
	getOverlayCoords (Lnet/minecraft/world/entity/LivingEntity;F)I c
	getRenderType (Lnet/minecraft/world/entity/LivingEntity;ZZZ)Lnet/minecraft/client/renderer/RenderType; a
	getWhiteOverlayProgress (Lnet/minecraft/world/entity/LivingEntity;F)F b
	isBodyVisible (Lnet/minecraft/world/entity/LivingEntity;)Z d
	isShaking (Lnet/minecraft/world/entity/LivingEntity;)Z a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	shouldShowName (Lnet/minecraft/world/entity/Entity;)Z b
	shouldShowName (Lnet/minecraft/world/entity/LivingEntity;)Z b
	sleepDirectionToRotation (Lnet/minecraft/core/Direction;)F a
net/minecraft/client/renderer/entity/LlamaRenderer esy
	LLAMA_LOCATIONS a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/horse/Llama;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/LlamaSpitRenderer esz
	LLAMA_SPIT_LOCATION a
	model f
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/LlamaSpit;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/LlamaSpit;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/MagmaCubeRenderer eta
	MAGMACUBE_LOCATION a
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/monster/MagmaCube;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/MagmaCube;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/MagmaCube;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/MinecartRenderer etb
	MINECART_LOCATION f
	model a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/vehicle/AbstractMinecart;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/vehicle/AbstractMinecart;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderMinecartContents (Lnet/minecraft/world/entity/vehicle/AbstractMinecart;FLnet/minecraft/world/level/block/state/BlockState;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/MobRenderer etc
	LEASH_RENDER_STEPS h
	addVertexPair (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/math/Matrix4f;FFFIIIIFFFFIZ)V a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderLeash (Lnet/minecraft/world/entity/Mob;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/world/entity/Entity;)V a
	shouldRender (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	shouldRender (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	shouldShowName (Lnet/minecraft/world/entity/Entity;)Z b
	shouldShowName (Lnet/minecraft/world/entity/LivingEntity;)Z b
	shouldShowName (Lnet/minecraft/world/entity/Mob;)Z b
net/minecraft/client/renderer/entity/MushroomCowRenderer etd
	TEXTURES a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/MushroomCow;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/NoopRenderer ete
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/OcelotRenderer etf
	CAT_OCELOT_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Ocelot;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/PaintingRenderer etg
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/decoration/Painting;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/decoration/Painting;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderPainting (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/entity/decoration/Painting;IILnet/minecraft/client/renderer/texture/TextureAtlasSprite;Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;)V a
	vertex (Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Matrix3f;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFFIIII)V a
net/minecraft/client/renderer/entity/PandaRenderer eth
	TEXTURES a
	getAngle (FFIFF)F a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Panda;)Lnet/minecraft/resources/ResourceLocation; a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/animal/Panda;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/ParrotRenderer eti
	PARROT_LOCATIONS a
	getBob (Lnet/minecraft/world/entity/LivingEntity;F)F a
	getBob (Lnet/minecraft/world/entity/animal/Parrot;F)F a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Parrot;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/PhantomRenderer etj
	PHANTOM_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Phantom;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Phantom;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/monster/Phantom;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/PigRenderer etk
	PIG_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Pig;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/PiglinRenderer etl
	PIGLIN_CUSTOM_HEAD_SCALE i
	TEXTURES a
	createModel (Lnet/minecraft/client/model/geom/EntityModelSet;Lnet/minecraft/client/model/geom/ModelLayerLocation;Z)Lnet/minecraft/client/model/PiglinModel; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/resources/ResourceLocation; a
	isShaking (Lnet/minecraft/world/entity/LivingEntity;)Z a
	isShaking (Lnet/minecraft/world/entity/Mob;)Z c
net/minecraft/client/renderer/entity/PillagerRenderer etm
	PILLAGER a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Pillager;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/PolarBearRenderer etn
	BEAR_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/PolarBear;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/animal/PolarBear;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/PufferfishRenderer eto
	PUFFER_LOCATION a
	big l
	mid k
	puffStateO i
	small j
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Pufferfish;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/animal/Pufferfish;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/animal/Pufferfish;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/RabbitRenderer etp
	RABBIT_BLACK_LOCATION j
	RABBIT_BROWN_LOCATION a
	RABBIT_EVIL_LOCATION o
	RABBIT_GOLD_LOCATION k
	RABBIT_SALT_LOCATION l
	RABBIT_TOAST_LOCATION n
	RABBIT_WHITE_LOCATION i
	RABBIT_WHITE_SPLOTCHED_LOCATION m
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Rabbit;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/RavagerRenderer etq
	TEXTURE_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Ravager;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/RenderLayerParent etr
	getModel ()Lnet/minecraft/client/model/EntityModel; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/SalmonRenderer ets
	SALMON_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Salmon;)Lnet/minecraft/resources/ResourceLocation; a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/animal/Salmon;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/SheepRenderer ett
	SHEEP_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Sheep;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/ShulkerBulletRenderer etu
	RENDER_TYPE f
	TEXTURE_LOCATION a
	model g
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/projectile/ShulkerBullet;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/ShulkerBullet;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/ShulkerBullet;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/ShulkerRenderer etv
	DEFAULT_TEXTURE_LOCATION a
	TEXTURE_LOCATION i
	getRenderOffset (Lnet/minecraft/world/entity/Entity;F)Lnet/minecraft/world/phys/Vec3; a
	getRenderOffset (Lnet/minecraft/world/entity/monster/Shulker;F)Lnet/minecraft/world/phys/Vec3; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Shulker;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/resources/ResourceLocation; a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/monster/Shulker;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	shouldRender (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	shouldRender (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	shouldRender (Lnet/minecraft/world/entity/monster/Shulker;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
net/minecraft/client/renderer/entity/SilverfishRenderer etw
	SILVERFISH_LOCATION a
	getFlipDegrees (Lnet/minecraft/world/entity/LivingEntity;)F c
	getFlipDegrees (Lnet/minecraft/world/entity/monster/Silverfish;)F a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Silverfish;)Lnet/minecraft/resources/ResourceLocation; b
net/minecraft/client/renderer/entity/SkeletonRenderer etx
	SKELETON_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/AbstractSkeleton;)Lnet/minecraft/resources/ResourceLocation; a
	isShaking (Lnet/minecraft/world/entity/LivingEntity;)Z a
	isShaking (Lnet/minecraft/world/entity/monster/AbstractSkeleton;)Z b
net/minecraft/client/renderer/entity/SlimeRenderer ety
	SLIME_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Slime;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/monster/Slime;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Slime;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/SnowGolemRenderer etz
	SNOW_GOLEM_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/SnowGolem;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/SpectralArrowRenderer eua
	SPECTRAL_ARROW_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/SpectralArrow;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/SpiderRenderer eub
	SPIDER_LOCATION a
	getFlipDegrees (Lnet/minecraft/world/entity/LivingEntity;)F c
	getFlipDegrees (Lnet/minecraft/world/entity/monster/Spider;)F b
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Spider;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/SquidRenderer euc
	SQUID_LOCATION a
	getBob (Lnet/minecraft/world/entity/LivingEntity;F)F a
	getBob (Lnet/minecraft/world/entity/animal/Squid;F)F a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Squid;)Lnet/minecraft/resources/ResourceLocation; a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/animal/Squid;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/StrayRenderer eud
	STRAY_SKELETON_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/AbstractSkeleton;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/StriderRenderer eue
	COLD_LOCATION i
	STRIDER_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Strider;)Lnet/minecraft/resources/ResourceLocation; a
	isShaking (Lnet/minecraft/world/entity/LivingEntity;)Z a
	isShaking (Lnet/minecraft/world/entity/monster/Strider;)Z b
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Strider;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/ThrownItemRenderer euf
	MIN_CAMERA_DISTANCE_SQUARED a
	fullBright h
	itemRenderer f
	scale g
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/ThrownTridentRenderer eug
	TRIDENT_LOCATION a
	model f
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/ThrownTrident;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/ThrownTrident;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/TippableArrowRenderer euh
	NORMAL_ARROW_LOCATION a
	TIPPED_ARROW_LOCATION f
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/Arrow;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/TntMinecartRenderer eui
	renderMinecartContents (Lnet/minecraft/world/entity/vehicle/AbstractMinecart;FLnet/minecraft/world/level/block/state/BlockState;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderMinecartContents (Lnet/minecraft/world/entity/vehicle/MinecartTNT;FLnet/minecraft/world/level/block/state/BlockState;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderWhiteSolidBlock (Lnet/minecraft/world/level/block/state/BlockState;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IZ)V a
net/minecraft/client/renderer/entity/TntRenderer euj
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/item/PrimedTnt;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/item/PrimedTnt;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/TropicalFishRenderer euk
	modelA a
	modelB i
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/TropicalFish;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/animal/TropicalFish;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/animal/TropicalFish;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/TurtleRenderer eul
	TURTLE_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Turtle;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/animal/Turtle;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/UndeadHorseRenderer eum
	MAP a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/horse/AbstractHorse;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/VexRenderer eun
	VEX_CHARGING_LOCATION i
	VEX_LOCATION a
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/monster/Vex;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Vex;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Vex;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/VillagerRenderer euo
	VILLAGER_BASE_SKIN a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/npc/Villager;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/npc/Villager;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/VindicatorRenderer eup
	VINDICATOR a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Vindicator;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/WanderingTraderRenderer euq
	VILLAGER_BASE_SKIN a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/npc/WanderingTrader;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/npc/WanderingTrader;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/WitchRenderer eur
	WITCH_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Witch;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/monster/Witch;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Witch;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/WitherBossRenderer eus
	WITHER_INVULNERABLE_LOCATION a
	WITHER_LOCATION i
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/boss/wither/WitherBoss;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/boss/wither/WitherBoss;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/boss/wither/WitherBoss;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/WitherSkeletonRenderer eut
	WITHER_SKELETON_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/AbstractSkeleton;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/AbstractSkeleton;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/WitherSkullRenderer euu
	WITHER_INVULNERABLE_LOCATION a
	WITHER_LOCATION f
	model g
	createSkullLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/projectile/WitherSkull;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/WitherSkull;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/WitherSkull;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/WolfRenderer euv
	WOLF_ANGRY_LOCATION j
	WOLF_LOCATION a
	WOLF_TAME_LOCATION i
	getBob (Lnet/minecraft/world/entity/LivingEntity;F)F a
	getBob (Lnet/minecraft/world/entity/animal/Wolf;F)F a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Wolf;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/animal/Wolf;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/ZoglinRenderer euw
	ZOGLIN_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Zoglin;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/ZombieRenderer eux
net/minecraft/client/renderer/entity/ZombieVillagerRenderer euy
	ZOMBIE_VILLAGER_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/ZombieVillager;)Lnet/minecraft/resources/ResourceLocation; a
	isShaking (Lnet/minecraft/world/entity/LivingEntity;)Z a
	isShaking (Lnet/minecraft/world/entity/monster/ZombieVillager;)Z b
net/minecraft/client/renderer/entity/layers/ArrowLayer euz
	dispatcher a
	numStuck (Lnet/minecraft/world/entity/LivingEntity;)I a
	renderStuckItem (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFF)V a
net/minecraft/client/renderer/entity/layers/BeeStingerLayer eva
	BEE_STINGER_LOCATION a
	numStuck (Lnet/minecraft/world/entity/LivingEntity;)I a
	renderStuckItem (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFF)V a
	vertex (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Matrix3f;FIFFI)V a
net/minecraft/client/renderer/entity/layers/CapeLayer evb
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/client/player/AbstractClientPlayer;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/CarriedBlockLayer evc
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/monster/EnderMan;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/CatCollarLayer evd
	CAT_COLLAR_LOCATION a
	catModel b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/Cat;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/CreeperPowerLayer eve
	POWER_LOCATION a
	model b
	getTextureLocation ()Lnet/minecraft/resources/ResourceLocation; a
	model ()Lnet/minecraft/client/model/EntityModel; b
	xOffset (F)F a
net/minecraft/client/renderer/entity/layers/CrossedArmsItemLayer evf
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/CustomHeadLayer evg
	scaleX a
	scaleY b
	scaleZ c
	skullModels d
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
	translateToHead (Lcom/mojang/blaze3d/vertex/PoseStack;Z)V a
net/minecraft/client/renderer/entity/layers/Deadmau5EarsLayer evh
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/client/player/AbstractClientPlayer;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/DolphinCarryingItemLayer evi
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/Dolphin;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/DrownedOuterLayer evj
	DROWNED_OUTER_LAYER_LOCATION a
	model b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/monster/Drowned;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/ElytraLayer evk
	WINGS_LOCATION a
	elytraModel b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/EnderEyesLayer evl
	ENDERMAN_EYES a
	renderType ()Lnet/minecraft/client/renderer/RenderType; a
net/minecraft/client/renderer/entity/layers/EnergySwirlLayer evm
	getTextureLocation ()Lnet/minecraft/resources/ResourceLocation; a
	model ()Lnet/minecraft/client/model/EntityModel; b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	xOffset (F)F a
net/minecraft/client/renderer/entity/layers/EyesLayer evn
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	renderType ()Lnet/minecraft/client/renderer/RenderType; a
net/minecraft/client/renderer/entity/layers/FoxHeldItemLayer evo
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/Fox;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/HorseArmorLayer evp
	model a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/horse/Horse;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/HorseMarkingLayer evq
	LOCATION_BY_MARKINGS a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/horse/Horse;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/HumanoidArmorLayer evr
	ARMOR_LOCATION_CACHE a
	innerModel b
	outerModel c
	getArmorLocation (Lnet/minecraft/world/item/ArmorItem;ZLjava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	getArmorModel (Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/client/model/HumanoidModel; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
	renderArmorPiece (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/EquipmentSlot;ILnet/minecraft/client/model/HumanoidModel;)V a
	renderModel (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/item/ArmorItem;ZLnet/minecraft/client/model/HumanoidModel;ZFFFLjava/lang/String;)V a
	setPartVisibility (Lnet/minecraft/client/model/HumanoidModel;Lnet/minecraft/world/entity/EquipmentSlot;)V a
	usesInnerModel (Lnet/minecraft/world/entity/EquipmentSlot;)Z b
net/minecraft/client/renderer/entity/layers/IronGolemCrackinessLayer evs
	resourceLocations a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/IronGolem;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/IronGolemFlowerLayer evt
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/IronGolem;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/ItemInHandLayer evu
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
	renderArmWithItem (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/client/renderer/block/model/ItemTransforms$TransformType;Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/layers/LlamaDecorLayer evv
	TEXTURE_LOCATION a
	TRADER_LLAMA b
	model c
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/horse/Llama;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/MushroomCowMushroomLayer evw
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/MushroomCow;FFFFFF)V a
	renderMushroomBlock (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IZLnet/minecraft/client/renderer/block/BlockRenderDispatcher;Lnet/minecraft/world/level/block/state/BlockState;ILnet/minecraft/client/resources/model/BakedModel;)V a
net/minecraft/client/renderer/entity/layers/PandaHoldsItemLayer evx
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/Panda;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/ParrotOnShoulderLayer evy
	model a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/player/Player;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/player/Player;FFFFZ)V a
net/minecraft/client/renderer/entity/layers/PhantomEyesLayer evz
	PHANTOM_EYES a
	renderType ()Lnet/minecraft/client/renderer/RenderType; a
net/minecraft/client/renderer/entity/layers/PlayerItemInHandLayer ewa
	X_ROT_MAX b
	X_ROT_MIN a
	renderArmWithItem (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/client/renderer/block/model/ItemTransforms$TransformType;Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderArmWithSpyglass (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/layers/RenderLayer ewb
	renderer a
	coloredCutoutModelCopyLayerRender (Lnet/minecraft/client/model/EntityModel;Lnet/minecraft/client/model/EntityModel;Lnet/minecraft/resources/ResourceLocation;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFFFFF)V a
	getParentModel ()Lnet/minecraft/client/model/EntityModel; c
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	renderColoredCutoutModel (Lnet/minecraft/client/model/EntityModel;Lnet/minecraft/resources/ResourceLocation;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFF)V a
net/minecraft/client/renderer/entity/layers/SaddleLayer ewc
	model b
	textureLocation a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/SheepFurLayer ewd
	SHEEP_FUR_LOCATION a
	model b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/Sheep;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/ShulkerHeadLayer ewe
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/monster/Shulker;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/SlimeOuterLayer ewf
	model a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/SnowGolemHeadLayer ewg
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/SnowGolem;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/SpiderEyesLayer ewh
	SPIDER_EYES a
	renderType ()Lnet/minecraft/client/renderer/RenderType; a
net/minecraft/client/renderer/entity/layers/SpinAttackEffectLayer ewi
	BOX b
	TEXTURE a
	box c
	createLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/StrayClothingLayer ewj
	STRAY_CLOTHES_LOCATION a
	layerModel b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Mob;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/StuckInBodyLayer ewk
	numStuck (Lnet/minecraft/world/entity/LivingEntity;)I a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
	renderStuckItem (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFF)V a
net/minecraft/client/renderer/entity/layers/TropicalFishPatternLayer ewl
	modelA a
	modelB b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/TropicalFish;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/VillagerProfessionLayer ewm
	LEVEL_LOCATIONS a
	path e
	professionHatCache c
	resourceManager d
	typeHatCache b
	getHatData (Lit/unimi/dsi/fastutil/objects/Object2ObjectMap;Ljava/lang/String;Lnet/minecraft/core/DefaultedRegistry;Ljava/lang/Object;)Lnet/minecraft/client/resources/metadata/animation/VillagerMetaDataSection$Hat; a
	getResourceLocation (Ljava/lang/String;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/WitchItemLayer ewn
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/WitherArmorLayer ewo
	WITHER_ARMOR_LOCATION a
	model b
	getTextureLocation ()Lnet/minecraft/resources/ResourceLocation; a
	model ()Lnet/minecraft/client/model/EntityModel; b
	xOffset (F)F a
net/minecraft/client/renderer/entity/layers/WolfCollarLayer ewp
	WOLF_COLLAR_LOCATION a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/Wolf;FFFFFF)V a
net/minecraft/client/renderer/entity/player/PlayerRenderer ews
	getArmPose (Lnet/minecraft/client/player/AbstractClientPlayer;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/client/model/HumanoidModel$ArmPose; a
	getRenderOffset (Lnet/minecraft/client/player/AbstractClientPlayer;F)Lnet/minecraft/world/phys/Vec3; a
	getRenderOffset (Lnet/minecraft/world/entity/Entity;F)Lnet/minecraft/world/phys/Vec3; a
	getTextureLocation (Lnet/minecraft/client/player/AbstractClientPlayer;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/client/player/AbstractClientPlayer;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderHand (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/client/player/AbstractClientPlayer;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;)V a
	renderLeftHand (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/client/player/AbstractClientPlayer;)V b
	renderNameTag (Lnet/minecraft/client/player/AbstractClientPlayer;Lnet/minecraft/network/chat/Component;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderNameTag (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/chat/Component;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderRightHand (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/client/player/AbstractClientPlayer;)V a
	scale (Lnet/minecraft/client/player/AbstractClientPlayer;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	setModelProperties (Lnet/minecraft/client/player/AbstractClientPlayer;)V b
	setupRotations (Lnet/minecraft/client/player/AbstractClientPlayer;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/item/ClampedItemPropertyFunction ewu
net/minecraft/client/renderer/item/ItemProperties ewv
	DAMAGE d
	DAMAGED c
	GENERIC_PROPERTIES a
	PROPERTIES g
	PROPERTY_DAMAGE f
	PROPERTY_DAMAGED e
	TAG_CUSTOM_MODEL_DATA b
	getProperty (Lnet/minecraft/world/item/Item;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/item/ItemPropertyFunction; a
	register (Lnet/minecraft/world/item/Item;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/renderer/item/ClampedItemPropertyFunction;)V a
	registerCustomModelData (Lnet/minecraft/client/renderer/item/ItemPropertyFunction;)V a
	registerGeneric (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/renderer/item/ClampedItemPropertyFunction;)Lnet/minecraft/client/renderer/item/ClampedItemPropertyFunction; a
net/minecraft/client/renderer/item/ItemProperties$CompassWobble ewv$a
	deltaRotation b
	lastUpdateTick c
	rotation a
	shouldUpdate (J)Z a
	update (JD)V a
net/minecraft/client/renderer/item/ItemPropertyFunction eww
net/minecraft/client/renderer/texture/AbstractTexture ewz
	NOT_ASSIGNED a
	blur c
	id b
	mipmap d
	bind ()V d
	getId ()I b
	load (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	releaseId ()V c
	reset (Lnet/minecraft/client/renderer/texture/TextureManager;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/resources/ResourceLocation;Ljava/util/concurrent/Executor;)V a
	setFilter (ZZ)V a
net/minecraft/client/renderer/texture/AtlasSet exa
	atlases a
	getAtlas (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/texture/TextureAtlas; a
	getSprite (Lnet/minecraft/client/resources/model/Material;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
net/minecraft/client/renderer/texture/DynamicTexture exb
	LOGGER e
	pixels f
	getPixels ()Lcom/mojang/blaze3d/platform/NativeImage; e
	load (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	setPixels (Lcom/mojang/blaze3d/platform/NativeImage;)V a
	upload ()V a
net/minecraft/client/renderer/texture/HttpTexture exc
	LEGACY_SKIN_HEIGHT i
	LOGGER f
	SKIN_HEIGHT h
	SKIN_WIDTH g
	file j
	future n
	onDownloaded m
	processLegacySkin l
	uploaded o
	urlString k
	doNotchTransparencyHack (Lcom/mojang/blaze3d/platform/NativeImage;IIII)V a
	load (Ljava/io/InputStream;)Lcom/mojang/blaze3d/platform/NativeImage; a
	load (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	loadCallback (Lcom/mojang/blaze3d/platform/NativeImage;)V a
	processLegacySkin (Lcom/mojang/blaze3d/platform/NativeImage;)Lcom/mojang/blaze3d/platform/NativeImage; c
	setNoAlpha (Lcom/mojang/blaze3d/platform/NativeImage;IIII)V b
	upload (Lcom/mojang/blaze3d/platform/NativeImage;)V b
net/minecraft/client/renderer/texture/MipmapGenerator exd
	ALPHA_CUTOUT_CUTOFF a
	POW22 b
	alphaBlend (IIIIZ)I a
	gammaBlend (IIIII)I a
	generateMipLevels (Lcom/mojang/blaze3d/platform/NativeImage;I)[Lcom/mojang/blaze3d/platform/NativeImage; a
	getPow22 (I)F a
net/minecraft/client/renderer/texture/MissingTextureAtlasSprite exe
	INFO h
	MISSING_IMAGE_DATA g
	MISSING_IMAGE_HEIGHT c
	MISSING_IMAGE_WIDTH b
	MISSING_TEXTURE_LOCATION e
	MISSING_TEXTURE_NAME d
	missingTexture f
	getLocation ()Lnet/minecraft/resources/ResourceLocation; a
	getTexture ()Lnet/minecraft/client/renderer/texture/DynamicTexture; c
	info ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite$Info; b
	newInstance (Lnet/minecraft/client/renderer/texture/TextureAtlas;IIIII)Lnet/minecraft/client/renderer/texture/MissingTextureAtlasSprite; a
net/minecraft/client/renderer/texture/OverlayTexture exf
	NO_OVERLAY d
	NO_WHITE_U a
	RED_OVERLAY_V b
	SIZE e
	WHITE_OVERLAY_V c
	texture f
	pack (FZ)I a
	pack (II)I a
	setupOverlayColor ()V a
	teardownOverlayColor ()V b
	u (F)I a
	v (Z)I a
net/minecraft/client/renderer/texture/PreloadedTexture exg
	future f
	executor (Ljava/util/concurrent/Executor;)Ljava/util/concurrent/Executor; a
	getFuture ()Ljava/util/concurrent/CompletableFuture; a
	getTextureImage (Lnet/minecraft/server/packs/resources/ResourceManager;)Lnet/minecraft/client/renderer/texture/SimpleTexture$TextureImage; b
	reset (Lnet/minecraft/client/renderer/texture/TextureManager;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/resources/ResourceLocation;Ljava/util/concurrent/Executor;)V a
net/minecraft/client/renderer/texture/SimpleTexture exh
	LOGGER f
	location e
	doLoad (Lcom/mojang/blaze3d/platform/NativeImage;ZZ)V a
	getTextureImage (Lnet/minecraft/server/packs/resources/ResourceManager;)Lnet/minecraft/client/renderer/texture/SimpleTexture$TextureImage; b
	load (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
net/minecraft/client/renderer/texture/SimpleTexture$TextureImage exh$a
	exception c
	image b
	metadata a
	getImage ()Lcom/mojang/blaze3d/platform/NativeImage; b
	getTextureMetadata ()Lnet/minecraft/client/resources/metadata/texture/TextureMetadataSection; a
	load (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/texture/SimpleTexture$TextureImage; a
	throwIfError ()V c
net/minecraft/client/renderer/texture/Stitcher exi
	HOLDER_COMPARATOR a
	maxHeight h
	maxWidth g
	mipLevel b
	storage d
	storageX e
	storageY f
	texturesToBeStitched c
	addToStorage (Lnet/minecraft/client/renderer/texture/Stitcher$Holder;)Z a
	expand (Lnet/minecraft/client/renderer/texture/Stitcher$Holder;)Z b
	gatherSprites (Lnet/minecraft/client/renderer/texture/Stitcher$SpriteLoader;)V a
	getHeight ()I b
	getWidth ()I a
	registerSprite (Lnet/minecraft/client/renderer/texture/TextureAtlasSprite$Info;)V a
	smallestFittingMinTexel (II)I a
	stitch ()V c
net/minecraft/client/renderer/texture/Stitcher$Holder exi$a
	height c
	spriteInfo a
	width b
net/minecraft/client/renderer/texture/Stitcher$Region exi$b
	height d
	holder f
	originX a
	originY b
	subSlots e
	width c
	add (Lnet/minecraft/client/renderer/texture/Stitcher$Holder;)Z a
	getHolder ()Lnet/minecraft/client/renderer/texture/Stitcher$Holder; a
	getX ()I b
	getY ()I c
	walk (Ljava/util/function/Consumer;)V a
net/minecraft/client/renderer/texture/Stitcher$SpriteLoader exi$c
net/minecraft/client/renderer/texture/StitcherException exj
	allSprites a
	getAllSprites ()Ljava/util/Collection; a
net/minecraft/client/renderer/texture/TextureAtlas exk
	FILE_EXTENSION h
	LOCATION_BLOCKS e
	LOCATION_PARTICLES f
	LOGGER g
	animatedTextures i
	location l
	maxSupportedTextureSize m
	sprites j
	texturesByName k
	clearTextureData ()V f
	cycleAnimationFrames ()V a
	getBasicSpriteInfos (Lnet/minecraft/server/packs/resources/ResourceManager;Ljava/util/Set;)Ljava/util/Collection; a
	getLoadedSprites (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/client/renderer/texture/Stitcher;I)Ljava/util/List; a
	getResourceLocation (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceLocation; b
	getSprite (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	load (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	load (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/client/renderer/texture/TextureAtlasSprite$Info;IIIII)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	location ()Lnet/minecraft/resources/ResourceLocation; g
	prepareToStitch (Lnet/minecraft/server/packs/resources/ResourceManager;Ljava/util/stream/Stream;Lnet/minecraft/util/profiling/ProfilerFiller;I)Lnet/minecraft/client/renderer/texture/TextureAtlas$Preparations; a
	reload (Lnet/minecraft/client/renderer/texture/TextureAtlas$Preparations;)V a
	tick ()V e
	updateFilter (Lnet/minecraft/client/renderer/texture/TextureAtlas$Preparations;)V b
net/minecraft/client/renderer/texture/TextureAtlas$Preparations exk$a
	height c
	mipLevel d
	regions e
	sprites a
	width b
net/minecraft/client/renderer/texture/TextureAtlasSprite exl
	LOGGER b
	animatedTexture g
	atlas c
	height f
	mainImage a
	name d
	u0 j
	u1 k
	v0 l
	v1 m
	width e
	x h
	y i
	atlas ()Lnet/minecraft/client/renderer/texture/TextureAtlas; m
	atlasSize ()F b
	createTicker (Lnet/minecraft/client/renderer/texture/TextureAtlasSprite$Info;III)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite$AnimatedTexture; a
	getAnimationTicker ()Lnet/minecraft/client/renderer/texture/Tickable; q
	getFrameCount ()I a
	getHeight ()I g
	getName ()Lnet/minecraft/resources/ResourceLocation; l
	getU (D)F a
	getU0 ()F h
	getU1 ()F i
	getUOffset (F)F a
	getUniqueFrames ()Ljava/util/stream/IntStream; n
	getV (D)F b
	getV0 ()F j
	getV1 ()F k
	getVOffset (F)F b
	getWidth ()I f
	getX ()I d
	getY ()I e
	isTransparent (III)Z a
	upload (II[Lcom/mojang/blaze3d/platform/NativeImage;)V a
	uploadFirstFrame ()V o
	uvShrinkRatio ()F p
	wrap (Lcom/mojang/blaze3d/vertex/VertexConsumer;)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
net/minecraft/client/renderer/texture/TextureAtlasSprite$AnimatedTexture exl$a
	frame b
	frameRowSize e
	frames d
	interpolationData f
	subFrame c
	getFrameX (I)I a
	getFrameY (I)I b
	getUniqueFrames ()Ljava/util/stream/IntStream; b
	tick ()V e
	uploadFirstFrame ()V a
	uploadFrame (I)V c
net/minecraft/client/renderer/texture/TextureAtlasSprite$FrameInfo exl$b
	index a
	time b
net/minecraft/client/renderer/texture/TextureAtlasSprite$Info exl$c
	height c
	metadata d
	name a
	width b
	height ()I c
	name ()Lnet/minecraft/resources/ResourceLocation; a
	width ()I b
net/minecraft/client/renderer/texture/TextureAtlasSprite$InterpolationData exl$d
	activeFrame b
	getPixel (Lnet/minecraft/client/renderer/texture/TextureAtlasSprite$AnimatedTexture;IIII)I a
	mix (DII)I a
	uploadInterpolatedFrame (Lnet/minecraft/client/renderer/texture/TextureAtlasSprite$AnimatedTexture;)V a
net/minecraft/client/renderer/texture/TextureManager exm
	INTENTIONAL_MISSING_TEXTURE a
	LOGGER b
	byPath c
	prefixRegister e
	resourceManager f
	tickableTextures d
	_bind (Lnet/minecraft/resources/ResourceLocation;)V d
	bindForSetup (Lnet/minecraft/resources/ResourceLocation;)V a
	execute (Ljava/lang/Runnable;)V a
	getTexture (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/texture/AbstractTexture; b
	getTexture (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/renderer/texture/AbstractTexture;)Lnet/minecraft/client/renderer/texture/AbstractTexture; b
	loadTexture (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/renderer/texture/AbstractTexture;)Lnet/minecraft/client/renderer/texture/AbstractTexture; d
	preload (Lnet/minecraft/resources/ResourceLocation;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
	register (Ljava/lang/String;Lnet/minecraft/client/renderer/texture/DynamicTexture;)Lnet/minecraft/resources/ResourceLocation; a
	register (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/renderer/texture/AbstractTexture;)V a
	release (Lnet/minecraft/resources/ResourceLocation;)V c
	reload (Lnet/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
	safeClose (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/renderer/texture/AbstractTexture;)V c
	tick ()V e
net/minecraft/client/renderer/texture/Tickable exn
	tick ()V e
net/minecraft/client/resources/AssetIndex exp
	LOGGER a
	namespacedFiles c
	rootFiles b
	getFile (Lnet/minecraft/resources/ResourceLocation;)Ljava/io/File; a
	getFiles (Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; a
	getRootFile (Ljava/lang/String;)Ljava/io/File; a
net/minecraft/client/resources/ClientPackSource exq
	APPLYING_PACK_TEXT j
	BUILT_IN a
	LOGGER b
	MAX_KEPT_PACKS e
	MAX_WEB_FILESIZE d
	PROGRAMMER_ART_ID h
	PROGRAMMER_ART_NAME i
	SERVER_ID g
	SHA1 c
	VANILLA_ID f
	assetIndex n
	currentDownload o
	downloadLock m
	serverPack p
	serverPackDir l
	vanillaPack k
	checkHash (Ljava/lang/String;Ljava/io/File;)Z a
	clearOldDownloads ()V d
	clearServerPack ()V b
	createProgrammerArtDirPack (Ljava/io/File;)Lnet/minecraft/server/packs/FolderPackResources; b
	createProgrammerArtPack (Lnet/minecraft/server/packs/repository/Pack$PackConstructor;)Lnet/minecraft/server/packs/repository/Pack; a
	createProgrammerArtPack (Lnet/minecraft/server/packs/repository/Pack$PackConstructor;Ljava/util/function/Supplier;)Lnet/minecraft/server/packs/repository/Pack; a
	createProgrammerArtZipPack (Ljava/io/File;)Lnet/minecraft/server/packs/PackResources; c
	deleteQuietly (Ljava/io/File;)V a
	downloadAndSelectResourcePack (Ljava/lang/String;Ljava/lang/String;Z)Ljava/util/concurrent/CompletableFuture; a
	getDownloadHeaders ()Ljava/util/Map; c
	getVanillaPack ()Lnet/minecraft/server/packs/VanillaPackResources; a
	loadPacks (Ljava/util/function/Consumer;Lnet/minecraft/server/packs/repository/Pack$PackConstructor;)V a
	setServerPack (Ljava/io/File;Lnet/minecraft/server/packs/repository/PackSource;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/client/resources/DefaultClientPackResources exr
	assetIndex g
	getResourceAsStream (Ljava/lang/String;)Ljava/io/InputStream; a
	getResourceAsStream (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Ljava/io/InputStream; c
	getResources (Lnet/minecraft/server/packs/PackType;Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; a
	hasResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Z b
net/minecraft/client/resources/DefaultPlayerSkin exs
	ALEX_MODEL d
	ALEX_SKIN_LOCATION b
	STEVE_MODEL c
	STEVE_SKIN_LOCATION a
	getDefaultSkin ()Lnet/minecraft/resources/ResourceLocation; a
	getDefaultSkin (Ljava/util/UUID;)Lnet/minecraft/resources/ResourceLocation; a
	getSkinModelName (Ljava/util/UUID;)Ljava/lang/String; b
	isAlexDefault (Ljava/util/UUID;)Z c
net/minecraft/client/resources/DirectAssetIndex ext
	assetsDirectory b
	getFile (Lnet/minecraft/resources/ResourceLocation;)Ljava/io/File; a
	getFiles (Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; a
	getRootFile (Ljava/lang/String;)Ljava/io/File; a
net/minecraft/client/resources/FoliageColorReloadListener exu
	LOCATION a
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply ([ILnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/lang/Object; b
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)[I a
net/minecraft/client/resources/GrassColorReloadListener exv
	LOCATION a
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply ([ILnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/lang/Object; b
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)[I a
net/minecraft/client/resources/LegacyPackResourcesAdapter exw
	V3 a
	patches e
	source b
	getMetadataSection (Lnet/minecraft/server/packs/metadata/MetadataSectionSerializer;)Ljava/lang/Object; a
	getName ()Ljava/lang/String; a
	getNamespaces (Lnet/minecraft/server/packs/PackType;)Ljava/util/Set; a
	getResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Ljava/io/InputStream; a
	getResources (Lnet/minecraft/server/packs/PackType;Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; a
	getRootResource (Ljava/lang/String;)Ljava/io/InputStream; b
	hasResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Z b
	map (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceLocation; b
	toMetaLocation (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/resources/LegacyStuffWrapper exx
	getPixels (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/resources/ResourceLocation;)[I a
net/minecraft/client/resources/MobEffectTextureManager exy
	get (Lnet/minecraft/world/effect/MobEffect;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	getResourcesToLoad ()Ljava/util/stream/Stream; a
net/minecraft/client/resources/PackResourcesAdapterV4 exz
	BANNERS m
	BANNER_BASE b
	CHESTS j
	DEFAULT_BANNER_SIZE g
	DEFAULT_CHEST_SIZE e
	DEFAULT_SHIELD_SIZE f
	NEW_IRON_GOLEM_PATH i
	OLD_IRON_GOLEM_LOCATION h
	PATTERNS k
	SHIELDS l
	SHIELD_BASE a
	pack n
	copyRect (Lcom/mojang/blaze3d/platform/NativeImage;Lcom/mojang/blaze3d/platform/NativeImage;IIIIIIIZZ)V a
	fixConduitEyeTexture (Ljava/io/InputStream;)Ljava/io/InputStream; a
	fixLeftChest (Ljava/io/InputStream;)Ljava/io/InputStream; b
	fixPattern (Ljava/io/InputStream;Ljava/io/InputStream;IIIII)Ljava/io/InputStream; a
	fixRightChest (Ljava/io/InputStream;)Ljava/io/InputStream; c
	fixSingleChest (Ljava/io/InputStream;)Ljava/io/InputStream; d
	getMetadataSection (Lnet/minecraft/server/packs/metadata/MetadataSectionSerializer;)Ljava/lang/Object; a
	getName ()Ljava/lang/String; a
	getNamespaces (Lnet/minecraft/server/packs/PackType;)Ljava/util/Set; a
	getResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Ljava/io/InputStream; a
	getResources (Lnet/minecraft/server/packs/PackType;Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; a
	getRootResource (Ljava/lang/String;)Ljava/io/InputStream; b
	hasResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Z b
net/minecraft/client/resources/PaintingTextureManager eya
	BACK_SPRITE_LOCATION a
	get (Lnet/minecraft/world/entity/decoration/Motive;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	getBackSprite ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; b
	getResourcesToLoad ()Ljava/util/stream/Stream; a
net/minecraft/client/resources/SkinManager eyb
	PROPERTY_TEXTURES a
	insecureSkinCache e
	sessionService d
	skinsDirectory c
	textureManager b
	getInsecureSkinInformation (Lcom/mojang/authlib/GameProfile;)Ljava/util/Map; a
	registerSkins (Lcom/mojang/authlib/GameProfile;Lnet/minecraft/client/resources/SkinManager$SkinTextureCallback;Z)V a
	registerTexture (Lcom/mojang/authlib/minecraft/MinecraftProfileTexture;Lcom/mojang/authlib/minecraft/MinecraftProfileTexture$Type;)Lnet/minecraft/resources/ResourceLocation; a
	registerTexture (Lcom/mojang/authlib/minecraft/MinecraftProfileTexture;Lcom/mojang/authlib/minecraft/MinecraftProfileTexture$Type;Lnet/minecraft/client/resources/SkinManager$SkinTextureCallback;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/resources/SkinManager$SkinTextureCallback eyb$a
net/minecraft/client/resources/SplashManager eyc
	RANDOM b
	SPLASHES_LOCATION a
	splashes c
	user d
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply (Ljava/util/List;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	getSplash ()Ljava/lang/String; a
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/lang/Object; b
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/util/List; a
net/minecraft/client/resources/TextureAtlasHolder eyd
	prefix b
	textureAtlas a
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply (Lnet/minecraft/client/renderer/texture/TextureAtlas$Preparations;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	getResourcesToLoad ()Ljava/util/stream/Stream; a
	getSprite (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/lang/Object; b
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Lnet/minecraft/client/renderer/texture/TextureAtlas$Preparations; a
	resolveLocation (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceLocation; b
net/minecraft/client/resources/language/ClientLanguage eye
	LOGGER b
	defaultRightToLeft d
	storage c
	appendFrom (Ljava/util/List;Ljava/util/Map;)V a
	getOrDefault (Ljava/lang/String;)Ljava/lang/String; a
	getVisualOrder (Lnet/minecraft/network/chat/FormattedText;)Lnet/minecraft/util/FormattedCharSequence; a
	has (Ljava/lang/String;)Z b
	isDefaultRightToLeft ()Z b
	loadFrom (Lnet/minecraft/server/packs/resources/ResourceManager;Ljava/util/List;)Lnet/minecraft/client/resources/language/ClientLanguage; a
net/minecraft/client/resources/language/FormattedBidiReorder eyf
	reorder (Lnet/minecraft/network/chat/FormattedText;Z)Lnet/minecraft/util/FormattedCharSequence; a
	shape (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/client/resources/language/I18n eyg
	language a
	exists (Ljava/lang/String;)Z a
	get (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; a
	setLanguage (Lnet/minecraft/locale/Language;)V a
net/minecraft/client/resources/language/LanguageInfo eyh
	bidirectional d
	code a
	name c
	region b
	compareTo (Lnet/minecraft/client/resources/language/LanguageInfo;)I a
	isBidirectional ()Z a
net/minecraft/client/resources/language/LanguageManager eyi
	DEFAULT_LANGUAGE c
	DEFAULT_LANGUAGE_CODE a
	LOGGER b
	currentCode e
	currentLanguage f
	languages d
	extractLanguages (Ljava/util/stream/Stream;)Ljava/util/Map; a
	getLanguage (Ljava/lang/String;)Lnet/minecraft/client/resources/language/LanguageInfo; a
	getLanguages ()Ljava/util/SortedSet; b
	getSelected ()Lnet/minecraft/client/resources/language/LanguageInfo; a
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	setSelected (Lnet/minecraft/client/resources/language/LanguageInfo;)V a
net/minecraft/client/resources/metadata/animation/AnimationFrame eyk
	UNKNOWN_FRAME_TIME a
	index b
	time c
	getIndex ()I a
	getTime (I)I a
net/minecraft/client/resources/metadata/animation/AnimationMetadataSection eyl
	DEFAULT_FRAME_TIME c
	EMPTY e
	SECTION_NAME b
	SERIALIZER a
	UNKNOWN_SIZE d
	defaultFrameTime i
	frameHeight h
	frameWidth g
	frames f
	interpolatedFrames j
	calculateFrameSize (II)Lcom/mojang/datafixers/util/Pair; c
	forEachFrame (Lnet/minecraft/client/resources/metadata/animation/AnimationMetadataSection$FrameOutput;)V a
	getDefaultFrameTime ()I a
	getFrameHeight (I)I a
	getFrameSize (II)Lcom/mojang/datafixers/util/Pair; a
	getFrameWidth (I)I b
	isDivisionInteger (II)Z b
	isInterpolatedFrames ()Z b
net/minecraft/client/resources/metadata/animation/AnimationMetadataSection$FrameOutput eyl$a
net/minecraft/client/resources/metadata/animation/AnimationMetadataSectionSerializer eym
	fromJson (Lcom/google/gson/JsonObject;)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/resources/metadata/animation/AnimationMetadataSection; b
	getFrame (ILcom/google/gson/JsonElement;)Lnet/minecraft/client/resources/metadata/animation/AnimationFrame; a
	getMetadataSectionName ()Ljava/lang/String; a
net/minecraft/client/resources/metadata/animation/VillagerMetaDataSection eyn
	SECTION_NAME b
	SERIALIZER a
	hat c
	getHat ()Lnet/minecraft/client/resources/metadata/animation/VillagerMetaDataSection$Hat; a
net/minecraft/client/resources/metadata/animation/VillagerMetaDataSection$Hat eyn$a
	$VALUES f
	BY_NAME d
	FULL c
	NONE a
	PARTIAL b
	name e
	$values ()[Lnet/minecraft/client/resources/metadata/animation/VillagerMetaDataSection$Hat; b
	getByName (Ljava/lang/String;)Lnet/minecraft/client/resources/metadata/animation/VillagerMetaDataSection$Hat; a
	getName ()Ljava/lang/String; a
net/minecraft/client/resources/metadata/animation/VillagerMetadataSectionSerializer eyo
	fromJson (Lcom/google/gson/JsonObject;)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/resources/metadata/animation/VillagerMetaDataSection; b
	getMetadataSectionName ()Ljava/lang/String; a
net/minecraft/client/resources/metadata/language/LanguageMetadataSection eyq
	DEFAULT_BIDIRECTIONAL b
	SERIALIZER a
	languages c
	getLanguages ()Ljava/util/Collection; a
net/minecraft/client/resources/metadata/language/LanguageMetadataSectionSerializer eyr
	MAX_LANGUAGE_LENGTH a
	fromJson (Lcom/google/gson/JsonObject;)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/resources/metadata/language/LanguageMetadataSection; b
	getMetadataSectionName ()Ljava/lang/String; a
net/minecraft/client/resources/metadata/texture/TextureMetadataSection eyu
	DEFAULT_BLUR b
	DEFAULT_CLAMP c
	SERIALIZER a
	blur d
	clamp e
	isBlur ()Z a
	isClamp ()Z b
net/minecraft/client/resources/metadata/texture/TextureMetadataSectionSerializer eyv
	fromJson (Lcom/google/gson/JsonObject;)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/resources/metadata/texture/TextureMetadataSection; b
	getMetadataSectionName ()Ljava/lang/String; a
net/minecraft/client/resources/model/BakedModel eyx
	getOverrides ()Lnet/minecraft/client/renderer/block/model/ItemOverrides; g
	getParticleIcon ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; e
	getQuads (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Ljava/util/Random;)Ljava/util/List; a
	getTransforms ()Lnet/minecraft/client/renderer/block/model/ItemTransforms; f
	isCustomRenderer ()Z d
	isGui3d ()Z b
	useAmbientOcclusion ()Z a
	usesBlockLight ()Z c
net/minecraft/client/resources/model/BlockModelRotation eyy
	$VALUES v
	BY_INDEX r
	DEGREES q
	X0_Y0 a
	X0_Y180 c
	X0_Y270 d
	X0_Y90 b
	X180_Y0 i
	X180_Y180 k
	X180_Y270 l
	X180_Y90 j
	X270_Y0 m
	X270_Y180 o
	X270_Y270 p
	X270_Y90 n
	X90_Y0 e
	X90_Y180 g
	X90_Y270 h
	X90_Y90 f
	actualRotation t
	index u
	transformation s
	$values ()[Lnet/minecraft/client/resources/model/BlockModelRotation; d
	actualRotation ()Lcom/mojang/math/OctahedralGroup; a
	by (II)Lnet/minecraft/client/resources/model/BlockModelRotation; a
	getIndex (II)I b
	getRotation ()Lcom/mojang/math/Transformation; b
net/minecraft/client/resources/model/BuiltInModel eyz
	itemTransforms a
	overrides b
	particleTexture c
	usesBlockLight d
	getOverrides ()Lnet/minecraft/client/renderer/block/model/ItemOverrides; g
	getParticleIcon ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; e
	getQuads (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Ljava/util/Random;)Ljava/util/List; a
	getTransforms ()Lnet/minecraft/client/renderer/block/model/ItemTransforms; f
	isCustomRenderer ()Z d
	isGui3d ()Z b
	useAmbientOcclusion ()Z a
	usesBlockLight ()Z c
net/minecraft/client/resources/model/Material eza
	atlasLocation a
	renderType c
	texture b
	atlasLocation ()Lnet/minecraft/resources/ResourceLocation; a
	buffer (Lnet/minecraft/client/renderer/MultiBufferSource;Ljava/util/function/Function;)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	buffer (Lnet/minecraft/client/renderer/MultiBufferSource;Ljava/util/function/Function;Z)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	renderType (Ljava/util/function/Function;)Lnet/minecraft/client/renderer/RenderType; a
	sprite ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; c
	texture ()Lnet/minecraft/resources/ResourceLocation; b
net/minecraft/client/resources/model/ModelBakery ezb
	BANNER_BASE f
	BLOCK_ENTITY_MARKER q
	BREAKING_LOCATIONS k
	BUILTIN_BLOCK_ENTITY w
	BUILTIN_MODELS z
	BUILTIN_SLASH u
	BUILTIN_SLASH_GENERATED v
	COMMA_SPLITTER A
	DESTROY_STAGES j
	DESTROY_STAGE_COUNT i
	DESTROY_TYPES l
	EQUAL_SPLITTER B
	FIRE_0 a
	FIRE_1 b
	GENERATION_MARKER p
	INVISIBLE_MODEL_GROUP s
	ITEM_FRAME_FAKE_DEFINITION C
	ITEM_MODEL_GENERATOR D
	LAVA_FLOW c
	LOGGER t
	MISSING_MODEL_LOCATION n
	MISSING_MODEL_LOCATION_STRING y
	MISSING_MODEL_MESH o
	MISSING_MODEL_NAME x
	NO_PATTERN_SHIELD h
	SHIELD_BASE g
	SINGLETON_MODEL_GROUP m
	STATIC_DEFINITIONS E
	UNREFERENCED_TEXTURES r
	WATER_FLOW d
	WATER_OVERLAY e
	atlasPreparations O
	atlasSet G
	bakedCache L
	bakedTopLevelModels N
	blockColors H
	context J
	loadingStack I
	modelGroups Q
	nextModelGroup P
	resourceManager F
	topLevelModels M
	unbakedCache K
	bake (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/resources/model/ModelState;)Lnet/minecraft/client/resources/model/BakedModel; a
	cacheAndQueueDependencies (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/resources/model/UnbakedModel;)V a
	getBakedTopLevelModels ()Ljava/util/Map; a
	getModel (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/resources/model/UnbakedModel; a
	getModelGroups ()Lit/unimi/dsi/fastutil/objects/Object2IntMap; b
	getValueHelper (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/String;)Ljava/lang/Comparable; a
	loadBlockModel (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/block/model/BlockModel; c
	loadModel (Lnet/minecraft/resources/ResourceLocation;)V b
	loadTopLevel (Lnet/minecraft/client/resources/model/ModelResourceLocation;)V a
	predicate (Lnet/minecraft/world/level/block/state/StateDefinition;Ljava/lang/String;)Ljava/util/function/Predicate; a
	registerModelGroup (Ljava/lang/Iterable;)V a
	uploadTextures (Lnet/minecraft/client/renderer/texture/TextureManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Lnet/minecraft/client/renderer/texture/AtlasSet; a
net/minecraft/client/resources/model/ModelBakery$BlockStateDefinitionException ezb$a
net/minecraft/client/resources/model/ModelBakery$ModelGroupKey ezb$b
	coloringValues b
	models a
	create (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/client/renderer/block/model/multipart/MultiPart;Ljava/util/Collection;)Lnet/minecraft/client/resources/model/ModelBakery$ModelGroupKey; a
	create (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/client/resources/model/UnbakedModel;Ljava/util/Collection;)Lnet/minecraft/client/resources/model/ModelBakery$ModelGroupKey; a
	getColoringValues (Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Collection;)Ljava/util/List; a
net/minecraft/client/resources/model/ModelManager ezc
	atlases b
	bakedRegistry a
	blockColors e
	blockModelShaper c
	maxMipmapLevels f
	missingModel g
	modelGroups h
	textureManager d
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply (Lnet/minecraft/client/resources/model/ModelBakery;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	getAtlas (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/texture/TextureAtlas; a
	getBlockModelShaper ()Lnet/minecraft/client/renderer/block/BlockModelShaper; b
	getMissingModel ()Lnet/minecraft/client/resources/model/BakedModel; a
	getModel (Lnet/minecraft/client/resources/model/ModelResourceLocation;)Lnet/minecraft/client/resources/model/BakedModel; a
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/lang/Object; b
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Lnet/minecraft/client/resources/model/ModelBakery; a
	requiresRender (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	updateMaxMipLevel (I)V a
net/minecraft/client/resources/model/ModelResourceLocation ezd
	VARIANT_SEPARATOR g
	variant h
	decompose (Ljava/lang/String;)[Ljava/lang/String; c
	getVariant ()Ljava/lang/String; d
net/minecraft/client/resources/model/ModelState eze
	getRotation ()Lcom/mojang/math/Transformation; b
	isUvLocked ()Z c
net/minecraft/client/resources/model/MultiPartBakedModel ezf
	hasAmbientOcclusion a
	isGui3d b
	overrides f
	particleIcon d
	selectorCache h
	selectors g
	transforms e
	usesBlockLight c
	getOverrides ()Lnet/minecraft/client/renderer/block/model/ItemOverrides; g
	getParticleIcon ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; e
	getQuads (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Ljava/util/Random;)Ljava/util/List; a
	getTransforms ()Lnet/minecraft/client/renderer/block/model/ItemTransforms; f
	isCustomRenderer ()Z d
	isGui3d ()Z b
	useAmbientOcclusion ()Z a
	usesBlockLight ()Z c
net/minecraft/client/resources/model/MultiPartBakedModel$Builder ezf$a
	selectors a
	add (Ljava/util/function/Predicate;Lnet/minecraft/client/resources/model/BakedModel;)V a
	build ()Lnet/minecraft/client/resources/model/BakedModel; a
net/minecraft/client/resources/model/SimpleBakedModel ezg
	culledFaces b
	hasAmbientOcclusion c
	isGui3d d
	overrides h
	particleIcon f
	transforms g
	unculledFaces a
	usesBlockLight e
	getOverrides ()Lnet/minecraft/client/renderer/block/model/ItemOverrides; g
	getParticleIcon ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; e
	getQuads (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Ljava/util/Random;)Ljava/util/List; a
	getTransforms ()Lnet/minecraft/client/renderer/block/model/ItemTransforms; f
	isCustomRenderer ()Z d
	isGui3d ()Z b
	useAmbientOcclusion ()Z a
	usesBlockLight ()Z c
net/minecraft/client/resources/model/SimpleBakedModel$Builder ezg$a
	culledFaces b
	hasAmbientOcclusion d
	isGui3d g
	overrides c
	particleIcon e
	transforms h
	unculledFaces a
	usesBlockLight f
	addCulledFace (Lnet/minecraft/core/Direction;Lnet/minecraft/client/renderer/block/model/BakedQuad;)Lnet/minecraft/client/resources/model/SimpleBakedModel$Builder; a
	addUnculledFace (Lnet/minecraft/client/renderer/block/model/BakedQuad;)Lnet/minecraft/client/resources/model/SimpleBakedModel$Builder; a
	build ()Lnet/minecraft/client/resources/model/BakedModel; b
	item ()Lnet/minecraft/client/resources/model/SimpleBakedModel$Builder; a
	particle (Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;)Lnet/minecraft/client/resources/model/SimpleBakedModel$Builder; a
net/minecraft/client/resources/model/UnbakedModel ezh
	bake (Lnet/minecraft/client/resources/model/ModelBakery;Ljava/util/function/Function;Lnet/minecraft/client/resources/model/ModelState;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/resources/model/BakedModel; a
	getDependencies ()Ljava/util/Collection; f
	getMaterials (Ljava/util/function/Function;Ljava/util/Set;)Ljava/util/Collection; a
net/minecraft/client/resources/model/WeightedBakedModel ezi
	list b
	totalWeight a
	wrapped c
	getOverrides ()Lnet/minecraft/client/renderer/block/model/ItemOverrides; g
	getParticleIcon ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; e
	getQuads (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Ljava/util/Random;)Ljava/util/List; a
	getTransforms ()Lnet/minecraft/client/renderer/block/model/ItemTransforms; f
	isCustomRenderer ()Z d
	isGui3d ()Z b
	useAmbientOcclusion ()Z a
	usesBlockLight ()Z c
net/minecraft/client/resources/model/WeightedBakedModel$Builder ezi$a
	list a
	add (Lnet/minecraft/client/resources/model/BakedModel;I)Lnet/minecraft/client/resources/model/WeightedBakedModel$Builder; a
	build ()Lnet/minecraft/client/resources/model/BakedModel; a
net/minecraft/client/resources/sounds/AbstractSoundInstance ezl
	attenuation k
	delay j
	location c
	looping i
	pitch e
	relative l
	sound a
	source b
	volume d
	x f
	y g
	z h
	getAttenuation ()Lnet/minecraft/client/resources/sounds/SoundInstance$Attenuation; k
	getDelay ()I e
	getLocation ()Lnet/minecraft/resources/ResourceLocation; a
	getPitch ()F g
	getSound ()Lnet/minecraft/client/resources/sounds/Sound; b
	getSource ()Lnet/minecraft/sounds/SoundSource; c
	getVolume ()F f
	getX ()D h
	getY ()D i
	getZ ()D j
	isLooping ()Z d
	isRelative ()Z l
	resolve (Lnet/minecraft/client/sounds/SoundManager;)Lnet/minecraft/client/sounds/WeighedSoundEvents; a
net/minecraft/client/resources/sounds/AbstractTickableSoundInstance ezm
	stopped m
	isStopped ()Z m
	stop ()V n
net/minecraft/client/resources/sounds/AmbientSoundHandler ezn
	tick ()V a
net/minecraft/client/resources/sounds/BeeAggressiveSoundInstance ezo
	getAlternativeSoundInstance ()Lnet/minecraft/client/resources/sounds/AbstractTickableSoundInstance; o
	shouldSwitchSounds ()Z p
net/minecraft/client/resources/sounds/BeeFlyingSoundInstance ezp
	getAlternativeSoundInstance ()Lnet/minecraft/client/resources/sounds/AbstractTickableSoundInstance; o
	shouldSwitchSounds ()Z p
net/minecraft/client/resources/sounds/BeeSoundInstance ezq
	PITCH_MIN p
	VOLUME_MAX o
	VOLUME_MIN n
	bee m
	hasSwitched q
	canPlaySound ()Z s
	canStartSilent ()Z r
	getAlternativeSoundInstance ()Lnet/minecraft/client/resources/sounds/AbstractTickableSoundInstance; o
	getMaxPitch ()F u
	getMinPitch ()F t
	shouldSwitchSounds ()Z p
	tick ()V q
net/minecraft/client/resources/sounds/BiomeAmbientSoundsHandler ezr
	LOOP_SOUND_CROSS_FADE_TIME a
	SKY_MOOD_RECOVERY_RATE b
	additionsSettings i
	biomeManager e
	loopSounds g
	moodSettings h
	moodiness j
	player c
	previousBiome k
	random f
	soundManager d
	getMoodiness ()F b
	tick ()V a
net/minecraft/client/resources/sounds/BiomeAmbientSoundsHandler$LoopSoundInstance ezr$a
	fade n
	fadeDirection m
	fadeIn ()V p
	fadeOut ()V o
	tick ()V q
net/minecraft/client/resources/sounds/BubbleColumnAmbientSoundHandler ezs
	firstTick c
	player a
	wasInBubbleColumn b
	tick ()V a
net/minecraft/client/resources/sounds/ElytraOnPlayerSoundInstance ezt
	DELAY m
	player n
	time o
	tick ()V q
net/minecraft/client/resources/sounds/EntityBoundSoundInstance ezu
	entity m
	canPlaySound ()Z s
	tick ()V q
net/minecraft/client/resources/sounds/GuardianAttackSoundInstance ezv
	PITCH_MIN o
	PITCH_SCALE p
	VOLUME_MIN m
	VOLUME_SCALE n
	guardian q
	canPlaySound ()Z s
	tick ()V q
net/minecraft/client/resources/sounds/MinecartSoundInstance ezw
	PITCH_DELTA q
	PITCH_MAX p
	PITCH_MIN o
	VOLUME_MAX n
	VOLUME_MIN m
	minecart r
	pitch s
	canPlaySound ()Z s
	canStartSilent ()Z r
	tick ()V q
net/minecraft/client/resources/sounds/RidingMinecartSoundInstance ezx
	VOLUME_MAX n
	VOLUME_MIN m
	minecart p
	player o
	underwaterSound q
	canPlaySound ()Z s
	canStartSilent ()Z r
	tick ()V q
net/minecraft/client/resources/sounds/SimpleSoundInstance ezy
	forAmbientAddition (Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/client/resources/sounds/SimpleSoundInstance; b
	forAmbientMood (Lnet/minecraft/sounds/SoundEvent;DDD)Lnet/minecraft/client/resources/sounds/SimpleSoundInstance; b
	forLocalAmbience (Lnet/minecraft/sounds/SoundEvent;FF)Lnet/minecraft/client/resources/sounds/SimpleSoundInstance; b
	forMusic (Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/client/resources/sounds/SimpleSoundInstance; a
	forRecord (Lnet/minecraft/sounds/SoundEvent;DDD)Lnet/minecraft/client/resources/sounds/SimpleSoundInstance; a
	forUI (Lnet/minecraft/sounds/SoundEvent;F)Lnet/minecraft/client/resources/sounds/SimpleSoundInstance; a
	forUI (Lnet/minecraft/sounds/SoundEvent;FF)Lnet/minecraft/client/resources/sounds/SimpleSoundInstance; a
net/minecraft/client/resources/sounds/Sound ezz
	attenuationDistance h
	location a
	pitch c
	preload g
	stream f
	type e
	volume b
	weight d
	getAttenuationDistance ()I j
	getLocation ()Lnet/minecraft/resources/ResourceLocation; a
	getPath ()Lnet/minecraft/resources/ResourceLocation; b
	getPitch ()F d
	getSound ()Ljava/lang/Object; k
	getSound ()Lnet/minecraft/client/resources/sounds/Sound; f
	getType ()Lnet/minecraft/client/resources/sounds/Sound$Type; g
	getVolume ()F c
	getWeight ()I e
	preloadIfRequired (Lnet/minecraft/client/sounds/SoundEngine;)V a
	shouldPreload ()Z i
	shouldStream ()Z h
net/minecraft/client/resources/sounds/Sound$Type ezz$a
	$VALUES d
	FILE a
	SOUND_EVENT b
	name c
	$values ()[Lnet/minecraft/client/resources/sounds/Sound$Type; a
	getByName (Ljava/lang/String;)Lnet/minecraft/client/resources/sounds/Sound$Type; a
net/minecraft/client/resources/sounds/SoundEventRegistration faa
	replace b
	sounds a
	subtitle c
	getSounds ()Ljava/util/List; a
	getSubtitle ()Ljava/lang/String; c
	isReplace ()Z b
net/minecraft/client/resources/sounds/SoundEventRegistrationSerializer fab
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/resources/sounds/SoundEventRegistration; a
	getSound (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/resources/sounds/Sound; b
	getSounds (Lcom/google/gson/JsonObject;)Ljava/util/List; a
	getType (Lcom/google/gson/JsonObject;Lnet/minecraft/client/resources/sounds/Sound$Type;)Lnet/minecraft/client/resources/sounds/Sound$Type; a
net/minecraft/client/resources/sounds/SoundInstance fac
	canPlaySound ()Z s
	canStartSilent ()Z r
	getAttenuation ()Lnet/minecraft/client/resources/sounds/SoundInstance$Attenuation; k
	getDelay ()I e
	getLocation ()Lnet/minecraft/resources/ResourceLocation; a
	getPitch ()F g
	getSound ()Lnet/minecraft/client/resources/sounds/Sound; b
	getSource ()Lnet/minecraft/sounds/SoundSource; c
	getVolume ()F f
	getX ()D h
	getY ()D i
	getZ ()D j
	isLooping ()Z d
	isRelative ()Z l
	resolve (Lnet/minecraft/client/sounds/SoundManager;)Lnet/minecraft/client/sounds/WeighedSoundEvents; a
net/minecraft/client/resources/sounds/SoundInstance$Attenuation fac$a
	$VALUES c
	LINEAR b
	NONE a
	$values ()[Lnet/minecraft/client/resources/sounds/SoundInstance$Attenuation; a
net/minecraft/client/resources/sounds/TickableSoundInstance fad
	isStopped ()Z m
	tick ()V q
net/minecraft/client/resources/sounds/UnderwaterAmbientSoundHandler fae
	CHANCE_PER_TICK a
	MINIMUM_TICK_DELAY d
	RARE_CHANCE_PER_TICK b
	ULTRA_RARE_CHANCE_PER_TICK c
	player e
	soundManager f
	tickDelay g
	tick ()V a
net/minecraft/client/resources/sounds/UnderwaterAmbientSoundInstances faf
net/minecraft/client/resources/sounds/UnderwaterAmbientSoundInstances$SubSound faf$a
	player m
	tick ()V q
net/minecraft/client/resources/sounds/UnderwaterAmbientSoundInstances$UnderwaterAmbientSoundInstance faf$b
	FADE_DURATION m
	fade o
	player n
	tick ()V q
net/minecraft/client/searchtree/MutableSearchTree fah
	add (Ljava/lang/Object;)V a
	clear ()V a
	refresh ()V b
net/minecraft/client/searchtree/ReloadableIdSearchTree fai
	contents d
	idGetter c
	namespaceTree a
	orderT e
	pathTree b
	add (Ljava/lang/Object;)V a
	clear ()V a
	comparePosition (Ljava/lang/Object;Ljava/lang/Object;)I a
	index (Ljava/lang/Object;)V b
	refresh ()V b
	search (Ljava/lang/String;)Ljava/util/List; a
net/minecraft/client/searchtree/ReloadableIdSearchTree$IntersectionIterator fai$a
	firstIterator a
	orderT c
	secondIterator b
net/minecraft/client/searchtree/ReloadableSearchTree faj
	filler d
	tree c
	index (Ljava/lang/Object;)V b
	refresh ()V b
	search (Ljava/lang/String;)Ljava/util/List; a
net/minecraft/client/searchtree/ReloadableSearchTree$MergingUniqueIterator faj$a
	firstIterator a
	orderT c
	secondIterator b
net/minecraft/client/searchtree/SearchRegistry fak
	CREATIVE_NAMES a
	CREATIVE_TAGS b
	RECIPE_COLLECTIONS c
	searchTrees d
	getTree (Lnet/minecraft/client/searchtree/SearchRegistry$Key;)Lnet/minecraft/client/searchtree/MutableSearchTree; a
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	register (Lnet/minecraft/client/searchtree/SearchRegistry$Key;Lnet/minecraft/client/searchtree/MutableSearchTree;)V a
net/minecraft/client/searchtree/SearchRegistry$Key fak$a
net/minecraft/client/searchtree/SearchTree fal
	search (Ljava/lang/String;)Ljava/util/List; a
net/minecraft/client/searchtree/SuffixArray fam
	DEBUG_ARRAY c
	DEBUG_COMPARISONS b
	END_OF_DATA f
	END_OF_TEXT_MARKER e
	LOGGER d
	chars g
	list a
	maxStringLength k
	offsets j
	suffixToT i
	wordStarts h
	add (Ljava/lang/Object;Ljava/lang/String;)V a
	compare (Ljava/lang/String;I)I a
	generate ()V a
	getString (I)Ljava/lang/String; a
	print ()V b
	search (Ljava/lang/String;)Ljava/util/List; a
net/minecraft/client/server/IntegratedPlayerList fao
	playerData a
	canPlayerLogin (Ljava/net/SocketAddress;Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/network/chat/Component; a
	getServer ()Lnet/minecraft/client/server/IntegratedServer; b
	getServer ()Lnet/minecraft/server/MinecraftServer; c
	getSingleplayerData ()Lnet/minecraft/nbt/CompoundTag; q
	save (Lnet/minecraft/server/level/ServerPlayer;)V b
net/minecraft/client/server/IntegratedServer fap
	CLIENT_VIEW_DISTANCE_OFFSET p
	LOGGER q
	lanPinger v
	minecraft r
	paused s
	publishedGameType u
	publishedPort t
	uuid w
	fillServerSystemReport (Lnet/minecraft/SystemReport;)Lnet/minecraft/SystemReport; a
	forceSynchronousWrites ()Z aU
	getForcedGameType ()Lnet/minecraft/world/level/GameType; aZ
	getFunctionCompilationLevel ()I i
	getModdedStatus ()Ljava/util/Optional; p
	getOperatorUserPermissionLevel ()I h
	getPort ()I N
	getRateLimitPacketsPerSecond ()I l
	getScaledTrackingDistance (I)I b
	getServerDirectory ()Ljava/io/File; C
	halt (Z)V a
	initServer ()Z e
	isCommandBlockEnabled ()Z n
	isDedicatedServer ()Z k
	isEpollEnabled ()Z m
	isPublished ()Z o
	isSingleplayerOwner (Lcom/mojang/authlib/GameProfile;)Z a
	isSnooperEnabled ()Z V
	onServerCrash (Lnet/minecraft/CrashReport;)V a
	populateSnooper (Lnet/minecraft/world/Snooper;)V a
	publishServer (Lnet/minecraft/world/level/GameType;ZI)Z a
	setDefaultGameType (Lnet/minecraft/world/level/GameType;)V a
	setUUID (Ljava/util/UUID;)V a
	shouldInformAdmins ()Z E_
	shouldRconBroadcast ()Z j
	stopServer ()V u
	tickPaused ()V a
	tickServer (Ljava/util/function/BooleanSupplier;)V a
net/minecraft/client/server/LanServer faq
	address b
	motd a
	pingTime c
	getAddress ()Ljava/lang/String; b
	getMotd ()Ljava/lang/String; a
	updatePingTime ()V c
net/minecraft/client/server/LanServerDetection far
	LOGGER b
	UNIQUE_THREAD_ID a
net/minecraft/client/server/LanServerDetection$LanServerDetector far$a
	pingGroup b
	serverList a
	socket c
net/minecraft/client/server/LanServerDetection$LanServerList far$b
	isDirty b
	servers a
	addServer (Ljava/lang/String;Ljava/net/InetAddress;)V a
	getServers ()Ljava/util/List; c
	isDirty ()Z a
	markClean ()V b
net/minecraft/client/server/LanServerPinger fas
	LOGGER d
	MULTICAST_GROUP a
	PING_INTERVAL e
	PING_PORT b
	UNIQUE_THREAD_ID c
	isRunning h
	motd f
	serverAddress i
	socket g
	createPingString (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; a
	parseAddress (Ljava/lang/String;)Ljava/lang/String; b
	parseMotd (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/client/sounds/AudioStream fau
	getFormat ()Ljavax/sound/sampled/AudioFormat; a
	read (I)Ljava/nio/ByteBuffer; a
net/minecraft/client/sounds/ChannelAccess fav
	channels a
	executor c
	library b
	clear ()V b
	createHandle (Lcom/mojang/blaze3d/audio/Library$Pool;)Ljava/util/concurrent/CompletableFuture; a
	executeOnChannels (Ljava/util/function/Consumer;)V a
	scheduleTick ()V a
net/minecraft/client/sounds/ChannelAccess$ChannelHandle fav$a
	channel b
	stopped c
	execute (Ljava/util/function/Consumer;)V a
	isStopped ()Z a
	release ()V b
net/minecraft/client/sounds/LoopingAudioStream faw
	bufferedInputStream c
	provider a
	stream b
	getFormat ()Ljavax/sound/sampled/AudioFormat; a
	read (I)Ljava/nio/ByteBuffer; a
net/minecraft/client/sounds/LoopingAudioStream$AudioStreamProvider faw$a
net/minecraft/client/sounds/LoopingAudioStream$NoCloseBuffer faw$b
net/minecraft/client/sounds/MusicManager fax
	STARTING_DELAY a
	currentMusic d
	minecraft c
	nextSongDelay e
	random b
	isPlayingMusic (Lnet/minecraft/sounds/Music;)Z b
	startPlaying (Lnet/minecraft/sounds/Music;)V a
	stopPlaying ()V b
	tick ()V a
net/minecraft/client/sounds/SoundBufferLibrary fay
	cache b
	resourceManager a
	clear ()V a
	getCompleteBuffer (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/concurrent/CompletableFuture; a
	getStream (Lnet/minecraft/resources/ResourceLocation;Z)Ljava/util/concurrent/CompletableFuture; a
	preload (Ljava/util/Collection;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/client/sounds/SoundEngine faz
	LOGGER c
	MARKER b
	MIN_SOURCE_LIFETIME h
	MISSING_SOUND a
	ONLY_WARN_ONCE i
	PITCH_MAX e
	PITCH_MIN d
	VOLUME_MAX g
	VOLUME_MIN f
	channelAccess q
	executor p
	instanceBySource t
	instanceToChannel s
	library m
	listener n
	listeners x
	loaded l
	options k
	preloadQueue z
	queuedSounds v
	queuedTickableSounds y
	soundBuffers o
	soundDeleteTime w
	soundManager j
	tickCount r
	tickingSounds u
	addEventListener (Lnet/minecraft/client/sounds/SoundEventListener;)V a
	calculatePitch (Lnet/minecraft/client/resources/sounds/SoundInstance;)F g
	calculateVolume (Lnet/minecraft/client/resources/sounds/SoundInstance;)F h
	destroy ()V b
	getDebugString ()Ljava/lang/String; f
	getVolume (Lnet/minecraft/sounds/SoundSource;)F a
	isActive (Lnet/minecraft/client/resources/sounds/SoundInstance;)Z b
	loadLibrary ()V g
	pause ()V d
	play (Lnet/minecraft/client/resources/sounds/SoundInstance;)V c
	playDelayed (Lnet/minecraft/client/resources/sounds/SoundInstance;I)V a
	queueTickingSound (Lnet/minecraft/client/resources/sounds/TickableSoundInstance;)V a
	reload ()V a
	removeEventListener (Lnet/minecraft/client/sounds/SoundEventListener;)V b
	requestPreload (Lnet/minecraft/client/resources/sounds/Sound;)V a
	requiresManualLooping (Lnet/minecraft/client/resources/sounds/SoundInstance;)Z d
	resume ()V e
	shouldLoopAutomatically (Lnet/minecraft/client/resources/sounds/SoundInstance;)Z f
	shouldLoopManually (Lnet/minecraft/client/resources/sounds/SoundInstance;)Z e
	stop (Lnet/minecraft/client/resources/sounds/SoundInstance;)V a
	stop (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/sounds/SoundSource;)V a
	stopAll ()V c
	tick (Z)V a
	tickNonPaused ()V h
	updateCategoryVolume (Lnet/minecraft/sounds/SoundSource;F)V a
	updateSource (Lnet/minecraft/client/Camera;)V a
net/minecraft/client/sounds/SoundEngineExecutor fba
	shutdown b
	thread a
	createThread ()Ljava/lang/Thread; b
	flush ()V a
	getRunningThread ()Ljava/lang/Thread; av
	run ()V c
	shouldRun (Ljava/lang/Runnable;)Z d
	waitForTasks ()V br
	wrapRunnable (Ljava/lang/Runnable;)Ljava/lang/Runnable; e
net/minecraft/client/sounds/SoundEventListener fbb
	onPlaySound (Lnet/minecraft/client/resources/sounds/SoundInstance;Lnet/minecraft/client/sounds/WeighedSoundEvents;)V a
net/minecraft/client/sounds/SoundManager fbc
	EMPTY_SOUND a
	GSON d
	LOGGER b
	SOUNDS_PATH c
	SOUND_EVENT_REGISTRATION_TYPE e
	registry f
	soundEngine g
	addListener (Lnet/minecraft/client/sounds/SoundEventListener;)V a
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply (Lnet/minecraft/client/sounds/SoundManager$Preparations;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	destroy ()V e
	getAvailableSounds ()Ljava/util/Collection; a
	getDebugString ()Ljava/lang/String; g
	getSoundEvent (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/sounds/WeighedSoundEvents; a
	isActive (Lnet/minecraft/client/resources/sounds/SoundInstance;)Z c
	pause ()V b
	play (Lnet/minecraft/client/resources/sounds/SoundInstance;)V a
	playDelayed (Lnet/minecraft/client/resources/sounds/SoundInstance;I)V a
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/lang/Object; b
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Lnet/minecraft/client/sounds/SoundManager$Preparations; a
	queueTickingSound (Lnet/minecraft/client/resources/sounds/TickableSoundInstance;)V a
	removeListener (Lnet/minecraft/client/sounds/SoundEventListener;)V b
	resume ()V f
	stop ()V d
	stop (Lnet/minecraft/client/resources/sounds/SoundInstance;)V b
	stop (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/sounds/SoundSource;)V a
	tick (Z)V a
	updateSource (Lnet/minecraft/client/Camera;)V a
	updateSourceVolume (Lnet/minecraft/sounds/SoundSource;F)V a
	validateSoundResource (Lnet/minecraft/client/resources/sounds/Sound;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/server/packs/resources/ResourceManager;)Z a
net/minecraft/client/sounds/SoundManager$Preparations fbc$a
	registry a
	apply (Ljava/util/Map;Lnet/minecraft/client/sounds/SoundEngine;)V a
	handleRegistration (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/resources/sounds/SoundEventRegistration;Lnet/minecraft/server/packs/resources/ResourceManager;)V a
net/minecraft/client/sounds/WeighedSoundEvents fbd
	list a
	location c
	random b
	subtitle d
	addSound (Lnet/minecraft/client/sounds/Weighted;)V a
	getResourceLocation ()Lnet/minecraft/resources/ResourceLocation; b
	getSound ()Ljava/lang/Object; k
	getSound ()Lnet/minecraft/client/resources/sounds/Sound; a
	getSubtitle ()Lnet/minecraft/network/chat/Component; c
	getWeight ()I e
	preloadIfRequired (Lnet/minecraft/client/sounds/SoundEngine;)V a
net/minecraft/client/sounds/Weighted fbe
	getSound ()Ljava/lang/Object; k
	getWeight ()I e
	preloadIfRequired (Lnet/minecraft/client/sounds/SoundEngine;)V a
net/minecraft/client/tutorial/BundleTutorial fbg
	options b
	toast c
	tutorial a
	clearToast ()V b
	onInventoryAction (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/ClickAction;)V a
	showToast ()V a
net/minecraft/client/tutorial/CompletedTutorialStepInstance fbh
net/minecraft/client/tutorial/CraftPlanksTutorialStep fbi
	CRAFT_DESCRIPTION c
	CRAFT_TITLE b
	HINT_DELAY a
	timeWaiting f
	toast e
	tutorial d
	clear ()V b
	hasCraftedPlanksPreviously (Lnet/minecraft/client/player/LocalPlayer;Lnet/minecraft/tags/Tag;)Z a
	onGetItem (Lnet/minecraft/world/item/ItemStack;)V a
	tick ()V a
net/minecraft/client/tutorial/FindTreeTutorialStepInstance fbj
	DESCRIPTION d
	HINT_DELAY a
	TITLE c
	TREE_BLOCKS b
	timeWaiting g
	toast f
	tutorial e
	clear ()V b
	hasPunchedTreesPreviously (Lnet/minecraft/client/player/LocalPlayer;)Z a
	onGetItem (Lnet/minecraft/world/item/ItemStack;)V a
	onLookAt (Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/world/phys/HitResult;)V a
	tick ()V a
net/minecraft/client/tutorial/MovementTutorialStepInstance fbk
	INCOMPLETE e
	LOOK_DESCRIPTION i
	LOOK_HINT_DELAY d
	LOOK_TITLE h
	MINIMUM_TIME_LOOKED b
	MINIMUM_TIME_MOVED a
	MOVE_DESCRIPTION g
	MOVE_HINT_DELAY c
	MOVE_TITLE f
	lookCompleted s
	lookToast l
	moveCompleted r
	moveToast k
	moved p
	timeLooked o
	timeMoved n
	timeWaiting m
	turned q
	tutorial j
	clear ()V b
	onInput (Lnet/minecraft/client/player/Input;)V a
	onMouse (DD)V a
	tick ()V a
net/minecraft/client/tutorial/OpenInventoryTutorialStep fbl
	DESCRIPTION c
	HINT_DELAY a
	TITLE b
	timeWaiting f
	toast e
	tutorial d
	clear ()V b
	onOpenInventory ()V c
	tick ()V a
net/minecraft/client/tutorial/PunchTreeTutorialStepInstance fbm
	DESCRIPTION c
	HINT_DELAY a
	TITLE b
	resetCount g
	timeWaiting f
	toast e
	tutorial d
	clear ()V b
	onDestroyBlock (Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;F)V a
	onGetItem (Lnet/minecraft/world/item/ItemStack;)V a
	tick ()V a
net/minecraft/client/tutorial/Tutorial fbn
	bundleTutorial d
	instance b
	minecraft a
	timedToasts c
	addTimedToast (Lnet/minecraft/client/gui/components/toasts/TutorialToast;I)V a
	getMinecraft ()Lnet/minecraft/client/Minecraft; e
	isSurvival ()Z f
	key (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
	onDestroyBlock (Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;F)V a
	onGetItem (Lnet/minecraft/world/item/ItemStack;)V a
	onInput (Lnet/minecraft/client/player/Input;)V a
	onInventoryAction (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/ClickAction;)V a
	onLookAt (Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/world/phys/HitResult;)V a
	onMouse (DD)V a
	onOpenInventory ()V a
	removeTimedToast (Lnet/minecraft/client/gui/components/toasts/TutorialToast;)V a
	setStep (Lnet/minecraft/client/tutorial/TutorialSteps;)V a
	start ()V c
	stop ()V b
	tick ()V d
net/minecraft/client/tutorial/Tutorial$TimedToast fbn$a
	durationTicks b
	progress c
	toast a
	updateProgress ()Z a
net/minecraft/client/tutorial/TutorialStepInstance fbo
	clear ()V b
	onDestroyBlock (Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;F)V a
	onGetItem (Lnet/minecraft/world/item/ItemStack;)V a
	onInput (Lnet/minecraft/client/player/Input;)V a
	onLookAt (Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/world/phys/HitResult;)V a
	onMouse (DD)V a
	onOpenInventory ()V c
	tick ()V a
net/minecraft/client/tutorial/TutorialSteps fbp
	$VALUES i
	CRAFT_PLANKS e
	FIND_TREE b
	MOVEMENT a
	NONE f
	OPEN_INVENTORY d
	PUNCH_TREE c
	constructor h
	name g
	$values ()[Lnet/minecraft/client/tutorial/TutorialSteps; b
	create (Lnet/minecraft/client/tutorial/Tutorial;)Lnet/minecraft/client/tutorial/TutorialStepInstance; a
	getByName (Ljava/lang/String;)Lnet/minecraft/client/tutorial/TutorialSteps; a
	getName ()Ljava/lang/String; a
net/minecraft/commands/BrigadierExceptions dh
	DISPATCHER_EXPECTED_ARGUMENT_SEPARATOR z
	DISPATCHER_PARSE_EXCEPTION A
	DISPATCHER_UNKNOWN_ARGUMENT y
	DISPATCHER_UNKNOWN_COMMAND x
	DOUBLE_TOO_BIG b
	DOUBLE_TOO_SMALL a
	FLOAT_TOO_BIG d
	FLOAT_TOO_SMALL c
	INTEGER_TOO_BIG f
	INTEGER_TOO_SMALL e
	LITERAL_INCORRECT i
	LONG_TOO_BIG h
	LONG_TOO_SMALL g
	READER_EXPECTED_BOOL v
	READER_EXPECTED_DOUBLE s
	READER_EXPECTED_END_OF_QUOTE k
	READER_EXPECTED_FLOAT u
	READER_EXPECTED_INT o
	READER_EXPECTED_LONG q
	READER_EXPECTED_START_OF_QUOTE j
	READER_EXPECTED_SYMBOL w
	READER_INVALID_BOOL m
	READER_INVALID_DOUBLE r
	READER_INVALID_ESCAPE l
	READER_INVALID_FLOAT t
	READER_INVALID_INT n
	READER_INVALID_LONG p
net/minecraft/commands/CommandFunction di
	entries a
	id b
	fromLines (Lnet/minecraft/resources/ResourceLocation;Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandSourceStack;Ljava/util/List;)Lnet/minecraft/commands/CommandFunction; a
	getEntries ()[Lnet/minecraft/commands/CommandFunction$Entry; b
	getId ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/commands/CommandFunction$CacheableFunction di$a
	NONE a
	function d
	id b
	resolved c
	get (Lnet/minecraft/server/ServerFunctionManager;)Ljava/util/Optional; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/commands/CommandFunction$CommandEntry di$b
	parse a
	execute (Lnet/minecraft/server/ServerFunctionManager;Lnet/minecraft/commands/CommandSourceStack;)I a
	execute (Lnet/minecraft/server/ServerFunctionManager;Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Deque;IILnet/minecraft/server/ServerFunctionManager$TraceCallbacks;)V a
net/minecraft/commands/CommandFunction$Entry di$c
	execute (Lnet/minecraft/server/ServerFunctionManager;Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Deque;IILnet/minecraft/server/ServerFunctionManager$TraceCallbacks;)V a
net/minecraft/commands/CommandFunction$FunctionEntry di$d
	function a
	execute (Lnet/minecraft/server/ServerFunctionManager;Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Deque;IILnet/minecraft/server/ServerFunctionManager$TraceCallbacks;)V a
net/minecraft/commands/CommandRuntimeException dj
	message a
	getComponent ()Lnet/minecraft/network/chat/Component; a
net/minecraft/commands/CommandSource dk
	NULL a
	acceptsFailure ()Z i_
	acceptsSuccess ()Z h_
	alwaysAccepts ()Z c_
	sendMessage (Lnet/minecraft/network/chat/Component;Ljava/util/UUID;)V a
	shouldInformAdmins ()Z E_
net/minecraft/commands/CommandSourceStack dl
	ERROR_NOT_ENTITY b
	ERROR_NOT_PLAYER a
	anchor m
	consumer l
	displayName h
	entity k
	level e
	permissionLevel f
	rotation n
	server i
	silent j
	source c
	textName g
	worldPosition d
	broadcastToAdmins (Lnet/minecraft/network/chat/Component;)V b
	customSuggestion (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; a
	facing (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor;)Lnet/minecraft/commands/CommandSourceStack; a
	facing (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/commands/CommandSourceStack; b
	getAllTeams ()Ljava/util/Collection; m
	getAnchor ()Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor; k
	getAvailableSoundEvents ()Ljava/util/Collection; n
	getDisplayName ()Lnet/minecraft/network/chat/Component; b
	getEntity ()Lnet/minecraft/world/entity/Entity; f
	getEntityOrException ()Lnet/minecraft/world/entity/Entity; g
	getLevel ()Lnet/minecraft/server/level/ServerLevel; e
	getOnlinePlayerNames ()Ljava/util/Collection; l
	getPlayerOrException ()Lnet/minecraft/server/level/ServerPlayer; h
	getPosition ()Lnet/minecraft/world/phys/Vec3; d
	getRecipeNames ()Ljava/util/stream/Stream; o
	getRotation ()Lnet/minecraft/world/phys/Vec2; i
	getServer ()Lnet/minecraft/server/MinecraftServer; j
	getTextName ()Ljava/lang/String; c
	hasPermission (I)Z c
	levels ()Ljava/util/Set; p
	onCommandComplete (Lcom/mojang/brigadier/context/CommandContext;ZI)V a
	registryAccess ()Lnet/minecraft/core/RegistryAccess; q
	sendFailure (Lnet/minecraft/network/chat/Component;)V a
	sendSuccess (Lnet/minecraft/network/chat/Component;Z)V a
	withAnchor (Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor;)Lnet/minecraft/commands/CommandSourceStack; a
	withCallback (Lcom/mojang/brigadier/ResultConsumer;)Lnet/minecraft/commands/CommandSourceStack; a
	withCallback (Lcom/mojang/brigadier/ResultConsumer;Ljava/util/function/BinaryOperator;)Lnet/minecraft/commands/CommandSourceStack; a
	withEntity (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/commands/CommandSourceStack; a
	withLevel (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/commands/CommandSourceStack; a
	withMaximumPermission (I)Lnet/minecraft/commands/CommandSourceStack; b
	withPermission (I)Lnet/minecraft/commands/CommandSourceStack; a
	withPosition (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/commands/CommandSourceStack; a
	withRotation (Lnet/minecraft/world/phys/Vec2;)Lnet/minecraft/commands/CommandSourceStack; a
	withSource (Lnet/minecraft/commands/CommandSource;)Lnet/minecraft/commands/CommandSourceStack; a
	withSuppressedOutput ()Lnet/minecraft/commands/CommandSourceStack; a
net/minecraft/commands/Commands dm
	LEVEL_ADMINS d
	LEVEL_ALL a
	LEVEL_GAMEMASTERS c
	LEVEL_MODERATORS b
	LEVEL_OWNERS e
	LOGGER f
	dispatcher g
	argument (Ljava/lang/String;Lcom/mojang/brigadier/arguments/ArgumentType;)Lcom/mojang/brigadier/builder/RequiredArgumentBuilder; a
	createValidator (Lnet/minecraft/commands/Commands$ParseFunction;)Ljava/util/function/Predicate; a
	fillUsableCommands (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/tree/CommandNode;Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Map;)V a
	getDispatcher ()Lcom/mojang/brigadier/CommandDispatcher; a
	getParseException (Lcom/mojang/brigadier/ParseResults;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; a
	literal (Ljava/lang/String;)Lcom/mojang/brigadier/builder/LiteralArgumentBuilder; a
	performCommand (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;)I a
	sendCommands (Lnet/minecraft/server/level/ServerPlayer;)V a
	validate ()V b
net/minecraft/commands/Commands$CommandSelection dm$a
	$VALUES f
	ALL a
	DEDICATED b
	INTEGRATED c
	includeDedicated e
	includeIntegrated d
	$values ()[Lnet/minecraft/commands/Commands$CommandSelection; a
net/minecraft/commands/Commands$ParseFunction dm$b
net/minecraft/commands/SharedSuggestionProvider dn
	customSuggestion (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; a
	filterResources (Ljava/lang/Iterable;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Consumer;)V a
	filterResources (Ljava/lang/Iterable;Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Consumer;)V a
	getAbsoluteCoordinates ()Ljava/util/Collection; t
	getAllTeams ()Ljava/util/Collection; m
	getAvailableSoundEvents ()Ljava/util/Collection; n
	getOnlinePlayerNames ()Ljava/util/Collection; l
	getRecipeNames ()Ljava/util/stream/Stream; o
	getRelevantCoordinates ()Ljava/util/Collection; s
	getSelectedEntities ()Ljava/util/Collection; r
	hasPermission (I)Z c
	levels ()Ljava/util/Set; p
	matchesSubStr (Ljava/lang/String;Ljava/lang/String;)Z a
	registryAccess ()Lnet/minecraft/core/RegistryAccess; q
	suggest (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; b
	suggest (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; b
	suggest (Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; b
	suggest ([Ljava/lang/String;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; a
	suggest2DCoordinates (Ljava/lang/String;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Predicate;)Ljava/util/concurrent/CompletableFuture; b
	suggestCoordinates (Ljava/lang/String;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Predicate;)Ljava/util/concurrent/CompletableFuture; a
	suggestResource (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; a
	suggestResource (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; a
	suggestResource (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; a
	suggestResource (Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; a
	suggestResource (Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/commands/SharedSuggestionProvider$TextCoordinates dn$a
	DEFAULT_GLOBAL b
	DEFAULT_LOCAL a
	x c
	y d
	z e
net/minecraft/commands/arguments/AngleArgument dp
	ERROR_INVALID_ANGLE b
	ERROR_NOT_COMPLETE a
	EXAMPLES c
	angle ()Lnet/minecraft/commands/arguments/AngleArgument; a
	getAngle (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)F a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/AngleArgument$SingleAngle; a
net/minecraft/commands/arguments/AngleArgument$SingleAngle dp$a
	angle a
	isRelative b
	getAngle (Lnet/minecraft/commands/CommandSourceStack;)F a
net/minecraft/commands/arguments/ColorArgument dq
	ERROR_INVALID_VALUE a
	EXAMPLES b
	color ()Lnet/minecraft/commands/arguments/ColorArgument; a
	getColor (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/ChatFormatting; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/ChatFormatting; a
net/minecraft/commands/arguments/ComponentArgument dr
	ERROR_INVALID_JSON a
	EXAMPLES b
	getComponent (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/network/chat/Component; a
	textComponent ()Lnet/minecraft/commands/arguments/ComponentArgument; a
net/minecraft/commands/arguments/CompoundTagArgument ds
	EXAMPLES a
	compoundTag ()Lnet/minecraft/commands/arguments/CompoundTagArgument; a
	getCompoundTag (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/nbt/CompoundTag; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/commands/arguments/DimensionArgument dt
	ERROR_INVALID_VALUE b
	EXAMPLES a
	dimension ()Lnet/minecraft/commands/arguments/DimensionArgument; a
	getDimension (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/level/ServerLevel; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/commands/arguments/EntityAnchorArgument du
	ERROR_INVALID b
	EXAMPLES a
	anchor ()Lnet/minecraft/commands/arguments/EntityAnchorArgument; a
	getAnchor (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor; a
net/minecraft/commands/arguments/EntityAnchorArgument$Anchor du$a
	$VALUES f
	BY_NAME c
	EYES b
	FEET a
	name d
	transform e
	$values ()[Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor; a
	apply (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/world/phys/Vec3; a
	apply (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/phys/Vec3; a
	getByName (Ljava/lang/String;)Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor; a
net/minecraft/commands/arguments/EntityArgument dv
	ERROR_NOT_SINGLE_ENTITY a
	ERROR_NOT_SINGLE_PLAYER b
	ERROR_ONLY_PLAYERS_ALLOWED c
	ERROR_SELECTORS_NOT_ALLOWED f
	EXAMPLES g
	FLAG_PLAYERS_ONLY i
	FLAG_SINGLE h
	NO_ENTITIES_FOUND d
	NO_PLAYERS_FOUND e
	playersOnly k
	single j
	entities ()Lnet/minecraft/commands/arguments/EntityArgument; b
	entity ()Lnet/minecraft/commands/arguments/EntityArgument; a
	getEntities (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; b
	getEntity (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/entity/Entity; a
	getOptionalEntities (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; c
	getOptionalPlayers (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; d
	getPlayer (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/level/ServerPlayer; e
	getPlayers (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; f
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/selector/EntitySelector; a
	player ()Lnet/minecraft/commands/arguments/EntityArgument; c
	players ()Lnet/minecraft/commands/arguments/EntityArgument; d
net/minecraft/commands/arguments/EntityArgument$Serializer dv$a
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/arguments/EntityArgument; a
	serializeToJson (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lnet/minecraft/commands/arguments/EntityArgument;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lnet/minecraft/commands/arguments/EntityArgument;Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/commands/arguments/EntitySummonArgument dw
	ERROR_UNKNOWN_ENTITY a
	EXAMPLES b
	getSummonableEntity (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	id ()Lnet/minecraft/commands/arguments/EntitySummonArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/resources/ResourceLocation; a
	verifyCanSummon (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/commands/arguments/GameProfileArgument dx
	ERROR_UNKNOWN_PLAYER a
	EXAMPLES b
	gameProfile ()Lnet/minecraft/commands/arguments/GameProfileArgument; a
	getGameProfiles (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/GameProfileArgument$Result; a
net/minecraft/commands/arguments/GameProfileArgument$Result dx$a
net/minecraft/commands/arguments/GameProfileArgument$SelectorResult dx$b
	selector a
net/minecraft/commands/arguments/ItemEnchantmentArgument dy
	ERROR_UNKNOWN_ENCHANTMENT a
	EXAMPLES b
	enchantment ()Lnet/minecraft/commands/arguments/ItemEnchantmentArgument; a
	getEnchantment (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/item/enchantment/Enchantment; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/world/item/enchantment/Enchantment; a
net/minecraft/commands/arguments/MessageArgument dz
	EXAMPLES a
	getMessage (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
	message ()Lnet/minecraft/commands/arguments/MessageArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/MessageArgument$Message; a
net/minecraft/commands/arguments/MessageArgument$Message dz$a
	parts b
	text a
	getParts ()[Lnet/minecraft/commands/arguments/MessageArgument$Part; b
	getText ()Ljava/lang/String; a
	parseText (Lcom/mojang/brigadier/StringReader;Z)Lnet/minecraft/commands/arguments/MessageArgument$Message; a
	toComponent (Lnet/minecraft/commands/CommandSourceStack;Z)Lnet/minecraft/network/chat/Component; a
net/minecraft/commands/arguments/MessageArgument$Part dz$b
	end b
	selector c
	start a
	getEnd ()I b
	getSelector ()Lnet/minecraft/commands/arguments/selector/EntitySelector; c
	getStart ()I a
	toComponent (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/network/chat/Component; a
net/minecraft/commands/arguments/MobEffectArgument ea
	ERROR_UNKNOWN_EFFECT a
	EXAMPLES b
	effect ()Lnet/minecraft/commands/arguments/MobEffectArgument; a
	getEffect (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/effect/MobEffect; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/world/effect/MobEffect; a
net/minecraft/commands/arguments/NbtPathArgument eb
	ERROR_INVALID_NODE a
	ERROR_NOTHING_FOUND b
	EXAMPLES c
	INDEX_MATCH_END e
	INDEX_MATCH_START d
	KEY_MATCH_END g
	KEY_MATCH_START f
	QUOTED_KEY_START h
	createTagPredicate (Lnet/minecraft/nbt/CompoundTag;)Ljava/util/function/Predicate; a
	getPath (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath; a
	isAllowedInUnquotedName (C)Z a
	nbtPath ()Lnet/minecraft/commands/arguments/NbtPathArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath; a
	parseNode (Lcom/mojang/brigadier/StringReader;Z)Lnet/minecraft/commands/arguments/NbtPathArgument$Node; a
	readObjectNode (Lcom/mojang/brigadier/StringReader;Ljava/lang/String;)Lnet/minecraft/commands/arguments/NbtPathArgument$Node; a
	readUnquotedName (Lcom/mojang/brigadier/StringReader;)Ljava/lang/String; b
net/minecraft/commands/arguments/NbtPathArgument$AllElementsNode eb$a
	INSTANCE a
	createPreferredParentTag ()Lnet/minecraft/nbt/Tag; a
	getOrCreateTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;Ljava/util/List;)V a
	getTag (Lnet/minecraft/nbt/Tag;Ljava/util/List;)V a
	removeTag (Lnet/minecraft/nbt/Tag;)I a
	setTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;)I a
net/minecraft/commands/arguments/NbtPathArgument$CompoundChildNode eb$b
	name a
	createPreferredParentTag ()Lnet/minecraft/nbt/Tag; a
	getOrCreateTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;Ljava/util/List;)V a
	getTag (Lnet/minecraft/nbt/Tag;Ljava/util/List;)V a
	removeTag (Lnet/minecraft/nbt/Tag;)I a
	setTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;)I a
net/minecraft/commands/arguments/NbtPathArgument$IndexedElementNode eb$c
	index a
	createPreferredParentTag ()Lnet/minecraft/nbt/Tag; a
	getOrCreateTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;Ljava/util/List;)V a
	getTag (Lnet/minecraft/nbt/Tag;Ljava/util/List;)V a
	removeTag (Lnet/minecraft/nbt/Tag;)I a
	setTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;)I a
net/minecraft/commands/arguments/NbtPathArgument$MatchElementNode eb$d
	pattern a
	predicate b
	createPreferredParentTag ()Lnet/minecraft/nbt/Tag; a
	getOrCreateTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;Ljava/util/List;)V a
	getTag (Lnet/minecraft/nbt/Tag;Ljava/util/List;)V a
	removeTag (Lnet/minecraft/nbt/Tag;)I a
	setTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;)I a
net/minecraft/commands/arguments/NbtPathArgument$MatchObjectNode eb$e
	name a
	pattern b
	predicate c
	createPreferredParentTag ()Lnet/minecraft/nbt/Tag; a
	getOrCreateTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;Ljava/util/List;)V a
	getTag (Lnet/minecraft/nbt/Tag;Ljava/util/List;)V a
	removeTag (Lnet/minecraft/nbt/Tag;)I a
	setTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;)I a
net/minecraft/commands/arguments/NbtPathArgument$MatchRootObjectNode eb$f
	predicate a
	createPreferredParentTag ()Lnet/minecraft/nbt/Tag; a
	getOrCreateTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;Ljava/util/List;)V a
	getTag (Lnet/minecraft/nbt/Tag;Ljava/util/List;)V a
	removeTag (Lnet/minecraft/nbt/Tag;)I a
	setTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;)I a
net/minecraft/commands/arguments/NbtPathArgument$NbtPath eb$g
	nodeToOriginalPosition b
	nodes c
	original a
	apply (Ljava/util/List;Ljava/util/function/Function;)I a
	countMatching (Lnet/minecraft/nbt/Tag;)I b
	createNotFoundException (Lnet/minecraft/commands/arguments/NbtPathArgument$Node;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; a
	get (Lnet/minecraft/nbt/Tag;)Ljava/util/List; a
	getOrCreate (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;)Ljava/util/List; a
	getOrCreateParents (Lnet/minecraft/nbt/Tag;)Ljava/util/List; d
	remove (Lnet/minecraft/nbt/Tag;)I c
	set (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;)I b
	set (Lnet/minecraft/nbt/Tag;Lnet/minecraft/nbt/Tag;)I a
net/minecraft/commands/arguments/NbtPathArgument$Node eb$h
	collect (Ljava/util/List;Ljava/util/function/BiConsumer;)Ljava/util/List; a
	createPreferredParentTag ()Lnet/minecraft/nbt/Tag; a
	get (Ljava/util/List;)Ljava/util/List; a
	getOrCreate (Ljava/util/List;Ljava/util/function/Supplier;)Ljava/util/List; a
	getOrCreateTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;Ljava/util/List;)V a
	getTag (Lnet/minecraft/nbt/Tag;Ljava/util/List;)V a
	removeTag (Lnet/minecraft/nbt/Tag;)I a
	setTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;)I a
net/minecraft/commands/arguments/NbtTagArgument ec
	EXAMPLES a
	getNbtTag (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/nbt/Tag; a
	nbtTag ()Lnet/minecraft/commands/arguments/NbtTagArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/nbt/Tag; a
net/minecraft/commands/arguments/ObjectiveArgument ed
	ERROR_OBJECTIVE_NAME_TOO_LONG a
	ERROR_OBJECTIVE_NOT_FOUND c
	ERROR_OBJECTIVE_READ_ONLY d
	EXAMPLES b
	getObjective (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/scores/Objective; a
	getWritableObjective (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/scores/Objective; b
	objective ()Lnet/minecraft/commands/arguments/ObjectiveArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/String; a
net/minecraft/commands/arguments/ObjectiveCriteriaArgument ee
	ERROR_INVALID_VALUE a
	EXAMPLES b
	criteria ()Lnet/minecraft/commands/arguments/ObjectiveCriteriaArgument; a
	getCriteria (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/scores/criteria/ObjectiveCriteria; a
	getName (Lnet/minecraft/stats/StatType;Ljava/lang/Object;)Ljava/lang/String; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/world/scores/criteria/ObjectiveCriteria; a
net/minecraft/commands/arguments/OperationArgument ef
	ERROR_DIVIDE_BY_ZERO c
	ERROR_INVALID_OPERATION b
	EXAMPLES a
	getOperation (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/commands/arguments/OperationArgument$Operation; a
	getOperation (Ljava/lang/String;)Lnet/minecraft/commands/arguments/OperationArgument$Operation; a
	getSimpleOperation (Ljava/lang/String;)Lnet/minecraft/commands/arguments/OperationArgument$SimpleOperation; b
	operation ()Lnet/minecraft/commands/arguments/OperationArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/OperationArgument$Operation; a
net/minecraft/commands/arguments/OperationArgument$Operation ef$a
net/minecraft/commands/arguments/OperationArgument$SimpleOperation ef$b
net/minecraft/commands/arguments/ParticleArgument eg
	ERROR_UNKNOWN_PARTICLE a
	EXAMPLES b
	getParticle (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/core/particles/ParticleOptions; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/core/particles/ParticleOptions; a
	particle ()Lnet/minecraft/commands/arguments/ParticleArgument; a
	readParticle (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/core/particles/ParticleOptions; b
	readParticle (Lcom/mojang/brigadier/StringReader;Lnet/minecraft/core/particles/ParticleType;)Lnet/minecraft/core/particles/ParticleOptions; a
net/minecraft/commands/arguments/RangeArgument eh
	floatRange ()Lnet/minecraft/commands/arguments/RangeArgument$Floats; b
	intRange ()Lnet/minecraft/commands/arguments/RangeArgument$Ints; a
net/minecraft/commands/arguments/RangeArgument$Floats eh$a
	EXAMPLES a
	getRange (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; a
net/minecraft/commands/arguments/RangeArgument$Ints eh$b
	EXAMPLES a
	getRange (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; a
net/minecraft/commands/arguments/ResourceLocationArgument ei
	ERROR_UNKNOWN_ADVANCEMENT b
	ERROR_UNKNOWN_ATTRIBUTE e
	ERROR_UNKNOWN_ITEM_MODIFIER f
	ERROR_UNKNOWN_PREDICATE d
	ERROR_UNKNOWN_RECIPE c
	EXAMPLES a
	getAdvancement (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/advancements/Advancement; a
	getAttribute (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/entity/ai/attributes/Attribute; e
	getId (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; f
	getItemModifier (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; d
	getPredicate (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition; c
	getRecipe (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/item/crafting/Recipe; b
	id ()Lnet/minecraft/commands/arguments/ResourceLocationArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/commands/arguments/ScoreHolderArgument ej
	ERROR_NO_RESULTS c
	EXAMPLES b
	FLAG_MULTIPLE d
	SUGGEST_SCORE_HOLDERS a
	multiple e
	getName (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/lang/String; a
	getNames (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; b
	getNames (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Ljava/util/function/Supplier;)Ljava/util/Collection; a
	getNamesWithDefaultWildcard (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; c
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/ScoreHolderArgument$Result; a
	scoreHolder ()Lnet/minecraft/commands/arguments/ScoreHolderArgument; a
	scoreHolders ()Lnet/minecraft/commands/arguments/ScoreHolderArgument; b
net/minecraft/commands/arguments/ScoreHolderArgument$Result ej$a
net/minecraft/commands/arguments/ScoreHolderArgument$SelectorResult ej$b
	selector a
net/minecraft/commands/arguments/ScoreHolderArgument$Serializer ej$c
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/arguments/ScoreHolderArgument; a
	serializeToJson (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lnet/minecraft/commands/arguments/ScoreHolderArgument;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lnet/minecraft/commands/arguments/ScoreHolderArgument;Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/commands/arguments/ScoreboardSlotArgument ek
	ERROR_INVALID_VALUE a
	EXAMPLES b
	displaySlot ()Lnet/minecraft/commands/arguments/ScoreboardSlotArgument; a
	getDisplaySlot (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)I a
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Integer; a
net/minecraft/commands/arguments/SlotArgument el
	ERROR_UNKNOWN_SLOT b
	EXAMPLES a
	SLOTS c
	getSlot (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)I a
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Integer; a
	slot ()Lnet/minecraft/commands/arguments/SlotArgument; a
net/minecraft/commands/arguments/TeamArgument em
	ERROR_TEAM_NOT_FOUND b
	EXAMPLES a
	getTeam (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/scores/PlayerTeam; a
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/String; a
	team ()Lnet/minecraft/commands/arguments/TeamArgument; a
net/minecraft/commands/arguments/TimeArgument en
	ERROR_INVALID_TICK_COUNT c
	ERROR_INVALID_UNIT b
	EXAMPLES a
	UNITS d
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Integer; a
	time ()Lnet/minecraft/commands/arguments/TimeArgument; a
net/minecraft/commands/arguments/UuidArgument eo
	ALLOWED_CHARACTERS c
	ERROR_INVALID_UUID a
	EXAMPLES b
	getUuid (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/UUID; a
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/util/UUID; a
	uuid ()Lnet/minecraft/commands/arguments/UuidArgument; a
net/minecraft/commands/arguments/blocks/BlockInput ep
	properties b
	state a
	tag c
	getDefinedProperties ()Ljava/util/Set; b
	getState ()Lnet/minecraft/world/level/block/state/BlockState; a
	place (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;I)Z a
	test (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z a
	test (Lnet/minecraft/world/level/block/state/pattern/BlockInWorld;)Z a
net/minecraft/commands/arguments/blocks/BlockPredicateArgument eq
	ERROR_UNKNOWN_TAG b
	EXAMPLES a
	blockPredicate ()Lnet/minecraft/commands/arguments/blocks/BlockPredicateArgument; a
	getBlockPredicate (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/function/Predicate; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/blocks/BlockPredicateArgument$Result; a
net/minecraft/commands/arguments/blocks/BlockPredicateArgument$BlockPredicate eq$a
	nbt c
	properties b
	state a
	test (Lnet/minecraft/world/level/block/state/pattern/BlockInWorld;)Z a
net/minecraft/commands/arguments/blocks/BlockPredicateArgument$Result eq$b
net/minecraft/commands/arguments/blocks/BlockPredicateArgument$TagPredicate eq$c
	nbt b
	tag a
	vagueProperties c
	test (Lnet/minecraft/world/level/block/state/pattern/BlockInWorld;)Z a
net/minecraft/commands/arguments/blocks/BlockStateArgument er
	EXAMPLES a
	block ()Lnet/minecraft/commands/arguments/blocks/BlockStateArgument; a
	getBlock (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/commands/arguments/blocks/BlockInput; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/blocks/BlockInput; a
net/minecraft/commands/arguments/blocks/BlockStateParser es
	ERROR_DUPLICATE_PROPERTY d
	ERROR_EXPECTED_END_OF_PROPERTIES g
	ERROR_EXPECTED_VALUE f
	ERROR_INVALID_VALUE e
	ERROR_NO_TAGS_ALLOWED a
	ERROR_UNKNOWN_BLOCK b
	ERROR_UNKNOWN_PROPERTY c
	SUGGEST_NOTHING n
	SYNTAX_END_PROPERTIES j
	SYNTAX_EQUALS k
	SYNTAX_PROPERTY_SEPARATOR l
	SYNTAX_START_NBT i
	SYNTAX_START_PROPERTIES h
	SYNTAX_TAG m
	definition t
	forTesting p
	id s
	nbt v
	properties q
	reader o
	state u
	suggestions y
	tag w
	tagCursor x
	vagueProperties r
	addSuggestions (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/world/level/block/state/properties/Property;)Lcom/mojang/brigadier/suggestion/SuggestionsBuilder; a
	appendProperty (Ljava/lang/StringBuilder;Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)V a
	fillSuggestions (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; a
	getNbt ()Lnet/minecraft/nbt/CompoundTag; c
	getProperties ()Ljava/util/Map; a
	getState ()Lnet/minecraft/world/level/block/state/BlockState; b
	getTag ()Lnet/minecraft/resources/ResourceLocation; d
	getVagueProperties ()Ljava/util/Map; j
	hasBlockEntity (Lnet/minecraft/tags/TagCollection;)Z a
	parse (Z)Lnet/minecraft/commands/arguments/blocks/BlockStateParser; a
	readBlock ()V e
	readNbt ()V i
	readProperties ()V g
	readTag ()V f
	readVagueProperties ()V h
	serialize (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/lang/String; a
	setValue (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/String;I)V a
	suggestBlockIdOrTag (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; l
	suggestEquals (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; g
	suggestNextPropertyOrEnd (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; h
	suggestOpenNbt (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; f
	suggestOpenPropertiesOrNbt (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; j
	suggestOpenVaguePropertiesOrNbt (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; i
	suggestPropertyName (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; d
	suggestPropertyNameOrEnd (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; b
	suggestTag (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; k
	suggestVaguePropertyName (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; e
	suggestVaguePropertyNameOrEnd (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; c
	suggestVaguePropertyValue (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/commands/arguments/coordinates/BlockPosArgument eu
	ERROR_NOT_LOADED a
	ERROR_OUT_OF_BOUNDS c
	ERROR_OUT_OF_WORLD b
	EXAMPLES d
	blockPos ()Lnet/minecraft/commands/arguments/coordinates/BlockPosArgument; a
	getLoadedBlockPos (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/core/BlockPos; a
	getSpawnablePos (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/core/BlockPos; b
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/Coordinates; a
net/minecraft/commands/arguments/coordinates/ColumnPosArgument ev
	ERROR_NOT_COMPLETE a
	EXAMPLES b
	columnPos ()Lnet/minecraft/commands/arguments/coordinates/ColumnPosArgument; a
	getColumnPos (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/level/ColumnPos; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/Coordinates; a
net/minecraft/commands/arguments/coordinates/Coordinates ew
	getBlockPos (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/core/BlockPos; c
	getPosition (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/world/phys/Vec3; a
	getRotation (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/world/phys/Vec2; b
	isXRelative ()Z a
	isYRelative ()Z b
	isZRelative ()Z c
net/minecraft/commands/arguments/coordinates/LocalCoordinates ex
	PREFIX_LOCAL_COORDINATE a
	forwards d
	left b
	up c
	getPosition (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/world/phys/Vec3; a
	getRotation (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/world/phys/Vec2; b
	isXRelative ()Z a
	isYRelative ()Z b
	isZRelative ()Z c
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/LocalCoordinates; a
	readDouble (Lcom/mojang/brigadier/StringReader;I)D a
net/minecraft/commands/arguments/coordinates/RotationArgument ey
	ERROR_NOT_COMPLETE a
	EXAMPLES b
	getRotation (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/commands/arguments/coordinates/Coordinates; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/Coordinates; a
	rotation ()Lnet/minecraft/commands/arguments/coordinates/RotationArgument; a
net/minecraft/commands/arguments/coordinates/SwizzleArgument ez
	ERROR_INVALID b
	EXAMPLES a
	getSwizzle (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/EnumSet; a
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/util/EnumSet; a
	swizzle ()Lnet/minecraft/commands/arguments/coordinates/SwizzleArgument; a
net/minecraft/commands/arguments/coordinates/Vec2Argument fa
	ERROR_NOT_COMPLETE a
	EXAMPLES b
	centerCorrect c
	getVec2 (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/phys/Vec2; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/Coordinates; a
	vec2 ()Lnet/minecraft/commands/arguments/coordinates/Vec2Argument; a
	vec2 (Z)Lnet/minecraft/commands/arguments/coordinates/Vec2Argument; a
net/minecraft/commands/arguments/coordinates/Vec3Argument fb
	ERROR_MIXED_TYPE b
	ERROR_NOT_COMPLETE a
	EXAMPLES c
	centerCorrect d
	getCoordinates (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/commands/arguments/coordinates/Coordinates; b
	getVec3 (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/phys/Vec3; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/Coordinates; a
	vec3 ()Lnet/minecraft/commands/arguments/coordinates/Vec3Argument; a
	vec3 (Z)Lnet/minecraft/commands/arguments/coordinates/Vec3Argument; a
net/minecraft/commands/arguments/coordinates/WorldCoordinate fc
	ERROR_EXPECTED_DOUBLE a
	ERROR_EXPECTED_INT b
	PREFIX_RELATIVE c
	relative d
	value e
	get (D)D a
	isRelative ()Z a
	isRelative (Lcom/mojang/brigadier/StringReader;)Z b
	parseDouble (Lcom/mojang/brigadier/StringReader;Z)Lnet/minecraft/commands/arguments/coordinates/WorldCoordinate; a
	parseInt (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/WorldCoordinate; a
net/minecraft/commands/arguments/coordinates/WorldCoordinates fd
	x a
	y b
	z c
	absolute (DDD)Lnet/minecraft/commands/arguments/coordinates/WorldCoordinates; a
	absolute (Lnet/minecraft/world/phys/Vec2;)Lnet/minecraft/commands/arguments/coordinates/WorldCoordinates; a
	current ()Lnet/minecraft/commands/arguments/coordinates/WorldCoordinates; d
	getPosition (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/world/phys/Vec3; a
	getRotation (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/world/phys/Vec2; b
	isXRelative ()Z a
	isYRelative ()Z b
	isZRelative ()Z c
	parseDouble (Lcom/mojang/brigadier/StringReader;Z)Lnet/minecraft/commands/arguments/coordinates/WorldCoordinates; a
	parseInt (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/WorldCoordinates; a
net/minecraft/commands/arguments/item/FunctionArgument ff
	ERROR_UNKNOWN_FUNCTION c
	ERROR_UNKNOWN_TAG b
	EXAMPLES a
	functions ()Lnet/minecraft/commands/arguments/item/FunctionArgument; a
	getFunction (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/commands/CommandFunction; a
	getFunctionOrTag (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair; b
	getFunctionTag (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/tags/Tag; b
	getFunctions (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/item/FunctionArgument$Result; a
net/minecraft/commands/arguments/item/FunctionArgument$Result ff$a
	create (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; a
	unwrap (Lcom/mojang/brigadier/context/CommandContext;)Lcom/mojang/datafixers/util/Pair; b
net/minecraft/commands/arguments/item/ItemArgument fg
	EXAMPLES a
	getItem (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/commands/arguments/item/ItemInput; a
	item ()Lnet/minecraft/commands/arguments/item/ItemArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/item/ItemInput; a
net/minecraft/commands/arguments/item/ItemInput fh
	ERROR_STACK_TOO_BIG a
	item b
	tag c
	createItemStack (IZ)Lnet/minecraft/world/item/ItemStack; a
	getItem ()Lnet/minecraft/world/item/Item; a
	serialize ()Ljava/lang/String; b
	test (Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/commands/arguments/item/ItemParser fi
	ERROR_NO_TAGS_ALLOWED a
	ERROR_UNKNOWN_ITEM b
	SUGGEST_NOTHING e
	SYNTAX_START_NBT c
	SYNTAX_TAG d
	forTesting g
	item h
	nbt i
	reader f
	suggestions l
	tag j
	tagCursor k
	fillSuggestions (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; a
	getItem ()Lnet/minecraft/world/item/Item; a
	getNbt ()Lnet/minecraft/nbt/CompoundTag; b
	getTag ()Lnet/minecraft/resources/ResourceLocation; c
	parse ()Lnet/minecraft/commands/arguments/item/ItemParser; g
	readItem ()V d
	readNbt ()V f
	readTag ()V e
	suggestItemIdOrTag (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; d
	suggestOpenNbt (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; b
	suggestTag (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; c
net/minecraft/commands/arguments/item/ItemPredicateArgument fj
	ERROR_UNKNOWN_TAG b
	EXAMPLES a
	getItemPredicate (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/function/Predicate; a
	itemPredicate ()Lnet/minecraft/commands/arguments/item/ItemPredicateArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/item/ItemPredicateArgument$Result; a
net/minecraft/commands/arguments/item/ItemPredicateArgument$ItemPredicate fj$a
	item a
	nbt b
	test (Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/commands/arguments/item/ItemPredicateArgument$Result fj$b
net/minecraft/commands/arguments/item/ItemPredicateArgument$TagPredicate fj$c
	nbt b
	tag a
	test (Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/commands/arguments/selector/EntitySelector fm
	ANY_TYPE b
	INFINITE a
	aabb i
	currentEntity k
	entityUUID m
	includesEntities d
	maxResults c
	order j
	playerName l
	position h
	predicate f
	range g
	type n
	usesSelector o
	worldLimited e
	addEntities (Ljava/util/List;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;Ljava/util/function/Predicate;)V a
	checkPermissions (Lnet/minecraft/commands/CommandSourceStack;)V e
	findEntities (Lnet/minecraft/commands/CommandSourceStack;)Ljava/util/List; b
	findPlayers (Lnet/minecraft/commands/CommandSourceStack;)Ljava/util/List; d
	findSingleEntity (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/world/entity/Entity; a
	findSinglePlayer (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/server/level/ServerPlayer; c
	getMaxResults ()I a
	getPredicate (Lnet/minecraft/world/phys/Vec3;)Ljava/util/function/Predicate; a
	includesEntities ()Z b
	isSelfSelector ()Z c
	isWorldLimited ()Z d
	joinNames (Ljava/util/List;)Lnet/minecraft/network/chat/Component; a
	sortAndLimit (Lnet/minecraft/world/phys/Vec3;Ljava/util/List;)Ljava/util/List; a
	usesSelector ()Z e
net/minecraft/commands/arguments/selector/EntitySelectorParser fn
	ERROR_EXPECTED_END_OF_OPTIONS i
	ERROR_EXPECTED_OPTION_VALUE j
	ERROR_INVALID_NAME_OR_UUID e
	ERROR_MISSING_SELECTOR_TYPE h
	ERROR_SELECTORS_NOT_ALLOWED g
	ERROR_UNKNOWN_SELECTOR_TYPE f
	ORDER_ARBITRARY k
	ORDER_FURTHEST m
	ORDER_NEAREST l
	ORDER_RANDOM n
	SELECTOR_ALL_ENTITIES w
	SELECTOR_ALL_PLAYERS t
	SELECTOR_CURRENT_ENTITY v
	SELECTOR_NEAREST_PLAYER s
	SELECTOR_RANDOM_PLAYERS u
	SUGGEST_NOTHING o
	SYNTAX_NOT c
	SYNTAX_OPTIONS_END q
	SYNTAX_OPTIONS_KEY_VALUE_SEPARATOR b
	SYNTAX_OPTIONS_SEPARATOR r
	SYNTAX_OPTIONS_START p
	SYNTAX_SELECTOR_START a
	SYNTAX_TAG d
	allowSelectors y
	currentEntity O
	deltaX H
	deltaY I
	deltaZ J
	distance C
	entityUUID R
	hasAdvancements ae
	hasGamemodeEquals X
	hasGamemodeNotEquals Y
	hasNameEquals T
	hasNameNotEquals U
	hasScores ad
	hasTeamEquals Z
	hasTeamNotEquals aa
	includesEntities A
	isLimited V
	isSorted W
	level D
	maxResults z
	order N
	playerName P
	predicate M
	reader x
	rotX K
	rotY L
	startPosition Q
	suggestions S
	type ab
	typeInverse ac
	usesSelectors af
	worldLimited B
	x E
	y F
	z G
	addPredicate (Ljava/util/function/Predicate;)V a
	createAabb (DDD)Lnet/minecraft/world/phys/AABB; a
	createRotationPredicate (Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds;Ljava/util/function/ToDoubleFunction;)Ljava/util/function/Predicate; a
	fillSelectorSuggestions (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V a
	fillSuggestions (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; a
	finalizePredicates ()V I
	getDeltaX ()Ljava/lang/Double; p
	getDeltaY ()Ljava/lang/Double; q
	getDeltaZ ()Ljava/lang/Double; r
	getDistance ()Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; i
	getLevel ()Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; j
	getOrder ()Ljava/util/function/BiConsumer; s
	getReader ()Lcom/mojang/brigadier/StringReader; g
	getRotX ()Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds; k
	getRotY ()Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds; l
	getSelector ()Lnet/minecraft/commands/arguments/selector/EntitySelector; a
	getX ()Ljava/lang/Double; m
	getY ()Ljava/lang/Double; n
	getZ ()Ljava/lang/Double; o
	hasAdvancements ()Z H
	hasGamemodeEquals ()Z z
	hasGamemodeNotEquals ()Z A
	hasNameEquals ()Z v
	hasNameNotEquals ()Z w
	hasScores ()Z G
	hasTeamEquals ()Z B
	hasTeamNotEquals ()Z C
	isCurrentEntity ()Z u
	isLimited ()Z x
	isSorted ()Z y
	isTag ()Z f
	isTypeLimited ()Z E
	isTypeLimitedInversely ()Z F
	limitToType (Lnet/minecraft/world/entity/EntityType;)V a
	parse ()Lnet/minecraft/commands/arguments/selector/EntitySelector; t
	parseNameOrUUID ()V c
	parseOptions ()V d
	parseSelector ()V b
	setDeltaX (D)V d
	setDeltaY (D)V e
	setDeltaZ (D)V f
	setDistance (Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles;)V a
	setHasAdvancements (Z)V k
	setHasGamemodeEquals (Z)V f
	setHasGamemodeNotEquals (Z)V g
	setHasNameEquals (Z)V b
	setHasNameNotEquals (Z)V c
	setHasScores (Z)V j
	setHasTeamEquals (Z)V h
	setHasTeamNotEquals (Z)V i
	setIncludesEntities (Z)V a
	setLevel (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)V a
	setLimited (Z)V d
	setMaxResults (I)V a
	setOrder (Ljava/util/function/BiConsumer;)V a
	setRotX (Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds;)V a
	setRotY (Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds;)V b
	setSorted (Z)V e
	setSuggestions (Ljava/util/function/BiFunction;)V a
	setTypeLimitedInversely ()V D
	setWorldLimited ()V h
	setX (D)V a
	setY (D)V b
	setZ (D)V c
	shouldInvertValue ()Z e
	suggestEquals (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; i
	suggestName (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; c
	suggestNameOrSelector (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; b
	suggestOpenOptions (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; e
	suggestOptionsKey (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; g
	suggestOptionsKeyOrClose (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; f
	suggestOptionsNextOrClose (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; h
	suggestSelector (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; d
net/minecraft/commands/arguments/selector/options/EntitySelectorOptions fo
	ERROR_ENTITY_TYPE_INVALID h
	ERROR_GAME_MODE_INVALID g
	ERROR_INAPPLICABLE_OPTION b
	ERROR_LEVEL_NEGATIVE d
	ERROR_LIMIT_TOO_SMALL e
	ERROR_RANGE_NEGATIVE c
	ERROR_SORT_UNKNOWN f
	ERROR_UNKNOWN_OPTION a
	OPTIONS i
	bootStrap ()V a
	get (Lnet/minecraft/commands/arguments/selector/EntitySelectorParser;Ljava/lang/String;I)Lnet/minecraft/commands/arguments/selector/options/EntitySelectorOptions$Modifier; a
	register (Ljava/lang/String;Lnet/minecraft/commands/arguments/selector/options/EntitySelectorOptions$Modifier;Ljava/util/function/Predicate;Lnet/minecraft/network/chat/Component;)V a
	suggestNames (Lnet/minecraft/commands/arguments/selector/EntitySelectorParser;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V a
net/minecraft/commands/arguments/selector/options/EntitySelectorOptions$Modifier fo$a
net/minecraft/commands/arguments/selector/options/EntitySelectorOptions$Option fo$b
	description c
	modifier a
	predicate b
net/minecraft/commands/synchronization/ArgumentSerializer fs
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	serializeToJson (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/commands/synchronization/ArgumentTypes ft
	BY_CLASS b
	BY_NAME c
	LOGGER a
	bootStrap ()V a
	deserialize (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/brigadier/arguments/ArgumentType; a
	findUsedArgumentTypes (Lcom/mojang/brigadier/tree/CommandNode;)Ljava/util/Set; a
	findUsedArgumentTypes (Lcom/mojang/brigadier/tree/CommandNode;Ljava/util/Set;Ljava/util/Set;)V a
	get (Lcom/mojang/brigadier/arguments/ArgumentType;)Lnet/minecraft/commands/synchronization/ArgumentTypes$Entry; b
	get (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/commands/synchronization/ArgumentTypes$Entry; a
	isTypeRegistered (Lcom/mojang/brigadier/arguments/ArgumentType;)Z a
	register (Ljava/lang/String;Ljava/lang/Class;Lnet/minecraft/commands/synchronization/ArgumentSerializer;)V a
	serialize (Lnet/minecraft/network/FriendlyByteBuf;Lcom/mojang/brigadier/arguments/ArgumentType;)V a
	serializeNodeToJson (Lcom/mojang/brigadier/CommandDispatcher;Lcom/mojang/brigadier/tree/CommandNode;)Lcom/google/gson/JsonObject; a
	serializeToJson (Lcom/google/gson/JsonObject;Lcom/mojang/brigadier/arguments/ArgumentType;)V a
net/minecraft/commands/synchronization/ArgumentTypes$Entry ft$a
	clazz a
	name c
	serializer b
net/minecraft/commands/synchronization/EmptyArgumentSerializer fu
	constructor a
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	serializeToJson (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/commands/synchronization/SuggestionProviders fv
	ALL_RECIPES b
	ASK_SERVER a
	AVAILABLE_BIOMES d
	AVAILABLE_SOUNDS c
	DEFAULT_NAME g
	PROVIDERS_BY_NAME f
	SUMMONABLE_ENTITIES e
	getName (Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lnet/minecraft/resources/ResourceLocation; a
	getProvider (Lnet/minecraft/resources/ResourceLocation;)Lcom/mojang/brigadier/suggestion/SuggestionProvider; a
	register (Lnet/minecraft/resources/ResourceLocation;Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lcom/mojang/brigadier/suggestion/SuggestionProvider; a
	safelySwap (Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lcom/mojang/brigadier/suggestion/SuggestionProvider; b
net/minecraft/commands/synchronization/SuggestionProviders$Wrapper fv$a
	delegate a
	name b
net/minecraft/commands/synchronization/brigadier/BrigadierArgumentSerializers fw
	NUMBER_FLAG_MAX b
	NUMBER_FLAG_MIN a
	bootstrap ()V a
	createNumberFlags (ZZ)B a
	numberHasMax (B)Z b
	numberHasMin (B)Z a
net/minecraft/commands/synchronization/brigadier/DoubleArgumentSerializer fx
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/brigadier/arguments/DoubleArgumentType; a
	serializeToJson (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lcom/mojang/brigadier/arguments/DoubleArgumentType;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lcom/mojang/brigadier/arguments/DoubleArgumentType;Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/commands/synchronization/brigadier/FloatArgumentSerializer fy
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/brigadier/arguments/FloatArgumentType; a
	serializeToJson (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lcom/mojang/brigadier/arguments/FloatArgumentType;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lcom/mojang/brigadier/arguments/FloatArgumentType;Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/commands/synchronization/brigadier/IntegerArgumentSerializer fz
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/brigadier/arguments/IntegerArgumentType; a
	serializeToJson (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lcom/mojang/brigadier/arguments/IntegerArgumentType;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lcom/mojang/brigadier/arguments/IntegerArgumentType;Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/commands/synchronization/brigadier/LongArgumentSerializer ga
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/brigadier/arguments/LongArgumentType; a
	serializeToJson (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lcom/mojang/brigadier/arguments/LongArgumentType;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lcom/mojang/brigadier/arguments/LongArgumentType;Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/commands/synchronization/brigadier/StringArgumentSerializer gb
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/brigadier/arguments/StringArgumentType; a
	serializeToJson (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lcom/mojang/brigadier/arguments/StringArgumentType;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lcom/mojang/brigadier/arguments/StringArgumentType;Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/core/AxisCycle ge
	$VALUES f
	AXIS_VALUES d
	BACKWARD c
	FORWARD b
	NONE a
	VALUES e
	$values ()[Lnet/minecraft/core/AxisCycle; b
	between (Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/core/Direction$Axis;)Lnet/minecraft/core/AxisCycle; a
	cycle (DDDLnet/minecraft/core/Direction$Axis;)D a
	cycle (IIILnet/minecraft/core/Direction$Axis;)I a
	cycle (Lnet/minecraft/core/Direction$Axis;)Lnet/minecraft/core/Direction$Axis; a
	inverse ()Lnet/minecraft/core/AxisCycle; a
net/minecraft/core/BlockMath gf
	LOGGER c
	VANILLA_UV_TRANSFORM_GLOBAL_TO_LOCAL b
	VANILLA_UV_TRANSFORM_LOCAL_TO_GLOBAL a
	blockCenterToCorner (Lcom/mojang/math/Transformation;)Lcom/mojang/math/Transformation; a
	blockCornerToCenter (Lcom/mojang/math/Transformation;)Lcom/mojang/math/Transformation; b
	getUVLockTransform (Lcom/mojang/math/Transformation;Lnet/minecraft/core/Direction;Ljava/util/function/Supplier;)Lcom/mojang/math/Transformation; a
net/minecraft/core/BlockPos gg
	CODEC a
	LOGGER d
	PACKED_X_LENGTH g
	PACKED_X_MASK i
	PACKED_Y_LENGTH c
	PACKED_Y_MASK j
	PACKED_Z_LENGTH h
	PACKED_Z_MASK k
	X_OFFSET n
	Y_OFFSET l
	ZERO b
	Z_OFFSET m
	above ()Lnet/minecraft/core/BlockPos; b
	above ()Lnet/minecraft/core/Vec3i; o
	above (I)Lnet/minecraft/core/BlockPos; b
	above (I)Lnet/minecraft/core/Vec3i; n
	asLong ()J a
	asLong (III)J a
	atY (I)Lnet/minecraft/core/BlockPos; h
	below ()Lnet/minecraft/core/BlockPos; c
	below ()Lnet/minecraft/core/Vec3i; n
	below (I)Lnet/minecraft/core/BlockPos; c
	below (I)Lnet/minecraft/core/Vec3i; m
	betweenClosed (IIIIII)Ljava/lang/Iterable; b
	betweenClosed (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Ljava/lang/Iterable; a
	betweenClosedStream (IIIIII)Ljava/util/stream/Stream; a
	betweenClosedStream (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; b
	betweenClosedStream (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Ljava/util/stream/Stream; a
	betweenClosedStream (Lnet/minecraft/world/phys/AABB;)Ljava/util/stream/Stream; a
	cross (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/BlockPos; c
	cross (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i; d
	east ()Lnet/minecraft/core/BlockPos; g
	east ()Lnet/minecraft/core/Vec3i; j
	east (I)Lnet/minecraft/core/BlockPos; g
	east (I)Lnet/minecraft/core/Vec3i; i
	findClosestMatch (Lnet/minecraft/core/BlockPos;IILjava/util/function/Predicate;)Ljava/util/Optional; a
	getFlatIndex (J)J e
	getX (J)I a
	getY (J)I b
	getZ (J)I c
	immutable ()Lnet/minecraft/core/BlockPos; h
	multiply (I)Lnet/minecraft/core/BlockPos; a
	multiply (I)Lnet/minecraft/core/Vec3i; o
	mutable ()Lnet/minecraft/core/BlockPos$MutableBlockPos; i
	north ()Lnet/minecraft/core/BlockPos; d
	north ()Lnet/minecraft/core/Vec3i; m
	north (I)Lnet/minecraft/core/BlockPos; d
	north (I)Lnet/minecraft/core/Vec3i; l
	of (J)Lnet/minecraft/core/BlockPos; d
	offset (DDD)Lnet/minecraft/core/BlockPos; a
	offset (DDD)Lnet/minecraft/core/Vec3i; b
	offset (III)Lnet/minecraft/core/BlockPos; b
	offset (III)Lnet/minecraft/core/Vec3i; c
	offset (JIII)J a
	offset (JLnet/minecraft/core/Direction;)J a
	offset (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/BlockPos; a
	offset (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i; f
	randomBetweenClosed (Ljava/util/Random;IIIIIII)Ljava/lang/Iterable; a
	randomInCube (Ljava/util/Random;ILnet/minecraft/core/BlockPos;I)Ljava/lang/Iterable; a
	relative (Lnet/minecraft/core/Direction$Axis;I)Lnet/minecraft/core/BlockPos; a
	relative (Lnet/minecraft/core/Direction$Axis;I)Lnet/minecraft/core/Vec3i; b
	relative (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/BlockPos; a
	relative (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Vec3i; b
	relative (Lnet/minecraft/core/Direction;I)Lnet/minecraft/core/BlockPos; a
	relative (Lnet/minecraft/core/Direction;I)Lnet/minecraft/core/Vec3i; b
	rotate (Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/BlockPos; a
	south ()Lnet/minecraft/core/BlockPos; e
	south ()Lnet/minecraft/core/Vec3i; l
	south (I)Lnet/minecraft/core/BlockPos; e
	south (I)Lnet/minecraft/core/Vec3i; k
	spiralAround (Lnet/minecraft/core/BlockPos;ILnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)Ljava/lang/Iterable; a
	subtract (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/BlockPos; b
	subtract (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i; e
	west ()Lnet/minecraft/core/BlockPos; f
	west ()Lnet/minecraft/core/Vec3i; k
	west (I)Lnet/minecraft/core/BlockPos; f
	west (I)Lnet/minecraft/core/Vec3i; j
	withinManhattan (Lnet/minecraft/core/BlockPos;III)Ljava/lang/Iterable; a
	withinManhattanStream (Lnet/minecraft/core/BlockPos;III)Ljava/util/stream/Stream; b
net/minecraft/core/BlockPos$MutableBlockPos gg$a
	above ()Lnet/minecraft/core/Vec3i; o
	above (I)Lnet/minecraft/core/Vec3i; n
	below ()Lnet/minecraft/core/Vec3i; n
	below (I)Lnet/minecraft/core/Vec3i; m
	clamp (Lnet/minecraft/core/Direction$Axis;II)Lnet/minecraft/core/BlockPos$MutableBlockPos; a
	cross (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i; d
	east ()Lnet/minecraft/core/Vec3i; j
	east (I)Lnet/minecraft/core/Vec3i; i
	immutable ()Lnet/minecraft/core/BlockPos; h
	move (III)Lnet/minecraft/core/BlockPos$MutableBlockPos; e
	move (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/BlockPos$MutableBlockPos; c
	move (Lnet/minecraft/core/Direction;I)Lnet/minecraft/core/BlockPos$MutableBlockPos; c
	move (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/BlockPos$MutableBlockPos; h
	multiply (I)Lnet/minecraft/core/BlockPos; a
	multiply (I)Lnet/minecraft/core/Vec3i; o
	north ()Lnet/minecraft/core/Vec3i; m
	north (I)Lnet/minecraft/core/Vec3i; l
	offset (DDD)Lnet/minecraft/core/BlockPos; a
	offset (DDD)Lnet/minecraft/core/Vec3i; b
	offset (III)Lnet/minecraft/core/BlockPos; b
	offset (III)Lnet/minecraft/core/Vec3i; c
	offset (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i; f
	relative (Lnet/minecraft/core/Direction$Axis;I)Lnet/minecraft/core/BlockPos; a
	relative (Lnet/minecraft/core/Direction$Axis;I)Lnet/minecraft/core/Vec3i; b
	relative (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Vec3i; b
	relative (Lnet/minecraft/core/Direction;I)Lnet/minecraft/core/BlockPos; a
	relative (Lnet/minecraft/core/Direction;I)Lnet/minecraft/core/Vec3i; b
	rotate (Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/BlockPos; a
	set (DDD)Lnet/minecraft/core/BlockPos$MutableBlockPos; c
	set (III)Lnet/minecraft/core/BlockPos$MutableBlockPos; d
	set (J)Lnet/minecraft/core/BlockPos$MutableBlockPos; f
	set (Lnet/minecraft/core/AxisCycle;III)Lnet/minecraft/core/BlockPos$MutableBlockPos; a
	set (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/BlockPos$MutableBlockPos; g
	setWithOffset (Lnet/minecraft/core/Vec3i;III)Lnet/minecraft/core/BlockPos$MutableBlockPos; a
	setWithOffset (Lnet/minecraft/core/Vec3i;Lnet/minecraft/core/Direction;)Lnet/minecraft/core/BlockPos$MutableBlockPos; a
	setWithOffset (Lnet/minecraft/core/Vec3i;Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/BlockPos$MutableBlockPos; a
	setX (I)Lnet/minecraft/core/BlockPos$MutableBlockPos; p
	setX (I)Lnet/minecraft/core/Vec3i; u
	setY (I)Lnet/minecraft/core/BlockPos$MutableBlockPos; q
	setY (I)Lnet/minecraft/core/Vec3i; t
	setZ (I)Lnet/minecraft/core/BlockPos$MutableBlockPos; r
	setZ (I)Lnet/minecraft/core/Vec3i; s
	south ()Lnet/minecraft/core/Vec3i; l
	south (I)Lnet/minecraft/core/Vec3i; k
	subtract (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i; e
	west ()Lnet/minecraft/core/Vec3i; k
	west (I)Lnet/minecraft/core/Vec3i; j
net/minecraft/core/BlockSource gh
	getBlockState ()Lnet/minecraft/world/level/block/state/BlockState; e
	getEntity ()Lnet/minecraft/world/level/block/entity/BlockEntity; f
	getLevel ()Lnet/minecraft/server/level/ServerLevel; g
	getPos ()Lnet/minecraft/core/BlockPos; d
	x ()D a
	y ()D b
	z ()D c
net/minecraft/core/BlockSourceImpl gi
	level a
	pos b
	getBlockState ()Lnet/minecraft/world/level/block/state/BlockState; e
	getEntity ()Lnet/minecraft/world/level/block/entity/BlockEntity; f
	getLevel ()Lnet/minecraft/server/level/ServerLevel; g
	getPos ()Lnet/minecraft/core/BlockPos; d
	x ()D a
	y ()D b
	z ()D c
net/minecraft/core/Cursor3D gj
	TYPE_CORNER d
	TYPE_EDGE c
	TYPE_FACE b
	TYPE_INSIDE a
	depth j
	end k
	height i
	index l
	originX e
	originY f
	originZ g
	width h
	x m
	y n
	z o
	advance ()Z a
	getNextType ()I e
	nextX ()I b
	nextY ()I c
	nextZ ()I d
net/minecraft/core/DefaultedRegistry gk
	defaultKey bv
	defaultValue bw
	byId (I)Ljava/lang/Object; a
	get (Lnet/minecraft/resources/ResourceLocation;)Ljava/lang/Object; a
	getDefaultKey ()Lnet/minecraft/resources/ResourceLocation; a
	getId (Ljava/lang/Object;)I a
	getKey (Ljava/lang/Object;)Lnet/minecraft/resources/ResourceLocation; b
	getOptional (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; b
	getRandom (Ljava/util/Random;)Ljava/lang/Object; a
	registerMapping (ILnet/minecraft/resources/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Ljava/lang/Object; a
net/minecraft/core/Direction gl
	$VALUES t
	BY_2D_DATA r
	BY_3D_DATA q
	BY_NAME p
	BY_NORMAL s
	CODEC g
	DOWN a
	EAST f
	NORTH c
	SOUTH d
	UP b
	VALUES o
	WEST e
	axis l
	axisDirection m
	data2d j
	data3d h
	name k
	normal n
	oppositeIndex i
	$values ()[Lnet/minecraft/core/Direction; u
	byName (Ljava/lang/String;)Lnet/minecraft/core/Direction; a
	from2DDataValue (I)Lnet/minecraft/core/Direction; b
	from3DDataValue (I)Lnet/minecraft/core/Direction; a
	fromAxisAndDirection (Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/core/Direction$AxisDirection;)Lnet/minecraft/core/Direction; a
	fromNormal (III)Lnet/minecraft/core/Direction; a
	fromNormal (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/Direction; a
	fromYRot (D)Lnet/minecraft/core/Direction; a
	get (Lnet/minecraft/core/Direction$AxisDirection;Lnet/minecraft/core/Direction$Axis;)Lnet/minecraft/core/Direction; a
	get2DDataValue ()I d
	get3DDataValue ()I b
	getAxis ()Lnet/minecraft/core/Direction$Axis; n
	getAxisDirection ()Lnet/minecraft/core/Direction$AxisDirection; e
	getClockWise ()Lnet/minecraft/core/Direction; g
	getClockWise (Lnet/minecraft/core/Direction$Axis;)Lnet/minecraft/core/Direction; a
	getClockWiseX ()Lnet/minecraft/core/Direction; q
	getClockWiseZ ()Lnet/minecraft/core/Direction; s
	getCounterClockWise ()Lnet/minecraft/core/Direction; h
	getCounterClockWise (Lnet/minecraft/core/Direction$Axis;)Lnet/minecraft/core/Direction; b
	getCounterClockWiseX ()Lnet/minecraft/core/Direction; r
	getCounterClockWiseZ ()Lnet/minecraft/core/Direction; t
	getFacingAxis (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Direction$Axis;)Lnet/minecraft/core/Direction; a
	getName ()Ljava/lang/String; m
	getNearest (DDD)Lnet/minecraft/core/Direction; a
	getNearest (FFF)Lnet/minecraft/core/Direction; a
	getNormal ()Lnet/minecraft/core/Vec3i; p
	getOpposite ()Lnet/minecraft/core/Direction; f
	getRandom (Ljava/util/Random;)Lnet/minecraft/core/Direction; a
	getRotation ()Lcom/mojang/math/Quaternion; a
	getSerializedName ()Ljava/lang/String; c
	getStepX ()I i
	getStepY ()I j
	getStepZ ()I k
	isFacingAngle (F)Z a
	makeDirectionArray (Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)[Lnet/minecraft/core/Direction; a
	orderedByNearest (Lnet/minecraft/world/entity/Entity;)[Lnet/minecraft/core/Direction; a
	rotate (Lcom/mojang/math/Matrix4f;Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Direction; a
	step ()Lcom/mojang/math/Vector3f; l
	toYRot ()F o
net/minecraft/core/Direction$Axis gl$a
	$VALUES h
	BY_NAME f
	CODEC e
	VALUES d
	X a
	Y b
	Z c
	name g
	$values ()[Lnet/minecraft/core/Direction$Axis; f
	byName (Ljava/lang/String;)Lnet/minecraft/core/Direction$Axis; a
	choose (DDD)D a
	choose (III)I a
	getName ()Ljava/lang/String; a
	getPlane ()Lnet/minecraft/core/Direction$Plane; e
	getRandom (Ljava/util/Random;)Lnet/minecraft/core/Direction$Axis; a
	getSerializedName ()Ljava/lang/String; c
	isHorizontal ()Z d
	isVertical ()Z b
	test (Lnet/minecraft/core/Direction;)Z a
net/minecraft/core/Direction$AxisDirection gl$b
	$VALUES e
	NEGATIVE b
	POSITIVE a
	name d
	step c
	$values ()[Lnet/minecraft/core/Direction$AxisDirection; d
	getName ()Ljava/lang/String; b
	getStep ()I a
	opposite ()Lnet/minecraft/core/Direction$AxisDirection; c
net/minecraft/core/Direction$Plane gl$c
	$VALUES e
	HORIZONTAL a
	VERTICAL b
	axis d
	faces c
	$values ()[Lnet/minecraft/core/Direction$Plane; b
	getRandomAxis (Ljava/util/Random;)Lnet/minecraft/core/Direction$Axis; b
	getRandomDirection (Ljava/util/Random;)Lnet/minecraft/core/Direction; a
	stream ()Ljava/util/stream/Stream; a
	test (Lnet/minecraft/core/Direction;)Z a
net/minecraft/core/Direction8 gm
	$VALUES j
	EAST c
	NORTH a
	NORTH_EAST b
	NORTH_WEST h
	SOUTH e
	SOUTH_EAST d
	SOUTH_WEST f
	WEST g
	directions i
	$values ()[Lnet/minecraft/core/Direction8; b
	getDirections ()Ljava/util/Set; a
net/minecraft/core/FrontAndTop gn
	$VALUES q
	DOWN_EAST a
	DOWN_NORTH b
	DOWN_SOUTH c
	DOWN_WEST d
	EAST_UP j
	LOOKUP_TOP_FRONT m
	NORTH_UP k
	SOUTH_UP l
	UP_EAST e
	UP_NORTH f
	UP_SOUTH g
	UP_WEST h
	WEST_UP i
	front p
	name n
	top o
	$values ()[Lnet/minecraft/core/FrontAndTop; d
	fromFrontAndTop (Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)Lnet/minecraft/core/FrontAndTop; a
	front ()Lnet/minecraft/core/Direction; a
	getSerializedName ()Ljava/lang/String; c
	lookupKey (Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)I b
	top ()Lnet/minecraft/core/Direction; b
net/minecraft/core/GlobalPos go
	CODEC a
	dimension b
	pos c
	dimension ()Lnet/minecraft/resources/ResourceKey; a
	of (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/GlobalPos; a
	pos ()Lnet/minecraft/core/BlockPos; b
net/minecraft/core/IdMap gp
	byId (I)Ljava/lang/Object; a
	getId (Ljava/lang/Object;)I a
net/minecraft/core/IdMapper gq
	DEFAULT a
	idToT d
	nextId b
	tToId c
	add (Ljava/lang/Object;)V b
	addMapping (Ljava/lang/Object;I)V a
	byId (I)Ljava/lang/Object; a
	contains (I)Z b
	getId (Ljava/lang/Object;)I a
	size ()I a
net/minecraft/core/MappedRegistry gr
	LOGGER a
	byId bv
	elementsLifecycle bA
	keyStorage by
	lifecycles bz
	nextId bB
	randomCache b
	storage bx
	toId bw
	byId (I)Ljava/lang/Object; a
	containsKey (Lnet/minecraft/resources/ResourceKey;)Z b
	containsKey (Lnet/minecraft/resources/ResourceLocation;)Z c
	dataPackCodec (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Lifecycle;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; b
	directCodec (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Lifecycle;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; c
	elementsLifecycle ()Lcom/mojang/serialization/Lifecycle; b
	entrySet ()Ljava/util/Set; d
	get (Lnet/minecraft/resources/ResourceKey;)Ljava/lang/Object; a
	get (Lnet/minecraft/resources/ResourceLocation;)Ljava/lang/Object; a
	getId (Ljava/lang/Object;)I a
	getKey (Ljava/lang/Object;)Lnet/minecraft/resources/ResourceLocation; b
	getRandom (Ljava/util/Random;)Ljava/lang/Object; a
	getResourceKey (Ljava/lang/Object;)Ljava/util/Optional; c
	isEmpty ()Z e
	keySet ()Ljava/util/Set; c
	lifecycle (Ljava/lang/Object;)Lcom/mojang/serialization/Lifecycle; d
	networkCodec (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Lifecycle;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; a
	register (Lnet/minecraft/resources/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Ljava/lang/Object; a
	registerMapping (ILnet/minecraft/resources/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Ljava/lang/Object; a
	registerMapping (ILnet/minecraft/resources/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;Z)Ljava/lang/Object; a
	registerOrOverride (Ljava/util/OptionalInt;Lnet/minecraft/resources/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Ljava/lang/Object; a
	withNameAndId (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec; a
net/minecraft/core/MappedRegistry$RegistryEntry gr$a
	id b
	key a
	value c
net/minecraft/core/NonNullList gs
	defaultValue b
	list a
	create ()Lnet/minecraft/core/NonNullList; a
	of (Ljava/lang/Object;[Ljava/lang/Object;)Lnet/minecraft/core/NonNullList; a
	withSize (ILjava/lang/Object;)Lnet/minecraft/core/NonNullList; a
net/minecraft/core/Position gt
	x ()D a
	y ()D b
	z ()D c
net/minecraft/core/PositionImpl gu
	x a
	y b
	z c
	x ()D a
	y ()D b
	z ()D c
net/minecraft/core/QuartPos gv
	BITS a
	SECTION_TO_QUARTS_BITS c
	SIZE b
	fromBlock (I)I a
	fromSection (I)I c
	toBlock (I)I b
	toSection (I)I d
net/minecraft/core/Registry gw
	ACTIVITY au
	ACTIVITY_REGISTRY I
	ATTRIBUTE al
	ATTRIBUTE_REGISTRY y
	BIOME_REGISTRY aO
	BIOME_SOURCE br
	BIOME_SOURCE_REGISTRY bh
	BLOCK W
	BLOCKSTATE_PROVIDER_TYPES bl
	BLOCK_ENTITY_TYPE ac
	BLOCK_ENTITY_TYPE_REGISTRY p
	BLOCK_PLACER_TYPES bm
	BLOCK_PLACER_TYPE_REGISTRY bc
	BLOCK_REGISTRY j
	BLOCK_STATE_PROVIDER_TYPE_REGISTRY bb
	CARVER aS
	CARVER_REGISTRY aR
	CHUNK_GENERATOR bs
	CHUNK_GENERATOR_REGISTRY bi
	CHUNK_STATUS af
	CHUNK_STATUS_REGISTRY s
	CONFIGURED_CARVER_REGISTRY aJ
	CONFIGURED_FEATURE_REGISTRY aK
	CONFIGURED_STRUCTURE_FEATURE_REGISTRY aL
	CONFIGURED_SURFACE_BUILDER_REGISTRY aI
	CUSTOM_STAT ae
	CUSTOM_STAT_REGISTRY r
	DECORATOR ba
	DECORATOR_REGISTRY aZ
	DIMENSION_REGISTRY Q
	DIMENSION_TYPE_REGISTRY P
	ENCHANTMENT X
	ENCHANTMENT_REGISTRY k
	ENTITY_TYPE Y
	ENTITY_TYPE_REGISTRY l
	FEATURE aU
	FEATURE_REGISTRY aT
	FEATURE_SIZE_TYPES bq
	FEATURE_SIZE_TYPE_REGISTRY bg
	FLOAT_PROVIDER_TYPES aC
	FLOAT_PROVIDER_TYPE_REGISTRY aB
	FLUID U
	FLUID_REGISTRY h
	FOLIAGE_PLACER_TYPES bn
	FOLIAGE_PLACER_TYPE_REGISTRY bd
	GAME_EVENT S
	GAME_EVENT_REGISTRY z
	HEIGHT_PROVIDER_TYPES aG
	HEIGHT_PROVIDER_TYPE_REGISTRY aF
	INT_PROVIDER_TYPES aE
	INT_PROVIDER_TYPE_REGISTRY aD
	ITEM Z
	ITEM_REGISTRY m
	LEVEL_STEM_REGISTRY R
	LOADERS a
	LOGGER c
	LOOT_CONDITION_TYPE ax
	LOOT_ENTRY_REGISTRY J
	LOOT_FUNCTION_REGISTRY K
	LOOT_FUNCTION_TYPE aw
	LOOT_ITEM_REGISTRY L
	LOOT_NBT_PROVIDER_REGISTRY N
	LOOT_NBT_PROVIDER_TYPE az
	LOOT_NUMBER_PROVIDER_REGISTRY M
	LOOT_NUMBER_PROVIDER_TYPE ay
	LOOT_POOL_ENTRY_TYPE av
	LOOT_SCORE_PROVIDER_REGISTRY O
	LOOT_SCORE_PROVIDER_TYPE aA
	MEMORY_MODULE_TYPE ar
	MEMORY_MODULE_TYPE_REGISTRY F
	MENU ai
	MENU_REGISTRY v
	MOB_EFFECT V
	MOB_EFFECT_REGISTRY i
	MOTIVE ad
	MOTIVE_REGISTRY q
	NOISE_GENERATOR_SETTINGS_REGISTRY aH
	PARTICLE_TYPE ab
	PARTICLE_TYPE_REGISTRY o
	POINT_OF_INTEREST_TYPE aq
	POINT_OF_INTEREST_TYPE_REGISTRY E
	POSITION_SOURCE_TYPE am
	POSITION_SOURCE_TYPE_REGISTRY A
	POS_RULE_TEST ah
	POS_RULE_TEST_REGISTRY u
	POTION aa
	POTION_REGISTRY n
	PROCESSOR_LIST_REGISTRY aM
	RECIPE_SERIALIZER ak
	RECIPE_SERIALIZER_REGISTRY x
	RECIPE_TYPE aj
	RECIPE_TYPE_REGISTRY w
	REGISTRY f
	ROOT_REGISTRY_NAME d
	RULE_TEST ag
	RULE_TEST_REGISTRY t
	SCHEDULE at
	SCHEDULE_REGISTRY H
	SENSOR_TYPE as
	SENSOR_TYPE_REGISTRY G
	SOUND_EVENT T
	SOUND_EVENT_REGISTRY g
	STAT_TYPE an
	STAT_TYPE_REGISTRY B
	STRUCTURE_FEATURE aW
	STRUCTURE_FEATURE_REGISTRY aV
	STRUCTURE_PIECE aY
	STRUCTURE_PIECE_REGISTRY aX
	STRUCTURE_POOL_ELEMENT bu
	STRUCTURE_POOL_ELEMENT_REGISTRY bk
	STRUCTURE_PROCESSOR bt
	STRUCTURE_PROCESSOR_REGISTRY bj
	SURFACE_BUILDER aQ
	SURFACE_BUILDER_REGISTRY aP
	TEMPLATE_POOL_REGISTRY aN
	TREE_DECORATOR_TYPES bp
	TREE_DECORATOR_TYPE_REGISTRY bf
	TRUNK_PLACER_TYPES bo
	TRUNK_PLACER_TYPE_REGISTRY be
	VILLAGER_PROFESSION ap
	VILLAGER_PROFESSION_REGISTRY D
	VILLAGER_TYPE ao
	VILLAGER_TYPE_REGISTRY C
	WRITABLE_REGISTRY e
	key b
	lifecycle bv
	checkRegistry (Lnet/minecraft/core/WritableRegistry;)V a
	containsKey (Lnet/minecraft/resources/ResourceKey;)Z b
	containsKey (Lnet/minecraft/resources/ResourceLocation;)Z c
	createRegistryKey (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
	elementsLifecycle ()Lcom/mojang/serialization/Lifecycle; b
	entrySet ()Ljava/util/Set; d
	get (Lnet/minecraft/resources/ResourceKey;)Ljava/lang/Object; a
	get (Lnet/minecraft/resources/ResourceLocation;)Ljava/lang/Object; a
	getId (Ljava/lang/Object;)I a
	getKey (Ljava/lang/Object;)Lnet/minecraft/resources/ResourceLocation; b
	getOptional (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; c
	getOptional (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; b
	getOrThrow (Lnet/minecraft/resources/ResourceKey;)Ljava/lang/Object; d
	getRandom (Ljava/util/Random;)Ljava/lang/Object; a
	getResourceKey (Ljava/lang/Object;)Ljava/util/Optional; c
	internalRegister (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/WritableRegistry;Ljava/util/function/Supplier;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/core/WritableRegistry; a
	key ()Lnet/minecraft/resources/ResourceKey; f
	keySet ()Ljava/util/Set; c
	lifecycle (Ljava/lang/Object;)Lcom/mojang/serialization/Lifecycle; d
	register (Lnet/minecraft/core/Registry;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object; a
	register (Lnet/minecraft/core/Registry;Lnet/minecraft/resources/ResourceLocation;Ljava/lang/Object;)Ljava/lang/Object; a
	registerDefaulted (Lnet/minecraft/resources/ResourceKey;Ljava/lang/String;Lcom/mojang/serialization/Lifecycle;Ljava/util/function/Supplier;)Lnet/minecraft/core/DefaultedRegistry; a
	registerDefaulted (Lnet/minecraft/resources/ResourceKey;Ljava/lang/String;Ljava/util/function/Supplier;)Lnet/minecraft/core/DefaultedRegistry; a
	registerMapping (Lnet/minecraft/core/Registry;ILjava/lang/String;Ljava/lang/Object;)Ljava/lang/Object; a
	registerSimple (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Lifecycle;Ljava/util/function/Supplier;)Lnet/minecraft/core/Registry; a
	registerSimple (Lnet/minecraft/resources/ResourceKey;Ljava/util/function/Supplier;)Lnet/minecraft/core/Registry; a
	stream ()Ljava/util/stream/Stream; g
net/minecraft/core/RegistryAccess gx
	BUILTIN c
	LOGGER a
	REGISTRIES b
	addBuiltinElements (Lnet/minecraft/core/RegistryAccess$RegistryHolder;Lnet/minecraft/resources/RegistryReadOps$ResourceAccess$MemoryMap;Lnet/minecraft/core/RegistryAccess$RegistryData;)V a
	builtin ()Lnet/minecraft/core/RegistryAccess$RegistryHolder; a
	copy (Lnet/minecraft/core/RegistryAccess$RegistryHolder;Lnet/minecraft/core/Registry;)V a
	copyBuiltin (Lnet/minecraft/core/RegistryAccess$RegistryHolder;Lnet/minecraft/resources/ResourceKey;)V a
	load (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/resources/RegistryReadOps;)V a
	ownedRegistry (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; a
	ownedRegistryOrThrow (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/core/WritableRegistry; b
	put (Lcom/google/common/collect/ImmutableMap$Builder;Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Codec;)V a
	put (Lcom/google/common/collect/ImmutableMap$Builder;Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;)V a
	readRegistry (Lnet/minecraft/resources/RegistryReadOps;Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/core/RegistryAccess$RegistryData;)V a
	registry (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; c
	registryOrThrow (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/core/Registry; d
net/minecraft/core/RegistryAccess$RegistryData gx$a
	codec b
	key a
	networkCodec c
	codec ()Lcom/mojang/serialization/Codec; b
	key ()Lnet/minecraft/resources/ResourceKey; a
	networkCodec ()Lcom/mojang/serialization/Codec; c
	sendToClient ()Z d
net/minecraft/core/RegistryAccess$RegistryHolder gx$b
	NETWORK_CODEC a
	registries b
	captureMap (Lcom/mojang/serialization/codecs/UnboundedMapCodec;)Lcom/mojang/serialization/Codec; a
	createRegistry (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/core/MappedRegistry; f
	getNetworkCodec (Lnet/minecraft/resources/ResourceKey;)Lcom/mojang/serialization/DataResult; e
	makeNetworkCodec ()Lcom/mojang/serialization/Codec; b
	ownedRegistry (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; a
net/minecraft/core/Rotations gy
	x a
	y b
	z c
	getWrappedX ()F e
	getWrappedY ()F f
	getWrappedZ ()F g
	getX ()F b
	getY ()F c
	getZ ()F d
	save ()Lnet/minecraft/nbt/ListTag; a
net/minecraft/core/SectionPos gz
	PACKED_X_LENGTH h
	PACKED_X_MASK k
	PACKED_Y_LENGTH i
	PACKED_Y_MASK l
	PACKED_Z_LENGTH j
	PACKED_Z_MASK m
	RELATIVE_X_SHIFT q
	RELATIVE_Y_SHIFT r
	RELATIVE_Z_SHIFT s
	SECTION_BITS a
	SECTION_HALF_SIZE c
	SECTION_MASK g
	SECTION_MAX_INDEX d
	SECTION_SIZE b
	X_OFFSET p
	Y_OFFSET n
	Z_OFFSET o
	aroundChunk (Lnet/minecraft/world/level/ChunkPos;III)Ljava/util/stream/Stream; a
	asLong ()J s
	asLong (III)J b
	asLong (Lnet/minecraft/core/BlockPos;)J c
	betweenClosedStream (IIIIII)Ljava/util/stream/Stream; a
	blockToSection (J)J e
	blockToSectionCoord (I)I a
	blocksInside ()Ljava/util/stream/Stream; t
	bottomOf (Lnet/minecraft/world/level/chunk/ChunkAccess;)Lnet/minecraft/core/SectionPos; a
	center ()Lnet/minecraft/core/BlockPos; q
	chunk ()Lnet/minecraft/world/level/ChunkPos; r
	cube (Lnet/minecraft/core/SectionPos;I)Ljava/util/stream/Stream; a
	getZeroNode (J)J f
	maxBlockX ()I g
	maxBlockY ()I h
	maxBlockZ ()I i
	minBlockX ()I d
	minBlockY ()I e
	minBlockZ ()I f
	of (III)Lnet/minecraft/core/SectionPos; a
	of (J)Lnet/minecraft/core/SectionPos; a
	of (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/SectionPos; a
	of (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/core/SectionPos; a
	of (Lnet/minecraft/world/level/ChunkPos;I)Lnet/minecraft/core/SectionPos; a
	offset (III)Lnet/minecraft/core/SectionPos; d
	offset (III)Lnet/minecraft/core/Vec3i; c
	offset (JIII)J a
	offset (JLnet/minecraft/core/Direction;)J a
	origin ()Lnet/minecraft/core/BlockPos; p
	posToSectionCoord (D)I a
	relativeToBlockPos (S)Lnet/minecraft/core/BlockPos; g
	relativeToBlockX (S)I d
	relativeToBlockY (S)I e
	relativeToBlockZ (S)I f
	sectionRelative (I)I b
	sectionRelativePos (Lnet/minecraft/core/BlockPos;)S b
	sectionRelativeX (S)I a
	sectionRelativeY (S)I b
	sectionRelativeZ (S)I c
	sectionToBlockCoord (I)I c
	sectionToBlockCoord (II)I a
	x ()I a
	x (J)I b
	y ()I b
	y (J)I c
	z ()I c
	z (J)I d
net/minecraft/core/SerializableUUID ha
	CODEC a
	leastMostToIntArray (JJ)[I a
	readUUID (Lcom/mojang/serialization/Dynamic;)Ljava/util/UUID; a
	uuidFromIntArray ([I)Ljava/util/UUID; a
	uuidToIntArray (Ljava/util/UUID;)[I a
net/minecraft/core/Vec3i hb
	CODEC e
	ZERO f
	x a
	y b
	z c
	above ()Lnet/minecraft/core/Vec3i; o
	above (I)Lnet/minecraft/core/Vec3i; n
	below ()Lnet/minecraft/core/Vec3i; n
	below (I)Lnet/minecraft/core/Vec3i; m
	closerThan (Lnet/minecraft/core/Position;D)Z a
	closerThan (Lnet/minecraft/core/Vec3i;D)Z a
	compareTo (Lnet/minecraft/core/Vec3i;)I i
	cross (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i; d
	distManhattan (Lnet/minecraft/core/Vec3i;)I k
	distSqr (DDDZ)D a
	distSqr (Lnet/minecraft/core/Position;Z)D a
	distSqr (Lnet/minecraft/core/Vec3i;)D j
	distSqr (Lnet/minecraft/core/Vec3i;Z)D a
	east ()Lnet/minecraft/core/Vec3i; j
	east (I)Lnet/minecraft/core/Vec3i; i
	get (Lnet/minecraft/core/Direction$Axis;)I a
	getX ()I u
	getY ()I v
	getZ ()I w
	multiply (I)Lnet/minecraft/core/Vec3i; o
	north ()Lnet/minecraft/core/Vec3i; m
	north (I)Lnet/minecraft/core/Vec3i; l
	offset (DDD)Lnet/minecraft/core/Vec3i; b
	offset (III)Lnet/minecraft/core/Vec3i; c
	offset (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i; f
	relative (Lnet/minecraft/core/Direction$Axis;I)Lnet/minecraft/core/Vec3i; b
	relative (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Vec3i; b
	relative (Lnet/minecraft/core/Direction;I)Lnet/minecraft/core/Vec3i; b
	setX (I)Lnet/minecraft/core/Vec3i; u
	setY (I)Lnet/minecraft/core/Vec3i; t
	setZ (I)Lnet/minecraft/core/Vec3i; s
	south ()Lnet/minecraft/core/Vec3i; l
	south (I)Lnet/minecraft/core/Vec3i; k
	subtract (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i; e
	toShortString ()Ljava/lang/String; x
	west ()Lnet/minecraft/core/Vec3i; k
	west (I)Lnet/minecraft/core/Vec3i; j
net/minecraft/core/WritableRegistry hc
	isEmpty ()Z e
	register (Lnet/minecraft/resources/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Ljava/lang/Object; a
	registerMapping (ILnet/minecraft/resources/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Ljava/lang/Object; a
	registerOrOverride (Ljava/util/OptionalInt;Lnet/minecraft/resources/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Ljava/lang/Object; a
net/minecraft/core/cauldron/CauldronInteraction hd
	BANNER i
	DYED_ITEM j
	EMPTY a
	FILL_LAVA f
	FILL_POWDER_SNOW g
	FILL_WATER e
	LAVA c
	POWDER_SNOW d
	SHULKER_BOX h
	WATER b
	addDefaultInteractions (Ljava/util/Map;)V a
	bootStrap ()V b
	emptyBucket (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/world/InteractionResult; a
	fillBucket (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Ljava/util/function/Predicate;Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/world/InteractionResult; a
	newInteractionMap ()Lit/unimi/dsi/fastutil/objects/Object2ObjectOpenHashMap; a
net/minecraft/core/dispenser/AbstractProjectileDispenseBehavior he
	execute (Lnet/minecraft/core/BlockSource;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	getPower ()F b
	getProjectile (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/Position;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/entity/projectile/Projectile; a
	getUncertainty ()F a
	playSound (Lnet/minecraft/core/BlockSource;)V a
net/minecraft/core/dispenser/BoatDispenseItemBehavior hf
	defaultDispenseItemBehavior c
	type d
	execute (Lnet/minecraft/core/BlockSource;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	playSound (Lnet/minecraft/core/BlockSource;)V a
net/minecraft/core/dispenser/DefaultDispenseItemBehavior hg
	execute (Lnet/minecraft/core/BlockSource;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	playAnimation (Lnet/minecraft/core/BlockSource;Lnet/minecraft/core/Direction;)V a
	playSound (Lnet/minecraft/core/BlockSource;)V a
	spawnItem (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;ILnet/minecraft/core/Direction;Lnet/minecraft/core/Position;)V a
net/minecraft/core/dispenser/DispenseItemBehavior hh
	LOGGER a
	NOOP b
	bootStrap ()V c
	setEntityPokingOutOfBlock (Lnet/minecraft/core/BlockSource;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Direction;)V a
net/minecraft/core/dispenser/OptionalDispenseItemBehavior hi
	success c
	isSuccess ()Z a
	playSound (Lnet/minecraft/core/BlockSource;)V a
	setSuccess (Z)V a
net/minecraft/core/dispenser/ShearsDispenseItemBehavior hj
	execute (Lnet/minecraft/core/BlockSource;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	tryShearBeehive (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z a
	tryShearLivingEntity (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z b
net/minecraft/core/dispenser/ShulkerBoxDispenseBehavior hk
	LOGGER c
	execute (Lnet/minecraft/core/BlockSource;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/core/particles/BlockParticleOption hn
	DESERIALIZER a
	state c
	type b
	codec (Lnet/minecraft/core/particles/ParticleType;)Lcom/mojang/serialization/Codec; a
	getState ()Lnet/minecraft/world/level/block/state/BlockState; c
	getType ()Lnet/minecraft/core/particles/ParticleType; b
	writeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	writeToString ()Ljava/lang/String; a
net/minecraft/core/particles/DustColorTransitionOptions ho
	CODEC c
	DESERIALIZER d
	SCULK_PARTICLE_COLOR a
	SCULK_TO_REDSTONE b
	toColor i
	getFromColor ()Lcom/mojang/math/Vector3f; c
	getToColor ()Lcom/mojang/math/Vector3f; d
	getType ()Lnet/minecraft/core/particles/ParticleType; b
	writeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	writeToString ()Ljava/lang/String; a
net/minecraft/core/particles/DustParticleOptions hp
	CODEC c
	DESERIALIZER d
	REDSTONE b
	REDSTONE_PARTICLE_COLOR a
	getType ()Lnet/minecraft/core/particles/ParticleType; b
net/minecraft/core/particles/DustParticleOptionsBase hq
	MAX_SCALE f
	MIN_SCALE e
	color g
	scale h
	getColor ()Lcom/mojang/math/Vector3f; e
	getScale ()F f
	readVector3f (Lcom/mojang/brigadier/StringReader;)Lcom/mojang/math/Vector3f; a
	readVector3f (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/math/Vector3f; b
	writeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	writeToString ()Ljava/lang/String; a
net/minecraft/core/particles/ItemParticleOption hr
	DESERIALIZER a
	itemStack c
	type b
	codec (Lnet/minecraft/core/particles/ParticleType;)Lcom/mojang/serialization/Codec; a
	getItem ()Lnet/minecraft/world/item/ItemStack; c
	getType ()Lnet/minecraft/core/particles/ParticleType; b
	writeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	writeToString ()Ljava/lang/String; a
net/minecraft/core/particles/ParticleGroup hs
	SPORE_BLOSSOM a
	limit b
	getLimit ()I a
net/minecraft/core/particles/ParticleOptions ht
	getType ()Lnet/minecraft/core/particles/ParticleType; b
	writeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	writeToString ()Ljava/lang/String; a
net/minecraft/core/particles/ParticleOptions$Deserializer ht$a
	fromCommand (Lnet/minecraft/core/particles/ParticleType;Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/core/particles/ParticleOptions; b
	fromNetwork (Lnet/minecraft/core/particles/ParticleType;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/core/particles/ParticleOptions; b
net/minecraft/core/particles/ParticleType hu
	deserializer b
	overrideLimiter a
	codec ()Lcom/mojang/serialization/Codec; e
	getDeserializer ()Lnet/minecraft/core/particles/ParticleOptions$Deserializer; d
	getOverrideLimiter ()Z c
net/minecraft/core/particles/ParticleTypes hv
	AMBIENT_ENTITY_EFFECT a
	ANGRY_VILLAGER b
	ASH aq
	BARRIER c
	BLOCK e
	BUBBLE f
	BUBBLE_COLUMN_UP ag
	BUBBLE_POP ae
	CAMPFIRE_COSY_SMOKE aj
	CAMPFIRE_SIGNAL_SMOKE ak
	CLOUD g
	CODEC aL
	COMPOSTER H
	CRIMSON_SPORE ar
	CRIT h
	CURRENT_DOWN af
	DAMAGE_INDICATOR i
	DOLPHIN ai
	DRAGON_BREATH j
	DRIPPING_DRIPSTONE_LAVA aB
	DRIPPING_DRIPSTONE_WATER aD
	DRIPPING_HONEY al
	DRIPPING_LAVA k
	DRIPPING_OBSIDIAN_TEAR au
	DRIPPING_WATER n
	DUST p
	DUST_COLOR_TRANSITION q
	EFFECT r
	ELDER_GUARDIAN s
	ELECTRIC_SPARK aJ
	ENCHANT u
	ENCHANTED_HIT t
	END_ROD v
	ENTITY_EFFECT w
	EXPLOSION y
	EXPLOSION_EMITTER x
	FALLING_DRIPSTONE_LAVA aC
	FALLING_DRIPSTONE_WATER aE
	FALLING_DUST z
	FALLING_HONEY am
	FALLING_LAVA l
	FALLING_NECTAR ao
	FALLING_OBSIDIAN_TEAR av
	FALLING_SPORE_BLOSSOM ap
	FALLING_WATER o
	FIREWORK A
	FISHING B
	FLAME C
	FLASH F
	GLOW aG
	GLOW_SQUID_INK aF
	HAPPY_VILLAGER G
	HEART I
	INSTANT_EFFECT J
	ITEM K
	ITEM_SLIME M
	ITEM_SNOWBALL N
	LANDING_HONEY an
	LANDING_LAVA m
	LANDING_OBSIDIAN_TEAR aw
	LARGE_SMOKE O
	LAVA P
	LIGHT d
	MYCELIUM Q
	NAUTILUS ah
	NOTE R
	POOF S
	PORTAL T
	RAIN U
	REVERSE_PORTAL ax
	SCRAPE aK
	SMALL_FLAME az
	SMOKE V
	SNEEZE W
	SNOWFLAKE aA
	SOUL E
	SOUL_FIRE_FLAME D
	SPIT X
	SPLASH ac
	SPORE_BLOSSOM_AIR at
	SQUID_INK Y
	SWEEP_ATTACK Z
	TOTEM_OF_UNDYING aa
	UNDERWATER ab
	VIBRATION L
	WARPED_SPORE as
	WAX_OFF aI
	WAX_ON aH
	WHITE_ASH ay
	WITCH ad
	register (Ljava/lang/String;Lnet/minecraft/core/particles/ParticleOptions$Deserializer;Ljava/util/function/Function;)Lnet/minecraft/core/particles/ParticleType; a
	register (Ljava/lang/String;Z)Lnet/minecraft/core/particles/SimpleParticleType; a
net/minecraft/core/particles/SimpleParticleType hw
	DESERIALIZER a
	codec b
	codec ()Lcom/mojang/serialization/Codec; e
	getType ()Lnet/minecraft/core/particles/ParticleType; b
	getType ()Lnet/minecraft/core/particles/SimpleParticleType; f
	writeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	writeToString ()Ljava/lang/String; a
net/minecraft/core/particles/VibrationParticleOption hx
	CODEC a
	DESERIALIZER b
	vibrationPath c
	getType ()Lnet/minecraft/core/particles/ParticleType; b
	getVibrationPath ()Lnet/minecraft/world/level/gameevent/vibrations/VibrationPath; c
	writeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	writeToString ()Ljava/lang/String; a
net/minecraft/data/BlockFamilies hz
	ACACIA_PLANKS a
	ANDESITE i
	BIRCH_PLANKS b
	BLACKSTONE k
	BRICKS n
	COBBLED_DEEPSLATE ad
	COBBLESTONE G
	COPPER_BLOCK q
	CRIMSON_PLANKS c
	CUT_COPPER r
	CUT_RED_SANDSTONE Y
	CUT_SANDSTONE V
	DARK_OAK_PLANKS f
	DARK_PRISMARINE R
	DEEPSLATE ac
	DEEPSLATE_BRICKS af
	DEEPSLATE_TILES ag
	DIORITE I
	END_STONE_BRICKS o
	EXPOSED_COPPER u
	EXPOSED_CUT_COPPER v
	GRANITE K
	JUNGLE_PLANKS d
	MAP ah
	MOSSY_COBBLESTONE H
	MOSSY_STONE_BRICKS p
	NETHER_BRICKS M
	OAK_PLANKS e
	OXIDIZED_COPPER C
	OXIDIZED_CUT_COPPER D
	POLISHED_ANDESITE j
	POLISHED_BLACKSTONE l
	POLISHED_BLACKSTONE_BRICKS m
	POLISHED_DEEPSLATE ae
	POLISHED_DIORITE J
	POLISHED_GRANITE L
	PRISMARINE O
	PRISMARINE_BRICKS Q
	PURPUR P
	QUARTZ S
	RECIPE_GROUP_PREFIX_WOODEN ai
	RECIPE_UNLOCKED_BY_HAS_PLANKS aj
	RED_NETHER_BRICKS N
	RED_SANDSTONE X
	SANDSTONE U
	SMOOTH_QUARTZ T
	SMOOTH_RED_SANDSTONE Z
	SMOOTH_SANDSTONE W
	SPRUCE_PLANKS g
	STONE aa
	STONE_BRICK ab
	WARPED_PLANKS h
	WAXED_COPPER_BLOCK s
	WAXED_CUT_COPPER t
	WAXED_EXPOSED_COPPER w
	WAXED_EXPOSED_CUT_COPPER x
	WAXED_OXIDIZED_COPPER E
	WAXED_OXIDIZED_CUT_COPPER F
	WAXED_WEATHERED_COPPER A
	WAXED_WEATHERED_CUT_COPPER B
	WEATHERED_COPPER y
	WEATHERED_CUT_COPPER z
	familyBuilder (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; a
	getAllFamilies ()Ljava/util/stream/Stream; a
net/minecraft/data/BlockFamily ia
	baseBlock a
	generateModel c
	generateRecipe d
	recipeGroupPrefix e
	recipeUnlockedBy f
	variants b
	get (Lnet/minecraft/data/BlockFamily$Variant;)Lnet/minecraft/world/level/block/Block; a
	getBaseBlock ()Lnet/minecraft/world/level/block/Block; a
	getRecipeGroupPrefix ()Ljava/util/Optional; e
	getRecipeUnlockedBy ()Ljava/util/Optional; f
	getVariants ()Ljava/util/Map; b
	shouldGenerateModel ()Z c
	shouldGenerateRecipe ()Z d
net/minecraft/data/BlockFamily$Builder ia$a
	family a
	button (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; a
	chiseled (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; b
	cracked (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; c
	cut (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; d
	dontGenerateModel ()Lnet/minecraft/data/BlockFamily$Builder; b
	dontGenerateRecipe ()Lnet/minecraft/data/BlockFamily$Builder; c
	door (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; e
	fence (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; f
	fenceGate (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; g
	getFamily ()Lnet/minecraft/data/BlockFamily; a
	polished (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; k
	pressurePlate (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; j
	recipeGroupPrefix (Ljava/lang/String;)Lnet/minecraft/data/BlockFamily$Builder; a
	recipeUnlockedBy (Ljava/lang/String;)Lnet/minecraft/data/BlockFamily$Builder; b
	sign (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; a
	slab (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; h
	stairs (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; i
	trapdoor (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; l
	wall (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; m
net/minecraft/data/BlockFamily$Variant ia$b
	$VALUES q
	BUTTON a
	CHISELED b
	CRACKED c
	CUT d
	DOOR e
	FENCE f
	FENCE_GATE g
	POLISHED l
	PRESSURE_PLATE k
	SIGN h
	SLAB i
	STAIRS j
	TRAPDOOR m
	WALL n
	WALL_SIGN o
	name p
	$values ()[Lnet/minecraft/data/BlockFamily$Variant; b
	getName ()Ljava/lang/String; a
net/minecraft/data/BuiltinRegistries ib
	BIOME i
	CONFIGURED_CARVER d
	CONFIGURED_FEATURE e
	CONFIGURED_STRUCTURE_FEATURE f
	CONFIGURED_SURFACE_BUILDER c
	LOADERS k
	LOGGER a
	NOISE_GENERATOR_SETTINGS j
	PROCESSOR_LIST g
	REGISTRY b
	TEMPLATE_POOL h
	WRITABLE_REGISTRY l
	bootstrap ()V a
	internalRegister (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/WritableRegistry;Ljava/util/function/Supplier;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/core/WritableRegistry; a
	register (Lnet/minecraft/core/Registry;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object; a
	register (Lnet/minecraft/core/Registry;Lnet/minecraft/resources/ResourceLocation;Ljava/lang/Object;)Ljava/lang/Object; a
	registerMapping (Lnet/minecraft/core/Registry;ILnet/minecraft/resources/ResourceKey;Ljava/lang/Object;)Ljava/lang/Object; a
	registerSimple (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Lifecycle;Ljava/util/function/Supplier;)Lnet/minecraft/core/Registry; a
	registerSimple (Lnet/minecraft/resources/ResourceKey;Ljava/util/function/Supplier;)Lnet/minecraft/core/Registry; a
net/minecraft/data/DataGenerator ic
	LOGGER a
	inputFolders b
	outputFolder c
	providers d
	addProvider (Lnet/minecraft/data/DataProvider;)V a
	getInputFolders ()Ljava/util/Collection; a
	getOutputFolder ()Ljava/nio/file/Path; b
	run ()V c
net/minecraft/data/DataProvider id
	SHA1 a
	getName ()Ljava/lang/String; a
	run (Lnet/minecraft/data/HashCache;)V a
	save (Lcom/google/gson/Gson;Lnet/minecraft/data/HashCache;Lcom/google/gson/JsonElement;Ljava/nio/file/Path;)V a
net/minecraft/data/HashCache ie
	LOGGER a
	cachePath c
	hits d
	keep g
	newCache f
	oldCache e
	path b
	getHash (Ljava/nio/file/Path;)Ljava/lang/String; a
	had (Ljava/nio/file/Path;)Z b
	keep (Ljava/nio/file/Path;)V c
	purgeStaleAndWrite ()V a
	putNew (Ljava/nio/file/Path;Ljava/lang/String;)V a
	removeStale ()V b
	walkOutputFiles ()Ljava/util/stream/Stream; c
net/minecraft/data/advancements/AdvancementProvider ig
	GSON c
	LOGGER b
	generator d
	tabs e
	createPath (Ljava/nio/file/Path;Lnet/minecraft/advancements/Advancement;)Ljava/nio/file/Path; a
	getName ()Ljava/lang/String; a
	run (Lnet/minecraft/data/HashCache;)V a
net/minecraft/data/advancements/AdventureAdvancements ih
	EXPLORABLE_BIOMES a
	MOBS_TO_KILL b
	accept (Ljava/util/function/Consumer;)V a
	addBiomes (Lnet/minecraft/advancements/Advancement$Builder;Ljava/util/List;)Lnet/minecraft/advancements/Advancement$Builder; a
	addMobsToKill (Lnet/minecraft/advancements/Advancement$Builder;)Lnet/minecraft/advancements/Advancement$Builder; a
	fireCountAndBystander (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/LightningStrikeTrigger$TriggerInstance; a
	lookAtThroughItem (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/item/Item;)Lnet/minecraft/advancements/critereon/UsingItemTrigger$TriggerInstance; a
net/minecraft/data/advancements/HusbandryAdvancements ii
	BREEDABLE_ANIMALS a
	EDIBLE_ITEMS d
	FISH b
	FISH_BUCKETS c
	WAX_SCRAPING_TOOLS e
	accept (Ljava/util/function/Consumer;)V a
	addBreedable (Lnet/minecraft/advancements/Advancement$Builder;)Lnet/minecraft/advancements/Advancement$Builder; b
	addCatVariants (Lnet/minecraft/advancements/Advancement$Builder;)Lnet/minecraft/advancements/Advancement$Builder; e
	addFish (Lnet/minecraft/advancements/Advancement$Builder;)Lnet/minecraft/advancements/Advancement$Builder; d
	addFishBuckets (Lnet/minecraft/advancements/Advancement$Builder;)Lnet/minecraft/advancements/Advancement$Builder; c
	addFood (Lnet/minecraft/advancements/Advancement$Builder;)Lnet/minecraft/advancements/Advancement$Builder; a
net/minecraft/data/advancements/NetherAdvancements ij
	DISTRACT_PIGLIN_PLAYER_ARMOR_PREDICATE b
	EXPLORABLE_BIOMES a
	accept (Ljava/util/function/Consumer;)V a
net/minecraft/data/advancements/StoryAdvancements ik
	accept (Ljava/util/function/Consumer;)V a
net/minecraft/data/advancements/TheEndAdvancements il
	accept (Ljava/util/function/Consumer;)V a
net/minecraft/data/info/BlockListReport in
	GSON b
	generator c
	getName ()Ljava/lang/String; a
	run (Lnet/minecraft/data/HashCache;)V a
net/minecraft/data/info/CommandsReport io
	GSON b
	generator c
	getName ()Ljava/lang/String; a
	run (Lnet/minecraft/data/HashCache;)V a
net/minecraft/data/info/RegistryDumpReport ip
	GSON b
	generator c
	dumpRegistry (Lnet/minecraft/core/Registry;)Lcom/google/gson/JsonElement; a
	getName ()Ljava/lang/String; a
	run (Lnet/minecraft/data/HashCache;)V a
net/minecraft/data/loot/BlockLoot ir
	EXPLOSION_RESISTANT f
	HAS_NO_SHEARS_OR_SILK_TOUCH e
	HAS_NO_SILK_TOUCH b
	HAS_SHEARS c
	HAS_SHEARS_OR_SILK_TOUCH d
	HAS_SILK_TOUCH a
	JUNGLE_LEAVES_SAPLING_CHANGES h
	NORMAL_LEAVES_SAPLING_CHANCES g
	map i
	accept (Ljava/util/function/BiConsumer;)V a
	add (Lnet/minecraft/world/level/block/Block;Ljava/util/function/Function;)V a
	add (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/storage/loot/LootTable$Builder;)V a
	addNetherVinesDropTable (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V c
	applyExplosionCondition (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/storage/loot/predicates/ConditionUserBuilder;)Ljava/lang/Object; a
	applyExplosionDecay (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/storage/loot/functions/FunctionUserBuilder;)Ljava/lang/Object; a
	createAttachedStemDrops (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; c
	createBannerDrop (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; k
	createBeeHiveDrop (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; m
	createBeeNestDrop (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; l
	createCandleCakeDrops (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; s
	createCandleDrops (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; r
	createCaveVinesDrop (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; n
	createCopperOreDrops (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; h
	createCropDrops (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/Item;Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createDoorTable (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createDoublePlantShearsDrop (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; q
	createDoublePlantWithSeedDrops (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; b
	createGlowLichenDrops (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; p
	createGrassDrops (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; o
	createLapisOreDrops (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; i
	createLeavesDrops (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;[F)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createMushroomBlockDrop (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; c
	createNameableBlockEntityTable (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; f
	createOakLeavesDrops (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;[F)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; b
	createOreDrop (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createPotFlowerItemTable (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; c
	createRedstoneOreDrops (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; j
	createSelfDropDispatchTable (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createShearsDispatchTable (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; b
	createShearsOnlyDrop (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; d
	createShulkerBoxDrop (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; g
	createSilkTouchDispatchTable (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createSilkTouchOnlyTable (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; b
	createSilkTouchOrShearsDispatchTable (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; c
	createSingleItemTable (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createSingleItemTable (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createSingleItemTableWithSilkTouch (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; b
	createSingleItemTableWithSilkTouch (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createSinglePropConditionTable (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createSlabItemTable (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; e
	createStemDrops (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; b
	dropOther (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/ItemLike;)V a
	dropPottedContents (Lnet/minecraft/world/level/block/Block;)V b
	dropSelf (Lnet/minecraft/world/level/block/Block;)V d
	dropWhenSilkTouch (Lnet/minecraft/world/level/block/Block;)V c
	noDrop ()Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	otherWhenSilkTouch (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V a
net/minecraft/data/loot/ChestLoot is
	accept (Ljava/util/function/BiConsumer;)V a
net/minecraft/data/loot/EntityLoot it
	ENTITY_ON_FIRE a
	SPECIAL_LOOT_TABLE_TYPES b
	map c
	accept (Ljava/util/function/BiConsumer;)V a
	add (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/level/storage/loot/LootTable$Builder;)V a
	add (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/storage/loot/LootTable$Builder;)V a
	createSheepTable (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
net/minecraft/data/loot/FishingLoot iu
	IN_BAMBOO_JUNGLE d
	IN_BAMBOO_JUNGLE_HILLS g
	IN_JUNGLE a
	IN_JUNGLE_EDGE c
	IN_JUNGLE_HILLS b
	IN_MODIFIED_JUNGLE e
	IN_MODIFIED_JUNGLE_EDGE f
	accept (Ljava/util/function/BiConsumer;)V a
net/minecraft/data/loot/GiftLoot iv
	accept (Ljava/util/function/BiConsumer;)V a
net/minecraft/data/loot/LootTableProvider iw
	GSON c
	LOGGER b
	generator d
	subProviders e
	createPath (Ljava/nio/file/Path;Lnet/minecraft/resources/ResourceLocation;)Ljava/nio/file/Path; a
	getName ()Ljava/lang/String; a
	run (Lnet/minecraft/data/HashCache;)V a
net/minecraft/data/loot/PiglinBarterLoot ix
	accept (Ljava/util/function/BiConsumer;)V a
net/minecraft/data/models/BlockModelGenerators iz
	MULTIFACE_GENERATOR a
	SHAPE_CONSUMERS h
	blockStateOutput b
	fullBlockModelCustomGenerators f
	modelOutput c
	nonOrientableTrapdoor e
	skippedAutoModelsOutput d
	texturedModels g
	applyRotation (Lnet/minecraft/core/FrontAndTop;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/Variant; a
	blockEntityModels (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockEntityModelGenerator; a
	blockEntityModels (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockEntityModelGenerator; d
	configureDoorHalf (Lnet/minecraft/data/models/blockstates/PropertyDispatch$C4;Lnet/minecraft/world/level/block/state/properties/DoubleBlockHalf;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C4; a
	copyModel (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V h
	createActiveRail (Lnet/minecraft/world/level/block/Block;)V m
	createAirLikeBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;)V f
	createAirLikeBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/Item;)V a
	createAmethystCluster (Lnet/minecraft/world/level/block/Block;)V t
	createAmethystClusters ()V D
	createAnvil (Lnet/minecraft/world/level/block/Block;)V o
	createAxisAlignedPillarBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/TexturedModel$Provider;)V a
	createAxisAlignedPillarBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; d
	createAxisAlignedPillarBlockCustomModel (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;)V e
	createAzalea (Lnet/minecraft/world/level/block/Block;)V p
	createBamboo ()V k
	createBambooModels (I)Ljava/util/List; a
	createBarrel ()V m
	createBedItem (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V j
	createBeeNest (Lnet/minecraft/world/level/block/Block;Ljava/util/function/Function;)V a
	createBell ()V n
	createBigDripLeafBlock ()V g
	createBookshelf ()V p
	createBooleanModelDispatch (Lnet/minecraft/world/level/block/state/properties/BooleanProperty;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; a
	createBrewingStand ()V t
	createButton (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; b
	createCakeBlock ()V u
	createCampfires ([Lnet/minecraft/world/level/block/Block;)V a
	createCandleAndCandleCake (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V l
	createCartographyTable ()V v
	createCauldrons ()V y
	createCaveVines ()V Z
	createChorusFlower ()V z
	createChorusPlant ()V B
	createCocoa ()V M
	createColoredBlockWithRandomRotations (Lnet/minecraft/data/models/model/TexturedModel$Provider;[Lnet/minecraft/world/level/block/Block;)V a
	createColoredBlockWithStateRotations (Lnet/minecraft/data/models/model/TexturedModel$Provider;[Lnet/minecraft/world/level/block/Block;)V b
	createColumnWithFacing ()Lnet/minecraft/data/models/blockstates/PropertyDispatch; l
	createCommandBlock (Lnet/minecraft/world/level/block/Block;)V n
	createComparator ()V r
	createComposter ()V C
	createCoral (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V a
	createCoralFans (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V b
	createCraftingTableLike (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Ljava/util/function/BiFunction;)V a
	createCropBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/state/properties/Property;[I)V a
	createCrossBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/BlockModelGenerators$TintState;)V b
	createCrossBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/BlockModelGenerators$TintState;Lnet/minecraft/data/models/model/TextureMapping;)V b
	createCrossBlockWithDefaultItem (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/BlockModelGenerators$TintState;)V a
	createCrossBlockWithDefaultItem (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/BlockModelGenerators$TintState;Lnet/minecraft/data/models/model/TextureMapping;)V a
	createDaylightDetector ()V F
	createDirtPath ()V N
	createDispenserBlock (Lnet/minecraft/world/level/block/Block;)V s
	createDoor (Lnet/minecraft/world/level/block/Block;)V g
	createDoor (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; a
	createDoubleBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)V f
	createDoublePlant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/BlockModelGenerators$TintState;)V c
	createEmptyOrFullDispatch (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; a
	createEndPortalFrame ()V A
	createFacingDispatch ()Lnet/minecraft/data/models/blockstates/PropertyDispatch; e
	createFarmland ()V H
	createFence (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; c
	createFenceGate (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; b
	createFire ()V I
	createFloorFireModels (Lnet/minecraft/world/level/block/Block;)Ljava/util/List; w
	createFrostedIce ()V K
	createFullAndCarpetBlocks (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V e
	createFurnace (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/TexturedModel$Provider;)V d
	createGlassBlocks (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V f
	createGrassBlocks ()V L
	createGrassLikeBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/data/models/blockstates/Variant;)V a
	createGrindstone ()V o
	createGrowingPlant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/BlockModelGenerators$TintState;)V b
	createHopper ()V O
	createHorizontalFacingDispatch ()Lnet/minecraft/data/models/blockstates/PropertyDispatch; b
	createHorizontalFacingDispatchAlt ()Lnet/minecraft/data/models/blockstates/PropertyDispatch; c
	createHorizontallyRotatedBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/TexturedModel$Provider;)V b
	createInfestedDeepslate ()V an
	createInfestedStone ()V am
	createIronBars ()V P
	createJigsaw ()V ap
	createLantern (Lnet/minecraft/world/level/block/Block;)V z
	createLever ()V Q
	createLightBlockItems ()V ar
	createLightningRod ()V G
	createLilyPad ()V R
	createMagmaBlock ()V al
	createMirroredColumnGenerator (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/data/models/model/TextureMapping;Ljava/util/function/BiConsumer;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; b
	createMirroredCubeGenerator (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/data/models/model/TextureMapping;Ljava/util/function/BiConsumer;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; a
	createMultiface (Lnet/minecraft/world/level/block/Block;)V B
	createMushroomBlock (Lnet/minecraft/world/level/block/Block;)V r
	createNetherPortalBlock ()V S
	createNetherRoots (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V k
	createNetherrack ()V T
	createNonTemplateHorizontalBlock (Lnet/minecraft/world/level/block/Block;)V A
	createNonTemplateModelBlock (Lnet/minecraft/world/level/block/Block;)V k
	createNonTemplateModelBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V a
	createNormalTorch (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V i
	createNyliumBlock (Lnet/minecraft/world/level/block/Block;)V u
	createObserver ()V U
	createOrientableTrapdoor (Lnet/minecraft/world/level/block/Block;)V h
	createOrientableTrapdoor (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; c
	createPassiveRail (Lnet/minecraft/world/level/block/Block;)V l
	createPetrifiedOakSlab ()V aq
	createPistonHeads ()V W
	createPistonVariant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/data/models/model/TextureMapping;)V a
	createPistons ()V V
	createPlant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/BlockModelGenerators$TintState;)V a
	createPointedDripstone ()V E
	createPointedDripstoneVariant (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/properties/DripstoneThickness;)Lnet/minecraft/data/models/blockstates/Variant; a
	createPottedAzalea (Lnet/minecraft/world/level/block/Block;)V q
	createPressurePlate (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; e
	createPumpkinVariant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/TextureMapping;)V a
	createPumpkins ()V x
	createRedstoneLamp ()V aa
	createRedstoneTorch ()V ab
	createRedstoneWire ()V q
	createRepeater ()V ac
	createRespawnAnchor ()V ao
	createRotatableColumn (Lnet/minecraft/world/level/block/Block;)V v
	createRotatedMirroredVariantBlock (Lnet/minecraft/world/level/block/Block;)V c
	createRotatedPillar ()Lnet/minecraft/data/models/blockstates/PropertyDispatch; f
	createRotatedPillarWithHorizontalVariant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/TexturedModel$Provider;Lnet/minecraft/data/models/model/TexturedModel$Provider;)V a
	createRotatedPillarWithHorizontalVariant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; d
	createRotatedVariant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/MultiVariantGenerator; b
	createRotatedVariant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/MultiVariantGenerator; a
	createRotatedVariantBlock (Lnet/minecraft/world/level/block/Block;)V d
	createRotatedVariants (Lnet/minecraft/resources/ResourceLocation;)[Lnet/minecraft/data/models/blockstates/Variant; a
	createScaffolding ()V Y
	createSculkSensor ()V X
	createSeaPickle ()V ad
	createShulkerBox (Lnet/minecraft/world/level/block/Block;)V C
	createSideFireModels (Lnet/minecraft/world/level/block/Block;)Ljava/util/List; x
	createSimpleBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/MultiVariantGenerator; c
	createSimpleFlatItemModel (Lnet/minecraft/world/item/Item;)V a
	createSimpleFlatItemModel (Lnet/minecraft/world/level/block/Block;)V b
	createSimpleFlatItemModel (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;)V a
	createSlab (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; e
	createSmallDripleaf ()V j
	createSmithingTable ()V w
	createSmoothStoneSlab ()V s
	createSnowBlocks ()V ae
	createSoulFire ()V J
	createStairs (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; b
	createStems (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V c
	createStonecutter ()V af
	createStructureBlock ()V ag
	createSuffixedVariant (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;Lnet/minecraft/data/models/model/ModelTemplate;Ljava/util/function/Function;)Lnet/minecraft/resources/ResourceLocation; a
	createSunflower ()V h
	createSweetBerryBush ()V ah
	createTallSeagrass ()V i
	createTopFireModels (Lnet/minecraft/world/level/block/Block;)Ljava/util/List; y
	createTorchHorizontalDispatch ()Lnet/minecraft/data/models/blockstates/PropertyDispatch; d
	createTrapdoor (Lnet/minecraft/world/level/block/Block;)V i
	createTrapdoor (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; d
	createTripwire ()V ai
	createTripwireHook ()V aj
	createTrivialBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/TextureMapping;Lnet/minecraft/data/models/model/ModelTemplate;)V a
	createTrivialBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/TexturedModel$Provider;)V c
	createTrivialCube (Lnet/minecraft/world/level/block/Block;)V e
	createTurtleEgg ()V ak
	createTurtleEggModel (ILjava/lang/String;Lnet/minecraft/data/models/model/TextureMapping;)Lnet/minecraft/resources/ResourceLocation; a
	createTurtleEggModel (Ljava/lang/Integer;Ljava/lang/Integer;)Lnet/minecraft/resources/ResourceLocation; a
	createWall (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; a
	createWeightedPressurePlate (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V g
	delegateItemModel (Lnet/minecraft/world/item/Item;Lnet/minecraft/resources/ResourceLocation;)V a
	delegateItemModel (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;)V a
	family (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; f
	run ()V a
	skipAutoItemBlock (Lnet/minecraft/world/level/block/Block;)V a
	woodProvider (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$WoodProvider; j
	wrapModels (Ljava/util/List;Ljava/util/function/UnaryOperator;)Ljava/util/List; a
net/minecraft/data/models/BlockModelGenerators$BlockEntityModelGenerator iz$a
	baseModel b
	create ([Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockEntityModelGenerator; a
	createWithCustomBlockItemModel (Lnet/minecraft/data/models/model/ModelTemplate;[Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockEntityModelGenerator; a
	createWithoutBlockItem ([Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockEntityModelGenerator; b
net/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider iz$b
	family d
	fullBlock e
	mapping b
	models c
	button (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; a
	door (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; j
	fence (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; c
	fenceGate (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; d
	fullBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/ModelTemplate;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; a
	fullBlockCopies ([Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; a
	fullBlockVariant (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; i
	generateFor (Lnet/minecraft/data/BlockFamily;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; a
	getOrCreateModel (Lnet/minecraft/data/models/model/ModelTemplate;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/resources/ResourceLocation; a
	pressurePlate (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; e
	sign (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; f
	slab (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; g
	stairs (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; h
	trapdoor (Lnet/minecraft/world/level/block/Block;)V k
	wall (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; b
net/minecraft/data/models/BlockModelGenerators$BlockStateGeneratorSupplier iz$c
net/minecraft/data/models/BlockModelGenerators$TintState iz$d
	$VALUES c
	NOT_TINTED b
	TINTED a
	$values ()[Lnet/minecraft/data/models/BlockModelGenerators$TintState; c
	getCross ()Lnet/minecraft/data/models/model/ModelTemplate; a
	getCrossPot ()Lnet/minecraft/data/models/model/ModelTemplate; b
net/minecraft/data/models/BlockModelGenerators$WoodProvider iz$e
	logMapping b
	log (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$WoodProvider; b
	logWithHorizontal (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$WoodProvider; c
	wood (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$WoodProvider; a
net/minecraft/data/models/ItemModelGenerators ja
	output a
	generateFlatItem (Lnet/minecraft/world/item/Item;Ljava/lang/String;Lnet/minecraft/data/models/model/ModelTemplate;)V a
	generateFlatItem (Lnet/minecraft/world/item/Item;Lnet/minecraft/data/models/model/ModelTemplate;)V a
	generateFlatItem (Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/Item;Lnet/minecraft/data/models/model/ModelTemplate;)V a
	run ()V a
net/minecraft/data/models/ModelProvider jb
	GSON c
	LOGGER b
	generator d
	createBlockStatePath (Ljava/nio/file/Path;Lnet/minecraft/world/level/block/Block;)Ljava/nio/file/Path; a
	createModelPath (Ljava/nio/file/Path;Lnet/minecraft/resources/ResourceLocation;)Ljava/nio/file/Path; a
	getName ()Ljava/lang/String; a
	run (Lnet/minecraft/data/HashCache;)V a
	saveCollection (Lnet/minecraft/data/HashCache;Ljava/nio/file/Path;Ljava/util/Map;Ljava/util/function/BiFunction;)V a
net/minecraft/data/models/blockstates/BlockStateGenerator jc
	getBlock ()Lnet/minecraft/world/level/block/Block; a
net/minecraft/data/models/blockstates/Condition jd
	and ([Lnet/minecraft/data/models/blockstates/Condition;)Lnet/minecraft/data/models/blockstates/Condition; a
	condition ()Lnet/minecraft/data/models/blockstates/Condition$TerminalCondition; a
	or ([Lnet/minecraft/data/models/blockstates/Condition;)Lnet/minecraft/data/models/blockstates/Condition; b
	validate (Lnet/minecraft/world/level/block/state/StateDefinition;)V a
net/minecraft/data/models/blockstates/Condition$CompositeCondition jd$a
	operation a
	subconditions b
	get ()Lcom/google/gson/JsonElement; b
	validate (Lnet/minecraft/world/level/block/state/StateDefinition;)V a
net/minecraft/data/models/blockstates/Condition$Operation jd$b
	$VALUES d
	AND a
	OR b
	id c
	$values ()[Lnet/minecraft/data/models/blockstates/Condition$Operation; a
net/minecraft/data/models/blockstates/Condition$TerminalCondition jd$c
	terms a
	get ()Lcom/google/gson/JsonElement; b
	getTerm (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;[Ljava/lang/Comparable;)Ljava/lang/String; c
	joinValues (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/util/stream/Stream;)Ljava/lang/String; a
	negatedTerm (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)Lnet/minecraft/data/models/blockstates/Condition$TerminalCondition; b
	negatedTerm (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;[Ljava/lang/Comparable;)Lnet/minecraft/data/models/blockstates/Condition$TerminalCondition; b
	putValue (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/String;)V a
	term (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)Lnet/minecraft/data/models/blockstates/Condition$TerminalCondition; a
	term (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;[Ljava/lang/Comparable;)Lnet/minecraft/data/models/blockstates/Condition$TerminalCondition; a
	validate (Lnet/minecraft/world/level/block/state/StateDefinition;)V a
net/minecraft/data/models/blockstates/MultiPartGenerator je
	block a
	parts b
	get ()Lcom/google/gson/JsonElement; b
	getBlock ()Lnet/minecraft/world/level/block/Block; a
	multiPart (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/blockstates/MultiPartGenerator; a
	with (Ljava/util/List;)Lnet/minecraft/data/models/blockstates/MultiPartGenerator; a
	with (Lnet/minecraft/data/models/blockstates/Condition;Ljava/util/List;)Lnet/minecraft/data/models/blockstates/MultiPartGenerator; a
	with (Lnet/minecraft/data/models/blockstates/Condition;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/MultiPartGenerator; a
	with (Lnet/minecraft/data/models/blockstates/Condition;[Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/MultiPartGenerator; a
	with (Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/MultiPartGenerator; a
net/minecraft/data/models/blockstates/MultiPartGenerator$ConditionalEntry je$a
	condition a
	decorate (Lcom/google/gson/JsonObject;)V a
	validate (Lnet/minecraft/world/level/block/state/StateDefinition;)V a
net/minecraft/data/models/blockstates/MultiPartGenerator$Entry je$b
	variants a
	decorate (Lcom/google/gson/JsonObject;)V a
	get ()Lcom/google/gson/JsonElement; a
	validate (Lnet/minecraft/world/level/block/state/StateDefinition;)V a
net/minecraft/data/models/blockstates/MultiVariantGenerator jf
	baseVariants b
	block a
	declaredPropertySets d
	seenProperties c
	get ()Lcom/google/gson/JsonElement; b
	getBlock ()Lnet/minecraft/world/level/block/Block; a
	mergeVariants (Ljava/util/List;Ljava/util/List;)Ljava/util/List; a
	multiVariant (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/blockstates/MultiVariantGenerator; a
	multiVariant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/MultiVariantGenerator; a
	multiVariant (Lnet/minecraft/world/level/block/Block;[Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/MultiVariantGenerator; a
	with (Lnet/minecraft/data/models/blockstates/PropertyDispatch;)Lnet/minecraft/data/models/blockstates/MultiVariantGenerator; a
net/minecraft/data/models/blockstates/PropertyDispatch jg
	values a
	getDefinedProperties ()Ljava/util/List; b
	getEntries ()Ljava/util/Map; a
	properties (Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C2; a
	properties (Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C3; a
	properties (Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C4; a
	properties (Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C5; a
	property (Lnet/minecraft/world/level/block/state/properties/Property;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C1; a
	putValue (Lnet/minecraft/data/models/blockstates/Selector;Ljava/util/List;)V a
	verifyComplete ()V c
net/minecraft/data/models/blockstates/PropertyDispatch$C1 jg$a
	property1 a
	generate (Ljava/util/function/Function;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; a
	generateList (Ljava/util/function/Function;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; b
	getDefinedProperties ()Ljava/util/List; b
	select (Ljava/lang/Comparable;Ljava/util/List;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C1; a
	select (Ljava/lang/Comparable;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C1; a
net/minecraft/data/models/blockstates/PropertyDispatch$C2 jg$b
	property1 a
	property2 b
	generate (Ljava/util/function/BiFunction;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; a
	generateList (Ljava/util/function/BiFunction;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; b
	getDefinedProperties ()Ljava/util/List; b
	select (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C2; a
	select (Ljava/lang/Comparable;Ljava/lang/Comparable;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C2; a
net/minecraft/data/models/blockstates/PropertyDispatch$C3 jg$c
	property1 a
	property2 b
	property3 c
	generate (Lnet/minecraft/data/models/blockstates/PropertyDispatch$TriFunction;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; a
	generateList (Lnet/minecraft/data/models/blockstates/PropertyDispatch$TriFunction;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; b
	getDefinedProperties ()Ljava/util/List; b
	select (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C3; a
	select (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C3; a
net/minecraft/data/models/blockstates/PropertyDispatch$C4 jg$d
	property1 a
	property2 b
	property3 c
	property4 d
	generate (Lnet/minecraft/data/models/blockstates/PropertyDispatch$QuadFunction;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; a
	generateList (Lnet/minecraft/data/models/blockstates/PropertyDispatch$QuadFunction;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; b
	getDefinedProperties ()Ljava/util/List; b
	select (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C4; a
	select (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C4; a
net/minecraft/data/models/blockstates/PropertyDispatch$C5 jg$e
	property1 a
	property2 b
	property3 c
	property4 d
	property5 e
	generate (Lnet/minecraft/data/models/blockstates/PropertyDispatch$PentaFunction;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; a
	generateList (Lnet/minecraft/data/models/blockstates/PropertyDispatch$PentaFunction;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; b
	getDefinedProperties ()Ljava/util/List; b
	select (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C5; a
	select (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C5; a
net/minecraft/data/models/blockstates/PropertyDispatch$PentaFunction jg$f
	apply (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; a
net/minecraft/data/models/blockstates/PropertyDispatch$QuadFunction jg$g
	apply (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; a
net/minecraft/data/models/blockstates/PropertyDispatch$TriFunction jg$h
net/minecraft/data/models/blockstates/Selector jh
	COMPARE_BY_NAME b
	EMPTY a
	values c
	empty ()Lnet/minecraft/data/models/blockstates/Selector; a
	extend (Lnet/minecraft/data/models/blockstates/Selector;)Lnet/minecraft/data/models/blockstates/Selector; a
	extend (Lnet/minecraft/world/level/block/state/properties/Property$Value;)Lnet/minecraft/data/models/blockstates/Selector; a
	getKey ()Ljava/lang/String; b
	of ([Lnet/minecraft/world/level/block/state/properties/Property$Value;)Lnet/minecraft/data/models/blockstates/Selector; a
net/minecraft/data/models/blockstates/Variant ji
	values a
	convertList (Ljava/util/List;)Lcom/google/gson/JsonElement; a
	get ()Lcom/google/gson/JsonElement; b
	merge (Lnet/minecraft/data/models/blockstates/Variant;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/Variant; a
	variant ()Lnet/minecraft/data/models/blockstates/Variant; a
	with (Lnet/minecraft/data/models/blockstates/VariantProperty;Ljava/lang/Object;)Lnet/minecraft/data/models/blockstates/Variant; a
net/minecraft/data/models/blockstates/VariantProperties jj
	MODEL c
	UV_LOCK d
	WEIGHT e
	X_ROT a
	Y_ROT b
net/minecraft/data/models/blockstates/VariantProperties$Rotation jj$a
	$VALUES f
	R0 a
	R180 c
	R270 d
	R90 b
	value e
	$values ()[Lnet/minecraft/data/models/blockstates/VariantProperties$Rotation; a
net/minecraft/data/models/blockstates/VariantProperty jk
	key a
	serializer b
	withValue (Ljava/lang/Object;)Lnet/minecraft/data/models/blockstates/VariantProperty$Value; a
net/minecraft/data/models/blockstates/VariantProperty$Value jk$a
	value b
	addToVariant (Lcom/google/gson/JsonObject;)V a
	getKey ()Lnet/minecraft/data/models/blockstates/VariantProperty; a
net/minecraft/data/models/model/DelegatedModel jm
	parent a
	get ()Lcom/google/gson/JsonElement; a
net/minecraft/data/models/model/ModelLocationUtils jn
	decorateBlockModelLocation (Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	decorateItemModelLocation (Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; b
	getModelLocation (Lnet/minecraft/world/item/Item;)Lnet/minecraft/resources/ResourceLocation; a
	getModelLocation (Lnet/minecraft/world/item/Item;Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	getModelLocation (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/resources/ResourceLocation; a
	getModelLocation (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/data/models/model/ModelTemplate jo
	model a
	requiredSlots b
	suffix c
	create (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/data/models/model/TextureMapping;Ljava/util/function/BiConsumer;)Lnet/minecraft/resources/ResourceLocation; a
	create (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/TextureMapping;Ljava/util/function/BiConsumer;)Lnet/minecraft/resources/ResourceLocation; a
	createMap (Lnet/minecraft/data/models/model/TextureMapping;)Ljava/util/Map; a
	createWithOverride (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;Lnet/minecraft/data/models/model/TextureMapping;Ljava/util/function/BiConsumer;)Lnet/minecraft/resources/ResourceLocation; b
	createWithSuffix (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;Lnet/minecraft/data/models/model/TextureMapping;Ljava/util/function/BiConsumer;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/data/models/model/ModelTemplates jp
	ANVIL ao
	ATTACHED_STEM aq
	AZALEA aP
	BANNER_INVENTORY aW
	BED_INVENTORY aV
	BUTTON m
	BUTTON_INVENTORY o
	BUTTON_PRESSED n
	CAMPFIRE ay
	CANDLE aY
	CANDLE_CAKE bc
	CARPET ac
	CAULDRON_FULL aO
	CAULDRON_LEVEL1 aM
	CAULDRON_LEVEL2 aN
	CHORUS_FLOWER ag
	COMMAND_BLOCK an
	CORAL_FAN ad
	CORAL_WALL_FAN ae
	CROP ar
	CROSS U
	CUBE a
	CUBE_ALL c
	CUBE_BOTTOM_TOP i
	CUBE_COLUMN e
	CUBE_COLUMN_HORIZONTAL f
	CUBE_COLUMN_MIRRORED g
	CUBE_DIRECTIONAL b
	CUBE_MIRRORED_ALL d
	CUBE_ORIENTABLE j
	CUBE_ORIENTABLE_TOP_BOTTOM k
	CUBE_ORIENTABLE_VERTICAL l
	CUBE_TOP h
	DAYLIGHT_DETECTOR ah
	DOOR_BOTTOM p
	DOOR_BOTTOM_HINGE q
	DOOR_TOP r
	DOOR_TOP_HINGE s
	FARMLAND as
	FENCE_GATE_CLOSED A
	FENCE_GATE_OPEN B
	FENCE_GATE_WALL_CLOSED C
	FENCE_GATE_WALL_OPEN D
	FENCE_INVENTORY v
	FENCE_POST t
	FENCE_SIDE u
	FIRE_FLOOR at
	FIRE_SIDE au
	FIRE_SIDE_ALT av
	FIRE_UP aw
	FIRE_UP_ALT ax
	FLAT_HANDHELD_ITEM aS
	FLAT_HANDHELD_ROD_ITEM aT
	FLAT_ITEM aR
	FLOWER_POT_CROSS W
	FOUR_CANDLES bb
	FOUR_TURTLE_EGGS aK
	GLAZED_TERRACOTTA af
	HANGING_LANTERN aA
	LANTERN az
	LEAVES J
	ORIENTABLE_TRAPDOOR_BOTTOM R
	ORIENTABLE_TRAPDOOR_OPEN S
	ORIENTABLE_TRAPDOOR_TOP Q
	PARTICLE_ONLY G
	PISTON aD
	PISTON_HEAD aE
	PISTON_HEAD_SHORT aF
	POINTED_DRIPSTONE T
	POTTED_AZALEA aQ
	PRESSURE_PLATE_DOWN F
	PRESSURE_PLATE_UP E
	RAIL_CURVED Z
	RAIL_FLAT Y
	RAIL_RAISED_NE aa
	RAIL_RAISED_SW ab
	SEAGRASS aG
	SHULKER_BOX_INVENTORY aU
	SINGLE_FACE aL
	SKULL_INVENTORY aX
	SLAB_BOTTOM H
	SLAB_TOP I
	STAINED_GLASS_PANE_NOSIDE ai
	STAINED_GLASS_PANE_NOSIDE_ALT aj
	STAINED_GLASS_PANE_POST ak
	STAINED_GLASS_PANE_SIDE al
	STAINED_GLASS_PANE_SIDE_ALT am
	STAIRS_INNER L
	STAIRS_OUTER M
	STAIRS_STRAIGHT K
	STEMS ap
	THREE_CANDLES ba
	THREE_TURTLE_EGGS aJ
	TINTED_CROSS V
	TINTED_FLOWER_POT_CROSS X
	TORCH aB
	TRAPDOOR_BOTTOM O
	TRAPDOOR_OPEN P
	TRAPDOOR_TOP N
	TURTLE_EGG aH
	TWO_CANDLES aZ
	TWO_TURTLE_EGGS aI
	WALL_INVENTORY z
	WALL_LOW_SIDE x
	WALL_POST w
	WALL_TALL_SIDE y
	WALL_TORCH aC
	create (Ljava/lang/String;Ljava/lang/String;[Lnet/minecraft/data/models/model/TextureSlot;)Lnet/minecraft/data/models/model/ModelTemplate; a
	create (Ljava/lang/String;[Lnet/minecraft/data/models/model/TextureSlot;)Lnet/minecraft/data/models/model/ModelTemplate; a
	create ([Lnet/minecraft/data/models/model/TextureSlot;)Lnet/minecraft/data/models/model/ModelTemplate; a
	createItem (Ljava/lang/String;[Lnet/minecraft/data/models/model/TextureSlot;)Lnet/minecraft/data/models/model/ModelTemplate; b
net/minecraft/data/models/model/TextureMapping jq
	forcedSlots b
	slots a
	attachedStem (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; a
	campfire (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; A
	candleCake (Lnet/minecraft/world/level/block/Block;Z)Lnet/minecraft/data/models/model/TextureMapping; a
	cauldron (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; j
	column (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; a
	column (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; j
	columnWithWall (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; o
	commandBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; v
	copyAndUpdate (Lnet/minecraft/data/models/model/TextureSlot;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; c
	copyForced (Lnet/minecraft/data/models/model/TextureSlot;Lnet/minecraft/data/models/model/TextureSlot;)Lnet/minecraft/data/models/model/TextureMapping; b
	copySlot (Lnet/minecraft/data/models/model/TextureSlot;Lnet/minecraft/data/models/model/TextureSlot;)Lnet/minecraft/data/models/model/TextureMapping; a
	craftingTable (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; c
	crop (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; g
	cross (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; c
	cross (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; c
	cube (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; b
	cube (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; a
	cubeBottomTop (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; m
	cubeBottomTopWithWall (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; n
	cubeTop (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; k
	defaultTexture (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; a
	defaultTexture (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; b
	door (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; b
	door (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; p
	fan (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; i
	fire0 (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; r
	fire1 (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; s
	fletchingTable (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; d
	get (Lnet/minecraft/data/models/model/TextureSlot;)Lnet/minecraft/resources/ResourceLocation; a
	getBlockTexture (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/resources/ResourceLocation; C
	getBlockTexture (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	getForced ()Ljava/util/stream/Stream; a
	getItemTexture (Lnet/minecraft/world/item/Item;)Lnet/minecraft/resources/ResourceLocation; c
	getItemTexture (Lnet/minecraft/world/item/Item;Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	lantern (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; t
	layer0 (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; k
	layer0 (Lnet/minecraft/world/item/Item;)Lnet/minecraft/data/models/model/TextureMapping; b
	layer0 (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; B
	logColumn (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; l
	orientableCube (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; w
	orientableCubeOnlyTop (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; x
	orientableCubeSameEnds (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; y
	pane (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; b
	particle (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; h
	particle (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; q
	particleFromItem (Lnet/minecraft/world/item/Item;)Lnet/minecraft/data/models/model/TextureMapping; a
	pattern (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; h
	plant (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; d
	plant (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; d
	put (Lnet/minecraft/data/models/model/TextureSlot;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; a
	putForced (Lnet/minecraft/data/models/model/TextureSlot;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; b
	rail (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; e
	rail (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; e
	singleSlot (Lnet/minecraft/data/models/model/TextureSlot;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; d
	stem (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; g
	top (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; z
	torch (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; i
	torch (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; u
	wool (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; f
	wool (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; f
net/minecraft/data/models/model/TextureSlot jr
	ALL a
	BACK h
	BOTTOM e
	CANDLE J
	CONTENT L
	CROP A
	CROSS p
	DIRT B
	DOWN o
	EAST l
	EDGE w
	END d
	FAN x
	FIRE C
	FRONT g
	INSIDE K
	LANTERN D
	LAYER0 H
	LIT_LOG I
	NORTH j
	PANE v
	PARTICLE c
	PATTERN u
	PLANT q
	PLATFORM E
	RAIL s
	SIDE i
	SOUTH k
	STEM y
	TEXTURE b
	TOP f
	TORCH G
	UNSTICKY F
	UP n
	UPPER_STEM z
	WALL r
	WEST m
	WOOL t
	id M
	parent N
	create (Ljava/lang/String;)Lnet/minecraft/data/models/model/TextureSlot; a
	create (Ljava/lang/String;Lnet/minecraft/data/models/model/TextureSlot;)Lnet/minecraft/data/models/model/TextureSlot; a
	getId ()Ljava/lang/String; a
	getParent ()Lnet/minecraft/data/models/model/TextureSlot; b
net/minecraft/data/models/model/TexturedModel js
	ANVIL m
	CARPET i
	COLUMN c
	COLUMN_ALT r
	COLUMN_HORIZONTAL d
	COLUMN_HORIZONTAL_ALT s
	COLUMN_WITH_WALL u
	CORAL_FAN k
	CUBE a
	CUBE_MIRRORED b
	CUBE_TOP f
	CUBE_TOP_BOTTOM e
	GLAZED_TERRACOTTA j
	HANGING_LANTERN p
	LANTERN o
	LEAVES n
	ORIENTABLE h
	ORIENTABLE_ONLY_TOP g
	PARTICLE_ONLY l
	SEAGRASS q
	TOP_BOTTOM_WITH_WALL t
	mapping v
	template w
	create (Lnet/minecraft/world/level/block/Block;Ljava/util/function/BiConsumer;)Lnet/minecraft/resources/ResourceLocation; a
	createAllSame (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TexturedModel; a
	createDefault (Ljava/util/function/Function;Lnet/minecraft/data/models/model/ModelTemplate;)Lnet/minecraft/data/models/model/TexturedModel$Provider; a
	createWithSuffix (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;Ljava/util/function/BiConsumer;)Lnet/minecraft/resources/ResourceLocation; a
	getMapping ()Lnet/minecraft/data/models/model/TextureMapping; b
	getTemplate ()Lnet/minecraft/data/models/model/ModelTemplate; a
	updateTextures (Ljava/util/function/Consumer;)Lnet/minecraft/data/models/model/TexturedModel; a
net/minecraft/data/models/model/TexturedModel$Provider js$a
	create (Lnet/minecraft/world/level/block/Block;Ljava/util/function/BiConsumer;)Lnet/minecraft/resources/ResourceLocation; a
	createWithSuffix (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;Ljava/util/function/BiConsumer;)Lnet/minecraft/resources/ResourceLocation; a
	updateTexture (Ljava/util/function/Consumer;)Lnet/minecraft/data/models/model/TexturedModel$Provider; a
net/minecraft/data/recipes/FinishedRecipe jw
	getAdvancementId ()Lnet/minecraft/resources/ResourceLocation; e
	getId ()Lnet/minecraft/resources/ResourceLocation; b
	getType ()Lnet/minecraft/world/item/crafting/RecipeSerializer; c
	serializeAdvancement ()Lcom/google/gson/JsonObject; d
	serializeRecipe ()Lcom/google/gson/JsonObject; a
	serializeRecipeData (Lcom/google/gson/JsonObject;)V a
net/minecraft/data/recipes/RecipeBuilder jx
	getDefaultRecipeId (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/resources/ResourceLocation; a
	getResult ()Lnet/minecraft/world/item/Item; a
	group (Ljava/lang/String;)Lnet/minecraft/data/recipes/RecipeBuilder; a
	save (Ljava/util/function/Consumer;)V a
	save (Ljava/util/function/Consumer;Ljava/lang/String;)V a
	save (Ljava/util/function/Consumer;Lnet/minecraft/resources/ResourceLocation;)V a
	unlockedBy (Ljava/lang/String;Lnet/minecraft/advancements/CriterionTriggerInstance;)Lnet/minecraft/data/recipes/RecipeBuilder; a
net/minecraft/data/recipes/RecipeProvider jy
	COAL_SMELTABLES d
	COPPER_SMELTABLES f
	DIAMOND_SMELTABLES h
	EMERALD_SMELTABLES k
	GOLD_SMELTABLES g
	GSON c
	IRON_SMELTABLES e
	LAPIS_SMELTABLES i
	LOGGER b
	REDSTONE_SMELTABLES j
	generator l
	shapeBuilders m
	banner (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V o
	bedFromPlanksAndWool (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V m
	bedFromWhiteBedAndDye (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V n
	buildCraftingRecipes (Ljava/util/function/Consumer;)V a
	buttonBuilder (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; e
	candle (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V a
	carpet (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V k
	chiseled (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V e
	chiseledBuilder (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; d
	coloredCarpetFromWhiteCarpetAndDye (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V l
	coloredTerracottaFromTerracottaAndDye (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V s
	coloredWoolFromWhiteWoolAndDye (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V j
	concretePowder (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V t
	cookRecipes (Ljava/util/function/Consumer;Ljava/lang/String;Lnet/minecraft/world/item/crafting/SimpleCookingSerializer;I)V a
	cut (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V d
	cutBuilder (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; c
	doorBuilder (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; f
	fenceBuilder (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; g
	fenceGateBuilder (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; h
	generateRecipes (Ljava/util/function/Consumer;Lnet/minecraft/data/BlockFamily;)V a
	getBaseBlock (Lnet/minecraft/data/BlockFamily;Lnet/minecraft/data/BlockFamily$Variant;)Lnet/minecraft/world/level/block/Block; a
	getBlastingRecipeName (Lnet/minecraft/world/level/ItemLike;)Ljava/lang/String; f
	getConversionRecipeName (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)Ljava/lang/String; a
	getHasName (Lnet/minecraft/world/level/ItemLike;)Ljava/lang/String; b
	getItemName (Lnet/minecraft/world/level/ItemLike;)Ljava/lang/String; c
	getName ()Ljava/lang/String; a
	getSimpleRecipeName (Lnet/minecraft/world/level/ItemLike;)Ljava/lang/String; d
	getSmeltingRecipeName (Lnet/minecraft/world/level/ItemLike;)Ljava/lang/String; e
	has (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance; a
	has (Lnet/minecraft/tags/Tag;)Lnet/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance; a
	has (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance; a
	insideOf (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/advancements/critereon/EnterBlockTrigger$TriggerInstance; a
	inventoryTrigger ([Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance; a
	netheriteSmithing (Ljava/util/function/Consumer;Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/Item;)V a
	nineBlockStorageRecipes (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V w
	nineBlockStorageRecipes (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V a
	nineBlockStorageRecipesRecipesWithCustomUnpacking (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;Ljava/lang/String;Ljava/lang/String;)V b
	nineBlockStorageRecipesWithCustomPacking (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;Ljava/lang/String;Ljava/lang/String;)V a
	oneToOneConversionRecipe (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;Ljava/lang/String;)V a
	oneToOneConversionRecipe (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;Ljava/lang/String;I)V a
	oreBlasting (Ljava/util/function/Consumer;Ljava/util/List;Lnet/minecraft/world/level/ItemLike;FILjava/lang/String;)V b
	oreCooking (Ljava/util/function/Consumer;Lnet/minecraft/world/item/crafting/SimpleCookingSerializer;Ljava/util/List;Lnet/minecraft/world/level/ItemLike;FILjava/lang/String;Ljava/lang/String;)V a
	oreSmelting (Ljava/util/function/Consumer;Ljava/util/List;Lnet/minecraft/world/level/ItemLike;FILjava/lang/String;)V a
	planksFromLog (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/tags/Tag;)V a
	planksFromLogs (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/tags/Tag;)V b
	polished (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V c
	polishedBuilder (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; b
	pressurePlate (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V h
	pressurePlateBuilder (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; i
	run (Lnet/minecraft/data/HashCache;)V a
	saveAdvancement (Lnet/minecraft/data/HashCache;Lcom/google/gson/JsonObject;Ljava/nio/file/Path;)V b
	saveRecipe (Lnet/minecraft/data/HashCache;Lcom/google/gson/JsonObject;Ljava/nio/file/Path;)V a
	signBuilder (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; m
	simpleCookingRecipe (Ljava/util/function/Consumer;Ljava/lang/String;Lnet/minecraft/world/item/crafting/SimpleCookingSerializer;ILnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;F)V a
	slab (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V i
	slabBuilder (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; j
	smeltingResultFromBase (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V v
	stainedGlassFromGlassAndDye (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V p
	stainedGlassPaneFromGlassPaneAndDye (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V r
	stainedGlassPaneFromStainedGlass (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V q
	stairBuilder (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; k
	stonecutterResultFromBase (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V u
	stonecutterResultFromBase (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;I)V a
	trapdoorBuilder (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; l
	wall (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V b
	wallBuilder (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; a
	waxRecipes (Ljava/util/function/Consumer;)V b
	woodFromLogs (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V f
	woodenBoat (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V g
net/minecraft/data/recipes/ShapedRecipeBuilder jz
	advancement e
	count b
	group f
	key d
	result a
	rows c
	define (Ljava/lang/Character;Lnet/minecraft/tags/Tag;)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; a
	define (Ljava/lang/Character;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; a
	define (Ljava/lang/Character;Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; a
	ensureValid (Lnet/minecraft/resources/ResourceLocation;)V a
	getResult ()Lnet/minecraft/world/item/Item; a
	group (Ljava/lang/String;)Lnet/minecraft/data/recipes/RecipeBuilder; a
	group (Ljava/lang/String;)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; c
	pattern (Ljava/lang/String;)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; b
	save (Ljava/util/function/Consumer;Lnet/minecraft/resources/ResourceLocation;)V a
	shaped (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; b
	shaped (Lnet/minecraft/world/level/ItemLike;I)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; a
	unlockedBy (Ljava/lang/String;Lnet/minecraft/advancements/CriterionTriggerInstance;)Lnet/minecraft/data/recipes/RecipeBuilder; a
	unlockedBy (Ljava/lang/String;Lnet/minecraft/advancements/CriterionTriggerInstance;)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; b
net/minecraft/data/recipes/ShapedRecipeBuilder$Result jz$a
	advancement g
	advancementId h
	count c
	group d
	id a
	key f
	pattern e
	result b
	getAdvancementId ()Lnet/minecraft/resources/ResourceLocation; e
	getId ()Lnet/minecraft/resources/ResourceLocation; b
	getType ()Lnet/minecraft/world/item/crafting/RecipeSerializer; c
	serializeAdvancement ()Lcom/google/gson/JsonObject; d
	serializeRecipeData (Lcom/google/gson/JsonObject;)V a
net/minecraft/data/recipes/ShapelessRecipeBuilder ka
	advancement d
	count b
	group e
	ingredients c
	result a
	ensureValid (Lnet/minecraft/resources/ResourceLocation;)V a
	getResult ()Lnet/minecraft/world/item/Item; a
	group (Ljava/lang/String;)Lnet/minecraft/data/recipes/RecipeBuilder; a
	group (Ljava/lang/String;)Lnet/minecraft/data/recipes/ShapelessRecipeBuilder; b
	requires (Lnet/minecraft/tags/Tag;)Lnet/minecraft/data/recipes/ShapelessRecipeBuilder; a
	requires (Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/ShapelessRecipeBuilder; a
	requires (Lnet/minecraft/world/item/crafting/Ingredient;I)Lnet/minecraft/data/recipes/ShapelessRecipeBuilder; a
	requires (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/data/recipes/ShapelessRecipeBuilder; c
	requires (Lnet/minecraft/world/level/ItemLike;I)Lnet/minecraft/data/recipes/ShapelessRecipeBuilder; b
	save (Ljava/util/function/Consumer;Lnet/minecraft/resources/ResourceLocation;)V a
	shapeless (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/data/recipes/ShapelessRecipeBuilder; b
	shapeless (Lnet/minecraft/world/level/ItemLike;I)Lnet/minecraft/data/recipes/ShapelessRecipeBuilder; a
	unlockedBy (Ljava/lang/String;Lnet/minecraft/advancements/CriterionTriggerInstance;)Lnet/minecraft/data/recipes/RecipeBuilder; a
	unlockedBy (Ljava/lang/String;Lnet/minecraft/advancements/CriterionTriggerInstance;)Lnet/minecraft/data/recipes/ShapelessRecipeBuilder; b
net/minecraft/data/recipes/ShapelessRecipeBuilder$Result ka$a
	advancement f
	advancementId g
	count c
	group d
	id a
	ingredients e
	result b
	getAdvancementId ()Lnet/minecraft/resources/ResourceLocation; e
	getId ()Lnet/minecraft/resources/ResourceLocation; b
	getType ()Lnet/minecraft/world/item/crafting/RecipeSerializer; c
	serializeAdvancement ()Lcom/google/gson/JsonObject; d
	serializeRecipeData (Lcom/google/gson/JsonObject;)V a
net/minecraft/data/recipes/SimpleCookingRecipeBuilder kb
	advancement e
	cookingTime d
	experience c
	group f
	ingredient b
	result a
	serializer g
	blasting (Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/world/level/ItemLike;FI)Lnet/minecraft/data/recipes/SimpleCookingRecipeBuilder; b
	campfireCooking (Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/world/level/ItemLike;FI)Lnet/minecraft/data/recipes/SimpleCookingRecipeBuilder; a
	cooking (Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/world/level/ItemLike;FILnet/minecraft/world/item/crafting/SimpleCookingSerializer;)Lnet/minecraft/data/recipes/SimpleCookingRecipeBuilder; a
	ensureValid (Lnet/minecraft/resources/ResourceLocation;)V a
	getResult ()Lnet/minecraft/world/item/Item; a
	group (Ljava/lang/String;)Lnet/minecraft/data/recipes/RecipeBuilder; a
	group (Ljava/lang/String;)Lnet/minecraft/data/recipes/SimpleCookingRecipeBuilder; b
	save (Ljava/util/function/Consumer;Lnet/minecraft/resources/ResourceLocation;)V a
	smelting (Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/world/level/ItemLike;FI)Lnet/minecraft/data/recipes/SimpleCookingRecipeBuilder; c
	smoking (Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/world/level/ItemLike;FI)Lnet/minecraft/data/recipes/SimpleCookingRecipeBuilder; d
	unlockedBy (Ljava/lang/String;Lnet/minecraft/advancements/CriterionTriggerInstance;)Lnet/minecraft/data/recipes/RecipeBuilder; a
	unlockedBy (Ljava/lang/String;Lnet/minecraft/advancements/CriterionTriggerInstance;)Lnet/minecraft/data/recipes/SimpleCookingRecipeBuilder; b
net/minecraft/data/recipes/SimpleCookingRecipeBuilder$Result kb$a
	advancement g
	advancementId h
	cookingTime f
	experience e
	group b
	id a
	ingredient c
	result d
	serializer i
	getAdvancementId ()Lnet/minecraft/resources/ResourceLocation; e
	getId ()Lnet/minecraft/resources/ResourceLocation; b
	getType ()Lnet/minecraft/world/item/crafting/RecipeSerializer; c
	serializeAdvancement ()Lcom/google/gson/JsonObject; d
	serializeRecipeData (Lcom/google/gson/JsonObject;)V a
net/minecraft/data/recipes/SingleItemRecipeBuilder kc
	advancement d
	count c
	group e
	ingredient b
	result a
	type f
	ensureValid (Lnet/minecraft/resources/ResourceLocation;)V a
	getResult ()Lnet/minecraft/world/item/Item; a
	group (Ljava/lang/String;)Lnet/minecraft/data/recipes/RecipeBuilder; a
	group (Ljava/lang/String;)Lnet/minecraft/data/recipes/SingleItemRecipeBuilder; b
	save (Ljava/util/function/Consumer;Lnet/minecraft/resources/ResourceLocation;)V a
	stonecutting (Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/data/recipes/SingleItemRecipeBuilder; a
	stonecutting (Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/world/level/ItemLike;I)Lnet/minecraft/data/recipes/SingleItemRecipeBuilder; a
	unlockedBy (Ljava/lang/String;Lnet/minecraft/advancements/CriterionTriggerInstance;)Lnet/minecraft/data/recipes/RecipeBuilder; a
	unlockedBy (Ljava/lang/String;Lnet/minecraft/advancements/CriterionTriggerInstance;)Lnet/minecraft/data/recipes/SingleItemRecipeBuilder; b
net/minecraft/data/recipes/SingleItemRecipeBuilder$Result kc$a
	advancement f
	advancementId g
	count e
	group b
	id a
	ingredient c
	result d
	type h
	getAdvancementId ()Lnet/minecraft/resources/ResourceLocation; e
	getId ()Lnet/minecraft/resources/ResourceLocation; b
	getType ()Lnet/minecraft/world/item/crafting/RecipeSerializer; c
	serializeAdvancement ()Lcom/google/gson/JsonObject; d
	serializeRecipeData (Lcom/google/gson/JsonObject;)V a
net/minecraft/data/recipes/SpecialRecipeBuilder kd
	serializer a
	save (Ljava/util/function/Consumer;Ljava/lang/String;)V a
	special (Lnet/minecraft/world/item/crafting/SimpleRecipeSerializer;)Lnet/minecraft/data/recipes/SpecialRecipeBuilder; a
net/minecraft/data/recipes/UpgradeRecipeBuilder ke
	addition b
	advancement d
	base a
	result c
	type e
	ensureValid (Lnet/minecraft/resources/ResourceLocation;)V a
	save (Ljava/util/function/Consumer;Ljava/lang/String;)V a
	save (Ljava/util/function/Consumer;Lnet/minecraft/resources/ResourceLocation;)V a
	smithing (Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/world/item/Item;)Lnet/minecraft/data/recipes/UpgradeRecipeBuilder; a
	unlocks (Ljava/lang/String;Lnet/minecraft/advancements/CriterionTriggerInstance;)Lnet/minecraft/data/recipes/UpgradeRecipeBuilder; a
net/minecraft/data/recipes/UpgradeRecipeBuilder$Result ke$a
	addition c
	advancement e
	advancementId f
	base b
	id a
	result d
	type g
	getAdvancementId ()Lnet/minecraft/resources/ResourceLocation; e
	getId ()Lnet/minecraft/resources/ResourceLocation; b
	getType ()Lnet/minecraft/world/item/crafting/RecipeSerializer; c
	serializeAdvancement ()Lcom/google/gson/JsonObject; d
	serializeRecipeData (Lcom/google/gson/JsonObject;)V a
net/minecraft/data/structures/NbtToSnbt kg
	LOGGER b
	generator c
	convertStructure (Ljava/nio/file/Path;Ljava/lang/String;Ljava/nio/file/Path;)Ljava/nio/file/Path; a
	getName ()Ljava/lang/String; a
	getName (Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/lang/String; a
	run (Lnet/minecraft/data/HashCache;)V a
	writeSnbt (Ljava/nio/file/Path;Ljava/lang/String;)V a
net/minecraft/data/structures/SnbtToNbt kh
	DUMP_SNBT_TO b
	LOGGER c
	filters e
	generator d
	addFilter (Lnet/minecraft/data/structures/SnbtToNbt$Filter;)Lnet/minecraft/data/structures/SnbtToNbt; a
	applyFilters (Ljava/lang/String;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	getName ()Ljava/lang/String; a
	getName (Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/lang/String; a
	readStructure (Ljava/nio/file/Path;Ljava/lang/String;)Lnet/minecraft/data/structures/SnbtToNbt$TaskResult; a
	run (Lnet/minecraft/data/HashCache;)V a
	storeStructureIfChanged (Lnet/minecraft/data/HashCache;Lnet/minecraft/data/structures/SnbtToNbt$TaskResult;Ljava/nio/file/Path;)V a
net/minecraft/data/structures/SnbtToNbt$Filter kh$a
	apply (Ljava/lang/String;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/data/structures/SnbtToNbt$StructureConversionException kh$b
net/minecraft/data/structures/SnbtToNbt$TaskResult kh$c
	hash d
	name a
	payload b
	snbtPayload c
net/minecraft/data/structures/StructureUpdater ki
	LOGGER a
	apply (Ljava/lang/String;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	patchVersion (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	update (Ljava/lang/String;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
	updateStructure (Ljava/lang/String;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; c
net/minecraft/data/tags/BlockTagsProvider kk
	addTags ()V b
	getName ()Ljava/lang/String; a
	getPath (Lnet/minecraft/resources/ResourceLocation;)Ljava/nio/file/Path; a
net/minecraft/data/tags/EntityTypeTagsProvider kl
	addTags ()V b
	getName ()Ljava/lang/String; a
	getPath (Lnet/minecraft/resources/ResourceLocation;)Ljava/nio/file/Path; a
net/minecraft/data/tags/FluidTagsProvider km
	addTags ()V b
	getName ()Ljava/lang/String; a
	getPath (Lnet/minecraft/resources/ResourceLocation;)Ljava/nio/file/Path; a
net/minecraft/data/tags/GameEventTagsProvider kn
	addTags ()V b
	getName ()Ljava/lang/String; a
	getPath (Lnet/minecraft/resources/ResourceLocation;)Ljava/nio/file/Path; a
net/minecraft/data/tags/ItemTagsProvider ko
	blockTags d
	addTags ()V b
	copy (Lnet/minecraft/tags/Tag$Named;Lnet/minecraft/tags/Tag$Named;)V a
	getName ()Ljava/lang/String; a
	getPath (Lnet/minecraft/resources/ResourceLocation;)Ljava/nio/file/Path; a
net/minecraft/data/tags/TagsProvider kp
	GSON e
	LOGGER d
	builders f
	generator b
	registry c
	addTags ()V b
	getOrCreateRawBuilder (Lnet/minecraft/tags/Tag$Named;)Lnet/minecraft/tags/Tag$Builder; b
	getPath (Lnet/minecraft/resources/ResourceLocation;)Ljava/nio/file/Path; a
	run (Lnet/minecraft/data/HashCache;)V a
	tag (Lnet/minecraft/tags/Tag$Named;)Lnet/minecraft/data/tags/TagsProvider$TagAppender; a
net/minecraft/data/tags/TagsProvider$TagAppender kp$a
	builder a
	registry b
	source c
	add (Ljava/lang/Object;)Lnet/minecraft/data/tags/TagsProvider$TagAppender; a
	add ([Ljava/lang/Object;)Lnet/minecraft/data/tags/TagsProvider$TagAppender; a
	addOptional (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/tags/TagsProvider$TagAppender; a
	addOptionalTag (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/tags/TagsProvider$TagAppender; b
	addTag (Lnet/minecraft/tags/Tag$Named;)Lnet/minecraft/data/tags/TagsProvider$TagAppender; a
net/minecraft/data/worldgen/BastionBridgePools kr
	bootstrap ()V a
net/minecraft/data/worldgen/BastionHoglinStablePools ks
	bootstrap ()V a
net/minecraft/data/worldgen/BastionHousingUnitsPools kt
	bootstrap ()V a
net/minecraft/data/worldgen/BastionPieces ku
	START a
	bootstrap ()V a
net/minecraft/data/worldgen/BastionSharedPools kv
	bootstrap ()V a
net/minecraft/data/worldgen/BastionTreasureRoomPools kw
	bootstrap ()V a
net/minecraft/data/worldgen/BiomeDefaultFeatures kx
	addAncientDebris (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V as
	addBadlandExtraVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ae
	addBadlandGrass (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V P
	addBadlandsTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V J
	addBambooVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V v
	addBerryBushes (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V s
	addBirchTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V y
	addBlueIce (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ap
	addColdOceanExtraVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ak
	addDefaultCarvers (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V d
	addDefaultCrystalFormations (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V at
	addDefaultExtraVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ad
	addDefaultFlowers (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V X
	addDefaultGrass (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V Z
	addDefaultLakes (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V f
	addDefaultMonsterRoom (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V h
	addDefaultMushrooms (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ac
	addDefaultOres (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V k
	addDefaultOverworldLandMesaStructures (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V a
	addDefaultOverworldLandStructures (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V b
	addDefaultOverworldOceanStructures (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V c
	addDefaultSeagrass (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V al
	addDefaultSoftDisks (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V o
	addDefaultSprings (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V an
	addDefaultUndergroundVariety (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V i
	addDefaultUndergroundVariety (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;Z)V a
	addDesertExtraDecoration (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ai
	addDesertExtraVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ag
	addDesertLakes (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V g
	addDesertVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V V
	addDripstone (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V j
	addExtraEmeralds (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V m
	addExtraGold (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V l
	addFerns (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V r
	addForestFlowers (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V Q
	addForestGrass (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V R
	addFossilDecoration (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V aj
	addGiantTaigaVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V W
	addIcebergs (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ao
	addInfestedStone (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V n
	addJungleEdgeTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V I
	addJungleExtraVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V af
	addJungleGrass (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V L
	addJungleTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V H
	addLightBambooVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V u
	addLukeWarmKelp (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V am
	addLushCavesSpecialOres (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V E
	addLushCavesVegetationFeatures (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V D
	addMossyStoneBlock (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V q
	addMountainEdgeTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V G
	addMountainTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V F
	addMushroomFieldVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V T
	addNetherDefaultOres (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ar
	addOceanCarvers (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V e
	addOtherBirchTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V z
	addPlainGrass (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ab
	addPlainVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V U
	addSavannaExtraGrass (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V O
	addSavannaGrass (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V M
	addSavannaTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V B
	addShatteredSavannaGrass (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V N
	addShatteredSavannaTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V C
	addSnowyTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V K
	addSparseBerryBushes (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V t
	addSurfaceFreezing (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V aq
	addSwampClayDisk (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V p
	addSwampExtraVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ah
	addSwampVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V S
	addTaigaGrass (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V aa
	addTaigaTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V w
	addTallBirchTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V A
	addWarmFlowers (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V Y
	addWaterTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V x
	baseJungleSpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)V i
	caveSpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)V b
	caveWaterSpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)V d
	commonSpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)V c
	desertSpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)V g
	endSpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)V j
	farmAnimals (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)V a
	monsters (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;III)V b
	mooshroomSpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)V h
	oceanSpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;III)V a
	plainsSpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)V e
	snowySpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)V f
	warmOceanSpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;II)V a
net/minecraft/data/worldgen/Carvers ky
	CANYON c
	CAVE a
	NETHER_CAVE h
	OCEAN_CAVE e
	PROTOTYPE_CANYON d
	PROTOTYPE_CAVE b
	PROTOTYPE_CREVICE i
	UNDERWATER_CANYON f
	UNDERWATER_CAVE g
	register (Ljava/lang/String;Lnet/minecraft/world/level/levelgen/carver/ConfiguredWorldCarver;)Lnet/minecraft/world/level/levelgen/carver/ConfiguredWorldCarver; a
net/minecraft/data/worldgen/DesertVillagePools kz
	START a
	bootstrap ()V a
net/minecraft/data/worldgen/Features la
	ACACIA cG
	AMETHYST_GEODE dX
	AZALEA_TREE cS
	BAMBOO M
	BAMBOO_LIGHT L
	BAMBOO_VEGETATION dF
	BASALT_BLOBS j
	BASALT_PILLAR s
	BIRCH cF
	BIRCH_BEES_0002 cW
	BIRCH_BEES_002 cX
	BIRCH_BEES_005 cY
	BIRCH_OTHER dz
	BIRCH_TALL du
	BLACKSTONE_BLOBS k
	BLUE_ICE K
	BONUS_CHEST V
	BROWN_MUSHROOM_GIANT bd
	BROWN_MUSHROOM_NETHER aX
	BROWN_MUSHROOM_NORMAL aZ
	BROWN_MUSHROOM_SWAMP bf
	BROWN_MUSHROOM_TAIGA bb
	CAVE_VINE dI
	CAVE_VINES dK
	CAVE_VINES_BODY_PROVIDER eb
	CAVE_VINES_HEAD_PROVIDER ec
	CAVE_VINE_IN_MOSS dJ
	CHORUS_PLANT d
	CLASSIC_VINES_CAVE_FEATURE dW
	CLAY_POOL_WITH_DRIPLEAVES dR
	CLAY_WITH_DRIPLEAVES dQ
	CRIMSON_FOREST_VEGETATION n
	CRIMSON_FUNGI cx
	CRIMSON_FUNGI_PLANTED cy
	DARK_FOREST_VEGETATION_BROWN dk
	DARK_FOREST_VEGETATION_RED dl
	DARK_OAK cE
	DELTA g
	DISK_CLAY R
	DISK_GRAVEL S
	DISK_SAND T
	DRIPLEAF dP
	DRIPSTONE_CLUSTER_FEATURE cp
	END_GATEWAY b
	END_GATEWAY_DELAYED c
	END_ISLAND e
	END_ISLAND_DECORATED f
	END_SPIKE a
	FANCY_OAK cK
	FANCY_OAK_BEES_0002 cZ
	FANCY_OAK_BEES_002 da
	FANCY_OAK_BEES_005 db
	FLOWER_DEFAULT dd
	FLOWER_FOREST de
	FLOWER_PLAIN dg
	FLOWER_PLAIN_DECORATED dh
	FLOWER_SWAMP df
	FLOWER_WARM dc
	FOREST_FLOWER_FEATURES ea
	FOREST_FLOWER_TREES dn
	FOREST_FLOWER_VEGETATION dj
	FOREST_FLOWER_VEGETATION_COMMON di
	FOREST_ROCK E
	FOSSIL Z
	FOSSIL_COAL_STRUCTURES dZ
	FOSSIL_STRUCTURES dY
	FREEZE_TOP_LAYER U
	GLOWSTONE m
	GLOWSTONE_EXTRA l
	GLOW_LICHEN cv
	HUGE_BROWN_MUSHROOM cB
	HUGE_RED_MUSHROOM cC
	ICEBERG_BLUE H
	ICEBERG_PACKED G
	ICE_PATCH D
	ICE_SPIKE C
	JUNGLE_BUSH cR
	JUNGLE_TREE cJ
	JUNGLE_TREE_NO_VINE cL
	KELP_COLD I
	KELP_WARM J
	LAKE_LAVA Q
	LAKE_WATER P
	LARGE_BASALT_COLUMNS i
	LARGE_DRIPSTONE_FEATURE cq
	LUSH_CAVES_CEILING_VEGETATION dU
	LUSH_CAVES_CLAY dS
	LUSH_CAVES_VEGETATION dO
	MEGA_JUNGLE_TREE cM
	MEGA_PINE cO
	MEGA_SPRUCE cN
	MONSTER_ROOM X
	MOSS_PATCH dM
	MOSS_PATCH_BONEMEAL dN
	MOSS_PATCH_CEILING dT
	MOSS_VEGETATION dL
	MUSHROOM_FIELD_VEGETATION dG
	NETHER_SPROUTS p
	OAK cD
	OAK_BEES_0002 cT
	OAK_BEES_002 cU
	OAK_BEES_005 cV
	ORE_ANDESITE bI
	ORE_BLACKSTONE bz
	ORE_CLAY co
	ORE_COAL bN
	ORE_COAL_TARGET_LIST bo
	ORE_COPPER cm
	ORE_COPPER_TARGET_LIST bn
	ORE_DEBRIS_LARGE ck
	ORE_DEBRIS_SMALL cl
	ORE_DEEPSLATE bM
	ORE_DIAMOND ca
	ORE_DIAMOND_TARGET_LIST bk
	ORE_DIORITE bG
	ORE_DIRT bA
	ORE_EMERALD ci
	ORE_EMERALD_TARGET_LIST bm
	ORE_GOLD bV
	ORE_GOLD_DELTAS bu
	ORE_GOLD_EXTRA bU
	ORE_GOLD_NETHER bw
	ORE_GOLD_TARGET_LIST bj
	ORE_GRANITE bE
	ORE_GRAVEL bC
	ORE_GRAVEL_NETHER by
	ORE_INFESTED cg
	ORE_INFESTED_TARGET_LIST bp
	ORE_IRON bQ
	ORE_IRON_CONFIG bq
	ORE_IRON_TARGET_LIST bh
	ORE_LAPIS cd
	ORE_LAPIS_TARGET_LIST bl
	ORE_MAGMA bs
	ORE_QUARTZ_DELTAS bv
	ORE_QUARTZ_NETHER bx
	ORE_REDSTONE bX
	ORE_REDSTONE_CONFIG br
	ORE_REDSTONE_TARGET_LIST bi
	ORE_SOUL_SAND bt
	ORE_TUFF bK
	PATCH_BERRY_BUSH ax
	PATCH_BERRY_DECORATED aL
	PATCH_BERRY_SPARSE aK
	PATCH_BROWN_MUSHROOM ar
	PATCH_CACTUS aQ
	PATCH_CACTUS_DECORATED aS
	PATCH_CACTUS_DESERT aR
	PATCH_CRIMSON_ROOTS at
	PATCH_DEAD_BUSH aH
	PATCH_DEAD_BUSH_2 aG
	PATCH_DEAD_BUSH_BADLANDS aI
	PATCH_FIRE ap
	PATCH_GRASS_BADLANDS aA
	PATCH_GRASS_FOREST az
	PATCH_GRASS_JUNGLE aF
	PATCH_GRASS_NORMAL aC
	PATCH_GRASS_PLAIN ay
	PATCH_GRASS_SAVANNA aB
	PATCH_GRASS_TAIGA aE
	PATCH_GRASS_TAIGA_2 aD
	PATCH_LARGE_FERN aP
	PATCH_MELON aJ
	PATCH_PUMPKIN av
	PATCH_RED_MUSHROOM as
	PATCH_SOUL_FIRE aq
	PATCH_SUGAR_CANE aW
	PATCH_SUGAR_CANE_BADLANDS aV
	PATCH_SUGAR_CANE_DESERT aU
	PATCH_SUGAR_CANE_SWAMP aT
	PATCH_SUNFLOWER au
	PATCH_TAIGA_GRASS aw
	PATCH_TALL_GRASS aO
	PATCH_TALL_GRASS_2 aN
	PATCH_WATERLILLY aM
	PILE_HAY ak
	PILE_ICE an
	PILE_MELON al
	PILE_PUMPKIN ao
	PILE_SNOW am
	PINE cI
	PLAIN_VEGETATION dA
	PROTOTYPE_FOSSIL_LOWER ab
	PROTOTYPE_FOSSIL_UPPER aa
	PROTOTYPE_GLOW_LICHEN cw
	PROTOTYPE_ORE_ANDESITE bJ
	PROTOTYPE_ORE_COAL_LOWER bP
	PROTOTYPE_ORE_COAL_UPPER bO
	PROTOTYPE_ORE_COPPER cn
	PROTOTYPE_ORE_DIAMOND cb
	PROTOTYPE_ORE_DIAMOND_LARGE cc
	PROTOTYPE_ORE_DIORITE bH
	PROTOTYPE_ORE_DIRT bB
	PROTOTYPE_ORE_EMERALD cj
	PROTOTYPE_ORE_GOLD bW
	PROTOTYPE_ORE_GRANITE bF
	PROTOTYPE_ORE_GRAVEL bD
	PROTOTYPE_ORE_INFESTED ch
	PROTOTYPE_ORE_IRON_MIDDLE bS
	PROTOTYPE_ORE_IRON_SMALL bT
	PROTOTYPE_ORE_IRON_UPPER bR
	PROTOTYPE_ORE_LAPIS ce
	PROTOTYPE_ORE_LAPIS_BURIED cf
	PROTOTYPE_ORE_REDSTONE bY
	PROTOTYPE_ORE_REDSTONE_LOWER bZ
	PROTOTYPE_ORE_TUFF bL
	PROTOTYPE_SPRING_WATER aj
	PROTOTYPE_UNDERWATER_MAGMA cu
	PROTOTYPE_VINES O
	RARE_DRIPSTONE_CLUSTER_FEATURE cs
	RARE_SMALL_DRIPSTONE_FEATURE ct
	RED_MUSHROOM_GIANT be
	RED_MUSHROOM_NETHER aY
	RED_MUSHROOM_NORMAL ba
	RED_MUSHROOM_SWAMP bg
	RED_MUSHROOM_TAIGA bc
	ROOTED_AZALEA_TREES dH
	SEAGRASS_COLD t
	SEAGRASS_DEEP x
	SEAGRASS_DEEP_COLD u
	SEAGRASS_DEEP_WARM A
	SEAGRASS_NORMAL v
	SEAGRASS_RIVER w
	SEAGRASS_SIMPLE F
	SEAGRASS_SWAMP y
	SEAGRASS_WARM z
	SEA_PICKLE B
	SMALL_BASALT_COLUMNS h
	SMALL_DRIPSTONE_FEATURE cr
	SPORE_BLOSSOM_FEATURE dV
	SPRING_CLOSED af
	SPRING_CLOSED_DOUBLE ag
	SPRING_DELTA ae
	SPRING_LAVA ad
	SPRING_LAVA_DOUBLE ac
	SPRING_OPEN ah
	SPRING_WATER ai
	SPRUCE cH
	SUPER_BIRCH_BEES_0002 cP
	SWAMP_OAK cQ
	TAIGA_VEGETATION do
	TREES_BADLANDS dp
	TREES_BIRCH dv
	TREES_GIANT dD
	TREES_GIANT_SPRUCE dC
	TREES_JUNGLE dE
	TREES_JUNGLE_EDGE dB
	TREES_MOUNTAIN dx
	TREES_MOUNTAIN_EDGE dw
	TREES_SAVANNA dt
	TREES_SHATTERED_SAVANNA ds
	TREES_SNOWY dq
	TREES_SWAMP dr
	TREES_WATER dy
	TWISTING_VINES q
	VINES N
	VOID_START_PLATFORM W
	WARM_OCEAN_VEGETATION dm
	WARPED_FOREST_VEGETATION o
	WARPED_FUNGI cz
	WARPED_FUNGI_PLANTED cA
	WEEPING_VINES r
	WELL Y
	makeDripleaf (Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature; a
	makeSmallDripleaf ()Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature; b
	register (Ljava/lang/String;Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature;)Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature; a
	weightedBlockStateBuilder ()Lnet/minecraft/util/random/SimpleWeightedRandomList$Builder; a
net/minecraft/data/worldgen/Features$Configs la$a
	CLOSED_NETHER_SPRING_CONFIG j
	CRIMSON_FOREST_CONFIG k
	DEAD_BUSH_CONFIG e
	DEFAULT_FLOWER_CONFIG d
	DEFAULT_GRASS_CONFIG a
	JUNGLE_GRASS_CONFIG c
	LAVA_SPRING_CONFIG i
	NETHER_SPROUTS_CONFIG m
	SUGAR_CANE_CONFIG h
	SWEET_BERRY_BUSH_CONFIG f
	TAIGA_GRASS_CONFIG b
	TALL_GRASS_CONFIG g
	WARPED_FOREST_CONFIG l
net/minecraft/data/worldgen/Features$Decorators la$b
	ADD_32 o
	BEEHIVE_0002 a
	BEEHIVE_002 b
	BEEHIVE_005 c
	DARK_OAK_DECORATOR u
	FIRE n
	FULL_RANGE i
	HEIGHTMAP d
	HEIGHTMAP_DOUBLE h
	HEIGHTMAP_DOUBLE_SQUARE s
	HEIGHTMAP_OCEAN_FLOOR g
	HEIGHTMAP_SQUARE r
	HEIGHTMAP_TOP_SOLID e
	HEIGHTMAP_WITH_TREE_THRESHOLD p
	HEIGHTMAP_WITH_TREE_THRESHOLD_SQUARED q
	HEIGHTMAP_WORLD_SURFACE f
	RANGE_10_10 j
	RANGE_4_4 l
	RANGE_8_8 k
	RANGE_BOTTOM_TO_60 m
	TOP_SOLID_HEIGHTMAP_SQUARE t
net/minecraft/data/worldgen/Features$States la$c
	ACACIA_LEAVES r
	ACACIA_LOG q
	ACACIA_SAPLING s
	AIR aW
	AMETHYST_BLOCK aX
	ANCIENT_DEBRIS aQ
	ANDESITE an
	AZALEA bo
	AZALEA_LEAVES bm
	BASALT aR
	BIG_DRIPLEAF_EAST bh
	BIG_DRIPLEAF_NORTH bj
	BIG_DRIPLEAF_SOUTH bk
	BIG_DRIPLEAF_WEST bi
	BIRCH_LEAVES u
	BIRCH_LOG t
	BIRCH_SAPLING v
	BLACKSTONE aP
	BLUE_ICE I
	BLUE_ORCHID K
	BROWN_MUSHROOM F
	BUDDING_AMETHYST aY
	CACTUS aa
	CALCITE aZ
	CLAY aI
	COAL_ORE ao
	COARSE_DIRT d
	COPPER_ORE aq
	CRIMSON_FUNGUS aS
	CRIMSON_ROOTS V
	DANDELION M
	DARK_OAK_LEAVES x
	DARK_OAK_LOG w
	DARK_OAK_SAPLING y
	DEAD_BUSH N
	DEEPSLATE bl
	DEEPSLATE_COAL_ORE ap
	DEEPSLATE_COPPER_ORE ar
	DEEPSLATE_DIAMOND_ORE az
	DEEPSLATE_EMERALD_ORE aE
	DEEPSLATE_GOLD_ORE av
	DEEPSLATE_IRON_ORE at
	DEEPSLATE_LAPIS_ORE aB
	DEEPSLATE_REDSTONE_ORE ax
	DIAMOND_ORE ay
	DIORITE am
	DIRT aj
	EMERALD_ORE aD
	FERN b
	FIRE R
	FLOWERING_AZALEA_LEAVES bn
	GOLD_ORE au
	GRANITE al
	GRASS a
	GRASS_BLOCK z
	GRAVEL ak
	HUGE_BROWN_MUSHROOM ad
	HUGE_MUSHROOM_STEM ae
	HUGE_RED_MUSHROOM ac
	ICE g
	INFESTED_DEEPSLATE aG
	INFESTED_STONE aF
	IRON_ORE as
	JACK_O_LANTERN Y
	JUNGLE_LEAVES l
	JUNGLE_LOG k
	JUNGLE_SAPLING m
	LAPIS_ORE aA
	LARGE_FERN A
	LAVA ai
	LAVA_STATE ag
	LILAC C
	LILY_OF_THE_VALLEY J
	LILY_PAD W
	MAGMA_BLOCK aL
	MELON O
	MOSSY_COBBLESTONE aJ
	MYCELIUM e
	NETHERRACK T
	NETHER_GOLD_ORE aN
	NETHER_QUARTZ_ORE aO
	NETHER_SPROUTS aV
	OAK_LEAVES i
	OAK_LOG h
	OAK_SAPLING j
	PACKED_ICE H
	PEONY E
	PODZOL c
	POPPY L
	PUMPKIN P
	REDSTONE_ORE aw
	RED_MUSHROOM G
	ROSE_BUSH D
	SAND aH
	SEAGRASS aK
	SMALL_DRIPLEAF_EAST bd
	SMALL_DRIPLEAF_NORTH bf
	SMALL_DRIPLEAF_SOUTH bg
	SMALL_DRIPLEAF_WEST be
	SMOOTH_BASALT ba
	SNOW X
	SNOW_BLOCK f
	SOUL_FIRE S
	SOUL_SAND aM
	SOUL_SOIL U
	SPORE_BLOSSOM bc
	SPRUCE_LEAVES o
	SPRUCE_LOG n
	SPRUCE_SAPLING p
	STONE aC
	SUGAR_CANE ab
	SUNFLOWER Z
	SWEET_BERRY_BUSH Q
	TALL_GRASS B
	TUFF bb
	WARPED_FUNGUS aT
	WARPED_ROOTS aU
	WATER ah
	WATER_STATE af
net/minecraft/data/worldgen/PillagerOutpostPools lb
	START a
	bootstrap ()V a
net/minecraft/data/worldgen/PlainVillagePools lc
	START a
	bootstrap ()V a
net/minecraft/data/worldgen/Pools ld
	BUILTIN_EMPTY b
	EMPTY a
	bootstrap ()Lnet/minecraft/world/level/levelgen/feature/structures/StructureTemplatePool; a
	register (Lnet/minecraft/world/level/levelgen/feature/structures/StructureTemplatePool;)Lnet/minecraft/world/level/levelgen/feature/structures/StructureTemplatePool; a
net/minecraft/data/worldgen/ProcessorLists le
	ADD_GILDED_BLACKSTONE H
	BASTION_GENERIC_DEGRADATION x
	BOTTOM_RAMPART s
	BRIDGE A
	EMPTY a
	ENTRANCE_REPLACEMENT z
	FARM_DESERT q
	FARM_PLAINS m
	FARM_SAVANNA n
	FARM_SNOWY o
	FARM_TAIGA p
	FOSSIL_COAL F
	FOSSIL_DIAMONDS G
	FOSSIL_ROT E
	HIGH_RAMPART D
	HIGH_WALL C
	HOUSING u
	MOSSIFY_10_PERCENT g
	MOSSIFY_20_PERCENT h
	MOSSIFY_70_PERCENT i
	OUTPOST_ROT r
	RAMPART_DEGRADATION y
	REMOVE_GILDED_BLACKSTONE I
	ROOF B
	SIDE_WALL_DEGRADATION v
	STABLE_DEGRADATION w
	STREET_PLAINS j
	STREET_SAVANNA k
	STREET_SNOWY_OR_TAIGA l
	TREASURE_ROOMS t
	ZOMBIE_DESERT f
	ZOMBIE_PLAINS b
	ZOMBIE_SAVANNA c
	ZOMBIE_SNOWY d
	ZOMBIE_TAIGA e
	register (Ljava/lang/String;Lcom/google/common/collect/ImmutableList;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorList; a
net/minecraft/data/worldgen/SavannaVillagePools lf
	START a
	bootstrap ()V a
net/minecraft/data/worldgen/SnowyVillagePools lg
	START a
	bootstrap ()V a
net/minecraft/data/worldgen/StructureFeatures lh
	BASTION_REMNANT s
	BURIED_TREASURE r
	DESERT_PYRAMID f
	END_CITY q
	IGLOO g
	JUNGLE_TEMPLE e
	MINESHAFT b
	MINESHAFT_MESA c
	NETHER_BRIDGE o
	NETHER_FOSSIL p
	OCEAN_MONUMENT l
	OCEAN_RUIN_COLD m
	OCEAN_RUIN_WARM n
	PILLAGER_OUTPOST a
	RUINED_PORTAL_DESERT z
	RUINED_PORTAL_JUNGLE A
	RUINED_PORTAL_MOUNTAIN C
	RUINED_PORTAL_NETHER E
	RUINED_PORTAL_OCEAN D
	RUINED_PORTAL_STANDARD y
	RUINED_PORTAL_SWAMP B
	SHIPWRECH_BEACHED i
	SHIPWRECK h
	STRONGHOLD k
	SWAMP_HUT j
	VILLAGE_DESERT u
	VILLAGE_PLAINS t
	VILLAGE_SAVANNA v
	VILLAGE_SNOWY w
	VILLAGE_TAIGA x
	WOODLAND_MANSION d
	register (Ljava/lang/String;Lnet/minecraft/world/level/levelgen/feature/ConfiguredStructureFeature;)Lnet/minecraft/world/level/levelgen/feature/ConfiguredStructureFeature; a
net/minecraft/data/worldgen/SurfaceBuilders li
	BADLANDS a
	BASALT_DELTAS b
	CRIMSON_FOREST c
	DESERT d
	END e
	ERODED_BADLANDS f
	FROZEN_OCEAN g
	FULL_SAND h
	GIANT_TREE_TAIGA i
	GRASS j
	GRAVELLY_MOUNTAIN k
	ICE_SPIKES l
	MOUNTAIN m
	MYCELIUM n
	NETHER o
	NOPE p
	OCEAN_SAND q
	SHATTERED_SAVANNA r
	SOUL_SAND_VALLEY s
	STONE t
	SWAMP u
	WARPED_FOREST v
	WOODED_BADLANDS w
	register (Ljava/lang/String;Lnet/minecraft/world/level/levelgen/surfacebuilders/ConfiguredSurfaceBuilder;)Lnet/minecraft/world/level/levelgen/surfacebuilders/ConfiguredSurfaceBuilder; a
net/minecraft/data/worldgen/TaigaVillagePools lj
	START a
	bootstrap ()V a
net/minecraft/data/worldgen/VillagePools lk
	bootstrap ()V a
net/minecraft/data/worldgen/biome/BiomeReport ll
	GSON c
	LOGGER b
	generator d
	createPath (Ljava/nio/file/Path;Lnet/minecraft/resources/ResourceLocation;)Ljava/nio/file/Path; a
	getName ()Ljava/lang/String; a
	run (Lnet/minecraft/data/HashCache;)V a
net/minecraft/data/worldgen/biome/Biomes lm
	PLAINS a
	THE_VOID b
	TO_NAME c
	byId (I)Lnet/minecraft/resources/ResourceKey; a
	register (ILnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/level/biome/Biome;)Lnet/minecraft/world/level/biome/Biome; a
net/minecraft/data/worldgen/biome/VanillaBiomes ln
	badlandsBiome (FFZ)Lnet/minecraft/world/level/biome/Biome; b
	bambooJungleBiome ()Lnet/minecraft/world/level/biome/Biome; f
	bambooJungleBiome (FFII)Lnet/minecraft/world/level/biome/Biome; a
	bambooJungleHillsBiome ()Lnet/minecraft/world/level/biome/Biome; g
	basaltDeltasBiome ()Lnet/minecraft/world/level/biome/Biome; u
	baseBadlandsBiome (Lnet/minecraft/world/level/levelgen/surfacebuilders/ConfiguredSurfaceBuilder;FFZZ)Lnet/minecraft/world/level/biome/Biome; a
	baseEndBiome (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)Lnet/minecraft/world/level/biome/Biome; a
	baseForestBiome (FFZLnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)Lnet/minecraft/world/level/biome/Biome; a
	baseJungleBiome (FFFZZZLnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)Lnet/minecraft/world/level/biome/Biome; a
	baseOceanBiome (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;IIZLnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)Lnet/minecraft/world/level/biome/Biome; a
	baseOceanGeneration (Lnet/minecraft/world/level/levelgen/surfacebuilders/ConfiguredSurfaceBuilder;ZZZ)Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder; a
	baseSavannaBiome (FFFZZLnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)Lnet/minecraft/world/level/biome/Biome; a
	beachBiome (FFFFIZZ)Lnet/minecraft/world/level/biome/Biome; a
	birchForestBiome (FFZ)Lnet/minecraft/world/level/biome/Biome; a
	calculateSkyColor (F)I a
	coldOceanBiome (Z)Lnet/minecraft/world/level/biome/Biome; b
	crimsonForestBiome ()Lnet/minecraft/world/level/biome/Biome; v
	darkForestBiome (FFZ)Lnet/minecraft/world/level/biome/Biome; c
	deepWarmOceanBiome ()Lnet/minecraft/world/level/biome/Biome; p
	defaultSpawns ()Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder; A
	desertBiome (FFZZZ)Lnet/minecraft/world/level/biome/Biome; a
	dripstoneCaves ()Lnet/minecraft/world/level/biome/Biome; y
	endBarrensBiome ()Lnet/minecraft/world/level/biome/Biome; h
	endHighlandsBiome ()Lnet/minecraft/world/level/biome/Biome; k
	endMidlandsBiome ()Lnet/minecraft/world/level/biome/Biome; j
	erodedBadlandsBiome ()Lnet/minecraft/world/level/biome/Biome; n
	flowerForestBiome ()Lnet/minecraft/world/level/biome/Biome; q
	forestBiome (FF)Lnet/minecraft/world/level/biome/Biome; c
	frozenOceanBiome (Z)Lnet/minecraft/world/level/biome/Biome; e
	giantTreeTaiga (FFFZ)Lnet/minecraft/world/level/biome/Biome; a
	jungleBiome ()Lnet/minecraft/world/level/biome/Biome; a
	jungleBiome (FFIII)Lnet/minecraft/world/level/biome/Biome; a
	jungleEdgeBiome ()Lnet/minecraft/world/level/biome/Biome; b
	jungleHillsBiome ()Lnet/minecraft/world/level/biome/Biome; e
	lukeWarmOceanBiome (Z)Lnet/minecraft/world/level/biome/Biome; d
	lushCaves ()Lnet/minecraft/world/level/biome/Biome; x
	modifiedJungleBiome ()Lnet/minecraft/world/level/biome/Biome; d
	modifiedJungleEdgeBiome ()Lnet/minecraft/world/level/biome/Biome; c
	mountainBiome (FFLnet/minecraft/world/level/levelgen/surfacebuilders/ConfiguredSurfaceBuilder;Z)Lnet/minecraft/world/level/biome/Biome; a
	mushroomFieldsBiome (FF)Lnet/minecraft/world/level/biome/Biome; a
	netherWastesBiome ()Lnet/minecraft/world/level/biome/Biome; s
	oceanBiome (Z)Lnet/minecraft/world/level/biome/Biome; c
	plainsBiome (Z)Lnet/minecraft/world/level/biome/Biome; a
	riverBiome (FFFIZ)Lnet/minecraft/world/level/biome/Biome; a
	savanaPlateauBiome ()Lnet/minecraft/world/level/biome/Biome; m
	savannaBiome (FFFZZ)Lnet/minecraft/world/level/biome/Biome; a
	savannaMobs ()Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder; z
	smallEndIslandsBiome ()Lnet/minecraft/world/level/biome/Biome; l
	soulSandValleyBiome ()Lnet/minecraft/world/level/biome/Biome; t
	swampBiome (FFZ)Lnet/minecraft/world/level/biome/Biome; d
	taigaBiome (FFZZZZ)Lnet/minecraft/world/level/biome/Biome; a
	theEndBiome ()Lnet/minecraft/world/level/biome/Biome; i
	theVoidBiome ()Lnet/minecraft/world/level/biome/Biome; r
	tundraBiome (FFZZ)Lnet/minecraft/world/level/biome/Biome; a
	warmOceanBiome ()Lnet/minecraft/world/level/biome/Biome; o
	warpedForestBiome ()Lnet/minecraft/world/level/biome/Biome; w
	woodedBadlandsPlateauBiome (FF)Lnet/minecraft/world/level/biome/Biome; b
net/minecraft/gametest/framework/AfterBatch lp
	batch ()Ljava/lang/String; a
net/minecraft/gametest/framework/BeforeBatch lq
	batch ()Ljava/lang/String; a
net/minecraft/gametest/framework/ExhaustedAttemptsException lr
net/minecraft/gametest/framework/GameTest ls
	attempts ()I g
	batch ()Ljava/lang/String; b
	required ()Z d
	requiredSuccesses ()I h
	rotationSteps ()I c
	setupTicks ()J f
	template ()Ljava/lang/String; e
	timeoutTicks ()I a
net/minecraft/gametest/framework/GameTestAssertException lt
net/minecraft/gametest/framework/GameTestAssertPosException lu
	absolutePos a
	relativePos b
	tick c
	getAbsolutePos ()Lnet/minecraft/core/BlockPos; c
	getMessageToShowAtBlock ()Ljava/lang/String; a
	getRelativePos ()Lnet/minecraft/core/BlockPos; b
net/minecraft/gametest/framework/GameTestBatch lv
	DEFAULT_BATCH_NAME a
	afterBatchFunction e
	beforeBatchFunction d
	name b
	testFunctions c
	getName ()Ljava/lang/String; a
	getTestFunctions ()Ljava/util/Collection; b
	runAfterBatchFunction (Lnet/minecraft/server/level/ServerLevel;)V b
	runBeforeBatchFunction (Lnet/minecraft/server/level/ServerLevel;)V a
net/minecraft/gametest/framework/GameTestBatchRunner lw
	LOGGER a
	allTestInfos f
	batches g
	firstTestNorthWestCorner b
	level c
	nextTestNorthWestCorner h
	testTicker d
	testsPerRow e
	createStructuresForBatch (Ljava/util/Collection;)Ljava/util/Map; a
	getTestInfos ()Ljava/util/List; a
	runBatch (I)V a
	start ()V b
net/minecraft/gametest/framework/GameTestEvent lx
	assertion b
	expectedDelay a
	create (JLjava/lang/Runnable;)Lnet/minecraft/gametest/framework/GameTestEvent; a
	create (Ljava/lang/Runnable;)Lnet/minecraft/gametest/framework/GameTestEvent; a
net/minecraft/gametest/framework/GameTestGenerator ly
net/minecraft/gametest/framework/GameTestHelper lz
	finalCheckAdded b
	testInfo a
	absolutePos (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; i
	absoluteVec (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; a
	assertAtTickTimeContainerContains (JLnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/Item;)V a
	assertAtTickTimeContainerEmpty (JLnet/minecraft/core/BlockPos;)V a
	assertBlock (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;Ljava/lang/String;)V a
	assertBlock (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;Ljava/util/function/Supplier;)V a
	assertBlockNotPresent (Lnet/minecraft/world/level/block/Block;III)V b
	assertBlockNotPresent (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;)V b
	assertBlockPresent (Lnet/minecraft/world/level/block/Block;III)V a
	assertBlockPresent (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;)V a
	assertBlockProperty (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)V a
	assertBlockProperty (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/properties/Property;Ljava/util/function/Predicate;Ljava/lang/String;)V a
	assertBlockState (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;Ljava/util/function/Supplier;)V b
	assertContainerContains (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/Item;)V a
	assertContainerEmpty (Lnet/minecraft/core/BlockPos;)V g
	assertEntityData (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/EntityType;Ljava/util/function/Function;Ljava/lang/Object;)V a
	assertEntityInstancePresent (Lnet/minecraft/world/entity/Entity;III)V a
	assertEntityInstancePresent (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)V a
	assertEntityNotPresent (Lnet/minecraft/world/entity/EntityType;)V b
	assertEntityNotPresent (Lnet/minecraft/world/entity/EntityType;III)V d
	assertEntityNotPresent (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/core/BlockPos;)V d
	assertEntityNotTouching (Lnet/minecraft/world/entity/EntityType;DDD)V b
	assertEntityPresent (Lnet/minecraft/world/entity/EntityType;)V a
	assertEntityPresent (Lnet/minecraft/world/entity/EntityType;III)V c
	assertEntityPresent (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/core/BlockPos;)V c
	assertEntityPresent (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/core/BlockPos;D)V a
	assertEntityProperty (Lnet/minecraft/world/entity/Entity;Ljava/util/function/Function;Ljava/lang/String;Ljava/lang/Object;)V a
	assertEntityProperty (Lnet/minecraft/world/entity/Entity;Ljava/util/function/Predicate;Ljava/lang/String;)V a
	assertEntityTouching (Lnet/minecraft/world/entity/EntityType;DDD)V a
	assertItemEntityCountIs (Lnet/minecraft/world/item/Item;Lnet/minecraft/core/BlockPos;DI)V a
	assertItemEntityPresent (Lnet/minecraft/world/item/Item;Lnet/minecraft/core/BlockPos;D)V a
	assertSameBlockState (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)V a
	assertSameBlockStates (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/core/BlockPos;)V a
	destroyBlock (Lnet/minecraft/core/BlockPos;)V f
	ensureSingleFinalCheck ()V h
	fail (Ljava/lang/String;)V a
	fail (Ljava/lang/String;Lnet/minecraft/core/BlockPos;)V a
	fail (Ljava/lang/String;Lnet/minecraft/world/entity/Entity;)V a
	failIf (Ljava/lang/Runnable;)V c
	failIfEver (Ljava/lang/Runnable;)V d
	forEveryBlockInStructure (Ljava/util/function/Consumer;)V a
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; b
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	getBounds ()Lnet/minecraft/world/phys/AABB; i
	getLevel ()Lnet/minecraft/server/level/ServerLevel; a
	getRelativeBounds ()Lnet/minecraft/world/phys/AABB; j
	getTick ()J g
	killAllEntities ()V b
	makeAboutToDrown (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/LivingEntity; a
	makeMockPlayer ()Lnet/minecraft/world/entity/player/Player; c
	onEachTick (Ljava/lang/Runnable;)V e
	pressButton (III)V a
	pressButton (Lnet/minecraft/core/BlockPos;)V c
	pullLever (III)V b
	pullLever (Lnet/minecraft/core/BlockPos;)V e
	pulseRedstone (Lnet/minecraft/core/BlockPos;J)V a
	randomTick (Lnet/minecraft/core/BlockPos;)V h
	relativePos (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; j
	runAfterDelay (JLjava/lang/Runnable;)V b
	runAtTickTime (JLjava/lang/Runnable;)V a
	setBlock (IIILnet/minecraft/world/level/block/Block;)V a
	setBlock (IIILnet/minecraft/world/level/block/state/BlockState;)V a
	setBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V a
	setBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	setDayTime (I)V a
	setNight ()V d
	spawn (Lnet/minecraft/world/entity/EntityType;FFF)Lnet/minecraft/world/entity/Entity; a
	spawn (Lnet/minecraft/world/entity/EntityType;III)Lnet/minecraft/world/entity/Entity; a
	spawn (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/Entity; a
	spawn (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/entity/Entity; a
	spawnItem (Lnet/minecraft/world/item/Item;FFF)Lnet/minecraft/world/entity/item/ItemEntity; a
	spawnWithNoFreeWill (Lnet/minecraft/world/entity/EntityType;FFF)Lnet/minecraft/world/entity/Mob; b
	spawnWithNoFreeWill (Lnet/minecraft/world/entity/EntityType;III)Lnet/minecraft/world/entity/Mob; b
	spawnWithNoFreeWill (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/Mob; b
	spawnWithNoFreeWill (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/entity/Mob; b
	startSequence ()Lnet/minecraft/gametest/framework/GameTestSequence; f
	succeed ()V e
	succeedIf (Ljava/lang/Runnable;)V a
	succeedOnTickWhen (ILjava/lang/Runnable;)V a
	succeedWhen (Ljava/lang/Runnable;)V b
	succeedWhenBlockPresent (Lnet/minecraft/world/level/block/Block;III)V c
	succeedWhenBlockPresent (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;)V c
	succeedWhenEntityData (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/EntityType;Ljava/util/function/Function;Ljava/lang/Object;)V b
	succeedWhenEntityNotPresent (Lnet/minecraft/world/entity/EntityType;III)V f
	succeedWhenEntityNotPresent (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/core/BlockPos;)V f
	succeedWhenEntityPresent (Lnet/minecraft/world/entity/EntityType;III)V e
	succeedWhenEntityPresent (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/core/BlockPos;)V e
	useBlock (Lnet/minecraft/core/BlockPos;)V d
	walkTo (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/core/BlockPos;F)Lnet/minecraft/gametest/framework/GameTestSequence; a
net/minecraft/gametest/framework/GameTestInfo ma
	done l
	error n
	level c
	listeners d
	rotation m
	runAtTickTimeMap g
	sequences f
	startTick h
	started j
	structureBlockEntity o
	structureBlockPos b
	testFunction a
	tickCount i
	timeoutTicks e
	timer k
	addListener (Lnet/minecraft/gametest/framework/GameTestListener;)V a
	clearStructure ()V o
	createSequence ()Lnet/minecraft/gametest/framework/GameTestSequence; q
	fail (Ljava/lang/Throwable;)V a
	finish ()V D
	getError ()Ljava/lang/Throwable; n
	getLevel ()Lnet/minecraft/server/level/ServerLevel; g
	getRotation ()Lnet/minecraft/world/level/block/Rotation; u
	getRunTime ()J l
	getStructureBlockEntity ()Lnet/minecraft/world/level/block/entity/StructureBlockEntity; C
	getStructureBlockPos ()Lnet/minecraft/core/BlockPos; d
	getStructureBounds ()Lnet/minecraft/world/phys/AABB; f
	getStructureName ()Ljava/lang/String; t
	getStructureSize ()Lnet/minecraft/core/Vec3i; e
	getTestFunction ()Lnet/minecraft/gametest/framework/TestFunction; v
	getTestName ()Ljava/lang/String; c
	getTick ()J p
	getTimeoutTicks ()I w
	hasFailed ()Z i
	hasStarted ()Z j
	hasSucceeded ()Z h
	isDone ()Z k
	isFlaky ()Z x
	isOptional ()Z s
	isRequired ()Z r
	maxAttempts ()I y
	requiredSuccesses ()I z
	setRunAtTickTime (JLjava/lang/Runnable;)V a
	setStructureBlockPos (Lnet/minecraft/core/BlockPos;)V a
	spawnStructure (Lnet/minecraft/core/BlockPos;I)V a
	startExecution ()V a
	startTest ()V B
	succeed ()V m
	tick ()V b
	tickInternal ()V A
net/minecraft/gametest/framework/GameTestListener mb
	testFailed (Lnet/minecraft/gametest/framework/GameTestInfo;)V c
	testPassed (Lnet/minecraft/gametest/framework/GameTestInfo;)V b
	testStructureLoaded (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
net/minecraft/gametest/framework/GameTestRegistry mc
	AFTER_BATCH_FUNCTIONS d
	BEFORE_BATCH_FUNCTIONS c
	LAST_FAILED_TESTS e
	TEST_CLASS_NAMES b
	TEST_FUNCTIONS a
	findTestFunction (Ljava/lang/String;)Ljava/util/Optional; e
	forgetFailedTests ()V d
	getAfterBatchFunction (Ljava/lang/String;)Ljava/util/function/Consumer; d
	getAllTestClassNames ()Ljava/util/Collection; b
	getAllTestFunctions ()Ljava/util/Collection; a
	getBeforeBatchFunction (Ljava/lang/String;)Ljava/util/function/Consumer; c
	getLastFailedTests ()Ljava/util/Collection; c
	getTestFunction (Ljava/lang/String;)Lnet/minecraft/gametest/framework/TestFunction; f
	getTestFunctionsForClassName (Ljava/lang/String;)Ljava/util/Collection; a
	isTestClass (Ljava/lang/String;)Z b
	isTestFunctionPartOfClass (Lnet/minecraft/gametest/framework/TestFunction;Ljava/lang/String;)Z a
	register (Ljava/lang/Class;)V a
	register (Ljava/lang/reflect/Method;)V a
	registerBatchFunction (Ljava/lang/reflect/Method;Ljava/lang/Class;Ljava/util/function/Function;Ljava/util/Map;)V a
	rememberFailedTest (Lnet/minecraft/gametest/framework/TestFunction;)V a
	turnMethodIntoConsumer (Ljava/lang/reflect/Method;)Ljava/util/function/Consumer; d
	turnMethodIntoTestFunction (Ljava/lang/reflect/Method;)Lnet/minecraft/gametest/framework/TestFunction; c
	useTestGeneratorMethod (Ljava/lang/reflect/Method;)Ljava/util/Collection; b
net/minecraft/gametest/framework/GameTestRunner md
	DEFAULT_TESTS_PER_ROW d
	MAX_TESTS_PER_BATCH e
	PADDING_AROUND_EACH_STRUCTURE a
	SPACE_BETWEEN_COLUMNS b
	SPACE_BETWEEN_ROWS c
	clearAllTests (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/gametest/framework/GameTestTicker;I)V a
	clearMarkers (Lnet/minecraft/server/level/ServerLevel;)V a
	groupTestsIntoBatches (Ljava/util/Collection;)Ljava/util/Collection; a
	runTest (Lnet/minecraft/gametest/framework/GameTestInfo;Lnet/minecraft/core/BlockPos;Lnet/minecraft/gametest/framework/GameTestTicker;)V a
	runTestBatches (Ljava/util/Collection;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/gametest/framework/GameTestTicker;I)Ljava/util/Collection; a
	runTests (Ljava/util/Collection;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/gametest/framework/GameTestTicker;I)Ljava/util/Collection; b
net/minecraft/gametest/framework/GameTestSequence me
	events b
	lastTick c
	parent a
	executeWithoutFail (Ljava/lang/Runnable;)V c
	thenExecute (Ljava/lang/Runnable;)Lnet/minecraft/gametest/framework/GameTestSequence; b
	thenExecuteAfter (ILjava/lang/Runnable;)Lnet/minecraft/gametest/framework/GameTestSequence; a
	thenExecuteFor (ILjava/lang/Runnable;)Lnet/minecraft/gametest/framework/GameTestSequence; b
	thenFail (Ljava/util/function/Supplier;)V a
	thenIdle (I)Lnet/minecraft/gametest/framework/GameTestSequence; a
	thenSucceed ()V a
	thenTrigger ()Lnet/minecraft/gametest/framework/GameTestSequence$Condition; b
	thenWaitUntil (JLjava/lang/Runnable;)Lnet/minecraft/gametest/framework/GameTestSequence; a
	thenWaitUntil (Ljava/lang/Runnable;)Lnet/minecraft/gametest/framework/GameTestSequence; a
	tick (J)V c
	tickAndContinue (J)V a
	tickAndFailIfNotComplete (J)V b
net/minecraft/gametest/framework/GameTestSequence$Condition me$a
	NOT_TRIGGERED b
	triggerTime c
	assertTriggeredThisTick ()V a
	trigger (J)V a
net/minecraft/gametest/framework/GameTestServer mf
	LOGGER p
	PROGRESS_REPORT_INTERVAL q
	TEST_GAME_RULES t
	TEST_SETTINGS u
	spawnPos s
	testBatches r
	testTracker v
	fillServerSystemReport (Lnet/minecraft/SystemReport;)Lnet/minecraft/SystemReport; a
	getFunctionCompilationLevel ()I i
	getModdedStatus ()Ljava/util/Optional; p
	getOperatorUserPermissionLevel ()I h
	getRateLimitPacketsPerSecond ()I l
	haveTestsStarted ()Z bf
	initServer ()Z e
	isCommandBlockEnabled ()Z n
	isDedicatedServer ()Z k
	isEpollEnabled ()Z m
	isHardcore ()Z g
	isPublished ()Z o
	isSingleplayerOwner (Lcom/mojang/authlib/GameProfile;)Z a
	onServerCrash (Lnet/minecraft/CrashReport;)V a
	onServerExit ()V f
	shouldInformAdmins ()Z E_
	shouldRconBroadcast ()Z j
	startTests (Lnet/minecraft/server/level/ServerLevel;)V b
	tickServer (Ljava/util/function/BooleanSupplier;)V a
net/minecraft/gametest/framework/GameTestTicker mg
	SINGLETON a
	testInfos b
	add (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
	clear ()V a
	tick ()V b
net/minecraft/gametest/framework/GameTestTimeoutException mh
net/minecraft/gametest/framework/GlobalTestReporter mi
	DELEGATE a
	finish ()V a
	onTestFailed (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
	onTestSuccess (Lnet/minecraft/gametest/framework/GameTestInfo;)V b
	replaceWith (Lnet/minecraft/gametest/framework/TestReporter;)V a
net/minecraft/gametest/framework/JUnitLikeTestReporter mj
	destination d
	document a
	stopwatch c
	testSuite b
	createTestCase (Lnet/minecraft/gametest/framework/GameTestInfo;Ljava/lang/String;)Lorg/w3c/dom/Element; a
	finish ()V a
	onTestFailed (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
	onTestSuccess (Lnet/minecraft/gametest/framework/GameTestInfo;)V b
	save (Ljava/io/File;)V a
net/minecraft/gametest/framework/LogTestReporter mk
	LOGGER a
	onTestFailed (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
	onTestSuccess (Lnet/minecraft/gametest/framework/GameTestInfo;)V b
net/minecraft/gametest/framework/MultipleTestTracker ml
	FAILED_OPTIONAL_TEST_CHAR d
	FAILED_REQUIRED_TEST_CHAR e
	NOT_STARTED_TEST_CHAR a
	ONGOING_TEST_CHAR b
	SUCCESSFUL_TEST_CHAR c
	listeners g
	tests f
	addFailureListener (Ljava/util/function/Consumer;)V a
	addListener (Lnet/minecraft/gametest/framework/GameTestListener;)V a
	addTestToTrack (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
	getDoneCount ()I c
	getFailedOptional ()Ljava/util/Collection; g
	getFailedOptionalCount ()I b
	getFailedRequired ()Ljava/util/Collection; f
	getFailedRequiredCount ()I a
	getProgressBar ()Ljava/lang/String; j
	getTotalCount ()I h
	hasFailedOptional ()Z e
	hasFailedRequired ()Z d
	isDone ()Z i
net/minecraft/gametest/framework/ReportGameListener mm
	attempts a
	originalTestInfo c
	structurePos e
	successes b
	testTicker d
	createBook (Ljava/lang/String;ZLjava/lang/String;)Lnet/minecraft/world/item/ItemStack; a
	reportFailure (Lnet/minecraft/gametest/framework/GameTestInfo;Ljava/lang/Throwable;)V a
	reportPassed (Lnet/minecraft/gametest/framework/GameTestInfo;Ljava/lang/String;)V a
	rerunTest ()V a
	say (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/ChatFormatting;Ljava/lang/String;)V a
	showRedBox (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/lang/String;)V a
	spawnBeacon (Lnet/minecraft/gametest/framework/GameTestInfo;Lnet/minecraft/world/level/block/Block;)V a
	spawnLectern (Lnet/minecraft/gametest/framework/GameTestInfo;Ljava/lang/String;)V c
	testFailed (Lnet/minecraft/gametest/framework/GameTestInfo;)V c
	testPassed (Lnet/minecraft/gametest/framework/GameTestInfo;)V b
	testStructureLoaded (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
	visualizeFailedTest (Lnet/minecraft/gametest/framework/GameTestInfo;Ljava/lang/Throwable;)V b
	visualizePassedTest (Lnet/minecraft/gametest/framework/GameTestInfo;Ljava/lang/String;)V b
net/minecraft/gametest/framework/StructureUtils mn
	DEFAULT_TEST_STRUCTURES_DIR a
	HOW_MANY_CHUNKS_TO_LOAD_IN_EACH_DIRECTION_OF_STRUCTURE d
	LOGGER c
	testStructuresDir b
	addCommandBlockAndButtonToStartTest (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/server/level/ServerLevel;)V a
	clearBlock (ILnet/minecraft/core/BlockPos;Lnet/minecraft/server/level/ServerLevel;)V a
	clearSpaceForStructure (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;ILnet/minecraft/server/level/ServerLevel;)V a
	createNewEmptyStructureBlock (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Vec3i;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/server/level/ServerLevel;)V a
	createStructureBlock (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/server/level/ServerLevel;Z)Lnet/minecraft/world/level/block/entity/StructureBlockEntity; a
	doesStructureContain (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/server/level/ServerLevel;)Z a
	findNearestStructureBlock (Lnet/minecraft/core/BlockPos;ILnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/core/BlockPos; b
	findStructureBlockContainingPos (Lnet/minecraft/core/BlockPos;ILnet/minecraft/server/level/ServerLevel;)Ljava/util/Optional; a
	findStructureBlocks (Lnet/minecraft/core/BlockPos;ILnet/minecraft/server/level/ServerLevel;)Ljava/util/Collection; c
	forceLoadChunks (Lnet/minecraft/core/BlockPos;Lnet/minecraft/server/level/ServerLevel;)V a
	getRotationForRotationSteps (I)Lnet/minecraft/world/level/block/Rotation; a
	getRotationStepsForRotation (Lnet/minecraft/world/level/block/Rotation;)I a
	getStructureBoundingBox (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Vec3i;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getStructureBoundingBox (Lnet/minecraft/world/level/block/entity/StructureBlockEntity;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; b
	getStructureBounds (Lnet/minecraft/world/level/block/entity/StructureBlockEntity;)Lnet/minecraft/world/phys/AABB; a
	getStructureTemplate (Ljava/lang/String;Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate; a
	main ([Ljava/lang/String;)V a
	spawnStructure (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;ILnet/minecraft/server/level/ServerLevel;Z)Lnet/minecraft/world/level/block/entity/StructureBlockEntity; a
	tryLoadStructure (Ljava/nio/file/Path;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/gametest/framework/TeamcityTestReporter mo
	ESCAPER b
	LOGGER a
	onTestFailed (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
	onTestSuccess (Lnet/minecraft/gametest/framework/GameTestInfo;)V b
net/minecraft/gametest/framework/TestClassNameArgument mp
	EXAMPLES a
	getTestClassName (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/lang/String; a
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/String; a
	testClassName ()Lnet/minecraft/gametest/framework/TestClassNameArgument; a
net/minecraft/gametest/framework/TestCommand mq
	DEFAULT_CLEAR_RADIUS a
	DEFAULT_X_SIZE g
	DEFAULT_Y_SIZE h
	DEFAULT_Z_SIZE i
	MAX_CLEAR_RADIUS b
	SHOW_POS_DURATION_MS f
	STRUCTURE_BLOCK_FULL_SEARCH_RADIUS d
	STRUCTURE_BLOCK_NEARBY_SEARCH_RADIUS c
	TEST_POS_Z_OFFSET_FROM_PLAYER e
	clearAllTests (Lnet/minecraft/commands/CommandSourceStack;I)I a
	createNewStructure (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;III)I a
	exportNearestTestStructure (Lnet/minecraft/commands/CommandSourceStack;)I c
	exportTestStructure (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;)I c
	importTestStructure (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;)I d
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	runAllNearbyTests (Lnet/minecraft/commands/CommandSourceStack;)I b
	runAllTests (Lnet/minecraft/commands/CommandSourceStack;II)I a
	runAllTestsInClass (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;II)I a
	runLastFailedTests (Lnet/minecraft/commands/CommandSourceStack;ZII)I a
	runNearbyTest (Lnet/minecraft/commands/CommandSourceStack;)I a
	runTest (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/gametest/framework/TestFunction;I)I a
	runTest (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/gametest/framework/MultipleTestTracker;)V a
	runTestPreparation (Lnet/minecraft/gametest/framework/TestFunction;Lnet/minecraft/server/level/ServerLevel;)V a
	runTests (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;II)V a
	say (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;)V b
	say (Lnet/minecraft/server/level/ServerLevel;Ljava/lang/String;Lnet/minecraft/ChatFormatting;)V a
	showPos (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;)I a
	showTestSummaryIfAllDone (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/gametest/framework/MultipleTestTracker;)V a
net/minecraft/gametest/framework/TestCommand$TestSummaryDisplayer mq$a
	level a
	tracker b
	testFailed (Lnet/minecraft/gametest/framework/GameTestInfo;)V c
	testPassed (Lnet/minecraft/gametest/framework/GameTestInfo;)V b
	testStructureLoaded (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
net/minecraft/gametest/framework/TestFunction mr
	batchName a
	function g
	maxAttempts e
	maxTicks h
	required d
	requiredSuccesses f
	rotation j
	setupTicks i
	structureName c
	testName b
	getBatchName ()Ljava/lang/String; e
	getMaxAttempts ()I i
	getMaxTicks ()I c
	getRequiredSuccesses ()I j
	getRotation ()Lnet/minecraft/world/level/block/Rotation; g
	getSetupTicks ()J f
	getStructureName ()Ljava/lang/String; b
	getTestName ()Ljava/lang/String; a
	isFlaky ()Z h
	isRequired ()Z d
	run (Lnet/minecraft/gametest/framework/GameTestHelper;)V a
net/minecraft/gametest/framework/TestFunctionArgument ms
	EXAMPLES a
	getTestFunction (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/gametest/framework/TestFunction; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/gametest/framework/TestFunction; a
	testFunctionArgument ()Lnet/minecraft/gametest/framework/TestFunctionArgument; a
net/minecraft/gametest/framework/TestReporter mt
	finish ()V a
	onTestFailed (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
	onTestSuccess (Lnet/minecraft/gametest/framework/GameTestInfo;)V b
net/minecraft/locale/Language mv
	DEFAULT a
	GSON c
	LOGGER b
	UNSUPPORTED_FORMAT_PATTERN d
	instance e
	getInstance ()Lnet/minecraft/locale/Language; a
	getOrDefault (Ljava/lang/String;)Ljava/lang/String; a
	getVisualOrder (Ljava/util/List;)Ljava/util/List; a
	getVisualOrder (Lnet/minecraft/network/chat/FormattedText;)Lnet/minecraft/util/FormattedCharSequence; a
	has (Ljava/lang/String;)Z b
	inject (Lnet/minecraft/locale/Language;)V a
	isDefaultRightToLeft ()Z b
	loadDefault ()Lnet/minecraft/locale/Language; c
	loadFromJson (Ljava/io/InputStream;Ljava/util/function/BiConsumer;)V a
net/minecraft/nbt/ByteArrayTag mx
	SELF_SIZE_IN_BITS b
	TYPE a
	data c
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	add (ILnet/minecraft/nbt/ByteTag;)V b
	add (ILnet/minecraft/nbt/Tag;)V c
	addTag (ILnet/minecraft/nbt/Tag;)Z b
	copy ()Lnet/minecraft/nbt/Tag; c
	get (I)Lnet/minecraft/nbt/ByteTag; a
	getAsByteArray ()[B d
	getElementType ()B e
	getId ()B a
	getType ()Lnet/minecraft/nbt/TagType; b
	remove (I)Lnet/minecraft/nbt/ByteTag; b
	remove (I)Lnet/minecraft/nbt/Tag; c
	set (ILnet/minecraft/nbt/ByteTag;)Lnet/minecraft/nbt/ByteTag; a
	set (ILnet/minecraft/nbt/Tag;)Lnet/minecraft/nbt/Tag; d
	setTag (ILnet/minecraft/nbt/Tag;)Z a
	toArray (Ljava/util/List;)[B a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/ByteTag my
	ONE c
	SELF_SIZE_IN_BITS w
	TYPE a
	ZERO b
	data x
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	copy ()Lnet/minecraft/nbt/ByteTag; d
	copy ()Lnet/minecraft/nbt/Tag; c
	getAsByte ()B h
	getAsDouble ()D i
	getAsFloat ()F j
	getAsInt ()I f
	getAsLong ()J e
	getAsNumber ()Ljava/lang/Number; k
	getAsShort ()S g
	getId ()B a
	getType ()Lnet/minecraft/nbt/TagType; b
	valueOf (B)Lnet/minecraft/nbt/ByteTag; a
	valueOf (Z)Lnet/minecraft/nbt/ByteTag; a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/ByteTag$Cache my$a
	cache a
net/minecraft/nbt/CollectionTag mz
	add (ILnet/minecraft/nbt/Tag;)V c
	addTag (ILnet/minecraft/nbt/Tag;)Z b
	getElementType ()B e
	remove (I)Lnet/minecraft/nbt/Tag; c
	set (ILnet/minecraft/nbt/Tag;)Lnet/minecraft/nbt/Tag; d
	setTag (ILnet/minecraft/nbt/Tag;)Z a
net/minecraft/nbt/CompoundTag na
	CODEC a
	MAP_ENTRY_SIZE_IN_BITS w
	SELF_SIZE_IN_BITS c
	TYPE b
	tags x
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	contains (Ljava/lang/String;)Z e
	contains (Ljava/lang/String;I)Z b
	copy ()Lnet/minecraft/nbt/CompoundTag; g
	copy ()Lnet/minecraft/nbt/Tag; c
	createReport (Ljava/lang/String;Lnet/minecraft/nbt/TagType;Ljava/lang/ClassCastException;)Lnet/minecraft/CrashReport; a
	entries ()Ljava/util/Map; h
	get (Ljava/lang/String;)Lnet/minecraft/nbt/Tag; c
	getAllKeys ()Ljava/util/Set; d
	getBoolean (Ljava/lang/String;)Z q
	getByte (Ljava/lang/String;)B f
	getByteArray (Ljava/lang/String;)[B m
	getCompound (Ljava/lang/String;)Lnet/minecraft/nbt/CompoundTag; p
	getDouble (Ljava/lang/String;)D k
	getFloat (Ljava/lang/String;)F j
	getId ()B a
	getInt (Ljava/lang/String;)I h
	getIntArray (Ljava/lang/String;)[I n
	getList (Ljava/lang/String;I)Lnet/minecraft/nbt/ListTag; c
	getLong (Ljava/lang/String;)J i
	getLongArray (Ljava/lang/String;)[J o
	getShort (Ljava/lang/String;)S g
	getString (Ljava/lang/String;)Ljava/lang/String; l
	getTagType (Ljava/lang/String;)B d
	getType ()Lnet/minecraft/nbt/TagType; b
	getUUID (Ljava/lang/String;)Ljava/util/UUID; a
	hasUUID (Ljava/lang/String;)Z b
	isEmpty ()Z f
	merge (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	put (Ljava/lang/String;Lnet/minecraft/nbt/Tag;)Lnet/minecraft/nbt/Tag; a
	putBoolean (Ljava/lang/String;Z)V a
	putByte (Ljava/lang/String;B)V a
	putByteArray (Ljava/lang/String;Ljava/util/List;)V a
	putByteArray (Ljava/lang/String;[B)V a
	putDouble (Ljava/lang/String;D)V a
	putFloat (Ljava/lang/String;F)V a
	putInt (Ljava/lang/String;I)V a
	putIntArray (Ljava/lang/String;Ljava/util/List;)V b
	putIntArray (Ljava/lang/String;[I)V a
	putLong (Ljava/lang/String;J)V a
	putLongArray (Ljava/lang/String;Ljava/util/List;)V c
	putLongArray (Ljava/lang/String;[J)V a
	putShort (Ljava/lang/String;S)V a
	putString (Ljava/lang/String;Ljava/lang/String;)V a
	putUUID (Ljava/lang/String;Ljava/util/UUID;)V a
	readNamedTagData (Lnet/minecraft/nbt/TagType;Ljava/lang/String;Ljava/io/DataInput;ILnet/minecraft/nbt/NbtAccounter;)Lnet/minecraft/nbt/Tag; a
	readNamedTagName (Ljava/io/DataInput;Lnet/minecraft/nbt/NbtAccounter;)Ljava/lang/String; b
	readNamedTagType (Ljava/io/DataInput;Lnet/minecraft/nbt/NbtAccounter;)B a
	remove (Ljava/lang/String;)V r
	size ()I e
	write (Ljava/io/DataOutput;)V a
	writeNamedTag (Ljava/lang/String;Lnet/minecraft/nbt/Tag;Ljava/io/DataOutput;)V a
net/minecraft/nbt/DoubleTag nb
	SELF_SIZE_IN_BITS c
	TYPE b
	ZERO a
	data w
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	copy ()Lnet/minecraft/nbt/DoubleTag; d
	copy ()Lnet/minecraft/nbt/Tag; c
	getAsByte ()B h
	getAsDouble ()D i
	getAsFloat ()F j
	getAsInt ()I f
	getAsLong ()J e
	getAsNumber ()Ljava/lang/Number; k
	getAsShort ()S g
	getId ()B a
	getType ()Lnet/minecraft/nbt/TagType; b
	valueOf (D)Lnet/minecraft/nbt/DoubleTag; a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/EndTag nc
	INSTANCE b
	SELF_SIZE_IN_BITS c
	TYPE a
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	copy ()Lnet/minecraft/nbt/EndTag; d
	copy ()Lnet/minecraft/nbt/Tag; c
	getId ()B a
	getType ()Lnet/minecraft/nbt/TagType; b
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/FloatTag nd
	SELF_SIZE_IN_BITS c
	TYPE b
	ZERO a
	data w
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	copy ()Lnet/minecraft/nbt/FloatTag; d
	copy ()Lnet/minecraft/nbt/Tag; c
	getAsByte ()B h
	getAsDouble ()D i
	getAsFloat ()F j
	getAsInt ()I f
	getAsLong ()J e
	getAsNumber ()Ljava/lang/Number; k
	getAsShort ()S g
	getId ()B a
	getType ()Lnet/minecraft/nbt/TagType; b
	valueOf (F)Lnet/minecraft/nbt/FloatTag; a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/IntArrayTag ne
	SELF_SIZE_IN_BITS b
	TYPE a
	data c
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	add (ILnet/minecraft/nbt/IntTag;)V b
	add (ILnet/minecraft/nbt/Tag;)V c
	addTag (ILnet/minecraft/nbt/Tag;)Z b
	copy ()Lnet/minecraft/nbt/IntArrayTag; d
	copy ()Lnet/minecraft/nbt/Tag; c
	get (I)Lnet/minecraft/nbt/IntTag; a
	getAsIntArray ()[I f
	getElementType ()B e
	getId ()B a
	getType ()Lnet/minecraft/nbt/TagType; b
	remove (I)Lnet/minecraft/nbt/IntTag; b
	remove (I)Lnet/minecraft/nbt/Tag; c
	set (ILnet/minecraft/nbt/IntTag;)Lnet/minecraft/nbt/IntTag; a
	set (ILnet/minecraft/nbt/Tag;)Lnet/minecraft/nbt/Tag; d
	setTag (ILnet/minecraft/nbt/Tag;)Z a
	toArray (Ljava/util/List;)[I a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/IntTag nf
	SELF_SIZE_IN_BITS b
	TYPE a
	data c
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	copy ()Lnet/minecraft/nbt/IntTag; d
	copy ()Lnet/minecraft/nbt/Tag; c
	getAsByte ()B h
	getAsDouble ()D i
	getAsFloat ()F j
	getAsInt ()I f
	getAsLong ()J e
	getAsNumber ()Ljava/lang/Number; k
	getAsShort ()S g
	getId ()B a
	getType ()Lnet/minecraft/nbt/TagType; b
	valueOf (I)Lnet/minecraft/nbt/IntTag; a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/IntTag$Cache nf$a
	HIGH b
	LOW c
	cache a
net/minecraft/nbt/ListTag ng
	SELF_SIZE_IN_BITS b
	TYPE a
	list c
	type w
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	add (ILnet/minecraft/nbt/Tag;)V c
	addTag (ILnet/minecraft/nbt/Tag;)Z b
	copy ()Lnet/minecraft/nbt/ListTag; d
	copy ()Lnet/minecraft/nbt/Tag; c
	get (I)Lnet/minecraft/nbt/Tag; k
	getCompound (I)Lnet/minecraft/nbt/CompoundTag; a
	getDouble (I)D h
	getElementType ()B e
	getFloat (I)F i
	getId ()B a
	getInt (I)I e
	getIntArray (I)[I f
	getList (I)Lnet/minecraft/nbt/ListTag; b
	getLongArray (I)[J g
	getShort (I)S d
	getString (I)Ljava/lang/String; j
	getType ()Lnet/minecraft/nbt/TagType; b
	remove (I)Lnet/minecraft/nbt/Tag; c
	set (ILnet/minecraft/nbt/Tag;)Lnet/minecraft/nbt/Tag; d
	setTag (ILnet/minecraft/nbt/Tag;)Z a
	updateType (Lnet/minecraft/nbt/Tag;)Z a
	updateTypeAfterRemove ()V f
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/LongArrayTag nh
	SELF_SIZE_IN_BITS b
	TYPE a
	data c
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	add (ILnet/minecraft/nbt/LongTag;)V b
	add (ILnet/minecraft/nbt/Tag;)V c
	addTag (ILnet/minecraft/nbt/Tag;)Z b
	copy ()Lnet/minecraft/nbt/LongArrayTag; d
	copy ()Lnet/minecraft/nbt/Tag; c
	get (I)Lnet/minecraft/nbt/LongTag; a
	getAsLongArray ()[J f
	getElementType ()B e
	getId ()B a
	getType ()Lnet/minecraft/nbt/TagType; b
	remove (I)Lnet/minecraft/nbt/LongTag; b
	remove (I)Lnet/minecraft/nbt/Tag; c
	set (ILnet/minecraft/nbt/LongTag;)Lnet/minecraft/nbt/LongTag; a
	set (ILnet/minecraft/nbt/Tag;)Lnet/minecraft/nbt/Tag; d
	setTag (ILnet/minecraft/nbt/Tag;)Z a
	toArray (Ljava/util/List;)[J a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/LongTag ni
	SELF_SIZE_IN_BITS b
	TYPE a
	data c
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	copy ()Lnet/minecraft/nbt/LongTag; d
	copy ()Lnet/minecraft/nbt/Tag; c
	getAsByte ()B h
	getAsDouble ()D i
	getAsFloat ()F j
	getAsInt ()I f
	getAsLong ()J e
	getAsNumber ()Ljava/lang/Number; k
	getAsShort ()S g
	getId ()B a
	getType ()Lnet/minecraft/nbt/TagType; b
	valueOf (J)Lnet/minecraft/nbt/LongTag; a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/LongTag$Cache ni$a
	HIGH b
	LOW c
	cache a
net/minecraft/nbt/NbtAccounter nj
	UNLIMITED a
	quota b
	usage c
	accountBits (J)V a
net/minecraft/nbt/NbtIo nk
	read (Ljava/io/DataInput;)Lnet/minecraft/nbt/CompoundTag; a
	read (Ljava/io/DataInput;Lnet/minecraft/nbt/NbtAccounter;)Lnet/minecraft/nbt/CompoundTag; a
	read (Ljava/io/File;)Lnet/minecraft/nbt/CompoundTag; b
	readCompressed (Ljava/io/File;)Lnet/minecraft/nbt/CompoundTag; a
	readCompressed (Ljava/io/InputStream;)Lnet/minecraft/nbt/CompoundTag; a
	readUnnamedTag (Ljava/io/DataInput;ILnet/minecraft/nbt/NbtAccounter;)Lnet/minecraft/nbt/Tag; a
	write (Lnet/minecraft/nbt/CompoundTag;Ljava/io/DataOutput;)V a
	write (Lnet/minecraft/nbt/CompoundTag;Ljava/io/File;)V b
	writeCompressed (Lnet/minecraft/nbt/CompoundTag;Ljava/io/File;)V a
	writeCompressed (Lnet/minecraft/nbt/CompoundTag;Ljava/io/OutputStream;)V a
	writeUnnamedTag (Lnet/minecraft/nbt/Tag;Ljava/io/DataOutput;)V a
net/minecraft/nbt/NbtOps nl
	INSTANCE a
	convertTo (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/nbt/Tag;)Ljava/lang/Object; a
	createBoolean (Z)Lnet/minecraft/nbt/Tag; a
	createByte (B)Lnet/minecraft/nbt/Tag; a
	createByteList (Ljava/nio/ByteBuffer;)Lnet/minecraft/nbt/Tag; a
	createDouble (D)Lnet/minecraft/nbt/Tag; a
	createFloat (F)Lnet/minecraft/nbt/Tag; a
	createGenericList (BB)Lnet/minecraft/nbt/CollectionTag; a
	createInt (I)Lnet/minecraft/nbt/Tag; a
	createIntList (Ljava/util/stream/IntStream;)Lnet/minecraft/nbt/Tag; a
	createList (Ljava/util/stream/Stream;)Lnet/minecraft/nbt/Tag; b
	createLong (J)Lnet/minecraft/nbt/Tag; a
	createLongList (Ljava/util/stream/LongStream;)Lnet/minecraft/nbt/Tag; a
	createMap (Ljava/util/stream/Stream;)Lnet/minecraft/nbt/Tag; a
	createNumeric (Ljava/lang/Number;)Lnet/minecraft/nbt/Tag; a
	createShort (S)Lnet/minecraft/nbt/Tag; a
	createString (Ljava/lang/String;)Lnet/minecraft/nbt/Tag; a
	empty ()Lnet/minecraft/nbt/Tag; a
	fillMany (Lnet/minecraft/nbt/CollectionTag;Lnet/minecraft/nbt/Tag;Ljava/util/List;)V a
	fillOne (Lnet/minecraft/nbt/CollectionTag;Lnet/minecraft/nbt/Tag;Lnet/minecraft/nbt/Tag;)V a
	getByteBuffer (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; h
	getIntStream (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; i
	getList (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; g
	getLongStream (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; j
	getMap (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; e
	getMapEntries (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; d
	getMapValues (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; c
	getNumberValue (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; a
	getStream (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; f
	getStringValue (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; b
	mergeToList (Lnet/minecraft/nbt/Tag;Ljava/util/List;)Lcom/mojang/serialization/DataResult; a
	mergeToList (Lnet/minecraft/nbt/Tag;Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; a
	mergeToMap (Lnet/minecraft/nbt/Tag;Lcom/mojang/serialization/MapLike;)Lcom/mojang/serialization/DataResult; a
	mergeToMap (Lnet/minecraft/nbt/Tag;Lnet/minecraft/nbt/Tag;Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; a
	remove (Lnet/minecraft/nbt/Tag;Ljava/lang/String;)Lnet/minecraft/nbt/Tag; a
	typesMatch (BBB)Z a
net/minecraft/nbt/NbtOps$NbtRecordBuilder nl$a
	append (Ljava/lang/String;Lnet/minecraft/nbt/Tag;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	build (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; a
	initBuilder ()Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/nbt/NbtUtils nm
	COLON_SPLITTER i
	COMMA_SPLITTER h
	ELEMENT_SEPARATOR f
	INDENT k
	KEY_VALUE_SEPARATOR g
	LOGGER j
	NOT_FOUND l
	PROPERTIES_END e
	PROPERTIES_START d
	SNBT_DATA_TAG a
	YXZ_LISTTAG_DOUBLE_COMPARATOR c
	YXZ_LISTTAG_INT_COMPARATOR b
	compareNbt (Lnet/minecraft/nbt/Tag;Lnet/minecraft/nbt/Tag;Z)Z a
	createUUID (Ljava/util/UUID;)Lnet/minecraft/nbt/IntArrayTag; a
	getName (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)Ljava/lang/String; a
	indent (ILjava/lang/StringBuilder;)Ljava/lang/StringBuilder; a
	loadUUID (Lnet/minecraft/nbt/Tag;)Ljava/util/UUID; a
	packBlockState (Lnet/minecraft/nbt/CompoundTag;)Ljava/lang/String; g
	packStructureTemplate (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; e
	prettyPrint (Ljava/lang/StringBuilder;Lnet/minecraft/nbt/Tag;IZ)Ljava/lang/StringBuilder; a
	prettyPrint (Lnet/minecraft/nbt/Tag;)Ljava/lang/String; b
	prettyPrint (Lnet/minecraft/nbt/Tag;Z)Ljava/lang/String; a
	readBlockPos (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/core/BlockPos; b
	readBlockState (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/block/state/BlockState; c
	readGameProfile (Lnet/minecraft/nbt/CompoundTag;)Lcom/mojang/authlib/GameProfile; a
	setValueHelper (Lnet/minecraft/world/level/block/state/StateHolder;Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/String;Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/block/state/StateHolder; a
	snbtToStructure (Ljava/lang/String;)Lnet/minecraft/nbt/CompoundTag; a
	structureToSnbt (Lnet/minecraft/nbt/CompoundTag;)Ljava/lang/String; d
	toPrettyComponent (Lnet/minecraft/nbt/Tag;)Lnet/minecraft/network/chat/Component; c
	unpackBlockState (Ljava/lang/String;)Lnet/minecraft/nbt/CompoundTag; b
	unpackStructureTemplate (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; f
	update (Lcom/mojang/datafixers/DataFixer;Lnet/minecraft/util/datafix/DataFixTypes;Lnet/minecraft/nbt/CompoundTag;I)Lnet/minecraft/nbt/CompoundTag; a
	update (Lcom/mojang/datafixers/DataFixer;Lnet/minecraft/util/datafix/DataFixTypes;Lnet/minecraft/nbt/CompoundTag;II)Lnet/minecraft/nbt/CompoundTag; a
	writeBlockPos (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/nbt/CompoundTag; a
	writeBlockState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/nbt/CompoundTag; a
	writeFluidState (Lnet/minecraft/world/level/material/FluidState;)Lnet/minecraft/nbt/CompoundTag; a
	writeGameProfile (Lnet/minecraft/nbt/CompoundTag;Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/nbt/NumericTag nn
	getAsByte ()B h
	getAsDouble ()D i
	getAsFloat ()F j
	getAsInt ()I f
	getAsLong ()J e
	getAsNumber ()Ljava/lang/Number; k
	getAsShort ()S g
net/minecraft/nbt/ShortTag no
	SELF_SIZE_IN_BITS b
	TYPE a
	data c
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	copy ()Lnet/minecraft/nbt/ShortTag; d
	copy ()Lnet/minecraft/nbt/Tag; c
	getAsByte ()B h
	getAsDouble ()D i
	getAsFloat ()F j
	getAsInt ()I f
	getAsLong ()J e
	getAsNumber ()Ljava/lang/Number; k
	getAsShort ()S g
	getId ()B a
	getType ()Lnet/minecraft/nbt/TagType; b
	valueOf (S)Lnet/minecraft/nbt/ShortTag; a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/ShortTag$Cache no$a
	HIGH b
	LOW c
	cache a
net/minecraft/nbt/SnbtPrinterTagVisitor np
	ELEMENT_SEPARATOR e
	ELEMENT_SPACING i
	KEY_ORDER a
	LIST_CLOSE g
	LIST_OPEN f
	LIST_TYPE_SEPARATOR h
	NAME_VALUE_SEPARATOR d
	NEWLINE l
	NO_INDENTATION b
	SIMPLE_VALUE c
	STRUCT_CLOSE k
	STRUCT_OPEN j
	depth n
	indentation m
	path o
	result p
	getKeys (Lnet/minecraft/nbt/CompoundTag;)Ljava/util/List; b
	handleEscapePretty (Ljava/lang/String;)Ljava/lang/String; a
	pathString ()Ljava/lang/String; a
	popPath ()V b
	pushPath (Ljava/lang/String;)V b
	visit (Lnet/minecraft/nbt/Tag;)Ljava/lang/String; a
	visitByte (Lnet/minecraft/nbt/ByteTag;)V a
	visitByteArray (Lnet/minecraft/nbt/ByteArrayTag;)V a
	visitCompound (Lnet/minecraft/nbt/CompoundTag;)V a
	visitDouble (Lnet/minecraft/nbt/DoubleTag;)V a
	visitEnd (Lnet/minecraft/nbt/EndTag;)V a
	visitFloat (Lnet/minecraft/nbt/FloatTag;)V a
	visitInt (Lnet/minecraft/nbt/IntTag;)V a
	visitIntArray (Lnet/minecraft/nbt/IntArrayTag;)V a
	visitList (Lnet/minecraft/nbt/ListTag;)V a
	visitLong (Lnet/minecraft/nbt/LongTag;)V a
	visitLongArray (Lnet/minecraft/nbt/LongArrayTag;)V a
	visitShort (Lnet/minecraft/nbt/ShortTag;)V a
	visitString (Lnet/minecraft/nbt/StringTag;)V a
net/minecraft/nbt/StringTag nq
	DOUBLE_QUOTE w
	EMPTY c
	ESCAPE y
	NOT_SET z
	SELF_SIZE_IN_BITS b
	SINGLE_QUOTE x
	TYPE a
	data A
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	copy ()Lnet/minecraft/nbt/StringTag; d
	copy ()Lnet/minecraft/nbt/Tag; c
	getAsString ()Ljava/lang/String; d_
	getId ()B a
	getType ()Lnet/minecraft/nbt/TagType; b
	quoteAndEscape (Ljava/lang/String;)Ljava/lang/String; b
	valueOf (Ljava/lang/String;)Lnet/minecraft/nbt/StringTag; a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/StringTagVisitor nr
	SIMPLE_VALUE a
	builder b
	handleEscape (Ljava/lang/String;)Ljava/lang/String; a
	visit (Lnet/minecraft/nbt/Tag;)Ljava/lang/String; a
	visitByte (Lnet/minecraft/nbt/ByteTag;)V a
	visitByteArray (Lnet/minecraft/nbt/ByteArrayTag;)V a
	visitCompound (Lnet/minecraft/nbt/CompoundTag;)V a
	visitDouble (Lnet/minecraft/nbt/DoubleTag;)V a
	visitEnd (Lnet/minecraft/nbt/EndTag;)V a
	visitFloat (Lnet/minecraft/nbt/FloatTag;)V a
	visitInt (Lnet/minecraft/nbt/IntTag;)V a
	visitIntArray (Lnet/minecraft/nbt/IntArrayTag;)V a
	visitList (Lnet/minecraft/nbt/ListTag;)V a
	visitLong (Lnet/minecraft/nbt/LongTag;)V a
	visitLongArray (Lnet/minecraft/nbt/LongArrayTag;)V a
	visitShort (Lnet/minecraft/nbt/ShortTag;)V a
	visitString (Lnet/minecraft/nbt/StringTag;)V a
net/minecraft/nbt/Tag ns
	ARRAY_HEADER e
	MAX_DEPTH v
	OBJECT_HEADER d
	OBJECT_REFERENCE f
	STRING_SIZE g
	TAG_ANY_NUMERIC u
	TAG_BYTE i
	TAG_BYTE_ARRAY o
	TAG_COMPOUND r
	TAG_DOUBLE n
	TAG_END h
	TAG_FLOAT m
	TAG_INT k
	TAG_INT_ARRAY s
	TAG_LIST q
	TAG_LONG l
	TAG_LONG_ARRAY t
	TAG_SHORT j
	TAG_STRING p
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	copy ()Lnet/minecraft/nbt/Tag; c
	getAsString ()Ljava/lang/String; d_
	getId ()B a
	getType ()Lnet/minecraft/nbt/TagType; b
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/TagParser nt
	BYTE_PATTERN p
	DOUBLE_PATTERN n
	DOUBLE_PATTERN_NOSUFFIX m
	ELEMENT_SEPARATOR g
	ERROR_EXPECTED_KEY b
	ERROR_EXPECTED_VALUE c
	ERROR_INSERT_MIXED_ARRAY e
	ERROR_INSERT_MIXED_LIST d
	ERROR_INVALID_ARRAY f
	ERROR_TRAILING_DATA a
	FLOAT_PATTERN o
	INT_PATTERN s
	LIST_CLOSE j
	LIST_OPEN i
	LONG_PATTERN q
	NAME_VALUE_SEPARATOR h
	SHORT_PATTERN r
	STRUCT_CLOSE k
	STRUCT_OPEN l
	reader t
	expect (C)V a
	hasElementSeparator ()Z i
	parseTag (Ljava/lang/String;)Lnet/minecraft/nbt/CompoundTag; a
	readArray (Lnet/minecraft/nbt/TagType;Lnet/minecraft/nbt/TagType;)Ljava/util/List; a
	readArrayTag ()Lnet/minecraft/nbt/Tag; h
	readKey ()Ljava/lang/String; b
	readList ()Lnet/minecraft/nbt/Tag; e
	readListTag ()Lnet/minecraft/nbt/Tag; g
	readSingleStruct ()Lnet/minecraft/nbt/CompoundTag; a
	readStruct ()Lnet/minecraft/nbt/CompoundTag; f
	readTypedValue ()Lnet/minecraft/nbt/Tag; c
	readValue ()Lnet/minecraft/nbt/Tag; d
	type (Ljava/lang/String;)Lnet/minecraft/nbt/Tag; b
net/minecraft/nbt/TagType nu
	createInvalid (I)Lnet/minecraft/nbt/TagType; a
	getName ()Ljava/lang/String; a
	getPrettyName ()Ljava/lang/String; b
	isValue ()Z c
	load (Ljava/io/DataInput;ILnet/minecraft/nbt/NbtAccounter;)Lnet/minecraft/nbt/Tag; b
net/minecraft/nbt/TagTypes nv
	TYPES a
	getType (I)Lnet/minecraft/nbt/TagType; a
net/minecraft/nbt/TagVisitor nw
	visitByte (Lnet/minecraft/nbt/ByteTag;)V a
	visitByteArray (Lnet/minecraft/nbt/ByteArrayTag;)V a
	visitCompound (Lnet/minecraft/nbt/CompoundTag;)V a
	visitDouble (Lnet/minecraft/nbt/DoubleTag;)V a
	visitEnd (Lnet/minecraft/nbt/EndTag;)V a
	visitFloat (Lnet/minecraft/nbt/FloatTag;)V a
	visitInt (Lnet/minecraft/nbt/IntTag;)V a
	visitIntArray (Lnet/minecraft/nbt/IntArrayTag;)V a
	visitList (Lnet/minecraft/nbt/ListTag;)V a
	visitLong (Lnet/minecraft/nbt/LongTag;)V a
	visitLongArray (Lnet/minecraft/nbt/LongArrayTag;)V a
	visitShort (Lnet/minecraft/nbt/ShortTag;)V a
	visitString (Lnet/minecraft/nbt/StringTag;)V a
net/minecraft/nbt/TextComponentTagVisitor nx
	ELEMENT_SEPARATOR j
	ELEMENT_SPACING n
	INLINE_ELEMENT_TYPES c
	INLINE_LIST_THRESHOLD b
	LIST_CLOSE l
	LIST_OPEN k
	LIST_TYPE_SEPARATOR m
	LOGGER a
	NAME_VALUE_SEPARATOR i
	NEWLINE q
	SIMPLE_VALUE h
	STRUCT_CLOSE p
	STRUCT_OPEN o
	SYNTAX_HIGHLIGHTING_KEY d
	SYNTAX_HIGHLIGHTING_NUMBER f
	SYNTAX_HIGHLIGHTING_NUMBER_TYPE g
	SYNTAX_HIGHLIGHTING_STRING e
	depth s
	indentation r
	result t
	handleEscapePretty (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
	visit (Lnet/minecraft/nbt/Tag;)Lnet/minecraft/network/chat/Component; a
	visitByte (Lnet/minecraft/nbt/ByteTag;)V a
	visitByteArray (Lnet/minecraft/nbt/ByteArrayTag;)V a
	visitCompound (Lnet/minecraft/nbt/CompoundTag;)V a
	visitDouble (Lnet/minecraft/nbt/DoubleTag;)V a
	visitEnd (Lnet/minecraft/nbt/EndTag;)V a
	visitFloat (Lnet/minecraft/nbt/FloatTag;)V a
	visitInt (Lnet/minecraft/nbt/IntTag;)V a
	visitIntArray (Lnet/minecraft/nbt/IntArrayTag;)V a
	visitList (Lnet/minecraft/nbt/ListTag;)V a
	visitLong (Lnet/minecraft/nbt/LongTag;)V a
	visitLongArray (Lnet/minecraft/nbt/LongArrayTag;)V a
	visitShort (Lnet/minecraft/nbt/ShortTag;)V a
	visitString (Lnet/minecraft/nbt/StringTag;)V a
net/minecraft/network/CipherBase nz
	cipher a
	heapIn b
	heapOut c
	bufToByte (Lio/netty/buffer/ByteBuf;)[B a
	decipher (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf; a
	encipher (Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V a
net/minecraft/network/CipherDecoder oa
	cipher a
	decode (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Ljava/util/List;)V a
net/minecraft/network/CipherEncoder ob
	cipher a
	encode (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V a
net/minecraft/network/CompressionDecoder oc
	MAXIMUM_DECOMPRESSED_LENGTH a
	inflater b
	threshold c
	getThreshold ()I a
	setThreshold (I)V a
net/minecraft/network/CompressionEncoder od
	deflater b
	encodeBuf a
	threshold c
	encode (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V a
	getThreshold ()I a
	setThreshold (I)V a
net/minecraft/network/Connection oe
	ATTRIBUTE_PROTOCOL c
	AVERAGE_PACKETS_SMOOTHING g
	LOCAL_WORKER_GROUP f
	LOGGER h
	NETWORK_EPOLL_WORKER_GROUP e
	NETWORK_WORKER_GROUP d
	PACKET_MARKER b
	ROOT_MARKER a
	address l
	averageReceivedPackets s
	averageSentPackets t
	channel k
	disconnectedReason n
	disconnectionHandled p
	encrypted o
	handlingFault v
	packetListener m
	queue j
	receivedPackets q
	receiving i
	sentPackets r
	tickCount u
	channelRead0 (Lio/netty/channel/ChannelHandlerContext;Lnet/minecraft/network/protocol/Packet;)V a
	connectToLocalServer (Ljava/net/SocketAddress;)Lnet/minecraft/network/Connection; a
	connectToServer (Ljava/net/InetSocketAddress;Z)Lnet/minecraft/network/Connection; a
	disconnect (Lnet/minecraft/network/chat/Component;)V a
	doSendPacket (Lnet/minecraft/network/protocol/Packet;Lio/netty/util/concurrent/GenericFutureListener;Lnet/minecraft/network/ConnectionProtocol;Lnet/minecraft/network/ConnectionProtocol;)V a
	flushQueue ()V q
	genericsFtw (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/network/PacketListener;)V a
	getAverageReceivedPackets ()F n
	getAverageSentPackets ()F o
	getCurrentProtocol ()Lnet/minecraft/network/ConnectionProtocol; p
	getDisconnectedReason ()Lnet/minecraft/network/chat/Component; k
	getPacketListener ()Lnet/minecraft/network/PacketListener; j
	getReceiving ()Lnet/minecraft/network/protocol/PacketFlow; e
	getRemoteAddress ()Ljava/net/SocketAddress; c
	getSending ()Lnet/minecraft/network/protocol/PacketFlow; f
	handleDisconnection ()V m
	isConnected ()Z h
	isConnecting ()Z i
	isEncrypted ()Z g
	isMemoryConnection ()Z d
	send (Lnet/minecraft/network/protocol/Packet;)V a
	send (Lnet/minecraft/network/protocol/Packet;Lio/netty/util/concurrent/GenericFutureListener;)V a
	sendPacket (Lnet/minecraft/network/protocol/Packet;Lio/netty/util/concurrent/GenericFutureListener;)V b
	setEncryptionKey (Ljavax/crypto/Cipher;Ljavax/crypto/Cipher;)V a
	setListener (Lnet/minecraft/network/PacketListener;)V a
	setProtocol (Lnet/minecraft/network/ConnectionProtocol;)V a
	setReadOnly ()V l
	setupCompression (I)V a
	tick ()V a
	tickSecond ()V b
net/minecraft/network/Connection$PacketHolder oe$a
	listener b
	packet a
net/minecraft/network/ConnectionProtocol of
	$VALUES k
	HANDSHAKING a
	LOGIN d
	LOOKUP g
	MAX_PROTOCOL_ID f
	MIN_PROTOCOL_ID e
	PLAY b
	PROTOCOL_BY_PACKET h
	STATUS c
	flows j
	id i
	$values ()[Lnet/minecraft/network/ConnectionProtocol; c
	createPacket (Lnet/minecraft/network/protocol/PacketFlow;ILnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/Packet; a
	getById (I)Lnet/minecraft/network/ConnectionProtocol; a
	getId ()I a
	getPacketId (Lnet/minecraft/network/protocol/PacketFlow;Lnet/minecraft/network/protocol/Packet;)Ljava/lang/Integer; a
	getProtocolForPacket (Lnet/minecraft/network/protocol/Packet;)Lnet/minecraft/network/ConnectionProtocol; a
	protocol ()Lnet/minecraft/network/ConnectionProtocol$ProtocolBuilder; b
net/minecraft/network/ConnectionProtocol$PacketSet of$a
	classToId a
	idToDeserializer b
	addPacket (Ljava/lang/Class;Ljava/util/function/Function;)Lnet/minecraft/network/ConnectionProtocol$PacketSet; a
	createPacket (ILnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/Packet; a
	getAllPackets ()Ljava/lang/Iterable; a
	getId (Ljava/lang/Class;)Ljava/lang/Integer; a
net/minecraft/network/ConnectionProtocol$ProtocolBuilder of$b
	flows a
	addFlow (Lnet/minecraft/network/protocol/PacketFlow;Lnet/minecraft/network/ConnectionProtocol$PacketSet;)Lnet/minecraft/network/ConnectionProtocol$ProtocolBuilder; a
net/minecraft/network/FriendlyByteBuf og
	DEFAULT_NBT_QUOTA e
	MAX_COMPONENT_STRING_LENGTH b
	MAX_STRING_LENGTH a
	MAX_VARINT_SIZE c
	MAX_VARLONG_SIZE d
	source f
	accessByteBufWithCorrectSize ()[B e
	getVarIntSize (I)I a
	getVarLongSize (J)I a
	readAnySizeNbt ()Lnet/minecraft/nbt/CompoundTag; n
	readBitSet ()Ljava/util/BitSet; t
	readBlockHitResult ()Lnet/minecraft/world/phys/BlockHitResult; s
	readBlockPos ()Lnet/minecraft/core/BlockPos; f
	readByteArray ()[B b
	readByteArray (I)[B b
	readChunkPos ()Lnet/minecraft/world/level/ChunkPos; g
	readCollection (Ljava/util/function/IntFunction;Ljava/util/function/Function;)Ljava/util/Collection; a
	readComponent ()Lnet/minecraft/network/chat/Component; i
	readDate ()Ljava/util/Date; r
	readEnum (Ljava/lang/Class;)Ljava/lang/Enum; a
	readIntIdList ()Lit/unimi/dsi/fastutil/ints/IntList; a
	readItem ()Lnet/minecraft/world/item/ItemStack; o
	readList (Ljava/util/function/Function;)Ljava/util/List; a
	readLongArray ()[J d
	readLongArray ([J)[J b
	readLongArray ([JI)[J a
	readMap (Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/Map; a
	readMap (Ljava/util/function/IntFunction;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/Map; a
	readNbt ()Lnet/minecraft/nbt/CompoundTag; m
	readNbt (Lnet/minecraft/nbt/NbtAccounter;)Lnet/minecraft/nbt/CompoundTag; a
	readResourceLocation ()Lnet/minecraft/resources/ResourceLocation; q
	readSectionPos ()Lnet/minecraft/core/SectionPos; h
	readUUID ()Ljava/util/UUID; l
	readUtf ()Ljava/lang/String; p
	readUtf (I)Ljava/lang/String; e
	readVarInt ()I j
	readVarIntArray ()[I c
	readVarIntArray (I)[I c
	readVarLong ()J k
	readWithCodec (Lcom/mojang/serialization/Codec;)Ljava/lang/Object; a
	readWithCount (Ljava/util/function/Consumer;)V a
	writeBitSet (Ljava/util/BitSet;)V a
	writeBlockHitResult (Lnet/minecraft/world/phys/BlockHitResult;)V a
	writeBlockPos (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeByteArray ([B)Lnet/minecraft/network/FriendlyByteBuf; a
	writeChunkPos (Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeCollection (Ljava/util/Collection;Ljava/util/function/BiConsumer;)V a
	writeComponent (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeDate (Ljava/util/Date;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeEnum (Ljava/lang/Enum;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeIntIdList (Lit/unimi/dsi/fastutil/ints/IntList;)V a
	writeItem (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeLongArray ([J)Lnet/minecraft/network/FriendlyByteBuf; a
	writeMap (Ljava/util/Map;Ljava/util/function/BiConsumer;Ljava/util/function/BiConsumer;)V a
	writeNbt (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeResourceLocation (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeSectionPos (Lnet/minecraft/core/SectionPos;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeUUID (Ljava/util/UUID;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeUtf (Ljava/lang/String;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeUtf (Ljava/lang/String;I)Lnet/minecraft/network/FriendlyByteBuf; a
	writeVarInt (I)Lnet/minecraft/network/FriendlyByteBuf; d
	writeVarIntArray ([I)Lnet/minecraft/network/FriendlyByteBuf; a
	writeVarLong (J)Lnet/minecraft/network/FriendlyByteBuf; b
	writeWithCodec (Lcom/mojang/serialization/Codec;Ljava/lang/Object;)V a
net/minecraft/network/PacketDecoder oh
	LOGGER a
	MARKER b
	flow c
net/minecraft/network/PacketEncoder oi
	LOGGER a
	MARKER b
	flow c
	encode (Lio/netty/channel/ChannelHandlerContext;Lnet/minecraft/network/protocol/Packet;Lio/netty/buffer/ByteBuf;)V a
net/minecraft/network/PacketListener oj
	getConnection ()Lnet/minecraft/network/Connection; a
	onDisconnect (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/network/RateKickingConnection ok
	EXCEED_REASON h
	LOGGER g
	rateLimitPacketsPerSecond i
	tickSecond ()V b
net/minecraft/network/SkipPacketException ol
net/minecraft/network/Varint21FrameDecoder om
net/minecraft/network/Varint21LengthFieldPrepender on
	MAX_BYTES a
	encode (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V a
net/minecraft/network/chat/BaseComponent oo
	decomposedWith e
	siblings a
	style f
	visualOrderText d
	append (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/MutableComponent; a
	copy ()Lnet/minecraft/network/chat/MutableComponent; e
	getContents ()Ljava/lang/String; a
	getSiblings ()Ljava/util/List; b
	getStyle ()Lnet/minecraft/network/chat/Style; c
	getVisualOrderText ()Lnet/minecraft/util/FormattedCharSequence; f
	plainCopy ()Lnet/minecraft/network/chat/BaseComponent; d
	plainCopy ()Lnet/minecraft/network/chat/MutableComponent; g
	setStyle (Lnet/minecraft/network/chat/Style;)Lnet/minecraft/network/chat/MutableComponent; a
net/minecraft/network/chat/ChatType op
	$VALUES f
	CHAT a
	GAME_INFO c
	SYSTEM b
	index d
	interrupt e
	$values ()[Lnet/minecraft/network/chat/ChatType; c
	getForIndex (B)Lnet/minecraft/network/chat/ChatType; a
	getIndex ()B a
	shouldInterrupt ()Z b
net/minecraft/network/chat/ClickEvent oq
	action a
	value b
	getAction ()Lnet/minecraft/network/chat/ClickEvent$Action; a
	getValue ()Ljava/lang/String; b
net/minecraft/network/chat/ClickEvent$Action oq$a
	$VALUES j
	CHANGE_PAGE e
	COPY_TO_CLIPBOARD f
	LOOKUP g
	OPEN_FILE b
	OPEN_URL a
	RUN_COMMAND c
	SUGGEST_COMMAND d
	allowFromServer h
	name i
	$values ()[Lnet/minecraft/network/chat/ClickEvent$Action; c
	getByName (Ljava/lang/String;)Lnet/minecraft/network/chat/ClickEvent$Action; a
	getName ()Ljava/lang/String; b
	isAllowedFromServer ()Z a
net/minecraft/network/chat/CommonComponents or
	CONNECT_FAILED i
	GUI_BACK h
	GUI_CANCEL d
	GUI_DONE c
	GUI_NO f
	GUI_PROCEED g
	GUI_YES e
	NARRATION_SEPARATOR k
	NEW_LINE j
	OPTION_OFF b
	OPTION_ON a
	joinForNarration (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/MutableComponent; b
	joinLines (Ljava/util/Collection;)Lnet/minecraft/network/chat/Component; a
	joinLines ([Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/Component; a
	optionNameValue (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/MutableComponent; a
	optionStatus (Lnet/minecraft/network/chat/Component;Z)Lnet/minecraft/network/chat/MutableComponent; a
	optionStatus (Z)Lnet/minecraft/network/chat/Component; a
net/minecraft/network/chat/Component os
	copy ()Lnet/minecraft/network/chat/MutableComponent; e
	getContents ()Ljava/lang/String; a
	getSiblings ()Ljava/util/List; b
	getString (I)Ljava/lang/String; a
	getStyle ()Lnet/minecraft/network/chat/Style; c
	getVisualOrderText ()Lnet/minecraft/util/FormattedCharSequence; f
	nullToEmpty (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
	plainCopy ()Lnet/minecraft/network/chat/MutableComponent; g
	toFlatList (Lnet/minecraft/network/chat/Style;)Ljava/util/List; b
	visit (Lnet/minecraft/network/chat/FormattedText$ContentConsumer;)Ljava/util/Optional; a
	visit (Lnet/minecraft/network/chat/FormattedText$StyledContentConsumer;Lnet/minecraft/network/chat/Style;)Ljava/util/Optional; a
	visitSelf (Lnet/minecraft/network/chat/FormattedText$ContentConsumer;)Ljava/util/Optional; b
	visitSelf (Lnet/minecraft/network/chat/FormattedText$StyledContentConsumer;Lnet/minecraft/network/chat/Style;)Ljava/util/Optional; b
net/minecraft/network/chat/Component$Serializer os$a
	GSON a
	JSON_READER_LINESTART c
	JSON_READER_POS b
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/network/chat/MutableComponent; a
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/network/chat/MutableComponent; a
	fromJson (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/network/chat/MutableComponent; a
	fromJson (Ljava/lang/String;)Lnet/minecraft/network/chat/MutableComponent; a
	fromJsonLenient (Ljava/lang/String;)Lnet/minecraft/network/chat/MutableComponent; b
	getPos (Lcom/google/gson/stream/JsonReader;)I a
	parseSeparator (Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/Optional; a
	serialize (Lnet/minecraft/network/chat/Component;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
	serializeSeparator (Lcom/google/gson/JsonSerializationContext;Lcom/google/gson/JsonObject;Ljava/util/Optional;)V a
	serializeStyle (Lnet/minecraft/network/chat/Style;Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V a
	toJson (Lnet/minecraft/network/chat/Component;)Ljava/lang/String; a
	toJsonTree (Lnet/minecraft/network/chat/Component;)Lcom/google/gson/JsonElement; b
net/minecraft/network/chat/ComponentUtils ot
	DEFAULT_NO_STYLE_SEPARATOR c
	DEFAULT_SEPARATOR b
	DEFAULT_SEPARATOR_TEXT a
	formatAndSortList (Ljava/util/Collection;Ljava/util/function/Function;)Lnet/minecraft/network/chat/Component; a
	formatList (Ljava/util/Collection;)Lnet/minecraft/network/chat/Component; a
	formatList (Ljava/util/Collection;Ljava/util/Optional;Ljava/util/function/Function;)Lnet/minecraft/network/chat/MutableComponent; a
	formatList (Ljava/util/Collection;Ljava/util/function/Function;)Lnet/minecraft/network/chat/Component; b
	formatList (Ljava/util/Collection;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/Component; a
	formatList (Ljava/util/Collection;Lnet/minecraft/network/chat/Component;Ljava/util/function/Function;)Lnet/minecraft/network/chat/MutableComponent; a
	fromMessage (Lcom/mojang/brigadier/Message;)Lnet/minecraft/network/chat/Component; a
	getDisplayName (Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/network/chat/Component; a
	mergeStyles (Lnet/minecraft/network/chat/MutableComponent;Lnet/minecraft/network/chat/Style;)Lnet/minecraft/network/chat/MutableComponent; a
	resolveStyle (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/network/chat/Style;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/network/chat/Style; a
	updateForEntity (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Optional;Lnet/minecraft/world/entity/Entity;I)Ljava/util/Optional; a
	updateForEntity (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/network/chat/Component;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/network/chat/MutableComponent; a
	wrapInSquareBrackets (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/MutableComponent; a
net/minecraft/network/chat/ContextAwareComponent ou
	resolve (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/network/chat/MutableComponent; a
net/minecraft/network/chat/FormattedText ov
	EMPTY c
	STOP_ITERATION b
	composite (Ljava/util/List;)Lnet/minecraft/network/chat/FormattedText; a
	composite ([Lnet/minecraft/network/chat/FormattedText;)Lnet/minecraft/network/chat/FormattedText; a
	of (Ljava/lang/String;)Lnet/minecraft/network/chat/FormattedText; b
	of (Ljava/lang/String;Lnet/minecraft/network/chat/Style;)Lnet/minecraft/network/chat/FormattedText; a
	visit (Lnet/minecraft/network/chat/FormattedText$ContentConsumer;)Ljava/util/Optional; a
	visit (Lnet/minecraft/network/chat/FormattedText$StyledContentConsumer;Lnet/minecraft/network/chat/Style;)Ljava/util/Optional; a
net/minecraft/network/chat/FormattedText$ContentConsumer ov$a
net/minecraft/network/chat/FormattedText$StyledContentConsumer ov$b
net/minecraft/network/chat/HoverEvent ow
	LOGGER a
	action b
	value c
	deserialize (Lcom/google/gson/JsonObject;)Lnet/minecraft/network/chat/HoverEvent; a
	getAction ()Lnet/minecraft/network/chat/HoverEvent$Action; a
	getValue (Lnet/minecraft/network/chat/HoverEvent$Action;)Ljava/lang/Object; a
	serialize ()Lcom/google/gson/JsonObject; b
net/minecraft/network/chat/HoverEvent$Action ow$a
	LOOKUP d
	SHOW_ENTITY c
	SHOW_ITEM b
	SHOW_TEXT a
	allowFromServer f
	argDeserializer g
	argSerializer h
	legacyArgDeserializer i
	name e
	cast (Ljava/lang/Object;)Ljava/lang/Object; b
	deserialize (Lcom/google/gson/JsonElement;)Lnet/minecraft/network/chat/HoverEvent; a
	deserializeFromLegacy (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/HoverEvent; a
	getByName (Ljava/lang/String;)Lnet/minecraft/network/chat/HoverEvent$Action; a
	getName ()Ljava/lang/String; b
	isAllowedFromServer ()Z a
	serializeArg (Ljava/lang/Object;)Lcom/google/gson/JsonElement; a
net/minecraft/network/chat/HoverEvent$EntityTooltipInfo ow$b
	id b
	linesCache d
	name c
	type a
	create (Lcom/google/gson/JsonElement;)Lnet/minecraft/network/chat/HoverEvent$EntityTooltipInfo; a
	create (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/HoverEvent$EntityTooltipInfo; a
	getTooltipLines ()Ljava/util/List; b
	serialize ()Lcom/google/gson/JsonElement; a
net/minecraft/network/chat/HoverEvent$ItemStackInfo ow$c
	count b
	item a
	itemStack d
	tag c
	create (Lcom/google/gson/JsonElement;)Lnet/minecraft/network/chat/HoverEvent$ItemStackInfo; a
	create (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/HoverEvent$ItemStackInfo; a
	getItemStack ()Lnet/minecraft/world/item/ItemStack; a
	serialize ()Lcom/google/gson/JsonElement; b
net/minecraft/network/chat/KeybindComponent ox
	keyResolver d
	name e
	nameResolver f
	getName ()Ljava/lang/String; i
	getNestedComponent ()Lnet/minecraft/network/chat/Component; j
	plainCopy ()Lnet/minecraft/network/chat/BaseComponent; d
	plainCopy ()Lnet/minecraft/network/chat/KeybindComponent; h
	plainCopy ()Lnet/minecraft/network/chat/MutableComponent; g
	setKeyResolver (Ljava/util/function/Function;)V a
	visitSelf (Lnet/minecraft/network/chat/FormattedText$ContentConsumer;)Ljava/util/Optional; b
	visitSelf (Lnet/minecraft/network/chat/FormattedText$StyledContentConsumer;Lnet/minecraft/network/chat/Style;)Ljava/util/Optional; b
net/minecraft/network/chat/MutableComponent oy
	append (Ljava/lang/String;)Lnet/minecraft/network/chat/MutableComponent; c
	append (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/MutableComponent; a
	setStyle (Lnet/minecraft/network/chat/Style;)Lnet/minecraft/network/chat/MutableComponent; a
	withStyle (Ljava/util/function/UnaryOperator;)Lnet/minecraft/network/chat/MutableComponent; a
	withStyle (Lnet/minecraft/ChatFormatting;)Lnet/minecraft/network/chat/MutableComponent; a
	withStyle (Lnet/minecraft/network/chat/Style;)Lnet/minecraft/network/chat/MutableComponent; c
	withStyle ([Lnet/minecraft/ChatFormatting;)Lnet/minecraft/network/chat/MutableComponent; a
net/minecraft/network/chat/NbtComponent oz
	LOGGER h
	compiledNbtPath g
	interpreting d
	nbtPathPattern f
	separator e
	compileNbtPath (Ljava/lang/String;)Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath; d
	getData (Lnet/minecraft/commands/CommandSourceStack;)Ljava/util/stream/Stream; a
	getNbtPath ()Ljava/lang/String; h
	isInterpreting ()Z i
	resolve (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/network/chat/MutableComponent; a
net/minecraft/network/chat/NbtComponent$BlockNbtComponent oz$a
	compiledPos i
	posPattern h
	compilePos (Ljava/lang/String;)Lnet/minecraft/commands/arguments/coordinates/Coordinates; d
	getData (Lnet/minecraft/commands/CommandSourceStack;)Ljava/util/stream/Stream; a
	getPos ()Ljava/lang/String; j
	plainCopy ()Lnet/minecraft/network/chat/BaseComponent; d
	plainCopy ()Lnet/minecraft/network/chat/MutableComponent; g
	plainCopy ()Lnet/minecraft/network/chat/NbtComponent$BlockNbtComponent; k
net/minecraft/network/chat/NbtComponent$EntityNbtComponent oz$b
	compiledSelector i
	selectorPattern h
	compileSelector (Ljava/lang/String;)Lnet/minecraft/commands/arguments/selector/EntitySelector; d
	getData (Lnet/minecraft/commands/CommandSourceStack;)Ljava/util/stream/Stream; a
	getSelector ()Ljava/lang/String; j
	plainCopy ()Lnet/minecraft/network/chat/BaseComponent; d
	plainCopy ()Lnet/minecraft/network/chat/MutableComponent; g
	plainCopy ()Lnet/minecraft/network/chat/NbtComponent$EntityNbtComponent; k
net/minecraft/network/chat/NbtComponent$StorageNbtComponent oz$c
	id h
	getData (Lnet/minecraft/commands/CommandSourceStack;)Ljava/util/stream/Stream; a
	getId ()Lnet/minecraft/resources/ResourceLocation; j
	plainCopy ()Lnet/minecraft/network/chat/BaseComponent; d
	plainCopy ()Lnet/minecraft/network/chat/MutableComponent; g
	plainCopy ()Lnet/minecraft/network/chat/NbtComponent$StorageNbtComponent; k
net/minecraft/network/chat/ScoreComponent pa
	SCORER_PLACEHOLDER d
	name e
	objective g
	selector f
	findTargetName (Lnet/minecraft/commands/CommandSourceStack;)Ljava/lang/String; a
	getName ()Ljava/lang/String; h
	getObjective ()Ljava/lang/String; j
	getScore (Ljava/lang/String;Lnet/minecraft/commands/CommandSourceStack;)Ljava/lang/String; a
	getSelector ()Lnet/minecraft/commands/arguments/selector/EntitySelector; i
	parseSelector (Ljava/lang/String;)Lnet/minecraft/commands/arguments/selector/EntitySelector; d
	plainCopy ()Lnet/minecraft/network/chat/BaseComponent; d
	plainCopy ()Lnet/minecraft/network/chat/MutableComponent; g
	plainCopy ()Lnet/minecraft/network/chat/ScoreComponent; k
	resolve (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/network/chat/MutableComponent; a
net/minecraft/network/chat/SelectorComponent pb
	LOGGER e
	pattern f
	selector g
	separator d
	getContents ()Ljava/lang/String; a
	getPattern ()Ljava/lang/String; h
	getSelector ()Lnet/minecraft/commands/arguments/selector/EntitySelector; i
	getSeparator ()Ljava/util/Optional; j
	plainCopy ()Lnet/minecraft/network/chat/BaseComponent; d
	plainCopy ()Lnet/minecraft/network/chat/MutableComponent; g
	plainCopy ()Lnet/minecraft/network/chat/SelectorComponent; k
	resolve (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/network/chat/MutableComponent; a
net/minecraft/network/chat/Style pc
	DEFAULT_FONT b
	EMPTY a
	bold d
	clickEvent i
	color c
	font l
	hoverEvent j
	insertion k
	italic e
	obfuscated h
	strikethrough g
	underlined f
	applyFormat (Lnet/minecraft/ChatFormatting;)Lnet/minecraft/network/chat/Style; b
	applyFormats ([Lnet/minecraft/ChatFormatting;)Lnet/minecraft/network/chat/Style; a
	applyLegacyFormat (Lnet/minecraft/ChatFormatting;)Lnet/minecraft/network/chat/Style; c
	applyTo (Lnet/minecraft/network/chat/Style;)Lnet/minecraft/network/chat/Style; a
	getClickEvent ()Lnet/minecraft/network/chat/ClickEvent; h
	getColor ()Lnet/minecraft/network/chat/TextColor; a
	getFont ()Lnet/minecraft/resources/ResourceLocation; k
	getHoverEvent ()Lnet/minecraft/network/chat/HoverEvent; i
	getInsertion ()Ljava/lang/String; j
	isBold ()Z b
	isEmpty ()Z g
	isItalic ()Z c
	isObfuscated ()Z f
	isStrikethrough ()Z d
	isUnderlined ()Z e
	withBold (Ljava/lang/Boolean;)Lnet/minecraft/network/chat/Style; a
	withClickEvent (Lnet/minecraft/network/chat/ClickEvent;)Lnet/minecraft/network/chat/Style; a
	withColor (I)Lnet/minecraft/network/chat/Style; a
	withColor (Lnet/minecraft/ChatFormatting;)Lnet/minecraft/network/chat/Style; a
	withColor (Lnet/minecraft/network/chat/TextColor;)Lnet/minecraft/network/chat/Style; a
	withFont (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/network/chat/Style; a
	withHoverEvent (Lnet/minecraft/network/chat/HoverEvent;)Lnet/minecraft/network/chat/Style; a
	withInsertion (Ljava/lang/String;)Lnet/minecraft/network/chat/Style; a
	withItalic (Ljava/lang/Boolean;)Lnet/minecraft/network/chat/Style; b
	withObfuscated (Ljava/lang/Boolean;)Lnet/minecraft/network/chat/Style; e
	withStrikethrough (Ljava/lang/Boolean;)Lnet/minecraft/network/chat/Style; d
	withUnderlined (Ljava/lang/Boolean;)Lnet/minecraft/network/chat/Style; c
net/minecraft/network/chat/Style$Serializer pc$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/network/chat/Style; a
	getClickEvent (Lcom/google/gson/JsonObject;)Lnet/minecraft/network/chat/ClickEvent; c
	getFont (Lcom/google/gson/JsonObject;)Lnet/minecraft/resources/ResourceLocation; a
	getHoverEvent (Lcom/google/gson/JsonObject;)Lnet/minecraft/network/chat/HoverEvent; b
	getInsertion (Lcom/google/gson/JsonObject;)Ljava/lang/String; d
	getOptionalFlag (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/Boolean; a
	getTextColor (Lcom/google/gson/JsonObject;)Lnet/minecraft/network/chat/TextColor; e
	serialize (Lnet/minecraft/network/chat/Style;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/network/chat/SubStringSource pd
	charStyles b
	plainText a
	reverseCharModifier c
	create (Lnet/minecraft/network/chat/FormattedText;)Lnet/minecraft/network/chat/SubStringSource; a
	create (Lnet/minecraft/network/chat/FormattedText;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;Ljava/util/function/UnaryOperator;)Lnet/minecraft/network/chat/SubStringSource; a
	getPlainText ()Ljava/lang/String; a
	substring (IIZ)Ljava/util/List; a
net/minecraft/network/chat/TextColor pe
	CUSTOM_COLOR_PREFIX a
	LEGACY_FORMAT_TO_COLOR b
	NAMED_COLORS c
	name e
	value d
	formatValue ()Ljava/lang/String; c
	fromLegacyFormat (Lnet/minecraft/ChatFormatting;)Lnet/minecraft/network/chat/TextColor; a
	fromRgb (I)Lnet/minecraft/network/chat/TextColor; a
	getValue ()I a
	parseColor (Ljava/lang/String;)Lnet/minecraft/network/chat/TextColor; a
	serialize ()Ljava/lang/String; b
net/minecraft/network/chat/TextComponent pf
	EMPTY d
	text e
	getContents ()Ljava/lang/String; a
	getText ()Ljava/lang/String; h
	plainCopy ()Lnet/minecraft/network/chat/BaseComponent; d
	plainCopy ()Lnet/minecraft/network/chat/MutableComponent; g
	plainCopy ()Lnet/minecraft/network/chat/TextComponent; i
net/minecraft/network/chat/TranslatableComponent pg
	FORMAT_PATTERN k
	NO_ARGS d
	TEXT_NULL f
	TEXT_PERCENT e
	args h
	decomposedParts j
	decomposedWith i
	key g
	decompose ()V k
	decomposeTemplate (Ljava/lang/String;)V d
	getArgs ()[Ljava/lang/Object; j
	getArgument (I)Lnet/minecraft/network/chat/FormattedText; b
	getKey ()Ljava/lang/String; i
	plainCopy ()Lnet/minecraft/network/chat/BaseComponent; d
	plainCopy ()Lnet/minecraft/network/chat/MutableComponent; g
	plainCopy ()Lnet/minecraft/network/chat/TranslatableComponent; h
	resolve (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/network/chat/MutableComponent; a
	visitSelf (Lnet/minecraft/network/chat/FormattedText$ContentConsumer;)Ljava/util/Optional; b
	visitSelf (Lnet/minecraft/network/chat/FormattedText$StyledContentConsumer;Lnet/minecraft/network/chat/Style;)Ljava/util/Optional; b
net/minecraft/network/chat/TranslatableFormatException ph
net/minecraft/network/protocol/Packet pk
	handle (Lnet/minecraft/network/PacketListener;)V a
	isSkippable ()Z a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/PacketFlow pl
	$VALUES c
	CLIENTBOUND b
	SERVERBOUND a
	$values ()[Lnet/minecraft/network/protocol/PacketFlow; b
	getOpposite ()Lnet/minecraft/network/protocol/PacketFlow; a
net/minecraft/network/protocol/PacketUtils pm
	LOGGER a
	ensureRunningOnSameThread (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/network/PacketListener;Lnet/minecraft/server/level/ServerLevel;)V a
	ensureRunningOnSameThread (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/network/PacketListener;Lnet/minecraft/util/thread/BlockableEventLoop;)V a
net/minecraft/network/protocol/game/ClientGamePacketListener pn
	handleAddEntity (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	handleAddExperienceOrb (Lnet/minecraft/network/protocol/game/ClientboundAddExperienceOrbPacket;)V a
	handleAddMob (Lnet/minecraft/network/protocol/game/ClientboundAddMobPacket;)V a
	handleAddObjective (Lnet/minecraft/network/protocol/game/ClientboundSetObjectivePacket;)V a
	handleAddOrRemoveRecipes (Lnet/minecraft/network/protocol/game/ClientboundRecipePacket;)V a
	handleAddPainting (Lnet/minecraft/network/protocol/game/ClientboundAddPaintingPacket;)V a
	handleAddPlayer (Lnet/minecraft/network/protocol/game/ClientboundAddPlayerPacket;)V a
	handleAddVibrationSignal (Lnet/minecraft/network/protocol/game/ClientboundAddVibrationSignalPacket;)V a
	handleAnimate (Lnet/minecraft/network/protocol/game/ClientboundAnimatePacket;)V a
	handleAwardStats (Lnet/minecraft/network/protocol/game/ClientboundAwardStatsPacket;)V a
	handleBlockBreakAck (Lnet/minecraft/network/protocol/game/ClientboundBlockBreakAckPacket;)V a
	handleBlockDestruction (Lnet/minecraft/network/protocol/game/ClientboundBlockDestructionPacket;)V a
	handleBlockEntityData (Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket;)V a
	handleBlockEvent (Lnet/minecraft/network/protocol/game/ClientboundBlockEventPacket;)V a
	handleBlockUpdate (Lnet/minecraft/network/protocol/game/ClientboundBlockUpdatePacket;)V a
	handleBossUpdate (Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket;)V a
	handleChangeDifficulty (Lnet/minecraft/network/protocol/game/ClientboundChangeDifficultyPacket;)V a
	handleChat (Lnet/minecraft/network/protocol/game/ClientboundChatPacket;)V a
	handleChunkBlocksUpdate (Lnet/minecraft/network/protocol/game/ClientboundSectionBlocksUpdatePacket;)V a
	handleCommandSuggestions (Lnet/minecraft/network/protocol/game/ClientboundCommandSuggestionsPacket;)V a
	handleCommands (Lnet/minecraft/network/protocol/game/ClientboundCommandsPacket;)V a
	handleContainerClose (Lnet/minecraft/network/protocol/game/ClientboundContainerClosePacket;)V a
	handleContainerContent (Lnet/minecraft/network/protocol/game/ClientboundContainerSetContentPacket;)V a
	handleContainerSetData (Lnet/minecraft/network/protocol/game/ClientboundContainerSetDataPacket;)V a
	handleContainerSetSlot (Lnet/minecraft/network/protocol/game/ClientboundContainerSetSlotPacket;)V a
	handleCustomPayload (Lnet/minecraft/network/protocol/game/ClientboundCustomPayloadPacket;)V a
	handleCustomSoundEvent (Lnet/minecraft/network/protocol/game/ClientboundCustomSoundPacket;)V a
	handleDisconnect (Lnet/minecraft/network/protocol/game/ClientboundDisconnectPacket;)V a
	handleEntityEvent (Lnet/minecraft/network/protocol/game/ClientboundEntityEventPacket;)V a
	handleEntityLinkPacket (Lnet/minecraft/network/protocol/game/ClientboundSetEntityLinkPacket;)V a
	handleExplosion (Lnet/minecraft/network/protocol/game/ClientboundExplodePacket;)V a
	handleForgetLevelChunk (Lnet/minecraft/network/protocol/game/ClientboundForgetLevelChunkPacket;)V a
	handleGameEvent (Lnet/minecraft/network/protocol/game/ClientboundGameEventPacket;)V a
	handleHorseScreenOpen (Lnet/minecraft/network/protocol/game/ClientboundHorseScreenOpenPacket;)V a
	handleInitializeBorder (Lnet/minecraft/network/protocol/game/ClientboundInitializeBorderPacket;)V a
	handleItemCooldown (Lnet/minecraft/network/protocol/game/ClientboundCooldownPacket;)V a
	handleKeepAlive (Lnet/minecraft/network/protocol/game/ClientboundKeepAlivePacket;)V a
	handleLevelChunk (Lnet/minecraft/network/protocol/game/ClientboundLevelChunkPacket;)V a
	handleLevelEvent (Lnet/minecraft/network/protocol/game/ClientboundLevelEventPacket;)V a
	handleLightUpdatePacked (Lnet/minecraft/network/protocol/game/ClientboundLightUpdatePacket;)V a
	handleLogin (Lnet/minecraft/network/protocol/game/ClientboundLoginPacket;)V a
	handleLookAt (Lnet/minecraft/network/protocol/game/ClientboundPlayerLookAtPacket;)V a
	handleMapItemData (Lnet/minecraft/network/protocol/game/ClientboundMapItemDataPacket;)V a
	handleMerchantOffers (Lnet/minecraft/network/protocol/game/ClientboundMerchantOffersPacket;)V a
	handleMoveEntity (Lnet/minecraft/network/protocol/game/ClientboundMoveEntityPacket;)V a
	handleMovePlayer (Lnet/minecraft/network/protocol/game/ClientboundPlayerPositionPacket;)V a
	handleMoveVehicle (Lnet/minecraft/network/protocol/game/ClientboundMoveVehiclePacket;)V a
	handleOpenBook (Lnet/minecraft/network/protocol/game/ClientboundOpenBookPacket;)V a
	handleOpenScreen (Lnet/minecraft/network/protocol/game/ClientboundOpenScreenPacket;)V a
	handleOpenSignEditor (Lnet/minecraft/network/protocol/game/ClientboundOpenSignEditorPacket;)V a
	handleParticleEvent (Lnet/minecraft/network/protocol/game/ClientboundLevelParticlesPacket;)V a
	handlePing (Lnet/minecraft/network/protocol/game/ClientboundPingPacket;)V a
	handlePlaceRecipe (Lnet/minecraft/network/protocol/game/ClientboundPlaceGhostRecipePacket;)V a
	handlePlayerAbilities (Lnet/minecraft/network/protocol/game/ClientboundPlayerAbilitiesPacket;)V a
	handlePlayerCombatEnd (Lnet/minecraft/network/protocol/game/ClientboundPlayerCombatEndPacket;)V a
	handlePlayerCombatEnter (Lnet/minecraft/network/protocol/game/ClientboundPlayerCombatEnterPacket;)V a
	handlePlayerCombatKill (Lnet/minecraft/network/protocol/game/ClientboundPlayerCombatKillPacket;)V a
	handlePlayerInfo (Lnet/minecraft/network/protocol/game/ClientboundPlayerInfoPacket;)V a
	handleRemoveEntity (Lnet/minecraft/network/protocol/game/ClientboundRemoveEntityPacket;)V a
	handleRemoveMobEffect (Lnet/minecraft/network/protocol/game/ClientboundRemoveMobEffectPacket;)V a
	handleResourcePack (Lnet/minecraft/network/protocol/game/ClientboundResourcePackPacket;)V a
	handleRespawn (Lnet/minecraft/network/protocol/game/ClientboundRespawnPacket;)V a
	handleRotateMob (Lnet/minecraft/network/protocol/game/ClientboundRotateHeadPacket;)V a
	handleSelectAdvancementsTab (Lnet/minecraft/network/protocol/game/ClientboundSelectAdvancementsTabPacket;)V a
	handleSetBorderCenter (Lnet/minecraft/network/protocol/game/ClientboundSetBorderCenterPacket;)V a
	handleSetBorderLerpSize (Lnet/minecraft/network/protocol/game/ClientboundSetBorderLerpSizePacket;)V a
	handleSetBorderSize (Lnet/minecraft/network/protocol/game/ClientboundSetBorderSizePacket;)V a
	handleSetBorderWarningDelay (Lnet/minecraft/network/protocol/game/ClientboundSetBorderWarningDelayPacket;)V a
	handleSetBorderWarningDistance (Lnet/minecraft/network/protocol/game/ClientboundSetBorderWarningDistancePacket;)V a
	handleSetCamera (Lnet/minecraft/network/protocol/game/ClientboundSetCameraPacket;)V a
	handleSetCarriedItem (Lnet/minecraft/network/protocol/game/ClientboundSetCarriedItemPacket;)V a
	handleSetChunkCacheCenter (Lnet/minecraft/network/protocol/game/ClientboundSetChunkCacheCenterPacket;)V a
	handleSetChunkCacheRadius (Lnet/minecraft/network/protocol/game/ClientboundSetChunkCacheRadiusPacket;)V a
	handleSetDisplayObjective (Lnet/minecraft/network/protocol/game/ClientboundSetDisplayObjectivePacket;)V a
	handleSetEntityData (Lnet/minecraft/network/protocol/game/ClientboundSetEntityDataPacket;)V a
	handleSetEntityMotion (Lnet/minecraft/network/protocol/game/ClientboundSetEntityMotionPacket;)V a
	handleSetEntityPassengersPacket (Lnet/minecraft/network/protocol/game/ClientboundSetPassengersPacket;)V a
	handleSetEquipment (Lnet/minecraft/network/protocol/game/ClientboundSetEquipmentPacket;)V a
	handleSetExperience (Lnet/minecraft/network/protocol/game/ClientboundSetExperiencePacket;)V a
	handleSetHealth (Lnet/minecraft/network/protocol/game/ClientboundSetHealthPacket;)V a
	handleSetPlayerTeamPacket (Lnet/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket;)V a
	handleSetScore (Lnet/minecraft/network/protocol/game/ClientboundSetScorePacket;)V a
	handleSetSpawn (Lnet/minecraft/network/protocol/game/ClientboundSetDefaultSpawnPositionPacket;)V a
	handleSetTime (Lnet/minecraft/network/protocol/game/ClientboundSetTimePacket;)V a
	handleSoundEntityEvent (Lnet/minecraft/network/protocol/game/ClientboundSoundEntityPacket;)V a
	handleSoundEvent (Lnet/minecraft/network/protocol/game/ClientboundSoundPacket;)V a
	handleStopSoundEvent (Lnet/minecraft/network/protocol/game/ClientboundStopSoundPacket;)V a
	handleTabListCustomisation (Lnet/minecraft/network/protocol/game/ClientboundTabListPacket;)V a
	handleTagQueryPacket (Lnet/minecraft/network/protocol/game/ClientboundTagQueryPacket;)V a
	handleTakeItemEntity (Lnet/minecraft/network/protocol/game/ClientboundTakeItemEntityPacket;)V a
	handleTeleportEntity (Lnet/minecraft/network/protocol/game/ClientboundTeleportEntityPacket;)V a
	handleTitlesClear (Lnet/minecraft/network/protocol/game/ClientboundClearTitlesPacket;)V a
	handleUpdateAdvancementsPacket (Lnet/minecraft/network/protocol/game/ClientboundUpdateAdvancementsPacket;)V a
	handleUpdateAttributes (Lnet/minecraft/network/protocol/game/ClientboundUpdateAttributesPacket;)V a
	handleUpdateMobEffect (Lnet/minecraft/network/protocol/game/ClientboundUpdateMobEffectPacket;)V a
	handleUpdateRecipes (Lnet/minecraft/network/protocol/game/ClientboundUpdateRecipesPacket;)V a
	handleUpdateTags (Lnet/minecraft/network/protocol/game/ClientboundUpdateTagsPacket;)V a
	setActionBarText (Lnet/minecraft/network/protocol/game/ClientboundSetActionBarTextPacket;)V a
	setSubtitleText (Lnet/minecraft/network/protocol/game/ClientboundSetSubtitleTextPacket;)V a
	setTitleText (Lnet/minecraft/network/protocol/game/ClientboundSetTitleTextPacket;)V a
	setTitlesAnimation (Lnet/minecraft/network/protocol/game/ClientboundSetTitlesAnimationPacket;)V a
net/minecraft/network/protocol/game/ClientboundAddEntityPacket po
	LIMIT b
	MAGICAL_QUANTIZATION a
	data n
	id c
	type m
	uuid d
	x e
	xRot k
	xa h
	y f
	yRot l
	ya i
	z g
	za j
	getData ()I m
	getId ()I b
	getType ()Lnet/minecraft/world/entity/EntityType; l
	getUUID ()Ljava/util/UUID; c
	getX ()D d
	getXa ()D g
	getY ()D e
	getYa ()D h
	getZ ()D f
	getZa ()D i
	getxRot ()I j
	getyRot ()I k
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundAddExperienceOrbPacket pp
	id a
	value e
	x b
	y c
	z d
	getId ()I b
	getValue ()I f
	getX ()D c
	getY ()D d
	getZ ()D e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundAddMobPacket pq
	id a
	type c
	uuid b
	x d
	xRot k
	xd g
	y e
	yHeadRot l
	yRot j
	yd h
	z f
	zd i
	getId ()I b
	getType ()I d
	getUUID ()Ljava/util/UUID; c
	getX ()D e
	getXd ()I h
	getY ()D f
	getYd ()I i
	getZ ()D g
	getZd ()I j
	getxRot ()B l
	getyHeadRot ()B m
	getyRot ()B k
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundAddPaintingPacket pr
	direction d
	id a
	motive e
	pos c
	uuid b
	getDirection ()Lnet/minecraft/core/Direction; e
	getId ()I b
	getMotive ()Lnet/minecraft/world/entity/decoration/Motive; f
	getPos ()Lnet/minecraft/core/BlockPos; d
	getUUID ()Ljava/util/UUID; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundAddPlayerPacket ps
	entityId a
	playerId b
	x c
	xRot g
	y d
	yRot f
	z e
	getEntityId ()I b
	getPlayerId ()Ljava/util/UUID; c
	getX ()D d
	getY ()D e
	getZ ()D f
	getxRot ()B h
	getyRot ()B g
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundAddVibrationSignalPacket pt
	vibrationPath a
	getVibrationPath ()Lnet/minecraft/world/level/gameevent/vibrations/VibrationPath; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundAnimatePacket pu
	CRITICAL_HIT e
	HURT b
	MAGIC_CRITICAL_HIT f
	SWING_MAIN_HAND a
	SWING_OFF_HAND d
	WAKE_UP c
	action h
	id g
	getAction ()I c
	getId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundAwardStatsPacket pv
	stats a
	getStatIdCap (Lnet/minecraft/stats/Stat;)I a
	getStats ()Ljava/util/Map; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	readStatCap (Lnet/minecraft/stats/StatType;I)Lnet/minecraft/stats/Stat; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundBlockBreakAckPacket pw
	LOGGER a
	action d
	allGood e
	pos b
	state c
	action ()Lnet/minecraft/network/protocol/game/ServerboundPlayerActionPacket$Action; e
	allGood ()Z d
	getPos ()Lnet/minecraft/core/BlockPos; c
	getState ()Lnet/minecraft/world/level/block/state/BlockState; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundBlockDestructionPacket px
	id a
	pos b
	progress c
	getId ()I b
	getPos ()Lnet/minecraft/core/BlockPos; c
	getProgress ()I d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket py
	TYPE_ADV_COMMAND b
	TYPE_BANNER f
	TYPE_BEACON c
	TYPE_BED j
	TYPE_BEEHIVE m
	TYPE_CAMPFIRE l
	TYPE_CONDUIT e
	TYPE_END_GATEWAY h
	TYPE_JIGSAW k
	TYPE_MOB_SPAWNER a
	TYPE_SIGN i
	TYPE_SKULL d
	TYPE_STRUCT_COMMAND g
	pos n
	tag p
	type o
	getPos ()Lnet/minecraft/core/BlockPos; b
	getTag ()Lnet/minecraft/nbt/CompoundTag; d
	getType ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundBlockEventPacket pz
	b0 b
	b1 c
	block d
	pos a
	getB0 ()I c
	getB1 ()I d
	getBlock ()Lnet/minecraft/world/level/block/Block; e
	getPos ()Lnet/minecraft/core/BlockPos; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundBlockUpdatePacket qa
	blockState b
	pos a
	getBlockState ()Lnet/minecraft/world/level/block/state/BlockState; b
	getPos ()Lnet/minecraft/core/BlockPos; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundBossEventPacket qb
	FLAG_DARKEN a
	FLAG_FOG c
	FLAG_MUSIC b
	REMOVE_OPERATION f
	id d
	operation e
	createAddPacket (Lnet/minecraft/world/BossEvent;)Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket; a
	createRemovePacket (Ljava/util/UUID;)Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket; a
	createUpdateNamePacket (Lnet/minecraft/world/BossEvent;)Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket; c
	createUpdateProgressPacket (Lnet/minecraft/world/BossEvent;)Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket; b
	createUpdatePropertiesPacket (Lnet/minecraft/world/BossEvent;)Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket; e
	createUpdateStylePacket (Lnet/minecraft/world/BossEvent;)Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket; d
	dispatch (Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$Handler;)V a
	encodeProperties (ZZZ)I a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundBossEventPacket$AddOperation qb$a
	color c
	createWorldFog g
	darkenScreen e
	name a
	overlay d
	playMusic f
	progress b
	dispatch (Ljava/util/UUID;Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$Handler;)V a
	getType ()Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$OperationType; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundBossEventPacket$Handler qb$b
	add (Ljava/util/UUID;Lnet/minecraft/network/chat/Component;FLnet/minecraft/world/BossEvent$BossBarColor;Lnet/minecraft/world/BossEvent$BossBarOverlay;ZZZ)V a
	remove (Ljava/util/UUID;)V a
	updateName (Ljava/util/UUID;Lnet/minecraft/network/chat/Component;)V a
	updateProgress (Ljava/util/UUID;F)V a
	updateProperties (Ljava/util/UUID;ZZZ)V a
	updateStyle (Ljava/util/UUID;Lnet/minecraft/world/BossEvent$BossBarColor;Lnet/minecraft/world/BossEvent$BossBarOverlay;)V a
net/minecraft/network/protocol/game/ClientboundBossEventPacket$Operation qb$c
	dispatch (Ljava/util/UUID;Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$Handler;)V a
	getType ()Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$OperationType; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundBossEventPacket$OperationType qb$d
	$VALUES h
	ADD a
	REMOVE b
	UPDATE_NAME d
	UPDATE_PROGRESS c
	UPDATE_PROPERTIES f
	UPDATE_STYLE e
	reader g
	$values ()[Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$OperationType; a
net/minecraft/network/protocol/game/ClientboundBossEventPacket$UpdateNameOperation qb$e
	name a
	dispatch (Ljava/util/UUID;Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$Handler;)V a
	getType ()Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$OperationType; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundBossEventPacket$UpdateProgressOperation qb$f
	progress a
	dispatch (Ljava/util/UUID;Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$Handler;)V a
	getType ()Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$OperationType; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundBossEventPacket$UpdatePropertiesOperation qb$g
	createWorldFog c
	darkenScreen a
	playMusic b
	dispatch (Ljava/util/UUID;Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$Handler;)V a
	getType ()Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$OperationType; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundBossEventPacket$UpdateStyleOperation qb$h
	color a
	overlay b
	dispatch (Ljava/util/UUID;Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$Handler;)V a
	getType ()Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$OperationType; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundChangeDifficultyPacket qc
	difficulty a
	locked b
	getDifficulty ()Lnet/minecraft/world/Difficulty; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isLocked ()Z b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundChatPacket qd
	message a
	sender c
	type b
	getMessage ()Lnet/minecraft/network/chat/Component; b
	getSender ()Ljava/util/UUID; d
	getType ()Lnet/minecraft/network/chat/ChatType; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isSkippable ()Z a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundClearTitlesPacket qe
	resetTimes a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	shouldResetTimes ()Z b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundCommandSuggestionsPacket qf
	id a
	suggestions b
	getId ()I b
	getSuggestions ()Lcom/mojang/brigadier/suggestion/Suggestions; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundCommandsPacket qg
	FLAG_CUSTOM_SUGGESTIONS d
	FLAG_EXECUTABLE b
	FLAG_REDIRECT c
	MASK_TYPE a
	TYPE_ARGUMENT g
	TYPE_LITERAL f
	TYPE_ROOT e
	root h
	createBuilder (Lnet/minecraft/network/FriendlyByteBuf;B)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
	enumerateNodes (Lcom/mojang/brigadier/tree/RootCommandNode;)Lit/unimi/dsi/fastutil/objects/Object2IntMap; a
	getNodesInIdOrder (Lit/unimi/dsi/fastutil/objects/Object2IntMap;)Ljava/util/List; a
	getRoot ()Lcom/mojang/brigadier/tree/RootCommandNode; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	readNode (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/game/ClientboundCommandsPacket$Entry; b
	resolveEntries (Ljava/util/List;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
	writeNode (Lnet/minecraft/network/FriendlyByteBuf;Lcom/mojang/brigadier/tree/CommandNode;Ljava/util/Map;)V a
net/minecraft/network/protocol/game/ClientboundCommandsPacket$Entry qg$a
	builder a
	children d
	flags b
	node e
	redirect c
	build (Ljava/util/List;)Z a
net/minecraft/network/protocol/game/ClientboundContainerClosePacket qh
	containerId a
	getContainerId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundContainerSetContentPacket qi
	containerId a
	items b
	getContainerId ()I b
	getItems ()Ljava/util/List; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundContainerSetDataPacket qj
	containerId a
	id b
	value c
	getContainerId ()I b
	getId ()I c
	getValue ()I d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundContainerSetSlotPacket qk
	CARRIED_ITEM a
	PLAYER_INVENTORY b
	containerId c
	itemStack e
	slot d
	getContainerId ()I b
	getItem ()Lnet/minecraft/world/item/ItemStack; d
	getSlot ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundCooldownPacket ql
	duration b
	item a
	getDuration ()I c
	getItem ()Lnet/minecraft/world/item/Item; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundCustomPayloadPacket qm
	BRAND a
	DEBUG_BEE l
	DEBUG_BRAIN k
	DEBUG_GAME_EVENT q
	DEBUG_GAME_EVENT_LISTENER r
	DEBUG_GAME_TEST_ADD_MARKER n
	DEBUG_GAME_TEST_CLEAR o
	DEBUG_GOAL_SELECTOR j
	DEBUG_HIVE m
	DEBUG_NEIGHBORSUPDATE_PACKET c
	DEBUG_PATHFINDING_PACKET b
	DEBUG_POI_ADDED_PACKET g
	DEBUG_POI_REMOVED_PACKET h
	DEBUG_POI_TICKET_COUNT_PACKET f
	DEBUG_RAIDS p
	DEBUG_STRUCTURES_PACKET d
	DEBUG_VILLAGE_SECTIONS i
	DEBUG_WORLDGENATTEMPT_PACKET e
	MAX_PAYLOAD_SIZE s
	data u
	identifier t
	getData ()Lnet/minecraft/network/FriendlyByteBuf; c
	getIdentifier ()Lnet/minecraft/resources/ResourceLocation; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundCustomSoundPacket qn
	LOCATION_ACCURACY a
	name b
	pitch h
	source c
	volume g
	x d
	y e
	z f
	getName ()Lnet/minecraft/resources/ResourceLocation; b
	getPitch ()F h
	getSource ()Lnet/minecraft/sounds/SoundSource; c
	getVolume ()F g
	getX ()D d
	getY ()D e
	getZ ()D f
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundDisconnectPacket qo
	reason a
	getReason ()Lnet/minecraft/network/chat/Component; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundEntityEventPacket qp
	entityId a
	eventId b
	getEntity (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/Entity; a
	getEventId ()B b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundExplodePacket qq
	knockbackX f
	knockbackY g
	knockbackZ h
	power d
	toBlow e
	x a
	y b
	z c
	getKnockbackX ()F b
	getKnockbackY ()F c
	getKnockbackZ ()F d
	getPower ()F h
	getToBlow ()Ljava/util/List; i
	getX ()D e
	getY ()D f
	getZ ()D g
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundForgetLevelChunkPacket qr
	x a
	z b
	getX ()I b
	getZ ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundGameEventPacket qs
	ARROW_HIT_PLAYER g
	CHANGE_GAME_MODE d
	DEMO_EVENT f
	DEMO_PARAM_HINT_1 n
	DEMO_PARAM_HINT_2 o
	DEMO_PARAM_HINT_3 p
	DEMO_PARAM_HINT_4 q
	DEMO_PARAM_INTRO m
	GUARDIAN_ELDER_EFFECT k
	IMMEDIATE_RESPAWN l
	NO_RESPAWN_BLOCK_AVAILABLE a
	PUFFER_FISH_STING j
	RAIN_LEVEL_CHANGE h
	START_RAINING b
	STOP_RAINING c
	THUNDER_LEVEL_CHANGE i
	WIN_GAME e
	event r
	param s
	getEvent ()Lnet/minecraft/network/protocol/game/ClientboundGameEventPacket$Type; b
	getParam ()F c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundGameEventPacket$Type qs$a
	TYPES a
	id b
net/minecraft/network/protocol/game/ClientboundHorseScreenOpenPacket qt
	containerId a
	entityId c
	size b
	getContainerId ()I b
	getEntityId ()I d
	getSize ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundInitializeBorderPacket qu
	lerpTime e
	newAbsoluteMaxSize f
	newCenterX a
	newCenterZ b
	newSize d
	oldSize c
	warningBlocks g
	warningTime h
	getLerpTime ()J f
	getNewAbsoluteMaxSize ()I g
	getNewCenterX ()D b
	getNewCenterZ ()D c
	getNewSize ()D d
	getOldSize ()D e
	getWarningBlocks ()I i
	getWarningTime ()I h
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundKeepAlivePacket qv
	id a
	getId ()J b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundLevelChunkPacket qw
	TWO_MEGABYTES a
	availableSections d
	biomes f
	blockEntitiesTags h
	buffer g
	heightmaps e
	x b
	z c
	calculateChunkSize (Lnet/minecraft/world/level/chunk/LevelChunk;)I a
	extractChunkData (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/level/chunk/LevelChunk;)Ljava/util/BitSet; a
	getAvailableSections ()Ljava/util/BitSet; e
	getBiomes ()[I h
	getBlockEntitiesTags ()Ljava/util/List; g
	getHeightmaps ()Lnet/minecraft/nbt/CompoundTag; f
	getReadBuffer ()Lnet/minecraft/network/FriendlyByteBuf; b
	getWriteBuffer ()Lio/netty/buffer/ByteBuf; i
	getX ()I c
	getZ ()I d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundLevelEventPacket qx
	data c
	globalEvent d
	pos b
	type a
	getData ()I d
	getPos ()Lnet/minecraft/core/BlockPos; e
	getType ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isGlobalEvent ()Z b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundLevelParticlesPacket qy
	count h
	maxSpeed g
	overrideLimiter i
	particle j
	x a
	xDist d
	y b
	yDist e
	z c
	zDist f
	getCount ()I j
	getMaxSpeed ()F i
	getParticle ()Lnet/minecraft/core/particles/ParticleOptions; k
	getX ()D c
	getXDist ()F f
	getY ()D d
	getYDist ()F g
	getZ ()D e
	getZDist ()F h
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isOverrideLimiter ()Z b
	readParticle (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/core/particles/ParticleType;)Lnet/minecraft/core/particles/ParticleOptions; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundLightUpdatePacket qz
	blockUpdates h
	blockYMask d
	emptyBlockYMask f
	emptySkyYMask e
	skyUpdates g
	skyYMask c
	trustEdges i
	x a
	z b
	getBlockUpdates ()Ljava/util/List; i
	getBlockYMask ()Ljava/util/BitSet; g
	getEmptyBlockYMask ()Ljava/util/BitSet; h
	getEmptySkyYMask ()Ljava/util/BitSet; e
	getSkyUpdates ()Ljava/util/List; f
	getSkyYMask ()Ljava/util/BitSet; d
	getTrustEdges ()Z j
	getX ()I b
	getZ ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	prepareSectionData (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/lighting/LevelLightEngine;Lnet/minecraft/world/level/LightLayer;ILjava/util/BitSet;Ljava/util/BitSet;Ljava/util/List;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundLoginPacket ra
	HARDCORE_FLAG a
	chunkRadius l
	dimension j
	dimensionType i
	gameType e
	hardcore d
	isDebug o
	isFlat p
	levels g
	maxPlayers k
	playerId b
	previousGameType f
	reducedDebugInfo m
	registryHolder h
	seed c
	showDeathScreen n
	getChunkRadius ()I l
	getDimension ()Lnet/minecraft/resources/ResourceKey; j
	getDimensionType ()Lnet/minecraft/world/level/dimension/DimensionType; i
	getGameType ()Lnet/minecraft/world/level/GameType; e
	getMaxPlayers ()I k
	getPlayerId ()I b
	getPreviousGameType ()Lnet/minecraft/world/level/GameType; f
	getSeed ()J c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isDebug ()Z o
	isFlat ()Z p
	isHardcore ()Z d
	isReducedDebugInfo ()Z m
	levels ()Ljava/util/Set; g
	registryAccess ()Lnet/minecraft/core/RegistryAccess; h
	shouldShowDeathScreen ()Z n
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundMapItemDataPacket rb
	colorPatch e
	decorations d
	locked c
	mapId a
	scale b
	applyToMap (Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)V a
	getMapId ()I b
	getScale ()B c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isLocked ()Z d
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundMerchantOffersPacket rc
	canRestock f
	containerId a
	offers b
	showProgress e
	villagerLevel c
	villagerXp d
	canRestock ()Z g
	getContainerId ()I b
	getOffers ()Lnet/minecraft/world/item/trading/MerchantOffers; c
	getVillagerLevel ()I d
	getVillagerXp ()I e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	showProgress ()Z f
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundMoveEntityPacket rd
	TRUNCATION_STEPS j
	entityId a
	hasPos i
	hasRot h
	onGround g
	xRot f
	xa b
	yRot e
	ya c
	za d
	entityToPacket (D)J a
	getEntity (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/Entity; a
	getXa ()S b
	getYa ()S c
	getZa ()S d
	getxRot ()B f
	getyRot ()B e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	hasPosition ()Z h
	hasRotation ()Z g
	isOnGround ()Z i
	packetToEntity (J)D a
	packetToEntity (JJJ)Lnet/minecraft/world/phys/Vec3; a
	updateEntityPosition (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; a
net/minecraft/network/protocol/game/ClientboundMoveEntityPacket$Pos rd$a
	handle (Lnet/minecraft/network/PacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/game/ClientboundMoveEntityPacket$Pos; b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundMoveEntityPacket$PosRot rd$b
	handle (Lnet/minecraft/network/PacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/game/ClientboundMoveEntityPacket$PosRot; b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundMoveEntityPacket$Rot rd$c
	handle (Lnet/minecraft/network/PacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/game/ClientboundMoveEntityPacket$Rot; b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundMoveVehiclePacket re
	x a
	xRot e
	y b
	yRot d
	z c
	getX ()D b
	getXRot ()F f
	getY ()D c
	getYRot ()F e
	getZ ()D d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundOpenBookPacket rf
	hand a
	getHand ()Lnet/minecraft/world/InteractionHand; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundOpenScreenPacket rg
	containerId a
	title c
	type b
	getContainerId ()I b
	getTitle ()Lnet/minecraft/network/chat/Component; d
	getType ()Lnet/minecraft/world/inventory/MenuType; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundOpenSignEditorPacket rh
	pos a
	getPos ()Lnet/minecraft/core/BlockPos; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundPingPacket ri
	id a
	getId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundPlaceGhostRecipePacket rj
	containerId a
	recipe b
	getContainerId ()I c
	getRecipe ()Lnet/minecraft/resources/ResourceLocation; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundPlayerAbilitiesPacket rk
	FLAG_CAN_FLY c
	FLAG_FLYING b
	FLAG_INSTABUILD d
	FLAG_INVULNERABLE a
	canFly g
	flyingSpeed i
	instabuild h
	invulnerable e
	isFlying f
	walkingSpeed j
	canFly ()Z d
	canInstabuild ()Z e
	getFlyingSpeed ()F f
	getWalkingSpeed ()F g
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isFlying ()Z c
	isInvulnerable ()Z b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundPlayerCombatEndPacket rl
	duration b
	killerId a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundPlayerCombatEnterPacket rm
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundPlayerCombatKillPacket rn
	killerId b
	message c
	playerId a
	getKillerId ()I b
	getMessage ()Lnet/minecraft/network/chat/Component; d
	getPlayerId ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isSkippable ()Z a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundPlayerInfoPacket ro
	action a
	entries b
	getAction ()Lnet/minecraft/network/protocol/game/ClientboundPlayerInfoPacket$Action; c
	getEntries ()Ljava/util/List; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	readDisplayName (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/chat/Component; b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
	writeDisplayName (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/network/chat/Component;)V a
net/minecraft/network/protocol/game/ClientboundPlayerInfoPacket$Action ro$a
	$VALUES f
	ADD_PLAYER a
	REMOVE_PLAYER e
	UPDATE_DISPLAY_NAME d
	UPDATE_GAME_MODE b
	UPDATE_LATENCY c
	$values ()[Lnet/minecraft/network/protocol/game/ClientboundPlayerInfoPacket$Action; a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/game/ClientboundPlayerInfoPacket$PlayerUpdate; a
	write (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/network/protocol/game/ClientboundPlayerInfoPacket$PlayerUpdate;)V a
net/minecraft/network/protocol/game/ClientboundPlayerInfoPacket$PlayerUpdate ro$b
	displayName d
	gameMode b
	latency a
	profile c
	getDisplayName ()Lnet/minecraft/network/chat/Component; d
	getGameMode ()Lnet/minecraft/world/level/GameType; c
	getLatency ()I b
	getProfile ()Lcom/mojang/authlib/GameProfile; a
net/minecraft/network/protocol/game/ClientboundPlayerLookAtPacket rp
	atEntity g
	entity d
	fromAnchor e
	toAnchor f
	x a
	y b
	z c
	getFromAnchor ()Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor; b
	getPosition (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/phys/Vec3; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundPlayerPositionPacket rq
	dismountVehicle h
	id g
	relativeArguments f
	x a
	xRot e
	y b
	yRot d
	z c
	getId ()I g
	getRelativeArguments ()Ljava/util/Set; i
	getX ()D b
	getXRot ()F f
	getY ()D c
	getYRot ()F e
	getZ ()D d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	requestDismountVehicle ()Z h
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundPlayerPositionPacket$RelativeArgument rq$a
	$VALUES g
	X a
	X_ROT e
	Y b
	Y_ROT d
	Z c
	bit f
	$values ()[Lnet/minecraft/network/protocol/game/ClientboundPlayerPositionPacket$RelativeArgument; b
	getMask ()I a
	isSet (I)Z b
	pack (Ljava/util/Set;)I a
	unpack (I)Ljava/util/Set; a
net/minecraft/network/protocol/game/ClientboundRecipePacket rr
	bookSettings d
	recipes b
	state a
	toHighlight c
	getBookSettings ()Lnet/minecraft/stats/RecipeBookSettings; d
	getHighlights ()Ljava/util/List; c
	getRecipes ()Ljava/util/List; b
	getState ()Lnet/minecraft/network/protocol/game/ClientboundRecipePacket$State; e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundRecipePacket$State rr$a
	$VALUES d
	ADD b
	INIT a
	REMOVE c
	$values ()[Lnet/minecraft/network/protocol/game/ClientboundRecipePacket$State; a
net/minecraft/network/protocol/game/ClientboundRemoveEntityPacket rs
	entityId a
	getEntityId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundRemoveMobEffectPacket rt
	effect b
	entityId a
	getEffect ()Lnet/minecraft/world/effect/MobEffect; b
	getEntity (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/Entity; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundResourcePackPacket ru
	MAX_HASH_LENGTH a
	hash c
	prompt e
	required d
	url b
	getHash ()Ljava/lang/String; c
	getPrompt ()Lnet/minecraft/network/chat/Component; e
	getUrl ()Ljava/lang/String; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isRequired ()Z d
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundRespawnPacket rv
	dimension b
	dimensionType a
	isDebug f
	isFlat g
	keepAllPlayerData h
	playerGameType d
	previousPlayerGameType e
	seed c
	getDimension ()Lnet/minecraft/resources/ResourceKey; c
	getDimensionType ()Lnet/minecraft/world/level/dimension/DimensionType; b
	getPlayerGameType ()Lnet/minecraft/world/level/GameType; e
	getPreviousPlayerGameType ()Lnet/minecraft/world/level/GameType; f
	getSeed ()J d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isDebug ()Z g
	isFlat ()Z h
	shouldKeepAllPlayerData ()Z i
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundRotateHeadPacket rw
	entityId a
	yHeadRot b
	getEntity (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/Entity; a
	getYHeadRot ()B b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSectionBlocksUpdatePacket rx
	POS_IN_SECTION_BITS a
	positions c
	sectionPos b
	states d
	suppressLightUpdates e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	runUpdates (Ljava/util/function/BiConsumer;)V a
	shouldSuppressLightUpdates ()Z b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSelectAdvancementsTabPacket ry
	tab a
	getTab ()Lnet/minecraft/resources/ResourceLocation; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetActionBarTextPacket rz
	text a
	getText ()Lnet/minecraft/network/chat/Component; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetBorderCenterPacket sa
	newCenterX a
	newCenterZ b
	getNewCenterX ()D c
	getNewCenterZ ()D b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetBorderLerpSizePacket sb
	lerpTime c
	newSize b
	oldSize a
	getLerpTime ()J d
	getNewSize ()D c
	getOldSize ()D b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetBorderSizePacket sc
	size a
	getSize ()D b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetBorderWarningDelayPacket sd
	warningDelay a
	getWarningDelay ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetBorderWarningDistancePacket se
	warningBlocks a
	getWarningBlocks ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetCameraPacket sf
	cameraId a
	getEntity (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/Entity; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetCarriedItemPacket sg
	slot a
	getSlot ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetChunkCacheCenterPacket sh
	x a
	z b
	getX ()I b
	getZ ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetChunkCacheRadiusPacket si
	radius a
	getRadius ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetDefaultSpawnPositionPacket sj
	angle b
	pos a
	getAngle ()F c
	getPos ()Lnet/minecraft/core/BlockPos; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetDisplayObjectivePacket sk
	objectiveName b
	slot a
	getObjectiveName ()Ljava/lang/String; c
	getSlot ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetEntityDataPacket sl
	id a
	packedItems b
	getId ()I c
	getUnpackedData ()Ljava/util/List; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetEntityLinkPacket sm
	destId b
	sourceId a
	getDestId ()I c
	getSourceId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetEntityMotionPacket sn
	id a
	xa b
	ya c
	za d
	getId ()I b
	getXa ()I c
	getYa ()I d
	getZa ()I e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetEquipmentPacket so
	CONTINUE_MASK a
	entity b
	slots c
	getEntity ()I b
	getSlots ()Ljava/util/List; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetExperiencePacket sp
	experienceLevel c
	experienceProgress a
	totalExperience b
	getExperienceLevel ()I d
	getExperienceProgress ()F b
	getTotalExperience ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetHealthPacket sq
	food b
	health a
	saturation c
	getFood ()I c
	getHealth ()F b
	getSaturation ()F d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetObjectivePacket sr
	METHOD_ADD a
	METHOD_CHANGE c
	METHOD_REMOVE b
	displayName e
	method g
	objectiveName d
	renderType f
	getDisplayName ()Lnet/minecraft/network/chat/Component; c
	getMethod ()I d
	getObjectiveName ()Ljava/lang/String; b
	getRenderType ()Lnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType; e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetPassengersPacket ss
	passengers b
	vehicle a
	getPassengers ()[I b
	getVehicle ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket st
	MAX_COLLISION_LENGTH g
	MAX_VISIBILITY_LENGTH f
	METHOD_ADD a
	METHOD_CHANGE c
	METHOD_JOIN d
	METHOD_LEAVE e
	METHOD_REMOVE b
	method h
	name i
	parameters k
	players j
	createAddOrModifyPacket (Lnet/minecraft/world/scores/PlayerTeam;Z)Lnet/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket; a
	createPlayerPacket (Lnet/minecraft/world/scores/PlayerTeam;Ljava/lang/String;Lnet/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket$Action;)Lnet/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket; a
	createRemovePacket (Lnet/minecraft/world/scores/PlayerTeam;)Lnet/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket; a
	getName ()Ljava/lang/String; d
	getParameters ()Ljava/util/Optional; f
	getPlayerAction ()Lnet/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket$Action; b
	getPlayers ()Ljava/util/Collection; e
	getTeamAction ()Lnet/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket$Action; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	shouldHaveParameters (I)Z b
	shouldHavePlayerList (I)Z a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket$Action st$a
	$VALUES c
	ADD a
	REMOVE b
	$values ()[Lnet/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket$Action; a
net/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket$Parameters st$b
	collisionRule e
	color f
	displayName a
	nametagVisibility d
	options g
	playerPrefix b
	playerSuffix c
	getCollisionRule ()Ljava/lang/String; e
	getColor ()Lnet/minecraft/ChatFormatting; c
	getDisplayName ()Lnet/minecraft/network/chat/Component; a
	getNametagVisibility ()Ljava/lang/String; d
	getOptions ()I b
	getPlayerPrefix ()Lnet/minecraft/network/chat/Component; f
	getPlayerSuffix ()Lnet/minecraft/network/chat/Component; g
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetScorePacket su
	method d
	objectiveName b
	owner a
	score c
	getMethod ()Lnet/minecraft/server/ServerScoreboard$Method; e
	getObjectiveName ()Ljava/lang/String; c
	getOwner ()Ljava/lang/String; b
	getScore ()I d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetSubtitleTextPacket sv
	text a
	getText ()Lnet/minecraft/network/chat/Component; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetTimePacket sw
	dayTime b
	gameTime a
	getDayTime ()J c
	getGameTime ()J b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetTitleTextPacket sx
	text a
	getText ()Lnet/minecraft/network/chat/Component; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetTitlesAnimationPacket sy
	fadeIn a
	fadeOut c
	stay b
	getFadeIn ()I b
	getFadeOut ()I d
	getStay ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSoundEntityPacket sz
	id c
	pitch e
	sound a
	source b
	volume d
	getId ()I d
	getPitch ()F f
	getSound ()Lnet/minecraft/sounds/SoundEvent; b
	getSource ()Lnet/minecraft/sounds/SoundSource; c
	getVolume ()F e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSoundPacket ta
	LOCATION_ACCURACY a
	pitch h
	sound b
	source c
	volume g
	x d
	y e
	z f
	getPitch ()F h
	getSound ()Lnet/minecraft/sounds/SoundEvent; b
	getSource ()Lnet/minecraft/sounds/SoundSource; c
	getVolume ()F g
	getX ()D d
	getY ()D e
	getZ ()D f
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundStopSoundPacket tb
	HAS_SOUND b
	HAS_SOURCE a
	name c
	source d
	getName ()Lnet/minecraft/resources/ResourceLocation; b
	getSource ()Lnet/minecraft/sounds/SoundSource; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundTabListPacket tc
	footer b
	header a
	getFooter ()Lnet/minecraft/network/chat/Component; c
	getHeader ()Lnet/minecraft/network/chat/Component; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundTagQueryPacket td
	tag b
	transactionId a
	getTag ()Lnet/minecraft/nbt/CompoundTag; c
	getTransactionId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isSkippable ()Z a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundTakeItemEntityPacket te
	amount c
	itemId a
	playerId b
	getAmount ()I d
	getItemId ()I b
	getPlayerId ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundTeleportEntityPacket tf
	id a
	onGround g
	x b
	xRot f
	y c
	yRot e
	z d
	getId ()I b
	getX ()D c
	getY ()D d
	getZ ()D e
	getxRot ()B g
	getyRot ()B f
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isOnGround ()Z h
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundUpdateAdvancementsPacket tg
	added b
	progress d
	removed c
	reset a
	getAdded ()Ljava/util/Map; b
	getProgress ()Ljava/util/Map; d
	getRemoved ()Ljava/util/Set; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	shouldReset ()Z e
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundUpdateAttributesPacket th
	attributes b
	entityId a
	getEntityId ()I b
	getValues ()Ljava/util/List; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundUpdateAttributesPacket$AttributeSnapshot th$a
	attribute a
	base b
	modifiers c
	getAttribute ()Lnet/minecraft/world/entity/ai/attributes/Attribute; a
	getBase ()D b
	getModifiers ()Ljava/util/Collection; c
net/minecraft/network/protocol/game/ClientboundUpdateMobEffectPacket ti
	FLAG_AMBIENT a
	FLAG_SHOW_ICON c
	FLAG_VISIBLE b
	effectAmplifier f
	effectDurationTicks g
	effectId e
	entityId d
	flags h
	effectShowsIcon ()Z i
	getEffectAmplifier ()B e
	getEffectDurationTicks ()I f
	getEffectId ()B d
	getEntityId ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isEffectAmbient ()Z h
	isEffectVisible ()Z g
	isSuperLongDuration ()Z b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundUpdateRecipesPacket tj
	recipes a
	fromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Recipe; b
	getRecipes ()Ljava/util/List; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/Recipe;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundUpdateTagsPacket tk
	tags a
	getTags ()Ljava/util/Map; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/DebugEntityNameGenerator tl
	NAMES_FIRST_PART a
	NAMES_SECOND_PART b
	getEntityName (Ljava/util/UUID;)Ljava/lang/String; a
	getEntityName (Lnet/minecraft/world/entity/Entity;)Ljava/lang/String; a
	getRandom (Ljava/util/UUID;)Ljava/util/Random; b
	getRandomString (Ljava/util/Random;[Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/network/protocol/game/DebugPackets tm
	LOGGER a
	getMemoryDescriptions (Lnet/minecraft/world/entity/LivingEntity;J)Ljava/util/List; a
	getShortDescription (Lnet/minecraft/server/level/ServerLevel;Ljava/lang/Object;)Ljava/lang/String; a
	sendBeeInfo (Lnet/minecraft/world/entity/animal/Bee;)V a
	sendEntityBrain (Lnet/minecraft/world/entity/LivingEntity;)V a
	sendGameEventInfo (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/core/BlockPos;)V a
	sendGameEventListenerInfo (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/gameevent/GameEventListener;)V a
	sendGameTestAddMarker (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/lang/String;II)V a
	sendGameTestClearPacket (Lnet/minecraft/server/level/ServerLevel;)V a
	sendGoalSelector (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/ai/goal/GoalSelector;)V a
	sendHiveInfo (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BeehiveBlockEntity;)V a
	sendNeighborsUpdatePacket (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	sendPacketToAllPlayers (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/resources/ResourceLocation;)V a
	sendPathFindingPacket (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/level/pathfinder/Path;F)V a
	sendPoiAddedPacket (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V a
	sendPoiPacketsForChunk (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/ChunkPos;)V a
	sendPoiRemovedPacket (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V b
	sendPoiTicketCountPacket (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V c
	sendRaids (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Collection;)V a
	sendStructurePacket (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/StructureStart;)V a
	sendVillageSectionsPacket (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V d
	writeBrain (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerGamePacketListener tn
	handleAcceptTeleportPacket (Lnet/minecraft/network/protocol/game/ServerboundAcceptTeleportationPacket;)V a
	handleAnimate (Lnet/minecraft/network/protocol/game/ServerboundSwingPacket;)V a
	handleBlockEntityTagQuery (Lnet/minecraft/network/protocol/game/ServerboundBlockEntityTagQuery;)V a
	handleChangeDifficulty (Lnet/minecraft/network/protocol/game/ServerboundChangeDifficultyPacket;)V a
	handleChat (Lnet/minecraft/network/protocol/game/ServerboundChatPacket;)V a
	handleClientCommand (Lnet/minecraft/network/protocol/game/ServerboundClientCommandPacket;)V a
	handleClientInformation (Lnet/minecraft/network/protocol/game/ServerboundClientInformationPacket;)V a
	handleContainerButtonClick (Lnet/minecraft/network/protocol/game/ServerboundContainerButtonClickPacket;)V a
	handleContainerClick (Lnet/minecraft/network/protocol/game/ServerboundContainerClickPacket;)V a
	handleContainerClose (Lnet/minecraft/network/protocol/game/ServerboundContainerClosePacket;)V a
	handleCustomCommandSuggestions (Lnet/minecraft/network/protocol/game/ServerboundCommandSuggestionPacket;)V a
	handleCustomPayload (Lnet/minecraft/network/protocol/game/ServerboundCustomPayloadPacket;)V a
	handleEditBook (Lnet/minecraft/network/protocol/game/ServerboundEditBookPacket;)V a
	handleEntityTagQuery (Lnet/minecraft/network/protocol/game/ServerboundEntityTagQuery;)V a
	handleInteract (Lnet/minecraft/network/protocol/game/ServerboundInteractPacket;)V a
	handleJigsawGenerate (Lnet/minecraft/network/protocol/game/ServerboundJigsawGeneratePacket;)V a
	handleKeepAlive (Lnet/minecraft/network/protocol/game/ServerboundKeepAlivePacket;)V a
	handleLockDifficulty (Lnet/minecraft/network/protocol/game/ServerboundLockDifficultyPacket;)V a
	handleMovePlayer (Lnet/minecraft/network/protocol/game/ServerboundMovePlayerPacket;)V a
	handleMoveVehicle (Lnet/minecraft/network/protocol/game/ServerboundMoveVehiclePacket;)V a
	handlePaddleBoat (Lnet/minecraft/network/protocol/game/ServerboundPaddleBoatPacket;)V a
	handlePickItem (Lnet/minecraft/network/protocol/game/ServerboundPickItemPacket;)V a
	handlePlaceRecipe (Lnet/minecraft/network/protocol/game/ServerboundPlaceRecipePacket;)V a
	handlePlayerAbilities (Lnet/minecraft/network/protocol/game/ServerboundPlayerAbilitiesPacket;)V a
	handlePlayerAction (Lnet/minecraft/network/protocol/game/ServerboundPlayerActionPacket;)V a
	handlePlayerCommand (Lnet/minecraft/network/protocol/game/ServerboundPlayerCommandPacket;)V a
	handlePlayerInput (Lnet/minecraft/network/protocol/game/ServerboundPlayerInputPacket;)V a
	handlePong (Lnet/minecraft/network/protocol/game/ServerboundPongPacket;)V a
	handleRecipeBookChangeSettingsPacket (Lnet/minecraft/network/protocol/game/ServerboundRecipeBookChangeSettingsPacket;)V a
	handleRecipeBookSeenRecipePacket (Lnet/minecraft/network/protocol/game/ServerboundRecipeBookSeenRecipePacket;)V a
	handleRenameItem (Lnet/minecraft/network/protocol/game/ServerboundRenameItemPacket;)V a
	handleResourcePackResponse (Lnet/minecraft/network/protocol/game/ServerboundResourcePackPacket;)V a
	handleSeenAdvancements (Lnet/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket;)V a
	handleSelectTrade (Lnet/minecraft/network/protocol/game/ServerboundSelectTradePacket;)V a
	handleSetBeaconPacket (Lnet/minecraft/network/protocol/game/ServerboundSetBeaconPacket;)V a
	handleSetCarriedItem (Lnet/minecraft/network/protocol/game/ServerboundSetCarriedItemPacket;)V a
	handleSetCommandBlock (Lnet/minecraft/network/protocol/game/ServerboundSetCommandBlockPacket;)V a
	handleSetCommandMinecart (Lnet/minecraft/network/protocol/game/ServerboundSetCommandMinecartPacket;)V a
	handleSetCreativeModeSlot (Lnet/minecraft/network/protocol/game/ServerboundSetCreativeModeSlotPacket;)V a
	handleSetJigsawBlock (Lnet/minecraft/network/protocol/game/ServerboundSetJigsawBlockPacket;)V a
	handleSetStructureBlock (Lnet/minecraft/network/protocol/game/ServerboundSetStructureBlockPacket;)V a
	handleSignUpdate (Lnet/minecraft/network/protocol/game/ServerboundSignUpdatePacket;)V a
	handleTeleportToEntityPacket (Lnet/minecraft/network/protocol/game/ServerboundTeleportToEntityPacket;)V a
	handleUseItem (Lnet/minecraft/network/protocol/game/ServerboundUseItemPacket;)V a
	handleUseItemOn (Lnet/minecraft/network/protocol/game/ServerboundUseItemOnPacket;)V a
net/minecraft/network/protocol/game/ServerboundAcceptTeleportationPacket to
	id a
	getId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundBlockEntityTagQuery tp
	pos b
	transactionId a
	getPos ()Lnet/minecraft/core/BlockPos; c
	getTransactionId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundChangeDifficultyPacket tq
	difficulty a
	getDifficulty ()Lnet/minecraft/world/Difficulty; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundChatPacket tr
	MAX_MESSAGE_LENGTH a
	message b
	getMessage ()Ljava/lang/String; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundClientCommandPacket ts
	action a
	getAction ()Lnet/minecraft/network/protocol/game/ServerboundClientCommandPacket$Action; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundClientCommandPacket$Action ts$a
	$VALUES c
	PERFORM_RESPAWN a
	REQUEST_STATS b
	$values ()[Lnet/minecraft/network/protocol/game/ServerboundClientCommandPacket$Action; a
net/minecraft/network/protocol/game/ServerboundClientInformationPacket tt
	MAX_LANGUAGE_LENGTH a
	chatColors e
	chatVisibility d
	language b
	mainHand g
	modelCustomisation f
	textFilteringEnabled h
	viewDistance c
	getChatColors ()Z e
	getChatVisibility ()Lnet/minecraft/world/entity/player/ChatVisiblity; d
	getLanguage ()Ljava/lang/String; b
	getMainHand ()Lnet/minecraft/world/entity/HumanoidArm; g
	getModelCustomisation ()I f
	getViewDistance ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isTextFilteringEnabled ()Z h
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundCommandSuggestionPacket tu
	command b
	id a
	getCommand ()Ljava/lang/String; c
	getId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundContainerButtonClickPacket tv
	buttonId b
	containerId a
	getButtonId ()I c
	getContainerId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundContainerClickPacket tw
	buttonNum c
	carriedItem e
	changedSlots f
	clickType d
	containerId a
	slotNum b
	getButtonNum ()I d
	getCarriedItem ()Lnet/minecraft/world/item/ItemStack; e
	getChangedSlots ()Lit/unimi/dsi/fastutil/ints/Int2ObjectMap; f
	getClickType ()Lnet/minecraft/world/inventory/ClickType; g
	getContainerId ()I b
	getSlotNum ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundContainerClosePacket tx
	containerId a
	getContainerId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundCustomPayloadPacket ty
	BRAND a
	MAX_PAYLOAD_SIZE b
	data d
	identifier c
	getData ()Lnet/minecraft/network/FriendlyByteBuf; c
	getIdentifier ()Lnet/minecraft/resources/ResourceLocation; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundEditBookPacket tz
	book a
	signing b
	slot c
	getBook ()Lnet/minecraft/world/item/ItemStack; b
	getSlot ()I d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isSigning ()Z c
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundEntityTagQuery ua
	entityId b
	transactionId a
	getEntityId ()I c
	getTransactionId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundInteractPacket ub
	ATTACK_ACTION d
	action b
	entityId a
	usingSecondaryAction c
	createAttackPacket (Lnet/minecraft/world/entity/Entity;Z)Lnet/minecraft/network/protocol/game/ServerboundInteractPacket; a
	createInteractionPacket (Lnet/minecraft/world/entity/Entity;ZLnet/minecraft/world/InteractionHand;)Lnet/minecraft/network/protocol/game/ServerboundInteractPacket; a
	createInteractionPacket (Lnet/minecraft/world/entity/Entity;ZLnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/network/protocol/game/ServerboundInteractPacket; a
	dispatch (Lnet/minecraft/network/protocol/game/ServerboundInteractPacket$Handler;)V a
	getTarget (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/entity/Entity; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isUsingSecondaryAction ()Z b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundInteractPacket$Action ub$a
	dispatch (Lnet/minecraft/network/protocol/game/ServerboundInteractPacket$Handler;)V a
	getType ()Lnet/minecraft/network/protocol/game/ServerboundInteractPacket$ActionType; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundInteractPacket$ActionType ub$b
	$VALUES e
	ATTACK b
	INTERACT a
	INTERACT_AT c
	reader d
	$values ()[Lnet/minecraft/network/protocol/game/ServerboundInteractPacket$ActionType; a
net/minecraft/network/protocol/game/ServerboundInteractPacket$Handler ub$c
	onAttack ()V a
	onInteraction (Lnet/minecraft/world/InteractionHand;)V a
	onInteraction (Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/Vec3;)V a
net/minecraft/network/protocol/game/ServerboundInteractPacket$InteractionAction ub$d
	hand a
	dispatch (Lnet/minecraft/network/protocol/game/ServerboundInteractPacket$Handler;)V a
	getType ()Lnet/minecraft/network/protocol/game/ServerboundInteractPacket$ActionType; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundInteractPacket$InteractionAtLocationAction ub$e
	hand a
	location b
	dispatch (Lnet/minecraft/network/protocol/game/ServerboundInteractPacket$Handler;)V a
	getType ()Lnet/minecraft/network/protocol/game/ServerboundInteractPacket$ActionType; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundJigsawGeneratePacket uc
	keepJigsaws c
	levels b
	pos a
	getPos ()Lnet/minecraft/core/BlockPos; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	keepJigsaws ()Z d
	levels ()I c
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundKeepAlivePacket ud
	id a
	getId ()J b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundLockDifficultyPacket ue
	locked a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isLocked ()Z b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundMovePlayerPacket uf
	hasPos g
	hasRot h
	onGround f
	x a
	xRot e
	y b
	yRot d
	z c
	getX (D)D a
	getXRot (F)F b
	getY (D)D b
	getYRot (F)F a
	getZ (D)D c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	hasPosition ()Z c
	hasRotation ()Z d
	isOnGround ()Z b
net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$Pos uf$a
	handle (Lnet/minecraft/network/PacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/game/ServerboundMovePlayerPacket$Pos; b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$PosRot uf$b
	handle (Lnet/minecraft/network/PacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/game/ServerboundMovePlayerPacket$PosRot; b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$Rot uf$c
	handle (Lnet/minecraft/network/PacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/game/ServerboundMovePlayerPacket$Rot; b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$StatusOnly uf$d
	handle (Lnet/minecraft/network/PacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/game/ServerboundMovePlayerPacket$StatusOnly; b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundMoveVehiclePacket ug
	x a
	xRot e
	y b
	yRot d
	z c
	getX ()D b
	getXRot ()F f
	getY ()D c
	getYRot ()F e
	getZ ()D d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundPaddleBoatPacket uh
	left a
	right b
	getLeft ()Z b
	getRight ()Z c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundPickItemPacket ui
	slot a
	getSlot ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundPlaceRecipePacket uj
	containerId a
	recipe b
	shiftDown c
	getContainerId ()I b
	getRecipe ()Lnet/minecraft/resources/ResourceLocation; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isShiftDown ()Z d
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundPlayerAbilitiesPacket uk
	FLAG_FLYING a
	isFlying b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isFlying ()Z b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundPlayerActionPacket ul
	action c
	direction b
	pos a
	getAction ()Lnet/minecraft/network/protocol/game/ServerboundPlayerActionPacket$Action; d
	getDirection ()Lnet/minecraft/core/Direction; c
	getPos ()Lnet/minecraft/core/BlockPos; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundPlayerActionPacket$Action ul$a
	$VALUES h
	ABORT_DESTROY_BLOCK b
	DROP_ALL_ITEMS d
	DROP_ITEM e
	RELEASE_USE_ITEM f
	START_DESTROY_BLOCK a
	STOP_DESTROY_BLOCK c
	SWAP_ITEM_WITH_OFFHAND g
	$values ()[Lnet/minecraft/network/protocol/game/ServerboundPlayerActionPacket$Action; a
net/minecraft/network/protocol/game/ServerboundPlayerCommandPacket um
	action b
	data c
	id a
	getAction ()Lnet/minecraft/network/protocol/game/ServerboundPlayerCommandPacket$Action; c
	getData ()I d
	getId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundPlayerCommandPacket$Action um$a
	$VALUES j
	OPEN_INVENTORY h
	PRESS_SHIFT_KEY a
	RELEASE_SHIFT_KEY b
	START_FALL_FLYING i
	START_RIDING_JUMP f
	START_SPRINTING d
	STOP_RIDING_JUMP g
	STOP_SLEEPING c
	STOP_SPRINTING e
	$values ()[Lnet/minecraft/network/protocol/game/ServerboundPlayerCommandPacket$Action; a
net/minecraft/network/protocol/game/ServerboundPlayerInputPacket un
	FLAG_JUMPING a
	FLAG_SHIFT_KEY_DOWN b
	isJumping e
	isShiftKeyDown f
	xxa c
	zza d
	getXxa ()F b
	getZza ()F c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isJumping ()Z d
	isShiftKeyDown ()Z e
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundPongPacket uo
	id a
	getId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundRecipeBookChangeSettingsPacket up
	bookType a
	isFiltering c
	isOpen b
	getBookType ()Lnet/minecraft/world/inventory/RecipeBookType; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isFiltering ()Z d
	isOpen ()Z c
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundRecipeBookSeenRecipePacket uq
	recipe a
	getRecipe ()Lnet/minecraft/resources/ResourceLocation; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundRenameItemPacket ur
	name a
	getName ()Ljava/lang/String; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundResourcePackPacket us
	action a
	getAction ()Lnet/minecraft/network/protocol/game/ServerboundResourcePackPacket$Action; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundResourcePackPacket$Action us$a
	$VALUES e
	ACCEPTED d
	DECLINED b
	FAILED_DOWNLOAD c
	SUCCESSFULLY_LOADED a
	$values ()[Lnet/minecraft/network/protocol/game/ServerboundResourcePackPacket$Action; a
net/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket ut
	action a
	tab b
	closedScreen ()Lnet/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket; b
	getAction ()Lnet/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket$Action; c
	getTab ()Lnet/minecraft/resources/ResourceLocation; d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	openedTab (Lnet/minecraft/advancements/Advancement;)Lnet/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket$Action ut$a
	$VALUES c
	CLOSED_SCREEN b
	OPENED_TAB a
	$values ()[Lnet/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket$Action; a
net/minecraft/network/protocol/game/ServerboundSelectTradePacket uu
	item a
	getItem ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundSetBeaconPacket uv
	primary a
	secondary b
	getPrimary ()I b
	getSecondary ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundSetCarriedItemPacket uw
	slot a
	getSlot ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundSetCommandBlockPacket ux
	FLAG_AUTOMATIC c
	FLAG_CONDITIONAL b
	FLAG_TRACK_OUTPUT a
	automatic h
	command e
	conditional g
	mode i
	pos d
	trackOutput f
	getCommand ()Ljava/lang/String; c
	getMode ()Lnet/minecraft/world/level/block/entity/CommandBlockEntity$Mode; g
	getPos ()Lnet/minecraft/core/BlockPos; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isAutomatic ()Z f
	isConditional ()Z e
	isTrackOutput ()Z d
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundSetCommandMinecartPacket uy
	command b
	entity a
	trackOutput c
	getCommand ()Ljava/lang/String; b
	getCommandBlock (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/level/BaseCommandBlock; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isTrackOutput ()Z c
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundSetCreativeModeSlotPacket uz
	itemStack b
	slotNum a
	getItem ()Lnet/minecraft/world/item/ItemStack; c
	getSlotNum ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundSetJigsawBlockPacket va
	finalState e
	joint f
	name b
	pool d
	pos a
	target c
	getFinalState ()Ljava/lang/String; f
	getJoint ()Lnet/minecraft/world/level/block/entity/JigsawBlockEntity$JointType; g
	getName ()Lnet/minecraft/resources/ResourceLocation; c
	getPool ()Lnet/minecraft/resources/ResourceLocation; e
	getPos ()Lnet/minecraft/core/BlockPos; b
	getTarget ()Lnet/minecraft/resources/ResourceLocation; d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundSetStructureBlockPacket vb
	FLAG_IGNORE_ENTITIES a
	FLAG_SHOW_AIR b
	FLAG_SHOW_BOUNDING_BOX c
	data l
	ignoreEntities m
	integrity p
	mirror j
	mode f
	name g
	offset h
	pos d
	rotation k
	seed q
	showAir n
	showBoundingBox o
	size i
	updateType e
	getData ()Ljava/lang/String; j
	getIntegrity ()F n
	getMirror ()Lnet/minecraft/world/level/block/Mirror; h
	getMode ()Lnet/minecraft/world/level/block/state/properties/StructureMode; d
	getName ()Ljava/lang/String; e
	getOffset ()Lnet/minecraft/core/BlockPos; f
	getPos ()Lnet/minecraft/core/BlockPos; b
	getRotation ()Lnet/minecraft/world/level/block/Rotation; i
	getSeed ()J o
	getSize ()Lnet/minecraft/core/Vec3i; g
	getUpdateType ()Lnet/minecraft/world/level/block/entity/StructureBlockEntity$UpdateType; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isIgnoreEntities ()Z k
	isShowAir ()Z l
	isShowBoundingBox ()Z m
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundSignUpdatePacket vc
	MAX_STRING_LENGTH a
	lines c
	pos b
	getLines ()[Ljava/lang/String; c
	getPos ()Lnet/minecraft/core/BlockPos; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundSwingPacket vd
	hand a
	getHand ()Lnet/minecraft/world/InteractionHand; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundTeleportToEntityPacket ve
	uuid a
	getEntity (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/entity/Entity; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundUseItemOnPacket vf
	blockHit a
	hand b
	getHand ()Lnet/minecraft/world/InteractionHand; b
	getHitResult ()Lnet/minecraft/world/phys/BlockHitResult; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundUseItemPacket vg
	hand a
	getHand ()Lnet/minecraft/world/InteractionHand; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/handshake/ClientIntentionPacket vi
	MAX_HOST_LENGTH a
	hostName c
	intention e
	port d
	protocolVersion b
	getHostName ()Ljava/lang/String; d
	getIntention ()Lnet/minecraft/network/ConnectionProtocol; b
	getPort ()I e
	getProtocolVersion ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/handshake/ServerHandshakePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/handshake/ServerHandshakePacketListener vj
	handleIntention (Lnet/minecraft/network/protocol/handshake/ClientIntentionPacket;)V a
net/minecraft/network/protocol/login/ClientLoginPacketListener vl
	handleCompression (Lnet/minecraft/network/protocol/login/ClientboundLoginCompressionPacket;)V a
	handleCustomQuery (Lnet/minecraft/network/protocol/login/ClientboundCustomQueryPacket;)V a
	handleDisconnect (Lnet/minecraft/network/protocol/login/ClientboundLoginDisconnectPacket;)V a
	handleGameProfile (Lnet/minecraft/network/protocol/login/ClientboundGameProfilePacket;)V a
	handleHello (Lnet/minecraft/network/protocol/login/ClientboundHelloPacket;)V a
net/minecraft/network/protocol/login/ClientboundCustomQueryPacket vm
	MAX_PAYLOAD_SIZE a
	data d
	identifier c
	transactionId b
	getData ()Lnet/minecraft/network/FriendlyByteBuf; d
	getIdentifier ()Lnet/minecraft/resources/ResourceLocation; c
	getTransactionId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/login/ClientLoginPacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/login/ClientboundGameProfilePacket vn
	gameProfile a
	getGameProfile ()Lcom/mojang/authlib/GameProfile; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/login/ClientLoginPacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/login/ClientboundHelloPacket vo
	nonce c
	publicKey b
	serverId a
	getNonce ()[B d
	getPublicKey ()Ljava/security/PublicKey; c
	getServerId ()Ljava/lang/String; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/login/ClientLoginPacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/login/ClientboundLoginCompressionPacket vp
	compressionThreshold a
	getCompressionThreshold ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/login/ClientLoginPacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/login/ClientboundLoginDisconnectPacket vq
	reason a
	getReason ()Lnet/minecraft/network/chat/Component; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/login/ClientLoginPacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/login/ServerLoginPacketListener vr
	handleCustomQueryPacket (Lnet/minecraft/network/protocol/login/ServerboundCustomQueryPacket;)V a
	handleHello (Lnet/minecraft/network/protocol/login/ServerboundHelloPacket;)V a
	handleKey (Lnet/minecraft/network/protocol/login/ServerboundKeyPacket;)V a
net/minecraft/network/protocol/login/ServerboundCustomQueryPacket vs
	MAX_PAYLOAD_SIZE a
	data c
	transactionId b
	getData ()Lnet/minecraft/network/FriendlyByteBuf; c
	getTransactionId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/login/ServerLoginPacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/login/ServerboundHelloPacket vt
	gameProfile a
	getGameProfile ()Lcom/mojang/authlib/GameProfile; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/login/ServerLoginPacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/login/ServerboundKeyPacket vu
	keybytes a
	nonce b
	getNonce (Ljava/security/PrivateKey;)[B b
	getSecretKey (Ljava/security/PrivateKey;)Ljavax/crypto/SecretKey; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/login/ServerLoginPacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/status/ClientStatusPacketListener vx
	handlePongResponse (Lnet/minecraft/network/protocol/status/ClientboundPongResponsePacket;)V a
	handleStatusResponse (Lnet/minecraft/network/protocol/status/ClientboundStatusResponsePacket;)V a
net/minecraft/network/protocol/status/ClientboundPongResponsePacket vy
	time a
	getTime ()J b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/status/ClientStatusPacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/status/ClientboundStatusResponsePacket vz
	GSON a
	status b
	getStatus ()Lnet/minecraft/network/protocol/status/ServerStatus; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/status/ClientStatusPacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/status/ServerStatus wa
	FAVICON_HEIGHT b
	FAVICON_WIDTH a
	description c
	favicon f
	players d
	version e
	getDescription ()Lnet/minecraft/network/chat/Component; a
	getFavicon ()Ljava/lang/String; d
	getPlayers ()Lnet/minecraft/network/protocol/status/ServerStatus$Players; b
	getVersion ()Lnet/minecraft/network/protocol/status/ServerStatus$Version; c
	setDescription (Lnet/minecraft/network/chat/Component;)V a
	setFavicon (Ljava/lang/String;)V a
	setPlayers (Lnet/minecraft/network/protocol/status/ServerStatus$Players;)V a
	setVersion (Lnet/minecraft/network/protocol/status/ServerStatus$Version;)V a
net/minecraft/network/protocol/status/ServerStatus$Players wa$a
	maxPlayers a
	numPlayers b
	sample c
	getMaxPlayers ()I a
	getNumPlayers ()I b
	getSample ()[Lcom/mojang/authlib/GameProfile; c
	setSample ([Lcom/mojang/authlib/GameProfile;)V a
net/minecraft/network/protocol/status/ServerStatus$Players$Serializer wa$a$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/network/protocol/status/ServerStatus$Players; a
	serialize (Lnet/minecraft/network/protocol/status/ServerStatus$Players;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/network/protocol/status/ServerStatus$Serializer wa$b
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/network/protocol/status/ServerStatus; a
	serialize (Lnet/minecraft/network/protocol/status/ServerStatus;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/network/protocol/status/ServerStatus$Version wa$c
	name a
	protocol b
	getName ()Ljava/lang/String; a
	getProtocol ()I b
net/minecraft/network/protocol/status/ServerStatus$Version$Serializer wa$c$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/network/protocol/status/ServerStatus$Version; a
	serialize (Lnet/minecraft/network/protocol/status/ServerStatus$Version;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/network/protocol/status/ServerStatusPacketListener wb
	handlePingRequest (Lnet/minecraft/network/protocol/status/ServerboundPingRequestPacket;)V a
	handleStatusRequest (Lnet/minecraft/network/protocol/status/ServerboundStatusRequestPacket;)V a
net/minecraft/network/protocol/status/ServerboundPingRequestPacket wc
	time a
	getTime ()J b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/status/ServerStatusPacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/status/ServerboundStatusRequestPacket wd
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/status/ServerStatusPacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/syncher/EntityDataAccessor wf
	id a
	serializer b
	getId ()I a
	getSerializer ()Lnet/minecraft/network/syncher/EntityDataSerializer; b
net/minecraft/network/syncher/EntityDataSerializer wg
	copy (Ljava/lang/Object;)Ljava/lang/Object; a
	createAccessor (I)Lnet/minecraft/network/syncher/EntityDataAccessor; a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Ljava/lang/Object; a
	write (Lnet/minecraft/network/FriendlyByteBuf;Ljava/lang/Object;)V a
net/minecraft/network/syncher/EntityDataSerializers wh
	BLOCK_POS l
	BLOCK_STATE h
	BOOLEAN i
	BYTE a
	COMPONENT e
	COMPOUND_TAG p
	DIRECTION n
	FLOAT c
	INT b
	ITEM_STACK g
	OPTIONAL_BLOCK_POS m
	OPTIONAL_COMPONENT f
	OPTIONAL_UNSIGNED_INT r
	OPTIONAL_UUID o
	PARTICLE j
	POSE s
	ROTATIONS k
	SERIALIZERS t
	STRING d
	VILLAGER_DATA q
	getSerializedId (Lnet/minecraft/network/syncher/EntityDataSerializer;)I b
	getSerializer (I)Lnet/minecraft/network/syncher/EntityDataSerializer; a
	registerSerializer (Lnet/minecraft/network/syncher/EntityDataSerializer;)V a
net/minecraft/network/syncher/SynchedEntityData wi
	ENTITY_ID_POOL b
	EOF_MARKER c
	LOGGER a
	MAX_ID_VALUE d
	entity e
	isDirty i
	isEmpty h
	itemsById f
	lock g
	assignValue (Lnet/minecraft/network/syncher/SynchedEntityData$DataItem;Lnet/minecraft/network/syncher/SynchedEntityData$DataItem;)V a
	assignValues (Ljava/util/List;)V a
	clearDirty ()V e
	createDataItem (Lnet/minecraft/network/syncher/EntityDataAccessor;Ljava/lang/Object;)V c
	define (Lnet/minecraft/network/syncher/EntityDataAccessor;Ljava/lang/Object;)V a
	defineId (Ljava/lang/Class;Lnet/minecraft/network/syncher/EntityDataSerializer;)Lnet/minecraft/network/syncher/EntityDataAccessor; a
	genericHelper (Lnet/minecraft/network/FriendlyByteBuf;ILnet/minecraft/network/syncher/EntityDataSerializer;)Lnet/minecraft/network/syncher/SynchedEntityData$DataItem; a
	get (Lnet/minecraft/network/syncher/EntityDataAccessor;)Ljava/lang/Object; a
	getAll ()Ljava/util/List; c
	getItem (Lnet/minecraft/network/syncher/EntityDataAccessor;)Lnet/minecraft/network/syncher/SynchedEntityData$DataItem; b
	isDirty ()Z a
	isEmpty ()Z d
	pack (Ljava/util/List;Lnet/minecraft/network/FriendlyByteBuf;)V a
	packDirty ()Ljava/util/List; b
	set (Lnet/minecraft/network/syncher/EntityDataAccessor;Ljava/lang/Object;)V b
	unpack (Lnet/minecraft/network/FriendlyByteBuf;)Ljava/util/List; a
	writeDataItem (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/network/syncher/SynchedEntityData$DataItem;)V a
net/minecraft/network/syncher/SynchedEntityData$DataItem wi$a
	accessor a
	dirty c
	value b
	copy ()Lnet/minecraft/network/syncher/SynchedEntityData$DataItem; d
	getAccessor ()Lnet/minecraft/network/syncher/EntityDataAccessor; a
	getValue ()Ljava/lang/Object; b
	isDirty ()Z c
	setDirty (Z)V a
	setValue (Ljava/lang/Object;)V a
net/minecraft/realms/DisconnectedRealmsScreen fbr
	message b
	parent c
	reason a
	textHeight R
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; af_
	init ()V b
	onClose ()V ah_
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/realms/RealmsConnect fbs
	LOGGER a
	aborted c
	connection d
	onlineScreen b
	abort ()V a
	connect (Lcom/mojang/realmsclient/dto/RealmsServer;Lnet/minecraft/client/multiplayer/resolver/ServerAddress;)V a
	tick ()V b
net/minecraft/realms/RealmsLabel fbt
	color d
	text a
	x b
	y c
	getText ()Lnet/minecraft/network/chat/Component; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/realms/RealmsObjectSelectionList fbu
	addEntry (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)I b
	addEntry (Lnet/minecraft/client/gui/components/ObjectSelectionList$Entry;)I a
	clear ()V a
	getItemCount ()I m
	getMaxPosition ()I c
	getRowLeft ()I r
	getRowTop (I)I h
	getRowWidth ()I d
	getScrollbarPosition ()I e
	itemClicked (IIDDI)V a
	replaceEntries (Ljava/util/Collection;)V a
	selectItem (I)V a
	setSelectedItem (I)V j
net/minecraft/realms/RealmsScreen fbv
	COLOR_BLACK z
	COLOR_BRIGHT_YELLOW B
	COLOR_BUTTON_YELLOW F
	COLOR_DARK_GRAY t
	COLOR_DARK_GREEN w
	COLOR_GRAY s
	COLOR_GREEN v
	COLOR_INFO E
	COLOR_LINK C
	COLOR_LINK_HOVER D
	COLOR_MEDIUM_GRAY u
	COLOR_RED x
	COLOR_RED_FADE y
	COLOR_WHITE r
	COLOR_YELLOW A
	COMPONENT_HEIGHT o
	EXPIRATION_NOTIFICATION_DAYS p
	SIZE_LIMIT q
	SKIN_HAT_HEIGHT O
	SKIN_HAT_U L
	SKIN_HAT_V M
	SKIN_HAT_WIDTH N
	SKIN_HEAD_HEIGHT K
	SKIN_HEAD_U H
	SKIN_HEAD_V I
	SKIN_HEAD_WIDTH J
	SKIN_TEX_HEIGHT Q
	SKIN_TEX_WIDTH P
	TITLE_HEIGHT n
	UPDATE_BREAKS_ADVENTURE_URL G
	labels a
	addLabel (Lnet/minecraft/realms/RealmsLabel;)Lnet/minecraft/realms/RealmsLabel; a
	createLabelNarration ()Lnet/minecraft/network/chat/Component; u
	row (I)I j
net/minecraft/realms/RepeatedNarrator fbw
	params b
	permitsPerSecond a
	narrate (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/realms/RepeatedNarrator$Params fbw$a
	narration a
	rateLimiter b
net/minecraft/recipebook/PlaceRecipe wm
	addItemToSlot (Ljava/util/Iterator;IIII)V a
	placeRecipe (IIILnet/minecraft/world/item/crafting/Recipe;Ljava/util/Iterator;I)V a
net/minecraft/recipebook/ServerPlaceRecipe wn
	LOGGER a
	inventory c
	menu d
	stackedContents b
	addItemToSlot (Ljava/util/Iterator;IIII)V a
	clearGrid (Z)V a
	getAmountOfFreeSlotsInInventory ()I b
	getStackSize (ZIZ)I a
	handleRecipeClicked (Lnet/minecraft/world/item/crafting/Recipe;Z)V a
	moveItemToGrid (Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/item/ItemStack;)V a
	recipeClicked (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/crafting/Recipe;Z)V a
	testClearGrid ()Z a
net/minecraft/resources/DelegatingOps wp
	delegate a
net/minecraft/resources/RegistryDataPackCodec wq
	directCodec a
	elementCodec c
	registryKey b
	create (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Lifecycle;Lcom/mojang/serialization/Codec;)Lnet/minecraft/resources/RegistryDataPackCodec; a
	encode (Lnet/minecraft/core/MappedRegistry;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; a
net/minecraft/resources/RegistryFileCodec wr
	allowInline c
	elementCodec b
	registryKey a
	create (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Codec;)Lnet/minecraft/resources/RegistryFileCodec; a
	create (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Codec;Z)Lnet/minecraft/resources/RegistryFileCodec; a
	encode (Ljava/util/function/Supplier;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; a
	homogeneousList (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; b
net/minecraft/resources/RegistryLookupCodec ws
	registryKey a
	create (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/resources/RegistryLookupCodec; a
	encode (Lnet/minecraft/core/Registry;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/RecordBuilder;)Lcom/mojang/serialization/RecordBuilder; a
net/minecraft/resources/RegistryReadOps wt
	JSON c
	LOGGER b
	jsonOps g
	readCache f
	registryAccess e
	resources d
	create (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/resources/RegistryReadOps$ResourceAccess;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/resources/RegistryReadOps; b
	create (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/resources/RegistryReadOps; b
	createAndLoad (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/resources/RegistryReadOps$ResourceAccess;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/resources/RegistryReadOps; a
	createAndLoad (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/resources/RegistryReadOps; a
	decodeElement (Ljava/lang/Object;Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Codec;Z)Lcom/mojang/serialization/DataResult; a
	decodeElements (Lnet/minecraft/core/MappedRegistry;Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/DataResult; a
	readAndRegisterElement (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/WritableRegistry;Lcom/mojang/serialization/Codec;Lnet/minecraft/resources/ResourceLocation;)Lcom/mojang/serialization/DataResult; a
	readCache (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/resources/RegistryReadOps$ReadCache; b
	registry (Lnet/minecraft/resources/ResourceKey;)Lcom/mojang/serialization/DataResult; a
net/minecraft/resources/RegistryReadOps$ReadCache wt$a
	values a
net/minecraft/resources/RegistryReadOps$ResourceAccess wt$b
	forResourceManager (Lnet/minecraft/server/packs/resources/ResourceManager;)Lnet/minecraft/resources/RegistryReadOps$ResourceAccess; a
	listResources (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Collection; a
	parseElement (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Decoder;)Ljava/util/Optional; a
net/minecraft/resources/RegistryReadOps$ResourceAccess$MemoryMap wt$b$a
	data a
	ids b
	lifecycles c
	add (Lnet/minecraft/core/RegistryAccess$RegistryHolder;Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Encoder;ILjava/lang/Object;Lcom/mojang/serialization/Lifecycle;)V a
	listResources (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Collection; a
	parseElement (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Decoder;)Ljava/util/Optional; a
net/minecraft/resources/RegistryWriteOps wu
	registryAccess b
	create (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/resources/RegistryWriteOps; a
	encode (Ljava/lang/Object;Ljava/lang/Object;Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/DataResult; a
net/minecraft/resources/ResourceKey wv
	VALUES a
	location c
	registryName b
	create (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceKey; a
	create (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceKey; a
	createRegistryKey (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceKey; a
	elementKey (Lnet/minecraft/resources/ResourceKey;)Ljava/util/function/Function; b
	isFor (Lnet/minecraft/resources/ResourceKey;)Z a
	location ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/resources/ResourceLocation ww
	CODEC a
	DEFAULT_NAMESPACE c
	ERROR_INVALID g
	NAMESPACE_SEPARATOR b
	REALMS_NAMESPACE d
	namespace e
	path f
	compareTo (Lnet/minecraft/resources/ResourceLocation;)I a
	decompose (Ljava/lang/String;C)[Ljava/lang/String; b
	getNamespace ()Ljava/lang/String; b
	getPath ()Ljava/lang/String; a
	isAllowedInResourceLocation (C)Z a
	isValidNamespace (Ljava/lang/String;)Z e
	isValidPath (Ljava/lang/String;)Z d
	isValidResourceLocation (Ljava/lang/String;)Z b
	of (Ljava/lang/String;C)Lnet/minecraft/resources/ResourceLocation; a
	read (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/resources/ResourceLocation; a
	read (Ljava/lang/String;)Lcom/mojang/serialization/DataResult; c
	toDebugFileName ()Ljava/lang/String; c
	tryParse (Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	validNamespaceChar (C)Z c
	validPathChar (C)Z b
net/minecraft/resources/ResourceLocation$Serializer ww$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/resources/ResourceLocation; a
	serialize (Lnet/minecraft/resources/ResourceLocation;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/server/Bootstrap wy
	LOGGER c
	STDOUT a
	isBootstrapped b
	bootStrap ()V a
	checkBootstrapCalled (Ljava/util/function/Supplier;)V a
	checkGameruleTranslations (Ljava/util/Set;)V a
	checkTranslations (Ljava/lang/Iterable;Ljava/util/function/Function;Ljava/util/Set;)V a
	createBootstrapException (Ljava/util/function/Supplier;)Ljava/lang/RuntimeException; b
	getMissingTranslations ()Ljava/util/Set; b
	realStdoutPrintln (Ljava/lang/String;)V a
	validate ()V c
	wrapStreams ()V d
net/minecraft/server/ChainedJsonException wz
	entries a
	message b
	forException (Ljava/lang/Exception;)Lnet/minecraft/server/ChainedJsonException; a
	prependJsonKey (Ljava/lang/String;)V a
	setFilenameAndFlush (Ljava/lang/String;)V b
net/minecraft/server/ChainedJsonException$Entry wz$a
	filename a
	jsonKeys b
	addJsonKey (Ljava/lang/String;)V a
	getFilename ()Ljava/lang/String; a
	getJsonKeys ()Ljava/lang/String; b
net/minecraft/server/ConsoleInput xa
	msg a
	source b
net/minecraft/server/DebugLoggedPrintStream xb
	logLine (Ljava/lang/String;)V a
net/minecraft/server/Eula xc
	LOGGER a
	agreed c
	file b
	hasAgreedToEULA ()Z a
	readFile ()Z b
	saveDefaults ()V c
net/minecraft/server/LoggedPrintStream xd
	LOGGER a
	name b
	logLine (Ljava/lang/String;)V a
net/minecraft/server/MinecraftServer$TimeProfiler net/minecraft/server/MinecraftServer$a
	startNanos a
	startTick b
	stop (JI)Lnet/minecraft/util/profiling/ProfileResults; a
net/minecraft/server/PlayerAdvancements xe
	GSON c
	LOGGER a
	TYPE_TOKEN d
	VISIBILITY_DEPTH b
	advancements h
	dataFixer e
	file g
	isFirstPacket n
	lastSelectedTab m
	player l
	playerList f
	progressChanged k
	visibilityChanged j
	visible i
	award (Lnet/minecraft/advancements/Advancement;Ljava/lang/String;)Z a
	checkForAutomaticTriggers (Lnet/minecraft/server/ServerAdvancementManager;)V c
	ensureAllVisible ()V c
	ensureVisibility (Lnet/minecraft/advancements/Advancement;)V e
	flushDirty (Lnet/minecraft/server/level/ServerPlayer;)V b
	getOrStartProgress (Lnet/minecraft/advancements/Advancement;)Lnet/minecraft/advancements/AdvancementProgress; b
	hasCompletedChildrenOrSelf (Lnet/minecraft/advancements/Advancement;)Z g
	load (Lnet/minecraft/server/ServerAdvancementManager;)V d
	registerListeners (Lnet/minecraft/advancements/Advancement;)V c
	registerListeners (Lnet/minecraft/server/ServerAdvancementManager;)V b
	reload (Lnet/minecraft/server/ServerAdvancementManager;)V a
	revoke (Lnet/minecraft/advancements/Advancement;Ljava/lang/String;)Z b
	save ()V b
	setPlayer (Lnet/minecraft/server/level/ServerPlayer;)V a
	setSelectedTab (Lnet/minecraft/advancements/Advancement;)V a
	shouldBeVisible (Lnet/minecraft/advancements/Advancement;)Z f
	startProgress (Lnet/minecraft/advancements/Advancement;Lnet/minecraft/advancements/AdvancementProgress;)V a
	stopListening ()V a
	unregisterListeners (Lnet/minecraft/advancements/Advancement;)V d
net/minecraft/server/RunningOnDifferentThreadException xf
	RUNNING_ON_DIFFERENT_THREAD a
net/minecraft/server/ServerAdvancementManager xg
	GSON b
	LOGGER a
	advancements c
	predicateManager d
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply (Ljava/util/Map;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	getAdvancement (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/Advancement; a
	getAllAdvancements ()Ljava/util/Collection; a
net/minecraft/server/ServerFunctionLibrary xh
	FILE_EXTENSION b
	LOGGER a
	PATH_PREFIX_LENGTH c
	PATH_SUFFIX_LENGTH d
	dispatcher i
	functionCompilationLevel h
	functions e
	tags g
	tagsLoader f
	getFunction (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; a
	getFunctions ()Ljava/util/Map; a
	getTag (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/tags/Tag; b
	getTags ()Lnet/minecraft/tags/TagCollection; b
	readLines (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/resources/ResourceLocation;)Ljava/util/List; a
	reload (Lnet/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/ServerFunctionManager xi
	LOAD_FUNCTION_TAG c
	NO_RECURSIVE_TRACES a
	TICK_FUNCTION_TAG b
	context e
	library h
	postReload g
	server d
	ticking f
	execute (Lnet/minecraft/commands/CommandFunction;Lnet/minecraft/commands/CommandSourceStack;)I a
	execute (Lnet/minecraft/commands/CommandFunction;Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/ServerFunctionManager$TraceCallbacks;)I a
	executeTagFunctions (Ljava/util/Collection;Lnet/minecraft/resources/ResourceLocation;)V a
	get (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; a
	getCommandLimit ()I a
	getDispatcher ()Lcom/mojang/brigadier/CommandDispatcher; b
	getFunctionNames ()Ljava/lang/Iterable; e
	getGameLoopSender ()Lnet/minecraft/commands/CommandSourceStack; d
	getTag (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/tags/Tag; b
	getTagNames ()Ljava/lang/Iterable; f
	postReload (Lnet/minecraft/server/ServerFunctionLibrary;)V b
	replaceLibrary (Lnet/minecraft/server/ServerFunctionLibrary;)V a
	tick ()V c
net/minecraft/server/ServerFunctionManager$ExecutionContext xi$a
	commandQueue d
	depth b
	nestedCalls e
	tracer c
	delayFunctionCall (Lnet/minecraft/commands/CommandFunction;Lnet/minecraft/commands/CommandSourceStack;)V a
	reportError (Ljava/lang/String;)V a
	runTopCommand (Lnet/minecraft/commands/CommandFunction;Lnet/minecraft/commands/CommandSourceStack;)I b
net/minecraft/server/ServerFunctionManager$QueuedCommand xi$b
	depth b
	entry c
	sender a
	execute (Lnet/minecraft/server/ServerFunctionManager;Ljava/util/Deque;ILnet/minecraft/server/ServerFunctionManager$TraceCallbacks;)V a
net/minecraft/server/ServerFunctionManager$TraceCallbacks xi$c
	onCall (ILnet/minecraft/resources/ResourceLocation;I)V a
	onCommand (ILjava/lang/String;)V a
	onError (ILjava/lang/String;)V b
	onReturn (ILjava/lang/String;I)V a
net/minecraft/server/ServerInterface xj
	getLevelIdName ()Ljava/lang/String; s
	getMaxPlayers ()I K
	getPlayerCount ()I J
	getPlayerNames ()[Ljava/lang/String; L
	getPluginNames ()Ljava/lang/String; t
	getProperties ()Lnet/minecraft/server/dedicated/DedicatedServerProperties; a
	getServerIp ()Ljava/lang/String; b
	getServerName ()Ljava/lang/String; q
	getServerPort ()I d
	getServerVersion ()Ljava/lang/String; I
	runCommand (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/server/ServerResources xk
	DATA_RELOAD_INITIAL_TASK a
	advancements i
	commands c
	functionLibrary j
	itemModifierManager h
	lootTables g
	predicateManager f
	recipes d
	resources b
	tagManager e
	getAdvancements ()Lnet/minecraft/server/ServerAdvancementManager; h
	getCommands ()Lnet/minecraft/commands/Commands; g
	getFunctionLibrary ()Lnet/minecraft/server/ServerFunctionLibrary; a
	getItemModifierManager ()Lnet/minecraft/world/level/storage/loot/ItemModifierManager; d
	getLootTables ()Lnet/minecraft/world/level/storage/loot/LootTables; c
	getPredicateManager ()Lnet/minecraft/world/level/storage/loot/PredicateManager; b
	getRecipeManager ()Lnet/minecraft/world/item/crafting/RecipeManager; f
	getResourceManager ()Lnet/minecraft/server/packs/resources/ResourceManager; i
	getTags ()Lnet/minecraft/tags/TagContainer; e
	loadResources (Ljava/util/List;Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/commands/Commands$CommandSelection;ILjava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
	updateGlobals ()V j
net/minecraft/server/ServerScoreboard xl
	dirtyListeners j
	server h
	trackedObjectives i
	addDirtyListener (Ljava/lang/Runnable;)V a
	addPlayerToTeam (Ljava/lang/String;Lnet/minecraft/world/scores/PlayerTeam;)Z a
	createData ()Lnet/minecraft/world/scores/ScoreboardSaveData; b
	createData (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/scores/ScoreboardSaveData; a
	getObjectiveDisplaySlotCount (Lnet/minecraft/world/scores/Objective;)I h
	getStartTrackingPackets (Lnet/minecraft/world/scores/Objective;)Ljava/util/List; d
	getStopTrackingPackets (Lnet/minecraft/world/scores/Objective;)Ljava/util/List; f
	onObjectiveAdded (Lnet/minecraft/world/scores/Objective;)V a
	onObjectiveChanged (Lnet/minecraft/world/scores/Objective;)V b
	onObjectiveRemoved (Lnet/minecraft/world/scores/Objective;)V c
	onPlayerRemoved (Ljava/lang/String;)V a
	onPlayerScoreRemoved (Ljava/lang/String;Lnet/minecraft/world/scores/Objective;)V a
	onScoreChanged (Lnet/minecraft/world/scores/Score;)V a
	onTeamAdded (Lnet/minecraft/world/scores/PlayerTeam;)V a
	onTeamChanged (Lnet/minecraft/world/scores/PlayerTeam;)V b
	onTeamRemoved (Lnet/minecraft/world/scores/PlayerTeam;)V c
	removePlayerFromTeam (Ljava/lang/String;Lnet/minecraft/world/scores/PlayerTeam;)V b
	setDirty ()V a
	setDisplayObjective (ILnet/minecraft/world/scores/Objective;)V a
	startTrackingObjective (Lnet/minecraft/world/scores/Objective;)V e
	stopTrackingObjective (Lnet/minecraft/world/scores/Objective;)V g
net/minecraft/server/ServerScoreboard$Method xl$a
	$VALUES c
	CHANGE a
	REMOVE b
	$values ()[Lnet/minecraft/server/ServerScoreboard$Method; a
net/minecraft/server/TickTask xm
	runnable b
	tick a
	getTick ()I a
net/minecraft/server/bossevents/CustomBossEvent xn
	id h
	max k
	players i
	value j
	addOfflinePlayer (Ljava/util/UUID;)V a
	addPlayer (Lnet/minecraft/server/level/ServerPlayer;)V a
	getDisplayName ()Lnet/minecraft/network/chat/Component; e
	getMax ()I d
	getTextId ()Lnet/minecraft/resources/ResourceLocation; a
	getValue ()I c
	load (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/server/bossevents/CustomBossEvent; a
	onPlayerConnect (Lnet/minecraft/server/level/ServerPlayer;)V c
	onPlayerDisconnect (Lnet/minecraft/server/level/ServerPlayer;)V d
	removeAllPlayers ()V b
	removePlayer (Lnet/minecraft/server/level/ServerPlayer;)V b
	save ()Lnet/minecraft/nbt/CompoundTag; f
	setMax (I)V b
	setPlayers (Ljava/util/Collection;)Z a
	setValue (I)V a
net/minecraft/server/bossevents/CustomBossEvents xo
	events a
	create (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/server/bossevents/CustomBossEvent; a
	get (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/server/bossevents/CustomBossEvent; a
	getEvents ()Ljava/util/Collection; b
	getIds ()Ljava/util/Collection; a
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	onPlayerConnect (Lnet/minecraft/server/level/ServerPlayer;)V a
	onPlayerDisconnect (Lnet/minecraft/server/level/ServerPlayer;)V b
	remove (Lnet/minecraft/server/bossevents/CustomBossEvent;)V a
	save ()Lnet/minecraft/nbt/CompoundTag; c
net/minecraft/server/commands/AdvancementCommands xq
	SUGGEST_ADVANCEMENTS a
	addChildren (Lnet/minecraft/advancements/Advancement;Ljava/util/List;)V a
	getAdvancements (Lnet/minecraft/advancements/Advancement;Lnet/minecraft/server/commands/AdvancementCommands$Mode;)Ljava/util/List; a
	perform (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/server/commands/AdvancementCommands$Action;Ljava/util/Collection;)I a
	performCriterion (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/server/commands/AdvancementCommands$Action;Lnet/minecraft/advancements/Advancement;Ljava/lang/String;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/AdvancementCommands$Action xq$a
	$VALUES d
	GRANT a
	REVOKE b
	key c
	$values ()[Lnet/minecraft/server/commands/AdvancementCommands$Action; b
	getKey ()Ljava/lang/String; a
	perform (Lnet/minecraft/server/level/ServerPlayer;Ljava/lang/Iterable;)I a
	perform (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/advancements/Advancement;)Z a
	performCriterion (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/advancements/Advancement;Ljava/lang/String;)Z a
net/minecraft/server/commands/AdvancementCommands$Mode xq$b
	$VALUES h
	EVERYTHING e
	FROM c
	ONLY a
	THROUGH b
	UNTIL d
	children g
	parents f
	$values ()[Lnet/minecraft/server/commands/AdvancementCommands$Mode; a
net/minecraft/server/commands/AttributeCommand xr
	AVAILABLE_ATTRIBUTES a
	ERROR_MODIFIER_ALREADY_PRESENT e
	ERROR_NOT_LIVING_ENTITY b
	ERROR_NO_SUCH_ATTRIBUTE c
	ERROR_NO_SUCH_MODIFIER d
	addModifier (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/ai/attributes/Attribute;Ljava/util/UUID;Ljava/lang/String;DLnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation;)I a
	getAttributeBase (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/ai/attributes/Attribute;D)I b
	getAttributeInstance (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/ai/attributes/Attribute;)Lnet/minecraft/world/entity/ai/attributes/AttributeInstance; a
	getAttributeModifier (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/ai/attributes/Attribute;Ljava/util/UUID;D)I a
	getAttributeValue (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/ai/attributes/Attribute;D)I a
	getEntityWithAttribute (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/ai/attributes/Attribute;)Lnet/minecraft/world/entity/LivingEntity; b
	getLivingEntity (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/entity/LivingEntity; a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	removeModifier (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/ai/attributes/Attribute;Ljava/util/UUID;)I a
	setAttributeBase (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/ai/attributes/Attribute;D)I c
net/minecraft/server/commands/BanIpCommands xs
	ERROR_ALREADY_BANNED c
	ERROR_INVALID_IP b
	IP_ADDRESS_PATTERN a
	banIp (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;Lnet/minecraft/network/chat/Component;)I b
	banIpOrName (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;Lnet/minecraft/network/chat/Component;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/BanListCommands xt
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	showList (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
net/minecraft/server/commands/BanPlayerCommands xu
	ERROR_ALREADY_BANNED a
	banPlayers (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/network/chat/Component;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/BossBarCommands xv
	ERROR_ALREADY_EXISTS b
	ERROR_ALREADY_HIDDEN j
	ERROR_ALREADY_VISIBLE k
	ERROR_DOESNT_EXIST c
	ERROR_NO_COLOR_CHANGE f
	ERROR_NO_MAX_CHANGE i
	ERROR_NO_NAME_CHANGE e
	ERROR_NO_PLAYER_CHANGE d
	ERROR_NO_STYLE_CHANGE g
	ERROR_NO_VALUE_CHANGE h
	SUGGEST_BOSS_BAR a
	createBar (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/chat/Component;)I a
	getBossBar (Lcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/server/bossevents/CustomBossEvent; a
	getMax (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;)I b
	getPlayers (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;)I d
	getValue (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;)I a
	getVisible (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;)I c
	listBars (Lnet/minecraft/commands/CommandSourceStack;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	removeBar (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;)I e
	setColor (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;Lnet/minecraft/world/BossEvent$BossBarColor;)I a
	setMax (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;I)I b
	setName (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;Lnet/minecraft/network/chat/Component;)I a
	setPlayers (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;Ljava/util/Collection;)I a
	setStyle (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;Lnet/minecraft/world/BossEvent$BossBarOverlay;)I a
	setValue (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;I)I a
	setVisible (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;Z)I a
net/minecraft/server/commands/ClearInventoryCommands xw
	ERROR_MULTIPLE b
	ERROR_SINGLE a
	clearInventory (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Ljava/util/function/Predicate;I)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/CloneCommands xx
	ERROR_AREA_TOO_LARGE d
	ERROR_FAILED e
	ERROR_OVERLAP c
	FILTER_AIR a
	MAX_CLONE_AREA b
	clone (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;Lnet/minecraft/server/commands/CloneCommands$Mode;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/CloneCommands$CloneBlockInfo xx$a
	pos a
	state b
	tag c
net/minecraft/server/commands/CloneCommands$Mode xx$b
	$VALUES e
	FORCE a
	MOVE b
	NORMAL c
	canOverlap d
	$values ()[Lnet/minecraft/server/commands/CloneCommands$Mode; b
	canOverlap ()Z a
net/minecraft/server/commands/DataPackCommand xy
	ERROR_PACK_ALREADY_DISABLED c
	ERROR_PACK_ALREADY_ENABLED b
	ERROR_UNKNOWN_PACK a
	SELECTED_PACKS d
	UNSELECTED_PACKS e
	disablePack (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/packs/repository/Pack;)I a
	enablePack (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/packs/repository/Pack;Lnet/minecraft/server/commands/DataPackCommand$Inserter;)I a
	getPack (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Z)Lnet/minecraft/server/packs/repository/Pack; a
	listAvailablePacks (Lnet/minecraft/commands/CommandSourceStack;)I b
	listEnabledPacks (Lnet/minecraft/commands/CommandSourceStack;)I c
	listPacks (Lnet/minecraft/commands/CommandSourceStack;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/DataPackCommand$Inserter xy$a
net/minecraft/server/commands/DeOpCommands xz
	ERROR_NOT_OP a
	deopPlayers (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/DebugCommand ya
	ERROR_ALREADY_RUNNING c
	ERROR_NOT_RUNNING b
	LOGGER a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	start (Lnet/minecraft/commands/CommandSourceStack;)I a
	stop (Lnet/minecraft/commands/CommandSourceStack;)I b
	traceFunction (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
net/minecraft/server/commands/DebugCommand$Tracer ya$a
	INDENT_OFFSET b
	lastIndent d
	output c
	waitingForResult e
	acceptsFailure ()Z i_
	acceptsSuccess ()Z h_
	alwaysAccepts ()Z c_
	indentAndSave (I)V a
	newLine ()V e
	onCall (ILnet/minecraft/resources/ResourceLocation;I)V a
	onCommand (ILjava/lang/String;)V a
	onError (ILjava/lang/String;)V b
	onReturn (ILjava/lang/String;I)V a
	printIndent (I)V b
	sendMessage (Lnet/minecraft/network/chat/Component;Ljava/util/UUID;)V a
	shouldInformAdmins ()Z E_
net/minecraft/server/commands/DebugMobSpawningCommand yb
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	spawnMobs (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/core/BlockPos;)I a
net/minecraft/server/commands/DebugPathCommand yc
	ERROR_NOT_COMPLETE c
	ERROR_NOT_MOB a
	ERROR_NO_PATH b
	fillBlocks (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/DefaultGameModeCommands yd
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setMode (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/level/GameType;)I a
net/minecraft/server/commands/DifficultyCommand ye
	ERROR_ALREADY_DIFFICULT a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setDifficulty (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/Difficulty;)I a
net/minecraft/server/commands/EffectCommands yf
	ERROR_CLEAR_EVERYTHING_FAILED b
	ERROR_CLEAR_SPECIFIC_FAILED c
	ERROR_GIVE_FAILED a
	clearEffect (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/effect/MobEffect;)I a
	clearEffects (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	giveEffect (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/effect/MobEffect;Ljava/lang/Integer;IZ)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/EmoteCommands yg
	createMessage (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/EnchantCommand yh
	ERROR_INCOMPATIBLE c
	ERROR_LEVEL_TOO_HIGH d
	ERROR_NOTHING_HAPPENED e
	ERROR_NOT_LIVING_ENTITY a
	ERROR_NO_ITEM b
	enchant (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/item/enchantment/Enchantment;I)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/ExecuteCommand yi
	CALLBACK_CHAINER e
	ERROR_AREA_TOO_LARGE b
	ERROR_CONDITIONAL_FAILED c
	ERROR_CONDITIONAL_FAILED_COUNT d
	MAX_TEST_AREA a
	SUGGEST_PREDICATE f
	addConditional (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/ArgumentBuilder;ZLnet/minecraft/server/commands/ExecuteCommand$CommandPredicate;)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
	addConditionals (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;Z)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
	addIfBlocksConditional (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/ArgumentBuilder;ZZ)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
	checkCustomPredicate (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Z a
	checkIfRegions (Lcom/mojang/brigadier/context/CommandContext;Z)I a
	checkMatchingData (Lnet/minecraft/server/commands/data/DataAccessor;Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;)I a
	checkRegions (Lcom/mojang/brigadier/context/CommandContext;Z)Ljava/util/OptionalInt; c
	checkRegions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Z)Ljava/util/OptionalInt; a
	checkScore (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/function/BiPredicate;)Z a
	checkScore (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Z a
	checkUnlessRegions (Lcom/mojang/brigadier/context/CommandContext;Z)I b
	createNumericConditionalHandler (ZLnet/minecraft/server/commands/ExecuteCommand$CommandNumericPredicate;)Lcom/mojang/brigadier/Command; a
	expect (Lcom/mojang/brigadier/context/CommandContext;ZZ)Ljava/util/Collection; a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	storeData (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/commands/data/DataAccessor;Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;Ljava/util/function/IntFunction;Z)Lnet/minecraft/commands/CommandSourceStack; a
	storeValue (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/scores/Objective;Z)Lnet/minecraft/commands/CommandSourceStack; a
	storeValue (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;ZZ)Lnet/minecraft/commands/CommandSourceStack; a
	wrapStores (Lcom/mojang/brigadier/tree/LiteralCommandNode;Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;Z)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
net/minecraft/server/commands/ExecuteCommand$CommandNumericPredicate yi$a
net/minecraft/server/commands/ExecuteCommand$CommandPredicate yi$b
net/minecraft/server/commands/ExperienceCommand yj
	ERROR_SET_POINTS_INVALID a
	addExperience (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;ILnet/minecraft/server/commands/ExperienceCommand$Type;)I a
	queryExperience (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/server/commands/ExperienceCommand$Type;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setExperience (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;ILnet/minecraft/server/commands/ExperienceCommand$Type;)I b
net/minecraft/server/commands/ExperienceCommand$Type yj$a
	$VALUES g
	LEVELS b
	POINTS a
	add c
	name e
	query f
	set d
	$values ()[Lnet/minecraft/server/commands/ExperienceCommand$Type; a
net/minecraft/server/commands/FillCommand yk
	ERROR_AREA_TOO_LARGE b
	ERROR_FAILED d
	HOLLOW_CORE c
	MAX_FILL_AREA a
	fillBlocks (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/commands/arguments/blocks/BlockInput;Lnet/minecraft/server/commands/FillCommand$Mode;Ljava/util/function/Predicate;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/FillCommand$Mode yk$a
	$VALUES f
	DESTROY d
	HOLLOW c
	OUTLINE b
	REPLACE a
	filter e
	$values ()[Lnet/minecraft/server/commands/FillCommand$Mode; a
net/minecraft/server/commands/ForceLoadCommand yl
	ERROR_ALL_ADDED d
	ERROR_NONE_REMOVED e
	ERROR_NOT_TICKING c
	ERROR_TOO_MANY_CHUNKS b
	MAX_CHUNK_LIMIT a
	changeForceLoad (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/level/ColumnPos;Lnet/minecraft/server/level/ColumnPos;Z)I a
	listForceLoad (Lnet/minecraft/commands/CommandSourceStack;)I a
	queryForceLoad (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/level/ColumnPos;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	removeAll (Lnet/minecraft/commands/CommandSourceStack;)I b
net/minecraft/server/commands/FunctionCommand ym
	SUGGEST_FUNCTION a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	runFunction (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
net/minecraft/server/commands/GameModeCommand yn
	PERMISSION_LEVEL a
	logGamemodeChange (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/GameType;)V a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setMode (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/Collection;Lnet/minecraft/world/level/GameType;)I a
net/minecraft/server/commands/GameRuleCommand yo
	queryRule (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/level/GameRules$Key;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setRule (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/world/level/GameRules$Key;)I a
net/minecraft/server/commands/GiveCommand yp
	MAX_ALLOWED_ITEMSTACKS a
	giveItem (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/commands/arguments/item/ItemInput;Ljava/util/Collection;I)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/HelpCommand yq
	ERROR_FAILED a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/ItemCommands yr
	ERROR_SOURCE_INAPPLICABLE_SLOT d
	ERROR_SOURCE_NOT_A_CONTAINER c
	ERROR_TARGET_INAPPLICABLE_SLOT b
	ERROR_TARGET_NOT_A_CONTAINER a
	ERROR_TARGET_NO_CHANGES e
	ERROR_TARGET_NO_CHANGES_KNOWN_ITEM f
	SUGGEST_MODIFIER g
	applyModifier (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	blockToBlock (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;ILnet/minecraft/core/BlockPos;I)I a
	blockToBlock (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;ILnet/minecraft/core/BlockPos;ILnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)I a
	blockToEntities (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;ILjava/util/Collection;I)I a
	blockToEntities (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;ILjava/util/Collection;ILnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)I a
	entityToBlock (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;ILnet/minecraft/core/BlockPos;I)I a
	entityToBlock (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;ILnet/minecraft/core/BlockPos;ILnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)I a
	entityToEntities (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;ILjava/util/Collection;I)I a
	entityToEntities (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;ILjava/util/Collection;ILnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)I a
	getBlockItem (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;I)Lnet/minecraft/world/item/ItemStack; a
	getContainer (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;Lcom/mojang/brigadier/exceptions/Dynamic3CommandExceptionType;)Lnet/minecraft/world/Container; a
	getEntityItem (Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/world/item/ItemStack; a
	modifyBlockItem (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)I a
	modifyEntityItem (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;ILnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setBlockItem (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/item/ItemStack;)I a
	setEntityItem (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;ILnet/minecraft/world/item/ItemStack;)I a
net/minecraft/server/commands/KickCommand ys
	kickPlayers (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/network/chat/Component;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/KillCommand yt
	kill (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/ListPlayersCommand yu
	format (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/function/Function;)I a
	listPlayers (Lnet/minecraft/commands/CommandSourceStack;)I a
	listPlayersWithUuids (Lnet/minecraft/commands/CommandSourceStack;)I b
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/LocateBiomeCommand yv
	ERROR_BIOME_NOT_FOUND b
	ERROR_INVALID_BIOME a
	MAX_SEARCH_RADIUS c
	SEARCH_STEP d
	locateBiome (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/resources/ResourceLocation;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/LocateCommand yw
	ERROR_FAILED a
	dist (IIII)F a
	locate (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	showLocateResult (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Ljava/lang/String;)I a
net/minecraft/server/commands/LootCommand yx
	ERROR_NO_HELD_ITEMS b
	ERROR_NO_LOOT_TABLE c
	SUGGEST_LOOT_TABLE a
	addTargets (Lcom/mojang/brigadier/builder/ArgumentBuilder;Lnet/minecraft/server/commands/LootCommand$TailProvider;)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
	blockDistribute (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;Ljava/util/List;Lnet/minecraft/server/commands/LootCommand$Callback;)I a
	blockReplace (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;IILjava/util/List;Lnet/minecraft/server/commands/LootCommand$Callback;)I a
	callback (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/List;)V a
	callback (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/List;Lnet/minecraft/resources/ResourceLocation;)V a
	canMergeItems (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	distributeToContainer (Lnet/minecraft/world/Container;Lnet/minecraft/world/item/ItemStack;)Z a
	drop (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/server/commands/LootCommand$DropConsumer;)I a
	dropBlockLoot (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/server/commands/LootCommand$DropConsumer;)I a
	dropChestLoot (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/server/commands/LootCommand$DropConsumer;)I a
	dropFishingLoot (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/server/commands/LootCommand$DropConsumer;)I a
	dropInWorld (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/phys/Vec3;Ljava/util/List;Lnet/minecraft/server/commands/LootCommand$Callback;)I a
	dropKillLoot (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/server/commands/LootCommand$DropConsumer;)I a
	entityReplace (Ljava/util/Collection;IILjava/util/List;Lnet/minecraft/server/commands/LootCommand$Callback;)I a
	getContainer (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/Container; a
	getSourceHandItem (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/item/ItemStack; a
	playerGive (Ljava/util/Collection;Ljava/util/List;Lnet/minecraft/server/commands/LootCommand$Callback;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setSlots (Lnet/minecraft/world/entity/Entity;Ljava/util/List;IILjava/util/List;)V a
net/minecraft/server/commands/LootCommand$Callback yx$a
net/minecraft/server/commands/LootCommand$DropConsumer yx$b
net/minecraft/server/commands/LootCommand$TailProvider yx$c
net/minecraft/server/commands/MsgCommand yy
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	sendMessage (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/network/chat/Component;)I a
net/minecraft/server/commands/OpCommand yz
	ERROR_ALREADY_OP a
	opPlayers (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/PardonCommand za
	ERROR_NOT_BANNED a
	pardonPlayers (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/PardonIpCommand zb
	ERROR_INVALID a
	ERROR_NOT_BANNED b
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	unban (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;)I a
net/minecraft/server/commands/ParticleCommand zc
	ERROR_FAILED a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	sendParticles (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;FIZLjava/util/Collection;)I a
net/minecraft/server/commands/PerfCommand zd
	ERROR_ALREADY_RUNNING c
	ERROR_NOT_RUNNING b
	LOGGER a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	saveResults (Lnet/minecraft/commands/CommandSourceStack;Ljava/nio/file/Path;Lnet/minecraft/server/MinecraftServer;)V a
	startProfilingDedicatedServer (Lnet/minecraft/commands/CommandSourceStack;)I a
	stopProfilingDedicatedServer (Lnet/minecraft/commands/CommandSourceStack;)I b
	whenStopped (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/util/profiling/ProfileResults;)V a
net/minecraft/server/commands/PlaySoundCommand ze
	ERROR_TOO_FAR a
	playSound (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/sounds/SoundSource;Lnet/minecraft/world/phys/Vec3;FFF)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	source (Lnet/minecraft/sounds/SoundSource;)Lcom/mojang/brigadier/builder/LiteralArgumentBuilder; a
net/minecraft/server/commands/PublishCommand zf
	ERROR_ALREADY_PUBLISHED b
	ERROR_FAILED a
	publish (Lnet/minecraft/commands/CommandSourceStack;I)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/RaidCommand zg
	check (Lnet/minecraft/commands/CommandSourceStack;)I d
	getRaid (Lnet/minecraft/server/level/ServerPlayer;)Lnet/minecraft/world/entity/raid/Raid; a
	glow (Lnet/minecraft/commands/CommandSourceStack;)I a
	playSound (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/network/chat/Component;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setBadOmenLevel (Lnet/minecraft/commands/CommandSourceStack;I)I a
	spawnLeader (Lnet/minecraft/commands/CommandSourceStack;)I b
	start (Lnet/minecraft/commands/CommandSourceStack;I)I b
	stop (Lnet/minecraft/commands/CommandSourceStack;)I c
net/minecraft/server/commands/RecipeCommand zh
	ERROR_GIVE_FAILED a
	ERROR_TAKE_FAILED b
	giveRecipes (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Ljava/util/Collection;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	takeRecipes (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Ljava/util/Collection;)I b
net/minecraft/server/commands/ReloadCommand zi
	LOGGER a
	discoverNewPacks (Lnet/minecraft/server/packs/repository/PackRepository;Lnet/minecraft/world/level/storage/WorldData;Ljava/util/Collection;)Ljava/util/Collection; a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	reloadPacks (Ljava/util/Collection;Lnet/minecraft/commands/CommandSourceStack;)V a
net/minecraft/server/commands/SaveAllCommand zj
	ERROR_FAILED a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	saveAll (Lnet/minecraft/commands/CommandSourceStack;Z)I a
net/minecraft/server/commands/SaveOffCommand zk
	ERROR_ALREADY_OFF a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/SaveOnCommand zl
	ERROR_ALREADY_ON a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/SayCommand zm
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/ScheduleCommand zn
	ERROR_CANT_REMOVE b
	ERROR_SAME_TICK a
	SUGGEST_SCHEDULE c
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	remove (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;)I a
	schedule (Lnet/minecraft/commands/CommandSourceStack;Lcom/mojang/datafixers/util/Pair;IZ)I a
net/minecraft/server/commands/ScoreboardCommand zo
	ERROR_DISPLAY_SLOT_ALREADY_EMPTY b
	ERROR_DISPLAY_SLOT_ALREADY_SET c
	ERROR_NOT_TRIGGER e
	ERROR_NO_VALUE f
	ERROR_OBJECTIVE_ALREADY_EXISTS a
	ERROR_TRIGGER_ALREADY_ENABLED d
	addObjective (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;Lnet/minecraft/world/scores/criteria/ObjectiveCriteria;Lnet/minecraft/network/chat/Component;)I a
	addScore (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/scores/Objective;I)I b
	clearDisplaySlot (Lnet/minecraft/commands/CommandSourceStack;I)I a
	createRenderTypeModify ()Lcom/mojang/brigadier/builder/LiteralArgumentBuilder; a
	enableTrigger (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/scores/Objective;)I a
	getScore (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;Lnet/minecraft/world/scores/Objective;)I a
	listObjectives (Lnet/minecraft/commands/CommandSourceStack;)I b
	listTrackedPlayerScores (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;)I a
	listTrackedPlayers (Lnet/minecraft/commands/CommandSourceStack;)I a
	performOperation (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/scores/Objective;Lnet/minecraft/commands/arguments/OperationArgument$Operation;Ljava/util/Collection;Lnet/minecraft/world/scores/Objective;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	removeObjective (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/Objective;)I a
	removeScore (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/scores/Objective;I)I c
	resetScore (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/scores/Objective;)I b
	resetScores (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	setDisplayName (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/Objective;Lnet/minecraft/network/chat/Component;)I a
	setDisplaySlot (Lnet/minecraft/commands/CommandSourceStack;ILnet/minecraft/world/scores/Objective;)I a
	setRenderType (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/Objective;Lnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType;)I a
	setScore (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/scores/Objective;I)I a
	suggestTriggers (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/commands/SeedCommand zp
	register (Lcom/mojang/brigadier/CommandDispatcher;Z)V a
net/minecraft/server/commands/SetBlockCommand zq
	ERROR_FAILED a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setBlock (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;Lnet/minecraft/commands/arguments/blocks/BlockInput;Lnet/minecraft/server/commands/SetBlockCommand$Mode;Ljava/util/function/Predicate;)I a
net/minecraft/server/commands/SetBlockCommand$Filter zq$a
net/minecraft/server/commands/SetBlockCommand$Mode zq$b
	$VALUES c
	DESTROY b
	REPLACE a
	$values ()[Lnet/minecraft/server/commands/SetBlockCommand$Mode; a
net/minecraft/server/commands/SetPlayerIdleTimeoutCommand zr
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setIdleTimeout (Lnet/minecraft/commands/CommandSourceStack;I)I a
net/minecraft/server/commands/SetSpawnCommand zs
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setSpawn (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/core/BlockPos;F)I a
net/minecraft/server/commands/SetWorldSpawnCommand zt
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setSpawn (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;F)I a
net/minecraft/server/commands/SpectateCommand zu
	ERROR_NOT_SPECTATOR b
	ERROR_SELF a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	spectate (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/server/level/ServerPlayer;)I a
net/minecraft/server/commands/SpreadPlayersCommand zv
	ERROR_FAILED_TO_SPREAD_ENTITIES c
	ERROR_FAILED_TO_SPREAD_TEAMS b
	MAX_ITERATION_COUNT a
	createInitialPositions (Ljava/util/Random;IDDDD)[Lnet/minecraft/server/commands/SpreadPlayersCommand$Position; a
	getNumberOfTeams (Ljava/util/Collection;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setPlayerPositions (Ljava/util/Collection;Lnet/minecraft/server/level/ServerLevel;[Lnet/minecraft/server/commands/SpreadPlayersCommand$Position;IZ)D a
	spreadPlayers (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/phys/Vec2;FFIZLjava/util/Collection;)I a
	spreadPositions (Lnet/minecraft/world/phys/Vec2;DLnet/minecraft/server/level/ServerLevel;Ljava/util/Random;DDDDI[Lnet/minecraft/server/commands/SpreadPlayersCommand$Position;Z)V a
net/minecraft/server/commands/SpreadPlayersCommand$Position zv$a
	x a
	z b
	clamp (DDDD)Z a
	dist (Lnet/minecraft/server/commands/SpreadPlayersCommand$Position;)D a
	getLength ()D b
	getSpawnY (Lnet/minecraft/world/level/BlockGetter;I)I a
	isSafe (Lnet/minecraft/world/level/BlockGetter;I)Z b
	moveAway (Lnet/minecraft/server/commands/SpreadPlayersCommand$Position;)V b
	normalize ()V a
	randomize (Ljava/util/Random;DDDD)V a
net/minecraft/server/commands/StopCommand zw
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/StopSoundCommand zx
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	stopSound (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/sounds/SoundSource;Lnet/minecraft/resources/ResourceLocation;)I a
net/minecraft/server/commands/SummonCommand zy
	ERROR_DUPLICATE_UUID b
	ERROR_FAILED a
	INVALID_POSITION c
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	spawnEntity (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/nbt/CompoundTag;Z)I a
net/minecraft/server/commands/TagCommand zz
	ERROR_ADD_FAILED a
	ERROR_REMOVE_FAILED b
	addTag (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Ljava/lang/String;)I a
	getTags (Ljava/util/Collection;)Ljava/util/Collection; a
	listTags (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	removeTag (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Ljava/lang/String;)I b
net/minecraft/server/commands/TeamCommand aaa
	ERROR_TEAM_ALREADY_COLOR e
	ERROR_TEAM_ALREADY_EMPTY c
	ERROR_TEAM_ALREADY_EXISTS a
	ERROR_TEAM_ALREADY_FRIENDLYFIRE_DISABLED g
	ERROR_TEAM_ALREADY_FRIENDLYFIRE_ENABLED f
	ERROR_TEAM_ALREADY_FRIENDLYINVISIBLES_DISABLED i
	ERROR_TEAM_ALREADY_FRIENDLYINVISIBLES_ENABLED h
	ERROR_TEAM_ALREADY_NAME d
	ERROR_TEAM_COLLISION_UNCHANGED l
	ERROR_TEAM_DEATH_MESSAGE_VISIBLITY_UNCHANGED k
	ERROR_TEAM_NAMETAG_VISIBLITY_UNCHANGED j
	ERROR_TEAM_NAME_TOO_LONG b
	createTeam (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;)I a
	createTeam (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;Lnet/minecraft/network/chat/Component;)I a
	deleteTeam (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;)I b
	emptyTeam (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;)I a
	joinTeam (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Ljava/util/Collection;)I a
	leaveTeam (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	listMembers (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;)I c
	listTeams (Lnet/minecraft/commands/CommandSourceStack;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setCollision (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Lnet/minecraft/world/scores/Team$CollisionRule;)I a
	setColor (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Lnet/minecraft/ChatFormatting;)I a
	setDeathMessageVisibility (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Lnet/minecraft/world/scores/Team$Visibility;)I b
	setDisplayName (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Lnet/minecraft/network/chat/Component;)I a
	setFriendlyFire (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Z)I b
	setFriendlySight (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Z)I a
	setNametagVisibility (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Lnet/minecraft/world/scores/Team$Visibility;)I a
	setPrefix (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Lnet/minecraft/network/chat/Component;)I b
	setSuffix (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Lnet/minecraft/network/chat/Component;)I c
net/minecraft/server/commands/TeamMsgCommand aab
	ERROR_NOT_ON_TEAM b
	SUGGEST_STYLE a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	sendMessage (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/network/chat/Component;)I a
net/minecraft/server/commands/TeleportCommand aac
	INVALID_POSITION a
	formatDouble (D)Ljava/lang/String; a
	performTeleport (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/server/level/ServerLevel;DDDLjava/util/Set;FFLnet/minecraft/server/commands/TeleportCommand$LookAt;)V a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	teleportToEntity (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/entity/Entity;)I a
	teleportToPos (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/commands/arguments/coordinates/Coordinates;Lnet/minecraft/commands/arguments/coordinates/Coordinates;Lnet/minecraft/server/commands/TeleportCommand$LookAt;)I a
net/minecraft/server/commands/TeleportCommand$LookAt aac$a
	anchor c
	entity b
	position a
	perform (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/server/commands/TellRawCommand aad
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/TimeCommand aae
	addTime (Lnet/minecraft/commands/CommandSourceStack;I)I b
	getDayTime (Lnet/minecraft/server/level/ServerLevel;)I a
	queryTime (Lnet/minecraft/commands/CommandSourceStack;I)I c
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setTime (Lnet/minecraft/commands/CommandSourceStack;I)I a
net/minecraft/server/commands/TitleCommand aaf
	clearTitle (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	resetTitle (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I b
	setTimes (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;III)I a
	showTitle (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/network/chat/Component;Ljava/lang/String;Ljava/util/function/Function;)I a
net/minecraft/server/commands/TriggerCommand aag
	ERROR_INVALID_OBJECTIVE b
	ERROR_NOT_PRIMED a
	addValue (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/Score;I)I a
	getScore (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/scores/Objective;)Lnet/minecraft/world/scores/Score; a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setValue (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/Score;I)I b
	simpleTrigger (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/Score;)I a
	suggestObjectives (Lnet/minecraft/commands/CommandSourceStack;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/commands/WeatherCommand aah
	DEFAULT_TIME a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setClear (Lnet/minecraft/commands/CommandSourceStack;I)I a
	setRain (Lnet/minecraft/commands/CommandSourceStack;I)I b
	setThunder (Lnet/minecraft/commands/CommandSourceStack;I)I c
net/minecraft/server/commands/WhitelistCommand aai
	ERROR_ALREADY_DISABLED b
	ERROR_ALREADY_ENABLED a
	ERROR_ALREADY_WHITELISTED c
	ERROR_NOT_WHITELISTED d
	addPlayers (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	disableWhitelist (Lnet/minecraft/commands/CommandSourceStack;)I c
	enableWhitelist (Lnet/minecraft/commands/CommandSourceStack;)I b
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	reload (Lnet/minecraft/commands/CommandSourceStack;)I a
	removePlayers (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I b
	showList (Lnet/minecraft/commands/CommandSourceStack;)I d
net/minecraft/server/commands/WorldBorderCommand aaj
	ERROR_SAME_CENTER a
	ERROR_SAME_DAMAGE_AMOUNT h
	ERROR_SAME_DAMAGE_BUFFER g
	ERROR_SAME_SIZE b
	ERROR_SAME_WARNING_DISTANCE f
	ERROR_SAME_WARNING_TIME e
	ERROR_TOO_BIG d
	ERROR_TOO_SMALL c
	getSize (Lnet/minecraft/commands/CommandSourceStack;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setCenter (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/phys/Vec2;)I a
	setDamageAmount (Lnet/minecraft/commands/CommandSourceStack;F)I b
	setDamageBuffer (Lnet/minecraft/commands/CommandSourceStack;F)I a
	setSize (Lnet/minecraft/commands/CommandSourceStack;DJ)I a
	setWarningDistance (Lnet/minecraft/commands/CommandSourceStack;I)I b
	setWarningTime (Lnet/minecraft/commands/CommandSourceStack;I)I a
net/minecraft/server/commands/data/BlockDataAccessor aak
	ERROR_NOT_A_BLOCK_ENTITY b
	PROVIDER a
	entity c
	pos d
	getData ()Lnet/minecraft/nbt/CompoundTag; a
	getModifiedSuccess ()Lnet/minecraft/network/chat/Component; b
	getPrintSuccess (Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;DI)Lnet/minecraft/network/chat/Component; a
	getPrintSuccess (Lnet/minecraft/nbt/Tag;)Lnet/minecraft/network/chat/Component; a
	setData (Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/server/commands/data/DataAccessor aal
	getData ()Lnet/minecraft/nbt/CompoundTag; a
	getModifiedSuccess ()Lnet/minecraft/network/chat/Component; b
	getPrintSuccess (Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;DI)Lnet/minecraft/network/chat/Component; a
	getPrintSuccess (Lnet/minecraft/nbt/Tag;)Lnet/minecraft/network/chat/Component; a
	setData (Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/server/commands/data/DataCommands aam
	ALL_PROVIDERS a
	ERROR_EXPECTED_LIST h
	ERROR_EXPECTED_OBJECT i
	ERROR_GET_NON_EXISTENT f
	ERROR_GET_NOT_NUMBER e
	ERROR_INVALID_INDEX j
	ERROR_MERGE_UNCHANGED d
	ERROR_MULTIPLE_TAGS g
	SOURCE_PROVIDERS c
	TARGET_PROVIDERS b
	decorateModification (Ljava/util/function/BiConsumer;)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
	getData (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/commands/data/DataAccessor;)I a
	getData (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/commands/data/DataAccessor;Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;)I b
	getNumeric (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/commands/data/DataAccessor;Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;D)I a
	getSingleTag (Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;Lnet/minecraft/server/commands/data/DataAccessor;)Lnet/minecraft/nbt/Tag; a
	insertAtIndex (ILnet/minecraft/nbt/CompoundTag;Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;Ljava/util/List;)I a
	manipulateData (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/commands/data/DataCommands$DataProvider;Lnet/minecraft/server/commands/data/DataCommands$DataManipulator;Ljava/util/List;)I a
	mergeData (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/commands/data/DataAccessor;Lnet/minecraft/nbt/CompoundTag;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	removeData (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/commands/data/DataAccessor;Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;)I a
net/minecraft/server/commands/data/DataCommands$DataManipulator aam$a
net/minecraft/server/commands/data/DataCommands$DataManipulatorDecorator aam$b
net/minecraft/server/commands/data/DataCommands$DataProvider aam$c
	access (Lcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/server/commands/data/DataAccessor; a
	wrap (Lcom/mojang/brigadier/builder/ArgumentBuilder;Ljava/util/function/Function;)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
net/minecraft/server/commands/data/EntityDataAccessor aan
	ERROR_NO_PLAYERS b
	PROVIDER a
	entity c
	getData ()Lnet/minecraft/nbt/CompoundTag; a
	getModifiedSuccess ()Lnet/minecraft/network/chat/Component; b
	getPrintSuccess (Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;DI)Lnet/minecraft/network/chat/Component; a
	getPrintSuccess (Lnet/minecraft/nbt/Tag;)Lnet/minecraft/network/chat/Component; a
	setData (Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/server/commands/data/StorageDataAccessor aao
	PROVIDER a
	SUGGEST_STORAGE b
	id d
	storage c
	getData ()Lnet/minecraft/nbt/CompoundTag; a
	getGlobalTags (Lcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/world/level/storage/CommandStorage; a
	getModifiedSuccess ()Lnet/minecraft/network/chat/Component; b
	getPrintSuccess (Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;DI)Lnet/minecraft/network/chat/Component; a
	getPrintSuccess (Lnet/minecraft/nbt/Tag;)Lnet/minecraft/network/chat/Component; a
	setData (Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/server/dedicated/DedicatedPlayerList aar
	LOGGER a
	canBypassPlayerLimit (Lcom/mojang/authlib/GameProfile;)Z d
	deop (Lcom/mojang/authlib/GameProfile;)V b
	getServer ()Lnet/minecraft/server/MinecraftServer; c
	getServer ()Lnet/minecraft/server/dedicated/DedicatedServer; b
	isWhiteListed (Lcom/mojang/authlib/GameProfile;)Z c
	loadIpBanList ()V x
	loadOps ()V z
	loadUserBanList ()V y
	loadWhiteList ()V B
	op (Lcom/mojang/authlib/GameProfile;)V a
	reloadWhiteList ()V a
	saveIpBanList ()V v
	saveOps ()V A
	saveUserBanList ()V w
	saveWhiteList ()V C
	setUsingWhiteList (Z)V a
net/minecraft/server/dedicated/DedicatedServer aas
	CONVERSION_RETRIES r
	CONVERSION_RETRY_DELAY_MS q
	LOGGER p
	SHA1 s
	consoleInput t
	gui y
	queryThreadGs4 u
	rconConsoleSource v
	rconThread w
	resourcePackPrompt A
	settings x
	textFilterClient z
	areNpcsEnabled ()Z Z
	convertOldUsers ()Z bj
	createTextFilterForPlayer (Lnet/minecraft/server/level/ServerPlayer;)Lnet/minecraft/server/network/TextFilter; a
	dumpServerProperties (Ljava/nio/file/Path;)V a
	fillServerSystemReport (Lnet/minecraft/SystemReport;)Lnet/minecraft/SystemReport; a
	forceDifficulty ()V r
	forceSynchronousWrites ()Z aU
	getAbsoluteMaxWorldSize ()I at
	getCompressionThreshold ()I aw
	getForcedGameType ()Lnet/minecraft/world/level/GameType; aZ
	getFunctionCompilationLevel ()I i
	getLevelIdName ()Ljava/lang/String; s
	getMaxTickLength ()J bk
	getModdedStatus ()Ljava/util/Optional; p
	getOperatorUserPermissionLevel ()I h
	getPackHash ()Ljava/lang/String; bf
	getPlayerList ()Lnet/minecraft/server/dedicated/DedicatedPlayerList; bh
	getPlayerList ()Lnet/minecraft/server/players/PlayerList; ae
	getPluginNames ()Ljava/lang/String; t
	getProperties ()Lnet/minecraft/server/dedicated/DedicatedServerProperties; a
	getRateLimitPacketsPerSecond ()I l
	getResourcePackPrompt ()Lnet/minecraft/network/chat/Component; bb
	getScaledTrackingDistance (I)I b
	getServerIp ()Ljava/lang/String; b
	getServerName ()Ljava/lang/String; q
	getServerPort ()I d
	getSpawnProtectionRadius ()I ak
	handleConsoleInput (Ljava/lang/String;Lnet/minecraft/commands/CommandSourceStack;)V a
	handleConsoleInputs ()V bg
	hasGui ()Z ah
	initServer ()Z e
	isCommandBlockEnabled ()Z n
	isDedicatedServer ()Z k
	isEpollEnabled ()Z m
	isHardcore ()Z g
	isNetherEnabled ()Z D
	isPublished ()Z o
	isResourcePackRequired ()Z aY
	isSingleplayerOwner (Lcom/mojang/authlib/GameProfile;)Z a
	isSnooperEnabled ()Z V
	isSpawningAnimals ()Z Y
	isSpawningMonsters ()Z R
	isUnderSpawnProtection (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)Z a
	onServerExit ()V f
	parseResourcePackPrompt (Lnet/minecraft/server/dedicated/DedicatedServerSettings;)Lnet/minecraft/network/chat/Component; a
	populateSnooper (Lnet/minecraft/world/Snooper;)V a
	repliesToStatus ()Z al
	runCommand (Ljava/lang/String;)Ljava/lang/String; a
	setPlayerIdleTimeout (I)V c
	shouldInformAdmins ()Z E_
	shouldRconBroadcast ()Z j
	showGui ()V bi
	stopServer ()V u
	storeUsingWhiteList (Z)V i
	tickChildren (Ljava/util/function/BooleanSupplier;)V b
	waitForRetry ()V bt
net/minecraft/server/dedicated/DedicatedServerProperties aat
	allowFlight g
	allowNether A
	announcePlayerAchievements r
	broadcastConsoleToOps O
	broadcastRconToOps N
	difficulty n
	enableCommandBlock E
	enableJmxMonitoring R
	enableQuery s
	enableRcon u
	enableStatus S
	enforceWhitelist m
	entityBroadcastRangePercentage T
	forceGameMode l
	functionPermissionLevel H
	gamemode o
	hardcore z
	levelName p
	maxPlayers L
	maxTickTime I
	maxWorldSize P
	motd k
	networkCompressionThreshold M
	onlineMode a
	opPermissionLevel G
	playerIdleTimeout V
	preventProxyConnections b
	pvp f
	queryPort t
	rateLimitPacketsPerSecond J
	rconPassword w
	rconPort v
	requireResourcePack i
	resourcePack h
	resourcePackHash x
	resourcePackPrompt j
	resourcePackSha1 y
	serverIp c
	serverPort q
	snooperEnabled C
	spawnAnimals d
	spawnMonsters B
	spawnNpcs e
	spawnProtection F
	syncChunkWrites Q
	textFilteringConfig U
	useNativeTransport D
	viewDistance K
	whiteList W
	worldGenSettings Y
	fromFile (Ljava/nio/file/Path;)Lnet/minecraft/server/dedicated/DedicatedServerProperties; a
	getWorldGenSettings (Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/level/levelgen/WorldGenSettings; a
	reload (Lnet/minecraft/core/RegistryAccess;Ljava/util/Properties;)Lnet/minecraft/server/dedicated/DedicatedServerProperties; a
	reload (Lnet/minecraft/core/RegistryAccess;Ljava/util/Properties;)Lnet/minecraft/server/dedicated/Settings; b
net/minecraft/server/dedicated/DedicatedServerSettings aau
	properties b
	source a
	forceSave ()V b
	getProperties ()Lnet/minecraft/server/dedicated/DedicatedServerProperties; a
	update (Ljava/util/function/UnaryOperator;)Lnet/minecraft/server/dedicated/DedicatedServerSettings; a
net/minecraft/server/dedicated/ServerWatchdog aav
	LOGGER a
	MAX_SHUTDOWN_TIME b
	SHUTDOWN_STATUS c
	maxTickTime e
	server d
	exit ()V a
net/minecraft/server/dedicated/Settings aaw
	LOGGER a
	properties X
	cloneProperties ()Ljava/util/Properties; a
	dispatchNumberOrString (Ljava/util/function/IntFunction;Ljava/util/function/Function;)Ljava/util/function/Function; a
	get (Ljava/lang/String;I)I a
	get (Ljava/lang/String;J)J a
	get (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; a
	get (Ljava/lang/String;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object; a
	get (Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object; a
	get (Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/UnaryOperator;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object; a
	get (Ljava/lang/String;Ljava/util/function/UnaryOperator;I)I a
	get (Ljava/lang/String;Z)Z a
	getLegacy (Ljava/lang/String;Ljava/util/function/Function;)Ljava/lang/Object; a
	getLegacyBoolean (Ljava/lang/String;)Ljava/lang/Boolean; b
	getLegacyString (Ljava/lang/String;)Ljava/lang/String; a
	getMutable (Ljava/lang/String;I)Lnet/minecraft/server/dedicated/Settings$MutableValue; b
	getMutable (Ljava/lang/String;Ljava/util/function/Function;Ljava/lang/Object;)Lnet/minecraft/server/dedicated/Settings$MutableValue; b
	getMutable (Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Lnet/minecraft/server/dedicated/Settings$MutableValue; b
	getMutable (Ljava/lang/String;Z)Lnet/minecraft/server/dedicated/Settings$MutableValue; b
	getStringRaw (Ljava/lang/String;)Ljava/lang/String; c
	loadFromFile (Ljava/nio/file/Path;)Ljava/util/Properties; b
	reload (Lnet/minecraft/core/RegistryAccess;Ljava/util/Properties;)Lnet/minecraft/server/dedicated/Settings; b
	store (Ljava/nio/file/Path;)V c
	wrapNumberDeserializer (Ljava/util/function/Function;)Ljava/util/function/Function; a
net/minecraft/server/dedicated/Settings$MutableValue aaw$a
	key b
	serializer d
	value c
	update (Lnet/minecraft/core/RegistryAccess;Ljava/lang/Object;)Lnet/minecraft/server/dedicated/Settings; a
net/minecraft/server/gui/MinecraftServerGui aay
	LOGGER b
	MONOSPACED a
	SHUTDOWN_TITLE d
	TITLE c
	finalizers g
	isClosing h
	logAppenderThread f
	server e
	addFinalizer (Ljava/lang/Runnable;)V a
	buildChatPanel ()Ljavax/swing/JComponent; e
	buildInfoPanel ()Ljavax/swing/JComponent; c
	buildPlayerPanel ()Ljavax/swing/JComponent; d
	close ()V b
	print (Ljavax/swing/JTextArea;Ljavax/swing/JScrollPane;Ljava/lang/String;)V a
	runFinalizers ()V f
	showFrameFor (Lnet/minecraft/server/dedicated/DedicatedServer;)Lnet/minecraft/server/gui/MinecraftServerGui; a
	start ()V a
net/minecraft/server/gui/PlayerListComponent aaz
	server a
	tickCount b
	tick ()V a
net/minecraft/server/gui/StatsComponent aba
	DECIMAL_FORMAT a
	msgs d
	server e
	timer f
	values b
	vp c
	close ()V a
	getAverage ([J)D a
	tick ()V b
net/minecraft/server/level/BlockDestructionProgress abc
	id a
	pos b
	progress c
	updatedRenderTick d
	compareTo (Lnet/minecraft/server/level/BlockDestructionProgress;)I a
	getId ()I a
	getPos ()Lnet/minecraft/core/BlockPos; b
	getProgress ()I c
	getUpdatedRenderTick ()I d
	setProgress (I)V a
	updateTick (I)V b
net/minecraft/server/level/ChunkHolder abd
	BLOCKS_BEFORE_RESEND_FUDGE g
	CHUNK_STATUSES e
	FULL_CHUNK_STATUSES f
	UNLOADED_CHUNK a
	UNLOADED_CHUNK_FUTURE b
	UNLOADED_LEVEL_CHUNK c
	UNLOADED_LEVEL_CHUNK_FUTURE d
	blockChangedLightSectionFilter u
	changedBlocksPerSection t
	chunkToSave m
	chunkToSaveHistory n
	entityTickingChunkFuture l
	fullChunkFuture j
	futures h
	hasChangedSections s
	levelHeightAccessor i
	lightEngine w
	oldTicketLevel o
	onLevelChange x
	pendingFullStateConfirmation B
	playerProvider y
	pos r
	queueLevel q
	resendLight A
	skyChangedLightSectionFilter v
	ticketLevel p
	tickingChunkFuture k
	wasAccessibleSinceLastSave z
	blockChanged (Lnet/minecraft/core/BlockPos;)V a
	broadcast (Lnet/minecraft/network/protocol/Packet;Z)V a
	broadcastBlockEntity (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	broadcastBlockEntityIfNeeded (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	broadcastChanges (Lnet/minecraft/world/level/chunk/LevelChunk;)V a
	demoteFullChunk (Lnet/minecraft/server/level/ChunkMap;Lnet/minecraft/server/level/ChunkHolder$FullChunkStatus;)V a
	getChunkToSave ()Ljava/util/concurrent/CompletableFuture; g
	getEntityTickingChunkFuture ()Ljava/util/concurrent/CompletableFuture; b
	getFullChunkFuture ()Ljava/util/concurrent/CompletableFuture; c
	getFullChunkStatus (I)Lnet/minecraft/server/level/ChunkHolder$FullChunkStatus; c
	getFullStatus ()Lnet/minecraft/server/level/ChunkHolder$FullChunkStatus; h
	getFutureIfPresent (Lnet/minecraft/world/level/chunk/ChunkStatus;)Ljava/util/concurrent/CompletableFuture; b
	getFutureIfPresentUnchecked (Lnet/minecraft/world/level/chunk/ChunkStatus;)Ljava/util/concurrent/CompletableFuture; a
	getLastAvailable ()Lnet/minecraft/world/level/chunk/ChunkAccess; f
	getLastAvailableStatus ()Lnet/minecraft/world/level/chunk/ChunkStatus; e
	getOrScheduleFuture (Lnet/minecraft/world/level/chunk/ChunkStatus;Lnet/minecraft/server/level/ChunkMap;)Ljava/util/concurrent/CompletableFuture; a
	getPos ()Lnet/minecraft/world/level/ChunkPos; i
	getQueueLevel ()I k
	getStatus (I)Lnet/minecraft/world/level/chunk/ChunkStatus; b
	getTicketLevel ()I j
	getTickingChunk ()Lnet/minecraft/world/level/chunk/LevelChunk; d
	getTickingChunkFuture ()Ljava/util/concurrent/CompletableFuture; a
	refreshAccessibility ()V m
	replaceProtoChunk (Lnet/minecraft/world/level/chunk/ImposterProtoChunk;)V a
	scheduleFullChunkPromotion (Lnet/minecraft/server/level/ChunkMap;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/Executor;Lnet/minecraft/server/level/ChunkHolder$FullChunkStatus;)V a
	sectionLightChanged (Lnet/minecraft/world/level/LightLayer;I)V a
	setQueueLevel (I)V d
	setTicketLevel (I)V a
	updateChunkToSave (Ljava/util/concurrent/CompletableFuture;Ljava/lang/String;)V a
	updateFutures (Lnet/minecraft/server/level/ChunkMap;Ljava/util/concurrent/Executor;)V a
	wasAccessibleSinceLastSave ()Z l
net/minecraft/server/level/ChunkHolder$ChunkLoadingFailure abd$a
	UNLOADED b
net/minecraft/server/level/ChunkHolder$ChunkSaveDebug abd$b
	future b
	source c
	thread a
net/minecraft/server/level/ChunkHolder$FullChunkStatus abd$c
	$VALUES e
	BORDER b
	ENTITY_TICKING d
	INACCESSIBLE a
	TICKING c
	$values ()[Lnet/minecraft/server/level/ChunkHolder$FullChunkStatus; a
	isOrAfter (Lnet/minecraft/server/level/ChunkHolder$FullChunkStatus;)Z a
net/minecraft/server/level/ChunkHolder$LevelChangeListener abd$d
	onLevelChange (Lnet/minecraft/world/level/ChunkPos;Ljava/util/function/IntSupplier;ILjava/util/function/IntConsumer;)V a
net/minecraft/server/level/ChunkHolder$PlayerProvider abd$e
	getPlayers (Lnet/minecraft/world/level/ChunkPos;Z)Ljava/util/stream/Stream; a
net/minecraft/server/level/ChunkMap abe
	CHUNK_SAVED_PER_TICK i
	CHUNK_TYPE_FULL g
	CHUNK_TYPE_REPLACEABLE e
	CHUNK_TYPE_UNKNOWN f
	FORCED_TICKET_LEVEL c
	LOGGER h
	MAX_CHUNK_DISTANCE b
	MAX_VIEW_DISTANCE a
	MIN_VIEW_DISTANCE j
	chunkStatusListener A
	chunkTypeCache H
	distanceManager B
	entitiesInLevel n
	entityMap G
	generator r
	level o
	lightEngine p
	mainThreadExecutor q
	mainThreadMailbox y
	modified v
	overworldDataStorage s
	pendingUnloads m
	playerMap F
	poiManager t
	progressListener z
	queueSorter w
	storageFolder E
	structureManager D
	tickingGenerated C
	toDrop u
	unloadQueue I
	updatingChunkMap k
	viewDistance J
	visibleChunkMap l
	worldgenMailbox x
	addEntity (Lnet/minecraft/world/entity/Entity;)V a
	broadcast (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/protocol/Packet;)V a
	broadcastAndSend (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/protocol/Packet;)V b
	checkerboardDistance (Lnet/minecraft/world/level/ChunkPos;II)I a
	checkerboardDistance (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/server/level/ServerPlayer;Z)I a
	checkerboardDistance (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/entity/Entity;)I b
	dumpChunks (Ljava/io/Writer;)V a
	euclideanDistanceSquared (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/entity/Entity;)D a
	getChunkDebugData (Lnet/minecraft/world/level/ChunkPos;)Ljava/lang/String; a
	getChunkQueueLevel (J)Ljava/util/function/IntSupplier; c
	getChunkRangeFuture (Lnet/minecraft/world/level/ChunkPos;ILjava/util/function/IntFunction;)Ljava/util/concurrent/CompletableFuture; a
	getChunks ()Ljava/lang/Iterable; f
	getDependencyStatus (Lnet/minecraft/world/level/chunk/ChunkStatus;I)Lnet/minecraft/world/level/chunk/ChunkStatus; a
	getDistanceManager ()Lnet/minecraft/server/level/DistanceManager; e
	getLightEngine ()Lnet/minecraft/server/level/ThreadedLevelLightEngine; a
	getPlayers (Lnet/minecraft/world/level/ChunkPos;Z)Ljava/util/stream/Stream; a
	getPoiManager ()Lnet/minecraft/world/entity/ai/village/poi/PoiManager; h
	getTickingGenerated ()I c
	getUpdatingChunkIfPresent (J)Lnet/minecraft/server/level/ChunkHolder; a
	getVisibleChunkIfPresent (J)Lnet/minecraft/server/level/ChunkHolder; b
	isExistingChunkFull (Lnet/minecraft/world/level/ChunkPos;)Z h
	markPosition (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/ChunkStatus$ChunkType;)B a
	markPositionReplaceable (Lnet/minecraft/world/level/ChunkPos;)V g
	move (Lnet/minecraft/server/level/ServerPlayer;)V a
	noPlayersCloseForSpawning (Lnet/minecraft/world/level/ChunkPos;)Z d
	onFullChunkStatusChange (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/server/level/ChunkHolder$FullChunkStatus;)V a
	packTicks (Lnet/minecraft/world/level/chunk/LevelChunk;)Ljava/util/concurrent/CompletableFuture; a
	playerLoadedChunk (Lnet/minecraft/server/level/ServerPlayer;[Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/world/level/chunk/LevelChunk;)V a
	postLoadProtoChunk (Lnet/minecraft/server/level/ServerLevel;Ljava/util/List;)V a
	prepareAccessibleChunk (Lnet/minecraft/server/level/ChunkHolder;)Ljava/util/concurrent/CompletableFuture; b
	prepareEntityTickingChunk (Lnet/minecraft/world/level/ChunkPos;)Ljava/util/concurrent/CompletableFuture; b
	prepareTickingChunk (Lnet/minecraft/server/level/ChunkHolder;)Ljava/util/concurrent/CompletableFuture; a
	printFuture (Ljava/util/concurrent/CompletableFuture;)Ljava/lang/String; a
	processUnloads (Ljava/util/function/BooleanSupplier;)V b
	promoteChunkMap ()Z b
	protoChunkToFullChunk (Lnet/minecraft/server/level/ChunkHolder;)Ljava/util/concurrent/CompletableFuture; c
	readChunk (Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/nbt/CompoundTag; i
	releaseLightTicket (Lnet/minecraft/world/level/ChunkPos;)V c
	removeEntity (Lnet/minecraft/world/entity/Entity;)V b
	save (Lnet/minecraft/world/level/chunk/ChunkAccess;)Z a
	saveAllChunks (Z)V a
	schedule (Lnet/minecraft/server/level/ChunkHolder;Lnet/minecraft/world/level/chunk/ChunkStatus;)Ljava/util/concurrent/CompletableFuture; a
	scheduleChunkGeneration (Lnet/minecraft/server/level/ChunkHolder;Lnet/minecraft/world/level/chunk/ChunkStatus;)Ljava/util/concurrent/CompletableFuture; b
	scheduleChunkLoad (Lnet/minecraft/world/level/ChunkPos;)Ljava/util/concurrent/CompletableFuture; f
	scheduleUnload (JLnet/minecraft/server/level/ChunkHolder;)V a
	setViewDistance (I)V a
	size ()I d
	skipPlayer (Lnet/minecraft/server/level/ServerPlayer;)Z b
	tick ()V g
	tick (Ljava/util/function/BooleanSupplier;)V a
	updateChunkScheduling (JILnet/minecraft/server/level/ChunkHolder;I)Lnet/minecraft/server/level/ChunkHolder; a
	updateChunkTracking (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/ChunkPos;[Lnet/minecraft/network/protocol/Packet;ZZ)V a
	updatePlayerPos (Lnet/minecraft/server/level/ServerPlayer;)Lnet/minecraft/core/SectionPos; c
	updatePlayerStatus (Lnet/minecraft/server/level/ServerPlayer;Z)V a
net/minecraft/server/level/ChunkMap$DistanceManager abe$a
	getChunk (J)Lnet/minecraft/server/level/ChunkHolder; b
	isChunkToRemove (J)Z a
	updateChunkScheduling (JILnet/minecraft/server/level/ChunkHolder;I)Lnet/minecraft/server/level/ChunkHolder; a
net/minecraft/server/level/ChunkMap$TrackedEntity abe$b
	entity c
	lastSectionPos e
	range d
	seenBy f
	serverEntity b
	broadcast (Lnet/minecraft/network/protocol/Packet;)V a
	broadcastAndSend (Lnet/minecraft/network/protocol/Packet;)V b
	broadcastRemoved ()V a
	getEffectiveRange ()I b
	removePlayer (Lnet/minecraft/server/level/ServerPlayer;)V a
	scaledRange (I)I a
	updatePlayer (Lnet/minecraft/server/level/ServerPlayer;)V b
	updatePlayers (Ljava/util/List;)V a
net/minecraft/server/level/ChunkTaskPriorityQueue abf
	PRIORITY_LEVEL_COUNT a
	acquired e
	firstQueue c
	maxTasks f
	name d
	taskQueue b
	acquire (J)Ljava/lang/Runnable; a
	getAcquired ()Lit/unimi/dsi/fastutil/longs/LongSet; b
	pop ()Ljava/util/stream/Stream; a
	release (JZ)V a
	resortChunkTasks (ILnet/minecraft/world/level/ChunkPos;I)V a
	submit (Ljava/util/Optional;JI)V a
net/minecraft/server/level/ChunkTaskPriorityQueueSorter abg
	LOGGER a
	mailbox d
	queues b
	sleeping c
	getDebugStatus ()Ljava/lang/String; a
	getProcessor (Lnet/minecraft/util/thread/ProcessorHandle;Z)Lnet/minecraft/util/thread/ProcessorHandle; a
	getQueue (Lnet/minecraft/util/thread/ProcessorHandle;)Lnet/minecraft/server/level/ChunkTaskPriorityQueue; b
	getReleaseProcessor (Lnet/minecraft/util/thread/ProcessorHandle;)Lnet/minecraft/util/thread/ProcessorHandle; a
	message (Ljava/lang/Runnable;JLjava/util/function/IntSupplier;)Lnet/minecraft/server/level/ChunkTaskPriorityQueueSorter$Message; a
	message (Ljava/util/function/Function;JLjava/util/function/IntSupplier;)Lnet/minecraft/server/level/ChunkTaskPriorityQueueSorter$Message; a
	message (Lnet/minecraft/server/level/ChunkHolder;Ljava/lang/Runnable;)Lnet/minecraft/server/level/ChunkTaskPriorityQueueSorter$Message; a
	message (Lnet/minecraft/server/level/ChunkHolder;Ljava/util/function/Function;)Lnet/minecraft/server/level/ChunkTaskPriorityQueueSorter$Message; a
	onLevelChange (Lnet/minecraft/world/level/ChunkPos;Ljava/util/function/IntSupplier;ILjava/util/function/IntConsumer;)V a
	pollTask (Lnet/minecraft/server/level/ChunkTaskPriorityQueue;Lnet/minecraft/util/thread/ProcessorHandle;)V a
	release (Ljava/lang/Runnable;JZ)Lnet/minecraft/server/level/ChunkTaskPriorityQueueSorter$Release; a
	release (Lnet/minecraft/util/thread/ProcessorHandle;JLjava/lang/Runnable;Z)V a
	submit (Lnet/minecraft/util/thread/ProcessorHandle;Ljava/util/function/Function;JLjava/util/function/IntSupplier;Z)V a
net/minecraft/server/level/ChunkTaskPriorityQueueSorter$Message abg$a
	level c
	pos b
	task a
net/minecraft/server/level/ChunkTaskPriorityQueueSorter$Release abg$b
	clearQueue c
	pos b
	task a
net/minecraft/server/level/ChunkTracker abh
	checkNeighborsAfterUpdate (JIZ)V a
	computeLevelFromNeighbor (JJI)I b
	getComputedLevel (JJI)I a
	getLevelFromSource (J)I b
	isSource (J)Z a
	update (JIZ)V b
net/minecraft/server/level/ColumnPos abi
	COORD_BITS c
	COORD_MASK d
	HASH_A e
	HASH_C f
	HASH_Z_XOR g
	x a
	z b
	asLong (II)J a
	toChunkPos ()Lnet/minecraft/world/level/ChunkPos; a
	toLong ()J b
net/minecraft/server/level/DemoMode abj
	DEMO_DAYS a
	TOTAL_PLAY_TICKS b
	demoEndedReminder g
	demoHasEnded f
	displayedIntro e
	gameModeTicks h
	handleBlockBreakAction (Lnet/minecraft/core/BlockPos;Lnet/minecraft/network/protocol/game/ServerboundPlayerActionPacket$Action;Lnet/minecraft/core/Direction;I)V a
	outputDemoReminder ()V f
	tick ()V a
	useItem (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	useItemOn (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/server/level/DistanceManager abk
	ENTITY_TICKING_RANGE b
	INITIAL_TICKET_LIST_CAPACITY d
	LOGGER a
	PLAYER_TICKET_LEVEL c
	chunksToUpdateFutures j
	mainThreadExecutor o
	naturalSpawnChunkCounter h
	playerTicketManager i
	playersPerChunk e
	ticketThrottler k
	ticketThrottlerInput l
	ticketThrottlerReleaser m
	ticketTickCounter p
	ticketTracker g
	tickets f
	ticketsToRelease n
	addPlayer (Lnet/minecraft/core/SectionPos;Lnet/minecraft/server/level/ServerPlayer;)V a
	addRegionTicket (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkPos;ILjava/lang/Object;)V c
	addTicket (JLnet/minecraft/server/level/Ticket;)V a
	addTicket (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkPos;ILjava/lang/Object;)V a
	dumpTickets (Ljava/lang/String;)V a
	getChunk (J)Lnet/minecraft/server/level/ChunkHolder; b
	getDebugStatus ()Ljava/lang/String; c
	getNaturalSpawnChunkCount ()I b
	getTicketDebugString (J)Ljava/lang/String; c
	getTicketLevelAt (Lnet/minecraft/util/SortedArraySet;)I a
	getTickets (J)Lnet/minecraft/util/SortedArraySet; e
	hasPlayersNearby (J)Z d
	isChunkToRemove (J)Z a
	purgeStaleTickets ()V a
	removePlayer (Lnet/minecraft/core/SectionPos;Lnet/minecraft/server/level/ServerPlayer;)V b
	removeRegionTicket (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkPos;ILjava/lang/Object;)V d
	removeTicket (JLnet/minecraft/server/level/Ticket;)V b
	removeTicket (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkPos;ILjava/lang/Object;)V b
	runAllUpdates (Lnet/minecraft/server/level/ChunkMap;)Z a
	updateChunkForced (Lnet/minecraft/world/level/ChunkPos;Z)V a
	updateChunkScheduling (JILnet/minecraft/server/level/ChunkHolder;I)Lnet/minecraft/server/level/ChunkHolder; a
	updatePlayerTickets (I)V a
net/minecraft/server/level/DistanceManager$ChunkTicketTracker abk$a
	getLevel (J)I c
	getLevelFromSource (J)I b
	runDistanceUpdates (I)I a
	setLevel (JI)V a
net/minecraft/server/level/DistanceManager$FixedPlayerDistanceChunkTracker abk$b
	chunks a
	maxDistance b
	dumpChunks (Ljava/lang/String;)V a
	getLevel (J)I c
	getLevelFromSource (J)I b
	havePlayer (J)Z d
	onLevelChange (JII)V a
	runAllUpdates ()V a
	setLevel (JI)V a
net/minecraft/server/level/DistanceManager$PlayerTicketTracker abk$c
	queueLevels f
	toUpdate g
	viewDistance e
	haveTicketFor (I)Z c
	onLevelChange (JII)V a
	onLevelChange (JIZZ)V a
	runAllUpdates ()V a
	updateViewDistance (I)V a
net/minecraft/server/level/PlayerMap abl
	players a
	addPlayer (JLnet/minecraft/server/level/ServerPlayer;Z)V a
	getPlayers (J)Ljava/util/stream/Stream; a
	ignorePlayer (Lnet/minecraft/server/level/ServerPlayer;)V a
	ignored (Lnet/minecraft/server/level/ServerPlayer;)Z d
	ignoredOrUnknown (Lnet/minecraft/server/level/ServerPlayer;)Z c
	removePlayer (JLnet/minecraft/server/level/ServerPlayer;)V a
	unIgnorePlayer (Lnet/minecraft/server/level/ServerPlayer;)V b
	updatePlayer (JJLnet/minecraft/server/level/ServerPlayer;)V a
net/minecraft/server/level/PlayerRespawnLogic abm
	getOverworldRespawnPos (Lnet/minecraft/server/level/ServerLevel;IIZ)Lnet/minecraft/core/BlockPos; a
	getSpawnPosInChunk (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/ChunkPos;Z)Lnet/minecraft/core/BlockPos; a
net/minecraft/server/level/SectionTracker abn
	checkNeighborsAfterUpdate (JIZ)V a
	computeLevelFromNeighbor (JJI)I b
	getComputedLevel (JJI)I a
	getLevelFromSource (J)I b
	isSource (J)Z a
	update (JIZ)V b
net/minecraft/server/level/ServerBossEvent abo
	players h
	unmodifiablePlayers i
	visible j
	addPlayer (Lnet/minecraft/server/level/ServerPlayer;)V a
	broadcast (Ljava/util/function/Function;)V a
	getPlayers ()Ljava/util/Collection; h
	isVisible ()Z g
	removeAllPlayers ()V b
	removePlayer (Lnet/minecraft/server/level/ServerPlayer;)V b
	setColor (Lnet/minecraft/world/BossEvent$BossBarColor;)V a
	setCreateWorldFog (Z)Lnet/minecraft/world/BossEvent; c
	setDarkenScreen (Z)Lnet/minecraft/world/BossEvent; a
	setName (Lnet/minecraft/network/chat/Component;)V a
	setOverlay (Lnet/minecraft/world/BossEvent$BossBarOverlay;)V a
	setPlayBossMusic (Z)Lnet/minecraft/world/BossEvent; b
	setProgress (F)V a
	setVisible (Z)V d
net/minecraft/server/level/ServerChunkCache abp
	CACHE_SIZE m
	CHUNK_STATUSES b
	chunkMap a
	dataStorage i
	distanceManager c
	generator d
	lastChunk p
	lastChunkPos n
	lastChunkStatus o
	lastInhabitedUpdate j
	lastSpawnState q
	level e
	lightEngine g
	mainThread f
	mainThreadProcessor h
	spawnEnemies k
	spawnFriendlies l
	addEntity (Lnet/minecraft/world/entity/Entity;)V b
	addRegionTicket (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkPos;ILjava/lang/Object;)V a
	blockChanged (Lnet/minecraft/core/BlockPos;)V a
	broadcast (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/protocol/Packet;)V b
	broadcastAndSend (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/protocol/Packet;)V a
	checkChunkFuture (JLjava/util/function/Function;)Z a
	chunkAbsent (Lnet/minecraft/server/level/ChunkHolder;I)Z a
	clearCache ()V n
	gatherStats ()Ljava/lang/String; e
	getChunk (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunkDebugData (Lnet/minecraft/world/level/ChunkPos;)Ljava/lang/String; a
	getChunkForLighting (II)Lnet/minecraft/world/level/BlockGetter; c
	getChunkFuture (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Ljava/util/concurrent/CompletableFuture; b
	getChunkFutureMainThread (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Ljava/util/concurrent/CompletableFuture; c
	getChunkNow (II)Lnet/minecraft/world/level/chunk/LevelChunk; a
	getDataStorage ()Lnet/minecraft/world/level/storage/DimensionDataStorage; i
	getFullChunk (JLjava/util/function/Consumer;)V a
	getGenerator ()Lnet/minecraft/world/level/chunk/ChunkGenerator; g
	getLastSpawnState ()Lnet/minecraft/world/level/NaturalSpawner$SpawnState; k
	getLevel ()Lnet/minecraft/world/level/BlockGetter; m
	getLevel ()Lnet/minecraft/world/level/Level; c
	getLightEngine ()Lnet/minecraft/server/level/ThreadedLevelLightEngine; a
	getLightEngine ()Lnet/minecraft/world/level/lighting/LevelLightEngine; l
	getLoadedChunksCount ()I h
	getPendingTasksCount ()I f
	getPoiManager ()Lnet/minecraft/world/entity/ai/village/poi/PoiManager; j
	getTickingGenerated ()I b
	getVisibleChunkIfPresent (J)Lnet/minecraft/server/level/ChunkHolder; b
	hasChunk (II)Z b
	isPositionTicking (J)Z a
	move (Lnet/minecraft/server/level/ServerPlayer;)V a
	onLightUpdate (Lnet/minecraft/world/level/LightLayer;Lnet/minecraft/core/SectionPos;)V a
	pollTask ()Z d
	removeEntity (Lnet/minecraft/world/entity/Entity;)V a
	removeRegionTicket (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkPos;ILjava/lang/Object;)V b
	runDistanceManagerUpdates ()Z o
	save (Z)V a
	setSpawnSettings (ZZ)V a
	setViewDistance (I)V a
	storeInCache (JLnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/chunk/ChunkStatus;)V a
	tick (Ljava/util/function/BooleanSupplier;)V a
	tickChunks ()V p
	updateChunkForced (Lnet/minecraft/world/level/ChunkPos;Z)V a
net/minecraft/server/level/ServerChunkCache$MainThreadExecutor abp$a
	doRunTask (Ljava/lang/Runnable;)V c
	getRunningThread ()Ljava/lang/Thread; av
	pollTask ()Z z
	scheduleExecutables ()Z au
	shouldRun (Ljava/lang/Runnable;)Z d
	wrapRunnable (Ljava/lang/Runnable;)Ljava/lang/Runnable; e
net/minecraft/server/level/ServerEntity abq
	LOGGER a
	TOLERANCE_LEVEL_ROTATION b
	ap n
	broadcast g
	entity d
	lastPassengers q
	level c
	teleportDelay p
	tickCount o
	trackDelta f
	updateInterval e
	wasOnGround s
	wasRiding r
	xRotp l
	xp h
	yHeadRotp m
	yRotp k
	yp i
	zp j
	addPairing (Lnet/minecraft/server/level/ServerPlayer;)V b
	broadcastAndSend (Lnet/minecraft/network/protocol/Packet;)V a
	removePairing (Lnet/minecraft/server/level/ServerPlayer;)V a
	sendChanges ()V a
	sendDirtyEntityData ()V c
	sendPairingData (Ljava/util/function/Consumer;)V a
	sentPos ()Lnet/minecraft/world/phys/Vec3; b
	updateSentPos ()V d
net/minecraft/server/level/ServerLevel abr
	EMPTY_TIME_NO_TICK A
	END_SPAWN_POINT a
	LOGGER z
	blockEvents N
	blockTicks K
	chunkSource C
	customSpawners P
	dragonFight Q
	dragonParts R
	emptyTime I
	entityManager G
	entityTickList F
	handlingTick O
	liquidTicks L
	navigatingMobs M
	noSave b
	players B
	portalForcer J
	raids c
	server D
	serverLevelData E
	sleepStatus H
	structureFeatureManager S
	tickTime T
	addDuringCommandTeleport (Lnet/minecraft/server/level/ServerPlayer;)V a
	addDuringPortalTeleport (Lnet/minecraft/server/level/ServerPlayer;)V b
	addDuringTeleport (Lnet/minecraft/world/entity/Entity;)V d
	addEntity (Lnet/minecraft/world/entity/Entity;)Z j
	addFreshEntity (Lnet/minecraft/world/entity/Entity;)Z b
	addLegacyChunkEntities (Ljava/util/stream/Stream;)V a
	addNewPlayer (Lnet/minecraft/server/level/ServerPlayer;)V c
	addPlayer (Lnet/minecraft/server/level/ServerPlayer;)V e
	addRespawnedPlayer (Lnet/minecraft/server/level/ServerPlayer;)V d
	addWithUUID (Lnet/minecraft/world/entity/Entity;)Z c
	addWorldGenChunkEntities (Ljava/util/stream/Stream;)V b
	announceSleepStatus ()V an
	areEntitiesLoaded (J)Z b
	blockEvent (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;II)V a
	blockUpdated (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V a
	broadcastEntityEvent (Lnet/minecraft/world/entity/Entity;B)V a
	canSleepThroughNights ()Z d
	clearBlockEvents (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	destroyBlockProgress (ILnet/minecraft/core/BlockPos;I)V a
	doBlockEvent (Lnet/minecraft/world/level/BlockEventData;)Z a
	dragonFight ()Lnet/minecraft/world/level/dimension/end/EndDragonFight; F
	dumpBlockEntityTickers (Ljava/io/Writer;)V a
	dumpEntities (Ljava/io/Writer;Ljava/lang/Iterable;)V a
	explode (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/level/ExplosionDamageCalculator;DDDFZLnet/minecraft/world/level/Explosion$BlockInteraction;)Lnet/minecraft/world/level/Explosion; a
	findLightningRod (Lnet/minecraft/core/BlockPos;)Ljava/util/Optional; E
	findLightningTargetAround (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	findNearestBiome (Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/core/BlockPos;II)Lnet/minecraft/core/BlockPos; a
	findNearestMapFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;Lnet/minecraft/core/BlockPos;IZ)Lnet/minecraft/core/BlockPos; a
	gameEvent (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/core/BlockPos;)V a
	gatherChunkSourceStats ()Ljava/lang/String; J
	getAllEntities ()Ljava/lang/Iterable; C
	getBlockTicks ()Lnet/minecraft/world/level/ServerTickList; l
	getBlockTicks ()Lnet/minecraft/world/level/TickList; N
	getChunkSource ()Lnet/minecraft/server/level/ServerChunkCache; k
	getChunkSource ()Lnet/minecraft/world/level/chunk/ChunkSource; L
	getDataStorage ()Lnet/minecraft/world/level/storage/DimensionDataStorage; u
	getDragons ()Ljava/util/List; h
	getEntities ()Lnet/minecraft/world/level/entity/LevelEntityGetter; I
	getEntities (Lnet/minecraft/world/level/entity/EntityTypeTest;Ljava/util/function/Predicate;)Ljava/util/List; a
	getEntity (I)Lnet/minecraft/world/entity/Entity; a
	getEntity (Ljava/util/UUID;)Lnet/minecraft/world/entity/Entity; a
	getEntityOrPart (I)Lnet/minecraft/world/entity/Entity; b
	getForcedChunks ()Lit/unimi/dsi/fastutil/longs/LongSet; y
	getFreeMapId ()I v
	getLevel ()Lnet/minecraft/server/level/ServerLevel; G
	getLiquidTicks ()Lnet/minecraft/world/level/ServerTickList; m
	getLiquidTicks ()Lnet/minecraft/world/level/TickList; M
	getLogicalHeight ()I j
	getMapData (Ljava/lang/String;)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; a
	getPlayers (Ljava/util/function/Predicate;)Ljava/util/List; a
	getPoiManager ()Lnet/minecraft/world/entity/ai/village/poi/PoiManager; A
	getPortalForcer ()Lnet/minecraft/world/level/portal/PortalForcer; o
	getRaidAt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/raid/Raid; c
	getRaids ()Lnet/minecraft/world/entity/raid/Raids; B
	getRandomPlayer ()Lnet/minecraft/server/level/ServerPlayer; i
	getRecipeManager ()Lnet/minecraft/world/item/crafting/RecipeManager; q
	getScoreboard ()Lnet/minecraft/server/ServerScoreboard; f
	getScoreboard ()Lnet/minecraft/world/scores/Scoreboard; K
	getSeed ()J E
	getServer ()Lnet/minecraft/server/MinecraftServer; n
	getShade (Lnet/minecraft/core/Direction;Z)F a
	getSharedSpawnAngle ()F x
	getSharedSpawnPos ()Lnet/minecraft/core/BlockPos; w
	getStructureManager ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager; p
	getTagManager ()Lnet/minecraft/tags/TagContainer; r
	getTypeCount (Ljava/lang/Iterable;Ljava/util/function/Function;)Ljava/lang/String; a
	getUncachedNoiseBiome (III)Lnet/minecraft/world/level/biome/Biome; a
	getWatchdogStats ()Ljava/lang/String; H
	globalLevelEvent (ILnet/minecraft/core/BlockPos;I)V b
	isCloseToVillage (Lnet/minecraft/core/BlockPos;I)Z a
	isFlat ()Z D
	isHandlingTick ()Z c
	isPositionEntityTicking (Lnet/minecraft/core/BlockPos;)Z f
	isPositionEntityTicking (Lnet/minecraft/world/level/ChunkPos;)Z a
	isPositionTickingWithEntitiesLoaded (Lnet/minecraft/core/BlockPos;)Z e
	isRaided (Lnet/minecraft/core/BlockPos;)Z d
	isVillage (Lnet/minecraft/core/BlockPos;)Z b
	isVillage (Lnet/minecraft/core/SectionPos;)Z a
	levelEvent (Lnet/minecraft/world/entity/player/Player;ILnet/minecraft/core/BlockPos;I)V a
	makeObsidianPlatform (Lnet/minecraft/server/level/ServerLevel;)V a
	mayInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;)Z a
	noSave ()Z s
	onBlockStateChange (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)V a
	onReputationEvent (Lnet/minecraft/world/entity/ai/village/ReputationEventType;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/ReputationEventHandler;)V a
	playSound (Lnet/minecraft/world/entity/player/Player;DDDLnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	playSound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	players ()Ljava/util/List; z
	registryAccess ()Lnet/minecraft/core/RegistryAccess; t
	removePlayerImmediately (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/Entity$RemovalReason;)V a
	resetEmptyTime ()V g
	runBlockEvents ()V aq
	save (Lnet/minecraft/util/ProgressListener;ZZ)V a
	saveDebugReport (Ljava/nio/file/Path;)V a
	saveLevelData ()V ap
	sectionsToVillage (Lnet/minecraft/core/SectionPos;)I b
	sendBlockUpdated (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;I)V a
	sendParticles (Lnet/minecraft/core/particles/ParticleOptions;DDDIDDDD)I a
	sendParticles (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/core/particles/ParticleOptions;ZDDDIDDDD)Z a
	sendParticles (Lnet/minecraft/server/level/ServerPlayer;ZDDDLnet/minecraft/network/protocol/Packet;)Z a
	sendVibrationParticle (Lnet/minecraft/world/level/gameevent/vibrations/VibrationPath;)V a
	setChunkForced (IIZ)Z a
	setDayTime (J)V a
	setDefaultSpawnPos (Lnet/minecraft/core/BlockPos;F)V a
	setMapData (Ljava/lang/String;Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)V a
	setWeatherParameters (IIZZ)V a
	shouldDiscardEntity (Lnet/minecraft/world/entity/Entity;)Z i
	startsForFeature (Lnet/minecraft/core/SectionPos;Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Ljava/util/stream/Stream; a
	stopWeather ()V ao
	structureFeatureManager ()Lnet/minecraft/world/level/StructureFeatureManager; a
	tick (Ljava/util/function/BooleanSupplier;)V a
	tickBlock (Lnet/minecraft/world/level/TickNextTickData;)V b
	tickChunk (Lnet/minecraft/world/level/chunk/LevelChunk;I)V a
	tickCustomSpawners (ZZ)V a
	tickLiquid (Lnet/minecraft/world/level/TickNextTickData;)V a
	tickNonPassenger (Lnet/minecraft/world/entity/Entity;)V a
	tickPassenger (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)V a
	tickTime ()V b
	tryAddFreshEntityWithPassengers (Lnet/minecraft/world/entity/Entity;)Z e
	unload (Lnet/minecraft/world/level/chunk/LevelChunk;)V a
	updateSleepingPlayerList ()V e
	wakeUpAllPlayers ()V am
net/minecraft/server/level/ServerLevel$EntityCallbacks abr$a
	onCreated (Ljava/lang/Object;)V f
	onCreated (Lnet/minecraft/world/entity/Entity;)V a
	onDestroyed (Ljava/lang/Object;)V e
	onDestroyed (Lnet/minecraft/world/entity/Entity;)V b
	onTickingEnd (Ljava/lang/Object;)V c
	onTickingEnd (Lnet/minecraft/world/entity/Entity;)V d
	onTickingStart (Ljava/lang/Object;)V d
	onTickingStart (Lnet/minecraft/world/entity/Entity;)V c
	onTrackingEnd (Ljava/lang/Object;)V a
	onTrackingEnd (Lnet/minecraft/world/entity/Entity;)V f
	onTrackingStart (Ljava/lang/Object;)V b
	onTrackingStart (Lnet/minecraft/world/entity/Entity;)V e
net/minecraft/server/level/ServerPlayer abs
	LOGGER co
	NEUTRAL_MOB_DEATH_NOTIFICATION_RADII_XZ cp
	NEUTRAL_MOB_DEATH_NOTIFICATION_RADII_Y cq
	advancements cr
	camera cH
	canChatColor cF
	chatVisibility cE
	connection b
	containerCounter cY
	containerListener cX
	containerSynchronizer cW
	disconnected cN
	enteredNetherPosition cO
	gameMode d
	isChangingDimension cI
	lastActionTime cG
	lastFoodSaturationZero cB
	lastRecordedAirLevel cv
	lastRecordedArmor cw
	lastRecordedExperience cy
	lastRecordedFoodLevel cu
	lastRecordedHealthAndAbsorption ct
	lastRecordedLevel cx
	lastSectionPos cP
	lastSentExp cC
	lastSentFood cA
	lastSentHealth cz
	latency e
	levitationStartPos cL
	levitationStartTime cM
	recipeBook cK
	respawnAngle cT
	respawnDimension cQ
	respawnForced cS
	respawnPosition cR
	seenCredits cJ
	server c
	spawnInvulnerableTime cD
	stats cs
	textFilter cU
	textFilteringEnabled cV
	wonGame f
	acceptsChat (Lnet/minecraft/network/chat/ChatType;)Z a
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	attack (Lnet/minecraft/world/entity/Entity;)V d
	awardKillScore (Lnet/minecraft/world/entity/Entity;ILnet/minecraft/world/damagesource/DamageSource;)V a
	awardRecipes (Ljava/util/Collection;)I a
	awardRecipesByKey ([Lnet/minecraft/resources/ResourceLocation;)V a
	awardStat (Lnet/minecraft/stats/Stat;I)V a
	bedBlocked (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z b
	bedInRange (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	broadcast (Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
	broadcastToPlayer (Lnet/minecraft/server/level/ServerPlayer;)Z a
	calculateGameModeForNewPlayer (Lnet/minecraft/world/level/GameType;)Lnet/minecraft/world/level/GameType; b
	canChatInColor ()Z w
	canHarmPlayer (Lnet/minecraft/world/entity/player/Player;)Z a
	changeDimension (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/entity/Entity; b
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	closeContainer ()V n
	completeUsingItem ()V s
	createEndPlatform (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V a
	createItemCooldowns ()Lnet/minecraft/world/item/ItemCooldowns; j
	crit (Lnet/minecraft/world/entity/Entity;)V a
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	disconnect ()V p
	dismountTo (DDD)V a
	displayClientMessage (Lnet/minecraft/network/chat/Component;Z)V a
	doCheckFallDamage (DZ)V a
	doCloseContainer ()V o
	doTick ()V l
	drop (Lnet/minecraft/world/item/ItemStack;ZZ)Lnet/minecraft/world/entity/item/ItemEntity; a
	findDimensionEntryPoint (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/level/portal/PortalInfo; a
	fudgeSpawnLocation (Lnet/minecraft/server/level/ServerLevel;)V d
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; P
	getAdvancements ()Lnet/minecraft/server/PlayerAdvancements; J
	getCamera ()Lnet/minecraft/world/entity/Entity; D
	getChatVisibility ()Lnet/minecraft/world/entity/player/ChatVisiblity; x
	getCoprime (I)I v
	getExitPortal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Z)Ljava/util/Optional; a
	getIpAddress ()Ljava/lang/String; v
	getLastActionTime ()J F
	getLastSectionPos ()Lnet/minecraft/core/SectionPos; O
	getLevel ()Lnet/minecraft/server/level/ServerLevel; u
	getPermissionLevel ()I y
	getRecipeBook ()Lnet/minecraft/stats/ServerRecipeBook; B
	getRespawnAngle ()F L
	getRespawnDimension ()Lnet/minecraft/resources/ResourceKey; M
	getRespawnPosition ()Lnet/minecraft/core/BlockPos; K
	getStats ()Lnet/minecraft/stats/ServerStatsCounter; A
	getTabListDisplayName ()Lnet/minecraft/network/chat/Component; G
	getTextFilter ()Lnet/minecraft/server/network/TextFilter; Q
	giveExperienceLevels (I)V c
	giveExperiencePoints (I)V d
	handleTeamKill (Ljava/lang/String;Ljava/lang/String;[Lnet/minecraft/world/scores/criteria/ObjectiveCriteria;)V a
	hasChangedDimension ()V I
	hasDisconnected ()Z q
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	initInventoryMenu ()V g
	initMenu (Lnet/minecraft/world/inventory/AbstractContainerMenu;)V a
	isChangingDimension ()Z H
	isCreative ()Z f
	isInvulnerableTo (Lnet/minecraft/world/damagesource/DamageSource;)Z b
	isPvpAllowed ()Z fI
	isReachableBedBlock (Lnet/minecraft/core/BlockPos;)Z g
	isRespawnForced ()Z N
	isSpectator ()Z A_
	isTextFilteringEnabled ()Z R
	loadGameTypes (Lnet/minecraft/nbt/CompoundTag;)V c
	lookAt (Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor;)V a
	lookAt (Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor;Lnet/minecraft/world/phys/Vec3;)V a
	magicCrit (Lnet/minecraft/world/entity/Entity;)V b
	mayInteract (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z a
	moveTo (DDD)V c
	nextContainerCounter ()V fJ
	onChangedBlock (Lnet/minecraft/core/BlockPos;)V c
	onEffectAdded (Lnet/minecraft/world/effect/MobEffectInstance;Lnet/minecraft/world/entity/Entity;)V a
	onEffectRemoved (Lnet/minecraft/world/effect/MobEffectInstance;)V a
	onEffectUpdated (Lnet/minecraft/world/effect/MobEffectInstance;ZLnet/minecraft/world/entity/Entity;)V a
	onEnchantmentPerformed (Lnet/minecraft/world/item/ItemStack;I)V a
	onEnterCombat ()V h
	onInsideBlock (Lnet/minecraft/world/level/block/state/BlockState;)V a
	onLeaveCombat ()V i
	onUpdateAbilities ()V t
	openCommandBlock (Lnet/minecraft/world/level/block/entity/CommandBlockEntity;)V a
	openHorseInventory (Lnet/minecraft/world/entity/animal/horse/AbstractHorse;Lnet/minecraft/world/Container;)V a
	openItemGui (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/InteractionHand;)V a
	openMenu (Lnet/minecraft/world/MenuProvider;)Ljava/util/OptionalInt; a
	openTextEdit (Lnet/minecraft/world/level/block/entity/SignBlockEntity;)V a
	playNotifySound (Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	processPortalCooldown ()V E
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	readPlayerMode (Lnet/minecraft/nbt/CompoundTag;Ljava/lang/String;)Lnet/minecraft/world/level/GameType; a
	resetLastActionTime ()V z
	resetRecipes (Ljava/util/Collection;)I b
	resetSentInfo ()V r
	resetStat (Lnet/minecraft/stats/Stat;)V a
	restoreFrom (Lnet/minecraft/server/level/ServerPlayer;Z)V a
	sendMerchantOffers (ILnet/minecraft/world/item/trading/MerchantOffers;IIZZ)V a
	sendMessage (Lnet/minecraft/network/chat/Component;Ljava/util/UUID;)V a
	sendMessage (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/ChatType;Ljava/util/UUID;)V a
	sendTexturePack (Ljava/lang/String;Ljava/lang/String;ZLnet/minecraft/network/chat/Component;)V a
	setCamera (Lnet/minecraft/world/entity/Entity;)V c
	setExperienceLevels (I)V b
	setExperiencePoints (I)V a
	setGameMode (Lnet/minecraft/world/level/GameType;)Z a
	setLastSectionPos (Lnet/minecraft/core/SectionPos;)V a
	setLevel (Lnet/minecraft/server/level/ServerLevel;)V c
	setPlayerInput (FFZZ)V a
	setRespawnPosition (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/BlockPos;FZZ)V a
	shouldFilterMessageTo (Lnet/minecraft/server/level/ServerPlayer;)Z b
	startRiding (Lnet/minecraft/world/entity/Entity;Z)Z a
	startSleepInBed (Lnet/minecraft/core/BlockPos;)Lcom/mojang/datafixers/util/Either; a
	startSleeping (Lnet/minecraft/core/BlockPos;)V b
	stopRiding ()V m
	stopSleepInBed (ZZ)V a
	storeGameTypes (Lnet/minecraft/nbt/CompoundTag;)V k
	swing (Lnet/minecraft/world/InteractionHand;)V a
	take (Lnet/minecraft/world/entity/Entity;I)V a
	teleportTo (DDD)V b
	teleportTo (Lnet/minecraft/server/level/ServerLevel;DDDFF)V a
	tellNeutralMobsThatIDied ()V fH
	tick ()V k
	trackChunk (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/network/protocol/Packet;)V a
	triggerDimensionChangeTriggers (Lnet/minecraft/server/level/ServerLevel;)V e
	untrackChunk (Lnet/minecraft/world/level/ChunkPos;)V a
	updateInvisibilityStatus ()V C
	updateOptions (Lnet/minecraft/network/protocol/game/ServerboundClientInformationPacket;)V a
	updateScoreForCriteria (Lnet/minecraft/world/scores/criteria/ObjectiveCriteria;I)V a
	updateUsingItem (Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/server/level/ServerPlayerGameMode abt
	LOGGER a
	delayedDestroyPos k
	delayedTickStart l
	destroyPos h
	destroyProgressStart g
	gameModeForPlayer b
	gameTicks i
	hasDelayedDestroy j
	isDestroyingBlock f
	lastSentState m
	level c
	player d
	previousGameModeForPlayer e
	changeGameModeForPlayer (Lnet/minecraft/world/level/GameType;)Z a
	destroyAndAck (Lnet/minecraft/core/BlockPos;Lnet/minecraft/network/protocol/game/ServerboundPlayerActionPacket$Action;Ljava/lang/String;)V a
	destroyBlock (Lnet/minecraft/core/BlockPos;)Z a
	getGameModeForPlayer ()Lnet/minecraft/world/level/GameType; b
	getPreviousGameModeForPlayer ()Lnet/minecraft/world/level/GameType; c
	handleBlockBreakAction (Lnet/minecraft/core/BlockPos;Lnet/minecraft/network/protocol/game/ServerboundPlayerActionPacket$Action;Lnet/minecraft/core/Direction;I)V a
	incrementDestroyProgress (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;I)F a
	isCreative ()Z e
	isSurvival ()Z d
	setGameModeForPlayer (Lnet/minecraft/world/level/GameType;Lnet/minecraft/world/level/GameType;)V a
	setLevel (Lnet/minecraft/server/level/ServerLevel;)V a
	tick ()V a
	useItem (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	useItemOn (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/server/level/ThreadedLevelLightEngine abu
	LOGGER d
	chunkMap g
	lightTasks f
	scheduled j
	sorterMailbox h
	taskMailbox e
	taskPerBatch i
	addTask (IILjava/util/function/IntSupplier;Lnet/minecraft/server/level/ThreadedLevelLightEngine$TaskType;Ljava/lang/Runnable;)V a
	addTask (IILnet/minecraft/server/level/ThreadedLevelLightEngine$TaskType;Ljava/lang/Runnable;)V a
	checkBlock (Lnet/minecraft/core/BlockPos;)V a
	enableLightSources (Lnet/minecraft/world/level/ChunkPos;Z)V a
	lightChunk (Lnet/minecraft/world/level/chunk/ChunkAccess;Z)Ljava/util/concurrent/CompletableFuture; a
	onBlockEmissionIncrease (Lnet/minecraft/core/BlockPos;I)V a
	queueSectionData (Lnet/minecraft/world/level/LightLayer;Lnet/minecraft/core/SectionPos;Lnet/minecraft/world/level/chunk/DataLayer;Z)V a
	retainData (Lnet/minecraft/world/level/ChunkPos;Z)V b
	runUpdate ()V e
	runUpdates (IZZ)I a
	setTaskPerBatch (I)V a
	tryScheduleUpdate ()V a
	updateChunkStatus (Lnet/minecraft/world/level/ChunkPos;)V a
	updateSectionStatus (Lnet/minecraft/core/SectionPos;Z)V a
net/minecraft/server/level/ThreadedLevelLightEngine$TaskType abu$a
	$VALUES c
	POST_UPDATE b
	PRE_UPDATE a
	$values ()[Lnet/minecraft/server/level/ThreadedLevelLightEngine$TaskType; a
net/minecraft/server/level/Ticket abv
	createdTick d
	key c
	ticketLevel b
	type a
	compareTo (Lnet/minecraft/server/level/Ticket;)I a
	getTicketLevel ()I b
	getType ()Lnet/minecraft/server/level/TicketType; a
	setCreatedTick (J)V a
	timedOut (J)Z b
net/minecraft/server/level/TicketType abw
	DRAGON b
	FORCED d
	LIGHT e
	PLAYER c
	PORTAL f
	POST_TELEPORT g
	START a
	UNKNOWN h
	comparator j
	name i
	timeout k
	create (Ljava/lang/String;Ljava/util/Comparator;)Lnet/minecraft/server/level/TicketType; a
	create (Ljava/lang/String;Ljava/util/Comparator;I)Lnet/minecraft/server/level/TicketType; a
	getComparator ()Ljava/util/Comparator; a
	timeout ()J b
net/minecraft/server/level/WorldGenRegion abx
	LOGGER a
	biomeManager l
	blockTicks j
	cache b
	center c
	currentlyGenerating r
	dimensionType i
	firstPos m
	generatingStatus p
	lastPos n
	level e
	levelData g
	liquidTicks k
	random h
	seed f
	size d
	structureFeatureManager o
	writeRadiusCutoff q
	addFreshEntity (Lnet/minecraft/world/entity/Entity;)Z b
	addParticle (Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)V a
	destroyBlock (Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/entity/Entity;I)Z a
	dimensionType ()Lnet/minecraft/world/level/dimension/DimensionType; p_
	ensureCanWrite (Lnet/minecraft/core/BlockPos;)Z e_
	gameEvent (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/core/BlockPos;)V a
	getBiomeManager ()Lnet/minecraft/world/level/biome/BiomeManager; r_
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c_
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a_
	getBlockTicks ()Lnet/minecraft/world/level/TickList; N
	getCenter ()Lnet/minecraft/world/level/ChunkPos; a
	getChunk (II)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunk (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunkSource ()Lnet/minecraft/world/level/chunk/ChunkSource; L
	getCurrentDifficultyAt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/DifficultyInstance; d_
	getEntities (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/List; a
	getEntities (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/List; a
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b_
	getHeight ()I t_
	getHeight (Lnet/minecraft/world/level/levelgen/Heightmap$Types;II)I a
	getLevel ()Lnet/minecraft/server/level/ServerLevel; G
	getLevelData ()Lnet/minecraft/world/level/storage/LevelData; m_
	getLightEngine ()Lnet/minecraft/world/level/lighting/LevelLightEngine; k_
	getLiquidTicks ()Lnet/minecraft/world/level/TickList; M
	getMinBuildHeight ()I s_
	getNearestPlayer (DDDDLjava/util/function/Predicate;)Lnet/minecraft/world/entity/player/Player; a
	getRandom ()Ljava/util/Random; q_
	getSeaLevel ()I l_
	getSeed ()J E
	getServer ()Lnet/minecraft/server/MinecraftServer; n
	getShade (Lnet/minecraft/core/Direction;Z)F a
	getSkyDarken ()I n_
	getUncachedNoiseBiome (III)Lnet/minecraft/world/level/biome/Biome; a
	getWorldBorder ()Lnet/minecraft/world/level/border/WorldBorder; o_
	hasChunk (II)Z b
	isClientSide ()Z j_
	isFluidAtPosition (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z b
	isStateAtPosition (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z a
	levelEvent (Lnet/minecraft/world/entity/player/Player;ILnet/minecraft/core/BlockPos;I)V a
	markPosForPostprocessing (Lnet/minecraft/core/BlockPos;)V f
	playSound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	players ()Ljava/util/List; z
	registryAccess ()Lnet/minecraft/core/RegistryAccess; t
	removeBlock (Lnet/minecraft/core/BlockPos;Z)Z a
	setBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;II)Z a
	setCurrentlyGenerating (Ljava/util/function/Supplier;)V a
	startsForFeature (Lnet/minecraft/core/SectionPos;Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Ljava/util/stream/Stream; a
net/minecraft/server/level/WorldGenTickList aby
	index a
	hasScheduledTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z a
	scheduleTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;ILnet/minecraft/world/level/TickPriority;)V a
	size ()I a
	willTickThisTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z b
net/minecraft/server/level/progress/ChunkProgressListener aca
	onStatusChange (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/ChunkStatus;)V a
	start ()V a
	stop ()V b
	updateSpawnPos (Lnet/minecraft/world/level/ChunkPos;)V a
net/minecraft/server/level/progress/ChunkProgressListenerFactory acb
net/minecraft/server/level/progress/LoggerChunkProgressListener acc
	LOGGER a
	count c
	maxCount b
	nextTickTime e
	startTime d
	getProgress ()I c
	onStatusChange (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/ChunkStatus;)V a
	start ()V a
	stop ()V b
	updateSpawnPos (Lnet/minecraft/world/level/ChunkPos;)V a
net/minecraft/server/level/progress/ProcessorChunkProgressListener acd
	delegate a
	mailbox b
	createStarted (Lnet/minecraft/server/level/progress/ChunkProgressListener;Ljava/util/concurrent/Executor;)Lnet/minecraft/server/level/progress/ProcessorChunkProgressListener; a
	onStatusChange (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/ChunkStatus;)V a
	start ()V a
	stop ()V b
	updateSpawnPos (Lnet/minecraft/world/level/ChunkPos;)V a
net/minecraft/server/level/progress/StoringChunkProgressListener ace
	delegate a
	diameter f
	fullDiameter d
	radius e
	spawnPos c
	started g
	statuses b
	getDiameter ()I d
	getFullDiameter ()I c
	getProgress ()I e
	getStatus (II)Lnet/minecraft/world/level/chunk/ChunkStatus; a
	onStatusChange (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/ChunkStatus;)V a
	start ()V a
	stop ()V b
	updateSpawnPos (Lnet/minecraft/world/level/ChunkPos;)V a
net/minecraft/server/network/LegacyQueryHandler acg
	FAKE_PROTOCOL_VERSION a
	LOGGER b
	serverConnectionListener c
	createReply (Ljava/lang/String;)Lio/netty/buffer/ByteBuf; a
	sendFlushAndClose (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;)V a
net/minecraft/server/network/MemoryServerHandshakePacketListenerImpl ach
	connection b
	server a
	getConnection ()Lnet/minecraft/network/Connection; a
	handleIntention (Lnet/minecraft/network/protocol/handshake/ClientIntentionPacket;)V a
	onDisconnect (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/server/network/ServerConnectionListener aci
	LOGGER d
	SERVER_EPOLL_EVENT_GROUP b
	SERVER_EVENT_GROUP a
	channels f
	connections g
	running c
	server e
	getServer ()Lnet/minecraft/server/MinecraftServer; d
	startMemoryChannel ()Ljava/net/SocketAddress; a
	startTcpServerListener (Ljava/net/InetAddress;I)V a
	stop ()V b
	tick ()V c
net/minecraft/server/network/ServerConnectionListener$LatencySimulator aci$a
	TIMER a
	delay b
	jitter c
	queuedMessages d
	delayDownstream (Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)V a
	onTimeout (Lio/netty/util/Timeout;)V a
net/minecraft/server/network/ServerConnectionListener$LatencySimulator$DelayedMessage aci$a$a
	ctx a
	msg b
net/minecraft/server/network/ServerGamePacketListenerImpl acj
	LATENCY_CHECK_INTERVAL d
	LOGGER c
	aboveGroundTickCount C
	aboveGroundVehicleTickCount E
	awaitingPositionFromClient y
	awaitingTeleport z
	awaitingTeleportTime A
	chatSpamTickCount j
	clientIsFloating B
	clientVehicleIsFloating D
	connection a
	dropSpamTickCount k
	firstGoodX l
	firstGoodY m
	firstGoodZ n
	keepAliveChallenge i
	keepAlivePending h
	keepAliveTime g
	knownMovePacketCount G
	lastGoodX o
	lastGoodY p
	lastGoodZ q
	lastVehicle r
	player b
	receivedMovePacketCount F
	server e
	tickCount f
	vehicleFirstGoodX s
	vehicleFirstGoodY t
	vehicleFirstGoodZ u
	vehicleLastGoodX v
	vehicleLastGoodY w
	vehicleLastGoodZ x
	clampHorizontal (D)D a
	clampVertical (D)D b
	containsInvalidValues (DDDFF)Z c
	disconnect (Lnet/minecraft/network/chat/Component;)V b
	dismount (DDDFF)V a
	filterTextPacket (Ljava/lang/Object;Ljava/util/function/Consumer;Ljava/util/function/BiFunction;)V a
	filterTextPacket (Ljava/lang/String;Ljava/util/function/Consumer;)V a
	filterTextPacket (Ljava/util/List;Ljava/util/function/Consumer;)V a
	getConnection ()Lnet/minecraft/network/Connection; a
	getPlayer ()Lnet/minecraft/server/level/ServerPlayer; d
	handleAcceptTeleportPacket (Lnet/minecraft/network/protocol/game/ServerboundAcceptTeleportationPacket;)V a
	handleAnimate (Lnet/minecraft/network/protocol/game/ServerboundSwingPacket;)V a
	handleBlockEntityTagQuery (Lnet/minecraft/network/protocol/game/ServerboundBlockEntityTagQuery;)V a
	handleChangeDifficulty (Lnet/minecraft/network/protocol/game/ServerboundChangeDifficultyPacket;)V a
	handleChat (Lnet/minecraft/network/protocol/game/ServerboundChatPacket;)V a
	handleChat (Lnet/minecraft/server/network/TextFilter$FilteredText;)V a
	handleClientCommand (Lnet/minecraft/network/protocol/game/ServerboundClientCommandPacket;)V a
	handleClientInformation (Lnet/minecraft/network/protocol/game/ServerboundClientInformationPacket;)V a
	handleCommand (Ljava/lang/String;)V a
	handleContainerButtonClick (Lnet/minecraft/network/protocol/game/ServerboundContainerButtonClickPacket;)V a
	handleContainerClick (Lnet/minecraft/network/protocol/game/ServerboundContainerClickPacket;)V a
	handleContainerClose (Lnet/minecraft/network/protocol/game/ServerboundContainerClosePacket;)V a
	handleCustomCommandSuggestions (Lnet/minecraft/network/protocol/game/ServerboundCommandSuggestionPacket;)V a
	handleCustomPayload (Lnet/minecraft/network/protocol/game/ServerboundCustomPayloadPacket;)V a
	handleEditBook (Lnet/minecraft/network/protocol/game/ServerboundEditBookPacket;)V a
	handleEntityTagQuery (Lnet/minecraft/network/protocol/game/ServerboundEntityTagQuery;)V a
	handleInteract (Lnet/minecraft/network/protocol/game/ServerboundInteractPacket;)V a
	handleJigsawGenerate (Lnet/minecraft/network/protocol/game/ServerboundJigsawGeneratePacket;)V a
	handleKeepAlive (Lnet/minecraft/network/protocol/game/ServerboundKeepAlivePacket;)V a
	handleLockDifficulty (Lnet/minecraft/network/protocol/game/ServerboundLockDifficultyPacket;)V a
	handleMovePlayer (Lnet/minecraft/network/protocol/game/ServerboundMovePlayerPacket;)V a
	handleMoveVehicle (Lnet/minecraft/network/protocol/game/ServerboundMoveVehiclePacket;)V a
	handlePaddleBoat (Lnet/minecraft/network/protocol/game/ServerboundPaddleBoatPacket;)V a
	handlePickItem (Lnet/minecraft/network/protocol/game/ServerboundPickItemPacket;)V a
	handlePlaceRecipe (Lnet/minecraft/network/protocol/game/ServerboundPlaceRecipePacket;)V a
	handlePlayerAbilities (Lnet/minecraft/network/protocol/game/ServerboundPlayerAbilitiesPacket;)V a
	handlePlayerAction (Lnet/minecraft/network/protocol/game/ServerboundPlayerActionPacket;)V a
	handlePlayerCommand (Lnet/minecraft/network/protocol/game/ServerboundPlayerCommandPacket;)V a
	handlePlayerInput (Lnet/minecraft/network/protocol/game/ServerboundPlayerInputPacket;)V a
	handlePong (Lnet/minecraft/network/protocol/game/ServerboundPongPacket;)V a
	handleRecipeBookChangeSettingsPacket (Lnet/minecraft/network/protocol/game/ServerboundRecipeBookChangeSettingsPacket;)V a
	handleRecipeBookSeenRecipePacket (Lnet/minecraft/network/protocol/game/ServerboundRecipeBookSeenRecipePacket;)V a
	handleRenameItem (Lnet/minecraft/network/protocol/game/ServerboundRenameItemPacket;)V a
	handleResourcePackResponse (Lnet/minecraft/network/protocol/game/ServerboundResourcePackPacket;)V a
	handleSeenAdvancements (Lnet/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket;)V a
	handleSelectTrade (Lnet/minecraft/network/protocol/game/ServerboundSelectTradePacket;)V a
	handleSetBeaconPacket (Lnet/minecraft/network/protocol/game/ServerboundSetBeaconPacket;)V a
	handleSetCarriedItem (Lnet/minecraft/network/protocol/game/ServerboundSetCarriedItemPacket;)V a
	handleSetCommandBlock (Lnet/minecraft/network/protocol/game/ServerboundSetCommandBlockPacket;)V a
	handleSetCommandMinecart (Lnet/minecraft/network/protocol/game/ServerboundSetCommandMinecartPacket;)V a
	handleSetCreativeModeSlot (Lnet/minecraft/network/protocol/game/ServerboundSetCreativeModeSlotPacket;)V a
	handleSetJigsawBlock (Lnet/minecraft/network/protocol/game/ServerboundSetJigsawBlockPacket;)V a
	handleSetStructureBlock (Lnet/minecraft/network/protocol/game/ServerboundSetStructureBlockPacket;)V a
	handleSignUpdate (Lnet/minecraft/network/protocol/game/ServerboundSignUpdatePacket;)V a
	handleTeleportToEntityPacket (Lnet/minecraft/network/protocol/game/ServerboundTeleportToEntityPacket;)V a
	handleUseItem (Lnet/minecraft/network/protocol/game/ServerboundUseItemPacket;)V a
	handleUseItemOn (Lnet/minecraft/network/protocol/game/ServerboundUseItemOnPacket;)V a
	isPlayerCollidingWithAnythingNew (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/world/phys/AABB;)Z a
	isSingleplayerOwner ()Z e
	noBlocksAround (Lnet/minecraft/world/entity/Entity;)Z a
	onDisconnect (Lnet/minecraft/network/chat/Component;)V a
	resetPosition ()V c
	send (Lnet/minecraft/network/protocol/Packet;)V a
	send (Lnet/minecraft/network/protocol/Packet;Lio/netty/util/concurrent/GenericFutureListener;)V a
	signBook (Lnet/minecraft/server/network/TextFilter$FilteredText;Ljava/util/List;I)V a
	teleport (DDDFF)V b
	teleport (DDDFFLjava/util/Set;)V a
	teleport (DDDFFLjava/util/Set;Z)V a
	tick ()V b
	updateBookContents (Ljava/util/List;I)V a
	updateBookPages (Ljava/util/List;Ljava/util/function/UnaryOperator;Lnet/minecraft/world/item/ItemStack;)V a
	updateSignText (Lnet/minecraft/network/protocol/game/ServerboundSignUpdatePacket;Ljava/util/List;)V a
	wasBlockPlacementAttempt (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/server/network/ServerGamePacketListenerImpl$EntityInteraction acj$a
net/minecraft/server/network/ServerHandshakePacketListenerImpl ack
	IGNORE_STATUS_REASON a
	connection c
	server b
	getConnection ()Lnet/minecraft/network/Connection; a
	handleIntention (Lnet/minecraft/network/protocol/handshake/ClientIntentionPacket;)V a
	onDisconnect (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/server/network/ServerLoginPacketListenerImpl acl
	LOGGER c
	MAX_TICKS_BEFORE_LOGIN d
	RANDOM e
	UNIQUE_THREAD_ID b
	connection a
	delayedAcceptPlayer l
	gameProfile j
	nonce f
	server g
	serverId k
	state h
	tick i
	createFakeProfile (Lcom/mojang/authlib/GameProfile;)Lcom/mojang/authlib/GameProfile; a
	disconnect (Lnet/minecraft/network/chat/Component;)V b
	getConnection ()Lnet/minecraft/network/Connection; a
	getUserName ()Ljava/lang/String; d
	handleAcceptedLogin ()V c
	handleCustomQueryPacket (Lnet/minecraft/network/protocol/login/ServerboundCustomQueryPacket;)V a
	handleHello (Lnet/minecraft/network/protocol/login/ServerboundHelloPacket;)V a
	handleKey (Lnet/minecraft/network/protocol/login/ServerboundKeyPacket;)V a
	onDisconnect (Lnet/minecraft/network/chat/Component;)V a
	placeNewPlayer (Lnet/minecraft/server/level/ServerPlayer;)V a
	tick ()V b
net/minecraft/server/network/ServerLoginPacketListenerImpl$State acl$a
	$VALUES h
	ACCEPTED g
	AUTHENTICATING c
	DELAY_ACCEPT f
	HELLO a
	KEY b
	NEGOTIATING d
	READY_TO_ACCEPT e
	$values ()[Lnet/minecraft/server/network/ServerLoginPacketListenerImpl$State; a
net/minecraft/server/network/ServerPlayerConnection acm
	getPlayer ()Lnet/minecraft/server/level/ServerPlayer; d
	send (Lnet/minecraft/network/protocol/Packet;)V a
net/minecraft/server/network/ServerStatusPacketListenerImpl acn
	DISCONNECT_REASON a
	connection c
	hasRequestedStatus d
	server b
	getConnection ()Lnet/minecraft/network/Connection; a
	handlePingRequest (Lnet/minecraft/network/protocol/status/ServerboundPingRequestPacket;)V a
	handleStatusRequest (Lnet/minecraft/network/protocol/status/ServerboundStatusRequestPacket;)V a
	onDisconnect (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/server/network/TextFilter aco
	DUMMY a
	join ()V a
	leave ()V b
	processMessageBundle (Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; a
	processStreamMessage (Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/network/TextFilter$FilteredText aco$a
	EMPTY a
	filtered c
	raw b
	fullyFiltered (Ljava/lang/String;)Lnet/minecraft/server/network/TextFilter$FilteredText; b
	getFiltered ()Ljava/lang/String; b
	getRaw ()Ljava/lang/String; a
	passThrough (Ljava/lang/String;)Lnet/minecraft/server/network/TextFilter$FilteredText; a
net/minecraft/server/network/TextFilterClient acp
	LOGGER a
	THREAD_FACTORY c
	WORKER_COUNT b
	authKey g
	chatEndpoint d
	chatIgnoreStrategy j
	joinEndpoint e
	leaveEndpoint f
	ruleId h
	serverId i
	workerPool k
	createContext (Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/server/network/TextFilter; a
	createFromConfig (Ljava/lang/String;)Lnet/minecraft/server/network/TextFilterClient; a
	drainStream (Ljava/io/InputStream;)V a
	makeRequest (Lcom/google/gson/JsonObject;Ljava/net/URL;)Ljava/net/HttpURLConnection; c
	processJoinOrLeave (Lcom/mojang/authlib/GameProfile;Ljava/net/URL;Ljava/util/concurrent/Executor;)V a
	processRequest (Lcom/google/gson/JsonObject;Ljava/net/URL;)V b
	processRequestResponse (Lcom/google/gson/JsonObject;Ljava/net/URL;)Lcom/google/gson/JsonObject; a
	requestMessageProcessing (Lcom/mojang/authlib/GameProfile;Ljava/lang/String;Lnet/minecraft/server/network/TextFilterClient$IgnoreStrategy;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/network/TextFilterClient$IgnoreStrategy acp$a
	IGNORE_FULLY_FILTERED b
	NEVER_IGNORE a
	ignoreOverThreshold (I)Lnet/minecraft/server/network/TextFilterClient$IgnoreStrategy; a
	select (I)Lnet/minecraft/server/network/TextFilterClient$IgnoreStrategy; b
net/minecraft/server/network/TextFilterClient$PlayerContext acp$b
	profile c
	streamExecutor d
	join ()V a
	leave ()V b
	processMessageBundle (Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; a
	processStreamMessage (Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/network/TextFilterClient$RequestFailedException acp$c
net/minecraft/server/packs/AbstractPackResources acs
	LOGGER b
	file a
	getMetadataFromStream (Lnet/minecraft/server/packs/metadata/MetadataSectionSerializer;Ljava/io/InputStream;)Ljava/lang/Object; a
	getMetadataSection (Lnet/minecraft/server/packs/metadata/MetadataSectionSerializer;)Ljava/lang/Object; a
	getName ()Ljava/lang/String; a
	getPathFromLocation (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Ljava/lang/String; c
	getRelativePath (Ljava/io/File;Ljava/io/File;)Ljava/lang/String; a
	getResource (Ljava/lang/String;)Ljava/io/InputStream; a
	getResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Ljava/io/InputStream; a
	getRootResource (Ljava/lang/String;)Ljava/io/InputStream; b
	hasResource (Ljava/lang/String;)Z c
	hasResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Z b
	logWarning (Ljava/lang/String;)V d
net/minecraft/server/packs/FilePackResources act
	SPLITTER b
	zipFile e
	getNamespaces (Lnet/minecraft/server/packs/PackType;)Ljava/util/Set; a
	getOrCreateZipFile ()Ljava/util/zip/ZipFile; b
	getResource (Ljava/lang/String;)Ljava/io/InputStream; a
	getResources (Lnet/minecraft/server/packs/PackType;Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; a
	hasResource (Ljava/lang/String;)Z c
net/minecraft/server/packs/FolderPackResources acu
	BACKSLASH_MATCHER f
	LOGGER b
	ON_WINDOWS e
	getFile (Ljava/lang/String;)Ljava/io/File; e
	getNamespaces (Lnet/minecraft/server/packs/PackType;)Ljava/util/Set; a
	getResource (Ljava/lang/String;)Ljava/io/InputStream; a
	getResources (Lnet/minecraft/server/packs/PackType;Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; a
	hasResource (Ljava/lang/String;)Z c
	listResources (Ljava/io/File;ILjava/lang/String;Ljava/util/List;Ljava/lang/String;Ljava/util/function/Predicate;)V a
	validatePath (Ljava/io/File;Ljava/lang/String;)Z a
net/minecraft/server/packs/PackResources acv
	METADATA_EXTENSION c
	PACK_META d
	getMetadataSection (Lnet/minecraft/server/packs/metadata/MetadataSectionSerializer;)Ljava/lang/Object; a
	getName ()Ljava/lang/String; a
	getNamespaces (Lnet/minecraft/server/packs/PackType;)Ljava/util/Set; a
	getResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Ljava/io/InputStream; a
	getResources (Lnet/minecraft/server/packs/PackType;Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; a
	getRootResource (Ljava/lang/String;)Ljava/io/InputStream; b
	hasResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Z b
net/minecraft/server/packs/PackType acw
	$VALUES e
	CLIENT_RESOURCES a
	SERVER_DATA b
	bridgeType d
	directory c
	$values ()[Lnet/minecraft/server/packs/PackType; b
	getDirectory ()Ljava/lang/String; a
	getVersion (Lcom/mojang/bridge/game/GameVersion;)I a
net/minecraft/server/packs/ResourcePackFileNotFoundException acx
net/minecraft/server/packs/VanillaPackResources acy
	JAR_FILESYSTEM_BY_TYPE h
	LOGGER g
	clientObject b
	generatedDir a
	namespaces f
	packMetadata e
	createPath (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Ljava/lang/String; d
	getMetadataSection (Lnet/minecraft/server/packs/metadata/MetadataSectionSerializer;)Ljava/lang/Object; a
	getName ()Ljava/lang/String; a
	getNamespaces (Lnet/minecraft/server/packs/PackType;)Ljava/util/Set; a
	getResource (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/server/packs/resources/Resource; a
	getResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Ljava/io/InputStream; a
	getResourceAsStream (Ljava/lang/String;)Ljava/io/InputStream; a
	getResourceAsStream (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Ljava/io/InputStream; c
	getResources (Ljava/util/Collection;ILjava/lang/String;Ljava/nio/file/Path;Ljava/lang/String;Ljava/util/function/Predicate;)V a
	getResources (Lnet/minecraft/server/packs/PackType;Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; a
	getRootResource (Ljava/lang/String;)Ljava/io/InputStream; b
	hasResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Z b
	isResourceUrlValid (Ljava/lang/String;Ljava/net/URL;)Z a
net/minecraft/server/packs/metadata/MetadataSectionSerializer acz
	fromJson (Lcom/google/gson/JsonObject;)Ljava/lang/Object; a
	getMetadataSectionName ()Ljava/lang/String; a
net/minecraft/server/packs/metadata/pack/PackMetadataSection ada
	SERIALIZER a
	description b
	packFormat c
	getDescription ()Lnet/minecraft/network/chat/Component; a
	getPackFormat ()I b
net/minecraft/server/packs/metadata/pack/PackMetadataSectionSerializer adb
	fromJson (Lcom/google/gson/JsonObject;)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/packs/metadata/pack/PackMetadataSection; b
	getMetadataSectionName ()Ljava/lang/String; a
net/minecraft/server/packs/repository/FolderRepositorySource adf
	RESOURCEPACK_FILTER a
	folder b
	packSource c
	createSupplier (Ljava/io/File;)Ljava/util/function/Supplier; a
	loadPacks (Ljava/util/function/Consumer;Lnet/minecraft/server/packs/repository/Pack$PackConstructor;)V a
net/minecraft/server/packs/repository/Pack adg
	LOGGER a
	compatibility f
	defaultPosition g
	description e
	fixedPosition i
	id b
	packSource j
	required h
	supplier c
	title d
	create (Ljava/lang/String;ZLjava/util/function/Supplier;Lnet/minecraft/server/packs/repository/Pack$PackConstructor;Lnet/minecraft/server/packs/repository/Pack$Position;Lnet/minecraft/server/packs/repository/PackSource;)Lnet/minecraft/server/packs/repository/Pack; a
	getChatLink (Z)Lnet/minecraft/network/chat/Component; a
	getCompatibility ()Lnet/minecraft/server/packs/repository/PackCompatibility; c
	getDefaultPosition ()Lnet/minecraft/server/packs/repository/Pack$Position; h
	getDescription ()Lnet/minecraft/network/chat/Component; b
	getId ()Ljava/lang/String; e
	getPackSource ()Lnet/minecraft/server/packs/repository/PackSource; i
	getTitle ()Lnet/minecraft/network/chat/Component; a
	isFixedPosition ()Z g
	isRequired ()Z f
	open ()Lnet/minecraft/server/packs/PackResources; d
net/minecraft/server/packs/repository/Pack$PackConstructor adg$a
net/minecraft/server/packs/repository/Pack$Position adg$b
	$VALUES c
	BOTTOM b
	TOP a
	$values ()[Lnet/minecraft/server/packs/repository/Pack$Position; b
	insert (Ljava/util/List;Ljava/lang/Object;Ljava/util/function/Function;Z)I a
	opposite ()Lnet/minecraft/server/packs/repository/Pack$Position; a
net/minecraft/server/packs/repository/PackCompatibility adh
	$VALUES f
	COMPATIBLE c
	TOO_NEW b
	TOO_OLD a
	confirmation e
	description d
	$values ()[Lnet/minecraft/server/packs/repository/PackCompatibility; d
	forFormat (ILnet/minecraft/server/packs/PackType;)Lnet/minecraft/server/packs/repository/PackCompatibility; a
	forMetadata (Lnet/minecraft/server/packs/metadata/pack/PackMetadataSection;Lnet/minecraft/server/packs/PackType;)Lnet/minecraft/server/packs/repository/PackCompatibility; a
	getConfirmation ()Lnet/minecraft/network/chat/Component; c
	getDescription ()Lnet/minecraft/network/chat/Component; b
	isCompatible ()Z a
net/minecraft/server/packs/repository/PackRepository adi
	available b
	constructor d
	selected c
	sources a
	discoverAvailable ()Ljava/util/Map; g
	getAvailableIds ()Ljava/util/Collection; b
	getAvailablePacks ()Ljava/util/Collection; c
	getAvailablePacks (Ljava/util/Collection;)Ljava/util/stream/Stream; c
	getPack (Ljava/lang/String;)Lnet/minecraft/server/packs/repository/Pack; a
	getSelectedIds ()Ljava/util/Collection; d
	getSelectedPacks ()Ljava/util/Collection; e
	isAvailable (Ljava/lang/String;)Z b
	openAllSelected ()Ljava/util/List; f
	rebuildSelected (Ljava/util/Collection;)Ljava/util/List; b
	reload ()V a
	setSelected (Ljava/util/Collection;)V a
net/minecraft/server/packs/repository/PackSource adj
	BUILT_IN b
	DEFAULT a
	SERVER d
	WORLD c
	decorating (Ljava/lang/String;)Lnet/minecraft/server/packs/repository/PackSource; a
	passThrough ()Lnet/minecraft/server/packs/repository/PackSource; a
net/minecraft/server/packs/repository/RepositorySource adk
	loadPacks (Ljava/util/function/Consumer;Lnet/minecraft/server/packs/repository/Pack$PackConstructor;)V a
net/minecraft/server/packs/repository/ServerPacksSource adl
	BUILT_IN_METADATA a
	VANILLA_ID b
	vanillaPack c
	loadPacks (Ljava/util/function/Consumer;Lnet/minecraft/server/packs/repository/Pack$PackConstructor;)V a
net/minecraft/server/packs/resources/FallbackResourceManager adn
	LOGGER b
	fallbacks a
	namespace d
	type c
	add (Lnet/minecraft/server/packs/PackResources;)V a
	getMetadataLocation (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceLocation; d
	getNamespaces ()Ljava/util/Set; a
	getResource (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/server/packs/resources/Resource; a
	getResources (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/List; c
	getWrappedResource (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/server/packs/PackResources;)Ljava/io/InputStream; a
	hasResource (Lnet/minecraft/resources/ResourceLocation;)Z b
	isValidLocation (Lnet/minecraft/resources/ResourceLocation;)Z f
	listPacks ()Ljava/util/stream/Stream; b
	listResources (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Collection; a
	validateLocation (Lnet/minecraft/resources/ResourceLocation;)V e
net/minecraft/server/packs/resources/FallbackResourceManager$LeakedResourceWarningInputStream adn$a
	closed b
	message a
net/minecraft/server/packs/resources/PreparableReloadListener ado
	getName ()Ljava/lang/String; c
	reload (Lnet/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier ado$a
	wait (Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/packs/resources/ProfiledReloadInstance adp
	LOGGER d
	total e
	finish (Ljava/util/List;)V a
net/minecraft/server/packs/resources/ProfiledReloadInstance$State adp$a
	name a
	preparationNanos d
	preparationResult b
	reloadNanos e
	reloadResult c
net/minecraft/server/packs/resources/ReloadInstance adq
	checkExceptions ()V d
	done ()Ljava/util/concurrent/CompletableFuture; a
	getActualProgress ()F b
	isDone ()Z c
net/minecraft/server/packs/resources/ReloadableResourceManager adr
	createReload (Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;Ljava/util/List;)Lnet/minecraft/server/packs/resources/ReloadInstance; a
	registerReloadListener (Lnet/minecraft/server/packs/resources/PreparableReloadListener;)V a
	reload (Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/List;Ljava/util/concurrent/CompletableFuture;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/packs/resources/Resource ads
	getInputStream ()Ljava/io/InputStream; b
	getLocation ()Lnet/minecraft/resources/ResourceLocation; a
	getMetadata (Lnet/minecraft/server/packs/metadata/MetadataSectionSerializer;)Ljava/lang/Object; a
	getSourceName ()Ljava/lang/String; d
	hasMetadata ()Z c
net/minecraft/server/packs/resources/ResourceManager adt
	getNamespaces ()Ljava/util/Set; a
	getResources (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/List; c
	hasResource (Lnet/minecraft/resources/ResourceLocation;)Z b
	listPacks ()Ljava/util/stream/Stream; b
	listResources (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Collection; a
net/minecraft/server/packs/resources/ResourceManager$Empty adt$a
	$VALUES b
	INSTANCE a
	$values ()[Lnet/minecraft/server/packs/resources/ResourceManager$Empty; c
	getNamespaces ()Ljava/util/Set; a
	getResource (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/server/packs/resources/Resource; a
	getResources (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/List; c
	hasResource (Lnet/minecraft/resources/ResourceLocation;)Z b
	listPacks ()Ljava/util/stream/Stream; b
	listResources (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Collection; a
net/minecraft/server/packs/resources/ResourceManagerReloadListener adu
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	reload (Lnet/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/packs/resources/ResourceProvider adv
	getResource (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/server/packs/resources/Resource; a
net/minecraft/server/packs/resources/SimpleJsonResourceReloadListener adw
	LOGGER a
	PATH_SUFFIX b
	PATH_SUFFIX_LENGTH c
	directory e
	gson d
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/lang/Object; b
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/util/Map; a
net/minecraft/server/packs/resources/SimplePreparableReloadListener adx
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/lang/Object; b
	reload (Lnet/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/packs/resources/SimpleReloadInstance ady
	EXTRA_RELOAD_PROGRESS_WEIGHT e
	LISTENER_PROGRESS_WEIGHT f
	PREPARATION_PROGRESS_WEIGHT d
	allDone c
	allPreparations b
	doneTaskCounter l
	finishedReloads j
	listenerCount h
	preparingListeners g
	resourceManager a
	startedReloads i
	startedTaskCounter k
	checkExceptions ()V d
	done ()Ljava/util/concurrent/CompletableFuture; a
	getActualProgress ()F b
	isDone ()Z c
	of (Lnet/minecraft/server/packs/resources/ResourceManager;Ljava/util/List;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;)Lnet/minecraft/server/packs/resources/SimpleReloadInstance; a
net/minecraft/server/packs/resources/SimpleReloadInstance$StateFactory ady$a
net/minecraft/server/packs/resources/SimpleReloadableResourceManager adz
	LOGGER a
	listeners c
	namespacedPacks b
	namespaces d
	packs e
	type f
	add (Lnet/minecraft/server/packs/PackResources;)V a
	clear ()V c
	createReload (Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;Ljava/util/List;)Lnet/minecraft/server/packs/resources/ReloadInstance; a
	getNamespaces ()Ljava/util/Set; a
	getResource (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/server/packs/resources/Resource; a
	getResources (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/List; c
	hasResource (Lnet/minecraft/resources/ResourceLocation;)Z b
	listPacks ()Ljava/util/stream/Stream; b
	listResources (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Collection; a
	registerReloadListener (Lnet/minecraft/server/packs/resources/PreparableReloadListener;)V a
net/minecraft/server/packs/resources/SimpleReloadableResourceManager$FailingReloadInstance adz$a
	exception a
	failedFuture b
	checkExceptions ()V d
	done ()Ljava/util/concurrent/CompletableFuture; a
	getActualProgress ()F b
	isDone ()Z c
net/minecraft/server/packs/resources/SimpleReloadableResourceManager$ResourcePackLoadingFailure adz$b
	pack a
	getPack ()Lnet/minecraft/server/packs/PackResources; a
net/minecraft/server/packs/resources/SimpleResource aea
	location b
	metadata f
	metadataStream d
	resourceStream c
	sourceName a
	triedMetadata e
	getInputStream ()Ljava/io/InputStream; b
	getLocation ()Lnet/minecraft/resources/ResourceLocation; a
	getMetadata (Lnet/minecraft/server/packs/metadata/MetadataSectionSerializer;)Ljava/lang/Object; a
	getSourceName ()Ljava/lang/String; d
	hasMetadata ()Z c
net/minecraft/server/players/BanListEntry aec
	DATE_FORMAT a
	EXPIRES_NEVER b
	created c
	expires e
	reason f
	source d
	getCreated ()Ljava/util/Date; a
	getDisplayName ()Lnet/minecraft/network/chat/Component; e
	getExpires ()Ljava/util/Date; c
	getReason ()Ljava/lang/String; d
	getSource ()Ljava/lang/String; b
	hasExpired ()Z f
	serialize (Lcom/google/gson/JsonObject;)V a
net/minecraft/server/players/GameProfileCache aed
	GAMEPROFILES_EXPIRATION_MONTHS c
	GAMEPROFILES_MRU_LIMIT b
	LOGGER a
	executor l
	file j
	gson i
	operationCount k
	profileRepository h
	profilesByName e
	profilesByUUID f
	requests g
	usesAuthentication d
	add (Lcom/mojang/authlib/GameProfile;)V a
	createDateFormat ()Ljava/text/DateFormat; e
	get (Ljava/lang/String;)Lcom/mojang/authlib/GameProfile; a
	get (Ljava/util/UUID;)Lcom/mojang/authlib/GameProfile; a
	getAsync (Ljava/lang/String;Ljava/util/function/Consumer;)V a
	getNextOperation ()J d
	getTopMRUProfiles (I)Ljava/util/stream/Stream; a
	load ()Ljava/util/List; a
	lookupGameProfile (Lcom/mojang/authlib/GameProfileRepository;Ljava/lang/String;)Lcom/mojang/authlib/GameProfile; a
	readGameProfile (Lcom/google/gson/JsonElement;Ljava/text/DateFormat;)Lnet/minecraft/server/players/GameProfileCache$GameProfileInfo; a
	safeAdd (Lnet/minecraft/server/players/GameProfileCache$GameProfileInfo;)V a
	save ()V b
	setExecutor (Ljava/util/concurrent/Executor;)V a
	setUsesAuthentication (Z)V a
	usesAuthentication ()Z c
	writeGameProfile (Lnet/minecraft/server/players/GameProfileCache$GameProfileInfo;Ljava/text/DateFormat;)Lcom/google/gson/JsonElement; a
net/minecraft/server/players/GameProfileCache$GameProfileInfo aed$a
	expirationDate b
	lastAccess c
	profile a
	getExpirationDate ()Ljava/util/Date; b
	getLastAccess ()J c
	getProfile ()Lcom/mojang/authlib/GameProfile; a
	setLastAccess (J)V a
net/minecraft/server/players/IpBanList aee
	createEntry (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/players/StoredUserEntry; a
	get (Ljava/net/SocketAddress;)Lnet/minecraft/server/players/IpBanListEntry; b
	getIpFromAddress (Ljava/net/SocketAddress;)Ljava/lang/String; c
	isBanned (Ljava/lang/String;)Z a
	isBanned (Ljava/net/SocketAddress;)Z a
net/minecraft/server/players/IpBanListEntry aef
	createIpInfo (Lcom/google/gson/JsonObject;)Ljava/lang/String; b
	getDisplayName ()Lnet/minecraft/network/chat/Component; e
	serialize (Lcom/google/gson/JsonObject;)V a
net/minecraft/server/players/OldUsersConverter aeg
	LOGGER e
	OLD_IPBANLIST a
	OLD_OPLIST c
	OLD_USERBANLIST b
	OLD_WHITELIST d
	areOldPlayersConverted (Lnet/minecraft/server/MinecraftServer;)Z f
	areOldUserlistsRemoved ()Z a
	convertIpBanlist (Lnet/minecraft/server/MinecraftServer;)Z b
	convertMobOwnerIfNecessary (Lnet/minecraft/server/MinecraftServer;Ljava/lang/String;)Ljava/util/UUID; a
	convertOpsList (Lnet/minecraft/server/MinecraftServer;)Z c
	convertPlayers (Lnet/minecraft/server/dedicated/DedicatedServer;)Z a
	convertUserBanlist (Lnet/minecraft/server/MinecraftServer;)Z a
	convertWhiteList (Lnet/minecraft/server/MinecraftServer;)Z d
	ensureDirectoryExists (Ljava/io/File;)V a
	getWorldPlayersDirectory (Lnet/minecraft/server/MinecraftServer;)Ljava/io/File; g
	lookupPlayers (Lnet/minecraft/server/MinecraftServer;Ljava/util/Collection;Lcom/mojang/authlib/ProfileLookupCallback;)V a
	parseDate (Ljava/lang/String;Ljava/util/Date;)Ljava/util/Date; a
	readOldListFormat (Ljava/io/File;Ljava/util/Map;)Ljava/util/List; a
	renameOldFile (Ljava/io/File;)V b
	serverReadyAfterUserconversion (Lnet/minecraft/server/MinecraftServer;)Z e
net/minecraft/server/players/OldUsersConverter$ConversionError aeg$a
net/minecraft/server/players/PlayerList aeh
	ALLOW_LOGOUTIVATOR w
	BAN_DATE_FORMAT h
	IPBANLIST_FILE c
	LOGGER a
	OPLIST_FILE d
	SEND_PLAYER_INFO_INTERVAL g
	USERBANLIST_FILE b
	WHITELIST_FILE e
	advancements q
	allowCheatsForAllPlayers v
	bans l
	doWhiteList s
	ipBans m
	maxPlayers f
	ops n
	playerIo r
	players j
	playersByUUID k
	registryHolder t
	sendAllPlayerInfoIn x
	server i
	stats p
	viewDistance u
	whitelist o
	broadcast (Lnet/minecraft/world/entity/player/Player;DDDDLnet/minecraft/resources/ResourceKey;Lnet/minecraft/network/protocol/Packet;)V a
	broadcastAll (Lnet/minecraft/network/protocol/Packet;)V a
	broadcastAll (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/resources/ResourceKey;)V a
	broadcastMessage (Lnet/minecraft/network/chat/Component;Ljava/util/function/Function;Lnet/minecraft/network/chat/ChatType;Ljava/util/UUID;)V a
	broadcastMessage (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/ChatType;Ljava/util/UUID;)V a
	broadcastToAllExceptTeam (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/network/chat/Component;)V b
	broadcastToTeam (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/network/chat/Component;)V a
	canBypassPlayerLimit (Lcom/mojang/authlib/GameProfile;)Z d
	canPlayerLogin (Ljava/net/SocketAddress;Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/network/chat/Component; a
	deop (Lcom/mojang/authlib/GameProfile;)V b
	getBans ()Lnet/minecraft/server/players/UserBanList; f
	getIpBans ()Lnet/minecraft/server/players/IpBanList; g
	getMaxPlayers ()I n
	getOpNames ()[Ljava/lang/String; l
	getOps ()Lnet/minecraft/server/players/ServerOpList; k
	getPlayer (Ljava/util/UUID;)Lnet/minecraft/server/level/ServerPlayer; a
	getPlayerAdvancements (Lnet/minecraft/server/level/ServerPlayer;)Lnet/minecraft/server/PlayerAdvancements; f
	getPlayerByName (Ljava/lang/String;)Lnet/minecraft/server/level/ServerPlayer; a
	getPlayerCount ()I m
	getPlayerForLogin (Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/server/level/ServerPlayer; e
	getPlayerNamesArray ()[Ljava/lang/String; e
	getPlayerStats (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/stats/ServerStatsCounter; a
	getPlayers ()Ljava/util/List; s
	getPlayersWithAddress (Ljava/lang/String;)Ljava/util/List; b
	getServer ()Lnet/minecraft/server/MinecraftServer; c
	getSingleplayerData ()Lnet/minecraft/nbt/CompoundTag; q
	getViewDistance ()I p
	getWhiteList ()Lnet/minecraft/server/players/UserWhiteList; i
	getWhiteListNames ()[Ljava/lang/String; j
	isAllowCheatsForAllPlayers ()Z u
	isOp (Lcom/mojang/authlib/GameProfile;)Z f
	isUsingWhitelist ()Z o
	isWhiteListed (Lcom/mojang/authlib/GameProfile;)Z c
	load (Lnet/minecraft/server/level/ServerPlayer;)Lnet/minecraft/nbt/CompoundTag; a
	op (Lcom/mojang/authlib/GameProfile;)V a
	placeNewPlayer (Lnet/minecraft/network/Connection;Lnet/minecraft/server/level/ServerPlayer;)V a
	reloadResources ()V t
	reloadWhiteList ()V a
	remove (Lnet/minecraft/server/level/ServerPlayer;)V c
	removeAll ()V r
	respawn (Lnet/minecraft/server/level/ServerPlayer;Z)Lnet/minecraft/server/level/ServerPlayer; a
	save (Lnet/minecraft/server/level/ServerPlayer;)V b
	saveAll ()V h
	sendAllPlayerInfo (Lnet/minecraft/server/level/ServerPlayer;)V e
	sendLevelInfo (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/server/level/ServerLevel;)V a
	sendPlayerPermissionLevel (Lnet/minecraft/server/level/ServerPlayer;)V d
	sendPlayerPermissionLevel (Lnet/minecraft/server/level/ServerPlayer;I)V a
	setAllowCheatsForAllPlayers (Z)V b
	setLevel (Lnet/minecraft/server/level/ServerLevel;)V a
	setUsingWhiteList (Z)V a
	setViewDistance (I)V a
	tick ()V d
	updateEntireScoreboard (Lnet/minecraft/server/ServerScoreboard;Lnet/minecraft/server/level/ServerPlayer;)V a
net/minecraft/server/players/ServerOpList aei
	canBypassPlayerLimit (Lcom/mojang/authlib/GameProfile;)Z a
	createEntry (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/players/StoredUserEntry; a
	getKeyForUser (Lcom/mojang/authlib/GameProfile;)Ljava/lang/String; b
	getKeyForUser (Ljava/lang/Object;)Ljava/lang/String; a
	getUserList ()[Ljava/lang/String; a
net/minecraft/server/players/ServerOpListEntry aej
	bypassesPlayerLimit b
	level a
	createGameProfile (Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile; b
	getBypassesPlayerLimit ()Z b
	getLevel ()I a
	serialize (Lcom/google/gson/JsonObject;)V a
net/minecraft/server/players/SleepStatus aek
	activePlayers a
	sleepingPlayers b
	amountSleeping ()I b
	areEnoughDeepSleeping (ILjava/util/List;)Z a
	areEnoughSleeping (I)Z a
	removeAllSleepers ()V a
	sleepersNeeded (I)I b
	update (Ljava/util/List;)Z a
net/minecraft/server/players/StoredUserEntry ael
	user a
	getUser ()Ljava/lang/Object; g
	hasExpired ()Z f
	serialize (Lcom/google/gson/JsonObject;)V a
net/minecraft/server/players/StoredUserList aem
	GSON b
	LOGGER a
	file c
	map d
	add (Lnet/minecraft/server/players/StoredUserEntry;)V a
	contains (Ljava/lang/Object;)Z d
	createEntry (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/players/StoredUserEntry; a
	get (Ljava/lang/Object;)Lnet/minecraft/server/players/StoredUserEntry; b
	getEntries ()Ljava/util/Collection; d
	getFile ()Ljava/io/File; b
	getKeyForUser (Ljava/lang/Object;)Ljava/lang/String; a
	getUserList ()[Ljava/lang/String; a
	isEmpty ()Z c
	load ()V f
	remove (Ljava/lang/Object;)V c
	remove (Lnet/minecraft/server/players/StoredUserEntry;)V b
	removeExpired ()V g
	save ()V e
net/minecraft/server/players/UserBanList aen
	createEntry (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/players/StoredUserEntry; a
	getKeyForUser (Lcom/mojang/authlib/GameProfile;)Ljava/lang/String; b
	getKeyForUser (Ljava/lang/Object;)Ljava/lang/String; a
	getUserList ()[Ljava/lang/String; a
	isBanned (Lcom/mojang/authlib/GameProfile;)Z a
net/minecraft/server/players/UserBanListEntry aeo
	createGameProfile (Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile; b
	getDisplayName ()Lnet/minecraft/network/chat/Component; e
	serialize (Lcom/google/gson/JsonObject;)V a
net/minecraft/server/players/UserWhiteList aep
	createEntry (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/players/StoredUserEntry; a
	getKeyForUser (Lcom/mojang/authlib/GameProfile;)Ljava/lang/String; b
	getKeyForUser (Ljava/lang/Object;)Ljava/lang/String; a
	getUserList ()[Ljava/lang/String; a
	isWhiteListed (Lcom/mojang/authlib/GameProfile;)Z a
net/minecraft/server/players/UserWhiteListEntry aeq
	createGameProfile (Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile; b
	serialize (Lcom/google/gson/JsonObject;)V a
net/minecraft/server/rcon/NetworkDataOutputStream aes
	dataOutputStream b
	outputStream a
	reset ()V b
	toByteArray ()[B a
	write (I)V a
	writeBytes ([B)V a
	writeFloat (F)V a
	writeInt (I)V b
	writeShort (S)V a
	writeString (Ljava/lang/String;)V a
net/minecraft/server/rcon/PktUtils aet
	HEX_CHAR b
	MAX_PACKET_SIZE a
	intFromByteArray ([BI)I a
	intFromByteArray ([BII)I b
	intFromNetworkByteArray ([BII)I c
	stringFromByteArray ([BII)Ljava/lang/String; a
	toHexString (B)Ljava/lang/String; a
net/minecraft/server/rcon/RconConsoleSource aeu
	RCON b
	RCON_COMPONENT c
	buffer d
	server e
	acceptsFailure ()Z i_
	acceptsSuccess ()Z h_
	createCommandSourceStack ()Lnet/minecraft/commands/CommandSourceStack; g
	getCommandResponse ()Ljava/lang/String; f
	prepareForCommand ()V e
	sendMessage (Lnet/minecraft/network/chat/Component;Ljava/util/UUID;)V a
	shouldInformAdmins ()Z E_
net/minecraft/server/rcon/thread/GenericThread aew
	LOGGER d
	MAX_STOP_WAIT f
	UNIQUE_THREAD_ID e
	name b
	running a
	thread c
	isRunning ()Z c
	start ()Z a
	stop ()V b
net/minecraft/server/rcon/thread/QueryThreadGs4 aex
	CHALLENGE_CHECK_INTERVAL g
	GAME_ID f
	GAME_TYPE e
	LOGGER d
	RESPONSE_CACHE_TIME h
	buffer p
	hostIp q
	lastChallengeCheck i
	lastRulesResponse u
	maxPlayers l
	port j
	rulesResponse t
	serverInterface v
	serverIp r
	serverName m
	serverPort k
	socket o
	validChallenges s
	worldName n
	buildRuleResponse (Ljava/net/DatagramPacket;)[B b
	create (Lnet/minecraft/server/ServerInterface;)Lnet/minecraft/server/rcon/thread/QueryThreadGs4; a
	getIdentBytes (Ljava/net/SocketAddress;)[B a
	initSocket ()Z e
	processPacket (Ljava/net/DatagramPacket;)Z a
	pruneChallenges ()V d
	recoverSocketError (Ljava/lang/Exception;)V a
	sendChallenge (Ljava/net/DatagramPacket;)V d
	sendTo ([BLjava/net/DatagramPacket;)V a
	start ()Z a
	validChallenge (Ljava/net/DatagramPacket;)Ljava/lang/Boolean; c
net/minecraft/server/rcon/thread/QueryThreadGs4$RequestChallenge aex$a
	challenge b
	challengeBytes d
	ident e
	identBytes c
	time a
	before (J)Ljava/lang/Boolean; a
	getChallenge ()I a
	getChallengeBytes ()[B b
	getIdent ()Ljava/lang/String; d
	getIdentBytes ()[B c
net/minecraft/server/rcon/thread/RconClient aey
	LOGGER d
	SERVERDATA_AUTH e
	SERVERDATA_AUTH_FAILURE i
	SERVERDATA_AUTH_RESPONSE h
	SERVERDATA_EXECCOMMAND f
	SERVERDATA_RESPONSE_VALUE g
	authed j
	buf l
	client k
	rconPassword m
	serverInterface n
	closeSocket ()V e
	send (IILjava/lang/String;)V a
	sendAuthFailure ()V d
	sendCmdResponse (ILjava/lang/String;)V a
	stop ()V b
net/minecraft/server/rcon/thread/RconThread aez
	LOGGER d
	clients g
	rconPassword f
	serverInterface h
	socket e
	clearClients ()V d
	closeSocket (Ljava/net/ServerSocket;)V a
	create (Lnet/minecraft/server/ServerInterface;)Lnet/minecraft/server/rcon/thread/RconThread; a
	stop ()V b
net/minecraft/sounds/Music afb
	CODEC a
	event b
	maxDelay d
	minDelay c
	replaceCurrentMusic e
	getEvent ()Lnet/minecraft/sounds/SoundEvent; a
	getMaxDelay ()I c
	getMinDelay ()I b
	replaceCurrentMusic ()Z d
net/minecraft/sounds/Musics afc
	CREATIVE b
	CREDITS c
	END e
	END_BOSS d
	FIVE_MINUTES l
	GAME g
	MENU a
	ONE_SECOND h
	TEN_MINUTES j
	THIRTY_SECONDS i
	TWENTY_MINUTES k
	UNDER_WATER f
	createGameMusic (Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/sounds/Music; a
net/minecraft/sounds/SoundEvent afd
	CODEC a
	location b
	getLocation ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/sounds/SoundEvents afe
	AMBIENT_BASALT_DELTAS_ADDITIONS b
	AMBIENT_BASALT_DELTAS_LOOP c
	AMBIENT_BASALT_DELTAS_MOOD d
	AMBIENT_CAVE a
	AMBIENT_CRIMSON_FOREST_ADDITIONS e
	AMBIENT_CRIMSON_FOREST_LOOP f
	AMBIENT_CRIMSON_FOREST_MOOD g
	AMBIENT_NETHER_WASTES_ADDITIONS h
	AMBIENT_NETHER_WASTES_LOOP i
	AMBIENT_NETHER_WASTES_MOOD j
	AMBIENT_SOUL_SAND_VALLEY_ADDITIONS k
	AMBIENT_SOUL_SAND_VALLEY_LOOP l
	AMBIENT_SOUL_SAND_VALLEY_MOOD m
	AMBIENT_UNDERWATER_ENTER q
	AMBIENT_UNDERWATER_EXIT r
	AMBIENT_UNDERWATER_LOOP s
	AMBIENT_UNDERWATER_LOOP_ADDITIONS t
	AMBIENT_UNDERWATER_LOOP_ADDITIONS_RARE u
	AMBIENT_UNDERWATER_LOOP_ADDITIONS_ULTRA_RARE v
	AMBIENT_WARPED_FOREST_ADDITIONS n
	AMBIENT_WARPED_FOREST_LOOP o
	AMBIENT_WARPED_FOREST_MOOD p
	AMETHYST_BLOCK_BREAK w
	AMETHYST_BLOCK_CHIME x
	AMETHYST_BLOCK_FALL y
	AMETHYST_BLOCK_HIT z
	AMETHYST_BLOCK_PLACE A
	AMETHYST_BLOCK_STEP B
	AMETHYST_CLUSTER_BREAK C
	AMETHYST_CLUSTER_FALL D
	AMETHYST_CLUSTER_HIT E
	AMETHYST_CLUSTER_PLACE F
	AMETHYST_CLUSTER_STEP G
	ANCIENT_DEBRIS_BREAK H
	ANCIENT_DEBRIS_FALL L
	ANCIENT_DEBRIS_HIT K
	ANCIENT_DEBRIS_PLACE J
	ANCIENT_DEBRIS_STEP I
	ANVIL_BREAK M
	ANVIL_DESTROY N
	ANVIL_FALL O
	ANVIL_HIT P
	ANVIL_LAND Q
	ANVIL_PLACE R
	ANVIL_STEP S
	ANVIL_USE T
	ARMOR_EQUIP_CHAIN U
	ARMOR_EQUIP_DIAMOND V
	ARMOR_EQUIP_ELYTRA W
	ARMOR_EQUIP_GENERIC X
	ARMOR_EQUIP_GOLD Y
	ARMOR_EQUIP_IRON Z
	ARMOR_EQUIP_LEATHER aa
	ARMOR_EQUIP_NETHERITE ab
	ARMOR_EQUIP_TURTLE ac
	ARMOR_STAND_BREAK ad
	ARMOR_STAND_FALL ae
	ARMOR_STAND_HIT af
	ARMOR_STAND_PLACE ag
	ARROW_HIT ah
	ARROW_HIT_PLAYER ai
	ARROW_SHOOT aj
	AXE_SCRAPE al
	AXE_STRIP ak
	AXE_WAX_OFF am
	AXOLOTL_ATTACK an
	AXOLOTL_DEATH ao
	AXOLOTL_HURT ap
	AXOLOTL_IDLE_AIR aq
	AXOLOTL_IDLE_WATER ar
	AXOLOTL_SPLASH as
	AXOLOTL_SWIM at
	AZALEA_BREAK au
	AZALEA_FALL av
	AZALEA_HIT aw
	AZALEA_LEAVES_BREAK az
	AZALEA_LEAVES_FALL aA
	AZALEA_LEAVES_HIT aB
	AZALEA_LEAVES_PLACE aC
	AZALEA_LEAVES_STEP aD
	AZALEA_PLACE ax
	AZALEA_STEP ay
	BAMBOO_BREAK aE
	BAMBOO_FALL aF
	BAMBOO_HIT aG
	BAMBOO_PLACE aH
	BAMBOO_SAPLING_BREAK aJ
	BAMBOO_SAPLING_HIT aK
	BAMBOO_SAPLING_PLACE aL
	BAMBOO_STEP aI
	BARREL_CLOSE aM
	BARREL_OPEN aN
	BASALT_BREAK aO
	BASALT_FALL aS
	BASALT_HIT aR
	BASALT_PLACE aQ
	BASALT_STEP aP
	BAT_AMBIENT aT
	BAT_DEATH aU
	BAT_HURT aV
	BAT_LOOP aW
	BAT_TAKEOFF aX
	BEACON_ACTIVATE aY
	BEACON_AMBIENT aZ
	BEACON_DEACTIVATE ba
	BEACON_POWER_SELECT bb
	BEEHIVE_DRIP bi
	BEEHIVE_ENTER bj
	BEEHIVE_EXIT bk
	BEEHIVE_SHEAR bl
	BEEHIVE_WORK bm
	BEE_DEATH bc
	BEE_HURT bd
	BEE_LOOP bf
	BEE_LOOP_AGGRESSIVE be
	BEE_POLLINATE bh
	BEE_STING bg
	BELL_BLOCK bn
	BELL_RESONATE bo
	BIG_DRIPLEAF_BREAK bp
	BIG_DRIPLEAF_FALL bq
	BIG_DRIPLEAF_HIT br
	BIG_DRIPLEAF_PLACE bs
	BIG_DRIPLEAF_STEP bt
	BIG_DRIPLEAF_TILT_DOWN eJ
	BIG_DRIPLEAF_TILT_UP eK
	BLASTFURNACE_FIRE_CRACKLE bJ
	BLAZE_AMBIENT bu
	BLAZE_BURN bv
	BLAZE_DEATH bw
	BLAZE_HURT bx
	BLAZE_SHOOT by
	BOAT_PADDLE_LAND bz
	BOAT_PADDLE_WATER bA
	BONE_BLOCK_BREAK bB
	BONE_BLOCK_FALL bC
	BONE_BLOCK_HIT bD
	BONE_BLOCK_PLACE bE
	BONE_BLOCK_STEP bF
	BONE_MEAL_USE bG
	BOOK_PAGE_TURN bH
	BOOK_PUT bI
	BOTTLE_EMPTY bK
	BOTTLE_FILL bL
	BOTTLE_FILL_DRAGONBREATH bM
	BREWING_STAND_BREW bN
	BUBBLE_COLUMN_BUBBLE_POP bO
	BUBBLE_COLUMN_UPWARDS_AMBIENT bP
	BUBBLE_COLUMN_UPWARDS_INSIDE bQ
	BUBBLE_COLUMN_WHIRLPOOL_AMBIENT bR
	BUBBLE_COLUMN_WHIRLPOOL_INSIDE bS
	BUCKET_EMPTY bT
	BUCKET_EMPTY_AXOLOTL bU
	BUCKET_EMPTY_FISH bV
	BUCKET_EMPTY_LAVA bW
	BUCKET_EMPTY_POWDER_SNOW bX
	BUCKET_FILL bY
	BUCKET_FILL_AXOLOTL bZ
	BUCKET_FILL_FISH ca
	BUCKET_FILL_LAVA cb
	BUCKET_FILL_POWDER_SNOW cc
	CAKE_ADD_CANDLE cd
	CALCITE_BREAK ce
	CALCITE_FALL ci
	CALCITE_HIT ch
	CALCITE_PLACE cg
	CALCITE_STEP cf
	CAMPFIRE_CRACKLE cj
	CANDLE_AMBIENT ck
	CANDLE_BREAK cl
	CANDLE_EXTINGUISH cm
	CANDLE_FALL cn
	CANDLE_HIT co
	CANDLE_PLACE cp
	CANDLE_STEP cq
	CAT_AMBIENT cr
	CAT_BEG_FOR_FOOD cw
	CAT_DEATH ct
	CAT_EAT cu
	CAT_HISS cv
	CAT_HURT cx
	CAT_PURR cy
	CAT_PURREOW cz
	CAT_STRAY_AMBIENT cs
	CAVE_VINES_BREAK cA
	CAVE_VINES_FALL cB
	CAVE_VINES_HIT cC
	CAVE_VINES_PICK_BERRIES cF
	CAVE_VINES_PLACE cD
	CAVE_VINES_STEP cE
	CHAIN_BREAK cG
	CHAIN_FALL cH
	CHAIN_HIT cI
	CHAIN_PLACE cJ
	CHAIN_STEP cK
	CHEST_CLOSE cL
	CHEST_LOCKED cM
	CHEST_OPEN cN
	CHICKEN_AMBIENT cO
	CHICKEN_DEATH cP
	CHICKEN_EGG cQ
	CHICKEN_HURT cR
	CHICKEN_STEP cS
	CHORUS_FLOWER_DEATH cT
	CHORUS_FLOWER_GROW cU
	CHORUS_FRUIT_TELEPORT cV
	COD_AMBIENT cW
	COD_DEATH cX
	COD_FLOP cY
	COD_HURT cZ
	COMPARATOR_CLICK da
	COMPOSTER_EMPTY db
	COMPOSTER_FILL dc
	COMPOSTER_FILL_SUCCESS dd
	COMPOSTER_READY de
	CONDUIT_ACTIVATE df
	CONDUIT_AMBIENT dg
	CONDUIT_AMBIENT_SHORT dh
	CONDUIT_ATTACK_TARGET di
	CONDUIT_DEACTIVATE dj
	COPPER_BREAK dk
	COPPER_FALL do
	COPPER_HIT dn
	COPPER_PLACE dm
	COPPER_STEP dl
	CORAL_BLOCK_BREAK dp
	CORAL_BLOCK_FALL dq
	CORAL_BLOCK_HIT dr
	CORAL_BLOCK_PLACE ds
	CORAL_BLOCK_STEP dt
	COW_AMBIENT du
	COW_DEATH dv
	COW_HURT dw
	COW_MILK dx
	COW_STEP dy
	CREEPER_DEATH dz
	CREEPER_HURT dA
	CREEPER_PRIMED dB
	CROP_BREAK dC
	CROP_PLANTED dD
	CROSSBOW_HIT dE
	CROSSBOW_LOADING_END dF
	CROSSBOW_LOADING_MIDDLE dG
	CROSSBOW_LOADING_START dH
	CROSSBOW_QUICK_CHARGE_1 dI
	CROSSBOW_QUICK_CHARGE_2 dJ
	CROSSBOW_QUICK_CHARGE_3 dK
	CROSSBOW_SHOOT dL
	DEEPSLATE_BREAK dR
	DEEPSLATE_BRICKS_BREAK dM
	DEEPSLATE_BRICKS_FALL dN
	DEEPSLATE_BRICKS_HIT dO
	DEEPSLATE_BRICKS_PLACE dP
	DEEPSLATE_BRICKS_STEP dQ
	DEEPSLATE_FALL dS
	DEEPSLATE_HIT dT
	DEEPSLATE_PLACE dU
	DEEPSLATE_STEP dV
	DEEPSLATE_TILES_BREAK dW
	DEEPSLATE_TILES_FALL dX
	DEEPSLATE_TILES_HIT dY
	DEEPSLATE_TILES_PLACE dZ
	DEEPSLATE_TILES_STEP ea
	DISPENSER_DISPENSE eb
	DISPENSER_FAIL ec
	DISPENSER_LAUNCH ed
	DOLPHIN_AMBIENT ee
	DOLPHIN_AMBIENT_WATER ef
	DOLPHIN_ATTACK eg
	DOLPHIN_DEATH eh
	DOLPHIN_EAT ei
	DOLPHIN_HURT ej
	DOLPHIN_JUMP ek
	DOLPHIN_PLAY el
	DOLPHIN_SPLASH em
	DOLPHIN_SWIM en
	DONKEY_AMBIENT eo
	DONKEY_ANGRY ep
	DONKEY_CHEST eq
	DONKEY_DEATH er
	DONKEY_EAT es
	DONKEY_HURT et
	DRAGON_FIREBALL_EXPLODE fk
	DRIPSTONE_BLOCK_BREAK eu
	DRIPSTONE_BLOCK_FALL ey
	DRIPSTONE_BLOCK_HIT ex
	DRIPSTONE_BLOCK_PLACE ew
	DRIPSTONE_BLOCK_STEP ev
	DROWNED_AMBIENT eL
	DROWNED_AMBIENT_WATER eM
	DROWNED_DEATH eN
	DROWNED_DEATH_WATER eO
	DROWNED_HURT eP
	DROWNED_HURT_WATER eQ
	DROWNED_SHOOT eR
	DROWNED_STEP eS
	DROWNED_SWIM eT
	DYE_USE eU
	EGG_THROW eV
	ELDER_GUARDIAN_AMBIENT eW
	ELDER_GUARDIAN_AMBIENT_LAND eX
	ELDER_GUARDIAN_CURSE eY
	ELDER_GUARDIAN_DEATH eZ
	ELDER_GUARDIAN_DEATH_LAND fa
	ELDER_GUARDIAN_FLOP fb
	ELDER_GUARDIAN_HURT fc
	ELDER_GUARDIAN_HURT_LAND fd
	ELYTRA_FLYING fe
	ENCHANTMENT_TABLE_USE ff
	ENDERMAN_AMBIENT fr
	ENDERMAN_DEATH fs
	ENDERMAN_HURT ft
	ENDERMAN_SCREAM fu
	ENDERMAN_STARE fv
	ENDERMAN_TELEPORT fw
	ENDERMITE_AMBIENT fx
	ENDERMITE_DEATH fy
	ENDERMITE_HURT fz
	ENDERMITE_STEP fA
	ENDER_CHEST_CLOSE fg
	ENDER_CHEST_OPEN fh
	ENDER_DRAGON_AMBIENT fi
	ENDER_DRAGON_DEATH fj
	ENDER_DRAGON_FLAP fl
	ENDER_DRAGON_GROWL fm
	ENDER_DRAGON_HURT fn
	ENDER_DRAGON_SHOOT fo
	ENDER_EYE_DEATH fp
	ENDER_EYE_LAUNCH fq
	ENDER_PEARL_THROW fB
	END_GATEWAY_SPAWN fC
	END_PORTAL_FRAME_FILL fD
	END_PORTAL_SPAWN fE
	EVOKER_AMBIENT fF
	EVOKER_CAST_SPELL fG
	EVOKER_CELEBRATE fH
	EVOKER_DEATH fI
	EVOKER_FANGS_ATTACK fJ
	EVOKER_HURT fK
	EVOKER_PREPARE_ATTACK fL
	EVOKER_PREPARE_SUMMON fM
	EVOKER_PREPARE_WOLOLO fN
	EXPERIENCE_BOTTLE_THROW fO
	EXPERIENCE_ORB_PICKUP fP
	FENCE_GATE_CLOSE fQ
	FENCE_GATE_OPEN fR
	FIRECHARGE_USE fS
	FIREWORK_ROCKET_BLAST fT
	FIREWORK_ROCKET_BLAST_FAR fU
	FIREWORK_ROCKET_LARGE_BLAST fV
	FIREWORK_ROCKET_LARGE_BLAST_FAR fW
	FIREWORK_ROCKET_LAUNCH fX
	FIREWORK_ROCKET_SHOOT fY
	FIREWORK_ROCKET_TWINKLE fZ
	FIREWORK_ROCKET_TWINKLE_FAR ga
	FIRE_AMBIENT gb
	FIRE_EXTINGUISH gc
	FISHING_BOBBER_RETRIEVE ge
	FISHING_BOBBER_SPLASH gf
	FISHING_BOBBER_THROW gg
	FISH_SWIM gd
	FLINTANDSTEEL_USE gh
	FLOWERING_AZALEA_BREAK gi
	FLOWERING_AZALEA_FALL gj
	FLOWERING_AZALEA_HIT gk
	FLOWERING_AZALEA_PLACE gl
	FLOWERING_AZALEA_STEP gm
	FOX_AGGRO gn
	FOX_AMBIENT go
	FOX_BITE gp
	FOX_DEATH gq
	FOX_EAT gr
	FOX_HURT gs
	FOX_SCREECH gt
	FOX_SLEEP gu
	FOX_SNIFF gv
	FOX_SPIT gw
	FOX_TELEPORT gx
	FUNGUS_BREAK lL
	FUNGUS_FALL lP
	FUNGUS_HIT lO
	FUNGUS_PLACE lN
	FUNGUS_STEP lM
	FURNACE_FIRE_CRACKLE gD
	GENERIC_BIG_FALL gE
	GENERIC_BURN gF
	GENERIC_DEATH gG
	GENERIC_DRINK gH
	GENERIC_EAT gI
	GENERIC_EXPLODE gJ
	GENERIC_EXTINGUISH_FIRE gK
	GENERIC_HURT gL
	GENERIC_SMALL_FALL gM
	GENERIC_SPLASH gN
	GENERIC_SWIM gO
	GHAST_AMBIENT gP
	GHAST_DEATH gQ
	GHAST_HURT gR
	GHAST_SCREAM gS
	GHAST_SHOOT gT
	GHAST_WARN gU
	GILDED_BLACKSTONE_BREAK gV
	GILDED_BLACKSTONE_FALL gW
	GILDED_BLACKSTONE_HIT gX
	GILDED_BLACKSTONE_PLACE gY
	GILDED_BLACKSTONE_STEP gZ
	GLASS_BREAK ha
	GLASS_FALL hb
	GLASS_HIT hc
	GLASS_PLACE hd
	GLASS_STEP he
	GLOW_INK_SAC_USE hf
	GLOW_ITEM_FRAME_ADD_ITEM hg
	GLOW_ITEM_FRAME_BREAK hh
	GLOW_ITEM_FRAME_PLACE hi
	GLOW_ITEM_FRAME_REMOVE_ITEM hj
	GLOW_ITEM_FRAME_ROTATE_ITEM hk
	GLOW_SQUID_AMBIENT hl
	GLOW_SQUID_DEATH hm
	GLOW_SQUID_HURT hn
	GLOW_SQUID_SQUIRT ho
	GOAT_AMBIENT hp
	GOAT_DEATH hq
	GOAT_EAT hr
	GOAT_HURT hs
	GOAT_LONG_JUMP ht
	GOAT_MILK hu
	GOAT_PREPARE_RAM hv
	GOAT_RAM_IMPACT hw
	GOAT_SCREAMING_AMBIENT hx
	GOAT_SCREAMING_DEATH hy
	GOAT_SCREAMING_EAT hz
	GOAT_SCREAMING_HURT hA
	GOAT_SCREAMING_LONG_JUMP hB
	GOAT_SCREAMING_MILK hC
	GOAT_SCREAMING_PREPARE_RAM hD
	GOAT_SCREAMING_RAM_IMPACT hE
	GOAT_STEP hF
	GRASS_BREAK hG
	GRASS_FALL hH
	GRASS_HIT hI
	GRASS_PLACE hJ
	GRASS_STEP hK
	GRAVEL_BREAK hL
	GRAVEL_FALL hM
	GRAVEL_HIT hN
	GRAVEL_PLACE hO
	GRAVEL_STEP hP
	GRINDSTONE_USE hQ
	GUARDIAN_AMBIENT hR
	GUARDIAN_AMBIENT_LAND hS
	GUARDIAN_ATTACK hT
	GUARDIAN_DEATH hU
	GUARDIAN_DEATH_LAND hV
	GUARDIAN_FLOP hW
	GUARDIAN_HURT hX
	GUARDIAN_HURT_LAND hY
	HANGING_ROOTS_BREAK hZ
	HANGING_ROOTS_FALL ia
	HANGING_ROOTS_HIT ib
	HANGING_ROOTS_PLACE ic
	HANGING_ROOTS_STEP id
	HOE_TILL ie
	HOGLIN_AMBIENT if
	HOGLIN_ANGRY ig
	HOGLIN_ATTACK ih
	HOGLIN_CONVERTED_TO_ZOMBIFIED ii
	HOGLIN_DEATH ij
	HOGLIN_HURT ik
	HOGLIN_RETREAT il
	HOGLIN_STEP im
	HONEYCOMB_WAX_ON it
	HONEY_BLOCK_BREAK in
	HONEY_BLOCK_FALL io
	HONEY_BLOCK_HIT ip
	HONEY_BLOCK_PLACE iq
	HONEY_BLOCK_SLIDE ir
	HONEY_BLOCK_STEP is
	HONEY_DRINK iu
	HORSE_AMBIENT iv
	HORSE_ANGRY iw
	HORSE_ARMOR ix
	HORSE_BREATHE iy
	HORSE_DEATH iz
	HORSE_EAT iA
	HORSE_GALLOP iB
	HORSE_HURT iC
	HORSE_JUMP iD
	HORSE_LAND iE
	HORSE_SADDLE iF
	HORSE_STEP iG
	HORSE_STEP_WOOD iH
	HOSTILE_BIG_FALL iI
	HOSTILE_DEATH iJ
	HOSTILE_HURT iK
	HOSTILE_SMALL_FALL iL
	HOSTILE_SPLASH iM
	HOSTILE_SWIM iN
	HUSK_AMBIENT iO
	HUSK_CONVERTED_TO_ZOMBIE iP
	HUSK_DEATH iQ
	HUSK_HURT iR
	HUSK_STEP iS
	ILLUSIONER_AMBIENT iT
	ILLUSIONER_CAST_SPELL iU
	ILLUSIONER_DEATH iV
	ILLUSIONER_HURT iW
	ILLUSIONER_MIRROR_MOVE iX
	ILLUSIONER_PREPARE_BLINDNESS iY
	ILLUSIONER_PREPARE_MIRROR iZ
	INK_SAC_USE ja
	IRON_DOOR_CLOSE jb
	IRON_DOOR_OPEN jc
	IRON_GOLEM_ATTACK jd
	IRON_GOLEM_DAMAGE je
	IRON_GOLEM_DEATH jf
	IRON_GOLEM_HURT jg
	IRON_GOLEM_REPAIR jh
	IRON_GOLEM_STEP ji
	IRON_TRAPDOOR_CLOSE jj
	IRON_TRAPDOOR_OPEN jk
	ITEM_BREAK jq
	ITEM_FRAME_ADD_ITEM jl
	ITEM_FRAME_BREAK jm
	ITEM_FRAME_PLACE jn
	ITEM_FRAME_REMOVE_ITEM jo
	ITEM_FRAME_ROTATE_ITEM jp
	ITEM_PICKUP jr
	LADDER_BREAK js
	LADDER_FALL jt
	LADDER_HIT ju
	LADDER_PLACE jv
	LADDER_STEP jw
	LANTERN_BREAK jx
	LANTERN_FALL jy
	LANTERN_HIT jz
	LANTERN_PLACE jA
	LANTERN_STEP jB
	LARGE_AMETHYST_BUD_BREAK jC
	LARGE_AMETHYST_BUD_PLACE jD
	LAVA_AMBIENT jE
	LAVA_EXTINGUISH jF
	LAVA_POP jG
	LEASH_KNOT_BREAK jH
	LEASH_KNOT_PLACE jI
	LEVER_CLICK jJ
	LIGHTNING_BOLT_IMPACT jK
	LIGHTNING_BOLT_THUNDER jL
	LILY_PAD_PLACE uh
	LINGERING_POTION_THROW jM
	LLAMA_AMBIENT jN
	LLAMA_ANGRY jO
	LLAMA_CHEST jP
	LLAMA_DEATH jQ
	LLAMA_EAT jR
	LLAMA_HURT jS
	LLAMA_SPIT jT
	LLAMA_STEP jU
	LLAMA_SWAG jV
	LODESTONE_BREAK jX
	LODESTONE_COMPASS_LOCK kc
	LODESTONE_FALL kb
	LODESTONE_HIT ka
	LODESTONE_PLACE jZ
	LODESTONE_STEP jY
	MAGMA_CUBE_DEATH kd
	MAGMA_CUBE_DEATH_SMALL jW
	MAGMA_CUBE_HURT ke
	MAGMA_CUBE_HURT_SMALL kf
	MAGMA_CUBE_JUMP kg
	MAGMA_CUBE_SQUISH kh
	MAGMA_CUBE_SQUISH_SMALL ki
	MEDIUM_AMETHYST_BUD_BREAK kj
	MEDIUM_AMETHYST_BUD_PLACE kk
	METAL_BREAK kl
	METAL_FALL km
	METAL_HIT kn
	METAL_PLACE ko
	METAL_PRESSURE_PLATE_CLICK_OFF kp
	METAL_PRESSURE_PLATE_CLICK_ON kq
	METAL_STEP kr
	MINECART_INSIDE kt
	MINECART_INSIDE_UNDERWATER ks
	MINECART_RIDING ku
	MOOSHROOM_CONVERT kv
	MOOSHROOM_EAT kw
	MOOSHROOM_MILK kx
	MOOSHROOM_MILK_SUSPICIOUSLY ky
	MOOSHROOM_SHEAR kz
	MOSS_BREAK kF
	MOSS_CARPET_BREAK kA
	MOSS_CARPET_FALL kB
	MOSS_CARPET_HIT kC
	MOSS_CARPET_PLACE kD
	MOSS_CARPET_STEP kE
	MOSS_FALL kG
	MOSS_HIT kH
	MOSS_PLACE kI
	MOSS_STEP kJ
	MULE_AMBIENT kK
	MULE_ANGRY kL
	MULE_CHEST kM
	MULE_DEATH kN
	MULE_EAT kO
	MULE_HURT kP
	MUSIC_BIOME_BASALT_DELTAS lj
	MUSIC_BIOME_CRIMSON_FOREST lm
	MUSIC_BIOME_NETHER_WASTES lk
	MUSIC_BIOME_SOUL_SAND_VALLEY ll
	MUSIC_BIOME_WARPED_FOREST ln
	MUSIC_CREATIVE kQ
	MUSIC_CREDITS kR
	MUSIC_DISC_11 kS
	MUSIC_DISC_13 kT
	MUSIC_DISC_BLOCKS kU
	MUSIC_DISC_CAT kV
	MUSIC_DISC_CHIRP kW
	MUSIC_DISC_FAR kX
	MUSIC_DISC_MALL kY
	MUSIC_DISC_MELLOHI kZ
	MUSIC_DISC_PIGSTEP la
	MUSIC_DISC_STAL lb
	MUSIC_DISC_STRAD lc
	MUSIC_DISC_WAIT ld
	MUSIC_DISC_WARD le
	MUSIC_DRAGON lf
	MUSIC_END lg
	MUSIC_GAME lh
	MUSIC_MENU li
	MUSIC_UNDER_WATER lo
	NETHERITE_BLOCK_BREAK ma
	NETHERITE_BLOCK_FALL me
	NETHERITE_BLOCK_HIT md
	NETHERITE_BLOCK_PLACE mc
	NETHERITE_BLOCK_STEP mb
	NETHERRACK_BREAK mf
	NETHERRACK_FALL mj
	NETHERRACK_HIT mi
	NETHERRACK_PLACE mh
	NETHERRACK_STEP mg
	NETHER_BRICKS_BREAK lp
	NETHER_BRICKS_FALL lt
	NETHER_BRICKS_HIT ls
	NETHER_BRICKS_PLACE lr
	NETHER_BRICKS_STEP lq
	NETHER_GOLD_ORE_BREAK ps
	NETHER_GOLD_ORE_FALL pt
	NETHER_GOLD_ORE_HIT pu
	NETHER_GOLD_ORE_PLACE pv
	NETHER_GOLD_ORE_STEP pw
	NETHER_ORE_BREAK px
	NETHER_ORE_FALL py
	NETHER_ORE_HIT pz
	NETHER_ORE_PLACE pA
	NETHER_ORE_STEP pB
	NETHER_SPROUTS_BREAK lG
	NETHER_SPROUTS_FALL lK
	NETHER_SPROUTS_HIT lJ
	NETHER_SPROUTS_PLACE lI
	NETHER_SPROUTS_STEP lH
	NETHER_WART_BREAK lu
	NETHER_WART_PLANTED lv
	NOTE_BLOCK_BANJO mz
	NOTE_BLOCK_BASEDRUM mk
	NOTE_BLOCK_BASS ml
	NOTE_BLOCK_BELL mm
	NOTE_BLOCK_BIT my
	NOTE_BLOCK_CHIME mn
	NOTE_BLOCK_COW_BELL mw
	NOTE_BLOCK_DIDGERIDOO mx
	NOTE_BLOCK_FLUTE mo
	NOTE_BLOCK_GUITAR mp
	NOTE_BLOCK_HARP mq
	NOTE_BLOCK_HAT mr
	NOTE_BLOCK_IRON_XYLOPHONE mv
	NOTE_BLOCK_PLING ms
	NOTE_BLOCK_SNARE mt
	NOTE_BLOCK_XYLOPHONE mu
	NYLIUM_BREAK lB
	NYLIUM_FALL lF
	NYLIUM_HIT lE
	NYLIUM_PLACE lD
	NYLIUM_STEP lC
	OCELOT_AMBIENT mB
	OCELOT_DEATH mC
	OCELOT_HURT mA
	PAINTING_BREAK mD
	PAINTING_PLACE mE
	PANDA_AGGRESSIVE_AMBIENT mM
	PANDA_AMBIENT mH
	PANDA_BITE mP
	PANDA_CANT_BREED mL
	PANDA_DEATH mI
	PANDA_EAT mJ
	PANDA_HURT mO
	PANDA_PRE_SNEEZE mF
	PANDA_SNEEZE mG
	PANDA_STEP mK
	PANDA_WORRIED_AMBIENT mN
	PARROT_AMBIENT mQ
	PARROT_DEATH mR
	PARROT_EAT mS
	PARROT_FLY mT
	PARROT_HURT mU
	PARROT_IMITATE_BLAZE mV
	PARROT_IMITATE_CREEPER mW
	PARROT_IMITATE_DROWNED mX
	PARROT_IMITATE_ELDER_GUARDIAN mY
	PARROT_IMITATE_ENDERMITE na
	PARROT_IMITATE_ENDER_DRAGON mZ
	PARROT_IMITATE_EVOKER nb
	PARROT_IMITATE_GHAST nc
	PARROT_IMITATE_GUARDIAN nd
	PARROT_IMITATE_HOGLIN ne
	PARROT_IMITATE_HUSK nf
	PARROT_IMITATE_ILLUSIONER ng
	PARROT_IMITATE_MAGMA_CUBE nh
	PARROT_IMITATE_PHANTOM ni
	PARROT_IMITATE_PIGLIN nj
	PARROT_IMITATE_PIGLIN_BRUTE nk
	PARROT_IMITATE_PILLAGER nl
	PARROT_IMITATE_RAVAGER nm
	PARROT_IMITATE_SHULKER nn
	PARROT_IMITATE_SILVERFISH no
	PARROT_IMITATE_SKELETON np
	PARROT_IMITATE_SLIME nq
	PARROT_IMITATE_SPIDER nr
	PARROT_IMITATE_STRAY ns
	PARROT_IMITATE_VEX nt
	PARROT_IMITATE_VINDICATOR nu
	PARROT_IMITATE_WITCH nv
	PARROT_IMITATE_WITHER nw
	PARROT_IMITATE_WITHER_SKELETON nx
	PARROT_IMITATE_ZOGLIN ny
	PARROT_IMITATE_ZOMBIE nz
	PARROT_IMITATE_ZOMBIE_VILLAGER nA
	PARROT_STEP nB
	PHANTOM_AMBIENT nC
	PHANTOM_BITE nD
	PHANTOM_DEATH nE
	PHANTOM_FLAP nF
	PHANTOM_HURT nG
	PHANTOM_SWOOP nH
	PIGLIN_ADMIRING_ITEM nN
	PIGLIN_AMBIENT nO
	PIGLIN_ANGRY nP
	PIGLIN_BRUTE_AMBIENT nX
	PIGLIN_BRUTE_ANGRY nY
	PIGLIN_BRUTE_CONVERTED_TO_ZOMBIFIED oc
	PIGLIN_BRUTE_DEATH nZ
	PIGLIN_BRUTE_HURT oa
	PIGLIN_BRUTE_STEP ob
	PIGLIN_CELEBRATE nQ
	PIGLIN_CONVERTED_TO_ZOMBIFIED nW
	PIGLIN_DEATH nR
	PIGLIN_HURT nT
	PIGLIN_JEALOUS nS
	PIGLIN_RETREAT nU
	PIGLIN_STEP nV
	PIG_AMBIENT nI
	PIG_DEATH nJ
	PIG_HURT nK
	PIG_SADDLE nL
	PIG_STEP nM
	PILLAGER_AMBIENT od
	PILLAGER_CELEBRATE oe
	PILLAGER_DEATH of
	PILLAGER_HURT og
	PISTON_CONTRACT oh
	PISTON_EXTEND oi
	PLAYER_ATTACK_CRIT oj
	PLAYER_ATTACK_KNOCKBACK ok
	PLAYER_ATTACK_NODAMAGE ol
	PLAYER_ATTACK_STRONG om
	PLAYER_ATTACK_SWEEP on
	PLAYER_ATTACK_WEAK oo
	PLAYER_BIG_FALL op
	PLAYER_BREATH oq
	PLAYER_BURP or
	PLAYER_DEATH os
	PLAYER_HURT ot
	PLAYER_HURT_DROWN ou
	PLAYER_HURT_FREEZE ov
	PLAYER_HURT_ON_FIRE ow
	PLAYER_HURT_SWEET_BERRY_BUSH ox
	PLAYER_LEVELUP oy
	PLAYER_SMALL_FALL oz
	PLAYER_SPLASH oA
	PLAYER_SPLASH_HIGH_SPEED oB
	PLAYER_SWIM oC
	POINTED_DRIPSTONE_BREAK ez
	POINTED_DRIPSTONE_DRIP_LAVA eF
	POINTED_DRIPSTONE_DRIP_LAVA_INTO_CAULDRON eH
	POINTED_DRIPSTONE_DRIP_WATER eG
	POINTED_DRIPSTONE_DRIP_WATER_INTO_CAULDRON eI
	POINTED_DRIPSTONE_FALL eD
	POINTED_DRIPSTONE_HIT eC
	POINTED_DRIPSTONE_LAND eE
	POINTED_DRIPSTONE_PLACE eB
	POINTED_DRIPSTONE_STEP eA
	POLAR_BEAR_AMBIENT oD
	POLAR_BEAR_AMBIENT_BABY oE
	POLAR_BEAR_DEATH oF
	POLAR_BEAR_HURT oG
	POLAR_BEAR_STEP oH
	POLAR_BEAR_WARNING oI
	POLISHED_DEEPSLATE_BREAK oJ
	POLISHED_DEEPSLATE_FALL oK
	POLISHED_DEEPSLATE_HIT oL
	POLISHED_DEEPSLATE_PLACE oM
	POLISHED_DEEPSLATE_STEP oN
	PORTAL_AMBIENT oO
	PORTAL_TRAVEL oP
	PORTAL_TRIGGER oQ
	POWDER_SNOW_BREAK oR
	POWDER_SNOW_FALL oS
	POWDER_SNOW_HIT oT
	POWDER_SNOW_PLACE oU
	POWDER_SNOW_STEP oV
	PUFFER_FISH_AMBIENT oW
	PUFFER_FISH_BLOW_OUT oX
	PUFFER_FISH_BLOW_UP oY
	PUFFER_FISH_DEATH oZ
	PUFFER_FISH_FLOP pa
	PUFFER_FISH_HURT pb
	PUFFER_FISH_STING pc
	PUMPKIN_CARVE pd
	RABBIT_AMBIENT pe
	RABBIT_ATTACK pf
	RABBIT_DEATH pg
	RABBIT_HURT ph
	RABBIT_JUMP pi
	RAID_HORN pj
	RAVAGER_AMBIENT pk
	RAVAGER_ATTACK pl
	RAVAGER_CELEBRATE pm
	RAVAGER_DEATH pn
	RAVAGER_HURT po
	RAVAGER_ROAR pr
	RAVAGER_STEP pp
	RAVAGER_STUNNED pq
	REDSTONE_TORCH_BURNOUT pC
	RESPAWN_ANCHOR_AMBIENT pD
	RESPAWN_ANCHOR_CHARGE pE
	RESPAWN_ANCHOR_DEPLETE pF
	RESPAWN_ANCHOR_SET_SPAWN pG
	ROOTED_DIRT_BREAK pH
	ROOTED_DIRT_FALL pI
	ROOTED_DIRT_HIT pJ
	ROOTED_DIRT_PLACE pK
	ROOTED_DIRT_STEP pL
	ROOTS_BREAK gy
	ROOTS_FALL gC
	ROOTS_HIT gB
	ROOTS_PLACE gA
	ROOTS_STEP gz
	SALMON_AMBIENT pM
	SALMON_DEATH pN
	SALMON_FLOP pO
	SALMON_HURT pP
	SAND_BREAK pQ
	SAND_FALL pR
	SAND_HIT pS
	SAND_PLACE pT
	SAND_STEP pU
	SCAFFOLDING_BREAK pV
	SCAFFOLDING_FALL pW
	SCAFFOLDING_HIT pX
	SCAFFOLDING_PLACE pY
	SCAFFOLDING_STEP pZ
	SCULK_CLICKING qa
	SCULK_CLICKING_STOP qb
	SCULK_SENSOR_BREAK qc
	SCULK_SENSOR_FALL qd
	SCULK_SENSOR_HIT qe
	SCULK_SENSOR_PLACE qf
	SCULK_SENSOR_STEP qg
	SHEEP_AMBIENT qh
	SHEEP_DEATH qi
	SHEEP_HURT qj
	SHEEP_SHEAR qk
	SHEEP_STEP ql
	SHIELD_BLOCK qm
	SHIELD_BREAK qn
	SHOVEL_FLATTEN qt
	SHROOMLIGHT_BREAK qo
	SHROOMLIGHT_FALL qs
	SHROOMLIGHT_HIT qr
	SHROOMLIGHT_PLACE qq
	SHROOMLIGHT_STEP qp
	SHULKER_AMBIENT qu
	SHULKER_BOX_CLOSE qv
	SHULKER_BOX_OPEN qw
	SHULKER_BULLET_HIT qx
	SHULKER_BULLET_HURT qy
	SHULKER_CLOSE qz
	SHULKER_DEATH qA
	SHULKER_HURT qB
	SHULKER_HURT_CLOSED qC
	SHULKER_OPEN qD
	SHULKER_SHOOT qE
	SHULKER_TELEPORT qF
	SILVERFISH_AMBIENT qG
	SILVERFISH_DEATH qH
	SILVERFISH_HURT qI
	SILVERFISH_STEP qJ
	SKELETON_AMBIENT qK
	SKELETON_CONVERTED_TO_STRAY qL
	SKELETON_DEATH qM
	SKELETON_HORSE_AMBIENT qN
	SKELETON_HORSE_AMBIENT_WATER qR
	SKELETON_HORSE_DEATH qO
	SKELETON_HORSE_GALLOP_WATER qS
	SKELETON_HORSE_HURT qP
	SKELETON_HORSE_JUMP_WATER qT
	SKELETON_HORSE_STEP_WATER qU
	SKELETON_HORSE_SWIM qQ
	SKELETON_HURT qV
	SKELETON_SHOOT qW
	SKELETON_STEP qX
	SLIME_ATTACK qY
	SLIME_BLOCK_BREAK rd
	SLIME_BLOCK_FALL re
	SLIME_BLOCK_HIT rf
	SLIME_BLOCK_PLACE rg
	SLIME_BLOCK_STEP rh
	SLIME_DEATH qZ
	SLIME_DEATH_SMALL rO
	SLIME_HURT ra
	SLIME_HURT_SMALL rP
	SLIME_JUMP rb
	SLIME_JUMP_SMALL rQ
	SLIME_SQUISH rc
	SLIME_SQUISH_SMALL rR
	SMALL_AMETHYST_BUD_BREAK ri
	SMALL_AMETHYST_BUD_PLACE rj
	SMALL_DRIPLEAF_BREAK rk
	SMALL_DRIPLEAF_FALL rl
	SMALL_DRIPLEAF_HIT rm
	SMALL_DRIPLEAF_PLACE rn
	SMALL_DRIPLEAF_STEP ro
	SMITHING_TABLE_USE rS
	SMOKER_SMOKE rT
	SNOWBALL_THROW rU
	SNOW_BREAK rV
	SNOW_FALL rW
	SNOW_GOLEM_AMBIENT rX
	SNOW_GOLEM_DEATH rY
	SNOW_GOLEM_HURT rZ
	SNOW_GOLEM_SHEAR sb
	SNOW_GOLEM_SHOOT sa
	SNOW_HIT sc
	SNOW_PLACE sd
	SNOW_STEP se
	SOUL_ESCAPE rz
	SOUL_SAND_BREAK rp
	SOUL_SAND_FALL rt
	SOUL_SAND_HIT rs
	SOUL_SAND_PLACE rr
	SOUL_SAND_STEP rq
	SOUL_SOIL_BREAK ru
	SOUL_SOIL_FALL ry
	SOUL_SOIL_HIT rx
	SOUL_SOIL_PLACE rw
	SOUL_SOIL_STEP rv
	SPIDER_AMBIENT sf
	SPIDER_DEATH sg
	SPIDER_HURT sh
	SPIDER_STEP si
	SPLASH_POTION_BREAK sj
	SPLASH_POTION_THROW sk
	SPORE_BLOSSOM_BREAK rA
	SPORE_BLOSSOM_FALL rB
	SPORE_BLOSSOM_HIT rC
	SPORE_BLOSSOM_PLACE rD
	SPORE_BLOSSOM_STEP rE
	SPYGLASS_STOP_USING sm
	SPYGLASS_USE sl
	SQUID_AMBIENT sn
	SQUID_DEATH so
	SQUID_HURT sp
	SQUID_SQUIRT sq
	STEM_BREAK lw
	STEM_FALL lA
	STEM_HIT lz
	STEM_PLACE ly
	STEM_STEP lx
	STONE_BREAK sr
	STONE_BUTTON_CLICK_OFF ss
	STONE_BUTTON_CLICK_ON st
	STONE_FALL su
	STONE_HIT sv
	STONE_PLACE sw
	STONE_PRESSURE_PLATE_CLICK_OFF sx
	STONE_PRESSURE_PLATE_CLICK_ON sy
	STONE_STEP sz
	STRAY_AMBIENT sA
	STRAY_DEATH sB
	STRAY_HURT sC
	STRAY_STEP sD
	STRIDER_AMBIENT rF
	STRIDER_DEATH rI
	STRIDER_EAT rM
	STRIDER_HAPPY rG
	STRIDER_HURT rJ
	STRIDER_RETREAT rH
	STRIDER_SADDLE rN
	STRIDER_STEP rK
	STRIDER_STEP_LAVA rL
	SWEET_BERRY_BUSH_BREAK sE
	SWEET_BERRY_BUSH_PICK_BERRIES sG
	SWEET_BERRY_BUSH_PLACE sF
	THORNS_HIT sH
	TNT_PRIMED sI
	TOTEM_USE sJ
	TRIDENT_HIT sK
	TRIDENT_HIT_GROUND sL
	TRIDENT_RETURN sM
	TRIDENT_RIPTIDE_1 sN
	TRIDENT_RIPTIDE_2 sO
	TRIDENT_RIPTIDE_3 sP
	TRIDENT_THROW sQ
	TRIDENT_THUNDER sR
	TRIPWIRE_ATTACH sS
	TRIPWIRE_CLICK_OFF sT
	TRIPWIRE_CLICK_ON sU
	TRIPWIRE_DETACH sV
	TROPICAL_FISH_AMBIENT sW
	TROPICAL_FISH_DEATH sX
	TROPICAL_FISH_FLOP sY
	TROPICAL_FISH_HURT sZ
	TUFF_BREAK ta
	TUFF_FALL te
	TUFF_HIT td
	TUFF_PLACE tc
	TUFF_STEP tb
	TURTLE_AMBIENT_LAND tf
	TURTLE_DEATH tg
	TURTLE_DEATH_BABY th
	TURTLE_EGG_BREAK ti
	TURTLE_EGG_CRACK tj
	TURTLE_EGG_HATCH tk
	TURTLE_HURT tl
	TURTLE_HURT_BABY tm
	TURTLE_LAY_EGG tn
	TURTLE_SHAMBLE to
	TURTLE_SHAMBLE_BABY tp
	TURTLE_SWIM tq
	UI_BUTTON_CLICK tr
	UI_CARTOGRAPHY_TABLE_TAKE_RESULT tu
	UI_LOOM_SELECT_PATTERN ts
	UI_LOOM_TAKE_RESULT tt
	UI_STONECUTTER_SELECT_RECIPE tw
	UI_STONECUTTER_TAKE_RESULT tv
	UI_TOAST_CHALLENGE_COMPLETE tx
	UI_TOAST_IN ty
	UI_TOAST_OUT tz
	VEX_AMBIENT tA
	VEX_CHARGE tB
	VEX_DEATH tC
	VEX_HURT tD
	VILLAGER_AMBIENT tE
	VILLAGER_CELEBRATE tF
	VILLAGER_DEATH tG
	VILLAGER_HURT tH
	VILLAGER_NO tI
	VILLAGER_TRADE tJ
	VILLAGER_WORK_ARMORER tL
	VILLAGER_WORK_BUTCHER tM
	VILLAGER_WORK_CARTOGRAPHER tN
	VILLAGER_WORK_CLERIC tO
	VILLAGER_WORK_FARMER tP
	VILLAGER_WORK_FISHERMAN tQ
	VILLAGER_WORK_FLETCHER tR
	VILLAGER_WORK_LEATHERWORKER tS
	VILLAGER_WORK_LIBRARIAN tT
	VILLAGER_WORK_MASON tU
	VILLAGER_WORK_SHEPHERD tV
	VILLAGER_WORK_TOOLSMITH tW
	VILLAGER_WORK_WEAPONSMITH tX
	VILLAGER_YES tK
	VINDICATOR_AMBIENT tY
	VINDICATOR_CELEBRATE tZ
	VINDICATOR_DEATH ua
	VINDICATOR_HURT ub
	VINE_BREAK uc
	VINE_FALL ud
	VINE_HIT ue
	VINE_PLACE uf
	VINE_STEP ug
	WANDERING_TRADER_AMBIENT ui
	WANDERING_TRADER_DEATH uj
	WANDERING_TRADER_DISAPPEARED uk
	WANDERING_TRADER_DRINK_MILK ul
	WANDERING_TRADER_DRINK_POTION um
	WANDERING_TRADER_HURT un
	WANDERING_TRADER_NO uo
	WANDERING_TRADER_REAPPEARED up
	WANDERING_TRADER_TRADE uq
	WANDERING_TRADER_YES ur
	WART_BLOCK_BREAK lV
	WART_BLOCK_FALL lZ
	WART_BLOCK_HIT lY
	WART_BLOCK_PLACE lX
	WART_BLOCK_STEP lW
	WATER_AMBIENT us
	WEATHER_RAIN ut
	WEATHER_RAIN_ABOVE uu
	WEEPING_VINES_BREAK lQ
	WEEPING_VINES_FALL lU
	WEEPING_VINES_HIT lT
	WEEPING_VINES_PLACE lS
	WEEPING_VINES_STEP lR
	WET_GRASS_BREAK uv
	WET_GRASS_FALL uw
	WET_GRASS_HIT ux
	WET_GRASS_PLACE uy
	WET_GRASS_STEP uz
	WITCH_AMBIENT uA
	WITCH_CELEBRATE uB
	WITCH_DEATH uC
	WITCH_DRINK uD
	WITCH_HURT uE
	WITCH_THROW uF
	WITHER_AMBIENT uG
	WITHER_BREAK_BLOCK uH
	WITHER_DEATH uI
	WITHER_HURT uJ
	WITHER_SHOOT uK
	WITHER_SKELETON_AMBIENT uL
	WITHER_SKELETON_DEATH uM
	WITHER_SKELETON_HURT uN
	WITHER_SKELETON_STEP uO
	WITHER_SPAWN uP
	WOLF_AMBIENT uQ
	WOLF_DEATH uR
	WOLF_GROWL uS
	WOLF_HOWL uT
	WOLF_HURT uU
	WOLF_PANT uV
	WOLF_SHAKE uW
	WOLF_STEP uX
	WOLF_WHINE uY
	WOODEN_BUTTON_CLICK_OFF ve
	WOODEN_BUTTON_CLICK_ON vf
	WOODEN_DOOR_CLOSE uZ
	WOODEN_DOOR_OPEN va
	WOODEN_PRESSURE_PLATE_CLICK_OFF vj
	WOODEN_PRESSURE_PLATE_CLICK_ON vk
	WOODEN_TRAPDOOR_CLOSE vb
	WOODEN_TRAPDOOR_OPEN vc
	WOOD_BREAK vd
	WOOD_FALL vg
	WOOD_HIT vh
	WOOD_PLACE vi
	WOOD_STEP vl
	WOOL_BREAK vm
	WOOL_FALL vn
	WOOL_HIT vo
	WOOL_PLACE vp
	WOOL_STEP vq
	ZOGLIN_AMBIENT vr
	ZOGLIN_ANGRY vs
	ZOGLIN_ATTACK vt
	ZOGLIN_DEATH vu
	ZOGLIN_HURT vv
	ZOGLIN_STEP vw
	ZOMBIE_AMBIENT vx
	ZOMBIE_ATTACK_IRON_DOOR vz
	ZOMBIE_ATTACK_WOODEN_DOOR vy
	ZOMBIE_BREAK_WOODEN_DOOR vA
	ZOMBIE_CONVERTED_TO_DROWNED vB
	ZOMBIE_DEATH vC
	ZOMBIE_DESTROY_EGG vD
	ZOMBIE_HORSE_AMBIENT vE
	ZOMBIE_HORSE_DEATH vF
	ZOMBIE_HORSE_HURT vG
	ZOMBIE_HURT vH
	ZOMBIE_INFECT vI
	ZOMBIE_STEP vN
	ZOMBIE_VILLAGER_AMBIENT vO
	ZOMBIE_VILLAGER_CONVERTED vP
	ZOMBIE_VILLAGER_CURE vQ
	ZOMBIE_VILLAGER_DEATH vR
	ZOMBIE_VILLAGER_HURT vS
	ZOMBIE_VILLAGER_STEP vT
	ZOMBIFIED_PIGLIN_AMBIENT vJ
	ZOMBIFIED_PIGLIN_ANGRY vK
	ZOMBIFIED_PIGLIN_DEATH vL
	ZOMBIFIED_PIGLIN_HURT vM
	register (Ljava/lang/String;)Lnet/minecraft/sounds/SoundEvent; a
net/minecraft/sounds/SoundSource aff
	$VALUES l
	AMBIENT i
	BLOCKS e
	HOSTILE f
	MASTER a
	MUSIC b
	NEUTRAL g
	PLAYERS h
	RECORDS c
	VOICE j
	WEATHER d
	name k
	$values ()[Lnet/minecraft/sounds/SoundSource; b
	getName ()Ljava/lang/String; a
net/minecraft/stats/RecipeBook afh
	bookSettings c
	highlight b
	known a
	add (Lnet/minecraft/resources/ResourceLocation;)V a
	add (Lnet/minecraft/world/item/crafting/Recipe;)V a
	addHighlight (Lnet/minecraft/resources/ResourceLocation;)V d
	addHighlight (Lnet/minecraft/world/item/crafting/Recipe;)V f
	contains (Lnet/minecraft/resources/ResourceLocation;)Z b
	contains (Lnet/minecraft/world/item/crafting/Recipe;)Z b
	copyOverData (Lnet/minecraft/stats/RecipeBook;)V a
	getBookSettings ()Lnet/minecraft/stats/RecipeBookSettings; a
	isFiltering (Lnet/minecraft/world/inventory/RecipeBookMenu;)Z a
	isFiltering (Lnet/minecraft/world/inventory/RecipeBookType;)Z b
	isOpen (Lnet/minecraft/world/inventory/RecipeBookType;)Z a
	remove (Lnet/minecraft/resources/ResourceLocation;)V c
	remove (Lnet/minecraft/world/item/crafting/Recipe;)V c
	removeHighlight (Lnet/minecraft/world/item/crafting/Recipe;)V e
	setBookSetting (Lnet/minecraft/world/inventory/RecipeBookType;ZZ)V a
	setBookSettings (Lnet/minecraft/stats/RecipeBookSettings;)V a
	setFiltering (Lnet/minecraft/world/inventory/RecipeBookType;Z)V b
	setOpen (Lnet/minecraft/world/inventory/RecipeBookType;Z)V a
	willHighlight (Lnet/minecraft/world/item/crafting/Recipe;)Z d
net/minecraft/stats/RecipeBookSettings afi
	TAG_FIELDS a
	states b
	copy ()Lnet/minecraft/stats/RecipeBookSettings; a
	isFiltering (Lnet/minecraft/world/inventory/RecipeBookType;)Z b
	isOpen (Lnet/minecraft/world/inventory/RecipeBookType;)Z a
	read (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/stats/RecipeBookSettings; a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/stats/RecipeBookSettings; a
	replaceFrom (Lnet/minecraft/stats/RecipeBookSettings;)V a
	setFiltering (Lnet/minecraft/world/inventory/RecipeBookType;Z)V b
	setOpen (Lnet/minecraft/world/inventory/RecipeBookType;Z)V a
	write (Lnet/minecraft/nbt/CompoundTag;)V b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/stats/RecipeBookSettings$TypeSettings afi$a
	filtering b
	open a
	copy ()Lnet/minecraft/stats/RecipeBookSettings$TypeSettings; a
net/minecraft/stats/ServerRecipeBook afj
	LOGGER d
	RECIPE_BOOK_TAG c
	addRecipes (Ljava/util/Collection;Lnet/minecraft/server/level/ServerPlayer;)I a
	fromNbt (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/item/crafting/RecipeManager;)V a
	loadRecipes (Lnet/minecraft/nbt/ListTag;Ljava/util/function/Consumer;Lnet/minecraft/world/item/crafting/RecipeManager;)V a
	removeRecipes (Ljava/util/Collection;Lnet/minecraft/server/level/ServerPlayer;)I b
	sendInitialRecipeBook (Lnet/minecraft/server/level/ServerPlayer;)V a
	sendRecipes (Lnet/minecraft/network/protocol/game/ClientboundRecipePacket$State;Lnet/minecraft/server/level/ServerPlayer;Ljava/util/List;)V a
	toNbt ()Lnet/minecraft/nbt/CompoundTag; b
net/minecraft/stats/ServerStatsCounter afk
	LOGGER b
	dirty e
	file d
	server c
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/nbt/CompoundTag; a
	getDirty ()Ljava/util/Set; d
	getKey (Lnet/minecraft/stats/Stat;)Lnet/minecraft/resources/ResourceLocation; b
	getStat (Lnet/minecraft/stats/StatType;Ljava/lang/String;)Ljava/util/Optional; a
	markAllDirty ()V c
	parseLocal (Lcom/mojang/datafixers/DataFixer;Ljava/lang/String;)V a
	save ()V a
	sendStats (Lnet/minecraft/server/level/ServerPlayer;)V a
	setValue (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/stats/Stat;I)V a
	toJson ()Ljava/lang/String; b
net/minecraft/stats/Stat afl
	formatter n
	type p
	value o
	buildName (Lnet/minecraft/stats/StatType;Ljava/lang/Object;)Ljava/lang/String; a
	format (I)Ljava/lang/String; a
	getType ()Lnet/minecraft/stats/StatType; a
	getValue ()Ljava/lang/Object; b
	locationToKey (Lnet/minecraft/resources/ResourceLocation;)Ljava/lang/String; a
net/minecraft/stats/StatFormatter afm
	DECIMAL_FORMAT a
	DEFAULT b
	DISTANCE d
	DIVIDE_BY_TEN c
	TIME e
net/minecraft/stats/StatType afn
	displayName c
	map b
	registry a
	contains (Ljava/lang/Object;)Z a
	get (Ljava/lang/Object;)Lnet/minecraft/stats/Stat; b
	get (Ljava/lang/Object;Lnet/minecraft/stats/StatFormatter;)Lnet/minecraft/stats/Stat; a
	getDisplayName ()Lnet/minecraft/network/chat/Component; c
	getRegistry ()Lnet/minecraft/core/Registry; a
	getTranslationKey ()Ljava/lang/String; b
net/minecraft/stats/Stats afo
	ANIMALS_BRED P
	AVIATE_ONE_CM B
	BELL_RING az
	BLOCK_MINED a
	BOAT_ONE_CM y
	CLEAN_ARMOR X
	CLEAN_BANNER Y
	CLEAN_SHULKER_BOX Z
	CLIMB_ONE_CM u
	CROUCH_ONE_CM q
	CROUCH_TIME o
	CUSTOM i
	DAMAGE_ABSORBED L
	DAMAGE_BLOCKED_BY_SHIELD K
	DAMAGE_DEALT G
	DAMAGE_DEALT_ABSORBED H
	DAMAGE_DEALT_RESISTED I
	DAMAGE_RESISTED M
	DAMAGE_TAKEN J
	DEATHS N
	DROP F
	EAT_CAKE_SLICE U
	ENCHANT_ITEM ak
	ENTITY_KILLED g
	ENTITY_KILLED_BY h
	FALL_ONE_CM t
	FILL_CAULDRON V
	FISH_CAUGHT R
	FLY_ONE_CM v
	HORSE_ONE_CM A
	INSPECT_DISPENSER ae
	INSPECT_DROPPER ac
	INSPECT_HOPPER ad
	INTERACT_WITH_ANVIL aC
	INTERACT_WITH_BEACON ab
	INTERACT_WITH_BLAST_FURNACE as
	INTERACT_WITH_BREWINGSTAND aa
	INTERACT_WITH_CAMPFIRE av
	INTERACT_WITH_CARTOGRAPHY_TABLE aw
	INTERACT_WITH_CRAFTING_TABLE an
	INTERACT_WITH_FURNACE am
	INTERACT_WITH_GRINDSTONE aD
	INTERACT_WITH_LECTERN au
	INTERACT_WITH_LOOM ax
	INTERACT_WITH_SMITHING_TABLE aF
	INTERACT_WITH_SMOKER at
	INTERACT_WITH_STONECUTTER ay
	ITEM_BROKEN d
	ITEM_CRAFTED b
	ITEM_DROPPED f
	ITEM_PICKED_UP e
	ITEM_USED c
	JUMP E
	LEAVE_GAME j
	MINECART_ONE_CM x
	MOB_KILLS O
	OPEN_BARREL ar
	OPEN_CHEST ao
	OPEN_ENDERCHEST aj
	OPEN_SHULKER_BOX aq
	PIG_ONE_CM z
	PLAYER_KILLS Q
	PLAY_NOTEBLOCK af
	PLAY_RECORD al
	PLAY_TIME k
	POT_FLOWER ah
	RAID_TRIGGER aA
	RAID_WIN aB
	SLEEP_IN_BED ap
	SPRINT_ONE_CM r
	STRIDER_ONE_CM D
	SWIM_ONE_CM C
	TALKED_TO_VILLAGER S
	TARGET_HIT aE
	TIME_SINCE_DEATH m
	TIME_SINCE_REST n
	TOTAL_WORLD_TIME l
	TRADED_WITH_VILLAGER T
	TRIGGER_TRAPPED_CHEST ai
	TUNE_NOTEBLOCK ag
	USE_CAULDRON W
	WALK_ONE_CM p
	WALK_ON_WATER_ONE_CM s
	WALK_UNDER_WATER_ONE_CM w
	makeCustomStat (Ljava/lang/String;Lnet/minecraft/stats/StatFormatter;)Lnet/minecraft/resources/ResourceLocation; a
	makeRegistryStatType (Ljava/lang/String;Lnet/minecraft/core/Registry;)Lnet/minecraft/stats/StatType; a
net/minecraft/stats/StatsCounter afp
	stats a
	getValue (Lnet/minecraft/stats/Stat;)I a
	getValue (Lnet/minecraft/stats/StatType;Ljava/lang/Object;)I a
	increment (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/stats/Stat;I)V b
	setValue (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/stats/Stat;I)V a
net/minecraft/tags/BlockTags afr
	ACACIA_LOGS w
	ANVIL G
	BAMBOO_PLANTABLE_ON al
	BANNERS B
	BASE_STONE_NETHER aT
	BASE_STONE_OVERWORLD aQ
	BEACON_BASE_BLOCKS az
	BEDS L
	BEEHIVES as
	BEE_GROWABLES au
	BIRCH_LOGS v
	BUTTONS f
	CAMPFIRES aH
	CANDLES Z
	CANDLE_CAKES aU
	CARPETS g
	CAULDRONS aV
	CAVE_VINES ba
	CLIMBABLE aC
	COAL_ORES V
	COPPER_ORES X
	CORALS ak
	CORAL_BLOCKS ah
	CORAL_PLANTS aj
	CRIMSON_STEMS z
	CROPS at
	CRYSTAL_SOUND_BLOCKS aW
	DARK_OAK_LOGS t
	DEEPSLATE_ORE_REPLACEABLES aS
	DIAMOND_ORES S
	DIRT aa
	DOORS p
	DRAGON_IMMUNE ap
	DRIPSTONE_REPLACEABLE aZ
	EMERALD_ORES W
	ENDERMAN_HOLDABLE ac
	FEATURES_CANNOT_REPLACE bm
	FENCES M
	FENCE_GATES aK
	FIRE aw
	FLOWERS O
	FLOWER_POTS ab
	GEODE_INVALID_BLOCKS bo
	GOLD_ORES Q
	GUARDED_BY_PIGLINS aI
	HELPER a
	HOGLIN_REPELLENTS aE
	ICE ad
	IMPERMEABLE af
	INFINIBURN_END aP
	INFINIBURN_NETHER aO
	INFINIBURN_OVERWORLD aN
	INSIDE_STEP_SOUND_BLOCKS aX
	IRON_ORES R
	JUNGLE_LOGS x
	LAPIS_ORES U
	LAVA_POOL_STONE_CANNOT_REPLACE bn
	LEAVES I
	LOGS s
	LOGS_THAT_BURN r
	LUSH_GROUND_REPLACEABLE bc
	MINEABLE_WITH_AXE bf
	MINEABLE_WITH_HOE bg
	MINEABLE_WITH_PICKAXE bh
	MINEABLE_WITH_SHOVEL bi
	MOSS_REPLACEABLE bb
	MUSHROOM_GROW_BLOCK aM
	NEEDS_DIAMOND_TOOL bj
	NEEDS_IRON_TOOL bk
	NEEDS_STONE_TOOL bl
	NON_FLAMMABLE_WOOD Y
	NYLIUM ax
	OAK_LOGS u
	OCCLUDES_VIBRATION_SIGNALS aY
	PIGLIN_REPELLENTS P
	PLANKS c
	PORTALS av
	PRESSURE_PLATES l
	PREVENT_MOB_SPAWNING_INSIDE aJ
	RAILS H
	REDSTONE_ORES T
	SAND C
	SAPLINGS q
	SHULKER_BOXES aD
	SIGNS ao
	SLABS E
	SMALL_DRIPLEAF_PLACEABLE bd
	SMALL_FLOWERS K
	SNOW be
	SOUL_FIRE_BASE_BLOCKS aF
	SOUL_SPEED_BLOCKS aA
	SPRUCE_LOGS y
	STAIRS D
	STANDING_SIGNS am
	STONE_BRICKS d
	STONE_ORE_REPLACEABLES aR
	STONE_PRESSURE_PLATES n
	STRIDER_WARM_BLOCKS aG
	TALL_FLOWERS N
	TRAPDOORS J
	UNDERWATER_BONEMEALS ag
	UNSTABLE_BOTTOM_CENTER aL
	VALID_SPAWN ae
	WALLS F
	WALL_CORALS ai
	WALL_POST_OVERRIDE aB
	WALL_SIGNS an
	WARPED_STEMS A
	WART_BLOCKS ay
	WITHER_IMMUNE aq
	WITHER_SUMMON_BASE_BLOCKS ar
	WOODEN_BUTTONS e
	WOODEN_DOORS h
	WOODEN_FENCES k
	WOODEN_PRESSURE_PLATES m
	WOODEN_SLABS j
	WOODEN_STAIRS i
	WOODEN_TRAPDOORS o
	WOOL b
	bind (Ljava/lang/String;)Lnet/minecraft/tags/Tag$Named; a
	getAllTags ()Lnet/minecraft/tags/TagCollection; a
net/minecraft/tags/EntityTypeTags afs
	ARROWS e
	AXOLOTL_ALWAYS_HOSTILES h
	AXOLOTL_HUNT_TARGETS i
	BEEHIVE_INHABITORS d
	FREEZE_HURTS_EXTRA_TYPES k
	FREEZE_IMMUNE_ENTITY_TYPES j
	HELPER a
	IMPACT_PROJECTILES f
	POWDER_SNOW_WALKABLE_MOBS g
	RAIDERS c
	SKELETONS b
	bind (Ljava/lang/String;)Lnet/minecraft/tags/Tag$Named; a
	getAllTags ()Lnet/minecraft/tags/TagCollection; a
net/minecraft/tags/FluidTags aft
	HELPER a
	KNOWN_TAGS d
	LAVA c
	WATER b
	bind (Ljava/lang/String;)Lnet/minecraft/tags/Tag$Named; a
	getAllTags ()Lnet/minecraft/tags/TagCollection; a
	getStaticTags ()Ljava/util/List; b
net/minecraft/tags/GameEventTags afu
	HELPER a
	IGNORE_VIBRATIONS_SNEAKING c
	VIBRATIONS b
	bind (Ljava/lang/String;)Lnet/minecraft/tags/Tag$Named; a
	getAllTags ()Lnet/minecraft/tags/TagCollection; a
net/minecraft/tags/ItemTags afv
	ACACIA_LOGS u
	ANVIL E
	ARROWS aj
	AXOLOTL_TEMPT_ITEMS ap
	BANNERS z
	BEACON_PAYMENT_ITEMS al
	BEDS J
	BIRCH_LOGS t
	BOATS ad
	BUTTONS f
	CANDLES ac
	CARPETS g
	CLUSTER_MAX_HARVESTABLES ar
	COALS ai
	COAL_ORES X
	COPPER_ORES Z
	CREEPER_DROP_MUSIC_DISCS ah
	CRIMSON_STEMS x
	DARK_OAK_LOGS r
	DIAMOND_ORES U
	DOORS n
	EMERALD_ORES Y
	FENCES K
	FISHES ae
	FLOWERS M
	FOX_FOOD R
	FREEZE_IMMUNE_WEARABLES ao
	GOLD_ORES S
	HELPER a
	IGNORED_BY_PIGLIN_BABIES P
	IRON_ORES T
	JUNGLE_LOGS v
	LAPIS_ORES W
	LEAVES G
	LECTERN_BOOKS ak
	LOGS q
	LOGS_THAT_BURN p
	MUSIC_DISCS ag
	NON_FLAMMABLE_WOOD aa
	OAK_LOGS s
	OCCLUDES_VIBRATION_SIGNALS aq
	PIGLIN_FOOD Q
	PIGLIN_LOVED O
	PIGLIN_REPELLENTS N
	PLANKS c
	RAILS F
	REDSTONE_ORES V
	SAND A
	SAPLINGS o
	SIGNS af
	SLABS C
	SMALL_FLOWERS I
	SOUL_FIRE_BASE_BLOCKS ab
	SPRUCE_LOGS w
	STAIRS B
	STONE_BRICKS d
	STONE_CRAFTING_MATERIALS an
	STONE_TOOL_MATERIALS am
	TALL_FLOWERS L
	TRAPDOORS H
	WALLS D
	WARPED_STEMS y
	WOODEN_BUTTONS e
	WOODEN_DOORS h
	WOODEN_FENCES k
	WOODEN_PRESSURE_PLATES l
	WOODEN_SLABS j
	WOODEN_STAIRS i
	WOODEN_TRAPDOORS m
	WOOL b
	bind (Ljava/lang/String;)Lnet/minecraft/tags/Tag$Named; a
	getAllTags ()Lnet/minecraft/tags/TagCollection; a
net/minecraft/tags/SerializationTags afw
	instance a
	bind (Lnet/minecraft/tags/TagContainer;)V a
	getInstance ()Lnet/minecraft/tags/TagContainer; a
net/minecraft/tags/SetTag afx
	closestCommonSuperType a
	values c
	valuesList b
	contains (Ljava/lang/Object;)Z a
	create (Ljava/util/Set;)Lnet/minecraft/tags/SetTag; a
	empty ()Lnet/minecraft/tags/SetTag; a
	findClosestAncestor (Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class; a
	findCommonSuperClass (Ljava/util/Set;)Ljava/lang/Class; c
	getValues ()Ljava/util/List; b
net/minecraft/tags/StaticTagHelper afy
	directory b
	key a
	source c
	wrappers d
	addToCollection (Lnet/minecraft/tags/TagContainer$Builder;)V a
	bind (Ljava/lang/String;)Lnet/minecraft/tags/Tag$Named; a
	getAllTags ()Lnet/minecraft/tags/TagCollection; b
	getDirectory ()Ljava/lang/String; d
	getKey ()Lnet/minecraft/resources/ResourceKey; c
	getMissingTags (Lnet/minecraft/tags/TagContainer;)Ljava/util/Set; b
	reset (Lnet/minecraft/tags/TagContainer;)V a
	resetToEmpty ()V a
net/minecraft/tags/StaticTagHelper$Wrapper afy$a
	name a
	tag b
	contains (Ljava/lang/Object;)Z a
	getName ()Lnet/minecraft/resources/ResourceLocation; a
	getValues ()Ljava/util/List; b
	rebind (Ljava/util/function/Function;)V a
	resolve ()Lnet/minecraft/tags/Tag; c
net/minecraft/tags/StaticTags afz
	HELPERS b
	HELPERS_IDS a
	bootStrap ()V b
	create (Lnet/minecraft/resources/ResourceKey;Ljava/lang/String;)Lnet/minecraft/tags/StaticTagHelper; a
	createCollection ()Lnet/minecraft/tags/TagContainer; c
	getAllKnownHelpers ()Ljava/util/Set; d
	getAllMissingTags (Lnet/minecraft/tags/TagContainer;)Lcom/google/common/collect/Multimap; b
	makeSureAllKnownHelpersAreLoaded ()V e
	resetAll (Lnet/minecraft/tags/TagContainer;)V a
	resetAllToEmpty ()V a
	visitHelpers (Ljava/util/function/Consumer;)V a
net/minecraft/tags/Tag aga
	codec (Ljava/util/function/Supplier;)Lcom/mojang/serialization/Codec; a
	contains (Ljava/lang/Object;)Z a
	fromSet (Ljava/util/Set;)Lnet/minecraft/tags/Tag; b
	getRandomElement (Ljava/util/Random;)Ljava/lang/Object; a
	getValues ()Ljava/util/List; b
net/minecraft/tags/Tag$Builder aga$a
	entries a
	add (Lnet/minecraft/tags/Tag$BuilderEntry;)Lnet/minecraft/tags/Tag$Builder; a
	add (Lnet/minecraft/tags/Tag$Entry;Ljava/lang/String;)Lnet/minecraft/tags/Tag$Builder; a
	addElement (Lnet/minecraft/resources/ResourceLocation;Ljava/lang/String;)Lnet/minecraft/tags/Tag$Builder; a
	addFromJson (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lnet/minecraft/tags/Tag$Builder; a
	addOptionalElement (Lnet/minecraft/resources/ResourceLocation;Ljava/lang/String;)Lnet/minecraft/tags/Tag$Builder; b
	addOptionalTag (Lnet/minecraft/resources/ResourceLocation;Ljava/lang/String;)Lnet/minecraft/tags/Tag$Builder; d
	addTag (Lnet/minecraft/resources/ResourceLocation;Ljava/lang/String;)Lnet/minecraft/tags/Tag$Builder; c
	build (Ljava/util/function/Function;Ljava/util/function/Function;)Lcom/mojang/datafixers/util/Either; a
	getEntries ()Ljava/util/stream/Stream; b
	parseEntry (Lcom/google/gson/JsonElement;)Lnet/minecraft/tags/Tag$Entry; a
	serializeToJson ()Lcom/google/gson/JsonObject; c
	tag ()Lnet/minecraft/tags/Tag$Builder; a
	visitOptionalDependencies (Ljava/util/function/Consumer;)V b
	visitRequiredDependencies (Ljava/util/function/Consumer;)V a
net/minecraft/tags/Tag$BuilderEntry aga$b
	entry a
	source b
	getEntry ()Lnet/minecraft/tags/Tag$Entry; a
	getSource ()Ljava/lang/String; b
net/minecraft/tags/Tag$ElementEntry aga$c
	id a
	build (Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Consumer;)Z a
	serializeTo (Lcom/google/gson/JsonArray;)V a
	verifyIfPresent (Ljava/util/function/Predicate;Ljava/util/function/Predicate;)Z a
net/minecraft/tags/Tag$Entry aga$d
	build (Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Consumer;)Z a
	serializeTo (Lcom/google/gson/JsonArray;)V a
	verifyIfPresent (Ljava/util/function/Predicate;Ljava/util/function/Predicate;)Z a
	visitOptionalDependencies (Ljava/util/function/Consumer;)V b
	visitRequiredDependencies (Ljava/util/function/Consumer;)V a
net/minecraft/tags/Tag$Named aga$e
	getName ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/tags/Tag$OptionalElementEntry aga$f
	id a
	build (Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Consumer;)Z a
	serializeTo (Lcom/google/gson/JsonArray;)V a
	verifyIfPresent (Ljava/util/function/Predicate;Ljava/util/function/Predicate;)Z a
net/minecraft/tags/Tag$OptionalTagEntry aga$g
	id a
	build (Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Consumer;)Z a
	serializeTo (Lcom/google/gson/JsonArray;)V a
	verifyIfPresent (Ljava/util/function/Predicate;Ljava/util/function/Predicate;)Z a
	visitOptionalDependencies (Ljava/util/function/Consumer;)V b
net/minecraft/tags/Tag$TagEntry aga$h
	id a
	build (Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Consumer;)Z a
	serializeTo (Lcom/google/gson/JsonArray;)V a
	verifyIfPresent (Ljava/util/function/Predicate;Ljava/util/function/Predicate;)Z a
	visitRequiredDependencies (Ljava/util/function/Consumer;)V a
net/minecraft/tags/TagCollection agb
	createFromNetwork (Lnet/minecraft/tags/TagCollection$NetworkPayload;Lnet/minecraft/core/Registry;)Lnet/minecraft/tags/TagCollection; a
	empty ()Lnet/minecraft/tags/TagCollection; c
	getAllTags ()Ljava/util/Map; a
	getAvailableTags ()Ljava/util/Collection; b
	getId (Lnet/minecraft/tags/Tag$Named;)Lnet/minecraft/resources/ResourceLocation; a
	getId (Lnet/minecraft/tags/Tag;)Lnet/minecraft/resources/ResourceLocation; a
	getMatchingTags (Ljava/lang/Object;)Ljava/util/Collection; a
	getTag (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/tags/Tag; a
	getTagOrEmpty (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/tags/Tag; b
	hasTag (Lnet/minecraft/resources/ResourceLocation;)Z c
	of (Ljava/util/Map;)Lnet/minecraft/tags/TagCollection; a
	serializeToNetwork (Lnet/minecraft/core/Registry;)Lnet/minecraft/tags/TagCollection$NetworkPayload; a
net/minecraft/tags/TagCollection$NetworkPayload agb$a
	tags a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/tags/TagCollection$NetworkPayload; b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/tags/TagContainer agc
	EMPTY a
	LOGGER b
	collections c
	acceptCap (Lnet/minecraft/tags/TagContainer$CollectionConsumer;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/tags/TagCollection;)V a
	addTagsFromPayload (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/tags/TagContainer$Builder;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/tags/TagCollection$NetworkPayload;)V a
	bindToGlobal ()V a
	deserializeFromNetwork (Lnet/minecraft/core/RegistryAccess;Ljava/util/Map;)Lnet/minecraft/tags/TagContainer; a
	get (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/tags/TagCollection; b
	getAll (Lnet/minecraft/tags/TagContainer$CollectionConsumer;)V a
	getIdOrThrow (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/tags/Tag;Ljava/util/function/Supplier;)Lnet/minecraft/resources/ResourceLocation; a
	getOrEmpty (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/tags/TagCollection; a
	getTagOrThrow (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceLocation;Ljava/util/function/Function;)Lnet/minecraft/tags/Tag; a
	serializeToNetwork (Lnet/minecraft/core/RegistryAccess;)Ljava/util/Map; a
net/minecraft/tags/TagContainer$Builder agc$a
	result a
	add (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/tags/TagCollection;)Lnet/minecraft/tags/TagContainer$Builder; a
	build ()Lnet/minecraft/tags/TagContainer; a
net/minecraft/tags/TagContainer$CollectionConsumer agc$b
	accept (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/tags/TagCollection;)V a
net/minecraft/tags/TagLoader agd
	GSON b
	LOGGER a
	PATH_SUFFIX c
	PATH_SUFFIX_LENGTH d
	directory f
	idToValue e
	addDependencyIfNotCyclic (Lcom/google/common/collect/Multimap;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)V b
	build (Ljava/util/Map;)Lnet/minecraft/tags/TagCollection; a
	isCyclic (Lcom/google/common/collect/Multimap;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Z a
	load (Lnet/minecraft/server/packs/resources/ResourceManager;)Ljava/util/Map; a
	loadAndBuild (Lnet/minecraft/server/packs/resources/ResourceManager;)Lnet/minecraft/tags/TagCollection; b
	visitDependenciesAndElement (Ljava/util/Map;Lcom/google/common/collect/Multimap;Ljava/util/Set;Lnet/minecraft/resources/ResourceLocation;Ljava/util/function/BiConsumer;)V a
net/minecraft/tags/TagManager age
	LOGGER a
	registryAccess b
	tags c
	createLoader (Lnet/minecraft/server/packs/resources/ResourceManager;Ljava/util/concurrent/Executor;Lnet/minecraft/tags/StaticTagHelper;)Lnet/minecraft/tags/TagManager$LoaderInfo; a
	getTags ()Lnet/minecraft/tags/TagContainer; a
	reload (Lnet/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/tags/TagManager$LoaderInfo age$a
	helper a
	pendingLoad b
	addToBuilder (Lnet/minecraft/tags/TagContainer$Builder;)V a
net/minecraft/util/BitStorage agg
	MAGIC a
	bits c
	data b
	divideAdd h
	divideMul g
	divideShift i
	mask d
	size e
	valuesPerLong f
	cellIndex (I)I b
	get (I)I a
	getAll (Ljava/util/function/IntConsumer;)V a
	getAndSet (II)I a
	getBits ()I c
	getRaw ()[J a
	getSize ()I b
	set (II)V b
net/minecraft/util/ClassInstanceMultiMap agh
	allInstances c
	baseClass b
	byClass a
	find (Ljava/lang/Class;)Ljava/util/Collection; a
	getAllInstances ()Ljava/util/List; a
net/minecraft/util/CrudeIncrementalIntIdentityHashBiMap agi
	EMPTY_SLOT b
	LOADFACTOR c
	NOT_FOUND a
	byId f
	keys d
	nextId g
	size h
	values e
	add (Ljava/lang/Object;)I c
	addMapping (Ljava/lang/Object;I)V a
	byId (I)Ljava/lang/Object; a
	clear ()V a
	contains (I)Z b
	contains (Ljava/lang/Object;)Z b
	findEmpty (I)I e
	getId (Ljava/lang/Object;)I a
	getValue (I)I c
	grow (I)V d
	hash (Ljava/lang/Object;)I d
	indexOf (Ljava/lang/Object;I)I b
	nextId ()I c
	size ()I b
net/minecraft/util/Crypt agj
	ASYMMETRIC_ALGORITHM c
	ASYMMETRIC_BITS d
	BYTE_ENCODING e
	HASH_ALGORITHM f
	SYMMETRIC_ALGORITHM a
	SYMMETRIC_BITS b
	byteToPublicKey ([B)Ljava/security/PublicKey; a
	cipherData (ILjava/security/Key;[B)[B a
	decryptByteToSecretKey (Ljava/security/PrivateKey;[B)Ljavax/crypto/SecretKey; a
	decryptUsingKey (Ljava/security/Key;[B)[B b
	digestData (Ljava/lang/String;Ljava/security/PublicKey;Ljavax/crypto/SecretKey;)[B a
	digestData ([[B)[B a
	encryptUsingKey (Ljava/security/Key;[B)[B a
	generateKeyPair ()Ljava/security/KeyPair; b
	generateSecretKey ()Ljavax/crypto/SecretKey; a
	getCipher (ILjava/security/Key;)Ljavax/crypto/Cipher; a
	setupCipher (ILjava/lang/String;Ljava/security/Key;)Ljavax/crypto/Cipher; a
net/minecraft/util/CryptException agk
net/minecraft/util/CsvOutput agl
	FIELD_SEPARATOR b
	LINE_SEPARATOR a
	columnCount d
	output c
	builder ()Lnet/minecraft/util/CsvOutput$Builder; a
	getStringValue (Ljava/lang/Object;)Ljava/lang/String; a
	writeLine (Ljava/util/stream/Stream;)V a
	writeRow ([Ljava/lang/Object;)V a
net/minecraft/util/CsvOutput$Builder agl$a
	headers a
	addColumn (Ljava/lang/String;)Lnet/minecraft/util/CsvOutput$Builder; a
	build (Ljava/io/Writer;)Lnet/minecraft/util/CsvOutput; a
net/minecraft/util/DebugBuffer agm
	data a
	index b
	dump ()Ljava/util/List; a
	push (Ljava/lang/Object;)V a
net/minecraft/util/DirectoryLock agn
	DUMMY d
	LOCK_FILE a
	lock c
	lockFile b
	create (Ljava/nio/file/Path;)Lnet/minecraft/util/DirectoryLock; a
	isLocked (Ljava/nio/file/Path;)Z b
	isValid ()Z a
net/minecraft/util/DirectoryLock$LockException agn$a
	alreadyLocked (Ljava/nio/file/Path;)Lnet/minecraft/util/DirectoryLock$LockException; a
net/minecraft/util/ExceptionCollector ago
	result a
	add (Ljava/lang/Throwable;)V a
	throwIfPresent ()V a
net/minecraft/util/ExtraCodecs agp
	NON_NEGATIVE_INT a
	POSITIVE_INT b
	checkRangeWithMessage (Ljava/lang/Number;Ljava/lang/Number;Ljava/util/function/Function;)Ljava/util/function/Function; a
	intRangeWithMessage (IILjava/util/function/Function;)Lcom/mojang/serialization/Codec; a
	nonEmptyList (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; a
	nonEmptyListCheck ()Ljava/util/function/Function; a
	nonNullSupplierCheck ()Ljava/util/function/Function; c
	nonNullSupplierListCheck ()Ljava/util/function/Function; b
	xor (Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; a
net/minecraft/util/ExtraCodecs$XorCodec agp$a
	first a
	second b
	encode (Lcom/mojang/datafixers/util/Either;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; a
net/minecraft/util/FastColor agq
net/minecraft/util/FastColor$ARGB32 agq$a
	alpha (I)I a
	blue (I)I d
	color (IIII)I a
	green (I)I c
	multiply (II)I a
	red (I)I b
net/minecraft/util/FileZipper agr
	LOGGER a
	fs d
	outputFile b
	tempFile c
	add (Ljava/nio/file/Path;)V a
	add (Ljava/nio/file/Path;Ljava/io/File;)V a
	add (Ljava/nio/file/Path;Ljava/lang/String;)V a
net/minecraft/util/FormattedCharSequence ags
	EMPTY a
	backward (Ljava/lang/String;Lnet/minecraft/network/chat/Style;)Lnet/minecraft/util/FormattedCharSequence; b
	backward (Ljava/lang/String;Lnet/minecraft/network/chat/Style;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;)Lnet/minecraft/util/FormattedCharSequence; b
	codepoint (ILnet/minecraft/network/chat/Style;)Lnet/minecraft/util/FormattedCharSequence; a
	composite ()Lnet/minecraft/util/FormattedCharSequence; a
	composite (Ljava/util/List;)Lnet/minecraft/util/FormattedCharSequence; a
	composite (Lnet/minecraft/util/FormattedCharSequence;)Lnet/minecraft/util/FormattedCharSequence; a
	composite (Lnet/minecraft/util/FormattedCharSequence;Lnet/minecraft/util/FormattedCharSequence;)Lnet/minecraft/util/FormattedCharSequence; a
	composite ([Lnet/minecraft/util/FormattedCharSequence;)Lnet/minecraft/util/FormattedCharSequence; a
	decorateOutput (Lnet/minecraft/util/FormattedCharSink;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;)Lnet/minecraft/util/FormattedCharSink; a
	forward (Ljava/lang/String;Lnet/minecraft/network/chat/Style;)Lnet/minecraft/util/FormattedCharSequence; a
	forward (Ljava/lang/String;Lnet/minecraft/network/chat/Style;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;)Lnet/minecraft/util/FormattedCharSequence; a
	fromList (Ljava/util/List;)Lnet/minecraft/util/FormattedCharSequence; b
	fromPair (Lnet/minecraft/util/FormattedCharSequence;Lnet/minecraft/util/FormattedCharSequence;)Lnet/minecraft/util/FormattedCharSequence; b
net/minecraft/util/FormattedCharSink agt
net/minecraft/util/FrameTimer agu
	LOGGING_LENGTH a
	logEnd e
	logLength d
	logStart c
	loggedTimes b
	getAverageDuration (I)J a
	getLog ()[J c
	getLogEnd ()I b
	getLogStart ()I a
	logFrameDuration (J)V a
	scaleAverageDurationTo (II)I a
	scaleSampleTo (JII)I a
	wrapIndex (I)I b
net/minecraft/util/GsonHelper agv
	GSON a
	convertToBigDecimal (Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/math/BigDecimal; j
	convertToBigInteger (Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/math/BigInteger; k
	convertToBoolean (Lcom/google/gson/JsonElement;Ljava/lang/String;)Z c
	convertToByte (Lcom/google/gson/JsonElement;Ljava/lang/String;)B h
	convertToCharacter (Lcom/google/gson/JsonElement;Ljava/lang/String;)C i
	convertToDouble (Lcom/google/gson/JsonElement;Ljava/lang/String;)D d
	convertToFloat (Lcom/google/gson/JsonElement;Ljava/lang/String;)F e
	convertToInt (Lcom/google/gson/JsonElement;Ljava/lang/String;)I g
	convertToItem (Lcom/google/gson/JsonElement;Ljava/lang/String;)Lnet/minecraft/world/item/Item; b
	convertToJsonArray (Lcom/google/gson/JsonElement;Ljava/lang/String;)Lcom/google/gson/JsonArray; n
	convertToJsonObject (Lcom/google/gson/JsonElement;Ljava/lang/String;)Lcom/google/gson/JsonObject; m
	convertToLong (Lcom/google/gson/JsonElement;Ljava/lang/String;)J f
	convertToObject (Lcom/google/gson/JsonElement;Ljava/lang/String;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object; a
	convertToShort (Lcom/google/gson/JsonElement;Ljava/lang/String;)S l
	convertToString (Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/lang/String; a
	fromJson (Lcom/google/gson/Gson;Ljava/io/Reader;Lcom/google/gson/reflect/TypeToken;)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/Gson;Ljava/io/Reader;Lcom/google/gson/reflect/TypeToken;Z)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/Gson;Ljava/io/Reader;Ljava/lang/Class;)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/Gson;Ljava/io/Reader;Ljava/lang/Class;Z)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/Gson;Ljava/lang/String;Lcom/google/gson/reflect/TypeToken;)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/Gson;Ljava/lang/String;Lcom/google/gson/reflect/TypeToken;Z)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/Gson;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/Gson;Ljava/lang/String;Ljava/lang/Class;Z)Ljava/lang/Object; a
	getAsBigDecimal (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/math/BigDecimal; q
	getAsBigDecimal (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/math/BigDecimal;)Ljava/math/BigDecimal; a
	getAsBigInteger (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/math/BigInteger; r
	getAsBigInteger (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/math/BigInteger;)Ljava/math/BigInteger; a
	getAsBoolean (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z j
	getAsBoolean (Lcom/google/gson/JsonObject;Ljava/lang/String;Z)Z a
	getAsByte (Lcom/google/gson/JsonObject;Ljava/lang/String;)B o
	getAsByte (Lcom/google/gson/JsonObject;Ljava/lang/String;B)B a
	getAsCharacter (Lcom/google/gson/JsonObject;Ljava/lang/String;)C p
	getAsCharacter (Lcom/google/gson/JsonObject;Ljava/lang/String;C)C a
	getAsDouble (Lcom/google/gson/JsonObject;Ljava/lang/String;)D k
	getAsDouble (Lcom/google/gson/JsonObject;Ljava/lang/String;D)D a
	getAsFloat (Lcom/google/gson/JsonObject;Ljava/lang/String;)F l
	getAsFloat (Lcom/google/gson/JsonObject;Ljava/lang/String;F)F a
	getAsInt (Lcom/google/gson/JsonObject;Ljava/lang/String;)I n
	getAsInt (Lcom/google/gson/JsonObject;Ljava/lang/String;I)I a
	getAsItem (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lnet/minecraft/world/item/Item; i
	getAsItem (Lcom/google/gson/JsonObject;Ljava/lang/String;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/item/Item; a
	getAsJsonArray (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lcom/google/gson/JsonArray; u
	getAsJsonArray (Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonArray;)Lcom/google/gson/JsonArray; a
	getAsJsonObject (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lcom/google/gson/JsonObject; t
	getAsJsonObject (Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonObject;)Lcom/google/gson/JsonObject; a
	getAsLong (Lcom/google/gson/JsonObject;Ljava/lang/String;)J m
	getAsLong (Lcom/google/gson/JsonObject;Ljava/lang/String;J)J a
	getAsObject (Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object; a
	getAsObject (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/Object;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object; a
	getAsShort (Lcom/google/gson/JsonObject;Ljava/lang/String;)S s
	getAsShort (Lcom/google/gson/JsonObject;Ljava/lang/String;S)S a
	getAsString (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/String; h
	getAsString (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; a
	getType (Lcom/google/gson/JsonElement;)Ljava/lang/String; d
	isArrayNode (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z d
	isBooleanValue (Lcom/google/gson/JsonElement;)Z c
	isBooleanValue (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z c
	isNumberValue (Lcom/google/gson/JsonElement;)Z b
	isNumberValue (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z b
	isObjectNode (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z e
	isStringValue (Lcom/google/gson/JsonElement;)Z a
	isStringValue (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z a
	isValidNode (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z g
	isValidPrimitive (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z f
	parse (Ljava/io/Reader;)Lcom/google/gson/JsonObject; a
	parse (Ljava/io/Reader;Z)Lcom/google/gson/JsonObject; a
	parse (Ljava/lang/String;)Lcom/google/gson/JsonObject; a
	parse (Ljava/lang/String;Z)Lcom/google/gson/JsonObject; a
	parseArray (Ljava/io/Reader;)Lcom/google/gson/JsonArray; b
net/minecraft/util/HttpUtil agw
	DOWNLOAD_EXECUTOR a
	LOGGER b
	buildQuery (Ljava/util/Map;)Ljava/lang/String; a
	downloadTo (Ljava/io/File;Ljava/lang/String;Ljava/util/Map;ILnet/minecraft/util/ProgressListener;Ljava/net/Proxy;)Ljava/util/concurrent/CompletableFuture; a
	getAvailablePort ()I a
	performPost (Ljava/net/URL;Ljava/lang/String;ZLjava/net/Proxy;)Ljava/lang/String; a
	performPost (Ljava/net/URL;Ljava/util/Map;ZLjava/net/Proxy;)Ljava/lang/String; a
net/minecraft/util/LazyLoadedValue agx
	factory a
	get ()Ljava/lang/Object; a
net/minecraft/util/LinearCongruentialGenerator agy
	INCREMENT b
	MULTIPLIER a
	next (JJ)J a
net/minecraft/util/LowerCaseEnumTypeAdapterFactory agz
	toLowercase (Ljava/lang/Object;)Ljava/lang/String; a
net/minecraft/util/Mth aha
	ASIN_TAB v
	BIG_ENOUGH_FLOAT i
	BIG_ENOUGH_INT h
	COS_TAB w
	DEG_TO_RAD d
	EPSILON f
	FRAC_BIAS u
	FRAC_EXP s
	HALF_PI b
	LUT_SIZE t
	MULTIPLY_DE_BRUIJN_BIT_POSITION q
	ONE_SIXTH r
	PI a
	RAD_TO_DEG e
	RANDOM p
	SIN o
	SIN_SCALE n
	SQRT_OF_TWO g
	TWO_PI c
	UUID_VARIANT l
	UUID_VARIANT_2 m
	UUID_VERSION j
	UUID_VERSION_TYPE_4 k
	abs (F)F e
	abs (I)I a
	absFloor (D)I d
	absMax (DD)D a
	approach (FFF)F d
	approachDegrees (FFF)F e
	atan2 (DD)D d
	average ([J)D a
	binBiModalNormalDistribution (DDDDDDII)[D a
	binLogDistribution (DDII)[D a
	binNormalDistribution (DDDII)[D a
	binarySearch (IILjava/util/function/IntPredicate;)I a
	catmullRomSplinePos (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;D)Lnet/minecraft/world/phys/Vec3; a
	ceil (D)I e
	ceil (F)I f
	ceillog2 (I)I e
	clamp (BBB)B a
	clamp (DDD)D a
	clamp (FFF)F a
	clamp (III)I a
	clamp (JJJ)J a
	clampedLerp (DDD)D b
	clampedLerp (FFF)F b
	clampedMap (DDDDD)D a
	color (FFF)I f
	color (III)I b
	colorMultiply (IFFF)I a
	colorMultiply (II)I c
	cos (F)F b
	createInsecureUUID ()Ljava/util/UUID; a
	createInsecureUUID (Ljava/util/Random;)Ljava/util/UUID; a
	cumulativeSum ([D)[D a
	degreesDifference (FF)F c
	degreesDifferenceAbs (FF)F d
	diffuseLight (FFF)F j
	equal (DD)Z b
	equal (FF)Z a
	fastFloor (D)I a
	fastInvCubeRoot (F)F j
	fastInvSqrt (D)D h
	fastInvSqrt (F)F i
	floor (D)I b
	floor (F)I d
	frac (D)D g
	frac (F)F h
	getDouble (Ljava/lang/String;D)D a
	getDouble (Ljava/lang/String;DD)D a
	getInt (Ljava/lang/String;I)I a
	getInt (Ljava/lang/String;II)I a
	getRandomForDistributionIntegral (Ljava/util/Random;[D)I a
	getSeed (III)J c
	getSeed (Lnet/minecraft/core/Vec3i;)J a
	hsvToRgb (FFF)I g
	intFloorDiv (II)I a
	inverseLerp (DDD)D c
	isPowerOfTwo (I)Z d
	length (IDI)D a
	lerp (DDD)D d
	lerp (FFF)F h
	lerp2 (DDDDDD)D a
	lerp3 (DDDDDDDDDDD)D a
	lfloor (D)J c
	log2 (I)I f
	map (DDDDD)D b
	murmurHash3Mixer (I)I g
	murmurHash3Mixer (J)J a
	nextDouble (Ljava/util/Random;DD)D a
	nextFloat (Ljava/util/Random;FF)F a
	nextInt (Ljava/util/Random;II)I a
	normal (Ljava/util/Random;FF)F c
	positiveModulo (DD)D c
	positiveModulo (FF)F b
	positiveModulo (II)I b
	randomBetween (Ljava/util/Random;FF)F b
	randomBetweenInclusive (Ljava/util/Random;II)I b
	rayIntersectsAABB (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/AABB;)Z a
	rotLerp (FFF)F i
	rotWrap (D)F l
	rotateIfNecessary (FFF)F c
	rotlerp (FFF)F k
	roundToward (II)I d
	sign (D)I k
	sin (F)F a
	smallestEncompassingPowerOfTwo (I)I c
	smoothstep (D)D i
	smoothstepDerivative (D)D j
	sqrt (F)F c
	square (D)D m
	square (F)F k
	square (I)I h
	triangleWave (FF)F e
	wobble (D)D n
	wrapDegrees (D)D f
	wrapDegrees (F)F g
	wrapDegrees (I)I b
net/minecraft/util/ParticleUtils ahb
	spawnParticleOnFace (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/core/particles/ParticleOptions;)V a
	spawnParticlesAlongAxis (Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;DLnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/util/valueproviders/UniformInt;)V a
	spawnParticlesOnBlockFaces (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/util/valueproviders/UniformInt;)V a
net/minecraft/util/ProgressListener ahc
	progressStage (Lnet/minecraft/network/chat/Component;)V c
	progressStagePercentage (I)V a
	progressStart (Lnet/minecraft/network/chat/Component;)V b
	progressStartNoAbort (Lnet/minecraft/network/chat/Component;)V a
	stop ()V a
net/minecraft/util/RewindableStream ahd
	cache a
	source b
	getStream ()Ljava/util/stream/Stream; a
net/minecraft/util/SmoothDouble ahe
	lastAmount c
	remainingValue b
	targetValue a
	getNewDeltaValue (DD)D a
	reset ()V a
net/minecraft/util/SortedArraySet ahf
	DEFAULT_INITIAL_CAPACITY a
	comparator b
	contents c
	size d
	addInternal (Ljava/lang/Object;I)V a
	addOrGet (Ljava/lang/Object;)Ljava/lang/Object; a
	castRawArray ([Ljava/lang/Object;)[Ljava/lang/Object; a
	create ()Lnet/minecraft/util/SortedArraySet; a
	create (I)Lnet/minecraft/util/SortedArraySet; a
	create (Ljava/util/Comparator;)Lnet/minecraft/util/SortedArraySet; a
	create (Ljava/util/Comparator;I)Lnet/minecraft/util/SortedArraySet; a
	findIndex (Ljava/lang/Object;)I c
	first ()Ljava/lang/Object; b
	get (Ljava/lang/Object;)Ljava/lang/Object; b
	getInsertionPosition (I)I b
	getInternal (I)Ljava/lang/Object; e
	grow (I)V c
	last ()Ljava/lang/Object; c
	removeInternal (I)V d
net/minecraft/util/SortedArraySet$ArrayIterator ahf$a
	index b
	last c
net/minecraft/util/StringDecomposer ahg
	REPLACEMENT_CHAR a
	STOP_ITERATION b
	feedChar (Lnet/minecraft/network/chat/Style;Lnet/minecraft/util/FormattedCharSink;IC)Z a
	filterBrokenSurrogates (Ljava/lang/String;)Ljava/lang/String; a
	getPlainText (Lnet/minecraft/network/chat/FormattedText;)Ljava/lang/String; a
	iterate (Ljava/lang/String;Lnet/minecraft/network/chat/Style;Lnet/minecraft/util/FormattedCharSink;)Z a
	iterateBackwards (Ljava/lang/String;Lnet/minecraft/network/chat/Style;Lnet/minecraft/util/FormattedCharSink;)Z b
	iterateFormatted (Ljava/lang/String;ILnet/minecraft/network/chat/Style;Lnet/minecraft/network/chat/Style;Lnet/minecraft/util/FormattedCharSink;)Z a
	iterateFormatted (Ljava/lang/String;ILnet/minecraft/network/chat/Style;Lnet/minecraft/util/FormattedCharSink;)Z a
	iterateFormatted (Ljava/lang/String;Lnet/minecraft/network/chat/Style;Lnet/minecraft/util/FormattedCharSink;)Z c
	iterateFormatted (Lnet/minecraft/network/chat/FormattedText;Lnet/minecraft/network/chat/Style;Lnet/minecraft/util/FormattedCharSink;)Z a
net/minecraft/util/StringRepresentable ahh
	fromEnum (Ljava/util/function/Supplier;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; a
	fromStringResolver (Ljava/util/function/ToIntFunction;Ljava/util/function/IntFunction;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; a
	getSerializedName ()Ljava/lang/String; c
	keys ([Lnet/minecraft/util/StringRepresentable;)Lcom/mojang/serialization/Keyable; a
net/minecraft/util/StringUtil ahi
	LINE_END_PATTERN c
	LINE_PATTERN b
	STRIP_COLOR_PATTERN a
	endsWithNewLine (Ljava/lang/String;)Z d
	formatTickDuration (I)Ljava/lang/String; a
	isNullOrEmpty (Ljava/lang/String;)Z b
	lineCount (Ljava/lang/String;)I c
	stripColor (Ljava/lang/String;)Ljava/lang/String; a
	truncateStringIfNecessary (Ljava/lang/String;IZ)Ljava/lang/String; a
net/minecraft/util/ThreadingDetector ahj
	checkAndLock (Ljava/util/concurrent/Semaphore;Lnet/minecraft/util/DebugBuffer;Ljava/lang/String;)V a
	makeThreadingException (Ljava/lang/String;Lnet/minecraft/util/DebugBuffer;)Lnet/minecraft/ReportedException; a
net/minecraft/util/TimeUtil ahk
	NANOSECONDS_PER_MILLISECOND b
	NANOSECONDS_PER_SECOND a
	rangeOfSeconds (II)Lnet/minecraft/util/valueproviders/UniformInt; a
net/minecraft/util/Tuple ahl
	getA ()Ljava/lang/Object; a
	getB ()Ljava/lang/Object; b
	setA (Ljava/lang/Object;)V a
	setB (Ljava/lang/Object;)V b
net/minecraft/util/Unit ahm
	$VALUES b
	INSTANCE a
	$values ()[Lnet/minecraft/util/Unit; a
net/minecraft/util/VisibleForDebug ahn
net/minecraft/util/WeighedRandom aho
	LOGGER a
	getRandomItem (Ljava/util/Random;Ljava/util/List;)Ljava/util/Optional; a
	getRandomItem (Ljava/util/Random;Ljava/util/List;I)Ljava/util/Optional; a
	getTotalWeight (Ljava/util/List;)I a
	getWeightedItem (Ljava/util/List;I)Ljava/util/Optional; a
net/minecraft/util/WeighedRandom$WeighedRandomItem aho$a
	weight a
net/minecraft/util/datafix/DataFixTypes ahp
	$VALUES n
	ADVANCEMENTS i
	CHUNK c
	ENTITY_CHUNK l
	HOTBAR d
	LEVEL a
	OPTIONS e
	PLAYER b
	POI_CHUNK j
	SAVED_DATA h
	STATS g
	STRUCTURE f
	WORLD_GEN_SETTINGS k
	type m
	$values ()[Lnet/minecraft/util/datafix/DataFixTypes; b
	getType ()Lcom/mojang/datafixers/DSL$TypeReference; a
net/minecraft/util/datafix/DataFixers ahq
	DATA_FIXER c
	SAME a
	SAME_NAMESPACED b
	addFixers (Lcom/mojang/datafixers/DataFixerBuilder;)V a
	createFixerUpper ()Lcom/mojang/datafixers/DataFixer; b
	createRenamer (Ljava/lang/String;Ljava/lang/String;)Ljava/util/function/UnaryOperator; a
	createRenamer (Ljava/util/Map;)Ljava/util/function/UnaryOperator; a
	getDataFixer ()Lcom/mojang/datafixers/DataFixer; a
net/minecraft/util/datafix/PackedBitStorage ahr
	BIT_TO_LONG_SHIFT a
	bits c
	data b
	mask d
	size e
	get (I)I a
	getBits ()I b
	getRaw ()[J a
	set (II)V a
net/minecraft/util/datafix/fixes/AbstractArrowPickupFix ahs
	updateEntity (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed; a
	updatePickup (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	updateProjectiles (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/AbstractUUIDFix aht
	LOGGER a
	typeReference b
	createUUIDFromLongs (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional; d
	createUUIDFromML (Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional; a
	createUUIDFromString (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Ljava/util/Optional; a
	createUUIDTag (Lcom/mojang/serialization/Dynamic;JJ)Ljava/util/Optional; a
	replaceUUIDLeastMost (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional; c
	replaceUUIDMLTag (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional; b
	replaceUUIDString (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional; a
	updateNamedChoice (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/AddNewChoices ahu
	name a
	type b
	cap (Ljava/lang/String;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;)Lcom/mojang/datafixers/TypeRewriteRule; a
net/minecraft/util/datafix/fixes/AdvancementsFix ahv
	RENAMES a
net/minecraft/util/datafix/fixes/AdvancementsRenameFix ahw
	name a
	renamer b
net/minecraft/util/datafix/fixes/AttributesRename ahx
	RENAMES a
	fixEntity (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; b
	fixItemStackTag (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixName (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/BedBlockEntityInjecter ahy
	cap (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/templates/List$ListType;)Lcom/mojang/datafixers/TypeRewriteRule; a
net/minecraft/util/datafix/fixes/BedItemColorFix ahz
net/minecraft/util/datafix/fixes/BeehivePoiRenameFix aia
	rename (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/BiomeFix aib
	BIOMES a
net/minecraft/util/datafix/fixes/BitStorageAlignFix aic
	BIT_TO_LONG_SHIFT a
	HEIGHTMAP_BITS e
	HEIGHTMAP_SIZE f
	SECTION_HEIGHT c
	SECTION_SIZE d
	SECTION_WIDTH b
	addPadding (II[J)[J a
	updateBitStorage (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;II)Lcom/mojang/serialization/Dynamic; a
	updateHeightmaps (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	updateSections (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/BlockEntityBannerColorFix aid
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/BlockEntityBlockStateFix aie
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/BlockEntityCustomNameToComponentFix aif
net/minecraft/util/datafix/fixes/BlockEntityIdFix aig
	ID_MAP a
net/minecraft/util/datafix/fixes/BlockEntityJukeboxFix aih
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/BlockEntityKeepPacked aii
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/BlockEntityShulkerBoxColorFix aij
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/BlockEntitySignTextStrictJsonFix aik
	GSON a
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	updateLine (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/BlockEntityUUIDFix ail
	updateConduit (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
	updateSkull (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
net/minecraft/util/datafix/fixes/BlockNameFlatteningFix aim
net/minecraft/util/datafix/fixes/BlockRenameFix ain
	name a
	create (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/DataFix; a
	fixBlock (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/BlockRenameFixWithJigsaw aio
	name a
	create (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/DataFix; b
net/minecraft/util/datafix/fixes/BlockStateData aip
	BLOCK_DEFAULTS d
	FILTER_ME a
	ID_BY_OLD e
	ID_BY_OLD_NAME f
	LOGGER b
	MAP c
	bootstrap0 ()V a
	bootstrap1 ()V b
	bootstrap10 ()V k
	bootstrap11 ()V l
	bootstrap12 ()V m
	bootstrap13 ()V n
	bootstrap14 ()V o
	bootstrap15 ()V p
	bootstrap2 ()V c
	bootstrap3 ()V d
	bootstrap4 ()V e
	bootstrap5 ()V f
	bootstrap6 ()V g
	bootstrap7 ()V h
	bootstrap8 ()V i
	bootstrap9 ()V j
	finalizeMaps ()V q
	getTag (I)Lcom/mojang/serialization/Dynamic; b
	parse (Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; b
	register (ILjava/lang/String;[Ljava/lang/String;)V a
	upgradeBlock (I)Ljava/lang/String; a
	upgradeBlock (Ljava/lang/String;)Ljava/lang/String; a
	upgradeBlockStateTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/BlockStateStructureTemplateFix aiq
net/minecraft/util/datafix/fixes/CatTypeFix air
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/CauldronRenameFix ais
	fix (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/ChunkBiomeFix ait
net/minecraft/util/datafix/fixes/ChunkLightRemoveFix aiu
net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix aiv
	AIR C
	BANNER_BLOCK_MAP B
	BED_BLOCK_MAP A
	DOOR_MAP x
	DYE_COLOR_MAP z
	EAST_MASK f
	FIX k
	FLOWER_POT_MAP v
	LOGGER i
	NORTH_EAST_MASK g
	NORTH_MASK h
	NORTH_WEST_MASK a
	NOTE_BLOCK_MAP y
	PUMPKIN l
	SIZE D
	SKULL_MAP w
	SNOWY_GRASS n
	SNOWY_MYCELIUM o
	SNOWY_PODZOL m
	SOUTH_EAST_MASK e
	SOUTH_MASK d
	SOUTH_WEST_MASK c
	UPPER_LARGE_FERN s
	UPPER_LILAC q
	UPPER_PEONY u
	UPPER_ROSE_BUSH t
	UPPER_SUNFLOWER p
	UPPER_TALL_GRASS r
	VIRTUAL j
	WEST_MASK b
	addBanners (Ljava/util/Map;ILjava/lang/String;)V b
	addBeds (Ljava/util/Map;ILjava/lang/String;)V a
	fix (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	getName (Lcom/mojang/serialization/Dynamic;)Ljava/lang/String; a
	getProperty (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Ljava/lang/String; a
	getSideMask (ZZZZ)I a
	idFor (Lnet/minecraft/util/CrudeIncrementalIntIdentityHashBiMap;Lcom/mojang/serialization/Dynamic;)I a
	mapDoor (Ljava/util/Map;Ljava/lang/String;I)V a
	mapSkull (Ljava/util/Map;ILjava/lang/String;Ljava/lang/String;)V a
net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$DataLayer aiv$a
	NIBBLE_SIZE b
	SIZE a
	data c
	get (III)I a
	getPosition (I)I b
	isFirst (I)Z a
net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction aiv$b
	$VALUES i
	DOWN a
	EAST f
	NORTH c
	SOUTH d
	UP b
	WEST e
	axis g
	axisDirection h
	$values ()[Lnet/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction; c
	getAxis ()Lnet/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction$Axis; b
	getAxisDirection ()Lnet/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction$AxisDirection; a
net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction$Axis aiv$b$a
	$VALUES d
	X a
	Y b
	Z c
	$values ()[Lnet/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction$Axis; a
net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction$AxisDirection aiv$b$b
	$VALUES d
	NEGATIVE b
	POSITIVE a
	step c
	$values ()[Lnet/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction$AxisDirection; b
	getStep ()I a
net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Section aiv$c
	buffer i
	hasData e
	listTag c
	palette b
	section d
	seen h
	toFix f
	update g
	y a
	addFix (II)V a
	getBlock (I)Lcom/mojang/serialization/Dynamic; a
	setBlock (ILcom/mojang/serialization/Dynamic;)V a
	upgrade (I)I b
	write ()Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$UpgradeChunk aiv$d
	blockEntities f
	level c
	sections b
	sides a
	x d
	z e
	getBlock (I)Lcom/mojang/serialization/Dynamic; a
	getBlockEntity (I)Lcom/mojang/serialization/Dynamic; b
	getSection (I)Lnet/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Section; d
	relative (ILnet/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction;)I a
	removeBlockEntity (I)Lcom/mojang/serialization/Dynamic; c
	setBlock (ILcom/mojang/serialization/Dynamic;)V a
	write ()Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/ChunkStatusFix aiw
net/minecraft/util/datafix/fixes/ChunkStatusFix2 aix
	RENAMES_AND_DOWNGRADES a
net/minecraft/util/datafix/fixes/ChunkStructuresTemplateRenameFix aiy
	RENAMES a
	fixTag (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/ChunkToProtochunkFix aiz
	NUM_SECTIONS a
	packOffsetCoordinates (III)S a
net/minecraft/util/datafix/fixes/ColorlessShulkerEntityFix aja
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/DyeItemRenameFix ajb
	RENAMED_IDS a
net/minecraft/util/datafix/fixes/EntityArmorStandSilentFix ajc
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityBlockStateFix ajd
	MAP a
	getBlockId (Ljava/lang/String;)I a
	updateBlockToBlockState (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/datafixers/Typed; a
	updateEntity (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed; a
	updateFallingBlock (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/EntityCatSplitFix aje
	getNewNameAndTag (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; a
net/minecraft/util/datafix/fixes/EntityCodSalmonFix ajf
	RENAMED_EGG_IDS b
	RENAMED_IDS a
	rename (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/EntityCustomNameToComponentFix ajg
	fixTagCustomName (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityElderGuardianSplitFix ajh
	getNewNameAndTag (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; a
net/minecraft/util/datafix/fixes/EntityEquipmentToArmorAndHandFix aji
	cap (Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule; a
net/minecraft/util/datafix/fixes/EntityHealthFix ajj
	ENTITIES a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityHorseSaddleFix ajk
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/EntityHorseSplitFix ajl
	fix (Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair; a
net/minecraft/util/datafix/fixes/EntityIdFix ajm
	ID_MAP a
net/minecraft/util/datafix/fixes/EntityItemFrameDirectionFix ajn
	direction2dTo3d (B)B a
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityMinecartIdentifiersFix ajo
	MINECART_BY_ID a
net/minecraft/util/datafix/fixes/EntityPaintingItemFrameDirectionFix ajp
	DIRECTIONS a
	doFix (Lcom/mojang/serialization/Dynamic;ZZ)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityPaintingMotiveFix ajq
	MAP a
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityProjectileOwnerFix ajr
	createUUIDArray (JJ)[I a
	setUUID (Lcom/mojang/serialization/Dynamic;JJ)Lcom/mojang/serialization/Dynamic; a
	updateEntity (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed; a
	updateItemPotion (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
	updateOwnerArrow (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	updateOwnerLlamaSpit (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	updateOwnerThrowable (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; d
	updateProjectiles (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/EntityPufferfishRenameFix ajs
	RENAMED_IDS a
	rename (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/EntityRavagerRenameFix ajt
	RENAMED_IDS a
	rename (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/EntityRedundantChanceTagsFix aju
	FLOAT_LIST_CODEC a
	isZeroList (Lcom/mojang/serialization/OptionalDynamic;I)Z a
net/minecraft/util/datafix/fixes/EntityRenameFix ajv
	name a
	fix (Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair; a
	getEntity (Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/EntityRidingToPassengersFix ajw
	cap (Lcom/mojang/datafixers/schemas/Schema;Lcom/mojang/datafixers/schemas/Schema;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule; a
net/minecraft/util/datafix/fixes/EntityShulkerColorFix ajx
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityShulkerRotationFix ajy
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntitySkeletonSplitFix ajz
	getNewNameAndTag (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; a
net/minecraft/util/datafix/fixes/EntityStringUuidFix aka
net/minecraft/util/datafix/fixes/EntityTheRenameningFix akb
	MINECRAFT_BRED d
	RENAMED_BLOCKS b
	RENAMED_IDS a
	RENAMED_ITEMS c
	rename (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/EntityTippedArrowFix akc
	rename (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/EntityUUIDFix akd
	ABSTRACT_HORSES c
	ANIMALS e
	LIVING_ENTITIES g
	MOBS f
	PROJECTILES h
	TAMEABLE_ANIMALS d
	updateAnimal (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; m
	updateAnimalOwner (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; l
	updateAreaEffectCloud (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; g
	updateEntityUUID (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
	updateEvokerFangs (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; e
	updateFox (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; j
	updateHurtBy (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; k
	updateItem (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; i
	updateLivingEntity (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	updateMob (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; n
	updatePiglin (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; d
	updateProjectile (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; o
	updateShulkerBullet (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; h
	updateZombieVillager (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; f
net/minecraft/util/datafix/fixes/EntityWolfColorFix ake
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityZombieSplitFix akf
	getNewNameAndTag (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; a
net/minecraft/util/datafix/fixes/EntityZombieVillagerTypeFix akg
	PROFESSION_MAX a
	RANDOM b
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	getVillagerProfession (I)I a
net/minecraft/util/datafix/fixes/EntityZombifiedPiglinRenameFix akh
	RENAMED_IDS a
	rename (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/ForcePoiRebuild aki
	cap (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/FurnaceRecipeFix akj
	cap (Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule; a
	updateFurnaceContents (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/GossipUUIDFix akk
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/HeightmapRenamingFix akl
	fix (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/IglooMetadataRemovalFix akm
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	isIglooPiece (Lcom/mojang/serialization/Dynamic;)Z c
	removeIglooPieces (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
net/minecraft/util/datafix/fixes/ItemBannerColorFix akn
net/minecraft/util/datafix/fixes/ItemCustomNameToComponentFix ako
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/ItemIdFix akp
	ITEM_NAMES a
	getItem (I)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/ItemLoreFix akq
	fixLoreEntry (Ljava/lang/String;)Ljava/lang/String; a
	fixLoreList (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; a
net/minecraft/util/datafix/fixes/ItemPotionFix akr
	DEFAULT a
	POTIONS c
	SPLASH b
net/minecraft/util/datafix/fixes/ItemRenameFix aks
	name a
	create (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/DataFix; a
	fixItem (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/ItemShulkerBoxColorFix akt
	NAMES_BY_COLOR a
net/minecraft/util/datafix/fixes/ItemSpawnEggFix aku
	ID_TO_ENTITY a
net/minecraft/util/datafix/fixes/ItemStackEnchantmentNamesFix akv
	MAP a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/ItemStackMapIdFix akw
net/minecraft/util/datafix/fixes/ItemStackSpawnEggFix akx
	MAP a
net/minecraft/util/datafix/fixes/ItemStackTheFlatteningFix aky
	DAMAGE_IDS c
	IDS b
	MAP a
	updateItem (Ljava/lang/String;I)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/ItemStackUUIDFix akz
	updateAttributeModifiers (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	updateSkullOwner (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
net/minecraft/util/datafix/fixes/ItemWaterPotionFix ala
net/minecraft/util/datafix/fixes/ItemWrittenBookPagesStrictJsonFix alb
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/JigsawPropertiesFix alc
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/JigsawRotationFix ald
	RENAMES a
	fix (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/LeavesFix ale
	DECAY_DISTANCE j
	DIRECTIONS i
	EAST_MASK f
	LEAVES m
	LOGS n
	NORTH_EAST_MASK g
	NORTH_MASK h
	NORTH_WEST_MASK a
	SIZE l
	SIZE_BITS k
	SOUTH_EAST_MASK e
	SOUTH_MASK d
	SOUTH_WEST_MASK c
	WEST_MASK b
	getIndex (III)I a
	getSideMask (ZZZZ)I a
	getX (I)I a
	getY (I)I b
	getZ (I)I c
net/minecraft/util/datafix/fixes/LeavesFix$LeavesSection ale$a
	DECAYABLE i
	DISTANCE j
	PERSISTENT h
	leaveIds k
	logIds l
	stateToIdMap m
	getDistance (I)I d
	isLeaf (I)Z b
	isLog (I)Z a
	makeLeafTag (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;ZI)Lcom/mojang/serialization/Dynamic; a
	setDistance (III)V a
	skippable ()Z a
net/minecraft/util/datafix/fixes/LeavesFix$Section ale$b
	BLOCK_STATES_TAG a
	NAME_TAG b
	PROPERTIES_TAG c
	blockStateType h
	index f
	palette e
	paletteFinder d
	storage g
	getBlock (I)I c
	getIndex ()I c
	getStateId (Ljava/lang/String;ZI)I a
	isSkippable ()Z b
	readStorage (Lcom/mojang/serialization/Dynamic;)V a
	skippable ()Z a
	write (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/LevelDataGeneratorOptionsFix alf
	GENERATOR_OPTIONS b
	MAP a
	convert (Ljava/lang/String;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; a
	getLayerInfoFromString (Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair; a
	getLayersInfoFromString (Ljava/lang/String;)Ljava/util/List; b
net/minecraft/util/datafix/fixes/LevelFlatGeneratorInfoFix alg
	AMOUNT_SPLITTER f
	BLOCK_SPLITTER g
	DEFAULT a
	GENERATOR_OPTIONS b
	LAYER_SPLITTER d
	OLD_AMOUNT_SPLITTER e
	SPLITTER c
	fix (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	fixString (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/LevelUUIDFix alh
	updateCustomBossEvents (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; d
	updateDragonFight (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
	updateWanderingTrader (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
net/minecraft/util/datafix/fixes/MapIdFix ali
net/minecraft/util/datafix/fixes/MemoryExpiryDataFix alj
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	updateBrain (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	updateMemories (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
	updateMemoryEntry (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; a
	wrapMemoryValue (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; d
net/minecraft/util/datafix/fixes/MissingDimensionFix alk
	fields (Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/types/Type; a
	optionalFields (Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/types/Type; b
	optionalFields (Ljava/lang/String;Lcom/mojang/datafixers/types/Type;Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/types/Type; a
	recreateSettings (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/MobSpawnerEntityIdentifiersFix all
	fix (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/NamedEntityFix alm
	entityName b
	name a
	type c
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/NewVillageFix aln
	cap (Lcom/mojang/datafixers/types/templates/CompoundList$CompoundListType;)Lcom/mojang/datafixers/TypeRewriteRule; a
net/minecraft/util/datafix/fixes/ObjectiveDisplayNameFix alo
net/minecraft/util/datafix/fixes/ObjectiveRenderTypeFix alp
	getRenderType (Ljava/lang/String;)Lnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType; a
net/minecraft/util/datafix/fixes/OminousBannerBlockEntityRenameFix alq
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/OminousBannerRenameFix alr
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/OptionsAddTextBackgroundFix als
	calculateBackground (Ljava/lang/String;)D a
net/minecraft/util/datafix/fixes/OptionsForceVBOFix alt
net/minecraft/util/datafix/fixes/OptionsKeyLwjgl3Fix alu
	KEY_UNKNOWN a
	MAP b
net/minecraft/util/datafix/fixes/OptionsKeyTranslationFix alv
net/minecraft/util/datafix/fixes/OptionsLowerCaseLanguageFix alw
net/minecraft/util/datafix/fixes/OptionsRenameFieldFix alx
	fieldFrom b
	fieldTo c
	fixName a
net/minecraft/util/datafix/fixes/PlayerUUIDFix aly
net/minecraft/util/datafix/fixes/PoiTypeRename alz
	cap (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	rename (Ljava/lang/String;)Ljava/lang/String; a
	renameRecords (Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional; b
net/minecraft/util/datafix/fixes/RecipesFix ama
	RECIPES a
net/minecraft/util/datafix/fixes/RecipesRenameFix amb
	name a
	renamer b
net/minecraft/util/datafix/fixes/RecipesRenameningFix amc
	RECIPES a
net/minecraft/util/datafix/fixes/RedstoneWireConnectionsFix amd
	isConnected (Ljava/lang/String;)Z a
	updateRedstoneConnections (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/References ame
	ADVANCEMENTS i
	BIOME y
	BLOCK_ENTITY l
	BLOCK_NAME r
	BLOCK_STATE n
	CHUNK c
	ENTITY q
	ENTITY_CHUNK k
	ENTITY_NAME o
	ENTITY_TREE p
	HOTBAR d
	ITEM_NAME s
	ITEM_STACK m
	LEVEL a
	OBJECTIVE v
	OPTIONS e
	PLAYER b
	POI_CHUNK j
	RECIPE x
	SAVED_DATA h
	STATS g
	STRUCTURE f
	STRUCTURE_FEATURE u
	TEAM w
	UNTAGGED_SPAWNER t
	WORLD_GEN_SETTINGS z
net/minecraft/util/datafix/fixes/RemoveGolemGossipFix amf
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixValue (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/RenameBiomesFix amg
	biomes b
	name a
net/minecraft/util/datafix/fixes/RenamedCoralFansFix amh
	RENAMED_IDS a
net/minecraft/util/datafix/fixes/RenamedCoralFix ami
	RENAMED_IDS a
net/minecraft/util/datafix/fixes/ReorganizePoi amj
	cap (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/SavedDataFeaturePoolElementFix amk
	FEATURES c
	INDEX_PATTERN a
	PIECE_TYPE b
	fixFeature (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	get (Lcom/mojang/serialization/Dynamic;[Ljava/lang/String;)Lcom/mojang/serialization/OptionalDynamic; a
	getReplacement (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional; a
	updateChildren (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
	updateChildren (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; a
net/minecraft/util/datafix/fixes/SavedDataUUIDFix aml
net/minecraft/util/datafix/fixes/SavedDataVillageCropFix amm
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	updateChildren (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	updateChildren (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; a
	updateCrop (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; a
	updateDoubleField (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; d
	updateSingleField (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
net/minecraft/util/datafix/fixes/SimpleEntityRenameFix amn
	fix (Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair; a
	getNewNameAndTag (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; a
net/minecraft/util/datafix/fixes/SimplestEntityRenameFix amo
	name a
	rename (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/StatsCounterFix amp
	BLOCK_KEY c
	CUSTOM_MAP b
	ENTITIES g
	ENTITY_KEYS f
	ITEM_KEYS e
	NEW_BLOCK_KEY d
	NEW_CUSTOM_KEY h
	SKIP a
	upgradeBlock (Ljava/lang/String;)Ljava/lang/String; b
	upgradeItem (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/StatsRenameFix amq
	name a
	renames b
	createCriteriaRule ()Lcom/mojang/datafixers/TypeRewriteRule; a
	createStatRule ()Lcom/mojang/datafixers/TypeRewriteRule; b
net/minecraft/util/datafix/fixes/StriderGravityFix amr
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/StructureReferenceCountFix ams
	setCountToAtLeastOne (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/TeamDisplayNameFix amt
net/minecraft/util/datafix/fixes/TrappedChestBlockEntityFix amu
	LOGGER a
	SIZE b
	SIZE_BITS c
net/minecraft/util/datafix/fixes/TrappedChestBlockEntityFix$TrappedChestSection amu$a
	chestIds h
	isTrappedChest (I)Z a
	skippable ()Z a
net/minecraft/util/datafix/fixes/VillagerDataFix amv
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	upgradeData (II)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/VillagerFollowRangeFix amw
	NEW_BASE_VALUE b
	ORIGINAL_VALUE a
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixValue (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/VillagerRebuildLevelAndXpFix amx
	LEVEL_XP_THRESHOLDS b
	TRADES_PER_LEVEL a
	addLevel (Lcom/mojang/datafixers/Typed;I)Lcom/mojang/datafixers/Typed; a
	addXpFromLevel (Lcom/mojang/datafixers/Typed;I)Lcom/mojang/datafixers/Typed; b
	getMinXpPerLevel (I)I a
net/minecraft/util/datafix/fixes/VillagerTradeFix amy
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	updateItemStack (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/WallPropertyFix amz
	WALL_BLOCKS a
	fixWallProperty (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; a
	mapProperty (Ljava/lang/String;)Ljava/lang/String; a
	upgradeBlockStateTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/WorldGenSettingsFix ana
	DEFAULTS j
	DESERT_PYRAMID b
	END_CITY g
	IGLOO c
	JUNGLE_TEMPLE d
	OCEAN_MONUMENT i
	PILLAGER_OUTPOST f
	SWAMP_HUT e
	VILLAGE a
	WOODLAND_MANSION h
	defaultOverworld (Lcom/mojang/serialization/Dynamic;J)Lcom/mojang/serialization/Dynamic; a
	fix (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	fixFlatStructures (Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/OptionalDynamic;)Ljava/util/Map; a
	getInt (Ljava/lang/String;I)I a
	getInt (Ljava/lang/String;II)I a
	noise (JLcom/mojang/serialization/DynamicLike;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	setSpacing (Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;I)V a
	vanillaBiomeSource (Lcom/mojang/serialization/Dynamic;JZZ)Lcom/mojang/serialization/Dynamic; a
	vanillaLevels (Lcom/mojang/serialization/Dynamic;JLcom/mojang/serialization/Dynamic;Z)Ljava/lang/Object; a
net/minecraft/util/datafix/fixes/WorldGenSettingsFix$StructureFeatureConfiguration ana$a
	CODEC a
	salt d
	separation c
	spacing b
	serialize (Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/WriteAndReadFix anb
	name a
	type b
net/minecraft/util/datafix/fixes/ZombieVillagerRebuildXpFix anc
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/schemas/NamespacedSchema anf
	NAMESPACED_STRING b
	NAMESPACED_STRING_CODEC a
	ensureNamespaced (Ljava/lang/String;)Ljava/lang/String; a
	namespacedString ()Lcom/mojang/datafixers/types/Type; a
net/minecraft/util/datafix/schemas/V100 ang
	equipment (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; a
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V102 anh
net/minecraft/util/datafix/schemas/V1022 ani
net/minecraft/util/datafix/schemas/V106 anj
net/minecraft/util/datafix/schemas/V107 ank
net/minecraft/util/datafix/schemas/V1125 anl
net/minecraft/util/datafix/schemas/V135 anm
net/minecraft/util/datafix/schemas/V143 ann
net/minecraft/util/datafix/schemas/V1451 ano
net/minecraft/util/datafix/schemas/V1451_1 anp
net/minecraft/util/datafix/schemas/V1451_2 anq
net/minecraft/util/datafix/schemas/V1451_3 anr
net/minecraft/util/datafix/schemas/V1451_4 ans
net/minecraft/util/datafix/schemas/V1451_5 ant
net/minecraft/util/datafix/schemas/V1451_6 anu
	REPACK_OBJECTIVE_ID d
	SPECIAL_OBJECTIVE_MARKER b
	UNPACK_OBJECTIVE_ID c
	createCriterionTypes (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; a
net/minecraft/util/datafix/schemas/V1451_7 anv
net/minecraft/util/datafix/schemas/V1460 anw
	registerInventory (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V b
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V1466 anx
net/minecraft/util/datafix/schemas/V1470 any
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V1481 anz
net/minecraft/util/datafix/schemas/V1483 aoa
net/minecraft/util/datafix/schemas/V1486 aob
net/minecraft/util/datafix/schemas/V1510 aoc
net/minecraft/util/datafix/schemas/V1800 aod
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V1801 aoe
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V1904 aof
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V1906 aog
	registerInventory (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V1909 aoh
net/minecraft/util/datafix/schemas/V1920 aoi
	registerInventory (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V1928 aoj
	equipment (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; a
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V1929 aok
net/minecraft/util/datafix/schemas/V1931 aol
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V2100 aom
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V2501 aon
	registerFurnace (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V2502 aoo
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V2505 aop
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V2509 aoq
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V2519 aor
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V2522 aos
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V2551 aot
net/minecraft/util/datafix/schemas/V2568 aou
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V2571 aov
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V2684 aow
net/minecraft/util/datafix/schemas/V2686 aox
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V2688 aoy
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V2704 aoz
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V2707 apa
	registerEntity (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V501 apb
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V700 apc
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V701 apd
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V702 ape
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V703 apf
net/minecraft/util/datafix/schemas/V704 apg
	ADD_NAMES b
	ITEM_TO_BLOCKENTITY a
	registerInventory (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V705 aph
	ADD_NAMES b
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
	registerThrowableProjectile (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V b
net/minecraft/util/datafix/schemas/V808 api
	registerInventory (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V99 apj
	ADD_NAMES a
	ITEM_TO_BLOCKENTITY c
	LOGGER b
	addNames (Lcom/mojang/serialization/Dynamic;Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Object; a
	equipment (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; a
	registerInventory (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V d
	registerMinecart (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V c
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
	registerThrowableProjectile (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V b
net/minecraft/util/monitoring/jmx/MinecraftServerStatistics apl
	LOGGER a
	attributeDescriptionByName d
	mBeanInfo c
	server b
	getAverageTickTime ()F a
	getTickTimes ()[J b
	registerJmxMonitoring (Lnet/minecraft/server/MinecraftServer;)V a
net/minecraft/util/monitoring/jmx/MinecraftServerStatistics$AttributeDescription apl$a
	description c
	getter b
	name a
	type d
	asMBeanAttributeInfo ()Ljavax/management/MBeanAttributeInfo; a
net/minecraft/util/profiling/ActiveProfiler apn
	LOGGER c
	WARNING_TIME_NANOS a
	chartedPaths o
	currentEntry m
	entries f
	getRealTime h
	getTickTime g
	path k
	paths d
	startTimeNano i
	startTimeTicks j
	startTimes e
	started l
	warn n
	endTick ()V b
	getChartedPaths ()Ljava/util/Set; e
	getCurrentEntry ()Lnet/minecraft/util/profiling/ActiveProfiler$PathEntry; f
	getEntry (Ljava/lang/String;)Lnet/minecraft/util/profiling/ActiveProfiler$PathEntry; d
	getResults ()Lnet/minecraft/util/profiling/ProfileResults; d
	incrementCounter (Ljava/lang/String;)V c
	incrementCounter (Ljava/util/function/Supplier;)V c
	markForCharting (Lnet/minecraft/util/profiling/metrics/MetricCategory;)V a
	pop ()V c
	popPush (Ljava/lang/String;)V b
	popPush (Ljava/util/function/Supplier;)V b
	push (Ljava/lang/String;)V a
	push (Ljava/util/function/Supplier;)V a
	startTick ()V a
net/minecraft/util/profiling/ActiveProfiler$PathEntry apn$a
	accumulatedDuration c
	count d
	counters e
	maxDuration a
	minDuration b
	getCount ()J c
	getCounters ()Lit/unimi/dsi/fastutil/objects/Object2LongMap; d
	getDuration ()J a
	getMaxDuration ()J b
net/minecraft/util/profiling/ContinuousProfiler apo
	profiler c
	realTime a
	tickCount b
	disable ()V b
	enable ()V c
	getFiller ()Lnet/minecraft/util/profiling/ProfilerFiller; d
	getResults ()Lnet/minecraft/util/profiling/ProfileResults; e
	isEnabled ()Z a
net/minecraft/util/profiling/EmptyProfileResults app
	EMPTY a
	getEndTimeNano ()J c
	getEndTimeTicks ()I d
	getProfilerResults ()Ljava/lang/String; e
	getStartTimeNano ()J a
	getStartTimeTicks ()I b
	getTimes (Ljava/lang/String;)Ljava/util/List; a
	saveResults (Ljava/nio/file/Path;)Z a
net/minecraft/util/profiling/FilledProfileResults apq
	COUNTER_ENTRY_COMPARATOR e
	EMPTY b
	LOGGER a
	SPLITTER c
	endTimeNano i
	endTimeTicks j
	entries f
	startTimeNano g
	startTimeTicks h
	tickDuration k
	appendCounterResults (ILjava/lang/String;Lnet/minecraft/util/profiling/FilledProfileResults$CounterCollector;ILjava/lang/StringBuilder;)V a
	appendCounters (Ljava/util/Map;Ljava/lang/StringBuilder;I)V a
	appendProfilerResults (ILjava/lang/String;Ljava/lang/StringBuilder;)V a
	getComment ()Ljava/lang/String; i
	getCounterValues ()Ljava/util/Map; h
	getEndTimeNano ()J c
	getEndTimeTicks ()I d
	getEntry (Ljava/lang/String;)Lnet/minecraft/util/profiling/ProfilerPathEntry; c
	getProfilerResults ()Ljava/lang/String; e
	getProfilerResults (JI)Ljava/lang/String; a
	getStartTimeNano ()J a
	getStartTimeTicks ()I b
	getTickDuration ()I f
	getTimes (Ljava/lang/String;)Ljava/util/List; a
	indentLine (Ljava/lang/StringBuilder;I)Ljava/lang/StringBuilder; a
	isDirectChild (Ljava/lang/String;Ljava/lang/String;)Z a
	saveResults (Ljava/nio/file/Path;)Z a
net/minecraft/util/profiling/FilledProfileResults$CounterCollector apq$a
	children c
	selfValue a
	totalValue b
	addValue (Ljava/util/Iterator;J)V a
net/minecraft/util/profiling/InactiveProfiler apr
	INSTANCE a
	endTick ()V b
	getChartedPaths ()Ljava/util/Set; e
	getEntry (Ljava/lang/String;)Lnet/minecraft/util/profiling/ActiveProfiler$PathEntry; d
	getResults ()Lnet/minecraft/util/profiling/ProfileResults; d
	incrementCounter (Ljava/lang/String;)V c
	incrementCounter (Ljava/util/function/Supplier;)V c
	markForCharting (Lnet/minecraft/util/profiling/metrics/MetricCategory;)V a
	pop ()V c
	popPush (Ljava/lang/String;)V b
	popPush (Ljava/util/function/Supplier;)V b
	push (Ljava/lang/String;)V a
	push (Ljava/util/function/Supplier;)V a
	startTick ()V a
net/minecraft/util/profiling/ProfileCollector aps
	getChartedPaths ()Ljava/util/Set; e
	getEntry (Ljava/lang/String;)Lnet/minecraft/util/profiling/ActiveProfiler$PathEntry; d
	getResults ()Lnet/minecraft/util/profiling/ProfileResults; d
net/minecraft/util/profiling/ProfileResults apt
	PATH_SEPARATOR d
	demanglePath (Ljava/lang/String;)Ljava/lang/String; b
	getEndTimeNano ()J c
	getEndTimeTicks ()I d
	getNanoDuration ()J g
	getProfilerResults ()Ljava/lang/String; e
	getStartTimeNano ()J a
	getStartTimeTicks ()I b
	getTickDuration ()I f
	getTimes (Ljava/lang/String;)Ljava/util/List; a
	saveResults (Ljava/nio/file/Path;)Z a
net/minecraft/util/profiling/ProfilerFiller apu
	ROOT b
	endTick ()V b
	incrementCounter (Ljava/lang/String;)V c
	incrementCounter (Ljava/util/function/Supplier;)V c
	markForCharting (Lnet/minecraft/util/profiling/metrics/MetricCategory;)V a
	pop ()V c
	popPush (Ljava/lang/String;)V b
	popPush (Ljava/util/function/Supplier;)V b
	push (Ljava/lang/String;)V a
	push (Ljava/util/function/Supplier;)V a
	startTick ()V a
	tee (Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;)Lnet/minecraft/util/profiling/ProfilerFiller; a
net/minecraft/util/profiling/ProfilerPathEntry apv
	getCount ()J c
	getCounters ()Lit/unimi/dsi/fastutil/objects/Object2LongMap; d
	getDuration ()J a
	getMaxDuration ()J b
net/minecraft/util/profiling/ResultField apw
	count c
	globalPercentage b
	name d
	percentage a
	compareTo (Lnet/minecraft/util/profiling/ResultField;)I a
	getColor ()I a
net/minecraft/util/profiling/SingleTickProfiler apx
	LOGGER a
	location e
	profiler f
	realTime b
	saveThreshold c
	tick d
	createTickProfiler (Ljava/lang/String;)Lnet/minecraft/util/profiling/SingleTickProfiler; a
	decorateFiller (Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/SingleTickProfiler;)Lnet/minecraft/util/profiling/ProfilerFiller; a
	endTick ()V b
	startTick ()Lnet/minecraft/util/profiling/ProfilerFiller; a
net/minecraft/util/profiling/metrics/MetricCategory apy
	$VALUES j
	CHUNK_RENDERING f
	CHUNK_RENDERING_DISPATCHING g
	CPU h
	EVENT_LOOPS b
	JVM e
	MAIL_BOXES c
	PATH_FINDING a
	TICK_LOOP d
	description i
	$values ()[Lnet/minecraft/util/profiling/metrics/MetricCategory; b
	getDescription ()Ljava/lang/String; a
net/minecraft/util/profiling/metrics/MetricSampler apz
	beforeTick h
	category c
	currentValue i
	isRunning g
	name b
	sampler d
	thresholdTest a
	ticks e
	values f
	builder (Ljava/lang/String;Lnet/minecraft/util/profiling/metrics/MetricCategory;Ljava/util/function/ToDoubleFunction;Ljava/lang/Object;)Lnet/minecraft/util/profiling/metrics/MetricSampler$MetricSamplerBuilder; a
	create (Ljava/lang/String;Lnet/minecraft/util/profiling/metrics/MetricCategory;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lnet/minecraft/util/profiling/metrics/MetricSampler; a
	create (Ljava/lang/String;Lnet/minecraft/util/profiling/metrics/MetricCategory;Ljava/util/function/DoubleSupplier;)Lnet/minecraft/util/profiling/metrics/MetricSampler; a
	getCategory ()Lnet/minecraft/util/profiling/metrics/MetricCategory; e
	getName ()Ljava/lang/String; d
	getSampler ()Ljava/util/function/DoubleSupplier; c
	onEndTick (I)V a
	onFinished ()V b
	onStartTick ()V a
	result ()Lnet/minecraft/util/profiling/metrics/MetricSampler$SamplerResult; f
	triggersThreshold ()Z g
	verifyRunning ()V h
net/minecraft/util/profiling/metrics/MetricSampler$MetricSamplerBuilder apz$a
	beforeTick e
	category b
	context d
	name a
	sampler c
	thresholdTest f
	build ()Lnet/minecraft/util/profiling/metrics/MetricSampler; a
	withBeforeTick (Ljava/util/function/Consumer;)Lnet/minecraft/util/profiling/metrics/MetricSampler$MetricSamplerBuilder; a
	withThresholdAlert (Lnet/minecraft/util/profiling/metrics/MetricSampler$ThresholdTest;)Lnet/minecraft/util/profiling/metrics/MetricSampler$MetricSamplerBuilder; a
net/minecraft/util/profiling/metrics/MetricSampler$SamplerResult apz$b
	firstTick b
	lastTick c
	recording a
	getFirstTick ()I a
	getLastTick ()I b
	valueAtTick (I)D a
net/minecraft/util/profiling/metrics/MetricSampler$ThresholdTest apz$c
net/minecraft/util/profiling/metrics/MetricSampler$ValueIncreasedByPercentage apz$d
	percentageIncreaseThreshold a
	previousValue b
net/minecraft/util/profiling/metrics/MetricsRegistry aqa
	INSTANCE a
	measuredInstances b
	add (Lnet/minecraft/util/profiling/metrics/ProfilerMeasured;)V a
	aggregateDuplicates (Ljava/util/Map;)Ljava/util/List; a
	getRegisteredSamplers ()Ljava/util/List; a
net/minecraft/util/profiling/metrics/MetricsRegistry$AggregatedMetricSampler aqa$a
	delegates b
	averageValueFromDelegates (Ljava/util/List;)D c
	beforeTick (Ljava/util/List;)V b
	thresholdTest (Ljava/util/List;)Lnet/minecraft/util/profiling/metrics/MetricSampler$ThresholdTest; a
net/minecraft/util/profiling/metrics/MetricsSamplerProvider aqb
	samplers (Ljava/util/function/Supplier;)Ljava/util/Set; a
net/minecraft/util/profiling/metrics/ProfilerMeasured aqc
	profiledMetrics ()Ljava/util/List; bl
net/minecraft/util/profiling/metrics/profiling/ActiveMetricsRecorder aqe
	PROFILING_MAX_DURATION_SECONDS a
	currentTick l
	deadlineNano k
	deviationsBySampler c
	globalOnReportFinished b
	ioExecutor e
	killSwitch n
	metricsPersister f
	metricsSamplerProvider i
	onProfilingEnd g
	onReportFinished h
	singleTickProfiler m
	taskProfiler d
	thisTickSamplers o
	wallTimeSource j
	createStarted (Lnet/minecraft/util/profiling/metrics/MetricsSamplerProvider;Ljava/util/function/LongSupplier;Ljava/util/concurrent/Executor;Lnet/minecraft/util/profiling/metrics/storage/MetricsPersister;Ljava/util/function/Consumer;Ljava/util/function/Consumer;)Lnet/minecraft/util/profiling/metrics/profiling/ActiveMetricsRecorder; a
	end ()V a
	endTick ()V c
	getProfiler ()Lnet/minecraft/util/profiling/ProfilerFiller; e
	isRecording ()Z d
	registerGlobalCompletionCallback (Ljava/util/function/Consumer;)V a
	scheduleSaveResults (Lnet/minecraft/util/profiling/ProfileResults;)V a
	startTick ()V b
	verifyStarted ()V f
net/minecraft/util/profiling/metrics/profiling/InactiveMetricsRecorder aqf
	INSTANCE a
	end ()V a
	endTick ()V c
	getProfiler ()Lnet/minecraft/util/profiling/ProfilerFiller; e
	isRecording ()Z d
	startTick ()V b
net/minecraft/util/profiling/metrics/profiling/MetricsRecorder aqg
	end ()V a
	endTick ()V c
	getProfiler ()Lnet/minecraft/util/profiling/ProfilerFiller; e
	isRecording ()Z d
	startTick ()V b
net/minecraft/util/profiling/metrics/profiling/ProfilerSamplerAdapter aqh
	previouslyFoundSamplerNames a
	newSamplersFoundInProfiler (Ljava/util/function/Supplier;)Ljava/util/Set; a
	samplerForProfilingPath (Ljava/util/function/Supplier;Ljava/lang/String;Lnet/minecraft/util/profiling/metrics/MetricCategory;)Lnet/minecraft/util/profiling/metrics/MetricSampler; a
net/minecraft/util/profiling/metrics/profiling/ServerMetricsSamplersProvider aqi
	LOGGER a
	samplerFactory c
	samplers b
	runtimeIndependentSamplers ()Ljava/util/Set; a
	samplers (Ljava/util/function/Supplier;)Ljava/util/Set; a
	tickTimeSampler (Ljava/util/function/LongSupplier;)Lnet/minecraft/util/profiling/metrics/MetricSampler; a
net/minecraft/util/profiling/metrics/profiling/ServerMetricsSamplersProvider$CpuStats aqi$a
	currentLoad e
	lastPollMs f
	nrOfCpus a
	previousCpuLoadTick d
	processor c
	systemInfo b
	loadForCpu (I)D a
net/minecraft/util/profiling/metrics/storage/MetricsPersister aqk
	DEVIATIONS_DIR_NAME c
	LOGGER e
	METRICS_DIR_NAME b
	PROFILING_RESULTS_DIR a
	PROFILING_RESULT_FILENAME d
	rootFolderName f
	saveCategory (Lnet/minecraft/util/profiling/metrics/MetricCategory;Ljava/util/List;Ljava/nio/file/Path;)V a
	saveDeviations (Ljava/util/Map;Ljava/nio/file/Path;)V a
	saveMetrics (Ljava/util/Set;Ljava/nio/file/Path;)V a
	saveProfilingTaskExecutionResult (Lnet/minecraft/util/profiling/ProfileResults;Ljava/nio/file/Path;)V a
	saveReports (Ljava/util/Set;Ljava/util/Map;Lnet/minecraft/util/profiling/ProfileResults;)Ljava/nio/file/Path; a
net/minecraft/util/profiling/metrics/storage/RecordedDeviation aql
	profilerResultAtTick c
	tick b
	timestamp a
net/minecraft/util/random/SimpleWeightedRandomList aqo
	builder ()Lnet/minecraft/util/random/SimpleWeightedRandomList$Builder; a
	getRandomValue (Ljava/util/Random;)Ljava/util/Optional; a
	wrappedCodec (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; a
net/minecraft/util/random/SimpleWeightedRandomList$Builder aqo$a
	result a
	add (Ljava/lang/Object;I)Lnet/minecraft/util/random/SimpleWeightedRandomList$Builder; a
	build ()Lnet/minecraft/util/random/SimpleWeightedRandomList; a
net/minecraft/util/random/Weight aqp
	CODEC a
	LOGGER c
	ONE b
	value d
	asInt ()I a
	of (I)Lnet/minecraft/util/random/Weight; a
	validateWeight (I)V b
net/minecraft/util/random/WeightedEntry aqq
	getWeight ()Lnet/minecraft/util/random/Weight; a
	wrap (Ljava/lang/Object;I)Lnet/minecraft/util/random/WeightedEntry$Wrapper; a
net/minecraft/util/random/WeightedEntry$IntrusiveBase aqq$a
	weight a
	getWeight ()Lnet/minecraft/util/random/Weight; a
net/minecraft/util/random/WeightedEntry$Wrapper aqq$b
	data a
	weight b
	codec (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; a
	getData ()Ljava/lang/Object; b
	getWeight ()Lnet/minecraft/util/random/Weight; a
net/minecraft/util/random/WeightedRandom aqr
	getRandomItem (Ljava/util/Random;Ljava/util/List;)Ljava/util/Optional; a
	getRandomItem (Ljava/util/Random;Ljava/util/List;I)Ljava/util/Optional; a
	getTotalWeight (Ljava/util/List;)I a
	getWeightedItem (Ljava/util/List;I)Ljava/util/Optional; a
net/minecraft/util/random/WeightedRandomList aqs
	items b
	totalWeight a
	codec (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; b
	create ()Lnet/minecraft/util/random/WeightedRandomList; b
	create (Ljava/util/List;)Lnet/minecraft/util/random/WeightedRandomList; a
	create ([Lnet/minecraft/util/random/WeightedEntry;)Lnet/minecraft/util/random/WeightedRandomList; a
	getRandom (Ljava/util/Random;)Ljava/util/Optional; b
	isEmpty ()Z c
	unwrap ()Ljava/util/List; d
net/minecraft/util/thread/BlockableEventLoop aqu
	LOGGER c
	blockingCount e
	name b
	pendingRunnables d
	doRunTask (Ljava/lang/Runnable;)V c
	dropAllTasks ()V bp
	executeBlocking (Ljava/lang/Runnable;)V g
	getPendingTasksCount ()I bn
	getRunningThread ()Ljava/lang/Thread; av
	isSameThread ()Z bm
	managedBlock (Ljava/util/function/BooleanSupplier;)V c
	name ()Ljava/lang/String; bo
	pollTask ()Z z
	profiledMetrics ()Ljava/util/List; bl
	runAllTasks ()V bq
	scheduleExecutables ()Z au
	shouldRun (Ljava/lang/Runnable;)Z d
	submit (Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture; f
	submit (Ljava/util/function/Supplier;)Ljava/util/concurrent/CompletableFuture; a
	submitAsync (Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture; a
	tell (Ljava/lang/Object;)V a
	tell (Ljava/lang/Runnable;)V h
	waitForTasks ()V br
	wrapRunnable (Ljava/lang/Runnable;)Ljava/lang/Runnable; e
net/minecraft/util/thread/NamedThreadFactory aqv
	LOGGER a
	group b
	namePrefix d
	threadNumber c
net/minecraft/util/thread/ProcessorHandle aqw
	ask (Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; b
	askEither (Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; c
	name ()Ljava/lang/String; bo
	of (Ljava/lang/String;Ljava/util/function/Consumer;)Lnet/minecraft/util/thread/ProcessorHandle; a
	tell (Ljava/lang/Object;)V a
net/minecraft/util/thread/ProcessorMailbox aqx
	CLOSED_BIT b
	LOGGER a
	SCHEDULED_BIT c
	dispatcher f
	name g
	queue e
	status d
	canBeScheduled ()Z d
	create (Ljava/util/concurrent/Executor;Ljava/lang/String;)Lnet/minecraft/util/thread/ProcessorMailbox; a
	name ()Ljava/lang/String; bo
	pollTask ()Z f
	pollUntil (Lit/unimi/dsi/fastutil/ints/Int2BooleanFunction;)I a
	profiledMetrics ()Ljava/util/List; bl
	registerForExecution ()V g
	setAsIdle ()V c
	setAsScheduled ()Z b
	shouldProcess ()Z e
	size ()I a
	tell (Ljava/lang/Object;)V a
net/minecraft/util/thread/ReentrantBlockableEventLoop aqy
	reentrantCount b
	doRunTask (Ljava/lang/Runnable;)V c
	runningTask ()Z bs
	scheduleExecutables ()Z au
net/minecraft/util/thread/StrictQueue aqz
	isEmpty ()Z b
	pop ()Ljava/lang/Object; a
	push (Ljava/lang/Object;)Z a
	size ()I c
net/minecraft/util/thread/StrictQueue$FixedPriorityQueue aqz$a
	queueList a
	isEmpty ()Z b
	pop ()Ljava/lang/Object; a
	pop ()Ljava/lang/Runnable; d
	push (Ljava/lang/Object;)Z a
	push (Lnet/minecraft/util/thread/StrictQueue$IntRunnable;)Z a
	size ()I c
net/minecraft/util/thread/StrictQueue$IntRunnable aqz$b
	priority a
	task b
	getPriority ()I a
net/minecraft/util/thread/StrictQueue$QueueStrictQueue aqz$c
	queue a
	isEmpty ()Z b
	pop ()Ljava/lang/Object; a
	push (Ljava/lang/Object;)Z a
	size ()I c
net/minecraft/util/valueproviders/BiasedToBottomInt arb
	CODEC a
	maxInclusive f
	minInclusive b
	getMaxValue ()I b
	getMinValue ()I a
	getType ()Lnet/minecraft/util/valueproviders/IntProviderType; c
	of (II)Lnet/minecraft/util/valueproviders/BiasedToBottomInt; a
	sample (Ljava/util/Random;)I a
net/minecraft/util/valueproviders/ClampedInt arc
	CODEC a
	maxInclusive g
	minInclusive f
	source b
	getMaxValue ()I b
	getMinValue ()I a
	getType ()Lnet/minecraft/util/valueproviders/IntProviderType; c
	of (Lnet/minecraft/util/valueproviders/IntProvider;II)Lnet/minecraft/util/valueproviders/ClampedInt; a
	sample (Ljava/util/Random;)I a
net/minecraft/util/valueproviders/ClampedNormalFloat ard
	CODEC a
	deviation d
	max f
	mean b
	min e
	getMaxValue ()F b
	getMinValue ()F a
	getType ()Lnet/minecraft/util/valueproviders/FloatProviderType; c
	of (FFFF)Lnet/minecraft/util/valueproviders/ClampedNormalFloat; a
	sample (Ljava/util/Random;)F a
	sample (Ljava/util/Random;FFFF)F a
net/minecraft/util/valueproviders/ConstantFloat are
	CODEC b
	ZERO a
	value d
	getMaxValue ()F b
	getMinValue ()F a
	getType ()Lnet/minecraft/util/valueproviders/FloatProviderType; c
	getValue ()F d
	of (F)Lnet/minecraft/util/valueproviders/ConstantFloat; a
	sample (Ljava/util/Random;)F a
net/minecraft/util/valueproviders/ConstantInt arf
	CODEC b
	ZERO a
	value f
	getMaxValue ()I b
	getMinValue ()I a
	getType ()Lnet/minecraft/util/valueproviders/IntProviderType; c
	getValue ()I d
	of (I)Lnet/minecraft/util/valueproviders/ConstantInt; a
	sample (Ljava/util/Random;)I a
net/minecraft/util/valueproviders/FloatProvider arg
	CODEC c
	CONSTANT_OR_DISPATCH_CODEC a
	codec (FF)Lcom/mojang/serialization/Codec; a
	getMaxValue ()F b
	getMinValue ()F a
	getType ()Lnet/minecraft/util/valueproviders/FloatProviderType; c
	sample (Ljava/util/Random;)F a
net/minecraft/util/valueproviders/FloatProviderType arh
	CLAMPED_NORMAL c
	CONSTANT a
	TRAPEZOID d
	UNIFORM b
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/util/valueproviders/FloatProviderType; a
net/minecraft/util/valueproviders/IntProvider ari
	CODEC c
	CONSTANT_OR_DISPATCH_CODEC a
	NON_NEGATIVE_CODEC d
	POSITIVE_CODEC e
	codec (II)Lcom/mojang/serialization/Codec; b
	getMaxValue ()I b
	getMinValue ()I a
	getType ()Lnet/minecraft/util/valueproviders/IntProviderType; c
	sample (Ljava/util/Random;)I a
net/minecraft/util/valueproviders/IntProviderType arj
	BIASED_TO_BOTTOM c
	CLAMPED d
	CONSTANT a
	UNIFORM b
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/util/valueproviders/IntProviderType; a
net/minecraft/util/valueproviders/TrapezoidFloat ark
	CODEC a
	max d
	min b
	plateau e
	getMaxValue ()F b
	getMinValue ()F a
	getType ()Lnet/minecraft/util/valueproviders/FloatProviderType; c
	of (FFF)Lnet/minecraft/util/valueproviders/TrapezoidFloat; a
	sample (Ljava/util/Random;)F a
net/minecraft/util/valueproviders/UniformFloat arl
	CODEC a
	maxExclusive d
	minInclusive b
	getMaxValue ()F b
	getMinValue ()F a
	getType ()Lnet/minecraft/util/valueproviders/FloatProviderType; c
	of (FF)Lnet/minecraft/util/valueproviders/UniformFloat; b
	sample (Ljava/util/Random;)F a
net/minecraft/util/valueproviders/UniformInt arm
	CODEC a
	maxInclusive f
	minInclusive b
	getMaxValue ()I b
	getMinValue ()I a
	getType ()Lnet/minecraft/util/valueproviders/IntProviderType; c
	of (II)Lnet/minecraft/util/valueproviders/UniformInt; a
	sample (Ljava/util/Random;)I a
net/minecraft/util/worldupdate/WorldUpgrader aro
	LOGGER a
	REGEX p
	THREAD_FACTORY b
	converted l
	dataFixer g
	eraseCache d
	finished i
	levelStorage e
	levels c
	overworldDataStorage q
	progress j
	progressMap n
	running h
	skipped m
	status o
	thread f
	totalChunks k
	cancel ()V a
	dimensionProgress (Lnet/minecraft/resources/ResourceKey;)F a
	getAllChunkPos (Lnet/minecraft/resources/ResourceKey;)Ljava/util/List; b
	getConverted ()I f
	getProgress ()F d
	getSkipped ()I g
	getStatus ()Lnet/minecraft/network/chat/Component; h
	getTotalChunks ()I e
	isFinished ()Z b
	levels ()Lcom/google/common/collect/ImmutableSet; c
	work ()V i
net/minecraft/world/BossEvent arq
	color c
	createWorldFog g
	darkenScreen e
	id h
	name a
	overlay d
	playBossMusic f
	progress b
	getColor ()Lnet/minecraft/world/BossEvent$BossBarColor; l
	getId ()Ljava/util/UUID; i
	getName ()Lnet/minecraft/network/chat/Component; j
	getOverlay ()Lnet/minecraft/world/BossEvent$BossBarOverlay; m
	getProgress ()F k
	setColor (Lnet/minecraft/world/BossEvent$BossBarColor;)V a
	setCreateWorldFog (Z)Lnet/minecraft/world/BossEvent; c
	setDarkenScreen (Z)Lnet/minecraft/world/BossEvent; a
	setName (Lnet/minecraft/network/chat/Component;)V a
	setOverlay (Lnet/minecraft/world/BossEvent$BossBarOverlay;)V a
	setPlayBossMusic (Z)Lnet/minecraft/world/BossEvent; b
	setProgress (F)V a
	shouldCreateWorldFog ()Z p
	shouldDarkenScreen ()Z n
	shouldPlayBossMusic ()Z o
net/minecraft/world/BossEvent$BossBarColor arq$a
	$VALUES j
	BLUE b
	GREEN d
	PINK a
	PURPLE f
	RED c
	WHITE g
	YELLOW e
	formatting i
	name h
	$values ()[Lnet/minecraft/world/BossEvent$BossBarColor; c
	byName (Ljava/lang/String;)Lnet/minecraft/world/BossEvent$BossBarColor; a
	getFormatting ()Lnet/minecraft/ChatFormatting; a
	getName ()Ljava/lang/String; b
net/minecraft/world/BossEvent$BossBarOverlay arq$b
	$VALUES g
	NOTCHED_10 c
	NOTCHED_12 d
	NOTCHED_20 e
	NOTCHED_6 b
	PROGRESS a
	name f
	$values ()[Lnet/minecraft/world/BossEvent$BossBarOverlay; b
	byName (Ljava/lang/String;)Lnet/minecraft/world/BossEvent$BossBarOverlay; a
	getName ()Ljava/lang/String; a
net/minecraft/world/Clearable arr
	clearContent ()V a
	tryClear (Ljava/lang/Object;)V a
net/minecraft/world/CompoundContainer ars
	container1 b
	container2 c
	canPlaceItem (ILnet/minecraft/world/item/ItemStack;)Z b
	clearContent ()V a
	contains (Lnet/minecraft/world/Container;)Z a
	getContainerSize ()I b
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getMaxStackSize ()I L_
	isEmpty ()Z c
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	setChanged ()V e
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	startOpen (Lnet/minecraft/world/entity/player/Player;)V b_
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	stopOpen (Lnet/minecraft/world/entity/player/Player;)V c_
net/minecraft/world/Container art
	LARGE_MAX_STACK_SIZE j_
	canPlaceItem (ILnet/minecraft/world/item/ItemStack;)Z b
	countItem (Lnet/minecraft/world/item/Item;)I a
	getContainerSize ()I b
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getMaxStackSize ()I L_
	hasAnyOf (Ljava/util/Set;)Z a
	isEmpty ()Z c
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	setChanged ()V e
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	startOpen (Lnet/minecraft/world/entity/player/Player;)V b_
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	stopOpen (Lnet/minecraft/world/entity/player/Player;)V c_
net/minecraft/world/ContainerHelper aru
	clearOrCountMatchingItems (Lnet/minecraft/world/Container;Ljava/util/function/Predicate;IZ)I a
	clearOrCountMatchingItems (Lnet/minecraft/world/item/ItemStack;Ljava/util/function/Predicate;IZ)I a
	loadAllItems (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/core/NonNullList;)V b
	removeItem (Ljava/util/List;II)Lnet/minecraft/world/item/ItemStack; a
	saveAllItems (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/core/NonNullList;)Lnet/minecraft/nbt/CompoundTag; a
	saveAllItems (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/core/NonNullList;Z)Lnet/minecraft/nbt/CompoundTag; a
	takeItem (Ljava/util/List;I)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/ContainerListener arv
	containerChanged (Lnet/minecraft/world/Container;)V a
net/minecraft/world/Containers arw
	RANDOM a
	dropContents (Lnet/minecraft/world/level/Level;DDDLnet/minecraft/world/Container;)V a
	dropContents (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/NonNullList;)V a
	dropContents (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/Container;)V a
	dropContents (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/Container;)V a
	dropItemStack (Lnet/minecraft/world/level/Level;DDDLnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/Difficulty arx
	$VALUES h
	BY_ID e
	EASY b
	HARD d
	NORMAL c
	PEACEFUL a
	id f
	key g
	$values ()[Lnet/minecraft/world/Difficulty; d
	byId (I)Lnet/minecraft/world/Difficulty; a
	byName (Ljava/lang/String;)Lnet/minecraft/world/Difficulty; a
	getDisplayName ()Lnet/minecraft/network/chat/Component; b
	getId ()I a
	getKey ()Ljava/lang/String; c
net/minecraft/world/DifficultyInstance ary
	DIFFICULTY_TIME_GLOBAL_OFFSET a
	MAX_DIFFICULTY_TIME_GLOBAL b
	MAX_DIFFICULTY_TIME_LOCAL c
	base d
	effectiveDifficulty e
	calculateDifficulty (Lnet/minecraft/world/Difficulty;JJF)F a
	getDifficulty ()Lnet/minecraft/world/Difficulty; a
	getEffectiveDifficulty ()F b
	getSpecialMultiplier ()F d
	isHard ()Z c
	isHarderThan (F)Z a
net/minecraft/world/InteractionHand arz
	$VALUES c
	MAIN_HAND a
	OFF_HAND b
	$values ()[Lnet/minecraft/world/InteractionHand; a
net/minecraft/world/InteractionResult asa
	$VALUES f
	CONSUME b
	CONSUME_PARTIAL c
	FAIL e
	PASS d
	SUCCESS a
	$values ()[Lnet/minecraft/world/InteractionResult; d
	consumesAction ()Z a
	shouldAwardStats ()Z c
	shouldSwing ()Z b
	sidedSuccess (Z)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/InteractionResultHolder asb
	object b
	result a
	consume (Ljava/lang/Object;)Lnet/minecraft/world/InteractionResultHolder; b
	fail (Ljava/lang/Object;)Lnet/minecraft/world/InteractionResultHolder; d
	getObject ()Ljava/lang/Object; b
	getResult ()Lnet/minecraft/world/InteractionResult; a
	pass (Ljava/lang/Object;)Lnet/minecraft/world/InteractionResultHolder; c
	sidedSuccess (Ljava/lang/Object;Z)Lnet/minecraft/world/InteractionResultHolder; a
	success (Ljava/lang/Object;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/LockCode asc
	NO_LOCK a
	TAG_LOCK b
	key c
	addToTag (Lnet/minecraft/nbt/CompoundTag;)V a
	fromTag (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/LockCode; b
	unlocksWith (Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/world/MenuProvider asd
	getDisplayName ()Lnet/minecraft/network/chat/Component; B_
net/minecraft/world/Nameable ase
	getCustomName ()Lnet/minecraft/network/chat/Component; U
	getDisplayName ()Lnet/minecraft/network/chat/Component; B_
	getName ()Lnet/minecraft/network/chat/Component; S
	hasCustomName ()Z T
net/minecraft/world/SimpleContainer asf
	items c
	listeners d
	size b
	addItem (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	addListener (Lnet/minecraft/world/ContainerListener;)V a
	canAddItem (Lnet/minecraft/world/item/ItemStack;)Z b
	clearContent ()V a
	createTag ()Lnet/minecraft/nbt/ListTag; g
	fillStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
	fromTag (Lnet/minecraft/nbt/ListTag;)V a
	getContainerSize ()I b
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	isEmpty ()Z c
	moveItemToEmptySlots (Lnet/minecraft/world/item/ItemStack;)V c
	moveItemToOccupiedSlotsWithSameType (Lnet/minecraft/world/item/ItemStack;)V d
	moveItemsBetweenStacks (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V a
	removeAllItems ()Ljava/util/List; f
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	removeItemType (Lnet/minecraft/world/item/Item;I)Lnet/minecraft/world/item/ItemStack; a
	removeListener (Lnet/minecraft/world/ContainerListener;)V b
	setChanged ()V e
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/SimpleMenuProvider asg
	menuConstructor b
	title a
	getDisplayName ()Lnet/minecraft/network/chat/Component; B_
net/minecraft/world/Snooper ash
	DATA_SEND_FREQUENCY b
	POLL_HOST a
	SNOOPER_VERSION c
	count m
	dynamicData e
	fixedData d
	lock j
	populator h
	started l
	startupTime k
	timer i
	token f
	url g
	getStartupTime ()J g
	getToken ()Ljava/lang/String; f
	getValues ()Ljava/util/Map; c
	interrupt ()V e
	isStarted ()Z d
	populateFixedData ()V h
	prepare ()V b
	setDynamicData (Ljava/lang/String;Ljava/lang/Object;)V a
	setFixedData (Ljava/lang/String;Ljava/lang/Object;)V b
	setJvmArgs ()V i
	start ()V a
net/minecraft/world/SnooperPopulator asi
	isSnooperEnabled ()Z V
	populateSnooper (Lnet/minecraft/world/Snooper;)V a
	populateSnooperInitial (Lnet/minecraft/world/Snooper;)V b
net/minecraft/world/WorldlyContainer asj
	canPlaceItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z a
	canTakeItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z b
	getSlotsForFace (Lnet/minecraft/core/Direction;)[I a
net/minecraft/world/WorldlyContainerHolder ask
	getContainer (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/WorldlyContainer; a
net/minecraft/world/damagesource/BadRespawnPointDamage asl
	getLocalizedDeathMessage (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/network/chat/Component; a
net/minecraft/world/damagesource/CombatEntry asm
	damage c
	fallDistance f
	health d
	location e
	source a
	time b
	getAttacker ()Lnet/minecraft/world/entity/Entity; i
	getAttackerName ()Lnet/minecraft/network/chat/Component; h
	getDamage ()F c
	getFallDistance ()F j
	getHealthAfterDamage ()F e
	getHealthBeforeDamage ()F d
	getLocation ()Ljava/lang/String; g
	getSource ()Lnet/minecraft/world/damagesource/DamageSource; a
	getTime ()I b
	isCombatRelated ()Z f
net/minecraft/world/damagesource/CombatRules asn
	ARMOR_PROTECTION_DIVIDER b
	BASE_ARMOR_TOUGHNESS c
	MAX_ARMOR a
	MIN_ARMOR_RATIO d
	NUM_ARMOR_ITEMS e
	getDamageAfterAbsorb (FFF)F a
	getDamageAfterMagicAbsorb (FF)F a
net/minecraft/world/damagesource/CombatTracker aso
	RESET_COMBAT_STATUS_TIME b
	RESET_DAMAGE_STATUS_TIME a
	combatEndTime g
	combatStartTime f
	entries c
	inCombat h
	lastDamageTime e
	mob d
	nextLocation j
	takingDamage i
	getCombatDuration ()I f
	getDeathMessage ()Lnet/minecraft/network/chat/Component; b
	getFallLocation (Lnet/minecraft/world/damagesource/CombatEntry;)Ljava/lang/String; a
	getKiller ()Lnet/minecraft/world/entity/LivingEntity; c
	getKillerId ()I j
	getLastEntry ()Lnet/minecraft/world/damagesource/CombatEntry; i
	getMob ()Lnet/minecraft/world/entity/LivingEntity; h
	getMostSignificantFall ()Lnet/minecraft/world/damagesource/CombatEntry; k
	isInCombat ()Z e
	isTakingDamage ()Z d
	prepareForDamage ()V a
	recheckStatus ()V g
	recordDamage (Lnet/minecraft/world/damagesource/DamageSource;FF)V a
	resetPreparedStatus ()V l
net/minecraft/world/damagesource/DamageSource asp
	ANVIL q
	CACTUS j
	CRAMMING g
	DRAGON_BREATH s
	DROWN h
	DRY_OUT t
	FALL k
	FALLING_BLOCK r
	FALLING_STALACTITE w
	FLY_INTO_WALL l
	FREEZE v
	GENERIC n
	HOT_FLOOR e
	IN_FIRE a
	IN_WALL f
	LAVA d
	LIGHTNING_BOLT b
	MAGIC o
	ON_FIRE c
	OUT_OF_WORLD m
	STALAGMITE x
	STARVE i
	SWEET_BERRY_BUSH u
	WITHER p
	bypassArmor A
	bypassInvul B
	bypassMagic C
	damageHelmet z
	exhaustion D
	isExplosion I
	isFall J
	isFireSource E
	isMagic H
	isProjectile F
	msgId y
	noAggro K
	scalesWithDifficulty G
	arrow (Lnet/minecraft/world/entity/projectile/AbstractArrow;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; a
	badRespawnPointExplosion ()Lnet/minecraft/world/damagesource/DamageSource; a
	bypassArmor ()Lnet/minecraft/world/damagesource/DamageSource; m
	bypassInvul ()Lnet/minecraft/world/damagesource/DamageSource; o
	bypassMagic ()Lnet/minecraft/world/damagesource/DamageSource; p
	damageHelmet ()Lnet/minecraft/world/damagesource/DamageSource; n
	explosion (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/damagesource/DamageSource; d
	explosion (Lnet/minecraft/world/level/Explosion;)Lnet/minecraft/world/damagesource/DamageSource; a
	fireball (Lnet/minecraft/world/entity/projectile/Fireball;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; a
	fireworks (Lnet/minecraft/world/entity/projectile/FireworkRocketEntity;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; a
	getDirectEntity ()Lnet/minecraft/world/entity/Entity; k
	getEntity ()Lnet/minecraft/world/entity/Entity; l
	getFoodExhaustion ()F h
	getLocalizedDeathMessage (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/network/chat/Component; a
	getMsgId ()Ljava/lang/String; u
	getSourcePosition ()Lnet/minecraft/world/phys/Vec3; C
	indirectMagic (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; c
	indirectMobAttack (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/damagesource/DamageSource; a
	isBypassArmor ()Z f
	isBypassInvul ()Z i
	isBypassMagic ()Z j
	isCreativePlayer ()Z B
	isDamageHelmet ()Z g
	isExplosion ()Z d
	isFall ()Z z
	isFire ()Z s
	isMagic ()Z x
	isNoAggro ()Z t
	isProjectile ()Z b
	mobAttack (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/damagesource/DamageSource; c
	playerAttack (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/damagesource/DamageSource; a
	scalesWithDifficulty ()Z w
	setExplosion ()Lnet/minecraft/world/damagesource/DamageSource; e
	setIsFall ()Lnet/minecraft/world/damagesource/DamageSource; A
	setIsFire ()Lnet/minecraft/world/damagesource/DamageSource; q
	setMagic ()Lnet/minecraft/world/damagesource/DamageSource; y
	setNoAggro ()Lnet/minecraft/world/damagesource/DamageSource; r
	setProjectile ()Lnet/minecraft/world/damagesource/DamageSource; c
	setScalesWithDifficulty ()Lnet/minecraft/world/damagesource/DamageSource; v
	sting (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/damagesource/DamageSource; b
	thorns (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; a
	thrown (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; b
	trident (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; a
	witherSkull (Lnet/minecraft/world/entity/projectile/WitherSkull;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; a
net/minecraft/world/damagesource/EntityDamageSource asq
	entity z
	isThorns A
	getEntity ()Lnet/minecraft/world/entity/Entity; l
	getLocalizedDeathMessage (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/network/chat/Component; a
	getSourcePosition ()Lnet/minecraft/world/phys/Vec3; C
	isThorns ()Z E
	scalesWithDifficulty ()Z w
	setThorns ()Lnet/minecraft/world/damagesource/EntityDamageSource; D
net/minecraft/world/damagesource/IndirectEntityDamageSource asr
	owner A
	getDirectEntity ()Lnet/minecraft/world/entity/Entity; k
	getEntity ()Lnet/minecraft/world/entity/Entity; l
	getLocalizedDeathMessage (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/network/chat/Component; a
net/minecraft/world/effect/AbsoptionMobEffect ast
	addAttributeModifiers (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/ai/attributes/AttributeMap;I)V b
	removeAttributeModifiers (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/ai/attributes/AttributeMap;I)V a
net/minecraft/world/effect/AttackDamageMobEffect asu
	multiplier a
	getAttributeModifierValue (ILnet/minecraft/world/entity/ai/attributes/AttributeModifier;)D a
net/minecraft/world/effect/HealthBoostMobEffect asv
	removeAttributeModifiers (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/ai/attributes/AttributeMap;I)V a
net/minecraft/world/effect/InstantenousMobEffect asw
	isDurationEffectTick (II)Z a
	isInstantenous ()Z a
net/minecraft/world/effect/MobEffect asx
	attributeModifiers a
	category b
	color c
	descriptionId d
	addAttributeModifier (Lnet/minecraft/world/entity/ai/attributes/Attribute;Ljava/lang/String;DLnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation;)Lnet/minecraft/world/effect/MobEffect; a
	addAttributeModifiers (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/ai/attributes/AttributeMap;I)V b
	applyEffectTick (Lnet/minecraft/world/entity/LivingEntity;I)V a
	applyInstantenousEffect (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/LivingEntity;ID)V a
	byId (I)Lnet/minecraft/world/effect/MobEffect; a
	getAttributeModifierValue (ILnet/minecraft/world/entity/ai/attributes/AttributeModifier;)D a
	getAttributeModifiers ()Ljava/util/Map; g
	getCategory ()Lnet/minecraft/world/effect/MobEffectCategory; e
	getColor ()I f
	getDescriptionId ()Ljava/lang/String; c
	getDisplayName ()Lnet/minecraft/network/chat/Component; d
	getId (Lnet/minecraft/world/effect/MobEffect;)I a
	getOrCreateDescriptionId ()Ljava/lang/String; b
	isBeneficial ()Z h
	isDurationEffectTick (II)Z a
	isInstantenous ()Z a
	removeAttributeModifiers (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/ai/attributes/AttributeMap;I)V a
net/minecraft/world/effect/MobEffectCategory asy
	$VALUES e
	BENEFICIAL a
	HARMFUL b
	NEUTRAL c
	tooltipFormatting d
	$values ()[Lnet/minecraft/world/effect/MobEffectCategory; b
	getTooltipFormatting ()Lnet/minecraft/ChatFormatting; a
net/minecraft/world/effect/MobEffectInstance asz
	LOGGER a
	ambient e
	amplifier d
	duration c
	effect b
	hiddenEffect i
	noCounter f
	showIcon h
	visible g
	applyEffect (Lnet/minecraft/world/entity/LivingEntity;)V a
	compareTo (Lnet/minecraft/world/effect/MobEffectInstance;)I c
	getAmplifier ()I c
	getDescriptionId ()Ljava/lang/String; g
	getDuration ()I b
	getEffect ()Lnet/minecraft/world/effect/MobEffect; a
	isAmbient ()Z d
	isNoCounter ()Z h
	isVisible ()Z e
	load (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/effect/MobEffectInstance; b
	loadSpecifiedEffect (Lnet/minecraft/world/effect/MobEffect;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/effect/MobEffectInstance; a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	setDetailsFrom (Lnet/minecraft/world/effect/MobEffectInstance;)V a
	setNoCounter (Z)V a
	showIcon ()Z f
	tick (Lnet/minecraft/world/entity/LivingEntity;Ljava/lang/Runnable;)Z a
	tickDownDuration ()I i
	update (Lnet/minecraft/world/effect/MobEffectInstance;)Z b
	writeDetailsTo (Lnet/minecraft/nbt/CompoundTag;)V c
net/minecraft/world/effect/MobEffectUtil ata
	formatDuration (Lnet/minecraft/world/effect/MobEffectInstance;F)Ljava/lang/String; a
	getDigSpeedAmplification (Lnet/minecraft/world/entity/LivingEntity;)I b
	hasDigSpeed (Lnet/minecraft/world/entity/LivingEntity;)Z a
	hasWaterBreathing (Lnet/minecraft/world/entity/LivingEntity;)Z c
net/minecraft/world/effect/MobEffects atb
	ABSORPTION v
	BAD_OMEN E
	BLINDNESS o
	CONDUIT_POWER C
	CONFUSION i
	DAMAGE_BOOST e
	DAMAGE_RESISTANCE k
	DIG_SLOWDOWN d
	DIG_SPEED c
	DOLPHINS_GRACE D
	FIRE_RESISTANCE l
	GLOWING x
	HARM g
	HEAL f
	HEALTH_BOOST u
	HERO_OF_THE_VILLAGE F
	HUNGER q
	INVISIBILITY n
	JUMP h
	LEVITATION y
	LUCK z
	MOVEMENT_SLOWDOWN b
	MOVEMENT_SPEED a
	NIGHT_VISION p
	POISON s
	REGENERATION j
	SATURATION w
	SLOW_FALLING B
	UNLUCK A
	WATER_BREATHING m
	WEAKNESS r
	WITHER t
	register (ILjava/lang/String;Lnet/minecraft/world/effect/MobEffect;)Lnet/minecraft/world/effect/MobEffect; a
net/minecraft/world/entity/AgeableMob atd
	BABY_START_AGE b
	DATA_BABY_ID bS
	FORCED_AGE_PARTICLE_TICKS bT
	age c
	forcedAge d
	forcedAgeTimer e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	ageBoundaryReached ()V n
	ageUp (I)V a_
	ageUp (IZ)V a
	aiStep ()V u_
	canBreed ()Z g
	defineSynchedData ()V a_
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAge ()I j
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	isBaby ()Z w_
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setAge (I)V b_
	setBaby (Z)V a
net/minecraft/world/entity/AgeableMob$AgeableMobGroupData atd$a
	babySpawnChance c
	groupSize a
	shouldSpawnBaby b
	getBabySpawnChance ()F d
	getGroupSize ()I a
	increaseGroupSizeByOne ()V b
	isShouldSpawnBaby ()Z c
net/minecraft/world/entity/AreaEffectCloud ate
	DATA_COLOR e
	DATA_PARTICLE ao
	DATA_RADIUS d
	DATA_WAITING f
	LOGGER b
	MAX_RADIUS ap
	TIME_BETWEEN_APPLICATIONS c
	duration at
	durationOnUse ax
	effects ar
	fixedColor aw
	owner aA
	ownerUUID aB
	potion aq
	radiusOnUse ay
	radiusPerTick az
	reapplicationDelay av
	victims as
	waitTime au
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addEffect (Lnet/minecraft/world/effect/MobEffectInstance;)V a
	defineSynchedData ()V a_
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; P
	getColor ()I i
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getDuration ()I n
	getDurationOnUse ()I q
	getOwner ()Lnet/minecraft/world/entity/LivingEntity; s
	getParticle ()Lnet/minecraft/core/particles/ParticleOptions; j
	getPistonPushReaction ()Lnet/minecraft/world/level/material/PushReaction; y_
	getPotion ()Lnet/minecraft/world/item/alchemy/Potion; t
	getRadius ()F h
	getRadiusOnUse ()F o
	getRadiusPerTick ()F p
	getWaitTime ()I r
	isWaiting ()Z l
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	refreshDimensions ()V x_
	setDuration (I)V b
	setDurationOnUse (I)V c
	setFixedColor (I)V a
	setOwner (Lnet/minecraft/world/entity/LivingEntity;)V a
	setParticle (Lnet/minecraft/core/particles/ParticleOptions;)V a
	setPotion (Lnet/minecraft/world/item/alchemy/Potion;)V a
	setRadius (F)V a
	setRadiusOnUse (F)V b
	setRadiusPerTick (F)V c
	setWaitTime (I)V d
	setWaiting (Z)V a
	tick ()V k
	updateColor ()V v
net/minecraft/world/entity/Entity atf
	BASE_TICKS_REQUIRED_TO_FREEZE o
	BOARDING_COOLDOWN j
	BREATHING_DISTANCE_BELOW_EYES n
	DATA_AIR_SUPPLY_ID aI
	DATA_CUSTOM_NAME aJ
	DATA_CUSTOM_NAME_VISIBLE aK
	DATA_NO_GRAVITY aM
	DATA_POSE ad
	DATA_SHARED_FLAGS_ID Z
	DATA_SILENT aL
	DATA_TICKS_FROZEN aN
	DEFAULT_BB_HEIGHT F
	DEFAULT_BB_WIDTH E
	DELTA_AFFECTED_BY_BLOCKS_BELOW m
	EMPTY_LIST c
	ENTITY_COUNTER b
	FLAG_FALL_FLYING ac
	FLAG_GLOWING ab
	FLAG_INVISIBLE aH
	FLAG_ONFIRE aa
	FLAG_SHIFT_KEY_DOWN aE
	FLAG_SPRINTING aF
	FLAG_SWIMMING aG
	FREEZE_HURT_FREQUENCY p
	ID_TAG h
	INITIAL_AABB d
	LAVA_FAST_FLOW_SCALE ao
	LAVA_SLOW_FLOW_SCALE ap
	LOGGER g
	MAX_ENTITY_TAG_COUNT l
	PASSENGERS_TAG i
	TOTAL_AIR_SUPPLY k
	UUID_TAG q
	WATER_FLOW_SCALE e
	bb aA
	blockPosition aw
	blocksBuilding r
	boardingCooldown s
	crystalSoundIntensity aY
	deltaMovement ax
	dimensions aW
	entityData Y
	eyeHeight aX
	fallDistance K
	firstTick X
	fluidHeight T
	fluidOnEyes V
	flyDist J
	hasGlowingTag aS
	hasImpulse af
	hasVisualFire ba
	horizontalCollision A
	hurtMarked C
	id as
	invulnerable aR
	invulnerableTime W
	isInPowderSnow al
	isInsidePortal ag
	lastCrystalSoundPlayTick aZ
	level t
	levelCallback aO
	maxUpStep O
	moveDist I
	nextStep aC
	noCulling ae
	noPhysics P
	onGround z
	packetCoordinates aP
	passengers at
	pistonDeltas aU
	pistonDeltasGameTime aV
	portalCooldown aQ
	portalEntrancePos ai
	portalTime ah
	position av
	random Q
	remainingFireTicks aD
	removalReason aB
	stringUUID ak
	stuckSpeedMultiplier D
	tags aT
	tickCount R
	type ar
	uuid aj
	vehicle au
	verticalCollision B
	viewScale aq
	walkDist H
	walkDistO G
	wasEyeInWater U
	wasInPowderSnow am
	wasOnFire an
	wasTouchingWater S
	xOld L
	xRot az
	xRotO y
	xo u
	yOld M
	yRot ay
	yRotO x
	yo v
	zOld N
	zo w
	absMoveTo (DDD)V g
	absMoveTo (DDDFF)V a
	acceptsFailure ()Z i_
	acceptsSuccess ()Z h_
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addPassenger (Lnet/minecraft/world/entity/Entity;)V m
	addTag (Ljava/lang/String;)Z a
	animateHurt ()V bv
	applyPistonMovementRestriction (Lnet/minecraft/core/Direction$Axis;D)D a
	awardKillScore (Lnet/minecraft/world/entity/Entity;ILnet/minecraft/world/damagesource/DamageSource;)V a
	baseTick ()V ai
	blockPosition ()Lnet/minecraft/core/BlockPos; cR
	broadcastToPlayer (Lnet/minecraft/server/level/ServerPlayer;)Z a
	calculateUpVector (FF)Lnet/minecraft/world/phys/Vec3; c
	calculateViewVector (FF)Lnet/minecraft/world/phys/Vec3; b
	canAddPassenger (Lnet/minecraft/world/entity/Entity;)Z o
	canBeCollidedWith ()Z bi
	canChangeDimensions ()Z cd
	canCollideWith (Lnet/minecraft/world/entity/Entity;)Z h
	canEnterPose (Lnet/minecraft/world/entity/Pose;)Z c
	canFreeze ()Z dg
	canRide (Lnet/minecraft/world/entity/Entity;)Z l
	canSpawnSprintParticle ()Z aV
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	changeDimension (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/entity/Entity; b
	checkDespawn ()V de
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	checkInsideBlocks ()V aD
	checkOutOfWorld ()V aj
	chunkPosition ()Lnet/minecraft/world/level/ChunkPos; cU
	clearFire ()V ap
	closerThan (Lnet/minecraft/world/entity/Entity;D)Z a
	collide (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; g
	collideBoundingBox (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/AABB;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/world/phys/shapes/CollisionContext;Lnet/minecraft/util/RewindableStream;)Lnet/minecraft/world/phys/Vec3; a
	collideBoundingBoxHeuristically (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/AABB;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/phys/shapes/CollisionContext;Lnet/minecraft/util/RewindableStream;)Lnet/minecraft/world/phys/Vec3; a
	collideBoundingBoxLegacy (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/AABB;Lnet/minecraft/util/RewindableStream;)Lnet/minecraft/world/phys/Vec3; a
	copyPosition (Lnet/minecraft/world/entity/Entity;)V s
	createCommandSourceStack ()Lnet/minecraft/commands/CommandSourceStack; cL
	createHoverEvent ()Lnet/minecraft/network/chat/HoverEvent; cq
	defineSynchedData ()V a_
	discard ()V ac
	dismountTo (DDD)V a
	displayFireAnimation ()Z cg
	distanceTo (Lnet/minecraft/world/entity/Entity;)F e
	distanceToSqr (DDD)D h
	distanceToSqr (Lnet/minecraft/world/entity/Entity;)D f
	distanceToSqr (Lnet/minecraft/world/phys/Vec3;)D e
	doEnchantDamageEffects (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;)V a
	doWaterSplashEffect ()V aT
	ejectPassengers ()V bn
	eyeBlockPosition ()Lnet/minecraft/core/BlockPos; cT
	fillCrashReportCategory (Lnet/minecraft/CrashReportCategory;)V a
	findDimensionEntryPoint (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/level/portal/PortalInfo; a
	fireImmune ()Z aK
	gameEvent (Lnet/minecraft/world/level/gameevent/GameEvent;)V a
	gameEvent (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/core/BlockPos;)V a
	gameEvent (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/entity/Entity;)V a
	gameEvent (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)V a
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; P
	getAirSupply ()I bT
	getAllSlots ()Ljava/lang/Iterable; by
	getArmorSlots ()Ljava/lang/Iterable; bx
	getBbHeight ()F cP
	getBbWidth ()F cO
	getBlockExplosionResistance (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;F)F a
	getBlockJumpFactor ()F aw
	getBlockPosBelowThatAffectsMyMovement ()Lnet/minecraft/core/BlockPos; ay
	getBlockSpeedFactor ()F ax
	getBlockStateOn ()Lnet/minecraft/world/level/block/state/BlockState; aU
	getBlockX ()I cW
	getBlockY ()I cY
	getBlockZ ()I dc
	getBoundingBox ()Lnet/minecraft/world/phys/AABB; cr
	getBoundingBoxForCulling ()Lnet/minecraft/world/phys/AABB; cs
	getBoundingBoxForPose (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/phys/AABB; d
	getBrightness ()F aY
	getCollisionHorizontalEscapeVector (DDF)Lnet/minecraft/world/phys/Vec3; a
	getCommandSenderWorld ()Lnet/minecraft/world/level/Level; cv
	getControllingPassenger ()Lnet/minecraft/world/entity/Entity; cz
	getCustomName ()Lnet/minecraft/network/chat/Component; U
	getDeltaMovement ()Lnet/minecraft/world/phys/Vec3; cV
	getDimensionChangingDelay ()I bu
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getDirection ()Lnet/minecraft/core/Direction; co
	getDismountLocationForPassenger (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/phys/Vec3; b
	getDisplayName ()Lnet/minecraft/network/chat/Component; B_
	getEncodeId ()Ljava/lang/String; bf
	getEntityData ()Lnet/minecraft/network/syncher/SynchedEntityData; ad
	getExitPortal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Z)Ljava/util/Optional; a
	getEyeHeight ()F ct
	getEyeHeight (Lnet/minecraft/world/entity/Pose;)F e
	getEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F a
	getEyePosition ()Lnet/minecraft/world/phys/Vec3; bb
	getEyePosition (F)Lnet/minecraft/world/phys/Vec3; i
	getEyeY ()D db
	getFeetBlockState ()Lnet/minecraft/world/level/block/state/BlockState; cS
	getFireImmuneTicks ()I cK
	getFirstPassenger ()Lnet/minecraft/world/entity/Entity; cB
	getFluidHeight (Lnet/minecraft/tags/Tag;)D b
	getFluidJumpThreshold ()D cN
	getForward ()Lnet/minecraft/world/phys/Vec3; bs
	getGameEventListenerRegistrar ()Lnet/minecraft/world/level/gameevent/GameEventListenerRegistrar; bQ
	getHandSlots ()Ljava/lang/Iterable; bw
	getId ()I Z
	getIndirectPassengers ()Ljava/lang/Iterable; cE
	getIndirectPassengersStream ()Ljava/util/stream/Stream; n
	getInputVector (Lnet/minecraft/world/phys/Vec3;FF)Lnet/minecraft/world/phys/Vec3; a
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; cu
	getLightProbePosition (F)Lnet/minecraft/world/phys/Vec3; j
	getLookAngle ()Lnet/minecraft/world/phys/Vec3; bq
	getMaxAirSupply ()I bS
	getMaxFallDistance ()I ce
	getMotionDirection ()Lnet/minecraft/core/Direction; cp
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aI
	getMyRidingOffset ()D bk
	getName ()Lnet/minecraft/network/chat/Component; S
	getOnPos ()Lnet/minecraft/core/BlockPos; av
	getPacketCoordinates ()Lnet/minecraft/world/phys/Vec3; X
	getPassengers ()Ljava/util/List; cA
	getPassengersAndSelf ()Ljava/util/stream/Stream; cD
	getPassengersRidingOffset ()D bl
	getPercentFrozen ()F bV
	getPermissionLevel ()I y
	getPickRadius ()F bp
	getPickResult ()Lnet/minecraft/world/item/ItemStack; df
	getPistonPushReaction ()Lnet/minecraft/world/level/material/PushReaction; y_
	getPortalWaitTime ()I am
	getPose ()Lnet/minecraft/world/entity/Pose; af
	getPosition (F)Lnet/minecraft/world/phys/Vec3; k
	getRandomX (D)D d
	getRandomY ()D da
	getRandomZ (D)D g
	getRelativePortalPosition (Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/BlockUtil$FoundRectangle;)Lnet/minecraft/world/phys/Vec3; a
	getRemainingFireTicks ()I ao
	getRemovalReason ()Lnet/minecraft/world/entity/Entity$RemovalReason; dk
	getRootVehicle ()Lnet/minecraft/world/entity/Entity; cG
	getRopeHoldPosition (F)Lnet/minecraft/world/phys/Vec3; n
	getRotationVector ()Lnet/minecraft/world/phys/Vec2; br
	getScoreboardName ()Ljava/lang/String; cj
	getSelfAndPassengers ()Ljava/util/stream/Stream; cC
	getServer ()Lnet/minecraft/server/MinecraftServer; cw
	getSharedFlag (I)Z h
	getSlot (I)Lnet/minecraft/world/entity/SlotAccess; k
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; cJ
	getStringUUID ()Ljava/lang/String; ci
	getSwimHighSpeedSplashSound ()Lnet/minecraft/sounds/SoundEvent; aC
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; aA
	getSwimSplashSound ()Lnet/minecraft/sounds/SoundEvent; aB
	getTags ()Ljava/util/Set; aa
	getTeam ()Lnet/minecraft/world/scores/Team; bR
	getTeamColor ()I V
	getTicksFrozen ()I bU
	getTicksRequiredToFreeze ()I bX
	getType ()Lnet/minecraft/world/entity/EntityType; Y
	getTypeName ()Lnet/minecraft/network/chat/Component; bY
	getUUID ()Ljava/util/UUID; ch
	getUpVector (F)Lnet/minecraft/world/phys/Vec3; h
	getVehicle ()Lnet/minecraft/world/entity/Entity; cI
	getViewScale ()D cl
	getViewVector (F)Lnet/minecraft/world/phys/Vec3; e
	getViewXRot (F)F f
	getViewYRot (F)F g
	getX ()D cX
	getX (D)D c
	getXRot ()F di
	getY ()D cZ
	getY (D)D e
	getYHeadRot ()F bZ
	getYRot ()F dh
	getZ ()D dd
	getZ (D)D f
	handleEntityEvent (B)V a
	handleInsidePortal (Lnet/minecraft/core/BlockPos;)V d
	handleNetherPortal ()V bt
	hasCustomName ()Z T
	hasExactlyOnePlayerPassenger ()Z cF
	hasGlowingTag ()Z bN
	hasIndirectPassenger (Lnet/minecraft/world/entity/Entity;)Z w
	hasPassenger (Ljava/util/function/Predicate;)Z a
	hasPassenger (Lnet/minecraft/world/entity/Entity;)Z u
	hasPermissions (I)Z l
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	ignoreExplosion ()Z cx
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	interactAt (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	is (Lnet/minecraft/world/entity/Entity;)Z q
	isAlive ()Z bg
	isAlliedTo (Lnet/minecraft/world/entity/Entity;)Z p
	isAlliedTo (Lnet/minecraft/world/scores/Team;)Z a
	isAlwaysTicking ()Z dn
	isAttackable ()Z ca
	isColliding (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isControlledByLocalInstance ()Z cH
	isCrouching ()Z bI
	isCurrentlyGlowing ()Z bO
	isCustomNameVisible ()Z cm
	isDescending ()Z bH
	isDiscrete ()Z bG
	isEyeInFluid (Lnet/minecraft/tags/Tag;)Z a
	isFlapping ()Z aF
	isFree (DDD)Z f
	isFree (Lnet/minecraft/world/phys/AABB;)Z b
	isFullyFrozen ()Z bW
	isIgnoringBlockTriggers ()Z cf
	isInBubbleColumn ()Z j
	isInLava ()Z aX
	isInRain ()Z i
	isInWall ()Z bh
	isInWater ()Z aL
	isInWaterOrBubble ()Z aO
	isInWaterOrRain ()Z aM
	isInWaterRainOrBubble ()Z aN
	isInvisible ()Z bP
	isInvisibleTo (Lnet/minecraft/world/entity/player/Player;)Z c
	isInvulnerable ()Z cb
	isInvulnerableTo (Lnet/minecraft/world/damagesource/DamageSource;)Z b
	isNoGravity ()Z aH
	isOnFire ()Z bz
	isOnGround ()Z ar
	isOnPortalCooldown ()Z al
	isPassenger ()Z bA
	isPassengerOfSameVehicle (Lnet/minecraft/world/entity/Entity;)Z v
	isPickable ()Z bc
	isPushable ()Z bd
	isPushedByFluid ()Z ck
	isRemoved ()Z dj
	isShiftKeyDown ()Z bD
	isSilent ()Z aG
	isSpectator ()Z A_
	isSprinting ()Z bJ
	isSteppingCarefully ()Z bE
	isSuppressingBounce ()Z bF
	isSwimming ()Z bK
	isUnderWater ()Z aP
	isVehicle ()Z bB
	isVisuallyCrawling ()Z bM
	isVisuallySwimming ()Z bL
	kill ()V ab
	killed (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	lavaHurt ()V an
	lerpHeadTo (FI)V a
	lerpMotion (DDD)V k
	lerpTo (DDDFFIZ)V a
	limitPistonMovement (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; c
	load (Lnet/minecraft/nbt/CompoundTag;)V g
	lookAt (Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor;Lnet/minecraft/world/phys/Vec3;)V a
	makeBoundingBox ()Lnet/minecraft/world/phys/AABB; ag
	makeStuckInBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/Vec3;)V a
	markHurt ()V ba
	mayInteract (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z a
	maybeBackOffFromEdge (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/entity/MoverType;)Lnet/minecraft/world/phys/Vec3; a
	mirror (Lnet/minecraft/world/level/block/Mirror;)F a
	move (Lnet/minecraft/world/entity/MoverType;Lnet/minecraft/world/phys/Vec3;)V a
	moveRelative (FLnet/minecraft/world/phys/Vec3;)V a
	moveTo (DDD)V c
	moveTo (DDDFF)V b
	moveTo (Lnet/minecraft/core/BlockPos;FF)V a
	moveTo (Lnet/minecraft/world/phys/Vec3;)V d
	moveTowardsClosestSpace (DDD)V l
	newDoubleList ([D)Lnet/minecraft/nbt/ListTag; a
	newFloatList ([F)Lnet/minecraft/nbt/ListTag; a
	nextStep ()F az
	occludesVibrations ()Z aJ
	onAboveBubbleCol (Z)V k
	onClientRemoval ()V ae
	onFlap ()V aE
	onInsideBlock (Lnet/minecraft/world/level/block/state/BlockState;)V a
	onInsideBubbleColumn (Z)V l
	onPassengerTurned (Lnet/minecraft/world/entity/Entity;)V j
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	onlyOpCanSetNbt ()Z cy
	outOfWorld ()V aq
	pick (DFZ)Lnet/minecraft/world/phys/HitResult; a
	playAmethystStepSound (Lnet/minecraft/world/level/block/state/BlockState;)V b
	playEntityOnFireExtinguishedSound ()V at
	playSound (Lnet/minecraft/sounds/SoundEvent;FF)V a
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	playSwimSound (F)V d
	playerTouch (Lnet/minecraft/world/entity/player/Player;)V b
	position ()Lnet/minecraft/world/phys/Vec3; cQ
	positionRider (Lnet/minecraft/world/entity/Entity;)V i
	positionRider (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity$MoveFunction;)V a
	processFlappingMovement ()V au
	processPortalCooldown ()V E
	push (DDD)V i
	push (Lnet/minecraft/world/entity/Entity;)V g
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	reapplyPosition ()V ah
	recreateFromPacket (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	refreshDimensions ()V x_
	remove (Lnet/minecraft/world/entity/Entity$RemovalReason;)V a
	removeAction (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/Component; b
	removeAfterChangingDimensions ()V cc
	removePassenger (Lnet/minecraft/world/entity/Entity;)V n
	removeTag (Ljava/lang/String;)Z b
	removeVehicle ()V bo
	repositionEntityAfterLoad ()Z be
	restoreFrom (Lnet/minecraft/world/entity/Entity;)V t
	rideTick ()V bj
	rideableUnderWater ()Z bC
	rotate (Lnet/minecraft/world/level/block/Rotation;)F a
	save (Lnet/minecraft/nbt/CompoundTag;)Z e
	saveAsPassenger (Lnet/minecraft/nbt/CompoundTag;)Z d
	saveWithoutId (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; f
	sendMessage (Lnet/minecraft/network/chat/Component;Ljava/util/UUID;)V a
	setAirSupply (I)V i
	setBoundingBox (Lnet/minecraft/world/phys/AABB;)V a
	setCustomName (Lnet/minecraft/network/chat/Component;)V a
	setCustomNameVisible (Z)V n
	setDeltaMovement (DDD)V n
	setDeltaMovement (Lnet/minecraft/world/phys/Vec3;)V f
	setGlowingTag (Z)V i
	setId (I)V e
	setInvisible (Z)V j
	setInvulnerable (Z)V m
	setIsInPowderSnow (Z)V o
	setItemSlot (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V a
	setLevelCallback (Lnet/minecraft/world/level/entity/EntityInLevelCallback;)V a
	setNoGravity (Z)V e
	setOldPosAndRot ()V aZ
	setOnGround (Z)V c
	setPacketCoordinates (DDD)V d
	setPacketCoordinates (Lnet/minecraft/world/phys/Vec3;)V a_
	setPortalCooldown ()V ak
	setPos (DDD)V e
	setPos (Lnet/minecraft/world/phys/Vec3;)V b
	setPosRaw (DDD)V o
	setPose (Lnet/minecraft/world/entity/Pose;)V b
	setRemainingFireTicks (I)V g
	setRemoved (Lnet/minecraft/world/entity/Entity$RemovalReason;)V b
	setRot (FF)V a
	setSecondsOnFire (I)V f
	setSharedFlag (IZ)V b
	setSharedFlagOnFire (Z)V a_
	setShiftKeyDown (Z)V f
	setSilent (Z)V d
	setSprinting (Z)V g
	setSwimming (Z)V h
	setTicksFrozen (I)V j
	setUUID (Ljava/util/UUID;)V a_
	setViewScale (D)V b
	setXRot (F)V p
	setYBodyRot (F)V m
	setYHeadRot (F)V l
	setYRot (F)V o
	shouldBeSaved ()Z dm
	shouldBlockExplode (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;F)Z a
	shouldInformAdmins ()Z E_
	shouldRender (DDD)Z j
	shouldRenderAtSqrDistance (D)Z a
	shouldShowName ()Z cn
	showVehicleHealth ()Z bm
	skipAttackInteraction (Lnet/minecraft/world/entity/Entity;)Z r
	spawnAtLocation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/entity/item/ItemEntity; b
	spawnAtLocation (Lnet/minecraft/world/item/ItemStack;F)Lnet/minecraft/world/entity/item/ItemEntity; a
	spawnAtLocation (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/entity/item/ItemEntity; a
	spawnAtLocation (Lnet/minecraft/world/level/ItemLike;I)Lnet/minecraft/world/entity/item/ItemEntity; a
	spawnSprintParticle ()V aW
	startRiding (Lnet/minecraft/world/entity/Entity;)Z k
	startRiding (Lnet/minecraft/world/entity/Entity;Z)Z a
	startSeenByPlayer (Lnet/minecraft/server/level/ServerPlayer;)V c
	stopRiding ()V m
	stopSeenByPlayer (Lnet/minecraft/server/level/ServerPlayer;)V d
	teleportTo (DDD)V b
	teleportToWithTicket (DDD)V m
	thunderHit (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LightningBolt;)V a
	tick ()V k
	touchingUnloadedChunk ()Z cM
	tryCheckInsideBlocks ()V as
	turn (DD)V a
	unRide ()V W
	unsetRemoved ()V dl
	updateFluidHeightAndDoFluidPushing (Lnet/minecraft/tags/Tag;D)Z a
	updateFluidOnEyes ()V l
	updateInWaterStateAndDoFluidPushing ()Z aR
	updateInWaterStateAndDoWaterCurrentPushing ()V aS
	updateSwimming ()V aQ
net/minecraft/world/entity/Entity$MoveFunction atf$a
net/minecraft/world/entity/Entity$MovementEmission atf$b
	$VALUES g
	ALL d
	EVENTS c
	NONE a
	SOUNDS b
	events f
	sounds e
	$values ()[Lnet/minecraft/world/entity/Entity$MovementEmission; d
	emitsAnything ()Z a
	emitsEvents ()Z b
	emitsSounds ()Z c
net/minecraft/world/entity/Entity$RemovalReason atf$c
	$VALUES h
	CHANGED_DIMENSION e
	DISCARDED b
	KILLED a
	UNLOADED_TO_CHUNK c
	UNLOADED_WITH_PLAYER d
	destroy f
	save g
	$values ()[Lnet/minecraft/world/entity/Entity$RemovalReason; c
	shouldDestroy ()Z a
	shouldSave ()Z b
net/minecraft/world/entity/EntityDimensions atg
	fixed c
	height b
	width a
	fixed (FF)Lnet/minecraft/world/entity/EntityDimensions; c
	makeBoundingBox (DDD)Lnet/minecraft/world/phys/AABB; a
	makeBoundingBox (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/AABB; a
	scalable (FF)Lnet/minecraft/world/entity/EntityDimensions; b
	scale (F)Lnet/minecraft/world/entity/EntityDimensions; a
	scale (FF)Lnet/minecraft/world/entity/EntityDimensions; a
net/minecraft/world/entity/EntityEvent ath
	ARMORSTAND_WOBBLE F
	ATTACK_BLOCKED C
	BAD_OMEN_TRIGGERED Q
	BURNED K
	CANCEL_SHAKE_WETNESS ad
	CHEST_BREAK X
	DEATH c
	DOLPHIN_LOOKING_FOR_TREASURE L
	DROWNED J
	EAT_GRASS j
	END_RAM ag
	FEET_BREAK Z
	FIREWORKS_EXPLODE q
	FISHING_ROD_REEL_IN E
	FOX_EAT S
	FROZEN ae
	FULL_DEBUG_INFO w
	GUARDIAN_ATTACK_SOUND u
	HEAD_BREAK W
	HONEY_JUMP ab
	HONEY_SLIDE aa
	HURT b
	IN_LOVE_HEARTS r
	JUMP a
	LEGS_BREAK Y
	LOVE_HEARTS l
	MAINHAND_BREAK U
	OFFER_FLOWER k
	OFFHAND_BREAK V
	PERMISSION_LEVEL_ADMINS A
	PERMISSION_LEVEL_ALL x
	PERMISSION_LEVEL_GAMEMASTERS z
	PERMISSION_LEVEL_MODERATORS y
	PERMISSION_LEVEL_OWNERS B
	POKED R
	POOF ah
	RAVAGER_STUNNED M
	REDUCED_DEBUG_INFO v
	SHAKE_WETNESS h
	SHIELD_DISABLED D
	SILVERFISH_MERGE_ANIM t
	SQUID_ANIM_SYNCH s
	START_ATTACKING d
	START_RAM af
	STOP_ATTACKING e
	STOP_OFFER_FLOWER H
	SWAP_HANDS ac
	TALISMAN_ACTIVATE I
	TAMING_FAILED f
	TAMING_SUCCEEDED g
	TELEPORT T
	THORNED G
	TRUSTING_FAILED N
	TRUSTING_SUCCEEDED O
	USE_ITEM_COMPLETE i
	VILLAGER_ANGRY m
	VILLAGER_HAPPY n
	VILLAGER_SWEAT P
	WITCH_HAT_MAGIC o
	ZOMBIE_CONVERTING p
net/minecraft/world/entity/EntitySelector ati
	CONTAINER_ENTITY_SELECTOR d
	ENTITY_NOT_BEING_RIDDEN c
	ENTITY_STILL_ALIVE a
	LIVING_ENTITY_STILL_ALIVE b
	NO_CREATIVE_OR_SPECTATOR e
	NO_SPECTATORS f
	notRiding (Lnet/minecraft/world/entity/Entity;)Ljava/util/function/Predicate; b
	pushableBy (Lnet/minecraft/world/entity/Entity;)Ljava/util/function/Predicate; a
	withinDistance (DDDD)Ljava/util/function/Predicate; a
net/minecraft/world/entity/EntitySelector$MobCanWearArmorEntitySelector ati$a
	itemStack a
	test (Lnet/minecraft/world/entity/Entity;)Z a
net/minecraft/world/entity/EntityType atj
	AREA_EFFECT_CLOUD b
	ARMOR_STAND c
	ARROW d
	AXOLOTL e
	BAT f
	BEE g
	BLAZE h
	BOAT i
	CAT j
	CAVE_SPIDER k
	CHEST_MINECART aa
	CHICKEN l
	COD m
	COMMAND_BLOCK_MINECART ab
	COW n
	CREEPER o
	DOLPHIN p
	DONKEY q
	DRAGON_FIREBALL r
	DROWNED s
	EGG aM
	ELDER_GUARDIAN t
	ENDERMAN w
	ENDERMITE x
	ENDER_DRAGON v
	ENDER_PEARL aN
	END_CRYSTAL u
	ENTITY_TAG a
	EVOKER y
	EVOKER_FANGS z
	EXPERIENCE_BOTTLE aO
	EXPERIENCE_ORB A
	EYE_OF_ENDER B
	FALLING_BLOCK C
	FIREBALL S
	FIREWORK_ROCKET D
	FISHING_BOBBER bj
	FOX E
	FURNACE_MINECART ac
	GHAST F
	GIANT G
	GLOW_ITEM_FRAME H
	GLOW_SQUID I
	GOAT J
	GUARDIAN K
	HOGLIN L
	HOPPER_MINECART ad
	HORSE M
	HUSK N
	ILLUSIONER O
	IRON_GOLEM P
	ITEM Q
	ITEM_FRAME R
	LEASH_KNOT T
	LIGHTNING_BOLT U
	LLAMA V
	LLAMA_SPIT W
	LOGGER bk
	MAGIC_HORSE_WIDTH bl
	MAGMA_CUBE X
	MARKER Y
	MINECART Z
	MOOSHROOM ah
	MULE ag
	OCELOT ai
	PAINTING aj
	PANDA ak
	PARROT al
	PHANTOM am
	PIG an
	PIGLIN ao
	PIGLIN_BRUTE ap
	PILLAGER aq
	PLAYER bi
	POLAR_BEAR ar
	POTION aP
	PUFFERFISH at
	RABBIT au
	RAVAGER av
	SALMON aw
	SHEEP ax
	SHULKER ay
	SHULKER_BULLET az
	SILVERFISH aA
	SKELETON aB
	SKELETON_HORSE aC
	SLIME aD
	SMALL_FIREBALL aE
	SNOWBALL aG
	SNOW_GOLEM aF
	SPAWNER_MINECART ae
	SPECTRAL_ARROW aH
	SPIDER aI
	SQUID aJ
	STRAY aK
	STRIDER aL
	TNT as
	TNT_MINECART af
	TRADER_LLAMA aR
	TRIDENT aQ
	TROPICAL_FISH aS
	TURTLE aT
	VEX aU
	VILLAGER aV
	VINDICATOR aW
	WANDERING_TRADER aX
	WITCH aY
	WITHER aZ
	WITHER_SKELETON ba
	WITHER_SKULL bb
	WOLF bc
	ZOGLIN bd
	ZOMBIE be
	ZOMBIE_HORSE bf
	ZOMBIE_VILLAGER bg
	ZOMBIFIED_PIGLIN bh
	canSpawnFarFromPlayer bs
	category bn
	clientTrackingRange bt
	description bw
	descriptionId bv
	dimensions by
	factory bm
	fireImmune br
	immuneTo bo
	lootTable bx
	serialize bp
	summon bq
	updateInterval bu
	by (Lnet/minecraft/nbt/CompoundTag;)Ljava/util/Optional; a
	byString (Ljava/lang/String;)Ljava/util/Optional; a
	canSerialize ()Z b
	canSpawnFarFromPlayer ()Z e
	canSummon ()Z c
	clientTrackingRange ()I n
	create (ILnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/Entity; a
	create (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/Level;)Ljava/util/Optional; a
	create (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/network/chat/Component;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/MobSpawnType;ZZ)Lnet/minecraft/world/entity/Entity; b
	create (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/Entity; a
	create (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/world/entity/Entity; a
	fireImmune ()Z d
	getAABB (DDD)Lnet/minecraft/world/phys/AABB; a
	getBaseClass ()Ljava/lang/Class; a
	getCategory ()Lnet/minecraft/world/entity/MobCategory; f
	getDefaultLootTable ()Lnet/minecraft/resources/ResourceLocation; j
	getDescription ()Lnet/minecraft/network/chat/Component; h
	getDescriptionId ()Ljava/lang/String; g
	getDimensions ()Lnet/minecraft/world/entity/EntityDimensions; m
	getHeight ()F l
	getKey (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/resources/ResourceLocation; a
	getWidth ()F k
	getYOffset (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/phys/AABB;)D a
	is (Lnet/minecraft/tags/Tag;)Z a
	isBlockDangerous (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	loadEntitiesRecursive (Ljava/util/List;Lnet/minecraft/world/level/Level;)Ljava/util/stream/Stream; a
	loadEntityRecursive (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/Level;Ljava/util/function/Function;)Lnet/minecraft/world/entity/Entity; a
	loadStaticEntity (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/Level;)Ljava/util/Optional; b
	register (Ljava/lang/String;Lnet/minecraft/world/entity/EntityType$Builder;)Lnet/minecraft/world/entity/EntityType; a
	spawn (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/network/chat/Component;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/MobSpawnType;ZZ)Lnet/minecraft/world/entity/Entity; a
	spawn (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/MobSpawnType;ZZ)Lnet/minecraft/world/entity/Entity; a
	toShortString ()Ljava/lang/String; i
	trackDeltas ()Z p
	tryCast (Ljava/lang/Object;)Ljava/lang/Object; a
	tryCast (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/entity/Entity; a
	updateCustomEntityTag (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/nbt/CompoundTag;)V a
	updateInterval ()I o
net/minecraft/world/entity/EntityType$Builder atj$a
	canSpawnFarFromPlayer g
	category b
	clientTrackingRange h
	dimensions j
	factory a
	fireImmune f
	immuneTo c
	serialize d
	summon e
	updateInterval i
	build (Ljava/lang/String;)Lnet/minecraft/world/entity/EntityType; a
	canSpawnFarFromPlayer ()Lnet/minecraft/world/entity/EntityType$Builder; d
	clientTrackingRange (I)Lnet/minecraft/world/entity/EntityType$Builder; a
	createNothing (Lnet/minecraft/world/entity/MobCategory;)Lnet/minecraft/world/entity/EntityType$Builder; a
	fireImmune ()Lnet/minecraft/world/entity/EntityType$Builder; c
	immuneTo ([Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/entity/EntityType$Builder; a
	noSave ()Lnet/minecraft/world/entity/EntityType$Builder; b
	noSummon ()Lnet/minecraft/world/entity/EntityType$Builder; a
	of (Lnet/minecraft/world/entity/EntityType$EntityFactory;Lnet/minecraft/world/entity/MobCategory;)Lnet/minecraft/world/entity/EntityType$Builder; a
	sized (FF)Lnet/minecraft/world/entity/EntityType$Builder; a
	updateInterval (I)Lnet/minecraft/world/entity/EntityType$Builder; b
net/minecraft/world/entity/EntityType$EntityFactory atj$b
net/minecraft/world/entity/EquipmentSlot atk
	$VALUES k
	CHEST e
	FEET c
	HEAD f
	LEGS d
	MAINHAND a
	OFFHAND b
	filterFlag i
	index h
	name j
	type g
	$values ()[Lnet/minecraft/world/entity/EquipmentSlot; e
	byName (Ljava/lang/String;)Lnet/minecraft/world/entity/EquipmentSlot; a
	byTypeAndIndex (Lnet/minecraft/world/entity/EquipmentSlot$Type;I)Lnet/minecraft/world/entity/EquipmentSlot; a
	getFilterFlag ()I c
	getIndex ()I b
	getIndex (I)I a
	getName ()Ljava/lang/String; d
	getType ()Lnet/minecraft/world/entity/EquipmentSlot$Type; a
net/minecraft/world/entity/EquipmentSlot$Type atk$a
	$VALUES c
	ARMOR b
	HAND a
	$values ()[Lnet/minecraft/world/entity/EquipmentSlot$Type; a
net/minecraft/world/entity/ExperienceOrb atl
	ENTITY_SCAN_PERIOD c
	LIFETIME b
	MAX_FOLLOW_DIST d
	ORB_GROUPS_PER_AREA e
	ORB_MERGE_DISTANCE f
	age ao
	count ar
	followingPlayer as
	health ap
	value aq
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	award (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;I)V a
	canMerge (Lnet/minecraft/world/entity/ExperienceOrb;)Z a
	canMerge (Lnet/minecraft/world/entity/ExperienceOrb;II)Z a
	defineSynchedData ()V a_
	doWaterSplashEffect ()V aT
	durabilityToXp (I)I b
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; P
	getExperienceValue (I)I a
	getIcon ()I i
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aI
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; cJ
	getValue ()I h
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isAttackable ()Z ca
	merge (Lnet/minecraft/world/entity/ExperienceOrb;)V b
	playerTouch (Lnet/minecraft/world/entity/player/Player;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	repairPlayerItems (Lnet/minecraft/world/entity/player/Player;I)I a
	scanForEntities ()V j
	setUnderwaterMovement ()V l
	tick ()V k
	tryMergeToExisting (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;I)Z b
	xpToDurability (I)I c
net/minecraft/world/entity/FlyingMob atm
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	onClimbable ()Z b_
	travel (Lnet/minecraft/world/phys/Vec3;)V g
net/minecraft/world/entity/GlowSquid atn
	DATA_DARK_TICKS_REMAINING bW
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V u_
	defineSynchedData ()V a_
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getDarkTicksRemaining ()I t
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getInkParticle ()Lnet/minecraft/core/particles/ParticleOptions; n
	getSquirtSound ()Lnet/minecraft/sounds/SoundEvent; p
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setDarkTicks (I)V b
net/minecraft/world/entity/HumanoidArm ato
	$VALUES d
	LEFT a
	RIGHT b
	name c
	$values ()[Lnet/minecraft/world/entity/HumanoidArm; c
	getName ()Lnet/minecraft/network/chat/Component; b
	getOpposite ()Lnet/minecraft/world/entity/HumanoidArm; a
net/minecraft/world/entity/ItemBasedSteering atp
	MAX_BOOST_TIME e
	MIN_BOOST_TIME d
	boostTime b
	boostTimeAccessor g
	boostTimeTotal c
	boosting a
	entityData f
	hasSaddleAccessor h
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	boost (Ljava/util/Random;)Z a
	hasSaddle ()Z b
	onSynced ()V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	setSaddle (Z)V a
net/minecraft/world/entity/ItemSteerable atq
	boost ()Z a
	getSteeringSpeed ()F b
	travel (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/ItemBasedSteering;Lnet/minecraft/world/phys/Vec3;)Z a
	travelWithInput (Lnet/minecraft/world/phys/Vec3;)V a
net/minecraft/world/entity/LerpingModel atr
	getModelRotationValues ()Ljava/util/Map; a
net/minecraft/world/entity/LightningBolt ats
	DAMAGE_RADIUS d
	DETECTION_RADIUS e
	START_LIFE c
	blocksSetOnFire as
	cause aq
	flashes ao
	hitEntities ar
	life f
	seed b
	visualOnly ap
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	clearCopperOnLightningStrike (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V b
	defineSynchedData ()V a_
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; P
	getBlocksSetOnFire ()I i
	getCause ()Lnet/minecraft/server/level/ServerPlayer; h
	getHitEntities ()Ljava/util/stream/Stream; j
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; cJ
	getStrikePosition ()Lnet/minecraft/core/BlockPos; n
	powerLightningRod ()V l
	randomStepCleaningCopper (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Ljava/util/Optional; c
	randomWalkCleaningCopper (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;I)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setCause (Lnet/minecraft/server/level/ServerPlayer;)V b
	setVisualOnly (Z)V a
	shouldRenderAtSqrDistance (D)Z a
	spawnFire (I)V a
	tick ()V k
net/minecraft/world/entity/LivingEntity att
	ARMOR_SLOTS ap
	ARMOR_SLOT_OFFSET ar
	DAMAGE_SOURCE_TIMEOUT bE
	DATA_ARROW_COUNT_ID bM
	DATA_EFFECT_AMBIENCE_ID bL
	DATA_EFFECT_COLOR_ID bK
	DATA_HEALTH_ID bJ
	DATA_LIVING_ENTITY_FLAGS aB
	DATA_STINGER_COUNT_ID bN
	DEATH_DURATION aw
	DEFAULT_BASE_GRAVITY av
	DEFAULT_EYE_HEIGHT aC
	EQUIPMENT_SLOT_OFFSET aq
	EXTRA_RENDER_CULLING_SIZE_WITH_BIG_HAT aE
	FREE_FALL_EVENTS_PER_ELYTRA_BREAK bH
	HAND_SLOTS ao
	LIVING_ENTITY_FLAG_IS_USING ay
	LIVING_ENTITY_FLAG_OFF_HAND az
	LIVING_ENTITY_FLAG_SPIN_ATTACK aA
	MAX_LINE_OF_SIGHT_TEST_RANGE bI
	MIN_MOVEMENT_DISTANCE au
	PLAYER_HURT_EXPERIENCE_TIME at
	SLEEPING_DIMENSIONS aD
	SLEEPING_POS_ID bO
	SPEED_MODIFIER_POWDER_SNOW_UUID d
	SPEED_MODIFIER_SOUL_SPEED_UUID c
	SPEED_MODIFIER_SPRINTING e
	SPEED_MODIFIER_SPRINTING_UUID b
	SWING_DURATION as
	TICKS_PER_ELYTRA_FREE_FALL_EVENT bG
	USE_ITEM_INTERVAL ax
	WAIT_TICKS_BEFORE_ITEM_USE_EFFECTS bF
	absorptionAmount cc
	activeEffects bR
	animStep bi
	animStepO bj
	animationPosition aT
	animationSpeed aS
	animationSpeedOld aR
	attackAnim aP
	attackStrengthTicker aQ
	attributes bP
	autoSpinAttackTicks bC
	brain bD
	combatTracker bQ
	dead be
	deathScore bl
	deathTime aN
	discardFriction bU
	effectsDirty bV
	fallFlyTicks bB
	flyingSpeed bb
	hurtDir aM
	hurtDuration aL
	hurtTime aK
	invulnerableDuration aU
	jumping bn
	lastArmorItemStacks bT
	lastClimbablePos ce
	lastDamageSource cf
	lastDamageStamp cg
	lastHandItemStacks bS
	lastHurt bm
	lastHurtByMob bW
	lastHurtByMobTimestamp bX
	lastHurtByPlayer bc
	lastHurtByPlayerTime bd
	lastHurtMob bY
	lastHurtMobTimestamp bZ
	lastPos cd
	lerpHeadSteps by
	lerpSteps br
	lerpX bs
	lerpXRot bw
	lerpY bt
	lerpYRot bv
	lerpZ bu
	lyHeadRot bx
	noActionTime bf
	noJumpDelay cb
	oAttackAnim aO
	oRun bg
	removeArrowTime aI
	removeStingerTime aJ
	rotA aW
	rotOffs bk
	run bh
	speed ca
	swimAmount ch
	swimAmountO ci
	swingTime aH
	swinging aF
	swingingArm aG
	timeOffs aV
	useItem bz
	useItemRemaining bA
	xxa bo
	yBodyRot aX
	yBodyRotO aY
	yHeadRot aZ
	yHeadRotO ba
	yya bp
	zza bq
	actuallyHurt (Lnet/minecraft/world/damagesource/DamageSource;F)V f
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addEatEffect (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)V a
	addEffect (Lnet/minecraft/world/effect/MobEffectInstance;)Z b
	addEffect (Lnet/minecraft/world/effect/MobEffectInstance;Lnet/minecraft/world/entity/Entity;)Z b
	aiStep ()V u_
	animateHurt ()V bv
	areAllEffectsAmbient (Ljava/util/Collection;)Z c
	attackable ()Z eQ
	baseTick ()V ai
	blockUsingShield (Lnet/minecraft/world/entity/LivingEntity;)V d
	blockedByShield (Lnet/minecraft/world/entity/LivingEntity;)V e
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; dp
	breakItem (Lnet/minecraft/world/item/ItemStack;)V j
	broadcastBreakEvent (Lnet/minecraft/world/InteractionHand;)V d
	broadcastBreakEvent (Lnet/minecraft/world/entity/EquipmentSlot;)V c
	calculateEntityAnimation (Lnet/minecraft/world/entity/LivingEntity;Z)V a
	calculateFallDamage (FF)I d
	canAttack (Lnet/minecraft/world/entity/LivingEntity;)Z c
	canAttack (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;)Z a
	canAttackType (Lnet/minecraft/world/entity/EntityType;)Z a
	canBeAffected (Lnet/minecraft/world/effect/MobEffectInstance;)Z c
	canBeSeenAsEnemy ()Z dN
	canBeSeenByAnyone ()Z dO
	canBreatheUnderwater ()Z dr
	canFreeze ()Z dg
	canSpawnSoulSpeedParticle ()Z ds
	canStandOnFluid (Lnet/minecraft/world/level/material/Fluid;)Z a
	canTakeItem (Lnet/minecraft/world/item/ItemStack;)Z g
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	checkAutoSpinAttack (Lnet/minecraft/world/phys/AABB;Lnet/minecraft/world/phys/AABB;)V a
	checkBedExists ()Z G
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	checkTotemDeathProtection (Lnet/minecraft/world/damagesource/DamageSource;)Z g
	clearSleepingPos ()V eT
	collectEquipmentChanges ()Ljava/util/Map; z
	completeUsingItem ()V s
	createEquipmentSlotAccess (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/entity/SlotAccess; a
	createLivingAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; dq
	createLootContext (ZLnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/world/level/storage/loot/LootContext$Builder; a
	createWitherRose (Lnet/minecraft/world/entity/LivingEntity;)V f
	decreaseAirSupply (I)I m
	defineSynchedData ()V a_
	detectEquipmentUpdates ()V x
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	dismountVehicle (Lnet/minecraft/world/entity/Entity;)V a
	doAutoAttackOnTouch (Lnet/minecraft/world/entity/LivingEntity;)V g
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	doPush (Lnet/minecraft/world/entity/Entity;)V A
	dropAllDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;)V f
	dropCustomDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;IZ)V a
	dropEquipment ()V dX
	dropExperience ()V dY
	dropFromLootTable (Lnet/minecraft/world/damagesource/DamageSource;Z)V a
	eat (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	entityEventForEquipmentBreak (Lnet/minecraft/world/entity/EquipmentSlot;)B f
	equipEventAndSound (Lnet/minecraft/world/item/ItemStack;)V c
	forceAddEffect (Lnet/minecraft/world/effect/MobEffectInstance;Lnet/minecraft/world/entity/Entity;)V c
	getAbsorptionAmount ()F eB
	getActiveEffects ()Ljava/util/Collection; dR
	getActiveEffectsMap ()Ljava/util/Map; dS
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; P
	getArmorCoverPercentage ()F en
	getArmorSlots ()Ljava/lang/Iterable; bx
	getArmorValue ()I ec
	getArrowCount ()I eg
	getAttackAnim (F)F s
	getAttribute (Lnet/minecraft/world/entity/ai/attributes/Attribute;)Lnet/minecraft/world/entity/ai/attributes/AttributeInstance; a
	getAttributeBaseValue (Lnet/minecraft/world/entity/ai/attributes/Attribute;)D c
	getAttributeValue (Lnet/minecraft/world/entity/ai/attributes/Attribute;)D b
	getAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeMap; ej
	getBedOrientation ()Lnet/minecraft/core/Direction; eW
	getBlockSpeedFactor ()F ax
	getBoundingBoxForCulling ()Lnet/minecraft/world/phys/AABB; cs
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; do
	getCombatTracker ()Lnet/minecraft/world/damagesource/CombatTracker; ed
	getCurrentSwingDuration ()I q
	getDamageAfterArmorAbsorb (Lnet/minecraft/world/damagesource/DamageSource;F)F d
	getDamageAfterMagicAbsorb (Lnet/minecraft/world/damagesource/DamageSource;F)F e
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getDismountPoses ()Lcom/google/common/collect/ImmutableList; eR
	getDrinkingSound (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/sounds/SoundEvent; d
	getEatingSound (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/sounds/SoundEvent; e
	getEffect (Lnet/minecraft/world/effect/MobEffect;)Lnet/minecraft/world/effect/MobEffectInstance; b
	getEquipmentSlot (I)Lnet/minecraft/world/entity/EquipmentSlot; c
	getEquipmentSlotForItem (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/entity/EquipmentSlot; i
	getExperienceReward (Lnet/minecraft/world/entity/player/Player;)I d
	getEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F a
	getFallDamageSound (I)Lnet/minecraft/sounds/SoundEvent; p
	getFallFlyingTicks ()I eO
	getFluidFallingAdjustedMovement (DZLnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; a
	getFrictionInfluencedSpeed (F)F u
	getHealth ()F dU
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getItemBySlot (Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/item/ItemStack; b
	getItemInHand (Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/item/ItemStack; b
	getJumpPower ()F er
	getKillCredit ()Lnet/minecraft/world/entity/LivingEntity; ee
	getLastArmorItem (Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/item/ItemStack; d
	getLastClimbablePos ()Ljava/util/Optional; ea
	getLastDamageSource ()Lnet/minecraft/world/damagesource/DamageSource; dW
	getLastHandItem (Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/item/ItemStack; e
	getLastHurtByMob ()Lnet/minecraft/world/entity/LivingEntity; dG
	getLastHurtByMobTimestamp ()I dH
	getLastHurtMob ()Lnet/minecraft/world/entity/LivingEntity; dI
	getLastHurtMobTimestamp ()I dJ
	getLocalBoundsForPose (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/phys/AABB; f
	getLootTable ()Lnet/minecraft/resources/ResourceLocation; dZ
	getMainArm ()Lnet/minecraft/world/entity/HumanoidArm; eD
	getMainHandItem ()Lnet/minecraft/world/item/ItemStack; el
	getMaxHealth ()F ef
	getMobType ()Lnet/minecraft/world/entity/MobType; ek
	getNoActionTime ()I dK
	getOffhandItem ()Lnet/minecraft/world/item/ItemStack; em
	getProjectile (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; h
	getRandom ()Ljava/util/Random; dF
	getRelativePortalPosition (Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/BlockUtil$FoundRectangle;)Lnet/minecraft/world/phys/Vec3; a
	getScale ()F dz
	getSleepingPos ()Ljava/util/Optional; eS
	getSlot (I)Lnet/minecraft/world/entity/SlotAccess; k
	getSoundVolume ()F eo
	getSpeed ()F ev
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getStingerCount ()I eh
	getSwimAmount (F)F a
	getTicksUsingItem ()I eI
	getUseItem ()Lnet/minecraft/world/item/ItemStack; eG
	getUseItemRemainingTicks ()I eH
	getUsedItemHand ()Lnet/minecraft/world/InteractionHand; eF
	getViewYRot (F)F g
	getVisibilityPercent (Lnet/minecraft/world/entity/Entity;)D y
	getVoicePitch ()F ep
	getWaterSlowDown ()F eu
	getYHeadRot ()F bZ
	goDownInWater ()V et
	handleEntityEvent (B)V a
	handleEquipmentChanges (Ljava/util/Map;)V b
	handleHandSwap (Ljava/util/Map;)V a
	handleOnClimbable (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; i
	handleRelativeFrictionAndCalculateMovement (Lnet/minecraft/world/phys/Vec3;F)Lnet/minecraft/world/phys/Vec3; a
	hasEffect (Lnet/minecraft/world/effect/MobEffect;)Z a
	hasItemInSlot (Lnet/minecraft/world/entity/EquipmentSlot;)Z a
	hasLineOfSight (Lnet/minecraft/world/entity/Entity;)Z B
	heal (F)V b
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	hurtArmor (Lnet/minecraft/world/damagesource/DamageSource;F)V b
	hurtCurrentlyUsedShield (F)V q
	hurtHelmet (Lnet/minecraft/world/damagesource/DamageSource;F)V c
	increaseAirSupply (I)I n
	isAffectedByFluids ()Z dA
	isAffectedByPotions ()Z eP
	isAlive ()Z bg
	isAlwaysExperienceDropper ()Z dE
	isAutoSpinAttack ()Z ez
	isBaby ()Z w_
	isBlocking ()Z eL
	isCurrentlyGlowing ()Z bO
	isDamageSourceBlocked (Lnet/minecraft/world/damagesource/DamageSource;)Z e
	isDeadOrDying ()Z dV
	isEffectiveAi ()Z eA
	isFallFlying ()Z eN
	isHolding (Ljava/util/function/Predicate;)Z b
	isHolding (Lnet/minecraft/world/item/Item;)Z a
	isImmobile ()Z eq
	isInWall ()Z bh
	isInvertedHealAndHarm ()Z dT
	isPickable ()Z bc
	isPushable ()Z bd
	isSensitiveToWater ()Z ew
	isSleeping ()Z eU
	isSuppressingSlidingDownLadder ()Z eM
	isUsingItem ()Z eE
	isVisuallySwimming ()Z bL
	jumpFromGround ()V es
	jumpInLiquid (Lnet/minecraft/tags/Tag;)V c
	kill ()V ab
	knockback (DDD)V p
	lerpHeadTo (FI)V a
	lerpTo (DDDFFIZ)V a
	lookAt (Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor;Lnet/minecraft/world/phys/Vec3;)V a
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	makePoofParticles ()V v
	markHurt ()V ba
	onChangedBlock (Lnet/minecraft/core/BlockPos;)V c
	onClimbable ()Z b_
	onEffectAdded (Lnet/minecraft/world/effect/MobEffectInstance;Lnet/minecraft/world/entity/Entity;)V a
	onEffectRemoved (Lnet/minecraft/world/effect/MobEffectInstance;)V a
	onEffectUpdated (Lnet/minecraft/world/effect/MobEffectInstance;ZLnet/minecraft/world/entity/Entity;)V a
	onEnterCombat ()V h
	onItemPickup (Lnet/minecraft/world/entity/item/ItemEntity;)V a
	onLeaveCombat ()V i
	onSoulSpeedBlock ()Z du
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	outOfWorld ()V aq
	playBlockFallSound ()V eb
	playHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)V d
	push (Lnet/minecraft/world/entity/Entity;)V g
	pushEntities ()V ey
	randomTeleport (DDDZ)Z a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	recreateFromPacket (Lnet/minecraft/network/protocol/game/ClientboundAddMobPacket;)V a
	releaseUsingItem ()V eJ
	removeAllEffects ()Z dQ
	removeEffect (Lnet/minecraft/world/effect/MobEffect;)Z d
	removeEffectNoUpdate (Lnet/minecraft/world/effect/MobEffect;)Lnet/minecraft/world/effect/MobEffectInstance; c
	removeEffectParticles ()V dP
	removeFrost ()V dx
	removeSoulSpeed ()V dv
	resetForwardDirectionOfRelativePortalPosition (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; h
	rideTick ()V bj
	rideableUnderWater ()Z bC
	serverAiStep ()V ex
	setAbsorptionAmount (F)V t
	setArrowCount (I)V q
	setDiscardFriction (Z)V p
	setHealth (F)V c
	setItemInHand (Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/item/ItemStack;)V a
	setItemSlot (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V a
	setJumping (Z)V q
	setLastArmorItem (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V b
	setLastHandItem (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V c
	setLastHurtByMob (Lnet/minecraft/world/entity/LivingEntity;)V a
	setLastHurtByPlayer (Lnet/minecraft/world/entity/player/Player;)V e
	setLastHurtMob (Lnet/minecraft/world/entity/Entity;)V x
	setLivingEntityFlag (IZ)V c
	setNoActionTime (I)V o
	setOnGround (Z)V c
	setPosToBed (Lnet/minecraft/core/BlockPos;)V a
	setRecordPlayingNearby (Lnet/minecraft/core/BlockPos;Z)V a
	setSleepingPos (Lnet/minecraft/core/BlockPos;)V e
	setSpeed (F)V r
	setSprinting (Z)V g
	setStingerCount (I)V r
	setYBodyRot (F)V m
	setYHeadRot (F)V l
	shouldDiscardFriction ()Z dL
	shouldDropExperience ()Z dC
	shouldDropLoot ()Z dD
	shouldRemoveSoulSpeed (Lnet/minecraft/world/level/block/state/BlockState;)Z b
	shouldShowName ()Z cn
	shouldTriggerItemUseEffects ()Z D
	spawnItemParticles (Lnet/minecraft/world/item/ItemStack;I)V a
	spawnSoulSpeedParticle ()V dt
	startAutoSpinAttack (I)V s
	startSleeping (Lnet/minecraft/core/BlockPos;)V b
	startUsingItem (Lnet/minecraft/world/InteractionHand;)V c
	stopRiding ()V m
	stopSleeping ()V eV
	stopUsingItem ()V eK
	swapHandItems ()V w
	swing (Lnet/minecraft/world/InteractionHand;)V a
	swing (Lnet/minecraft/world/InteractionHand;Z)V a
	take (Lnet/minecraft/world/entity/Entity;I)V a
	tick ()V k
	tickDeath ()V dB
	tickEffects ()V dM
	tickHeadTurn (FF)F e
	trapdoorUsableAsLadder (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z c
	travel (Lnet/minecraft/world/phys/Vec3;)V g
	triggerItemUseEffects (Lnet/minecraft/world/item/ItemStack;I)V b
	tryAddFrost ()V dy
	tryAddSoulSpeed ()V dw
	updateEffectVisibility ()V eC
	updateFallFlying ()V A
	updateGlowingStatus ()V n
	updateInvisibilityStatus ()V C
	updateSwimAmount ()V F
	updateSwingTime ()V ei
	updateUsingItem (Lnet/minecraft/world/item/ItemStack;)V a
	updatingUsingItem ()V B
	verifyEquippedItem (Lnet/minecraft/world/item/ItemStack;)V f
net/minecraft/world/entity/Marker atu
	DATA_TAG b
	data c
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addPassenger (Lnet/minecraft/world/entity/Entity;)V m
	defineSynchedData ()V a_
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; P
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	tick ()V k
net/minecraft/world/entity/Mob atv
	DATA_MOB_FLAGS_ID b
	LEASH_TAG bH
	MAX_ENCHANTED_ARMOR_CHANCE bF
	MAX_ENCHANTED_WEAPON_CHANCE bG
	MAX_PICKUP_LOOT_CHANCE bE
	MAX_WEARING_ARMOR_CHANCE f
	MOB_FLAG_AGGRESSIVE e
	MOB_FLAG_LEFTHANDED d
	MOB_FLAG_NO_AI c
	PICKUP_REACH bS
	ambientSoundTime bI
	armorDropChances bR
	armorItems bX
	bodyRotationControl bT
	canPickUpLoot bY
	delayedLeashHolderId ce
	goalSelector bO
	handDropChances bQ
	handItems bW
	jumpControl bM
	leashHolder cd
	leashInfoTag cf
	lookControl bK
	lootTable cb
	lootTableSeed cc
	moveControl bL
	navigation bN
	pathfindingMalus ca
	persistenceRequired bZ
	restrictCenter cg
	restrictRadius ch
	sensing bV
	target bU
	targetSelector bP
	xpReward bJ
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V u_
	ate ()V I
	baseTick ()V ai
	canAttackType (Lnet/minecraft/world/entity/EntityType;)Z a
	canBeControlledByRider ()Z fc
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	canCutCorner (Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)Z b
	canFireProjectileWeapon (Lnet/minecraft/world/item/ProjectileWeaponItem;)Z a
	canHoldItem (Lnet/minecraft/world/item/ItemStack;)Z k
	canPickUpLoot ()Z fe
	canReplaceCurrentItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	canReplaceEqualItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z b
	canTakeItem (Lnet/minecraft/world/item/ItemStack;)Z g
	checkAndHandleImportantInteractions (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; c
	checkDespawn ()V de
	checkMobSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z a
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	checkSpawnRules (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;)Z a
	clearRestriction ()V fj
	convertTo (Lnet/minecraft/world/entity/EntityType;Z)Lnet/minecraft/world/entity/Mob; a
	createBodyControl ()Lnet/minecraft/world/entity/ai/control/BodyRotationControl; z
	createLootContext (ZLnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/world/level/storage/loot/LootContext$Builder; a
	createMobAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; w
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; a
	customServerAiStep ()V eX
	defineSynchedData ()V a_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	dropCustomDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;IZ)V a
	dropFromLootTable (Lnet/minecraft/world/damagesource/DamageSource;Z)V a
	dropLeash (ZZ)V a
	enchantSpawnedArmor (FLnet/minecraft/world/entity/EquipmentSlot;)V a
	enchantSpawnedWeapon (F)V x
	equipItemIfPossible (Lnet/minecraft/world/item/ItemStack;)Z j
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getAmbientSoundInterval ()I J
	getArmorSlots ()Ljava/lang/Iterable; bx
	getDefaultLootTable ()Lnet/minecraft/resources/ResourceLocation; N
	getEquipmentDropChance (Lnet/minecraft/world/entity/EquipmentSlot;)F e
	getEquipmentForSlot (Lnet/minecraft/world/entity/EquipmentSlot;I)Lnet/minecraft/world/item/Item; a
	getExperienceReward (Lnet/minecraft/world/entity/player/Player;)I d
	getHandSlots ()Ljava/lang/Iterable; bw
	getHeadRotSpeed ()I fa
	getItemBySlot (Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/item/ItemStack; b
	getJumpControl ()Lnet/minecraft/world/entity/ai/control/JumpControl; D
	getLeashHolder ()Lnet/minecraft/world/entity/Entity; fn
	getLookControl ()Lnet/minecraft/world/entity/ai/control/LookControl; A
	getLootTable ()Lnet/minecraft/resources/ResourceLocation; dZ
	getMainArm ()Lnet/minecraft/world/entity/HumanoidArm; eD
	getMaxFallDistance ()I ce
	getMaxHeadXRot ()I eY
	getMaxHeadYRot ()I eZ
	getMaxSpawnClusterSize ()I fb
	getMeleeAttackRangeSqr (Lnet/minecraft/world/entity/LivingEntity;)D i
	getMoveControl ()Lnet/minecraft/world/entity/ai/control/MoveControl; B
	getNavigation ()Lnet/minecraft/world/entity/ai/navigation/PathNavigation; F
	getPathfindingMalus (Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)F a
	getPickResult ()Lnet/minecraft/world/item/ItemStack; df
	getRestrictCenter ()Lnet/minecraft/core/BlockPos; fh
	getRestrictRadius ()F fi
	getSensing ()Lnet/minecraft/world/entity/ai/sensing/Sensing; G
	getTarget ()Lnet/minecraft/world/entity/LivingEntity; H
	handleEntityEvent (B)V a
	hasRestriction ()Z fk
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	isAggressive ()Z fq
	isControlledByLocalInstance ()Z cH
	isEffectiveAi ()Z eA
	isLeashed ()Z fm
	isLeftHanded ()Z fp
	isMaxGroupSizeReached (I)Z c
	isNoAi ()Z fo
	isPersistenceRequired ()Z ff
	isSunBurnTick ()Z fr
	isWithinRestriction ()Z fg
	isWithinRestriction (Lnet/minecraft/core/BlockPos;)Z a
	jumpInLiquid (Lnet/minecraft/tags/Tag;)V c
	lookAt (Lnet/minecraft/world/entity/Entity;FF)V a
	maybeDisableShield (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V a
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	onOffspringSpawnedFromEgg (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Mob;)V a
	pickUpItem (Lnet/minecraft/world/entity/item/ItemEntity;)V b
	playAmbientSound ()V K
	playHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)V d
	populateDefaultEquipmentEnchantments (Lnet/minecraft/world/DifficultyInstance;)V b
	populateDefaultEquipmentSlots (Lnet/minecraft/world/DifficultyInstance;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V v
	removeAfterChangingDimensions ()V cc
	removeFreeWill ()V fs
	removeWhenFarAway (D)Z h
	requiresCustomPersistence ()Z O
	resetAmbientSoundTime ()V n
	restoreLeashFromSave ()V ft
	restrictTo (Lnet/minecraft/core/BlockPos;I)V a
	rotlerp (FFF)F a
	sendDebugPackets ()V R
	serverAiStep ()V ex
	setAggressive (Z)V u
	setBaby (Z)V a
	setCanPickUpLoot (Z)V r
	setDelayedLeashHolderId (I)V d
	setDropChance (Lnet/minecraft/world/entity/EquipmentSlot;F)V a
	setGuaranteedDrop (Lnet/minecraft/world/entity/EquipmentSlot;)V d
	setItemSlot (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V a
	setItemSlotAndDropWhenKilled (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V b
	setLeashedTo (Lnet/minecraft/world/entity/Entity;Z)V b
	setLeftHanded (Z)V t
	setNoAi (Z)V s
	setPathfindingMalus (Lnet/minecraft/world/level/pathfinder/BlockPathTypes;F)V a
	setPersistenceRequired ()V fd
	setSpeed (F)V r
	setTarget (Lnet/minecraft/world/entity/LivingEntity;)V h
	setXxa (F)V w
	setYya (F)V v
	setZza (F)V u
	shouldDespawnInPeaceful ()Z Q
	shouldPassengersInheritMalus ()Z x
	spawnAnim ()V L
	startRiding (Lnet/minecraft/world/entity/Entity;Z)Z a
	tick ()V k
	tickHeadTurn (FF)F e
	tickLeash ()V fl
	updateControlFlags ()V M
	wantsToPickUp (Lnet/minecraft/world/item/ItemStack;)Z l
net/minecraft/world/entity/MobCategory atw
	$VALUES p
	AMBIENT c
	BY_NAME i
	CODEC h
	CREATURE b
	MISC g
	MONSTER a
	UNDERGROUND_WATER_CREATURE d
	WATER_AMBIENT f
	WATER_CREATURE e
	despawnDistance o
	isFriendly k
	isPersistent l
	max j
	name m
	noDespawnDistance n
	$values ()[Lnet/minecraft/world/entity/MobCategory; h
	byName (Ljava/lang/String;)Lnet/minecraft/world/entity/MobCategory; a
	getDespawnDistance ()I f
	getMaxInstancesPerChunk ()I b
	getName ()Ljava/lang/String; a
	getNoDespawnDistance ()I g
	getSerializedName ()Ljava/lang/String; c
	isFriendly ()Z d
	isPersistent ()Z e
net/minecraft/world/entity/MobSpawnType atx
	$VALUES q
	BREEDING e
	BUCKET l
	CHUNK_GENERATION b
	COMMAND n
	CONVERSION i
	DISPENSER o
	EVENT h
	JOCKEY g
	MOB_SUMMONED f
	NATURAL a
	PATROL p
	REINFORCEMENT j
	SPAWNER c
	SPAWN_EGG m
	STRUCTURE d
	TRIGGERED k
	$values ()[Lnet/minecraft/world/entity/MobSpawnType; a
net/minecraft/world/entity/MobType aty
	ARTHROPOD c
	ILLAGER d
	UNDEAD b
	UNDEFINED a
	WATER e
net/minecraft/world/entity/MoverType atz
	$VALUES f
	PISTON c
	PLAYER b
	SELF a
	SHULKER e
	SHULKER_BOX d
	$values ()[Lnet/minecraft/world/entity/MoverType; a
net/minecraft/world/entity/NeutralMob aua
	TAG_ANGER_TIME a_
	TAG_ANGRY_AT b_
	addPersistentAngerSaveData (Lnet/minecraft/nbt/CompoundTag;)V c
	canAttack (Lnet/minecraft/world/entity/LivingEntity;)Z c
	forgetCurrentTargetAndRefreshUniversalAnger ()V H_
	getLastHurtByMob ()Lnet/minecraft/world/entity/LivingEntity; dG
	getPersistentAngerTarget ()Ljava/util/UUID; b
	getRemainingPersistentAngerTime ()I a
	getTarget ()Lnet/minecraft/world/entity/LivingEntity; H
	isAngry ()Z G_
	isAngryAt (Lnet/minecraft/world/entity/LivingEntity;)Z a_
	isAngryAtAllPlayers (Lnet/minecraft/world/level/Level;)Z b
	playerDied (Lnet/minecraft/world/entity/player/Player;)V a_
	readPersistentAngerSaveData (Lnet/minecraft/world/level/Level;Lnet/minecraft/nbt/CompoundTag;)V a
	setLastHurtByMob (Lnet/minecraft/world/entity/LivingEntity;)V a
	setLastHurtByPlayer (Lnet/minecraft/world/entity/player/Player;)V e
	setPersistentAngerTarget (Ljava/util/UUID;)V a
	setRemainingPersistentAngerTime (I)V a
	setTarget (Lnet/minecraft/world/entity/LivingEntity;)V h
	startPersistentAngerTimer ()V c
	stopBeingAngry ()V F_
	updatePersistentAnger (Lnet/minecraft/server/level/ServerLevel;Z)V a
net/minecraft/world/entity/OwnableEntity aub
	getOwner ()Lnet/minecraft/world/entity/Entity; e
	getOwnerUUID ()Ljava/util/UUID; d
net/minecraft/world/entity/PathfinderMob auc
	checkSpawnRules (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;)Z a
	followLeashSpeed ()D fu
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;)F f
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	isPathFinding ()Z ft
	onLeashDistance (F)V y
	tickLeash ()V fl
net/minecraft/world/entity/PlayerRideable aud
net/minecraft/world/entity/PlayerRideableJumping aue
	canJump ()Z a
	handleStartJump (I)V b
	handleStopJump ()V b
	onPlayerJump (I)V a
net/minecraft/world/entity/Pose auf
	$VALUES i
	CROUCHING f
	DYING h
	FALL_FLYING b
	LONG_JUMPING g
	SLEEPING c
	SPIN_ATTACK e
	STANDING a
	SWIMMING d
	$values ()[Lnet/minecraft/world/entity/Pose; a
net/minecraft/world/entity/PowerableMob aug
	isPowered ()Z a
net/minecraft/world/entity/ReputationEventHandler auh
	onReputationEventFrom (Lnet/minecraft/world/entity/ai/village/ReputationEventType;Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/world/entity/Saddleable aui
	equipSaddle (Lnet/minecraft/sounds/SoundSource;)V a
	isSaddleable ()Z c
	isSaddled ()Z d
net/minecraft/world/entity/Shearable auj
	readyForShearing ()Z a
	shear (Lnet/minecraft/sounds/SoundSource;)V a
net/minecraft/world/entity/SlotAccess auk
	NULL a
	forContainer (Lnet/minecraft/world/Container;I)Lnet/minecraft/world/entity/SlotAccess; a
	forContainer (Lnet/minecraft/world/Container;ILjava/util/function/Predicate;)Lnet/minecraft/world/entity/SlotAccess; a
	forEquipmentSlot (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/entity/SlotAccess; a
	forEquipmentSlot (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/EquipmentSlot;Ljava/util/function/Predicate;)Lnet/minecraft/world/entity/SlotAccess; a
	get ()Lnet/minecraft/world/item/ItemStack; a
	set (Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/world/entity/SpawnGroupData aul
net/minecraft/world/entity/SpawnPlacements aum
	DATA_BY_TYPE a
	checkSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z a
	getHeightmapType (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/world/level/levelgen/Heightmap$Types; b
	getPlacementType (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/world/entity/SpawnPlacements$Type; a
	register (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/entity/SpawnPlacements$Type;Lnet/minecraft/world/level/levelgen/Heightmap$Types;Lnet/minecraft/world/entity/SpawnPlacements$SpawnPredicate;)V a
net/minecraft/world/entity/SpawnPlacements$Data aum$a
	heightMap a
	placement b
	predicate c
net/minecraft/world/entity/SpawnPlacements$SpawnPredicate aum$b
net/minecraft/world/entity/SpawnPlacements$Type aum$c
	$VALUES e
	IN_LAVA d
	IN_WATER b
	NO_RESTRICTIONS c
	ON_GROUND a
	$values ()[Lnet/minecraft/world/entity/SpawnPlacements$Type; a
net/minecraft/world/entity/TamableAnimal aun
	DATA_FLAGS_ID bS
	DATA_OWNERUUID_ID bT
	orderedToSit bV
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canAttack (Lnet/minecraft/world/entity/LivingEntity;)Z c
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	defineSynchedData ()V a_
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	getOwner ()Lnet/minecraft/world/entity/Entity; e
	getOwner ()Lnet/minecraft/world/entity/LivingEntity; fw
	getOwnerUUID ()Ljava/util/UUID; d
	getTeam ()Lnet/minecraft/world/scores/Team; bR
	handleEntityEvent (B)V a
	isAlliedTo (Lnet/minecraft/world/entity/Entity;)Z p
	isInSittingPose ()Z fv
	isOrderedToSit ()Z fx
	isOwnedBy (Lnet/minecraft/world/entity/LivingEntity;)Z j
	isTame ()Z p
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	reassessTameGoals ()V t
	setInSittingPose (Z)V x
	setOrderedToSit (Z)V y
	setOwnerUUID (Ljava/util/UUID;)V b
	setTame (Z)V w
	spawnTamingParticles (Z)V v
	tame (Lnet/minecraft/world/entity/player/Player;)V f
	wantsToAttack (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/ai/Brain auo
	LOGGER a
	SCHEDULE_UPDATE_DELAY c
	activeActivities k
	activityMemoriesToEraseWhenStopped i
	activityRequirements h
	availableBehaviorsByPriority f
	codec b
	coreActivities j
	defaultActivity l
	lastScheduleUpdate m
	memories d
	schedule g
	sensors e
	activityRequirementsAreMet (Lnet/minecraft/world/entity/schedule/Activity;)Z f
	addActivity (Lnet/minecraft/world/entity/schedule/Activity;ILcom/google/common/collect/ImmutableList;)V a
	addActivity (Lnet/minecraft/world/entity/schedule/Activity;Lcom/google/common/collect/ImmutableList;)V a
	addActivityAndRemoveMemoriesWhenStopped (Lnet/minecraft/world/entity/schedule/Activity;Lcom/google/common/collect/ImmutableList;Ljava/util/Set;Ljava/util/Set;)V a
	addActivityAndRemoveMemoryWhenStopped (Lnet/minecraft/world/entity/schedule/Activity;ILcom/google/common/collect/ImmutableList;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)V a
	addActivityWithConditions (Lnet/minecraft/world/entity/schedule/Activity;Lcom/google/common/collect/ImmutableList;Ljava/util/Set;)V a
	checkMemory (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Lnet/minecraft/world/entity/ai/memory/MemoryStatus;)Z a
	codec (Ljava/util/Collection;Ljava/util/Collection;)Lcom/mojang/serialization/Codec; b
	copyWithoutBehaviors ()Lnet/minecraft/world/entity/ai/Brain; h
	createPriorityPairs (ILcom/google/common/collect/ImmutableList;)Lcom/google/common/collect/ImmutableList; a
	eraseMemoriesForOtherActivitesThan (Lnet/minecraft/world/entity/schedule/Activity;)V e
	eraseMemory (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)V b
	forgetOutdatedMemories ()V j
	getActiveActivities ()Ljava/util/Set; c
	getActiveNonCoreActivity ()Ljava/util/Optional; f
	getMemories ()Ljava/util/Map; a
	getMemory (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Ljava/util/Optional; c
	getRunningBehaviors ()Ljava/util/List; d
	getSchedule ()Lnet/minecraft/world/entity/schedule/Schedule; b
	getTimeUntilExpiry (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)J d
	hasMemoryValue (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Z a
	isActive (Lnet/minecraft/world/entity/schedule/Activity;)Z c
	isEmptyCollection (Ljava/lang/Object;)Z a
	isMemoryValue (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/lang/Object;)Z b
	memories ()Ljava/util/stream/Stream; i
	provider (Ljava/util/Collection;Ljava/util/Collection;)Lnet/minecraft/world/entity/ai/Brain$Provider; a
	removeAllBehaviors ()V g
	serializeStart (Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/DataResult; a
	setActiveActivity (Lnet/minecraft/world/entity/schedule/Activity;)V d
	setActiveActivityIfPossible (Lnet/minecraft/world/entity/schedule/Activity;)V a
	setActiveActivityToFirstValid (Ljava/util/List;)V a
	setCoreActivities (Ljava/util/Set;)V a
	setDefaultActivity (Lnet/minecraft/world/entity/schedule/Activity;)V b
	setMemory (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/lang/Object;)V a
	setMemory (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/util/Optional;)V a
	setMemoryInternal (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/util/Optional;)V b
	setMemoryWithExpiry (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/lang/Object;J)V a
	setSchedule (Lnet/minecraft/world/entity/schedule/Schedule;)V a
	startEachNonRunningBehavior (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V d
	stopAll (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	tickEachRunningBehavior (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V e
	tickSensors (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V c
	updateActivityFromSchedule (JJ)V a
	useDefaultActivity ()V e
net/minecraft/world/entity/ai/Brain$MemoryValue auo$a
	type a
	value b
	createUnchecked (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/util/Optional;)Lnet/minecraft/world/entity/ai/Brain$MemoryValue; a
	serialize (Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/RecordBuilder;)V a
	setMemoryInternal (Lnet/minecraft/world/entity/ai/Brain;)V a
net/minecraft/world/entity/ai/Brain$Provider auo$b
	codec c
	memoryTypes a
	sensorTypes b
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
net/minecraft/world/entity/ai/attributes/Attribute aup
	MAX_NAME_LENGTH a
	defaultValue b
	descriptionId d
	syncable c
	getDefaultValue ()D a
	getDescriptionId ()Ljava/lang/String; c
	isClientSyncable ()Z b
	sanitizeValue (D)D a
	setSyncable (Z)Lnet/minecraft/world/entity/ai/attributes/Attribute; a
net/minecraft/world/entity/ai/attributes/AttributeInstance auq
	attribute a
	baseValue e
	cachedValue g
	dirty f
	modifierById c
	modifiersByOperation b
	onDirty h
	permanentModifiers d
	addModifier (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier;)V e
	addPermanentModifier (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier;)V c
	addTransientModifier (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier;)V b
	calculateValue ()D h
	getAttribute ()Lnet/minecraft/world/entity/ai/attributes/Attribute; a
	getBaseValue ()D b
	getModifier (Ljava/util/UUID;)Lnet/minecraft/world/entity/ai/attributes/AttributeModifier; a
	getModifiers ()Ljava/util/Set; c
	getModifiers (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation;)Ljava/util/Set; a
	getModifiersOrEmpty (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation;)Ljava/util/Collection; b
	getValue ()D f
	hasModifier (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier;)Z a
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	removeModifier (Ljava/util/UUID;)V b
	removeModifier (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier;)V d
	removeModifiers ()V e
	removePermanentModifier (Ljava/util/UUID;)Z c
	replaceFrom (Lnet/minecraft/world/entity/ai/attributes/AttributeInstance;)V a
	save ()Lnet/minecraft/nbt/CompoundTag; g
	setBaseValue (D)V a
	setDirty ()V d
net/minecraft/world/entity/ai/attributes/AttributeMap aur
	LOGGER a
	attributes b
	dirtyAttributes c
	supplier d
	addTransientAttributeModifiers (Lcom/google/common/collect/Multimap;)V b
	assignValues (Lnet/minecraft/world/entity/ai/attributes/AttributeMap;)V a
	getBaseValue (Lnet/minecraft/world/entity/ai/attributes/Attribute;)D d
	getDirtyAttributes ()Ljava/util/Set; a
	getInstance (Lnet/minecraft/world/entity/ai/attributes/Attribute;)Lnet/minecraft/world/entity/ai/attributes/AttributeInstance; a
	getModifierValue (Lnet/minecraft/world/entity/ai/attributes/Attribute;Ljava/util/UUID;)D b
	getSyncableAttributes ()Ljava/util/Collection; b
	getValue (Lnet/minecraft/world/entity/ai/attributes/Attribute;)D c
	hasAttribute (Lnet/minecraft/world/entity/ai/attributes/Attribute;)Z b
	hasModifier (Lnet/minecraft/world/entity/ai/attributes/Attribute;Ljava/util/UUID;)Z a
	load (Lnet/minecraft/nbt/ListTag;)V a
	onAttributeModified (Lnet/minecraft/world/entity/ai/attributes/AttributeInstance;)V a
	removeAttributeModifiers (Lcom/google/common/collect/Multimap;)V a
	save ()Lnet/minecraft/nbt/ListTag; c
net/minecraft/world/entity/ai/attributes/AttributeModifier aus
	LOGGER a
	amount b
	id e
	nameGetter d
	operation c
	getAmount ()D d
	getId ()Ljava/util/UUID; a
	getName ()Ljava/lang/String; b
	getOperation ()Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation; c
	load (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/ai/attributes/AttributeModifier; a
	save ()Lnet/minecraft/nbt/CompoundTag; e
net/minecraft/world/entity/ai/attributes/AttributeModifier$Operation aus$a
	$VALUES f
	ADDITION a
	MULTIPLY_BASE b
	MULTIPLY_TOTAL c
	OPERATIONS d
	value e
	$values ()[Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation; b
	fromValue (I)Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation; a
	toValue ()I a
net/minecraft/world/entity/ai/attributes/AttributeSupplier aut
	instances a
	builder ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; a
	createInstance (Ljava/util/function/Consumer;Lnet/minecraft/world/entity/ai/attributes/Attribute;)Lnet/minecraft/world/entity/ai/attributes/AttributeInstance; a
	getAttributeInstance (Lnet/minecraft/world/entity/ai/attributes/Attribute;)Lnet/minecraft/world/entity/ai/attributes/AttributeInstance; d
	getBaseValue (Lnet/minecraft/world/entity/ai/attributes/Attribute;)D b
	getModifierValue (Lnet/minecraft/world/entity/ai/attributes/Attribute;Ljava/util/UUID;)D a
	getValue (Lnet/minecraft/world/entity/ai/attributes/Attribute;)D a
	hasAttribute (Lnet/minecraft/world/entity/ai/attributes/Attribute;)Z c
	hasModifier (Lnet/minecraft/world/entity/ai/attributes/Attribute;Ljava/util/UUID;)Z b
net/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder aut$a
	builder a
	instanceFrozen b
	add (Lnet/minecraft/world/entity/ai/attributes/Attribute;)Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; a
	add (Lnet/minecraft/world/entity/ai/attributes/Attribute;D)Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; a
	build ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier; a
	create (Lnet/minecraft/world/entity/ai/attributes/Attribute;)Lnet/minecraft/world/entity/ai/attributes/AttributeInstance; b
net/minecraft/world/entity/ai/attributes/Attributes auu
	ARMOR i
	ARMOR_TOUGHNESS j
	ATTACK_DAMAGE f
	ATTACK_KNOCKBACK g
	ATTACK_SPEED h
	FLYING_SPEED e
	FOLLOW_RANGE b
	JUMP_STRENGTH m
	KNOCKBACK_RESISTANCE c
	LUCK k
	MAX_HEALTH a
	MOVEMENT_SPEED d
	SPAWN_REINFORCEMENTS_CHANCE l
	register (Ljava/lang/String;Lnet/minecraft/world/entity/ai/attributes/Attribute;)Lnet/minecraft/world/entity/ai/attributes/Attribute; a
net/minecraft/world/entity/ai/attributes/DefaultAttributes auv
	LOGGER a
	SUPPLIERS b
	getSupplier (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier; a
	hasSupplier (Lnet/minecraft/world/entity/EntityType;)Z b
	validate ()V a
net/minecraft/world/entity/ai/attributes/RangedAttribute auw
	maxValue c
	minValue b
	getMaxValue ()D e
	getMinValue ()D d
	sanitizeValue (D)D a
net/minecraft/world/entity/ai/behavior/AcquirePoi auz
	BATCH_SIZE c
	RATE d
	SCAN_RANGE a
	batchCache j
	memoryToAcquire f
	nextScheduledStart i
	onPoiAcquisitionEvent h
	onlyIfAdult g
	poiType e
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;)Z a
	constructEntryConditionMap (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Lcom/google/common/collect/ImmutableMap; a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V a
net/minecraft/world/entity/ai/behavior/AcquirePoi$JitteredLinearRetry auz$a
	MAX_INTERVAL_INCREASE b
	MAX_RETRY_PATHFINDING_INTERVAL c
	MIN_INTERVAL_INCREASE a
	currentDelay g
	nextScheduledAttemptTimestamp f
	previousAttemptTimestamp e
	random d
	isStillValid (J)Z b
	markAttempt (J)V a
	shouldRetry (J)Z c
net/minecraft/world/entity/ai/behavior/AnimalMakeLove ava
	BREED_RANGE a
	MAX_DURATION d
	MIN_DURATION c
	partnerType e
	spawnChildAtTime g
	speedModifier f
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/Animal;J)Z b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/Animal;)Z a
	findValidBreedPartner (Lnet/minecraft/world/entity/animal/Animal;)Ljava/util/Optional; c
	getBreedTarget (Lnet/minecraft/world/entity/animal/Animal;)Lnet/minecraft/world/entity/animal/Animal; a
	hasBreedTargetOfRightType (Lnet/minecraft/world/entity/animal/Animal;)Z b
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/Animal;J)V a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/Animal;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/Animal;J)V c
net/minecraft/world/entity/ai/behavior/AnimalPanic avb
	PANIC_DISTANCE_HORIZANTAL d
	PANIC_DISTANCE_VERTICAL e
	PANIC_MAX_DURATION c
	PANIC_MIN_DURATION a
	speedMultiplier f
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V c
net/minecraft/world/entity/ai/behavior/AssignProfessionFromJobSite avc
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
net/minecraft/world/entity/ai/behavior/BabyFollowAdult avd
	followRange a
	speedModifier c
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	getNearestAdult (Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/BackUpIfTooClose ave
	strafeSpeed c
	tooCloseDistance a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z a
	getTarget (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/world/entity/LivingEntity; c
	isTargetTooClose (Lnet/minecraft/world/entity/Mob;)Z b
	isTargetVisible (Lnet/minecraft/world/entity/Mob;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V a
net/minecraft/world/entity/ai/behavior/BecomePassiveIfMemoryPresent avf
	pacifyDuration a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/Behavior avg
	DEFAULT_DURATION a
	endTimestamp d
	entryCondition b
	maxDuration f
	minDuration e
	status c
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	doStop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V g
	getStatus ()Lnet/minecraft/world/entity/ai/behavior/Behavior$Status; a
	hasRequiredMemories (Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tickOrStop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V f
	timedOut (J)Z a
	tryStart (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z e
net/minecraft/world/entity/ai/behavior/Behavior$Status avg$a
	$VALUES c
	RUNNING b
	STOPPED a
	$values ()[Lnet/minecraft/world/entity/ai/behavior/Behavior$Status; a
net/minecraft/world/entity/ai/behavior/BehaviorUtils avh
	canSee (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z b
	entityIsVisible (Lnet/minecraft/world/entity/ai/Brain;Lnet/minecraft/world/entity/LivingEntity;)Z a
	findSectionClosestToVillage (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/SectionPos;I)Lnet/minecraft/core/SectionPos; a
	getLivingEntityFromUUIDMemory (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Ljava/util/Optional; a
	getNearbyVillagersWithCondition (Lnet/minecraft/world/entity/npc/Villager;Ljava/util/function/Predicate;)Ljava/util/stream/Stream; a
	getNearestTarget (Lnet/minecraft/world/entity/LivingEntity;Ljava/util/Optional;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/LivingEntity; a
	getRandomSwimmablePos (Lnet/minecraft/world/entity/PathfinderMob;II)Lnet/minecraft/world/phys/Vec3; a
	getTargetNearestMe (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/LivingEntity; a
	isOtherTargetMuchFurtherAwayThanCurrentAttackTarget (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;D)Z a
	isWithinAttackRange (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/LivingEntity;I)Z a
	isWithinMeleeAttackRange (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/LivingEntity;)Z a
	lockGazeAndWalkToEachOther (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;F)V a
	lookAtEachOther (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)V c
	lookAtEntity (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)V a
	setWalkAndLookTargetMemories (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/core/BlockPos;FI)V a
	setWalkAndLookTargetMemories (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;FI)V a
	setWalkAndLookTargetMemoriesToEachOther (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;F)V b
	targetIsValid (Lnet/minecraft/world/entity/ai/Brain;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/util/function/Predicate;)Z a
	targetIsValid (Lnet/minecraft/world/entity/ai/Brain;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Lnet/minecraft/world/entity/EntityType;)Z a
	throwItem (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/phys/Vec3;)V a
net/minecraft/world/entity/ai/behavior/BlockPosTracker avi
	blockPos a
	centerPosition b
	currentBlockPosition ()Lnet/minecraft/core/BlockPos; b
	currentPosition ()Lnet/minecraft/world/phys/Vec3; a
	isVisibleBy (Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/ai/behavior/CelebrateVillagersSurvivedRaid avj
	currentRaid a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	getFirework (Lnet/minecraft/world/item/DyeColor;I)Lnet/minecraft/world/item/ItemStack; a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
net/minecraft/world/entity/ai/behavior/CopyMemoryWithExpiry avk
	durationOfCopy e
	predicate a
	sourceMemory c
	targetMemory d
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V a
net/minecraft/world/entity/ai/behavior/CountDownCooldownTicks avl
	cooldownTicks a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	getCooldownTickMemory (Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/Optional; a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	timedOut (J)Z a
net/minecraft/world/entity/ai/behavior/CrossbowAttack avm
	TIMEOUT a
	attackDelay c
	crossbowState d
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z a
	crossbowAttack (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/LivingEntity;)V a
	getAttackTarget (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/LivingEntity; a
	lookAtTarget (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/LivingEntity;)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V b
net/minecraft/world/entity/ai/behavior/CrossbowAttack$CrossbowState avm$a
	$VALUES e
	CHARGED c
	CHARGING b
	READY_TO_ATTACK d
	UNCHARGED a
	$values ()[Lnet/minecraft/world/entity/ai/behavior/CrossbowAttack$CrossbowState; a
net/minecraft/world/entity/ai/behavior/DismountOrSkipMounting avn
	dontRideIf c
	maxWalkDistToRideTarget a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	isVehicleValid (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/DoNothing avo
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
net/minecraft/world/entity/ai/behavior/EntityTracker avp
	entity a
	trackEyeHeight b
	currentBlockPosition ()Lnet/minecraft/core/BlockPos; b
	currentPosition ()Lnet/minecraft/world/phys/Vec3; a
	getEntity ()Lnet/minecraft/world/entity/Entity; c
	isVisibleBy (Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/ai/behavior/EraseMemoryIf avq
	memoryType c
	predicate a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/FollowTemptation avr
	CLOSE_ENOUGH_DIST c
	TEMPTATION_COOLDOWN a
	speedModifier d
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)Z a
	getSpeedModifier (Lnet/minecraft/world/entity/PathfinderMob;)F a
	getTemptingPlayer (Lnet/minecraft/world/entity/PathfinderMob;)Ljava/util/Optional; b
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V d
	timedOut (J)Z a
net/minecraft/world/entity/ai/behavior/GateBehavior avs
	behaviors e
	exitErasedMemories a
	orderPolicy c
	runningPolicy d
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	timedOut (J)Z a
net/minecraft/world/entity/ai/behavior/GateBehavior$OrderPolicy avs$a
	$VALUES d
	ORDERED a
	SHUFFLED b
	consumer c
	$values ()[Lnet/minecraft/world/entity/ai/behavior/GateBehavior$OrderPolicy; a
	apply (Lnet/minecraft/world/entity/ai/behavior/ShufflingList;)V a
net/minecraft/world/entity/ai/behavior/GateBehavior$RunningPolicy avs$b
	$VALUES c
	RUN_ONE a
	TRY_ALL b
	$values ()[Lnet/minecraft/world/entity/ai/behavior/GateBehavior$RunningPolicy; a
	apply (Ljava/util/stream/Stream;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/GiveGiftToHero avt
	GIFTS f
	MAX_TIME_BETWEEN_GIFTS d
	MIN_TIME_BETWEEN_GIFTS c
	SPEED_MODIFIER g
	THROW_GIFT_AT_DISTANCE a
	TIME_TO_DELAY_FOR_HEAD_TO_FINISH_TURNING e
	giftGivenDuringThisRun i
	timeSinceStart j
	timeUntilNextGift h
	calculateTimeUntilNextGift (Lnet/minecraft/server/level/ServerLevel;)I a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	getItemToThrow (Lnet/minecraft/world/entity/npc/Villager;)Ljava/util/List; a
	getNearestTargetableHero (Lnet/minecraft/world/entity/npc/Villager;)Ljava/util/Optional; c
	isHero (Lnet/minecraft/world/entity/player/Player;)Z a
	isHeroVisible (Lnet/minecraft/world/entity/npc/Villager;)Z b
	isWithinThrowingDistance (Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/world/entity/player/Player;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V d
	throwGift (Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/world/entity/LivingEntity;)V a
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
net/minecraft/world/entity/ai/behavior/GoOutsideToCelebrate avu
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/ai/behavior/GoToCelebrateLocation avv
	closeEnoughDist a
	speedModifier c
	getCelebrateLocation (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/core/BlockPos; a
	getNearbyPos (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	getRandomOffset (Ljava/util/Random;)I a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V a
net/minecraft/world/entity/ai/behavior/GoToClosestVillage avw
	closeEnoughDistance c
	speedModifier a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
net/minecraft/world/entity/ai/behavior/GoToPotentialJobSite avx
	TICKS_UNTIL_TIMEOUT c
	speedModifier a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V b
net/minecraft/world/entity/ai/behavior/GoToWantedItem avy
	maxDistToWalk c
	predicate a
	speedModifier d
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	getClosestLovedItem (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/item/ItemEntity; a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/HarvestFarmland avz
	HARVEST_DURATION c
	SPEED_MODIFIER a
	aboveFarmlandPos d
	nextOkStartTime e
	timeWorkedSoFar f
	validFarmlandAroundVillager g
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z d
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	getValidFarmland (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/core/BlockPos; a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
	validPos (Lnet/minecraft/core/BlockPos;Lnet/minecraft/server/level/ServerLevel;)Z a
net/minecraft/world/entity/ai/behavior/InsideBrownianWalk awa
	speedModifier a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V a
net/minecraft/world/entity/ai/behavior/InteractWith awb
	interactionRangeSqr e
	maxDist a
	memory h
	selfFilter g
	speedModifier c
	targetFilter f
	type d
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	isTargetValid (Lnet/minecraft/world/entity/LivingEntity;)Z b
	of (Lnet/minecraft/world/entity/EntityType;ILjava/util/function/Predicate;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;FI)Lnet/minecraft/world/entity/ai/behavior/InteractWith; a
	of (Lnet/minecraft/world/entity/EntityType;ILnet/minecraft/world/entity/ai/memory/MemoryModuleType;FI)Lnet/minecraft/world/entity/ai/behavior/InteractWith; a
	seesAtLeastOneValidTarget (Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/InteractWithDoor awc
	COOLDOWN_BEFORE_RERUNNING_IN_SAME_NODE a
	MAX_DISTANCE_TO_HOLD_DOOR_OPEN_FOR_OTHER_MOBS d
	SKIP_CLOSING_DOOR_IF_FURTHER_AWAY_THAN c
	lastCheckedNode e
	remainingCooldown f
	areOtherMobsComingThroughDoor (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/core/BlockPos;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	closeDoorsThatIHaveOpenedOrPassedThrough (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)V a
	isDoorTooFarAway (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/core/GlobalPos;)Z a
	isMobComingThroughDoor (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/core/BlockPos;)Z b
	rememberDoorToClose (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/core/BlockPos;)V c
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/JumpOnBed awd
	COOLDOWN_BETWEEN_JUMPS e
	MAX_JUMPS d
	MAX_TIME_TO_REACH_BED a
	MIN_JUMPS c
	remainingCooldownUntilNextJump j
	remainingJumps i
	remainingTimeToReachBed h
	speedModifier f
	targetBed g
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)Z c
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z a
	getNearestBed (Lnet/minecraft/world/entity/Mob;)Ljava/util/Optional; a
	isBed (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z a
	nearBed (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z b
	onBedSurface (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z d
	onOrOverBed (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z c
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V a
	startWalkingTowardsBed (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/core/BlockPos;)V a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V d
	timedOut (J)Z a
	tiredOfJumping (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z f
	tiredOfWalking (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z e
net/minecraft/world/entity/ai/behavior/LocateHidingPlace awe
	closeEnoughDist d
	currentPos e
	radius c
	speedModifier a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/LocateHidingPlaceDuringRaid awf
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/ai/behavior/LongJumpMidJump awg
	TIME_OUT_DURATION a
	landingSound d
	timeBetweenLongJumps c
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V c
net/minecraft/world/entity/ai/behavior/LongJumpToRandomPos awh
	FIND_JUMP_TRIES c
	MIN_PATHFIND_DISTANCE_TO_VALID_JUMP e
	PREPARE_JUMP_DURATION d
	TIME_OUT_DURATION a
	chosenJump l
	findJumpTries m
	getJumpSound o
	initialPosition k
	jumpCandidates j
	maxJumpVelocity i
	maxLongJumpHeight g
	maxLongJumpWidth h
	prepareJumpStart n
	timeBetweenLongJumps f
	calculateJumpVectorForAngle (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/phys/Vec3;I)Ljava/util/Optional; a
	calculateOptimalJumpVector (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/phys/Vec3;)Ljava/util/Optional; a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z a
	isClearTransition (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V c
net/minecraft/world/entity/ai/behavior/LongJumpToRandomPos$PossibleJump awh$a
	jumpTarget b
	jumpVector c
	getJumpTarget ()Lnet/minecraft/core/BlockPos; a
	getJumpVector ()Lnet/minecraft/world/phys/Vec3; b
net/minecraft/world/entity/ai/behavior/LookAndFollowTradingPlayerSink awi
	speedModifier a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	followPlayer (Lnet/minecraft/world/entity/npc/Villager;)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V d
	timedOut (J)Z a
net/minecraft/world/entity/ai/behavior/LookAtTargetSink awj
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)Z a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V c
net/minecraft/world/entity/ai/behavior/MeleeAttack awk
	cooldownBetweenAttacks a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z a
	getAttackTarget (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/world/entity/LivingEntity; b
	isHoldingUsableProjectileWeapon (Lnet/minecraft/world/entity/Mob;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V a
net/minecraft/world/entity/ai/behavior/Mount awl
	CLOSE_ENOUGH_TO_START_RIDING_DIST a
	speedModifier c
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	getRidableEntity (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/Entity; b
	isCloseEnoughToStartRiding (Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/MoveToSkySeeingSpot awm
	speedModifier a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	getOutdoorPosition (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/phys/Vec3; b
	hasNoBlocksAbove (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/core/BlockPos;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/MoveToTargetSink awn
	MAX_COOLDOWN_BEFORE_RETRYING a
	lastTargetPos e
	path d
	remainingCooldown c
	speedModifier f
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z a
	reachedTarget (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/ai/memory/WalkTarget;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V d
	tryComputePath (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/ai/memory/WalkTarget;J)Z a
net/minecraft/world/entity/ai/behavior/PlayTagWithOtherKids awo
	AVERAGE_WAIT_TIME_BETWEEN_RUNS g
	CHASE_SPEED_MODIFIER e
	FLEE_SPEED_MODIFIER d
	MAX_CHASERS_PER_TARGET f
	MAX_FLEE_XZ_DIST a
	MAX_FLEE_Y_DIST c
	chaseKid (Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/world/entity/LivingEntity;)V a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;)Z a
	checkHowManyChasersEachFriendHas (Lnet/minecraft/world/entity/PathfinderMob;)Ljava/util/Map; c
	findSomeoneBeingChased (Lnet/minecraft/world/entity/PathfinderMob;)Ljava/util/Optional; b
	findSomeoneToChase (Lnet/minecraft/world/entity/PathfinderMob;)Ljava/util/Optional; a
	fleeFromChaser (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/world/entity/LivingEntity;)V a
	getFriendsNearby (Lnet/minecraft/world/entity/PathfinderMob;)Ljava/util/List; d
	hasFriendsNearby (Lnet/minecraft/world/entity/PathfinderMob;)Z e
	isChasingSomeone (Lnet/minecraft/world/entity/LivingEntity;)Z c
	isFriendChasingMe (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
	seeIfSomeoneIsChasingMe (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/LivingEntity; b
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V a
	whoAreYouChasing (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/LivingEntity; a
net/minecraft/world/entity/ai/behavior/PoiCompetitorScan awp
	profession a
	competesForSameJobsite (Lnet/minecraft/core/GlobalPos;Lnet/minecraft/world/entity/ai/village/poi/PoiType;Lnet/minecraft/world/entity/npc/Villager;)Z a
	hasJobSite (Lnet/minecraft/world/entity/npc/Villager;)Z a
	hasMatchingProfession (Lnet/minecraft/world/entity/ai/village/poi/PoiType;Lnet/minecraft/world/entity/npc/VillagerProfession;)Z a
	selectWinner (Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/world/entity/npc/Villager;)Lnet/minecraft/world/entity/npc/Villager; a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
net/minecraft/world/entity/ai/behavior/PositionTracker awq
	currentBlockPosition ()Lnet/minecraft/core/BlockPos; b
	currentPosition ()Lnet/minecraft/world/phys/Vec3; a
	isVisibleBy (Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/ai/behavior/PrepareRamNearestTarget awr
	TIME_OUT_DURATION a
	getCooldownOnFail c
	getPrepareRamSound i
	maxRamDistance e
	minRamDistance d
	ramCandidate k
	ramPrepareTime h
	ramTargeting g
	reachedRamPositionTimestamp j
	walkSpeed f
	calculateRammingStartPosition (Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/Optional; a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)Z c
	chooseRamPosition (Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/world/entity/LivingEntity;)V b
	getEdgeOfBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/Vec3; a
	isWalkableBlock (Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/core/BlockPos;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V d
net/minecraft/world/entity/ai/behavior/PrepareRamNearestTarget$RamCandidate awr$a
	startPosition a
	target c
	targetPosition b
	getStartPosition ()Lnet/minecraft/core/BlockPos; a
	getTarget ()Lnet/minecraft/world/entity/LivingEntity; c
	getTargetPosition ()Lnet/minecraft/core/BlockPos; b
net/minecraft/world/entity/ai/behavior/RamTarget aws
	RAM_SPEED_FORCE_FACTOR c
	TIME_OUT_DURATION a
	getDamage f
	getImpactSound j
	getKnockbackForce h
	getTimeBetweenRams d
	ramDirection i
	ramTargeting e
	speed g
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;)Z a
	finishRam (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;)V b
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V c
net/minecraft/world/entity/ai/behavior/RandomStroll awt
	MAX_XZ_DIST d
	MAX_Y_DIST e
	maxHorizontalDistance a
	maxVerticalDistance c
	speedModifier f
	getTargetPos (Lnet/minecraft/world/entity/PathfinderMob;)Lnet/minecraft/world/phys/Vec3; a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V a
net/minecraft/world/entity/ai/behavior/RandomSwim awu
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;)Z a
	getTargetPos (Lnet/minecraft/world/entity/PathfinderMob;)Lnet/minecraft/world/phys/Vec3; a
net/minecraft/world/entity/ai/behavior/ReactToBell awv
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/ResetProfession aww
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
net/minecraft/world/entity/ai/behavior/ResetRaidStatus awx
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/RingBell awy
	BELL_RING_CHANCE c
	RING_BELL_FROM_DISTANCE a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/RunIf awz
	checkWhileRunningAlso d
	predicate a
	wrappedBehavior c
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	mergeMaps (Ljava/util/Map;Ljava/util/Map;)Ljava/util/Map; a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	timedOut (J)Z a
net/minecraft/world/entity/ai/behavior/RunOne axa
net/minecraft/world/entity/ai/behavior/RunSometimes axb
	interval d
	resetTicks a
	ticksUntilNextStart f
	wasRunning c
	wrappedBehavior e
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	resetTicksUntilNextStart (Lnet/minecraft/server/level/ServerLevel;)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	timedOut (J)Z a
net/minecraft/world/entity/ai/behavior/SetClosestHomeAsWalkTarget axc
	BATCH_SIZE c
	CACHE_TIMEOUT a
	OK_DISTANCE_SQR e
	RATE d
	batchCache g
	lastUpdate i
	speedModifier f
	triedCount h
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/SetEntityLookTarget axd
	maxDistSqr c
	predicate a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/SetHiddenState axe
	HIDE_TIMEOUT a
	closeEnoughDist c
	stayHiddenTicks d
	ticksHidden e
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/SetLookAndInteract axf
	interactionRangeSqr c
	selfFilter e
	targetFilter d
	type a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	getVisibleEntities (Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/List; b
	isMatchingTarget (Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/SetRaidStatus axg
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/SetWalkTargetAwayFrom axh
	desiredDistance d
	speedModifier c
	toPosition e
	walkAwayFromMemory a
	alreadyWalkingAwayFromPosWithSameSpeed (Lnet/minecraft/world/entity/PathfinderMob;)Z b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;)Z a
	entity (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;FIZ)Lnet/minecraft/world/entity/ai/behavior/SetWalkTargetAwayFrom; b
	getPosToAvoid (Lnet/minecraft/world/entity/PathfinderMob;)Lnet/minecraft/world/phys/Vec3; a
	moveAwayFrom (Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/world/phys/Vec3;F)V a
	pos (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;FIZ)Lnet/minecraft/world/entity/ai/behavior/SetWalkTargetAwayFrom; a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V a
net/minecraft/world/entity/ai/behavior/SetWalkTargetFromAttackTargetIfTargetOutOfReach axi
	PROJECTILE_ATTACK_RANGE_BUFFER a
	speedModifier c
	clearWalkTarget (Lnet/minecraft/world/entity/LivingEntity;)V a
	setWalkAndLookTarget (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V a
net/minecraft/world/entity/ai/behavior/SetWalkTargetFromBlockMemory axj
	closeEnoughDist d
	memoryType a
	speedModifier c
	tooFarDistance e
	tooLongUnreachableDuration f
	closeEnough (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/core/GlobalPos;)Z a
	dropPOI (Lnet/minecraft/world/entity/npc/Villager;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
	tiredOfTryingToFindTarget (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	tooFar (Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/core/GlobalPos;)Z a
	wrongDimension (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/GlobalPos;)Z a
net/minecraft/world/entity/ai/behavior/SetWalkTargetFromLookTarget axk
	closeEnoughDistance c
	speedModifier a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/ShowTradesToPlayer axl
	MAX_LOOK_TIME a
	STARTING_LOOK_TIME c
	cycleCounter f
	displayIndex g
	displayItems e
	lookTime h
	playerItemStack d
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	displayCyclingItems (Lnet/minecraft/world/entity/npc/Villager;)V d
	displayFirstItem (Lnet/minecraft/world/entity/npc/Villager;)V a
	findItemsToDisplay (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/npc/Villager;)V a
	lookAtTarget (Lnet/minecraft/world/entity/npc/Villager;)Lnet/minecraft/world/entity/LivingEntity; c
	playerItemStackMatchesCostOfOffer (Lnet/minecraft/world/item/trading/MerchantOffer;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
	updateDisplayItems (Lnet/minecraft/world/entity/npc/Villager;)V b
net/minecraft/world/entity/ai/behavior/ShufflingList axm
	entries a
	random b
	add (Ljava/lang/Object;I)Lnet/minecraft/world/entity/ai/behavior/ShufflingList; a
	codec (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; a
	shuffle ()Lnet/minecraft/world/entity/ai/behavior/ShufflingList; a
	stream ()Ljava/util/stream/Stream; b
net/minecraft/world/entity/ai/behavior/ShufflingList$WeightedEntry axm$a
	data a
	randWeight c
	weight b
	codec (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; a
	getData ()Ljava/lang/Object; a
	getRandWeight ()D c
	getWeight ()I b
	setRandom (F)V a
net/minecraft/world/entity/ai/behavior/SleepInBed axn
	COOLDOWN_AFTER_BEING_WOKEN a
	nextOkStartTime c
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	timedOut (J)Z a
net/minecraft/world/entity/ai/behavior/SocializeAtBell axo
	SPEED_MODIFIER a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/StartAttacking axp
	canAttackPredicate a
	targetFinderFunction c
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z a
	setAttackTarget (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/LivingEntity;)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V a
net/minecraft/world/entity/ai/behavior/StartCelebratingIfTargetDead axq
	celebrateDuration a
	dancePredicate c
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	getAttackTarget (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/LivingEntity; a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/StopAttackingIfTargetInvalid axr
	TIMEOUT_TO_GET_WITHIN_ATTACK_RANGE a
	onTargetErased d
	stopAttackingWhen c
	clearAttackTarget (Lnet/minecraft/world/entity/Mob;)V a
	getAttackTarget (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/world/entity/LivingEntity; c
	isCurrentTargetDeadOrRemoved (Lnet/minecraft/world/entity/Mob;)Z d
	isCurrentTargetInDifferentLevel (Lnet/minecraft/world/entity/Mob;)Z b
	isTiredOfTryingToReachTarget (Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V a
net/minecraft/world/entity/ai/behavior/StopBeingAngryIfTargetDead axs
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V a
net/minecraft/world/entity/ai/behavior/StrollAroundPoi axt
	MIN_TIME_BETWEEN_STROLLS a
	STROLL_MAX_XZ_DIST c
	STROLL_MAX_Y_DIST d
	maxDistanceFromPoi g
	memoryType e
	nextOkStartTime f
	speedModifier h
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V a
net/minecraft/world/entity/ai/behavior/StrollToPoi axu
	closeEnoughDist c
	maxDistanceFromPoi d
	memoryType a
	nextOkStartTime f
	speedModifier e
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V a
net/minecraft/world/entity/ai/behavior/StrollToPoiList axv
	closeEnoughDist e
	maxDistanceFromPoi f
	mustBeCloseToMemoryType c
	nextOkStartTime g
	speedModifier d
	strollToMemoryType a
	targetPos h
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
net/minecraft/world/entity/ai/behavior/Swim axw
	chance a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z a
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V b
net/minecraft/world/entity/ai/behavior/TradeWithVillager axx
	INTERACT_DIST_SQR a
	SPEED_MODIFIER c
	trades d
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	figureOutWhatIAmWillingToTrade (Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/world/entity/npc/Villager;)Ljava/util/Set; a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V d
	throwHalfStack (Lnet/minecraft/world/entity/npc/Villager;Ljava/util/Set;Lnet/minecraft/world/entity/LivingEntity;)V a
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
net/minecraft/world/entity/ai/behavior/TryFindWater axy
	nextOkStartTime d
	range a
	speedModifier c
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V a
net/minecraft/world/entity/ai/behavior/UpdateActivityFromSchedule axz
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/UseBonemeal aya
	BONEMEALING_DURATION a
	cropPos f
	lastBonemealingSession d
	nextWorkCycleTime c
	timeWorkedSoFar e
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	pickNextTarget (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Ljava/util/Optional; b
	setCurrentCropAsTarget (Lnet/minecraft/world/entity/npc/Villager;)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V d
	validPos (Lnet/minecraft/core/BlockPos;Lnet/minecraft/server/level/ServerLevel;)Z a
net/minecraft/world/entity/ai/behavior/ValidateNearbyPoi ayb
	MAX_DISTANCE a
	memoryType c
	poiPredicate d
	bedIsOccupied (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	poiDoesntExist (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/VictoryStroll ayc
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;)Z a
net/minecraft/world/entity/ai/behavior/VillageBoundRandomStroll ayd
	MAX_XZ_DIST a
	MAX_Y_DIST c
	maxXyDist e
	maxYDist f
	speedModifier d
	setRandomPos (Lnet/minecraft/world/entity/PathfinderMob;)V a
	setTargetedPos (Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/core/SectionPos;)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V a
net/minecraft/world/entity/ai/behavior/VillagerCalmDown aye
	SAFE_DISTANCE_FROM_DANGER a
	isCloseToEntityThatHurtMe (Lnet/minecraft/world/entity/npc/Villager;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
net/minecraft/world/entity/ai/behavior/VillagerGoalPackages ayf
	STROLL_SPEED_MODIFIER a
	getCorePackage (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; a
	getFullLookBehavior ()Lcom/mojang/datafixers/util/Pair; a
	getHidePackage (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; i
	getIdlePackage (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; e
	getMeetPackage (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; d
	getMinimalLookBehavior ()Lcom/mojang/datafixers/util/Pair; b
	getPanicPackage (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; f
	getPlayPackage (F)Lcom/google/common/collect/ImmutableList; a
	getPreRaidPackage (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; g
	getRaidPackage (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; h
	getRestPackage (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; c
	getWorkPackage (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; b
net/minecraft/world/entity/ai/behavior/VillagerMakeLove ayg
	INTERACT_DIST_SQR a
	SPEED_MODIFIER c
	birthTimestamp d
	breed (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/world/entity/npc/Villager;)Ljava/util/Optional; b
	canReach (Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/core/BlockPos;)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	giveBedToChild (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/core/BlockPos;)V a
	isBreedingPossible (Lnet/minecraft/world/entity/npc/Villager;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V d
	takeVacantBed (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Ljava/util/Optional; b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
	tryToGiveBirth (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/world/entity/npc/Villager;)V a
net/minecraft/world/entity/ai/behavior/VillagerPanicTrigger ayh
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z a
	hasHostile (Lnet/minecraft/world/entity/LivingEntity;)Z a
	isHurt (Lnet/minecraft/world/entity/LivingEntity;)Z b
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
net/minecraft/world/entity/ai/behavior/WakeUp ayi
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/WorkAtComposter ayj
	COMPOSTABLE_ITEMS a
	compostItems (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/core/GlobalPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	makeBread (Lnet/minecraft/world/entity/npc/Villager;)V a
	spawnComposterFillEffects (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	useWorkstation (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)V a
net/minecraft/world/entity/ai/behavior/WorkAtPoi ayk
	CHECK_COOLDOWN a
	DISTANCE c
	lastCheck d
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z b
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
	useWorkstation (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)V a
net/minecraft/world/entity/ai/behavior/YieldJobSite ayl
	speedModifier a
	canReachPos (Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/ai/village/poi/PoiType;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	eraseMemories (Lnet/minecraft/world/entity/npc/Villager;)V a
	nearbyWantsJobsite (Lnet/minecraft/world/entity/ai/village/poi/PoiType;Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/core/BlockPos;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
	yieldJobSite (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/core/BlockPos;Z)V a
net/minecraft/world/entity/ai/control/BodyRotationControl ayn
	DELAY_UNTIL_STARTING_TO_FACE_FORWARD c
	HEAD_STABLE_ANGLE b
	HOW_LONG_IT_TAKES_TO_FACE_FORWARD d
	headStableTime e
	lastStableYHeadRot f
	mob a
	clientTick ()V a
	isMoving ()Z f
	notCarryingMobPassengers ()Z e
	rotateBodyIfNecessary ()V b
	rotateHeadIfNecessary ()V c
	rotateHeadTowardsFront ()V d
net/minecraft/world/entity/ai/control/Control ayo
net/minecraft/world/entity/ai/control/FlyingMoveControl ayp
	hoversInPlace m
	maxTurn l
	tick ()V a
net/minecraft/world/entity/ai/control/JumpControl ayq
	jump a
	mob b
	jump ()V a
	tick ()V b
net/minecraft/world/entity/ai/control/LookControl ayr
	hasWanted d
	mob a
	wantedX e
	wantedY f
	wantedZ g
	xMaxRotAngle c
	yMaxRotSpeed b
	clampHeadRotationToBody ()V b
	getWantedX ()D e
	getWantedY ()D f
	getWantedY (Lnet/minecraft/world/entity/Entity;)D b
	getWantedZ ()D g
	getXRotD ()Ljava/util/Optional; h
	getYRotD ()Ljava/util/Optional; i
	isHasWanted ()Z d
	resetXRotOnTick ()Z c
	rotateTowards (FFF)F a
	setLookAt (DDD)V a
	setLookAt (DDDFF)V a
	setLookAt (Lnet/minecraft/world/entity/Entity;)V a
	setLookAt (Lnet/minecraft/world/entity/Entity;FF)V a
	setLookAt (Lnet/minecraft/world/phys/Vec3;)V a
	tick ()V a
net/minecraft/world/entity/ai/control/MoveControl ays
	MAX_TURN c
	MIN_SPEED a
	MIN_SPEED_SQR b
	mob d
	operation k
	speedModifier h
	strafeForwards i
	strafeRight j
	wantedX e
	wantedY f
	wantedZ g
	getSpeedModifier ()D c
	getWantedX ()D d
	getWantedY ()D e
	getWantedZ ()D f
	hasWanted ()Z b
	isWalkable (FF)Z b
	rotlerp (FFF)F a
	setWantedPosition (DDDD)V a
	strafe (FF)V a
	tick ()V a
net/minecraft/world/entity/ai/control/MoveControl$Operation ays$a
	$VALUES e
	JUMPING d
	MOVE_TO b
	STRAFE c
	WAIT a
	$values ()[Lnet/minecraft/world/entity/ai/control/MoveControl$Operation; a
net/minecraft/world/entity/ai/control/SmoothSwimmingLookControl ayt
	HEAD_TILT_X i
	HEAD_TILT_Y j
	maxYRotFromCenter h
	tick ()V a
net/minecraft/world/entity/ai/control/SmoothSwimmingMoveControl ayu
	applyGravity p
	inWaterSpeedModifier n
	maxTurnX l
	maxTurnY m
	outsideWaterSpeedModifier o
	tick ()V a
net/minecraft/world/entity/ai/goal/AvoidEntityGoal ayw
	avoidClass f
	avoidEntityTargeting k
	avoidPredicate g
	maxDist c
	mob a
	path d
	pathNav e
	predicateOnAvoidEntity h
	sprintSpeedModifier j
	toAvoid b
	walkSpeedModifier i
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/BegGoal ayx
	begTargeting f
	level c
	lookDistance d
	lookTime e
	player b
	wolf a
	canContinueToUse ()Z b
	canUse ()Z a
	playerHoldingInteresting (Lnet/minecraft/world/entity/player/Player;)Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/BoatGoals ayy
	$VALUES c
	GO_IN_BOAT_DIRECTION b
	GO_TO_BOAT a
	$values ()[Lnet/minecraft/world/entity/ai/goal/BoatGoals; a
net/minecraft/world/entity/ai/goal/BreakDoorGoal ayz
	DEFAULT_DOOR_BREAK_TIME g
	breakTime a
	doorBreakTime c
	lastBreakProgress b
	validDifficulties h
	canContinueToUse ()Z b
	canUse ()Z a
	getDoorBreakTime ()I f
	isValidDifficulty (Lnet/minecraft/world/Difficulty;)Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/BreathAirGoal aza
	mob a
	canContinueToUse ()Z b
	canUse ()Z a
	findAirPosition ()V g
	givesAir (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	isInterruptable ()Z C_
	start ()V c
	tick ()V e
net/minecraft/world/entity/ai/goal/BreedGoal azb
	PARTNER_TARGETING d
	animal a
	level b
	loveTime f
	partner c
	partnerClass e
	speedModifier g
	breed ()V g
	canContinueToUse ()Z b
	canUse ()Z a
	getFreePartner ()Lnet/minecraft/world/entity/animal/Animal; h
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/CatLieOnBedGoal azc
	cat g
	canUse ()Z a
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	nextStartTick (Lnet/minecraft/world/entity/PathfinderMob;)I a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/CatSitOnBlockGoal azd
	cat g
	canUse ()Z a
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/DolphinJumpGoal aze
	STEPS_TO_CHECK a
	breached d
	dolphin b
	interval c
	canContinueToUse ()Z b
	canUse ()Z a
	isInterruptable ()Z C_
	start ()V c
	stop ()V d
	surfaceIsClear (Lnet/minecraft/core/BlockPos;III)Z b
	tick ()V e
	waterIsClear (Lnet/minecraft/core/BlockPos;III)Z a
net/minecraft/world/entity/ai/goal/DoorInteractGoal azf
	doorOpenDirX b
	doorOpenDirZ c
	doorPos e
	hasDoor f
	mob d
	passed a
	canContinueToUse ()Z b
	canUse ()Z a
	isOpen ()Z g
	setOpen (Z)V a
	start ()V c
	tick ()V e
net/minecraft/world/entity/ai/goal/EatBlockGoal azg
	EAT_ANIMATION_TICKS a
	IS_TALL_GRASS b
	eatAnimationTick e
	level d
	mob c
	canContinueToUse ()Z b
	canUse ()Z a
	getEatAnimationTick ()I g
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/FleeSunGoal azh
	level f
	mob a
	speedModifier e
	wantedX b
	wantedY c
	wantedZ d
	canContinueToUse ()Z b
	canUse ()Z a
	getHidePos ()Lnet/minecraft/world/phys/Vec3; h
	setWantedPos ()Z g
	start ()V c
net/minecraft/world/entity/ai/goal/FloatGoal azi
	mob a
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/ai/goal/FollowBoatGoal azj
	currentGoal d
	following c
	mob b
	timeToRecalcPath a
	canContinueToUse ()Z b
	canUse ()Z a
	isInterruptable ()Z C_
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/FollowFlockLeaderGoal azk
	INTERVAL_TICKS a
	mob b
	nextStartTick d
	timeToRecalcPath c
	canContinueToUse ()Z b
	canUse ()Z a
	nextStartTick (Lnet/minecraft/world/entity/animal/AbstractSchoolingFish;)I a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/FollowMobGoal azl
	areaSize i
	followPredicate b
	followingMob c
	mob a
	navigation e
	oldWaterCost h
	speedModifier d
	stopDistance g
	timeToRecalcPath f
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/FollowOwnerGoal azm
	MAX_HORIZONTAL_DISTANCE_FROM_PLAYER_WHEN_TELEPORTING c
	MAX_VERTICAL_DISTANCE_FROM_PLAYER_WHEN_TELEPORTING d
	MIN_HORIZONTAL_DISTANCE_FROM_PLAYER_WHEN_TELEPORTING b
	TELEPORT_WHEN_DISTANCE_IS a
	canFly n
	level g
	navigation i
	oldWaterCost m
	owner f
	speedModifier h
	startDistance l
	stopDistance k
	tamable e
	timeToRecalcPath j
	canContinueToUse ()Z b
	canTeleportTo (Lnet/minecraft/core/BlockPos;)Z a
	canUse ()Z a
	maybeTeleportTo (III)Z a
	randomIntInclusive (II)I a
	start ()V c
	stop ()V d
	teleportToOwner ()V g
	tick ()V e
net/minecraft/world/entity/ai/goal/FollowParentGoal azn
	DONT_FOLLOW_IF_CLOSER_THAN c
	HORIZONTAL_SCAN_RANGE a
	VERTICAL_SCAN_RANGE b
	animal d
	parent e
	speedModifier f
	timeToRecalcPath g
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/Goal azo
	flags a
	canContinueToUse ()Z b
	canUse ()Z a
	getFlags ()Ljava/util/EnumSet; i
	isInterruptable ()Z C_
	setFlags (Ljava/util/EnumSet;)V a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/Goal$Flag azo$a
	$VALUES e
	JUMP c
	LOOK b
	MOVE a
	TARGET d
	$values ()[Lnet/minecraft/world/entity/ai/goal/Goal$Flag; a
net/minecraft/world/entity/ai/goal/GoalSelector azp
	LOGGER a
	NO_GOAL b
	availableGoals d
	disabledFlags f
	lockedFlags c
	newGoalRate h
	profiler e
	tickCount g
	addGoal (ILnet/minecraft/world/entity/ai/goal/Goal;)V a
	disableControlFlag (Lnet/minecraft/world/entity/ai/goal/Goal$Flag;)V a
	enableControlFlag (Lnet/minecraft/world/entity/ai/goal/Goal$Flag;)V b
	getAvailableGoals ()Ljava/util/Set; c
	getRunningGoals ()Ljava/util/stream/Stream; d
	removeAllGoals ()V a
	removeGoal (Lnet/minecraft/world/entity/ai/goal/Goal;)V a
	setControlFlag (Lnet/minecraft/world/entity/ai/goal/Goal$Flag;Z)V a
	setNewGoalRate (I)V a
	tick ()V b
net/minecraft/world/entity/ai/goal/GolemRandomStrollInVillageGoal azq
	POI_SECTION_SCAN_RADIUS i
	RANDOM_POS_XY_DISTANCE k
	RANDOM_POS_Y_DISTANCE l
	VILLAGER_SCAN_RADIUS j
	doesVillagerWantGolem (Lnet/minecraft/world/entity/npc/Villager;)Z a
	getPosition ()Lnet/minecraft/world/phys/Vec3; g
	getPositionTowardsAnywhere ()Lnet/minecraft/world/phys/Vec3; j
	getPositionTowardsPoi ()Lnet/minecraft/world/phys/Vec3; l
	getPositionTowardsVillagerWhoWantsGolem ()Lnet/minecraft/world/phys/Vec3; k
	getRandomPoiWithinSection (Lnet/minecraft/core/SectionPos;)Lnet/minecraft/core/BlockPos; a
	getRandomVillageSection ()Lnet/minecraft/core/SectionPos; m
net/minecraft/world/entity/ai/goal/InteractGoal azr
net/minecraft/world/entity/ai/goal/JumpGoal azs
net/minecraft/world/entity/ai/goal/LandOnOwnersShoulderGoal azt
	entity a
	isSittingOnShoulder c
	owner b
	canUse ()Z a
	isInterruptable ()Z C_
	start ()V c
	tick ()V e
net/minecraft/world/entity/ai/goal/LeapAtTargetGoal azu
	mob a
	target b
	yd c
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/ai/goal/LlamaFollowCaravanGoal azv
	CARAVAN_LIMIT c
	distCheckCounter d
	llama a
	speedModifier b
	canContinueToUse ()Z b
	canUse ()Z a
	firstIsLeashed (Lnet/minecraft/world/entity/animal/horse/Llama;I)Z a
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/LookAtPlayerGoal azw
	DEFAULT_PROBABILITY a
	lookAt c
	lookAtContext g
	lookAtType f
	lookDistance d
	lookTime h
	mob b
	onlyHorizontal i
	probability e
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/LookAtTradingPlayerGoal azx
	villager h
	canUse ()Z a
net/minecraft/world/entity/ai/goal/MeleeAttackGoal azy
	COOLDOWN_BETWEEN_CAN_USE_CHECKS l
	attackInterval j
	followingTargetEvenIfNotSeen c
	lastCanUseCheck k
	mob a
	path d
	pathedTargetX e
	pathedTargetY f
	pathedTargetZ g
	speedModifier b
	ticksUntilNextAttack i
	ticksUntilNextPathRecalculation h
	canContinueToUse ()Z b
	canUse ()Z a
	checkAndPerformAttack (Lnet/minecraft/world/entity/LivingEntity;D)V a
	getAttackInterval ()I k
	getAttackReachSqr (Lnet/minecraft/world/entity/LivingEntity;)D a
	getTicksUntilNextAttack ()I j
	isTimeToAttack ()Z h
	resetAttackCooldown ()V g
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/MoveBackToVillageGoal azz
	MAX_XZ_DIST i
	MAX_Y_DIST j
	canUse ()Z a
	getPosition ()Lnet/minecraft/world/phys/Vec3; g
net/minecraft/world/entity/ai/goal/MoveThroughVillageGoal baa
	canDealWithDoors h
	distanceToPoi g
	mob a
	onlyAtNight e
	path c
	poiPos d
	speedModifier b
	visited f
	canContinueToUse ()Z b
	canUse ()Z a
	hasNotVisited (Lnet/minecraft/core/BlockPos;)Z a
	start ()V c
	stop ()V d
	updateVisited ()V g
net/minecraft/world/entity/ai/goal/MoveToBlockGoal bab
	GIVE_UP_TICKS g
	INTERVAL_TICKS i
	STAY_TICKS h
	blockPos e
	maxStayTicks j
	mob a
	nextStartTick c
	reachedTarget k
	searchRange l
	speedModifier b
	tryTicks d
	verticalSearchRange m
	verticalSearchStart f
	acceptedDistance ()D h
	canContinueToUse ()Z b
	canUse ()Z a
	findNearestBlock ()Z m
	getMoveToTarget ()Lnet/minecraft/core/BlockPos; j
	isReachedTarget ()Z l
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	moveMobToBlock ()V g
	nextStartTick (Lnet/minecraft/world/entity/PathfinderMob;)I a
	shouldRecalculatePath ()Z k
	start ()V c
	tick ()V e
net/minecraft/world/entity/ai/goal/MoveTowardsRestrictionGoal bac
	mob a
	speedModifier e
	wantedX b
	wantedY c
	wantedZ d
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/ai/goal/MoveTowardsTargetGoal bad
	mob a
	speedModifier f
	target b
	wantedX c
	wantedY d
	wantedZ e
	within g
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/ai/goal/OcelotAttackGoal bae
	attackTime d
	level a
	mob b
	target c
	canContinueToUse ()Z b
	canUse ()Z a
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/OfferFlowerGoal baf
	OFFER_TARGER_CONTEXT b
	OFFER_TICKS a
	golem c
	tick e
	villager d
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/OpenDoorGoal bag
	closeDoor a
	forgetTime b
	canContinueToUse ()Z b
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/PanicGoal bah
	isRunning f
	mob a
	posX c
	posY d
	posZ e
	speedModifier b
	canContinueToUse ()Z b
	canUse ()Z a
	findRandomPosition ()Z g
	isRunning ()Z h
	lookForWater (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/entity/Entity;II)Lnet/minecraft/core/BlockPos; a
	start ()V c
	stop ()V d
net/minecraft/world/entity/ai/goal/PathfindToRaidGoal bai
	SPEED_MODIFIER a
	mob b
	canContinueToUse ()Z b
	canUse ()Z a
	recruitNearby (Lnet/minecraft/world/entity/raid/Raid;)V a
	tick ()V e
net/minecraft/world/entity/ai/goal/RandomLookAroundGoal baj
	lookTime d
	mob a
	relX b
	relZ c
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	tick ()V e
net/minecraft/world/entity/ai/goal/RandomStrollGoal bak
	DEFAULT_INTERVAL a
	checkNoActionTime i
	forceTrigger h
	interval g
	mob b
	speedModifier f
	wantedX c
	wantedY d
	wantedZ e
	canContinueToUse ()Z b
	canUse ()Z a
	getPosition ()Lnet/minecraft/world/phys/Vec3; g
	setInterval (I)V a
	start ()V c
	stop ()V d
	trigger ()V h
net/minecraft/world/entity/ai/goal/RandomSwimmingGoal bal
	getPosition ()Lnet/minecraft/world/phys/Vec3; g
net/minecraft/world/entity/ai/goal/RangedAttackGoal bam
	attackIntervalMax h
	attackIntervalMin g
	attackRadius i
	attackRadiusSqr j
	attackTime d
	mob a
	rangedAttackMob b
	seeTime f
	speedModifier e
	target c
	canContinueToUse ()Z b
	canUse ()Z a
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/RangedBowAttackGoal ban
	attackIntervalMin c
	attackRadiusSqr d
	attackTime e
	mob a
	seeTime f
	speedModifier b
	strafingBackwards h
	strafingClockwise g
	strafingTime i
	canContinueToUse ()Z b
	canUse ()Z a
	isHoldingBow ()Z g
	setMinAttackInterval (I)V a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/RangedCrossbowAttackGoal bao
	PATHFINDING_DELAY_RANGE a
	attackDelay g
	attackRadiusSqr e
	crossbowState c
	mob b
	seeTime f
	speedModifier d
	updatePathDelay h
	canContinueToUse ()Z b
	canRun ()Z j
	canUse ()Z a
	isHoldingCrossbow ()Z g
	isValidTarget ()Z h
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/RangedCrossbowAttackGoal$CrossbowState bao$a
	$VALUES e
	CHARGED c
	CHARGING b
	READY_TO_ATTACK d
	UNCHARGED a
	$values ()[Lnet/minecraft/world/entity/ai/goal/RangedCrossbowAttackGoal$CrossbowState; a
net/minecraft/world/entity/ai/goal/RemoveBlockGoal bap
	WAIT_AFTER_BLOCK_FOUND j
	blockToRemove g
	removerMob h
	ticksSinceReachedGoal i
	canUse ()Z a
	getPosWithBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/core/BlockPos; a
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	playBreakSound (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	playDestroyProgressSound (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	start ()V c
	stop ()V d
	tick ()V e
	tryFindBlock ()Z n
net/minecraft/world/entity/ai/goal/RestrictSunGoal baq
	mob a
	canUse ()Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/ai/goal/RunAroundLikeCrazyGoal bar
	horse a
	posX c
	posY d
	posZ e
	speedModifier b
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	tick ()V e
net/minecraft/world/entity/ai/goal/SitWhenOrderedToGoal bas
	mob a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/ai/goal/StrollThroughVillageGoal bat
	DISTANCE_THRESHOLD a
	interval c
	mob b
	wantedPos d
	canContinueToUse ()Z b
	canUse ()Z a
	moveRandomly ()V g
	tick ()V e
net/minecraft/world/entity/ai/goal/SwellGoal bau
	creeper a
	target b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/TemptGoal bav
	TEMP_TARGETING c
	calmDown k
	canScare n
	isRunning l
	items m
	mob a
	pRotX i
	pRotY j
	player b
	px f
	py g
	pz h
	speedModifier e
	targetingConditions d
	canContinueToUse ()Z b
	canScare ()Z g
	canUse ()Z a
	isRunning ()Z h
	shouldFollow (Lnet/minecraft/world/entity/LivingEntity;)Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/TradeWithPlayerGoal baw
	mob a
	canUse ()Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/ai/goal/TryFindWaterGoal bax
	mob a
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/ai/goal/UseItemGoal bay
	canUseSelector c
	finishUsingSound d
	item b
	mob a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/ai/goal/WaterAvoidingRandomFlyingGoal baz
	getPosition ()Lnet/minecraft/world/phys/Vec3; g
	getTreePos ()Lnet/minecraft/world/phys/Vec3; j
net/minecraft/world/entity/ai/goal/WaterAvoidingRandomStrollGoal bba
	PROBABILITY i
	probability j
	getPosition ()Lnet/minecraft/world/phys/Vec3; g
net/minecraft/world/entity/ai/goal/WrappedGoal bbb
	goal a
	isRunning c
	priority b
	canBeReplacedBy (Lnet/minecraft/world/entity/ai/goal/WrappedGoal;)Z a
	canContinueToUse ()Z b
	canUse ()Z a
	getFlags ()Ljava/util/EnumSet; i
	getGoal ()Lnet/minecraft/world/entity/ai/goal/Goal; j
	getPriority ()I h
	isInterruptable ()Z C_
	isRunning ()Z g
	setFlags (Ljava/util/EnumSet;)V a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/ZombieAttackGoal bbc
	raiseArmTicks c
	zombie b
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/target/DefendVillageTargetGoal bbe
	attackTargeting c
	golem a
	potentialTarget b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/ai/goal/target/HurtByTargetGoal bbf
	ALERT_RANGE_Y b
	HURT_BY_TARGETING a
	alertSameType c
	timestamp d
	toIgnoreAlert j
	toIgnoreDamage i
	alertOther (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/LivingEntity;)V a
	alertOthers ()V g
	canUse ()Z a
	setAlertOthers ([Ljava/lang/Class;)Lnet/minecraft/world/entity/ai/goal/target/HurtByTargetGoal; a
	start ()V c
net/minecraft/world/entity/ai/goal/target/NearestAttackableTargetGoal bbg
	randomInterval b
	target c
	targetConditions d
	targetType a
	canUse ()Z a
	findTarget ()V g
	getTargetSearchArea (D)Lnet/minecraft/world/phys/AABB; a
	setTarget (Lnet/minecraft/world/entity/LivingEntity;)V a
	start ()V c
net/minecraft/world/entity/ai/goal/target/NearestAttackableWitchTargetGoal bbh
	canAttack i
	canUse ()Z a
	setCanAttack (Z)V a
net/minecraft/world/entity/ai/goal/target/NearestHealableRaiderTargetGoal bbi
	DEFAULT_COOLDOWN i
	cooldown j
	canUse ()Z a
	decrementCooldown ()V j
	getCooldown ()I h
	start ()V c
net/minecraft/world/entity/ai/goal/target/NonTameRandomTargetGoal bbj
	tamableMob i
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/ai/goal/target/OwnerHurtByTargetGoal bbk
	ownerLastHurtBy b
	tameAnimal a
	timestamp c
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/ai/goal/target/OwnerHurtTargetGoal bbl
	ownerLastHurt b
	tameAnimal a
	timestamp c
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/ai/goal/target/ResetUniversalAngerTargetGoal bbm
	ALERT_RANGE_Y a
	alertOthersOfSameType c
	lastHurtByPlayerTimestamp d
	mob b
	canUse ()Z a
	getNearbyMobsOfSameType ()Ljava/util/List; h
	start ()V c
	wasHurtByPlayer ()Z g
net/minecraft/world/entity/ai/goal/target/TargetGoal bbn
	CANT_REACH_CACHE c
	CAN_REACH_CACHE b
	EMPTY_REACH_CACHE a
	mob e
	mustReach d
	mustSee f
	reachCache i
	reachCacheTime j
	targetMob g
	unseenMemoryTicks h
	unseenTicks k
	canAttack (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;)Z a
	canContinueToUse ()Z b
	canReach (Lnet/minecraft/world/entity/LivingEntity;)Z a
	getFollowDistance ()D k
	setUnseenMemoryTicks (I)Lnet/minecraft/world/entity/ai/goal/target/TargetGoal; a
	start ()V c
	stop ()V d
net/minecraft/world/entity/ai/gossip/GossipContainer bbp
	DISCARD_THRESHOLD a
	gossips b
	add (Ljava/util/UUID;Lnet/minecraft/world/entity/ai/gossip/GossipType;I)V a
	decay ()V b
	getCountForType (Lnet/minecraft/world/entity/ai/gossip/GossipType;Ljava/util/function/DoublePredicate;)J a
	getGossipEntries ()Ljava/util/Map; a
	getOrCreate (Ljava/util/UUID;)Lnet/minecraft/world/entity/ai/gossip/GossipContainer$EntityGossips; a
	getReputation (Ljava/util/UUID;Ljava/util/function/Predicate;)I a
	mergeValuesForAddition (Lnet/minecraft/world/entity/ai/gossip/GossipType;II)I a
	mergeValuesForTransfer (II)I a
	remove (Ljava/util/UUID;Lnet/minecraft/world/entity/ai/gossip/GossipType;)V a
	remove (Ljava/util/UUID;Lnet/minecraft/world/entity/ai/gossip/GossipType;I)V b
	remove (Lnet/minecraft/world/entity/ai/gossip/GossipType;)V a
	selectGossipsForTransfer (Ljava/util/Random;I)Ljava/util/Collection; a
	store (Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; a
	transferFrom (Lnet/minecraft/world/entity/ai/gossip/GossipContainer;Ljava/util/Random;I)V a
	unpack ()Ljava/util/stream/Stream; c
	update (Lcom/mojang/serialization/Dynamic;)V a
net/minecraft/world/entity/ai/gossip/GossipContainer$EntityGossips bbp$a
	entries a
	decay ()V a
	isEmpty ()Z b
	makeSureValueIsntTooLowOrTooHigh (Lnet/minecraft/world/entity/ai/gossip/GossipType;)V a
	remove (Lnet/minecraft/world/entity/ai/gossip/GossipType;)V b
	unpack (Ljava/util/UUID;)Ljava/util/stream/Stream; a
	weightedValue (Ljava/util/function/Predicate;)I a
net/minecraft/world/entity/ai/gossip/GossipContainer$GossipEntry bbp$b
	TAG_TARGET a
	TAG_TYPE b
	TAG_VALUE c
	target d
	type e
	value f
	load (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult; a
	store (Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; a
	weightedValue ()I a
net/minecraft/world/entity/ai/gossip/GossipType bbq
	$VALUES o
	BY_ID n
	MAJOR_NEGATIVE a
	MAJOR_POSITIVE d
	MINOR_NEGATIVE b
	MINOR_POSITIVE c
	REPUTATION_CHANGE_PER_EVENT f
	REPUTATION_CHANGE_PER_EVERLASTING_MEMORY g
	REPUTATION_CHANGE_PER_TRADE h
	TRADING e
	decayPerDay l
	decayPerTransfer m
	id i
	max k
	weight j
	$values ()[Lnet/minecraft/world/entity/ai/gossip/GossipType; a
	byId (Ljava/lang/String;)Lnet/minecraft/world/entity/ai/gossip/GossipType; a
net/minecraft/world/entity/ai/memory/ExpirableValue bbs
	timeToLive b
	value a
	canExpire ()Z e
	codec (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; a
	getTimeToLive ()J b
	getValue ()Ljava/lang/Object; c
	hasExpired ()Z d
	of (Ljava/lang/Object;)Lnet/minecraft/world/entity/ai/memory/ExpirableValue; a
	of (Ljava/lang/Object;J)Lnet/minecraft/world/entity/ai/memory/ExpirableValue; a
	tick ()V a
net/minecraft/world/entity/ai/memory/MemoryModuleType bbt
	ADMIRING_DISABLED aa
	ADMIRING_ITEM X
	ANGRY_AT V
	ATE_RECENTLY ap
	ATTACK_COOLING_DOWN p
	ATTACK_TARGET o
	AVOID_TARGET z
	BREED_TARGET r
	CANT_REACH_WALK_TARGET_SINCE E
	CELEBRATE_LOCATION ac
	DANCING ad
	DISABLE_WALK_TO_ADMIRE_ITEM Z
	DOORS_TO_CLOSE v
	DUMMY a
	GOLEM_DETECTED_RECENTLY F
	HAS_HUNTING_COOLDOWN S
	HEARD_BELL_TIME D
	HIDING_PLACE C
	HOME b
	HUNTED_RECENTLY ab
	HURT_BY x
	HURT_BY_ENTITY y
	INTERACTABLE_DOORS u
	INTERACTION_TARGET q
	IS_TEMPTED P
	JOB_SITE c
	LAST_SLEPT G
	LAST_WOKEN H
	LAST_WORKED_AT_POI I
	LONG_JUMP_COOLDOWN_TICKS Q
	LONG_JUMP_MID_JUMP R
	LOOK_TARGET n
	MEETING_POINT e
	NEARBY_ADULT_PIGLINS ah
	NEAREST_ATTACKABLE B
	NEAREST_BED w
	NEAREST_HOSTILE A
	NEAREST_LIVING_ENTITIES g
	NEAREST_PLAYERS j
	NEAREST_PLAYER_HOLDING_WANTED_ITEM ao
	NEAREST_REPELLENT aq
	NEAREST_TARGETABLE_PLAYER_NOT_WEARING_GOLD ag
	NEAREST_VISIBLE_ADULT J
	NEAREST_VISIBLE_ADULT_HOGLINS aj
	NEAREST_VISIBLE_ADULT_PIGLIN ak
	NEAREST_VISIBLE_ADULT_PIGLINS ai
	NEAREST_VISIBLE_ATTACKABLE_PLAYER l
	NEAREST_VISIBLE_BABY_HOGLIN af
	NEAREST_VISIBLE_HUNTABLE_HOGLIN ae
	NEAREST_VISIBLE_LIVING_ENTITIES h
	NEAREST_VISIBLE_NEMESIS L
	NEAREST_VISIBLE_PLAYER k
	NEAREST_VISIBLE_WANTED_ITEM K
	NEAREST_VISIBLE_ZOMBIFIED al
	PACIFIED ar
	PATH t
	PLAY_DEAD_TICKS M
	POTENTIAL_JOB_SITE d
	RAM_COOLDOWN_TICKS T
	RAM_TARGET U
	RIDE_TARGET s
	SECONDARY_JOB_SITE f
	TEMPTATION_COOLDOWN_TICKS O
	TEMPTING_PLAYER N
	TIME_TRYING_TO_REACH_ADMIRE_ITEM Y
	UNIVERSAL_ANGER W
	VISIBLE_ADULT_HOGLIN_COUNT an
	VISIBLE_ADULT_PIGLIN_COUNT am
	VISIBLE_VILLAGER_BABIES i
	WALK_TARGET m
	codec as
	getCodec ()Ljava/util/Optional; a
	register (Ljava/lang/String;)Lnet/minecraft/world/entity/ai/memory/MemoryModuleType; a
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/entity/ai/memory/MemoryModuleType; a
net/minecraft/world/entity/ai/memory/MemoryStatus bbu
	$VALUES d
	REGISTERED c
	VALUE_ABSENT b
	VALUE_PRESENT a
	$values ()[Lnet/minecraft/world/entity/ai/memory/MemoryStatus; a
net/minecraft/world/entity/ai/memory/WalkTarget bbv
	closeEnoughDist c
	speedModifier b
	target a
	getCloseEnoughDist ()I c
	getSpeedModifier ()F b
	getTarget ()Lnet/minecraft/world/entity/ai/behavior/PositionTracker; a
net/minecraft/world/entity/ai/navigation/FlyingPathNavigation bbx
	canMoveDirectly (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;III)Z a
	canOpenDoors ()Z e
	canPassDoors ()Z d
	canUpdatePath ()Z a
	createPath (Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/world/level/pathfinder/Path; a
	createPathFinder (I)Lnet/minecraft/world/level/pathfinder/PathFinder; a
	getTempMobPos ()Lnet/minecraft/world/phys/Vec3; b
	isStableDestination (Lnet/minecraft/core/BlockPos;)Z a
	setCanOpenDoors (Z)V a
	setCanPassDoors (Z)V b
	tick ()V c
net/minecraft/world/entity/ai/navigation/GroundPathNavigation bby
	avoidSun p
	canMoveDirectly (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;III)Z a
	canOpenDoors ()Z f
	canPassDoors ()Z e
	canUpdatePath ()Z a
	canWalkAbove (IIIIIILnet/minecraft/world/phys/Vec3;DD)Z b
	canWalkOn (IIIIIILnet/minecraft/world/phys/Vec3;DD)Z a
	createPath (Lnet/minecraft/core/BlockPos;I)Lnet/minecraft/world/level/pathfinder/Path; a
	createPath (Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/world/level/pathfinder/Path; a
	createPathFinder (I)Lnet/minecraft/world/level/pathfinder/PathFinder; a
	getSurfaceY ()I u
	getTempMobPos ()Lnet/minecraft/world/phys/Vec3; b
	hasValidPathType (Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)Z a
	setAvoidSun (Z)V c
	setCanOpenDoors (Z)V a
	setCanPassDoors (Z)V b
	trimPath ()V D_
net/minecraft/world/entity/ai/navigation/PathNavigation bbz
	MAX_TIME_RECOMPUTE p
	hasDelayedRecomputation m
	isStuck u
	lastStuckCheck f
	lastStuckCheckPos g
	lastTimeoutCheck j
	level b
	maxDistanceToWaypoint l
	maxVisitedNodesMultiplier s
	mob a
	nodeEvaluator o
	path c
	pathFinder t
	reachRange r
	speedModifier d
	targetPos q
	tick e
	timeLastRecompute n
	timeoutCachedNode h
	timeoutLimit k
	timeoutTimer i
	canFloat ()Z r
	canMoveDirectly (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;III)Z a
	canUpdatePath ()Z a
	createPath (DDDI)Lnet/minecraft/world/level/pathfinder/Path; a
	createPath (Ljava/util/Set;I)Lnet/minecraft/world/level/pathfinder/Path; a
	createPath (Ljava/util/Set;IZI)Lnet/minecraft/world/level/pathfinder/Path; a
	createPath (Ljava/util/Set;IZIF)Lnet/minecraft/world/level/pathfinder/Path; a
	createPath (Ljava/util/stream/Stream;I)Lnet/minecraft/world/level/pathfinder/Path; a
	createPath (Lnet/minecraft/core/BlockPos;I)Lnet/minecraft/world/level/pathfinder/Path; a
	createPath (Lnet/minecraft/core/BlockPos;II)Lnet/minecraft/world/level/pathfinder/Path; a
	createPath (Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/world/level/pathfinder/Path; a
	createPathFinder (I)Lnet/minecraft/world/level/pathfinder/PathFinder; a
	doStuckDetection (Lnet/minecraft/world/phys/Vec3;)V a
	followThePath ()V l
	getMaxDistanceToWaypoint ()F s
	getNodeEvaluator ()Lnet/minecraft/world/level/pathfinder/NodeEvaluator; q
	getPath ()Lnet/minecraft/world/level/pathfinder/Path; k
	getTargetPos ()Lnet/minecraft/core/BlockPos; h
	getTempMobPos ()Lnet/minecraft/world/phys/Vec3; b
	hasDelayedRecomputation ()Z i
	isDone ()Z m
	isInLiquid ()Z p
	isInProgress ()Z n
	isStableDestination (Lnet/minecraft/core/BlockPos;)Z a
	isStuck ()Z t
	moveTo (DDDD)Z a
	moveTo (Lnet/minecraft/world/entity/Entity;D)Z a
	moveTo (Lnet/minecraft/world/level/pathfinder/Path;D)Z a
	recomputePath ()V j
	recomputePath (Lnet/minecraft/core/BlockPos;)V b
	resetMaxVisitedNodesMultiplier ()V g
	resetStuckTimeout ()V f
	setCanFloat (Z)V d
	setMaxVisitedNodesMultiplier (F)V a
	setSpeedModifier (D)V a
	shouldTargetNextNodeInDirection (Lnet/minecraft/world/phys/Vec3;)Z b
	stop ()V o
	tick ()V c
	timeoutPath ()V e
	trimPath ()V D_
net/minecraft/world/entity/ai/navigation/WallClimberNavigation bca
	pathToPosition p
	createPath (Lnet/minecraft/core/BlockPos;I)Lnet/minecraft/world/level/pathfinder/Path; a
	createPath (Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/world/level/pathfinder/Path; a
	moveTo (Lnet/minecraft/world/entity/Entity;D)Z a
	tick ()V c
net/minecraft/world/entity/ai/navigation/WaterBoundPathNavigation bcb
	allowBreaching p
	canMoveDirectly (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;III)Z a
	canUpdatePath ()Z a
	createPathFinder (I)Lnet/minecraft/world/level/pathfinder/PathFinder; a
	doStuckDetection (Lnet/minecraft/world/phys/Vec3;)V a
	followThePath ()V l
	getTempMobPos ()Lnet/minecraft/world/phys/Vec3; b
	isStableDestination (Lnet/minecraft/core/BlockPos;)Z a
	setCanFloat (Z)V d
	tick ()V c
net/minecraft/world/entity/ai/sensing/AdultSensor bce
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)V a
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	requires ()Ljava/util/Set; a
	setNearestVisibleAdult (Lnet/minecraft/world/entity/AgeableMob;Ljava/util/List;)V a
net/minecraft/world/entity/ai/sensing/AxolotlAttackablesSensor bcf
	TARGET_DETECTION_DISTANCE a
	getMemory ()Lnet/minecraft/world/entity/ai/memory/MemoryModuleType; b
	isClose (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z e
	isHostileTarget (Lnet/minecraft/world/entity/LivingEntity;)Z b
	isHuntTarget (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z d
	isMatchingEntity (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/ai/sensing/DummySensor bcg
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/GolemSensor bch
	GOLEM_SCAN_RATE a
	MEMORY_TIME_TO_LIVE c
	checkForNearbyGolem (Lnet/minecraft/world/entity/LivingEntity;)V a
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	golemDetected (Lnet/minecraft/world/entity/LivingEntity;)V b
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/HoglinSpecificSensor bci
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)V a
	findNearestRepellent (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Ljava/util/Optional; b
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/HurtBySensor bcj
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/NearestBedSensor bck
	BATCH_SIZE c
	CACHE_TIMEOUT a
	RATE d
	batchCache e
	lastUpdate g
	triedCount f
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)V a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/NearestItemSensor bcl
	MAX_DISTANCE_TO_WANTED_ITEM a
	XZ_RANGE c
	Y_RANGE d
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)V a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/NearestLivingEntitySensor bcm
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/NearestVisibleLivingEntitySensor bcn
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	getMemory ()Lnet/minecraft/world/entity/ai/memory/MemoryModuleType; b
	getNearestEntity (Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/Optional; b
	getVisibleEntities (Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/Optional; a
	isMatchingEntity (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/PiglinBruteSpecificSensor bco
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/PiglinSpecificSensor bcp
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	findNearestRepellent (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/Optional; c
	isValidRepellent (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/PlayerSensor bcq
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/SecondaryPoiSensor bcr
	SCAN_RATE a
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)V a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/Sensing bcs
	mob a
	seen b
	unseen c
	hasLineOfSight (Lnet/minecraft/world/entity/Entity;)Z a
	tick ()V a
net/minecraft/world/entity/ai/sensing/Sensor bct
	ATTACK_TARGET_CONDITIONS f
	ATTACK_TARGET_CONDITIONS_IGNORE_INVISIBILITY_TESTING g
	DEFAULT_SCAN_RATE c
	RANDOM a
	TARGETING_RANGE b
	TARGET_CONDITIONS d
	TARGET_CONDITIONS_IGNORE_INVISIBILITY_TESTING e
	scanRate h
	timeToTick i
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	isEntityAttackable (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z c
	isEntityTargetable (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z b
	requires ()Ljava/util/Set; a
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V b
net/minecraft/world/entity/ai/sensing/SensorType bcu
	AXOLOTL_ATTACKABLES o
	AXOLOTL_TEMPTATIONS p
	DUMMY a
	GOAT_TEMPTATIONS q
	GOLEM_DETECTED j
	HOGLIN_SPECIFIC_SENSOR m
	HURT_BY f
	NEAREST_ADULT n
	NEAREST_BED e
	NEAREST_ITEMS b
	NEAREST_LIVING_ENTITIES c
	NEAREST_PLAYERS d
	PIGLIN_BRUTE_SPECIFIC_SENSOR l
	PIGLIN_SPECIFIC_SENSOR k
	SECONDARY_POIS i
	VILLAGER_BABIES h
	VILLAGER_HOSTILES g
	factory r
	create ()Lnet/minecraft/world/entity/ai/sensing/Sensor; a
	register (Ljava/lang/String;Ljava/util/function/Supplier;)Lnet/minecraft/world/entity/ai/sensing/SensorType; a
net/minecraft/world/entity/ai/sensing/TemptingSensor bcv
	TEMPTATION_RANGE a
	TEMPT_TARGETING c
	temptations d
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;)V a
	isTemptation (Lnet/minecraft/world/item/ItemStack;)Z a
	playerHoldingTemptation (Lnet/minecraft/world/entity/player/Player;)Z a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/VillagerBabiesSensor bcw
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	getNearestVillagerBabies (Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/List; a
	getVisibleEntities (Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/List; c
	isVillagerBaby (Lnet/minecraft/world/entity/LivingEntity;)Z b
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/VillagerHostilesSensor bcx
	ACCEPTABLE_DISTANCE_FROM_HOSTILES a
	getMemory ()Lnet/minecraft/world/entity/ai/memory/MemoryModuleType; b
	isClose (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z d
	isHostile (Lnet/minecraft/world/entity/LivingEntity;)Z b
	isMatchingEntity (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/ai/targeting/TargetingConditions bcz
	DEFAULT a
	MIN_VISIBILITY_DISTANCE_FOR_INVISIBLE_TARGET b
	checkLineOfSight e
	isCombat c
	range d
	selector g
	testInvisible f
	copy ()Lnet/minecraft/world/entity/ai/targeting/TargetingConditions; c
	forCombat ()Lnet/minecraft/world/entity/ai/targeting/TargetingConditions; a
	forNonCombat ()Lnet/minecraft/world/entity/ai/targeting/TargetingConditions; b
	ignoreInvisibilityTesting ()Lnet/minecraft/world/entity/ai/targeting/TargetingConditions; e
	ignoreLineOfSight ()Lnet/minecraft/world/entity/ai/targeting/TargetingConditions; d
	range (D)Lnet/minecraft/world/entity/ai/targeting/TargetingConditions; a
	selector (Ljava/util/function/Predicate;)Lnet/minecraft/world/entity/ai/targeting/TargetingConditions; a
	test (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/ai/util/AirAndWaterRandomPos bdb
	generateRandomPos (Lnet/minecraft/world/entity/PathfinderMob;IIIDDDZ)Lnet/minecraft/core/BlockPos; a
	getPos (Lnet/minecraft/world/entity/PathfinderMob;IIIDDD)Lnet/minecraft/world/phys/Vec3; a
net/minecraft/world/entity/ai/util/AirRandomPos bdc
	getPosTowards (Lnet/minecraft/world/entity/PathfinderMob;IIILnet/minecraft/world/phys/Vec3;D)Lnet/minecraft/world/phys/Vec3; a
net/minecraft/world/entity/ai/util/DefaultRandomPos bdd
	generateRandomPosTowardDirection (Lnet/minecraft/world/entity/PathfinderMob;IZLnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	getPos (Lnet/minecraft/world/entity/PathfinderMob;II)Lnet/minecraft/world/phys/Vec3; a
	getPosAway (Lnet/minecraft/world/entity/PathfinderMob;IILnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; a
	getPosTowards (Lnet/minecraft/world/entity/PathfinderMob;IILnet/minecraft/world/phys/Vec3;D)Lnet/minecraft/world/phys/Vec3; a
net/minecraft/world/entity/ai/util/GoalUtils bde
	hasGroundPathNavigation (Lnet/minecraft/world/entity/Mob;)Z a
	hasMalus (Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/core/BlockPos;)Z b
	isNotStable (Lnet/minecraft/world/entity/ai/navigation/PathNavigation;Lnet/minecraft/core/BlockPos;)Z a
	isOutsideLimits (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/PathfinderMob;)Z a
	isRestricted (ZLnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/core/BlockPos;)Z a
	isSolid (Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/core/BlockPos;)Z c
	isWater (Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/core/BlockPos;)Z a
	mobRestricted (Lnet/minecraft/world/entity/PathfinderMob;I)Z a
net/minecraft/world/entity/ai/util/HoverRandomPos bdf
	getPos (Lnet/minecraft/world/entity/PathfinderMob;IIDDFII)Lnet/minecraft/world/phys/Vec3; a
net/minecraft/world/entity/ai/util/LandRandomPos bdg
	generateRandomPosTowardDirection (Lnet/minecraft/world/entity/PathfinderMob;IZLnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	getPos (Lnet/minecraft/world/entity/PathfinderMob;II)Lnet/minecraft/world/phys/Vec3; a
	getPos (Lnet/minecraft/world/entity/PathfinderMob;IILjava/util/function/ToDoubleFunction;)Lnet/minecraft/world/phys/Vec3; a
	getPosAway (Lnet/minecraft/world/entity/PathfinderMob;IILnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; b
	getPosInDirection (Lnet/minecraft/world/entity/PathfinderMob;IILnet/minecraft/world/phys/Vec3;Z)Lnet/minecraft/world/phys/Vec3; a
	getPosTowards (Lnet/minecraft/world/entity/PathfinderMob;IILnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; a
	movePosUpOutOfSolid (Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
net/minecraft/world/entity/ai/util/RandomPos bdh
	RANDOM_POS_ATTEMPTS a
	generateRandomDirection (Ljava/util/Random;II)Lnet/minecraft/core/BlockPos; a
	generateRandomDirectionWithinRadians (Ljava/util/Random;IIIDDD)Lnet/minecraft/core/BlockPos; a
	generateRandomPos (Ljava/util/function/Supplier;Ljava/util/function/ToDoubleFunction;)Lnet/minecraft/world/phys/Vec3; a
	generateRandomPos (Lnet/minecraft/world/entity/PathfinderMob;Ljava/util/function/Supplier;)Lnet/minecraft/world/phys/Vec3; a
	generateRandomPosTowardDirection (Lnet/minecraft/world/entity/PathfinderMob;ILjava/util/Random;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	moveUpOutOfSolid (Lnet/minecraft/core/BlockPos;ILjava/util/function/Predicate;)Lnet/minecraft/core/BlockPos; a
	moveUpToAboveSolid (Lnet/minecraft/core/BlockPos;IILjava/util/function/Predicate;)Lnet/minecraft/core/BlockPos; a
net/minecraft/world/entity/ai/village/ReputationEventType bdj
	GOLEM_KILLED b
	TRADE e
	VILLAGER_HURT c
	VILLAGER_KILLED d
	ZOMBIE_VILLAGER_CURED a
	register (Ljava/lang/String;)Lnet/minecraft/world/entity/ai/village/ReputationEventType; a
net/minecraft/world/entity/ai/village/VillageSiege bdk
	LOGGER a
	hasSetupSiege b
	nextSpawnTime e
	siegeState c
	spawnX f
	spawnY g
	spawnZ h
	zombiesToSpawn d
	findRandomSpawnPos (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/Vec3; a
	tick (Lnet/minecraft/server/level/ServerLevel;ZZ)I a
	trySpawn (Lnet/minecraft/server/level/ServerLevel;)V b
	tryToSetupSiege (Lnet/minecraft/server/level/ServerLevel;)Z a
net/minecraft/world/entity/ai/village/VillageSiege$State bdk$a
	$VALUES d
	SIEGE_CAN_ACTIVATE a
	SIEGE_DONE c
	SIEGE_TONIGHT b
	$values ()[Lnet/minecraft/world/entity/ai/village/VillageSiege$State; a
net/minecraft/world/entity/ai/village/poi/PoiManager bdm
	MAX_VILLAGE_DISTANCE a
	VILLAGE_SECTION_SIZE b
	distanceTracker d
	loadedChunks e
	add (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/ai/village/poi/PoiType;)V a
	checkConsistencyWithBlocks (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/LevelChunkSection;)V a
	ensureLoadedAndValid (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;I)V a
	exists (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z a
	existsAtPosition (Lnet/minecraft/world/entity/ai/village/poi/PoiType;Lnet/minecraft/core/BlockPos;)Z a
	find (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/Optional; c
	findAll (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/stream/Stream; a
	findAllClosestFirst (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/stream/Stream; b
	findClosest (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/Optional; d
	findClosest (Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/Optional; d
	getCountInRange (Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)J a
	getFreeTickets (Lnet/minecraft/core/BlockPos;)I d
	getInChunk (Ljava/util/function/Predicate;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/stream/Stream; a
	getInRange (Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/stream/Stream; c
	getInSquare (Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/stream/Stream; b
	getRandom (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;Lnet/minecraft/core/BlockPos;ILjava/util/Random;)Ljava/util/Optional; a
	getType (Lnet/minecraft/core/BlockPos;)Ljava/util/Optional; c
	isVillageCenter (J)Z g
	mayHavePoi (Lnet/minecraft/world/level/chunk/LevelChunkSection;)Z a
	onSectionLoad (J)V b
	release (Lnet/minecraft/core/BlockPos;)Z b
	remove (Lnet/minecraft/core/BlockPos;)V a
	sectionsToVillage (Lnet/minecraft/core/SectionPos;)I a
	setDirty (J)V a
	take (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;I)Ljava/util/Optional; a
	tick (Ljava/util/function/BooleanSupplier;)V a
	updateFromSection (Lnet/minecraft/world/level/chunk/LevelChunkSection;Lnet/minecraft/core/SectionPos;Ljava/util/function/BiConsumer;)V a
net/minecraft/world/entity/ai/village/poi/PoiManager$DistanceTracker bdm$a
	levels b
	getLevel (J)I c
	getLevelFromSource (J)I b
	runAllUpdates ()V a
	setLevel (JI)V a
net/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy bdm$b
	$VALUES e
	ANY c
	HAS_SPACE a
	IS_OCCUPIED b
	test d
	$values ()[Lnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy; b
	getTest ()Ljava/util/function/Predicate; a
net/minecraft/world/entity/ai/village/poi/PoiRecord bdn
	freeTickets c
	poiType b
	pos a
	setDirty d
	acquireTicket ()Z b
	codec (Ljava/lang/Runnable;)Lcom/mojang/serialization/Codec; a
	getFreeTickets ()I a
	getPoiType ()Lnet/minecraft/world/entity/ai/village/poi/PoiType; g
	getPos ()Lnet/minecraft/core/BlockPos; f
	hasSpace ()Z d
	isOccupied ()Z e
	releaseTicket ()Z c
net/minecraft/world/entity/ai/village/poi/PoiSection bdo
	LOGGER a
	byType c
	isValid e
	records b
	setDirty d
	add (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/ai/village/poi/PoiType;)V a
	add (Lnet/minecraft/world/entity/ai/village/poi/PoiRecord;)Z a
	clear ()V b
	codec (Ljava/lang/Runnable;)Lcom/mojang/serialization/Codec; a
	exists (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z a
	getFreeTickets (Lnet/minecraft/core/BlockPos;)I b
	getPoiRecord (Lnet/minecraft/core/BlockPos;)Ljava/util/Optional; e
	getRecords (Ljava/util/function/Predicate;Lnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/stream/Stream; a
	getType (Lnet/minecraft/core/BlockPos;)Ljava/util/Optional; d
	isValid ()Z a
	refresh (Ljava/util/function/Consumer;)V a
	release (Lnet/minecraft/core/BlockPos;)Z c
	remove (Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/entity/ai/village/poi/PoiType bdp
	ALL b
	ALL_JOBS a
	ALL_JOB_POI_TYPES z
	ALL_STATES y
	ARMORER d
	BEDS A
	BEEHIVE t
	BEE_NEST u
	BUTCHER e
	CARTOGRAPHER f
	CAULDRONS B
	CLERIC g
	FARMER h
	FISHERMAN i
	FLETCHER j
	HOME r
	LEATHERWORKER k
	LIBRARIAN l
	LIGHTNING_ROD x
	LODESTONE w
	MASON m
	MEETING s
	NETHER_PORTAL v
	NITWIT n
	SHEPHERD o
	TOOLSMITH p
	TYPE_BY_STATE C
	UNEMPLOYED c
	WEAPONSMITH q
	matchingStates E
	maxTickets F
	name D
	predicate G
	validRange H
	forState (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/util/Optional; b
	getBlockStates (Lnet/minecraft/world/level/block/Block;)Ljava/util/Set; a
	getMaxTickets ()I b
	getName ()Ljava/lang/String; a
	getPredicate ()Ljava/util/function/Predicate; c
	getValidRange ()I d
	is (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	register (Ljava/lang/String;Ljava/util/Set;II)Lnet/minecraft/world/entity/ai/village/poi/PoiType; a
	register (Ljava/lang/String;Ljava/util/Set;ILjava/util/function/Predicate;I)Lnet/minecraft/world/entity/ai/village/poi/PoiType; a
	registerBlockStates (Lnet/minecraft/world/entity/ai/village/poi/PoiType;)Lnet/minecraft/world/entity/ai/village/poi/PoiType; a
net/minecraft/world/entity/ambient/AmbientCreature bdr
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/entity/ambient/Bat bds
	BAT_RESTING_TARGETING bS
	DATA_ID_FLAGS d
	FLAG_RESTING e
	FLAP_DEGREES_PER_TICK b
	TICKS_PER_FLAP c
	targetPosition bT
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	checkBatSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z b
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; n
	customServerAiStep ()V eX
	defineSynchedData ()V a_
	doPush (Lnet/minecraft/world/entity/Entity;)V A
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aI
	getSoundVolume ()F eo
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getVoicePitch ()F ep
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isFlapping ()Z aF
	isHalloween ()Z t
	isIgnoringBlockTriggers ()Z cf
	isPushable ()Z bd
	isResting ()Z p
	pushEntities ()V ey
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setResting (Z)V v
	tick ()V k
net/minecraft/world/entity/animal/AbstractFish bdu
	FROM_BUCKET b
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V u_
	canRandomSwim ()Z fv
	checkFishSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; n
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; a
	defineSynchedData ()V a_
	fromBucket ()Z p
	getFlopSound ()Lnet/minecraft/sounds/SoundEvent; fw
	getMaxSpawnClusterSize ()I fb
	getPickupSound ()Lnet/minecraft/sounds/SoundEvent; t
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; aA
	loadFromBucketTag (Lnet/minecraft/nbt/CompoundTag;)V c
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V v
	removeWhenFarAway (D)Z h
	requiresCustomPersistence ()Z O
	saveToBucketTag (Lnet/minecraft/world/item/ItemStack;)V m
	setFromBucket (Z)V v
	travel (Lnet/minecraft/world/phys/Vec3;)V g
net/minecraft/world/entity/animal/AbstractFish$FishMoveControl bdu$a
	fish l
	tick ()V a
net/minecraft/world/entity/animal/AbstractFish$FishSwimGoal bdu$b
	fish i
	canUse ()Z a
net/minecraft/world/entity/animal/AbstractGolem bdv
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getAmbientSoundInterval ()I J
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	removeWhenFarAway (D)Z h
net/minecraft/world/entity/animal/AbstractSchoolingFish bdw
	leader b
	schoolSize c
	addFollower ()V fE
	addFollowers (Ljava/util/stream/Stream;)V a
	canBeFollowed ()Z fA
	canRandomSwim ()Z fv
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getMaxSchoolSize ()I fx
	getMaxSpawnClusterSize ()I fb
	hasFollowers ()Z fB
	inRangeOfLeader ()Z fC
	isFollower ()Z fy
	pathToLeader ()V fD
	registerGoals ()V v
	removeFollower ()V fF
	startFollowing (Lnet/minecraft/world/entity/animal/AbstractSchoolingFish;)Lnet/minecraft/world/entity/animal/AbstractSchoolingFish; a
	stopFollowing ()V fz
	tick ()V k
net/minecraft/world/entity/animal/AbstractSchoolingFish$SchoolSpawnGroupData bdw$a
	leader a
net/minecraft/world/entity/animal/Animal bdx
	PARENT_AGE_AFTER_BREEDING bU
	inLove bS
	loveCause bT
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V u_
	canFallInLove ()Z fy
	canMate (Lnet/minecraft/world/entity/animal/Animal;)Z a
	checkAnimalSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z b
	customServerAiStep ()V eX
	getAmbientSoundInterval ()I J
	getExperienceReward (Lnet/minecraft/world/entity/player/Player;)I d
	getInLoveTime ()I fz
	getLoveCause ()Lnet/minecraft/server/level/ServerPlayer; fA
	getMyRidingOffset ()D bk
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	handleEntityEvent (B)V a
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isFood (Lnet/minecraft/world/item/ItemStack;)Z n
	isInLove ()Z fB
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	removeWhenFarAway (D)Z h
	resetLove ()V fC
	setInLove (Lnet/minecraft/world/entity/player/Player;)V g
	setInLoveTime (I)V t
	spawnChildFromBreeding (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/Animal;)V a
	usePlayerItem (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/entity/animal/Bee bdy
	COOLDOWN_BEFORE_LOCATING_NEW_FLOWER cC
	COOLDOWN_BEFORE_LOCATING_NEW_HIVE cA
	DATA_FLAGS_ID cc
	DATA_REMAINING_ANGER_TIME cd
	FLAG_HAS_NECTAR cg
	FLAG_HAS_STUNG cf
	FLAG_ROLL ce
	FLAP_DEGREES_PER_TICK bS
	HIVE_CLOSE_ENOUGH_DISTANCE cp
	HIVE_SEARCH_DISTANCE cr
	MAX_CROPS_GROWABLE cl
	MIN_ATTACK_DIST ck
	PATHFIND_TO_HIVE_WHEN_CLOSER_THAN cq
	PERSISTENT_ANGER_TIME cs
	POISON_SECONDS_HARD cn
	POISON_SECONDS_NORMAL cm
	STING_DEATH_COUNTDOWN ch
	TAG_CANNOT_ENTER_HIVE_TICKS bW
	TAG_CROPS_GROWN_SINCE_POLLINATION bV
	TAG_FLOWER_POS ca
	TAG_HAS_NECTAR bZ
	TAG_HAS_STUNG bY
	TAG_HIVE_POS cb
	TAG_TICKS_SINCE_POLLINATION bX
	TICKS_BEFORE_GOING_TO_KNOWN_FLOWER ci
	TICKS_PER_FLAP bT
	TICKS_WITHOUT_NECTAR_BEFORE_GOING_HOME cj
	TOO_FAR_DISTANCE co
	beePollinateGoal cG
	goToHiveGoal cH
	goToKnownFlowerGoal cI
	hivePos cF
	numCropsGrownSincePollination cz
	persistentAngerTarget ct
	remainingCooldownBeforeLocatingNewFlower cD
	remainingCooldownBeforeLocatingNewHive cB
	rollAmount cu
	rollAmountO cv
	savedFlowerPos cE
	stayOutOfHiveCountdown cy
	ticksWithoutNectarSinceExitingHive cx
	timeSinceSting cw
	underWaterTicks cJ
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V u_
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	closerThan (Lnet/minecraft/core/BlockPos;I)Z b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fI
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; a
	customServerAiStep ()V eX
	defineSynchedData ()V a_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	doesHiveHaveSpace (Lnet/minecraft/core/BlockPos;)Z i
	dropOffNectar ()V fK
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getBlacklistedHives ()Ljava/util/List; fw
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/Bee; b
	getCropsGrownSincePollination ()I fP
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getFlag (I)Z v
	getGoalSelector ()Lnet/minecraft/world/entity/ai/goal/GoalSelector; fF
	getHivePos ()Lnet/minecraft/core/BlockPos; fE
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; cu
	getMobType ()Lnet/minecraft/world/entity/MobType; ek
	getPersistentAngerTarget ()Ljava/util/UUID; b
	getRemainingPersistentAngerTime ()I a
	getRollAmount (F)F z
	getSavedFlowerPos ()Lnet/minecraft/core/BlockPos; p
	getSoundVolume ()F eo
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getTravellingTicks ()I fv
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	hasHive ()Z fD
	hasNectar ()Z fG
	hasSavedFlowerPos ()Z t
	hasStung ()Z fH
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	incrementNumCropsGrownSincePollination ()V fR
	isFlapping ()Z aF
	isFlowerValid (Lnet/minecraft/core/BlockPos;)Z k
	isFlying ()Z fJ
	isFood (Lnet/minecraft/world/item/ItemStack;)Z n
	isHiveNearFire ()Z fO
	isHiveValid ()Z fS
	isRolling ()Z fT
	isTiredOfLookingForNectar ()Z fL
	isTooFarAway (Lnet/minecraft/core/BlockPos;)Z j
	jumpInLiquid (Lnet/minecraft/tags/Tag;)V c
	pathfindRandomlyTowards (Lnet/minecraft/core/BlockPos;)V h
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V v
	resetNumCropsGrownSincePollination ()V fQ
	resetTicksWithoutNectarSinceExitingHive ()V fx
	sendDebugPackets ()V R
	setFlag (IZ)V d
	setHasNectar (Z)V v
	setHasStung (Z)V w
	setPersistentAngerTarget (Ljava/util/UUID;)V a
	setRemainingPersistentAngerTime (I)V a
	setRolling (Z)V x
	setSavedFlowerPos (Lnet/minecraft/core/BlockPos;)V g
	setStayOutOfHiveCountdown (I)V u
	spawnFluidParticle (Lnet/minecraft/world/level/Level;DDDDDLnet/minecraft/core/particles/ParticleOptions;)V a
	startPersistentAngerTimer ()V c
	tick ()V k
	updateRollAmount ()V fN
	wantsToEnterHive ()Z fM
net/minecraft/world/entity/animal/Bee$BaseBeeGoal bdy$a
	canBeeContinueToUse ()Z h
	canBeeUse ()Z g
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/animal/Bee$BeeAttackGoal bdy$b
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/animal/Bee$BeeBecomeAngryTargetGoal bdy$c
	beeCanTarget ()Z h
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/animal/Bee$BeeEnterHiveGoal bdy$d
	canBeeContinueToUse ()Z h
	canBeeUse ()Z g
	start ()V c
net/minecraft/world/entity/animal/Bee$BeeGoToHiveGoal bdy$e
	MAX_BLACKLISTED_TARGETS e
	MAX_TRAVELLING_TICKS b
	TICKS_BEFORE_HIVE_DROP h
	blacklistedTargets f
	lastPath g
	ticksStuck i
	travellingTicks d
	blacklistTarget (Lnet/minecraft/core/BlockPos;)V c
	canBeeContinueToUse ()Z h
	canBeeUse ()Z g
	canContinueToUse ()Z b
	canUse ()Z a
	clearBlacklist ()V j
	dropAndBlacklistHive ()V k
	dropHive ()V l
	hasReachedTarget (Lnet/minecraft/core/BlockPos;)Z d
	isTargetBlacklisted (Lnet/minecraft/core/BlockPos;)Z b
	pathfindDirectlyTowards (Lnet/minecraft/core/BlockPos;)Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Bee$BeeGoToKnownFlowerGoal bdy$f
	MAX_TRAVELLING_TICKS c
	travellingTicks d
	canBeeContinueToUse ()Z h
	canBeeUse ()Z g
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
	wantsToGoToKnownFlower ()Z j
net/minecraft/world/entity/animal/Bee$BeeGrowCropGoal bdy$g
	GROW_CHANCE b
	canBeeContinueToUse ()Z h
	canBeeUse ()Z g
	tick ()V e
net/minecraft/world/entity/animal/Bee$BeeHurtByOtherGoal bdy$h
	alertOther (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/LivingEntity;)V a
	canContinueToUse ()Z b
net/minecraft/world/entity/animal/Bee$BeeLocateHiveGoal bdy$i
	canBeeContinueToUse ()Z h
	canBeeUse ()Z g
	findNearbyHivesWithSpace ()Ljava/util/List; j
	start ()V c
net/minecraft/world/entity/animal/Bee$BeeLookControl bdy$j
	resetXRotOnTick ()Z c
	tick ()V a
net/minecraft/world/entity/animal/Bee$BeePollinateGoal bdy$k
	ARRIVAL_THRESHOLD g
	HOVER_HEIGHT_WITHIN_FLOWER j
	HOVER_POS_OFFSET k
	MAX_FIND_FLOWER_RETRY_COOLDOWN e
	MAX_POLLINATING_TICKS q
	MIN_FIND_FLOWER_RETRY_COOLDOWN d
	MIN_POLLINATION_TICKS c
	POSITION_CHANGE_CHANCE h
	SPEED_MODIFIER i
	VALID_POLLINATION_BLOCKS f
	hoverPos o
	lastSoundPlayedTick m
	pollinating n
	pollinatingTicks p
	successfulPollinatingTicks l
	canBeeContinueToUse ()Z h
	canBeeUse ()Z g
	findNearbyFlower ()Ljava/util/Optional; o
	findNearestBlock (Ljava/util/function/Predicate;D)Ljava/util/Optional; a
	getOffset ()F n
	hasPollinatedLongEnough ()Z j
	isPollinating ()Z k
	setWantedPos ()V m
	start ()V c
	stop ()V d
	stopPollinating ()V l
	tick ()V e
net/minecraft/world/entity/animal/Bee$BeeWanderGoal bdy$l
	WANDER_THRESHOLD b
	canContinueToUse ()Z b
	canUse ()Z a
	findPos ()Lnet/minecraft/world/phys/Vec3; g
	start ()V c
net/minecraft/world/entity/animal/Bucketable bdz
	bucketMobPickup (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/Optional; a
	fromBucket ()Z p
	getBucketItemStack ()Lnet/minecraft/world/item/ItemStack; b
	getPickupSound ()Lnet/minecraft/sounds/SoundEvent; t
	loadDefaultDataFromBucketTag (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/nbt/CompoundTag;)V a
	loadFromBucketTag (Lnet/minecraft/nbt/CompoundTag;)V c
	saveDefaultDataToBucketTag (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/item/ItemStack;)V a
	saveToBucketTag (Lnet/minecraft/world/item/ItemStack;)V m
	setFromBucket (Z)V v
net/minecraft/world/entity/animal/Cat bea
	DATA_COLLAR_COLOR co
	DATA_TYPE_ID cl
	IS_LYING cm
	NUMBER_OF_CAT_TYPES cp
	NUMBER_OF_CAT_TYPES_EXCEPT_ALL_BLACK cq
	RELAX_STATE_ONE cn
	SPRINT_SPEED_MOD bX
	TEMPT_INGREDIENT ck
	TEMPT_SPEED_MOD bV
	TEXTURE_BY_TYPE cj
	TYPE_ALL_BLACK ci
	TYPE_BLACK bZ
	TYPE_BRITISH cc
	TYPE_CALICO cd
	TYPE_JELLIE ch
	TYPE_PERSIAN ce
	TYPE_RAGDOLL cf
	TYPE_RED ca
	TYPE_SIAMESE cb
	TYPE_TABBY bY
	TYPE_WHITE cg
	WALK_SPEED_MOD bW
	avoidPlayersGoal cr
	lieDownAmount ct
	lieDownAmountO cu
	lieDownAmountOTail cw
	lieDownAmountTail cv
	relaxStateOneAmount cx
	relaxStateOneAmountO cy
	temptGoal cs
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canMate (Lnet/minecraft/world/entity/animal/Animal;)Z a
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fJ
	customServerAiStep ()V eX
	defineSynchedData ()V a_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getAmbientSoundInterval ()I J
	getAttackDamage ()F fK
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/Cat; b
	getCatType ()I fE
	getCollarColor ()Lnet/minecraft/world/item/DyeColor; fH
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getLieDownAmount (F)F z
	getLieDownAmountTail (F)F A
	getRelaxStateOneAmount (F)F B
	getResourceLocation ()Lnet/minecraft/resources/ResourceLocation; fD
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	handleLieDown ()V fL
	hiss ()V fI
	isFood (Lnet/minecraft/world/item/ItemStack;)Z n
	isLying ()Z fF
	isRelaxStateOne ()Z fG
	isSteppingCarefully ()Z bE
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	reassessTameGoals ()V t
	registerGoals ()V v
	removeWhenFarAway (D)Z h
	setCatType (I)V u
	setCollarColor (Lnet/minecraft/world/item/DyeColor;)V a
	setLying (Z)V z
	setRelaxStateOne (Z)V A
	tick ()V k
	updateLieDownAmount ()V fM
	updateRelaxStateOneAmount ()V fN
	usePlayerItem (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/entity/animal/Cat$CatAvoidEntityGoal bea$a
	cat i
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/animal/Cat$CatRelaxOnOwnerGoal bea$b
	cat a
	goalPos c
	onBedTicks d
	ownerPlayer b
	canContinueToUse ()Z b
	canUse ()Z a
	giveMorningGift ()V h
	spaceIsOccupied ()Z g
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Cat$CatTemptGoal bea$c
	cat d
	selectedPlayer c
	canScare ()Z g
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/animal/Chicken beb
	FOOD_ITEMS ca
	eggTime bY
	flap bS
	flapSpeed bT
	flapping bX
	isChickenJockey bZ
	nextFlap cb
	oFlap bW
	oFlapSpeed bV
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V u_
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; p
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/Chicken; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getExperienceReward (Lnet/minecraft/world/entity/player/Player;)I d
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	isChickenJockey ()Z t
	isFlapping ()Z aF
	isFood (Lnet/minecraft/world/item/ItemStack;)Z n
	onFlap ()V aE
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	positionRider (Lnet/minecraft/world/entity/Entity;)V i
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V v
	removeWhenFarAway (D)Z h
	setChickenJockey (Z)V v
net/minecraft/world/entity/animal/Cod bec
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getBucketItemStack ()Lnet/minecraft/world/item/ItemStack; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getFlopSound ()Lnet/minecraft/sounds/SoundEvent; fw
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
net/minecraft/world/entity/animal/Cow bed
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; p
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/Cow; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getSoundVolume ()F eo
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	registerGoals ()V v
net/minecraft/world/entity/animal/Dolphin bee
	ALLOWED_ITEMS c
	GOT_FISH e
	MOISTNESS_LEVEL bS
	SWIM_WITH_PLAYER_TARGETING bT
	TOTAL_AIR_SUPPLY b
	TOTAL_MOISTNESS_LEVEL bU
	TREASURE_POS d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addParticlesAroundSelf (Lnet/minecraft/core/particles/ParticleOptions;)V a
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	canBreatheUnderwater ()Z dr
	canRide (Lnet/minecraft/world/entity/Entity;)Z l
	canTakeItem (Lnet/minecraft/world/item/ItemStack;)Z g
	checkDolphinSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z b
	closeToNextPos ()Z fw
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fv
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; a
	defineSynchedData ()V a_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMaxAirSupply ()I bS
	getMaxHeadXRot ()I eY
	getMaxHeadYRot ()I eZ
	getMoistnessLevel ()I t
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; aA
	getSwimSplashSound ()Lnet/minecraft/sounds/SoundEvent; aB
	getTreasurePos ()Lnet/minecraft/core/BlockPos; n
	gotFish ()Z p
	handleAirSupply (I)V a
	handleEntityEvent (B)V a
	increaseAirSupply (I)I n
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	pickUpItem (Lnet/minecraft/world/entity/item/ItemEntity;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V v
	setGotFish (Z)V v
	setMoisntessLevel (I)V b
	setTreasurePos (Lnet/minecraft/core/BlockPos;)V g
	tick ()V k
	travel (Lnet/minecraft/world/phys/Vec3;)V g
net/minecraft/world/entity/animal/Dolphin$DolphinSwimToTreasureGoal bee$a
	dolphin a
	stuck b
	canContinueToUse ()Z b
	canUse ()Z a
	isInterruptable ()Z C_
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Dolphin$DolphinSwimWithPlayerGoal bee$b
	dolphin a
	player c
	speedModifier b
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Dolphin$PlayWithItemsGoal bee$c
	cooldown b
	canUse ()Z a
	drop (Lnet/minecraft/world/item/ItemStack;)V a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/FlyingAnimal bef
	isFlying ()Z fJ
net/minecraft/world/entity/animal/Fox beg
	ALLOWED_ITEMS ce
	AVOID_PLAYERS ch
	DATA_FLAGS_ID bX
	DATA_TRUSTED_ID_0 cc
	DATA_TRUSTED_ID_1 cd
	DATA_TYPE_ID bW
	FLAG_CROUCHING bS
	FLAG_DEFENDING cb
	FLAG_FACEPLANTED ca
	FLAG_INTERESTED bT
	FLAG_POUNCING bV
	FLAG_SITTING bY
	FLAG_SLEEPING bZ
	MIN_TICKS_BEFORE_EAT ci
	STALKABLE_PREY cg
	TRUSTED_TARGET_SELECTOR cf
	crouchAmount co
	crouchAmountO cp
	fishTargetGoal cl
	interestedAngle cm
	interestedAngleO cn
	landTargetGoal cj
	ticksSinceEaten cq
	turtleEggTargetGoal ck
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addTrustedUUID (Ljava/util/UUID;)V b
	aiStep ()V u_
	calculateFallDamage (FF)I d
	canEat (Lnet/minecraft/world/item/ItemStack;)Z m
	canHoldItem (Lnet/minecraft/world/item/ItemStack;)Z k
	canMove ()Z fL
	canTakeItem (Lnet/minecraft/world/item/ItemStack;)Z g
	clearStates ()V fK
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; p
	defineSynchedData ()V a_
	dropAllDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;)V f
	dropItemStack (Lnet/minecraft/world/item/ItemStack;)V p
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/Fox; b
	getCrouchAmount (F)F A
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getEatingSound (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/sounds/SoundEvent; e
	getFlag (I)Z u
	getFoxType ()Lnet/minecraft/world/entity/animal/Fox$Type; t
	getHeadRollAngle (F)F z
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; cu
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getTrustedUUIDs ()Ljava/util/List; fH
	handleEntityEvent (B)V a
	isCrouching ()Z bI
	isDefending ()Z fI
	isFaceplanted ()Z fw
	isFood (Lnet/minecraft/world/item/ItemStack;)Z n
	isFullyCrouched ()Z fE
	isImmobile ()Z eq
	isInterested ()Z fF
	isJumping ()Z fD
	isPathClear (Lnet/minecraft/world/entity/animal/Fox;Lnet/minecraft/world/entity/LivingEntity;)Z a
	isPouncing ()Z fx
	isSitting ()Z fv
	isSleeping ()Z eU
	onOffspringSpawnedFromEgg (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Mob;)V a
	pickUpItem (Lnet/minecraft/world/entity/item/ItemEntity;)V b
	playAmbientSound ()V K
	populateDefaultEquipmentSlots (Lnet/minecraft/world/DifficultyInstance;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V v
	setDefending (Z)V A
	setFaceplanted (Z)V z
	setFlag (IZ)V d
	setFoxType (Lnet/minecraft/world/entity/animal/Fox$Type;)V a
	setIsCrouching (Z)V x
	setIsInterested (Z)V y
	setIsPouncing (Z)V w
	setSitting (Z)V v
	setSleeping (Z)V B
	setTarget (Lnet/minecraft/world/entity/LivingEntity;)V h
	setTargetGoals ()V fG
	spitOutItem (Lnet/minecraft/world/item/ItemStack;)V o
	tick ()V k
	trusts (Ljava/util/UUID;)Z c
	usePlayerItem (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/item/ItemStack;)V a
	wakeUp ()V fJ
net/minecraft/world/entity/animal/Fox$DefendTrustedTargetGoal beg$a
	timestamp l
	trustedLastHurt k
	trustedLastHurtBy j
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/animal/Fox$FaceplantGoal beg$b
	countdown a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Fox$FoxAlertableEntitiesSelector beg$c
	test (Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/animal/Fox$FoxBehaviorGoal beg$d
	alertableTargeting b
	alertable ()Z h
	hasShelter ()Z g
net/minecraft/world/entity/animal/Fox$FoxBreedGoal beg$e
	breed ()V g
	start ()V c
net/minecraft/world/entity/animal/Fox$FoxEatBerriesGoal beg$f
	WAIT_TICKS i
	ticksWaited g
	acceptedDistance ()D h
	canUse ()Z a
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	onReachedTarget ()V n
	pickGlowBerry (Lnet/minecraft/world/level/block/state/BlockState;)V a
	pickSweetBerries (Lnet/minecraft/world/level/block/state/BlockState;)V b
	shouldRecalculatePath ()Z k
	start ()V c
	tick ()V e
net/minecraft/world/entity/animal/Fox$FoxFloatGoal beg$g
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/animal/Fox$FoxFollowParentGoal beg$h
	fox e
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/animal/Fox$FoxGroupData beg$i
	type a
net/minecraft/world/entity/animal/Fox$FoxLookAtPlayerGoal beg$j
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/animal/Fox$FoxLookControl beg$k
	resetXRotOnTick ()Z c
	tick ()V a
net/minecraft/world/entity/animal/Fox$FoxMeleeAttackGoal beg$l
	canUse ()Z a
	checkAndPerformAttack (Lnet/minecraft/world/entity/LivingEntity;D)V a
	start ()V c
net/minecraft/world/entity/animal/Fox$FoxMoveControl beg$m
	tick ()V a
net/minecraft/world/entity/animal/Fox$FoxPanicGoal beg$n
	canUse ()Z a
net/minecraft/world/entity/animal/Fox$FoxPounceGoal beg$o
	canContinueToUse ()Z b
	canUse ()Z a
	isInterruptable ()Z C_
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Fox$FoxSearchForItemsGoal beg$p
	canUse ()Z a
	start ()V c
	tick ()V e
net/minecraft/world/entity/animal/Fox$FoxStrollThroughVillageGoal beg$q
	canContinueToUse ()Z b
	canFoxMove ()Z g
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/animal/Fox$PerchAndSearchGoal beg$r
	lookTime e
	looksRemaining f
	relX c
	relZ d
	canContinueToUse ()Z b
	canUse ()Z a
	resetLook ()V j
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Fox$SeekShelterGoal beg$s
	interval c
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/animal/Fox$SleepGoal beg$t
	WAIT_TIME_BEFORE_SLEEP c
	countdown d
	canContinueToUse ()Z b
	canSleep ()Z j
	canUse ()Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/animal/Fox$StalkPreyGoal beg$u
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Fox$Type beg$v
	$VALUES h
	BY_ID c
	BY_NAME d
	RED a
	SNOW b
	biomes g
	id e
	name f
	$values ()[Lnet/minecraft/world/entity/animal/Fox$Type; c
	byBiome (Ljava/util/Optional;)Lnet/minecraft/world/entity/animal/Fox$Type; a
	byId (I)Lnet/minecraft/world/entity/animal/Fox$Type; a
	byName (Ljava/lang/String;)Lnet/minecraft/world/entity/animal/Fox$Type; a
	getId ()I b
	getName ()Ljava/lang/String; a
net/minecraft/world/entity/animal/IronGolem beh
	DATA_FLAGS_ID c
	IRON_INGOT_HEAL_AMOUNT d
	PERSISTENT_ANGER_TIME bT
	attackAnimationTick e
	offerFlowerTick bS
	persistentAngerTarget bV
	remainingPersistentAngerTime bU
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V u_
	canAttackType (Lnet/minecraft/world/entity/EntityType;)Z a
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; n
	decreaseAirSupply (I)I m
	defineSynchedData ()V a_
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	doPush (Lnet/minecraft/world/entity/Entity;)V A
	getAttackAnimationTick ()I t
	getAttackDamage ()F fx
	getCrackiness ()Lnet/minecraft/world/entity/animal/IronGolem$Crackiness; p
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; cu
	getOfferFlowerTick ()I fv
	getPersistentAngerTarget ()Ljava/util/UUID; b
	getRemainingPersistentAngerTime ()I a
	handleEntityEvent (B)V a
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isPlayerCreated ()Z fw
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	offerFlower (Z)V v
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V v
	setPersistentAngerTarget (Ljava/util/UUID;)V a
	setPlayerCreated (Z)V w
	setRemainingPersistentAngerTime (I)V a
	startPersistentAngerTimer ()V c
net/minecraft/world/entity/animal/IronGolem$Crackiness beh$a
	$VALUES g
	BY_DAMAGE e
	HIGH d
	LOW b
	MEDIUM c
	NONE a
	fraction f
	$values ()[Lnet/minecraft/world/entity/animal/IronGolem$Crackiness; a
	byFraction (F)Lnet/minecraft/world/entity/animal/IronGolem$Crackiness; a
net/minecraft/world/entity/animal/MushroomCow bei
	DATA_TYPE bS
	MUTATE_CHANCE bT
	effect bV
	effectDuration bW
	lastLightningBoltUUID bX
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	checkMushroomSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z c
	defineSynchedData ()V a_
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/Cow; b
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/MushroomCow; c
	getEffectFromItemStack (Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; m
	getMushroomType ()Lnet/minecraft/world/entity/animal/MushroomCow$MushroomType; t
	getOffspringType (Lnet/minecraft/world/entity/animal/MushroomCow;)Lnet/minecraft/world/entity/animal/MushroomCow$MushroomType; a
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	readyForShearing ()Z a
	setMushroomType (Lnet/minecraft/world/entity/animal/MushroomCow$MushroomType;)V a
	shear (Lnet/minecraft/sounds/SoundSource;)V a
	thunderHit (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LightningBolt;)V a
net/minecraft/world/entity/animal/MushroomCow$MushroomType bei$a
	$VALUES e
	BROWN b
	RED a
	blockState d
	type c
	$values ()[Lnet/minecraft/world/entity/animal/MushroomCow$MushroomType; b
	byType (Ljava/lang/String;)Lnet/minecraft/world/entity/animal/MushroomCow$MushroomType; a
	getBlockState ()Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/entity/animal/Ocelot bej
	CROUCH_SPEED_MOD bS
	DATA_TRUSTING bX
	SPRINT_SPEED_MOD bV
	TEMPT_INGREDIENT bW
	WALK_SPEED_MOD bT
	ocelotAvoidPlayersGoal bY
	temptGoal bZ
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	checkOcelotSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z c
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; p
	customServerAiStep ()V eX
	defineSynchedData ()V a_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getAmbientSoundInterval ()I J
	getAttackDamage ()F fw
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/Ocelot; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; cu
	handleEntityEvent (B)V a
	isFood (Lnet/minecraft/world/item/ItemStack;)Z n
	isSteppingCarefully ()Z bE
	isTrusting ()Z fv
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	reassessTrustingGoals ()V t
	registerGoals ()V v
	removeWhenFarAway (D)Z h
	setTrusting (Z)V v
	spawnTrustingParticles (Z)V w
net/minecraft/world/entity/animal/Ocelot$OcelotAvoidEntityGoal bej$a
	ocelot i
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/animal/Ocelot$OcelotTemptGoal bej$b
	ocelot c
	canScare ()Z g
net/minecraft/world/entity/animal/Panda bek
	BREED_TARGETING cb
	DATA_ID_FLAGS ca
	EAT_COUNTER bX
	EAT_TICK_INTERVAL cg
	FLAG_ON_BACK cf
	FLAG_ROLL cd
	FLAG_SIT ce
	FLAG_SNEEZE cc
	HIDDEN_GENE_ID bZ
	MAIN_GENE_ID bY
	PANDA_ITEMS cs
	SNEEZE_COUNTER bW
	TOTAL_ROLL_STEPS bS
	TOTAL_UNHAPPY_TIME ch
	UNHAPPY_COUNTER bV
	didBite cj
	gotBamboo ci
	lookAtPlayerGoal cr
	onBackAmount cn
	onBackAmountO co
	rollAmount cp
	rollAmountO cq
	rollCounter bT
	rollDelta ck
	sitAmount cl
	sitAmountO cm
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addEatingParticles ()V fT
	afterSneeze ()V fY
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	canPerformAction ()Z fQ
	canTakeItem (Lnet/minecraft/world/item/ItemStack;)Z g
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fH
	defineSynchedData ()V a_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	eat (Z)V x
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getEatCounter ()I fR
	getFlag (I)Z x
	getHiddenGene ()Lnet/minecraft/world/entity/animal/Panda$Gene; fF
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getLieOnBackAmount (F)F A
	getMainGene ()Lnet/minecraft/world/entity/animal/Panda$Gene; fE
	getOneOfGenesRandomly ()Lnet/minecraft/world/entity/animal/Panda$Gene; fZ
	getRollAmount (F)F B
	getSitAmount (F)F z
	getSneezeCounter ()I fD
	getUnhappyCounter ()I p
	getVariant ()Lnet/minecraft/world/entity/animal/Panda$Gene; fI
	handleEating ()V fS
	handleRoll ()V fX
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isAggressive ()Z fq
	isBrown ()Z fM
	isEating ()Z fx
	isFood (Lnet/minecraft/world/item/ItemStack;)Z n
	isFoodOrCake (Lnet/minecraft/world/item/ItemStack;)Z m
	isLazy ()Z fJ
	isOnBack ()Z fw
	isPlayful ()Z fL
	isRolling ()Z fG
	isScared ()Z fO
	isSitting ()Z fv
	isSneezing ()Z t
	isWeak ()Z fN
	isWorried ()Z fK
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	pickUpItem (Lnet/minecraft/world/entity/item/ItemEntity;)V b
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V v
	roll (Z)V z
	setAttributes ()V fP
	setEatCounter (I)V w
	setFlag (IZ)V d
	setGeneFromParents (Lnet/minecraft/world/entity/animal/Panda;Lnet/minecraft/world/entity/animal/Panda;)V a
	setHiddenGene (Lnet/minecraft/world/entity/animal/Panda$Gene;)V b
	setMainGene (Lnet/minecraft/world/entity/animal/Panda$Gene;)V a
	setOnBack (Z)V w
	setSneezeCounter (I)V v
	setUnhappyCounter (I)V u
	sit (Z)V v
	sneeze (Z)V y
	tick ()V k
	tryToSit ()V ga
	updateOnBackAnimation ()V fV
	updateRollAmount ()V fW
	updateSitAmount ()V fU
net/minecraft/world/entity/animal/Panda$Gene bek$a
	$VALUES m
	AGGRESSIVE g
	BROWN e
	BY_ID h
	LAZY b
	MAX_GENE i
	NORMAL a
	PLAYFUL d
	WEAK f
	WORRIED c
	id j
	isRecessive l
	name k
	$values ()[Lnet/minecraft/world/entity/animal/Panda$Gene; d
	byId (I)Lnet/minecraft/world/entity/animal/Panda$Gene; a
	byName (Ljava/lang/String;)Lnet/minecraft/world/entity/animal/Panda$Gene; a
	getId ()I a
	getName ()Ljava/lang/String; b
	getRandom (Ljava/util/Random;)Lnet/minecraft/world/entity/animal/Panda$Gene; a
	getVariantFromGenes (Lnet/minecraft/world/entity/animal/Panda$Gene;Lnet/minecraft/world/entity/animal/Panda$Gene;)Lnet/minecraft/world/entity/animal/Panda$Gene; a
	isRecessive ()Z c
net/minecraft/world/entity/animal/Panda$PandaAttackGoal bek$b
	panda b
	canUse ()Z a
net/minecraft/world/entity/animal/Panda$PandaAvoidGoal bek$c
	panda i
	canUse ()Z a
net/minecraft/world/entity/animal/Panda$PandaBreedGoal bek$d
	panda e
	unhappyCooldown f
	canFindBamboo ()Z h
	canUse ()Z a
net/minecraft/world/entity/animal/Panda$PandaHurtByTargetGoal bek$e
	panda a
	alertOther (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/LivingEntity;)V a
	canContinueToUse ()Z b
net/minecraft/world/entity/animal/Panda$PandaLieOnBackGoal bek$f
	cooldown b
	panda a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/animal/Panda$PandaLookAtPlayerGoal bek$g
	panda h
	canContinueToUse ()Z b
	canUse ()Z a
	setTarget (Lnet/minecraft/world/entity/LivingEntity;)V a
	tick ()V e
net/minecraft/world/entity/animal/Panda$PandaMoveControl bek$h
	panda l
	tick ()V a
net/minecraft/world/entity/animal/Panda$PandaPanicGoal bek$i
	panda g
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/animal/Panda$PandaRollGoal bek$j
	panda a
	canContinueToUse ()Z b
	canUse ()Z a
	isInterruptable ()Z C_
	start ()V c
net/minecraft/world/entity/animal/Panda$PandaSitGoal bek$k
	cooldown b
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Panda$PandaSneezeGoal bek$l
	panda a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/animal/Parrot bel
	DATA_VARIANT_ID bZ
	MOB_SOUND_MAP ce
	NOT_PARROT_PREDICATE ca
	POISONOUS_FOOD cb
	TAME_FOOD cc
	VARIANTS cd
	flap bV
	flapSpeed bW
	flapping cf
	jukebox ci
	nextFlap cg
	oFlap bY
	oFlapSpeed bX
	partyParrot ch
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V u_
	calculateFlapping ()V fH
	canMate (Lnet/minecraft/world/entity/animal/Animal;)Z a
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	checkParrotSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z c
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fD
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; a
	defineSynchedData ()V a_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	doPush (Lnet/minecraft/world/entity/Entity;)V A
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbient (Lnet/minecraft/world/level/Level;Ljava/util/Random;)Lnet/minecraft/sounds/SoundEvent; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getImitatedSound (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/sounds/SoundEvent; b
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; cu
	getPitch (Ljava/util/Random;)F a
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; cJ
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getVariant ()I fF
	getVoicePitch ()F ep
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	imitateNearbyMobs (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;)Z a
	isBaby ()Z w_
	isFlapping ()Z aF
	isFlying ()Z fJ
	isFood (Lnet/minecraft/world/item/ItemStack;)Z n
	isPartyParrot ()Z fE
	isPushable ()Z bd
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	onFlap ()V aE
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V v
	setRecordPlayingNearby (Lnet/minecraft/core/BlockPos;Z)V a
	setVariant (I)V u
net/minecraft/world/entity/animal/Pig bem
	DATA_BOOST_TIME bT
	DATA_SADDLE_ID bS
	FOOD_ITEMS bV
	steering bW
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	boost ()Z a
	canBeControlledByRider ()Z fc
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; p
	defineSynchedData ()V a_
	dropEquipment ()V dX
	equipSaddle (Lnet/minecraft/sounds/SoundSource;)V a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/Pig; b
	getControllingPassenger ()Lnet/minecraft/world/entity/Entity; cz
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getDismountLocationForPassenger (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/phys/Vec3; b
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; cu
	getSteeringSpeed ()F b
	isFood (Lnet/minecraft/world/item/ItemStack;)Z n
	isSaddleable ()Z c
	isSaddled ()Z d
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V v
	thunderHit (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LightningBolt;)V a
	travel (Lnet/minecraft/world/phys/Vec3;)V g
	travelWithInput (Lnet/minecraft/world/phys/Vec3;)V a
net/minecraft/world/entity/animal/PolarBear ben
	DATA_STANDING_ID bS
	PERSISTENT_ANGER_TIME bY
	STAND_ANIMATION_TICKS bT
	clientSideStandAnimation bW
	clientSideStandAnimationO bV
	persistentAngerTarget ca
	remainingPersistentAngerTime bZ
	warningSoundTicks bX
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	checkPolarBearSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z c
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; p
	defineSynchedData ()V a_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getPersistentAngerTarget ()Ljava/util/UUID; b
	getRemainingPersistentAngerTime ()I a
	getStandingAnimationScale (F)F z
	getWaterSlowDown ()F eu
	isFood (Lnet/minecraft/world/item/ItemStack;)Z n
	isStanding ()Z fv
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	playWarningSound ()V t
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V v
	setPersistentAngerTarget (Ljava/util/UUID;)V a
	setRemainingPersistentAngerTime (I)V a
	setStanding (Z)V v
	startPersistentAngerTimer ()V c
	tick ()V k
net/minecraft/world/entity/animal/PolarBear$PolarBearAttackPlayersGoal ben$a
	canUse ()Z a
	getFollowDistance ()D k
net/minecraft/world/entity/animal/PolarBear$PolarBearHurtByTargetGoal ben$b
	alertOther (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/LivingEntity;)V a
	start ()V c
net/minecraft/world/entity/animal/PolarBear$PolarBearMeleeAttackGoal ben$c
	checkAndPerformAttack (Lnet/minecraft/world/entity/LivingEntity;D)V a
	getAttackReachSqr (Lnet/minecraft/world/entity/LivingEntity;)D a
	stop ()V d
net/minecraft/world/entity/animal/PolarBear$PolarBearPanicGoal ben$d
	canUse ()Z a
net/minecraft/world/entity/animal/Pufferfish beo
	PUFF_STATE e
	SCARY_MOB bU
	STATE_FULL d
	STATE_MID c
	STATE_SMALL b
	deflateTimer bT
	inflateCounter bS
	targetingConditions bV
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V u_
	defineSynchedData ()V a_
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getBucketItemStack ()Lnet/minecraft/world/item/ItemStack; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getFlopSound ()Lnet/minecraft/sounds/SoundEvent; fw
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getPuffState ()I fx
	getScale (I)F t
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playerTouch (Lnet/minecraft/world/entity/player/Player;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V v
	setPuffState (I)V b
	tick ()V k
	touch (Lnet/minecraft/world/entity/Mob;)V a
net/minecraft/world/entity/animal/Pufferfish$PufferfishPuffGoal beo$a
	fish a
	canUse ()Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/animal/Rabbit bep
	ATTACK_SPEED_MOD bX
	BREED_SPEED_MOD bT
	DATA_TYPE_ID ch
	EVIL_ARMOR_VALUE cg
	EVIL_ATTACK_POWER cf
	FLEE_SPEED_MOD bW
	FOLLOW_SPEED_MOD bV
	KILLER_BUNNY ci
	MORE_CARROTS_DELAY cj
	STROLL_SPEED_MOD bS
	TYPE_BLACK ca
	TYPE_BROWN bY
	TYPE_EVIL ce
	TYPE_GOLD cc
	TYPE_SALT cd
	TYPE_WHITE bZ
	TYPE_WHITE_SPLOTCHED cb
	jumpDelayTicks cn
	jumpDuration cl
	jumpTicks ck
	moreCarrotTicks co
	wasOnGround cm
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V u_
	canSpawnSprintParticle ()Z aV
	checkLandingDelay ()V fF
	checkRabbitSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z c
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; t
	customServerAiStep ()V eX
	defineSynchedData ()V a_
	disableJumpControl ()V fD
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	enableJumpControl ()V fx
	facePoint (DD)V b
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/Rabbit; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getJumpCompletion (F)F z
	getJumpPower ()F er
	getJumpSound ()Lnet/minecraft/sounds/SoundEvent; fv
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; cu
	getRabbitType ()I fw
	getRandomRabbitType (Lnet/minecraft/world/level/LevelAccessor;)I a
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; cJ
	handleEntityEvent (B)V a
	isFood (Lnet/minecraft/world/item/ItemStack;)Z n
	isTemptingItem (Lnet/minecraft/world/item/ItemStack;)Z m
	jumpFromGround ()V es
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V v
	setJumping (Z)V q
	setLandingDelay ()V fE
	setRabbitType (I)V u
	setSpeedModifier (D)V i
	startJumping ()V p
	wantsMoreFood ()Z fG
net/minecraft/world/entity/animal/Rabbit$EvilRabbitAttackGoal bep$a
	getAttackReachSqr (Lnet/minecraft/world/entity/LivingEntity;)D a
net/minecraft/world/entity/animal/Rabbit$RabbitAvoidEntityGoal bep$b
	rabbit i
	canUse ()Z a
net/minecraft/world/entity/animal/Rabbit$RabbitGroupData bep$c
	rabbitType a
net/minecraft/world/entity/animal/Rabbit$RabbitJumpControl bep$d
	canJump d
	rabbit c
	canJump ()Z d
	setCanJump (Z)V a
	tick ()V b
	wantJump ()Z c
net/minecraft/world/entity/animal/Rabbit$RabbitMoveControl bep$e
	nextJumpSpeed m
	rabbit l
	setWantedPosition (DDDD)V a
	tick ()V a
net/minecraft/world/entity/animal/Rabbit$RabbitPanicGoal bep$f
	rabbit g
	tick ()V e
net/minecraft/world/entity/animal/Rabbit$RaidGardenGoal bep$g
	canRaid i
	rabbit g
	wantsToRaid h
	canContinueToUse ()Z b
	canUse ()Z a
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	tick ()V e
net/minecraft/world/entity/animal/Salmon beq
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getBucketItemStack ()Lnet/minecraft/world/item/ItemStack; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getFlopSound ()Lnet/minecraft/sounds/SoundEvent; fw
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMaxSchoolSize ()I fx
net/minecraft/world/entity/animal/Sheep ber
	COLORARRAY_BY_COLOR bW
	DATA_WOOL_ID bT
	EAT_ANIMATION_TICKS bS
	ITEM_BY_DYE bV
	eatAnimationTick bX
	eatBlockGoal bY
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V u_
	ate ()V I
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; p
	createSheepColor (Lnet/minecraft/world/item/DyeColor;)[F c
	customServerAiStep ()V eX
	defineSynchedData ()V a_
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/Sheep; b
	getColor ()Lnet/minecraft/world/item/DyeColor; t
	getColorArray (Lnet/minecraft/world/item/DyeColor;)[F a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getDefaultLootTable ()Lnet/minecraft/resources/ResourceLocation; N
	getHeadEatAngleScale (F)F A
	getHeadEatPositionScale (F)F z
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getOffspringColor (Lnet/minecraft/world/entity/animal/Animal;Lnet/minecraft/world/entity/animal/Animal;)Lnet/minecraft/world/item/DyeColor; a
	getRandomSheepColor (Ljava/util/Random;)Lnet/minecraft/world/item/DyeColor; a
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	handleEntityEvent (B)V a
	isSheared ()Z fv
	makeContainer (Lnet/minecraft/world/item/DyeColor;Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/inventory/CraftingContainer; a
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	readyForShearing ()Z a
	registerGoals ()V v
	setColor (Lnet/minecraft/world/item/DyeColor;)V b
	setSheared (Z)V v
	shear (Lnet/minecraft/sounds/SoundSource;)V a
net/minecraft/world/entity/animal/ShoulderRidingEntity bes
	RIDE_COOLDOWN bV
	rideCooldownCounter bW
	canSitOnShoulder ()Z fG
	setEntityOnShoulder (Lnet/minecraft/server/level/ServerPlayer;)Z b
	tick ()V k
net/minecraft/world/entity/animal/SnowGolem bet
	DATA_PUMPKIN_ID b
	EYE_HEIGHT d
	PUMPKIN_FLAG c
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V u_
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; n
	defineSynchedData ()V a_
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; cu
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	hasPumpkin ()Z p
	isSensitiveToWater ()Z ew
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	readyForShearing ()Z a
	registerGoals ()V v
	setPumpkin (Z)V v
	shear (Lnet/minecraft/sounds/SoundSource;)V a
net/minecraft/world/entity/animal/Squid beu
	oldTentacleAngle bV
	oldTentacleMovement bT
	rotateSpeed bY
	speed bW
	tentacleAngle bU
	tentacleMovement bS
	tentacleSpeed bX
	tx bZ
	ty ca
	tz cb
	xBodyRot b
	xBodyRotO c
	zBodyRot d
	zBodyRotO e
	aiStep ()V u_
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	checkSquidSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fv
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getInkParticle ()Lnet/minecraft/core/particles/ParticleOptions; n
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aI
	getSoundVolume ()F eo
	getSquirtSound ()Lnet/minecraft/sounds/SoundEvent; p
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	handleEntityEvent (B)V a
	hasMovementVector ()Z fw
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	registerGoals ()V v
	rotateVector (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; i
	setMovementVector (FFF)V a
	spawnInk ()V t
	travel (Lnet/minecraft/world/phys/Vec3;)V g
net/minecraft/world/entity/animal/Squid$SquidFleeGoal beu$a
	SQUID_FLEE_MAX_DISTANCE d
	SQUID_FLEE_MIN_DISTANCE c
	SQUID_FLEE_SPEED b
	fleeTicks e
	canUse ()Z a
	start ()V c
	tick ()V e
net/minecraft/world/entity/animal/Squid$SquidRandomMovementGoal beu$b
	squid b
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/animal/TropicalFish bev
	BASES bT
	BASE_LARGE d
	BASE_SMALL c
	BASE_TEXTURE_LOCATIONS bU
	BUCKET_VARIANT_TAG b
	COLORS bY
	COMMON_VARIANTS e
	DATA_ID_TYPE_VARIANT bS
	PATTERNS bX
	PATTERN_A_TEXTURE_LOCATIONS bV
	PATTERN_B_TEXTURE_LOCATIONS bW
	isSchool bZ
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	calculateVariant (Lnet/minecraft/world/entity/animal/TropicalFish$Pattern;Lnet/minecraft/world/item/DyeColor;Lnet/minecraft/world/item/DyeColor;)I a
	defineSynchedData ()V a_
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getBaseColor ()[F fF
	getBaseColor (I)Lnet/minecraft/world/item/DyeColor; t
	getBaseColorIdx (I)I y
	getBaseTextureLocation ()Lnet/minecraft/resources/ResourceLocation; fJ
	getBaseVariant ()I fH
	getBaseVariant (I)I x
	getBucketItemStack ()Lnet/minecraft/world/item/ItemStack; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getFishTypeName (I)Ljava/lang/String; v
	getFlopSound ()Lnet/minecraft/sounds/SoundEvent; fw
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getPatternColor ()[F fG
	getPatternColor (I)Lnet/minecraft/world/item/DyeColor; u
	getPatternColorIdx (I)I z
	getPatternTextureLocation ()Lnet/minecraft/resources/ResourceLocation; fI
	getPatternVariant (I)I A
	getPredefinedName (I)Ljava/lang/String; b
	getVariant ()I fE
	isMaxGroupSizeReached (I)Z c
	loadFromBucketTag (Lnet/minecraft/nbt/CompoundTag;)V c
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	saveToBucketTag (Lnet/minecraft/world/item/ItemStack;)V m
	setVariant (I)V w
net/minecraft/world/entity/animal/TropicalFish$Pattern bev$a
	$VALUES p
	BETTY k
	BLOCKFISH j
	BRINELY e
	CLAYFISH l
	DASHER d
	FLOPPER g
	GLITTER i
	KOB a
	SNOOPER c
	SPOTTY f
	STRIPEY h
	SUNSTREAK b
	VALUES o
	base m
	index n
	$values ()[Lnet/minecraft/world/entity/animal/TropicalFish$Pattern; d
	getBase ()I a
	getIndex ()I b
	getName ()Ljava/lang/String; c
	getPatternName (II)Ljava/lang/String; a
net/minecraft/world/entity/animal/TropicalFish$TropicalFishGroupData bev$b
	base b
	baseColor d
	pattern c
	patternColor e
net/minecraft/world/entity/animal/Turtle bew
	BABY_ON_LAND_SELECTOR bT
	FOOD_ITEMS bS
	GOING_HOME bZ
	HAS_EGG bW
	HOME_POS bV
	LAYING_EGG bX
	TRAVELLING ca
	TRAVEL_POS bY
	layEggCounter cb
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	ageBoundaryReached ()V n
	aiStep ()V u_
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	canBreatheUnderwater ()Z dr
	canFallInLove ()Z fy
	checkTurtleSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z c
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fv
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; a
	defineSynchedData ()V a_
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getAmbientSoundInterval ()I J
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getHomePos ()Lnet/minecraft/core/BlockPos; fw
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMobType ()Lnet/minecraft/world/entity/MobType; ek
	getScale ()F dz
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; aA
	getTravelPos ()Lnet/minecraft/core/BlockPos; fx
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	hasEgg ()Z p
	isFood (Lnet/minecraft/world/item/ItemStack;)Z n
	isGoingHome ()Z fD
	isLayingEgg ()Z t
	isPushedByFluid ()Z ck
	isTravelling ()Z fE
	nextStep ()F az
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	playSwimSound (F)V d
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V v
	setGoingHome (Z)V x
	setHasEgg (Z)V v
	setHomePos (Lnet/minecraft/core/BlockPos;)V g
	setLayingEgg (Z)V w
	setTravelPos (Lnet/minecraft/core/BlockPos;)V h
	setTravelling (Z)V y
	thunderHit (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LightningBolt;)V a
	travel (Lnet/minecraft/world/phys/Vec3;)V g
net/minecraft/world/entity/animal/Turtle$TurtleBreedGoal bew$a
	turtle d
	breed ()V g
	canUse ()Z a
net/minecraft/world/entity/animal/Turtle$TurtleGoHomeGoal bew$b
	GIVE_UP_TICKS e
	closeToHomeTryTicks d
	speedModifier b
	stuck c
	turtle a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Turtle$TurtleGoToWaterGoal bew$c
	GIVE_UP_TICKS g
	turtle h
	canContinueToUse ()Z b
	canUse ()Z a
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	shouldRecalculatePath ()Z k
net/minecraft/world/entity/animal/Turtle$TurtleLayEggGoal bew$d
	turtle g
	canContinueToUse ()Z b
	canUse ()Z a
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	tick ()V e
net/minecraft/world/entity/animal/Turtle$TurtleMoveControl bew$e
	turtle l
	tick ()V a
	updateSpeed ()V g
net/minecraft/world/entity/animal/Turtle$TurtlePanicGoal bew$f
	canUse ()Z a
net/minecraft/world/entity/animal/Turtle$TurtlePathNavigation bew$g
	canUpdatePath ()Z a
	createPathFinder (I)Lnet/minecraft/world/level/pathfinder/PathFinder; a
	isStableDestination (Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/entity/animal/Turtle$TurtleRandomStrollGoal bew$h
	turtle i
	canUse ()Z a
net/minecraft/world/entity/animal/Turtle$TurtleTravelGoal bew$i
	speedModifier b
	stuck c
	turtle a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/WaterAnimal bex
	baseTick ()V ai
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	canBreatheUnderwater ()Z dr
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	checkUndergroundWaterCreatureSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z a
	getAmbientSoundInterval ()I J
	getExperienceReward (Lnet/minecraft/world/entity/player/Player;)I d
	getMobType ()Lnet/minecraft/world/entity/MobType; ek
	handleAirSupply (I)V a
	isBaseStoneBelow (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ServerLevelAccessor;)Z a
	isDarkEnoughToSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
	isPushedByFluid ()Z ck
net/minecraft/world/entity/animal/Wolf bey
	DATA_COLLAR_COLOR bX
	DATA_INTERESTED_ID bW
	DATA_REMAINING_ANGER_TIME bY
	PERSISTENT_ANGER_TIME ch
	PREY_SELECTOR bV
	START_HEALTH bZ
	TAME_HEALTH ca
	interestedAngle cb
	interestedAngleO cc
	isShaking ce
	isWet cd
	persistentAngerTarget ci
	shakeAnim cf
	shakeAnimO cg
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V u_
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	canMate (Lnet/minecraft/world/entity/animal/Animal;)Z a
	cancelShake ()V fI
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fD
	defineSynchedData ()V a_
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getBodyRollAngle (FF)F f
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/Wolf; b
	getCollarColor ()Lnet/minecraft/world/item/DyeColor; fG
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getHeadRollAngle (F)F A
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; cu
	getMaxHeadXRot ()I eY
	getMaxSpawnClusterSize ()I fb
	getPersistentAngerTarget ()Ljava/util/UUID; b
	getRemainingPersistentAngerTime ()I a
	getSoundVolume ()F eo
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getTailAngle ()F fF
	getWetShade (F)F z
	handleEntityEvent (B)V a
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isFood (Lnet/minecraft/world/item/ItemStack;)Z n
	isInterested ()Z fH
	isWet ()Z fE
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V v
	setCollarColor (Lnet/minecraft/world/item/DyeColor;)V a
	setIsInterested (Z)V z
	setPersistentAngerTarget (Ljava/util/UUID;)V a
	setRemainingPersistentAngerTime (I)V a
	setTame (Z)V w
	startPersistentAngerTimer ()V c
	tick ()V k
	wantsToAttack (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/animal/Wolf$WolfAvoidEntityGoal bey$a
	wolf j
	avoidLlama (Lnet/minecraft/world/entity/animal/horse/Llama;)Z a
	canUse ()Z a
	start ()V c
	tick ()V e
net/minecraft/world/entity/animal/axolotl/Axolotl bez
	AXOLOTL_TOTAL_AIR_SUPPLY cc
	DATA_PLAYING_DEAD ca
	DATA_VARIANT bZ
	FROM_BUCKET cb
	MEMORY_TYPES bV
	PLAYER_REGEN_DETECTION_RANGE bW
	RARE_VARIANT_CHANCE bX
	REGEN_BUFF_BASE_DURATION cg
	REGEN_BUFF_MAX_DURATION ce
	REHYDRATE_AIR_SUPPLY cd
	SENSOR_TYPES bT
	TOTAL_PLAYDEAD_TIME bS
	VARIANT_TAG bY
	modelRotationValues cf
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	applySupportingEffects (Lnet/minecraft/world/entity/player/Player;)V f
	baseTick ()V ai
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; dp
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	canBeSeenAsEnemy ()Z dN
	canBreatheUnderwater ()Z dr
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fE
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; a
	customServerAiStep ()V eX
	defineSynchedData ()V a_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	fromBucket ()Z p
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; do
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBucketItemStack ()Lnet/minecraft/world/item/ItemStack; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMaxAirSupply ()I bS
	getMaxHeadXRot ()I eY
	getMaxHeadYRot ()I eZ
	getMeleeAttackRangeSqr (Lnet/minecraft/world/entity/LivingEntity;)D i
	getMobType ()Lnet/minecraft/world/entity/MobType; ek
	getModelRotationValues ()Ljava/util/Map; a
	getPickupSound ()Lnet/minecraft/sounds/SoundEvent; t
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; aA
	getSwimSplashSound ()Lnet/minecraft/sounds/SoundEvent; aB
	getVariant ()Lnet/minecraft/world/entity/animal/axolotl/Axolotl$Variant; fx
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	handleAirSupply (I)V u
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isDryingOut ()Z fw
	isFood (Lnet/minecraft/world/item/ItemStack;)Z n
	isPlayingDead ()Z fD
	isPushedByFluid ()Z ck
	loadFromBucketTag (Lnet/minecraft/nbt/CompoundTag;)V c
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	onStopAttacking (Lnet/minecraft/world/entity/animal/axolotl/Axolotl;)V a
	playAmbientSound ()V K
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	rehydrate ()V fv
	removeWhenFarAway (D)Z h
	requiresCustomPersistence ()Z O
	saveToBucketTag (Lnet/minecraft/world/item/ItemStack;)V m
	sendDebugPackets ()V R
	setFromBucket (Z)V v
	setPlayingDead (Z)V w
	setVariant (Lnet/minecraft/world/entity/animal/axolotl/Axolotl$Variant;)V a
	travel (Lnet/minecraft/world/phys/Vec3;)V g
	usePlayerItem (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/item/ItemStack;)V a
	useRareVariant (Ljava/util/Random;)Z a
net/minecraft/world/entity/animal/axolotl/Axolotl$AxolotlGroupData bez$a
	types a
	getVariant (Ljava/util/Random;)Lnet/minecraft/world/entity/animal/axolotl/Axolotl$Variant; a
net/minecraft/world/entity/animal/axolotl/Axolotl$AxolotlLookControl bez$b
	tick ()V a
net/minecraft/world/entity/animal/axolotl/Axolotl$AxolotlMoveControl bez$c
	axolotl l
	tick ()V a
net/minecraft/world/entity/animal/axolotl/Axolotl$AxolotlPathNavigation bez$d
	canUpdatePath ()Z a
	createPathFinder (I)Lnet/minecraft/world/level/pathfinder/PathFinder; a
	isStableDestination (Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/entity/animal/axolotl/Axolotl$Variant bez$e
	$VALUES j
	BLUE e
	BY_ID f
	CYAN d
	GOLD c
	LUCY a
	WILD b
	common i
	id g
	name h
	$values ()[Lnet/minecraft/world/entity/animal/axolotl/Axolotl$Variant; c
	getCommonSpawnVariant (Ljava/util/Random;)Lnet/minecraft/world/entity/animal/axolotl/Axolotl$Variant; a
	getId ()I a
	getName ()Ljava/lang/String; b
	getRareSpawnVariant (Ljava/util/Random;)Lnet/minecraft/world/entity/animal/axolotl/Axolotl$Variant; b
	getSpawnVariant (Ljava/util/Random;Z)Lnet/minecraft/world/entity/animal/axolotl/Axolotl$Variant; a
net/minecraft/world/entity/animal/axolotl/AxolotlAi bfa
	ADULT_FOLLOW_RANGE a
	SPEED_MULTIPLIER_ON_LAND c
	SPEED_MULTIPLIER_WHEN_CHASING_IN_WATER e
	SPEED_MULTIPLIER_WHEN_FOLLOWING_ADULT_IN_WATER f
	SPEED_MULTIPLIER_WHEN_IDLING_IN_WATER d
	SPEED_MULTIPLIER_WHEN_MAKING_LOVE b
	findNearestValidAttackTarget (Lnet/minecraft/world/entity/animal/axolotl/Axolotl;)Ljava/util/Optional; b
	getSpeedModifier (Lnet/minecraft/world/entity/LivingEntity;)F c
	getSpeedModifierChasing (Lnet/minecraft/world/entity/LivingEntity;)F a
	getSpeedModifierFollowingAdult (Lnet/minecraft/world/entity/LivingEntity;)F b
	getTemptations ()Lnet/minecraft/world/item/crafting/Ingredient; a
	initCoreActivity (Lnet/minecraft/world/entity/ai/Brain;)V d
	initFightActivity (Lnet/minecraft/world/entity/ai/Brain;)V c
	initIdleActivity (Lnet/minecraft/world/entity/ai/Brain;)V e
	initPlayDeadActivity (Lnet/minecraft/world/entity/ai/Brain;)V b
	isBreeding (Lnet/minecraft/world/entity/animal/axolotl/Axolotl;)Z c
	makeBrain (Lnet/minecraft/world/entity/ai/Brain;)Lnet/minecraft/world/entity/ai/Brain; a
	updateActivity (Lnet/minecraft/world/entity/animal/axolotl/Axolotl;)V a
net/minecraft/world/entity/animal/axolotl/PlayDead bfb
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/axolotl/Axolotl;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/axolotl/Axolotl;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/axolotl/Axolotl;J)V b
net/minecraft/world/entity/animal/axolotl/ValidatePlayDead bfc
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/axolotl/Axolotl;J)V a
net/minecraft/world/entity/animal/goat/Goat bfe
	DATA_IS_SCREAMING_GOAT bY
	GOAT_FALL_DAMAGE_REDUCTION bW
	GOAT_SCREAMING_CHANCE bX
	LONG_JUMPING_DIMENSIONS bS
	MEMORY_TYPES bV
	SENSOR_TYPES bT
	isLoweringHead bZ
	lowerHeadTick ca
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V u_
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; dp
	calculateFallDamage (FF)I d
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; p
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; a
	customServerAiStep ()V eX
	defineSynchedData ()V a_
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; do
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/goat/Goat; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getEatingSound (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/sounds/SoundEvent; e
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMaxHeadYRot ()I eZ
	getMilkingSound ()Lnet/minecraft/sounds/SoundEvent; t
	getRammingXHeadRot ()F fw
	handleEntityEvent (B)V a
	isScreamingGoat ()Z fv
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	sendDebugPackets ()V R
	setScreamingGoat (Z)V v
	setYHeadRot (F)V l
net/minecraft/world/entity/animal/goat/Goat$GoatNodeEvaluator bfe$a
	belowPos l
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;III)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
net/minecraft/world/entity/animal/goat/Goat$GoatPathNavigation bfe$b
	createPathFinder (I)Lnet/minecraft/world/level/pathfinder/PathFinder; a
net/minecraft/world/entity/animal/goat/GoatAi bff
	ADULT_FOLLOW_RANGE i
	ADULT_RAM_DAMAGE u
	ADULT_RAM_KNOCKBACK_FORCE g
	BABY_RAM_DAMAGE v
	BABY_RAM_KNOCKBACK_FORCE h
	MAX_JUMP_VELOCITY e
	MAX_LONG_JUMP_HEIGHT c
	MAX_LONG_JUMP_WIDTH d
	RAM_MAX_DISTANCE b
	RAM_MIN_DISTANCE f
	RAM_PREPARE_TIME a
	RAM_TARGET_CONDITIONS s
	SPEED_MULTIPLIER_WHEN_FOLLOWING_ADULT l
	SPEED_MULTIPLIER_WHEN_IDLING k
	SPEED_MULTIPLIER_WHEN_MAKING_LOVE j
	SPEED_MULTIPLIER_WHEN_PANICKING n
	SPEED_MULTIPLIER_WHEN_PREPARING_TO_RAM o
	SPEED_MULTIPLIER_WHEN_RAMMING t
	SPEED_MULTIPLIER_WHEN_TEMPTED m
	TIME_BETWEEN_LONG_JUMPS p
	TIME_BETWEEN_RAMS q
	TIME_BETWEEN_RAMS_SCREAMER r
	getTemptations ()Lnet/minecraft/world/item/crafting/Ingredient; a
	initCoreActivity (Lnet/minecraft/world/entity/ai/Brain;)V b
	initIdleActivity (Lnet/minecraft/world/entity/ai/Brain;)V c
	initLongJumpActivity (Lnet/minecraft/world/entity/ai/Brain;)V d
	initMemories (Lnet/minecraft/world/entity/animal/goat/Goat;)V a
	initRamActivity (Lnet/minecraft/world/entity/ai/Brain;)V e
	makeBrain (Lnet/minecraft/world/entity/ai/Brain;)Lnet/minecraft/world/entity/ai/Brain; a
	updateActivity (Lnet/minecraft/world/entity/animal/goat/Goat;)V b
net/minecraft/world/entity/animal/horse/AbstractChestedHorse bfh
	DATA_ID_CHEST ci
	INV_CHEST_COUNT bS
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	createBaseChestedHorseAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; t
	defineSynchedData ()V a_
	dropEquipment ()V dX
	getInventoryColumns ()I fD
	getInventorySize ()I fw
	getPassengersRidingOffset ()D bl
	getSlot (I)Lnet/minecraft/world/entity/SlotAccess; k
	hasChest ()Z fv
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	playChestEquipsSound ()V fx
	randomizeAttributes ()V p
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setChest (Z)V v
net/minecraft/world/entity/animal/horse/AbstractHorse bfi
	CHEST_SLOT_OFFSET bV
	DATA_ID_FLAGS ck
	DATA_ID_OWNER_UUID cl
	EQUIPMENT_SLOT_OFFSET bT
	FLAG_BRED co
	FLAG_EATING cp
	FLAG_OPEN_MOUTH cr
	FLAG_SADDLE cn
	FLAG_STANDING cq
	FLAG_TAME cm
	FOOD_ITEMS cj
	INVENTORY_SLOT_OFFSET bW
	INV_BASE_COUNT bZ
	INV_SLOT_ARMOR bY
	INV_SLOT_SADDLE bX
	MOMMY_TARGETING ci
	PARENT_HORSE_SELECTOR bS
	allowStandSliding cv
	canGallop cg
	eatAnim cw
	eatAnimO cx
	eatingCounter cs
	gallopSoundCounter ch
	inventory cd
	isJumping cc
	mouthAnim cA
	mouthAnimO cB
	mouthCounter ct
	playerJumpPendingScale cf
	sprintCounter cb
	standAnim cy
	standAnimO cz
	standCounter cu
	tailCounter ca
	temper ce
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addBehaviourGoals ()V fE
	aiStep ()V u_
	calculateFallDamage (FF)I d
	canBeControlledByRider ()Z fc
	canEatGrass ()Z fU
	canJump ()Z a
	canMate (Lnet/minecraft/world/entity/animal/Animal;)Z a
	canParent ()Z fX
	canWearArmor ()Z gb
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	containerChanged (Lnet/minecraft/world/Container;)V a
	createBaseHorseAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fR
	createEquipmentSlotAccess (ILjava/util/function/Predicate;)Lnet/minecraft/world/entity/SlotAccess; a
	createInventory ()V fM
	defineSynchedData ()V a_
	doPlayerRide (Lnet/minecraft/world/entity/player/Player;)V h
	dropEquipment ()V dX
	eating ()V t
	equipSaddle (Lnet/minecraft/sounds/SoundSource;)V a
	fedFood (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/InteractionResult; a
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	followMommy ()V fT
	generateRandomJumpStrength ()D fZ
	generateRandomMaxHealth ()F fY
	generateRandomSpeed ()D ga
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getAmbientSoundInterval ()I J
	getAngrySound ()Lnet/minecraft/sounds/SoundEvent; fQ
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getControllingPassenger ()Lnet/minecraft/world/entity/Entity; cz
	getCustomJump ()D fO
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getDismountLocationForPassenger (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/phys/Vec3; b
	getDismountLocationInDirection (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/phys/Vec3; a
	getEatAnim (F)F z
	getEatingSound ()Lnet/minecraft/sounds/SoundEvent; fP
	getFlag (I)Z u
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getInventorySize ()I fw
	getMaxSpawnClusterSize ()I fb
	getMaxTemper ()I fS
	getMouthAnim (F)F B
	getOwnerUUID ()Ljava/util/UUID; fG
	getSlot (I)Lnet/minecraft/world/entity/SlotAccess; k
	getSoundVolume ()F eo
	getStandAnim (F)F A
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getTemper ()I fL
	handleEating (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)Z b
	handleEntityEvent (B)V a
	handleStartJump (I)V b
	handleStopJump ()V b
	hasInventoryChanged (Lnet/minecraft/world/Container;)Z b
	isArmor (Lnet/minecraft/world/item/ItemStack;)Z m
	isBred ()Z fK
	isEating ()Z fI
	isFood (Lnet/minecraft/world/item/ItemStack;)Z n
	isImmobile ()Z eq
	isJumping ()Z fH
	isPushable ()Z bd
	isSaddleable ()Z c
	isSaddled ()Z d
	isStanding ()Z fJ
	isTamed ()Z fF
	isWearingArmor ()Z gc
	makeMad ()V fV
	modifyTemper (I)I w
	moveTail ()V fv
	onClimbable ()Z b_
	onLeashDistance (F)V y
	onPlayerJump (I)V a
	openInventory (Lnet/minecraft/world/entity/player/Player;)V f
	openMouth ()V fx
	playGallopSound (Lnet/minecraft/world/level/block/SoundType;)V a
	playJumpSound ()V fW
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	positionRider (Lnet/minecraft/world/entity/Entity;)V i
	randomizeAttributes ()V p
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V v
	setBred (Z)V y
	setEating (Z)V z
	setFlag (IZ)V d
	setIsJumping (Z)V x
	setOffspringAttributes (Lnet/minecraft/world/entity/AgeableMob;Lnet/minecraft/world/entity/animal/horse/AbstractHorse;)V a
	setOwnerUUID (Ljava/util/UUID;)V b
	setStanding (Z)V A
	setTamed (Z)V w
	setTemper (I)V v
	spawnTamingParticles (Z)V B
	stand ()V fD
	tameWithName (Lnet/minecraft/world/entity/player/Player;)Z i
	tick ()V k
	travel (Lnet/minecraft/world/phys/Vec3;)V g
	updateContainerEquipment ()V fN
net/minecraft/world/entity/animal/horse/Donkey bfj
	canMate (Lnet/minecraft/world/entity/animal/Animal;)Z a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getAngrySound ()Lnet/minecraft/sounds/SoundEvent; fQ
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getEatingSound ()Lnet/minecraft/sounds/SoundEvent; fP
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
net/minecraft/world/entity/animal/horse/Horse bfk
	ARMOR_MODIFIER_UUID bS
	DATA_ID_TYPE_VARIANT ci
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canMate (Lnet/minecraft/world/entity/animal/Animal;)Z a
	canWearArmor ()Z gb
	containerChanged (Lnet/minecraft/world/Container;)V a
	defineSynchedData ()V a_
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getAngrySound ()Lnet/minecraft/sounds/SoundEvent; fQ
	getArmor ()Lnet/minecraft/world/item/ItemStack; t
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getEatingSound ()Lnet/minecraft/sounds/SoundEvent; fP
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMarkings ()Lnet/minecraft/world/entity/animal/horse/Markings; fx
	getTypeVariant ()I fD
	getVariant ()Lnet/minecraft/world/entity/animal/horse/Variant; fv
	isArmor (Lnet/minecraft/world/item/ItemStack;)Z m
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	playGallopSound (Lnet/minecraft/world/level/block/SoundType;)V a
	randomizeAttributes ()V p
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setArmor (Lnet/minecraft/world/item/ItemStack;)V o
	setArmorEquipment (Lnet/minecraft/world/item/ItemStack;)V p
	setTypeVariant (I)V x
	setVariantAndMarkings (Lnet/minecraft/world/entity/animal/horse/Variant;Lnet/minecraft/world/entity/animal/horse/Markings;)V a
	updateContainerEquipment ()V fN
net/minecraft/world/entity/animal/horse/Horse$HorseGroupData bfk$a
	variant a
net/minecraft/world/entity/animal/horse/Llama bfl
	DATA_STRENGTH_ID cl
	DATA_SWAG_ID cm
	DATA_VARIANT_ID cn
	FOOD_ITEMS ck
	MAX_STRENGTH ci
	VARIANTS cj
	caravanHead cp
	caravanTail cq
	didSpit co
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canBeControlledByRider ()Z fc
	canEatGrass ()Z fU
	canMate (Lnet/minecraft/world/entity/animal/Animal;)Z a
	canWearArmor ()Z gb
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	containerChanged (Lnet/minecraft/world/Container;)V a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; gf
	defineSynchedData ()V a_
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	followLeashSpeed ()D fu
	followMommy ()V fT
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getAngrySound ()Lnet/minecraft/sounds/SoundEvent; fQ
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/horse/Llama; b
	getCaravanHead ()Lnet/minecraft/world/entity/animal/horse/Llama; gm
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getDyeColor (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/DyeColor; o
	getEatingSound ()Lnet/minecraft/sounds/SoundEvent; fP
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getInventoryColumns ()I fD
	getInventorySize ()I fw
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; cu
	getMaxTemper ()I fS
	getPassengersRidingOffset ()D bl
	getStrength ()I ge
	getSwag ()Lnet/minecraft/world/item/DyeColor; gh
	getVariant ()I gg
	handleEating (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)Z b
	hasCaravanTail ()Z gk
	inCaravan ()Z gl
	isArmor (Lnet/minecraft/world/item/ItemStack;)Z m
	isFood (Lnet/minecraft/world/item/ItemStack;)Z n
	isImmobile ()Z eq
	isSaddleable ()Z c
	isTraderLlama ()Z gd
	isWearingArmor ()Z gc
	joinCaravan (Lnet/minecraft/world/entity/animal/horse/Llama;)V a
	leaveCaravan ()V gj
	makeBabyLlama ()Lnet/minecraft/world/entity/animal/horse/Llama; gi
	makeMad ()V fV
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
	playChestEquipsSound ()V fx
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	positionRider (Lnet/minecraft/world/entity/Entity;)V i
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V v
	setDidSpit (Z)V C
	setRandomStrength ()V gn
	setStrength (I)V y
	setSwag (Lnet/minecraft/world/item/DyeColor;)V a
	setVariant (I)V x
	spit (Lnet/minecraft/world/entity/LivingEntity;)V j
	updateContainerEquipment ()V fN
net/minecraft/world/entity/animal/horse/Llama$LlamaAttackWolfGoal bfl$a
	getFollowDistance ()D k
net/minecraft/world/entity/animal/horse/Llama$LlamaGroupData bfl$b
	variant a
net/minecraft/world/entity/animal/horse/Llama$LlamaHurtByTargetGoal bfl$c
	canContinueToUse ()Z b
net/minecraft/world/entity/animal/horse/Markings bfm
	$VALUES h
	BLACK_DOTS e
	BY_ID f
	NONE a
	WHITE b
	WHITE_DOTS d
	WHITE_FIELD c
	id g
	$values ()[Lnet/minecraft/world/entity/animal/horse/Markings; b
	byId (I)Lnet/minecraft/world/entity/animal/horse/Markings; a
	getId ()I a
net/minecraft/world/entity/animal/horse/Mule bfn
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getAngrySound ()Lnet/minecraft/sounds/SoundEvent; fQ
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getEatingSound ()Lnet/minecraft/sounds/SoundEvent; fP
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	playChestEquipsSound ()V fx
net/minecraft/world/entity/animal/horse/SkeletonHorse bfo
	TRAP_MAX_LIFE ci
	isTrap cj
	skeletonTrapGoal bS
	trapTime ck
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addBehaviourGoals ()V fE
	aiStep ()V u_
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; t
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMobType ()Lnet/minecraft/world/entity/MobType; ek
	getPassengersRidingOffset ()D bl
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; aA
	getWaterSlowDown ()F eu
	isTrap ()Z fv
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	playJumpSound ()V fW
	playSwimSound (F)V d
	randomizeAttributes ()V p
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	rideableUnderWater ()Z bC
	setTrap (Z)V v
net/minecraft/world/entity/animal/horse/SkeletonTrapGoal bfp
	horse a
	canUse ()Z a
	createHorse (Lnet/minecraft/world/DifficultyInstance;)Lnet/minecraft/world/entity/animal/horse/AbstractHorse; a
	createSkeleton (Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/animal/horse/AbstractHorse;)Lnet/minecraft/world/entity/monster/Skeleton; a
	disenchant (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	tick ()V e
net/minecraft/world/entity/animal/horse/TraderLlama bfq
	despawnDelay ci
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V u_
	canDespawn ()Z go
	doPlayerRide (Lnet/minecraft/world/entity/player/Player;)V h
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	isLeashedToSomethingOtherThanTheWanderingTrader ()Z gq
	isLeashedToWanderingTrader ()Z gp
	isTraderLlama ()Z gd
	makeBabyLlama ()Lnet/minecraft/world/entity/animal/horse/Llama; gi
	maybeDespawn ()V gn
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V v
	setDespawnDelay (I)V y
net/minecraft/world/entity/animal/horse/TraderLlama$TraderLlamaDefendWanderingTraderGoal bfq$a
	llama a
	ownerLastHurtBy b
	timestamp c
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/animal/horse/Variant bfr
	$VALUES j
	BLACK e
	BROWN d
	BY_ID h
	CHESTNUT c
	CREAMY b
	DARKBROWN g
	GRAY f
	WHITE a
	id i
	$values ()[Lnet/minecraft/world/entity/animal/horse/Variant; b
	byId (I)Lnet/minecraft/world/entity/animal/horse/Variant; a
	getId ()I a
net/minecraft/world/entity/animal/horse/ZombieHorse bfs
	addBehaviourGoals ()V fE
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; t
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMobType ()Lnet/minecraft/world/entity/MobType; ek
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	randomizeAttributes ()V p
net/minecraft/world/entity/boss/EnderDragonPart bfv
	name c
	parentMob b
	size d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V a_
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; P
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	is (Lnet/minecraft/world/entity/Entity;)Z q
	isPickable ()Z bc
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	shouldBeSaved ()Z dm
net/minecraft/world/entity/boss/enderdragon/EndCrystal bfw
	DATA_BEAM_TARGET c
	DATA_SHOW_BOTTOM d
	time b
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V a_
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; P
	getBeamTarget ()Lnet/minecraft/core/BlockPos; h
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aI
	getPickResult ()Lnet/minecraft/world/item/ItemStack; df
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isPickable ()Z bc
	kill ()V ab
	onDestroyedBy (Lnet/minecraft/world/damagesource/DamageSource;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setBeamTarget (Lnet/minecraft/core/BlockPos;)V a
	setShowBottom (Z)V a
	shouldRenderAtSqrDistance (D)Z a
	showsBottom ()Z i
	tick ()V k
net/minecraft/world/entity/boss/enderdragon/EnderDragon bfx
	CRYSTAL_DESTROY_TARGETING bZ
	DATA_PHASE b
	DRAGON_DEATH_TIME_KEY cd
	DRAGON_PHASE_KEY ce
	GROWL_INTERVAL_MAX cb
	GROWL_INTERVAL_MIN ca
	LOGGER bY
	SITTING_ALLOWED_DAMAGE_PERCENTAGE cc
	body ch
	dragonDeathTime bV
	dragonFight cn
	flapTime bT
	growlTime cp
	head e
	inWall bU
	nearestCrystal bX
	neck cg
	nodeAdjacency cs
	nodes cr
	oFlapTime bS
	openSet ct
	phaseManager co
	posPointer d
	positions c
	sittingDamageReceived cq
	subEntities cf
	tail1 ci
	tail2 cj
	tail3 ck
	wing1 cl
	wing2 cm
	yRotA bW
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addEffect (Lnet/minecraft/world/effect/MobEffectInstance;)Z b
	aiStep ()V u_
	canAttack (Lnet/minecraft/world/entity/LivingEntity;)Z c
	canChangeDimensions ()Z cd
	canRide (Lnet/minecraft/world/entity/Entity;)Z l
	checkCrystals ()V fw
	checkDespawn ()V de
	checkWalls (Lnet/minecraft/world/phys/AABB;)Z b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; n
	defineSynchedData ()V a_
	findClosestNode ()I p
	findClosestNode (DDD)I q
	findPath (IILnet/minecraft/world/level/pathfinder/Node;)Lnet/minecraft/world/level/pathfinder/Path; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getDragonFight ()Lnet/minecraft/world/level/dimension/end/EndDragonFight; fu
	getHeadLookVector (F)Lnet/minecraft/world/phys/Vec3; y
	getHeadPartYOffset (I[D[D)F a
	getHeadYOffset ()F fv
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getLatencyPos (IF)[D a
	getPhaseManager ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhaseManager; ft
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; cJ
	getSoundVolume ()F eo
	getSubEntities ()[Lnet/minecraft/world/entity/boss/EnderDragonPart; t
	hurt (Ljava/util/List;)V b
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	hurt (Lnet/minecraft/world/entity/boss/EnderDragonPart;Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isFlapping ()Z aF
	isPickable ()Z bc
	kill ()V ab
	knockBack (Ljava/util/List;)V a
	onCrystalDestroyed (Lnet/minecraft/world/entity/boss/enderdragon/EndCrystal;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/damagesource/DamageSource;)V a
	onFlap ()V aE
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	reallyHurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z g
	reconstructPath (Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)Lnet/minecraft/world/level/pathfinder/Path; a
	recreateFromPacket (Lnet/minecraft/network/protocol/game/ClientboundAddMobPacket;)V a
	rotWrap (D)F i
	tickDeath ()V dB
	tickPart (Lnet/minecraft/world/entity/boss/EnderDragonPart;DDD)V a
net/minecraft/world/entity/boss/enderdragon/phases/AbstractDragonPhaseInstance bfz
	dragon a
	begin ()V d
	doClientTick ()V b
	doServerTick ()V c
	end ()V e
	getFlySpeed ()F f
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getTurnSpeed ()F h
	isSitting ()Z a
	onCrystalDestroyed (Lnet/minecraft/world/entity/boss/enderdragon/EndCrystal;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/entity/player/Player;)V a
	onHurt (Lnet/minecraft/world/damagesource/DamageSource;F)F a
net/minecraft/world/entity/boss/enderdragon/phases/AbstractDragonSittingPhase bga
	isSitting ()Z a
	onHurt (Lnet/minecraft/world/damagesource/DamageSource;F)F a
net/minecraft/world/entity/boss/enderdragon/phases/DragonChargePlayerPhase bgb
	CHARGE_RECOVERY_TIME c
	LOGGER b
	targetLocation d
	timeSinceCharge e
	begin ()V d
	doServerTick ()V c
	getFlySpeed ()F f
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
	setTarget (Lnet/minecraft/world/phys/Vec3;)V a
net/minecraft/world/entity/boss/enderdragon/phases/DragonDeathPhase bgc
	targetLocation b
	time c
	begin ()V d
	doClientTick ()V b
	doServerTick ()V c
	getFlySpeed ()F f
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
net/minecraft/world/entity/boss/enderdragon/phases/DragonHoldingPatternPhase bgd
	NEW_TARGET_TARGETING b
	clockwise e
	currentPath c
	targetLocation d
	begin ()V d
	doServerTick ()V c
	findNewTarget ()V j
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
	navigateToNextPathNode ()V k
	onCrystalDestroyed (Lnet/minecraft/world/entity/boss/enderdragon/EndCrystal;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/entity/player/Player;)V a
	strafePlayer (Lnet/minecraft/world/entity/player/Player;)V a
net/minecraft/world/entity/boss/enderdragon/phases/DragonHoverPhase bge
	targetLocation b
	begin ()V d
	doServerTick ()V c
	getFlySpeed ()F f
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
	isSitting ()Z a
net/minecraft/world/entity/boss/enderdragon/phases/DragonLandingApproachPhase bgf
	NEAR_EGG_TARGETING b
	currentPath c
	targetLocation d
	begin ()V d
	doServerTick ()V c
	findNewTarget ()V j
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
	navigateToNextPathNode ()V k
net/minecraft/world/entity/boss/enderdragon/phases/DragonLandingPhase bgg
	targetLocation b
	begin ()V d
	doClientTick ()V b
	doServerTick ()V c
	getFlySpeed ()F f
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
	getTurnSpeed ()F h
net/minecraft/world/entity/boss/enderdragon/phases/DragonPhaseInstance bgh
	begin ()V d
	doClientTick ()V b
	doServerTick ()V c
	end ()V e
	getFlySpeed ()F f
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
	getTurnSpeed ()F h
	isSitting ()Z a
	onCrystalDestroyed (Lnet/minecraft/world/entity/boss/enderdragon/EndCrystal;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/entity/player/Player;)V a
	onHurt (Lnet/minecraft/world/damagesource/DamageSource;F)F a
net/minecraft/world/entity/boss/enderdragon/phases/DragonSittingAttackingPhase bgi
	ROAR_DURATION b
	attackingTicks c
	begin ()V d
	doClientTick ()V b
	doServerTick ()V c
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
net/minecraft/world/entity/boss/enderdragon/phases/DragonSittingFlamingPhase bgj
	FLAME_DURATION b
	SITTING_FLAME_ATTACKS_COUNT c
	WARMUP_TIME d
	flame g
	flameCount f
	flameTicks e
	begin ()V d
	doClientTick ()V b
	doServerTick ()V c
	end ()V e
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
	resetFlameCount ()V j
net/minecraft/world/entity/boss/enderdragon/phases/DragonSittingScanningPhase bgk
	CHARGE_TARGETING f
	SITTING_ATTACK_VIEW_RANGE d
	SITTING_ATTACK_Y_VIEW_RANGE c
	SITTING_CHARGE_VIEW_RANGE e
	SITTING_SCANNING_IDLE_TICKS b
	scanTargeting g
	scanningTime h
	begin ()V d
	doServerTick ()V c
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
net/minecraft/world/entity/boss/enderdragon/phases/DragonStrafePlayerPhase bgl
	FIREBALL_CHARGE_AMOUNT c
	LOGGER b
	attackTarget g
	currentPath e
	fireballCharge d
	holdingPatternClockwise h
	targetLocation f
	begin ()V d
	doServerTick ()V c
	findNewTarget ()V j
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
	navigateToNextPathNode ()V k
	setTarget (Lnet/minecraft/world/entity/LivingEntity;)V a
net/minecraft/world/entity/boss/enderdragon/phases/DragonTakeoffPhase bgm
	currentPath c
	firstTick b
	targetLocation d
	begin ()V d
	doServerTick ()V c
	findNewTarget ()V j
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
	navigateToNextPathNode ()V k
net/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase bgn
	CHARGING_PLAYER i
	DYING j
	HOLDING_PATTERN a
	HOVERING k
	LANDING d
	LANDING_APPROACH c
	SITTING_ATTACKING h
	SITTING_FLAMING f
	SITTING_SCANNING g
	STRAFE_PLAYER b
	TAKEOFF e
	id n
	instanceClass m
	name o
	phases l
	create (Ljava/lang/Class;Ljava/lang/String;)Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; a
	createInstance (Lnet/minecraft/world/entity/boss/enderdragon/EnderDragon;)Lnet/minecraft/world/entity/boss/enderdragon/phases/DragonPhaseInstance; a
	getById (I)Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; a
	getConstructor ()Ljava/lang/reflect/Constructor; a
	getCount ()I c
	getId ()I b
net/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhaseManager bgo
	LOGGER a
	currentPhase d
	dragon b
	phases c
	getCurrentPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/DragonPhaseInstance; a
	getPhase (Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase;)Lnet/minecraft/world/entity/boss/enderdragon/phases/DragonPhaseInstance; b
	setPhase (Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase;)V a
net/minecraft/world/entity/boss/wither/WitherBoss bgr
	DATA_ID_INV bS
	DATA_TARGETS e
	DATA_TARGET_A b
	DATA_TARGET_B c
	DATA_TARGET_C d
	INVULNERABLE_TICKS bT
	LIVING_ENTITY_SELECTOR cc
	TARGETING_CONDITIONS cd
	bossEvent cb
	destroyBlocksTick ca
	idleHeadUpdates bZ
	nextHeadUpdate bY
	xRotHeads bU
	xRotOHeads bW
	yRotHeads bV
	yRotOHeads bX
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addEffect (Lnet/minecraft/world/effect/MobEffectInstance;)Z b
	aiStep ()V u_
	canBeAffected (Lnet/minecraft/world/effect/MobEffectInstance;)Z c
	canChangeDimensions ()Z cd
	canDestroy (Lnet/minecraft/world/level/block/state/BlockState;)Z c
	canRide (Lnet/minecraft/world/entity/Entity;)Z l
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	checkDespawn ()V de
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; p
	customServerAiStep ()V eX
	defineSynchedData ()V a_
	dropCustomDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;IZ)V a
	getAlternativeTarget (I)I u
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getHeadX (I)D v
	getHeadXRot (I)F b
	getHeadY (I)D w
	getHeadYRot (I)F a
	getHeadZ (I)D x
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getInvulnerableTicks ()I t
	getMobType ()Lnet/minecraft/world/entity/MobType; ek
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isPowered ()Z a
	makeInvulnerable ()V n
	makeStuckInBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/Vec3;)V a
	performRangedAttack (IDDDZ)V a
	performRangedAttack (ILnet/minecraft/world/entity/LivingEntity;)V a
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V v
	rotlerp (FFF)F a
	setAlternativeTarget (II)V a
	setCustomName (Lnet/minecraft/network/chat/Component;)V a
	setInvulnerableTicks (I)V t
	startSeenByPlayer (Lnet/minecraft/server/level/ServerPlayer;)V c
	stopSeenByPlayer (Lnet/minecraft/server/level/ServerPlayer;)V d
net/minecraft/world/entity/boss/wither/WitherBoss$WitherDoNothingGoal bgr$a
	canUse ()Z a
net/minecraft/world/entity/decoration/ArmorStand bgt
	BABY_DIMENSIONS bW
	CHEST_OFFSET bY
	CLIENT_FLAG_MARKER bF
	CLIENT_FLAG_NO_BASEPLATE bE
	CLIENT_FLAG_SHOW_ARMS f
	CLIENT_FLAG_SMALL e
	DATA_BODY_POSE bI
	DATA_CLIENT_FLAGS bG
	DATA_HEAD_POSE bH
	DATA_LEFT_ARM_POSE bJ
	DATA_LEFT_LEG_POSE bL
	DATA_RIGHT_ARM_POSE bK
	DATA_RIGHT_LEG_POSE bM
	DEFAULT_BODY_POSE bQ
	DEFAULT_HEAD_POSE bP
	DEFAULT_LEFT_ARM_POSE bR
	DEFAULT_LEFT_LEG_POSE bT
	DEFAULT_RIGHT_ARM_POSE bS
	DEFAULT_RIGHT_LEG_POSE bU
	DISABLE_PUTTING_OFFSET d
	DISABLE_TAKING_OFFSET c
	ENABLE_ARMS bO
	FEET_OFFSET bX
	HEAD_OFFSET ca
	LEGS_OFFSET bZ
	MARKER_DIMENSIONS bV
	RIDABLE_MINECARTS cb
	WOBBLE_TIME b
	armorItems cd
	bodyPose ch
	disabledSlots cf
	handItems cc
	headPose cg
	invisible ce
	lastHit bN
	leftArmPose ci
	leftLegPose ck
	rightArmPose cj
	rightLegPose cl
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	attackable ()Z eQ
	brokenByAnything (Lnet/minecraft/world/damagesource/DamageSource;)V h
	brokenByPlayer (Lnet/minecraft/world/damagesource/DamageSource;)V g
	canBeSeenByAnyone ()Z dO
	canTakeItem (Lnet/minecraft/world/item/ItemStack;)Z g
	causeDamage (Lnet/minecraft/world/damagesource/DamageSource;F)V g
	defineSynchedData ()V a_
	doPush (Lnet/minecraft/world/entity/Entity;)V A
	getArmorSlots ()Ljava/lang/Iterable; bx
	getBodyPose ()Lnet/minecraft/core/Rotations; w
	getClickedSlot (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/entity/EquipmentSlot; i
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getDimensionsMarker (Z)Lnet/minecraft/world/entity/EntityDimensions; u
	getFallDamageSound (I)Lnet/minecraft/sounds/SoundEvent; p
	getHandSlots ()Ljava/lang/Iterable; bw
	getHeadPose ()Lnet/minecraft/core/Rotations; v
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getItemBySlot (Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/item/ItemStack; b
	getLeftArmPose ()Lnet/minecraft/core/Rotations; x
	getLeftLegPose ()Lnet/minecraft/core/Rotations; A
	getLightProbePosition (F)Lnet/minecraft/world/phys/Vec3; j
	getMainArm ()Lnet/minecraft/world/entity/HumanoidArm; eD
	getMyRidingOffset ()D bk
	getPickResult ()Lnet/minecraft/world/item/ItemStack; df
	getPistonPushReaction ()Lnet/minecraft/world/level/material/PushReaction; y_
	getRightArmPose ()Lnet/minecraft/core/Rotations; z
	getRightLegPose ()Lnet/minecraft/core/Rotations; B
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	handleEntityEvent (B)V a
	hasPhysics ()Z D
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	ignoreExplosion ()Z cx
	interactAt (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	isAffectedByPotions ()Z eP
	isBaby ()Z w_
	isDisabled (Lnet/minecraft/world/entity/EquipmentSlot;)Z d
	isEffectiveAi ()Z eA
	isMarker ()Z t
	isNoBasePlate ()Z q
	isPickable ()Z bc
	isPushable ()Z bd
	isShowArms ()Z p
	isSmall ()Z n
	kill ()V ab
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playBrokenSound ()V H
	pushEntities ()V ey
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	readPose (Lnet/minecraft/nbt/CompoundTag;)V c
	refreshDimensions ()V x_
	setBit (BIZ)B a
	setBodyPose (Lnet/minecraft/core/Rotations;)V b
	setHeadPose (Lnet/minecraft/core/Rotations;)V a
	setInvisible (Z)V j
	setItemSlot (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V a
	setLeftArmPose (Lnet/minecraft/core/Rotations;)V c
	setLeftLegPose (Lnet/minecraft/core/Rotations;)V e
	setMarker (Z)V t
	setNoBasePlate (Z)V s
	setRightArmPose (Lnet/minecraft/core/Rotations;)V d
	setRightLegPose (Lnet/minecraft/core/Rotations;)V f
	setShowArms (Z)V r
	setSmall (Z)V a
	setYBodyRot (F)V m
	setYHeadRot (F)V l
	shouldRenderAtSqrDistance (D)Z a
	showBreakingParticles ()V G
	skipAttackInteraction (Lnet/minecraft/world/entity/Entity;)Z r
	swapItem (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/InteractionHand;)Z a
	thunderHit (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LightningBolt;)V a
	tick ()V k
	tickHeadTurn (FF)F e
	travel (Lnet/minecraft/world/phys/Vec3;)V g
	updateInvisibilityStatus ()V C
	writePose ()Lnet/minecraft/nbt/CompoundTag; F
net/minecraft/world/entity/decoration/GlowItemFrame bgu
	getAddItemSound ()Lnet/minecraft/sounds/SoundEvent; l
	getBreakSound ()Lnet/minecraft/sounds/SoundEvent; i
	getFrameItemStack ()Lnet/minecraft/world/item/ItemStack; o
	getPlaceSound ()Lnet/minecraft/sounds/SoundEvent; j
	getRemoveItemSound ()Lnet/minecraft/sounds/SoundEvent; h
	getRotateItemSound ()Lnet/minecraft/sounds/SoundEvent; n
net/minecraft/world/entity/decoration/HangingEntity bgv
	HANGING_ENTITY b
	checkInterval e
	direction d
	pos c
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V a_
	dropItem (Lnet/minecraft/world/entity/Entity;)V a
	getDirection ()Lnet/minecraft/core/Direction; co
	getHeight ()I s
	getPos ()Lnet/minecraft/core/BlockPos; v
	getWidth ()I r
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isPickable ()Z bc
	mirror (Lnet/minecraft/world/level/block/Mirror;)F a
	move (Lnet/minecraft/world/entity/MoverType;Lnet/minecraft/world/phys/Vec3;)V a
	offs (I)D a
	playPlacementSound ()V t
	push (DDD)V i
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	recalculateBoundingBox ()V p
	refreshDimensions ()V x_
	repositionEntityAfterLoad ()Z be
	rotate (Lnet/minecraft/world/level/block/Rotation;)F a
	setDirection (Lnet/minecraft/core/Direction;)V a
	setPos (DDD)V e
	skipAttackInteraction (Lnet/minecraft/world/entity/Entity;)Z r
	spawnAtLocation (Lnet/minecraft/world/item/ItemStack;F)Lnet/minecraft/world/entity/item/ItemEntity; a
	survives ()Z q
	thunderHit (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LightningBolt;)V a
	tick ()V k
net/minecraft/world/entity/decoration/ItemFrame bgw
	DATA_ITEM ao
	DATA_ROTATION ap
	LOGGER f
	NUM_ROTATIONS e
	dropChance aq
	fixed ar
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V a_
	dropItem (Lnet/minecraft/world/entity/Entity;)V a
	dropItem (Lnet/minecraft/world/entity/Entity;Z)V b
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; P
	getAddItemSound ()Lnet/minecraft/sounds/SoundEvent; l
	getAnalogOutput ()I z
	getBreakSound ()Lnet/minecraft/sounds/SoundEvent; i
	getEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F a
	getFrameItemStack ()Lnet/minecraft/world/item/ItemStack; o
	getHeight ()I s
	getItem ()Lnet/minecraft/world/item/ItemStack; w
	getPickRadius ()F bp
	getPickResult ()Lnet/minecraft/world/item/ItemStack; df
	getPlaceSound ()Lnet/minecraft/sounds/SoundEvent; j
	getRemoveItemSound ()Lnet/minecraft/sounds/SoundEvent; h
	getRotateItemSound ()Lnet/minecraft/sounds/SoundEvent; n
	getRotation ()I x
	getSlot (I)Lnet/minecraft/world/entity/SlotAccess; k
	getWidth ()I r
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	kill ()V ab
	move (Lnet/minecraft/world/entity/MoverType;Lnet/minecraft/world/phys/Vec3;)V a
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playPlacementSound ()V t
	push (DDD)V i
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	recalculateBoundingBox ()V p
	recreateFromPacket (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	removeFramedMap (Lnet/minecraft/world/item/ItemStack;)V c
	setDirection (Lnet/minecraft/core/Direction;)V a
	setItem (Lnet/minecraft/world/item/ItemStack;)V a
	setItem (Lnet/minecraft/world/item/ItemStack;Z)V a
	setRotation (I)V a
	setRotation (IZ)V a
	shouldRenderAtSqrDistance (D)Z a
	survives ()Z q
net/minecraft/world/entity/decoration/LeashFenceKnotEntity bgx
	OFFSET_Y e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	dropItem (Lnet/minecraft/world/entity/Entity;)V a
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; P
	getEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F a
	getHeight ()I s
	getOrCreateKnot (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/decoration/LeashFenceKnotEntity; b
	getPickResult ()Lnet/minecraft/world/item/ItemStack; df
	getRopeHoldPosition (F)Lnet/minecraft/world/phys/Vec3; n
	getWidth ()I r
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	playPlacementSound ()V t
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	recalculateBoundingBox ()V p
	setDirection (Lnet/minecraft/core/Direction;)V a
	shouldRenderAtSqrDistance (D)Z a
	survives ()Z q
net/minecraft/world/entity/decoration/Motive bgy
	ALBAN c
	AZTEC b
	AZTEC2 d
	BOMB e
	BURNING_SKULL x
	BUST p
	COURBET i
	CREEBET l
	DONKEY_KONG z
	FIGHTERS u
	GRAHAM n
	KEBAB a
	MATCH o
	PIGSCENE w
	PLANT f
	POINTER v
	POOL h
	SEA j
	SKELETON y
	SKULL_AND_ROSES s
	STAGE q
	SUNSET k
	VOID r
	WANDERER m
	WASTELAND g
	WITHER t
	height B
	width A
	getHeight ()I b
	getWidth ()I a
	register (Ljava/lang/String;II)Lnet/minecraft/world/entity/decoration/Motive; a
net/minecraft/world/entity/decoration/Painting bgz
	motive e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	dropItem (Lnet/minecraft/world/entity/Entity;)V a
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; P
	getHeight ()I s
	getPickResult ()Lnet/minecraft/world/item/ItemStack; df
	getWidth ()I r
	lerpTo (DDDFFIZ)V a
	moveTo (DDDFF)V b
	playPlacementSound ()V t
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/world/entity/item/FallingBlockEntity bhb
	DATA_START_POS e
	blockData d
	blockState f
	cancelDrop ao
	dropItem c
	fallDamageMax aq
	fallDamagePerDistance ar
	hurtEntities ap
	time b
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	callOnBrokenAfterFall (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;)V a
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	defineSynchedData ()V a_
	displayFireAnimation ()Z cg
	fillCrashReportCategory (Lnet/minecraft/CrashReportCategory;)V a
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; P
	getBlockState ()Lnet/minecraft/world/level/block/state/BlockState; j
	getLevel ()Lnet/minecraft/world/level/Level; i
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aI
	getStartPos ()Lnet/minecraft/core/BlockPos; h
	isAttackable ()Z ca
	isPickable ()Z bc
	onlyOpCanSetNbt ()Z cy
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	recreateFromPacket (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	setHurtsEntities (FI)V b
	setStartPos (Lnet/minecraft/core/BlockPos;)V a
	tick ()V k
net/minecraft/world/entity/item/ItemEntity bhc
	DATA_ITEM c
	INFINITE_LIFETIME f
	INFINITE_PICKUP_DELAY e
	LIFETIME d
	age ao
	bobOffs b
	health aq
	owner as
	pickupDelay ap
	thrower ar
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	areMergable (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	changeDimension (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/entity/Entity; b
	copy ()Lnet/minecraft/world/entity/item/ItemEntity; v
	defineSynchedData ()V a_
	fireImmune ()Z aK
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; P
	getAge ()I l
	getItem ()Lnet/minecraft/world/item/ItemStack; h
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aI
	getName ()Lnet/minecraft/network/chat/Component; S
	getOwner ()Ljava/util/UUID; i
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; cJ
	getSpin (F)F a
	getThrower ()Ljava/util/UUID; j
	hasPickUpDelay ()Z q
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isAttackable ()Z ca
	isMergable ()Z A
	makeFakeItem ()V t
	merge (Lnet/minecraft/world/entity/item/ItemEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/item/ItemEntity;Lnet/minecraft/world/item/ItemStack;)V a
	merge (Lnet/minecraft/world/entity/item/ItemEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V a
	merge (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;I)Lnet/minecraft/world/item/ItemStack; a
	mergeWithNeighbours ()V z
	occludesVibrations ()Z aJ
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playerTouch (Lnet/minecraft/world/entity/player/Player;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setDefaultPickUpDelay ()V n
	setExtendedLifetime ()V s
	setItem (Lnet/minecraft/world/item/ItemStack;)V a
	setNeverPickUp ()V p
	setNoPickUpDelay ()V o
	setOwner (Ljava/util/UUID;)V b
	setPickUpDelay (I)V a
	setThrower (Ljava/util/UUID;)V c
	setUnderLavaMovement ()V x
	setUnderwaterMovement ()V w
	setUnlimitedLifetime ()V r
	tick ()V k
	tryToMerge (Lnet/minecraft/world/entity/item/ItemEntity;)V a
net/minecraft/world/entity/item/PrimedTnt bhd
	DATA_FUSE_ID b
	DEFAULT_FUSE_TIME c
	owner d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V a_
	explode ()V j
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; P
	getEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F a
	getFuse ()I i
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aI
	getOwner ()Lnet/minecraft/world/entity/LivingEntity; h
	isPickable ()Z bc
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setFuse (I)V a
	tick ()V k
net/minecraft/world/entity/monster/AbstractIllager bhf
	getArmPose ()Lnet/minecraft/world/entity/monster/AbstractIllager$IllagerArmPose; n
	getMobType ()Lnet/minecraft/world/entity/MobType; ek
	registerGoals ()V v
net/minecraft/world/entity/monster/AbstractIllager$IllagerArmPose bhf$a
	$VALUES i
	ATTACKING b
	BOW_AND_ARROW d
	CELEBRATING g
	CROSSBOW_CHARGE f
	CROSSBOW_HOLD e
	CROSSED a
	NEUTRAL h
	SPELLCASTING c
	$values ()[Lnet/minecraft/world/entity/monster/AbstractIllager$IllagerArmPose; a
net/minecraft/world/entity/monster/AbstractIllager$RaiderOpenDoorGoal bhf$b
	canUse ()Z a
net/minecraft/world/entity/monster/AbstractSkeleton bhg
	bowGoal b
	meleeGoal c
	aiStep ()V u_
	canFireProjectileWeapon (Lnet/minecraft/world/item/ProjectileWeaponItem;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; n
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getArrow (Lnet/minecraft/world/item/ItemStack;F)Lnet/minecraft/world/entity/projectile/AbstractArrow; b
	getMobType ()Lnet/minecraft/world/entity/MobType; ek
	getMyRidingOffset ()D bk
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getStepSound ()Lnet/minecraft/sounds/SoundEvent; p
	isShaking ()Z fv
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	populateDefaultEquipmentSlots (Lnet/minecraft/world/DifficultyInstance;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	reassessWeaponGoal ()V t
	registerGoals ()V v
	rideTick ()V bj
	setItemSlot (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/entity/monster/Blaze bhh
	DATA_FLAGS_ID d
	allowedHeightOffset b
	nextHeightOffsetChangeTick c
	aiStep ()V u_
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; n
	customServerAiStep ()V eX
	defineSynchedData ()V a_
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getBrightness ()F aY
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	isCharged ()Z p
	isOnFire ()Z bz
	isSensitiveToWater ()Z ew
	registerGoals ()V v
	setCharged (Z)V v
net/minecraft/world/entity/monster/Blaze$BlazeAttackGoal bhh$a
	attackStep b
	attackTime c
	blaze a
	lastSeen d
	canUse ()Z a
	getFollowDistance ()D g
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/CaveSpider bhi
	createCaveSpider ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; n
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
net/minecraft/world/entity/monster/Creeper bhj
	DATA_IS_IGNITED d
	DATA_IS_POWERED c
	DATA_SWELL_DIR b
	droppedSkulls bV
	explosionRadius bU
	maxSwell bT
	oldSwell e
	swell bS
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canDropMobsSkull ()Z fw
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; n
	defineSynchedData ()V a_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	dropCustomDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;IZ)V a
	explodeCreeper ()V fy
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMaxFallDistance ()I ce
	getSwellDir ()I p
	getSwelling (F)F z
	ignite ()V fv
	increaseDroppedSkulls ()V fx
	isIgnited ()Z t
	isPowered ()Z a
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V v
	setSwellDir (I)V a
	setTarget (Lnet/minecraft/world/entity/LivingEntity;)V h
	spawnLingeringCloud ()V fB
	thunderHit (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LightningBolt;)V a
	tick ()V k
net/minecraft/world/entity/monster/CrossbowAttackMob bhk
	getProjectileShotVector (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/phys/Vec3;F)Lcom/mojang/math/Vector3f; a
	getTarget ()Lnet/minecraft/world/entity/LivingEntity; H
	onCrossbowAttackPerformed ()V a
	performCrossbowAttack (Lnet/minecraft/world/entity/LivingEntity;F)V b
	setChargingCrossbow (Z)V b
	shootCrossbowProjectile (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/projectile/Projectile;FF)V a
	shootCrossbowProjectile (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/projectile/Projectile;F)V a
net/minecraft/world/entity/monster/Drowned bhl
	NAUTILUS_SHELL_CHANCE b
	groundNavigation d
	searchingForLand bV
	waterNavigation c
	addBehaviourGoals ()V n
	canReplaceCurrentItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	checkDrownedSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z a
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	closeToNextPos ()Z fx
	convertsInWater ()Z fw
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getSkull ()Lnet/minecraft/world/item/ItemStack; fv
	getStepSound ()Lnet/minecraft/sounds/SoundEvent; t
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; aA
	isDeepEnoughToSpawn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
	isPushedByFluid ()Z ck
	okTarget (Lnet/minecraft/world/entity/LivingEntity;)Z j
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
	populateDefaultEquipmentSlots (Lnet/minecraft/world/DifficultyInstance;)V a
	setSearchingForLand (Z)V v
	supportsBreakDoorGoal ()Z p
	travel (Lnet/minecraft/world/phys/Vec3;)V g
	updateSwimming ()V aQ
	wantsToSwim ()Z fF
net/minecraft/world/entity/monster/Drowned$DrownedAttackGoal bhl$a
	drowned b
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/monster/Drowned$DrownedGoToBeachGoal bhl$b
	drowned g
	canContinueToUse ()Z b
	canUse ()Z a
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/monster/Drowned$DrownedGoToWaterGoal bhl$c
	level f
	mob a
	speedModifier e
	wantedX b
	wantedY c
	wantedZ d
	canContinueToUse ()Z b
	canUse ()Z a
	getWaterPos ()Lnet/minecraft/world/phys/Vec3; g
	start ()V c
net/minecraft/world/entity/monster/Drowned$DrownedMoveControl bhl$d
	drowned l
	tick ()V a
net/minecraft/world/entity/monster/Drowned$DrownedSwimUpGoal bhl$e
	drowned a
	seaLevel c
	speedModifier b
	stuck d
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Drowned$DrownedTridentAttackGoal bhl$f
	drowned a
	canUse ()Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/monster/ElderGuardian bhm
	ELDER_SIZE_SCALE b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; n
	customServerAiStep ()V eX
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getAttackDuration ()I p
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getFlopSound ()Lnet/minecraft/sounds/SoundEvent; t
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
net/minecraft/world/entity/monster/EnderMan bhn
	DATA_CARRY_STATE bT
	DATA_CREEPY bU
	DATA_STARED_AT bV
	DELAY_BETWEEN_CREEPY_STARE_SOUND e
	MIN_DEAGGRESSION_TIME bS
	PERSISTENT_ANGER_TIME bY
	SPEED_MODIFIER_ATTACKING d
	SPEED_MODIFIER_ATTACKING_UUID c
	lastStareSound bW
	persistentAngerTarget ca
	remainingPersistentAngerTime bZ
	targetChangeTime bX
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V u_
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; n
	customServerAiStep ()V eX
	defineSynchedData ()V a_
	dropCustomDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;IZ)V a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getCarriedBlock ()Lnet/minecraft/world/level/block/state/BlockState; fv
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getPersistentAngerTarget ()Ljava/util/UUID; b
	getRemainingPersistentAngerTime ()I a
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	hasBeenStaredAt ()Z fx
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isCreepy ()Z fw
	isLookingAtMe (Lnet/minecraft/world/entity/player/Player;)Z g
	isSensitiveToWater ()Z ew
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playStareSound ()V p
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V v
	requiresCustomPersistence ()Z O
	setBeingStaredAt ()V fy
	setCarriedBlock (Lnet/minecraft/world/level/block/state/BlockState;)V c
	setPersistentAngerTarget (Ljava/util/UUID;)V a
	setRemainingPersistentAngerTime (I)V a
	setTarget (Lnet/minecraft/world/entity/LivingEntity;)V h
	startPersistentAngerTimer ()V c
	teleport ()Z t
	teleport (DDD)Z q
	teleportTowards (Lnet/minecraft/world/entity/Entity;)Z a
net/minecraft/world/entity/monster/EnderMan$EndermanFreezeWhenLookedAt bhn$a
	enderman a
	target b
	canUse ()Z a
	start ()V c
	tick ()V e
net/minecraft/world/entity/monster/EnderMan$EndermanLeaveBlockGoal bhn$b
	enderman a
	canPlaceBlock (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)Z a
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/monster/EnderMan$EndermanLookForPlayerGoal bhn$c
	aggroTime k
	continueAggroTargetConditions n
	enderman i
	pendingTarget j
	startAggroTargetConditions m
	teleportTime l
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/EnderMan$EndermanTakeBlockGoal bhn$d
	enderman a
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/monster/Endermite bho
	MAX_LIFE b
	life c
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V u_
	checkEndermiteSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; n
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMobType ()Lnet/minecraft/world/entity/MobType; ek
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aI
	getMyRidingOffset ()D bk
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V v
	setYBodyRot (F)V m
	tick ()V k
net/minecraft/world/entity/monster/Enemy bhp
	XP_REWARD_BOSS h_
	XP_REWARD_HUGE g_
	XP_REWARD_LARGE f_
	XP_REWARD_MEDIUM e_
	XP_REWARD_NONE c_
	XP_REWARD_SMALL d_
net/minecraft/world/entity/monster/Evoker bhq
	wololoTarget e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	applyRaidBuffs (IZ)V a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; p
	customServerAiStep ()V eX
	defineSynchedData ()V a_
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getCastingSoundEvent ()Lnet/minecraft/sounds/SoundEvent; fv
	getCelebrateSound ()Lnet/minecraft/sounds/SoundEvent; t
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getWololoTarget ()Lnet/minecraft/world/entity/animal/Sheep; fO
	isAlliedTo (Lnet/minecraft/world/entity/Entity;)Z p
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V v
	setWololoTarget (Lnet/minecraft/world/entity/animal/Sheep;)V a
net/minecraft/world/entity/monster/Evoker$EvokerAttackSpellGoal bhq$a
	createSpellEntity (DDDDFI)V a
	getCastingInterval ()I h
	getCastingTime ()I g
	getSpell ()Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; l
	getSpellPrepareSound ()Lnet/minecraft/sounds/SoundEvent; k
	performSpellCasting ()V j
net/minecraft/world/entity/monster/Evoker$EvokerCastingSpellGoal bhq$b
	tick ()V e
net/minecraft/world/entity/monster/Evoker$EvokerSummonSpellGoal bhq$c
	vexCountTargeting e
	canUse ()Z a
	getCastingInterval ()I h
	getCastingTime ()I g
	getSpell ()Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; l
	getSpellPrepareSound ()Lnet/minecraft/sounds/SoundEvent; k
	performSpellCasting ()V j
net/minecraft/world/entity/monster/Evoker$EvokerWololoSpellGoal bhq$d
	wololoTargeting e
	canContinueToUse ()Z b
	canUse ()Z a
	getCastWarmupTime ()I m
	getCastingInterval ()I h
	getCastingTime ()I g
	getSpell ()Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; l
	getSpellPrepareSound ()Lnet/minecraft/sounds/SoundEvent; k
	performSpellCasting ()V j
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Ghast bhr
	DATA_IS_CHARGING b
	explosionPower c
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	checkGhastSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; t
	defineSynchedData ()V a_
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getExplosionPower ()I p
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMaxSpawnClusterSize ()I fb
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; cJ
	getSoundVolume ()F eo
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isCharging ()Z n
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V v
	setCharging (Z)V v
	shouldDespawnInPeaceful ()Z Q
net/minecraft/world/entity/monster/Ghast$GhastLookGoal bhr$a
	ghast a
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/monster/Ghast$GhastMoveControl bhr$b
	floatDuration m
	ghast l
	canReach (Lnet/minecraft/world/phys/Vec3;I)Z a
	tick ()V a
net/minecraft/world/entity/monster/Ghast$GhastShootFireballGoal bhr$c
	chargeTime a
	ghast b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Ghast$RandomFloatAroundGoal bhr$d
	ghast a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/monster/Giant bhs
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; n
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
net/minecraft/world/entity/monster/Guardian bht
	ATTACK_TIME c
	DATA_ID_ATTACK_TARGET e
	DATA_ID_MOVING b
	clientSideAttackTime bY
	clientSideCachedAttackTarget bX
	clientSideSpikesAnimation bV
	clientSideSpikesAnimationO bW
	clientSideTailAnimation bS
	clientSideTailAnimationO bT
	clientSideTailAnimationSpeed bU
	clientSideTouchedGround bZ
	randomStrollGoal d
	aiStep ()V u_
	canBreatheUnderwater ()Z dr
	checkGuardianSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z b
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fv
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; a
	defineSynchedData ()V a_
	getActiveAttackTarget ()Lnet/minecraft/world/entity/LivingEntity; fy
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getAmbientSoundInterval ()I J
	getAttackAnimationScale (F)F B
	getAttackDuration ()I p
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getFlopSound ()Lnet/minecraft/sounds/SoundEvent; t
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMaxHeadXRot ()I eY
	getMobType ()Lnet/minecraft/world/entity/MobType; ek
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aI
	getSpikesAnimation (F)F A
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getTailAnimation (F)F z
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	hasActiveAttackTarget ()Z fx
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isMoving ()Z fw
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	registerGoals ()V v
	setActiveAttackTarget (I)V a
	setMoving (Z)V v
	travel (Lnet/minecraft/world/phys/Vec3;)V g
net/minecraft/world/entity/monster/Guardian$GuardianAttackGoal bht$a
	attackTime b
	elder c
	guardian a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Guardian$GuardianAttackSelector bht$b
	guardian a
	test (Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/monster/Guardian$GuardianMoveControl bht$c
	guardian l
	tick ()V a
net/minecraft/world/entity/monster/Husk bhu
	checkHuskSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z a
	convertsInWater ()Z fw
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	doUnderWaterConversion ()V fy
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getSkull ()Lnet/minecraft/world/item/ItemStack; fv
	getStepSound ()Lnet/minecraft/sounds/SoundEvent; t
	isSunSensitive ()Z I_
net/minecraft/world/entity/monster/Illusioner bhv
	ILLUSION_SPREAD bT
	ILLUSION_TRANSITION_TICKS bS
	NUM_ILLUSIONS e
	clientSideIllusionOffsets bV
	clientSideIllusionTicks bU
	aiStep ()V u_
	applyRaidBuffs (IZ)V a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; p
	defineSynchedData ()V a_
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getArmPose ()Lnet/minecraft/world/entity/monster/AbstractIllager$IllagerArmPose; n
	getBoundingBoxForCulling ()Lnet/minecraft/world/phys/AABB; cs
	getCastingSoundEvent ()Lnet/minecraft/sounds/SoundEvent; fv
	getCelebrateSound ()Lnet/minecraft/sounds/SoundEvent; t
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getIllusionOffsets (F)[Lnet/minecraft/world/phys/Vec3; z
	isAlliedTo (Lnet/minecraft/world/entity/Entity;)Z p
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
	registerGoals ()V v
net/minecraft/world/entity/monster/Illusioner$IllusionerBlindnessSpellGoal bhv$a
	lastTargetId e
	canUse ()Z a
	getCastingInterval ()I h
	getCastingTime ()I g
	getSpell ()Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; l
	getSpellPrepareSound ()Lnet/minecraft/sounds/SoundEvent; k
	performSpellCasting ()V j
	start ()V c
net/minecraft/world/entity/monster/Illusioner$IllusionerMirrorSpellGoal bhv$b
	canUse ()Z a
	getCastingInterval ()I h
	getCastingTime ()I g
	getSpell ()Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; l
	getSpellPrepareSound ()Lnet/minecraft/sounds/SoundEvent; k
	performSpellCasting ()V j
net/minecraft/world/entity/monster/MagmaCube bhw
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	checkMagmaCubeSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z b
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; n
	decreaseSquish ()V ft
	getAttackDamage ()F fv
	getBrightness ()F aY
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getDefaultLootTable ()Lnet/minecraft/resources/ResourceLocation; N
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getJumpDelay ()I t
	getJumpSound ()Lnet/minecraft/sounds/SoundEvent; fx
	getParticleType ()Lnet/minecraft/core/particles/ParticleOptions; p
	getSquishSound ()Lnet/minecraft/sounds/SoundEvent; fw
	isDealsDamage ()Z fu
	isOnFire ()Z bz
	jumpFromGround ()V es
	jumpInLiquid (Lnet/minecraft/tags/Tag;)V c
	setSize (IZ)V a
net/minecraft/world/entity/monster/Monster bhx
	aiStep ()V u_
	checkAnyLightMonsterSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z c
	checkMonsterSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z b
	createMonsterAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fA
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getFallDamageSound (I)Lnet/minecraft/sounds/SoundEvent; p
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getProjectile (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; h
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; cJ
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; aA
	getSwimSplashSound ()Lnet/minecraft/sounds/SoundEvent; aB
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	isDarkEnoughToSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z a
	isPreventingPlayerRest (Lnet/minecraft/world/entity/player/Player;)Z f
	shouldDespawnInPeaceful ()Z Q
	shouldDropExperience ()Z dC
	shouldDropLoot ()Z dD
	updateNoActionTime ()V fz
net/minecraft/world/entity/monster/PatrollingMonster bhy
	patrolLeader c
	patrolTarget b
	patrolling d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canBeLeader ()Z fw
	canJoinPatrol ()Z fC
	checkPatrollingMonsterSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z b
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	findPatrolTarget ()V fD
	getMyRidingOffset ()D bk
	getPatrolTarget ()Lnet/minecraft/core/BlockPos; fx
	hasPatrolTarget ()Z fy
	isPatrolLeader ()Z fB
	isPatrolling ()Z fE
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V v
	removeWhenFarAway (D)Z h
	setPatrolLeader (Z)V v
	setPatrolTarget (Lnet/minecraft/core/BlockPos;)V g
	setPatrolling (Z)V w
net/minecraft/world/entity/monster/PatrollingMonster$LongDistancePatrolGoal bhy$a
	NAVIGATION_FAILED_COOLDOWN a
	cooldownUntil e
	leaderSpeedModifier d
	mob b
	speedModifier c
	canUse ()Z a
	findPatrolCompanions ()Ljava/util/List; g
	moveRandomly ()Z h
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Phantom bhz
	FLAP_DEGREES_PER_TICK b
	ID_SIZE d
	TICKS_PER_FLAP c
	anchorPoint bS
	attackPhase bT
	moveTargetPoint e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V u_
	canAttackType (Lnet/minecraft/world/entity/EntityType;)Z a
	createBodyControl ()Lnet/minecraft/world/entity/ai/control/BodyRotationControl; z
	customServerAiStep ()V eX
	defineSynchedData ()V a_
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMobType ()Lnet/minecraft/world/entity/MobType; ek
	getPhantomSize ()I n
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; cJ
	getSoundVolume ()F eo
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getUniqueFlapTickOffset ()I p
	isFlapping ()Z aF
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V v
	setPhantomSize (I)V a
	shouldDespawnInPeaceful ()Z Q
	shouldRenderAtSqrDistance (D)Z a
	tick ()V k
	updatePhantomSizeInfo ()V t
net/minecraft/world/entity/monster/Phantom$AttackPhase bhz$a
	$VALUES c
	CIRCLE a
	SWOOP b
	$values ()[Lnet/minecraft/world/entity/monster/Phantom$AttackPhase; a
net/minecraft/world/entity/monster/Phantom$PhantomAttackPlayerTargetGoal bhz$b
	attackTargeting b
	nextScanTick c
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/monster/Phantom$PhantomAttackStrategyGoal bhz$c
	nextSweepTick b
	canUse ()Z a
	setAnchorAboveTarget ()V g
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Phantom$PhantomBodyRotationControl bhz$d
	clientTick ()V a
net/minecraft/world/entity/monster/Phantom$PhantomCircleAroundAnchorGoal bhz$e
	angle c
	clockwise f
	distance d
	height e
	canUse ()Z a
	selectNext ()V h
	start ()V c
	tick ()V e
net/minecraft/world/entity/monster/Phantom$PhantomLookControl bhz$f
	tick ()V a
net/minecraft/world/entity/monster/Phantom$PhantomMoveControl bhz$g
	speed m
	tick ()V a
net/minecraft/world/entity/monster/Phantom$PhantomMoveTargetGoal bhz$h
	touchingTarget ()Z g
net/minecraft/world/entity/monster/Phantom$PhantomSweepAttackGoal bhz$i
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Pillager bia
	CROSSBOW_POWER bT
	INVENTORY_SIZE e
	IS_CHARGING_CROSSBOW b
	SLOT_OFFSET bS
	inventory bU
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	applyRaidBuffs (IZ)V a
	canFireProjectileWeapon (Lnet/minecraft/world/item/ProjectileWeaponItem;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; p
	defineSynchedData ()V a_
	enchantSpawnedWeapon (F)V x
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getArmPose ()Lnet/minecraft/world/entity/monster/AbstractIllager$IllagerArmPose; n
	getCelebrateSound ()Lnet/minecraft/sounds/SoundEvent; t
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getInventory ()Lnet/minecraft/world/Container; fF
	getMaxSpawnClusterSize ()I fb
	getSlot (I)Lnet/minecraft/world/entity/SlotAccess; k
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	isAlliedTo (Lnet/minecraft/world/entity/Entity;)Z p
	isChargingCrossbow ()Z fv
	onCrossbowAttackPerformed ()V a
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
	pickUpItem (Lnet/minecraft/world/entity/item/ItemEntity;)V b
	populateDefaultEquipmentSlots (Lnet/minecraft/world/DifficultyInstance;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V v
	setChargingCrossbow (Z)V b
	shootCrossbowProjectile (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/projectile/Projectile;F)V a
	wantsItem (Lnet/minecraft/world/item/ItemStack;)Z m
net/minecraft/world/entity/monster/RangedAttackMob bib
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
net/minecraft/world/entity/monster/Ravager bic
	ATTACK_DURATION bY
	ATTACK_MOVEMENT_SPEED bT
	BASE_MOVEMENT_SPEED bS
	NO_RAVAGER_AND_ALIVE e
	STUNNED_COLOR bU
	STUNNED_COLOR_BLUE bV
	STUNNED_COLOR_GREEN bW
	STUNNED_COLOR_RED bX
	STUN_DURATION b
	attackTick bZ
	roarTick cb
	stunnedTick ca
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V u_
	applyRaidBuffs (IZ)V a
	blockedByShield (Lnet/minecraft/world/entity/LivingEntity;)V e
	canBeControlledByRider ()Z fc
	canBeLeader ()Z fw
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; n
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; a
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getAttackTick ()I p
	getCelebrateSound ()Lnet/minecraft/sounds/SoundEvent; t
	getControllingPassenger ()Lnet/minecraft/world/entity/Entity; cz
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMaxHeadYRot ()I eZ
	getPassengersRidingOffset ()D bl
	getRoarTick ()I fF
	getStunnedTick ()I fv
	handleEntityEvent (B)V a
	hasLineOfSight (Lnet/minecraft/world/entity/Entity;)Z B
	isImmobile ()Z eq
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V v
	roar ()V fH
	strongKnockback (Lnet/minecraft/world/entity/Entity;)V a
	stunEffect ()V fG
	updateControlFlags ()V M
net/minecraft/world/entity/monster/Ravager$RavagerMeleeAttackGoal bic$a
	getAttackReachSqr (Lnet/minecraft/world/entity/LivingEntity;)D a
net/minecraft/world/entity/monster/Ravager$RavagerNavigation bic$b
	createPathFinder (I)Lnet/minecraft/world/level/pathfinder/PathFinder; a
net/minecraft/world/entity/monster/Ravager$RavagerNodeEvaluator bic$c
	evaluateBlockPathType (Lnet/minecraft/world/level/BlockGetter;ZZLnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
net/minecraft/world/entity/monster/Shulker bid
	COVERED_ARMOR_MODIFIER bS
	COVERED_ARMOR_MODIFIER_UUID e
	DATA_ATTACH_FACE_ID b
	DATA_COLOR_ID d
	DATA_PEEK_ID c
	DEFAULT_COLOR bV
	FORWARD ca
	MAX_LID_OPEN cf
	MAX_TELEPORT_DISTANCE bW
	NO_COLOR bU
	OTHER_SHULKER_LIMIT bY
	OTHER_SHULKER_SCAN_RADIUS bX
	PEEK_PER_TICK bZ
	TELEPORT_STEPS bT
	clientOldAttachPosition cd
	clientSideTeleportInterpolation ce
	currentPeekAmount cc
	currentPeekAmountO cb
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canBeCollidedWith ()Z bi
	canStayAt (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; n
	createBodyControl ()Lnet/minecraft/world/entity/ai/control/BodyRotationControl; z
	defineSynchedData ()V a_
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	findAttachableSurface (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/Direction; g
	findNewAttachment ()V fw
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getAttachFace ()Lnet/minecraft/core/Direction; t
	getClientPeekAmount (F)F z
	getColor ()Lnet/minecraft/world/item/DyeColor; fv
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getDeltaMovement ()Lnet/minecraft/world/phys/Vec3; cV
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMaxHeadXRot ()I eY
	getMaxHeadYRot ()I eZ
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aI
	getMyRidingOffset ()D bk
	getPhysicalPeek (F)F B
	getPickRadius ()F bp
	getProgressAabb (Lnet/minecraft/core/Direction;F)Lnet/minecraft/world/phys/AABB; a
	getProgressDeltaAabb (Lnet/minecraft/core/Direction;FF)Lnet/minecraft/world/phys/AABB; a
	getRawPeekAmount ()I fB
	getRenderPosition (F)Ljava/util/Optional; A
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; cJ
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	hitByShulkerBullet ()V fA
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isClosed ()Z fz
	isPositionBlocked (Lnet/minecraft/core/BlockPos;)Z h
	lerpTo (DDDFFIZ)V a
	makeBoundingBox ()Lnet/minecraft/world/phys/AABB; ag
	move (Lnet/minecraft/world/entity/MoverType;Lnet/minecraft/world/phys/Vec3;)V a
	onPeekAmountChange ()V fy
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playAmbientSound ()V K
	push (Lnet/minecraft/world/entity/Entity;)V g
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	recreateFromPacket (Lnet/minecraft/network/protocol/game/ClientboundAddMobPacket;)V a
	registerGoals ()V v
	setAttachFace (Lnet/minecraft/core/Direction;)V a
	setColor (Lnet/minecraft/world/item/DyeColor;)V a
	setDeltaMovement (Lnet/minecraft/world/phys/Vec3;)V f
	setPos (DDD)V e
	setRawPeekAmount (I)V a
	startRiding (Lnet/minecraft/world/entity/Entity;Z)Z a
	stopRiding ()V m
	teleportSomewhere ()Z p
	tick ()V k
	updatePeekAmount ()Z fx
net/minecraft/world/entity/monster/Shulker$ShulkerAttackGoal bid$a
	attackTime b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Shulker$ShulkerBodyRotationControl bid$b
	clientTick ()V a
net/minecraft/world/entity/monster/Shulker$ShulkerDefenseAttackGoal bid$c
	canUse ()Z a
	getTargetSearchArea (D)Lnet/minecraft/world/phys/AABB; a
net/minecraft/world/entity/monster/Shulker$ShulkerLookControl bid$d
	clampHeadRotationToBody ()V b
	getXRotD ()Ljava/util/Optional; h
	getYRotD ()Ljava/util/Optional; i
net/minecraft/world/entity/monster/Shulker$ShulkerNearestAttackGoal bid$e
	canUse ()Z a
	getTargetSearchArea (D)Lnet/minecraft/world/phys/AABB; a
net/minecraft/world/entity/monster/Shulker$ShulkerPeekGoal bid$f
	peekTime b
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Silverfish bie
	friendsGoal b
	checkSliverfishSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; n
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMobType ()Lnet/minecraft/world/entity/MobType; ek
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aI
	getMyRidingOffset ()D bk
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	registerGoals ()V v
	setYBodyRot (F)V m
	tick ()V k
net/minecraft/world/entity/monster/Silverfish$SilverfishMergeWithStoneGoal bie$a
	doMerge j
	selectedDirection i
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/monster/Silverfish$SilverfishWakeUpFriendsGoal bie$b
	lookForFriends b
	silverfish a
	canUse ()Z a
	notifyHurt ()V g
	tick ()V e
net/minecraft/world/entity/monster/Skeleton bif
	CONVERSION_TAG b
	DATA_STRAY_CONVERSION_ID c
	conversionTime e
	inPowderSnowTime d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canFreeze ()Z dg
	defineSynchedData ()V a_
	doFreezeConversion ()V fx
	dropCustomDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;IZ)V a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getStepSound ()Lnet/minecraft/sounds/SoundEvent; p
	isFreezeConverting ()Z fw
	isShaking ()Z fv
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setFreezeConverting (Z)V v
	startFreezeConversion (I)V a
	tick ()V k
net/minecraft/world/entity/monster/Slime big
	ID_SIZE bT
	MAX_SIZE c
	MIN_SIZE b
	oSquish bS
	squish e
	targetSquish d
	wasOnGround bU
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	checkSlimeSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z c
	dealDamage (Lnet/minecraft/world/entity/LivingEntity;)V j
	decreaseSquish ()V ft
	defineSynchedData ()V a_
	doPlayJumpSound ()Z fA
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAttackDamage ()F fv
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getDefaultLootTable ()Lnet/minecraft/resources/ResourceLocation; N
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getJumpDelay ()I t
	getJumpSound ()Lnet/minecraft/sounds/SoundEvent; fx
	getMaxHeadXRot ()I eY
	getParticleType ()Lnet/minecraft/core/particles/ParticleOptions; p
	getSize ()I fy
	getSoundPitch ()F n
	getSoundVolume ()F eo
	getSquishSound ()Lnet/minecraft/sounds/SoundEvent; fw
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getType ()Lnet/minecraft/world/entity/EntityType; Y
	isDealsDamage ()Z fu
	isTiny ()Z fz
	jumpFromGround ()V es
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playerTouch (Lnet/minecraft/world/entity/player/Player;)V b
	push (Lnet/minecraft/world/entity/Entity;)V g
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	refreshDimensions ()V x_
	registerGoals ()V v
	remove (Lnet/minecraft/world/entity/Entity$RemovalReason;)V a
	setSize (IZ)V a
	shouldDespawnInPeaceful ()Z Q
	tick ()V k
net/minecraft/world/entity/monster/Slime$SlimeAttackGoal big$a
	growTiredTimer b
	slime a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	tick ()V e
net/minecraft/world/entity/monster/Slime$SlimeFloatGoal big$b
	slime a
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/monster/Slime$SlimeKeepOnJumpingGoal big$c
	slime a
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/monster/Slime$SlimeMoveControl big$d
	isAggressive o
	jumpDelay m
	slime n
	yRot l
	setDirection (FZ)V a
	setWantedMovement (D)V a
	tick ()V a
net/minecraft/world/entity/monster/Slime$SlimeRandomDirectionGoal big$e
	chosenDegrees b
	nextRandomizeTime c
	slime a
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/monster/SpellcasterIllager bih
	DATA_SPELL_CASTING_ID e
	currentSpell bS
	spellCastingTickCount b
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	customServerAiStep ()V eX
	defineSynchedData ()V a_
	getArmPose ()Lnet/minecraft/world/entity/monster/AbstractIllager$IllagerArmPose; n
	getCastingSoundEvent ()Lnet/minecraft/sounds/SoundEvent; fv
	getCurrentSpell ()Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; fG
	getSpellCastingTime ()I fH
	isCastingSpell ()Z fF
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setIsCastingSpell (Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell;)V a
	tick ()V k
net/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell bih$a
	$VALUES i
	BLINDNESS f
	DISAPPEAR e
	FANGS c
	NONE a
	SUMMON_VEX b
	WOLOLO d
	id g
	spellColor h
	$values ()[Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; a
	byId (I)Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; a
net/minecraft/world/entity/monster/SpellcasterIllager$SpellcasterCastingSpellGoal bih$b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/SpellcasterIllager$SpellcasterUseSpellGoal bih$c
	attackWarmupDelay b
	nextAttackTickCount c
	canContinueToUse ()Z b
	canUse ()Z a
	getCastWarmupTime ()I m
	getCastingInterval ()I h
	getCastingTime ()I g
	getSpell ()Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; l
	getSpellPrepareSound ()Lnet/minecraft/sounds/SoundEvent; k
	performSpellCasting ()V j
	start ()V c
	tick ()V e
net/minecraft/world/entity/monster/Spider bii
	DATA_FLAGS_ID b
	SPIDER_SPECIAL_EFFECT_CHANCE c
	canBeAffected (Lnet/minecraft/world/effect/MobEffectInstance;)Z c
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; p
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; a
	defineSynchedData ()V a_
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMobType ()Lnet/minecraft/world/entity/MobType; ek
	getPassengersRidingOffset ()D bl
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	isClimbing ()Z t
	makeStuckInBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/Vec3;)V a
	onClimbable ()Z b_
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	registerGoals ()V v
	setClimbing (Z)V v
	tick ()V k
net/minecraft/world/entity/monster/Spider$SpiderAttackGoal bii$a
	canContinueToUse ()Z b
	canUse ()Z a
	getAttackReachSqr (Lnet/minecraft/world/entity/LivingEntity;)D a
net/minecraft/world/entity/monster/Spider$SpiderEffectsGroupData bii$b
	effect a
	setRandomEffect (Ljava/util/Random;)V a
net/minecraft/world/entity/monster/Spider$SpiderTargetGoal bii$c
	canUse ()Z a
net/minecraft/world/entity/monster/Stray bij
	checkStraySpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getArrow (Lnet/minecraft/world/item/ItemStack;F)Lnet/minecraft/world/entity/projectile/AbstractArrow; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getStepSound ()Lnet/minecraft/sounds/SoundEvent; p
net/minecraft/world/entity/monster/Strider bik
	DATA_BOOST_TIME bY
	DATA_SADDLE_ID ca
	DATA_SUFFOCATING bZ
	FOOD_ITEMS bW
	STEERING_MODIFIER bV
	SUFFOCATE_SPEED_MODIFIER bT
	SUFFOCATE_STEERING_MODIFIER bS
	TEMPT_ITEMS bX
	panicGoal cd
	steering cb
	temptGoal cc
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	boost ()Z a
	canAddPassenger (Lnet/minecraft/world/entity/Entity;)Z o
	canBeControlledByRider ()Z fc
	canStandOnFluid (Lnet/minecraft/world/level/material/Fluid;)Z a
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	checkStriderSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z c
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fv
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; a
	defineSynchedData ()V a_
	dropEquipment ()V dX
	equipSaddle (Lnet/minecraft/sounds/SoundSource;)V a
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	floatStrider ()V fD
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/monster/Strider; b
	getControllingPassenger ()Lnet/minecraft/world/entity/Entity; cz
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getDismountLocationForPassenger (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/phys/Vec3; b
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; cu
	getMoveSpeed ()F t
	getPassengersRidingOffset ()D bl
	getSteeringSpeed ()F b
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	isBeingTempted ()Z fx
	isFood (Lnet/minecraft/world/item/ItemStack;)Z n
	isOnFire ()Z bz
	isPanicking ()Z fw
	isSaddleable ()Z c
	isSaddled ()Z d
	isSensitiveToWater ()Z ew
	isSuffocating ()Z p
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	nextStep ()F az
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V v
	setSuffocating (Z)V v
	shouldPassengersInheritMalus ()Z x
	spawnJockey (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/SpawnGroupData;)Lnet/minecraft/world/entity/SpawnGroupData; a
	tick ()V k
	travel (Lnet/minecraft/world/phys/Vec3;)V g
	travelWithInput (Lnet/minecraft/world/phys/Vec3;)V a
net/minecraft/world/entity/monster/Strider$StriderGoToLavaGoal bik$a
	strider g
	canContinueToUse ()Z b
	canUse ()Z a
	getMoveToTarget ()Lnet/minecraft/core/BlockPos; j
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	shouldRecalculatePath ()Z k
net/minecraft/world/entity/monster/Strider$StriderPathNavigation bik$b
	createPathFinder (I)Lnet/minecraft/world/level/pathfinder/PathFinder; a
	hasValidPathType (Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)Z a
	isStableDestination (Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/entity/monster/Vex bil
	DATA_FLAGS_ID d
	FLAG_IS_CHARGING e
	FLAP_DEGREES_PER_TICK b
	TICKS_PER_FLAP c
	boundOrigin bT
	hasLimitedLife bU
	limitedLifeTicks bV
	owner bS
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; n
	defineSynchedData ()V a_
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getBoundOrigin ()Lnet/minecraft/core/BlockPos; t
	getBrightness ()F aY
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getOwner ()Lnet/minecraft/world/entity/Mob; p
	getVexFlag (I)Z b
	isCharging ()Z fv
	isFlapping ()Z aF
	move (Lnet/minecraft/world/entity/MoverType;Lnet/minecraft/world/phys/Vec3;)V a
	populateDefaultEquipmentSlots (Lnet/minecraft/world/DifficultyInstance;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V v
	setBoundOrigin (Lnet/minecraft/core/BlockPos;)V g
	setIsCharging (Z)V v
	setLimitedLife (I)V a
	setOwner (Lnet/minecraft/world/entity/Mob;)V a
	setVexFlag (IZ)V a
	tick ()V k
net/minecraft/world/entity/monster/Vex$VexChargeAttackGoal bil$a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Vex$VexCopyOwnerTargetGoal bil$b
	copyOwnerTargeting b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/monster/Vex$VexMoveControl bil$c
	tick ()V a
net/minecraft/world/entity/monster/Vex$VexRandomMoveGoal bil$d
	canContinueToUse ()Z b
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/monster/Vindicator bim
	DOOR_BREAKING_PREDICATE e
	TAG_JOHNNY b
	isJohnny bS
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	applyRaidBuffs (IZ)V a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; p
	customServerAiStep ()V eX
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getArmPose ()Lnet/minecraft/world/entity/monster/AbstractIllager$IllagerArmPose; n
	getCelebrateSound ()Lnet/minecraft/sounds/SoundEvent; t
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	isAlliedTo (Lnet/minecraft/world/entity/Entity;)Z p
	populateDefaultEquipmentSlots (Lnet/minecraft/world/DifficultyInstance;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V v
	setCustomName (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/world/entity/monster/Vindicator$VindicatorBreakDoorGoal bim$a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/monster/Vindicator$VindicatorJohnnyAttackGoal bim$b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/monster/Vindicator$VindicatorMeleeAttackGoal bim$c
	getAttackReachSqr (Lnet/minecraft/world/entity/LivingEntity;)D a
net/minecraft/world/entity/monster/Witch bin
	DATA_USING_ITEM bS
	SPEED_MODIFIER_DRINKING e
	SPEED_MODIFIER_DRINKING_UUID b
	attackPlayersGoal bV
	healRaidersGoal bU
	usingTime bT
	aiStep ()V u_
	applyRaidBuffs (IZ)V a
	canBeLeader ()Z fw
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; p
	defineSynchedData ()V a_
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getCelebrateSound ()Lnet/minecraft/sounds/SoundEvent; t
	getDamageAfterMagicAbsorb (Lnet/minecraft/world/damagesource/DamageSource;F)F e
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	handleEntityEvent (B)V a
	isDrinkingPotion ()Z n
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
	registerGoals ()V v
	setUsingItem (Z)V x
net/minecraft/world/entity/monster/WitherSkeleton bio
	canBeAffected (Lnet/minecraft/world/effect/MobEffectInstance;)Z c
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	dropCustomDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;IZ)V a
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getArrow (Lnet/minecraft/world/item/ItemStack;F)Lnet/minecraft/world/entity/projectile/AbstractArrow; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getStepSound ()Lnet/minecraft/sounds/SoundEvent; p
	populateDefaultEquipmentEnchantments (Lnet/minecraft/world/DifficultyInstance;)V b
	populateDefaultEquipmentSlots (Lnet/minecraft/world/DifficultyInstance;)V a
	registerGoals ()V v
net/minecraft/world/entity/monster/Zoglin bip
	ATTACK_DAMAGE bU
	ATTACK_DURATION bY
	ATTACK_INTERVAL bW
	ATTACK_KNOCKBACK bS
	BABY_ATTACK_DAMAGE bV
	BABY_ATTACK_INTERVAL bX
	DATA_BABY_ID d
	KNOCKBACK_RESISTANCE bT
	MAX_HEALTH e
	MEMORY_TYPES c
	MOVEMENT_SPEED_WHEN_FIGHTING bZ
	SENSOR_TYPES b
	SPEED_MULTIPLIER_WHEN_IDLING ca
	attackAnimationRemainingTicks cb
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V u_
	blockedByShield (Lnet/minecraft/world/entity/LivingEntity;)V e
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; dp
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; n
	customServerAiStep ()V eX
	defineSynchedData ()V a_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	findNearestValidAttackTarget ()Ljava/util/Optional; fx
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getAttackAnimationRemainingTicks ()I fv
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; do
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMobType ()Lnet/minecraft/world/entity/MobType; ek
	getPassengersRidingOffset ()D bl
	handleEntityEvent (B)V a
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	initCoreActivity (Lnet/minecraft/world/entity/ai/Brain;)V a
	initFightActivity (Lnet/minecraft/world/entity/ai/Brain;)V c
	initIdleActivity (Lnet/minecraft/world/entity/ai/Brain;)V b
	isAdult ()Z p
	isBaby ()Z w_
	isTargetable (Lnet/minecraft/world/entity/LivingEntity;)Z j
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playAngrySound ()V fw
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	sendDebugPackets ()V R
	setAttackTarget (Lnet/minecraft/world/entity/LivingEntity;)V k
	setBaby (Z)V a
	updateActivity ()V t
net/minecraft/world/entity/monster/Zombie biq
	BREAK_DOOR_CHANCE bX
	DATA_BABY_ID d
	DATA_DROWNED_CONVERSION_ID bW
	DATA_SPECIAL_TYPE_ID bV
	DOOR_BREAKING_PREDICATE bY
	REINFORCEMENT_ATTEMPTS bS
	REINFORCEMENT_RANGE_MAX bT
	REINFORCEMENT_RANGE_MIN bU
	SPEED_MODIFIER_BABY c
	SPEED_MODIFIER_BABY_UUID b
	ZOMBIE_LEADER_CHANCE e
	breakDoorGoal bZ
	canBreakDoors ca
	conversionTime cc
	inWaterTime cb
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addBehaviourGoals ()V n
	aiStep ()V u_
	canBreakDoors ()Z fD
	canHoldItem (Lnet/minecraft/world/item/ItemStack;)Z k
	convertToZombieType (Lnet/minecraft/world/entity/EntityType;)V b
	convertsInWater ()Z fw
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fB
	defineSynchedData ()V a_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	doUnderWaterConversion ()V fy
	dropCustomDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;IZ)V a
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getExperienceReward (Lnet/minecraft/world/entity/player/Player;)I d
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMobType ()Lnet/minecraft/world/entity/MobType; ek
	getMyRidingOffset ()D bk
	getSkull ()Lnet/minecraft/world/item/ItemStack; fv
	getSpawnAsBabyOdds (Ljava/util/Random;)Z a
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getStepSound ()Lnet/minecraft/sounds/SoundEvent; t
	handleAttributes (F)V z
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isBaby ()Z w_
	isSunSensitive ()Z I_
	isUnderWaterConverting ()Z fC
	killed (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	populateDefaultEquipmentSlots (Lnet/minecraft/world/DifficultyInstance;)V a
	randomizeReinforcementsChance ()V fE
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V v
	setBaby (Z)V a
	setCanBreakDoors (Z)V w
	startUnderWaterConversion (I)V a
	supportsBreakDoorGoal ()Z p
	tick ()V k
net/minecraft/world/entity/monster/Zombie$ZombieAttackTurtleEggGoal biq$a
	acceptedDistance ()D h
	playBreakSound (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	playDestroyProgressSound (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/entity/monster/Zombie$ZombieGroupData biq$b
	canSpawnJockey b
	isBaby a
net/minecraft/world/entity/monster/ZombieVillager bir
	DATA_CONVERTING_ID b
	DATA_VILLAGER_DATA c
	MAX_SPECIAL_BLOCKS_COUNT bW
	SPECIAL_BLOCK_RADIUS bX
	VILLAGER_CONVERSION_WAIT_MAX bV
	VILLAGER_CONVERSION_WAIT_MIN d
	conversionStarter bZ
	gossips ca
	tradeOffers cb
	villagerConversionTime bY
	villagerXp cc
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	convertsInWater ()Z fw
	defineSynchedData ()V a_
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	finishConversion (Lnet/minecraft/server/level/ServerLevel;)V c
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getConversionProgress ()I fI
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getSkull ()Lnet/minecraft/world/item/ItemStack; fv
	getStepSound ()Lnet/minecraft/sounds/SoundEvent; t
	getVillagerData ()Lnet/minecraft/world/entity/npc/VillagerData; fG
	getVillagerXp ()I fH
	getVoicePitch ()F ep
	handleEntityEvent (B)V a
	isConverting ()Z fF
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	removeWhenFarAway (D)Z h
	setGossips (Lnet/minecraft/nbt/Tag;)V a
	setTradeOffers (Lnet/minecraft/nbt/CompoundTag;)V c
	setVillagerData (Lnet/minecraft/world/entity/npc/VillagerData;)V a
	setVillagerXp (I)V a
	startConverting (Ljava/util/UUID;I)V a
	tick ()V k
net/minecraft/world/entity/monster/ZombifiedPiglin bis
	ALERT_INTERVAL cb
	ALERT_RANGE_Y ca
	FIRST_ANGER_SOUND_DELAY bV
	PERSISTENT_ANGER_TIME bX
	SPEED_MODIFIER_ATTACKING d
	SPEED_MODIFIER_ATTACKING_UUID c
	persistentAngerTarget bZ
	playFirstAngerSoundIn bW
	remainingPersistentAngerTime bY
	ticksUntilNextAlert cc
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addBehaviourGoals ()V n
	alertOthers ()V fI
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	checkZombifiedPiglinSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z b
	convertsInWater ()Z fw
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fF
	customServerAiStep ()V eX
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getMyRidingOffset ()D bk
	getPersistentAngerTarget ()Ljava/util/UUID; b
	getRemainingPersistentAngerTime ()I a
	getSkull ()Lnet/minecraft/world/item/ItemStack; fv
	isPreventingPlayerRest (Lnet/minecraft/world/entity/player/Player;)Z f
	maybeAlertOthers ()V fH
	maybePlayFirstAngerSound ()V fG
	playAngerSound ()V fJ
	populateDefaultEquipmentSlots (Lnet/minecraft/world/DifficultyInstance;)V a
	randomizeReinforcementsChance ()V fE
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setPersistentAngerTarget (Ljava/util/UUID;)V a
	setRemainingPersistentAngerTime (I)V a
	setTarget (Lnet/minecraft/world/entity/LivingEntity;)V h
	startPersistentAngerTimer ()V c
net/minecraft/world/entity/monster/hoglin/Hoglin bit
	ATTACK_DAMAGE cb
	ATTACK_KNOCKBACK bZ
	BABY_ATTACK_DAMAGE cc
	CONVERSION_TIME cd
	DATA_IMMUNE_TO_ZOMBIFICATION bV
	KNOCKBACK_RESISTANCE ca
	MAX_HEALTH bX
	MEMORY_TYPES bT
	MOVEMENT_SPEED_WHEN_FIGHTING bY
	PROBABILITY_OF_SPAWNING_AS_BABY bW
	SENSOR_TYPES bS
	attackAnimationRemainingTicks ce
	cannotBeHunted cg
	timeInOverworld cf
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	ageBoundaryReached ()V n
	aiStep ()V u_
	blockedByShield (Lnet/minecraft/world/entity/LivingEntity;)V e
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; dp
	canBeHunted ()Z fx
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	canFallInLove ()Z fy
	checkHoglinSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z c
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; p
	customServerAiStep ()V eX
	defineSynchedData ()V a_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	finishConversion (Lnet/minecraft/server/level/ServerLevel;)V c
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getAttackAnimationRemainingTicks ()I fv
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; do
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getExperienceReward (Lnet/minecraft/world/entity/player/Player;)I d
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getPassengersRidingOffset ()D bl
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; cJ
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; aA
	getSwimSplashSound ()Lnet/minecraft/sounds/SoundEvent; aB
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	handleEntityEvent (B)V a
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isAdult ()Z t
	isConverting ()Z fw
	isFood (Lnet/minecraft/world/item/ItemStack;)Z n
	isImmuneToZombification ()Z fD
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	playSound (Lnet/minecraft/sounds/SoundEvent;)V a
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	removeWhenFarAway (D)Z h
	sendDebugPackets ()V R
	setCannotBeHunted (Z)V w
	setImmuneToZombification (Z)V v
	shouldDropExperience ()Z dC
net/minecraft/world/entity/monster/hoglin/HoglinAi biu
	ADULT_FOLLOW_RANGE j
	ATTACK_DURATION d
	ATTACK_INTERVAL g
	BABY_ATTACK_INTERVAL h
	DESIRED_DISTANCE_FROM_PIGLIN_WHEN_IDLING e
	DESIRED_DISTANCE_FROM_PIGLIN_WHEN_RETREATING f
	REPELLENT_DETECTION_RANGE_HORIZONTAL a
	REPELLENT_DETECTION_RANGE_VERTICAL b
	REPELLENT_PACIFY_TIME i
	RETREAT_DURATION c
	SPEED_MULTIPLIER_WHEN_AVOIDING_REPELLENT k
	SPEED_MULTIPLIER_WHEN_FOLLOWING_ADULT o
	SPEED_MULTIPLIER_WHEN_IDLING n
	SPEED_MULTIPLIER_WHEN_MAKING_LOVE m
	SPEED_MULTIPLIER_WHEN_RETREATING l
	broadcastAttackTarget (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/LivingEntity;)V h
	broadcastRetreat (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/LivingEntity;)V c
	createIdleMovementBehaviors ()Lnet/minecraft/world/entity/ai/behavior/RunOne; a
	findNearestValidAttackTarget (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Ljava/util/Optional; d
	getSoundForActivity (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/schedule/Activity;)Lnet/minecraft/sounds/SoundEvent; a
	getSoundForCurrentActivity (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Ljava/util/Optional; b
	getVisibleAdultHoglins (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Ljava/util/List; g
	initCoreActivity (Lnet/minecraft/world/entity/ai/Brain;)V b
	initFightActivity (Lnet/minecraft/world/entity/ai/Brain;)V d
	initIdleActivity (Lnet/minecraft/world/entity/ai/Brain;)V c
	initRetreatActivity (Lnet/minecraft/world/entity/ai/Brain;)V e
	isBreeding (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Z i
	isNearRepellent (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Z h
	isPacified (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Z c
	isPosNearNearestRepellent (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/core/BlockPos;)Z a
	makeBrain (Lnet/minecraft/world/entity/ai/Brain;)Lnet/minecraft/world/entity/ai/Brain; a
	maybeRetaliate (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/LivingEntity;)V f
	onHitTarget (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/LivingEntity;)V a
	piglinsOutnumberHoglins (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Z f
	retreatFromNearestTarget (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/LivingEntity;)V d
	setAttackTarget (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/LivingEntity;)V g
	setAttackTargetIfCloserThanCurrent (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/LivingEntity;)V i
	setAvoidTarget (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/LivingEntity;)V e
	updateActivity (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)V a
	wantsToStopFleeing (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Z e
	wasHurtBy (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/LivingEntity;)V b
net/minecraft/world/entity/monster/hoglin/HoglinBase biv
	ATTACK_ANIMATION_DURATION i_
	getAttackAnimationRemainingTicks ()I fv
	hurtAndThrowTarget (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
	throwTarget (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)V b
net/minecraft/world/entity/monster/piglin/AbstractPiglin biy
	CONVERSION_TIME c
	DATA_IMMUNE_TO_ZOMBIFICATION b
	timeInOverworld d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	applyOpenDoorsAbility ()V fB
	canHunt ()Z n
	customServerAiStep ()V eX
	defineSynchedData ()V a_
	finishConversion (Lnet/minecraft/server/level/ServerLevel;)V c
	getArmPose ()Lnet/minecraft/world/entity/monster/piglin/PiglinArmPose; fw
	getMyRidingOffset ()D bk
	getTarget ()Lnet/minecraft/world/entity/LivingEntity; H
	isAdult ()Z fv
	isConverting ()Z t
	isHoldingMeleeWeapon ()Z fx
	isImmuneToZombification ()Z p
	playAmbientSound ()V K
	playConvertedSound ()V fy
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	sendDebugPackets ()V R
	setImmuneToZombification (Z)V v
net/minecraft/world/entity/monster/piglin/Piglin biz
	ATTACK_DAMAGE ca
	BABY_EYE_HEIGHT_ADJUSTMENT cf
	CHANCE_OF_WEARING_EACH_ARMOUR_ITEM cc
	CROSSBOW_POWER cb
	DATA_BABY_ID bT
	DATA_IS_CHARGING_CROSSBOW bU
	DATA_IS_DANCING bV
	MAX_HEALTH bY
	MAX_PASSENGERS_ON_ONE_HOGLIN cd
	MEMORY_TYPES bS
	MOVEMENT_SPEED_WHEN_FIGHTING bZ
	PROBABILITY_OF_SPAWNING_AS_BABY ce
	PROBABILITY_OF_SPAWNING_WITH_CROSSBOW_INSTEAD_OF_SWORD cg
	SENSOR_TYPES e
	SPEED_MODIFIER_BABY bX
	SPEED_MODIFIER_BABY_UUID bW
	cannotHunt ci
	inventory ch
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addToInventory (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; m
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; dp
	canAddToInventory (Lnet/minecraft/world/item/ItemStack;)Z n
	canFireProjectileWeapon (Lnet/minecraft/world/item/ProjectileWeaponItem;)Z a
	canHunt ()Z n
	canReplaceCurrentItem (Lnet/minecraft/world/item/ItemStack;)Z q
	canReplaceCurrentItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	checkPiglinSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fB
	createSpawnWeapon ()Lnet/minecraft/world/item/ItemStack; fD
	customServerAiStep ()V eX
	defineSynchedData ()V a_
	dropCustomDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;IZ)V a
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	finishConversion (Lnet/minecraft/server/level/ServerLevel;)V c
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getArmPose ()Lnet/minecraft/world/entity/monster/piglin/PiglinArmPose; fw
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; do
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getExperienceReward (Lnet/minecraft/world/entity/player/Player;)I d
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getInventory ()Lnet/minecraft/world/Container; fF
	getPassengersRidingOffset ()D bl
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getTopPassenger (Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/world/entity/Entity; b
	holdInMainHand (Lnet/minecraft/world/item/ItemStack;)V o
	holdInOffHand (Lnet/minecraft/world/item/ItemStack;)V p
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isBaby ()Z w_
	isChargingCrossbow ()Z fE
	isDancing ()Z fC
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	maybeWearArmor (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V c
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	onCrossbowAttackPerformed ()V a
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
	pickUpItem (Lnet/minecraft/world/entity/item/ItemEntity;)V b
	playConvertedSound ()V fy
	playSound (Lnet/minecraft/sounds/SoundEvent;)V a
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	populateDefaultEquipmentSlots (Lnet/minecraft/world/DifficultyInstance;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	removeWhenFarAway (D)Z h
	setBaby (Z)V a
	setCannotHunt (Z)V x
	setChargingCrossbow (Z)V b
	setDancing (Z)V w
	shootCrossbowProjectile (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/projectile/Projectile;F)V a
	shouldDespawnInPeaceful ()Z Q
	startRiding (Lnet/minecraft/world/entity/Entity;Z)Z a
	wantsToPickUp (Lnet/minecraft/world/item/ItemStack;)Z l
net/minecraft/world/entity/monster/piglin/PiglinAi bja
	ADMIRE_DURATION f
	ANGER_DURATION e
	AVOID_ZOMBIFIED_DURATION A
	BABY_AVOID_NEMESIS_DURATION B
	BABY_FLEE_DURATION_AFTER_GETTING_HIT l
	BARTERING_ITEM c
	CELEBRATION_TIME j
	DESIRED_DISTANCE_FROM_ENTITY_WHEN_AVOIDING t
	DESIRED_DISTANCE_FROM_ZOMBIFIED z
	EAT_COOLDOWN s
	HIT_BY_PLAYER_MEMORY_TIMEOUT m
	HOW_LONG_TIME_TO_DISABLE_ADMIRE_WALKING_IF_CANT_REACH_ITEM i
	INTERACTION_RANGE w
	MAX_DISTANCE_TO_WALK_TO_ITEM g
	MAX_LOOK_DIST u
	MAX_LOOK_DIST_FOR_PLAYER_HOLDING_LOVED_ITEM v
	MAX_TIME_TO_WALK_TO_ITEM h
	MAX_WALK_DISTANCE_TO_START_RIDING n
	MELEE_ATTACK_COOLDOWN r
	MIN_DESIRED_DIST_FROM_TARGET_WHEN_HOLDING_CROSSBOW x
	PLAYER_ANGER_RANGE d
	PROBABILITY_OF_CELEBRATION_DANCE C
	REPELLENT_DETECTION_RANGE_HORIZONTAL a
	REPELLENT_DETECTION_RANGE_VERTICAL b
	RETREAT_DURATION q
	RIDE_DURATION p
	RIDE_START_INTERVAL o
	SPEED_MULTIPLIER_WHEN_AVOIDING D
	SPEED_MULTIPLIER_WHEN_DANCING I
	SPEED_MULTIPLIER_WHEN_GOING_TO_CELEBRATE_LOCATION H
	SPEED_MULTIPLIER_WHEN_GOING_TO_WANTED_ITEM G
	SPEED_MULTIPLIER_WHEN_IDLING J
	SPEED_MULTIPLIER_WHEN_MOUNTING F
	SPEED_MULTIPLIER_WHEN_RETREATING E
	SPEED_WHEN_STRAFING_BACK_FROM_TARGET y
	TIME_BETWEEN_HUNTS k
	admireGoldItem (Lnet/minecraft/world/entity/LivingEntity;)V d
	angerNearbyPiglins (Lnet/minecraft/world/entity/player/Player;Z)V a
	avoidRepellent ()Lnet/minecraft/world/entity/ai/behavior/SetWalkTargetAwayFrom; c
	avoidZombified ()Lnet/minecraft/world/entity/ai/behavior/CopyMemoryWithExpiry; e
	babyAvoidNemesis ()Lnet/minecraft/world/entity/ai/behavior/CopyMemoryWithExpiry; d
	babySometimesRideBabyHoglin ()Lnet/minecraft/world/entity/ai/behavior/RunSometimes; f
	broadcastAngerTarget (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;Lnet/minecraft/world/entity/LivingEntity;)V b
	broadcastDontKillAnyMoreHoglinsForAWhile (Lnet/minecraft/world/entity/monster/piglin/Piglin;)V f
	broadcastRetreat (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/LivingEntity;)V c
	broadcastUniversalAnger (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;)V a
	canAdmire (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/item/ItemStack;)Z b
	cancelAdmiring (Lnet/minecraft/world/entity/monster/piglin/Piglin;)V c
	createIdleLookBehaviors ()Lnet/minecraft/world/entity/ai/behavior/RunOne; a
	createIdleMovementBehaviors ()Lnet/minecraft/world/entity/ai/behavior/RunOne; b
	doesntSeeAnyPlayerHoldingLovedItem (Lnet/minecraft/world/entity/LivingEntity;)Z f
	dontKillAnyMoreHoglinsForAWhile (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;)V c
	eat (Lnet/minecraft/world/entity/monster/piglin/Piglin;)V s
	findNearestValidAttackTarget (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Ljava/util/Optional; k
	getAdultPiglins (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;)Ljava/util/List; e
	getAngerTarget (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;)Ljava/util/Optional; f
	getAvoidTarget (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Ljava/util/Optional; g
	getBarterResponseItems (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Ljava/util/List; i
	getNearestVisibleTargetablePlayer (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;)Ljava/util/Optional; b
	getRandomNearbyPos (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Lnet/minecraft/world/phys/Vec3; t
	getSoundForActivity (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/schedule/Activity;)Lnet/minecraft/sounds/SoundEvent; a
	getSoundForCurrentActivity (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Ljava/util/Optional; d
	getVisibleAdultPiglins (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Ljava/util/List; m
	hasAnyoneNearbyHuntedRecently (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z e
	hasCrossbow (Lnet/minecraft/world/entity/LivingEntity;)Z c
	hasEatenRecently (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z u
	hoglinsOutnumberPiglins (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z q
	holdInOffhand (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/item/ItemStack;)V c
	initAdmireItemActivity (Lnet/minecraft/world/entity/ai/Brain;)V d
	initCelebrateActivity (Lnet/minecraft/world/entity/ai/Brain;)V c
	initCoreActivity (Lnet/minecraft/world/entity/ai/Brain;)V a
	initFightActivity (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/ai/Brain;)V b
	initIdleActivity (Lnet/minecraft/world/entity/ai/Brain;)V b
	initMemories (Lnet/minecraft/world/entity/monster/piglin/Piglin;)V a
	initRetreatActivity (Lnet/minecraft/world/entity/ai/Brain;)V e
	initRideHoglinActivity (Lnet/minecraft/world/entity/ai/Brain;)V f
	isAdmiringDisabled (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z x
	isAdmiringItem (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z v
	isBabyRidingBaby (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z h
	isBarterCurrency (Lnet/minecraft/world/item/ItemStack;)Z b
	isFood (Lnet/minecraft/world/item/ItemStack;)Z c
	isHoldingItemInOffHand (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z y
	isIdle (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;)Z d
	isLovedItem (Lnet/minecraft/world/item/ItemStack;)Z a
	isNearAvoidTarget (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z l
	isNearRepellent (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z w
	isNearZombified (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z j
	isNearestValidAttackTarget (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/LivingEntity;)Z b
	isNotHoldingLovedItemInOffHand (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z z
	isPlayerHoldingLovedItem (Lnet/minecraft/world/entity/LivingEntity;)Z b
	isWearingGold (Lnet/minecraft/world/entity/LivingEntity;)Z a
	isZombified (Lnet/minecraft/world/entity/EntityType;)Z a
	makeBrain (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/ai/Brain;)Lnet/minecraft/world/entity/ai/Brain; a
	maybeRetaliate (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;Lnet/minecraft/world/entity/LivingEntity;)V a
	mobInteract (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	pickUpItem (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/item/ItemEntity;)V a
	piglinsEqualOrOutnumberHoglins (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z p
	putInInventory (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/item/ItemStack;)V d
	removeOneItemFromItemEntity (Lnet/minecraft/world/entity/item/ItemEntity;)Lnet/minecraft/world/item/ItemStack; a
	retreatFromNearestTarget (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/LivingEntity;)V d
	seesPlayerHoldingLovedItem (Lnet/minecraft/world/entity/LivingEntity;)Z e
	seesPlayerHoldingWantedItem (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z r
	setAngerTarget (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;Lnet/minecraft/world/entity/LivingEntity;)V c
	setAngerTargetIfCloserThanCurrent (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;Lnet/minecraft/world/entity/LivingEntity;)V e
	setAngerTargetToNearestTargetablePlayerIfFound (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;Lnet/minecraft/world/entity/LivingEntity;)V d
	setAvoidTargetAndDontHuntForAWhile (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/LivingEntity;)V e
	stopHoldingOffHandItem (Lnet/minecraft/world/entity/monster/piglin/Piglin;Z)V a
	stopWalking (Lnet/minecraft/world/entity/monster/piglin/Piglin;)V n
	throwItems (Lnet/minecraft/world/entity/monster/piglin/Piglin;Ljava/util/List;)V a
	throwItemsTowardPlayer (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/player/Player;Ljava/util/List;)V a
	throwItemsTowardPos (Lnet/minecraft/world/entity/monster/piglin/Piglin;Ljava/util/List;Lnet/minecraft/world/phys/Vec3;)V a
	throwItemsTowardRandomPos (Lnet/minecraft/world/entity/monster/piglin/Piglin;Ljava/util/List;)V b
	updateActivity (Lnet/minecraft/world/entity/monster/piglin/Piglin;)V b
	wantsToDance (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
	wantsToPickup (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/item/ItemStack;)Z a
	wantsToStopFleeing (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z o
	wantsToStopRiding (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/Entity;)Z a
	wasHurtBy (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/LivingEntity;)V a
	wasHurtRecently (Lnet/minecraft/world/entity/LivingEntity;)Z g
net/minecraft/world/entity/monster/piglin/PiglinArmPose bjb
	$VALUES g
	ADMIRING_ITEM d
	ATTACKING_WITH_MELEE_WEAPON a
	CROSSBOW_CHARGE c
	CROSSBOW_HOLD b
	DANCING e
	DEFAULT f
	$values ()[Lnet/minecraft/world/entity/monster/piglin/PiglinArmPose; a
net/minecraft/world/entity/monster/piglin/PiglinBrute bjc
	ATTACK_DAMAGE bV
	MAX_HEALTH bT
	MEMORY_TYPES bS
	MOVEMENT_SPEED_WHEN_FIGHTING bU
	SENSOR_TYPES e
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; dp
	canHunt ()Z n
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fB
	customServerAiStep ()V eX
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getArmPose ()Lnet/minecraft/world/entity/monster/piglin/PiglinArmPose; fw
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; do
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	playAngrySound ()V fC
	playConvertedSound ()V fy
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	populateDefaultEquipmentSlots (Lnet/minecraft/world/DifficultyInstance;)V a
	wantsToPickUp (Lnet/minecraft/world/item/ItemStack;)Z l
net/minecraft/world/entity/monster/piglin/PiglinBruteAi bjd
	ACTIVITY_SOUND_LIKELIHOOD_PER_TICK c
	ANGER_DURATION a
	HOME_CLOSE_ENOUGH_DISTANCE h
	HOME_STROLL_AROUND_DISTANCE j
	HOME_TOO_FAR_DISTANCE i
	INTERACTION_RANGE e
	MAX_LOOK_DIST d
	MELEE_ATTACK_COOLDOWN b
	SPEED_MULTIPLIER_WHEN_IDLING g
	TARGETING_RANGE f
	createIdleLookBehaviors ()Lnet/minecraft/world/entity/ai/behavior/RunOne; a
	createIdleMovementBehaviors ()Lnet/minecraft/world/entity/ai/behavior/RunOne; b
	findNearestValidAttackTarget (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;)Ljava/util/Optional; a
	getTargetIfWithinRange (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Ljava/util/Optional; a
	initCoreActivity (Lnet/minecraft/world/entity/monster/piglin/PiglinBrute;Lnet/minecraft/world/entity/ai/Brain;)V b
	initFightActivity (Lnet/minecraft/world/entity/monster/piglin/PiglinBrute;Lnet/minecraft/world/entity/ai/Brain;)V d
	initIdleActivity (Lnet/minecraft/world/entity/monster/piglin/PiglinBrute;Lnet/minecraft/world/entity/ai/Brain;)V c
	initMemories (Lnet/minecraft/world/entity/monster/piglin/PiglinBrute;)V a
	isNearestValidAttackTarget (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;Lnet/minecraft/world/entity/LivingEntity;)Z a
	makeBrain (Lnet/minecraft/world/entity/monster/piglin/PiglinBrute;Lnet/minecraft/world/entity/ai/Brain;)Lnet/minecraft/world/entity/ai/Brain; a
	maybePlayActivitySound (Lnet/minecraft/world/entity/monster/piglin/PiglinBrute;)V c
	playActivitySound (Lnet/minecraft/world/entity/monster/piglin/PiglinBrute;)V d
	setAngerTarget (Lnet/minecraft/world/entity/monster/piglin/PiglinBrute;Lnet/minecraft/world/entity/LivingEntity;)V b
	updateActivity (Lnet/minecraft/world/entity/monster/piglin/PiglinBrute;)V b
	wasHurtBy (Lnet/minecraft/world/entity/monster/piglin/PiglinBrute;Lnet/minecraft/world/entity/LivingEntity;)V a
net/minecraft/world/entity/monster/piglin/RememberIfHoglinWasKilled bje
	isAttackTargetDeadHoglin (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/piglin/Piglin;J)V a
net/minecraft/world/entity/monster/piglin/StartAdmiringItemIfSeen bjf
	admireDuration a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/piglin/Piglin;J)V a
net/minecraft/world/entity/monster/piglin/StartHuntingHoglin bjg
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/piglin/Piglin;J)V a
net/minecraft/world/entity/monster/piglin/StopAdmiringIfItemTooFarAway bjh
	maxDistanceToItem a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/piglin/Piglin;J)V a
net/minecraft/world/entity/monster/piglin/StopAdmiringIfTiredOfTryingToReachItem bji
	disableTime c
	maxTimeToReachItem a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/piglin/Piglin;J)V a
net/minecraft/world/entity/monster/piglin/StopHoldingItemIfNoLongerAdmiring bjj
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/piglin/Piglin;J)V a
net/minecraft/world/entity/npc/AbstractVillager bjl
	DATA_UNHAPPY_COUNTER bU
	VILLAGER_INVENTORY_SIZE bV
	VILLAGER_SLOT_OFFSET bS
	inventory bX
	offers bT
	tradingPlayer bW
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addOffersFromItemListings (Lnet/minecraft/world/item/trading/MerchantOffers;[Lnet/minecraft/world/entity/npc/VillagerTrades$ItemListing;I)V a
	addParticlesAroundSelf (Lnet/minecraft/core/particles/ParticleOptions;)V a
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	changeDimension (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/entity/Entity; b
	defineSynchedData ()V a_
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getInventory ()Lnet/minecraft/world/Container; fF
	getInventory ()Lnet/minecraft/world/SimpleContainer; fC
	getLevel ()Lnet/minecraft/world/level/Level; fD
	getNotifyTradeSound ()Lnet/minecraft/sounds/SoundEvent; fz
	getOffers ()Lnet/minecraft/world/item/trading/MerchantOffers; fx
	getRopeHoldPosition (F)Lnet/minecraft/world/phys/Vec3; n
	getSlot (I)Lnet/minecraft/world/entity/SlotAccess; k
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getTradeUpdatedSound (Z)Lnet/minecraft/sounds/SoundEvent; v
	getTradingPlayer ()Lnet/minecraft/world/entity/player/Player; fv
	getUnhappyCounter ()I p
	getVillagerXp ()I t
	isTrading ()Z fw
	notifyTrade (Lnet/minecraft/world/item/trading/MerchantOffer;)V a
	notifyTradeUpdated (Lnet/minecraft/world/item/ItemStack;)V m
	overrideOffers (Lnet/minecraft/world/item/trading/MerchantOffers;)V a
	overrideXp (I)V u
	playCelebrateSound ()V fA
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	rewardTradeXp (Lnet/minecraft/world/item/trading/MerchantOffer;)V b
	setTradingPlayer (Lnet/minecraft/world/entity/player/Player;)V f
	setUnhappyCounter (I)V t
	showProgressBar ()Z fy
	stopTrading ()V fB
	updateTrades ()V fE
net/minecraft/world/entity/npc/CatSpawner bjm
	TICK_DELAY a
	nextTick b
	spawnCat (Lnet/minecraft/core/BlockPos;Lnet/minecraft/server/level/ServerLevel;)I a
	spawnInHut (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)I b
	spawnInVillage (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)I a
	tick (Lnet/minecraft/server/level/ServerLevel;ZZ)I a
net/minecraft/world/entity/npc/ClientSideMerchant bjn
	offers b
	source a
	xp c
	getLevel ()Lnet/minecraft/world/level/Level; fD
	getNotifyTradeSound ()Lnet/minecraft/sounds/SoundEvent; fz
	getOffers ()Lnet/minecraft/world/item/trading/MerchantOffers; fx
	getTradingPlayer ()Lnet/minecraft/world/entity/player/Player; fv
	getVillagerXp ()I t
	notifyTrade (Lnet/minecraft/world/item/trading/MerchantOffer;)V a
	notifyTradeUpdated (Lnet/minecraft/world/item/ItemStack;)V m
	overrideOffers (Lnet/minecraft/world/item/trading/MerchantOffers;)V a
	overrideXp (I)V u
	setTradingPlayer (Lnet/minecraft/world/entity/player/Player;)V f
	showProgressBar ()Z fy
net/minecraft/world/entity/npc/InventoryCarrier bjo
	getInventory ()Lnet/minecraft/world/Container; fF
net/minecraft/world/entity/npc/Npc bjp
net/minecraft/world/entity/npc/Villager bjq
	BREEDING_FOOD_THRESHOLD bU
	DATA_VILLAGER_DATA bY
	FOOD_POINTS bV
	GOSSIP_COOLDOWN cc
	GOSSIP_DECAY_INTERVAL cd
	HOW_FAR_AWAY_TO_TALK_TO_OTHER_VILLAGERS_ABOUT_GOLEMS cf
	HOW_MANY_VILLAGERS_NEED_TO_AGREE_TO_SPAWN_A_GOLEM cg
	MAX_GOSSIP_TOPICS cb
	MEMORY_TYPES cv
	POI_MEMORIES bX
	REPUTATION_CHANGE_PER_EVENT ce
	SENSOR_TYPES cw
	SPEED_MODIFIER bW
	TIME_SINCE_SLEEPING_FOR_GOLEM_SPAWNING ch
	TRADES_PER_LEVEL bZ
	WANTED_ITEMS ca
	assignProfessionWhenSpawned cu
	chasing cl
	foodLevel cm
	gossips cn
	increaseProfessionLevelOnUpdate cj
	lastGossipDecayTime cp
	lastGossipTime co
	lastRestockCheckDayTime ct
	lastRestockGameTime cr
	lastTradedPlayer ck
	numberOfRestocksToday cs
	updateMerchantTimer ci
	villagerXp cq
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	ageBoundaryReached ()V n
	allowedToRestock ()Z fW
	assignProfessionWhenSpawned ()Z fI
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; dp
	canBreed ()Z g
	canRestock ()Z fJ
	catchUpDemand ()V fX
	countFoodPointsInInventory ()I ge
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fH
	customServerAiStep ()V eX
	defineSynchedData ()V a_
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	digestFood (I)V w
	eatAndDigestFood ()V fO
	eatUntilFull ()V gb
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	findSpawnPositionForGolemInColumn (Lnet/minecraft/core/BlockPos;DD)Lnet/minecraft/core/BlockPos; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; do
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/npc/Villager; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getGossips ()Lnet/minecraft/world/entity/ai/gossip/GossipContainer; fS
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getPlayerReputation (Lnet/minecraft/world/entity/player/Player;)I g
	getTypeName ()Lnet/minecraft/network/chat/Component; bY
	getVillagerData ()Lnet/minecraft/world/entity/npc/VillagerData; fG
	getVillagerXp ()I t
	golemSpawnConditionsMet (J)Z b
	gossip (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
	handleEntityEvent (B)V a
	hasExcessFood ()Z fP
	hasFarmSeeds ()Z fR
	hungry ()Z ga
	increaseMerchantCareer ()V gd
	isChasing ()Z fN
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	maybeDecayGossip ()V gf
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	needsToRestock ()Z fV
	onReputationEventFrom (Lnet/minecraft/world/entity/ai/village/ReputationEventType;Lnet/minecraft/world/entity/Entity;)V a
	pickUpItem (Lnet/minecraft/world/entity/item/ItemEntity;)V b
	playWorkSound ()V fM
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	refreshBrain (Lnet/minecraft/server/level/ServerLevel;)V c
	registerBrainGoals (Lnet/minecraft/world/entity/ai/Brain;)V a
	releaseAllPois ()V fZ
	releasePoi (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)V a
	removeWhenFarAway (D)Z h
	resetNumberOfRestocks ()V gg
	resetSpecialPrices ()V fU
	restock ()V fK
	rewardTradeXp (Lnet/minecraft/world/item/trading/MerchantOffer;)V b
	sendDebugPackets ()V R
	setChasing (Z)V w
	setGossips (Lnet/minecraft/nbt/Tag;)V a
	setLastHurtByMob (Lnet/minecraft/world/entity/LivingEntity;)V a
	setOffers (Lnet/minecraft/world/item/trading/MerchantOffers;)V b
	setTradingPlayer (Lnet/minecraft/world/entity/player/Player;)V f
	setUnhappy ()V fT
	setVillagerData (Lnet/minecraft/world/entity/npc/VillagerData;)V a
	setVillagerXp (I)V v
	shouldIncreaseLevel ()Z gc
	shouldRestock ()Z fL
	spawnGolemIfNeeded (Lnet/minecraft/server/level/ServerLevel;JI)V a
	startSleeping (Lnet/minecraft/core/BlockPos;)V b
	startTrading (Lnet/minecraft/world/entity/player/Player;)V h
	stopSleeping ()V eV
	stopTrading ()V fB
	tellWitnessesThatIWasMurdered (Lnet/minecraft/world/entity/Entity;)V a
	thunderHit (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LightningBolt;)V a
	tick ()V k
	trySpawnGolem (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/entity/animal/IronGolem; d
	updateDemand ()V fY
	updateSpecialPrices (Lnet/minecraft/world/entity/player/Player;)V i
	updateTrades ()V fE
	wantsMoreFood ()Z fQ
	wantsToPickUp (Lnet/minecraft/world/item/ItemStack;)Z l
	wantsToSpawnGolem (J)Z a
net/minecraft/world/entity/npc/VillagerData bjr
	CODEC c
	MAX_VILLAGER_LEVEL b
	MIN_VILLAGER_LEVEL a
	NEXT_LEVEL_XP_THRESHOLDS d
	level g
	profession f
	type e
	canLevelUp (I)Z d
	getLevel ()I c
	getMaxXpPerLevel (I)I c
	getMinXpPerLevel (I)I b
	getProfession ()Lnet/minecraft/world/entity/npc/VillagerProfession; b
	getType ()Lnet/minecraft/world/entity/npc/VillagerType; a
	setLevel (I)Lnet/minecraft/world/entity/npc/VillagerData; a
	setProfession (Lnet/minecraft/world/entity/npc/VillagerProfession;)Lnet/minecraft/world/entity/npc/VillagerData; a
	setType (Lnet/minecraft/world/entity/npc/VillagerType;)Lnet/minecraft/world/entity/npc/VillagerData; a
net/minecraft/world/entity/npc/VillagerDataHolder bjs
	getVillagerData ()Lnet/minecraft/world/entity/npc/VillagerData; fG
	setVillagerData (Lnet/minecraft/world/entity/npc/VillagerData;)V a
net/minecraft/world/entity/npc/VillagerProfession bjt
	ARMORER b
	BUTCHER c
	CARTOGRAPHER d
	CLERIC e
	FARMER f
	FISHERMAN g
	FLETCHER h
	LEATHERWORKER i
	LIBRARIAN j
	MASON k
	NITWIT l
	NONE a
	SHEPHERD m
	TOOLSMITH n
	WEAPONSMITH o
	jobPoiType q
	name p
	requestedItems r
	secondaryPoi s
	workSound t
	getJobPoiType ()Lnet/minecraft/world/entity/ai/village/poi/PoiType; b
	getName ()Ljava/lang/String; a
	getRequestedItems ()Lcom/google/common/collect/ImmutableSet; c
	getSecondaryPoi ()Lcom/google/common/collect/ImmutableSet; d
	getWorkSound ()Lnet/minecraft/sounds/SoundEvent; e
	register (Ljava/lang/String;Lnet/minecraft/world/entity/ai/village/poi/PoiType;Lcom/google/common/collect/ImmutableSet;Lcom/google/common/collect/ImmutableSet;Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/world/entity/npc/VillagerProfession; a
	register (Ljava/lang/String;Lnet/minecraft/world/entity/ai/village/poi/PoiType;Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/world/entity/npc/VillagerProfession; a
net/minecraft/world/entity/npc/VillagerTrades bju
	COMMON_ITEMS_SUPPLY d
	DEFAULT_SUPPLY c
	HIGH_TIER_PRICE_MULTIPLIER p
	LOW_TIER_PRICE_MULTIPLIER o
	TRADES a
	UNCOMMON_ITEMS_SUPPLY e
	WANDERING_TRADER_TRADES b
	XP_LEVEL_1_BUY g
	XP_LEVEL_1_SELL f
	XP_LEVEL_2_BUY i
	XP_LEVEL_2_SELL h
	XP_LEVEL_3_BUY k
	XP_LEVEL_3_SELL j
	XP_LEVEL_4_BUY m
	XP_LEVEL_4_SELL l
	XP_LEVEL_5_TRADE n
	toIntMap (Lcom/google/common/collect/ImmutableMap;)Lit/unimi/dsi/fastutil/ints/Int2ObjectMap; a
net/minecraft/world/entity/npc/VillagerTrades$DyedArmorForEmeralds bju$a
	item a
	maxUses c
	value b
	villagerXp d
	getOffer (Lnet/minecraft/world/entity/Entity;Ljava/util/Random;)Lnet/minecraft/world/item/trading/MerchantOffer; a
	getRandomDye (Ljava/util/Random;)Lnet/minecraft/world/item/DyeItem; a
net/minecraft/world/entity/npc/VillagerTrades$EmeraldForItems bju$b
	cost b
	item a
	maxUses c
	priceMultiplier e
	villagerXp d
	getOffer (Lnet/minecraft/world/entity/Entity;Ljava/util/Random;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$EmeraldsForVillagerTypeItem bju$c
	cost b
	maxUses c
	trades a
	villagerXp d
	getOffer (Lnet/minecraft/world/entity/Entity;Ljava/util/Random;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$EnchantBookForEmeralds bju$d
	villagerXp a
	getOffer (Lnet/minecraft/world/entity/Entity;Ljava/util/Random;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$EnchantedItemForEmeralds bju$e
	baseEmeraldCost b
	itemStack a
	maxUses c
	priceMultiplier e
	villagerXp d
	getOffer (Lnet/minecraft/world/entity/Entity;Ljava/util/Random;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$ItemListing bju$f
	getOffer (Lnet/minecraft/world/entity/Entity;Ljava/util/Random;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$ItemsAndEmeraldsToItems bju$g
	emeraldCost c
	fromCount b
	fromItem a
	maxUses f
	priceMultiplier h
	toCount e
	toItem d
	villagerXp g
	getOffer (Lnet/minecraft/world/entity/Entity;Ljava/util/Random;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$ItemsForEmeralds bju$h
	emeraldCost b
	itemStack a
	maxUses d
	numberOfItems c
	priceMultiplier f
	villagerXp e
	getOffer (Lnet/minecraft/world/entity/Entity;Ljava/util/Random;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$SuspisciousStewForEmerald bju$i
	duration b
	effect a
	priceMultiplier d
	xp c
	getOffer (Lnet/minecraft/world/entity/Entity;Ljava/util/Random;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$TippedArrowForItemsAndEmeralds bju$j
	emeraldCost c
	fromCount g
	fromItem f
	maxUses d
	priceMultiplier h
	toCount b
	toItem a
	villagerXp e
	getOffer (Lnet/minecraft/world/entity/Entity;Ljava/util/Random;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$TreasureMapForEmeralds bju$k
	destination b
	destinationType c
	emeraldCost a
	maxUses d
	villagerXp e
	getOffer (Lnet/minecraft/world/entity/Entity;Ljava/util/Random;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerType bjv
	BY_BIOME i
	DESERT a
	JUNGLE b
	PLAINS c
	SAVANNA d
	SNOW e
	SWAMP f
	TAIGA g
	name h
	byBiome (Ljava/util/Optional;)Lnet/minecraft/world/entity/npc/VillagerType; a
	register (Ljava/lang/String;)Lnet/minecraft/world/entity/npc/VillagerType; a
net/minecraft/world/entity/npc/WanderingTrader bjw
	NUMBER_OF_TRADE_OFFERS bU
	despawnDelay bW
	wanderTarget bV
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V u_
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; q
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getDespawnDelay ()I fG
	getDrinkingSound (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/sounds/SoundEvent; d
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getNotifyTradeSound ()Lnet/minecraft/sounds/SoundEvent; fz
	getTradeUpdatedSound (Z)Lnet/minecraft/sounds/SoundEvent; v
	getWanderTarget ()Lnet/minecraft/core/BlockPos; fI
	maybeDespawn ()V fH
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V v
	removeWhenFarAway (D)Z h
	rewardTradeXp (Lnet/minecraft/world/item/trading/MerchantOffer;)V b
	setDespawnDelay (I)V v
	setWanderTarget (Lnet/minecraft/core/BlockPos;)V g
	showProgressBar ()Z fy
	updateTrades ()V fE
net/minecraft/world/entity/npc/WanderingTrader$WanderToPositionGoal bjw$a
	speedModifier c
	stopDistance b
	trader a
	canUse ()Z a
	isTooFarAway (Lnet/minecraft/core/BlockPos;D)Z a
	stop ()V d
	tick ()V e
net/minecraft/world/entity/npc/WanderingTraderSpawner bjx
	DEFAULT_SPAWN_DELAY a
	DEFAULT_TICK_DELAY b
	MAX_SPAWN_CHANCE d
	MIN_SPAWN_CHANCE c
	NUMBER_OF_SPAWN_ATTEMPTS g
	SPAWN_CHANCE_INCREASE e
	SPAWN_ONE_IN_X_CHANCE f
	random h
	serverLevelData i
	spawnChance l
	spawnDelay k
	tickDelay j
	findSpawnPositionNear (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;I)Lnet/minecraft/core/BlockPos; a
	hasEnoughSpace (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	spawn (Lnet/minecraft/server/level/ServerLevel;)Z a
	tick (Lnet/minecraft/server/level/ServerLevel;ZZ)I a
	tryToSpawnLlamaFor (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/WanderingTrader;I)V a
net/minecraft/world/entity/player/Abilities bka
	flying b
	flyingSpeed f
	instabuild d
	invulnerable a
	mayBuild e
	mayfly c
	walkingSpeed g
	addSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	getFlyingSpeed ()F a
	getWalkingSpeed ()F b
	loadSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	setFlyingSpeed (F)V a
	setWalkingSpeed (F)V b
net/minecraft/world/entity/player/ChatVisiblity bkb
	$VALUES g
	BY_ID d
	FULL a
	HIDDEN c
	SYSTEM b
	id e
	key f
	$values ()[Lnet/minecraft/world/entity/player/ChatVisiblity; c
	byId (I)Lnet/minecraft/world/entity/player/ChatVisiblity; a
	getId ()I a
	getKey ()Ljava/lang/String; b
net/minecraft/world/entity/player/Inventory bkc
	ALL_ARMOR_SLOTS f
	HELMET_SLOT_ONLY g
	INVENTORY_SIZE c
	NOT_FOUND_INDEX e
	POP_TIME_DURATION b
	SELECTION_SIZE m
	SLOT_OFFHAND d
	armor i
	compartments n
	items h
	offhand j
	player l
	selected k
	timesChanged o
	add (ILnet/minecraft/world/item/ItemStack;)Z c
	add (Lnet/minecraft/world/item/ItemStack;)Z e
	addResource (ILnet/minecraft/world/item/ItemStack;)I d
	addResource (Lnet/minecraft/world/item/ItemStack;)I i
	clearContent ()V a
	clearOrCountMatchingItems (Ljava/util/function/Predicate;ILnet/minecraft/world/Container;)I a
	contains (Lnet/minecraft/tags/Tag;)Z a
	contains (Lnet/minecraft/world/item/ItemStack;)Z h
	dropAll ()V k
	fillStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
	findSlotMatchingItem (Lnet/minecraft/world/item/ItemStack;)I b
	findSlotMatchingUnusedItem (Lnet/minecraft/world/item/ItemStack;)I c
	getArmor (I)Lnet/minecraft/world/item/ItemStack; e
	getContainerSize ()I b
	getDestroySpeed (Lnet/minecraft/world/level/block/state/BlockState;)F a
	getFreeSlot ()I h
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getName ()Lnet/minecraft/network/chat/Component; S
	getSelected ()Lnet/minecraft/world/item/ItemStack; f
	getSelectionSize ()I g
	getSlotWithRemainingSpace (Lnet/minecraft/world/item/ItemStack;)I d
	getSuitableHotbarSlot ()I i
	getTimesChanged ()I l
	hasRemainingSpaceForItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	hurtArmor (Lnet/minecraft/world/damagesource/DamageSource;F[I)V a
	isEmpty ()Z c
	isHotbarSlot (I)Z d
	load (Lnet/minecraft/nbt/ListTag;)V b
	pickSlot (I)V c
	placeItemBackInInventory (Lnet/minecraft/world/item/ItemStack;)V f
	placeItemBackInInventory (Lnet/minecraft/world/item/ItemStack;Z)V a
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItem (Lnet/minecraft/world/item/ItemStack;)V g
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	replaceWith (Lnet/minecraft/world/entity/player/Inventory;)V a
	save (Lnet/minecraft/nbt/ListTag;)Lnet/minecraft/nbt/ListTag; a
	setChanged ()V e
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	setPickedItem (Lnet/minecraft/world/item/ItemStack;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	swapPaint (D)V a
	tick ()V j
net/minecraft/world/entity/player/Player bkd
	CROUCH_BB_HEIGHT bK
	DATA_PLAYER_ABSORPTION_ID d
	DATA_PLAYER_MAIN_HAND bQ
	DATA_PLAYER_MODE_CUSTOMISATION bP
	DATA_SCORE_ID e
	DATA_SHOULDER_LEFT bR
	DATA_SHOULDER_RIGHT bS
	DEFAULT_EYE_HEIGHT bN
	ENDER_SLOT_OFFSET bJ
	FLY_ACHIEVEMENT_SPEED c
	MAX_HEALTH bG
	MAX_NAME_LENGTH bF
	POSES b
	SLEEP_DURATION bH
	STANDING_DIMENSIONS bO
	SWIMMING_BB_HEIGHT bM
	SWIMMING_BB_WIDTH bL
	UUID_PREFIX_OFFLINE_PLAYER bE
	WAKE_UP_DURATION bI
	abilities cq
	bob bZ
	containerMenu bV
	cooldowns cv
	defaultFlySpeed cm
	enchantmentSeed cl
	enderChestInventory bT
	experienceLevel ci
	experienceProgress ck
	fishing cn
	foodData bW
	gameProfile cs
	inventory co
	inventoryMenu bU
	jumpTriggerTime bX
	lastItemInMainHand cu
	lastLevelUpTime cr
	oBob bY
	reducedDebugInfo ct
	sleepCounter cp
	takeXpDelay ca
	timeEntitySatOnShoulder f
	totalExperience cj
	wasUnderwater ch
	xCloak ce
	xCloakO cb
	yCloak cf
	yCloakO cc
	zCloak cg
	zCloakO cd
	actuallyHurt (Lnet/minecraft/world/damagesource/DamageSource;F)V f
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addItem (Lnet/minecraft/world/item/ItemStack;)Z j
	addParticlesAroundSelf (Lnet/minecraft/core/particles/ParticleOptions;)V a
	aiStep ()V u_
	attack (Lnet/minecraft/world/entity/Entity;)V d
	awardRecipes (Ljava/util/Collection;)I a
	awardRecipesByKey ([Lnet/minecraft/resources/ResourceLocation;)V a
	awardStat (Lnet/minecraft/resources/ResourceLocation;)V a
	awardStat (Lnet/minecraft/resources/ResourceLocation;I)V a
	awardStat (Lnet/minecraft/stats/Stat;)V b
	awardStat (Lnet/minecraft/stats/Stat;I)V a
	blockActionRestricted (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/GameType;)Z a
	blockUsingShield (Lnet/minecraft/world/entity/LivingEntity;)V d
	canBeSeenAsEnemy ()Z dN
	canEat (Z)Z s
	canHarmPlayer (Lnet/minecraft/world/entity/player/Player;)Z a
	canTakeItem (Lnet/minecraft/world/item/ItemStack;)Z g
	canUseGameMasterBlocks ()Z fF
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	causeFoodExhaustion (F)V u
	checkMovementStatistics (DDD)V q
	checkRidingStatistics (DDD)V r
	closeContainer ()V n
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eX
	createItemCooldowns ()Lnet/minecraft/world/item/ItemCooldowns; j
	createPlayerUUID (Lcom/mojang/authlib/GameProfile;)Ljava/util/UUID; a
	createPlayerUUID (Ljava/lang/String;)Ljava/util/UUID; c
	crit (Lnet/minecraft/world/entity/Entity;)V a
	decorateDisplayNameComponent (Lnet/minecraft/network/chat/MutableComponent;)Lnet/minecraft/network/chat/MutableComponent; a
	defineSynchedData ()V a_
	destroyVanishingCursedItems ()V fe
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	disableShield (Z)V r
	displayClientMessage (Lnet/minecraft/network/chat/Component;Z)V a
	doAutoAttackOnTouch (Lnet/minecraft/world/entity/LivingEntity;)V g
	doWaterSplashEffect ()V aT
	drop (Lnet/minecraft/world/item/ItemStack;Z)Lnet/minecraft/world/entity/item/ItemEntity; a
	drop (Lnet/minecraft/world/item/ItemStack;ZZ)Lnet/minecraft/world/entity/item/ItemEntity; a
	drop (Z)Z a
	dropEquipment ()V dX
	eat (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	findRespawnPositionAndUseSpawnBlock (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;FZZ)Ljava/util/Optional; a
	freeAt (Lnet/minecraft/core/BlockPos;)Z f
	getAbilities ()Lnet/minecraft/world/entity/player/Abilities; fk
	getAbsorptionAmount ()F eB
	getArmorSlots ()Ljava/lang/Iterable; bx
	getAttackStrengthScale (F)F v
	getBlockSpeedFactor ()F ax
	getCooldowns ()Lnet/minecraft/world/item/ItemCooldowns; fD
	getCurrentItemAttackStrengthDelay ()F fB
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; v_
	getDestroySpeed (Lnet/minecraft/world/level/block/state/BlockState;)F c
	getDimensionChangingDelay ()I bu
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getDismountPoses ()Lcom/google/common/collect/ImmutableList; eR
	getDisplayName ()Lnet/minecraft/network/chat/Component; B_
	getEnchantmentSeed ()I fq
	getEnderChestInventory ()Lnet/minecraft/world/inventory/PlayerEnderChestContainer; fv
	getExperienceReward (Lnet/minecraft/world/entity/player/Player;)I d
	getFallDamageSound (I)Lnet/minecraft/sounds/SoundEvent; p
	getFireImmuneTicks ()I cK
	getFoodData ()Lnet/minecraft/world/food/FoodData; fs
	getGameProfile ()Lcom/mojang/authlib/GameProfile; fi
	getHandSlots ()Ljava/lang/Iterable; bw
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; c
	getInventory ()Lnet/minecraft/world/entity/player/Inventory; fj
	getItemBySlot (Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/item/ItemStack; b
	getLuck ()F fE
	getMainArm ()Lnet/minecraft/world/entity/HumanoidArm; eD
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aI
	getMyRidingOffset ()D bk
	getName ()Lnet/minecraft/network/chat/Component; S
	getPortalWaitTime ()I am
	getProjectile (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; h
	getRopeHoldPosition (F)Lnet/minecraft/world/phys/Vec3; n
	getScore ()I fd
	getScoreboard ()Lnet/minecraft/world/scores/Scoreboard; fx
	getScoreboardName ()Ljava/lang/String; cj
	getShoulderEntityLeft ()Lnet/minecraft/nbt/CompoundTag; fz
	getShoulderEntityRight ()Lnet/minecraft/nbt/CompoundTag; fA
	getSleepTimer ()I fm
	getSlot (I)Lnet/minecraft/world/entity/SlotAccess; k
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; cJ
	getSpeed ()F ev
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getSwimHighSpeedSplashSound ()Lnet/minecraft/sounds/SoundEvent; aC
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; aA
	getSwimSplashSound ()Lnet/minecraft/sounds/SoundEvent; aB
	getXpNeededForNextLevel ()I fr
	giveExperienceLevels (I)V c
	giveExperiencePoints (I)V d
	handleEntityEvent (B)V a
	hasCorrectToolForDrops (Lnet/minecraft/world/level/block/state/BlockState;)Z d
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	hurtArmor (Lnet/minecraft/world/damagesource/DamageSource;F)V b
	hurtCurrentlyUsedShield (F)V q
	hurtHelmet (Lnet/minecraft/world/damagesource/DamageSource;F)V c
	increaseScore (I)V u
	interactOn (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	isAboveGround ()Z v
	isAffectedByFluids ()Z dA
	isAlwaysExperienceDropper ()Z dE
	isAlwaysTicking ()Z dn
	isCreative ()Z f
	isHurt ()Z ft
	isImmobile ()Z eq
	isInvulnerableTo (Lnet/minecraft/world/damagesource/DamageSource;)Z b
	isLocalPlayer ()Z fh
	isModelPartShown (Lnet/minecraft/world/entity/player/PlayerModelPart;)Z a
	isPushedByFluid ()Z ck
	isReducedDebugInfo ()Z fy
	isScoping ()Z fG
	isSecondaryUseActive ()Z eY
	isSleepingLongEnough ()Z fl
	isSpectator ()Z A_
	isStayingOnGroundSurface ()Z fa
	isSwimming ()Z bK
	jumpFromGround ()V es
	killed (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	magicCrit (Lnet/minecraft/world/entity/Entity;)V b
	makeStuckInBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/Vec3;)V a
	mayBuild ()Z fu
	mayUseItemAt (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/world/item/ItemStack;)Z a
	maybeBackOffFromEdge (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/entity/MoverType;)Lnet/minecraft/world/phys/Vec3; a
	moveCloak ()V q
	onEnchantmentPerformed (Lnet/minecraft/world/item/ItemStack;I)V a
	onSoulSpeedBlock ()Z du
	onUpdateAbilities ()V t
	openCommandBlock (Lnet/minecraft/world/level/block/entity/CommandBlockEntity;)V a
	openHorseInventory (Lnet/minecraft/world/entity/animal/horse/AbstractHorse;Lnet/minecraft/world/Container;)V a
	openItemGui (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/InteractionHand;)V a
	openJigsawBlock (Lnet/minecraft/world/level/block/entity/JigsawBlockEntity;)V a
	openMenu (Lnet/minecraft/world/MenuProvider;)Ljava/util/OptionalInt; a
	openMinecartCommandBlock (Lnet/minecraft/world/level/BaseCommandBlock;)V a
	openStructureBlock (Lnet/minecraft/world/level/block/entity/StructureBlockEntity;)V a
	openTextEdit (Lnet/minecraft/world/level/block/entity/SignBlockEntity;)V a
	playNotifySound (Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	playShoulderEntityAmbientSound (Lnet/minecraft/nbt/CompoundTag;)V c
	playSound (Lnet/minecraft/sounds/SoundEvent;FF)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	remove (Lnet/minecraft/world/entity/Entity$RemovalReason;)V a
	removeEntitiesOnShoulder ()V fw
	removeVehicle ()V bo
	resetAttackStrengthTicker ()V fC
	resetRecipes (Ljava/util/Collection;)I b
	resetStat (Lnet/minecraft/stats/Stat;)V a
	respawn ()V fg
	respawnEntityOnShoulder (Lnet/minecraft/nbt/CompoundTag;)V k
	rideTick ()V bj
	sendMerchantOffers (ILnet/minecraft/world/item/trading/MerchantOffers;IIZZ)V a
	serverAiStep ()V ex
	setAbsorptionAmount (F)V t
	setEntityOnShoulder (Lnet/minecraft/nbt/CompoundTag;)Z h
	setItemSlot (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V a
	setMainArm (Lnet/minecraft/world/entity/HumanoidArm;)V a
	setReducedDebugInfo (Z)V t
	setRemainingFireTicks (I)V g
	setScore (I)V t
	setShoulderEntityLeft (Lnet/minecraft/nbt/CompoundTag;)V i
	setShoulderEntityRight (Lnet/minecraft/nbt/CompoundTag;)V j
	shouldBeSaved ()Z dm
	shouldRemoveSoulSpeed (Lnet/minecraft/world/level/block/state/BlockState;)Z b
	shouldShowName ()Z cn
	startFallFlying ()V fo
	startSleepInBed (Lnet/minecraft/core/BlockPos;)Lcom/mojang/datafixers/util/Either; a
	stopFallFlying ()V fp
	stopSleepInBed (ZZ)V a
	stopSleeping ()V eV
	sweepAttack ()V ff
	tick ()V k
	touch (Lnet/minecraft/world/entity/Entity;)V c
	travel (Lnet/minecraft/world/phys/Vec3;)V g
	tryToStartFallFlying ()Z fn
	turtleHelmetTick ()V p
	updateIsUnderwater ()Z fb
	updatePlayerPose ()V fc
	updateSwimming ()V aQ
	updateTutorialInventoryAction (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/ClickAction;)V a
	wantsToStopRiding ()Z eZ
net/minecraft/world/entity/player/Player$BedSleepingProblem bkd$a
	$VALUES h
	NOT_POSSIBLE_HERE a
	NOT_POSSIBLE_NOW b
	NOT_SAFE f
	OBSTRUCTED d
	OTHER_PROBLEM e
	TOO_FAR_AWAY c
	message g
	$values ()[Lnet/minecraft/world/entity/player/Player$BedSleepingProblem; b
	getMessage ()Lnet/minecraft/network/chat/Component; a
net/minecraft/world/entity/player/PlayerModelPart bke
	$VALUES l
	CAPE a
	HAT g
	JACKET b
	LEFT_PANTS_LEG e
	LEFT_SLEEVE c
	RIGHT_PANTS_LEG f
	RIGHT_SLEEVE d
	bit h
	id j
	mask i
	name k
	$values ()[Lnet/minecraft/world/entity/player/PlayerModelPart; e
	getBit ()I b
	getId ()Ljava/lang/String; c
	getMask ()I a
	getName ()Lnet/minecraft/network/chat/Component; d
net/minecraft/world/entity/player/StackedContents bkf
	EMPTY b
	contents a
	accountSimpleStack (Lnet/minecraft/world/item/ItemStack;)V a
	accountStack (Lnet/minecraft/world/item/ItemStack;)V b
	accountStack (Lnet/minecraft/world/item/ItemStack;I)V a
	canCraft (Lnet/minecraft/world/item/crafting/Recipe;Lit/unimi/dsi/fastutil/ints/IntList;)Z a
	canCraft (Lnet/minecraft/world/item/crafting/Recipe;Lit/unimi/dsi/fastutil/ints/IntList;I)Z a
	clear ()V a
	fromStackingIndex (I)Lnet/minecraft/world/item/ItemStack; a
	getBiggestCraftableStack (Lnet/minecraft/world/item/crafting/Recipe;ILit/unimi/dsi/fastutil/ints/IntList;)I a
	getBiggestCraftableStack (Lnet/minecraft/world/item/crafting/Recipe;Lit/unimi/dsi/fastutil/ints/IntList;)I b
	getStackingIndex (Lnet/minecraft/world/item/ItemStack;)I c
	has (I)Z b
	put (II)V b
	take (II)I a
net/minecraft/world/entity/player/StackedContents$RecipePicker bkf$a
	data g
	ingredientCount d
	ingredients c
	itemCount f
	items e
	path h
	recipe b
	dfs (I)Z a
	getIndex (ZII)I d
	getMinIngredientCount ()I b
	getSatisfiedIndex (I)I d
	getUniqueAvailableIngredientItems ()[I a
	getVisitedIndex (ZI)I c
	hasConnection (ZII)Z a
	hasResidual (ZII)Z b
	hasVisited (ZI)Z b
	isSatisfied (I)Z b
	setSatisfied (I)V c
	toggleResidual (ZII)V c
	tryPick (ILit/unimi/dsi/fastutil/ints/IntList;)Z a
	tryPickAll (ILit/unimi/dsi/fastutil/ints/IntList;)I b
	visit (ZI)V a
net/minecraft/world/entity/projectile/AbstractArrow bkh
	ARROW_BASE_DAMAGE f
	FLAG_CRIT aq
	FLAG_CROSSBOW as
	FLAG_NOPHYSICS ar
	ID_FLAGS ao
	PIERCE_LEVEL ap
	baseDamage av
	inGround b
	inGroundTime c
	knockback aw
	lastState at
	life au
	pickup d
	piercedAndKilledEntities az
	piercingIgnoreEntityIds ay
	shakeTime e
	soundEvent ax
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canHitEntity (Lnet/minecraft/world/entity/Entity;)Z a
	defineSynchedData ()V a_
	doPostHurtEffects (Lnet/minecraft/world/entity/LivingEntity;)V a
	findHitEntity (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/EntityHitResult; a
	getBaseDamage ()D n
	getDefaultHitGroundSoundEvent ()Lnet/minecraft/sounds/SoundEvent; i
	getEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F a
	getHitGroundSoundEvent ()Lnet/minecraft/sounds/SoundEvent; j
	getKnockback ()I o
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aI
	getPickupItem ()Lnet/minecraft/world/item/ItemStack; l
	getPierceLevel ()B r
	getWaterInertia ()F s
	isAttackable ()Z ca
	isCritArrow ()Z p
	isNoPhysics ()Z t
	lerpMotion (DDD)V k
	lerpTo (DDDFFIZ)V a
	move (Lnet/minecraft/world/entity/MoverType;Lnet/minecraft/world/phys/Vec3;)V a
	onHitBlock (Lnet/minecraft/world/phys/BlockHitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	playerTouch (Lnet/minecraft/world/entity/player/Player;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	resetPiercedEntities ()V B
	setBaseDamage (D)V h
	setCritArrow (Z)V a
	setEnchantmentEffectsFromEntity (Lnet/minecraft/world/entity/LivingEntity;F)V a
	setFlag (IZ)V a
	setKnockback (I)V a
	setNoPhysics (Z)V p
	setOwner (Lnet/minecraft/world/entity/Entity;)V b
	setPierceLevel (B)V b
	setShotFromCrossbow (Z)V q
	setSoundEvent (Lnet/minecraft/sounds/SoundEvent;)V a
	shoot (DDDFF)V c
	shotFromCrossbow ()Z q
	shouldFall ()Z v
	shouldRenderAtSqrDistance (D)Z a
	startFalling ()V A
	tick ()V k
	tickDespawn ()V h
	tryPickup (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/entity/projectile/AbstractArrow$Pickup bkh$a
	$VALUES d
	ALLOWED b
	CREATIVE_ONLY c
	DISALLOWED a
	$values ()[Lnet/minecraft/world/entity/projectile/AbstractArrow$Pickup; a
	byOrdinal (I)Lnet/minecraft/world/entity/projectile/AbstractArrow$Pickup; a
net/minecraft/world/entity/projectile/AbstractHurtingProjectile bki
	xPower b
	yPower c
	zPower d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canHitEntity (Lnet/minecraft/world/entity/Entity;)Z a
	defineSynchedData ()V a_
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; P
	getBrightness ()F aY
	getInertia ()F j
	getPickRadius ()F bp
	getTrailParticle ()Lnet/minecraft/core/particles/ParticleOptions; i
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isPickable ()Z bc
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	recreateFromPacket (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	shouldBurn ()Z J_
	shouldRenderAtSqrDistance (D)Z a
	tick ()V k
net/minecraft/world/entity/projectile/Arrow bkj
	EVENT_POTION_PUFF aq
	EXPOSED_POTION_DECAY_TIME f
	ID_EFFECT_COLOR ap
	NO_EFFECT_COLOR ao
	effects as
	fixedColor at
	potion ar
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addEffect (Lnet/minecraft/world/effect/MobEffectInstance;)V a
	defineSynchedData ()V a_
	doPostHurtEffects (Lnet/minecraft/world/entity/LivingEntity;)V a
	getColor ()I v
	getCustomColor (Lnet/minecraft/world/item/ItemStack;)I c
	getPickupItem ()Lnet/minecraft/world/item/ItemStack; l
	handleEntityEvent (B)V a
	makeParticle (I)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setEffectsFromItem (Lnet/minecraft/world/item/ItemStack;)V a
	setFixedColor (I)V c
	tick ()V k
	updateColor ()V A
net/minecraft/world/entity/projectile/DragonFireball bkk
	SPLASH_RANGE e
	getTrailParticle ()Lnet/minecraft/core/particles/ParticleOptions; i
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isPickable ()Z bc
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	shouldBurn ()Z J_
net/minecraft/world/entity/projectile/EvokerFangs bkl
	ATTACK_DURATION b
	ATTACK_TRIGGER_TICKS d
	LIFE_OFFSET c
	clientSideAttackStarted ap
	lifeTicks ao
	owner aq
	ownerUUID ar
	sentSpikeEvent f
	warmupDelayTicks e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	dealDamageTo (Lnet/minecraft/world/entity/LivingEntity;)V c
	defineSynchedData ()V a_
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; P
	getAnimationProgress (F)F a
	getOwner ()Lnet/minecraft/world/entity/LivingEntity; h
	handleEntityEvent (B)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setOwner (Lnet/minecraft/world/entity/LivingEntity;)V a
	tick ()V k
net/minecraft/world/entity/projectile/EyeOfEnder bkm
	DATA_ITEM_STACK b
	life f
	surviveAfterDeath ao
	tx c
	ty d
	tz e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V a_
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; P
	getBrightness ()F aY
	getItem ()Lnet/minecraft/world/item/ItemStack; h
	getItemRaw ()Lnet/minecraft/world/item/ItemStack; i
	isAttackable ()Z ca
	lerpMotion (DDD)V k
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setItem (Lnet/minecraft/world/item/ItemStack;)V a
	shouldRenderAtSqrDistance (D)Z a
	signalTo (Lnet/minecraft/core/BlockPos;)V a
	tick ()V k
net/minecraft/world/entity/projectile/Fireball bkn
	DATA_ITEM_STACK e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V a_
	getItem ()Lnet/minecraft/world/item/ItemStack; h
	getItemRaw ()Lnet/minecraft/world/item/ItemStack; l
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setItem (Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/entity/projectile/FireworkRocketEntity bko
	DATA_ATTACHED_TO_TARGET c
	DATA_ID_FIREWORKS_ITEM b
	DATA_SHOT_AT_ANGLE d
	attachedToEntity ao
	life e
	lifetime f
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	dealExplosionDamage ()V n
	defineSynchedData ()V a_
	explode ()V j
	getItem ()Lnet/minecraft/world/item/ItemStack; h
	handleEntityEvent (B)V a
	hasExplosion ()Z l
	isAttachedToEntity ()Z o
	isAttackable ()Z ca
	isShotAtAngle ()Z i
	onHitBlock (Lnet/minecraft/world/phys/BlockHitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	shouldRender (DDD)Z j
	shouldRenderAtSqrDistance (D)Z a
	tick ()V k
net/minecraft/world/entity/projectile/FishingHook bkp
	DATA_BITING ao
	DATA_HOOKED_ENTITY f
	MAX_OUT_OF_WATER_TIME e
	biting c
	currentState aw
	fishAngle at
	hookedIn av
	life ap
	luck ax
	lureSpeed ay
	nibble aq
	openWater au
	outOfWaterTime d
	syncronizedRandom b
	timeUntilHooked as
	timeUntilLured ar
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	calculateOpenWater (Lnet/minecraft/core/BlockPos;)Z b
	canChangeDimensions ()Z cd
	canHitEntity (Lnet/minecraft/world/entity/Entity;)Z a
	catchingFish (Lnet/minecraft/core/BlockPos;)V a
	checkCollision ()V l
	defineSynchedData ()V a_
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; P
	getHookedIn ()Lnet/minecraft/world/entity/Entity; j
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aI
	getOpenWaterTypeForArea (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/projectile/FishingHook$OpenWaterType; a
	getOpenWaterTypeForBlock (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/projectile/FishingHook$OpenWaterType; c
	getPlayerOwner ()Lnet/minecraft/world/entity/player/Player; i
	handleEntityEvent (B)V a
	isOpenWaterFishing ()Z h
	lerpTo (DDDFFIZ)V a
	onClientRemoval ()V ae
	onHitBlock (Lnet/minecraft/world/phys/BlockHitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	pullEntity (Lnet/minecraft/world/entity/Entity;)V c
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	recreateFromPacket (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	remove (Lnet/minecraft/world/entity/Entity$RemovalReason;)V a
	retrieve (Lnet/minecraft/world/item/ItemStack;)I a
	setHookedEntity (Lnet/minecraft/world/entity/Entity;)V x
	setOwner (Lnet/minecraft/world/entity/Entity;)V b
	shouldRenderAtSqrDistance (D)Z a
	shouldStopFishing (Lnet/minecraft/world/entity/player/Player;)Z a
	tick ()V k
	updateOwnerInfo (Lnet/minecraft/world/entity/projectile/FishingHook;)V a
net/minecraft/world/entity/projectile/FishingHook$FishHookState bkp$a
	$VALUES d
	BOBBING c
	FLYING a
	HOOKED_IN_ENTITY b
	$values ()[Lnet/minecraft/world/entity/projectile/FishingHook$FishHookState; a
net/minecraft/world/entity/projectile/FishingHook$OpenWaterType bkp$b
	$VALUES d
	ABOVE_WATER a
	INSIDE_WATER b
	INVALID c
	$values ()[Lnet/minecraft/world/entity/projectile/FishingHook$OpenWaterType; a
net/minecraft/world/entity/projectile/ItemSupplier bkq
	getItem ()Lnet/minecraft/world/item/ItemStack; h
net/minecraft/world/entity/projectile/LargeFireball bkr
	explosionPower e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/world/entity/projectile/LlamaSpit bks
	defineSynchedData ()V a_
	onHitBlock (Lnet/minecraft/world/phys/BlockHitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	recreateFromPacket (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	tick ()V k
net/minecraft/world/entity/projectile/Projectile bkt
	cachedOwner c
	hasBeenShot e
	leftOwner d
	ownerUUID b
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canHitEntity (Lnet/minecraft/world/entity/Entity;)Z a
	checkLeftOwner ()Z i
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; P
	getEffectSource ()Lnet/minecraft/world/entity/Entity; x
	getOwner ()Lnet/minecraft/world/entity/Entity; w
	lerpMotion (DDD)V k
	lerpRotation (FF)F d
	mayInteract (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z a
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitBlock (Lnet/minecraft/world/phys/BlockHitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	ownedBy (Lnet/minecraft/world/entity/Entity;)Z d
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	recreateFromPacket (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	setOwner (Lnet/minecraft/world/entity/Entity;)V b
	shoot (DDDFF)V c
	shootFromRotation (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	tick ()V k
	updateRotation ()V z
net/minecraft/world/entity/projectile/ProjectileUtil bku
	getEntityHitResult (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;D)Lnet/minecraft/world/phys/EntityHitResult; a
	getEntityHitResult (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Lnet/minecraft/world/phys/EntityHitResult; a
	getEntityHitResult (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;F)Lnet/minecraft/world/phys/EntityHitResult; a
	getHitResult (Lnet/minecraft/world/entity/Entity;Ljava/util/function/Predicate;)Lnet/minecraft/world/phys/HitResult; a
	getMobArrow (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;F)Lnet/minecraft/world/entity/projectile/AbstractArrow; a
	getWeaponHoldingHand (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/InteractionHand; a
	rotateTowardsMovement (Lnet/minecraft/world/entity/Entity;F)V a
net/minecraft/world/entity/projectile/ShulkerBullet bkv
	SPEED b
	currentMoveDirection d
	finalTarget c
	flightSteps e
	targetDeltaX f
	targetDeltaY ao
	targetDeltaZ ap
	targetId aq
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canHitEntity (Lnet/minecraft/world/entity/Entity;)Z a
	checkDespawn ()V de
	defineSynchedData ()V a_
	getBrightness ()F aY
	getMoveDirection ()Lnet/minecraft/core/Direction; h
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; cJ
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isOnFire ()Z bz
	isPickable ()Z bc
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitBlock (Lnet/minecraft/world/phys/BlockHitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	recreateFromPacket (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	selectNextMoveDirection (Lnet/minecraft/core/Direction$Axis;)V a
	setMoveDirection (Lnet/minecraft/core/Direction;)V a
	shouldRenderAtSqrDistance (D)Z a
	tick ()V k
net/minecraft/world/entity/projectile/SmallFireball bkw
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isPickable ()Z bc
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitBlock (Lnet/minecraft/world/phys/BlockHitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
net/minecraft/world/entity/projectile/Snowball bkx
	getDefaultItem ()Lnet/minecraft/world/item/Item; i
	getParticle ()Lnet/minecraft/core/particles/ParticleOptions; n
	handleEntityEvent (B)V a
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
net/minecraft/world/entity/projectile/SpectralArrow bky
	duration f
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	doPostHurtEffects (Lnet/minecraft/world/entity/LivingEntity;)V a
	getPickupItem ()Lnet/minecraft/world/item/ItemStack; l
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	tick ()V k
net/minecraft/world/entity/projectile/ThrowableItemProjectile bkz
	DATA_ITEM_STACK b
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V a_
	getDefaultItem ()Lnet/minecraft/world/item/Item; i
	getItem ()Lnet/minecraft/world/item/ItemStack; h
	getItemRaw ()Lnet/minecraft/world/item/ItemStack; j
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setItem (Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/entity/projectile/ThrowableProjectile bla
	getGravity ()F l
	shouldRenderAtSqrDistance (D)Z a
	tick ()V k
net/minecraft/world/entity/projectile/ThrownEgg blb
	getDefaultItem ()Lnet/minecraft/world/item/Item; i
	handleEntityEvent (B)V a
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
net/minecraft/world/entity/projectile/ThrownEnderpearl blc
	changeDimension (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/entity/Entity; b
	getDefaultItem ()Lnet/minecraft/world/item/Item; i
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	tick ()V k
net/minecraft/world/entity/projectile/ThrownExperienceBottle bld
	getDefaultItem ()Lnet/minecraft/world/item/Item; i
	getGravity ()F l
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
net/minecraft/world/entity/projectile/ThrownPotion ble
	SPLASH_RANGE b
	SPLASH_RANGE_SQ d
	WATER_SENSITIVE c
	applySplash (Ljava/util/List;Lnet/minecraft/world/entity/Entity;)V a
	applyWater ()V n
	dowseFire (Lnet/minecraft/core/BlockPos;)V a
	getDefaultItem ()Lnet/minecraft/world/item/Item; i
	getGravity ()F l
	isLingering ()Z o
	makeAreaOfEffectCloud (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/alchemy/Potion;)V a
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitBlock (Lnet/minecraft/world/phys/BlockHitResult;)V a
net/minecraft/world/entity/projectile/ThrownTrident blf
	ID_FOIL ap
	ID_LOYALTY ao
	clientSideReturnTridentTickCount f
	dealtDamage ar
	tridentItem aq
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V a_
	findHitEntity (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/EntityHitResult; a
	getDefaultHitGroundSoundEvent ()Lnet/minecraft/sounds/SoundEvent; i
	getPickupItem ()Lnet/minecraft/world/item/ItemStack; l
	getWaterInertia ()F s
	isAcceptibleReturnOwner ()Z B
	isChanneling ()Z A
	isFoil ()Z v
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	playerTouch (Lnet/minecraft/world/entity/player/Player;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	shouldRender (DDD)Z j
	tick ()V k
	tickDespawn ()V h
	tryPickup (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/entity/projectile/WitherSkull blg
	DATA_DANGEROUS e
	defineSynchedData ()V a_
	getBlockExplosionResistance (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;F)F a
	getInertia ()F j
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isDangerous ()Z l
	isOnFire ()Z bz
	isPickable ()Z bc
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	setDangerous (Z)V a
	shouldBurn ()Z J_
net/minecraft/world/entity/raid/Raid bli
	ATTEMPT_RAID_CLOSE j
	ATTEMPT_RAID_FARTHEST i
	ATTEMPT_RAID_INSIDE k
	DEFAULT_MAX_BAD_OMEN_LEVEL e
	DEFAULT_PRE_RAID_TICKS r
	DEFEAT w
	HERO_OF_THE_VILLAGE_DURATION z
	LOW_MOB_THRESHOLD t
	MAX_CELEBRATION_TICKS c
	MAX_NO_ACTION_TIME b
	NUM_SPAWN_ATTEMPTS n
	OMINOUS_BANNER_PATTERN_NAME o
	OUTSIDE_RAID_BOUNDS_TIMEOUT s
	POST_RAID_TICK_LIMIT q
	RAIDERS_REMAINING p
	RAID_BAR_DEFEAT_COMPONENT y
	RAID_BAR_VICTORY_COMPONENT x
	RAID_NAME_COMPONENT u
	RAID_REMOVAL_THRESHOLD_SQR g
	RAID_TIMEOUT_TICKS m
	SECTION_RADIUS_FOR_FINDING_NEW_VILLAGE_CENTER h
	TICKS_PER_DAY d
	VALID_RAID_RADIUS_SQR f
	VICTORY v
	VILLAGE_RADIUS_BUFFER a
	VILLAGE_SEARCH_RADIUS l
	active K
	badOmenLevel J
	celebrationTicks S
	center E
	groupRaiderMap B
	groupToLeaderMap A
	groupsSpawned L
	heroesOfTheVillage C
	id H
	level F
	numGroups Q
	postRaidTicks N
	raidCooldownTicks O
	raidEvent M
	random P
	started G
	status R
	ticksActive D
	totalHealth I
	waveSpawnPos T
	absorbBadOmen (Lnet/minecraft/world/entity/player/Player;)V a
	addHeroOfTheVillage (Lnet/minecraft/world/entity/Entity;)V a
	addWaveMob (ILnet/minecraft/world/entity/raid/Raider;)Z b
	addWaveMob (ILnet/minecraft/world/entity/raid/Raider;Z)Z a
	findRandomSpawnPos (II)Lnet/minecraft/core/BlockPos; a
	getAllRaiders ()Ljava/util/Set; h
	getBadOmenLevel ()I m
	getCenter ()Lnet/minecraft/core/BlockPos; t
	getDefaultNumSpawns (Lnet/minecraft/world/entity/raid/Raid$RaiderType;IZ)I a
	getEnchantOdds ()F w
	getGroupsSpawned ()I k
	getHealthOfLivingRaiders ()F q
	getId ()I u
	getLeader (I)Lnet/minecraft/world/entity/raid/Raider; b
	getLeaderBannerInstance ()Lnet/minecraft/world/item/ItemStack; s
	getLevel ()Lnet/minecraft/world/level/Level; i
	getMaxBadOmenLevel ()I l
	getNumGroups (Lnet/minecraft/world/Difficulty;)I a
	getPotentialBonusSpawns (Lnet/minecraft/world/entity/raid/Raid$RaiderType;Ljava/util/Random;ILnet/minecraft/world/DifficultyInstance;Z)I a
	getTotalHealth ()F g
	getTotalRaidersAlive ()I r
	getValidSpawnPos (I)Ljava/util/Optional; d
	hasBonusWave ()Z C
	hasFirstWaveSpawned ()Z c
	hasMoreWaves ()Z A
	hasSpawnedBonusWave ()Z D
	isActive ()Z v
	isBetweenWaves ()Z b
	isFinalWave ()Z B
	isLoss ()Z f
	isOver ()Z a
	isStarted ()Z j
	isStopped ()Z d
	isVictory ()Z e
	joinRaid (ILnet/minecraft/world/entity/raid/Raider;Lnet/minecraft/core/BlockPos;Z)V a
	moveRaidCenterToNearbyVillageSection ()V z
	playSound (Lnet/minecraft/core/BlockPos;)V a
	removeFromRaid (Lnet/minecraft/world/entity/raid/Raider;Z)V a
	removeLeader (I)V c
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	setBadOmenLevel (I)V a
	setCenter (Lnet/minecraft/core/BlockPos;)V c
	setDirty ()V H
	setLeader (ILnet/minecraft/world/entity/raid/Raider;)V a
	shouldSpawnBonusGroup ()Z E
	shouldSpawnGroup ()Z G
	spawnGroup (Lnet/minecraft/core/BlockPos;)V b
	stop ()V n
	tick ()V o
	updateBossbar ()V p
	updatePlayers ()V y
	updateRaiders ()V F
	validPlayer ()Ljava/util/function/Predicate; x
net/minecraft/world/entity/raid/Raid$RaidStatus bli$a
	$VALUES f
	LOSS c
	ONGOING a
	STOPPED d
	VALUES e
	VICTORY b
	$values ()[Lnet/minecraft/world/entity/raid/Raid$RaidStatus; b
	getByName (Ljava/lang/String;)Lnet/minecraft/world/entity/raid/Raid$RaidStatus; a
	getName ()Ljava/lang/String; a
net/minecraft/world/entity/raid/Raid$RaiderType bli$b
	$VALUES i
	EVOKER b
	PILLAGER c
	RAVAGER e
	VALUES f
	VINDICATOR a
	WITCH d
	entityType g
	spawnsPerWaveBeforeBonus h
	$values ()[Lnet/minecraft/world/entity/raid/Raid$RaiderType; a
net/minecraft/world/entity/raid/Raider blj
	ALLOWED_ITEMS b
	IS_CELEBRATING c
	canJoinRaid bS
	raid d
	ticksOutsideRaid bT
	wave e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V u_
	applyRaidBuffs (IZ)V a
	canJoinPatrol ()Z fC
	canJoinRaid ()Z fI
	defineSynchedData ()V a_
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getCelebrateSound ()Lnet/minecraft/sounds/SoundEvent; t
	getCurrentRaid ()Lnet/minecraft/world/entity/raid/Raid; fJ
	getTicksOutsideRaid ()I fN
	getWave ()I fL
	hasActiveRaid ()Z fK
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isCelebrating ()Z fM
	pickUpItem (Lnet/minecraft/world/entity/item/ItemEntity;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V v
	removeWhenFarAway (D)Z h
	requiresCustomPersistence ()Z O
	setCanJoinRaid (Z)V y
	setCelebrating (Z)V z
	setCurrentRaid (Lnet/minecraft/world/entity/raid/Raid;)V a
	setTicksOutsideRaid (I)V b
	setWave (I)V a
	updateNoActionTime ()V fz
net/minecraft/world/entity/raid/Raider$HoldGroundAttackGoal blj$a
	hostileRadiusSqr d
	mob c
	shoutTargeting a
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/raid/Raider$ObtainRaidLeaderBannerGoal blj$b
	mob b
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/raid/Raider$RaiderCelebration blj$c
	mob b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/raid/Raider$RaiderMoveThroughVillageGoal blj$d
	distanceToPoi e
	poiPos c
	raider a
	speedModifier b
	stuck f
	visited d
	canContinueToUse ()Z b
	canUse ()Z a
	hasNotVisited (Lnet/minecraft/core/BlockPos;)Z a
	hasSuitablePoi ()Z h
	isValidRaid ()Z g
	start ()V c
	stop ()V d
	tick ()V e
	updateVisited ()V j
net/minecraft/world/entity/raid/Raids blk
	RAID_FILE_ID a
	level c
	nextAvailableID d
	raidMap b
	tick e
	canJoinRaid (Lnet/minecraft/world/entity/raid/Raider;Lnet/minecraft/world/entity/raid/Raid;)Z a
	createOrExtendRaid (Lnet/minecraft/server/level/ServerPlayer;)Lnet/minecraft/world/entity/raid/Raid; a
	get (I)Lnet/minecraft/world/entity/raid/Raid; a
	getFileId (Lnet/minecraft/world/level/dimension/DimensionType;)Ljava/lang/String; a
	getNearbyRaid (Lnet/minecraft/core/BlockPos;I)Lnet/minecraft/world/entity/raid/Raid; a
	getOrCreateRaid (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/raid/Raid; a
	getUniqueId ()I d
	load (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/raid/Raids; a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	tick ()V a
net/minecraft/world/entity/schedule/Activity blm
	ADMIRE_ITEM m
	AVOID n
	CELEBRATE l
	CORE a
	FIGHT k
	HIDE j
	IDLE b
	LONG_JUMP q
	MEET f
	PANIC g
	PLAY d
	PLAY_DEAD p
	PRE_RAID i
	RAID h
	RAM r
	REST e
	RIDE o
	WORK c
	hashCode t
	name s
	getName ()Ljava/lang/String; a
	register (Ljava/lang/String;)Lnet/minecraft/world/entity/schedule/Activity; a
net/minecraft/world/entity/schedule/Keyframe bln
	timeStamp a
	value b
	getTimeStamp ()I a
	getValue ()F b
net/minecraft/world/entity/schedule/Schedule blo
	EMPTY c
	SIMPLE d
	TOTAL_WORK_TIME b
	VILLAGER_BABY e
	VILLAGER_DEFAULT f
	WORK_START_TIME a
	timelines g
	ensureTimelineExistsFor (Lnet/minecraft/world/entity/schedule/Activity;)V a
	getActivityAt (I)Lnet/minecraft/world/entity/schedule/Activity; a
	getAllTimelinesExceptFor (Lnet/minecraft/world/entity/schedule/Activity;)Ljava/util/List; c
	getTimelineFor (Lnet/minecraft/world/entity/schedule/Activity;)Lnet/minecraft/world/entity/schedule/Timeline; b
	register (Ljava/lang/String;)Lnet/minecraft/world/entity/schedule/ScheduleBuilder; a
net/minecraft/world/entity/schedule/ScheduleBuilder blp
	schedule a
	transitions b
	build ()Lnet/minecraft/world/entity/schedule/Schedule; a
	changeActivityAt (ILnet/minecraft/world/entity/schedule/Activity;)Lnet/minecraft/world/entity/schedule/ScheduleBuilder; a
net/minecraft/world/entity/schedule/ScheduleBuilder$ActivityTransition blp$a
	activity b
	time a
	getActivity ()Lnet/minecraft/world/entity/schedule/Activity; b
	getTime ()I a
net/minecraft/world/entity/schedule/Timeline blq
	keyframes a
	previousIndex b
	addKeyframe (IF)Lnet/minecraft/world/entity/schedule/Timeline; a
	addKeyframes (Ljava/util/Collection;)Lnet/minecraft/world/entity/schedule/Timeline; a
	getKeyframes ()Lcom/google/common/collect/ImmutableList; a
	getValueAt (I)F a
	sortAndDeduplicateKeyframes ()V b
net/minecraft/world/entity/vehicle/AbstractMinecart bls
	DATA_ID_CUSTOM_DISPLAY ap
	DATA_ID_DAMAGE e
	DATA_ID_DISPLAY_BLOCK f
	DATA_ID_DISPLAY_OFFSET ao
	DATA_ID_HURT c
	DATA_ID_HURTDIR d
	EXITS as
	POSE_DISMOUNT_HEIGHTS aq
	WATER_SLOWDOWN_FACTOR b
	flipped ar
	lSteps at
	lx au
	lxd az
	lxr ay
	ly av
	lyd aA
	lyr ax
	lz aw
	lzd aB
	activateMinecart (IIIZ)V a
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	animateHurt ()V bv
	applyNaturalSlowdown ()V j
	canCollideWith (Lnet/minecraft/world/entity/Entity;)Z h
	comeOffTrack ()V i
	createMinecart (Lnet/minecraft/world/level/Level;DDDLnet/minecraft/world/entity/vehicle/AbstractMinecart$Type;)Lnet/minecraft/world/entity/vehicle/AbstractMinecart; a
	defineSynchedData ()V a_
	destroy (Lnet/minecraft/world/damagesource/DamageSource;)V a
	exits (Lnet/minecraft/world/level/block/state/properties/RailShape;)Lcom/mojang/datafixers/util/Pair; a
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; P
	getBlockSpeedFactor ()F ax
	getBoundingBoxForCulling ()Lnet/minecraft/world/phys/AABB; cs
	getDamage ()F l
	getDefaultDisplayBlockState ()Lnet/minecraft/world/level/block/state/BlockState; r
	getDefaultDisplayOffset ()I t
	getDismountLocationForPassenger (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/phys/Vec3; b
	getDisplayBlockState ()Lnet/minecraft/world/level/block/state/BlockState; q
	getDisplayOffset ()I s
	getHurtDir ()I o
	getHurtTime ()I n
	getMaxSpeed ()D h
	getMinecartType ()Lnet/minecraft/world/entity/vehicle/AbstractMinecart$Type; p
	getMotionDirection ()Lnet/minecraft/core/Direction; cp
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aI
	getPassengersRidingOffset ()D bl
	getPickResult ()Lnet/minecraft/world/item/ItemStack; df
	getPos (DDD)Lnet/minecraft/world/phys/Vec3; p
	getPosOffs (DDDD)Lnet/minecraft/world/phys/Vec3; a
	getRelativePortalPosition (Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/BlockUtil$FoundRectangle;)Lnet/minecraft/world/phys/Vec3; a
	hasCustomDisplay ()Z v
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isPickable ()Z bc
	isPushable ()Z bd
	isRedstoneConductor (Lnet/minecraft/core/BlockPos;)Z a
	lerpMotion (DDD)V k
	lerpTo (DDDFFIZ)V a
	moveAlongTrack (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V c
	push (Lnet/minecraft/world/entity/Entity;)V g
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setCustomDisplay (Z)V a
	setDamage (F)V a
	setDisplayBlockState (Lnet/minecraft/world/level/block/state/BlockState;)V b
	setDisplayOffset (I)V m
	setHurtDir (I)V d
	setHurtTime (I)V c
	tick ()V k
net/minecraft/world/entity/vehicle/AbstractMinecart$Type bls$a
	$VALUES h
	CHEST b
	COMMAND_BLOCK g
	FURNACE c
	HOPPER f
	RIDEABLE a
	SPAWNER e
	TNT d
	$values ()[Lnet/minecraft/world/entity/vehicle/AbstractMinecart$Type; a
net/minecraft/world/entity/vehicle/AbstractMinecartContainer blt
	itemStacks c
	lootTable d
	lootTableSeed e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	applyNaturalSlowdown ()V j
	clearContent ()V a
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	destroy (Lnet/minecraft/world/damagesource/DamageSource;)V a
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getSlot (I)Lnet/minecraft/world/entity/SlotAccess; k
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	isEmpty ()Z c
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	remove (Lnet/minecraft/world/entity/Entity$RemovalReason;)V a
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	setChanged ()V e
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	setLootTable (Lnet/minecraft/resources/ResourceLocation;J)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	unpackLootTable (Lnet/minecraft/world/entity/player/Player;)V d
net/minecraft/world/entity/vehicle/Boat blu
	BUBBLE_TIME e
	DATA_ID_BUBBLE_TIME at
	DATA_ID_DAMAGE ap
	DATA_ID_HURT f
	DATA_ID_HURTDIR ao
	DATA_ID_PADDLE_LEFT ar
	DATA_ID_PADDLE_RIGHT as
	DATA_ID_TYPE aq
	PADDLE_LEFT b
	PADDLE_RIGHT c
	PADDLE_SOUND_TIME d
	PADDLE_SPEED av
	TIME_TO_EJECT au
	bubbleAngle aS
	bubbleAngleO aT
	bubbleColumnDirectionIsDown aQ
	bubbleMultiplier aR
	deltaRotation az
	inputDown aJ
	inputLeft aG
	inputRight aH
	inputUp aI
	invFriction ax
	isAboveBubbleColumn aP
	landFriction aL
	lastYd aO
	lerpSteps aA
	lerpX aB
	lerpXRot aF
	lerpY aC
	lerpYRot aE
	lerpZ aD
	oldStatus aN
	outOfControlTicks ay
	paddlePositions aw
	status aM
	waterLevel aK
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	animateHurt ()V bv
	canAddPassenger (Lnet/minecraft/world/entity/Entity;)Z o
	canBeCollidedWith ()Z bi
	canCollideWith (Lnet/minecraft/world/entity/Entity;)Z h
	canVehicleCollide (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)Z a
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	checkInWater ()Z v
	clampRotation (Lnet/minecraft/world/entity/Entity;)V a
	controlBoat ()V z
	defineSynchedData ()V a_
	floatBoat ()V x
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; P
	getBoatType ()Lnet/minecraft/world/entity/vehicle/Boat$Type; q
	getBubbleAngle (F)F b
	getBubbleTime ()I A
	getControllingPassenger ()Lnet/minecraft/world/entity/Entity; cz
	getDamage ()F n
	getDismountLocationForPassenger (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/phys/Vec3; b
	getDropItem ()Lnet/minecraft/world/item/Item; h
	getEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F a
	getGroundFriction ()F l
	getHurtDir ()I p
	getHurtTime ()I o
	getMotionDirection ()Lnet/minecraft/core/Direction; cp
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aI
	getPaddleSound ()Lnet/minecraft/sounds/SoundEvent; i
	getPaddleState (I)Z a
	getPassengersRidingOffset ()D bl
	getPickResult ()Lnet/minecraft/world/item/ItemStack; df
	getRelativePortalPosition (Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/BlockUtil$FoundRectangle;)Lnet/minecraft/world/phys/Vec3; a
	getRowingTime (IF)F a
	getStatus ()Lnet/minecraft/world/entity/vehicle/Boat$Status; t
	getWaterLevelAbove ()F j
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	isPickable ()Z bc
	isPushable ()Z bd
	isUnderWater ()Z aP
	isUnderwater ()Lnet/minecraft/world/entity/vehicle/Boat$Status; w
	lerpTo (DDDFFIZ)V a
	onAboveBubbleCol (Z)V k
	onPassengerTurned (Lnet/minecraft/world/entity/Entity;)V j
	positionRider (Lnet/minecraft/world/entity/Entity;)V i
	push (Lnet/minecraft/world/entity/Entity;)V g
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setBubbleTime (I)V d
	setDamage (F)V a
	setHurtDir (I)V c
	setHurtTime (I)V b
	setInput (ZZZZ)V a
	setPaddleState (ZZ)V a
	setType (Lnet/minecraft/world/entity/vehicle/Boat$Type;)V a
	tick ()V k
	tickBubbleColumn ()V r
	tickLerp ()V s
net/minecraft/world/entity/vehicle/Boat$Status blu$a
	$VALUES f
	IN_AIR e
	IN_WATER a
	ON_LAND d
	UNDER_FLOWING_WATER c
	UNDER_WATER b
	$values ()[Lnet/minecraft/world/entity/vehicle/Boat$Status; a
net/minecraft/world/entity/vehicle/Boat$Type blu$b
	$VALUES i
	ACACIA e
	BIRCH c
	DARK_OAK f
	JUNGLE d
	OAK a
	SPRUCE b
	name g
	planks h
	$values ()[Lnet/minecraft/world/entity/vehicle/Boat$Type; c
	byId (I)Lnet/minecraft/world/entity/vehicle/Boat$Type; a
	byName (Ljava/lang/String;)Lnet/minecraft/world/entity/vehicle/Boat$Type; a
	getName ()Ljava/lang/String; a
	getPlanks ()Lnet/minecraft/world/level/block/Block; b
net/minecraft/world/entity/vehicle/DismountHelper blv
	canDismountTo (Lnet/minecraft/world/level/CollisionGetter;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/phys/AABB;)Z a
	canDismountTo (Lnet/minecraft/world/level/CollisionGetter;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Pose;)Z a
	findCeilingFrom (Lnet/minecraft/core/BlockPos;ILjava/util/function/Function;)D a
	findSafeDismountLocation (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/CollisionGetter;Lnet/minecraft/core/BlockPos;Z)Lnet/minecraft/world/phys/Vec3; a
	isBlockFloorValid (D)Z a
	nonClimbableShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	offsetsForDirection (Lnet/minecraft/core/Direction;)[[I a
net/minecraft/world/entity/vehicle/Minecart blw
	activateMinecart (IIIZ)V a
	getMinecartType ()Lnet/minecraft/world/entity/vehicle/AbstractMinecart$Type; p
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/entity/vehicle/MinecartChest blx
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	destroy (Lnet/minecraft/world/damagesource/DamageSource;)V a
	getContainerSize ()I b
	getDefaultDisplayBlockState ()Lnet/minecraft/world/level/block/state/BlockState; r
	getDefaultDisplayOffset ()I t
	getMinecartType ()Lnet/minecraft/world/entity/vehicle/AbstractMinecart$Type; p
net/minecraft/world/entity/vehicle/MinecartCommandBlock bly
	ACTIVATION_DELAY f
	DATA_ID_COMMAND_NAME c
	DATA_ID_LAST_OUTPUT d
	commandBlock e
	lastActivated ao
	activateMinecart (IIIZ)V a
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V a_
	getCommandBlock ()Lnet/minecraft/world/level/BaseCommandBlock; w
	getDefaultDisplayBlockState ()Lnet/minecraft/world/level/block/state/BlockState; r
	getMinecartType ()Lnet/minecraft/world/entity/vehicle/AbstractMinecart$Type; p
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	onlyOpCanSetNbt ()Z cy
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/world/entity/vehicle/MinecartCommandBlock$MinecartCommandBase bly$a
	createCommandSourceStack ()Lnet/minecraft/commands/CommandSourceStack; i
	getLevel ()Lnet/minecraft/server/level/ServerLevel; e
	getMinecart ()Lnet/minecraft/world/entity/vehicle/MinecartCommandBlock; h
	getPosition ()Lnet/minecraft/world/phys/Vec3; g
	onUpdated ()V f
net/minecraft/world/entity/vehicle/MinecartFurnace blz
	DATA_ID_FUEL e
	INGREDIENT ao
	fuel f
	xPush c
	zPush d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	applyNaturalSlowdown ()V j
	defineSynchedData ()V a_
	destroy (Lnet/minecraft/world/damagesource/DamageSource;)V a
	getDefaultDisplayBlockState ()Lnet/minecraft/world/level/block/state/BlockState; r
	getMaxSpeed ()D h
	getMinecartType ()Lnet/minecraft/world/entity/vehicle/AbstractMinecart$Type; p
	hasFuel ()Z w
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	moveAlongTrack (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V c
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setHasFuel (Z)V p
	tick ()V k
net/minecraft/world/entity/vehicle/MinecartHopper bma
	MOVE_ITEM_SPEED c
	cooldownTime ao
	enabled f
	lastPosition ap
	activateMinecart (IIIZ)V a
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	destroy (Lnet/minecraft/world/damagesource/DamageSource;)V a
	getContainerSize ()I b
	getDefaultDisplayBlockState ()Lnet/minecraft/world/level/block/state/BlockState; r
	getDefaultDisplayOffset ()I t
	getLevelX ()D x
	getLevelY ()D z
	getLevelZ ()D A
	getMinecartType ()Lnet/minecraft/world/entity/vehicle/AbstractMinecart$Type; p
	isEnabled ()Z w
	isOnCooldown ()Z C
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setCooldown (I)V n
	setEnabled (Z)V p
	suckInItems ()Z B
	tick ()V k
net/minecraft/world/entity/vehicle/MinecartSpawner bmb
	spawner c
	ticker d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	createTicker (Lnet/minecraft/world/level/Level;)Ljava/lang/Runnable; a
	getDefaultDisplayBlockState ()Lnet/minecraft/world/level/block/state/BlockState; r
	getMinecartType ()Lnet/minecraft/world/entity/vehicle/AbstractMinecart$Type; p
	getSpawner ()Lnet/minecraft/world/level/BaseSpawner; w
	handleEntityEvent (B)V a
	onlyOpCanSetNbt ()Z cy
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	tick ()V k
net/minecraft/world/entity/vehicle/MinecartTNT bmc
	EVENT_PRIME c
	fuse d
	activateMinecart (IIIZ)V a
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	destroy (Lnet/minecraft/world/damagesource/DamageSource;)V a
	explode (D)V h
	getBlockExplosionResistance (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;F)F a
	getDefaultDisplayBlockState ()Lnet/minecraft/world/level/block/state/BlockState; r
	getFuse ()I x
	getMinecartType ()Lnet/minecraft/world/entity/vehicle/AbstractMinecart$Type; p
	handleEntityEvent (B)V a
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isPrimed ()Z z
	primeFuse ()V w
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	shouldBlockExplode (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;F)Z a
	tick ()V k
net/minecraft/world/food/FoodConstants bme
	EXHAUSTION_ATTACK u
	EXHAUSTION_CROUCH x
	EXHAUSTION_DAMAGE v
	EXHAUSTION_DROP e
	EXHAUSTION_HEAL q
	EXHAUSTION_JUMP r
	EXHAUSTION_MINE t
	EXHAUSTION_SPRINT y
	EXHAUSTION_SPRINT_JUMP s
	EXHAUSTION_SWIM z
	EXHAUSTION_WALK w
	FOOD_SATURATION_GOOD n
	FOOD_SATURATION_LOW l
	FOOD_SATURATION_MAX o
	FOOD_SATURATION_NORMAL m
	FOOD_SATURATION_POOR k
	FOOD_SATURATION_SUPERNATURAL p
	HEALTH_TICK_COUNT f
	HEALTH_TICK_COUNT_SATURATED g
	HEAL_LEVEL h
	MAX_FOOD a
	MAX_SATURATION b
	SATURATION_FLOOR d
	SPRINT_LEVEL i
	START_SATURATION c
	STARVE_LEVEL j
net/minecraft/world/food/FoodData bmf
	exhaustionLevel c
	foodLevel a
	lastFoodLevel e
	saturationLevel b
	tickTimer d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addExhaustion (F)V a
	eat (IF)V a
	eat (Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/ItemStack;)V a
	getExhaustionLevel ()F d
	getFoodLevel ()I a
	getLastFoodLevel ()I b
	getSaturationLevel ()F e
	needsFood ()Z c
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setExhaustion (F)V c
	setFoodLevel (I)V a
	setSaturation (F)V b
	tick (Lnet/minecraft/world/entity/player/Player;)V a
net/minecraft/world/food/FoodProperties bmg
	canAlwaysEat d
	effects f
	fastFood e
	isMeat c
	nutrition a
	saturationModifier b
	canAlwaysEat ()Z d
	getEffects ()Ljava/util/List; f
	getNutrition ()I a
	getSaturationModifier ()F b
	isFastFood ()Z e
	isMeat ()Z c
net/minecraft/world/food/FoodProperties$Builder bmg$a
	canAlwaysEat d
	effects f
	fastFood e
	isMeat c
	nutrition a
	saturationModifier b
	alwaysEat ()Lnet/minecraft/world/food/FoodProperties$Builder; b
	build ()Lnet/minecraft/world/food/FoodProperties; d
	effect (Lnet/minecraft/world/effect/MobEffectInstance;F)Lnet/minecraft/world/food/FoodProperties$Builder; a
	fast ()Lnet/minecraft/world/food/FoodProperties$Builder; c
	meat ()Lnet/minecraft/world/food/FoodProperties$Builder; a
	nutrition (I)Lnet/minecraft/world/food/FoodProperties$Builder; a
	saturationMod (F)Lnet/minecraft/world/food/FoodProperties$Builder; a
net/minecraft/world/food/Foods bmh
	APPLE a
	BAKED_POTATO b
	BEEF c
	BEETROOT d
	BEETROOT_SOUP e
	BREAD f
	CARROT g
	CHICKEN h
	CHORUS_FRUIT i
	COD j
	COOKED_BEEF k
	COOKED_CHICKEN l
	COOKED_COD m
	COOKED_MUTTON n
	COOKED_PORKCHOP o
	COOKED_RABBIT p
	COOKED_SALMON q
	COOKIE r
	DRIED_KELP s
	ENCHANTED_GOLDEN_APPLE t
	GLOW_BERRIES M
	GOLDEN_APPLE u
	GOLDEN_CARROT v
	HONEY_BOTTLE w
	MELON_SLICE x
	MUSHROOM_STEW y
	MUTTON z
	POISONOUS_POTATO A
	PORKCHOP B
	POTATO C
	PUFFERFISH D
	PUMPKIN_PIE E
	RABBIT F
	RABBIT_STEW G
	ROTTEN_FLESH H
	SALMON I
	SPIDER_EYE J
	SUSPICIOUS_STEW K
	SWEET_BERRIES L
	TROPICAL_FISH N
	stew (I)Lnet/minecraft/world/food/FoodProperties$Builder; a
net/minecraft/world/inventory/AbstractContainerMenu bmj
	CARRIED_SLOT_SIZE h
	QUICKCRAFT_HEADER_CONTINUE f
	QUICKCRAFT_HEADER_END g
	QUICKCRAFT_HEADER_START e
	QUICKCRAFT_TYPE_CHARITABLE b
	QUICKCRAFT_TYPE_CLONE d
	QUICKCRAFT_TYPE_GREEDY c
	SLOT_CLICKED_OUTSIDE a
	carried m
	containerId j
	containerListeners u
	dataSlots l
	lastSlots k
	menuType q
	quickcraftSlots t
	quickcraftStatus s
	quickcraftType r
	remoteCarried p
	remoteDataSlots o
	remoteSlots n
	slots i
	suppressRemoteUpdates w
	synchronizer v
	addDataSlot (Lnet/minecraft/world/inventory/DataSlot;)Lnet/minecraft/world/inventory/DataSlot; a
	addDataSlots (Lnet/minecraft/world/inventory/ContainerData;)V a
	addSlot (Lnet/minecraft/world/inventory/Slot;)Lnet/minecraft/world/inventory/Slot; a
	addSlotListener (Lnet/minecraft/world/inventory/ContainerListener;)V a
	broadcastChanges ()V d
	canDragTo (Lnet/minecraft/world/inventory/Slot;)Z b
	canItemQuickReplace (Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/item/ItemStack;Z)Z a
	canTakeItemForPickAll (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z a
	checkContainerDataCount (Lnet/minecraft/world/inventory/ContainerData;I)V a
	checkContainerSize (Lnet/minecraft/world/Container;I)V a
	clearContainer (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/Container;)V a
	clickMenuButton (Lnet/minecraft/world/entity/player/Player;I)Z a
	clicked (IILnet/minecraft/world/inventory/ClickType;Lnet/minecraft/world/entity/player/Player;)V a
	createCarriedSlotAccess ()Lnet/minecraft/world/entity/SlotAccess; j
	doClick (IILnet/minecraft/world/inventory/ClickType;Lnet/minecraft/world/entity/player/Player;)V b
	getCarried ()Lnet/minecraft/world/item/ItemStack; f
	getItems ()Lnet/minecraft/core/NonNullList; c
	getQuickCraftSlotCount (Ljava/util/Set;ILnet/minecraft/world/item/ItemStack;I)V a
	getQuickcraftHeader (I)I c
	getQuickcraftMask (II)I b
	getQuickcraftType (I)I b
	getRedstoneSignalFromBlockEntity (Lnet/minecraft/world/level/block/entity/BlockEntity;)I a
	getRedstoneSignalFromContainer (Lnet/minecraft/world/Container;)I b
	getSlot (I)Lnet/minecraft/world/inventory/Slot; a
	getType ()Lnet/minecraft/world/inventory/MenuType; a
	isValidQuickcraftType (ILnet/minecraft/world/entity/player/Player;)Z a
	moveItemStackTo (Lnet/minecraft/world/item/ItemStack;IIZ)Z a
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	removeSlotListener (Lnet/minecraft/world/inventory/ContainerListener;)V b
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	resetQuickCraft ()V e
	resumeRemoteUpdates ()V h
	sendAllDataToRemote ()V b
	setAll (Ljava/util/List;)V a
	setCarried (Lnet/minecraft/world/item/ItemStack;)V b
	setData (II)V a
	setItem (ILnet/minecraft/world/item/ItemStack;)V b
	setRemoteCarried (Lnet/minecraft/world/item/ItemStack;)V a
	setRemoteSlot (ILnet/minecraft/world/item/ItemStack;)V a
	setSynchronizer (Lnet/minecraft/world/inventory/ContainerSynchronizer;)V a
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	stillValid (Lnet/minecraft/world/inventory/ContainerLevelAccess;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/block/Block;)Z a
	suppressRemoteUpdates ()V g
	synchronizeCarriedToRemote ()V i
	synchronizeDataSlotToRemote (II)V c
	synchronizeSlotToRemote (ILnet/minecraft/world/item/ItemStack;Ljava/util/function/Supplier;)V b
	transferState (Lnet/minecraft/world/inventory/AbstractContainerMenu;)V a
	triggerSlotListeners (ILnet/minecraft/world/item/ItemStack;Ljava/util/function/Supplier;)V a
net/minecraft/world/inventory/AbstractFurnaceMenu bmk
	DATA_COUNT o
	FUEL_SLOT l
	INGREDIENT_SLOT k
	INV_SLOT_END r
	INV_SLOT_START q
	RESULT_SLOT m
	SLOT_COUNT n
	USE_ROW_SLOT_END t
	USE_ROW_SLOT_START s
	container u
	data v
	level p
	recipeBookType x
	recipeType w
	canSmelt (Lnet/minecraft/world/item/ItemStack;)Z c
	clearCraftingContent ()V i
	fillCraftSlotsStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
	getBurnProgress ()I n
	getGridHeight ()I l
	getGridWidth ()I k
	getLitProgress ()I o
	getRecipeBookType ()Lnet/minecraft/world/inventory/RecipeBookType; q
	getResultSlotIndex ()I j
	getSize ()I m
	isFuel (Lnet/minecraft/world/item/ItemStack;)Z d
	isLit ()Z p
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	recipeMatches (Lnet/minecraft/world/item/crafting/Recipe;)Z a
	shouldMoveToInventory (I)Z d
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/AnvilMenu bml
	COST_ADDED_BASE z
	COST_BASE y
	COST_FAIL x
	COST_INCOMPATIBLE_PENALTY C
	COST_RENAME D
	COST_REPAIR_MATERIAL A
	COST_REPAIR_SACRIFICE B
	DEBUG_COST t
	LOGGER s
	MAX_NAME_LENGTH k
	cost w
	itemName v
	repairItemCountCost u
	calculateIncreasedRepairCost (I)I d
	createResult ()V i
	getCost ()I j
	isValidBlock (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	mayPickup (Lnet/minecraft/world/entity/player/Player;Z)Z a
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
	setItemName (Ljava/lang/String;)V a
net/minecraft/world/inventory/BeaconMenu bmm
	DATA_COUNT m
	INV_SLOT_END o
	INV_SLOT_START n
	PAYMENT_SLOT k
	SLOT_COUNT l
	USE_ROW_SLOT_END q
	USE_ROW_SLOT_START p
	access t
	beacon r
	beaconData u
	paymentSlot s
	getLevels ()I i
	getPrimaryEffect ()Lnet/minecraft/world/effect/MobEffect; j
	getSecondaryEffect ()Lnet/minecraft/world/effect/MobEffect; k
	hasPayment ()Z l
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	setData (II)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	updateEffects (II)V c
net/minecraft/world/inventory/BeaconMenu$PaymentSlot bmm$a
	getMaxStackSize ()I a
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/world/inventory/BlastFurnaceMenu bmn
net/minecraft/world/inventory/BrewingStandMenu bmo
	BOTTLE_SLOT_END l
	BOTTLE_SLOT_START k
	DATA_COUNT p
	FUEL_SLOT n
	INGREDIENT_SLOT m
	INV_SLOT_END r
	INV_SLOT_START q
	SLOT_COUNT o
	USE_ROW_SLOT_END t
	USE_ROW_SLOT_START s
	brewingStand u
	brewingStandData v
	ingredientSlot w
	getBrewingTicks ()I j
	getFuel ()I i
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/BrewingStandMenu$FuelSlot bmo$a
	getMaxStackSize ()I a
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
	mayPlaceItem (Lnet/minecraft/world/item/ItemStack;)Z b
net/minecraft/world/inventory/BrewingStandMenu$IngredientsSlot bmo$b
	getMaxStackSize ()I a
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/world/inventory/BrewingStandMenu$PotionSlot bmo$c
	getMaxStackSize ()I a
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
	mayPlaceItem (Lnet/minecraft/world/item/ItemStack;)Z b
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/inventory/CartographyTableMenu bmp
	ADDITIONAL_SLOT l
	INV_SLOT_END p
	INV_SLOT_START o
	MAP_SLOT k
	RESULT_SLOT m
	USE_ROW_SLOT_END r
	USE_ROW_SLOT_START q
	access s
	container n
	lastSoundTime t
	resultContainer u
	canTakeItemForPickAll (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z a
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	setupResultSlot (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V a
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/ChestMenu bmq
	SLOTS_PER_ROW k
	container l
	containerRows m
	fiveRows (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/ChestMenu; e
	fourRows (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/ChestMenu; d
	getContainer ()Lnet/minecraft/world/Container; i
	getRowCount ()I j
	oneRow (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/ChestMenu; a
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	sixRows (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/ChestMenu; f
	sixRows (ILnet/minecraft/world/entity/player/Inventory;Lnet/minecraft/world/Container;)Lnet/minecraft/world/inventory/ChestMenu; b
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	threeRows (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/ChestMenu; c
	threeRows (ILnet/minecraft/world/entity/player/Inventory;Lnet/minecraft/world/Container;)Lnet/minecraft/world/inventory/ChestMenu; a
	twoRows (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/ChestMenu; b
net/minecraft/world/inventory/ClickAction bmr
	$VALUES c
	PRIMARY a
	SECONDARY b
	$values ()[Lnet/minecraft/world/inventory/ClickAction; a
net/minecraft/world/inventory/ClickType bms
	$VALUES h
	CLONE d
	PICKUP a
	PICKUP_ALL g
	QUICK_CRAFT f
	QUICK_MOVE b
	SWAP c
	THROW e
	$values ()[Lnet/minecraft/world/inventory/ClickType; a
net/minecraft/world/inventory/ContainerData bmt
	get (I)I a
	getCount ()I a
	set (II)V a
net/minecraft/world/inventory/ContainerLevelAccess bmu
	NULL a
	create (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/inventory/ContainerLevelAccess; a
	evaluate (Ljava/util/function/BiFunction;)Ljava/util/Optional; a
	evaluate (Ljava/util/function/BiFunction;Ljava/lang/Object;)Ljava/lang/Object; a
	execute (Ljava/util/function/BiConsumer;)V a
net/minecraft/world/inventory/ContainerListener bmv
	dataChanged (Lnet/minecraft/world/inventory/AbstractContainerMenu;II)V a
	slotChanged (Lnet/minecraft/world/inventory/AbstractContainerMenu;ILnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/inventory/ContainerSynchronizer bmw
	sendCarriedChange (Lnet/minecraft/world/inventory/AbstractContainerMenu;Lnet/minecraft/world/item/ItemStack;)V a
	sendDataChange (Lnet/minecraft/world/inventory/AbstractContainerMenu;II)V a
	sendInitialData (Lnet/minecraft/world/inventory/AbstractContainerMenu;Lnet/minecraft/core/NonNullList;Lnet/minecraft/world/item/ItemStack;[I)V a
	sendSlotChange (Lnet/minecraft/world/inventory/AbstractContainerMenu;ILnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/inventory/CraftingContainer bmx
	height d
	items b
	menu e
	width c
	clearContent ()V a
	fillStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
	getContainerSize ()I b
	getHeight ()I f
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getWidth ()I g
	isEmpty ()Z c
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	setChanged ()V e
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/CraftingMenu bmy
	CRAFT_SLOT_END m
	CRAFT_SLOT_START l
	INV_SLOT_END o
	INV_SLOT_START n
	RESULT_SLOT k
	USE_ROW_SLOT_END q
	USE_ROW_SLOT_START p
	access t
	craftSlots r
	player u
	resultSlots s
	canTakeItemForPickAll (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z a
	clearCraftingContent ()V i
	fillCraftSlotsStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
	getGridHeight ()I l
	getGridWidth ()I k
	getRecipeBookType ()Lnet/minecraft/world/inventory/RecipeBookType; q
	getResultSlotIndex ()I j
	getSize ()I m
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	recipeMatches (Lnet/minecraft/world/item/crafting/Recipe;)Z a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	shouldMoveToInventory (I)Z d
	slotChangedCraftingGrid (Lnet/minecraft/world/inventory/AbstractContainerMenu;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/inventory/ResultContainer;)V a
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/DataSlot bmz
	prevValue a
	checkAndClearUpdateFlag ()Z c
	forContainer (Lnet/minecraft/world/inventory/ContainerData;I)Lnet/minecraft/world/inventory/DataSlot; a
	get ()I b
	set (I)V a
	shared ([II)Lnet/minecraft/world/inventory/DataSlot; a
	standalone ()Lnet/minecraft/world/inventory/DataSlot; a
net/minecraft/world/inventory/DispenserMenu bna
	INV_SLOT_END m
	INV_SLOT_START l
	SLOT_COUNT k
	USE_ROW_SLOT_END o
	USE_ROW_SLOT_START n
	dispenser p
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/EnchantmentMenu bnb
	access o
	costs k
	enchantClue l
	enchantSlots n
	enchantmentSeed q
	levelClue m
	random p
	clickMenuButton (Lnet/minecraft/world/entity/player/Player;I)Z a
	getEnchantmentList (Lnet/minecraft/world/item/ItemStack;II)Ljava/util/List; a
	getEnchantmentSeed ()I j
	getGoldCount ()I i
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/FurnaceFuelSlot bnc
	menu a
	getMaxStackSize (Lnet/minecraft/world/item/ItemStack;)I a_
	isBucket (Lnet/minecraft/world/item/ItemStack;)Z c
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/world/inventory/FurnaceMenu bnd
net/minecraft/world/inventory/FurnaceResultSlot bne
	player a
	removeCount b
	checkTakeAchievements (Lnet/minecraft/world/item/ItemStack;)V b_
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
	onQuickCraft (Lnet/minecraft/world/item/ItemStack;I)V a
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
	remove (I)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/inventory/GrindstoneMenu bnf
	ADDITIONAL_SLOT m
	INPUT_SLOT l
	INV_SLOT_END p
	INV_SLOT_START o
	MAX_NAME_LENGTH k
	RESULT_SLOT n
	USE_ROW_SLOT_END r
	USE_ROW_SLOT_START q
	access u
	repairSlots t
	resultSlots s
	createResult ()V i
	mergeEnchants (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	removeNonCurses (Lnet/minecraft/world/item/ItemStack;II)Lnet/minecraft/world/item/ItemStack; a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/HopperMenu bng
	CONTAINER_SIZE k
	hopper l
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/HorseInventoryMenu bnh
	horse l
	horseContainer k
	hasChest (Lnet/minecraft/world/entity/animal/horse/AbstractHorse;)Z a
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/InventoryMenu bni
	ARMOR_SLOT_END p
	ARMOR_SLOT_START o
	BLOCK_ATLAS v
	CONTAINER_ID k
	CRAFT_SLOT_END n
	CRAFT_SLOT_START m
	EMPTY_ARMOR_SLOT_BOOTS z
	EMPTY_ARMOR_SLOT_CHESTPLATE x
	EMPTY_ARMOR_SLOT_HELMET w
	EMPTY_ARMOR_SLOT_LEGGINGS y
	EMPTY_ARMOR_SLOT_SHIELD A
	INV_SLOT_END r
	INV_SLOT_START q
	RESULT_SLOT l
	SHIELD_SLOT u
	SLOT_IDS D
	TEXTURE_EMPTY_SLOTS C
	USE_ROW_SLOT_END t
	USE_ROW_SLOT_START s
	active B
	craftSlots E
	owner G
	resultSlots F
	canTakeItemForPickAll (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z a
	clearCraftingContent ()V i
	fillCraftSlotsStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
	getCraftSlots ()Lnet/minecraft/world/inventory/CraftingContainer; n
	getGridHeight ()I l
	getGridWidth ()I k
	getRecipeBookType ()Lnet/minecraft/world/inventory/RecipeBookType; q
	getResultSlotIndex ()I j
	getSize ()I m
	isHotbarSlot (I)Z e
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	recipeMatches (Lnet/minecraft/world/item/crafting/Recipe;)Z a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	shouldMoveToInventory (I)Z d
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/ItemCombinerMenu bnj
	ADDITIONAL_SLOT m
	INPUT_SLOT l
	INV_SLOT_END s
	INV_SLOT_START k
	RESULT_SLOT n
	USE_ROW_SLOT_END u
	USE_ROW_SLOT_START t
	access q
	inputSlots p
	player r
	resultSlots o
	createResult ()V i
	isValidBlock (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	mayPickup (Lnet/minecraft/world/entity/player/Player;Z)Z a
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	shouldQuickMoveToAdditionalSlot (Lnet/minecraft/world/item/ItemStack;)Z c
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/LecternMenu bnk
	BUTTON_NEXT_PAGE l
	BUTTON_PAGE_JUMP_RANGE_START n
	BUTTON_PREV_PAGE k
	BUTTON_TAKE_BOOK m
	DATA_COUNT o
	SLOT_COUNT p
	lectern q
	lecternData r
	clickMenuButton (Lnet/minecraft/world/entity/player/Player;I)Z a
	getBook ()Lnet/minecraft/world/item/ItemStack; i
	getPage ()I j
	setData (II)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/LoomMenu bnl
	INV_SLOT_END l
	INV_SLOT_START k
	USE_ROW_SLOT_END n
	USE_ROW_SLOT_START m
	access o
	bannerSlot r
	dyeSlot s
	inputContainer w
	lastSoundTime v
	outputContainer x
	patternSlot t
	resultSlot u
	selectedBannerPatternIndex p
	slotUpdateListener q
	clickMenuButton (Lnet/minecraft/world/entity/player/Player;I)Z a
	getBannerSlot ()Lnet/minecraft/world/inventory/Slot; j
	getDyeSlot ()Lnet/minecraft/world/inventory/Slot; k
	getPatternSlot ()Lnet/minecraft/world/inventory/Slot; l
	getResultSlot ()Lnet/minecraft/world/inventory/Slot; m
	getSelectedBannerPatternIndex ()I i
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	registerUpdateListener (Ljava/lang/Runnable;)V a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	setupResultSlot ()V n
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/MenuConstructor bnm
net/minecraft/world/inventory/MenuType bnn
	ANVIL h
	BEACON i
	BLAST_FURNACE j
	BREWING_STAND k
	CARTOGRAPHY_TABLE w
	CRAFTING l
	ENCHANTMENT m
	FURNACE n
	GENERIC_3x3 g
	GENERIC_9x1 a
	GENERIC_9x2 b
	GENERIC_9x3 c
	GENERIC_9x4 d
	GENERIC_9x5 e
	GENERIC_9x6 f
	GRINDSTONE o
	HOPPER p
	LECTERN q
	LOOM r
	MERCHANT s
	SHULKER_BOX t
	SMITHING u
	SMOKER v
	STONECUTTER x
	constructor y
	create (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	register (Ljava/lang/String;Lnet/minecraft/world/inventory/MenuType$MenuSupplier;)Lnet/minecraft/world/inventory/MenuType; a
net/minecraft/world/inventory/MenuType$MenuSupplier bnn$a
net/minecraft/world/inventory/MerchantContainer bno
	activeOffer d
	futureXp f
	itemStacks c
	merchant b
	selectionHint e
	clearContent ()V a
	getActiveOffer ()Lnet/minecraft/world/item/trading/MerchantOffer; g
	getContainerSize ()I b
	getFutureXp ()I h
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	isEmpty ()Z c
	isPaymentSlot (I)Z d
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	setChanged ()V e
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	setSelectionHint (I)V c
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	updateSellItem ()V f
net/minecraft/world/inventory/MerchantMenu bnp
	BUYSLOT_X t
	INV_SLOT_END o
	INV_SLOT_START n
	PAYMENT1_SLOT k
	PAYMENT2_SLOT l
	RESULT_SLOT m
	ROW_Y u
	SELLSLOT1_X r
	SELLSLOT2_X s
	USE_ROW_SLOT_END q
	USE_ROW_SLOT_START p
	canRestock z
	merchantLevel x
	showProgressBar y
	tradeContainer w
	trader v
	canRestock ()Z l
	canTakeItemForPickAll (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z a
	getFutureTraderXp ()I j
	getOffers ()Lnet/minecraft/world/item/trading/MerchantOffers; m
	getTraderLevel ()I k
	getTraderXp ()I i
	moveFromInventoryToPaymentSlot (ILnet/minecraft/world/item/ItemStack;)V c
	playTradeSound ()V o
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	setCanRestock (Z)V b
	setMerchantLevel (I)V f
	setOffers (Lnet/minecraft/world/item/trading/MerchantOffers;)V a
	setSelectionHint (I)V d
	setShowProgressBar (Z)V a
	setXp (I)V e
	showProgressBar ()Z n
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	tryMoveItems (I)V g
net/minecraft/world/inventory/MerchantResultSlot bnq
	merchant h
	player b
	removeCount g
	slots a
	checkTakeAchievements (Lnet/minecraft/world/item/ItemStack;)V b_
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
	onQuickCraft (Lnet/minecraft/world/item/ItemStack;I)V a
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
	remove (I)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/inventory/PlayerEnderChestContainer bnr
	activeChest b
	createTag ()Lnet/minecraft/nbt/ListTag; g
	fromTag (Lnet/minecraft/nbt/ListTag;)V a
	isActiveChest (Lnet/minecraft/world/level/block/entity/EnderChestBlockEntity;)Z b
	setActiveChest (Lnet/minecraft/world/level/block/entity/EnderChestBlockEntity;)V a
	startOpen (Lnet/minecraft/world/entity/player/Player;)V b_
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	stopOpen (Lnet/minecraft/world/entity/player/Player;)V c_
net/minecraft/world/inventory/RecipeBookMenu bns
	clearCraftingContent ()V i
	fillCraftSlotsStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
	getGridHeight ()I l
	getGridWidth ()I k
	getRecipeBookType ()Lnet/minecraft/world/inventory/RecipeBookType; q
	getResultSlotIndex ()I j
	getSize ()I m
	handlePlacement (ZLnet/minecraft/world/item/crafting/Recipe;Lnet/minecraft/server/level/ServerPlayer;)V a
	recipeMatches (Lnet/minecraft/world/item/crafting/Recipe;)Z a
	shouldMoveToInventory (I)Z d
net/minecraft/world/inventory/RecipeBookType bnt
	$VALUES e
	BLAST_FURNACE c
	CRAFTING a
	FURNACE b
	SMOKER d
	$values ()[Lnet/minecraft/world/inventory/RecipeBookType; a
net/minecraft/world/inventory/RecipeHolder bnu
	awardUsedRecipes (Lnet/minecraft/world/entity/player/Player;)V b
	getRecipeUsed ()Lnet/minecraft/world/item/crafting/Recipe; d
	setRecipeUsed (Lnet/minecraft/world/item/crafting/Recipe;)V a
	setRecipeUsed (Lnet/minecraft/world/level/Level;Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/crafting/Recipe;)Z a
net/minecraft/world/inventory/ResultContainer bnv
	itemStacks b
	recipeUsed c
	clearContent ()V a
	getContainerSize ()I b
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getRecipeUsed ()Lnet/minecraft/world/item/crafting/Recipe; d
	isEmpty ()Z c
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	setChanged ()V e
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	setRecipeUsed (Lnet/minecraft/world/item/crafting/Recipe;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/ResultSlot bnw
	craftSlots a
	player b
	removeCount g
	checkTakeAchievements (Lnet/minecraft/world/item/ItemStack;)V b_
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
	onQuickCraft (Lnet/minecraft/world/item/ItemStack;I)V a
	onSwapCraft (I)V b
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
	remove (I)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/inventory/ShulkerBoxMenu bnx
	CONTAINER_SIZE k
	container l
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/ShulkerBoxSlot bny
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/world/inventory/SimpleContainerData bnz
	ints a
	get (I)I a
	getCount ()I a
	set (II)V a
net/minecraft/world/inventory/Slot boa
	container c
	index d
	slot a
	x e
	y f
	allowModification (Lnet/minecraft/world/entity/player/Player;)Z b
	checkTakeAchievements (Lnet/minecraft/world/item/ItemStack;)V b_
	getContainerSlot ()I g
	getItem ()Lnet/minecraft/world/item/ItemStack; e
	getMaxStackSize ()I a
	getMaxStackSize (Lnet/minecraft/world/item/ItemStack;)I a_
	getNoItemIcon ()Lcom/mojang/datafixers/util/Pair; c
	hasItem ()Z f
	isActive ()Z b
	mayPickup (Lnet/minecraft/world/entity/player/Player;)Z a
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
	onQuickCraft (Lnet/minecraft/world/item/ItemStack;I)V a
	onQuickCraft (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V a
	onSwapCraft (I)V b
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
	remove (I)Lnet/minecraft/world/item/ItemStack; a
	safeInsert (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; e
	safeInsert (Lnet/minecraft/world/item/ItemStack;I)Lnet/minecraft/world/item/ItemStack; b
	safeTake (IILnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/item/ItemStack; b
	set (Lnet/minecraft/world/item/ItemStack;)V d
	setChanged ()V d
	tryRemove (IILnet/minecraft/world/entity/player/Player;)Ljava/util/Optional; a
net/minecraft/world/inventory/SmithingMenu bob
	level k
	recipes t
	selectedRecipe s
	canTakeItemForPickAll (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z a
	createResult ()V i
	isValidBlock (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	mayPickup (Lnet/minecraft/world/entity/player/Player;Z)Z a
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
	shouldQuickMoveToAdditionalSlot (Lnet/minecraft/world/item/ItemStack;)Z c
	shrinkStackInSlot (I)V d
net/minecraft/world/inventory/SmokerMenu boc
net/minecraft/world/inventory/StackedContentsCompatible bod
	fillStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
net/minecraft/world/inventory/StonecutterMenu boe
	INPUT_SLOT k
	INV_SLOT_END q
	INV_SLOT_START p
	RESULT_SLOT l
	USE_ROW_SLOT_END s
	USE_ROW_SLOT_START r
	access t
	container o
	input x
	inputSlot m
	lastSoundTime y
	level v
	recipes w
	resultContainer A
	resultSlot n
	selectedRecipeIndex u
	slotUpdateListener z
	canTakeItemForPickAll (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z a
	clickMenuButton (Lnet/minecraft/world/entity/player/Player;I)Z a
	getNumRecipes ()I k
	getRecipes ()Ljava/util/List; j
	getSelectedRecipeIndex ()I i
	getType ()Lnet/minecraft/world/inventory/MenuType; a
	hasInputItem ()Z l
	isValidRecipeIndex (I)Z d
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	registerUpdateListener (Ljava/lang/Runnable;)V a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	setupRecipeList (Lnet/minecraft/world/Container;Lnet/minecraft/world/item/ItemStack;)V a
	setupResultSlot ()V m
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/tooltip/BundleTooltip bog
	items a
	weight b
	getItems ()Lnet/minecraft/core/NonNullList; a
	getWeight ()I b
net/minecraft/world/inventory/tooltip/TooltipComponent boh
net/minecraft/world/item/AirItem boj
	block a
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	getDescriptionId ()Ljava/lang/String; a
net/minecraft/world/item/ArmorItem bok
	ARMOR_MODIFIER_UUID_PER_SLOT e
	DISPENSE_ITEM_BEHAVIOR a
	defaultModifiers h
	defense f
	knockbackResistance c
	material d
	slot b
	toughness g
	dispenseArmor (Lnet/minecraft/core/BlockSource;Lnet/minecraft/world/item/ItemStack;)Z a
	getDefaultAttributeModifiers (Lnet/minecraft/world/entity/EquipmentSlot;)Lcom/google/common/collect/Multimap; a
	getDefense ()I e
	getEnchantmentValue ()I c
	getEquipSound ()Lnet/minecraft/sounds/SoundEvent; g
	getMaterial ()Lnet/minecraft/world/item/ArmorMaterial; d
	getSlot ()Lnet/minecraft/world/entity/EquipmentSlot; b
	getToughness ()F f
	isValidRepairItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/ArmorMaterial bol
	getDefenseForSlot (Lnet/minecraft/world/entity/EquipmentSlot;)I b
	getDurabilityForSlot (Lnet/minecraft/world/entity/EquipmentSlot;)I a
	getEnchantmentValue ()I a
	getEquipSound ()Lnet/minecraft/sounds/SoundEvent; b
	getKnockbackResistance ()F f
	getName ()Ljava/lang/String; d
	getRepairIngredient ()Lnet/minecraft/world/item/crafting/Ingredient; c
	getToughness ()F e
net/minecraft/world/item/ArmorMaterials bom
	$VALUES q
	CHAIN b
	DIAMOND e
	GOLD d
	HEALTH_PER_SLOT h
	IRON c
	LEATHER a
	NETHERITE g
	TURTLE f
	durabilityMultiplier j
	enchantmentValue l
	knockbackResistance o
	name i
	repairIngredient p
	slotProtections k
	sound m
	toughness n
	$values ()[Lnet/minecraft/world/item/ArmorMaterials; n
	getDefenseForSlot (Lnet/minecraft/world/entity/EquipmentSlot;)I b
	getDurabilityForSlot (Lnet/minecraft/world/entity/EquipmentSlot;)I a
	getEnchantmentValue ()I a
	getEquipSound ()Lnet/minecraft/sounds/SoundEvent; b
	getKnockbackResistance ()F f
	getName ()Ljava/lang/String; d
	getRepairIngredient ()Lnet/minecraft/world/item/crafting/Ingredient; c
	getToughness ()F e
net/minecraft/world/item/ArmorStandItem bon
	randomizePose (Lnet/minecraft/world/entity/decoration/ArmorStand;Ljava/util/Random;)V a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/ArrowItem boo
	createArrow (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/projectile/AbstractArrow; a
net/minecraft/world/item/AxeItem bop
	STRIPPABLES a
	getStripped (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/util/Optional; b
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/BannerItem boq
	PATTERN_PREFIX c
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	appendHoverTextFromBannerBlockEntityTag (Lnet/minecraft/world/item/ItemStack;Ljava/util/List;)V a
	getColor ()Lnet/minecraft/world/item/DyeColor; b
net/minecraft/world/item/BannerPatternItem bor
	bannerPattern a
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	getBannerPattern ()Lnet/minecraft/world/level/block/entity/BannerPattern; b
	getDisplayName ()Lnet/minecraft/network/chat/MutableComponent; d
net/minecraft/world/item/BedItem bos
	placeBlock (Lnet/minecraft/world/item/context/BlockPlaceContext;Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/item/BlockItem bot
	BLOCK_ENTITY_TAG a
	BLOCK_STATE_TAG b
	block c
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	canFitInsideContainerItems ()Z P_
	canPlace (Lnet/minecraft/world/item/context/BlockPlaceContext;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	fillItemCategory (Lnet/minecraft/world/item/CreativeModeTab;Lnet/minecraft/core/NonNullList;)V a
	getBlock ()Lnet/minecraft/world/level/block/Block; e
	getDescriptionId ()Ljava/lang/String; a
	getPlaceSound (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/sounds/SoundEvent; a
	getPlacementState (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; c
	mustSurvive ()Z d
	onDestroyed (Lnet/minecraft/world/entity/item/ItemEntity;)V a
	place (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/InteractionResult; a
	placeBlock (Lnet/minecraft/world/item/context/BlockPlaceContext;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	registerBlocks (Ljava/util/Map;Lnet/minecraft/world/item/Item;)V a
	updateBlockStateFromTag (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateCustomBlockEntityTag (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	updateCustomBlockEntityTag (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)Z a
	updatePlacementContext (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/item/context/BlockPlaceContext; b
	updateState (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/String;)Lnet/minecraft/world/level/block/state/BlockState; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/BoatItem bou
	ENTITY_PREDICATE a
	type b
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/BoneMealItem bov
	GRASS_COUNT_MULTIPLIER c
	GRASS_SPREAD_HEIGHT b
	GRASS_SPREAD_WIDTH a
	addGrowthParticles (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;I)V a
	growCrop (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z a
	growWaterPlant (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/BookItem bow
	getEnchantmentValue ()I c
	isEnchantable (Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/world/item/BottleItem box
	turnBottleIntoItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/BowItem boy
	DEFAULT_RANGE b
	MAX_DRAW_DURATION a
	getAllSupportedProjectiles ()Ljava/util/function/Predicate; b
	getDefaultProjectileRange ()I d
	getPowerForTime (I)F a
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; c
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I b
	releaseUsing (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;I)V a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/BowlFoodItem boz
	finishUsingItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/item/BucketItem bpa
	content a
	checkExtraContent (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPos;)V a
	emptyContents (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/BlockHitResult;)Z a
	getEmptySuccessItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/item/ItemStack; a
	playEmptySound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/BundleItem bpb
	BAR_COLOR d
	BUNDLE_IN_BUNDLE_WEIGHT c
	MAX_WEIGHT a
	TAG_ITEMS b
	add (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)I b
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	dropContents (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;)Z a
	getBarColor (Lnet/minecraft/world/item/ItemStack;)I g
	getBarWidth (Lnet/minecraft/world/item/ItemStack;)I f
	getContentWeight (Lnet/minecraft/world/item/ItemStack;)I o
	getContents (Lnet/minecraft/world/item/ItemStack;)Ljava/util/stream/Stream; q
	getFullnessDisplay (Lnet/minecraft/world/item/ItemStack;)F d
	getMatchingItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/nbt/ListTag;)Ljava/util/Optional; a
	getTooltipImage (Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; h
	getWeight (Lnet/minecraft/world/item/ItemStack;)I k
	isBarVisible (Lnet/minecraft/world/item/ItemStack;)Z e
	onDestroyed (Lnet/minecraft/world/entity/item/ItemEntity;)V a
	overrideOtherStackedOnMe (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/inventory/ClickAction;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/SlotAccess;)Z a
	overrideStackedOnOther (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/inventory/ClickAction;Lnet/minecraft/world/entity/player/Player;)Z a
	removeOne (Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; p
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/ChorusFruitItem bpc
	finishUsingItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/item/CompassItem bpd
	LOGGER d
	TAG_LODESTONE_DIMENSION b
	TAG_LODESTONE_POS a
	TAG_LODESTONE_TRACKED c
	addLodestoneTags (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/BlockPos;Lnet/minecraft/nbt/CompoundTag;)V a
	getDescriptionId (Lnet/minecraft/world/item/ItemStack;)Ljava/lang/String; j
	getLodestoneDimension (Lnet/minecraft/nbt/CompoundTag;)Ljava/util/Optional; a
	inventoryTick (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;IZ)V a
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z i
	isLodestoneCompass (Lnet/minecraft/world/item/ItemStack;)Z d
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/ComplexItem bpe
	getUpdatePacket (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/network/protocol/Packet; a
	isComplex ()Z M_
net/minecraft/world/item/CreativeModeTab bpf
	TABS a
	TAB_BREWING k
	TAB_BUILDING_BLOCKS b
	TAB_COMBAT j
	TAB_DECORATIONS c
	TAB_FOOD h
	TAB_HOTBAR m
	TAB_INVENTORY n
	TAB_MATERIALS l
	TAB_MISC f
	TAB_REDSTONE d
	TAB_SEARCH g
	TAB_TOOLS i
	TAB_TRANSPORTATION e
	backgroundSuffix s
	canScroll t
	displayName q
	enchantmentCategories v
	iconItemStack w
	id o
	langId p
	recipeFolderName r
	showTitle u
	canScroll ()Z i
	fillItemList (Lnet/minecraft/core/NonNullList;)V a
	getBackgroundSuffix ()Ljava/lang/String; f
	getColumn ()I k
	getDisplayName ()Lnet/minecraft/network/chat/Component; c
	getEnchantmentCategories ()[Lnet/minecraft/world/item/enchantment/EnchantmentCategory; n
	getIconItem ()Lnet/minecraft/world/item/ItemStack; d
	getId ()I a
	getRecipeFolderName ()Ljava/lang/String; b
	hasEnchantmentCategory (Lnet/minecraft/world/item/enchantment/EnchantmentCategory;)Z a
	hideScroll ()Lnet/minecraft/world/item/CreativeModeTab; j
	hideTitle ()Lnet/minecraft/world/item/CreativeModeTab; h
	isAlignedRight ()Z m
	isTopRow ()Z l
	makeIcon ()Lnet/minecraft/world/item/ItemStack; e
	setBackgroundSuffix (Ljava/lang/String;)Lnet/minecraft/world/item/CreativeModeTab; a
	setEnchantmentCategories ([Lnet/minecraft/world/item/enchantment/EnchantmentCategory;)Lnet/minecraft/world/item/CreativeModeTab; a
	setRecipeFolderName (Ljava/lang/String;)Lnet/minecraft/world/item/CreativeModeTab; b
	showTitle ()Z g
net/minecraft/world/item/CrossbowItem bpg
	ARROW_POWER r
	DEFAULT_RANGE a
	FIREWORK_POWER s
	MAX_CHARGE_DURATION f
	MID_SOUND_PERCENT j
	START_SOUND_PERCENT i
	TAG_CHARGED b
	TAG_CHARGED_PROJECTILES e
	midLoadSoundPlayed h
	startSoundPlayed g
	addChargedProjectile (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V b
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	clearChargedProjectiles (Lnet/minecraft/world/item/ItemStack;)V q
	containsChargedProjectile (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/Item;)Z a
	getAllSupportedProjectiles ()Ljava/util/function/Predicate; b
	getArrow (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/entity/projectile/AbstractArrow; a
	getChargeDuration (Lnet/minecraft/world/item/ItemStack;)I k
	getChargedProjectiles (Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; p
	getDefaultProjectileRange ()I d
	getPowerForTime (ILnet/minecraft/world/item/ItemStack;)F a
	getRandomShotPitch (ZLjava/util/Random;)F a
	getShootingPower (Lnet/minecraft/world/item/ItemStack;)F o
	getShotPitches (Ljava/util/Random;)[F a
	getStartSound (I)Lnet/minecraft/sounds/SoundEvent; a
	getSupportedHeldProjectiles ()Ljava/util/function/Predicate; e
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; c
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I b
	isCharged (Lnet/minecraft/world/item/ItemStack;)Z d
	loadProjectile (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;ZZ)Z a
	onCrossbowShot (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	onUseTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;I)V a
	performShooting (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/item/ItemStack;FF)V a
	releaseUsing (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;I)V a
	setCharged (Lnet/minecraft/world/item/ItemStack;Z)V a
	shootProjectile (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;FZFFF)V a
	tryLoadProjectiles (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)Z a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOnRelease (Lnet/minecraft/world/item/ItemStack;)Z l
net/minecraft/world/item/DebugStickItem bph
	canAttackBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)Z a
	cycleState (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/properties/Property;Z)Lnet/minecraft/world/level/block/state/BlockState; a
	getNameHelper (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/properties/Property;)Ljava/lang/String; a
	getRelative (Ljava/lang/Iterable;Ljava/lang/Object;Z)Ljava/lang/Object; a
	handleInteraction (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/item/ItemStack;)Z a
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z i
	message (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/network/chat/Component;)V a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/DiggerItem bpi
	attackDamageBaseline c
	blocks a
	defaultModifiers d
	speed b
	getAttackDamage ()F d
	getDefaultAttributeModifiers (Lnet/minecraft/world/entity/EquipmentSlot;)Lcom/google/common/collect/Multimap; a
	getDestroySpeed (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/BlockState;)F a
	hurtEnemy (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
	isCorrectToolForDrops (Lnet/minecraft/world/level/block/state/BlockState;)Z a_
	mineBlock (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/item/DispensibleContainerItem bpj
	checkExtraContent (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPos;)V a
	emptyContents (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/BlockHitResult;)Z a
net/minecraft/world/item/DoubleHighBlockItem bpk
	placeBlock (Lnet/minecraft/world/item/context/BlockPlaceContext;Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/item/DyeColor bpl
	$VALUES y
	BLACK p
	BLUE l
	BROWN m
	BY_FIREWORK_COLOR r
	BY_ID q
	CYAN j
	GRAY h
	GREEN n
	LIGHT_BLUE d
	LIGHT_GRAY i
	LIME f
	MAGENTA c
	ORANGE b
	PINK g
	PURPLE k
	RED o
	WHITE a
	YELLOW e
	color u
	fireworkColor w
	id s
	name t
	textColor x
	textureDiffuseColors v
	$values ()[Lnet/minecraft/world/item/DyeColor; h
	byFireworkColor (I)Lnet/minecraft/world/item/DyeColor; b
	byId (I)Lnet/minecraft/world/item/DyeColor; a
	byName (Ljava/lang/String;Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/item/DyeColor; a
	getFireworkColor ()I f
	getId ()I a
	getMaterialColor ()Lnet/minecraft/world/level/material/MaterialColor; e
	getName ()Ljava/lang/String; b
	getSerializedName ()Ljava/lang/String; c
	getTextColor ()I g
	getTextureDiffuseColors ()[F d
net/minecraft/world/item/DyeItem bpm
	ITEM_BY_COLOR a
	dyeColor b
	byColor (Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/item/DyeItem; a
	getDyeColor ()Lnet/minecraft/world/item/DyeColor; d
	interactLivingEntity (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/DyeableArmorItem bpn
net/minecraft/world/item/DyeableHorseArmorItem bpo
net/minecraft/world/item/DyeableLeatherItem bpp
	DEFAULT_LEATHER_COLOR n_
	TAG_COLOR l_
	TAG_DISPLAY m_
	clearColor (Lnet/minecraft/world/item/ItemStack;)V e_
	dyeArmor (Lnet/minecraft/world/item/ItemStack;Ljava/util/List;)Lnet/minecraft/world/item/ItemStack; a
	getColor (Lnet/minecraft/world/item/ItemStack;)I d_
	hasCustomColor (Lnet/minecraft/world/item/ItemStack;)Z c_
	setColor (Lnet/minecraft/world/item/ItemStack;I)V a
net/minecraft/world/item/EggItem bpq
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/ElytraItem bpr
	getEquipSound ()Lnet/minecraft/sounds/SoundEvent; g
	isFlyEnabled (Lnet/minecraft/world/item/ItemStack;)Z d
	isValidRepairItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/EmptyMapItem bps
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/EnchantedBookItem bpt
	TAG_STORED_ENCHANTMENTS a
	addEnchantment (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/enchantment/EnchantmentInstance;)V a
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	createForEnchantment (Lnet/minecraft/world/item/enchantment/EnchantmentInstance;)Lnet/minecraft/world/item/ItemStack; a
	fillItemCategory (Lnet/minecraft/world/item/CreativeModeTab;Lnet/minecraft/core/NonNullList;)V a
	getEnchantments (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/nbt/ListTag; d
	isEnchantable (Lnet/minecraft/world/item/ItemStack;)Z a
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z i
net/minecraft/world/item/EnchantedGoldenAppleItem bpu
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z i
net/minecraft/world/item/EndCrystalItem bpv
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z i
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/EnderEyeItem bpw
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/EnderpearlItem bpx
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/ExperienceBottleItem bpy
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z i
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/FireChargeItem bpz
	playSound (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/FireworkRocketItem bqa
	ROCKET_PLACEMENT_OFFSET j
	TAG_EXPLOSION b
	TAG_EXPLOSIONS c
	TAG_EXPLOSION_COLORS h
	TAG_EXPLOSION_FADECOLORS i
	TAG_EXPLOSION_FLICKER g
	TAG_EXPLOSION_TRAIL f
	TAG_EXPLOSION_TYPE e
	TAG_FIREWORKS a
	TAG_FLIGHT d
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	getDefaultInstance ()Lnet/minecraft/world/item/ItemStack; N_
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/FireworkRocketItem$Shape bqa$a
	$VALUES i
	BURST e
	BY_ID f
	CREEPER d
	LARGE_BALL b
	SMALL_BALL a
	STAR c
	id g
	name h
	$values ()[Lnet/minecraft/world/item/FireworkRocketItem$Shape; c
	byId (I)Lnet/minecraft/world/item/FireworkRocketItem$Shape; a
	getId ()I a
	getName ()Ljava/lang/String; b
net/minecraft/world/item/FireworkStarItem bqb
	appendColors (Lnet/minecraft/network/chat/MutableComponent;[I)Lnet/minecraft/network/chat/Component; a
	appendHoverText (Lnet/minecraft/nbt/CompoundTag;Ljava/util/List;)V a
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	getColorName (I)Lnet/minecraft/network/chat/Component; a
net/minecraft/world/item/FishingRodItem bqc
	getEnchantmentValue ()I c
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/FlintAndSteelItem bqd
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/FoodOnAStickItem bqe
	canInteractWith a
	consumeItemDamage b
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/GameMasterBlockItem bqf
	getPlacementState (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; c
net/minecraft/world/item/HangingEntityItem bqg
	type a
	mayPlace (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/Direction;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPos;)Z a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/HoeItem bqh
	TILLABLES a
	changeIntoState (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/util/function/Consumer; b
	changeIntoStateAndDropItem (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/ItemLike;)Ljava/util/function/Consumer; a
	onlyIfAirAbove (Lnet/minecraft/world/item/context/UseOnContext;)Z b
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/HoneyBottleItem bqi
	DRINK_DURATION a
	finishUsingItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/item/ItemStack; a
	getDrinkingSound ()Lnet/minecraft/sounds/SoundEvent; O_
	getEatingSound ()Lnet/minecraft/sounds/SoundEvent; h
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; c
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I b
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/HoneycombItem bqj
	WAXABLES a
	WAX_OFF_BY_BLOCK b
	getWaxed (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/util/Optional; b
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/HorseArmorItem bqk
	TEX_FOLDER a
	protection b
	texture c
	getProtection ()I j
	getTexture ()Lnet/minecraft/resources/ResourceLocation; i
net/minecraft/world/item/Item bql
	BASE_ATTACK_DAMAGE_UUID l
	BASE_ATTACK_SPEED_UUID m
	BY_BLOCK k
	EAT_DURATION o
	LOGGER a
	MAX_BAR_WIDTH p
	MAX_STACK_SIZE n
	category q
	craftingRemainingItem f
	descriptionId g
	foodProperties h
	isFireResistant e
	maxDamage d
	maxStackSize c
	rarity b
	allowdedIn (Lnet/minecraft/world/item/CreativeModeTab;)Z a
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	asItem ()Lnet/minecraft/world/item/Item; k
	byBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/item/Item; a
	byId (I)Lnet/minecraft/world/item/Item; b
	canAttackBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)Z a
	canBeDepleted ()Z n
	canBeHurtBy (Lnet/minecraft/world/damagesource/DamageSource;)Z a
	canFitInsideContainerItems ()Z P_
	fillItemCategory (Lnet/minecraft/world/item/CreativeModeTab;Lnet/minecraft/core/NonNullList;)V a
	finishUsingItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/item/ItemStack; a
	getBarColor (Lnet/minecraft/world/item/ItemStack;)I g
	getBarWidth (Lnet/minecraft/world/item/ItemStack;)I f
	getCraftingRemainingItem ()Lnet/minecraft/world/item/Item; r
	getDefaultAttributeModifiers (Lnet/minecraft/world/entity/EquipmentSlot;)Lcom/google/common/collect/Multimap; a
	getDefaultInstance ()Lnet/minecraft/world/item/ItemStack; N_
	getDescription ()Lnet/minecraft/network/chat/Component; o
	getDescriptionId ()Ljava/lang/String; a
	getDescriptionId (Lnet/minecraft/world/item/ItemStack;)Ljava/lang/String; j
	getDestroySpeed (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/BlockState;)F a
	getDrinkingSound ()Lnet/minecraft/sounds/SoundEvent; O_
	getEatingSound ()Lnet/minecraft/sounds/SoundEvent; h
	getEnchantmentValue ()I c
	getEquipSound ()Lnet/minecraft/sounds/SoundEvent; g
	getFoodProperties ()Lnet/minecraft/world/food/FoodProperties; v
	getId (Lnet/minecraft/world/item/Item;)I a
	getItemCategory ()Lnet/minecraft/world/item/CreativeModeTab; t
	getMaxDamage ()I m
	getMaxStackSize ()I l
	getName (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/network/chat/Component; m
	getOrCreateDescriptionId ()Ljava/lang/String; p
	getPlayerPOVHitResult (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/ClipContext$Fluid;)Lnet/minecraft/world/phys/BlockHitResult; a
	getRarity (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/Rarity; n
	getTooltipImage (Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; h
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; c
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I b
	hasCraftingRemainingItem ()Z s
	hurtEnemy (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
	interactLivingEntity (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	inventoryTick (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;IZ)V a
	isBarVisible (Lnet/minecraft/world/item/ItemStack;)Z e
	isComplex ()Z M_
	isCorrectToolForDrops (Lnet/minecraft/world/level/block/state/BlockState;)Z a_
	isEdible ()Z u
	isEnchantable (Lnet/minecraft/world/item/ItemStack;)Z a
	isFireResistant ()Z w
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z i
	isValidRepairItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	mineBlock (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/LivingEntity;)Z a
	onCraftedBy (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;)V b
	onDestroyed (Lnet/minecraft/world/entity/item/ItemEntity;)V a
	onUseTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;I)V a
	overrideOtherStackedOnMe (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/inventory/ClickAction;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/SlotAccess;)Z a
	overrideStackedOnOther (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/inventory/ClickAction;Lnet/minecraft/world/entity/player/Player;)Z a
	releaseUsing (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;I)V a
	shouldOverrideMultiplayerNbt ()Z q
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
	useOnRelease (Lnet/minecraft/world/item/ItemStack;)Z l
	verifyTagAfterLoad (Lnet/minecraft/nbt/CompoundTag;)V b
net/minecraft/world/item/Item$Properties bql$a
	category d
	craftingRemainingItem c
	foodProperties f
	isFireResistant g
	maxDamage b
	maxStackSize a
	rarity e
	craftRemainder (Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/item/Item$Properties; a
	defaultDurability (I)Lnet/minecraft/world/item/Item$Properties; b
	durability (I)Lnet/minecraft/world/item/Item$Properties; c
	fireResistant ()Lnet/minecraft/world/item/Item$Properties; a
	food (Lnet/minecraft/world/food/FoodProperties;)Lnet/minecraft/world/item/Item$Properties; a
	rarity (Lnet/minecraft/world/item/Rarity;)Lnet/minecraft/world/item/Item$Properties; a
	stacksTo (I)Lnet/minecraft/world/item/Item$Properties; a
	tab (Lnet/minecraft/world/item/CreativeModeTab;)Lnet/minecraft/world/item/Item$Properties; a
net/minecraft/world/item/ItemCooldowns bqm
	cooldowns a
	tickCount b
	addCooldown (Lnet/minecraft/world/item/Item;I)V a
	getCooldownPercent (Lnet/minecraft/world/item/Item;F)F a
	isOnCooldown (Lnet/minecraft/world/item/Item;)Z a
	onCooldownEnded (Lnet/minecraft/world/item/Item;)V c
	onCooldownStarted (Lnet/minecraft/world/item/Item;I)V b
	removeCooldown (Lnet/minecraft/world/item/Item;)V b
	tick ()V a
net/minecraft/world/item/ItemCooldowns$CooldownInstance bqm$a
	endTime c
	startTime b
net/minecraft/world/item/ItemFrameItem bqn
	mayPlace (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/Direction;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/item/ItemNameBlockItem bqo
	getDescriptionId ()Ljava/lang/String; a
net/minecraft/world/item/ItemStack bqp
	ATTRIBUTE_MODIFIER_FORMAT c
	CODEC a
	DONT_HIDE_TOOLTIP r
	EMPTY b
	LOGGER l
	LORE_STYLE s
	TAG_CAN_DESTROY_BLOCK_LIST o
	TAG_CAN_PLACE_ON_BLOCK_LIST p
	TAG_COLOR k
	TAG_DAMAGE j
	TAG_DISPLAY g
	TAG_DISPLAY_NAME h
	TAG_ENCH d
	TAG_ENCH_ID e
	TAG_ENCH_LEVEL f
	TAG_HIDE_FLAGS q
	TAG_LORE i
	TAG_REPAIR_COST n
	TAG_UNBREAKABLE m
	cachedBreakBlock z
	cachedBreakBlockResult A
	cachedPlaceBlock B
	cachedPlaceBlockResult C
	count t
	emptyCacheFlag x
	entityRepresentation y
	item v
	popTime u
	tag w
	addAttributeModifier (Lnet/minecraft/world/entity/ai/attributes/Attribute;Lnet/minecraft/world/entity/ai/attributes/AttributeModifier;Lnet/minecraft/world/entity/EquipmentSlot;)V a
	addTagElement (Ljava/lang/String;Lnet/minecraft/nbt/Tag;)V a
	appendEnchantmentNames (Ljava/util/List;Lnet/minecraft/nbt/ListTag;)V a
	areSameBlocks (Lnet/minecraft/world/level/block/state/pattern/BlockInWorld;Lnet/minecraft/world/level/block/state/pattern/BlockInWorld;)Z a
	copy ()Lnet/minecraft/world/item/ItemStack; m
	enchant (Lnet/minecraft/world/item/enchantment/Enchantment;I)V a
	expandBlockState (Ljava/lang/String;)Ljava/util/Collection; d
	finishUsingItem (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/item/ItemStack; a
	getAttributeModifiers (Lnet/minecraft/world/entity/EquipmentSlot;)Lcom/google/common/collect/Multimap; a
	getBarColor ()I l
	getBarWidth ()I k
	getBaseRepairCost ()I F
	getCount ()I I
	getDamageValue ()I h
	getDescriptionId ()Ljava/lang/String; n
	getDestroySpeed (Lnet/minecraft/world/level/block/state/BlockState;)F a
	getDisplayName ()Lnet/minecraft/network/chat/Component; G
	getDrinkingSound ()Lnet/minecraft/sounds/SoundEvent; K
	getEatingSound ()Lnet/minecraft/sounds/SoundEvent; L
	getEnchantmentTags ()Lnet/minecraft/nbt/ListTag; u
	getEntityRepresentation ()Lnet/minecraft/world/entity/Entity; E
	getEquipSound ()Lnet/minecraft/sounds/SoundEvent; M
	getFrame ()Lnet/minecraft/world/entity/decoration/ItemFrame; D
	getHideFlags ()I O
	getHoverName ()Lnet/minecraft/network/chat/Component; v
	getItem ()Lnet/minecraft/world/item/Item; c
	getMaxDamage ()I i
	getMaxStackSize ()I d
	getOrCreateTag ()Lnet/minecraft/nbt/CompoundTag; t
	getOrCreateTagElement (Ljava/lang/String;)Lnet/minecraft/nbt/CompoundTag; a
	getPopTime ()I H
	getRarity ()Lnet/minecraft/world/item/Rarity; z
	getTag ()Lnet/minecraft/nbt/CompoundTag; s
	getTagElement (Ljava/lang/String;)Lnet/minecraft/nbt/CompoundTag; b
	getTooltipImage ()Ljava/util/Optional; a
	getTooltipLines (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/TooltipFlag;)Ljava/util/List; a
	getUseAnimation ()Lnet/minecraft/world/item/UseAnim; p
	getUseDuration ()I o
	grow (I)V f
	hasAdventureModeBreakTagForBlock (Lnet/minecraft/tags/TagContainer;Lnet/minecraft/world/level/block/state/pattern/BlockInWorld;)Z a
	hasAdventureModePlaceTagForBlock (Lnet/minecraft/tags/TagContainer;Lnet/minecraft/world/level/block/state/pattern/BlockInWorld;)Z b
	hasCustomHoverName ()Z x
	hasFoil ()Z y
	hasTag ()Z r
	hideTooltipPart (Lnet/minecraft/world/item/ItemStack$TooltipPart;)V a
	hurt (ILjava/util/Random;Lnet/minecraft/server/level/ServerPlayer;)Z a
	hurtAndBreak (ILnet/minecraft/world/entity/LivingEntity;Ljava/util/function/Consumer;)V a
	hurtEnemy (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/player/Player;)V a
	interactLivingEntity (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	inventoryTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;IZ)V a
	is (Lnet/minecraft/tags/Tag;)Z a
	is (Lnet/minecraft/world/item/Item;)Z a
	isBarVisible ()Z j
	isCorrectToolForDrops (Lnet/minecraft/world/level/block/state/BlockState;)Z b
	isDamageableItem ()Z f
	isDamaged ()Z g
	isEdible ()Z J
	isEmpty ()Z b
	isEnchantable ()Z A
	isEnchanted ()Z B
	isFramed ()Z C
	isSame (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z c
	isSameIgnoreDurability (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z d
	isSameItemSameTags (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z e
	isStackable ()Z e
	matches (Lnet/minecraft/world/item/ItemStack;)Z c
	matches (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z b
	mineBlock (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	of (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/item/ItemStack; a
	onCraftedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;I)V a
	onDestroyed (Lnet/minecraft/world/entity/item/ItemEntity;)V a
	onUseTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;I)V b
	overrideOtherStackedOnMe (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/inventory/ClickAction;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/SlotAccess;)Z a
	overrideStackedOnOther (Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/inventory/ClickAction;Lnet/minecraft/world/entity/player/Player;)Z a
	releaseUsing (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;I)V a
	removeTagKey (Ljava/lang/String;)V c
	resetHoverName ()V w
	sameItem (Lnet/minecraft/world/item/ItemStack;)Z a
	sameItemStackIgnoreDurability (Lnet/minecraft/world/item/ItemStack;)Z b
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
	setCount (I)V e
	setDamageValue (I)V b
	setEntityRepresentation (Lnet/minecraft/world/entity/Entity;)V a
	setHoverName (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/world/item/ItemStack; a
	setPopTime (I)V d
	setRepairCost (I)V c
	setTag (Lnet/minecraft/nbt/CompoundTag;)V c
	shouldShowInTooltip (ILnet/minecraft/world/item/ItemStack$TooltipPart;)Z a
	shrink (I)V g
	split (I)Lnet/minecraft/world/item/ItemStack; a
	tagMatches (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	updateEmptyCacheFlag ()V N
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
	useOnRelease ()Z q
net/minecraft/world/item/ItemStack$TooltipPart bqp$a
	$VALUES i
	ADDITIONAL f
	CAN_DESTROY d
	CAN_PLACE e
	DYE g
	ENCHANTMENTS a
	MODIFIERS b
	UNBREAKABLE c
	mask h
	$values ()[Lnet/minecraft/world/item/ItemStack$TooltipPart; b
	getMask ()I a
net/minecraft/world/item/ItemUtils bqq
	createFilledResult (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	createFilledResult (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;Z)Lnet/minecraft/world/item/ItemStack; a
	onContainerDestroyed (Lnet/minecraft/world/entity/item/ItemEntity;Ljava/util/stream/Stream;)V a
	startUsingInstantly (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/Items bqr
	ACACIA_BOAT lY
	ACACIA_BUTTON kR
	ACACIA_DOOR lm
	ACACIA_FENCE eb
	ACACIA_FENCE_GATE lD
	ACACIA_LEAVES bH
	ACACIA_LOG bb
	ACACIA_PLANKS A
	ACACIA_PRESSURE_PLATE ld
	ACACIA_SAPLING I
	ACACIA_SIGN nS
	ACACIA_SLAB da
	ACACIA_STAIRS gB
	ACACIA_TRAPDOOR lv
	ACACIA_WOOD bz
	ACTIVATOR_RAIL lK
	AIR a
	ALLIUM cu
	AMETHYST_BLOCK al
	AMETHYST_CLUSTER ug
	AMETHYST_SHARD mo
	ANCIENT_DEBRIS ag
	ANDESITE g
	ANDESITE_SLAB ke
	ANDESITE_STAIRS jN
	ANDESITE_WALL fw
	ANVIL fI
	APPLE mf
	ARMOR_STAND rK
	ARROW mh
	AXOLOTL_BUCKET oh
	AXOLOTL_SPAWN_EGG pP
	AZALEA bW
	AZALEA_LEAVES bJ
	AZALEA_LEAVES_FLOWERS bK
	AZURE_BLUET cv
	BAKED_POTATO rn
	BAMBOO cV
	BARREL tc
	BARRIER gg
	BASALT el
	BAT_SPAWN_EGG pQ
	BEACON fm
	BEDROCK K
	BEEF pv
	BEEHIVE tu
	BEETROOT sn
	BEETROOT_SEEDS so
	BEETROOT_SOUP sp
	BEE_NEST tt
	BEE_SPAWN_EGG pR
	BELL tk
	BIG_DRIPLEAF cT
	BIRCH_BOAT lW
	BIRCH_BUTTON kP
	BIRCH_DOOR lk
	BIRCH_FENCE dZ
	BIRCH_FENCE_GATE lB
	BIRCH_LEAVES bF
	BIRCH_LOG aZ
	BIRCH_PLANKS y
	BIRCH_PRESSURE_PLATE lb
	BIRCH_SAPLING G
	BIRCH_SIGN nQ
	BIRCH_SLAB cY
	BIRCH_STAIRS fh
	BIRCH_TRAPDOOR lt
	BIRCH_WOOD bx
	BLACKSTONE tz
	BLACKSTONE_SLAB tA
	BLACKSTONE_STAIRS tB
	BLACKSTONE_WALL fB
	BLACK_BANNER sj
	BLACK_BED pn
	BLACK_CANDLE uc
	BLACK_CARPET gy
	BLACK_CONCRETE iF
	BLACK_CONCRETE_POWDER iV
	BLACK_DYE oT
	BLACK_GLAZED_TERRACOTTA ip
	BLACK_SHULKER_BOX hZ
	BLACK_STAINED_GLASS gZ
	BLACK_STAINED_GLASS_PANE hp
	BLACK_TERRACOTTA gf
	BLACK_WOOL cq
	BLAST_FURNACE te
	BLAZE_POWDER pJ
	BLAZE_ROD pB
	BLAZE_SPAWN_EGG pS
	BLUE_BANNER sf
	BLUE_BED pj
	BLUE_CANDLE tY
	BLUE_CARPET gu
	BLUE_CONCRETE iB
	BLUE_CONCRETE_POWDER iR
	BLUE_DYE oP
	BLUE_GLAZED_TERRACOTTA il
	BLUE_ICE jB
	BLUE_ORCHID ct
	BLUE_SHULKER_BOX hV
	BLUE_STAINED_GLASS gV
	BLUE_STAINED_GLASS_PANE hl
	BLUE_TERRACOTTA gb
	BLUE_WOOL cm
	BONE oV
	BONE_BLOCK hH
	BONE_MEAL oU
	BOOK om
	BOOKSHELF dz
	BOW mg
	BOWL nc
	BRAIN_CORAL ji
	BRAIN_CORAL_BLOCK jd
	BRAIN_CORAL_FAN js
	BREAD nj
	BREWING_STAND pL
	BRICK oi
	BRICKS dy
	BRICK_SLAB dk
	BRICK_STAIRS eP
	BRICK_WALL fp
	BROWN_BANNER sg
	BROWN_BED pk
	BROWN_CANDLE tZ
	BROWN_CARPET gv
	BROWN_CONCRETE iC
	BROWN_CONCRETE_POWDER iS
	BROWN_DYE oQ
	BROWN_GLAZED_TERRACOTTA im
	BROWN_MUSHROOM cF
	BROWN_MUSHROOM_BLOCK eG
	BROWN_SHULKER_BOX hW
	BROWN_STAINED_GLASS gW
	BROWN_STAINED_GLASS_PANE hm
	BROWN_TERRACOTTA gc
	BROWN_WOOL cn
	BUBBLE_CORAL jj
	BUBBLE_CORAL_BLOCK je
	BUBBLE_CORAL_FAN jt
	BUCKET nW
	BUDDING_AMETHYST am
	BUNDLE oq
	CACTUS dU
	CAKE oX
	CALCITE l
	CAMPFIRE tp
	CANDLE tM
	CARROT rl
	CARROT_ON_A_STICK lR
	CARTOGRAPHY_TABLE tf
	CARVED_PUMPKIN eg
	CAT_SPAWN_EGG pT
	CAULDRON pM
	CAVE_SPIDER_SPAWN_EGG pU
	CHAIN eK
	CHAINMAIL_BOOTS nr
	CHAINMAIL_CHESTPLATE np
	CHAINMAIL_HELMET no
	CHAINMAIL_LEGGINGS nq
	CHAIN_COMMAND_BLOCK hC
	CHARCOAL mj
	CHEST dL
	CHEST_MINECART lN
	CHICKEN px
	CHICKEN_SPAWN_EGG pV
	CHIPPED_ANVIL fJ
	CHISELED_DEEPSLATE eF
	CHISELED_NETHER_BRICKS eV
	CHISELED_POLISHED_BLACKSTONE tG
	CHISELED_QUARTZ_BLOCK fL
	CHISELED_RED_SANDSTONE hy
	CHISELED_SANDSTONE bR
	CHISELED_STONE_BRICKS eA
	CHORUS_FLOWER dF
	CHORUS_FRUIT sl
	CHORUS_PLANT dE
	CLAY dV
	CLAY_BALL oj
	CLOCK os
	COAL mi
	COAL_BLOCK ah
	COAL_ORE O
	COARSE_DIRT q
	COBBLED_DEEPSLATE j
	COBBLED_DEEPSLATE_SLAB ki
	COBBLED_DEEPSLATE_STAIRS jR
	COBBLED_DEEPSLATE_WALL fE
	COBBLESTONE v
	COBBLESTONE_SLAB dj
	COBBLESTONE_STAIRS dQ
	COBBLESTONE_WALL fn
	COBWEB bT
	COCOA_BEANS oD
	COD ov
	COD_BUCKET of
	COD_SPAWN_EGG pW
	COMMAND_BLOCK fl
	COMMAND_BLOCK_MINECART rR
	COMPARATOR kr
	COMPASS op
	COMPOSTER tb
	CONDUIT jC
	COOKED_BEEF pw
	COOKED_CHICKEN py
	COOKED_COD oz
	COOKED_MUTTON rT
	COOKED_PORKCHOP nK
	COOKED_RABBIT rG
	COOKED_SALMON oA
	COOKIE po
	COPPER_BLOCK ao
	COPPER_INGOT ms
	COPPER_ORE S
	CORNFLOWER cB
	COW_SPAWN_EGG pX
	CRACKED_DEEPSLATE_BRICKS eC
	CRACKED_DEEPSLATE_TILES eE
	CRACKED_NETHER_BRICKS eU
	CRACKED_POLISHED_BLACKSTONE_BRICKS tK
	CRACKED_STONE_BRICKS ez
	CRAFTING_TABLE dM
	CREEPER_BANNER_PATTERN sW
	CREEPER_HEAD rv
	CREEPER_SPAWN_EGG pY
	CRIMSON_BUTTON kT
	CRIMSON_DOOR lo
	CRIMSON_FENCE ed
	CRIMSON_FENCE_GATE lF
	CRIMSON_FUNGUS cH
	CRIMSON_HYPHAE bB
	CRIMSON_NYLIUM t
	CRIMSON_PLANKS C
	CRIMSON_PRESSURE_PLATE lf
	CRIMSON_ROOTS cJ
	CRIMSON_SIGN nU
	CRIMSON_SLAB dc
	CRIMSON_STAIRS fj
	CRIMSON_STEM bd
	CRIMSON_TRAPDOOR lx
	CROSSBOW sS
	CRYING_OBSIDIAN ty
	CUT_COPPER av
	CUT_COPPER_SLAB aD
	CUT_COPPER_STAIRS az
	CUT_RED_SANDSTONE hz
	CUT_RED_SANDSTONE_SLAB dp
	CUT_SANDSTONE bS
	CUT_STANDSTONE_SLAB dh
	CYAN_BANNER sd
	CYAN_BED ph
	CYAN_CANDLE tW
	CYAN_CARPET gs
	CYAN_CONCRETE iz
	CYAN_CONCRETE_POWDER iP
	CYAN_DYE oN
	CYAN_GLAZED_TERRACOTTA ij
	CYAN_SHULKER_BOX hT
	CYAN_STAINED_GLASS gT
	CYAN_STAINED_GLASS_PANE hj
	CYAN_TERRACOTTA fZ
	CYAN_WOOL ck
	DAMAGED_ANVIL fK
	DANDELION cr
	DARK_OAK_BOAT lZ
	DARK_OAK_BUTTON kS
	DARK_OAK_DOOR ln
	DARK_OAK_FENCE ec
	DARK_OAK_FENCE_GATE lE
	DARK_OAK_LEAVES bI
	DARK_OAK_LOG bc
	DARK_OAK_PLANKS B
	DARK_OAK_PRESSURE_PLATE le
	DARK_OAK_SAPLING J
	DARK_OAK_SIGN nT
	DARK_OAK_SLAB db
	DARK_OAK_STAIRS gC
	DARK_OAK_TRAPDOOR lw
	DARK_OAK_WOOD bA
	DARK_PRISMARINE hs
	DARK_PRISMARINE_SLAB dt
	DARK_PRISMARINE_STAIRS hv
	DAYLIGHT_DETECTOR kE
	DEAD_BRAIN_CORAL jm
	DEAD_BRAIN_CORAL_BLOCK iY
	DEAD_BRAIN_CORAL_FAN jx
	DEAD_BUBBLE_CORAL jn
	DEAD_BUBBLE_CORAL_BLOCK iZ
	DEAD_BUBBLE_CORAL_FAN jy
	DEAD_BUSH bY
	DEAD_FIRE_CORAL jo
	DEAD_FIRE_CORAL_BLOCK ja
	DEAD_FIRE_CORAL_FAN jz
	DEAD_HORN_CORAL jp
	DEAD_HORN_CORAL_BLOCK jb
	DEAD_HORN_CORAL_FAN jA
	DEAD_TUBE_CORAL jq
	DEAD_TUBE_CORAL_BLOCK iX
	DEAD_TUBE_CORAL_FAN jw
	DEBUG_STICK sA
	DEEPSLATE i
	DEEPSLATE_BRICKS eB
	DEEPSLATE_BRICK_SLAB kk
	DEEPSLATE_BRICK_STAIRS jT
	DEEPSLATE_BRICK_WALL fG
	DEEPSLATE_COAL_ORE P
	DEEPSLATE_COPPER_ORE T
	DEEPSLATE_DIAMOND_ORE ad
	DEEPSLATE_EMERALD_ORE Z
	DEEPSLATE_GOLD_ORE V
	DEEPSLATE_IRON_ORE R
	DEEPSLATE_LAPIS_ORE ab
	DEEPSLATE_REDSTONE_ORE X
	DEEPSLATE_TILES eD
	DEEPSLATE_TILE_SLAB kl
	DEEPSLATE_TILE_STAIRS jU
	DEEPSLATE_TILE_WALL fH
	DETECTOR_RAIL lI
	DIAMOND mk
	DIAMOND_AXE mU
	DIAMOND_BLOCK aq
	DIAMOND_BOOTS nz
	DIAMOND_CHESTPLATE nx
	DIAMOND_HELMET nw
	DIAMOND_HOE mV
	DIAMOND_HORSE_ARMOR rN
	DIAMOND_LEGGINGS ny
	DIAMOND_ORE ac
	DIAMOND_PICKAXE mT
	DIAMOND_SHOVEL mS
	DIAMOND_SWORD mR
	DIORITE e
	DIORITE_SLAB kh
	DIORITE_STAIRS jQ
	DIORITE_WALL fA
	DIRT p
	DIRT_PATH gD
	DISPENSER ky
	DOLPHIN_SPAWN_EGG pZ
	DONKEY_SPAWN_EGG qa
	DRAGON_BREATH sq
	DRAGON_EGG fc
	DRAGON_HEAD rw
	DRIED_KELP ps
	DRIED_KELP_BLOCK ok
	DRIPSTONE_BLOCK n
	DROPPER kz
	DROWNED_SPAWN_EGG qb
	EGG oo
	ELDER_GUARDIAN_SPAWN_EGG qc
	ELYTRA lT
	EMERALD ml
	EMERALD_BLOCK ff
	EMERALD_ORE Y
	ENCHANTED_BOOK rB
	ENCHANTED_GOLDEN_APPLE nN
	ENCHANTING_TABLE eY
	ENDERMAN_SPAWN_EGG qd
	ENDERMITE_SPAWN_EGG qe
	ENDER_CHEST fe
	ENDER_EYE pN
	ENDER_PEARL pA
	END_CRYSTAL sk
	END_PORTAL_FRAME eZ
	END_ROD dD
	END_STONE fa
	END_STONE_BRICKS fb
	END_STONE_BRICK_SLAB ka
	END_STONE_BRICK_STAIRS jI
	END_STONE_BRICK_WALL fz
	EVOKER_SPAWN_EGG qf
	EXPERIENCE_BOTTLE re
	EXPOSED_COPPER as
	EXPOSED_CUT_COPPER aw
	EXPOSED_CUT_COPPER_SLAB aE
	EXPOSED_CUT_COPPER_STAIRS aA
	FARMLAND dN
	FEATHER nf
	FERMENTED_SPIDER_EYE pI
	FERN bV
	FILLED_MAP pp
	FIREWORK_ROCKET rz
	FIREWORK_STAR rA
	FIRE_CHARGE rf
	FIRE_CORAL jk
	FIRE_CORAL_BLOCK jf
	FIRE_CORAL_FAN ju
	FISHING_ROD or
	FLETCHING_TABLE tg
	FLINT nI
	FLINT_AND_STEEL me
	FLOWERING_AZALEA bX
	FLOWER_BANNER_PATTERN sV
	FLOWER_POT rk
	FOX_SPAWN_EGG qg
	FURNACE dO
	FURNACE_MINECART lO
	GHAST_SPAWN_EGG qh
	GHAST_TEAR pC
	GILDED_BLACKSTONE tC
	GLASS bN
	GLASS_BOTTLE pG
	GLASS_PANE eL
	GLISTERING_MELON_SLICE pO
	GLOBE_BANNER_PATTER sZ
	GLOWSTONE ep
	GLOWSTONE_DUST ou
	GLOW_BERRIES to
	GLOW_INK_SAC oC
	GLOW_ITEM_FRAME rj
	GLOW_LICHEN eO
	GLOW_SQUID_SPAWN_EGG qi
	GOAT_SPAWN_EGG qj
	GOLDEN_APPLE nM
	GOLDEN_AXE mK
	GOLDEN_BOOTS nD
	GOLDEN_CARROT rq
	GOLDEN_CHESTPLATE nB
	GOLDEN_HELMET nA
	GOLDEN_HOE mL
	GOLDEN_HORSE_ARMOR rM
	GOLDEN_LEGGINGS nC
	GOLDEN_PICKAXE mJ
	GOLDEN_SHOVEL mI
	GOLDEN_SWORD mH
	GOLD_BLOCK ap
	GOLD_INGOT mu
	GOLD_NUGGET pD
	GOLD_ORE U
	GRANITE c
	GRANITE_SLAB kd
	GRANITE_STAIRS jM
	GRANITE_WALL ft
	GRASS bU
	GRASS_BLOCK o
	GRAVEL N
	GRAY_BANNER sb
	GRAY_BED pf
	GRAY_CANDLE tU
	GRAY_CARPET gq
	GRAY_CONCRETE ix
	GRAY_CONCRETE_POWDER iN
	GRAY_DYE oL
	GRAY_GLAZED_TERRACOTTA ih
	GRAY_SHULKER_BOX hR
	GRAY_STAINED_GLASS gR
	GRAY_STAINED_GLASS_PANE hh
	GRAY_TERRACOTTA fX
	GRAY_WOOL ci
	GREEN_BANNER sh
	GREEN_BED pl
	GREEN_CANDLE ua
	GREEN_CARPET gw
	GREEN_CONCRETE iD
	GREEN_CONCRETE_POWDER iT
	GREEN_DYE oR
	GREEN_GLAZED_TERRACOTTA in
	GREEN_SHULKER_BOX hX
	GREEN_STAINED_GLASS gX
	GREEN_STAINED_GLASS_PANE hn
	GREEN_TERRACOTTA gd
	GREEN_WOOL co
	GRINDSTONE th
	GUARDIAN_SPAWN_EGG qk
	GUNPOWDER ng
	HANGING_ROOTS cS
	HAY_BLOCK gi
	HEART_OF_THE_SEA sR
	HEAVY_WEIGHTED_PRESSURE_PLATE kY
	HOGLIN_SPAWN_EGG ql
	HONEYCOMB ts
	HONEYCOMB_BLOCK tw
	HONEY_BLOCK kv
	HONEY_BOTTLE tv
	HOPPER kx
	HOPPER_MINECART lQ
	HORN_CORAL jl
	HORN_CORAL_BLOCK jg
	HORN_CORAL_FAN jv
	HORSE_SPAWN_EGG qm
	HUSK_SPAWN_EGG qn
	ICE dS
	INFESTED_CHISELED_STONE_BRICKS ev
	INFESTED_COBBLESTONE er
	INFESTED_CRACKED_STONE_BRICKS eu
	INFESTED_DEEPSLATE ew
	INFESTED_MOSSY_STONE_BRICKS et
	INFESTED_STONE eq
	INFESTED_STONE_BRICKS es
	INK_SAC oB
	IRON_AXE mP
	IRON_BARS eJ
	IRON_BLOCK an
	IRON_BOOTS nv
	IRON_CHESTPLATE nt
	IRON_DOOR lh
	IRON_HELMET ns
	IRON_HOE mQ
	IRON_HORSE_ARMOR rL
	IRON_INGOT mq
	IRON_LEGGINGS nu
	IRON_NUGGET sy
	IRON_ORE Q
	IRON_PICKAXE mO
	IRON_SHOVEL mN
	IRON_SWORD mM
	IRON_TRAPDOOR lq
	ITEM_FRAME ri
	JACK_O_LANTERN eh
	JIGSAW mb
	JUKEBOX dW
	JUNGLE_BOAT lX
	JUNGLE_BUTTON kQ
	JUNGLE_DOOR ll
	JUNGLE_FENCE ea
	JUNGLE_FENCE_GATE lC
	JUNGLE_LEAVES bG
	JUNGLE_LOG ba
	JUNGLE_PLANKS z
	JUNGLE_PRESSURE_PLATE lc
	JUNGLE_SAPLING H
	JUNGLE_SIGN nR
	JUNGLE_SLAB cZ
	JUNGLE_STAIRS fi
	JUNGLE_TRAPDOOR lu
	JUNGLE_WOOD by
	KELP cP
	KNOWLEDGE_BOOK sz
	LADDER dP
	LANTERN tl
	LAPIS_BLOCK bP
	LAPIS_LAZULI mm
	LAPIS_ORE aa
	LARGE_AMETHYST_BUD uf
	LARGE_FERN gJ
	LAVA_BUCKET nY
	LEAD rP
	LEATHER ob
	LEATHER_BOOTS nn
	LEATHER_CHESTPLATE nl
	LEATHER_HELMET nk
	LEATHER_HORSE_ARMOR rO
	LEATHER_LEGGINGS nm
	LECTERN kA
	LEVER kC
	LIGHT gh
	LIGHTNING_ROD kD
	LIGHT_BLUE_BANNER rX
	LIGHT_BLUE_BED pb
	LIGHT_BLUE_CANDLE tQ
	LIGHT_BLUE_CARPET gm
	LIGHT_BLUE_CONCRETE it
	LIGHT_BLUE_CONCRETE_POWDER iJ
	LIGHT_BLUE_DYE oH
	LIGHT_BLUE_GLAZED_TERRACOTTA id
	LIGHT_BLUE_SHULKER_BOX hN
	LIGHT_BLUE_STAINED_GLASS gN
	LIGHT_BLUE_STAINED_GLASS_PANE hd
	LIGHT_BLUE_TERRACOTTA fT
	LIGHT_BLUE_WOOL ce
	LIGHT_GRAY_BANNER sc
	LIGHT_GRAY_BED pg
	LIGHT_GRAY_CANDLE tV
	LIGHT_GRAY_CARPET gr
	LIGHT_GRAY_CONCRETE iy
	LIGHT_GRAY_CONCRETE_POWDER iO
	LIGHT_GRAY_DYE oM
	LIGHT_GRAY_GLAZED_TERRACOTTA ii
	LIGHT_GRAY_SHULKER_BOX hS
	LIGHT_GRAY_STAINED_GLASS gS
	LIGHT_GRAY_STAINED_GLASS_PANE hi
	LIGHT_GRAY_TERRACOTTA fY
	LIGHT_GRAY_WOOL cj
	LIGHT_WEIGHTED_PRESSURE_PLATE kX
	LILAC gF
	LILY_OF_THE_VALLEY cC
	LILY_PAD eS
	LIME_BANNER rZ
	LIME_BED pd
	LIME_CANDLE tS
	LIME_CARPET go
	LIME_CONCRETE iv
	LIME_CONCRETE_POWDER iL
	LIME_DYE oJ
	LIME_GLAZED_TERRACOTTA if
	LIME_SHULKER_BOX hP
	LIME_STAINED_GLASS gP
	LIME_STAINED_GLASS_PANE hf
	LIME_TERRACOTTA fV
	LIME_WOOL cg
	LINGERING_POTION su
	LLAMA_SPAWN_EGG qo
	LODESTONE tx
	LOOM sU
	MAGENTA_BANNER rW
	MAGENTA_BED pa
	MAGENTA_CANDLE tP
	MAGENTA_CARPET gl
	MAGENTA_CONCRETE is
	MAGENTA_CONCRETE_POWDER iI
	MAGENTA_DYE oG
	MAGENTA_GLAZED_TERRACOTTA ic
	MAGENTA_SHULKER_BOX hM
	MAGENTA_STAINED_GLASS gM
	MAGENTA_STAINED_GLASS_PANE hc
	MAGENTA_TERRACOTTA fS
	MAGENTA_WOOL cd
	MAGMA_BLOCK hD
	MAGMA_CREAM pK
	MAGMA_CUBE_SPAWN_EGG qp
	MAP rp
	MEDIUM_AMETHYST_BUD ue
	MELON eM
	MELON_SEEDS pu
	MELON_SLICE pr
	MILK_BUCKET oc
	MINECART lM
	MOJANG_BANNER_PATTERN sY
	MOOSHROOM_SPAWN_EGG qq
	MOSSY_COBBLESTONE dA
	MOSSY_COBBLESTONE_SLAB jZ
	MOSSY_COBBLESTONE_STAIRS jH
	MOSSY_COBBLESTONE_WALL fo
	MOSSY_STONE_BRICKS ey
	MOSSY_STONE_BRICK_SLAB jX
	MOSSY_STONE_BRICK_STAIRS jF
	MOSSY_STONE_BRICK_WALL fs
	MOSS_BLOCK cR
	MOSS_CARPET cQ
	MULE_SPAWN_EGG qr
	MUSHROOM_STEM eI
	MUSHROOM_STEW nd
	MUSIC_DISC_11 sL
	MUSIC_DISC_13 sB
	MUSIC_DISC_BLOCKS sD
	MUSIC_DISC_CAT sC
	MUSIC_DISC_CHIRP sE
	MUSIC_DISC_FAR sF
	MUSIC_DISC_MALL sG
	MUSIC_DISC_MELLOHI sH
	MUSIC_DISC_PIGSTEP sN
	MUSIC_DISC_STAL sI
	MUSIC_DISC_STRAD sJ
	MUSIC_DISC_WAIT sM
	MUSIC_DISC_WARD sK
	MUTTON rS
	MYCELIUM eR
	NAME_TAG rQ
	NAUTILUS_SHELL sQ
	NETHERITE_AXE mZ
	NETHERITE_BLOCK ar
	NETHERITE_BOOTS nH
	NETHERITE_CHESTPLATE nF
	NETHERITE_HELMET nE
	NETHERITE_HOE na
	NETHERITE_INGOT mv
	NETHERITE_LEGGINGS nG
	NETHERITE_PICKAXE mY
	NETHERITE_SCRAP mw
	NETHERITE_SHOVEL mX
	NETHERITE_SWORD mW
	NETHERRACK ei
	NETHER_BRICK rC
	NETHER_BRICKS eT
	NETHER_BRICK_FENCE eW
	NETHER_BRICK_SLAB dm
	NETHER_BRICK_STAIRS eX
	NETHER_BRICK_WALL fv
	NETHER_GOLD_ORE ae
	NETHER_QUARTZ_ORE af
	NETHER_SPROUTS cL
	NETHER_STAR rx
	NETHER_WART pE
	NETHER_WART_BLOCK hE
	NOTE_BLOCK kK
	OAK_BOAT lU
	OAK_BUTTON kN
	OAK_DOOR li
	OAK_FENCE dX
	OAK_FENCE_GATE lz
	OAK_LEAVES bD
	OAK_LOG aX
	OAK_PLANKS w
	OAK_PRESSURE_PLATE kZ
	OAK_SAPLING E
	OAK_SIGN nO
	OAK_SLAB cW
	OAK_STAIRS dK
	OAK_TRAPDOOR lr
	OAK_WOOD bv
	OBSERVER kw
	OBSIDIAN dB
	OCELOT_SPAWN_EGG qs
	ORANGE_BANNER rV
	ORANGE_BED oZ
	ORANGE_CANDLE tO
	ORANGE_CARPET gk
	ORANGE_CONCRETE ir
	ORANGE_CONCRETE_POWDER iH
	ORANGE_DYE oF
	ORANGE_GLAZED_TERRACOTTA ib
	ORANGE_SHULKER_BOX hL
	ORANGE_STAINED_GLASS gL
	ORANGE_STAINED_GLASS_PANE hb
	ORANGE_TERRACOTTA fR
	ORANGE_TULIP cx
	ORANGE_WOOL cc
	OXEYE_DAISY cA
	OXIDIZED_COPPER au
	OXIDIZED_CUT_COPPER ay
	OXIDIZED_CUT_COPPER_SLAB aG
	OXIDIZED_CUT_COPPER_STAIRS aC
	PACKED_ICE gA
	PAINTING nL
	PANDA_SPAWN_EGG qt
	PAPER ol
	PARROT_SPAWN_EGG qu
	PEONY gH
	PETRIFIED_OAK_SLAB di
	PHANTOM_MEMBRANE sP
	PHANTOM_SPAWN_EGG qv
	PIGLIN_BANNER_PATTERN ta
	PIGLIN_BRUTE_SPAWN_EGG qy
	PIGLIN_SPAWN_EGG qx
	PIG_SPAWN_EGG qw
	PILLAGER_SPAWN_EGG qz
	PINK_BANNER sa
	PINK_BED pe
	PINK_CANDLE tT
	PINK_CARPET gp
	PINK_CONCRETE iw
	PINK_CONCRETE_POWDER iM
	PINK_DYE oK
	PINK_GLAZED_TERRACOTTA ig
	PINK_SHULKER_BOX hQ
	PINK_STAINED_GLASS gQ
	PINK_STAINED_GLASS_PANE hg
	PINK_TERRACOTTA fW
	PINK_TULIP cz
	PINK_WOOL ch
	PISTON ks
	PLAYER_HEAD rt
	PODZOL r
	POINTED_DRIPSTONE uh
	POISONOUS_POTATO ro
	POLAR_BEAR_SPAWN_EGG qA
	POLISHED_ANDESITE h
	POLISHED_ANDESITE_SLAB kg
	POLISHED_ANDESITE_STAIRS jP
	POLISHED_BASALT em
	POLISHED_BLACKSTONE tD
	POLISHED_BLACKSTONE_BRICKS tH
	POLISHED_BLACKSTONE_BRICK_SLAB tI
	POLISHED_BLACKSTONE_BRICK_STAIRS tJ
	POLISHED_BLACKSTONE_BRICK_WALL fD
	POLISHED_BLACKSTONE_BUTTON kM
	POLISHED_BLACKSTONE_PRESSURE_PLATE kW
	POLISHED_BLACKSTONE_SLAB tE
	POLISHED_BLACKSTONE_STAIRS tF
	POLISHED_BLACKSTONE_WALL fC
	POLISHED_DEEPSLATE k
	POLISHED_DEEPSLATE_SLAB kj
	POLISHED_DEEPSLATE_STAIRS jS
	POLISHED_DEEPSLATE_WALL fF
	POLISHED_DIORITE f
	POLISHED_DIORITE_SLAB jY
	POLISHED_DIORITE_STAIRS jG
	POLISHED_GRANITE d
	POLISHED_GRANITE_SLAB jV
	POLISHED_GRANITE_STAIRS jD
	POPPED_CHORUS_FRUIT sm
	POPPY cs
	PORKCHOP nJ
	POTATO rm
	POTION pF
	POWDER_SNOW_BUCKET nZ
	POWERED_RAIL lH
	PRISMARINE hq
	PRISMARINE_BRICKS hr
	PRISMARINE_BRICK_SLAB ds
	PRISMARINE_BRICK_STAIRS hu
	PRISMARINE_CRYSTALS rE
	PRISMARINE_SHARD rD
	PRISMARINE_SLAB dr
	PRISMARINE_STAIRS ht
	PRISMARINE_WALL fq
	PUFFERFISH oy
	PUFFERFISH_BUCKET od
	PUFFERFISH_SPAWN_EGG qB
	PUMPKIN ef
	PUMPKIN_PIE ry
	PUMPKIN_SEEDS pt
	PURPLE_BANNER se
	PURPLE_BED pi
	PURPLE_CANDLE tX
	PURPLE_CARPET gt
	PURPLE_CONCRETE iA
	PURPLE_CONCRETE_POWDER iQ
	PURPLE_DYE oO
	PURPLE_GLAZED_TERRACOTTA ik
	PURPLE_SHULKER_BOX hU
	PURPLE_STAINED_GLASS gU
	PURPLE_STAINED_GLASS_PANE hk
	PURPLE_TERRACOTTA ga
	PURPLE_WOOL cl
	PURPUR_BLOCK dG
	PURPUR_PILLAR dH
	PURPUR_SLAB dq
	PURPUR_STAIRS dI
	QUARTZ mn
	QUARTZ_BLOCK fM
	QUARTZ_BRICKS fN
	QUARTZ_PILLAR fO
	QUARTZ_SLAB dn
	QUARTZ_STAIRS fP
	RABBIT rF
	RABBIT_FOOT rI
	RABBIT_HIDE rJ
	RABBIT_SPAWN_EGG qC
	RABBIT_STEW rH
	RAIL lJ
	RAVAGER_SPAWN_EGG qD
	RAW_COPPER mr
	RAW_COPPER_BLOCK aj
	RAW_GOLD mt
	RAW_GOLD_BLOCK ak
	RAW_IRON mp
	RAW_IRON_BLOCK ai
	REDSTONE kn
	REDSTONE_BLOCK kp
	REDSTONE_LAMP kJ
	REDSTONE_ORE W
	REDSTONE_TORCH ko
	RED_BANNER si
	RED_BED pm
	RED_CANDLE ub
	RED_CARPET gx
	RED_CONCRETE iE
	RED_CONCRETE_POWDER iU
	RED_DYE oS
	RED_GLAZED_TERRACOTTA io
	RED_MUSHROOM cG
	RED_MUSHROOM_BLOCK eH
	RED_NETHER_BRICKS hG
	RED_NETHER_BRICK_SLAB kf
	RED_NETHER_BRICK_STAIRS jO
	RED_NETHER_BRICK_WALL fx
	RED_SAND M
	RED_SANDSTONE hx
	RED_SANDSTONE_SLAB do
	RED_SANDSTONE_STAIRS hA
	RED_SANDSTONE_WALL fr
	RED_SHULKER_BOX hY
	RED_STAINED_GLASS gY
	RED_STAINED_GLASS_PANE ho
	RED_TERRACOTTA ge
	RED_TULIP cw
	RED_WOOL cp
	REPEATER kq
	REPEATING_COMMAND_BLOCK hB
	RESPAWN_ANCHOR tL
	ROOTED_DIRT s
	ROSE_BUSH gG
	ROTTEN_FLESH pz
	SADDLE lL
	SALMON ow
	SALMON_BUCKET oe
	SALMON_SPAWN_EGG qE
	SAND L
	SANDSTONE bQ
	SANDSTONE_SLAB dg
	SANDSTONE_STAIRS fd
	SANDSTONE_WALL fy
	SCAFFOLDING km
	SCULK_SENSOR kF
	SCUTE md
	SEAGRASS bZ
	SEA_LANTERN hw
	SEA_PICKLE ca
	SHEARS pq
	SHEEP_SPAWN_EGG qF
	SHIELD sv
	SHROOMLIGHT tr
	SHULKER_BOX hJ
	SHULKER_SHELL sx
	SHULKER_SPAWN_EGG qG
	SILVERFISH_SPAWN_EGG qH
	SKELETON_HORSE_SPAWN_EGG qJ
	SKELETON_SKULL rr
	SKELETON_SPAWN_EGG qI
	SKULL_BANNER_PATTERN sX
	SLIME_BALL on
	SLIME_BLOCK ku
	SLIME_SPAWN_EGG qK
	SMALL_AMETHYST_BUD ud
	SMALL_DRIPLEAF cU
	SMITHING_TABLE ti
	SMOKER td
	SMOOTH_BASALT en
	SMOOTH_QUARTZ du
	SMOOTH_QUARTZ_SLAB kc
	SMOOTH_QUARTZ_STAIRS jL
	SMOOTH_RED_SANDSTONE dv
	SMOOTH_RED_SANDSTONE_SLAB jW
	SMOOTH_RED_SANDSTONE_STAIRS jE
	SMOOTH_SANDSTONE dw
	SMOOTH_SANDSTONE_SLAB kb
	SMOOTH_SANDSTONE_STAIRS jK
	SMOOTH_STONE dx
	SMOOTH_STONE_SLAB df
	SNOW dR
	SNOWBALL oa
	SNOW_BLOCK dT
	SOUL_CAMPFIRE tq
	SOUL_LANTERN tm
	SOUL_SAND ej
	SOUL_SOIL ek
	SOUL_TORCH eo
	SPAWNER dJ
	SPECTRAL_ARROW ss
	SPIDER_EYE pH
	SPIDER_SPAWN_EGG qL
	SPLASH_POTION sr
	SPONGE bL
	SPORE_BLOSSOM cE
	SPRUCE_BOAT lV
	SPRUCE_BUTTON kO
	SPRUCE_DOOR lj
	SPRUCE_FENCE dY
	SPRUCE_FENCE_GATE lA
	SPRUCE_LEAVES bE
	SPRUCE_LOG aY
	SPRUCE_PLANKS x
	SPRUCE_PRESSURE_PLATE la
	SPRUCE_SAPLING F
	SPRUCE_SIGN nP
	SPRUCE_SLAB cX
	SPRUCE_STAIRS fg
	SPRUCE_TRAPDOOR ls
	SPRUCE_WOOD bw
	SPYGLASS ot
	SQUID_SPAWN_EGG qM
	STICK nb
	STICKY_PISTON kt
	STONE b
	STONECUTTER tj
	STONE_AXE mF
	STONE_BRICKS ex
	STONE_BRICK_SLAB dl
	STONE_BRICK_STAIRS eQ
	STONE_BRICK_WALL fu
	STONE_BUTTON kL
	STONE_HOE mG
	STONE_PICKAXE mE
	STONE_PRESSURE_PLATE kV
	STONE_SHOVEL mD
	STONE_SLAB de
	STONE_STAIRS jJ
	STONE_SWORD mC
	STRAY_SPAWN_EGG qN
	STRIDER_SPAWN_EGG qO
	STRING ne
	STRIPPED_ACACIA_LOG bj
	STRIPPED_ACACIA_WOOD br
	STRIPPED_BIRCH_LOG bh
	STRIPPED_BIRCH_WOOD bp
	STRIPPED_CRIMSON_HYPHAE bt
	STRIPPED_CRIMSON_STEM bl
	STRIPPED_DARK_OAK_LOG bk
	STRIPPED_DARK_OAK_WOOD bs
	STRIPPED_JUNGLE_LOG bi
	STRIPPED_JUNGLE_WOOD bq
	STRIPPED_OAK_LOG bf
	STRIPPED_OAK_WOOD bn
	STRIPPED_SPRUCE_LOG bg
	STRIPPED_SPRUCE_WOOD bo
	STRIPPED_WARPED_HYPHAE bu
	STRIPPED_WARPED_STEM bm
	STRUCTURE_BLOCK ma
	STRUCTURE_VOID hI
	SUGAR oW
	SUGAR_CANE cO
	SUNFLOWER gE
	SUSPICIOUS_STEW sT
	SWEET_BERRIES tn
	TALL_GRASS gI
	TARGET kB
	TERRACOTTA gz
	TINTED_GLASS bO
	TIPPED_ARROW st
	TNT kI
	TNT_MINECART lP
	TORCH dC
	TOTEM_OF_UNDYING sw
	TRADER_LLAMA_SPAWN_EGG qP
	TRAPPED_CHEST kH
	TRIDENT sO
	TRIPWIRE_HOOK kG
	TROPICAL_FISH ox
	TROPICAL_FISH_BUCKET og
	TROPICAL_FISH_SPAWN_EGG qQ
	TUBE_CORAL jh
	TUBE_CORAL_BLOCK jc
	TUBE_CORAL_FAN jr
	TUFF m
	TURTLE_EGG iW
	TURTLE_HELMET mc
	TURTLE_SPAWN_EGG qR
	TWISTING_VINES cN
	VEX_SPAWN_EGG qS
	VILLAGER_SPAWN_EGG qT
	VINDICATOR_SPAWN_EGG qU
	VINE eN
	WANDERING_TRADER_SPAWN_EGG qV
	WARPED_BUTTON kU
	WARPED_DOOR lp
	WARPED_FENCE ee
	WARPED_FENCE_GATE lG
	WARPED_FUNGUS cI
	WARPED_FUNGUS_ON_A_STICK lS
	WARPED_HYPHAE bC
	WARPED_NYLIUM u
	WARPED_PLANKS D
	WARPED_PRESSURE_PLATE lg
	WARPED_ROOTS cK
	WARPED_SIGN nV
	WARPED_SLAB dd
	WARPED_STAIRS fk
	WARPED_STEM be
	WARPED_TRAPDOOR ly
	WARPED_WART_BLOCK hF
	WATER_BUCKET nX
	WAXED_COPPER_BLOCK aH
	WAXED_CUT_COPPER aL
	WAXED_CUT_COPPER_SLAB aT
	WAXED_CUT_COPPER_STAIRS aP
	WAXED_EXPOSED_COPPER aI
	WAXED_EXPOSED_CUT_COPPER aM
	WAXED_EXPOSED_CUT_COPPER_SLAB aU
	WAXED_EXPOSED_CUT_COPPER_STAIRS aQ
	WAXED_OXIDIZED_COPPER aK
	WAXED_OXIDIZED_CUT_COPPER aO
	WAXED_OXIDIZED_CUT_COPPER_SLAB aW
	WAXED_OXIDIZED_CUT_COPPER_STAIRS aS
	WAXED_WEATHERED_COPPER aJ
	WAXED_WEATHERED_CUT_COPPER aN
	WAXED_WEATHERED_CUT_COPPER_SLAB aV
	WAXED_WEATHERED_CUT_COPPER_STAIRS aR
	WEATHERED_COPPER at
	WEATHERED_CUT_COPPER ax
	WEATHERED_CUT_COPPER_SLAB aF
	WEATHERED_CUT_COPPER_STAIRS aB
	WEEPING_VINES cM
	WET_SPONGE bM
	WHEAT ni
	WHEAT_SEEDS nh
	WHITE_BANNER rU
	WHITE_BED oY
	WHITE_CANDLE tN
	WHITE_CARPET gj
	WHITE_CONCRETE iq
	WHITE_CONCRETE_POWDER iG
	WHITE_DYE oE
	WHITE_GLAZED_TERRACOTTA ia
	WHITE_SHULKER_BOX hK
	WHITE_STAINED_GLASS gK
	WHITE_STAINED_GLASS_PANE ha
	WHITE_TERRACOTTA fQ
	WHITE_TULIP cy
	WHITE_WOOL cb
	WITCH_SPAWN_EGG qW
	WITHER_ROSE cD
	WITHER_SKELETON_SKULL rs
	WITHER_SKELETON_SPAWN_EGG qX
	WOLF_SPAWN_EGG qY
	WOODEN_AXE mA
	WOODEN_HOE mB
	WOODEN_PICKAXE mz
	WOODEN_SHOVEL my
	WOODEN_SWORD mx
	WRITABLE_BOOK rg
	WRITTEN_BOOK rh
	YELLOW_BANNER rY
	YELLOW_BED pc
	YELLOW_CANDLE tR
	YELLOW_CARPET gn
	YELLOW_CONCRETE iu
	YELLOW_CONCRETE_POWDER iK
	YELLOW_DYE oI
	YELLOW_GLAZED_TERRACOTTA ie
	YELLOW_SHULKER_BOX hO
	YELLOW_STAINED_GLASS gO
	YELLOW_STAINED_GLASS_PANE he
	YELLOW_TERRACOTTA fU
	YELLOW_WOOL cf
	ZOGLIN_SPAWN_EGG qZ
	ZOMBIE_HEAD ru
	ZOMBIE_HORSE_SPAWN_EGG rb
	ZOMBIE_SPAWN_EGG ra
	ZOMBIE_VILLAGER_SPAWN_EGG rc
	ZOMBIFIED_PIGLIN_SPAWN_EGG rd
	ifPart2 (Ljava/lang/Object;)Ljava/util/Optional; a
	registerBlock (Lnet/minecraft/world/item/BlockItem;)Lnet/minecraft/world/item/Item; a
	registerBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/item/Item; a
	registerBlock (Lnet/minecraft/world/level/block/Block;Ljava/util/Optional;)Lnet/minecraft/world/item/Item; a
	registerBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/CreativeModeTab;)Lnet/minecraft/world/item/Item; a
	registerBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/CreativeModeTab;[Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/item/Item; a
	registerBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/item/Item; a
	registerItem (Ljava/lang/String;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/item/Item; a
	registerItem (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/item/Item; a
net/minecraft/world/item/KnowledgeBookItem bqs
	LOGGER b
	RECIPE_TAG a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/LeadItem bqt
	bindPlayerMobs (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/InteractionResult; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/LingeringPotionItem bqu
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/MapItem bqv
	DEFAULT_MAP_COLOR c
	IMAGE_HEIGHT b
	IMAGE_WIDTH a
	TAG_MAP d
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	create (Lnet/minecraft/world/level/Level;IIBZZ)Lnet/minecraft/world/item/ItemStack; a
	createAndStoreSavedData (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;IIIZZLnet/minecraft/resources/ResourceKey;)V a
	createNewSavedData (Lnet/minecraft/world/level/Level;IIIZZLnet/minecraft/resources/ResourceKey;)I a
	getColor (Lnet/minecraft/world/item/ItemStack;)I k
	getCorrectStateForFluidBlock (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	getMapId (Lnet/minecraft/world/item/ItemStack;)Ljava/lang/Integer; d
	getSavedData (Ljava/lang/Integer;Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; a
	getSavedData (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; a
	getUpdatePacket (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/network/protocol/Packet; a
	inventoryTick (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;IZ)V a
	isLand ([Lnet/minecraft/world/level/biome/Biome;III)Z a
	lockMap (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;)V a
	makeKey (I)Ljava/lang/String; a
	onCraftedBy (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;)V b
	renderBiomePreviewMap (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/item/ItemStack;)V a
	scaleMap (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;I)V a
	storeMapData (Lnet/minecraft/world/item/ItemStack;I)V a
	update (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)V a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/MilkBucketItem bqw
	DRINK_DURATION a
	finishUsingItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/item/ItemStack; a
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; c
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I b
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/MinecartItem bqx
	DISPENSE_ITEM_BEHAVIOR a
	type b
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/MobBucketItem bqy
	emptySound b
	type a
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	checkExtraContent (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPos;)V a
	playEmptySound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	spawn (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/item/NameTagItem bqz
	interactLivingEntity (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/PickaxeItem bra
net/minecraft/world/item/PlayerHeadItem brb
	TAG_SKULL_OWNER c
	getName (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/network/chat/Component; m
	verifyTagAfterLoad (Lnet/minecraft/nbt/CompoundTag;)V b
net/minecraft/world/item/PotionItem brc
	DRINK_DURATION a
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	fillItemCategory (Lnet/minecraft/world/item/CreativeModeTab;Lnet/minecraft/core/NonNullList;)V a
	finishUsingItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/item/ItemStack; a
	getDefaultInstance ()Lnet/minecraft/world/item/ItemStack; N_
	getDescriptionId (Lnet/minecraft/world/item/ItemStack;)Ljava/lang/String; j
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; c
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I b
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z i
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/ProjectileWeaponItem brd
	ARROW_ONLY c
	ARROW_OR_FIREWORK d
	getAllSupportedProjectiles ()Ljava/util/function/Predicate; b
	getDefaultProjectileRange ()I d
	getEnchantmentValue ()I c
	getHeldProjectile (Lnet/minecraft/world/entity/LivingEntity;Ljava/util/function/Predicate;)Lnet/minecraft/world/item/ItemStack; a
	getSupportedHeldProjectiles ()Ljava/util/function/Predicate; e
net/minecraft/world/item/Rarity bre
	$VALUES f
	COMMON a
	EPIC d
	RARE c
	UNCOMMON b
	color e
	$values ()[Lnet/minecraft/world/item/Rarity; a
net/minecraft/world/item/RecordItem brf
	BY_NAME a
	analogOutput b
	sound c
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	getAnalogOutput ()I i
	getBySound (Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/world/item/RecordItem; a
	getDisplayName ()Lnet/minecraft/network/chat/MutableComponent; j
	getSound ()Lnet/minecraft/sounds/SoundEvent; x
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/SaddleItem brg
	interactLivingEntity (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/ScaffoldingBlockItem brh
	mustSurvive ()Z d
	updatePlacementContext (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/item/context/BlockPlaceContext; b
net/minecraft/world/item/ServerItemCooldowns bri
	player a
	onCooldownEnded (Lnet/minecraft/world/item/Item;)V c
	onCooldownStarted (Lnet/minecraft/world/item/Item;I)V b
net/minecraft/world/item/ShearsItem brj
	getDestroySpeed (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/BlockState;)F a
	isCorrectToolForDrops (Lnet/minecraft/world/level/block/state/BlockState;)Z a_
	mineBlock (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/item/ShieldItem brk
	EFFECTIVE_BLOCK_DELAY a
	MINIMUM_DURABILITY_DAMAGE b
	TAG_BASE_COLOR c
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	getColor (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/DyeColor; d
	getDescriptionId (Lnet/minecraft/world/item/ItemStack;)Ljava/lang/String; j
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; c
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I b
	isValidRepairItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/ShovelItem brl
	FLATTENABLES a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/SignItem brm
	updateCustomBlockEntityTag (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/item/SimpleFoiledItem brn
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z i
net/minecraft/world/item/SnowballItem bro
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/SolidBucketItem brp
	placeSound c
	emptyContents (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/BlockHitResult;)Z a
	getDescriptionId ()Ljava/lang/String; a
	getPlaceSound (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/sounds/SoundEvent; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/SpawnEggItem brq
	BY_ID a
	backgroundColor b
	defaultType d
	highlightColor c
	byId (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/world/item/SpawnEggItem; a
	eggs ()Ljava/lang/Iterable; i
	getColor (I)I a
	getType (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/EntityType; a
	spawnOffspringFromSpawnEgg (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; a
	spawnsEntity (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/entity/EntityType;)Z a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/SpectralArrowItem brr
	createArrow (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/projectile/AbstractArrow; a
net/minecraft/world/item/SplashPotionItem brs
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/SpyglassItem brt
	USE_DURATION a
	ZOOM_FOV_MODIFIER b
	finishUsingItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/item/ItemStack; a
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; c
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I b
	releaseUsing (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;I)V a
	stopUsing (Lnet/minecraft/world/entity/LivingEntity;)V a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/StandingAndWallBlockItem bru
	wallBlock d
	getPlacementState (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; c
	registerBlocks (Ljava/util/Map;Lnet/minecraft/world/item/Item;)V a
net/minecraft/world/item/SuspiciousStewItem brv
	EFFECTS_TAG a
	EFFECT_DURATION_TAG c
	EFFECT_ID_TAG b
	finishUsingItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/item/ItemStack; a
	saveMobEffect (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/effect/MobEffect;I)V a
net/minecraft/world/item/SwordItem brw
	attackDamage a
	defaultModifiers b
	canAttackBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)Z a
	getDamage ()F i
	getDefaultAttributeModifiers (Lnet/minecraft/world/entity/EquipmentSlot;)Lcom/google/common/collect/Multimap; a
	getDestroySpeed (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/BlockState;)F a
	hurtEnemy (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
	isCorrectToolForDrops (Lnet/minecraft/world/level/block/state/BlockState;)Z a_
	mineBlock (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/item/ThrowablePotionItem brx
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/Tier bry
	getAttackDamageBonus ()F c
	getEnchantmentValue ()I e
	getLevel ()I d
	getRepairIngredient ()Lnet/minecraft/world/item/crafting/Ingredient; f
	getSpeed ()F b
	getUses ()I a
net/minecraft/world/item/TieredItem brz
	tier a
	getEnchantmentValue ()I c
	getTier ()Lnet/minecraft/world/item/Tier; j
	isValidRepairItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/world/item/Tiers bsa
	$VALUES m
	DIAMOND d
	GOLD e
	IRON c
	NETHERITE f
	STONE b
	WOOD a
	damage j
	enchantmentValue k
	level g
	repairIngredient l
	speed i
	uses h
	$values ()[Lnet/minecraft/world/item/Tiers; m
	getAttackDamageBonus ()F c
	getEnchantmentValue ()I e
	getLevel ()I d
	getRepairIngredient ()Lnet/minecraft/world/item/crafting/Ingredient; f
	getSpeed ()F b
	getUses ()I a
net/minecraft/world/item/TippedArrowItem bsb
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	fillItemCategory (Lnet/minecraft/world/item/CreativeModeTab;Lnet/minecraft/core/NonNullList;)V a
	getDefaultInstance ()Lnet/minecraft/world/item/ItemStack; N_
	getDescriptionId (Lnet/minecraft/world/item/ItemStack;)Ljava/lang/String; j
net/minecraft/world/item/TooltipFlag bsc
	isAdvanced ()Z a
net/minecraft/world/item/TooltipFlag$Default bsc$a
	$VALUES d
	ADVANCED b
	NORMAL a
	advanced c
	$values ()[Lnet/minecraft/world/item/TooltipFlag$Default; b
	isAdvanced ()Z a
net/minecraft/world/item/TridentItem bsd
	BASE_DAMAGE b
	SHOOT_POWER c
	THROW_THRESHOLD_TIME a
	defaultModifiers d
	canAttackBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)Z a
	getDefaultAttributeModifiers (Lnet/minecraft/world/entity/EquipmentSlot;)Lcom/google/common/collect/Multimap; a
	getEnchantmentValue ()I c
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; c
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I b
	hurtEnemy (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
	mineBlock (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/LivingEntity;)Z a
	releaseUsing (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;I)V a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/UseAnim bse
	$VALUES i
	BLOCK d
	BOW e
	CROSSBOW g
	DRINK c
	EAT b
	NONE a
	SPEAR f
	SPYGLASS h
	$values ()[Lnet/minecraft/world/item/UseAnim; a
net/minecraft/world/item/Vanishable bsf
net/minecraft/world/item/WaterLilyBlockItem bsg
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/Wearable bsh
net/minecraft/world/item/WritableBookItem bsi
	makeSureTagIsValid (Lnet/minecraft/nbt/CompoundTag;)Z a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/WrittenBookItem bsj
	MAX_GENERATION f
	MAX_PAGES e
	PAGE_EDIT_LENGTH c
	PAGE_LENGTH d
	TAG_AUTHOR i
	TAG_FILTERED_PAGES r
	TAG_FILTERED_TITLE h
	TAG_GENERATION s
	TAG_PAGES j
	TAG_RESOLVED t
	TAG_TITLE g
	TITLE_LENGTH a
	TITLE_MAX_LENGTH b
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	getGeneration (Lnet/minecraft/world/item/ItemStack;)I d
	getName (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/network/chat/Component; m
	getPageCount (Lnet/minecraft/world/item/ItemStack;)I k
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z i
	makeSureTagIsValid (Lnet/minecraft/nbt/CompoundTag;)Z a
	resolveBookComponents (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/player/Player;)Z a
	resolvePage (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/player/Player;Ljava/lang/String;)Ljava/lang/String; a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/alchemy/Potion bsk
	effects b
	name a
	byName (Ljava/lang/String;)Lnet/minecraft/world/item/alchemy/Potion; a
	getEffects ()Ljava/util/List; a
	getName (Ljava/lang/String;)Ljava/lang/String; b
	hasInstantEffects ()Z b
net/minecraft/world/item/alchemy/PotionBrewing bsl
	ALLOWED_CONTAINER e
	ALLOWED_CONTAINERS d
	BREWING_TIME_SECONDS a
	CONTAINER_MIXES c
	POTION_MIXES b
	addContainer (Lnet/minecraft/world/item/Item;)V a
	addContainerRecipe (Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/Item;)V a
	addMix (Lnet/minecraft/world/item/alchemy/Potion;Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/alchemy/Potion;)V a
	bootStrap ()V a
	hasContainerMix (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z b
	hasMix (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	hasPotionMix (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z c
	isBrewablePotion (Lnet/minecraft/world/item/alchemy/Potion;)Z a
	isContainerIngredient (Lnet/minecraft/world/item/ItemStack;)Z b
	isIngredient (Lnet/minecraft/world/item/ItemStack;)Z a
	isPotionIngredient (Lnet/minecraft/world/item/ItemStack;)Z c
	mix (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; d
net/minecraft/world/item/alchemy/PotionBrewing$Mix bsl$a
	from a
	ingredient b
	to c
net/minecraft/world/item/alchemy/PotionUtils bsm
	EMPTY_COLOR d
	NO_EFFECT e
	TAG_CUSTOM_POTION_COLOR b
	TAG_CUSTOM_POTION_EFFECTS a
	TAG_POTION c
	addPotionTooltip (Lnet/minecraft/world/item/ItemStack;Ljava/util/List;F)V a
	getAllEffects (Lnet/minecraft/nbt/CompoundTag;)Ljava/util/List; a
	getAllEffects (Lnet/minecraft/world/item/alchemy/Potion;Ljava/util/Collection;)Ljava/util/List; a
	getColor (Ljava/util/Collection;)I a
	getColor (Lnet/minecraft/world/item/ItemStack;)I c
	getColor (Lnet/minecraft/world/item/alchemy/Potion;)I a
	getCustomEffects (Lnet/minecraft/nbt/CompoundTag;)Ljava/util/List; b
	getCustomEffects (Lnet/minecraft/nbt/CompoundTag;Ljava/util/List;)V a
	getCustomEffects (Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; b
	getMobEffects (Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; a
	getPotion (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/item/alchemy/Potion; c
	getPotion (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/alchemy/Potion; d
	setCustomEffects (Lnet/minecraft/world/item/ItemStack;Ljava/util/Collection;)Lnet/minecraft/world/item/ItemStack; a
	setPotion (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/alchemy/Potion;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/item/alchemy/Potions bsn
	AWKWARD e
	EMPTY a
	FIRE_RESISTANCE m
	HARMING B
	HEALING z
	INVISIBILITY h
	LEAPING j
	LONG_FIRE_RESISTANCE n
	LONG_INVISIBILITY i
	LONG_LEAPING k
	LONG_NIGHT_VISION g
	LONG_POISON E
	LONG_REGENERATION H
	LONG_SLOWNESS s
	LONG_SLOW_FALLING Q
	LONG_STRENGTH K
	LONG_SWIFTNESS p
	LONG_TURTLE_MASTER v
	LONG_WATER_BREATHING y
	LONG_WEAKNESS N
	LUCK O
	MUNDANE c
	NIGHT_VISION f
	POISON D
	REGENERATION G
	SLOWNESS r
	SLOW_FALLING P
	STRENGTH J
	STRONG_HARMING C
	STRONG_HEALING A
	STRONG_LEAPING l
	STRONG_POISON F
	STRONG_REGENERATION I
	STRONG_SLOWNESS t
	STRONG_STRENGTH L
	STRONG_SWIFTNESS q
	STRONG_TURTLE_MASTER w
	SWIFTNESS o
	THICK d
	TURTLE_MASTER u
	WATER b
	WATER_BREATHING x
	WEAKNESS M
	register (Ljava/lang/String;Lnet/minecraft/world/item/alchemy/Potion;)Lnet/minecraft/world/item/alchemy/Potion; a
net/minecraft/world/item/context/BlockPlaceContext bsp
	relativePos b
	replaceClicked a
	at (Lnet/minecraft/world/item/context/BlockPlaceContext;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/item/context/BlockPlaceContext; a
	canPlace ()Z b
	getClickedPos ()Lnet/minecraft/core/BlockPos; a
	getNearestLookingDirection ()Lnet/minecraft/core/Direction; d
	getNearestLookingDirections ()[Lnet/minecraft/core/Direction; f
	getNearestLookingVerticalDirection ()Lnet/minecraft/core/Direction; e
	replacingClickedOnBlock ()Z c
net/minecraft/world/item/context/DirectionalPlaceContext bsq
	direction b
	canPlace ()Z b
	getClickedPos ()Lnet/minecraft/core/BlockPos; a
	getHorizontalDirection ()Lnet/minecraft/core/Direction; g
	getNearestLookingDirection ()Lnet/minecraft/core/Direction; d
	getNearestLookingDirections ()[Lnet/minecraft/core/Direction; f
	getRotation ()F i
	isSecondaryUseActive ()Z h
	replacingClickedOnBlock ()Z c
net/minecraft/world/item/context/UseOnContext bsr
	hand b
	hitResult c
	itemStack e
	level d
	player a
	getClickLocation ()Lnet/minecraft/world/phys/Vec3; l
	getClickedFace ()Lnet/minecraft/core/Direction; k
	getClickedPos ()Lnet/minecraft/core/BlockPos; a
	getHand ()Lnet/minecraft/world/InteractionHand; p
	getHitResult ()Lnet/minecraft/world/phys/BlockHitResult; j
	getHorizontalDirection ()Lnet/minecraft/core/Direction; g
	getItemInHand ()Lnet/minecraft/world/item/ItemStack; n
	getLevel ()Lnet/minecraft/world/level/Level; q
	getPlayer ()Lnet/minecraft/world/entity/player/Player; o
	getRotation ()F i
	isInside ()Z m
	isSecondaryUseActive ()Z h
net/minecraft/world/item/crafting/AbstractCookingRecipe bst
	cookingTime g
	experience f
	group c
	id b
	ingredient d
	result e
	type a
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getCookingTime ()I e
	getExperience ()F b
	getGroup ()Ljava/lang/String; d
	getId ()Lnet/minecraft/resources/ResourceLocation; f
	getIngredients ()Lnet/minecraft/core/NonNullList; a
	getResultItem ()Lnet/minecraft/world/item/ItemStack; c
	getType ()Lnet/minecraft/world/item/crafting/RecipeType; g
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/ArmorDyeRecipe bsu
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; R_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/BannerDuplicateRecipe bsv
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getRemainingItems (Lnet/minecraft/world/Container;)Lnet/minecraft/core/NonNullList; b
	getRemainingItems (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/core/NonNullList; b
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; R_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/BlastingRecipe bsw
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; R_
	getToastSymbol ()Lnet/minecraft/world/item/ItemStack; h
net/minecraft/world/item/crafting/BookCloningRecipe bsx
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getRemainingItems (Lnet/minecraft/world/Container;)Lnet/minecraft/core/NonNullList; b
	getRemainingItems (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/core/NonNullList; b
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; R_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/CampfireCookingRecipe bsy
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; R_
	getToastSymbol ()Lnet/minecraft/world/item/ItemStack; h
net/minecraft/world/item/crafting/CraftingRecipe bsz
	getType ()Lnet/minecraft/world/item/crafting/RecipeType; g
net/minecraft/world/item/crafting/CustomRecipe bta
	id a
	getId ()Lnet/minecraft/resources/ResourceLocation; f
	getResultItem ()Lnet/minecraft/world/item/ItemStack; c
	isSpecial ()Z Q_
net/minecraft/world/item/crafting/FireworkRocketRecipe btb
	GUNPOWDER_INGREDIENT b
	PAPER_INGREDIENT a
	STAR_INGREDIENT c
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getResultItem ()Lnet/minecraft/world/item/ItemStack; c
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; R_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/FireworkStarFadeRecipe btc
	STAR_INGREDIENT a
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; R_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/FireworkStarRecipe btd
	FLICKER_INGREDIENT c
	GUNPOWDER_INGREDIENT e
	SHAPE_BY_ITEM d
	SHAPE_INGREDIENT a
	TRAIL_INGREDIENT b
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getResultItem ()Lnet/minecraft/world/item/ItemStack; c
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; R_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/Ingredient bte
	EMPTY a
	itemStacks c
	stackingIds d
	values b
	dissolve ()V f
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/world/item/crafting/Ingredient; a
	fromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Ingredient; b
	fromValues (Ljava/util/stream/Stream;)Lnet/minecraft/world/item/crafting/Ingredient; b
	getItems ()[Lnet/minecraft/world/item/ItemStack; a
	getStackingIds ()Lit/unimi/dsi/fastutil/ints/IntList; b
	isEmpty ()Z d
	of ()Lnet/minecraft/world/item/crafting/Ingredient; e
	of (Ljava/util/stream/Stream;)Lnet/minecraft/world/item/crafting/Ingredient; a
	of (Lnet/minecraft/tags/Tag;)Lnet/minecraft/world/item/crafting/Ingredient; a
	of ([Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/crafting/Ingredient; a
	of ([Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/item/crafting/Ingredient; a
	test (Lnet/minecraft/world/item/ItemStack;)Z a
	toJson ()Lcom/google/gson/JsonElement; c
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	valueFromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/Ingredient$Value; a
net/minecraft/world/item/crafting/Ingredient$ItemValue bte$a
	item a
	getItems ()Ljava/util/Collection; a
	serialize ()Lcom/google/gson/JsonObject; b
net/minecraft/world/item/crafting/Ingredient$TagValue bte$b
	tag a
	getItems ()Ljava/util/Collection; a
	serialize ()Lcom/google/gson/JsonObject; b
net/minecraft/world/item/crafting/Ingredient$Value bte$c
	getItems ()Ljava/util/Collection; a
	serialize ()Lcom/google/gson/JsonObject; b
net/minecraft/world/item/crafting/MapCloningRecipe btf
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; R_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/MapExtendingRecipe btg
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; R_
	isSpecial ()Z Q_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/Recipe bth
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getGroup ()Ljava/lang/String; d
	getId ()Lnet/minecraft/resources/ResourceLocation; f
	getIngredients ()Lnet/minecraft/core/NonNullList; a
	getRemainingItems (Lnet/minecraft/world/Container;)Lnet/minecraft/core/NonNullList; b
	getResultItem ()Lnet/minecraft/world/item/ItemStack; c
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; R_
	getToastSymbol ()Lnet/minecraft/world/item/ItemStack; h
	getType ()Lnet/minecraft/world/item/crafting/RecipeType; g
	isIncomplete ()Z i
	isSpecial ()Z Q_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/RecipeManager bti
	GSON a
	LOGGER b
	hasErrors d
	recipes c
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply (Ljava/util/Map;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	byKey (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; a
	byType (Lnet/minecraft/world/item/crafting/RecipeType;)Ljava/util/Map; b
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/Recipe; a
	getAllRecipesFor (Lnet/minecraft/world/item/crafting/RecipeType;)Ljava/util/List; a
	getRecipeFor (Lnet/minecraft/world/item/crafting/RecipeType;Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Ljava/util/Optional; a
	getRecipeIds ()Ljava/util/stream/Stream; d
	getRecipes ()Ljava/util/Collection; b
	getRecipesFor (Lnet/minecraft/world/item/crafting/RecipeType;Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Ljava/util/List; b
	getRemainingItemsFor (Lnet/minecraft/world/item/crafting/RecipeType;Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Lnet/minecraft/core/NonNullList; c
	hadErrorsLoading ()Z a
	replaceRecipes (Ljava/lang/Iterable;)V a
net/minecraft/world/item/crafting/RecipeSerializer btj
	ARMOR_DYE c
	BANNER_DUPLICATE k
	BLASTING_RECIPE q
	BOOK_CLONING d
	CAMPFIRE_COOKING_RECIPE s
	FIREWORK_ROCKET g
	FIREWORK_STAR h
	FIREWORK_STAR_FADE i
	MAP_CLONING e
	MAP_EXTENDING f
	REPAIR_ITEM o
	SHAPED_RECIPE a
	SHAPELESS_RECIPE b
	SHIELD_DECORATION l
	SHULKER_BOX_COLORING m
	SMELTING_RECIPE p
	SMITHING u
	SMOKING_RECIPE r
	STONECUTTER t
	SUSPICIOUS_STEW n
	TIPPED_ARROW j
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Recipe; a
	register (Ljava/lang/String;Lnet/minecraft/world/item/crafting/RecipeSerializer;)Lnet/minecraft/world/item/crafting/RecipeSerializer; a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/Recipe;)V a
net/minecraft/world/item/crafting/RecipeType btk
	BLASTING c
	CAMPFIRE_COOKING e
	CRAFTING a
	SMELTING b
	SMITHING g
	SMOKING d
	STONECUTTING f
	register (Ljava/lang/String;)Lnet/minecraft/world/item/crafting/RecipeType; a
	tryMatch (Lnet/minecraft/world/item/crafting/Recipe;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/Container;)Ljava/util/Optional; a
net/minecraft/world/item/crafting/RepairItemRecipe btl
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; R_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/ShapedRecipe btm
	group f
	height b
	id e
	recipeItems c
	result d
	width a
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	dissolvePattern ([Ljava/lang/String;Ljava/util/Map;II)Lnet/minecraft/core/NonNullList; a
	firstNonSpace (Ljava/lang/String;)I a
	getGroup ()Ljava/lang/String; d
	getHeight ()I k
	getId ()Lnet/minecraft/resources/ResourceLocation; f
	getIngredients ()Lnet/minecraft/core/NonNullList; a
	getResultItem ()Lnet/minecraft/world/item/ItemStack; c
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; R_
	getWidth ()I j
	isIncomplete ()Z i
	itemFromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/Item; b
	itemStackFromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/ItemStack; a
	keyFromJson (Lcom/google/gson/JsonObject;)Ljava/util/Map; c
	lastNonSpace (Ljava/lang/String;)I b
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;IIZ)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
	patternFromJson (Lcom/google/gson/JsonArray;)[Ljava/lang/String; a
	shrink ([Ljava/lang/String;)[Ljava/lang/String; a
net/minecraft/world/item/crafting/ShapedRecipe$Serializer btm$a
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/ShapedRecipe; b
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/ShapedRecipe; b
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/Recipe;)V a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/ShapedRecipe;)V a
net/minecraft/world/item/crafting/ShapelessRecipe btn
	group b
	id a
	ingredients d
	result c
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getGroup ()Ljava/lang/String; d
	getId ()Lnet/minecraft/resources/ResourceLocation; f
	getIngredients ()Lnet/minecraft/core/NonNullList; a
	getResultItem ()Lnet/minecraft/world/item/ItemStack; c
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; R_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/ShapelessRecipe$Serializer btn$a
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/ShapelessRecipe; b
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/ShapelessRecipe; b
	itemsFromJson (Lcom/google/gson/JsonArray;)Lnet/minecraft/core/NonNullList; a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/Recipe;)V a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/ShapelessRecipe;)V a
net/minecraft/world/item/crafting/ShieldDecorationRecipe bto
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; R_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/ShulkerBoxColoring btp
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; R_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/SimpleCookingSerializer btq
	defaultCookingTime v
	factory w
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/AbstractCookingRecipe; b
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/AbstractCookingRecipe; b
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Recipe; a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/AbstractCookingRecipe;)V a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/Recipe;)V a
net/minecraft/world/item/crafting/SimpleCookingSerializer$CookieBaker btq$a
net/minecraft/world/item/crafting/SimpleRecipeSerializer btr
	constructor v
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Recipe; a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/Recipe;)V a
net/minecraft/world/item/crafting/SingleItemRecipe bts
	group d
	id c
	ingredient a
	result b
	serializer f
	type e
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getGroup ()Ljava/lang/String; d
	getId ()Lnet/minecraft/resources/ResourceLocation; f
	getIngredients ()Lnet/minecraft/core/NonNullList; a
	getResultItem ()Lnet/minecraft/world/item/ItemStack; c
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; R_
	getType ()Lnet/minecraft/world/item/crafting/RecipeType; g
net/minecraft/world/item/crafting/SingleItemRecipe$Serializer bts$a
	factory v
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/SingleItemRecipe; b
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/SingleItemRecipe; b
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/Recipe;)V a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/SingleItemRecipe;)V a
net/minecraft/world/item/crafting/SingleItemRecipe$Serializer$SingleItemMaker bts$a$a
net/minecraft/world/item/crafting/SmeltingRecipe btt
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; R_
	getToastSymbol ()Lnet/minecraft/world/item/ItemStack; h
net/minecraft/world/item/crafting/SmokingRecipe btu
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; R_
	getToastSymbol ()Lnet/minecraft/world/item/ItemStack; h
net/minecraft/world/item/crafting/StonecutterRecipe btv
	getToastSymbol ()Lnet/minecraft/world/item/ItemStack; h
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/SuspiciousStewRecipe btw
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; R_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/TippedArrowRecipe btx
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; R_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/UpgradeRecipe bty
	addition b
	base a
	id d
	result c
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getId ()Lnet/minecraft/resources/ResourceLocation; f
	getResultItem ()Lnet/minecraft/world/item/ItemStack; c
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; R_
	getToastSymbol ()Lnet/minecraft/world/item/ItemStack; h
	getType ()Lnet/minecraft/world/item/crafting/RecipeType; g
	isAdditionIngredient (Lnet/minecraft/world/item/ItemStack;)Z a
	isIncomplete ()Z i
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/UpgradeRecipe$Serializer bty$a
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/UpgradeRecipe; b
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/UpgradeRecipe; b
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/Recipe;)V a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/UpgradeRecipe;)V a
net/minecraft/world/item/enchantment/ArrowDamageEnchantment bua
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/ArrowFireEnchantment bub
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/ArrowInfiniteEnchantment buc
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/ArrowKnockbackEnchantment bud
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/ArrowPiercingEnchantment bue
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/BindingCurseEnchantment buf
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
	isCurse ()Z c
	isTreasureOnly ()Z b
net/minecraft/world/item/enchantment/DamageEnchantment bug
	ALL a
	ARTHROPODS c
	LEVEL_COST i
	LEVEL_COST_SPAN j
	MIN_COST h
	NAMES g
	UNDEAD b
	type d
	canEnchant (Lnet/minecraft/world/item/ItemStack;)Z a
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	doPostAttack (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;I)V a
	getDamageBonus (ILnet/minecraft/world/entity/MobType;)F a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/DigDurabilityEnchantment buh
	canEnchant (Lnet/minecraft/world/item/ItemStack;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
	shouldIgnoreDurabilityDrop (Lnet/minecraft/world/item/ItemStack;ILjava/util/Random;)Z a
net/minecraft/world/item/enchantment/DiggingEnchantment bui
	canEnchant (Lnet/minecraft/world/item/ItemStack;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/Enchantment buj
	category e
	descriptionId f
	rarity b
	slots a
	byId (I)Lnet/minecraft/world/item/enchantment/Enchantment; c
	canEnchant (Lnet/minecraft/world/item/ItemStack;)Z a
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	doPostAttack (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;I)V a
	doPostHurt (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;I)V b
	getDamageBonus (ILnet/minecraft/world/entity/MobType;)F a
	getDamageProtection (ILnet/minecraft/world/damagesource/DamageSource;)I a
	getDescriptionId ()Ljava/lang/String; g
	getFullname (I)Lnet/minecraft/network/chat/Component; d
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
	getMinLevel ()I e
	getOrCreateDescriptionId ()Ljava/lang/String; f
	getRarity ()Lnet/minecraft/world/item/enchantment/Enchantment$Rarity; d
	getSlotItems (Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/Map; a
	isCompatibleWith (Lnet/minecraft/world/item/enchantment/Enchantment;)Z b
	isCurse ()Z c
	isDiscoverable ()Z i
	isTradeable ()Z h
	isTreasureOnly ()Z b
net/minecraft/world/item/enchantment/Enchantment$Rarity buj$a
	$VALUES f
	COMMON a
	RARE c
	UNCOMMON b
	VERY_RARE d
	weight e
	$values ()[Lnet/minecraft/world/item/enchantment/Enchantment$Rarity; b
	getWeight ()I a
net/minecraft/world/item/enchantment/EnchantmentCategory buk
	$VALUES o
	ARMOR a
	ARMOR_CHEST d
	ARMOR_FEET b
	ARMOR_HEAD e
	ARMOR_LEGS c
	BOW k
	BREAKABLE j
	CROSSBOW m
	DIGGER g
	FISHING_ROD h
	TRIDENT i
	VANISHABLE n
	WEAPON f
	WEARABLE l
	$values ()[Lnet/minecraft/world/item/enchantment/EnchantmentCategory; a
	canEnchant (Lnet/minecraft/world/item/Item;)Z a
net/minecraft/world/item/enchantment/EnchantmentHelper bul
	deserializeEnchantments (Lnet/minecraft/nbt/ListTag;)Ljava/util/Map; a
	doPostDamageEffects (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;)V b
	doPostHurtEffects (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;)V a
	enchantItem (Ljava/util/Random;Lnet/minecraft/world/item/ItemStack;IZ)Lnet/minecraft/world/item/ItemStack; a
	filterCompatibleEnchantments (Ljava/util/List;Lnet/minecraft/world/item/enchantment/EnchantmentInstance;)V a
	getAvailableEnchantmentResults (ILnet/minecraft/world/item/ItemStack;Z)Ljava/util/List; a
	getBlockEfficiency (Lnet/minecraft/world/entity/LivingEntity;)I f
	getDamageBonus (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/MobType;)F a
	getDamageProtection (Ljava/lang/Iterable;Lnet/minecraft/world/damagesource/DamageSource;)I a
	getDepthStrider (Lnet/minecraft/world/entity/LivingEntity;)I e
	getEnchantmentCost (Ljava/util/Random;IILnet/minecraft/world/item/ItemStack;)I a
	getEnchantmentLevel (Lnet/minecraft/world/item/enchantment/Enchantment;Lnet/minecraft/world/entity/LivingEntity;)I a
	getEnchantments (Lnet/minecraft/world/item/ItemStack;)Ljava/util/Map; a
	getFireAspect (Lnet/minecraft/world/entity/LivingEntity;)I c
	getFishingLuckBonus (Lnet/minecraft/world/item/ItemStack;)I b
	getFishingSpeedBonus (Lnet/minecraft/world/item/ItemStack;)I c
	getItemEnchantmentLevel (Lnet/minecraft/world/item/enchantment/Enchantment;Lnet/minecraft/world/item/ItemStack;)I a
	getKnockbackBonus (Lnet/minecraft/world/entity/LivingEntity;)I b
	getLoyalty (Lnet/minecraft/world/item/ItemStack;)I f
	getMobLooting (Lnet/minecraft/world/entity/LivingEntity;)I g
	getRandomItemWith (Lnet/minecraft/world/item/enchantment/Enchantment;Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/Map$Entry; b
	getRandomItemWith (Lnet/minecraft/world/item/enchantment/Enchantment;Lnet/minecraft/world/entity/LivingEntity;Ljava/util/function/Predicate;)Ljava/util/Map$Entry; a
	getRespiration (Lnet/minecraft/world/entity/LivingEntity;)I d
	getRiptide (Lnet/minecraft/world/item/ItemStack;)I g
	getSweepingDamageRatio (Lnet/minecraft/world/entity/LivingEntity;)F a
	hasAquaAffinity (Lnet/minecraft/world/entity/LivingEntity;)Z h
	hasBindingCurse (Lnet/minecraft/world/item/ItemStack;)Z d
	hasChanneling (Lnet/minecraft/world/item/ItemStack;)Z h
	hasFrostWalker (Lnet/minecraft/world/entity/LivingEntity;)Z i
	hasSoulSpeed (Lnet/minecraft/world/entity/LivingEntity;)Z j
	hasVanishingCurse (Lnet/minecraft/world/item/ItemStack;)Z e
	isEnchantmentCompatible (Ljava/util/Collection;Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	runIterationOnInventory (Lnet/minecraft/world/item/enchantment/EnchantmentHelper$EnchantmentVisitor;Ljava/lang/Iterable;)V a
	runIterationOnItem (Lnet/minecraft/world/item/enchantment/EnchantmentHelper$EnchantmentVisitor;Lnet/minecraft/world/item/ItemStack;)V a
	selectEnchantment (Ljava/util/Random;Lnet/minecraft/world/item/ItemStack;IZ)Ljava/util/List; b
	setEnchantments (Ljava/util/Map;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/item/enchantment/EnchantmentHelper$EnchantmentVisitor bul$a
net/minecraft/world/item/enchantment/EnchantmentInstance bum
	enchantment a
	level b
net/minecraft/world/item/enchantment/Enchantments bun
	ALL_DAMAGE_PROTECTION a
	AQUA_AFFINITY g
	ARMOR_SLOTS M
	BANE_OF_ARTHROPODS o
	BINDING_CURSE k
	BLAST_PROTECTION d
	BLOCK_EFFICIENCY t
	BLOCK_FORTUNE w
	CHANNELING G
	DEPTH_STRIDER i
	FALL_PROTECTION c
	FIRE_ASPECT q
	FIRE_PROTECTION b
	FISHING_LUCK B
	FISHING_SPEED C
	FLAMING_ARROWS z
	FROST_WALKER j
	IMPALING E
	INFINITY_ARROWS A
	KNOCKBACK p
	LOYALTY D
	MENDING K
	MOB_LOOTING r
	MULTISHOT H
	PIERCING J
	POWER_ARROWS x
	PROJECTILE_PROTECTION e
	PUNCH_ARROWS y
	QUICK_CHARGE I
	RESPIRATION f
	RIPTIDE F
	SHARPNESS m
	SILK_TOUCH u
	SMITE n
	SOUL_SPEED l
	SWEEPING_EDGE s
	THORNS h
	UNBREAKING v
	VANISHING_CURSE L
	register (Ljava/lang/String;Lnet/minecraft/world/item/enchantment/Enchantment;)Lnet/minecraft/world/item/enchantment/Enchantment; a
net/minecraft/world/item/enchantment/FireAspectEnchantment buo
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/FishingSpeedEnchantment bup
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/FrostWalkerEnchantment buq
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
	isTreasureOnly ()Z b
	onEntityMoved (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;I)V a
net/minecraft/world/item/enchantment/KnockbackEnchantment bur
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/LootBonusEnchantment bus
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/MendingEnchantment but
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
	isTreasureOnly ()Z b
net/minecraft/world/item/enchantment/MultiShotEnchantment buu
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/OxygenEnchantment buv
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/ProtectionEnchantment buw
	type a
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getDamageProtection (ILnet/minecraft/world/damagesource/DamageSource;)I a
	getExplosionKnockbackAfterDampener (Lnet/minecraft/world/entity/LivingEntity;D)D a
	getFireAfterDampener (Lnet/minecraft/world/entity/LivingEntity;I)I a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/ProtectionEnchantment$Type buw$a
	$VALUES h
	ALL a
	EXPLOSION d
	FALL c
	FIRE b
	PROJECTILE e
	levelCost g
	minCost f
	$values ()[Lnet/minecraft/world/item/enchantment/ProtectionEnchantment$Type; c
	getLevelCost ()I b
	getMinCost ()I a
net/minecraft/world/item/enchantment/QuickChargeEnchantment bux
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/SoulSpeedEnchantment buy
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
	isDiscoverable ()Z i
	isTradeable ()Z h
	isTreasureOnly ()Z b
net/minecraft/world/item/enchantment/SweepingEdgeEnchantment buz
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
	getSweepingDamageRatio (I)F e
net/minecraft/world/item/enchantment/ThornsEnchantment bva
	CHANCE_PER_LEVEL a
	canEnchant (Lnet/minecraft/world/item/ItemStack;)Z a
	doPostHurt (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;I)V b
	getDamage (ILjava/util/Random;)I b
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
	shouldHit (ILjava/util/Random;)Z a
net/minecraft/world/item/enchantment/TridentChannelingEnchantment bvb
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/TridentImpalerEnchantment bvc
	getDamageBonus (ILnet/minecraft/world/entity/MobType;)F a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/TridentLoyaltyEnchantment bvd
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/TridentRiptideEnchantment bve
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/UntouchingEnchantment bvf
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/VanishingCurseEnchantment bvg
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
	isCurse ()Z c
	isTreasureOnly ()Z b
net/minecraft/world/item/enchantment/WaterWalkerEnchantment bvh
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/WaterWorkerEnchantment bvi
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/trading/Merchant bvl
	canRestock ()Z fJ
	getLevel ()Lnet/minecraft/world/level/Level; fD
	getNotifyTradeSound ()Lnet/minecraft/sounds/SoundEvent; fz
	getOffers ()Lnet/minecraft/world/item/trading/MerchantOffers; fx
	getTradingPlayer ()Lnet/minecraft/world/entity/player/Player; fv
	getVillagerXp ()I t
	notifyTrade (Lnet/minecraft/world/item/trading/MerchantOffer;)V a
	notifyTradeUpdated (Lnet/minecraft/world/item/ItemStack;)V m
	openTradingScreen (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/network/chat/Component;I)V a
	overrideOffers (Lnet/minecraft/world/item/trading/MerchantOffers;)V a
	overrideXp (I)V u
	setTradingPlayer (Lnet/minecraft/world/entity/player/Player;)V f
	showProgressBar ()Z fy
net/minecraft/world/item/trading/MerchantOffer bvm
	baseCostA a
	costB b
	demand h
	maxUses e
	priceMultiplier i
	result c
	rewardExp f
	specialPriceDiff g
	uses d
	xp j
	addToSpecialPriceDiff (I)V a
	assemble ()Lnet/minecraft/world/item/ItemStack; f
	createTag ()Lnet/minecraft/nbt/CompoundTag; t
	getBaseCostA ()Lnet/minecraft/world/item/ItemStack; a
	getCostA ()Lnet/minecraft/world/item/ItemStack; b
	getCostB ()Lnet/minecraft/world/item/ItemStack; c
	getDemand ()I k
	getMaxUses ()I i
	getPriceMultiplier ()F n
	getResult ()Lnet/minecraft/world/item/ItemStack; d
	getSpecialPriceDiff ()I m
	getUses ()I g
	getXp ()I o
	increaseUses ()V j
	isOutOfStock ()Z p
	isRequiredItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z c
	needsRestock ()Z r
	resetSpecialPriceDiff ()V l
	resetUses ()V h
	satisfiedBy (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	setSpecialPriceDiff (I)V b
	setToOutOfStock ()V q
	shouldRewardExp ()Z s
	take (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z b
	updateDemand ()V e
net/minecraft/world/item/trading/MerchantOffers bvn
	createFromStream (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/trading/MerchantOffers; b
	createTag ()Lnet/minecraft/nbt/CompoundTag; a
	getRecipeFor (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;I)Lnet/minecraft/world/item/trading/MerchantOffer; a
	writeToStream (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/world/level/BaseCommandBlock bvp
	DEFAULT_NAME c
	TIME_FORMAT b
	command i
	lastExecution d
	lastOutput h
	name j
	successCount f
	trackOutput g
	updateLastExecution e
	acceptsFailure ()Z i_
	acceptsSuccess ()Z h_
	createCommandSourceStack ()Lnet/minecraft/commands/CommandSourceStack; i
	getCommand ()Ljava/lang/String; l
	getLastOutput ()Lnet/minecraft/network/chat/Component; k
	getLevel ()Lnet/minecraft/server/level/ServerLevel; e
	getName ()Lnet/minecraft/network/chat/Component; m
	getPosition ()Lnet/minecraft/world/phys/Vec3; g
	getSuccessCount ()I j
	isTrackOutput ()Z n
	load (Lnet/minecraft/nbt/CompoundTag;)V b
	onUpdated ()V f
	performCommand (Lnet/minecraft/world/level/Level;)Z a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	sendMessage (Lnet/minecraft/network/chat/Component;Ljava/util/UUID;)V a
	setCommand (Ljava/lang/String;)V a
	setLastOutput (Lnet/minecraft/network/chat/Component;)V b
	setName (Lnet/minecraft/network/chat/Component;)V a
	setSuccessCount (I)V a
	setTrackOutput (Z)V a
	shouldInformAdmins ()Z E_
	usedBy (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/BaseSpawner bvq
	EMPTY_POTENTIALS c
	EVENT_SPAWN b
	LOGGER a
	displayEntity l
	maxNearbyEntities m
	maxSpawnDelay j
	minSpawnDelay i
	nextSpawnData f
	oSpin h
	random p
	requiredPlayerRange n
	spawnCount k
	spawnDelay d
	spawnPotentials e
	spawnRange o
	spin g
	broadcastEvent (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;I)V a
	clientTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	delay (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	getEntityId (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/resources/ResourceLocation; b
	getOrCreateDisplayEntity (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/Entity; a
	getSpin ()D a
	getoSpin ()D b
	isNearPlayer (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z c
	load (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/nbt/CompoundTag;)V a
	onEventTriggered (Lnet/minecraft/world/level/Level;I)Z a
	save (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
	serverTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V a
	setEntityId (Lnet/minecraft/world/entity/EntityType;)V a
	setNextSpawnData (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/SpawnData;)V a
net/minecraft/world/level/BlockAndTintGetter bvr
	canSeeSky (Lnet/minecraft/core/BlockPos;)Z g
	getBlockTint (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ColorResolver;)I a
	getBrightness (Lnet/minecraft/world/level/LightLayer;Lnet/minecraft/core/BlockPos;)I a
	getLightEngine ()Lnet/minecraft/world/level/lighting/LevelLightEngine; k_
	getRawBrightness (Lnet/minecraft/core/BlockPos;I)I b
	getShade (Lnet/minecraft/core/Direction;Z)F a
net/minecraft/world/level/BlockEventData bvs
	block b
	paramA c
	paramB d
	pos a
	getBlock ()Lnet/minecraft/world/level/block/Block; b
	getParamA ()I c
	getParamB ()I d
	getPos ()Lnet/minecraft/core/BlockPos; a
net/minecraft/world/level/BlockGetter bvt
	clip (Lnet/minecraft/world/level/ClipContext;)Lnet/minecraft/world/phys/BlockHitResult; a
	clipWithInteractionOverride (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/BlockHitResult; a
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c_
	getBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Ljava/util/Optional; a
	getBlockFloorHeight (Lnet/minecraft/core/BlockPos;)D i
	getBlockFloorHeight (Lnet/minecraft/world/phys/shapes/VoxelShape;Ljava/util/function/Supplier;)D a
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a_
	getBlockStates (Lnet/minecraft/world/phys/AABB;)Ljava/util/stream/Stream; a
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b_
	getLightEmission (Lnet/minecraft/core/BlockPos;)I h
	getMaxLightLevel ()I O
	isBlockInLine (Lnet/minecraft/world/level/ClipBlockStateContext;)Lnet/minecraft/world/phys/BlockHitResult; a
	traverseBlocks (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Ljava/lang/Object;Ljava/util/function/BiFunction;Ljava/util/function/Function;)Ljava/lang/Object; a
net/minecraft/world/level/ChunkPos bvu
	COORD_BITS d
	COORD_MASK e
	HASH_A h
	HASH_C i
	HASH_Z_XOR j
	INVALID_CHUNK_POS a
	REGION_BITS f
	REGION_MASK g
	x b
	z c
	asLong (II)J a
	asLong (Lnet/minecraft/core/BlockPos;)J a
	getBlockAt (III)Lnet/minecraft/core/BlockPos; a
	getBlockX (I)I a
	getBlockZ (I)I b
	getChessboardDistance (Lnet/minecraft/world/level/ChunkPos;)I a
	getMaxBlockX ()I f
	getMaxBlockZ ()I g
	getMiddleBlockPosition (I)Lnet/minecraft/core/BlockPos; c
	getMiddleBlockX ()I b
	getMiddleBlockZ ()I c
	getMinBlockX ()I d
	getMinBlockZ ()I e
	getRegionLocalX ()I j
	getRegionLocalZ ()I k
	getRegionX ()I h
	getRegionZ ()I i
	getWorldPosition ()Lnet/minecraft/core/BlockPos; l
	getX (J)I a
	getZ (J)I b
	rangeClosed (Lnet/minecraft/world/level/ChunkPos;I)Ljava/util/stream/Stream; a
	rangeClosed (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/ChunkPos;)Ljava/util/stream/Stream; a
	toLong ()J a
net/minecraft/world/level/ChunkTickList bvv
	ticks a
	toId b
	copyOut (Lnet/minecraft/world/level/TickList;)V a
	create (Lnet/minecraft/nbt/ListTag;Ljava/util/function/Function;Ljava/util/function/Function;)Lnet/minecraft/world/level/ChunkTickList; a
	hasScheduledTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z a
	save ()Lnet/minecraft/nbt/ListTag; b
	scheduleTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;ILnet/minecraft/world/level/TickPriority;)V a
	size ()I a
	willTickThisTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z b
net/minecraft/world/level/ChunkTickList$ScheduledTick bvv$a
	delay b
	pos a
	priority c
	type d
net/minecraft/world/level/ClipBlockStateContext bvw
	block c
	from a
	to b
	getFrom ()Lnet/minecraft/world/phys/Vec3; b
	getTo ()Lnet/minecraft/world/phys/Vec3; a
	isTargetBlock ()Ljava/util/function/Predicate; c
net/minecraft/world/level/ClipContext bvx
	block c
	collisionContext e
	fluid d
	from a
	to b
	getBlockShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getFluidShape (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getFrom ()Lnet/minecraft/world/phys/Vec3; b
	getTo ()Lnet/minecraft/world/phys/Vec3; a
net/minecraft/world/level/ClipContext$Block bvx$a
	$VALUES e
	COLLIDER a
	OUTLINE b
	VISUAL c
	shapeGetter d
	$values ()[Lnet/minecraft/world/level/ClipContext$Block; a
net/minecraft/world/level/ClipContext$Fluid bvx$b
	$VALUES e
	ANY c
	NONE a
	SOURCE_ONLY b
	canPick d
	$values ()[Lnet/minecraft/world/level/ClipContext$Fluid; a
	canPick (Lnet/minecraft/world/level/material/FluidState;)Z a
net/minecraft/world/level/ClipContext$ShapeGetter bvx$c
net/minecraft/world/level/CollisionGetter bvy
	findFreePosition (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/Vec3;DDD)Ljava/util/Optional; a
	getBlockCollisions (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;)Ljava/util/stream/Stream; b
	getBlockCollisions (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;Ljava/util/function/BiPredicate;)Ljava/util/stream/Stream; b
	getChunkForCollisions (II)Lnet/minecraft/world/level/BlockGetter; c
	getCollisions (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/stream/Stream; d
	getEntityCollisions (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/stream/Stream; c
	getWorldBorder ()Lnet/minecraft/world/level/border/WorldBorder; o_
	hasBlockCollision (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;Ljava/util/function/BiPredicate;)Z a
	isUnobstructed (Lnet/minecraft/world/entity/Entity;)Z f
	isUnobstructed (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/shapes/VoxelShape;)Z a
	isUnobstructed (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Z a
	noCollision (Lnet/minecraft/world/entity/Entity;)Z g
	noCollision (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;)Z a
	noCollision (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Z b
	noCollision (Lnet/minecraft/world/phys/AABB;)Z b
net/minecraft/world/level/CollisionSpliterator bvz
	box b
	collisionGetter g
	context c
	cursor d
	entityShape f
	needsBorderCheck h
	pos e
	predicate i
	source a
	collisionCheck (Ljava/util/function/Consumer;)Z a
	getChunk (II)Lnet/minecraft/world/level/BlockGetter; a
	isBoxFullyWithinWorldBorder (Lnet/minecraft/world/level/border/WorldBorder;Lnet/minecraft/world/phys/AABB;)Z a
	isCloseToBorder (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/AABB;)Z a
	isOutsideBorder (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/AABB;)Z b
	worldBorderCheck (Ljava/util/function/Consumer;)Z b
net/minecraft/world/level/CommonLevelAccessor bwa
	getBiomeName (Lnet/minecraft/core/BlockPos;)Ljava/util/Optional; j
	getBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Ljava/util/Optional; a
	getEntityCollisions (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/stream/Stream; c
	getHeightmapPos (Lnet/minecraft/world/level/levelgen/Heightmap$Types;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	isUnobstructed (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/shapes/VoxelShape;)Z a
	registryAccess ()Lnet/minecraft/core/RegistryAccess; t
net/minecraft/world/level/CustomSpawner bwb
	tick (Lnet/minecraft/server/level/ServerLevel;ZZ)I a
net/minecraft/world/level/DataPackConfig bwc
	CODEC b
	DEFAULT a
	disabled d
	enabled c
	getDisabled ()Ljava/util/List; b
	getEnabled ()Ljava/util/List; a
net/minecraft/world/level/EmptyBlockGetter bwd
	$VALUES b
	INSTANCE a
	$values ()[Lnet/minecraft/world/level/EmptyBlockGetter; a
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c_
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a_
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b_
	getHeight ()I t_
	getMinBuildHeight ()I s_
net/minecraft/world/level/EmptyTickList bwe
	INSTANCE a
	empty ()Lnet/minecraft/world/level/EmptyTickList; b
	hasScheduledTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z a
	scheduleTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;I)V a
	scheduleTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;ILnet/minecraft/world/level/TickPriority;)V a
	size ()I a
	willTickThisTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z b
net/minecraft/world/level/EntityBasedExplosionDamageCalculator bwf
	source a
	getBlockExplosionResistance (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Ljava/util/Optional; a
	shouldBlockExplode (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;F)Z a
net/minecraft/world/level/EntityGetter bwg
	getEntities (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;)Ljava/util/List; a_
	getEntities (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/List; a
	getEntities (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/List; a
	getEntitiesOfClass (Ljava/lang/Class;Lnet/minecraft/world/phys/AABB;)Ljava/util/List; a
	getEntitiesOfClass (Ljava/lang/Class;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/List; a
	getEntityCollisions (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/stream/Stream; c
	getNearbyEntities (Ljava/lang/Class;Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/phys/AABB;)Ljava/util/List; a
	getNearbyPlayers (Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/phys/AABB;)Ljava/util/List; a
	getNearestEntity (Ljava/lang/Class;Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;Lnet/minecraft/world/entity/LivingEntity;DDDLnet/minecraft/world/phys/AABB;)Lnet/minecraft/world/entity/LivingEntity; a
	getNearestEntity (Ljava/util/List;Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;Lnet/minecraft/world/entity/LivingEntity;DDD)Lnet/minecraft/world/entity/LivingEntity; a
	getNearestPlayer (DDDDLjava/util/function/Predicate;)Lnet/minecraft/world/entity/player/Player; a
	getNearestPlayer (DDDDZ)Lnet/minecraft/world/entity/player/Player; a
	getNearestPlayer (Lnet/minecraft/world/entity/Entity;D)Lnet/minecraft/world/entity/player/Player; a
	getNearestPlayer (Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;DDD)Lnet/minecraft/world/entity/player/Player; a
	getNearestPlayer (Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/player/Player; a
	getNearestPlayer (Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;Lnet/minecraft/world/entity/LivingEntity;DDD)Lnet/minecraft/world/entity/player/Player; a
	getPlayerByUUID (Ljava/util/UUID;)Lnet/minecraft/world/entity/player/Player; b
	hasNearbyAlivePlayer (DDDD)Z a
	isUnobstructed (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/shapes/VoxelShape;)Z a
	players ()Ljava/util/List; z
net/minecraft/world/level/Explosion bwh
	EXPLOSION_DAMAGE_CALCULATOR a
	MAX_DROPS_PER_COMBINED_STACK b
	blockInteraction d
	damageCalculator m
	damageSource l
	fire c
	hitPlayers o
	level f
	radius k
	random e
	source j
	toBlow n
	x g
	y h
	z i
	addBlockDrops (Lit/unimi/dsi/fastutil/objects/ObjectArrayList;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPos;)V a
	clearToBlow ()V e
	explode ()V a
	finalizeExplosion (Z)V a
	getDamageSource ()Lnet/minecraft/world/damagesource/DamageSource; b
	getHitPlayers ()Ljava/util/Map; c
	getSeenPercent (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/entity/Entity;)F a
	getSourceMob ()Lnet/minecraft/world/entity/LivingEntity; d
	getToBlow ()Ljava/util/List; f
	makeDamageCalculator (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/level/ExplosionDamageCalculator; a
net/minecraft/world/level/Explosion$BlockInteraction bwh$a
	$VALUES d
	BREAK b
	DESTROY c
	NONE a
	$values ()[Lnet/minecraft/world/level/Explosion$BlockInteraction; a
net/minecraft/world/level/ExplosionDamageCalculator bwi
	getBlockExplosionResistance (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Ljava/util/Optional; a
	shouldBlockExplode (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;F)Z a
net/minecraft/world/level/FoliageColor bwj
	pixels a
	get (DD)I a
	getBirchColor ()I b
	getDefaultColor ()I c
	getEvergreenColor ()I a
	init ([I)V a
net/minecraft/world/level/ForcedChunksSavedData bwk
	FILE_ID a
	TAG_FORCED b
	chunks c
	getChunks ()Lit/unimi/dsi/fastutil/longs/LongSet; a
	load (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/ForcedChunksSavedData; b
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/world/level/GameRules bwl
	DEFAULT_RANDOM_TICK_SPEED a
	GAME_RULE_TYPES L
	LOGGER K
	RULE_ANNOUNCE_ADVANCEMENTS x
	RULE_COMMANDBLOCKOUTPUT i
	RULE_DAYLIGHT k
	RULE_DISABLE_ELYTRA_MOVEMENT_CHECK s
	RULE_DISABLE_RAIDS y
	RULE_DOBLOCKDROPS g
	RULE_DOENTITYDROPS h
	RULE_DOFIRETICK b
	RULE_DOINSOMNIA z
	RULE_DOMOBLOOT f
	RULE_DOMOBSPAWNING e
	RULE_DO_IMMEDIATE_RESPAWN A
	RULE_DO_PATROL_SPAWNING F
	RULE_DO_TRADER_SPAWNING G
	RULE_DROWNING_DAMAGE B
	RULE_FALL_DAMAGE C
	RULE_FIRE_DAMAGE D
	RULE_FORGIVE_DEAD_PLAYERS H
	RULE_FREEZE_DAMAGE E
	RULE_KEEPINVENTORY d
	RULE_LIMITED_CRAFTING v
	RULE_LOGADMINCOMMANDS l
	RULE_MAX_COMMAND_CHAIN_LENGTH w
	RULE_MAX_ENTITY_CRAMMING t
	RULE_MOBGRIEFING c
	RULE_NATURAL_REGENERATION j
	RULE_PLAYERS_SLEEPING_PERCENTAGE J
	RULE_RANDOMTICKING n
	RULE_REDUCEDDEBUGINFO p
	RULE_SENDCOMMANDFEEDBACK o
	RULE_SHOWDEATHMESSAGES m
	RULE_SPAWN_RADIUS r
	RULE_SPECTATORSGENERATECHUNKS q
	RULE_UNIVERSAL_ANGER I
	RULE_WEATHER_CYCLE u
	rules M
	assignCap (Lnet/minecraft/world/level/GameRules$Key;Lnet/minecraft/world/level/GameRules;Lnet/minecraft/server/MinecraftServer;)V a
	assignFrom (Lnet/minecraft/world/level/GameRules;Lnet/minecraft/server/MinecraftServer;)V a
	callVisitorCap (Lnet/minecraft/world/level/GameRules$GameRuleTypeVisitor;Lnet/minecraft/world/level/GameRules$Key;Lnet/minecraft/world/level/GameRules$Type;)V a
	copy ()Lnet/minecraft/world/level/GameRules; b
	createTag ()Lnet/minecraft/nbt/CompoundTag; a
	getBoolean (Lnet/minecraft/world/level/GameRules$Key;)Z b
	getInt (Lnet/minecraft/world/level/GameRules$Key;)I c
	getRule (Lnet/minecraft/world/level/GameRules$Key;)Lnet/minecraft/world/level/GameRules$Value; a
	loadFromTag (Lcom/mojang/serialization/DynamicLike;)V a
	register (Ljava/lang/String;Lnet/minecraft/world/level/GameRules$Category;Lnet/minecraft/world/level/GameRules$Type;)Lnet/minecraft/world/level/GameRules$Key; a
	visitGameRuleTypes (Lnet/minecraft/world/level/GameRules$GameRuleTypeVisitor;)V a
net/minecraft/world/level/GameRules$BooleanValue bwl$a
	value b
	copy ()Lnet/minecraft/world/level/GameRules$BooleanValue; e
	copy ()Lnet/minecraft/world/level/GameRules$Value; f
	create (Z)Lnet/minecraft/world/level/GameRules$Type; a
	create (ZLjava/util/function/BiConsumer;)Lnet/minecraft/world/level/GameRules$Type; a
	deserialize (Ljava/lang/String;)V a
	get ()Z a
	getCommandResult ()I c
	getSelf ()Lnet/minecraft/world/level/GameRules$BooleanValue; d
	getSelf ()Lnet/minecraft/world/level/GameRules$Value; g
	serialize ()Ljava/lang/String; b
	set (ZLnet/minecraft/server/MinecraftServer;)V a
	setFrom (Lnet/minecraft/world/level/GameRules$BooleanValue;Lnet/minecraft/server/MinecraftServer;)V a
	setFrom (Lnet/minecraft/world/level/GameRules$Value;Lnet/minecraft/server/MinecraftServer;)V a
	updateFromArgument (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V a
net/minecraft/world/level/GameRules$Category bwl$b
	$VALUES i
	CHAT f
	DROPS d
	MISC g
	MOBS b
	PLAYER a
	SPAWNING c
	UPDATES e
	descriptionId h
	$values ()[Lnet/minecraft/world/level/GameRules$Category; b
	getDescriptionId ()Ljava/lang/String; a
net/minecraft/world/level/GameRules$GameRuleTypeVisitor bwl$c
	visit (Lnet/minecraft/world/level/GameRules$Key;Lnet/minecraft/world/level/GameRules$Type;)V a
	visitBoolean (Lnet/minecraft/world/level/GameRules$Key;Lnet/minecraft/world/level/GameRules$Type;)V b
	visitInteger (Lnet/minecraft/world/level/GameRules$Key;Lnet/minecraft/world/level/GameRules$Type;)V c
net/minecraft/world/level/GameRules$IntegerValue bwl$d
	value b
	copy ()Lnet/minecraft/world/level/GameRules$IntegerValue; e
	copy ()Lnet/minecraft/world/level/GameRules$Value; f
	create (I)Lnet/minecraft/world/level/GameRules$Type; a
	create (ILjava/util/function/BiConsumer;)Lnet/minecraft/world/level/GameRules$Type; a
	deserialize (Ljava/lang/String;)V a
	get ()I a
	getCommandResult ()I c
	getSelf ()Lnet/minecraft/world/level/GameRules$IntegerValue; d
	getSelf ()Lnet/minecraft/world/level/GameRules$Value; g
	safeParse (Ljava/lang/String;)I c
	serialize ()Ljava/lang/String; b
	set (ILnet/minecraft/server/MinecraftServer;)V a
	setFrom (Lnet/minecraft/world/level/GameRules$IntegerValue;Lnet/minecraft/server/MinecraftServer;)V a
	setFrom (Lnet/minecraft/world/level/GameRules$Value;Lnet/minecraft/server/MinecraftServer;)V a
	tryDeserialize (Ljava/lang/String;)Z b
	updateFromArgument (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V a
net/minecraft/world/level/GameRules$Key bwl$e
	category b
	id a
	getCategory ()Lnet/minecraft/world/level/GameRules$Category; c
	getDescriptionId ()Ljava/lang/String; b
	getId ()Ljava/lang/String; a
net/minecraft/world/level/GameRules$Type bwl$f
	argument a
	callback c
	constructor b
	visitorCaller d
	callVisitor (Lnet/minecraft/world/level/GameRules$GameRuleTypeVisitor;Lnet/minecraft/world/level/GameRules$Key;)V a
	createArgument (Ljava/lang/String;)Lcom/mojang/brigadier/builder/RequiredArgumentBuilder; a
	createRule ()Lnet/minecraft/world/level/GameRules$Value; a
net/minecraft/world/level/GameRules$Value bwl$g
	type a
	copy ()Lnet/minecraft/world/level/GameRules$Value; f
	deserialize (Ljava/lang/String;)V a
	getCommandResult ()I c
	getSelf ()Lnet/minecraft/world/level/GameRules$Value; g
	onChanged (Lnet/minecraft/server/MinecraftServer;)V a
	serialize ()Ljava/lang/String; b
	setFrom (Lnet/minecraft/world/level/GameRules$Value;Lnet/minecraft/server/MinecraftServer;)V a
	setFromArgument (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V b
	updateFromArgument (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V a
net/minecraft/world/level/GameRules$VisitorCaller bwl$h
net/minecraft/world/level/GameType bwm
	$VALUES k
	ADVENTURE c
	CREATIVE b
	DEFAULT_MODE e
	NOT_SET f
	SPECTATOR d
	SURVIVAL a
	id g
	longName j
	name h
	shortName i
	$values ()[Lnet/minecraft/world/level/GameType; h
	byId (I)Lnet/minecraft/world/level/GameType; a
	byId (ILnet/minecraft/world/level/GameType;)Lnet/minecraft/world/level/GameType; a
	byName (Ljava/lang/String;)Lnet/minecraft/world/level/GameType; a
	byName (Ljava/lang/String;Lnet/minecraft/world/level/GameType;)Lnet/minecraft/world/level/GameType; a
	byNullableId (I)Lnet/minecraft/world/level/GameType; b
	getId ()I a
	getLongDisplayName ()Lnet/minecraft/network/chat/Component; c
	getName ()Ljava/lang/String; b
	getNullableId (Lnet/minecraft/world/level/GameType;)I a
	getShortDisplayName ()Lnet/minecraft/network/chat/Component; d
	isBlockPlacingRestricted ()Z e
	isCreative ()Z f
	isSurvival ()Z g
	updatePlayerAbilities (Lnet/minecraft/world/entity/player/Abilities;)V a
net/minecraft/world/level/GrassColor bwn
	pixels a
	get (DD)I a
	init ([I)V a
net/minecraft/world/level/ItemLike bwo
	asItem ()Lnet/minecraft/world/item/Item; k
net/minecraft/world/level/Level bwp
	DIRECTIONS a
	END h
	LOGGER d
	LONG_PARTICLE_CLIP_RANGE j
	MAX_BRIGHTNESS l
	MAX_ENTITY_SPAWN_Y n
	MAX_LEVEL_SIZE i
	MIN_ENTITY_SPAWN_Y o
	NETHER g
	OVERWORLD f
	RESOURCE_KEY_CODEC e
	SHORT_PARTICLE_CLIP_RANGE k
	TICKS_PER_DAY m
	addend r
	biomeManager F
	blockEntityTickers p
	dimension G
	dimensionType C
	isClientSide y
	isDebug A
	levelData x
	oRainLevel s
	oThunderLevel u
	pendingBlockEntityTickers b
	profiler D
	rainLevel t
	randValue q
	random w
	skyDarken B
	thread z
	thunderLevel v
	tickingBlockEntities c
	worldBorder E
	addAlwaysVisibleParticle (Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)V b
	addAlwaysVisibleParticle (Lnet/minecraft/core/particles/ParticleOptions;ZDDDDDD)V b
	addBlockEntityTicker (Lnet/minecraft/world/level/block/entity/TickingBlockEntity;)V a
	addDestroyBlockEffect (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	addParticle (Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)V a
	addParticle (Lnet/minecraft/core/particles/ParticleOptions;ZDDDDDD)V a
	blockEntityChanged (Lnet/minecraft/core/BlockPos;)V p
	blockEvent (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;II)V a
	broadcastEntityEvent (Lnet/minecraft/world/entity/Entity;B)V a
	createFireworks (DDDDDDLnet/minecraft/nbt/CompoundTag;)V a
	destroyBlock (Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/entity/Entity;I)Z a
	destroyBlockProgress (ILnet/minecraft/core/BlockPos;I)V a
	dimension ()Lnet/minecraft/resources/ResourceKey; aa
	dimensionType ()Lnet/minecraft/world/level/dimension/DimensionType; p_
	disconnect ()V U
	explode (Lnet/minecraft/world/entity/Entity;DDDFLnet/minecraft/world/level/Explosion$BlockInteraction;)Lnet/minecraft/world/level/Explosion; a
	explode (Lnet/minecraft/world/entity/Entity;DDDFZLnet/minecraft/world/level/Explosion$BlockInteraction;)Lnet/minecraft/world/level/Explosion; a
	explode (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/level/ExplosionDamageCalculator;DDDFZLnet/minecraft/world/level/Explosion$BlockInteraction;)Lnet/minecraft/world/level/Explosion; a
	fillReportDetails (Lnet/minecraft/CrashReport;)Lnet/minecraft/CrashReportCategory; a
	gatherChunkSourceStats ()Ljava/lang/String; J
	getBestNeighborSignal (Lnet/minecraft/core/BlockPos;)I s
	getBiomeManager ()Lnet/minecraft/world/level/biome/BiomeManager; r_
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c_
	getBlockRandomPos (IIII)Lnet/minecraft/core/BlockPos; a
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a_
	getChunk (II)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunk (II)Lnet/minecraft/world/level/chunk/LevelChunk; d
	getChunk (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunkAt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/chunk/LevelChunk; m
	getChunkForCollisions (II)Lnet/minecraft/world/level/BlockGetter; c
	getCurrentDifficultyAt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/DifficultyInstance; d_
	getDayTime ()J W
	getDirectSignalTo (Lnet/minecraft/core/BlockPos;)I q
	getEntities ()Lnet/minecraft/world/level/entity/LevelEntityGetter; I
	getEntities (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/List; a
	getEntities (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/List; a
	getEntity (I)Lnet/minecraft/world/entity/Entity; a
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b_
	getFreeMapId ()I v
	getGameRules ()Lnet/minecraft/world/level/GameRules; X
	getGameTime ()J V
	getHeight (Lnet/minecraft/world/level/levelgen/Heightmap$Types;II)I a
	getLevelData ()Lnet/minecraft/world/level/storage/LevelData; m_
	getLightEngine ()Lnet/minecraft/world/level/lighting/LevelLightEngine; k_
	getMapData (Ljava/lang/String;)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; a
	getProfiler ()Lnet/minecraft/util/profiling/ProfilerFiller; ab
	getProfilerSupplier ()Ljava/util/function/Supplier; ac
	getRainLevel (F)F d
	getRandom ()Ljava/util/Random; q_
	getRecipeManager ()Lnet/minecraft/world/item/crafting/RecipeManager; q
	getScoreboard ()Lnet/minecraft/world/scores/Scoreboard; K
	getSeaLevel ()I l_
	getServer ()Lnet/minecraft/server/MinecraftServer; n
	getSignal (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getSkyDarken ()I n_
	getSunAngle (F)F a
	getTagManager ()Lnet/minecraft/tags/TagContainer; r
	getThunderLevel (F)F b
	getWorldBorder ()Lnet/minecraft/world/level/border/WorldBorder; o_
	globalLevelEvent (ILnet/minecraft/core/BlockPos;I)V b
	guardEntityTick (Ljava/util/function/Consumer;Lnet/minecraft/world/entity/Entity;)V a
	hasNeighborSignal (Lnet/minecraft/core/BlockPos;)Z r
	hasSignal (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	isClientSide ()Z j_
	isDay ()Z P
	isDebug ()Z ad
	isFluidAtPosition (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z b
	isHumidAt (Lnet/minecraft/core/BlockPos;)Z u
	isInSpawnableBounds (Lnet/minecraft/core/BlockPos;)Z l
	isInWorldBounds (Lnet/minecraft/core/BlockPos;)Z k
	isInWorldBoundsHorizontal (Lnet/minecraft/core/BlockPos;)Z E
	isLoaded (Lnet/minecraft/core/BlockPos;)Z o
	isNight ()Z Q
	isOutsideSpawnableHeight (I)Z b
	isRaining ()Z Z
	isRainingAt (Lnet/minecraft/core/BlockPos;)Z t
	isStateAtPosition (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z a
	isThundering ()Z Y
	loadedAndEntityCanStandOn (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)Z a
	loadedAndEntityCanStandOnFace (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Direction;)Z a
	mayInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;)Z a
	neighborChanged (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;)V a
	noSave ()Z s
	onBlockStateChange (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)V a
	playLocalSound (DDDLnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FFZ)V a
	playSound (Lnet/minecraft/world/entity/player/Player;DDDLnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	playSound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	playSound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	postGameEventInRadius (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/core/BlockPos;I)V a
	prepareWeather ()V T
	removeBlock (Lnet/minecraft/core/BlockPos;Z)Z a
	removeBlockEntity (Lnet/minecraft/core/BlockPos;)V n
	sendBlockUpdated (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;I)V a
	sendPacketToServer (Lnet/minecraft/network/protocol/Packet;)V a
	setBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;I)Z a
	setBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;II)Z a
	setBlockAndUpdate (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	setBlockEntity (Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
	setBlocksDirty (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)V b
	setMapData (Ljava/lang/String;Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)V a
	setRainLevel (F)V e
	setSkyFlashTime (I)V c
	setSpawnSettings (ZZ)V b
	setThunderLevel (F)V c
	tickBlockEntities ()V R
	updateNeighborsAt (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V b
	updateNeighborsAtExceptFromFacing (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/Direction;)V a
	updateNeighbourForOutputSignal (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V c
	updateSkyBrightness ()V S
net/minecraft/world/level/LevelAccessor bwq
	addParticle (Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)V a
	blockUpdated (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V a
	dayTime ()J ae
	gameEvent (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/core/BlockPos;)V a
	gameEvent (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/entity/Entity;)V a
	gameEvent (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/core/BlockPos;)V a
	gameEvent (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/entity/Entity;)V a
	getBlockTicks ()Lnet/minecraft/world/level/TickList; N
	getChunkSource ()Lnet/minecraft/world/level/chunk/ChunkSource; L
	getCurrentDifficultyAt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/DifficultyInstance; d_
	getDifficulty ()Lnet/minecraft/world/Difficulty; af
	getLevelData ()Lnet/minecraft/world/level/storage/LevelData; m_
	getLiquidTicks ()Lnet/minecraft/world/level/TickList; M
	getLogicalHeight ()I j
	getRandom ()Ljava/util/Random; q_
	getServer ()Lnet/minecraft/server/MinecraftServer; n
	hasChunk (II)Z b
	levelEvent (ILnet/minecraft/core/BlockPos;I)V c
	levelEvent (Lnet/minecraft/world/entity/player/Player;ILnet/minecraft/core/BlockPos;I)V a
	playSound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
net/minecraft/world/level/LevelHeightAccessor bwr
	getHeight ()I t_
	getMaxBuildHeight ()I ag
	getMaxSection ()I aj
	getMinBuildHeight ()I s_
	getMinSection ()I ai
	getSectionIndex (I)I e
	getSectionIndexFromSectionY (I)I f
	getSectionYFromSectionIndex (I)I g
	getSectionsCount ()I ah
	isOutsideBuildHeight (I)Z d
	isOutsideBuildHeight (Lnet/minecraft/core/BlockPos;)Z v
net/minecraft/world/level/LevelReader bws
	canSeeSkyFromBelowWater (Lnet/minecraft/core/BlockPos;)Z y
	containsAnyLiquid (Lnet/minecraft/world/phys/AABB;)Z d
	dimensionType ()Lnet/minecraft/world/level/dimension/DimensionType; p_
	getBiome (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/biome/Biome; w
	getBiomeManager ()Lnet/minecraft/world/level/biome/BiomeManager; r_
	getBlockStatesIfLoaded (Lnet/minecraft/world/phys/AABB;)Ljava/util/stream/Stream; c
	getBlockTint (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ColorResolver;)I a
	getBrightness (Lnet/minecraft/core/BlockPos;)F z
	getChunk (II)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunk (IILnet/minecraft/world/level/chunk/ChunkStatus;)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunk (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunk (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/chunk/ChunkAccess; A
	getChunkForCollisions (II)Lnet/minecraft/world/level/BlockGetter; c
	getDirectSignal (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I c
	getHeight ()I t_
	getHeight (Lnet/minecraft/world/level/levelgen/Heightmap$Types;II)I a
	getHeightmapPos (Lnet/minecraft/world/level/levelgen/Heightmap$Types;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	getMaxLocalRawBrightness (Lnet/minecraft/core/BlockPos;)I C
	getMaxLocalRawBrightness (Lnet/minecraft/core/BlockPos;I)I c
	getMinBuildHeight ()I s_
	getNoiseBiome (III)Lnet/minecraft/world/level/biome/Biome; b
	getSeaLevel ()I l_
	getSkyDarken ()I n_
	getUncachedNoiseBiome (III)Lnet/minecraft/world/level/biome/Biome; a
	hasChunk (II)Z b
	hasChunkAt (II)Z e
	hasChunkAt (Lnet/minecraft/core/BlockPos;)Z D
	hasChunksAt (IIII)Z b
	hasChunksAt (IIIIII)Z a
	hasChunksAt (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Z a
	isClientSide ()Z j_
	isEmptyBlock (Lnet/minecraft/core/BlockPos;)Z x
	isWaterAt (Lnet/minecraft/core/BlockPos;)Z B
net/minecraft/world/level/LevelSettings bwt
	allowCommands e
	dataPackConfig g
	difficulty d
	gameRules f
	gameType b
	hardcore c
	levelName a
	allowCommands ()Z e
	copy ()Lnet/minecraft/world/level/LevelSettings; h
	difficulty ()Lnet/minecraft/world/Difficulty; d
	gameRules ()Lnet/minecraft/world/level/GameRules; f
	gameType ()Lnet/minecraft/world/level/GameType; b
	getDataPackConfig ()Lnet/minecraft/world/level/DataPackConfig; g
	hardcore ()Z c
	levelName ()Ljava/lang/String; a
	parse (Lcom/mojang/serialization/Dynamic;Lnet/minecraft/world/level/DataPackConfig;)Lnet/minecraft/world/level/LevelSettings; a
	withDataPackConfig (Lnet/minecraft/world/level/DataPackConfig;)Lnet/minecraft/world/level/LevelSettings; a
	withDifficulty (Lnet/minecraft/world/Difficulty;)Lnet/minecraft/world/level/LevelSettings; a
	withGameType (Lnet/minecraft/world/level/GameType;)Lnet/minecraft/world/level/LevelSettings; a
net/minecraft/world/level/LevelSimulatedRW bwu
net/minecraft/world/level/LevelSimulatedReader bwv
	getBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Ljava/util/Optional; a
	getHeightmapPos (Lnet/minecraft/world/level/levelgen/Heightmap$Types;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	isFluidAtPosition (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z b
	isStateAtPosition (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z a
net/minecraft/world/level/LevelTimeAccess bww
	dayTime ()J ae
	getMoonBrightness ()F ak
	getMoonPhase ()I al
	getTimeOfDay (F)F f
net/minecraft/world/level/LevelWriter bwx
	addFreshEntity (Lnet/minecraft/world/entity/Entity;)Z b
	destroyBlock (Lnet/minecraft/core/BlockPos;Z)Z b
	destroyBlock (Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/entity/Entity;)Z a
	destroyBlock (Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/entity/Entity;I)Z a
	removeBlock (Lnet/minecraft/core/BlockPos;Z)Z a
	setBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;I)Z a
	setBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;II)Z a
net/minecraft/world/level/LightLayer bwy
	$VALUES d
	BLOCK b
	SKY a
	surrounding c
	$values ()[Lnet/minecraft/world/level/LightLayer; a
net/minecraft/world/level/NaturalSpawner bwz
	LOGGER c
	MAGIC_NUMBER e
	MIN_SPAWN_DISTANCE d
	SPAWNING_CATEGORIES f
	SPAWN_DISTANCE_BLOCK b
	SPAWN_DISTANCE_CHUNK a
	canSpawnMobAt (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/world/level/biome/MobSpawnSettings$SpawnerData;Lnet/minecraft/core/BlockPos;)Z a
	createState (ILjava/lang/Iterable;Lnet/minecraft/world/level/NaturalSpawner$ChunkGetter;)Lnet/minecraft/world/level/NaturalSpawner$SpawnState; a
	getMobForSpawn (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/world/entity/Mob; a
	getRandomPosWithin (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/chunk/LevelChunk;)Lnet/minecraft/core/BlockPos; a
	getRandomSpawnMobAt (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/entity/MobCategory;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Ljava/util/Optional; a
	getRoughBiome (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/chunk/ChunkAccess;)Lnet/minecraft/world/level/biome/Biome; a
	getTopNonCollidingPos (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/world/entity/EntityType;II)Lnet/minecraft/core/BlockPos; a
	isRightDistanceToPlayerAndSpawnPoint (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/core/BlockPos$MutableBlockPos;D)Z a
	isSpawnPositionOk (Lnet/minecraft/world/entity/SpawnPlacements$Type;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/EntityType;)Z a
	isValidEmptySpawnBlock (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/entity/EntityType;)Z a
	isValidPositionForMob (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;D)Z a
	isValidSpawnPostitionForType (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/MobSpawnSettings$SpawnerData;Lnet/minecraft/core/BlockPos$MutableBlockPos;D)Z a
	mobsAt (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/biome/Biome;)Lnet/minecraft/util/random/WeightedRandomList; a
	spawnCategoryForChunk (Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/LevelChunk;Lnet/minecraft/world/level/NaturalSpawner$SpawnPredicate;Lnet/minecraft/world/level/NaturalSpawner$AfterSpawnCallback;)V a
	spawnCategoryForPosition (Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V a
	spawnCategoryForPosition (Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/NaturalSpawner$SpawnPredicate;Lnet/minecraft/world/level/NaturalSpawner$AfterSpawnCallback;)V a
	spawnForChunk (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/LevelChunk;Lnet/minecraft/world/level/NaturalSpawner$SpawnState;ZZZ)V a
	spawnMobsForChunkGeneration (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/ChunkPos;Ljava/util/Random;)V a
net/minecraft/world/level/NaturalSpawner$AfterSpawnCallback bwz$a
net/minecraft/world/level/NaturalSpawner$ChunkGetter bwz$b
net/minecraft/world/level/NaturalSpawner$SpawnPredicate bwz$c
net/minecraft/world/level/NaturalSpawner$SpawnState bwz$d
	lastCharge g
	lastCheckedPos e
	lastCheckedType f
	mobCategoryCounts b
	spawnPotential c
	spawnableChunkCount a
	unmodifiableMobCategoryCounts d
	afterSpawn (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/level/chunk/ChunkAccess;)V a
	canSpawn (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/chunk/ChunkAccess;)Z a
	canSpawnForCategory (Lnet/minecraft/world/entity/MobCategory;)Z a
	getMobCategoryCounts ()Lit/unimi/dsi/fastutil/objects/Object2IntMap; b
	getSpawnableChunkCount ()I a
net/minecraft/world/level/NoiseColumn bxa
	column b
	minY a
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/PathNavigationRegion bxb
	allEmpty d
	centerX a
	centerZ b
	chunks c
	level e
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c_
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a_
	getChunk (II)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunk (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/chunk/ChunkAccess; d
	getChunkForCollisions (II)Lnet/minecraft/world/level/BlockGetter; c
	getCollisions (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/stream/Stream; d
	getEntityCollisions (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/stream/Stream; c
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b_
	getHeight ()I t_
	getMinBuildHeight ()I s_
	getProfiler ()Lnet/minecraft/util/profiling/ProfilerFiller; a
	getWorldBorder ()Lnet/minecraft/world/level/border/WorldBorder; o_
net/minecraft/world/level/PotentialCalculator bxc
	charges a
	addCharge (Lnet/minecraft/core/BlockPos;D)V a
	getPotentialEnergyChange (Lnet/minecraft/core/BlockPos;D)D b
net/minecraft/world/level/PotentialCalculator$PointCharge bxc$a
	charge b
	pos a
	getPotentialChange (Lnet/minecraft/core/BlockPos;)D a
net/minecraft/world/level/ServerLevelAccessor bxd
	addFreshEntityWithPassengers (Lnet/minecraft/world/entity/Entity;)V h
	getLevel ()Lnet/minecraft/server/level/ServerLevel; G
net/minecraft/world/level/ServerTickList bxe
	MAX_TICK_BLOCKS_PER_TICK a
	alreadyTicked h
	currentlyTicking g
	ignore b
	level f
	tickNextTickList e
	tickNextTickSet d
	ticker i
	toId c
	addTickData (Lnet/minecraft/world/level/TickNextTickData;)V a
	copy (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/core/BlockPos;)V a
	fetchTicksInArea (Ljava/util/List;Ljava/util/Collection;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Z)Ljava/util/List; a
	fetchTicksInArea (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;ZZ)Ljava/util/List; a
	fetchTicksInChunk (Lnet/minecraft/world/level/ChunkPos;ZZ)Ljava/util/List; a
	hasScheduledTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z a
	save (Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/nbt/ListTag; a
	saveTickList (Ljava/util/function/Function;Ljava/lang/Iterable;J)Lnet/minecraft/nbt/ListTag; a
	scheduleTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;ILnet/minecraft/world/level/TickPriority;)V a
	size ()I a
	tick ()V b
	willTickThisTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z b
net/minecraft/world/level/SpawnData bxf
	DEFAULT_TYPE b
	DEFAULT_WEIGHT a
	tag c
	getTag ()Lnet/minecraft/nbt/CompoundTag; c
	save ()Lnet/minecraft/nbt/CompoundTag; b
net/minecraft/world/level/StructureFeatureManager bxg
	level a
	worldGenSettings b
	addReferenceForFeature (Lnet/minecraft/core/SectionPos;Lnet/minecraft/world/level/levelgen/feature/StructureFeature;JLnet/minecraft/world/level/chunk/FeatureAccess;)V a
	forWorldGenRegion (Lnet/minecraft/server/level/WorldGenRegion;)Lnet/minecraft/world/level/StructureFeatureManager; a
	getStartForFeature (Lnet/minecraft/core/SectionPos;Lnet/minecraft/world/level/levelgen/feature/StructureFeature;Lnet/minecraft/world/level/chunk/FeatureAccess;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
	getStructureAt (Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/level/levelgen/feature/StructureFeature;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
	setStartForFeature (Lnet/minecraft/core/SectionPos;Lnet/minecraft/world/level/levelgen/feature/StructureFeature;Lnet/minecraft/world/level/levelgen/structure/StructureStart;Lnet/minecraft/world/level/chunk/FeatureAccess;)V a
	shouldGenerateFeatures ()Z a
	startsForFeature (Lnet/minecraft/core/SectionPos;Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Ljava/util/stream/Stream; a
net/minecraft/world/level/TickList bxh
	hasScheduledTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z a
	scheduleTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;I)V a
	scheduleTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;ILnet/minecraft/world/level/TickPriority;)V a
	size ()I a
	willTickThisTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z b
net/minecraft/world/level/TickNextTickData bxi
	c f
	counter d
	pos a
	priority c
	triggerTick b
	type e
	createTimeComparator ()Ljava/util/Comparator; a
	getType ()Ljava/lang/Object; b
net/minecraft/world/level/TickPriority bxj
	$VALUES i
	EXTREMELY_HIGH a
	EXTREMELY_LOW g
	HIGH c
	LOW e
	NORMAL d
	VERY_HIGH b
	VERY_LOW f
	value h
	$values ()[Lnet/minecraft/world/level/TickPriority; b
	byValue (I)Lnet/minecraft/world/level/TickPriority; a
	getValue ()I a
net/minecraft/world/level/WorldGenLevel bxk
	ensureCanWrite (Lnet/minecraft/core/BlockPos;)Z e_
	getSeed ()J E
	startsForFeature (Lnet/minecraft/core/SectionPos;Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Ljava/util/stream/Stream; a
net/minecraft/world/level/biome/AmbientAdditionsSettings bxl
	CODEC a
	soundEvent b
	tickChance c
	getSoundEvent ()Lnet/minecraft/sounds/SoundEvent; a
	getTickChance ()D b
net/minecraft/world/level/biome/AmbientMoodSettings bxm
	CODEC a
	LEGACY_CAVE_SETTINGS b
	blockSearchExtent e
	soundEvent c
	soundPositionOffset f
	tickDelay d
	getBlockSearchExtent ()I c
	getSoundEvent ()Lnet/minecraft/sounds/SoundEvent; a
	getSoundPositionOffset ()D d
	getTickDelay ()I b
net/minecraft/world/level/biome/AmbientParticleSettings bxn
	CODEC a
	options b
	probability c
	canSpawn (Ljava/util/Random;)Z a
	getOptions ()Lnet/minecraft/core/particles/ParticleOptions; a
net/minecraft/world/level/biome/Biome bxo
	BIOME_INFO_NOISE f
	CODEC d
	DIRECT_CODEC b
	FROZEN_TEMPERATURE_NOISE i
	LIST_CODEC e
	LOGGER a
	NETWORK_CODEC c
	TEMPERATURE_CACHE_SIZE j
	TEMPERATURE_NOISE h
	biomeCategory p
	climateSettings k
	depth n
	generationSettings l
	mobSettings m
	scale o
	specialEffects q
	structuresByStep g
	temperatureCache r
	buildSurfaceAt (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IIJ)V a
	generate (Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/server/level/WorldGenRegion;JLnet/minecraft/world/level/levelgen/WorldgenRandom;Lnet/minecraft/core/BlockPos;)V a
	getAmbientAdditions ()Ljava/util/Optional; r
	getAmbientLoop ()Ljava/util/Optional; p
	getAmbientMood ()Ljava/util/Optional; q
	getAmbientParticle ()Ljava/util/Optional; o
	getBackgroundMusic ()Ljava/util/Optional; s
	getBaseTemperature ()F k
	getBiomeCategory ()Lnet/minecraft/world/level/biome/Biome$BiomeCategory; t
	getDepth ()F h
	getDownfall ()F i
	getFogColor ()I f
	getFoliageColor ()I g
	getFoliageColorFromTexture ()I v
	getGenerationSettings ()Lnet/minecraft/world/level/biome/BiomeGenerationSettings; e
	getGrassColor (DD)I a
	getGrassColorFromTexture ()I u
	getHeightAdjustedTemperature (Lnet/minecraft/core/BlockPos;)F c
	getMobSettings ()Lnet/minecraft/world/level/biome/MobSpawnSettings; b
	getPrecipitation ()Lnet/minecraft/world/level/biome/Biome$Precipitation; c
	getScale ()F j
	getSkyColor ()I a
	getSpecialEffects ()Lnet/minecraft/world/level/biome/BiomeSpecialEffects; l
	getTemperature (Lnet/minecraft/core/BlockPos;)F a
	getWaterColor ()I m
	getWaterFogColor ()I n
	isColdEnoughToSnow (Lnet/minecraft/core/BlockPos;)Z b
	isHumid ()Z d
	shouldFreeze (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	shouldFreeze (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Z)Z a
	shouldSnow (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z b
net/minecraft/world/level/biome/Biome$BiomeBuilder bxo$a
	biomeCategory b
	depth c
	downfall g
	generationSettings j
	mobSpawnSettings i
	precipitation a
	scale d
	specialEffects h
	temperature e
	temperatureModifier f
	biomeCategory (Lnet/minecraft/world/level/biome/Biome$BiomeCategory;)Lnet/minecraft/world/level/biome/Biome$BiomeBuilder; a
	build ()Lnet/minecraft/world/level/biome/Biome; a
	depth (F)Lnet/minecraft/world/level/biome/Biome$BiomeBuilder; a
	downfall (F)Lnet/minecraft/world/level/biome/Biome$BiomeBuilder; d
	generationSettings (Lnet/minecraft/world/level/biome/BiomeGenerationSettings;)Lnet/minecraft/world/level/biome/Biome$BiomeBuilder; a
	mobSpawnSettings (Lnet/minecraft/world/level/biome/MobSpawnSettings;)Lnet/minecraft/world/level/biome/Biome$BiomeBuilder; a
	precipitation (Lnet/minecraft/world/level/biome/Biome$Precipitation;)Lnet/minecraft/world/level/biome/Biome$BiomeBuilder; a
	scale (F)Lnet/minecraft/world/level/biome/Biome$BiomeBuilder; b
	specialEffects (Lnet/minecraft/world/level/biome/BiomeSpecialEffects;)Lnet/minecraft/world/level/biome/Biome$BiomeBuilder; a
	temperature (F)Lnet/minecraft/world/level/biome/Biome$BiomeBuilder; c
	temperatureAdjustment (Lnet/minecraft/world/level/biome/Biome$TemperatureModifier;)Lnet/minecraft/world/level/biome/Biome$BiomeBuilder; a
net/minecraft/world/level/biome/Biome$BiomeCategory bxo$b
	$VALUES v
	BEACH j
	BY_NAME t
	CODEC s
	DESERT m
	EXTREME_HILLS c
	FOREST k
	ICY h
	JUNGLE d
	MESA e
	MUSHROOM p
	NETHER q
	NONE a
	OCEAN l
	PLAINS f
	RIVER n
	SAVANNA g
	SWAMP o
	TAIGA b
	THEEND i
	UNDERGROUND r
	name u
	$values ()[Lnet/minecraft/world/level/biome/Biome$BiomeCategory; b
	byName (Ljava/lang/String;)Lnet/minecraft/world/level/biome/Biome$BiomeCategory; a
	getName ()Ljava/lang/String; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/biome/Biome$ClimateParameters bxo$c
	CODEC a
	altitude d
	humidity c
	offset f
	temperature b
	weirdness e
	fitness (Lnet/minecraft/world/level/biome/Biome$ClimateParameters;)F a
net/minecraft/world/level/biome/Biome$ClimateSettings bxo$d
	CODEC a
	downfall e
	precipitation b
	temperature c
	temperatureModifier d
net/minecraft/world/level/biome/Biome$Precipitation bxo$e
	$VALUES g
	BY_NAME e
	CODEC d
	NONE a
	RAIN b
	SNOW c
	name f
	$values ()[Lnet/minecraft/world/level/biome/Biome$Precipitation; b
	byName (Ljava/lang/String;)Lnet/minecraft/world/level/biome/Biome$Precipitation; a
	getName ()Ljava/lang/String; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/biome/Biome$TemperatureModifier bxo$f
	$VALUES f
	BY_NAME e
	CODEC c
	FROZEN b
	NONE a
	name d
	$values ()[Lnet/minecraft/world/level/biome/Biome$TemperatureModifier; b
	byName (Ljava/lang/String;)Lnet/minecraft/world/level/biome/Biome$TemperatureModifier; a
	getName ()Ljava/lang/String; a
	getSerializedName ()Ljava/lang/String; c
	modifyTemperature (Lnet/minecraft/core/BlockPos;F)F a
net/minecraft/world/level/biome/BiomeGenerationSettings bxp
	CODEC c
	EMPTY b
	LOGGER a
	carvers e
	features f
	flowerFeatures h
	structureStarts g
	surfaceBuilder d
	features ()Ljava/util/List; c
	getCarvers (Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)Ljava/util/List; a
	getFlowerFeatures ()Ljava/util/List; b
	getSurfaceBuilder ()Ljava/util/function/Supplier; d
	getSurfaceBuilderConfig ()Lnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderConfiguration; e
	isValidStart (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Z a
	structures ()Ljava/util/Collection; a
	withBiomeConfig (Lnet/minecraft/world/level/levelgen/feature/ConfiguredStructureFeature;)Lnet/minecraft/world/level/levelgen/feature/ConfiguredStructureFeature; a
net/minecraft/world/level/biome/BiomeGenerationSettings$Builder bxp$a
	carvers b
	features c
	structureStarts d
	surfaceBuilder a
	addCarver (Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;Lnet/minecraft/world/level/levelgen/carver/ConfiguredWorldCarver;)Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder; a
	addFeature (ILjava/util/function/Supplier;)Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder; a
	addFeature (Lnet/minecraft/world/level/levelgen/GenerationStep$Decoration;Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature;)Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder; a
	addFeatureStepsUpTo (I)V a
	addStructureStart (Lnet/minecraft/world/level/levelgen/feature/ConfiguredStructureFeature;)Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder; a
	build ()Lnet/minecraft/world/level/biome/BiomeGenerationSettings; a
	surfaceBuilder (Ljava/util/function/Supplier;)Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder; a
	surfaceBuilder (Lnet/minecraft/world/level/levelgen/surfacebuilders/ConfiguredSurfaceBuilder;)Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder; a
net/minecraft/world/level/biome/BiomeManager bxq
	CHUNK_CENTER_QUART a
	biomeZoomSeed c
	noiseBiomeSource b
	zoomer d
	getBiome (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/biome/Biome; a
	getNoiseBiomeAtPosition (DDD)Lnet/minecraft/world/level/biome/Biome; a
	getNoiseBiomeAtPosition (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/biome/Biome; b
	getNoiseBiomeAtQuart (III)Lnet/minecraft/world/level/biome/Biome; a
	getPrimaryBiomeAtChunk (Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/world/level/biome/Biome; a
	obfuscateSeed (J)J a
	withDifferentSource (Lnet/minecraft/world/level/biome/BiomeSource;)Lnet/minecraft/world/level/biome/BiomeManager; a
net/minecraft/world/level/biome/BiomeManager$NoiseBiomeSource bxq$a
	getNoiseBiome (III)Lnet/minecraft/world/level/biome/Biome; b
	getPrimaryBiome (Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/world/level/biome/Biome; b
net/minecraft/world/level/biome/BiomeSource bxr
	CODEC a
	possibleBiomes d
	supportedStructures b
	surfaceBlocks c
	canGenerateStructure (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Z a
	codec ()Lcom/mojang/serialization/Codec; a
	findBiomeHorizontal (IIIIILjava/util/function/Predicate;Ljava/util/Random;Z)Lnet/minecraft/core/BlockPos; a
	findBiomeHorizontal (IIIILjava/util/function/Predicate;Ljava/util/Random;)Lnet/minecraft/core/BlockPos; a
	getBiomesWithin (IIII)Ljava/util/Set; a
	getSurfaceBlocks ()Ljava/util/Set; c
	possibleBiomes ()Ljava/util/List; b
	withSeed (J)Lnet/minecraft/world/level/biome/BiomeSource; a
net/minecraft/world/level/biome/BiomeSpecialEffects bxs
	CODEC a
	ambientAdditionsSettings l
	ambientLoopSoundEvent j
	ambientMoodSettings k
	ambientParticleSettings i
	backgroundMusic m
	fogColor b
	foliageColorOverride f
	grassColorModifier h
	grassColorOverride g
	skyColor e
	waterColor c
	waterFogColor d
	getAmbientAdditionsSettings ()Ljava/util/Optional; k
	getAmbientLoopSoundEvent ()Ljava/util/Optional; i
	getAmbientMoodSettings ()Ljava/util/Optional; j
	getAmbientParticleSettings ()Ljava/util/Optional; h
	getBackgroundMusic ()Ljava/util/Optional; l
	getFogColor ()I a
	getFoliageColorOverride ()Ljava/util/Optional; e
	getGrassColorModifier ()Lnet/minecraft/world/level/biome/BiomeSpecialEffects$GrassColorModifier; g
	getGrassColorOverride ()Ljava/util/Optional; f
	getSkyColor ()I d
	getWaterColor ()I b
	getWaterFogColor ()I c
net/minecraft/world/level/biome/BiomeSpecialEffects$Builder bxs$a
	ambientAdditionsSettings k
	ambientLoopSoundEvent i
	ambientMoodSettings j
	ambientParticle h
	backgroundMusic l
	fogColor a
	foliageColorOverride e
	grassColorModifier g
	grassColorOverride f
	skyColor d
	waterColor b
	waterFogColor c
	ambientAdditionsSound (Lnet/minecraft/world/level/biome/AmbientAdditionsSettings;)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; a
	ambientLoopSound (Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; a
	ambientMoodSound (Lnet/minecraft/world/level/biome/AmbientMoodSettings;)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; a
	ambientParticle (Lnet/minecraft/world/level/biome/AmbientParticleSettings;)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; a
	backgroundMusic (Lnet/minecraft/sounds/Music;)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; a
	build ()Lnet/minecraft/world/level/biome/BiomeSpecialEffects; a
	fogColor (I)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; a
	foliageColorOverride (I)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; e
	grassColorModifier (Lnet/minecraft/world/level/biome/BiomeSpecialEffects$GrassColorModifier;)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; a
	grassColorOverride (I)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; f
	skyColor (I)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; d
	waterColor (I)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; b
	waterFogColor (I)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; c
net/minecraft/world/level/biome/BiomeSpecialEffects$GrassColorModifier bxs$b
	$VALUES g
	BY_NAME f
	CODEC d
	DARK_FOREST b
	NONE a
	SWAMP c
	name e
	$values ()[Lnet/minecraft/world/level/biome/BiomeSpecialEffects$GrassColorModifier; b
	byName (Ljava/lang/String;)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$GrassColorModifier; a
	getName ()Ljava/lang/String; a
	getSerializedName ()Ljava/lang/String; c
	modifyColor (DDI)I a
net/minecraft/world/level/biome/BiomeZoomer bxt
	getBiome (JIIILnet/minecraft/world/level/biome/BiomeManager$NoiseBiomeSource;)Lnet/minecraft/world/level/biome/Biome; a
net/minecraft/world/level/biome/Biomes bxu
	BADLANDS L
	BADLANDS_PLATEAU N
	BAMBOO_JUNGLE av
	BAMBOO_JUNGLE_HILLS aw
	BASALT_DELTAS aA
	BEACH q
	BIRCH_FOREST B
	BIRCH_FOREST_HILLS C
	COLD_OCEAN U
	CRIMSON_FOREST ay
	DARK_FOREST D
	DARK_FOREST_HILLS al
	DEEP_COLD_OCEAN X
	DEEP_FROZEN_OCEAN Y
	DEEP_LUKEWARM_OCEAN W
	DEEP_OCEAN y
	DEEP_WARM_OCEAN V
	DESERT c
	DESERT_HILLS r
	DESERT_LAKES ab
	DRIPSTONE_CAVES aB
	END_BARRENS R
	END_HIGHLANDS Q
	END_MIDLANDS P
	ERODED_BADLANDS as
	FLOWER_FOREST ad
	FOREST e
	FROZEN_OCEAN k
	FROZEN_RIVER l
	GIANT_SPRUCE_TAIGA an
	GIANT_SPRUCE_TAIGA_HILLS ao
	GIANT_TREE_TAIGA G
	GIANT_TREE_TAIGA_HILLS H
	GRAVELLY_MOUNTAINS ac
	ICE_SPIKES ag
	JUNGLE v
	JUNGLE_EDGE x
	JUNGLE_HILLS w
	LUKEWARM_OCEAN T
	LUSH_CAVES aC
	MODIFIED_BADLANDS_PLATEAU au
	MODIFIED_GRAVELLY_MOUNTAINS ap
	MODIFIED_JUNGLE ah
	MODIFIED_JUNGLE_EDGE ai
	MODIFIED_WOODED_BADLANDS_PLATEAU at
	MOUNTAINS d
	MOUNTAIN_EDGE u
	MUSHROOM_FIELDS o
	MUSHROOM_FIELD_SHORE p
	NETHER_WASTES i
	OCEAN a
	PLAINS b
	RIVER h
	SAVANNA J
	SAVANNA_PLATEAU K
	SHATTERED_SAVANNA aq
	SHATTERED_SAVANNA_PLATEAU ar
	SMALL_END_ISLANDS O
	SNOWY_BEACH A
	SNOWY_MOUNTAINS n
	SNOWY_TAIGA E
	SNOWY_TAIGA_HILLS F
	SNOWY_TAIGA_MOUNTAINS am
	SNOWY_TUNDRA m
	SOUL_SAND_VALLEY ax
	STONE_SHORE z
	SUNFLOWER_PLAINS aa
	SWAMP g
	SWAMP_HILLS af
	TAIGA f
	TAIGA_HILLS t
	TAIGA_MOUNTAINS ae
	TALL_BIRCH_FOREST aj
	TALL_BIRCH_HILLS ak
	THE_END j
	THE_VOID Z
	WARM_OCEAN S
	WARPED_FOREST az
	WOODED_BADLANDS_PLATEAU M
	WOODED_HILLS s
	WOODED_MOUNTAINS I
	register (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
net/minecraft/world/level/biome/CheckerboardColumnBiomeSource bxv
	CODEC e
	allowedBiomes f
	bitShift g
	size h
	codec ()Lcom/mojang/serialization/Codec; a
	getNoiseBiome (III)Lnet/minecraft/world/level/biome/Biome; b
	withSeed (J)Lnet/minecraft/world/level/biome/BiomeSource; a
net/minecraft/world/level/biome/FixedBiomeSource bxw
	CODEC e
	biome f
	codec ()Lcom/mojang/serialization/Codec; a
	findBiomeHorizontal (IIIIILjava/util/function/Predicate;Ljava/util/Random;Z)Lnet/minecraft/core/BlockPos; a
	getBiomesWithin (IIII)Ljava/util/Set; a
	getNoiseBiome (III)Lnet/minecraft/world/level/biome/Biome; b
	withSeed (J)Lnet/minecraft/world/level/biome/BiomeSource; a
net/minecraft/world/level/biome/FuzzyOffsetBiomeZoomer bxx
	$VALUES e
	INSTANCE a
	ZOOM c
	ZOOM_BITS b
	ZOOM_MASK d
	$values ()[Lnet/minecraft/world/level/biome/FuzzyOffsetBiomeZoomer; a
	getBiome (JIIILnet/minecraft/world/level/biome/BiomeManager$NoiseBiomeSource;)Lnet/minecraft/world/level/biome/Biome; a
	getFiddle (J)D a
	getFiddledDistance (JIIIDDD)D a
	sqr (D)D a
net/minecraft/world/level/biome/FuzzyOffsetConstantColumnBiomeZoomer bxy
	$VALUES b
	INSTANCE a
	$values ()[Lnet/minecraft/world/level/biome/FuzzyOffsetConstantColumnBiomeZoomer; a
	getBiome (JIIILnet/minecraft/world/level/biome/BiomeManager$NoiseBiomeSource;)Lnet/minecraft/world/level/biome/Biome; a
net/minecraft/world/level/biome/MobSpawnSettings bxz
	CODEC d
	DEFAULT_CREATURE_SPAWN_PROBABILITY e
	EMPTY c
	EMPTY_MOB_LIST b
	LOGGER a
	creatureGenerationProbability f
	mobSpawnCosts h
	playerSpawnFriendly i
	spawners g
	getCreatureProbability ()F a
	getMobSpawnCost (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/world/level/biome/MobSpawnSettings$MobSpawnCost; a
	getMobs (Lnet/minecraft/world/entity/MobCategory;)Lnet/minecraft/util/random/WeightedRandomList; a
	playerSpawnFriendly ()Z b
net/minecraft/world/level/biome/MobSpawnSettings$Builder bxz$a
	creatureGenerationProbability c
	mobSpawnCosts b
	playerCanSpawn d
	spawners a
	addMobCharge (Lnet/minecraft/world/entity/EntityType;DD)Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder; a
	addSpawn (Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/world/level/biome/MobSpawnSettings$SpawnerData;)Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder; a
	build ()Lnet/minecraft/world/level/biome/MobSpawnSettings; b
	creatureGenerationProbability (F)Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder; a
	setPlayerCanSpawn ()Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder; a
net/minecraft/world/level/biome/MobSpawnSettings$MobSpawnCost bxz$b
	CODEC a
	charge c
	energyBudget b
	getCharge ()D b
	getEnergyBudget ()D a
net/minecraft/world/level/biome/MobSpawnSettings$SpawnerData bxz$c
	CODEC a
	maxCount d
	minCount c
	type b
net/minecraft/world/level/biome/MultiNoiseBiomeSource bya
	CODEC f
	DEFAULT_NOISE_PARAMETERS g
	DIRECT_CODEC e
	altitudeNoise n
	altitudeParams j
	humidityNoise m
	humidityParams i
	parameters p
	preset s
	seed r
	temperatureNoise l
	temperatureParams h
	useY q
	weirdnessNoise o
	weirdnessParams k
	codec ()Lcom/mojang/serialization/Codec; a
	getNoiseBiome (III)Lnet/minecraft/world/level/biome/Biome; b
	overworld (Lnet/minecraft/core/Registry;J)Lnet/minecraft/world/level/biome/MultiNoiseBiomeSource; a
	parameters (Lnet/minecraft/core/Registry;)Lcom/google/common/collect/ImmutableList; a
	preset ()Ljava/util/Optional; d
	stable (J)Z b
	withSeed (J)Lnet/minecraft/world/level/biome/BiomeSource; a
net/minecraft/world/level/biome/MultiNoiseBiomeSource$NoiseParameters bya$a
	CODEC a
	amplitudes c
	firstOctave b
	amplitudes ()Lit/unimi/dsi/fastutil/doubles/DoubleList; b
	firstOctave ()I a
net/minecraft/world/level/biome/MultiNoiseBiomeSource$Preset bya$b
	BY_NAME b
	NETHER a
	biomeSource d
	name c
	biomeSource (Lnet/minecraft/core/Registry;J)Lnet/minecraft/world/level/biome/MultiNoiseBiomeSource; a
net/minecraft/world/level/biome/MultiNoiseBiomeSource$PresetInstance bya$c
	CODEC a
	biomes c
	preset b
	seed d
	biomeSource ()Lnet/minecraft/world/level/biome/MultiNoiseBiomeSource; d
	biomes ()Lnet/minecraft/core/Registry; b
	preset ()Lnet/minecraft/world/level/biome/MultiNoiseBiomeSource$Preset; a
	seed ()J c
net/minecraft/world/level/biome/NearestNeighborBiomeZoomer byb
	$VALUES b
	INSTANCE a
	$values ()[Lnet/minecraft/world/level/biome/NearestNeighborBiomeZoomer; a
	getBiome (JIIILnet/minecraft/world/level/biome/BiomeManager$NoiseBiomeSource;)Lnet/minecraft/world/level/biome/Biome; a
net/minecraft/world/level/biome/OverworldBiomeSource byc
	CODEC e
	POSSIBLE_BIOMES g
	biomes k
	largeBiomes j
	legacyBiomeInitLayer i
	noiseBiomeLayer f
	seed h
	codec ()Lcom/mojang/serialization/Codec; a
	getNoiseBiome (III)Lnet/minecraft/world/level/biome/Biome; b
	withSeed (J)Lnet/minecraft/world/level/biome/BiomeSource; a
net/minecraft/world/level/biome/TheEndBiomeSource byd
	CODEC e
	ISLAND_CHUNK_DISTANCE f
	ISLAND_CHUNK_DISTANCE_SQR h
	ISLAND_THRESHOLD g
	barrens p
	biomes j
	end l
	highlands m
	islandNoise i
	islands o
	midlands n
	seed k
	codec ()Lcom/mojang/serialization/Codec; a
	getHeightValue (Lnet/minecraft/world/level/levelgen/synth/SimplexNoise;II)F a
	getNoiseBiome (III)Lnet/minecraft/world/level/biome/Biome; b
	stable (J)Z b
	withSeed (J)Lnet/minecraft/world/level/biome/BiomeSource; a
net/minecraft/world/level/block/AbstractBannerBlock byf
	color a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getColor ()Lnet/minecraft/world/item/DyeColor; b
	isPossibleToRespawnInThis ()Z W_
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/level/block/AbstractCandleBlock byg
	LIGHT_PER_CANDLE a
	LIT b
	addParticlesAndSound (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/phys/Vec3;Ljava/util/Random;)V a
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	canBeLit (Lnet/minecraft/world/level/block/state/BlockState;)Z c
	extinguish (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	getParticleOffsets (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/lang/Iterable; a
	isLit (Lnet/minecraft/world/level/block/state/BlockState;)Z b
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	setLit (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Z)V a
net/minecraft/world/level/block/AbstractCauldronBlock byh
	FLOOR_LEVEL a
	INSIDE g
	LEG_DEPTH f
	LEG_HEIGHT e
	LEG_WIDTH d
	SHAPE b
	SIDE_THICKNESS c
	interactions h
	canReceiveStalactiteDrip (Lnet/minecraft/world/level/material/Fluid;)Z a
	getContentHeight (Lnet/minecraft/world/level/block/state/BlockState;)D a
	getInteractionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	isEntityInsideContent (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)Z a
	isFull (Lnet/minecraft/world/level/block/state/BlockState;)Z c
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	receiveStalactiteDrip (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/AbstractChestBlock byi
	blockEntityType a
	combine (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)Lnet/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult; a
net/minecraft/world/level/block/AbstractFurnaceBlock byj
	FACING a
	LIT b
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	createFurnaceTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/entity/BlockEntityType;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	openContainer (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/AbstractGlassBlock byk
	getShadeBrightness (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F b
	getVisualShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
net/minecraft/world/level/block/AbstractSkullBlock byl
	type a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	getType ()Lnet/minecraft/world/level/block/SkullBlock$Type; b
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
net/minecraft/world/level/block/AirBlock bym
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
net/minecraft/world/level/block/AmethystBlock byn
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
net/minecraft/world/level/block/AmethystClusterBlock byo
	FACING b
	WATERLOGGED a
	downAabb h
	eastAabb e
	northAabb c
	southAabb d
	upAabb g
	westAabb f
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; d
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/AnvilBlock byp
	BASE b
	CONTAINER_TITLE k
	FACING a
	FALL_DAMAGE_MAX m
	FALL_DAMAGE_PER_DISTANCE l
	X_AXIS_AABB i
	X_LEG1 c
	X_LEG2 d
	X_TOP e
	Z_AXIS_AABB j
	Z_LEG1 f
	Z_LEG2 g
	Z_TOP h
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	damage (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; e
	falling (Lnet/minecraft/world/entity/item/FallingBlockEntity;)V a
	getDustColor (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I d
	getFallDamageSource ()Lnet/minecraft/world/damagesource/DamageSource; b
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	onBrokenAfterFall (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/item/FallingBlockEntity;)V a
	onLand (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/item/FallingBlockEntity;)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/AttachedStemBlock byq
	AABBS c
	AABB_OFFSET b
	FACING a
	fruit d
	seedSupplier e
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/AzaleaBlock byr
	SHAPE b
	TREE_GROWER a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/BambooBlock bys
	AGE g
	AGE_THICK_BAMBOO n
	AGE_THIN_BAMBOO m
	COLLISION_AABB_OFFSET c
	COLLISION_SHAPE f
	LARGE_LEAVES_AABB_OFFSET b
	LARGE_SHAPE e
	LEAVES h
	MAX_HEIGHT j
	SMALL_LEAVES_AABB_OFFSET a
	SMALL_SHAPE d
	STAGE i
	STAGE_DONE_GROWING l
	STAGE_GROWING k
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getDestroyProgress (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getHeightAboveUpToMax (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I a
	getHeightBelowUpToMax (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I b
	getOffsetType ()Lnet/minecraft/world/level/block/state/BlockBehaviour$OffsetType; S_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	growBamboo (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;I)V a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isCollisionShapeFullBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a_
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BambooSaplingBlock byt
	SAPLING_AABB_OFFSET a
	SAPLING_SHAPE b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getDestroyProgress (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getOffsetType ()Lnet/minecraft/world/level/block/state/BlockBehaviour$OffsetType; S_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	growBamboo (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BannerBlock byu
	BY_COLOR b
	ROTATION a
	SHAPE c
	byColor (Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/level/block/Block; a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BarrelBlock byv
	FACING a
	OPEN b
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/BarrierBlock byw
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShadeBrightness (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F b
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
net/minecraft/world/level/block/BaseCoralFanBlock byx
	AABB a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
net/minecraft/world/level/block/BaseCoralPlantBlock byy
	AABB_OFFSET a
	SHAPE b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
net/minecraft/world/level/block/BaseCoralPlantTypeBlock byz
	AABB a
	WATERLOGGED c
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	scanForWater (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z e
	tryScheduleDieTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BaseCoralWallFanBlock bza
	FACING a
	SHAPES b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BaseEntityBlock bzb
	createTickerHelper (Lnet/minecraft/world/level/block/entity/BlockEntityType;Lnet/minecraft/world/level/block/entity/BlockEntityType;Lnet/minecraft/world/level/block/entity/BlockEntityTicker;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	triggerEvent (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;II)Z a
net/minecraft/world/level/block/BaseFireBlock bzc
	AABB_OFFSET a
	DOWN_AABB b
	SECONDS_ON_FIRE c
	fireDamage d
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	canBePlacedAt (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	canBurn (Lnet/minecraft/world/level/block/state/BlockState;)Z f
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getState (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	inPortalDimension (Lnet/minecraft/world/level/Level;)Z a
	isPortal (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z b
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V a
	spawnDestroyParticles (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/BasePressurePlateBlock bzd
	AABB b
	PRESSED_AABB a
	TOUCH_AABB c
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	checkPressed (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;I)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; d
	getPressedTime ()I c
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getSignalForState (Lnet/minecraft/world/level/block/state/BlockState;)I g
	getSignalStrength (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I b
	isPossibleToRespawnInThis ()Z W_
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	playOffSound (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V b
	playOnSound (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	setSignalForState (Lnet/minecraft/world/level/block/state/BlockState;I)Lnet/minecraft/world/level/block/state/BlockState; a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateNeighbours (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BaseRailBlock bze
	FLAT_AABB a
	HALF_BLOCK_AABB b
	WATERLOGGED c
	isStraight d
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; d
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getShapeProperty ()Lnet/minecraft/world/level/block/state/properties/Property; d
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isRail (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z a
	isRail (Lnet/minecraft/world/level/block/state/BlockState;)Z g
	isStraight ()Z c
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	shouldBeRemoved (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/properties/RailShape;)Z a
	updateDir (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateState (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V a
	updateState (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BeaconBeamBlock bzf
	getColor ()Lnet/minecraft/world/item/DyeColor; a
net/minecraft/world/level/block/BeaconBlock bzg
	getColor ()Lnet/minecraft/world/item/DyeColor; a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/BedBlock bzh
	BASE d
	EAST_SHAPE l
	HEIGHT c
	LEG_NORTH_EAST g
	LEG_NORTH_WEST e
	LEG_SOUTH_EAST h
	LEG_SOUTH_WEST f
	LEG_WIDTH m
	NORTH_SHAPE i
	OCCUPIED b
	PART a
	SOUTH_SHAPE j
	WEST_SHAPE k
	color n
	bedAboveStandUpOffsets (Lnet/minecraft/core/Direction;)[[I a
	bedStandUpOffsets (Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)[[I a
	bedSurroundStandUpOffsets (Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)[[I b
	bounceUp (Lnet/minecraft/world/entity/Entity;)V a
	canSetSpawn (Lnet/minecraft/world/level/Level;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	fallOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;F)V a
	findBunkBedStandUpPosition (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/CollisionGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)Ljava/util/Optional; a
	findStandUpPosition (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/CollisionGetter;Lnet/minecraft/core/BlockPos;F)Ljava/util/Optional; a
	findStandUpPositionAtOffset (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/CollisionGetter;Lnet/minecraft/core/BlockPos;[[IZ)Ljava/util/Optional; a
	getBedOrientation (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/Direction; a
	getBlockType (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/DoubleBlockCombiner$BlockType; h
	getColor ()Lnet/minecraft/world/item/DyeColor; c
	getConnectedDirection (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/core/Direction; g
	getNeighbourDirection (Lnet/minecraft/world/level/block/state/properties/BedPart;Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Direction; a
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; d
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getSeed (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)J a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isBunkBed (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	kickVillagerOutOfBed (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	updateEntityAfterFallOn (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/entity/Entity;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/BeehiveBlock bzi
	FACING a
	HONEY_LEVEL b
	MAX_HONEY_LEVELS c
	SHEARED_HONEYCOMB_COUNT e
	SPAWN_DIRECTIONS d
	angerNearbyBees (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V b
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	dropHoneycomb (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getDrops (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/storage/loot/LootContext$Builder;)Ljava/util/List; a
	getRandomOffset (Ljava/util/Random;)Lnet/minecraft/core/Direction; a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	hiveContainsBees (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z c
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	playerDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/item/ItemStack;)V a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V a
	releaseBeesAndResetHoneyLevel (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeReleaseStatus;)V a
	resetHoneyLevel (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	spawnFluidParticle (Lnet/minecraft/world/level/Level;DDDDD)V a
	spawnParticle (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/VoxelShape;D)V a
	trySpawnDripParticles (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/BeetrootBlock bzj
	AGE b
	MAX_AGE a
	SHAPE_BY_AGE e
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAgeProperty ()Lnet/minecraft/world/level/block/state/properties/IntegerProperty; c
	getBaseSeedId ()Lnet/minecraft/world/level/ItemLike; e
	getBonemealAgeIncrease (Lnet/minecraft/world/level/Level;)I a
	getMaxAge ()I d
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
net/minecraft/world/level/block/BellBlock bzk
	ATTACHMENT b
	BELL_BOTTOM_SHAPE h
	BELL_SHAPE i
	BELL_TOP_SHAPE g
	CEILING_SHAPE G
	EAST_WEST_BETWEEN k
	EAST_WEST_FLOOR_SHAPE f
	EVENT_BELL_RING d
	FACING a
	NORTH_SOUTH_BETWEEN j
	NORTH_SOUTH_FLOOR_SHAPE e
	POWERED c
	TO_EAST m
	TO_NORTH n
	TO_SOUTH F
	TO_WEST l
	attemptToRing (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	attemptToRing (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getConnectedDirection (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/core/Direction; n
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; d
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	getVoxelShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/shapes/VoxelShape; h
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isProperHit (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;D)Z a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/player/Player;Z)Z a
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/BigDripleafBlock bzl
	DELAY_UNTIL_NEXT_TILT_STATE d
	ENTITY_DETECTION_MIN_Y g
	LEAF_SHAPES i
	LOWEST_LEAF_TOP h
	MAX_GEN_HEIGHT e
	NO_TICK c
	STEM_SHAPES k
	STEM_SLICER j
	STEM_WIDTH f
	TILT b
	WATERLOGGED a
	shapesCache l
	calculateShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/shapes/VoxelShape; h
	canEntityTilt (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)Z a
	canPlaceAt (Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	canReplace (Lnet/minecraft/world/level/block/state/BlockState;)Z n
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	place (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/core/Direction;)Z a
	placeWithRandomHeight (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)V a
	playTiltSound (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/sounds/SoundEvent;)V a
	resetTilt (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	setTilt (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/properties/Tilt;)V a
	setTiltAndScheduleTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/properties/Tilt;Lnet/minecraft/sounds/SoundEvent;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BigDripleafStemBlock bzm
	EAST_SHAPE c
	NORTH_SHAPE a
	SOUTH_SHAPE b
	STEM_WIDTH f
	WATERLOGGED e
	WEST_SHAPE d
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	place (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/core/Direction;)Z a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BlastFurnaceBlock bzn
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	openContainer (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
net/minecraft/world/level/block/Block bzo
	BLOCK_STATE_REGISTRY p
	CACHE_SIZE e
	INDESTRUCTIBLE B
	INSTANT C
	LOGGER o
	OCCLUSION_CACHE f
	SHAPE_FULL_BLOCK_CACHE a
	UPDATE_ALL z
	UPDATE_ALL_IMMEDIATE A
	UPDATE_CLIENTS r
	UPDATE_IMMEDIATE t
	UPDATE_INVISIBLE s
	UPDATE_KNOWN_SHAPE u
	UPDATE_LIMIT D
	UPDATE_MOVE_BY_PISTON w
	UPDATE_NEIGHBORS q
	UPDATE_NONE y
	UPDATE_SUPPRESS_DROPS v
	UPDATE_SUPPRESS_LIGHT x
	defaultBlockState b
	descriptionId c
	item d
	stateDefinition E
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/BlockGetter;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	asBlock ()Lnet/minecraft/world/level/block/Block; p
	asItem ()Lnet/minecraft/world/item/Item; k
	box (DDDDDD)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	byItem (Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/level/block/Block; a
	canSupportCenter (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	canSupportRigidBlock (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	copyProperty (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/properties/Property;)Lnet/minecraft/world/level/block/state/BlockState; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	defaultBlockState ()Lnet/minecraft/world/level/block/state/BlockState; n
	destroy (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	dropFromExplosion (Lnet/minecraft/world/level/Explosion;)Z a
	dropResources (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V c
	dropResources (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/item/ItemStack;)V a
	dropResources (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
	dropResources (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/storage/loot/LootContext$Builder;)V b
	fallOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;F)V a
	fillItemCategory (Lnet/minecraft/world/item/CreativeModeTab;Lnet/minecraft/core/NonNullList;)V a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getDescriptionId ()Ljava/lang/String; h
	getDrops (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/BlockEntity;)Ljava/util/List; a
	getDrops (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; a
	getExplosionResistance ()F f
	getFriction ()F i
	getId (Lnet/minecraft/world/level/block/state/BlockState;)I i
	getJumpFactor ()F l
	getName ()Lnet/minecraft/network/chat/MutableComponent; g
	getShapeForEachState (Ljava/util/function/Function;)Lcom/google/common/collect/ImmutableMap; a
	getSoundType (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/SoundType; m
	getSpeedFactor ()F j
	getStateDefinition ()Lnet/minecraft/world/level/block/state/StateDefinition; m
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	handlePrecipitation (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/biome/Biome$Precipitation;)V a
	hasDynamicShape ()Z o
	isExceptionForConnection (Lnet/minecraft/world/level/block/state/BlockState;)Z j
	isFaceFull (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/core/Direction;)Z a
	isPossibleToRespawnInThis ()Z W_
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	isShapeFullBlock (Lnet/minecraft/world/phys/shapes/VoxelShape;)Z a
	playerDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/item/ItemStack;)V a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V a
	popExperience (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;I)V a
	popResource (Lnet/minecraft/world/level/Level;Ljava/util/function/Supplier;Lnet/minecraft/world/item/ItemStack;)V a
	popResource (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)V a
	popResourceFromFace (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/world/item/ItemStack;)V a
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	pushEntitiesUp (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	registerDefaultState (Lnet/minecraft/world/level/block/state/BlockState;)V k
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	shouldRenderFace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/core/BlockPos;)Z a
	spawnDestroyParticles (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	stateById (I)Lnet/minecraft/world/level/block/state/BlockState; a
	stepOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/Entity;)V a
	updateEntityAfterFallOn (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/entity/Entity;)V a
	updateFromNeighbourShapes (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; b
	updateOrDestroy (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;I)V a
	updateOrDestroy (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;II)V a
	wasExploded (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Explosion;)V a
	withPropertiesOf (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; l
net/minecraft/world/level/block/Block$BlockStatePairKey bzo$a
	direction c
	first a
	second b
net/minecraft/world/level/block/Blocks bzp
	ACACIA_BUTTON fn
	ACACIA_DOOR iI
	ACACIA_FENCE iD
	ACACIA_FENCE_GATE iy
	ACACIA_LEAVES ao
	ACACIA_LOG Q
	ACACIA_PLANKS r
	ACACIA_PRESSURE_PLATE cD
	ACACIA_SAPLING x
	ACACIA_SIGN cj
	ACACIA_SLAB ic
	ACACIA_STAIRS gy
	ACACIA_TRAPDOOR dA
	ACACIA_WALL_SIGN ct
	ACACIA_WOOD ac
	ACTIVATOR_RAIL fQ
	AIR a
	ALLIUM by
	AMETHYST_BLOCK oF
	AMETHYST_CLUSTER oH
	ANCIENT_DEBRIS nv
	ANDESITE g
	ANDESITE_SLAB lO
	ANDESITE_STAIRS lB
	ANDESITE_WALL lZ
	ANVIL fB
	ATTACHED_MELON_STEM dU
	ATTACHED_PUMPKIN_STEM dT
	AZALEA pE
	AZALEA_LEAVES aq
	AZURE_BLUET bz
	BAMBOO lm
	BAMBOO_SAPLING ll
	BARREL mg
	BARRIER gB
	BASALT cW
	BEACON eF
	BEDROCK z
	BEEHIVE nr
	BEETROOTS iR
	BEE_NEST nq
	BELL mp
	BIG_DRIPLEAF pI
	BIG_DRIPLEAF_STEM pJ
	BIRCH_BUTTON fl
	BIRCH_DOOR iG
	BIRCH_FENCE iB
	BIRCH_FENCE_GATE iw
	BIRCH_LEAVES am
	BIRCH_LOG O
	BIRCH_PLANKS p
	BIRCH_PRESSURE_PLATE cB
	BIRCH_SAPLING v
	BIRCH_SIGN ci
	BIRCH_SLAB ia
	BIRCH_STAIRS eC
	BIRCH_TRAPDOOR dy
	BIRCH_WALL_SIGN cs
	BIRCH_WOOD aa
	BLACKSTONE nD
	BLACKSTONE_SLAB nG
	BLACKSTONE_STAIRS nE
	BLACKSTONE_WALL nF
	BLACK_BANNER hD
	BLACK_BED aS
	BLACK_CANDLE on
	BLACK_CANDLE_CAKE oE
	BLACK_CARPET he
	BLACK_CONCRETE jZ
	BLACK_CONCRETE_POWDER kp
	BLACK_GLAZED_TERRACOTTA jJ
	BLACK_SHULKER_BOX jt
	BLACK_STAINED_GLASS dv
	BLACK_STAINED_GLASS_PANE gx
	BLACK_TERRACOTTA gh
	BLACK_WALL_BANNER hT
	BLACK_WOOL bt
	BLAST_FURNACE mi
	BLUE_BANNER hz
	BLUE_BED aO
	BLUE_CANDLE oj
	BLUE_CANDLE_CAKE oA
	BLUE_CARPET ha
	BLUE_CONCRETE jV
	BLUE_CONCRETE_POWDER kl
	BLUE_GLAZED_TERRACOTTA jF
	BLUE_ICE lj
	BLUE_ORCHID bx
	BLUE_SHULKER_BOX jp
	BLUE_STAINED_GLASS dr
	BLUE_STAINED_GLASS_PANE gt
	BLUE_TERRACOTTA gd
	BLUE_WALL_BANNER hP
	BLUE_WOOL bp
	BONE_BLOCK ja
	BOOKSHELF bO
	BRAIN_CORAL kK
	BRAIN_CORAL_BLOCK kA
	BRAIN_CORAL_FAN kU
	BRAIN_CORAL_WALL_FAN le
	BREWING_STAND ej
	BRICKS bM
	BRICK_SLAB ik
	BRICK_STAIRS ea
	BRICK_WALL lS
	BROWN_BANNER hA
	BROWN_BED aP
	BROWN_CANDLE ok
	BROWN_CANDLE_CAKE oB
	BROWN_CARPET hb
	BROWN_CONCRETE jW
	BROWN_CONCRETE_POWDER km
	BROWN_GLAZED_TERRACOTTA jG
	BROWN_MUSHROOM bI
	BROWN_MUSHROOM_BLOCK dM
	BROWN_SHULKER_BOX jq
	BROWN_STAINED_GLASS ds
	BROWN_STAINED_GLASS_PANE gu
	BROWN_TERRACOTTA ge
	BROWN_WALL_BANNER hQ
	BROWN_WOOL bq
	BUBBLE_COLUMN lq
	BUBBLE_CORAL kL
	BUBBLE_CORAL_BLOCK kB
	BUBBLE_CORAL_FAN kV
	BUBBLE_CORAL_WALL_FAN lf
	BUDDING_AMETHYST oG
	CACTUS cN
	CAKE de
	CALCITE oM
	CAMPFIRE ms
	CANDLE nX
	CANDLE_CAKE oo
	CARROTS fh
	CARTOGRAPHY_TABLE mj
	CARVED_PUMPKIN dc
	CAULDRON ek
	CAVE_AIR lp
	CAVE_VINES pB
	CAVE_VINES_PLANT pC
	CHAIN dQ
	CHAIN_COMMAND_BLOCK iV
	CHEST bX
	CHIPPED_ANVIL fC
	CHISELED_DEEPSLATE qe
	CHISELED_NETHER_BRICKS nU
	CHISELED_POLISHED_BLACKSTONE nK
	CHISELED_QUARTZ_BLOCK fN
	CHISELED_RED_SANDSTONE hV
	CHISELED_SANDSTONE aA
	CHISELED_STONE_BRICKS dF
	CHORUS_FLOWER iM
	CHORUS_PLANT iL
	CLAY cO
	COAL_BLOCK hg
	COAL_ORE J
	COARSE_DIRT k
	COBBLED_DEEPSLATE pO
	COBBLED_DEEPSLATE_SLAB pQ
	COBBLED_DEEPSLATE_STAIRS pP
	COBBLED_DEEPSLATE_WALL pR
	COBBLESTONE m
	COBBLESTONE_SLAB ij
	COBBLESTONE_STAIRS cp
	COBBLESTONE_WALL eG
	COBWEB aW
	COCOA et
	COMMAND_BLOCK eE
	COMPARATOR fH
	COMPOSTER no
	CONDUIT lk
	COPPER_BLOCK oT
	COPPER_ORE oU
	CORNFLOWER bF
	CRACKED_DEEPSLATE_BRICKS qf
	CRACKED_DEEPSLATE_TILES qg
	CRACKED_NETHER_BRICKS nV
	CRACKED_POLISHED_BLACKSTONE_BRICKS nJ
	CRACKED_STONE_BRICKS dE
	CRAFTING_TABLE cc
	CREEPER_HEAD fx
	CREEPER_WALL_HEAD fy
	CRIMSON_BUTTON ne
	CRIMSON_DOOR ng
	CRIMSON_FENCE mW
	CRIMSON_FENCE_GATE na
	CRIMSON_FUNGUS mJ
	CRIMSON_HYPHAE mG
	CRIMSON_NYLIUM mI
	CRIMSON_PLANKS mQ
	CRIMSON_PRESSURE_PLATE mU
	CRIMSON_ROOTS mP
	CRIMSON_SIGN ni
	CRIMSON_SLAB mS
	CRIMSON_STAIRS nc
	CRIMSON_STEM mE
	CRIMSON_TRAPDOOR mY
	CRIMSON_WALL_SIGN nk
	CRYING_OBSIDIAN nw
	CUT_COPPER oZ
	CUT_COPPER_SLAB ph
	CUT_COPPER_STAIRS pd
	CUT_RED_SANDSTONE hW
	CUT_RED_SANDSTONE_SLAB ip
	CUT_SANDSTONE aB
	CUT_SANDSTONE_SLAB ih
	CYAN_BANNER hx
	CYAN_BED aM
	CYAN_CANDLE oh
	CYAN_CANDLE_CAKE oy
	CYAN_CARPET gY
	CYAN_CONCRETE jT
	CYAN_CONCRETE_POWDER kj
	CYAN_GLAZED_TERRACOTTA jD
	CYAN_SHULKER_BOX jn
	CYAN_STAINED_GLASS dp
	CYAN_STAINED_GLASS_PANE gr
	CYAN_TERRACOTTA gb
	CYAN_WALL_BANNER hN
	CYAN_WOOL bn
	DAMAGED_ANVIL fD
	DANDELION bv
	DARK_OAK_BUTTON fo
	DARK_OAK_DOOR iJ
	DARK_OAK_FENCE iE
	DARK_OAK_FENCE_GATE iz
	DARK_OAK_LEAVES ap
	DARK_OAK_LOG R
	DARK_OAK_PLANKS s
	DARK_OAK_PRESSURE_PLATE cE
	DARK_OAK_SAPLING y
	DARK_OAK_SIGN cl
	DARK_OAK_SLAB id
	DARK_OAK_STAIRS gz
	DARK_OAK_TRAPDOOR dB
	DARK_OAK_WALL_SIGN cv
	DARK_OAK_WOOD ad
	DARK_PRISMARINE gG
	DARK_PRISMARINE_SLAB gM
	DARK_PRISMARINE_STAIRS gJ
	DAYLIGHT_DETECTOR fI
	DEAD_BRAIN_CORAL kF
	DEAD_BRAIN_CORAL_BLOCK kv
	DEAD_BRAIN_CORAL_FAN kP
	DEAD_BRAIN_CORAL_WALL_FAN kZ
	DEAD_BUBBLE_CORAL kG
	DEAD_BUBBLE_CORAL_BLOCK kw
	DEAD_BUBBLE_CORAL_FAN kQ
	DEAD_BUBBLE_CORAL_WALL_FAN la
	DEAD_BUSH aZ
	DEAD_FIRE_CORAL kH
	DEAD_FIRE_CORAL_BLOCK kx
	DEAD_FIRE_CORAL_FAN kR
	DEAD_FIRE_CORAL_WALL_FAN lb
	DEAD_HORN_CORAL kI
	DEAD_HORN_CORAL_BLOCK ky
	DEAD_HORN_CORAL_FAN kS
	DEAD_HORN_CORAL_WALL_FAN lc
	DEAD_TUBE_CORAL kE
	DEAD_TUBE_CORAL_BLOCK ku
	DEAD_TUBE_CORAL_FAN kO
	DEAD_TUBE_CORAL_WALL_FAN kY
	DEEPSLATE pN
	DEEPSLATE_BRICKS qa
	DEEPSLATE_BRICK_SLAB qc
	DEEPSLATE_BRICK_STAIRS qb
	DEEPSLATE_BRICK_WALL qd
	DEEPSLATE_COAL_ORE K
	DEEPSLATE_COPPER_ORE oV
	DEEPSLATE_DIAMOND_ORE ca
	DEEPSLATE_EMERALD_ORE ew
	DEEPSLATE_GOLD_ORE G
	DEEPSLATE_IRON_ORE I
	DEEPSLATE_LAPIS_ORE aw
	DEEPSLATE_REDSTONE_ORE cG
	DEEPSLATE_TILES pW
	DEEPSLATE_TILE_SLAB pY
	DEEPSLATE_TILE_STAIRS pX
	DEEPSLATE_TILE_WALL pZ
	DETECTOR_RAIL aU
	DIAMOND_BLOCK cb
	DIAMOND_ORE bZ
	DIORITE e
	DIORITE_SLAB lR
	DIORITE_STAIRS lE
	DIORITE_WALL md
	DIRT j
	DIRT_PATH iS
	DISPENSER ay
	DRAGON_EGG er
	DRAGON_HEAD fz
	DRAGON_WALL_HEAD fA
	DRIED_KELP_BLOCK ks
	DRIPSTONE_BLOCK pA
	DROPPER fR
	EMERALD_BLOCK eA
	EMERALD_ORE ev
	ENCHANTING_TABLE ei
	ENDER_CHEST ex
	END_GATEWAY iT
	END_PORTAL eo
	END_PORTAL_FRAME ep
	END_ROD iK
	END_STONE eq
	END_STONE_BRICKS iQ
	END_STONE_BRICK_SLAB lK
	END_STONE_BRICK_STAIRS lw
	END_STONE_BRICK_WALL mc
	EXPOSED_COPPER oS
	EXPOSED_CUT_COPPER oY
	EXPOSED_CUT_COPPER_SLAB pg
	EXPOSED_CUT_COPPER_STAIRS pc
	FARMLAND ce
	FERN aY
	FIRE bT
	FIRE_CORAL kM
	FIRE_CORAL_BLOCK kC
	FIRE_CORAL_FAN kW
	FIRE_CORAL_WALL_FAN lg
	FLETCHING_TABLE mk
	FLOWERING_AZALEA pF
	FLOWERING_AZALEA_LEAVES ar
	FLOWER_POT eI
	FROSTED_ICE iW
	FURNACE cf
	GILDED_BLACKSTONE nO
	GLASS au
	GLASS_PANE dR
	GLOWSTONE da
	GLOW_LICHEN dY
	GOLD_BLOCK bK
	GOLD_ORE F
	GRANITE c
	GRANITE_SLAB lN
	GRANITE_STAIRS lA
	GRANITE_WALL lW
	GRASS aX
	GRASS_BLOCK i
	GRAVEL E
	GRAY_BANNER hv
	GRAY_BED aK
	GRAY_CANDLE of
	GRAY_CANDLE_CAKE ow
	GRAY_CARPET gW
	GRAY_CONCRETE jR
	GRAY_CONCRETE_POWDER kh
	GRAY_GLAZED_TERRACOTTA jB
	GRAY_SHULKER_BOX jl
	GRAY_STAINED_GLASS dn
	GRAY_STAINED_GLASS_PANE gp
	GRAY_TERRACOTTA fZ
	GRAY_WALL_BANNER hL
	GRAY_WOOL bl
	GREEN_BANNER hB
	GREEN_BED aQ
	GREEN_CANDLE ol
	GREEN_CANDLE_CAKE oC
	GREEN_CARPET hc
	GREEN_CONCRETE jX
	GREEN_CONCRETE_POWDER kn
	GREEN_GLAZED_TERRACOTTA jH
	GREEN_SHULKER_BOX jr
	GREEN_STAINED_GLASS dt
	GREEN_STAINED_GLASS_PANE gv
	GREEN_TERRACOTTA gf
	GREEN_WALL_BANNER hR
	GREEN_WOOL br
	GRINDSTONE ml
	HANGING_ROOTS pL
	HAY_BLOCK gO
	HEAVY_WEIGHTED_PRESSURE_PLATE fG
	HONEYCOMB_BLOCK nt
	HONEY_BLOCK ns
	HOPPER fL
	HORN_CORAL kN
	HORN_CORAL_BLOCK kD
	HORN_CORAL_FAN kX
	HORN_CORAL_WALL_FAN lh
	ICE cL
	INFESTED_CHISELED_STONE_BRICKS dL
	INFESTED_COBBLESTONE dH
	INFESTED_CRACKED_STONE_BRICKS dK
	INFESTED_DEEPSLATE qh
	INFESTED_MOSSY_STONE_BRICKS dJ
	INFESTED_STONE dG
	INFESTED_STONE_BRICKS dI
	IRON_BARS dP
	IRON_BLOCK bL
	IRON_DOOR cy
	IRON_ORE H
	IRON_TRAPDOOR gD
	JACK_O_LANTERN dd
	JIGSAW nn
	JUKEBOX cQ
	JUNGLE_BUTTON fm
	JUNGLE_DOOR iH
	JUNGLE_FENCE iC
	JUNGLE_FENCE_GATE ix
	JUNGLE_LEAVES an
	JUNGLE_LOG P
	JUNGLE_PLANKS q
	JUNGLE_PRESSURE_PLATE cC
	JUNGLE_SAPLING w
	JUNGLE_SIGN ck
	JUNGLE_SLAB ib
	JUNGLE_STAIRS eD
	JUNGLE_TRAPDOOR dz
	JUNGLE_WALL_SIGN cu
	JUNGLE_WOOD ab
	KELP kq
	KELP_PLANT kr
	LADDER cn
	LANTERN mq
	LAPIS_BLOCK ax
	LAPIS_ORE av
	LARGE_AMETHYST_BUD oI
	LARGE_FERN hn
	LAVA B
	LAVA_CAULDRON em
	LECTERN mm
	LEVER cw
	LIGHT gC
	LIGHTNING_ROD py
	LIGHT_BLUE_BANNER hr
	LIGHT_BLUE_BED aG
	LIGHT_BLUE_CANDLE ob
	LIGHT_BLUE_CANDLE_CAKE os
	LIGHT_BLUE_CARPET gS
	LIGHT_BLUE_CONCRETE jN
	LIGHT_BLUE_CONCRETE_POWDER kd
	LIGHT_BLUE_GLAZED_TERRACOTTA jx
	LIGHT_BLUE_SHULKER_BOX jh
	LIGHT_BLUE_STAINED_GLASS dj
	LIGHT_BLUE_STAINED_GLASS_PANE gl
	LIGHT_BLUE_TERRACOTTA fV
	LIGHT_BLUE_WALL_BANNER hH
	LIGHT_BLUE_WOOL bh
	LIGHT_GRAY_BANNER hw
	LIGHT_GRAY_BED aL
	LIGHT_GRAY_CANDLE og
	LIGHT_GRAY_CANDLE_CAKE ox
	LIGHT_GRAY_CARPET gX
	LIGHT_GRAY_CONCRETE jS
	LIGHT_GRAY_CONCRETE_POWDER ki
	LIGHT_GRAY_GLAZED_TERRACOTTA jC
	LIGHT_GRAY_SHULKER_BOX jm
	LIGHT_GRAY_STAINED_GLASS do
	LIGHT_GRAY_STAINED_GLASS_PANE gq
	LIGHT_GRAY_TERRACOTTA ga
	LIGHT_GRAY_WALL_BANNER hM
	LIGHT_GRAY_WOOL bm
	LIGHT_WEIGHTED_PRESSURE_PLATE fF
	LILAC hj
	LILY_OF_THE_VALLEY bH
	LILY_PAD ed
	LIME_BANNER ht
	LIME_BED aI
	LIME_CANDLE od
	LIME_CANDLE_CAKE ou
	LIME_CARPET gU
	LIME_CONCRETE jP
	LIME_CONCRETE_POWDER kf
	LIME_GLAZED_TERRACOTTA jz
	LIME_SHULKER_BOX jj
	LIME_STAINED_GLASS dl
	LIME_STAINED_GLASS_PANE gn
	LIME_TERRACOTTA fX
	LIME_WALL_BANNER hJ
	LIME_WOOL bj
	LODESTONE nC
	LOOM mf
	MAGENTA_BANNER hq
	MAGENTA_BED aF
	MAGENTA_CANDLE oa
	MAGENTA_CANDLE_CAKE or
	MAGENTA_CARPET gR
	MAGENTA_CONCRETE jM
	MAGENTA_CONCRETE_POWDER kc
	MAGENTA_GLAZED_TERRACOTTA jw
	MAGENTA_SHULKER_BOX jg
	MAGENTA_STAINED_GLASS di
	MAGENTA_STAINED_GLASS_PANE gk
	MAGENTA_TERRACOTTA fU
	MAGENTA_WALL_BANNER hG
	MAGENTA_WOOL bg
	MAGMA_BLOCK iX
	MEDIUM_AMETHYST_BUD oJ
	MELON dS
	MELON_STEM dW
	MOSSY_COBBLESTONE bP
	MOSSY_COBBLESTONE_SLAB lJ
	MOSSY_COBBLESTONE_STAIRS lv
	MOSSY_COBBLESTONE_WALL eH
	MOSSY_STONE_BRICKS dD
	MOSSY_STONE_BRICK_SLAB lH
	MOSSY_STONE_BRICK_STAIRS lt
	MOSSY_STONE_BRICK_WALL lV
	MOSS_BLOCK pH
	MOSS_CARPET pG
	MOVING_PISTON bu
	MUSHROOM_STEM dO
	MYCELIUM ec
	NETHERITE_BLOCK nu
	NETHERRACK cT
	NETHER_BRICKS ee
	NETHER_BRICK_FENCE ef
	NETHER_BRICK_SLAB im
	NETHER_BRICK_STAIRS eg
	NETHER_BRICK_WALL lY
	NETHER_GOLD_ORE L
	NETHER_PORTAL db
	NETHER_QUARTZ_ORE fK
	NETHER_SPROUTS mD
	NETHER_WART eh
	NETHER_WART_BLOCK iY
	NOTE_BLOCK aC
	OAK_BUTTON fj
	OAK_DOOR cm
	OAK_FENCE cR
	OAK_FENCE_GATE dZ
	OAK_LEAVES ak
	OAK_LOG M
	OAK_PLANKS n
	OAK_PRESSURE_PLATE cz
	OAK_SAPLING t
	OAK_SIGN cg
	OAK_SLAB hY
	OAK_STAIRS bW
	OAK_TRAPDOOR dw
	OAK_WALL_SIGN cq
	OAK_WOOD Y
	OBSERVER jc
	OBSIDIAN bQ
	ORANGE_BANNER hp
	ORANGE_BED aE
	ORANGE_CANDLE nZ
	ORANGE_CANDLE_CAKE oq
	ORANGE_CARPET gQ
	ORANGE_CONCRETE jL
	ORANGE_CONCRETE_POWDER kb
	ORANGE_GLAZED_TERRACOTTA jv
	ORANGE_SHULKER_BOX jf
	ORANGE_STAINED_GLASS dh
	ORANGE_STAINED_GLASS_PANE gj
	ORANGE_TERRACOTTA fT
	ORANGE_TULIP bB
	ORANGE_WALL_BANNER hF
	ORANGE_WOOL bf
	OXEYE_DAISY bE
	OXIDIZED_COPPER oQ
	OXIDIZED_CUT_COPPER oW
	OXIDIZED_CUT_COPPER_SLAB pe
	OXIDIZED_CUT_COPPER_STAIRS pa
	PACKED_ICE hh
	PEONY hl
	PETRIFIED_OAK_SLAB ii
	PINK_BANNER hu
	PINK_BED aJ
	PINK_CANDLE oe
	PINK_CANDLE_CAKE ov
	PINK_CARPET gV
	PINK_CONCRETE jQ
	PINK_CONCRETE_POWDER kg
	PINK_GLAZED_TERRACOTTA jA
	PINK_SHULKER_BOX jk
	PINK_STAINED_GLASS dm
	PINK_STAINED_GLASS_PANE go
	PINK_TERRACOTTA fY
	PINK_TULIP bD
	PINK_WALL_BANNER hK
	PINK_WOOL bk
	PISTON bc
	PISTON_HEAD bd
	PLAYER_HEAD fv
	PLAYER_WALL_HEAD fw
	PODZOL l
	POINTED_DRIPSTONE pz
	POLISHED_ANDESITE h
	POLISHED_ANDESITE_SLAB lQ
	POLISHED_ANDESITE_STAIRS lD
	POLISHED_BASALT cX
	POLISHED_BLACKSTONE nH
	POLISHED_BLACKSTONE_BRICKS nI
	POLISHED_BLACKSTONE_BRICK_SLAB nL
	POLISHED_BLACKSTONE_BRICK_STAIRS nM
	POLISHED_BLACKSTONE_BRICK_WALL nN
	POLISHED_BLACKSTONE_BUTTON nS
	POLISHED_BLACKSTONE_PRESSURE_PLATE nR
	POLISHED_BLACKSTONE_SLAB nQ
	POLISHED_BLACKSTONE_STAIRS nP
	POLISHED_BLACKSTONE_WALL nT
	POLISHED_DEEPSLATE pS
	POLISHED_DEEPSLATE_SLAB pU
	POLISHED_DEEPSLATE_STAIRS pT
	POLISHED_DEEPSLATE_WALL pV
	POLISHED_DIORITE f
	POLISHED_DIORITE_SLAB lI
	POLISHED_DIORITE_STAIRS lu
	POLISHED_GRANITE d
	POLISHED_GRANITE_SLAB lF
	POLISHED_GRANITE_STAIRS lr
	POPPY bw
	POTATOES fi
	POTTED_ACACIA_SAPLING eN
	POTTED_ALLIUM eT
	POTTED_AZALEA qm
	POTTED_AZURE_BLUET eU
	POTTED_BAMBOO ln
	POTTED_BIRCH_SAPLING eL
	POTTED_BLUE_ORCHID eS
	POTTED_BROWN_MUSHROOM fe
	POTTED_CACTUS fg
	POTTED_CORNFLOWER fa
	POTTED_CRIMSON_FUNGUS ny
	POTTED_CRIMSON_ROOTS nA
	POTTED_DANDELION eQ
	POTTED_DARK_OAK_SAPLING eO
	POTTED_DEAD_BUSH ff
	POTTED_FERN eP
	POTTED_FLOWERING_AZALEA qn
	POTTED_JUNGLE_SAPLING eM
	POTTED_LILY_OF_THE_VALLEY fb
	POTTED_OAK_SAPLING eJ
	POTTED_ORANGE_TULIP eW
	POTTED_OXEYE_DAISY eZ
	POTTED_PINK_TULIP eY
	POTTED_POPPY eR
	POTTED_RED_MUSHROOM fd
	POTTED_RED_TULIP eV
	POTTED_SPRUCE_SAPLING eK
	POTTED_WARPED_FUNGUS nz
	POTTED_WARPED_ROOTS nB
	POTTED_WHITE_TULIP eX
	POTTED_WITHER_ROSE fc
	POWDER_SNOW oO
	POWDER_SNOW_CAULDRON en
	POWERED_RAIL aT
	PRISMARINE gE
	PRISMARINE_BRICKS gF
	PRISMARINE_BRICK_SLAB gL
	PRISMARINE_BRICK_STAIRS gI
	PRISMARINE_SLAB gK
	PRISMARINE_STAIRS gH
	PRISMARINE_WALL lT
	PUMPKIN cS
	PUMPKIN_STEM dV
	PURPLE_BANNER hy
	PURPLE_BED aN
	PURPLE_CANDLE oi
	PURPLE_CANDLE_CAKE oz
	PURPLE_CARPET gZ
	PURPLE_CONCRETE jU
	PURPLE_CONCRETE_POWDER kk
	PURPLE_GLAZED_TERRACOTTA jE
	PURPLE_SHULKER_BOX jo
	PURPLE_STAINED_GLASS dq
	PURPLE_STAINED_GLASS_PANE gs
	PURPLE_TERRACOTTA gc
	PURPLE_WALL_BANNER hO
	PURPLE_WOOL bo
	PURPUR_BLOCK iN
	PURPUR_PILLAR iO
	PURPUR_SLAB iq
	PURPUR_STAIRS iP
	QUARTZ_BLOCK fM
	QUARTZ_BRICKS nW
	QUARTZ_PILLAR fO
	QUARTZ_SLAB in
	QUARTZ_STAIRS fP
	RAIL co
	RAW_COPPER_BLOCK qk
	RAW_GOLD_BLOCK ql
	RAW_IRON_BLOCK qj
	REDSTONE_BLOCK fJ
	REDSTONE_LAMP es
	REDSTONE_ORE cF
	REDSTONE_TORCH cH
	REDSTONE_WALL_TORCH cI
	REDSTONE_WIRE bY
	RED_BANNER hC
	RED_BED aR
	RED_CANDLE om
	RED_CANDLE_CAKE oD
	RED_CARPET hd
	RED_CONCRETE jY
	RED_CONCRETE_POWDER ko
	RED_GLAZED_TERRACOTTA jI
	RED_MUSHROOM bJ
	RED_MUSHROOM_BLOCK dN
	RED_NETHER_BRICKS iZ
	RED_NETHER_BRICK_SLAB lP
	RED_NETHER_BRICK_STAIRS lC
	RED_NETHER_BRICK_WALL ma
	RED_SAND D
	RED_SANDSTONE hU
	RED_SANDSTONE_SLAB io
	RED_SANDSTONE_STAIRS hX
	RED_SANDSTONE_WALL lU
	RED_SHULKER_BOX js
	RED_STAINED_GLASS du
	RED_STAINED_GLASS_PANE gw
	RED_TERRACOTTA gg
	RED_TULIP bA
	RED_WALL_BANNER hS
	RED_WOOL bs
	REPEATER df
	REPEATING_COMMAND_BLOCK iU
	RESPAWN_ANCHOR nx
	ROOTED_DIRT pM
	ROSE_BUSH hk
	SAND C
	SANDSTONE az
	SANDSTONE_SLAB ig
	SANDSTONE_STAIRS eu
	SANDSTONE_WALL mb
	SCAFFOLDING me
	SCULK_SENSOR oP
	SEAGRASS ba
	SEA_LANTERN gN
	SEA_PICKLE li
	SHROOMLIGHT mK
	SHULKER_BOX jd
	SKELETON_SKULL fp
	SKELETON_WALL_SKULL fq
	SLIME_BLOCK gA
	SMALL_AMETHYST_BUD oK
	SMALL_DRIPLEAF pK
	SMITHING_TABLE mn
	SMOKER mh
	SMOOTH_BASALT qi
	SMOOTH_QUARTZ it
	SMOOTH_QUARTZ_SLAB lM
	SMOOTH_QUARTZ_STAIRS lz
	SMOOTH_RED_SANDSTONE iu
	SMOOTH_RED_SANDSTONE_SLAB lG
	SMOOTH_RED_SANDSTONE_STAIRS ls
	SMOOTH_SANDSTONE is
	SMOOTH_SANDSTONE_SLAB lL
	SMOOTH_SANDSTONE_STAIRS ly
	SMOOTH_STONE ir
	SMOOTH_STONE_SLAB if
	SNOW cK
	SNOW_BLOCK cM
	SOUL_CAMPFIRE mt
	SOUL_FIRE bU
	SOUL_LANTERN mr
	SOUL_SAND cU
	SOUL_SOIL cV
	SOUL_TORCH cY
	SOUL_WALL_TORCH cZ
	SPAWNER bV
	SPONGE as
	SPORE_BLOSSOM pD
	SPRUCE_BUTTON fk
	SPRUCE_DOOR iF
	SPRUCE_FENCE iA
	SPRUCE_FENCE_GATE iv
	SPRUCE_LEAVES al
	SPRUCE_LOG N
	SPRUCE_PLANKS o
	SPRUCE_PRESSURE_PLATE cA
	SPRUCE_SAPLING u
	SPRUCE_SIGN ch
	SPRUCE_SLAB hZ
	SPRUCE_STAIRS eB
	SPRUCE_TRAPDOOR dx
	SPRUCE_WALL_SIGN cr
	SPRUCE_WOOD Z
	STICKY_PISTON aV
	STONE b
	STONECUTTER mo
	STONE_BRICKS dC
	STONE_BRICK_SLAB il
	STONE_BRICK_STAIRS eb
	STONE_BRICK_WALL lX
	STONE_BUTTON cJ
	STONE_PRESSURE_PLATE cx
	STONE_SLAB ie
	STONE_STAIRS lx
	STRIPPED_ACACIA_LOG V
	STRIPPED_ACACIA_WOOD ai
	STRIPPED_BIRCH_LOG T
	STRIPPED_BIRCH_WOOD ag
	STRIPPED_CRIMSON_HYPHAE mH
	STRIPPED_CRIMSON_STEM mF
	STRIPPED_DARK_OAK_LOG W
	STRIPPED_DARK_OAK_WOOD aj
	STRIPPED_JUNGLE_LOG U
	STRIPPED_JUNGLE_WOOD ah
	STRIPPED_OAK_LOG X
	STRIPPED_OAK_WOOD ae
	STRIPPED_SPRUCE_LOG S
	STRIPPED_SPRUCE_WOOD af
	STRIPPED_WARPED_HYPHAE my
	STRIPPED_WARPED_STEM mw
	STRUCTURE_BLOCK nm
	STRUCTURE_VOID jb
	SUGAR_CANE cP
	SUNFLOWER hi
	SWEET_BERRY_BUSH mu
	TALL_GRASS hm
	TALL_SEAGRASS bb
	TARGET np
	TERRACOTTA hf
	TINTED_GLASS oN
	TNT bN
	TORCH bR
	TRAPPED_CHEST fE
	TRIPWIRE ez
	TRIPWIRE_HOOK ey
	TUBE_CORAL kJ
	TUBE_CORAL_BLOCK kz
	TUBE_CORAL_FAN kT
	TUBE_CORAL_WALL_FAN ld
	TUFF oL
	TURTLE_EGG kt
	TWISTING_VINES mN
	TWISTING_VINES_PLANT mO
	VINE dX
	VOID_AIR lo
	WALL_TORCH bS
	WARPED_BUTTON nf
	WARPED_DOOR nh
	WARPED_FENCE mX
	WARPED_FENCE_GATE nb
	WARPED_FUNGUS mA
	WARPED_HYPHAE mx
	WARPED_NYLIUM mz
	WARPED_PLANKS mR
	WARPED_PRESSURE_PLATE mV
	WARPED_ROOTS mC
	WARPED_SIGN nj
	WARPED_SLAB mT
	WARPED_STAIRS nd
	WARPED_STEM mv
	WARPED_TRAPDOOR mZ
	WARPED_WALL_SIGN nl
	WARPED_WART_BLOCK mB
	WATER A
	WATER_CAULDRON el
	WAXED_COPPER_BLOCK pi
	WAXED_CUT_COPPER pp
	WAXED_CUT_COPPER_SLAB px
	WAXED_CUT_COPPER_STAIRS pt
	WAXED_EXPOSED_COPPER pk
	WAXED_EXPOSED_CUT_COPPER po
	WAXED_EXPOSED_CUT_COPPER_SLAB pw
	WAXED_EXPOSED_CUT_COPPER_STAIRS ps
	WAXED_OXIDIZED_COPPER pl
	WAXED_OXIDIZED_CUT_COPPER pm
	WAXED_OXIDIZED_CUT_COPPER_SLAB pu
	WAXED_OXIDIZED_CUT_COPPER_STAIRS pq
	WAXED_WEATHERED_COPPER pj
	WAXED_WEATHERED_CUT_COPPER pn
	WAXED_WEATHERED_CUT_COPPER_SLAB pv
	WAXED_WEATHERED_CUT_COPPER_STAIRS pr
	WEATHERED_COPPER oR
	WEATHERED_CUT_COPPER oX
	WEATHERED_CUT_COPPER_SLAB pf
	WEATHERED_CUT_COPPER_STAIRS pb
	WEEPING_VINES mL
	WEEPING_VINES_PLANT mM
	WET_SPONGE at
	WHEAT cd
	WHITE_BANNER ho
	WHITE_BED aD
	WHITE_CANDLE nY
	WHITE_CANDLE_CAKE op
	WHITE_CARPET gP
	WHITE_CONCRETE jK
	WHITE_CONCRETE_POWDER ka
	WHITE_GLAZED_TERRACOTTA ju
	WHITE_SHULKER_BOX je
	WHITE_STAINED_GLASS dg
	WHITE_STAINED_GLASS_PANE gi
	WHITE_TERRACOTTA fS
	WHITE_TULIP bC
	WHITE_WALL_BANNER hE
	WHITE_WOOL be
	WITHER_ROSE bG
	WITHER_SKELETON_SKULL fr
	WITHER_SKELETON_WALL_SKULL fs
	YELLOW_BANNER hs
	YELLOW_BED aH
	YELLOW_CANDLE oc
	YELLOW_CANDLE_CAKE ot
	YELLOW_CARPET gT
	YELLOW_CONCRETE jO
	YELLOW_CONCRETE_POWDER ke
	YELLOW_GLAZED_TERRACOTTA jy
	YELLOW_SHULKER_BOX ji
	YELLOW_STAINED_GLASS dk
	YELLOW_STAINED_GLASS_PANE gm
	YELLOW_TERRACOTTA fW
	YELLOW_WALL_BANNER hI
	YELLOW_WOOL bi
	ZOMBIE_HEAD ft
	ZOMBIE_WALL_HEAD fu
	always (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	always (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/EntityType;)Ljava/lang/Boolean; b
	bed (Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/level/block/BedBlock; a
	leaves (Lnet/minecraft/world/level/block/SoundType;)Lnet/minecraft/world/level/block/LeavesBlock; a
	litBlockEmission (I)Ljava/util/function/ToIntFunction; a
	log (Lnet/minecraft/world/level/material/MaterialColor;Lnet/minecraft/world/level/material/MaterialColor;)Lnet/minecraft/world/level/block/RotatedPillarBlock; a
	netherStem (Lnet/minecraft/world/level/material/MaterialColor;)Lnet/minecraft/world/level/block/Block; a
	never (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
	never (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/EntityType;)Ljava/lang/Boolean; a
	ocelotOrParrot (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/EntityType;)Ljava/lang/Boolean; c
	pistonBase (Z)Lnet/minecraft/world/level/block/piston/PistonBaseBlock; a
	rebuildCache ()V a
	register (Ljava/lang/String;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/Block; a
	shulkerBox (Lnet/minecraft/world/item/DyeColor;Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)Lnet/minecraft/world/level/block/ShulkerBoxBlock; a
	stainedGlass (Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/level/block/StainedGlassBlock; b
net/minecraft/world/level/block/BonemealableBlock bzq
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/BrewingStandBlock bzr
	HAS_BOTTLE a
	SHAPE b
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/BubbleColumnBlock bzs
	CHECK_PERIOD b
	DRAG_DOWN a
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	canExistIn (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getColumnState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; n
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getPickupSound ()Ljava/util/Optional; V_
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	pickupBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; c
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateColumn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	updateColumn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BucketPickup bzt
	getPickupSound ()Ljava/util/Optional; V_
	pickupBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; c
net/minecraft/world/level/block/BuddingAmethystBlock bzu
	DIRECTIONS b
	GROWTH_CHANCE a
	canClusterGrowAtState (Lnet/minecraft/world/level/block/state/BlockState;)Z g
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; d
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
net/minecraft/world/level/block/BushBlock bzv
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/ButtonBlock bzw
	CEILING_AABB_X d
	CEILING_AABB_Z e
	EAST_AABB k
	FLOOR_AABB_X f
	FLOOR_AABB_Z g
	HALF_AABB_HEIGHT b
	HALF_AABB_WIDTH c
	NORTH_AABB h
	POWERED a
	PRESSED_CEILING_AABB_X l
	PRESSED_CEILING_AABB_Z m
	PRESSED_DEPTH L
	PRESSED_EAST_AABB J
	PRESSED_FLOOR_AABB_X n
	PRESSED_FLOOR_AABB_Z F
	PRESSED_NORTH_AABB G
	PRESSED_SOUTH_AABB H
	PRESSED_WEST_AABB I
	SOUTH_AABB i
	UNPRESSED_DEPTH M
	WEST_AABB j
	sensitive N
	checkPressed (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V e
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getPressDuration ()I c
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getSound (Z)Lnet/minecraft/sounds/SoundEvent; a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	playSound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Z)V a
	press (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateNeighbours (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V f
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/CactusBlock bzx
	AABB_OFFSET c
	AGE a
	COLLISION_SHAPE d
	MAX_AGE b
	OUTLINE_SHAPE e
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CakeBlock bzy
	AABB_OFFSET d
	AABB_SIZE_PER_BITE e
	BITES b
	FULL_CAKE_SIGNAL c
	MAX_BITES a
	SHAPE_BY_BITE f
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	eat (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/InteractionResult; a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getOutputSignal (I)I b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/CampfireBlock bzz
	FACING e
	LIT b
	SHAPE a
	SIGNAL_FIRE c
	SMOKE_DISTANCE g
	VIRTUAL_FENCE_POST f
	WATERLOGGED d
	fireDamage i
	spawnParticles h
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	canLight (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	dowse (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	isLitCampfire (Lnet/minecraft/world/level/block/state/BlockState;)Z g
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isSmokeSource (Lnet/minecraft/world/level/block/state/BlockState;)Z n
	isSmokeyPos (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z a
	makeParticles (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;ZZ)V a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	placeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/CandleBlock caa
	CANDLES e
	FOUR_AABB m
	LIGHT_EMISSION h
	LIT f
	MAX_CANDLES d
	MIN_CANDLES c
	ONE_AABB j
	PARTICLE_OFFSETS i
	THREE_AABB l
	TWO_AABB k
	WATERLOGGED g
	canBeLit (Lnet/minecraft/world/level/block/state/BlockState;)Z c
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	canLight (Lnet/minecraft/world/level/block/state/BlockState;)Z g
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getParticleOffsets (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/lang/Iterable; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	placeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/CandleCakeBlock cab
	AABB_OFFSET d
	BY_CANDLE h
	CAKE_SHAPE e
	CANDLE_SHAPE f
	LIT c
	PARTICLE_OFFSETS i
	SHAPE g
	byCandle (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/state/BlockState; a
	canLight (Lnet/minecraft/world/level/block/state/BlockState;)Z g
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	candleHit (Lnet/minecraft/world/phys/BlockHitResult;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getParticleOffsets (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/lang/Iterable; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/CarpetBlock cac
	SHAPE a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CarrotBlock cad
	SHAPE_BY_AGE a
	getBaseSeedId ()Lnet/minecraft/world/level/ItemLike; e
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
net/minecraft/world/level/block/CartographyTableBlock cae
	CONTAINER_TITLE a
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/CarvedPumpkinBlock caf
	FACING a
	PUMPKINS_PREDICATE f
	ironGolemBase d
	ironGolemFull e
	snowGolemBase b
	snowGolemFull c
	canSpawnGolem (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getOrCreateIronGolemBase ()Lnet/minecraft/world/level/block/state/pattern/BlockPattern; u
	getOrCreateIronGolemFull ()Lnet/minecraft/world/level/block/state/pattern/BlockPattern; v
	getOrCreateSnowGolemBase ()Lnet/minecraft/world/level/block/state/pattern/BlockPattern; c
	getOrCreateSnowGolemFull ()Lnet/minecraft/world/level/block/state/pattern/BlockPattern; q
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	trySpawnGolem (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/block/CauldronBlock cag
	canReceiveStalactiteDrip (Lnet/minecraft/world/level/material/Fluid;)Z a
	handlePrecipitation (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/biome/Biome$Precipitation;)V a
	isFull (Lnet/minecraft/world/level/block/state/BlockState;)Z c
	receiveStalactiteDrip (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;)V a
	shouldHandlePrecipitation (Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/level/block/CaveVines cah
	BERRIES p_
	SHAPE o_
	emission (I)Ljava/util/function/ToIntFunction; c_
	hasGlowBerries (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/InteractionResult; a_
net/minecraft/world/level/block/CaveVinesBlock cai
	CHANCE_OF_BERRIES_ON_GROWTH f
	canGrowInto (Lnet/minecraft/world/level/block/state/BlockState;)Z g
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getBlocksToGrowWhenBonemealed (Ljava/util/Random;)I a
	getBodyBlock ()Lnet/minecraft/world/level/block/Block; c
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getGrowIntoState (Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)Lnet/minecraft/world/level/block/state/BlockState; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	updateBodyAfterConvertedFromHead (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/CaveVinesPlantBlock caj
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getHeadBlock ()Lnet/minecraft/world/level/block/GrowingPlantHeadBlock; d
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	updateHeadAfterConvertedFromBody (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/ChainBlock cak
	AABB_MAX c
	AABB_MIN b
	WATERLOGGED a
	X_AXIS_AABB f
	Y_AXIS_AABB d
	Z_AXIS_AABB e
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/ChangeOverTimeBlock cal
	SCAN_DISTANCE s_
	applyChangeOverTime (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V c
	getAge ()Ljava/lang/Enum; b
	getChanceModifier ()F a
	getNext (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/util/Optional; a
	onRandomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a_
net/minecraft/world/level/block/ChestBlock cam
	AABB l
	AABB_HEIGHT g
	AABB_OFFSET f
	CHEST_COMBINER m
	EAST_AABB k
	EVENT_SET_OPEN_COUNT e
	FACING b
	MENU_PROVIDER_COMBINER n
	NORTH_AABB h
	SOUTH_AABB i
	TYPE c
	WATERLOGGED d
	WEST_AABB j
	blockEntityType ()Lnet/minecraft/world/level/block/entity/BlockEntityType; e
	candidatePartnerFacing (Lnet/minecraft/world/item/context/BlockPlaceContext;Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Direction; a
	combine (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)Lnet/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getBlockType (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/DoubleBlockCombiner$BlockType; g
	getConnectedDirection (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/core/Direction; h
	getContainer (Lnet/minecraft/world/level/block/ChestBlock;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)Lnet/minecraft/world/Container; a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getOpenChestStat ()Lnet/minecraft/stats/Stat; d
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	isBlockedChestByBlock (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	isCatSittingOnChest (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z b
	isChestBlockedAt (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	opennessCombiner (Lnet/minecraft/world/level/block/entity/LidBlockEntity;)Lnet/minecraft/world/level/block/DoubleBlockCombiner$Combiner; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/ChorusFlowerBlock can
	AGE b
	DEAD_AGE a
	plant c
	allNeighborsEmpty (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	generatePlant (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Ljava/util/Random;I)V a
	growTreeRecursive (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Ljava/util/Random;Lnet/minecraft/core/BlockPos;II)V a
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	placeDeadFlower (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	placeGrownFlower (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;I)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/ChorusPlantBlock cao
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getStateForPlacement (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CocoaBlock cap
	AGE b
	AGE_0_HALFWIDTH e
	AGE_0_HEIGHT d
	AGE_0_WIDTH c
	AGE_1_HALFWIDTH h
	AGE_1_HEIGHT g
	AGE_1_WIDTH f
	AGE_2_HALFWIDTH k
	AGE_2_HEIGHT j
	AGE_2_WIDTH i
	EAST_AABB l
	MAX_AGE a
	NORTH_AABB n
	SOUTH_AABB F
	WEST_AABB m
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CommandBlock caq
	CONDITIONAL b
	FACING a
	LOGGER c
	automatic d
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	execute (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/BaseCommandBlock;Z)V a
	executeChain (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/ComparatorBlock car
	MODE a
	calculateOutputSignal (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)I e
	checkTickOnNeighbor (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V c
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDelay (Lnet/minecraft/world/level/block/state/BlockState;)I g
	getInputSignal (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)I b
	getItemFrame (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/Direction;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/decoration/ItemFrame; a
	getOutputSignal (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)I b
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	refreshOutputState (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V f
	shouldTurnOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	triggerEvent (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;II)Z a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/ComposterBlock cas
	AABB_SIDE_THICKNESS f
	COMPOSTABLES e
	LEVEL d
	MAX_LEVEL c
	MIN_LEVEL b
	OUTER_SHAPE g
	READY a
	SHAPES h
	add (FLnet/minecraft/world/level/ItemLike;)V a
	addItem (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/level/block/state/BlockState; a
	bootStrap ()V c
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	empty (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; c
	extractProduce (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; d
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getContainer (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/WorldlyContainer; a
	getInteractionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	handleFill (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)V a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	insertItem (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/ComposterBlock$EmptyContainer cas$a
	canPlaceItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z a
	canTakeItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z b
	getSlotsForFace (Lnet/minecraft/core/Direction;)[I a
net/minecraft/world/level/block/ComposterBlock$InputContainer cas$b
	changed e
	level c
	pos d
	state b
	canPlaceItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z a
	canTakeItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z b
	getMaxStackSize ()I L_
	getSlotsForFace (Lnet/minecraft/core/Direction;)[I a
	setChanged ()V e
net/minecraft/world/level/block/ComposterBlock$OutputContainer cas$c
	changed e
	level c
	pos d
	state b
	canPlaceItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z a
	canTakeItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z b
	getMaxStackSize ()I L_
	getSlotsForFace (Lnet/minecraft/core/Direction;)[I a
	setChanged ()V e
net/minecraft/world/level/block/ConcretePowderBlock cat
	concrete a
	canSolidify (Lnet/minecraft/world/level/block/state/BlockState;)Z n
	getDustColor (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I d
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	onLand (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/item/FallingBlockEntity;)V a
	shouldSolidify (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	touchesLiquid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/ConduitBlock cau
	SHAPE b
	SIZE c
	WATERLOGGED a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CoralBlock cav
	deadBlock a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	scanForWater (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CoralFanBlock caw
	deadBlock a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CoralPlantBlock cax
	AABB_OFFSET a
	SHAPE b
	deadBlock d
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CoralWallFanBlock cay
	deadBlock b
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CraftingTableBlock caz
	CONTAINER_TITLE a
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/CropBlock cba
	AGE d
	MAX_AGE c
	SHAPE_BY_AGE a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getAge (Lnet/minecraft/world/level/block/state/BlockState;)I g
	getAgeProperty ()Lnet/minecraft/world/level/block/state/properties/IntegerProperty; c
	getBaseSeedId ()Lnet/minecraft/world/level/ItemLike; e
	getBonemealAgeIncrease (Lnet/minecraft/world/level/Level;)I a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getGrowthSpeed (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getMaxAge ()I d
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForAge (I)Lnet/minecraft/world/level/block/state/BlockState; b
	growCrops (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isMaxAge (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
net/minecraft/world/level/block/CrossCollisionBlock cbb
	EAST b
	NORTH a
	PROPERTY_BY_DIRECTION f
	SOUTH c
	WATERLOGGED e
	WEST d
	collisionShapeByIndex g
	shapeByIndex h
	stateToIndex i
	getAABBIndex (Lnet/minecraft/world/level/block/state/BlockState;)I g
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	indexFor (Lnet/minecraft/core/Direction;)I a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	makeShapes (FFFFF)[Lnet/minecraft/world/phys/shapes/VoxelShape; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CryingObsidianBlock cbc
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
net/minecraft/world/level/block/DaylightDetectorBlock cbd
	INVERTED b
	POWER a
	SHAPE c
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	tickEntity (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/DaylightDetectorBlockEntity;)V a
	updateSignalStrength (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/DeadBushBlock cbe
	AABB_OFFSET a
	SHAPE b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
net/minecraft/world/level/block/DetectorRailBlock cbf
	POWERED e
	PRESSED_CHECK_PERIOD f
	SHAPE d
	checkPressed (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getInteractingMinecartOfType (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/lang/Class;Ljava/util/function/Predicate;)Ljava/util/List; a
	getSearchBB (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/AABB; a
	getShapeProperty ()Lnet/minecraft/world/level/block/state/properties/Property; d
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updatePowerToConnected (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
net/minecraft/world/level/block/DiodeBlock cbg
	POWERED c
	SHAPE b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	checkTickOnNeighbor (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V c
	getAlternateSignal (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)I b
	getAlternateSignalAt (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getDelay (Lnet/minecraft/world/level/block/state/BlockState;)I g
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getInputSignal (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)I b
	getOutputSignal (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)I b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isAlternateInput (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	isDiode (Lnet/minecraft/world/level/block/state/BlockState;)Z n
	isLocked (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	shouldPrioritize (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z c
	shouldTurnOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateNeighborsInFront (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V d
net/minecraft/world/level/block/DirectionalBlock cbh
	FACING a
net/minecraft/world/level/block/DirtPathBlock cbi
	SHAPE a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/DispenserBlock cbj
	DISPENSER_REGISTRY c
	FACING a
	TRIGGERED b
	TRIGGER_DURATION d
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	dispenseFrom (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getDispenseMethod (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/core/dispenser/DispenseItemBehavior; a
	getDispensePosition (Lnet/minecraft/core/BlockSource;)Lnet/minecraft/core/Position; a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	registerBehavior (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/core/dispenser/DispenseItemBehavior;)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/DoorBlock cbk
	AABB_DOOR_THICKNESS f
	EAST_AABB j
	FACING a
	HALF e
	HINGE c
	NORTH_AABB h
	OPEN b
	POWERED d
	SOUTH_AABB g
	WEST_AABB i
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCloseSound ()I c
	getHinge (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/properties/DoorHingeSide; b
	getOpenSound ()I q
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; d
	getSeed (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)J a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isOpen (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isWoodenDoor (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z a
	isWoodenDoor (Lnet/minecraft/world/level/block/state/BlockState;)Z n
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	playSound (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)V a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setOpen (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Z)V a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/DoubleBlockCombiner cbl
	combineWithNeigbour (Lnet/minecraft/world/level/block/entity/BlockEntityType;Ljava/util/function/Function;Ljava/util/function/Function;Lnet/minecraft/world/level/block/state/properties/DirectionProperty;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Ljava/util/function/BiPredicate;)Lnet/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult; a
net/minecraft/world/level/block/DoubleBlockCombiner$BlockType cbl$a
	$VALUES d
	FIRST b
	SECOND c
	SINGLE a
	$values ()[Lnet/minecraft/world/level/block/DoubleBlockCombiner$BlockType; a
net/minecraft/world/level/block/DoubleBlockCombiner$Combiner cbl$b
	acceptDouble (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; a
	acceptNone ()Ljava/lang/Object; b
	acceptSingle (Ljava/lang/Object;)Ljava/lang/Object; a
net/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult cbl$c
net/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult$Double cbl$c$a
	first a
	second b
net/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult$Single cbl$c$b
	single a
net/minecraft/world/level/block/DoublePlantBlock cbm
	HALF a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getOffsetType ()Lnet/minecraft/world/level/block/state/BlockBehaviour$OffsetType; S_
	getSeed (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)J a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	placeAt (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;I)V a
	playerDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/item/ItemStack;)V a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V a
	preventCreativeDropFromBottomPart (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V b
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/DragonEggBlock cbn
	SHAPE a
	attack (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	getDelayAfterPlace ()I c
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	teleport (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/DropperBlock cbo
	DISPENSE_BEHAVIOUR c
	dispenseFrom (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V a
	getDispenseMethod (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/core/dispenser/DispenseItemBehavior; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
net/minecraft/world/level/block/EnchantmentTableBlock cbp
	SHAPE a
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/EndGatewayBlock cbq
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
net/minecraft/world/level/block/EndPortalBlock cbr
	SHAPE a
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
net/minecraft/world/level/block/EndPortalFrameBlock cbs
	BASE_SHAPE c
	EYE_SHAPE d
	FACING a
	FULL_SHAPE e
	HAS_EYE b
	portalShape f
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getOrCreatePortalShape ()Lnet/minecraft/world/level/block/state/pattern/BlockPattern; c
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/EndRodBlock cbt
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; d
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/EnderChestBlock cbu
	CONTAINER_TITLE e
	FACING b
	SHAPE d
	WATERLOGGED c
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	combine (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)Lnet/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/EntityBlock cbv
	getListener (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/entity/BlockEntity;)Lnet/minecraft/world/level/gameevent/GameEventListener; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
net/minecraft/world/level/block/FaceAttachedHorizontalDirectionalBlock cbw
	FACE K
	canAttach (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	getConnectedDirection (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/core/Direction; h
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/Fallable cbx
	getFallDamageSource ()Lnet/minecraft/world/damagesource/DamageSource; b
	getHurtsEntitySelector ()Ljava/util/function/Predicate; T_
	onBrokenAfterFall (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/item/FallingBlockEntity;)V a
	onLand (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/item/FallingBlockEntity;)V a
net/minecraft/world/level/block/FallingBlock cby
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	falling (Lnet/minecraft/world/entity/item/FallingBlockEntity;)V a
	getDelayAfterPlace ()I c
	getDustColor (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I d
	isFree (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/FarmBlock cbz
	MAX_MOISTURE c
	MOISTURE a
	SHAPE b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	fallOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;F)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isNearWater (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isUnderCrops (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	turnToDirt (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/FenceBlock cca
	occlusionByIndex i
	connectsTo (Lnet/minecraft/world/level/block/state/BlockState;ZLnet/minecraft/core/Direction;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getOcclusionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; b_
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getVisualShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isSameFence (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/FenceGateBlock ccb
	IN_WALL c
	OPEN a
	POWERED b
	X_COLLISION_SHAPE i
	X_OCCLUSION_SHAPE k
	X_OCCLUSION_SHAPE_LOW m
	X_SHAPE e
	X_SHAPE_LOW g
	Z_COLLISION_SHAPE h
	Z_OCCLUSION_SHAPE j
	Z_OCCLUSION_SHAPE_LOW l
	Z_SHAPE d
	Z_SHAPE_LOW f
	connectsToDirection (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getOcclusionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isWall (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/FireBlock ccc
	AGE d
	BURN_EASY M
	BURN_HARD O
	BURN_INSTANT L
	BURN_MEDIUM N
	EAST f
	EAST_AABB m
	FLAME_EASY I
	FLAME_HARD K
	FLAME_INSTANT H
	FLAME_MEDIUM J
	MAX_AGE c
	NORTH e
	NORTH_AABB n
	PROPERTY_BY_DIRECTION j
	SOUTH g
	SOUTH_AABB F
	UP i
	UP_AABB k
	WEST h
	WEST_AABB l
	burnOdds Q
	flameOdds P
	shapesCache G
	bootStrap ()V c
	calculateShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/shapes/VoxelShape; h
	canBurn (Lnet/minecraft/world/level/block/state/BlockState;)Z f
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	checkBurnOut (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;ILjava/util/Random;I)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getBurnOdd (Lnet/minecraft/world/level/block/state/BlockState;)I n
	getFireOdds (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)I a
	getFireTickDelay (Ljava/util/Random;)I a
	getFlameOdds (Lnet/minecraft/world/level/block/state/BlockState;)I o
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getStateForPlacement (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; b
	getStateWithAge (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;I)Lnet/minecraft/world/level/block/state/BlockState; a
	isNearRain (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z a
	isValidFireLocation (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	setFlammable (Lnet/minecraft/world/level/block/Block;II)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/FletchingTableBlock ccd
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/FlowerBlock cce
	AABB_OFFSET a
	SHAPE b
	effectDuration d
	suspiciousStewEffect c
	getEffectDuration ()I d
	getOffsetType ()Lnet/minecraft/world/level/block/state/BlockBehaviour$OffsetType; S_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSuspiciousStewEffect ()Lnet/minecraft/world/effect/MobEffect; c
net/minecraft/world/level/block/FlowerPotBlock ccf
	AABB_SIZE a
	POTTED_BY_CONTENT c
	SHAPE b
	content d
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getContent ()Lnet/minecraft/world/level/block/Block; c
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isEmpty ()Z q
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/FrostedIceBlock ccg
	AGE b
	MAX_AGE a
	NEIGHBORS_TO_AGE c
	NEIGHBORS_TO_MELT d
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	fewerNeigboursThan (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;I)Z a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	slightlyMelt (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z e
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
net/minecraft/world/level/block/FungusBlock cch
	BONEMEAL_SUCCESS_PROBABILITY b
	SHAPE a
	feature c
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/FurnaceBlock cci
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	openContainer (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
net/minecraft/world/level/block/GameMasterBlock ccj
net/minecraft/world/level/block/GlassBlock cck
net/minecraft/world/level/block/GlazedTerracottaBlock ccl
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; d
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/GlowLichenBlock ccm
	WATERLOGGED b
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	emission (I)Ljava/util/function/ToIntFunction; b
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/GrassBlock ccn
	getBlockState (Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature;)Lnet/minecraft/world/level/block/state/BlockState; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/GravelBlock cco
	getDustColor (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I d
net/minecraft/world/level/block/GrindstoneBlock ccp
	CEILING_EAST_WEST_ALL_LEGS aC
	CEILING_EAST_WEST_GRINDSTONE aD
	CEILING_EAST_WEST_LEFT_LEG aA
	CEILING_EAST_WEST_LEFT_PIVOT ay
	CEILING_EAST_WEST_LEFT_POST aw
	CEILING_EAST_WEST_RIGHT_LEG aB
	CEILING_EAST_WEST_RIGHT_PIVOT az
	CEILING_EAST_WEST_RIGHT_POST ax
	CEILING_NORTH_SOUTH_ALL_LEGS au
	CEILING_NORTH_SOUTH_GRINDSTONE av
	CEILING_NORTH_SOUTH_LEFT_LEG as
	CEILING_NORTH_SOUTH_LEFT_PIVOT aq
	CEILING_NORTH_SOUTH_LEFT_POST ao
	CEILING_NORTH_SOUTH_RIGHT_LEG at
	CEILING_NORTH_SOUTH_RIGHT_PIVOT ar
	CEILING_NORTH_SOUTH_RIGHT_POST ap
	CONTAINER_TITLE aR
	FLOOR_EAST_WEST_ALL_LEGS F
	FLOOR_EAST_WEST_GRINDSTONE G
	FLOOR_EAST_WEST_LEFT_LEG m
	FLOOR_EAST_WEST_LEFT_PIVOT k
	FLOOR_EAST_WEST_LEFT_POST i
	FLOOR_EAST_WEST_RIGHT_LEG n
	FLOOR_EAST_WEST_RIGHT_PIVOT l
	FLOOR_EAST_WEST_RIGHT_POST j
	FLOOR_NORTH_SOUTH_ALL_LEGS g
	FLOOR_NORTH_SOUTH_GRINDSTONE h
	FLOOR_NORTH_SOUTH_LEFT_LEG e
	FLOOR_NORTH_SOUTH_LEFT_PIVOT c
	FLOOR_NORTH_SOUTH_LEFT_POST a
	FLOOR_NORTH_SOUTH_RIGHT_LEG f
	FLOOR_NORTH_SOUTH_RIGHT_PIVOT d
	FLOOR_NORTH_SOUTH_RIGHT_POST b
	WALL_EAST_ALL_LEGS am
	WALL_EAST_GRINDSTONE an
	WALL_EAST_LEFT_LEG ak
	WALL_EAST_LEFT_PIVOT ai
	WALL_EAST_LEFT_POST ag
	WALL_EAST_RIGHT_LEG al
	WALL_EAST_RIGHT_PIVOT aj
	WALL_EAST_RIGHT_POST ah
	WALL_NORTH_ALL_LEGS W
	WALL_NORTH_GRINDSTONE X
	WALL_NORTH_LEFT_LEG U
	WALL_NORTH_LEFT_PIVOT S
	WALL_NORTH_LEFT_POST Q
	WALL_NORTH_RIGHT_LEG V
	WALL_NORTH_RIGHT_PIVOT T
	WALL_NORTH_RIGHT_POST R
	WALL_SOUTH_ALL_LEGS O
	WALL_SOUTH_GRINDSTONE P
	WALL_SOUTH_LEFT_LEG M
	WALL_SOUTH_LEFT_PIVOT J
	WALL_SOUTH_LEFT_POST H
	WALL_SOUTH_RIGHT_LEG N
	WALL_SOUTH_RIGHT_PIVOT L
	WALL_SOUTH_RIGHT_POST I
	WALL_WEST_ALL_LEGS ae
	WALL_WEST_GRINDSTONE af
	WALL_WEST_LEFT_LEG ac
	WALL_WEST_LEFT_PIVOT aa
	WALL_WEST_LEFT_POST Y
	WALL_WEST_RIGHT_LEG ad
	WALL_WEST_RIGHT_PIVOT ab
	WALL_WEST_RIGHT_POST Z
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getVoxelShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/shapes/VoxelShape; n
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/GrowingPlantBlock ccq
	growthDirection a
	scheduleFluidTicks b
	shape c
	canAttachTo (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	getBodyBlock ()Lnet/minecraft/world/level/block/Block; c
	getHeadBlock ()Lnet/minecraft/world/level/block/GrowingPlantHeadBlock; d
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getStateForPlacement (Lnet/minecraft/world/level/LevelAccessor;)Lnet/minecraft/world/level/block/state/BlockState; a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
net/minecraft/world/level/block/GrowingPlantBodyBlock ccr
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	getBodyBlock ()Lnet/minecraft/world/level/block/Block; c
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getHeadPos (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)Ljava/util/Optional; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	updateHeadAfterConvertedFromBody (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/GrowingPlantHeadBlock ccs
	AGE d
	MAX_AGE e
	growPerTickProbability f
	canGrowInto (Lnet/minecraft/world/level/block/state/BlockState;)Z g
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getBlocksToGrowWhenBonemealed (Ljava/util/Random;)I a
	getGrowIntoState (Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)Lnet/minecraft/world/level/block/state/BlockState; a
	getHeadBlock ()Lnet/minecraft/world/level/block/GrowingPlantHeadBlock; d
	getStateForPlacement (Lnet/minecraft/world/level/LevelAccessor;)Lnet/minecraft/world/level/block/state/BlockState; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	updateBodyAfterConvertedFromHead (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/HalfTransparentBlock cct
	skipRendering (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
net/minecraft/world/level/block/HangingRootsBlock ccu
	SHAPE a
	WATERLOGGED b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getOffsetType ()Lnet/minecraft/world/level/block/state/BlockBehaviour$OffsetType; S_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/HayBlock ccv
	fallOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;F)V a
net/minecraft/world/level/block/HoneyBlock ccw
	MIN_FALL_SPEED_TO_BE_CONSIDERED_SLIDING c
	SHAPE a
	SLIDE_ADVANCEMENT_CHECK_INTERVAL e
	SLIDE_STARTS_WHEN_VERTICAL_SPEED_IS_AT_LEAST b
	THROTTLE_SLIDE_SPEED_TO d
	doSlideMovement (Lnet/minecraft/world/entity/Entity;)V d
	doesEntityDoHoneyBlockSlideEffects (Lnet/minecraft/world/entity/Entity;)Z c
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	fallOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;F)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	isSlidingDown (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)Z a
	maybeDoSlideAchievement (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)V a
	maybeDoSlideEffects (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;)V a
	showJumpParticles (Lnet/minecraft/world/entity/Entity;)V b
	showParticles (Lnet/minecraft/world/entity/Entity;I)V a
	showSlideParticles (Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/world/level/block/HopperBlock ccx
	BASE f
	CONVEX_BASE e
	DOWN_INTERACTION_SHAPE l
	DOWN_SHAPE g
	EAST_INTERACTION_SHAPE m
	EAST_SHAPE h
	ENABLED b
	FACING a
	FUNNEL d
	NORTH_INTERACTION_SHAPE n
	NORTH_SHAPE i
	SOUTH_INTERACTION_SHAPE F
	SOUTH_SHAPE j
	TOP c
	WEST_INTERACTION_SHAPE G
	WEST_SHAPE k
	checkPoweredState (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getInteractionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/HorizontalDirectionalBlock ccy
	FACING aE
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/HugeMushroomBlock ccz
	DOWN f
	EAST b
	NORTH a
	PROPERTY_BY_DIRECTION g
	SOUTH c
	UP e
	WEST d
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/IceBlock cda
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; d
	melt (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	playerDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/item/ItemStack;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
net/minecraft/world/level/block/InfestedBlock cdb
	BLOCK_BY_HOST_BLOCK b
	HOST_TO_INFESTED_STATES c
	INFESTED_TO_HOST_STATES d
	hostBlock a
	getHostBlock ()Lnet/minecraft/world/level/block/Block; c
	getNewStateWithProperties (Ljava/util/Map;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/function/Supplier;)Lnet/minecraft/world/level/block/state/BlockState; a
	hostStateByInfested (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; o
	infestedStateByHost (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; n
	isCompatibleHostBlock (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	spawnAfterBreak (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)V a
	spawnInfestation (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V a
	wasExploded (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Explosion;)V a
net/minecraft/world/level/block/InfestedRotatedPillarBlock cdc
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/IronBarsBlock cdd
	attachsTo (Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getVisualShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	skipRendering (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/JigsawBlock cde
	ORIENTATION a
	canAttach (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFrontFacing (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/core/Direction; h
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTopFacing (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/core/Direction; n
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/JukeboxBlock cdf
	HAS_RECORD a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	dropRecording (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	setRecord (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/ItemStack;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/KelpBlock cdg
	GROW_PER_TICK_PROBABILITY g
	SHAPE f
	canAttachTo (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	canGrowInto (Lnet/minecraft/world/level/block/state/BlockState;)Z g
	canPlaceLiquid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	getBlocksToGrowWhenBonemealed (Ljava/util/Random;)I a
	getBodyBlock ()Lnet/minecraft/world/level/block/Block; c
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	placeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
net/minecraft/world/level/block/KelpPlantBlock cdh
	canAttachTo (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	canPlaceLiquid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getHeadBlock ()Lnet/minecraft/world/level/block/GrowingPlantHeadBlock; d
	placeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
net/minecraft/world/level/block/LadderBlock cdi
	AABB_OFFSET c
	EAST_AABB d
	FACING a
	NORTH_AABB g
	SOUTH_AABB f
	WATERLOGGED b
	WEST_AABB e
	canAttachTo (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/LanternBlock cdj
	AABB c
	HANGING a
	HANGING_AABB d
	WATERLOGGED b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getConnectedDirection (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/core/Direction; h
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; d
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/LavaCauldronBlock cdk
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getContentHeight (Lnet/minecraft/world/level/block/state/BlockState;)D a
	isFull (Lnet/minecraft/world/level/block/state/BlockState;)Z c
net/minecraft/world/level/block/LayeredCauldronBlock cdl
	BASE_CONTENT_HEIGHT h
	HEIGHT_PER_LEVEL i
	LEVEL e
	MAX_FILL_LEVEL d
	MIN_FILL_LEVEL c
	RAIN f
	SNOW g
	fillPredicate j
	canReceiveStalactiteDrip (Lnet/minecraft/world/level/material/Fluid;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getContentHeight (Lnet/minecraft/world/level/block/state/BlockState;)D a
	handleEntityOnFireInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	handlePrecipitation (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/biome/Biome$Precipitation;)V a
	isFull (Lnet/minecraft/world/level/block/state/BlockState;)Z c
	lowerFillLevel (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V e
	receiveStalactiteDrip (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;)V a
net/minecraft/world/level/block/LeavesBlock cdm
	DECAY_DISTANCE a
	DISTANCE b
	PERSISTENT c
	TICK_DELAY d
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getBlockSupportShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; f
	getDistanceAt (Lnet/minecraft/world/level/block/state/BlockState;)I h
	getLightBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I g
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateDistance (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/LecternBlock cdn
	FACING a
	HAS_BOOK c
	PAGE_CHANGE_IMPULSE_TICKS m
	POWERED b
	SHAPE_BASE d
	SHAPE_COLLISION h
	SHAPE_COMMON f
	SHAPE_EAST k
	SHAPE_NORTH j
	SHAPE_POST e
	SHAPE_SOUTH l
	SHAPE_TOP_PLATE g
	SHAPE_WEST i
	changePowered (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getOcclusionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; b_
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	openScreen (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	placeBook (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/ItemStack;)V b
	popBook (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	resetBookState (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	signalPageChange (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	tryPlaceBook (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/ItemStack;)Z a
	updateBelow (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/LevelEvent cdo
	ANIMATION_DRAGON_SUMMON_ROAR ao
	ANIMATION_END_GATEWAY_SPAWN an
	COMPOSTER_FILL X
	DRIPSTONE_DRIP ab
	END_PORTAL_FRAME_FILL aa
	LAVA_FIZZ Y
	PARTICLES_AND_SOUND_PLANT_GROWTH ac
	PARTICLES_AND_SOUND_WAX_ON aq
	PARTICLES_DESTROY_BLOCK ae
	PARTICLES_DRAGON_BLOCK_BREAK al
	PARTICLES_DRAGON_FIREBALL_SPLASH aj
	PARTICLES_ELECTRIC_SPARK ap
	PARTICLES_EYE_OF_ENDER_DEATH ag
	PARTICLES_INSTANT_POTION_SPLASH ak
	PARTICLES_MOBBLOCK_SPAWN ah
	PARTICLES_PLANT_GROWTH ai
	PARTICLES_SCRAPE as
	PARTICLES_SHOOT ad
	PARTICLES_SPELL_POTION_SPLASH af
	PARTICLES_WATER_EVAPORATING am
	PARTICLES_WAX_OFF ar
	REDSTONE_TORCH_BURNOUT Z
	SOUND_ANVIL_BROKEN D
	SOUND_ANVIL_LAND F
	SOUND_ANVIL_USED E
	SOUND_BAT_LIFTOFF z
	SOUND_BLAZE_FIREBALL s
	SOUND_BREWING_STAND_BREW J
	SOUND_CHORUS_DEATH I
	SOUND_CHORUS_GROW H
	SOUND_CLOSE_FENCE_GATE o
	SOUND_CLOSE_IRON_DOOR l
	SOUND_CLOSE_IRON_TRAP_DOOR K
	SOUND_CLOSE_WOODEN_DOOR m
	SOUND_CLOSE_WOODEN_TRAP_DOOR n
	SOUND_DISPENSER_DISPENSE a
	SOUND_DISPENSER_FAIL b
	SOUND_DISPENSER_PROJECTILE_LAUNCH c
	SOUND_DRAGON_DEATH C
	SOUND_DRAGON_FIREBALL r
	SOUND_DRIP_LAVA_INTO_CAULDRON U
	SOUND_DRIP_WATER_INTO_CAULDRON V
	SOUND_ENDER_EYE_LAUNCH d
	SOUND_END_PORTAL_SPAWN M
	SOUND_EXTINGUISH_FIRE j
	SOUND_FIREWORK_SHOOT e
	SOUND_GHAST_FIREBALL q
	SOUND_GHAST_WARNING p
	SOUND_GRINDSTONE_USED Q
	SOUND_HUSK_TO_ZOMBIE P
	SOUND_OPEN_FENCE_GATE i
	SOUND_OPEN_IRON_DOOR f
	SOUND_OPEN_IRON_TRAP_DOOR L
	SOUND_OPEN_WOODEN_DOOR g
	SOUND_OPEN_WOODEN_TRAP_DOOR h
	SOUND_PAGE_TURN R
	SOUND_PHANTOM_BITE N
	SOUND_PLAY_RECORDING k
	SOUND_POINTED_DRIPSTONE_LAND T
	SOUND_PORTAL_TRAVEL G
	SOUND_SKELETON_TO_STRAY W
	SOUND_SMITHING_TABLE_USED S
	SOUND_WITHER_BLOCK_BREAK w
	SOUND_WITHER_BOSS_SHOOT y
	SOUND_WITHER_BOSS_SPAWN x
	SOUND_ZOMBIE_CONVERTED B
	SOUND_ZOMBIE_DOOR_CRASH v
	SOUND_ZOMBIE_INFECTED A
	SOUND_ZOMBIE_IRON_DOOR u
	SOUND_ZOMBIE_TO_DROWNED O
	SOUND_ZOMBIE_WOODEN_DOOR t
net/minecraft/world/level/block/LeverBlock cdp
	DEPTH b
	DOWN_AABB_X l
	DOWN_AABB_Z k
	EAST_AABB h
	HEIGHT d
	NORTH_AABB e
	POWERED a
	SOUTH_AABB f
	UP_AABB_X j
	UP_AABB_Z i
	WEST_AABB g
	WIDTH c
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	makeParticle (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;F)V a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	pull (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; d
	updateNeighbours (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V e
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/LightBlock cdq
	LEVEL b
	LIGHT_EMISSION d
	MAX_LEVEL a
	WATERLOGGED c
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShadeBrightness (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/LightningRodBlock cdr
	ACTIVATION_TICKS j
	POWERED c
	RANGE d
	SPARK_CYCLE k
	WATERLOGGED b
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	onLightningStrike (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateNeighbours (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V e
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/LiquidBlock cds
	LEVEL a
	POSSIBLE_FLOW_DIRECTIONS d
	STABLE_SHAPE c
	fluid b
	stateCache e
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	fizz (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getDrops (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/storage/loot/LootContext$Builder;)Ljava/util/List; a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getPickupSound ()Ljava/util/Optional; V_
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	pickupBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; c
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	shouldSpreadLiquid (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	skipRendering (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/LiquidBlockContainer cdt
	canPlaceLiquid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	placeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
net/minecraft/world/level/block/LoomBlock cdu
	CONTAINER_TITLE a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/MagmaBlock cdv
	BUBBLE_COLUMN_CHECK_DELAY a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	stepOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/Entity;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/MelonBlock cdw
	getAttachedStem ()Lnet/minecraft/world/level/block/AttachedStemBlock; d
	getStem ()Lnet/minecraft/world/level/block/StemBlock; c
net/minecraft/world/level/block/Mirror cdx
	$VALUES f
	FRONT_BACK c
	LEFT_RIGHT b
	NONE a
	rotation e
	symbol d
	$values ()[Lnet/minecraft/world/level/block/Mirror; c
	getRotation (Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/block/Rotation; a
	mirror (II)I a
	mirror (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Direction; b
	rotation ()Lcom/mojang/math/OctahedralGroup; a
	symbol ()Lnet/minecraft/network/chat/Component; b
net/minecraft/world/level/block/MossBlock cdy
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/MultifaceBlock cdz
	AABB_OFFSET b
	DIRECTIONS a
	DOWN_AABB d
	EAST_AABB f
	NORTH_AABB g
	PROPERTY_BY_DIRECTION i
	SHAPE_BY_DIRECTION j
	SOUTH_AABB h
	UP_AABB c
	WEST_AABB e
	canMirrorX m
	canMirrorZ n
	canRotate l
	shapesCache k
	calculateMultifaceShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/shapes/VoxelShape; o
	canAttachTo (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/Direction;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	canSpread (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z d
	canSpreadInto (Lnet/minecraft/world/level/block/state/BlockState;)Z n
	canSpreadToFace (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDefaultMultifaceState (Lnet/minecraft/world/level/block/state/StateDefinition;)Lnet/minecraft/world/level/block/state/BlockState; a
	getFaceProperty (Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/block/state/properties/BooleanProperty; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSpreadFromFaceTowardDirection (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)Ljava/util/Optional; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getStateForPlacement (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/block/state/BlockState; c
	hasAnyFace (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	hasAnyVacantFace (Lnet/minecraft/world/level/block/state/BlockState;)Z p
	hasFace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	isFaceSupported (Lnet/minecraft/core/Direction;)Z a
	isWaterloggable ()Z q
	mapDirections (Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/function/Function;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	removeFace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/properties/BooleanProperty;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	spreadFromFaceTowardDirection (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;Z)Z a
	spreadFromFaceTowardRandomDirection (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Ljava/util/Random;Z)Z a
	spreadFromRandomFaceTowardRandomDirection (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z c
	spreadToFace (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Z)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/MushroomBlock cea
	AABB_OFFSET a
	SHAPE b
	featureSupplier c
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	growMushroom (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)Z a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
net/minecraft/world/level/block/MyceliumBlock ceb
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
net/minecraft/world/level/block/NetherPortalBlock cec
	AABB_OFFSET b
	AXIS a
	X_AXIS_AABB c
	Z_AXIS_AABB d
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/NetherSproutsBlock ced
	SHAPE a
	getOffsetType ()Lnet/minecraft/world/level/block/state/BlockBehaviour$OffsetType; S_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
net/minecraft/world/level/block/NetherVines cee
	BONEMEAL_GROW_PROBABILITY_DECREASE_RATE b
	GROW_PER_TICK_PROBABILITY a
	getBlocksToGrowWhenBonemealed (Ljava/util/Random;)I a
	isValidGrowthState (Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/block/NetherWartBlock cef
	AGE b
	MAX_AGE a
	SHAPE_BY_AGE c
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
net/minecraft/world/level/block/NetherrackBlock ceg
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/NoteBlock ceh
	INSTRUMENT a
	NOTE c
	POWERED b
	attack (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	playNote (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	triggerEvent (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;II)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/NyliumBlock cei
	canBeNylium (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z b
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
net/minecraft/world/level/block/ObserverBlock cej
	POWERED b
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	startSignal (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateNeighborsInFront (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/OreBlock cek
	xpRange a
	spawnAfterBreak (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/level/block/PipeBlock cel
	DIRECTIONS i
	DOWN f
	EAST b
	NORTH a
	PROPERTY_BY_DIRECTION g
	SOUTH c
	UP e
	WEST d
	shapeByIndex h
	getAABBIndex (Lnet/minecraft/world/level/block/state/BlockState;)I h
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	makeShapes (F)[Lnet/minecraft/world/phys/shapes/VoxelShape; a
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
net/minecraft/world/level/block/PlayerHeadBlock cem
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/level/block/PlayerWallHeadBlock cen
	getDrops (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/storage/loot/LootContext$Builder;)Ljava/util/List; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/level/block/PointedDripstoneBlock ceo
	AVERAGE_DAYS_PER_GROWTH I
	BASE_SHAPE S
	DELAY_BEFORE_FALLING f
	DRIP_PROBABILITY_PER_ANIMATE_TICK g
	DRIP_PROBABILITY_PER_ANIMATE_TICK_IF_UNDER_LIQUID_SOURCE h
	FRUSTUM_SHAPE Q
	GROWTH_PROBABILITY_PER_RANDOM_TICK J
	LAVA_CAULDRON_FILL_PROBABILITY_PER_RANDOM_TICK k
	MAX_GROWTH_LENGTH K
	MAX_HORIZONTAL_OFFSET T
	MAX_SEARCH_LENGTH_BETWEEN_STALACTITE_TIP_AND_CAULDRON i
	MAX_SEARCH_LENGTH_WHEN_CHECKING_DRIP_TYPE d
	MAX_SEARCH_LENGTH_WHEN_LOOKING_FOR_TIP_OF_FALLING_STALACTITE e
	MAX_STALACTITE_HEIGHT_FOR_DAMAGE_CALCULATION F
	MAX_STALAGMITE_SEARCH_RANGE_WHEN_GROWING L
	MIDDLE_SHAPE R
	MIN_TRIDENT_VELOCITY_TO_BREAK_DRIPSTONE l
	STALACTITE_DAMAGE_PER_FALL_DISTANCE_AND_SIZE m
	STALACTITE_DRIP_START_PIXEL M
	STALACTITE_MAX_DAMAGE n
	STALAGMITE_FALL_DAMAGE_MODIFIER H
	STALAGMITE_FALL_DISTANCE_OFFSET G
	THICKNESS b
	TIP_DIRECTION a
	TIP_MERGE_SHAPE N
	TIP_SHAPE_DOWN P
	TIP_SHAPE_UP O
	WATERLOGGED c
	WATER_CAULDRON_FILL_PROBABILITY_PER_RANDOM_TICK j
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	calculateDripstoneThickness (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Z)Lnet/minecraft/world/level/block/state/properties/DripstoneThickness; a
	calculateTipDirection (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Direction; b
	canDrip (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	canFillCauldron (Lnet/minecraft/world/level/material/Fluid;)Z a
	canGrow (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	canTipGrow (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z b
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	createDripstone (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/properties/DripstoneThickness;)V a
	createMergedTips (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V c
	fallOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;F)V a
	findBlockVertical (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction$AxisDirection;Ljava/util/function/Predicate;Ljava/util/function/Predicate;I)Ljava/util/Optional; a
	findFillableCauldronBelowStalactiteTip (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;)Lnet/minecraft/core/BlockPos; a
	findRootBlock (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;I)Ljava/util/Optional; a
	findStalactiteTipAboveCauldron (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	findTip (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;IZ)Lnet/minecraft/core/BlockPos; a
	getCauldronFillFluidType (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/Fluid; b
	getDripFluid (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/material/Fluid;)Lnet/minecraft/world/level/material/Fluid; a
	getFallDamageSource ()Lnet/minecraft/world/damagesource/DamageSource; b
	getFluidAboveStalactite (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Ljava/util/Optional; b
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getHurtsEntitySelector ()Ljava/util/function/Predicate; T_
	getMaxHorizontalOffset ()F U_
	getOcclusionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; b_
	getOffsetType ()Lnet/minecraft/world/level/block/state/BlockBehaviour$OffsetType; S_
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; d
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStalactiteSizeFromTip (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;I)I b
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	grow (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)V a
	growStalactiteOrStalagmiteIfPossible (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V c
	growStalagmiteBelow (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V a
	isCollisionShapeFullBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a_
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isPointedDripstoneWithDirection (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z b
	isStalactite (Lnet/minecraft/world/level/block/state/BlockState;)Z n
	isStalactiteStartPos (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z b
	isStalagmite (Lnet/minecraft/world/level/block/state/BlockState;)Z o
	isTip (Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	isUnmergedTipWithDirection (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	isValidPointedDripstonePlacement (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z c
	maybeFillCauldron (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;F)V a
	onBrokenAfterFall (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/item/FallingBlockEntity;)V a
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	scheduleStalactiteFallTicks (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	spawnDripParticle (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	spawnDripParticle (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)V a
	spawnFallingStalactite (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/PotatoBlock cep
	SHAPE_BY_AGE a
	getBaseSeedId ()Lnet/minecraft/world/level/ItemLike; e
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
net/minecraft/world/level/block/PowderSnowBlock ceq
	FALLING_COLLISION_SHAPE e
	HORIZONTAL_PARTICLE_MOMENTUM_FACTOR a
	IN_BLOCK_HORIZONTAL_SPEED_MULTIPLIER b
	IN_BLOCK_VERTICAL_SPEED_MULTIPLIER c
	NUM_BLOCKS_TO_FALL_INTO_BLOCK d
	canEntityWalkOnPowderSnow (Lnet/minecraft/world/entity/Entity;)Z a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getOcclusionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; b_
	getPickupSound ()Ljava/util/Optional; V_
	getVisualShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	pickupBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; c
	skipRendering (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
net/minecraft/world/level/block/PowderSnowCauldronBlock cer
	handleEntityOnFireInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
net/minecraft/world/level/block/PoweredBlock ces
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
net/minecraft/world/level/block/PoweredRailBlock cet
	POWERED e
	SHAPE d
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	findPoweredRailSignal (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;ZI)Z a
	getShapeProperty ()Lnet/minecraft/world/level/block/state/properties/Property; d
	isSameRailWithPower (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;ZILnet/minecraft/world/level/block/state/properties/RailShape;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateState (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V a
net/minecraft/world/level/block/PressurePlateBlock ceu
	POWERED d
	sensitivity e
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getSignalForState (Lnet/minecraft/world/level/block/state/BlockState;)I g
	getSignalStrength (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I b
	playOffSound (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V b
	playOnSound (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	setSignalForState (Lnet/minecraft/world/level/block/state/BlockState;I)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/PressurePlateBlock$Sensitivity ceu$a
	$VALUES c
	EVERYTHING a
	MOBS b
	$values ()[Lnet/minecraft/world/level/block/PressurePlateBlock$Sensitivity; a
net/minecraft/world/level/block/PumpkinBlock cev
	getAttachedStem ()Lnet/minecraft/world/level/block/AttachedStemBlock; d
	getStem ()Lnet/minecraft/world/level/block/StemBlock; c
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/RailBlock cew
	SHAPE d
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getShapeProperty ()Lnet/minecraft/world/level/block/state/properties/Property; d
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateState (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V a
net/minecraft/world/level/block/RailState cex
	block c
	connections f
	isStraight e
	level a
	pos b
	state d
	canConnectTo (Lnet/minecraft/world/level/block/RailState;)Z b
	connectTo (Lnet/minecraft/world/level/block/RailState;)V c
	connectsTo (Lnet/minecraft/world/level/block/RailState;)Z a
	countPotentialConnections ()I b
	getConnections ()Ljava/util/List; a
	getRail (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/RailState; b
	getState ()Lnet/minecraft/world/level/block/state/BlockState; c
	hasConnection (Lnet/minecraft/core/BlockPos;)Z c
	hasNeighborRail (Lnet/minecraft/core/BlockPos;)Z d
	hasRail (Lnet/minecraft/core/BlockPos;)Z a
	place (ZZLnet/minecraft/world/level/block/state/properties/RailShape;)Lnet/minecraft/world/level/block/RailState; a
	removeSoftConnections ()V d
	updateConnections (Lnet/minecraft/world/level/block/state/properties/RailShape;)V a
net/minecraft/world/level/block/RedStoneOreBlock cey
	LIT a
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	attack (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	interact (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	spawnAfterBreak (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)V a
	spawnParticles (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	stepOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/Entity;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/RedStoneWireBlock cez
	COLORS G
	E i
	EAST b
	H g
	N j
	NORTH a
	PARTICLE_DENSITY H
	POWER e
	PROPERTY_BY_DIRECTION f
	S k
	SHAPES_CACHE F
	SHAPES_FLOOR m
	SHAPES_UP n
	SHAPE_DOT l
	SOUTH c
	W h
	WEST d
	crossState I
	shouldSignal J
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	calculateShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/shapes/VoxelShape; n
	calculateTargetStrength (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	canSurviveOn (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	checkCornerChangeAt (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V b
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getColorForPower (I)I b
	getConnectingSide (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/block/state/properties/RedstoneSide; a
	getConnectingSide (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Z)Lnet/minecraft/world/level/block/state/properties/RedstoneSide; a
	getConnectionState (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getMissingConnections (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getWireSignal (Lnet/minecraft/world/level/block/state/BlockState;)I q
	isCross (Lnet/minecraft/world/level/block/state/BlockState;)Z o
	isDot (Lnet/minecraft/world/level/block/state/BlockState;)Z p
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	shouldConnectTo (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	shouldConnectTo (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	spawnParticlesAlongLine (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;FF)V a
	updateIndirectNeighbourShapes (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;II)V a
	updateNeighborsOfNeighboringWires (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V c
	updatePowerStrength (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	updatesOnShapeChange (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/RedstoneLampBlock cfa
	LIT a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
net/minecraft/world/level/block/RedstoneTorchBlock cfb
	LIT a
	MAX_RECENT_TOGGLES c
	RECENT_TOGGLES e
	RECENT_TOGGLE_TIMER b
	RESTART_DELAY d
	TOGGLE_DELAY f
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	hasNeighborSignal (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	isToggledTooFrequently (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)Z a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
net/minecraft/world/level/block/RedstoneTorchBlock$Toggle cfb$a
	pos a
	when b
net/minecraft/world/level/block/RedstoneWallTorchBlock cfc
	FACING e
	LIT f
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDescriptionId ()Ljava/lang/String; h
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasNeighborSignal (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/RenderShape cfd
	$VALUES d
	ENTITYBLOCK_ANIMATED b
	INVISIBLE a
	MODEL c
	$values ()[Lnet/minecraft/world/level/block/RenderShape; a
net/minecraft/world/level/block/RepeaterBlock cfe
	DELAY d
	LOCKED a
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDelay (Lnet/minecraft/world/level/block/state/BlockState;)I g
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isAlternateInput (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	isLocked (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/RespawnAnchorBlock cff
	CHARGE c
	MAX_CHARGES b
	MIN_CHARGES a
	RESPAWN_HORIZONTAL_OFFSETS d
	RESPAWN_OFFSETS e
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	canBeCharged (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	canSetSpawn (Lnet/minecraft/world/level/Level;)Z a
	charge (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	explode (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	findStandUpPosition (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/CollisionGetter;Lnet/minecraft/core/BlockPos;)Ljava/util/Optional; a
	findStandUpPosition (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/CollisionGetter;Lnet/minecraft/core/BlockPos;Z)Ljava/util/Optional; a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getScaledChargeLevel (Lnet/minecraft/world/level/block/state/BlockState;I)I a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isRespawnFuel (Lnet/minecraft/world/item/ItemStack;)Z a
	isWaterThatWouldFlow (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Level;)Z a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/RodBlock cfg
	AABB_MAX f
	AABB_MIN e
	X_AXIS_AABB i
	Y_AXIS_AABB g
	Z_AXIS_AABB h
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/RootedDirtBlock cfh
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/RootsBlock cfi
	AABB_OFFSET a
	SHAPE b
	getOffsetType ()Lnet/minecraft/world/level/block/state/BlockBehaviour$OffsetType; S_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
net/minecraft/world/level/block/RotatedPillarBlock cfj
	AXIS g
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotatePillar (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; b
net/minecraft/world/level/block/Rotation cfk
	$VALUES f
	CLOCKWISE_180 c
	CLOCKWISE_90 b
	COUNTERCLOCKWISE_90 d
	NONE a
	rotation e
	$values ()[Lnet/minecraft/world/level/block/Rotation; b
	getRandom (Ljava/util/Random;)Lnet/minecraft/world/level/block/Rotation; a
	getRotated (Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/Rotation; a
	getShuffled (Ljava/util/Random;)Ljava/util/List; b
	rotate (II)I a
	rotate (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Direction; a
	rotation ()Lcom/mojang/math/OctahedralGroup; a
net/minecraft/world/level/block/SandBlock cfl
	dustColor a
	getDustColor (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I d
net/minecraft/world/level/block/SaplingBlock cfm
	AABB_OFFSET b
	SHAPE c
	STAGE a
	treeGrower d
	advanceTree (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
net/minecraft/world/level/block/ScaffoldingBlock cfn
	BELOW_BLOCK i
	BOTTOM d
	DISTANCE b
	STABILITY_MAX_DISTANCE a
	STABLE_SHAPE f
	TICK_DELAY e
	UNSTABLE_SHAPE g
	UNSTABLE_SHAPE_BOTTOM h
	WATERLOGGED c
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getDistance (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getInteractionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isBottom (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;I)Z a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/SculkSensorBlock cfo
	ACTIVE_TICKS a
	COOLDOWN_TICKS b
	PHASE d
	POWER e
	SHAPE g
	VIBRATION_STRENGTH_FOR_EVENT c
	WATERLOGGED f
	listenerRange h
	activate (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;I)V a
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	canActivate (Lnet/minecraft/world/level/block/state/BlockState;)Z n
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	deactivate (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getListener (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/entity/BlockEntity;)Lnet/minecraft/world/level/gameevent/GameEventListener; a
	getListenerRange ()I e
	getPhase (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/properties/SculkSensorPhase; h
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateNeighbours (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/SeaPickleBlock cfp
	FOUR_AABB g
	MAX_PICKLES a
	ONE_AABB d
	PICKLES b
	THREE_AABB f
	TWO_AABB e
	WATERLOGGED c
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isDead (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/SeagrassBlock cfq
	AABB_OFFSET a
	SHAPE b
	canPlaceLiquid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	placeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/ShulkerBoxBlock cfr
	CONTENTS b
	FACING a
	color c
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/BlockGetter;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	canOpen (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/ShulkerBoxBlockEntity;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getBlockByColor (Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/level/block/Block; a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getColor ()Lnet/minecraft/world/item/DyeColor; c
	getColorFromBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/item/DyeColor; a
	getColorFromItem (Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/item/DyeColor; b
	getColoredItemStack (Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/item/ItemStack; b
	getDrops (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/storage/loot/LootContext$Builder;)Ljava/util/List; a
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; d
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/SignBlock cfs
	AABB_OFFSET b
	SHAPE c
	WATERLOGGED a
	type d
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isPossibleToRespawnInThis ()Z W_
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	type ()Lnet/minecraft/world/level/block/state/properties/WoodType; e
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/SimpleWaterloggedBlock cft
	canPlaceLiquid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	getPickupSound ()Ljava/util/Optional; V_
	pickupBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; c
	placeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
net/minecraft/world/level/block/SkullBlock cfu
	MAX a
	ROTATION b
	ROTATIONS d
	SHAPE c
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getOcclusionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/SkullBlock$Type cfu$a
net/minecraft/world/level/block/SkullBlock$Types cfu$b
	$VALUES g
	CREEPER e
	DRAGON f
	PLAYER c
	SKELETON a
	WITHER_SKELETON b
	ZOMBIE d
	$values ()[Lnet/minecraft/world/level/block/SkullBlock$Types; a
net/minecraft/world/level/block/SlabBlock cfv
	BOTTOM_AABB c
	TOP_AABB d
	TYPE a
	WATERLOGGED b
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	canPlaceLiquid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	placeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/SlimeBlock cfw
	bounceUp (Lnet/minecraft/world/entity/Entity;)V a
	fallOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;F)V a
	stepOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/Entity;)V a
	updateEntityAfterFallOn (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/world/level/block/SmallDripleafBlock cfx
	AABB_OFFSET c
	FACING b
	SHAPE d
	WATERLOGGED e
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getMaxVerticalOffset ()F X_
	getOffsetType ()Lnet/minecraft/world/level/block/state/BlockBehaviour$OffsetType; S_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/SmithingTableBlock cfy
	CONTAINER_TITLE a
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/SmokerBlock cfz
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	openContainer (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
net/minecraft/world/level/block/SnowLayerBlock cga
	HEIGHT_IMPASSABLE d
	LAYERS b
	MAX_HEIGHT a
	SHAPE_BY_LAYER c
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getBlockSupportShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; f
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getVisualShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/SnowyDirtBlock cgb
	SNOWY a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isSnowySetting (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/SoulFireBlock cgc
	canBurn (Lnet/minecraft/world/level/block/state/BlockState;)Z f
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	canSurviveOnBlock (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/SoulSandBlock cgd
	BUBBLE_COLUMN_CHECK_DELAY b
	SHAPE a
	getBlockSupportShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; f
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getVisualShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/SoundType cge
	AMETHYST X
	AMETHYST_CLUSTER Y
	ANCIENT_DEBRIS R
	ANVIL m
	AZALEA aj
	AZALEA_LEAVES ar
	BAMBOO r
	BAMBOO_SAPLING s
	BASALT J
	BIG_DRIPLEAF an
	BONE_BLOCK P
	CALCITE ad
	CANDLE W
	CAVE_VINES ah
	CHAIN T
	COPPER ag
	CORAL_BLOCK q
	CROP v
	DEEPSLATE au
	DEEPSLATE_BRICKS av
	DEEPSLATE_TILES aw
	DRIPSTONE_BLOCK ae
	FLOWERING_AZALEA ak
	FUNGUS C
	GILDED_BLACKSTONE V
	GLASS g
	GLOW_LICHEN at
	GRASS c
	GRAVEL b
	HANGING_ROOTS aq
	HARD_CROP w
	HONEY_BLOCK o
	LADDER l
	LANTERN z
	LARGE_AMETHYST_BUD ab
	LILY_PAD d
	LODESTONE S
	MEDIUM_AMETHYST_BUD aa
	METAL f
	MOSS am
	MOSS_CARPET al
	NETHERITE_BLOCK Q
	NETHERRACK L
	NETHER_BRICKS M
	NETHER_GOLD_ORE U
	NETHER_ORE O
	NETHER_SPROUTS N
	NETHER_WART y
	NYLIUM B
	POINTED_DRIPSTONE af
	POLISHED_DEEPSLATE ax
	POWDER_SNOW k
	ROOTED_DIRT ap
	ROOTS D
	SAND i
	SCAFFOLDING t
	SCULK_SENSOR as
	SHROOMLIGHT E
	SLIME_BLOCK n
	SMALL_AMETHYST_BUD Z
	SMALL_DRIPLEAF ao
	SNOW j
	SOUL_SAND H
	SOUL_SOIL I
	SPORE_BLOSSOM ai
	STEM A
	STONE e
	SWEET_BERRY_BUSH u
	TUFF ac
	TWISTING_VINES G
	VINE x
	WART_BLOCK K
	WEEPING_VINES F
	WET_GRASS p
	WOOD a
	WOOL h
	breakSound aA
	fallSound aE
	hitSound aD
	pitch az
	placeSound aC
	stepSound aB
	volume ay
	getBreakSound ()Lnet/minecraft/sounds/SoundEvent; c
	getFallSound ()Lnet/minecraft/sounds/SoundEvent; g
	getHitSound ()Lnet/minecraft/sounds/SoundEvent; f
	getPitch ()F b
	getPlaceSound ()Lnet/minecraft/sounds/SoundEvent; e
	getStepSound ()Lnet/minecraft/sounds/SoundEvent; d
	getVolume ()F a
net/minecraft/world/level/block/SpawnerBlock cgf
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	spawnAfterBreak (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/level/block/SpongeBlock cgg
	MAX_COUNT b
	MAX_DEPTH a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	removeWaterBreadthFirstSearch (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z b
	tryAbsorbWater (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/block/SporeBlossomBlock cgh
	ADD_PARTICLE_ATTEMPTS b
	PARTICLE_XZ_RADIUS c
	PARTICLE_Y_MAX d
	SHAPE a
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/SpreadingSnowyDirtBlock cgi
	canBeGrass (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z b
	canPropagate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z c
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
net/minecraft/world/level/block/StainedGlassBlock cgj
	color a
	getColor ()Lnet/minecraft/world/item/DyeColor; a
net/minecraft/world/level/block/StainedGlassPaneBlock cgk
	color i
	getColor ()Lnet/minecraft/world/item/DyeColor; a
net/minecraft/world/level/block/StairBlock cgl
	BOTTOM_AABB f
	BOTTOM_SHAPES G
	FACING a
	HALF b
	OCTET_NNN g
	OCTET_NNP h
	OCTET_NPN i
	OCTET_NPP j
	OCTET_PNN k
	OCTET_PNP l
	OCTET_PPN m
	OCTET_PPP n
	SHAPE c
	SHAPE_BY_STATE H
	TOP_AABB e
	TOP_SHAPES F
	WATERLOGGED d
	base I
	baseState J
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	attack (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	canTakeShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z c
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	destroy (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	getExplosionResistance ()F f
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getShapeIndex (Lnet/minecraft/world/level/block/state/BlockState;)I n
	getStairsShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/properties/StairsShape; h
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	isStairs (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	makeShapes (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)[Lnet/minecraft/world/phys/shapes/VoxelShape; a
	makeStairShape (ILnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	stepOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/Entity;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
	wasExploded (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Explosion;)V a
net/minecraft/world/level/block/StandingSignBlock cgm
	ROTATION d
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/StemBlock cgn
	AABB_OFFSET c
	AGE b
	MAX_AGE a
	SHAPE_BY_AGE d
	fruit e
	seedSupplier f
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getFruit ()Lnet/minecraft/world/level/block/StemGrownBlock; c
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
net/minecraft/world/level/block/StemGrownBlock cgo
	getAttachedStem ()Lnet/minecraft/world/level/block/AttachedStemBlock; d
	getStem ()Lnet/minecraft/world/level/block/StemBlock; c
net/minecraft/world/level/block/StoneButtonBlock cgp
	getSound (Z)Lnet/minecraft/sounds/SoundEvent; a
net/minecraft/world/level/block/StonecutterBlock cgq
	CONTAINER_TITLE c
	FACING a
	SHAPE b
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/StructureBlock cgr
	MODE a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	trigger (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/block/entity/StructureBlockEntity;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/StructureVoidBlock cgs
	SHAPE b
	SIZE a
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; d
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShadeBrightness (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
net/minecraft/world/level/block/SugarCaneBlock cgt
	AABB_OFFSET b
	AGE a
	SHAPE c
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/SupportType cgu
	$VALUES d
	CENTER b
	FULL a
	RIGID c
	$values ()[Lnet/minecraft/world/level/block/SupportType; a
	isSupporting (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
net/minecraft/world/level/block/SweetBerryBushBlock cgv
	AGE b
	HURT_SPEED_THRESHOLD c
	MAX_AGE a
	MID_GROWTH_SHAPE e
	SAPLING_SHAPE d
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/TallFlowerBlock cgw
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/TallGrassBlock cgx
	AABB_OFFSET a
	SHAPE b
	getOffsetType ()Lnet/minecraft/world/level/block/state/BlockBehaviour$OffsetType; S_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/TallSeagrassBlock cgy
	AABB_OFFSET c
	HALF b
	SHAPE d
	canPlaceLiquid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
	placeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
net/minecraft/world/level/block/TargetBlock cgz
	ACTIVATION_TICKS_ARROWS b
	ACTIVATION_TICKS_OTHER c
	OUTPUT_POWER a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getRedstoneStrength (Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/phys/Vec3;)I a
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	setOutputPower (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/block/state/BlockState;ILnet/minecraft/core/BlockPos;I)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateRedstoneOutput (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/Entity;)I a
net/minecraft/world/level/block/TintedGlassBlock cha
	getLightBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I g
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
net/minecraft/world/level/block/TntBlock chb
	UNSTABLE a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	dropFromExplosion (Lnet/minecraft/world/level/Explosion;)Z a
	explode (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	explode (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/LivingEntity;)V a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
	wasExploded (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Explosion;)V a
net/minecraft/world/level/block/TorchBlock chc
	AABB h
	AABB_STANDING_OFFSET g
	flameParticle i
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/TrapDoorBlock chd
	AABB_THICKNESS e
	BOTTOM_AABB j
	EAST_OPEN_AABB f
	HALF b
	NORTH_OPEN_AABB i
	OPEN a
	POWERED c
	SOUTH_OPEN_AABB h
	TOP_AABB k
	WATERLOGGED d
	WEST_OPEN_AABB g
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	playSound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/TrappedChestBlock che
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getOpenChestStat ()Lnet/minecraft/stats/Stat; d
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
net/minecraft/world/level/block/TripWireBlock chf
	AABB h
	ATTACHED b
	DISARMED c
	EAST e
	NORTH d
	NOT_ATTACHED_AABB i
	POWERED a
	PROPERTY_BY_DIRECTION j
	RECHECK_PERIOD k
	SOUTH f
	WEST g
	hook l
	checkPressed (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	shouldConnectTo (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateSource (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/TripWireHookBlock chg
	AABB_OFFSET f
	ATTACHED c
	EAST_AABB j
	FACING a
	NORTH_AABB g
	POWERED b
	RECHECK_PERIOD k
	SOUTH_AABB h
	WEST_AABB i
	WIRE_DIST_MAX e
	WIRE_DIST_MIN d
	calculateState (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;ZZILnet/minecraft/world/level/block/state/BlockState;)V a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	notifyNeighbors (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)V a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	playSound (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;ZZZZ)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/TurtleEggBlock chh
	EGGS e
	HATCH d
	MAX_EGGS c
	MAX_HATCH_LEVEL a
	MIN_EGGS b
	MULTIPLE_EGGS_AABB g
	ONE_EGG_AABB f
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	canDestroyEgg (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	decreaseEggs (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	destroyEgg (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;I)V a
	fallOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;F)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isSand (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onSand (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	playerDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/item/ItemStack;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	shouldUpdateHatchLevel (Lnet/minecraft/world/level/Level;)Z a
	stepOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/world/level/block/TwistingVinesBlock chi
	SHAPE f
	canGrowInto (Lnet/minecraft/world/level/block/state/BlockState;)Z g
	getBlocksToGrowWhenBonemealed (Ljava/util/Random;)I a
	getBodyBlock ()Lnet/minecraft/world/level/block/Block; c
net/minecraft/world/level/block/TwistingVinesPlantBlock chj
	SHAPE d
	getHeadBlock ()Lnet/minecraft/world/level/block/GrowingPlantHeadBlock; d
net/minecraft/world/level/block/VineBlock chk
	AABB_OFFSET g
	EAST c
	EAST_AABB j
	NORTH b
	NORTH_AABB k
	PROPERTY_BY_DIRECTION f
	SOUTH d
	SOUTH_AABB l
	UP a
	UP_AABB h
	WEST e
	WEST_AABB i
	shapesCache m
	calculateShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/shapes/VoxelShape; h
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	canSpread (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	canSupportAtFace (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	copyRandomFaces (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)Lnet/minecraft/world/level/block/state/BlockState; a
	countFaces (Lnet/minecraft/world/level/block/state/BlockState;)I o
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getPropertyForFace (Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/block/state/properties/BooleanProperty; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getUpdatedState (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; h
	hasFaces (Lnet/minecraft/world/level/block/state/BlockState;)Z n
	hasHorizontalConnection (Lnet/minecraft/world/level/block/state/BlockState;)Z p
	isAcceptableNeighbour (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/WallBannerBlock chl
	FACING a
	SHAPES b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDescriptionId ()Ljava/lang/String; h
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/WallBlock chm
	EAST_TEST J
	EAST_WALL b
	NORTH_TEST G
	NORTH_WALL c
	POST_COVER_WIDTH l
	POST_TEST F
	POST_WIDTH k
	SOUTH_TEST H
	SOUTH_WALL d
	UP a
	WALL_COVER_END n
	WALL_COVER_START m
	WALL_HEIGHT j
	WALL_WIDTH i
	WATERLOGGED f
	WEST_TEST I
	WEST_WALL e
	collisionShapeByIndex h
	shapeByIndex g
	applyWallShape (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/level/block/state/properties/WallSide;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	connectsTo (Lnet/minecraft/world/level/block/state/BlockState;ZLnet/minecraft/core/Direction;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isConnected (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/properties/Property;)Z a
	isCovered (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)Z a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	makeShapes (FFFFFF)Ljava/util/Map; a
	makeWallState (ZLnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)Lnet/minecraft/world/level/block/state/properties/WallSide; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	shouldRaisePost (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/shapes/VoxelShape;)Z a
	sideUpdate (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/block/state/BlockState; a
	topUpdate (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;ZZZZ)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateSides (Lnet/minecraft/world/level/block/state/BlockState;ZZZZLnet/minecraft/world/phys/shapes/VoxelShape;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/WallSignBlock chn
	AABBS h
	AABB_BOTTOM f
	AABB_THICKNESS e
	AABB_TOP g
	FACING d
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDescriptionId ()Ljava/lang/String; h
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/WallSkullBlock cho
	AABBS b
	FACING a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDescriptionId ()Ljava/lang/String; h
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/WallTorchBlock chp
	AABBS c
	AABB_OFFSET b
	FACING a
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDescriptionId ()Ljava/lang/String; h
	getShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/shapes/VoxelShape; h
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/WaterlilyBlock chq
	AABB a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
net/minecraft/world/level/block/WeatheringCopper chr
	NEXT_BY_BLOCK q_
	PREVIOUS_BY_BLOCK r_
	getChanceModifier ()F a
	getFirst (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/Block; b
	getFirst (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; c
	getNext (Lnet/minecraft/world/level/block/Block;)Ljava/util/Optional; c
	getNext (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/util/Optional; a
	getPrevious (Lnet/minecraft/world/level/block/Block;)Ljava/util/Optional; a
	getPrevious (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/util/Optional; b
net/minecraft/world/level/block/WeatheringCopper$WeatherState chr$a
	$VALUES e
	EXPOSED b
	OXIDIZED d
	UNAFFECTED a
	WEATHERED c
	$values ()[Lnet/minecraft/world/level/block/WeatheringCopper$WeatherState; a
net/minecraft/world/level/block/WeatheringCopperFullBlock chs
	weatherState d
	getAge ()Ljava/lang/Enum; b
	getAge ()Lnet/minecraft/world/level/block/WeatheringCopper$WeatherState; c
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
net/minecraft/world/level/block/WeatheringCopperSlabBlock cht
	weatherState e
	getAge ()Ljava/lang/Enum; b
	getAge ()Lnet/minecraft/world/level/block/WeatheringCopper$WeatherState; q
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
net/minecraft/world/level/block/WeatheringCopperStairBlock chu
	weatherState H
	getAge ()Ljava/lang/Enum; b
	getAge ()Lnet/minecraft/world/level/block/WeatheringCopper$WeatherState; q
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
net/minecraft/world/level/block/WebBlock chv
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/world/level/block/WeepingVinesBlock chw
	SHAPE f
	canGrowInto (Lnet/minecraft/world/level/block/state/BlockState;)Z g
	getBlocksToGrowWhenBonemealed (Ljava/util/Random;)I a
	getBodyBlock ()Lnet/minecraft/world/level/block/Block; c
net/minecraft/world/level/block/WeepingVinesPlantBlock chx
	SHAPE d
	getHeadBlock ()Lnet/minecraft/world/level/block/GrowingPlantHeadBlock; d
net/minecraft/world/level/block/WeightedPressurePlateBlock chy
	POWER d
	maxWeight e
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getPressedTime ()I c
	getSignalForState (Lnet/minecraft/world/level/block/state/BlockState;)I g
	getSignalStrength (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I b
	playOffSound (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V b
	playOnSound (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	setSignalForState (Lnet/minecraft/world/level/block/state/BlockState;I)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/WetSpongeBlock chz
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
net/minecraft/world/level/block/WitherRoseBlock cia
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
net/minecraft/world/level/block/WitherSkullBlock cib
	witherPatternBase e
	witherPatternFull d
	canSpawnMob (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)Z b
	checkSpawn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/SkullBlockEntity;)V a
	getOrCreateWitherBase ()Lnet/minecraft/world/level/block/state/pattern/BlockPattern; q
	getOrCreateWitherFull ()Lnet/minecraft/world/level/block/state/pattern/BlockPattern; c
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/level/block/WitherWallSkullBlock cic
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/level/block/WoodButtonBlock cid
	getSound (Z)Lnet/minecraft/sounds/SoundEvent; a
net/minecraft/world/level/block/WoolCarpetBlock cie
	color b
	getColor ()Lnet/minecraft/world/item/DyeColor; c
net/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity cif
	BURN_COOL_SPEED k
	BURN_TIME_STANDARD j
	DATA_COOKING_PROGRESS g
	DATA_COOKING_TOTAL_TIME h
	DATA_LIT_DURATION f
	DATA_LIT_TIME e
	NUM_DATA_VALUES i
	SLOTS_FOR_DOWN r
	SLOTS_FOR_SIDES s
	SLOTS_FOR_UP q
	SLOT_FUEL c
	SLOT_INPUT b
	SLOT_RESULT d
	cookingProgress v
	cookingTotalTime w
	dataAccess m
	items l
	litDuration u
	litTime t
	recipeType y
	recipesUsed x
	add (Ljava/util/Map;Lnet/minecraft/tags/Tag;I)V a
	add (Ljava/util/Map;Lnet/minecraft/world/level/ItemLike;I)V a
	awardUsedRecipes (Lnet/minecraft/world/entity/player/Player;)V b
	awardUsedRecipesAndPopExperience (Lnet/minecraft/server/level/ServerPlayer;)V a
	burn (Lnet/minecraft/world/item/crafting/Recipe;Lnet/minecraft/core/NonNullList;I)Z b
	canBurn (Lnet/minecraft/world/item/crafting/Recipe;Lnet/minecraft/core/NonNullList;I)Z a
	canPlaceItem (ILnet/minecraft/world/item/ItemStack;)Z b
	canPlaceItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z a
	canTakeItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z b
	clearContent ()V a
	createExperience (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;IF)V a
	fillStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
	getBurnDuration (Lnet/minecraft/world/item/ItemStack;)I a
	getContainerSize ()I b
	getFuel ()Ljava/util/Map; f
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getRecipeUsed ()Lnet/minecraft/world/item/crafting/Recipe; d
	getRecipesToAwardAndPopExperience (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;)Ljava/util/List; a
	getSlotsForFace (Lnet/minecraft/core/Direction;)[I a
	getTotalCookTime (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/crafting/RecipeType;Lnet/minecraft/world/Container;)I a
	isEmpty ()Z c
	isFuel (Lnet/minecraft/world/item/ItemStack;)Z b
	isLit ()Z h
	isNeverAFurnaceFuel (Lnet/minecraft/world/item/Item;)Z b
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
	serverTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity;)V a
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	setRecipeUsed (Lnet/minecraft/world/item/crafting/Recipe;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/level/block/entity/BannerBlockEntity cig
	MAX_PATTERNS a
	TAG_COLOR d
	TAG_PATTERN c
	TAG_PATTERNS b
	baseColor f
	itemPatterns g
	name e
	patterns i
	receivedData h
	createPatterns (Lnet/minecraft/world/item/DyeColor;Lnet/minecraft/nbt/ListTag;)Ljava/util/List; a
	fromItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/DyeColor;)V a
	getBaseColor ()Lnet/minecraft/world/item/DyeColor; g
	getCustomName ()Lnet/minecraft/network/chat/Component; U
	getItem ()Lnet/minecraft/world/item/ItemStack; f
	getItemPatterns (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/nbt/ListTag; a
	getName ()Lnet/minecraft/network/chat/Component; S
	getPatternCount (Lnet/minecraft/world/item/ItemStack;)I b
	getPatterns ()Ljava/util/List; c
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; Y_
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; Z_
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	removeLastPattern (Lnet/minecraft/world/item/ItemStack;)V c
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
	setCustomName (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/world/level/block/entity/BannerPattern cih
	$VALUES W
	AVAILABLE_PATTERNS R
	BASE a
	BORDER E
	BRICKS I
	CIRCLE_MIDDLE y
	COUNT P
	CREEPER K
	CROSS o
	CURLY_BORDER F
	DIAGONAL_LEFT u
	DIAGONAL_LEFT_MIRROR w
	DIAGONAL_RIGHT v
	DIAGONAL_RIGHT_MIRROR x
	FLOWER M
	GLOBE J
	GRADIENT G
	GRADIENT_UP H
	HALF_HORIZONTAL B
	HALF_HORIZONTAL_MIRROR D
	HALF_VERTICAL A
	HALF_VERTICAL_MIRROR C
	MOJANG N
	PATTERN_ITEM_COUNT Q
	PIGLIN O
	RHOMBUS_MIDDLE z
	SKULL L
	SQUARE_BOTTOM_LEFT b
	SQUARE_BOTTOM_RIGHT c
	SQUARE_TOP_LEFT d
	SQUARE_TOP_RIGHT e
	STRAIGHT_CROSS p
	STRIPE_BOTTOM f
	STRIPE_CENTER j
	STRIPE_DOWNLEFT m
	STRIPE_DOWNRIGHT l
	STRIPE_LEFT h
	STRIPE_MIDDLE k
	STRIPE_RIGHT i
	STRIPE_SMALL n
	STRIPE_TOP g
	TRIANGLES_BOTTOM s
	TRIANGLES_TOP t
	TRIANGLE_BOTTOM q
	TRIANGLE_TOP r
	VALUES S
	filename U
	hasPatternItem T
	hashname V
	$values ()[Lnet/minecraft/world/level/block/entity/BannerPattern; c
	byFilename (Ljava/lang/String;)Lnet/minecraft/world/level/block/entity/BannerPattern; b
	byHash (Ljava/lang/String;)Lnet/minecraft/world/level/block/entity/BannerPattern; a
	getFilename ()Ljava/lang/String; a
	getHashname ()Ljava/lang/String; b
	location (Z)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/world/level/block/entity/BannerPattern$Builder cih$a
	patterns a
	addPattern (Lcom/mojang/datafixers/util/Pair;)Lnet/minecraft/world/level/block/entity/BannerPattern$Builder; a
	addPattern (Lnet/minecraft/world/level/block/entity/BannerPattern;Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/level/block/entity/BannerPattern$Builder; a
	toListTag ()Lnet/minecraft/nbt/ListTag; a
net/minecraft/world/level/block/entity/BarrelBlockEntity cii
	items b
	openersCounter c
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	getContainerSize ()I b
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
	getItems ()Lnet/minecraft/core/NonNullList; f
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	playSound (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/sounds/SoundEvent;)V a
	recheckOpen ()V h
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
	setItems (Lnet/minecraft/core/NonNullList;)V a
	startOpen (Lnet/minecraft/world/entity/player/Player;)V b_
	stopOpen (Lnet/minecraft/world/entity/player/Player;)V c_
	updateBlockState (Lnet/minecraft/world/level/block/state/BlockState;Z)V a
net/minecraft/world/level/block/entity/BaseContainerBlockEntity cij
	lockKey b
	name c
	canOpen (Lnet/minecraft/world/entity/player/Player;)Z d
	canUnlock (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/LockCode;Lnet/minecraft/network/chat/Component;)Z a
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	getCustomName ()Lnet/minecraft/network/chat/Component; U
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
	getDisplayName ()Lnet/minecraft/network/chat/Component; B_
	getName ()Lnet/minecraft/network/chat/Component; S
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
	setCustomName (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/world/level/block/entity/BeaconBlockEntity cik
	BEACON_EFFECTS a
	BLOCKS_CHECK_PER_TICK h
	DATA_LEVELS b
	DATA_PRIMARY c
	DATA_SECONDARY d
	MAX_LEVELS f
	NUM_DATA_VALUES e
	VALID_EFFECTS g
	beamSections i
	checkingBeamSections j
	dataAccess t
	lastCheckY l
	levels k
	lockKey s
	name r
	primaryPower m
	secondaryPower q
	applyEffects (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/effect/MobEffect;Lnet/minecraft/world/effect/MobEffect;)V a
	getBeamSections ()Ljava/util/List; f
	getDisplayName ()Lnet/minecraft/network/chat/Component; B_
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; Y_
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; Z_
	getValidEffectById (I)Lnet/minecraft/world/effect/MobEffect; a
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	playSound (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/sounds/SoundEvent;)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
	setCustomName (Lnet/minecraft/network/chat/Component;)V a
	setLevel (Lnet/minecraft/world/level/Level;)V a
	setRemoved ()V aa_
	tick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BeaconBlockEntity;)V a
	updateBase (Lnet/minecraft/world/level/Level;III)I a
net/minecraft/world/level/block/entity/BeaconBlockEntity$BeaconBeamSection cik$a
	color a
	height b
	getColor ()[F b
	getHeight ()I c
	increaseHeight ()V a
net/minecraft/world/level/block/entity/BedBlockEntity cil
	color a
	getColor ()Lnet/minecraft/world/item/DyeColor; d
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; Y_
	setColor (Lnet/minecraft/world/item/DyeColor;)V a
net/minecraft/world/level/block/entity/BeehiveBlockEntity cim
	BEES f
	ENTITY_DATA c
	HAS_NECTAR e
	IGNORED_BEE_TAGS i
	MAX_OCCUPANTS g
	MIN_OCCUPATION_TICKS b
	MIN_OCCUPATION_TICKS_NECTAR k
	MIN_OCCUPATION_TICKS_NECTARLESS h
	MIN_TICKS_BEFORE_REENTERING_HIVE j
	TAG_FLOWER_POS a
	TICKS_IN_HIVE d
	savedFlowerPos m
	stored l
	addOccupant (Lnet/minecraft/world/entity/Entity;Z)V a
	addOccupantWithPresetTicks (Lnet/minecraft/world/entity/Entity;ZI)V a
	emptyAllLivingFromHive (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeReleaseStatus;)V a
	getHoneyLevel (Lnet/minecraft/world/level/block/state/BlockState;)I a
	getOccupantCount ()I h
	hasSavedFlowerPos ()Z s
	isEmpty ()Z f
	isFireNearby ()Z d
	isFull ()Z g
	isSedated ()Z i
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	releaseAllOccupants (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeReleaseStatus;)Ljava/util/List; a
	releaseOccupant (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeData;Ljava/util/List;Lnet/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeReleaseStatus;Lnet/minecraft/core/BlockPos;)Z a
	removeIgnoredBeeTags (Lnet/minecraft/nbt/CompoundTag;)V c
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
	serverTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BeehiveBlockEntity;)V a
	setBeeReleaseData (ILnet/minecraft/world/entity/animal/Bee;)V a
	setChanged ()V e
	storeBee (Lnet/minecraft/nbt/CompoundTag;IZ)V a
	tickOccupants (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/List;Lnet/minecraft/core/BlockPos;)V a
	writeBees ()Lnet/minecraft/nbt/ListTag; j
net/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeData cim$a
	entityData a
	minOccupationTicks c
	ticksInHive b
net/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeReleaseStatus cim$b
	$VALUES d
	BEE_RELEASED b
	EMERGENCY c
	HONEY_DELIVERED a
	$values ()[Lnet/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeReleaseStatus; a
net/minecraft/world/level/block/entity/BellBlockEntity cin
	DURATION d
	GLOW_DURATION e
	HEAR_BELL_RADIUS j
	HIGHLIGHT_RAIDERS_RADIUS k
	MAX_RESONATION_TICKS g
	MIN_TICKS_BETWEEN_SEARCHES f
	SEARCH_RADIUS i
	TICKS_BEFORE_RESONATION h
	clickDirection c
	lastRingTimestamp l
	nearbyEntities m
	resonating q
	resonationTicks r
	shaking b
	ticks a
	areRaidersNearby (Lnet/minecraft/core/BlockPos;Ljava/util/List;)Z a
	clientTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BellBlockEntity;)V a
	glow (Lnet/minecraft/world/entity/LivingEntity;)V a
	isRaiderWithinRange (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/LivingEntity;)Z a
	makeRaidersGlow (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/List;)V a
	onHit (Lnet/minecraft/core/Direction;)V a
	serverTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BellBlockEntity;)V b
	showBellParticles (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/List;)V b
	tick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BellBlockEntity;Lnet/minecraft/world/level/block/entity/BellBlockEntity$ResonationEndAction;)V a
	triggerEvent (II)Z a_
	updateEntities ()V d
net/minecraft/world/level/block/entity/BellBlockEntity$ResonationEndAction cin$a
net/minecraft/world/level/block/entity/BlastFurnaceBlockEntity cio
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	getBurnDuration (Lnet/minecraft/world/item/ItemStack;)I a
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
net/minecraft/world/level/block/entity/BlockEntity cip
	LOGGER b
	blockState d
	level n
	remove p
	type c
	worldPosition o
	clearRemoved ()V p
	fillCrashReportCategory (Lnet/minecraft/CrashReportCategory;)V a
	getBlockPos ()Lnet/minecraft/core/BlockPos; m
	getBlockState ()Lnet/minecraft/world/level/block/state/BlockState; n
	getLevel ()Lnet/minecraft/world/level/Level; k
	getType ()Lnet/minecraft/world/level/block/entity/BlockEntityType; r
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; Y_
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; Z_
	hasLevel ()Z l
	isRemoved ()Z o
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	loadStatic (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onlyOpCanSetNbt ()Z q
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
	saveMetadata (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; c
	setBlockState (Lnet/minecraft/world/level/block/state/BlockState;)V b
	setChanged ()V e
	setChanged (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	setLevel (Lnet/minecraft/world/level/Level;)V a
	setRemoved ()V aa_
	triggerEvent (II)Z a_
net/minecraft/world/level/block/entity/BlockEntityTicker ciq
net/minecraft/world/level/block/entity/BlockEntityType cir
	BANNER s
	BARREL z
	BEACON n
	BED x
	BEEHIVE G
	BELL D
	BLAST_FURNACE B
	BREWING_STAND k
	CAMPFIRE F
	CHEST b
	COMMAND_BLOCK v
	COMPARATOR r
	CONDUIT y
	DAYLIGHT_DETECTOR p
	DISPENSER f
	DROPPER g
	ENCHANTING_TABLE l
	ENDER_CHEST d
	END_GATEWAY u
	END_PORTAL m
	FURNACE a
	HOPPER q
	JIGSAW E
	JUKEBOX e
	LECTERN C
	LOGGER I
	MOB_SPAWNER i
	PISTON j
	SCULK_SENSOR H
	SHULKER_BOX w
	SIGN h
	SKULL o
	SMOKER A
	STRUCTURE_BLOCK t
	TRAPPED_CHEST c
	dataType L
	factory J
	validBlocks K
	create (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	getBlockEntity (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	getKey (Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/resources/ResourceLocation; a
	isValid (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	register (Ljava/lang/String;Lnet/minecraft/world/level/block/entity/BlockEntityType$Builder;)Lnet/minecraft/world/level/block/entity/BlockEntityType; a
net/minecraft/world/level/block/entity/BlockEntityType$BlockEntitySupplier cir$a
net/minecraft/world/level/block/entity/BlockEntityType$Builder cir$b
	factory a
	validBlocks b
	build (Lcom/mojang/datafixers/types/Type;)Lnet/minecraft/world/level/block/entity/BlockEntityType; a
	of (Lnet/minecraft/world/level/block/entity/BlockEntityType$BlockEntitySupplier;[Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/entity/BlockEntityType$Builder; a
net/minecraft/world/level/block/entity/BrewingStandBlockEntity cis
	DATA_BREW_TIME c
	DATA_FUEL_USES d
	FUEL_SLOT h
	FUEL_USES b
	INGREDIENT_SLOT g
	NUM_DATA_VALUES e
	SLOTS_FOR_DOWN j
	SLOTS_FOR_SIDES k
	SLOTS_FOR_UP i
	brewTime m
	dataAccess f
	fuel s
	ingredient r
	items l
	lastPotionCount q
	canPlaceItem (ILnet/minecraft/world/item/ItemStack;)Z b
	canPlaceItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z a
	canTakeItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z b
	clearContent ()V a
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	doBrew (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/NonNullList;)V a
	getContainerSize ()I b
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getPotionBits ()[Z f
	getSlotsForFace (Lnet/minecraft/core/Direction;)[I a
	isBrewable (Lnet/minecraft/core/NonNullList;)Z a
	isEmpty ()Z c
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
	serverTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BrewingStandBlockEntity;)V a
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/level/block/entity/CampfireBlockEntity cit
	BURN_COOL_SPEED a
	NUM_SLOTS b
	cookingProgress d
	cookingTime e
	items c
	clearContent ()V a
	cookTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/CampfireBlockEntity;)V a
	cooldownTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/CampfireBlockEntity;)V b
	dowse ()V f
	getCookableRecipe (Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; a
	getItems ()Lnet/minecraft/core/NonNullList; d
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; Y_
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; Z_
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	markUpdated ()V g
	particleTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/CampfireBlockEntity;)V c
	placeFood (Lnet/minecraft/world/item/ItemStack;I)Z a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
	saveMetadataAndItems (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; c
net/minecraft/world/level/block/entity/ChestBlockEntity ciu
	EVENT_SET_OPEN_COUNT b
	chestLidController i
	items c
	openersCounter f
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	getContainerSize ()I b
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
	getItems ()Lnet/minecraft/core/NonNullList; f
	getOpenCount (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I a
	getOpenNess (F)F a
	lidAnimateTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/ChestBlockEntity;)V a
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	playSound (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/sounds/SoundEvent;)V a
	recheckOpen ()V h
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
	setItems (Lnet/minecraft/core/NonNullList;)V a
	signalOpenCount (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;II)V a
	startOpen (Lnet/minecraft/world/entity/player/Player;)V b_
	stopOpen (Lnet/minecraft/world/entity/player/Player;)V c_
	swapContents (Lnet/minecraft/world/level/block/entity/ChestBlockEntity;Lnet/minecraft/world/level/block/entity/ChestBlockEntity;)V a
	triggerEvent (II)Z a_
net/minecraft/world/level/block/entity/ChestLidController civ
	oOpenness c
	openness b
	shouldBeOpen a
	getOpenness (F)F a
	shouldBeOpen (Z)V a
	tickLid ()V a
net/minecraft/world/level/block/entity/CommandBlockEntity ciw
	auto b
	commandBlock e
	conditionMet c
	powered a
	sendToClient d
	getCommandBlock ()Lnet/minecraft/world/level/BaseCommandBlock; d
	getMode ()Lnet/minecraft/world/level/block/entity/CommandBlockEntity$Mode; t
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; Y_
	isAutomatic ()Z g
	isConditional ()Z u
	isPowered ()Z f
	isSendToClient ()Z s
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	markConditionMet ()Z j
	onModeSwitch ()V h
	onlyOpCanSetNbt ()Z q
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
	scheduleTick ()V v
	setAutomatic (Z)V b
	setPowered (Z)V a
	setSendToClient (Z)V c
	wasConditionMet ()Z i
net/minecraft/world/level/block/entity/CommandBlockEntity$Mode ciw$a
	$VALUES d
	AUTO b
	REDSTONE c
	SEQUENCE a
	$values ()[Lnet/minecraft/world/level/block/entity/CommandBlockEntity$Mode; a
net/minecraft/world/level/block/entity/ComparatorBlockEntity cix
	output a
	getOutputSignal ()I d
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
	setOutputSignal (I)V a
net/minecraft/world/level/block/entity/ConduitBlockEntity ciy
	BLOCK_REFRESH_RATE b
	EFFECT_DURATION c
	KILL_RANGE g
	MIN_ACTIVE_SIZE e
	MIN_KILL_SIZE f
	ROTATION_SPEED d
	VALID_BLOCKS h
	activeRotation i
	destroyTarget m
	destroyTargetUUID q
	effectBlocks l
	isActive j
	isHunting k
	nextAmbientSoundActivation r
	tickCount a
	animationTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/List;Lnet/minecraft/world/entity/Entity;I)V a
	applyEffects (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/List;)V b
	clientTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/ConduitBlockEntity;)V a
	findDestroyTarget (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/UUID;)Lnet/minecraft/world/entity/LivingEntity; a
	getActiveRotation (F)F a
	getDestroyRangeAABB (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/AABB; a
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; Y_
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; Z_
	isActive ()Z d
	isHunting ()Z f
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
	serverTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/ConduitBlockEntity;)V b
	setHunting (Z)V a
	updateClientTarget (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/ConduitBlockEntity;)V a
	updateDestroyTarget (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/List;Lnet/minecraft/world/level/block/entity/ConduitBlockEntity;)V a
	updateHunting (Lnet/minecraft/world/level/block/entity/ConduitBlockEntity;Ljava/util/List;)V a
	updateShape (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/List;)Z a
net/minecraft/world/level/block/entity/ContainerOpenersCounter ciz
	CHECK_TICK_DELAY a
	openCount b
	decrementOpeners (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	getOpenCount (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getOpenerCount ()I a
	incrementOpeners (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	isOwnContainer (Lnet/minecraft/world/entity/player/Player;)Z a
	onClose (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	onOpen (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	openerCountChanged (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;II)V a
	recheckOpeners (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V c
	scheduleRecheck (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V d
net/minecraft/world/level/block/entity/DaylightDetectorBlockEntity cja
net/minecraft/world/level/block/entity/DispenserBlockEntity cjb
	CONTAINER_SIZE b
	RANDOM c
	items f
	addItem (Lnet/minecraft/world/item/ItemStack;)I a
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	getContainerSize ()I b
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
	getItems ()Lnet/minecraft/core/NonNullList; f
	getRandomSlot ()I h
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
	setItems (Lnet/minecraft/core/NonNullList;)V a
net/minecraft/world/level/block/entity/DropperBlockEntity cjc
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
net/minecraft/world/level/block/entity/EnchantmentTableBlockEntity cjd
	RANDOM k
	flip b
	flipA e
	flipT d
	name l
	oFlip c
	oOpen g
	oRot i
	open f
	rot h
	tRot j
	time a
	bookAnimationTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/EnchantmentTableBlockEntity;)V a
	getCustomName ()Lnet/minecraft/network/chat/Component; U
	getName ()Lnet/minecraft/network/chat/Component; S
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
	setCustomName (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/world/level/block/entity/EnderChestBlockEntity cje
	chestLidController a
	openersCounter b
	getOpenNess (F)F a
	lidAnimateTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/EnderChestBlockEntity;)V a
	recheckOpen ()V d
	startOpen (Lnet/minecraft/world/entity/player/Player;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z c
	stopOpen (Lnet/minecraft/world/entity/player/Player;)V b
	triggerEvent (II)Z a_
net/minecraft/world/level/block/entity/FurnaceBlockEntity cjf
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
net/minecraft/world/level/block/entity/Hopper cjg
	ABOVE t_
	INSIDE k_
	SUCK u_
	getLevelX ()D x
	getLevelY ()D z
	getLevelZ ()D A
	getSuckShape ()Lnet/minecraft/world/phys/shapes/VoxelShape; K_
net/minecraft/world/level/block/entity/HopperBlockEntity cjh
	HOPPER_CONTAINER_SIZE f
	MOVE_ITEM_SPEED c
	cooldownTime j
	items i
	tickedGameTime k
	addItem (Lnet/minecraft/world/Container;Lnet/minecraft/world/Container;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/item/ItemStack; a
	addItem (Lnet/minecraft/world/Container;Lnet/minecraft/world/entity/item/ItemEntity;)Z a
	canMergeItems (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	canPlaceItemInContainer (Lnet/minecraft/world/Container;Lnet/minecraft/world/item/ItemStack;ILnet/minecraft/core/Direction;)Z a
	canTakeItemFromContainer (Lnet/minecraft/world/Container;Lnet/minecraft/world/item/ItemStack;ILnet/minecraft/core/Direction;)Z b
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	ejectItems (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/Container;)Z a
	entityInside (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/block/entity/HopperBlockEntity;)V a
	getAttachedContainer (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/Container; b
	getContainerAt (Lnet/minecraft/world/level/Level;DDD)Lnet/minecraft/world/Container; a
	getContainerAt (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/Container; a
	getContainerSize ()I b
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
	getItems ()Lnet/minecraft/core/NonNullList; f
	getItemsAtAndAbove (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/entity/Hopper;)Ljava/util/List; b
	getLevelX ()D x
	getLevelY ()D z
	getLevelZ ()D A
	getSlots (Lnet/minecraft/world/Container;Lnet/minecraft/core/Direction;)Ljava/util/stream/IntStream; a
	getSourceContainer (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/entity/Hopper;)Lnet/minecraft/world/Container; c
	inventoryFull ()Z i
	isEmptyContainer (Lnet/minecraft/world/Container;Lnet/minecraft/core/Direction;)Z c
	isFullContainer (Lnet/minecraft/world/Container;Lnet/minecraft/core/Direction;)Z b
	isOnCooldown ()Z j
	isOnCustomCooldown ()Z s
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	pushItemsTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/HopperBlockEntity;)V a
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
	setCooldown (I)V c
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	setItems (Lnet/minecraft/core/NonNullList;)V a
	suckInItems (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/entity/Hopper;)Z a
	tryMoveInItem (Lnet/minecraft/world/Container;Lnet/minecraft/world/Container;Lnet/minecraft/world/item/ItemStack;ILnet/minecraft/core/Direction;)Lnet/minecraft/world/item/ItemStack; a
	tryMoveItems (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/HopperBlockEntity;Ljava/util/function/BooleanSupplier;)Z a
	tryTakeInItemFromSlot (Lnet/minecraft/world/level/block/entity/Hopper;Lnet/minecraft/world/Container;ILnet/minecraft/core/Direction;)Z a
net/minecraft/world/level/block/entity/JigsawBlockEntity cji
	FINAL_STATE e
	JOINT c
	NAME d
	POOL b
	TARGET a
	finalState j
	joint i
	name f
	pool h
	target g
	generate (Lnet/minecraft/server/level/ServerLevel;IZ)V a
	getFinalState ()Ljava/lang/String; h
	getJoint ()Lnet/minecraft/world/level/block/entity/JigsawBlockEntity$JointType; i
	getName ()Lnet/minecraft/resources/ResourceLocation; d
	getPool ()Lnet/minecraft/resources/ResourceLocation; g
	getTarget ()Lnet/minecraft/resources/ResourceLocation; f
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; Y_
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; Z_
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
	setFinalState (Ljava/lang/String;)V a
	setJoint (Lnet/minecraft/world/level/block/entity/JigsawBlockEntity$JointType;)V a
	setName (Lnet/minecraft/resources/ResourceLocation;)V a
	setPool (Lnet/minecraft/resources/ResourceLocation;)V c
	setTarget (Lnet/minecraft/resources/ResourceLocation;)V b
net/minecraft/world/level/block/entity/JigsawBlockEntity$JointType cji$a
	$VALUES d
	ALIGNED b
	ROLLABLE a
	name c
	$values ()[Lnet/minecraft/world/level/block/entity/JigsawBlockEntity$JointType; b
	byName (Ljava/lang/String;)Ljava/util/Optional; a
	getSerializedName ()Ljava/lang/String; c
	getTranslatedName ()Lnet/minecraft/network/chat/Component; a
net/minecraft/world/level/block/entity/JukeboxBlockEntity cjj
	record a
	clearContent ()V a
	getRecord ()Lnet/minecraft/world/item/ItemStack; d
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
	setRecord (Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/level/block/entity/LecternBlockEntity cjk
	DATA_PAGE a
	NUM_DATA b
	NUM_SLOTS d
	SLOT_BOOK c
	book g
	bookAccess e
	dataAccess f
	page h
	pageCount i
	clearContent ()V a
	createCommandSourceStack (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/commands/CommandSourceStack; a
	getBook ()Lnet/minecraft/world/item/ItemStack; f
	getDisplayName ()Lnet/minecraft/network/chat/Component; B_
	getPage ()I h
	getRedstoneSignal ()I i
	hasBook ()Z g
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	onBookItemRemove ()V j
	onlyOpCanSetNbt ()Z q
	resolveBook (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/item/ItemStack; b
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
	setBook (Lnet/minecraft/world/item/ItemStack;)V a
	setBook (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;)V a
	setPage (I)V a
net/minecraft/world/level/block/entity/LidBlockEntity cjl
	getOpenNess (F)F a
net/minecraft/world/level/block/entity/RandomizableContainerBlockEntity cjm
	LOOT_TABLE_SEED_TAG e
	LOOT_TABLE_TAG d
	lootTable g
	lootTableSeed h
	canOpen (Lnet/minecraft/world/entity/player/Player;)Z d
	clearContent ()V a
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getItems ()Lnet/minecraft/core/NonNullList; f
	isEmpty ()Z c
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	setItems (Lnet/minecraft/core/NonNullList;)V a
	setLootTable (Lnet/minecraft/resources/ResourceLocation;J)V a
	setLootTable (Lnet/minecraft/world/level/BlockGetter;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/resources/ResourceLocation;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	tryLoadLootTable (Lnet/minecraft/nbt/CompoundTag;)Z c
	trySaveLootTable (Lnet/minecraft/nbt/CompoundTag;)Z d
	unpackLootTable (Lnet/minecraft/world/entity/player/Player;)V e
net/minecraft/world/level/block/entity/SculkSensorBlockEntity cjn
	lastVibrationFrequency b
	listener a
	getLastVibrationFrequency ()I f
	getListener ()Lnet/minecraft/world/level/gameevent/vibrations/VibrationListener; d
	getRedstoneStrengthForDistance (II)I b
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	onSignalReceive (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/gameevent/GameEventListener;Lnet/minecraft/world/level/gameevent/GameEvent;I)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
	shouldListen (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/gameevent/GameEventListener;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/entity/Entity;)Z a
net/minecraft/world/level/block/entity/ShulkerBoxBlockEntity cjo
	COLUMNS b
	CONTAINER_SIZE f
	EVENT_SET_OPEN_COUNT i
	ITEMS_TAG m
	MAX_LID_HEIGHT k
	MAX_LID_ROTATION l
	OPENING_TICK_LENGTH j
	ROWS c
	SLOTS q
	animationStatus t
	color w
	itemStacks r
	openCount s
	progress u
	progressOld v
	canPlaceItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z a
	canTakeItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z b
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	doNeighborUpdates (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V d
	getAnimationStatus ()Lnet/minecraft/world/level/block/entity/ShulkerBoxBlockEntity$AnimationStatus; h
	getBoundingBox (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/AABB; a
	getColor ()Lnet/minecraft/world/item/DyeColor; i
	getContainerSize ()I b
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
	getItems ()Lnet/minecraft/core/NonNullList; f
	getProgress (F)F a
	getSlotsForFace (Lnet/minecraft/core/Direction;)[I a
	isClosed ()Z j
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	loadFromTag (Lnet/minecraft/nbt/CompoundTag;)V e
	moveCollidedEntities (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V c
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
	saveToTag (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; f
	setItems (Lnet/minecraft/core/NonNullList;)V a
	startOpen (Lnet/minecraft/world/entity/player/Player;)V b_
	stopOpen (Lnet/minecraft/world/entity/player/Player;)V c_
	tick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/ShulkerBoxBlockEntity;)V a
	triggerEvent (II)Z a_
	updateAnimation (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
net/minecraft/world/level/block/entity/ShulkerBoxBlockEntity$AnimationStatus cjo$a
	$VALUES e
	CLOSED a
	CLOSING d
	OPENED c
	OPENING b
	$values ()[Lnet/minecraft/world/level/block/entity/ShulkerBoxBlockEntity$AnimationStatus; a
net/minecraft/world/level/block/entity/SignBlockEntity cjp
	FILTERED_TEXT_FIELD_NAMES c
	LINES a
	RAW_TEXT_FIELD_NAMES b
	color j
	filteredMessages e
	hasGlowingText k
	isEditable f
	messages d
	playerWhoMayEdit g
	renderMessagedFiltered i
	renderMessages h
	createCommandSourceStack (Lnet/minecraft/server/level/ServerPlayer;)Lnet/minecraft/commands/CommandSourceStack; b
	deserializeTextSafe (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; b
	executeClickCommands (Lnet/minecraft/server/level/ServerPlayer;)Z a
	getColor ()Lnet/minecraft/world/item/DyeColor; g
	getMessage (IZ)Lnet/minecraft/network/chat/Component; a
	getMessages (Z)[Lnet/minecraft/network/chat/Component; c
	getPlayerWhoMayEdit ()Ljava/util/UUID; f
	getRenderMessages (ZLjava/util/function/Function;)[Lnet/minecraft/util/FormattedCharSequence; a
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; Y_
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; Z_
	hasGlowingText ()Z h
	isEditable ()Z d
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	loadLine (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
	markUpdated ()V i
	onlyOpCanSetNbt ()Z q
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
	setAllowedPlayerEditor (Ljava/util/UUID;)V a
	setColor (Lnet/minecraft/world/item/DyeColor;)Z a
	setEditable (Z)V a
	setHasGlowingText (Z)Z b
	setMessage (ILnet/minecraft/network/chat/Component;)V a
	setMessage (ILnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)V a
net/minecraft/world/level/block/entity/SkullBlockEntity cjq
	TAG_SKULL_OWNER a
	isMovingMouth f
	mouthTickCount e
	owner d
	profileCache b
	sessionService c
	dragonHeadAnimation (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/SkullBlockEntity;)V a
	getMouthAnimation (F)F a
	getOwnerProfile ()Lcom/mojang/authlib/GameProfile; d
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; Y_
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; Z_
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
	setOwner (Lcom/mojang/authlib/GameProfile;)V a
	setProfileCache (Lnet/minecraft/server/players/GameProfileCache;)V a
	setSessionService (Lcom/mojang/authlib/minecraft/MinecraftSessionService;)V a
	updateGameprofile (Lcom/mojang/authlib/GameProfile;Ljava/util/function/Consumer;)V a
	updateOwnerProfile ()V f
net/minecraft/world/level/block/entity/SmokerBlockEntity cjr
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	getBurnDuration (Lnet/minecraft/world/item/ItemStack;)I a
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
net/minecraft/world/level/block/entity/SpawnerBlockEntity cjs
	spawner a
	clientTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/SpawnerBlockEntity;)V a
	getSpawner ()Lnet/minecraft/world/level/BaseSpawner; d
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; Y_
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; Z_
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	onlyOpCanSetNbt ()Z q
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
	serverTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/SpawnerBlockEntity;)V b
	triggerEvent (II)Z a_
net/minecraft/world/level/block/entity/StructureBlockEntity cjt
	AUTHOR_TAG c
	MAX_OFFSET_PER_AXIS a
	MAX_SIZE_PER_AXIS b
	SCAN_CORNER_BLOCKS_RANGE d
	author f
	ignoreEntities m
	integrity t
	metaData g
	mirror j
	mode l
	powered q
	rotation k
	seed u
	showAir r
	showBoundingBox s
	structureName e
	structurePos h
	structureSize i
	calculateEnclosingBoundingBox (Lnet/minecraft/core/BlockPos;Ljava/util/stream/Stream;)Ljava/util/Optional; a
	createRandom (J)Ljava/util/Random; b
	createdBy (Lnet/minecraft/world/entity/LivingEntity;)V a
	detectSize ()Z y
	getIntegrity ()F w
	getMetaData ()Ljava/lang/String; t
	getMirror ()Lnet/minecraft/world/level/block/Mirror; j
	getMode ()Lnet/minecraft/world/level/block/state/properties/StructureMode; u
	getRelatedCorners (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	getRotation ()Lnet/minecraft/world/level/block/Rotation; s
	getSeed ()J x
	getShowAir ()Z D
	getShowBoundingBox ()Z E
	getStructureName ()Ljava/lang/String; d
	getStructurePath ()Ljava/lang/String; f
	getStructurePos ()Lnet/minecraft/core/BlockPos; h
	getStructureSize ()Lnet/minecraft/core/Vec3i; i
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; Y_
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; Z_
	hasStructureName ()Z g
	isIgnoreEntities ()Z v
	isPowered ()Z C
	isStructureLoadable ()Z B
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	loadStructure (Lnet/minecraft/server/level/ServerLevel;)Z a
	loadStructure (Lnet/minecraft/server/level/ServerLevel;Z)Z a
	loadStructure (Lnet/minecraft/server/level/ServerLevel;ZLnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate;)Z a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
	saveStructure ()Z z
	saveStructure (Z)Z b
	setIgnoreEntities (Z)V a
	setIntegrity (F)V a
	setMetaData (Ljava/lang/String;)V b
	setMirror (Lnet/minecraft/world/level/block/Mirror;)V a
	setMode (Lnet/minecraft/world/level/block/state/properties/StructureMode;)V a
	setPowered (Z)V c
	setRotation (Lnet/minecraft/world/level/block/Rotation;)V a
	setSeed (J)V a
	setShowAir (Z)V d
	setShowBoundingBox (Z)V e
	setStructureName (Ljava/lang/String;)V a
	setStructureName (Lnet/minecraft/resources/ResourceLocation;)V a
	setStructurePos (Lnet/minecraft/core/BlockPos;)V a
	setStructureSize (Lnet/minecraft/core/Vec3i;)V a
	unloadStructure ()V A
	updateBlockState ()V F
	usedBy (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/level/block/entity/StructureBlockEntity$UpdateType cjt$a
	$VALUES e
	LOAD_AREA c
	SAVE_AREA b
	SCAN_AREA d
	UPDATE_DATA a
	$values ()[Lnet/minecraft/world/level/block/entity/StructureBlockEntity$UpdateType; a
net/minecraft/world/level/block/entity/TheEndGatewayBlockEntity cju
	ATTENTION_INTERVAL d
	COOLDOWN_TIME c
	EVENT_COOLDOWN e
	GATEWAY_HEIGHT_ABOVE_SURFACE f
	LOGGER a
	SPAWN_TIME b
	age g
	exactTeleport j
	exitPortal i
	teleportCooldown h
	beamAnimationTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/TheEndGatewayBlockEntity;)V a
	canEntityTeleport (Lnet/minecraft/world/entity/Entity;)Z a
	findExitPortalXZPosTentative (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/Vec3; b
	findExitPosition (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	findOrCreateValidTeleportPos (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	findTallestBlock (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;IZ)Lnet/minecraft/core/BlockPos; a
	findValidSpawnInChunk (Lnet/minecraft/world/level/chunk/LevelChunk;)Lnet/minecraft/core/BlockPos; a
	getChunk (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/level/chunk/LevelChunk; a
	getCooldownPercent (F)F b
	getParticleAmount ()I g
	getSpawnPercent (F)F a
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; Y_
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; Z_
	isChunkEmpty (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;)Z a
	isCoolingDown ()Z f
	isSpawning ()Z d
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
	setExitPosition (Lnet/minecraft/core/BlockPos;Z)V a
	shouldRenderFace (Lnet/minecraft/core/Direction;)Z a
	spawnGatewayPortal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/EndGatewayConfiguration;)V a
	teleportEntity (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/block/entity/TheEndGatewayBlockEntity;)V a
	teleportTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/TheEndGatewayBlockEntity;)V b
	triggerCooldown (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/TheEndGatewayBlockEntity;)V c
	triggerEvent (II)Z a_
net/minecraft/world/level/block/entity/TheEndPortalBlockEntity cjv
	shouldRenderFace (Lnet/minecraft/core/Direction;)Z a
net/minecraft/world/level/block/entity/TickingBlockEntity cjw
	getPos ()Lnet/minecraft/core/BlockPos; c
	getType ()Ljava/lang/String; d
	isRemoved ()Z b
	tick ()V a
net/minecraft/world/level/block/entity/TrappedChestBlockEntity cjx
	signalOpenCount (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;II)V a
net/minecraft/world/level/block/grower/AbstractMegaTreeGrower cjz
	getConfiguredMegaFeature (Ljava/util/Random;)Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature; a
	growTree (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)Z a
	isTwoByTwoSapling (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;II)Z a
	placeMega (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;II)Z a
net/minecraft/world/level/block/grower/AbstractTreeGrower cka
	getConfiguredFeature (Ljava/util/Random;Z)Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature; a
	growTree (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)Z a
	hasFlowers (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/block/grower/AcaciaTreeGrower ckb
	getConfiguredFeature (Ljava/util/Random;Z)Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature; a
net/minecraft/world/level/block/grower/AzaleaTreeGrower ckc
	getConfiguredFeature (Ljava/util/Random;Z)Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature; a
net/minecraft/world/level/block/grower/BirchTreeGrower ckd
	getConfiguredFeature (Ljava/util/Random;Z)Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature; a
net/minecraft/world/level/block/grower/DarkOakTreeGrower cke
	getConfiguredFeature (Ljava/util/Random;Z)Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature; a
	getConfiguredMegaFeature (Ljava/util/Random;)Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature; a
net/minecraft/world/level/block/grower/JungleTreeGrower ckf
	getConfiguredFeature (Ljava/util/Random;Z)Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature; a
	getConfiguredMegaFeature (Ljava/util/Random;)Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature; a
net/minecraft/world/level/block/grower/OakTreeGrower ckg
	getConfiguredFeature (Ljava/util/Random;Z)Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature; a
net/minecraft/world/level/block/grower/SpruceTreeGrower ckh
	getConfiguredFeature (Ljava/util/Random;Z)Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature; a
	getConfiguredMegaFeature (Ljava/util/Random;)Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature; a
net/minecraft/world/level/block/piston/MovingPistonBlock ckk
	FACING a
	TYPE b
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	destroy (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	getBlockEntity (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/piston/PistonMovingBlockEntity; a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getDrops (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/storage/loot/LootContext$Builder;)Ljava/util/List; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	newMovingBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;ZZ)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/piston/PistonBaseBlock ckl
	DOWN_AABB l
	EAST_AABB g
	EXTENDED b
	NORTH_AABB j
	PLATFORM_THICKNESS f
	SOUTH_AABB i
	TRIGGER_CONTRACT d
	TRIGGER_DROP e
	TRIGGER_EXTEND c
	UP_AABB k
	WEST_AABB h
	isSticky m
	checkIfExtend (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getNeighborSignal (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isPushable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;ZLnet/minecraft/core/Direction;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	moveBlocks (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Z)Z a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	triggerEvent (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;II)Z a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/piston/PistonHeadBlock ckm
	AABB_OFFSET k
	DOWN_AABB j
	DOWN_ARM_AABB F
	EAST_AABB e
	EAST_ARM_AABB I
	EDGE_MAX m
	EDGE_MIN l
	NORTH_AABB h
	NORTH_ARM_AABB H
	PLATFORM d
	SHAPES_LONG R
	SHAPES_SHORT Q
	SHORT c
	SHORT_DOWN_ARM_AABB L
	SHORT_EAST_ARM_AABB O
	SHORT_NORTH_ARM_AABB N
	SHORT_SOUTH_ARM_AABB M
	SHORT_UP_ARM_AABB K
	SHORT_WEST_ARM_AABB P
	SOUTH_AABB g
	SOUTH_ARM_AABB G
	TYPE b
	UP_AABB i
	UP_ARM_AABB n
	WEST_AABB f
	WEST_ARM_AABB J
	calculateShape (Lnet/minecraft/core/Direction;Z)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isFittingBase (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	makeShapes (Z)[Lnet/minecraft/world/phys/shapes/VoxelShape; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/piston/PistonMath ckn
	getMovementArea (Lnet/minecraft/world/phys/AABB;Lnet/minecraft/core/Direction;D)Lnet/minecraft/world/phys/AABB; a
net/minecraft/world/level/block/piston/PistonMovingBlockEntity cko
	NOCLIP h
	PUSH_OFFSET c
	TICKS_TO_EXTEND b
	TICK_MOVEMENT a
	deathTicks l
	direction e
	extending f
	isSourcePiston g
	lastTicked k
	movedState d
	progress i
	progressO j
	finalTick ()V j
	fixEntityWithinPistonBase (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Direction;D)V a
	getCollisionRelatedBlockState ()Lnet/minecraft/world/level/block/state/BlockState; t
	getCollisionShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getDirection ()Lnet/minecraft/core/Direction; f
	getExtendedProgress (F)F e
	getLastTicked ()J s
	getMovedState ()Lnet/minecraft/world/level/block/state/BlockState; i
	getMovement (Lnet/minecraft/world/phys/AABB;Lnet/minecraft/core/Direction;Lnet/minecraft/world/phys/AABB;)D a
	getMovementDirection ()Lnet/minecraft/core/Direction; h
	getProgress (F)F a
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; Z_
	getXOff (F)F b
	getYOff (F)F c
	getZOff (F)F d
	isExtending ()Z d
	isSourcePiston ()Z g
	isStickyForEntities ()Z u
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	matchesStickyCritera (Lnet/minecraft/world/phys/AABB;Lnet/minecraft/world/entity/Entity;)Z a
	moveByPositionAndProgress (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/AABB;Lnet/minecraft/world/level/block/piston/PistonMovingBlockEntity;)Lnet/minecraft/world/phys/AABB; a
	moveCollidedEntities (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;FLnet/minecraft/world/level/block/piston/PistonMovingBlockEntity;)V a
	moveEntityByPiston (Lnet/minecraft/core/Direction;Lnet/minecraft/world/entity/Entity;DLnet/minecraft/core/Direction;)V a
	moveStuckEntities (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;FLnet/minecraft/world/level/block/piston/PistonMovingBlockEntity;)V b
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
	tick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/piston/PistonMovingBlockEntity;)V a
net/minecraft/world/level/block/piston/PistonStructureResolver ckp
	MAX_PUSH_DEPTH a
	extending d
	level b
	pistonDirection i
	pistonPos c
	pushDirection f
	startPos e
	toDestroy h
	toPush g
	addBlockLine (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	addBranchingBlocks (Lnet/minecraft/core/BlockPos;)Z a
	canStickToEachOther (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	getPushDirection ()Lnet/minecraft/core/Direction; b
	getToDestroy ()Ljava/util/List; d
	getToPush ()Ljava/util/List; c
	isSticky (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	reorderListAtCollision (II)V a
	resolve ()Z a
net/minecraft/world/level/block/state/BlockBehaviour ckr
	UPDATE_SHAPE_ORDER aF
	drops aQ
	dynamicShape aO
	explosionResistance aI
	friction aL
	hasCollision aH
	isRandomlyTicking aJ
	jumpFactor aN
	material aG
	properties aP
	soundType aK
	speedFactor aM
	asBlock ()Lnet/minecraft/world/level/block/Block; p
	asItem ()Lnet/minecraft/world/item/Item; k
	attack (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	defaultDestroyTime ()F t
	defaultMaterialColor ()Lnet/minecraft/world/level/material/MaterialColor; s
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getBlockSupportShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; f
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getDestroyProgress (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getDrops (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/storage/loot/LootContext$Builder;)Ljava/util/List; a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getInteractionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getLightBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I g
	getLootTable ()Lnet/minecraft/resources/ResourceLocation; r
	getMaxHorizontalOffset ()F U_
	getMaxVerticalOffset ()F X_
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getOcclusionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; b_
	getOffsetType ()Lnet/minecraft/world/level/block/state/BlockBehaviour$OffsetType; S_
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; d
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getSeed (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)J a
	getShadeBrightness (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getVisualShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	isCollisionShapeFullBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a_
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	skipRendering (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	spawnAfterBreak (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	triggerEvent (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;II)Z a
	updateIndirectNeighbourShapes (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;II)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/state/BlockBehaviour$BlockStateBase ckr$a
	cache a
	canOcclude m
	destroySpeed k
	emissiveRendering r
	hasPostProcess q
	isAir h
	isRedstoneConductor n
	isSuffocating o
	isViewBlocking p
	lightEmission b
	material i
	materialColor j
	requiresCorrectToolForDrops l
	useShapeForLightOcclusion g
	asState ()Lnet/minecraft/world/level/block/state/BlockState; q
	attack (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	canBeReplaced (Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	canBeReplaced (Lnet/minecraft/world/level/material/Fluid;)Z a
	canOcclude ()Z l
	canSurvive (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	emissiveRendering (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z e
	entityCanStandOn (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)Z a
	entityCanStandOnFace (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Direction;)Z a
	entityInside (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getBlock ()Lnet/minecraft/world/level/block/Block; b
	getBlockSupportShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; l
	getCollisionShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; k
	getCollisionShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getDestroyProgress (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getDestroySpeed (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F h
	getDirectSignal (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I c
	getDrops (Lnet/minecraft/world/level/storage/loot/LootContext$Builder;)Ljava/util/List; a
	getFaceOcclusionShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getFluidState ()Lnet/minecraft/world/level/material/FluidState; n
	getInteractionShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; m
	getLightBlock (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I b
	getLightEmission ()I f
	getMapColor (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/MaterialColor; d
	getMaterial ()Lnet/minecraft/world/level/material/Material; c
	getMenuProvider (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getOcclusionShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getOffset (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/Vec3; n
	getPistonPushReaction ()Lnet/minecraft/world/level/material/PushReaction; k
	getRenderShape ()Lnet/minecraft/world/level/block/RenderShape; h
	getSeed (Lnet/minecraft/core/BlockPos;)J a
	getShadeBrightness (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F f
	getShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; j
	getShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignal (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getSoundType ()Lnet/minecraft/world/level/block/SoundType; p
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	getVisualShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	hasAnalogOutputSignal ()Z j
	hasBlockEntity ()Z m
	hasLargeCollisionShape ()Z d
	hasPostProcess (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z q
	initCache ()V a
	is (Lnet/minecraft/tags/Tag;)Z a
	is (Lnet/minecraft/tags/Tag;Ljava/util/function/Predicate;)Z a
	is (Lnet/minecraft/world/level/block/Block;)Z a
	isAir ()Z g
	isCollisionShapeFullBlock (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z r
	isFaceSturdy (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z d
	isFaceSturdy (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/SupportType;)Z a
	isPathfindable (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isRandomlyTicking ()Z o
	isRedstoneConductor (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z g
	isSignalSource ()Z i
	isSolidRender (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z i
	isSuffocating (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z o
	isValidSpawn (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/EntityType;)Z a
	isViewBlocking (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z p
	mirror (Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	onRemove (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	propagatesSkylightDown (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	randomTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	requiresCorrectToolForDrops ()Z r
	rotate (Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	skipRendering (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	spawnAfterBreak (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)V a
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	triggerEvent (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;II)Z a
	updateIndirectNeighbourShapes (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;I)V b
	updateIndirectNeighbourShapes (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;II)V b
	updateNeighbourShapes (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;I)V a
	updateNeighbourShapes (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;II)V a
	updateShape (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
	useShapeForLightOcclusion ()Z e
net/minecraft/world/level/block/state/BlockBehaviour$BlockStateBase$Cache ckr$a$a
	DIRECTIONS e
	SUPPORT_TYPE_COUNT f
	collisionShape b
	faceSturdy j
	isCollisionShapeFullBlock d
	largeCollisionShape c
	lightBlock h
	occlusionShapes i
	propagatesSkylightDown g
	solidRender a
	getFaceSupportIndex (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/SupportType;)I b
	isFaceSturdy (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/SupportType;)Z a
net/minecraft/world/level/block/state/BlockBehaviour$OffsetType ckr$b
	$VALUES d
	NONE a
	XYZ c
	XZ b
	$values ()[Lnet/minecraft/world/level/block/state/BlockBehaviour$OffsetType; a
net/minecraft/world/level/block/state/BlockBehaviour$Properties ckr$c
	canOcclude n
	destroyTime g
	drops m
	dynamicShape v
	emissiveRendering u
	explosionResistance f
	friction j
	hasCollision c
	hasPostProcess t
	isAir o
	isRandomlyTicking i
	isRedstoneConductor q
	isSuffocating r
	isValidSpawn p
	isViewBlocking s
	jumpFactor l
	lightEmission e
	material a
	materialColor b
	requiresCorrectToolForDrops h
	soundType d
	speedFactor k
	air ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; g
	color (Lnet/minecraft/world/level/material/MaterialColor;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	copy (Lnet/minecraft/world/level/block/state/BlockBehaviour;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	destroyTime (F)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; e
	dropsLike (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	dynamicShape ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; e
	emissiveRendering (Lnet/minecraft/world/level/block/state/BlockBehaviour$StatePredicate;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; e
	explosionResistance (F)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; f
	friction (F)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	hasPostProcess (Lnet/minecraft/world/level/block/state/BlockBehaviour$StatePredicate;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; d
	instabreak ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; c
	isRedstoneConductor (Lnet/minecraft/world/level/block/state/BlockBehaviour$StatePredicate;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	isSuffocating (Lnet/minecraft/world/level/block/state/BlockBehaviour$StatePredicate;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; b
	isValidSpawn (Lnet/minecraft/world/level/block/state/BlockBehaviour$StateArgumentPredicate;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	isViewBlocking (Lnet/minecraft/world/level/block/state/BlockBehaviour$StatePredicate;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; c
	jumpFactor (F)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; c
	lightLevel (Ljava/util/function/ToIntFunction;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	noCollission ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	noDrops ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; f
	noOcclusion ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; b
	of (Lnet/minecraft/world/level/material/Material;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	of (Lnet/minecraft/world/level/material/Material;Ljava/util/function/Function;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	of (Lnet/minecraft/world/level/material/Material;Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	of (Lnet/minecraft/world/level/material/Material;Lnet/minecraft/world/level/material/MaterialColor;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	randomTicks ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; d
	requiresCorrectToolForDrops ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; h
	sound (Lnet/minecraft/world/level/block/SoundType;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	speedFactor (F)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; b
	strength (F)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; d
	strength (FF)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
net/minecraft/world/level/block/state/BlockBehaviour$StateArgumentPredicate ckr$d
net/minecraft/world/level/block/state/BlockBehaviour$StatePredicate ckr$e
net/minecraft/world/level/block/state/BlockState cks
	CODEC b
	asState ()Lnet/minecraft/world/level/block/state/BlockState; q
net/minecraft/world/level/block/state/StateDefinition ckt
	NAME_PATTERN a
	owner b
	propertiesByName c
	states d
	any ()Lnet/minecraft/world/level/block/state/StateHolder; b
	appendPropertyCodec (Lcom/mojang/serialization/MapCodec;Ljava/util/function/Supplier;Ljava/lang/String;Lnet/minecraft/world/level/block/state/properties/Property;)Lcom/mojang/serialization/MapCodec; a
	getOwner ()Ljava/lang/Object; c
	getPossibleStates ()Lcom/google/common/collect/ImmutableList; a
	getProperties ()Ljava/util/Collection; d
	getProperty (Ljava/lang/String;)Lnet/minecraft/world/level/block/state/properties/Property; a
net/minecraft/world/level/block/state/StateDefinition$Builder ckt$a
	owner a
	properties b
	add ([Lnet/minecraft/world/level/block/state/properties/Property;)Lnet/minecraft/world/level/block/state/StateDefinition$Builder; a
	create (Ljava/util/function/Function;Lnet/minecraft/world/level/block/state/StateDefinition$Factory;)Lnet/minecraft/world/level/block/state/StateDefinition; a
	validateProperty (Lnet/minecraft/world/level/block/state/properties/Property;)V a
net/minecraft/world/level/block/state/StateDefinition$Factory ckt$b
net/minecraft/world/level/block/state/StateHolder cku
	NAME_TAG c
	PROPERTIES_TAG d
	PROPERTY_ENTRY_TO_STRING_FUNCTION a
	neighbours g
	owner e
	propertiesCodec f
	values b
	codec (Lcom/mojang/serialization/Codec;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; a
	cycle (Lnet/minecraft/world/level/block/state/properties/Property;)Ljava/lang/Object; a
	findNextInCollection (Ljava/util/Collection;Ljava/lang/Object;)Ljava/lang/Object; a
	getOptionalValue (Lnet/minecraft/world/level/block/state/properties/Property;)Ljava/util/Optional; d
	getProperties ()Ljava/util/Collection; s
	getValue (Lnet/minecraft/world/level/block/state/properties/Property;)Ljava/lang/Comparable; c
	getValues ()Lcom/google/common/collect/ImmutableMap; t
	hasProperty (Lnet/minecraft/world/level/block/state/properties/Property;)Z b
	makeNeighbourValues (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)Ljava/util/Map; b
	populateNeighbours (Ljava/util/Map;)V a
	setValue (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)Ljava/lang/Object; a
net/minecraft/world/level/block/state/pattern/BlockInWorld ckw
	cachedEntity f
	entity e
	level a
	loadChunks c
	pos b
	state d
	getEntity ()Lnet/minecraft/world/level/block/entity/BlockEntity; b
	getLevel ()Lnet/minecraft/world/level/LevelReader; c
	getPos ()Lnet/minecraft/core/BlockPos; d
	getState ()Lnet/minecraft/world/level/block/state/BlockState; a
	hasState (Ljava/util/function/Predicate;)Ljava/util/function/Predicate; a
net/minecraft/world/level/block/state/pattern/BlockPattern ckx
	depth b
	height c
	pattern a
	width d
	createLevelCache (Lnet/minecraft/world/level/LevelReader;Z)Lcom/google/common/cache/LoadingCache; a
	find (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/pattern/BlockPattern$BlockPatternMatch; a
	getDepth ()I a
	getHeight ()I b
	getPattern ()[[[Ljava/util/function/Predicate; d
	getWidth ()I c
	matches (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;Lcom/google/common/cache/LoadingCache;)Lnet/minecraft/world/level/block/state/pattern/BlockPattern$BlockPatternMatch; a
	matches (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/block/state/pattern/BlockPattern$BlockPatternMatch; a
	translateAndRotate (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;III)Lnet/minecraft/core/BlockPos; a
net/minecraft/world/level/block/state/pattern/BlockPattern$BlockCacheLoader ckx$a
	level a
	loadChunks b
	load (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/pattern/BlockInWorld; a
net/minecraft/world/level/block/state/pattern/BlockPattern$BlockPatternMatch ckx$b
	cache d
	depth g
	forwards b
	frontTopLeft a
	height f
	up c
	width e
	getBlock (III)Lnet/minecraft/world/level/block/state/pattern/BlockInWorld; a
	getDepth ()I f
	getForwards ()Lnet/minecraft/core/Direction; b
	getFrontTopLeft ()Lnet/minecraft/core/BlockPos; a
	getHeight ()I e
	getUp ()Lnet/minecraft/core/Direction; c
	getWidth ()I d
net/minecraft/world/level/block/state/pattern/BlockPatternBuilder cky
	COMMA_JOINED a
	height d
	lookup c
	pattern b
	width e
	aisle ([Ljava/lang/String;)Lnet/minecraft/world/level/block/state/pattern/BlockPatternBuilder; a
	build ()Lnet/minecraft/world/level/block/state/pattern/BlockPattern; b
	createPattern ()[[[Ljava/util/function/Predicate; c
	ensureAllCharactersMatched ()V d
	start ()Lnet/minecraft/world/level/block/state/pattern/BlockPatternBuilder; a
	where (CLjava/util/function/Predicate;)Lnet/minecraft/world/level/block/state/pattern/BlockPatternBuilder; a
net/minecraft/world/level/block/state/predicate/BlockMaterialPredicate cla
	AIR a
	material b
	forMaterial (Lnet/minecraft/world/level/material/Material;)Lnet/minecraft/world/level/block/state/predicate/BlockMaterialPredicate; a
	test (Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/block/state/predicate/BlockPredicate clb
	block a
	forBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/state/predicate/BlockPredicate; a
	test (Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/block/state/predicate/BlockStatePredicate clc
	ANY a
	definition b
	properties c
	applies (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/properties/Property;Ljava/util/function/Predicate;)Z a
	forBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/state/predicate/BlockStatePredicate; a
	test (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	where (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/util/function/Predicate;)Lnet/minecraft/world/level/block/state/predicate/BlockStatePredicate; a
net/minecraft/world/level/block/state/properties/AttachFace cle
	$VALUES e
	CEILING c
	FLOOR a
	WALL b
	name d
	$values ()[Lnet/minecraft/world/level/block/state/properties/AttachFace; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/BambooLeaves clf
	$VALUES e
	LARGE c
	NONE a
	SMALL b
	name d
	$values ()[Lnet/minecraft/world/level/block/state/properties/BambooLeaves; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/BedPart clg
	$VALUES d
	FOOT b
	HEAD a
	name c
	$values ()[Lnet/minecraft/world/level/block/state/properties/BedPart; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/BellAttachType clh
	$VALUES f
	CEILING b
	DOUBLE_WALL d
	FLOOR a
	SINGLE_WALL c
	name e
	$values ()[Lnet/minecraft/world/level/block/state/properties/BellAttachType; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/BlockStateProperties cli
	AGE_1 am
	AGE_15 ar
	AGE_2 an
	AGE_25 as
	AGE_3 ao
	AGE_5 ap
	AGE_7 aq
	ATTACHED a
	ATTACH_FACE R
	AXIS G
	BAMBOO_LEAVES bg
	BED_PART aX
	BELL_ATTACHMENT S
	BERRIES E
	BITES at
	BOTTOM b
	CANDLES au
	CHEST_TYPE aY
	CONDITIONAL c
	DELAY av
	DISARMED d
	DISTANCE ax
	DOOR_HINGE ba
	DOUBLE_BLOCK_HALF ab
	DOWN I
	DRAG e
	DRIPSTONE_THICKNESS bj
	EAST K
	EAST_REDSTONE X
	EAST_WALL T
	EGGS ay
	ENABLED f
	EXTENDED g
	EYE h
	FACING N
	FACING_HOPPER O
	FALLING i
	HALF ac
	HANGING j
	HAS_BOOK o
	HAS_BOTTLE_0 k
	HAS_BOTTLE_1 l
	HAS_BOTTLE_2 m
	HAS_RECORD n
	HATCH az
	HORIZONTAL_AXIS F
	HORIZONTAL_FACING P
	INVERTED p
	IN_WALL q
	LAYERS aA
	LEVEL aK
	LEVEL_CAULDRON aF
	LEVEL_COMPOSTER aG
	LEVEL_FLOWING aH
	LEVEL_HONEY aI
	LIT r
	LOCKED s
	MAX_AGE_1 af
	MAX_AGE_15 ak
	MAX_AGE_2 ag
	MAX_AGE_25 al
	MAX_AGE_3 ah
	MAX_AGE_5 ai
	MAX_AGE_7 aj
	MAX_DISTANCE aw
	MAX_LEVEL_15 aJ
	MAX_LEVEL_3 aD
	MAX_LEVEL_8 aE
	MAX_RESPAWN_ANCHOR_CHARGES aT
	MAX_ROTATIONS_16 aV
	MIN_LEVEL aB
	MIN_LEVEL_CAULDRON aC
	MIN_RESPAWN_ANCHOR_CHARGES aS
	MODE_COMPARATOR aZ
	MOISTURE aL
	NORTH J
	NORTH_REDSTONE Y
	NORTH_WALL U
	NOTE aM
	NOTEBLOCK_INSTRUMENT bb
	OCCUPIED t
	OPEN u
	ORIENTATION Q
	PERSISTENT v
	PICKLES aN
	PISTON_TYPE bc
	POWER aO
	POWERED w
	RAIL_SHAPE ad
	RAIL_SHAPE_STRAIGHT ae
	RESPAWN_ANCHOR_CHARGES aU
	ROTATION_16 aW
	SCULK_SENSOR_PHASE bk
	SHORT x
	SIGNAL_FIRE y
	SLAB_TYPE bd
	SNOWY z
	SOUTH L
	SOUTH_REDSTONE Z
	SOUTH_WALL V
	STABILITY_DISTANCE aR
	STABILITY_MAX_DISTANCE aQ
	STAGE aP
	STAIRS_SHAPE be
	STRUCTUREBLOCK_MODE bf
	TILT bh
	TRIGGERED A
	UNSTABLE B
	UP H
	VERTICAL_DIRECTION bi
	VINE_END D
	WATERLOGGED C
	WEST M
	WEST_REDSTONE aa
	WEST_WALL W
net/minecraft/world/level/block/state/properties/BooleanProperty clj
	values a
	create (Ljava/lang/String;)Lnet/minecraft/world/level/block/state/properties/BooleanProperty; a
	generateHashCode ()I b
	getName (Ljava/lang/Boolean;)Ljava/lang/String; a
	getName (Ljava/lang/Comparable;)Ljava/lang/String; a
	getPossibleValues ()Ljava/util/Collection; a
	getValue (Ljava/lang/String;)Ljava/util/Optional; b
net/minecraft/world/level/block/state/properties/ChestType clk
	$VALUES g
	BY_ID d
	LEFT b
	RIGHT c
	SINGLE a
	name e
	opposite f
	$values ()[Lnet/minecraft/world/level/block/state/properties/ChestType; b
	getOpposite ()Lnet/minecraft/world/level/block/state/properties/ChestType; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/ComparatorMode cll
	$VALUES d
	COMPARE a
	SUBTRACT b
	name c
	$values ()[Lnet/minecraft/world/level/block/state/properties/ComparatorMode; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/DirectionProperty clm
	create (Ljava/lang/String;)Lnet/minecraft/world/level/block/state/properties/DirectionProperty; a
	create (Ljava/lang/String;Ljava/util/Collection;)Lnet/minecraft/world/level/block/state/properties/DirectionProperty; a
	create (Ljava/lang/String;Ljava/util/function/Predicate;)Lnet/minecraft/world/level/block/state/properties/DirectionProperty; a
	create (Ljava/lang/String;[Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/block/state/properties/DirectionProperty; a
net/minecraft/world/level/block/state/properties/DoorHingeSide cln
	$VALUES c
	LEFT a
	RIGHT b
	$values ()[Lnet/minecraft/world/level/block/state/properties/DoorHingeSide; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/DoubleBlockHalf clo
	$VALUES c
	LOWER b
	UPPER a
	$values ()[Lnet/minecraft/world/level/block/state/properties/DoubleBlockHalf; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/DripstoneThickness clp
	$VALUES g
	BASE e
	FRUSTUM c
	MIDDLE d
	TIP b
	TIP_MERGE a
	name f
	$values ()[Lnet/minecraft/world/level/block/state/properties/DripstoneThickness; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/EnumProperty clq
	names b
	values a
	create (Ljava/lang/String;Ljava/lang/Class;)Lnet/minecraft/world/level/block/state/properties/EnumProperty; a
	create (Ljava/lang/String;Ljava/lang/Class;Ljava/util/Collection;)Lnet/minecraft/world/level/block/state/properties/EnumProperty; a
	create (Ljava/lang/String;Ljava/lang/Class;Ljava/util/function/Predicate;)Lnet/minecraft/world/level/block/state/properties/EnumProperty; a
	create (Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Enum;)Lnet/minecraft/world/level/block/state/properties/EnumProperty; a
	generateHashCode ()I b
	getName (Ljava/lang/Comparable;)Ljava/lang/String; a
	getName (Ljava/lang/Enum;)Ljava/lang/String; a
	getPossibleValues ()Ljava/util/Collection; a
	getValue (Ljava/lang/String;)Ljava/util/Optional; b
net/minecraft/world/level/block/state/properties/Half clr
	$VALUES d
	BOTTOM b
	TOP a
	name c
	$values ()[Lnet/minecraft/world/level/block/state/properties/Half; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/IntegerProperty cls
	values a
	create (Ljava/lang/String;II)Lnet/minecraft/world/level/block/state/properties/IntegerProperty; a
	generateHashCode ()I b
	getName (Ljava/lang/Comparable;)Ljava/lang/String; a
	getName (Ljava/lang/Integer;)Ljava/lang/String; a
	getPossibleValues ()Ljava/util/Collection; a
	getValue (Ljava/lang/String;)Ljava/util/Optional; b
net/minecraft/world/level/block/state/properties/NoteBlockInstrument clt
	$VALUES s
	BANJO o
	BASEDRUM b
	BASS e
	BELL g
	BIT n
	CHIME i
	COW_BELL l
	DIDGERIDOO m
	FLUTE f
	GUITAR h
	HARP a
	HAT d
	IRON_XYLOPHONE k
	PLING p
	SNARE c
	XYLOPHONE j
	name q
	soundEvent r
	$values ()[Lnet/minecraft/world/level/block/state/properties/NoteBlockInstrument; b
	byState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/properties/NoteBlockInstrument; a
	getSerializedName ()Ljava/lang/String; c
	getSoundEvent ()Lnet/minecraft/sounds/SoundEvent; a
net/minecraft/world/level/block/state/properties/PistonType clu
	$VALUES d
	DEFAULT a
	STICKY b
	name c
	$values ()[Lnet/minecraft/world/level/block/state/properties/PistonType; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/Property clv
	clazz a
	codec d
	hashCode c
	name b
	valueCodec e
	codec ()Lcom/mojang/serialization/Codec; d
	generateHashCode ()I b
	getAllValues ()Ljava/util/stream/Stream; c
	getName ()Ljava/lang/String; f
	getName (Ljava/lang/Comparable;)Ljava/lang/String; a
	getPossibleValues ()Ljava/util/Collection; a
	getValue (Ljava/lang/String;)Ljava/util/Optional; b
	getValueClass ()Ljava/lang/Class; g
	parseValue (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/world/level/block/state/StateHolder;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; a
	value (Ljava/lang/Comparable;)Lnet/minecraft/world/level/block/state/properties/Property$Value; b
	value (Lnet/minecraft/world/level/block/state/StateHolder;)Lnet/minecraft/world/level/block/state/properties/Property$Value; a
	valueCodec ()Lcom/mojang/serialization/Codec; e
net/minecraft/world/level/block/state/properties/Property$Value clv$a
	property a
	value b
	getProperty ()Lnet/minecraft/world/level/block/state/properties/Property; a
	value ()Ljava/lang/Comparable; b
net/minecraft/world/level/block/state/properties/RailShape clw
	$VALUES l
	ASCENDING_EAST c
	ASCENDING_NORTH e
	ASCENDING_SOUTH f
	ASCENDING_WEST d
	EAST_WEST b
	NORTH_EAST j
	NORTH_SOUTH a
	NORTH_WEST i
	SOUTH_EAST g
	SOUTH_WEST h
	name k
	$values ()[Lnet/minecraft/world/level/block/state/properties/RailShape; d
	getName ()Ljava/lang/String; a
	getSerializedName ()Ljava/lang/String; c
	isAscending ()Z b
net/minecraft/world/level/block/state/properties/RedstoneSide clx
	$VALUES e
	NONE c
	SIDE b
	UP a
	name d
	$values ()[Lnet/minecraft/world/level/block/state/properties/RedstoneSide; b
	getSerializedName ()Ljava/lang/String; c
	isConnected ()Z a
net/minecraft/world/level/block/state/properties/SculkSensorPhase cly
	$VALUES e
	ACTIVE b
	COOLDOWN c
	INACTIVE a
	name d
	$values ()[Lnet/minecraft/world/level/block/state/properties/SculkSensorPhase; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/SlabType clz
	$VALUES e
	BOTTOM b
	DOUBLE c
	TOP a
	name d
	$values ()[Lnet/minecraft/world/level/block/state/properties/SlabType; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/StairsShape cma
	$VALUES g
	INNER_LEFT b
	INNER_RIGHT c
	OUTER_LEFT d
	OUTER_RIGHT e
	STRAIGHT a
	name f
	$values ()[Lnet/minecraft/world/level/block/state/properties/StairsShape; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/StructureMode cmb
	$VALUES g
	CORNER c
	DATA d
	LOAD b
	SAVE a
	displayName f
	name e
	$values ()[Lnet/minecraft/world/level/block/state/properties/StructureMode; b
	getDisplayName ()Lnet/minecraft/network/chat/Component; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/Tilt cmc
	$VALUES g
	FULL d
	NONE a
	PARTIAL c
	UNSTABLE b
	causesVibration f
	name e
	$values ()[Lnet/minecraft/world/level/block/state/properties/Tilt; b
	causesVibration ()Z a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/WallSide cmd
	$VALUES e
	LOW b
	NONE a
	TALL c
	name d
	$values ()[Lnet/minecraft/world/level/block/state/properties/WallSide; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/WoodType cme
	ACACIA d
	BIRCH c
	CRIMSON g
	DARK_OAK f
	JUNGLE e
	OAK a
	SPRUCE b
	VALUES i
	WARPED h
	name j
	name ()Ljava/lang/String; b
	register (Lnet/minecraft/world/level/block/state/properties/WoodType;)Lnet/minecraft/world/level/block/state/properties/WoodType; a
	values ()Ljava/util/stream/Stream; a
net/minecraft/world/level/border/BorderChangeListener cmg
	onBorderCenterSet (Lnet/minecraft/world/level/border/WorldBorder;DD)V a
	onBorderSetDamagePerBlock (Lnet/minecraft/world/level/border/WorldBorder;D)V b
	onBorderSetDamageSafeZOne (Lnet/minecraft/world/level/border/WorldBorder;D)V c
	onBorderSetWarningBlocks (Lnet/minecraft/world/level/border/WorldBorder;I)V b
	onBorderSetWarningTime (Lnet/minecraft/world/level/border/WorldBorder;I)V a
	onBorderSizeLerping (Lnet/minecraft/world/level/border/WorldBorder;DDJ)V a
	onBorderSizeSet (Lnet/minecraft/world/level/border/WorldBorder;D)V a
net/minecraft/world/level/border/BorderChangeListener$DelegateBorderChangeListener cmg$a
	worldBorder a
	onBorderCenterSet (Lnet/minecraft/world/level/border/WorldBorder;DD)V a
	onBorderSetDamagePerBlock (Lnet/minecraft/world/level/border/WorldBorder;D)V b
	onBorderSetDamageSafeZOne (Lnet/minecraft/world/level/border/WorldBorder;D)V c
	onBorderSetWarningBlocks (Lnet/minecraft/world/level/border/WorldBorder;I)V b
	onBorderSetWarningTime (Lnet/minecraft/world/level/border/WorldBorder;I)V a
	onBorderSizeLerping (Lnet/minecraft/world/level/border/WorldBorder;DDJ)V a
	onBorderSizeSet (Lnet/minecraft/world/level/border/WorldBorder;D)V a
net/minecraft/world/level/border/BorderStatus cmh
	$VALUES e
	GROWING a
	SHRINKING b
	STATIONARY c
	color d
	$values ()[Lnet/minecraft/world/level/border/BorderStatus; b
	getColor ()I a
net/minecraft/world/level/border/WorldBorder cmi
	DEFAULT_SETTINGS d
	MAX_SIZE c
	absoluteMaxSize j
	centerX h
	centerZ i
	damagePerBlock b
	damageSafeZone e
	extent k
	listeners a
	warningBlocks g
	warningTime f
	addListener (Lnet/minecraft/world/level/border/BorderChangeListener;)V a
	applySettings (Lnet/minecraft/world/level/border/WorldBorder$Settings;)V a
	createSettings ()Lnet/minecraft/world/level/border/WorldBorder$Settings; t
	getAbsoluteMaxSize ()I m
	getCenterX ()D a
	getCenterZ ()D b
	getCollisionShape ()Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getDamagePerBlock ()D o
	getDamageSafeZone ()D n
	getDistanceToBorder (DD)D b
	getDistanceToBorder (Lnet/minecraft/world/entity/Entity;)D a
	getLerpRemainingTime ()J j
	getLerpSpeed ()D p
	getLerpTarget ()D k
	getListeners ()Ljava/util/List; l
	getMaxX ()D g
	getMaxZ ()D h
	getMinX ()D e
	getMinZ ()D f
	getSize ()D i
	getStatus ()Lnet/minecraft/world/level/border/BorderStatus; d
	getWarningBlocks ()I r
	getWarningTime ()I q
	isWithinBounds (DD)Z a
	isWithinBounds (Lnet/minecraft/core/BlockPos;)Z a
	isWithinBounds (Lnet/minecraft/world/level/ChunkPos;)Z a
	isWithinBounds (Lnet/minecraft/world/phys/AABB;)Z a
	lerpSizeBetween (DDJ)V a
	removeListener (Lnet/minecraft/world/level/border/BorderChangeListener;)V b
	setAbsoluteMaxSize (I)V a
	setCenter (DD)V c
	setDamagePerBlock (D)V c
	setDamageSafeZone (D)V b
	setSize (D)V a
	setWarningBlocks (I)V c
	setWarningTime (I)V b
	tick ()V s
net/minecraft/world/level/border/WorldBorder$BorderExtent cmi$a
	getCollisionShape ()Lnet/minecraft/world/phys/shapes/VoxelShape; m
	getLerpRemainingTime ()J g
	getLerpSpeed ()D f
	getLerpTarget ()D h
	getMaxX ()D b
	getMaxZ ()D d
	getMinX ()D a
	getMinZ ()D c
	getSize ()D e
	getStatus ()Lnet/minecraft/world/level/border/BorderStatus; i
	onAbsoluteMaxSizeChange ()V j
	onCenterChange ()V k
	update ()Lnet/minecraft/world/level/border/WorldBorder$BorderExtent; l
net/minecraft/world/level/border/WorldBorder$MovingBorderExtent cmi$b
	from b
	lerpBegin e
	lerpDuration f
	lerpEnd d
	to c
	getCollisionShape ()Lnet/minecraft/world/phys/shapes/VoxelShape; m
	getLerpRemainingTime ()J g
	getLerpSpeed ()D f
	getLerpTarget ()D h
	getMaxX ()D b
	getMaxZ ()D d
	getMinX ()D a
	getMinZ ()D c
	getSize ()D e
	getStatus ()Lnet/minecraft/world/level/border/BorderStatus; i
	onAbsoluteMaxSizeChange ()V j
	onCenterChange ()V k
	update ()Lnet/minecraft/world/level/border/WorldBorder$BorderExtent; l
net/minecraft/world/level/border/WorldBorder$Settings cmi$c
	centerX a
	centerZ b
	damagePerBlock c
	safeZone d
	size g
	sizeLerpTarget i
	sizeLerpTime h
	warningBlocks e
	warningTime f
	getCenterX ()D a
	getCenterZ ()D b
	getDamagePerBlock ()D c
	getSafeZone ()D d
	getSize ()D g
	getSizeLerpTarget ()D i
	getSizeLerpTime ()J h
	getWarningBlocks ()I e
	getWarningTime ()I f
	read (Lcom/mojang/serialization/DynamicLike;Lnet/minecraft/world/level/border/WorldBorder$Settings;)Lnet/minecraft/world/level/border/WorldBorder$Settings; a
	write (Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/world/level/border/WorldBorder$StaticBorderExtent cmi$d
	maxX e
	maxZ f
	minX c
	minZ d
	shape g
	size b
	getCollisionShape ()Lnet/minecraft/world/phys/shapes/VoxelShape; m
	getLerpRemainingTime ()J g
	getLerpSpeed ()D f
	getLerpTarget ()D h
	getMaxX ()D b
	getMaxZ ()D d
	getMinX ()D a
	getMinZ ()D c
	getSize ()D e
	getStatus ()Lnet/minecraft/world/level/border/BorderStatus; i
	onAbsoluteMaxSizeChange ()V j
	onCenterChange ()V k
	update ()Lnet/minecraft/world/level/border/WorldBorder$BorderExtent; l
	updateBox ()V n
net/minecraft/world/level/chunk/BulkSectionAccess cmk
	acquiredSections b
	lastSection c
	lastSectionKey d
	level a
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; b
	getSection (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/chunk/LevelChunkSection; a
net/minecraft/world/level/chunk/ChunkAccess cml
	addEntity (Lnet/minecraft/world/entity/Entity;)V a
	addPackedPostProcess (SI)V a
	getAllStarts ()Ljava/util/Map; g
	getBiomes ()Lnet/minecraft/world/level/chunk/ChunkBiomeContainer; h
	getBlockEntitiesPos ()Ljava/util/Set; c
	getBlockEntityNbt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/nbt/CompoundTag; f
	getBlockEntityNbtForSaving (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/nbt/CompoundTag; g
	getBlockTicks ()Lnet/minecraft/world/level/TickList; o
	getEventDispatcher (I)Lnet/minecraft/world/level/gameevent/GameEventDispatcher; a
	getHeighestPosition (Lnet/minecraft/world/level/levelgen/Heightmap$Types;)Lnet/minecraft/core/BlockPos; b
	getHeight (Lnet/minecraft/world/level/levelgen/Heightmap$Types;II)I a
	getHeightmaps ()Ljava/util/Collection; e
	getHighestSection ()Lnet/minecraft/world/level/chunk/LevelChunkSection; a
	getHighestSectionPosition ()I b
	getInhabitedTime ()J r
	getLights ()Ljava/util/stream/Stream; n
	getLiquidTicks ()Lnet/minecraft/world/level/TickList; p
	getOrCreateHeightmapUnprimed (Lnet/minecraft/world/level/levelgen/Heightmap$Types;)Lnet/minecraft/world/level/levelgen/Heightmap; a
	getOrCreateOffsetList ([Lit/unimi/dsi/fastutil/shorts/ShortList;I)Lit/unimi/dsi/fastutil/shorts/ShortList; a
	getOrCreateSection (I)Lnet/minecraft/world/level/chunk/LevelChunkSection; b
	getPos ()Lnet/minecraft/world/level/ChunkPos; f
	getPostProcessing ()[Lit/unimi/dsi/fastutil/shorts/ShortList; k
	getSections ()[Lnet/minecraft/world/level/chunk/LevelChunkSection; d
	getStatus ()Lnet/minecraft/world/level/chunk/ChunkStatus; j
	getUpgradeData ()Lnet/minecraft/world/level/chunk/UpgradeData; q
	isLightCorrect ()Z s
	isUnsaved ()Z i
	isYSpaceEmpty (II)Z a
	markPosForPostprocessing (Lnet/minecraft/core/BlockPos;)V e
	removeBlockEntity (Lnet/minecraft/core/BlockPos;)V d
	setAllStarts (Ljava/util/Map;)V a
	setBlockEntity (Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
	setBlockEntityNbt (Lnet/minecraft/nbt/CompoundTag;)V a
	setBlockState (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Lnet/minecraft/world/level/block/state/BlockState; a
	setHeightmap (Lnet/minecraft/world/level/levelgen/Heightmap$Types;[J)V a
	setInhabitedTime (J)V a
	setLightCorrect (Z)V b
	setUnsaved (Z)V a
net/minecraft/world/level/chunk/ChunkBiomeContainer cmm
	HORIZONTAL_MASK d
	LOGGER b
	MAX_SIZE a
	WIDTH_BITS c
	biomeRegistry e
	biomes f
	quartHeight h
	quartMinY g
	ceilDiv (II)I a
	generateBiomeForIndex (Lnet/minecraft/world/level/biome/BiomeSource;IIII)Lnet/minecraft/world/level/biome/Biome; a
	getNoiseBiome (III)Lnet/minecraft/world/level/biome/Biome; b
	writeBiomes ()[I a
net/minecraft/world/level/chunk/ChunkGenerator cmn
	CODEC a
	biomeSource b
	defaultBaseStoneSource g
	runtimeBiomeSource c
	settings d
	strongholdPositions f
	strongholdSeed e
	applyBiomeDecoration (Lnet/minecraft/server/level/WorldGenRegion;Lnet/minecraft/world/level/StructureFeatureManager;)V a
	applyCarvers (JLnet/minecraft/world/level/biome/BiomeManager;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)V a
	buildSurfaceAndBedrock (Lnet/minecraft/server/level/WorldGenRegion;Lnet/minecraft/world/level/chunk/ChunkAccess;)V a
	codec ()Lcom/mojang/serialization/Codec; a
	createAquifer (Lnet/minecraft/world/level/chunk/ChunkAccess;)Lnet/minecraft/world/level/levelgen/Aquifer; a
	createBiomes (Lnet/minecraft/core/Registry;Lnet/minecraft/world/level/chunk/ChunkAccess;)V a
	createReferences (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;)V a
	createStructure (Lnet/minecraft/world/level/levelgen/feature/ConfiguredStructureFeature;Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;JLnet/minecraft/world/level/biome/Biome;)V a
	createStructures (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;J)V a
	fillFromNoise (Ljava/util/concurrent/Executor;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;)Ljava/util/concurrent/CompletableFuture; a
	findNearestMapFeature (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/levelgen/feature/StructureFeature;Lnet/minecraft/core/BlockPos;IZ)Lnet/minecraft/core/BlockPos; a
	generateStrongholds ()V h
	getBaseColumn (IILnet/minecraft/world/level/LevelHeightAccessor;)Lnet/minecraft/world/level/NoiseColumn; a
	getBaseHeight (IILnet/minecraft/world/level/levelgen/Heightmap$Types;Lnet/minecraft/world/level/LevelHeightAccessor;)I a
	getBaseStoneSource ()Lnet/minecraft/world/level/levelgen/BaseStoneSource; g
	getBiomeSource ()Lnet/minecraft/world/level/biome/BiomeSource; c
	getFirstFreeHeight (IILnet/minecraft/world/level/levelgen/Heightmap$Types;Lnet/minecraft/world/level/LevelHeightAccessor;)I b
	getFirstOccupiedHeight (IILnet/minecraft/world/level/levelgen/Heightmap$Types;Lnet/minecraft/world/level/LevelHeightAccessor;)I c
	getGenDepth ()I d
	getMinY ()I f
	getMobsAt (Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/util/random/WeightedRandomList; a
	getSeaLevel ()I e
	getSettings ()Lnet/minecraft/world/level/levelgen/StructureSettings; b
	getSpawnHeight (Lnet/minecraft/world/level/LevelHeightAccessor;)I a
	hasStronghold (Lnet/minecraft/world/level/ChunkPos;)Z a
	spawnOriginalMobs (Lnet/minecraft/server/level/WorldGenRegion;)V a
	withSeed (J)Lnet/minecraft/world/level/chunk/ChunkGenerator; a
net/minecraft/world/level/chunk/ChunkSource cmo
	gatherStats ()Ljava/lang/String; e
	getChunk (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunk (IIZ)Lnet/minecraft/world/level/chunk/LevelChunk; a
	getChunkForLighting (II)Lnet/minecraft/world/level/BlockGetter; c
	getChunkNow (II)Lnet/minecraft/world/level/chunk/LevelChunk; a
	getLightEngine ()Lnet/minecraft/world/level/lighting/LevelLightEngine; l
	getLoadedChunksCount ()I h
	hasChunk (II)Z b
	setSpawnSettings (ZZ)V a
	tick (Ljava/util/function/BooleanSupplier;)V a
	updateChunkForced (Lnet/minecraft/world/level/ChunkPos;Z)V a
net/minecraft/world/level/chunk/ChunkStatus cmp
	BIOMES d
	CARVERS g
	EMPTY a
	FEATURES i
	FULL m
	HEIGHTMAPS l
	LIGHT j
	LIQUID_CARVERS h
	NOISE e
	PASSTHROUGH_LOAD_TASK p
	POST_FEATURES o
	PRE_FEATURES n
	RANGE_BY_STATUS r
	SPAWN k
	STATUS_BY_RANGE q
	STRUCTURE_REFERENCES c
	STRUCTURE_STARTS b
	SURFACE f
	chunkType y
	generationTask v
	heightmapsAfter z
	index t
	loadingTask w
	name s
	parent u
	range x
	byName (Ljava/lang/String;)Lnet/minecraft/world/level/chunk/ChunkStatus; a
	generate (Ljava/util/concurrent/Executor;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/server/level/ThreadedLevelLightEngine;Ljava/util/function/Function;Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; a
	getChunkType ()Lnet/minecraft/world/level/chunk/ChunkStatus$ChunkType; g
	getDistance (Lnet/minecraft/world/level/chunk/ChunkStatus;)I a
	getIndex ()I c
	getName ()Ljava/lang/String; d
	getParent ()Lnet/minecraft/world/level/chunk/ChunkStatus; e
	getRange ()I f
	getStatusAroundFullChunk (I)Lnet/minecraft/world/level/chunk/ChunkStatus; a
	getStatusList ()Ljava/util/List; a
	heightmapsAfter ()Ljava/util/EnumSet; h
	isLighted (Lnet/minecraft/world/level/chunk/ChunkStatus;Lnet/minecraft/world/level/chunk/ChunkAccess;)Z a
	isOrAfter (Lnet/minecraft/world/level/chunk/ChunkStatus;)Z b
	lightChunk (Lnet/minecraft/world/level/chunk/ChunkStatus;Lnet/minecraft/server/level/ThreadedLevelLightEngine;Lnet/minecraft/world/level/chunk/ChunkAccess;)Ljava/util/concurrent/CompletableFuture; a
	load (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/server/level/ThreadedLevelLightEngine;Ljava/util/function/Function;Lnet/minecraft/world/level/chunk/ChunkAccess;)Ljava/util/concurrent/CompletableFuture; a
	maxDistance ()I b
	register (Ljava/lang/String;Lnet/minecraft/world/level/chunk/ChunkStatus;ILjava/util/EnumSet;Lnet/minecraft/world/level/chunk/ChunkStatus$ChunkType;Lnet/minecraft/world/level/chunk/ChunkStatus$GenerationTask;)Lnet/minecraft/world/level/chunk/ChunkStatus; a
	register (Ljava/lang/String;Lnet/minecraft/world/level/chunk/ChunkStatus;ILjava/util/EnumSet;Lnet/minecraft/world/level/chunk/ChunkStatus$ChunkType;Lnet/minecraft/world/level/chunk/ChunkStatus$GenerationTask;Lnet/minecraft/world/level/chunk/ChunkStatus$LoadingTask;)Lnet/minecraft/world/level/chunk/ChunkStatus; a
	registerSimple (Ljava/lang/String;Lnet/minecraft/world/level/chunk/ChunkStatus;ILjava/util/EnumSet;Lnet/minecraft/world/level/chunk/ChunkStatus$ChunkType;Lnet/minecraft/world/level/chunk/ChunkStatus$SimpleGenerationTask;)Lnet/minecraft/world/level/chunk/ChunkStatus; a
net/minecraft/world/level/chunk/ChunkStatus$ChunkType cmp$a
	$VALUES c
	LEVELCHUNK b
	PROTOCHUNK a
	$values ()[Lnet/minecraft/world/level/chunk/ChunkStatus$ChunkType; a
net/minecraft/world/level/chunk/ChunkStatus$GenerationTask cmp$b
net/minecraft/world/level/chunk/ChunkStatus$LoadingTask cmp$c
net/minecraft/world/level/chunk/ChunkStatus$SimpleGenerationTask cmp$d
net/minecraft/world/level/chunk/DataLayer cmq
	LAYER_SIZE b
	NIBBLE_SIZE d
	SIZE a
	data c
	copy ()Lnet/minecraft/world/level/chunk/DataLayer; b
	get (I)I b
	get (III)I a
	getData ()[B a
	getIndex (III)I b
	getPosition (I)I d
	isEmpty ()Z c
	isFirst (I)Z c
	layerToString (I)Ljava/lang/String; a
	set (II)V a
	set (IIII)V a
net/minecraft/world/level/chunk/EmptyLevelChunk cmr
	addAndRegisterBlockEntity (Lnet/minecraft/world/level/block/entity/BlockEntity;)V b
	getBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/chunk/LevelChunk$EntityCreationType;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a_
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b_
	getFullStatus ()Lnet/minecraft/server/level/ChunkHolder$FullChunkStatus; v
	getLightEmission (Lnet/minecraft/core/BlockPos;)I h
	isEmpty ()Z u
	isYSpaceEmpty (II)Z a
	markUnsaved ()V t
	removeBlockEntity (Lnet/minecraft/core/BlockPos;)V d
	setBlockEntity (Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
	setBlockState (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/chunk/EmptyLevelChunk$EmptyChunkBiomeContainer cmr$a
	EMPTY_BIOMES b
	getNoiseBiome (III)Lnet/minecraft/world/level/biome/Biome; b
	writeBiomes ()[I a
net/minecraft/world/level/chunk/FeatureAccess cms
	addReferenceForFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;J)V a
	getAllReferences ()Ljava/util/Map; w
	getReferencesForFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Lit/unimi/dsi/fastutil/longs/LongSet; b
	getStartForFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
	setAllReferences (Ljava/util/Map;)V b
	setStartForFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;Lnet/minecraft/world/level/levelgen/structure/StructureStart;)V a
net/minecraft/world/level/chunk/GlobalPalette cmt
	defaultValue b
	registry a
	getSerializedSize ()I a
	getSize ()I b
	idFor (Ljava/lang/Object;)I a
	maybeHas (Ljava/util/function/Predicate;)Z a
	read (Lnet/minecraft/nbt/ListTag;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	valueFor (I)Ljava/lang/Object; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/world/level/chunk/HashMapPalette cmu
	bits f
	reader d
	registry a
	resizeHandler c
	values b
	writer e
	getSerializedSize ()I a
	getSize ()I b
	idFor (Ljava/lang/Object;)I a
	maybeHas (Ljava/util/function/Predicate;)Z a
	read (Lnet/minecraft/nbt/ListTag;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	valueFor (I)Ljava/lang/Object; a
	write (Lnet/minecraft/nbt/ListTag;)V b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/world/level/chunk/ImposterProtoChunk cmv
	wrapped a
	addEntity (Lnet/minecraft/world/entity/Entity;)V a
	addReferenceForFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;J)V a
	fixType (Lnet/minecraft/world/level/levelgen/Heightmap$Types;)Lnet/minecraft/world/level/levelgen/Heightmap$Types; c
	getAllReferences ()Ljava/util/Map; w
	getAllStarts ()Ljava/util/Map; g
	getBiomes ()Lnet/minecraft/world/level/chunk/ChunkBiomeContainer; h
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c_
	getBlockEntityNbt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/nbt/CompoundTag; f
	getBlockEntityNbtForSaving (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/nbt/CompoundTag; g
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a_
	getBlockTicks ()Lnet/minecraft/world/level/TickList; o
	getBlockTicks ()Lnet/minecraft/world/level/chunk/ProtoTickList; t
	getCarvingMask (Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)Ljava/util/BitSet; a
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b_
	getHeighestPosition (Lnet/minecraft/world/level/levelgen/Heightmap$Types;)Lnet/minecraft/core/BlockPos; b
	getHeight (Lnet/minecraft/world/level/levelgen/Heightmap$Types;II)I a
	getLights ()Ljava/util/stream/Stream; n
	getLiquidTicks ()Lnet/minecraft/world/level/TickList; p
	getLiquidTicks ()Lnet/minecraft/world/level/chunk/ProtoTickList; u
	getMaxLightLevel ()I O
	getOrCreateCarvingMask (Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)Ljava/util/BitSet; b
	getPos ()Lnet/minecraft/world/level/ChunkPos; f
	getReferencesForFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Lit/unimi/dsi/fastutil/longs/LongSet; b
	getSections ()[Lnet/minecraft/world/level/chunk/LevelChunkSection; d
	getStartForFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
	getStatus ()Lnet/minecraft/world/level/chunk/ChunkStatus; j
	getWrapped ()Lnet/minecraft/world/level/chunk/LevelChunk; v
	isLightCorrect ()Z s
	isUnsaved ()Z i
	markPosForPostprocessing (Lnet/minecraft/core/BlockPos;)V e
	removeBlockEntity (Lnet/minecraft/core/BlockPos;)V d
	setAllReferences (Ljava/util/Map;)V b
	setAllStarts (Ljava/util/Map;)V a
	setBiomes (Lnet/minecraft/world/level/chunk/ChunkBiomeContainer;)V a
	setBlockEntity (Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
	setBlockEntityNbt (Lnet/minecraft/nbt/CompoundTag;)V a
	setBlockState (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Lnet/minecraft/world/level/block/state/BlockState; a
	setHeightmap (Lnet/minecraft/world/level/levelgen/Heightmap$Types;[J)V a
	setLightCorrect (Z)V b
	setStartForFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;Lnet/minecraft/world/level/levelgen/structure/StructureStart;)V a
	setStatus (Lnet/minecraft/world/level/chunk/ChunkStatus;)V a
	setUnsaved (Z)V a
net/minecraft/world/level/chunk/LevelChunk cmw
	EMPTY_SECTION a
	LOGGER b
	NULL_TICKER c
	biomes e
	blockEntities l
	blockTicks p
	chunkPos v
	fullStatus t
	gameEventDispatcherSections x
	heightmaps j
	inhabitedTime s
	isLightCorrect w
	level i
	liquidTicks q
	loaded h
	pendingBlockEntities f
	postLoad u
	postProcessing o
	sections d
	structureStarts m
	structuresRefences n
	tickersInLevel g
	unsaved r
	upgradeData k
	addAndRegisterBlockEntity (Lnet/minecraft/world/level/block/entity/BlockEntity;)V b
	addEntity (Lnet/minecraft/world/entity/Entity;)V a
	addGameEventListener (Lnet/minecraft/world/level/block/entity/BlockEntity;)V e
	addReferenceForFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;J)V a
	createBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; j
	createTicker (Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/level/block/entity/BlockEntityTicker;)Lnet/minecraft/world/level/block/entity/TickingBlockEntity; a
	getAllReferences ()Ljava/util/Map; w
	getAllStarts ()Ljava/util/Map; g
	getBiomes ()Lnet/minecraft/world/level/chunk/ChunkBiomeContainer; h
	getBlockEntities ()Ljava/util/Map; z
	getBlockEntitiesPos ()Ljava/util/Set; c
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c_
	getBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/chunk/LevelChunk$EntityCreationType;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	getBlockEntityNbt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/nbt/CompoundTag; f
	getBlockEntityNbtForSaving (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/nbt/CompoundTag; g
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a_
	getBlockTicks ()Lnet/minecraft/world/level/TickList; o
	getEventDispatcher (I)Lnet/minecraft/world/level/gameevent/GameEventDispatcher; a
	getFluidState (III)Lnet/minecraft/world/level/material/FluidState; a
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b_
	getFullStatus ()Lnet/minecraft/server/level/ChunkHolder$FullChunkStatus; v
	getHeighestPosition (Lnet/minecraft/world/level/levelgen/Heightmap$Types;)Lnet/minecraft/core/BlockPos; b
	getHeight ()I t_
	getHeight (Lnet/minecraft/world/level/levelgen/Heightmap$Types;II)I a
	getHeightmaps ()Ljava/util/Collection; e
	getInhabitedTime ()J r
	getLevel ()Lnet/minecraft/world/level/Level; y
	getLights ()Ljava/util/stream/Stream; n
	getLiquidTicks ()Lnet/minecraft/world/level/TickList; p
	getMinBuildHeight ()I s_
	getOrCreateHeightmapUnprimed (Lnet/minecraft/world/level/levelgen/Heightmap$Types;)Lnet/minecraft/world/level/levelgen/Heightmap; a
	getPos ()Lnet/minecraft/world/level/ChunkPos; f
	getPostProcessing ()[Lit/unimi/dsi/fastutil/shorts/ShortList; k
	getReferencesForFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Lit/unimi/dsi/fastutil/longs/LongSet; b
	getSections ()[Lnet/minecraft/world/level/chunk/LevelChunkSection; d
	getStartForFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
	getStatus ()Lnet/minecraft/world/level/chunk/ChunkStatus; j
	getUpgradeData ()Lnet/minecraft/world/level/chunk/UpgradeData; q
	invalidateAllBlockEntities ()V C
	isEmpty ()Z u
	isInLevel ()Z E
	isLightCorrect ()Z s
	isTicking (Lnet/minecraft/core/BlockPos;)Z k
	isUnsaved ()Z i
	markUnsaved ()V t
	onBlockEntityRemove (Lnet/minecraft/world/level/block/entity/BlockEntity;)V d
	packTicks (Lnet/minecraft/server/level/ServerLevel;)V a
	postProcessGeneration ()V A
	promotePendingBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	registerAllBlockEntitiesAfterLevelLoad ()V D
	removeBlockEntity (Lnet/minecraft/core/BlockPos;)V d
	removeBlockEntityTicker (Lnet/minecraft/core/BlockPos;)V l
	removeGameEventListener (Lnet/minecraft/world/level/block/entity/BlockEntity;)V c
	replaceWithPacketData (Lnet/minecraft/world/level/chunk/ChunkBiomeContainer;Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/nbt/CompoundTag;Ljava/util/BitSet;)V a
	runPostLoad ()V x
	setAllReferences (Ljava/util/Map;)V b
	setAllStarts (Ljava/util/Map;)V a
	setBlockEntity (Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
	setBlockEntityNbt (Lnet/minecraft/nbt/CompoundTag;)V a
	setBlockState (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Lnet/minecraft/world/level/block/state/BlockState; a
	setFullStatus (Ljava/util/function/Supplier;)V a
	setInhabitedTime (J)V a
	setLightCorrect (Z)V b
	setLoaded (Z)V c
	setStartForFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;Lnet/minecraft/world/level/levelgen/structure/StructureStart;)V a
	setUnsaved (Z)V a
	unpackTicks ()V B
	updateBlockEntityTicker (Lnet/minecraft/world/level/block/entity/BlockEntity;)V f
net/minecraft/world/level/chunk/LevelChunk$BoundTickingBlockEntity cmw$a
	blockEntity b
	loggedInvalidBlockState d
	ticker c
	getPos ()Lnet/minecraft/core/BlockPos; c
	getType ()Ljava/lang/String; d
	isRemoved ()Z b
	tick ()V a
net/minecraft/world/level/chunk/LevelChunk$EntityCreationType cmw$b
	$VALUES d
	CHECK c
	IMMEDIATE a
	QUEUED b
	$values ()[Lnet/minecraft/world/level/chunk/LevelChunk$EntityCreationType; a
net/minecraft/world/level/chunk/LevelChunk$RebindableTickingBlockEntityWrapper cmw$c
	ticker b
	getPos ()Lnet/minecraft/core/BlockPos; c
	getType ()Ljava/lang/String; d
	isRemoved ()Z b
	rebind (Lnet/minecraft/world/level/block/entity/TickingBlockEntity;)V a
	tick ()V a
net/minecraft/world/level/chunk/LevelChunkSection cmx
	GLOBAL_BLOCKSTATE_PALETTE d
	SECTION_HEIGHT b
	SECTION_SIZE c
	SECTION_WIDTH a
	bottomBlockY e
	nonEmptyBlockCount f
	states i
	tickingBlockCount g
	tickingFluidCount h
	acquire ()V a
	bottomBlockY ()I g
	getBlockState (III)Lnet/minecraft/world/level/block/state/BlockState; a
	getBottomBlockY (I)I a
	getFluidState (III)Lnet/minecraft/world/level/material/FluidState; b
	getSerializedSize ()I j
	getStates ()Lnet/minecraft/world/level/chunk/PalettedContainer; i
	isEmpty ()Z c
	isEmpty (Lnet/minecraft/world/level/chunk/LevelChunkSection;)Z a
	isRandomlyTicking ()Z d
	isRandomlyTickingBlocks ()Z e
	isRandomlyTickingFluids ()Z f
	maybeHas (Ljava/util/function/Predicate;)Z a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	recalcBlockCounts ()V h
	release ()V b
	setBlockState (IIILnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	setBlockState (IIILnet/minecraft/world/level/block/state/BlockState;Z)Lnet/minecraft/world/level/block/state/BlockState; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/world/level/chunk/LightChunkGetter cmy
	getChunkForLighting (II)Lnet/minecraft/world/level/BlockGetter; c
	getLevel ()Lnet/minecraft/world/level/BlockGetter; m
	onLightUpdate (Lnet/minecraft/world/level/LightLayer;Lnet/minecraft/core/SectionPos;)V a
net/minecraft/world/level/chunk/LinearPalette cmz
	bits e
	reader d
	registry a
	resizeHandler c
	size f
	values b
	getSerializedSize ()I a
	getSize ()I b
	idFor (Ljava/lang/Object;)I a
	maybeHas (Ljava/util/function/Predicate;)Z a
	read (Lnet/minecraft/nbt/ListTag;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	valueFor (I)Ljava/lang/Object; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/world/level/chunk/OldDataLayer cna
	data a
	depthBits b
	depthBitsPlusFour c
	get (III)I a
net/minecraft/world/level/chunk/Palette cnb
	getSerializedSize ()I a
	getSize ()I b
	idFor (Ljava/lang/Object;)I a
	maybeHas (Ljava/util/function/Predicate;)Z a
	read (Lnet/minecraft/nbt/ListTag;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	valueFor (I)Ljava/lang/Object; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/world/level/chunk/PaletteResize cnc
net/minecraft/world/level/chunk/PalettedContainer cnd
	GLOBAL_PALETTE_BITS a
	MIN_PALETTE_SIZE b
	SIZE d
	bits l
	defaultValue j
	dummyPaletteResize f
	globalPalette e
	lock m
	palette k
	reader h
	registry g
	storage c
	traces n
	writer i
	acquire ()V a
	count (Lnet/minecraft/world/level/chunk/PalettedContainer$CountConsumer;)V a
	get (I)Ljava/lang/Object; a
	get (III)Ljava/lang/Object; a
	getAndSet (IIILjava/lang/Object;)Ljava/lang/Object; a
	getAndSet (ILjava/lang/Object;)Ljava/lang/Object; a
	getAndSetUnchecked (IIILjava/lang/Object;)Ljava/lang/Object; b
	getIndex (III)I b
	getSerializedSize ()I c
	maybeHas (Ljava/util/function/Predicate;)Z a
	read (Lnet/minecraft/nbt/ListTag;[J)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	release ()V b
	set (IIILjava/lang/Object;)V c
	set (ILjava/lang/Object;)V b
	setBits (I)V b
	write (Lnet/minecraft/nbt/CompoundTag;Ljava/lang/String;Ljava/lang/String;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/world/level/chunk/PalettedContainer$CountConsumer cnd$a
net/minecraft/world/level/chunk/ProtoChunk cne
	LOGGER a
	biomes d
	blockEntities h
	blockEntityNbts i
	blockTicks q
	carvingMasks u
	chunkPos b
	entities k
	heightmaps f
	inhabitedTime t
	isDirty c
	isLightCorrect v
	levelHeightAccessor s
	lightEngine e
	lights l
	liquidTicks r
	postProcessing m
	sections j
	status g
	structureStarts n
	structuresRefences o
	upgradeData p
	addEntity (Lnet/minecraft/nbt/CompoundTag;)V b
	addEntity (Lnet/minecraft/world/entity/Entity;)V a
	addLight (Lnet/minecraft/core/BlockPos;)V j
	addLight (SI)V b
	addPackedPostProcess (SI)V a
	addReferenceForFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;J)V a
	getAllReferences ()Ljava/util/Map; w
	getAllStarts ()Ljava/util/Map; g
	getBiomes ()Lnet/minecraft/world/level/chunk/ChunkBiomeContainer; h
	getBlockEntities ()Ljava/util/Map; y
	getBlockEntitiesPos ()Ljava/util/Set; c
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c_
	getBlockEntityNbt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/nbt/CompoundTag; f
	getBlockEntityNbtForSaving (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/nbt/CompoundTag; g
	getBlockEntityNbts ()Ljava/util/Map; A
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a_
	getBlockTicks ()Lnet/minecraft/world/level/TickList; o
	getBlockTicks ()Lnet/minecraft/world/level/chunk/ProtoTickList; t
	getCarvingMask (Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)Ljava/util/BitSet; a
	getEntities ()Ljava/util/List; z
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b_
	getHeighestPosition (Lnet/minecraft/world/level/levelgen/Heightmap$Types;)Lnet/minecraft/core/BlockPos; b
	getHeight ()I t_
	getHeight (Lnet/minecraft/world/level/levelgen/Heightmap$Types;II)I a
	getHeightmaps ()Ljava/util/Collection; e
	getInhabitedTime ()J r
	getLights ()Ljava/util/stream/Stream; n
	getLiquidTicks ()Lnet/minecraft/world/level/TickList; p
	getLiquidTicks ()Lnet/minecraft/world/level/chunk/ProtoTickList; u
	getMinBuildHeight ()I s_
	getOrCreateCarvingMask (Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)Ljava/util/BitSet; b
	getOrCreateHeightmapUnprimed (Lnet/minecraft/world/level/levelgen/Heightmap$Types;)Lnet/minecraft/world/level/levelgen/Heightmap; a
	getPackedLights ()[Lit/unimi/dsi/fastutil/shorts/ShortList; x
	getPos ()Lnet/minecraft/world/level/ChunkPos; f
	getPostProcessing ()[Lit/unimi/dsi/fastutil/shorts/ShortList; k
	getReferencesForFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Lit/unimi/dsi/fastutil/longs/LongSet; b
	getSections ()[Lnet/minecraft/world/level/chunk/LevelChunkSection; d
	getStartForFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
	getStatus ()Lnet/minecraft/world/level/chunk/ChunkStatus; j
	getUpgradeData ()Lnet/minecraft/world/level/chunk/UpgradeData; q
	isLightCorrect ()Z s
	isUnsaved ()Z i
	markPosForPostprocessing (Lnet/minecraft/core/BlockPos;)V e
	packOffsetCoordinates (Lnet/minecraft/core/BlockPos;)S k
	removeBlockEntity (Lnet/minecraft/core/BlockPos;)V d
	setAllReferences (Ljava/util/Map;)V b
	setAllStarts (Ljava/util/Map;)V a
	setBiomes (Lnet/minecraft/world/level/chunk/ChunkBiomeContainer;)V a
	setBlockEntity (Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
	setBlockEntityNbt (Lnet/minecraft/nbt/CompoundTag;)V a
	setBlockState (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Lnet/minecraft/world/level/block/state/BlockState; a
	setCarvingMask (Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;Ljava/util/BitSet;)V a
	setInhabitedTime (J)V a
	setLightCorrect (Z)V b
	setLightEngine (Lnet/minecraft/world/level/lighting/LevelLightEngine;)V a
	setStartForFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;Lnet/minecraft/world/level/levelgen/structure/StructureStart;)V a
	setStatus (Lnet/minecraft/world/level/chunk/ChunkStatus;)V a
	setUnsaved (Z)V a
	unpackOffsetCoordinates (SILnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/core/BlockPos; a
net/minecraft/world/level/chunk/ProtoTickList cnf
	chunkPos b
	ignore a
	levelHeightAccessor d
	toBeTicked c
	copyOut (Lnet/minecraft/world/level/TickList;Ljava/util/function/Function;)V a
	hasScheduledTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z a
	save ()Lnet/minecraft/nbt/ListTag; b
	scheduleTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;ILnet/minecraft/world/level/TickPriority;)V a
	size ()I a
	willTickThisTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z b
net/minecraft/world/level/chunk/UpgradeData cng
	CHUNKY_FIXERS h
	DIRECTIONS d
	EMPTY a
	LOGGER b
	MAP g
	TAG_INDICES c
	index f
	sides e
	isEmpty ()Z a
	updateState (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	upgrade (Lnet/minecraft/world/level/chunk/LevelChunk;)V a
	upgradeInside (Lnet/minecraft/world/level/chunk/LevelChunk;)V b
	upgradeSides (Lnet/minecraft/world/level/chunk/LevelChunk;Lnet/minecraft/core/Direction8;)V a
	write ()Lnet/minecraft/nbt/CompoundTag; b
net/minecraft/world/level/chunk/UpgradeData$BlockFixer cng$a
	processChunk (Lnet/minecraft/world/level/LevelAccessor;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/chunk/UpgradeData$BlockFixers cng$b
	$VALUES g
	BLACKLIST a
	CHEST c
	DEFAULT b
	DIRECTIONS f
	LEAVES d
	STEM_BLOCK e
	$values ()[Lnet/minecraft/world/level/chunk/UpgradeData$BlockFixers; a
net/minecraft/world/level/chunk/storage/ChunkSerializer cni
	LOGGER b
	TAG_UPGRADE_DATA a
	getChunkTypeFromTag (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/chunk/ChunkStatus$ChunkType; a
	packOffsets ([Lit/unimi/dsi/fastutil/shorts/ShortList;)Lnet/minecraft/nbt/ListTag; a
	packStructureData (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/ChunkPos;Ljava/util/Map;Ljava/util/Map;)Lnet/minecraft/nbt/CompoundTag; a
	postLoadChunk (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/chunk/LevelChunk;)V a
	read (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/entity/ai/village/poi/PoiManager;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/chunk/ProtoChunk; a
	unpackStructureReferences (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/nbt/CompoundTag;)Ljava/util/Map; a
	unpackStructureStart (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;J)Ljava/util/Map; a
	write (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/ChunkAccess;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/world/level/chunk/storage/ChunkStorage cnj
	fixerUpper d
	legacyStructureHandler b
	worker a
	flushWorker ()V i
	getVersion (Lnet/minecraft/nbt/CompoundTag;)I a
	read (Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/nbt/CompoundTag; e
	upgradeChunkTag (Lnet/minecraft/resources/ResourceKey;Ljava/util/function/Supplier;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	write (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/world/level/chunk/storage/EntityStorage cnk
	ENTITIES_TAG c
	LOGGER b
	POSITION_TAG d
	emptyChunks g
	fixerUpper a
	level e
	mainThreadExecutor h
	worker f
	emptyChunk (Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/world/level/entity/ChunkEntities; b
	flush ()V a
	getVersion (Lnet/minecraft/nbt/CompoundTag;)I a
	loadEntities (Lnet/minecraft/world/level/ChunkPos;)Ljava/util/concurrent/CompletableFuture; a
	readChunkPos (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/ChunkPos; b
	storeEntities (Lnet/minecraft/world/level/entity/ChunkEntities;)V a
	upgradeChunkTag (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; c
	writeChunkPos (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/ChunkPos;)V a
net/minecraft/world/level/chunk/storage/IOWorker cnl
	LOGGER a
	mailbox c
	pendingWrites e
	shutdownRequested b
	storage d
	load (Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/nbt/CompoundTag; a
	loadAsync (Lnet/minecraft/world/level/ChunkPos;)Ljava/util/concurrent/CompletableFuture; b
	runStore (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/storage/IOWorker$PendingStore;)V a
	store (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/nbt/CompoundTag;)Ljava/util/concurrent/CompletableFuture; a
	storePendingChunk ()V b
	submitTask (Ljava/util/function/Supplier;)Ljava/util/concurrent/CompletableFuture; a
	synchronize ()Ljava/util/concurrent/CompletableFuture; a
	tellStorePending ()V c
net/minecraft/world/level/chunk/storage/IOWorker$PendingStore cnl$a
	data a
	result b
net/minecraft/world/level/chunk/storage/IOWorker$Priority cnl$b
	$VALUES d
	BACKGROUND b
	FOREGROUND a
	SHUTDOWN c
	$values ()[Lnet/minecraft/world/level/chunk/storage/IOWorker$Priority; a
net/minecraft/world/level/chunk/storage/OldChunkStorage cnm
	DATALAYER_BITS a
	OLD_LEVEL_HEIGHT b
	convertToAnvilFormat (Lnet/minecraft/core/RegistryAccess$RegistryHolder;Lnet/minecraft/world/level/chunk/storage/OldChunkStorage$OldLevelChunk;Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/biome/BiomeSource;)V a
	load (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/chunk/storage/OldChunkStorage$OldLevelChunk; a
net/minecraft/world/level/chunk/storage/OldChunkStorage$OldLevelChunk cnm$a
	blockEntities i
	blockLight d
	blockTicks j
	blocks g
	data f
	entities h
	heightmap c
	lastUpdated a
	skyLight e
	terrainPopulated b
	x k
	z l
net/minecraft/world/level/chunk/storage/RegionBitmap cnn
	used a
	allocate (I)I a
	force (II)V a
	free (II)V b
	getUsed ()Lit/unimi/dsi/fastutil/ints/IntSet; a
net/minecraft/world/level/chunk/storage/RegionFile cno
	CHUNK_HEADER_SIZE e
	CHUNK_NOT_PRESENT k
	EXTERNAL_CHUNK_THRESHOLD j
	EXTERNAL_FILE_EXTENSION h
	EXTERNAL_STREAM_FLAG i
	HEADER_OFFSET f
	LOGGER c
	PADDING_BUFFER g
	SECTOR_BYTES d
	SECTOR_INTS a
	externalFileDir m
	file l
	header o
	offsets p
	timestamps q
	usedSectors b
	version n
	clear (Lnet/minecraft/world/level/ChunkPos;)V d
	createChunkInputStream (Lnet/minecraft/world/level/ChunkPos;BLjava/io/InputStream;)Ljava/io/DataInputStream; a
	createExternalChunkInputStream (Lnet/minecraft/world/level/ChunkPos;B)Ljava/io/DataInputStream; a
	createExternalStub ()Ljava/nio/ByteBuffer; c
	createStream (Ljava/nio/ByteBuffer;I)Ljava/io/ByteArrayInputStream; a
	doesChunkExist (Lnet/minecraft/world/level/ChunkPos;)Z b
	flush ()V a
	getChunkDataInputStream (Lnet/minecraft/world/level/ChunkPos;)Ljava/io/DataInputStream; a
	getChunkDataOutputStream (Lnet/minecraft/world/level/ChunkPos;)Ljava/io/DataOutputStream; c
	getExternalChunkPath (Lnet/minecraft/world/level/ChunkPos;)Ljava/nio/file/Path; f
	getExternalChunkVersion (B)B b
	getNumSectors (I)I a
	getOffset (Lnet/minecraft/world/level/ChunkPos;)I g
	getOffsetIndex (Lnet/minecraft/world/level/ChunkPos;)I h
	getSectorNumber (I)I b
	getTimestamp ()I b
	hasChunk (Lnet/minecraft/world/level/ChunkPos;)Z e
	isExternalStreamChunk (B)Z a
	packSectorOffset (II)I a
	padToFullSector ()V e
	sizeToSectors (I)I c
	write (Lnet/minecraft/world/level/ChunkPos;Ljava/nio/ByteBuffer;)V a
	writeHeader ()V d
	writeToExternalFile (Ljava/nio/file/Path;Ljava/nio/ByteBuffer;)Lnet/minecraft/world/level/chunk/storage/RegionFile$CommitOp; a
net/minecraft/world/level/chunk/storage/RegionFile$ChunkBuffer cno$a
	pos b
net/minecraft/world/level/chunk/storage/RegionFile$CommitOp cno$b
net/minecraft/world/level/chunk/storage/RegionFileStorage cnp
	ANVIL_EXTENSION a
	MAX_CACHE_SIZE b
	folder d
	regionCache c
	sync e
	flush ()V a
	getRegionFile (Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/world/level/chunk/storage/RegionFile; b
	read (Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/nbt/CompoundTag; a
	write (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/world/level/chunk/storage/RegionFileVersion cnq
	VERSIONS d
	VERSION_DEFLATE b
	VERSION_GZIP a
	VERSION_NONE c
	id e
	inputWrapper f
	outputWrapper g
	fromId (I)Lnet/minecraft/world/level/chunk/storage/RegionFileVersion; a
	getId ()I a
	isValidVersion (I)Z b
	register (Lnet/minecraft/world/level/chunk/storage/RegionFileVersion;)Lnet/minecraft/world/level/chunk/storage/RegionFileVersion; a
	wrap (Ljava/io/InputStream;)Ljava/io/InputStream; a
	wrap (Ljava/io/OutputStream;)Ljava/io/OutputStream; a
net/minecraft/world/level/chunk/storage/RegionFileVersion$StreamWrapper cnq$a
net/minecraft/world/level/chunk/storage/SectionStorage cnr
	LOGGER a
	SECTIONS_TAG b
	codec g
	dirty f
	factory h
	fixerUpper i
	levelHeightAccessor c
	storage e
	type j
	worker d
	flush (Lnet/minecraft/world/level/ChunkPos;)V a
	get (J)Ljava/util/Optional; c
	getKey (Lnet/minecraft/world/level/ChunkPos;I)J a
	getOrCreate (J)Ljava/lang/Object; f
	getOrLoad (J)Ljava/util/Optional; d
	getVersion (Lcom/mojang/serialization/Dynamic;)I a
	onSectionLoad (J)V b
	outsideStoredRange (J)Z e
	readColumn (Lnet/minecraft/world/level/ChunkPos;)V b
	readColumn (Lnet/minecraft/world/level/ChunkPos;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)V a
	setDirty (J)V a
	tick (Ljava/util/function/BooleanSupplier;)V a
	tryRead (Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/nbt/CompoundTag; c
	writeColumn (Lnet/minecraft/world/level/ChunkPos;)V d
	writeColumn (Lnet/minecraft/world/level/ChunkPos;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/world/level/dimension/DimensionDefaults cnt
	END_GENERATION_HEIGHT k
	END_LEVEL_HEIGHT j
	END_LOGICAL_HEIGHT l
	END_MIN_Y i
	NETHER_GENERATION_HEIGHT g
	NETHER_LEVEL_HEIGHT f
	NETHER_LOGICAL_HEIGHT h
	NETHER_MIN_Y e
	OVERWORLD_GENERATION_HEIGHT c
	OVERWORLD_LEVEL_HEIGHT b
	OVERWORLD_LOGICAL_HEIGHT d
	OVERWORLD_MIN_Y a
net/minecraft/world/level/dimension/DimensionType cnu
	BITS_FOR_Y a
	CODEC s
	DEFAULT_END p
	DEFAULT_NETHER o
	DEFAULT_OVERWORLD n
	DEFAULT_OVERWORLD_CAVES r
	DIRECT_CODEC i
	END_EFFECTS h
	END_LOCATION m
	MAX_Y d
	MIN_HEIGHT b
	MIN_Y e
	MOON_BRIGHTNESS_PER_PHASE j
	MOON_PHASES t
	NETHER_EFFECTS g
	NETHER_LOCATION l
	OVERWORLD_CAVES_LOCATION q
	OVERWORLD_EFFECTS f
	OVERWORLD_LOCATION k
	Y_SIZE c
	ambientLight L
	bedWorks C
	biomeZoomer I
	brightnessRamp M
	coordinateScale z
	createDragonFight A
	effectsLocation K
	fixedTime u
	hasCeiling w
	hasRaids E
	hasSkylight v
	height G
	infiniburn J
	logicalHeight H
	minY F
	natural y
	piglinSafe B
	respawnAnchorWorks D
	ultraWarm x
	bedWorks ()Z h
	brightness (I)F a
	coordinateScale ()D f
	create (Ljava/util/OptionalLong;ZZZZDZZZZZIIILnet/minecraft/world/level/biome/BiomeZoomer;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;F)Lnet/minecraft/world/level/dimension/DimensionType; a
	createDragonFight ()Z n
	defaultDimensions (Lnet/minecraft/core/Registry;Lnet/minecraft/core/Registry;Lnet/minecraft/core/Registry;J)Lnet/minecraft/core/MappedRegistry; a
	defaultEndGenerator (Lnet/minecraft/core/Registry;Lnet/minecraft/core/Registry;J)Lnet/minecraft/world/level/chunk/ChunkGenerator; a
	defaultNetherGenerator (Lnet/minecraft/core/Registry;Lnet/minecraft/core/Registry;J)Lnet/minecraft/world/level/chunk/ChunkGenerator; b
	effectsLocation ()Lnet/minecraft/resources/ResourceLocation; r
	equalTo (Lnet/minecraft/world/level/dimension/DimensionType;)Z a
	fillBrightnessRamp (F)[F a
	getBiomeZoomer ()Lnet/minecraft/world/level/biome/BiomeZoomer; o
	getFileSuffix ()Ljava/lang/String; a
	getStorageFolder (Lnet/minecraft/resources/ResourceKey;Ljava/io/File;)Ljava/io/File; a
	getTeleportationScale (Lnet/minecraft/world/level/dimension/DimensionType;Lnet/minecraft/world/level/dimension/DimensionType;)D a
	guardY (Lnet/minecraft/world/level/dimension/DimensionType;)Lcom/mojang/serialization/DataResult; b
	hasCeiling ()Z c
	hasFixedTime ()Z p
	hasRaids ()Z j
	hasSkyLight ()Z b
	height ()I l
	infiniburn ()Lnet/minecraft/tags/Tag; q
	logicalHeight ()I m
	minY ()I k
	moonPhase (J)I b
	natural ()Z e
	parseLegacy (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult; a
	piglinSafe ()Z g
	registerBuiltin (Lnet/minecraft/core/RegistryAccess$RegistryHolder;)Lnet/minecraft/core/RegistryAccess$RegistryHolder; a
	respawnAnchorWorks ()Z i
	timeOfDay (J)F a
	ultraWarm ()Z d
net/minecraft/world/level/dimension/LevelStem cnv
	BUILTIN_ORDER e
	CODEC a
	END d
	NETHER c
	OVERWORLD b
	generator g
	type f
	generator ()Lnet/minecraft/world/level/chunk/ChunkGenerator; c
	sortMap (Lnet/minecraft/core/MappedRegistry;)Lnet/minecraft/core/MappedRegistry; a
	stable (JLnet/minecraft/core/MappedRegistry;)Z a
	type ()Lnet/minecraft/world/level/dimension/DimensionType; b
	typeSupplier ()Ljava/util/function/Supplier; a
net/minecraft/world/level/dimension/end/DragonRespawnAnimation cnw
	$VALUES f
	END e
	PREPARING_TO_SUMMON_PILLARS b
	START a
	SUMMONING_DRAGON d
	SUMMONING_PILLARS c
	$values ()[Lnet/minecraft/world/level/dimension/end/DragonRespawnAnimation; a
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/dimension/end/EndDragonFight;Ljava/util/List;ILnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/dimension/end/EndDragonFight cnx
	ARENA_SIZE_CHUNKS g
	ARENA_TICKET_LEVEL a
	DRAGON_SPAWN_Y b
	GATEWAY_COUNT h
	GATEWAY_DISTANCE i
	LOGGER c
	MAX_TICKS_BEFORE_DRAGON_RESPAWN d
	TIME_BETWEEN_CRYSTAL_SCANS e
	TIME_BETWEEN_PLAYER_SCANS f
	VALID_PLAYER j
	crystalsAlive p
	dragonEvent k
	dragonKilled s
	dragonUUID u
	exitPortalPattern n
	gateways m
	level l
	needsStateScanning v
	portalLocation w
	previouslyKilled t
	respawnCrystals z
	respawnStage x
	respawnTime y
	ticksSinceCrystalsScanned q
	ticksSinceDragonSeen o
	ticksSinceLastPlayerScan r
	createNewDragon ()Lnet/minecraft/world/entity/boss/enderdragon/EnderDragon; o
	findExitPortal ()Lnet/minecraft/world/level/block/state/pattern/BlockPattern$BlockPatternMatch; j
	findOrCreateDragon ()V h
	getCrystalsAlive ()I c
	hasActiveExitPortal ()Z i
	hasPreviouslyKilledDragon ()Z d
	isArenaLoaded ()Z k
	onCrystalDestroyed (Lnet/minecraft/world/entity/boss/enderdragon/EndCrystal;Lnet/minecraft/world/damagesource/DamageSource;)V a
	resetSpikeCrystals ()V f
	respawnDragon (Ljava/util/List;)V a
	saveData ()Lnet/minecraft/nbt/CompoundTag; a
	scanState ()V g
	setDragonKilled (Lnet/minecraft/world/entity/boss/enderdragon/EnderDragon;)V a
	setRespawnStage (Lnet/minecraft/world/level/dimension/end/DragonRespawnAnimation;)V a
	spawnExitPortal (Z)V a
	spawnNewGateway ()V n
	spawnNewGateway (Lnet/minecraft/core/BlockPos;)V a
	tick ()V b
	tryRespawn ()V e
	updateCrystalCount ()V m
	updateDragon (Lnet/minecraft/world/entity/boss/enderdragon/EnderDragon;)V b
	updatePlayers ()V l
net/minecraft/world/level/entity/ChunkEntities coa
	entities b
	pos a
	getEntities ()Ljava/util/stream/Stream; b
	getPos ()Lnet/minecraft/world/level/ChunkPos; a
	isEmpty ()Z c
net/minecraft/world/level/entity/ChunkStatusUpdateListener cob
net/minecraft/world/level/entity/EntityAccess coc
	blockPosition ()Lnet/minecraft/core/BlockPos; cR
	getBoundingBox ()Lnet/minecraft/world/phys/AABB; cr
	getId ()I Z
	getPassengersAndSelf ()Ljava/util/stream/Stream; cD
	getSelfAndPassengers ()Ljava/util/stream/Stream; cC
	getUUID ()Ljava/util/UUID; ch
	isAlwaysTicking ()Z dn
	setLevelCallback (Lnet/minecraft/world/level/entity/EntityInLevelCallback;)V a
	setRemoved (Lnet/minecraft/world/entity/Entity$RemovalReason;)V b
	shouldBeSaved ()Z dm
net/minecraft/world/level/entity/EntityInLevelCallback cod
	NULL a
	onMove ()V a
	onRemove (Lnet/minecraft/world/entity/Entity$RemovalReason;)V a
net/minecraft/world/level/entity/EntityLookup coe
	LOGGER a
	byId b
	byUuid c
	add (Lnet/minecraft/world/level/entity/EntityAccess;)V a
	count ()I b
	getAllEntities ()Ljava/lang/Iterable; a
	getEntities (Lnet/minecraft/world/level/entity/EntityTypeTest;Ljava/util/function/Consumer;)V a
	getEntity (I)Lnet/minecraft/world/level/entity/EntityAccess; a
	getEntity (Ljava/util/UUID;)Lnet/minecraft/world/level/entity/EntityAccess; a
	remove (Lnet/minecraft/world/level/entity/EntityAccess;)V b
net/minecraft/world/level/entity/EntityPersistentStorage cof
	flush ()V a
	loadEntities (Lnet/minecraft/world/level/ChunkPos;)Ljava/util/concurrent/CompletableFuture; a
	storeEntities (Lnet/minecraft/world/level/entity/ChunkEntities;)V a
net/minecraft/world/level/entity/EntitySection cog
	LOGGER a
	chunkStatus c
	storage b
	add (Ljava/lang/Object;)V a
	getEntities ()Ljava/util/stream/Stream; b
	getEntities (Ljava/util/function/Predicate;Ljava/util/function/Consumer;)V a
	getEntities (Lnet/minecraft/world/level/entity/EntityTypeTest;Ljava/util/function/Predicate;Ljava/util/function/Consumer;)V a
	getStatus ()Lnet/minecraft/world/level/entity/Visibility; c
	isEmpty ()Z a
	remove (Ljava/lang/Object;)Z b
	size ()I d
	updateChunkStatus (Lnet/minecraft/world/level/entity/Visibility;)Lnet/minecraft/world/level/entity/Visibility; a
net/minecraft/world/level/entity/EntitySectionStorage coh
	entityClass a
	intialSectionVisibility b
	sectionIds d
	sections c
	count ()I b
	createBoundingBoxCheck (Lnet/minecraft/world/phys/AABB;)Ljava/util/function/Predicate; a
	createSection (J)Lnet/minecraft/world/level/entity/EntitySection; g
	forEachAccessibleSection (Lnet/minecraft/world/phys/AABB;Ljava/util/function/Consumer;)V a
	getAllChunksWithExistingSections ()Lit/unimi/dsi/fastutil/longs/LongSet; a
	getChunkKeyFromSectionKey (J)J f
	getChunkSections (II)Lit/unimi/dsi/fastutil/longs/LongSortedSet; a
	getEntities (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Consumer;)V a
	getEntities (Lnet/minecraft/world/phys/AABB;Ljava/util/function/Consumer;)V b
	getExistingSectionPositionsInChunk (J)Ljava/util/stream/LongStream; a
	getExistingSectionsInChunk (J)Ljava/util/stream/Stream; b
	getOrCreateSection (J)Lnet/minecraft/world/level/entity/EntitySection; c
	getSection (J)Lnet/minecraft/world/level/entity/EntitySection; d
	remove (J)V e
net/minecraft/world/level/entity/EntityTickList coi
	active a
	iterated c
	passive b
	add (Lnet/minecraft/world/entity/Entity;)V a
	contains (Lnet/minecraft/world/entity/Entity;)Z c
	ensureActiveIsNotIterated ()V a
	forEach (Ljava/util/function/Consumer;)V a
	remove (Lnet/minecraft/world/entity/Entity;)V b
net/minecraft/world/level/entity/EntityTypeTest coj
	forClass (Ljava/lang/Class;)Lnet/minecraft/world/level/entity/EntityTypeTest; a
	getBaseClass ()Ljava/lang/Class; a
	tryCast (Ljava/lang/Object;)Ljava/lang/Object; a
net/minecraft/world/level/entity/LevelCallback cok
	onCreated (Ljava/lang/Object;)V f
	onDestroyed (Ljava/lang/Object;)V e
	onTickingEnd (Ljava/lang/Object;)V c
	onTickingStart (Ljava/lang/Object;)V d
	onTrackingEnd (Ljava/lang/Object;)V a
	onTrackingStart (Ljava/lang/Object;)V b
net/minecraft/world/level/entity/LevelEntityGetter col
	get (I)Lnet/minecraft/world/level/entity/EntityAccess; a
	get (Ljava/util/UUID;)Lnet/minecraft/world/level/entity/EntityAccess; a
	get (Lnet/minecraft/world/level/entity/EntityTypeTest;Ljava/util/function/Consumer;)V a
	get (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Consumer;)V a
	get (Lnet/minecraft/world/phys/AABB;Ljava/util/function/Consumer;)V a
	getAll ()Ljava/lang/Iterable; a
net/minecraft/world/level/entity/LevelEntityGetterAdapter com
	sectionStorage b
	visibleEntities a
	get (I)Lnet/minecraft/world/level/entity/EntityAccess; a
	get (Ljava/util/UUID;)Lnet/minecraft/world/level/entity/EntityAccess; a
	get (Lnet/minecraft/world/level/entity/EntityTypeTest;Ljava/util/function/Consumer;)V a
	get (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Consumer;)V a
	get (Lnet/minecraft/world/phys/AABB;Ljava/util/function/Consumer;)V a
	getAll ()Ljava/lang/Iterable; a
net/minecraft/world/level/entity/PersistentEntitySectionManager coo
	LOGGER a
	callbacks c
	chunkLoadStatuses i
	chunkVisibility h
	chunksToUnload j
	entityGetter g
	knownUuids b
	loadingInbox k
	permanentStorage d
	sectionStorage f
	visibleEntityStorage e
	addEntity (Lnet/minecraft/world/level/entity/EntityAccess;Z)Z a
	addEntityUuid (Lnet/minecraft/world/level/entity/EntityAccess;)Z b
	addLegacyChunkEntities (Ljava/util/stream/Stream;)V a
	addNewEntity (Lnet/minecraft/world/level/entity/EntityAccess;)Z a
	addWorldGenChunkEntities (Ljava/util/stream/Stream;)V b
	areEntitiesLoaded (J)Z a
	autoSave ()V b
	dumpSections (Ljava/io/Writer;)V a
	ensureChunkQueuedForLoad (J)V b
	gatherStats ()Ljava/lang/String; e
	getAllChunksToSave ()Lit/unimi/dsi/fastutil/longs/LongSet; h
	getEffectiveStatus (Lnet/minecraft/world/level/entity/EntityAccess;Lnet/minecraft/world/level/entity/Visibility;)Lnet/minecraft/world/level/entity/Visibility; a
	getEntityGetter ()Lnet/minecraft/world/level/entity/LevelEntityGetter; d
	isLoaded (Ljava/util/UUID;)Z a
	isPositionTicking (Lnet/minecraft/core/BlockPos;)Z a
	isPositionTicking (Lnet/minecraft/world/level/ChunkPos;)Z a
	processChunkUnload (J)Z d
	processPendingLoads ()V g
	processUnloads ()V f
	removeSectionIfEmpty (JLnet/minecraft/world/level/entity/EntitySection;)V a
	requestChunkLoad (J)V c
	saveAll ()V c
	startTicking (Lnet/minecraft/world/level/entity/EntityAccess;)V c
	startTracking (Lnet/minecraft/world/level/entity/EntityAccess;)V e
	stopTicking (Lnet/minecraft/world/level/entity/EntityAccess;)V d
	stopTracking (Lnet/minecraft/world/level/entity/EntityAccess;)V f
	storeChunkSections (JLjava/util/function/Consumer;)Z a
	tick ()V a
	unloadEntity (Lnet/minecraft/world/level/entity/EntityAccess;)V g
	updateChunkStatus (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/server/level/ChunkHolder$FullChunkStatus;)V a
	updateChunkStatus (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/entity/Visibility;)V a
net/minecraft/world/level/entity/PersistentEntitySectionManager$Callback coo$a
	currentSection e
	currentSectionKey d
	entity c
	onMove ()V a
	onRemove (Lnet/minecraft/world/entity/Entity$RemovalReason;)V a
	updateStatus (Lnet/minecraft/world/level/entity/Visibility;Lnet/minecraft/world/level/entity/Visibility;)V a
net/minecraft/world/level/entity/PersistentEntitySectionManager$ChunkLoadStatus coo$b
	$VALUES d
	FRESH a
	LOADED c
	PENDING b
	$values ()[Lnet/minecraft/world/level/entity/PersistentEntitySectionManager$ChunkLoadStatus; a
net/minecraft/world/level/entity/TransientEntitySectionManager cop
	LOGGER a
	callbacks b
	entityGetter f
	entityStorage c
	sectionStorage d
	tickingChunks e
	addEntity (Lnet/minecraft/world/level/entity/EntityAccess;)V a
	count ()I b
	gatherStats ()Ljava/lang/String; c
	getEntityGetter ()Lnet/minecraft/world/level/entity/LevelEntityGetter; a
	removeSectionIfEmpty (JLnet/minecraft/world/level/entity/EntitySection;)V a
	startTicking (Lnet/minecraft/world/level/ChunkPos;)V a
	stopTicking (Lnet/minecraft/world/level/ChunkPos;)V b
net/minecraft/world/level/entity/TransientEntitySectionManager$Callback cop$a
	currentSection e
	currentSectionKey d
	entity c
	onMove ()V a
	onRemove (Lnet/minecraft/world/entity/Entity$RemovalReason;)V a
net/minecraft/world/level/entity/Visibility coq
	$VALUES f
	HIDDEN a
	TICKING c
	TRACKED b
	accessible d
	ticking e
	$values ()[Lnet/minecraft/world/level/entity/Visibility; c
	fromFullChunkStatus (Lnet/minecraft/server/level/ChunkHolder$FullChunkStatus;)Lnet/minecraft/world/level/entity/Visibility; a
	isAccessible ()Z b
	isTicking ()Z a
net/minecraft/world/level/gameevent/BlockPositionSource cos
	CODEC a
	pos c
	getPosition (Lnet/minecraft/world/level/Level;)Ljava/util/Optional; a
	getType ()Lnet/minecraft/world/level/gameevent/PositionSourceType; a
net/minecraft/world/level/gameevent/BlockPositionSource$Type cos$a
	codec ()Lcom/mojang/serialization/Codec; a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/level/gameevent/BlockPositionSource; a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/level/gameevent/PositionSource; b
	write (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/level/gameevent/BlockPositionSource;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/level/gameevent/PositionSource;)V a
net/minecraft/world/level/gameevent/EntityPositionSource cot
	CODEC a
	sourceEntity d
	sourceEntityId c
	getPosition (Lnet/minecraft/world/level/Level;)Ljava/util/Optional; a
	getType ()Lnet/minecraft/world/level/gameevent/PositionSourceType; a
net/minecraft/world/level/gameevent/EntityPositionSource$Type cot$a
	codec ()Lcom/mojang/serialization/Codec; a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/level/gameevent/EntityPositionSource; a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/level/gameevent/PositionSource; b
	write (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/level/gameevent/EntityPositionSource;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/level/gameevent/PositionSource;)V a
net/minecraft/world/level/gameevent/EuclideanGameEventDispatcher cou
	level c
	listeners b
	isEmpty ()Z a
	post (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)V a
	postToListener (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/gameevent/GameEventListener;)Z a
	register (Lnet/minecraft/world/level/gameevent/GameEventListener;)V a
	unregister (Lnet/minecraft/world/level/gameevent/GameEventListener;)V b
net/minecraft/world/level/gameevent/GameEvent cov
	BLOCK_ATTACH a
	BLOCK_CHANGE b
	BLOCK_CLOSE c
	BLOCK_DESTROY d
	BLOCK_DETACH e
	BLOCK_OPEN f
	BLOCK_PLACE g
	BLOCK_PRESS h
	BLOCK_SWITCH i
	BLOCK_UNPRESS j
	BLOCK_UNSWITCH k
	CONTAINER_CLOSE l
	CONTAINER_OPEN m
	DEFAULT_NOTIFICATION_RADIUS T
	DISPENSE_FAIL n
	DRINKING_FINISH o
	EAT p
	ELYTRA_FREE_FALL q
	ENTITY_DAMAGED r
	ENTITY_KILLED s
	ENTITY_PLACE t
	EQUIP u
	EXPLODE v
	FISHING_ROD_CAST w
	FISHING_ROD_REEL_IN x
	FLAP y
	FLUID_PICKUP z
	FLUID_PLACE A
	HIT_GROUND B
	LIGHTNING_STRIKE D
	MINECART_MOVING E
	MOB_INTERACT C
	PISTON_CONTRACT F
	PISTON_EXTEND G
	PRIME_FUSE H
	PROJECTILE_LAND I
	PROJECTILE_SHOOT J
	RAVAGER_ROAR K
	RING_BELL L
	SHEAR M
	SHULKER_CLOSE N
	SHULKER_OPEN O
	SPLASH P
	STEP Q
	SWIM R
	WOLF_SHAKING S
	name U
	notificationRadius V
	getName ()Ljava/lang/String; a
	getNotificationRadius ()I b
	register (Ljava/lang/String;)Lnet/minecraft/world/level/gameevent/GameEvent; a
	register (Ljava/lang/String;I)Lnet/minecraft/world/level/gameevent/GameEvent; a
net/minecraft/world/level/gameevent/GameEventDispatcher cow
	NOOP a
	isEmpty ()Z a
	post (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)V a
	register (Lnet/minecraft/world/level/gameevent/GameEventListener;)V a
	unregister (Lnet/minecraft/world/level/gameevent/GameEventListener;)V b
net/minecraft/world/level/gameevent/GameEventListener cox
	getListenerRadius ()I b
	getListenerSource ()Lnet/minecraft/world/level/gameevent/PositionSource; a
	handleGameEvent (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/gameevent/GameEventListenerRegistrar coy
	listener a
	sectionPos b
	ifEventDispatcherExists (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/SectionPos;Ljava/util/function/Consumer;)V a
	onListenerMove (Lnet/minecraft/world/level/Level;)V b
	onListenerRemoved (Lnet/minecraft/world/level/Level;)V a
net/minecraft/world/level/gameevent/PositionSource coz
	CODEC b
	getPosition (Lnet/minecraft/world/level/Level;)Ljava/util/Optional; a
	getType ()Lnet/minecraft/world/level/gameevent/PositionSourceType; a
net/minecraft/world/level/gameevent/PositionSourceType cpa
	BLOCK a
	ENTITY b
	codec ()Lcom/mojang/serialization/Codec; a
	fromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/level/gameevent/PositionSource; c
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/level/gameevent/PositionSource; b
	register (Ljava/lang/String;Lnet/minecraft/world/level/gameevent/PositionSourceType;)Lnet/minecraft/world/level/gameevent/PositionSourceType; a
	toNetwork (Lnet/minecraft/world/level/gameevent/PositionSource;Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/level/gameevent/PositionSource;)V a
net/minecraft/world/level/gameevent/vibrations/VibrationListener cpc
	config c
	listenerRange b
	listenerSource a
	receivingDistance e
	receivingEvent d
	travelTimeInTicks f
	getListenerRadius ()I b
	getListenerSource ()Lnet/minecraft/world/level/gameevent/PositionSource; a
	handleGameEvent (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)Z a
	isOccluded (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Z a
	isValidVibration (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/entity/Entity;)Z a
	sendSignal (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)V a
	tick (Lnet/minecraft/world/level/Level;)V a
net/minecraft/world/level/gameevent/vibrations/VibrationListener$VibrationListenerConfig cpc$a
	onSignalReceive (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/gameevent/GameEventListener;Lnet/minecraft/world/level/gameevent/GameEvent;I)V a
	shouldListen (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/gameevent/GameEventListener;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/entity/Entity;)Z a
net/minecraft/world/level/gameevent/vibrations/VibrationPath cpd
	CODEC a
	arrivalInTicks d
	destination c
	origin b
	getArrivalInTicks ()I a
	getDestination ()Lnet/minecraft/world/level/gameevent/PositionSource; c
	getOrigin ()Lnet/minecraft/core/BlockPos; b
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/level/gameevent/vibrations/VibrationPath; a
	write (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/level/gameevent/vibrations/VibrationPath;)V a
net/minecraft/world/level/levelgen/Aquifer cpf
	ALWAYS_LAVA_AT_OR_BELOW_Y_INDEX a
	ALWAYS_USE_SEA_LEVEL_WHEN_ABOVE b
	computeState (Lnet/minecraft/world/level/levelgen/BaseStoneSource;IIID)Lnet/minecraft/world/level/block/state/BlockState; a
	create (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/synth/NormalNoise;Lnet/minecraft/world/level/levelgen/synth/NormalNoise;Lnet/minecraft/world/level/levelgen/synth/NormalNoise;Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings;Lnet/minecraft/world/level/levelgen/NoiseSampler;II)Lnet/minecraft/world/level/levelgen/Aquifer; a
	createDisabled (ILnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/levelgen/Aquifer; a
	shouldScheduleFluidUpdate ()Z a
net/minecraft/world/level/levelgen/Aquifer$NoiseBasedAquifer cpf$a
	X_RANGE c
	X_SEPARATION f
	X_SPACING i
	Y_RANGE d
	Y_SEPARATION g
	Y_SPACING j
	Z_RANGE e
	Z_SEPARATION h
	Z_SPACING k
	aquiferCache p
	aquiferLocationCache q
	barrierNoise l
	gridSizeX w
	gridSizeZ x
	lavaNoise n
	minGridX t
	minGridY u
	minGridZ v
	noiseGeneratorSettings o
	sampler s
	shouldScheduleFluidUpdate r
	waterLevelNoise m
	calculatePressure (IDLnet/minecraft/world/level/levelgen/Aquifer$NoiseBasedAquifer$AquiferStatus;Lnet/minecraft/world/level/levelgen/Aquifer$NoiseBasedAquifer$AquiferStatus;)D a
	computeAquifer (III)Lnet/minecraft/world/level/levelgen/Aquifer$NoiseBasedAquifer$AquiferStatus; b
	computeState (Lnet/minecraft/world/level/levelgen/BaseStoneSource;IIID)Lnet/minecraft/world/level/block/state/BlockState; a
	getAquiferStatus (J)Lnet/minecraft/world/level/levelgen/Aquifer$NoiseBasedAquifer$AquiferStatus; a
	getIndex (III)I a
	gridX (I)I b
	gridY (I)I c
	gridZ (I)I d
	isLavaLevel (I)Z a
	shouldScheduleFluidUpdate ()Z a
	similarity (II)D a
net/minecraft/world/level/levelgen/Aquifer$NoiseBasedAquifer$AquiferStatus cpf$a$a
	fluidLevel a
	fluidType b
net/minecraft/world/level/levelgen/BaseStoneSource cpg
	getBaseBlock (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/levelgen/Beardifier cph
	BEARD_KERNEL d
	BEARD_KERNEL_RADIUS b
	BEARD_KERNEL_SIZE c
	NO_BEARDS a
	junctionIterator h
	junctions f
	pieceIterator g
	rigids e
	beardifyOrBury (III)D a
	computeBeardContribution (III)D d
	getBeardContribution (III)D c
	getBuryContribution (III)D b
net/minecraft/world/level/levelgen/Cavifier cpi
	CHEESE_NOISE_RANGE s
	SURFACE_DENSITY_THRESHOLD t
	caveEntranceNoiseSource q
	cheeseNoiseSource r
	layerNoiseSource c
	minCellY a
	pillarNoiseSource d
	pillarRarenessModulator e
	pillarThicknessModulator f
	spaghetti2dElevationModulator h
	spaghetti2dNoiseSource g
	spaghetti2dRarityModulator i
	spaghetti2dThicknessModulator j
	spaghetti3dNoiseSource1 k
	spaghetti3dNoiseSource2 l
	spaghetti3dRarityModulator m
	spaghetti3dThicknessModulator n
	spaghettiRoughnessModulator p
	spaghettiRoughnessNoise o
	addEntrances (DIII)D a
	clampToUnit (D)D a
	getLayerizedCaverns (III)D b
	getPillars (III)D a
	getSpaghetti2d (III)D d
	getSpaghetti3d (III)D c
	sampleWithRarity (Lnet/minecraft/world/level/levelgen/synth/NormalNoise;DDDD)D a
	spaghettiRoughness (III)D e
net/minecraft/world/level/levelgen/Cavifier$QuantizedSpaghettiRarity cpi$a
	getSpaghettiRarity3D (D)D b
	getSphaghettiRarity2D (D)D a
net/minecraft/world/level/levelgen/Column cpj
	above (I)Lnet/minecraft/world/level/levelgen/Column; c
	around (II)Lnet/minecraft/world/level/levelgen/Column$Range; a
	below (I)Lnet/minecraft/world/level/levelgen/Column; a
	create (Ljava/util/OptionalInt;Ljava/util/OptionalInt;)Lnet/minecraft/world/level/levelgen/Column; a
	fromHighest (I)Lnet/minecraft/world/level/levelgen/Column; b
	fromLowest (I)Lnet/minecraft/world/level/levelgen/Column; d
	getCeiling ()Ljava/util/OptionalInt; b
	getFloor ()Ljava/util/OptionalInt; c
	getHeight ()Ljava/util/OptionalInt; d
	inside (II)Lnet/minecraft/world/level/levelgen/Column$Range; b
	line ()Lnet/minecraft/world/level/levelgen/Column; a
	scan (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;ILjava/util/function/Predicate;Ljava/util/function/Predicate;)Ljava/util/Optional; a
	scanDirection (Lnet/minecraft/world/level/LevelSimulatedReader;ILjava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos$MutableBlockPos;ILnet/minecraft/core/Direction;)Ljava/util/OptionalInt; a
	withCeiling (Ljava/util/OptionalInt;)Lnet/minecraft/world/level/levelgen/Column; b
	withFloor (Ljava/util/OptionalInt;)Lnet/minecraft/world/level/levelgen/Column; a
net/minecraft/world/level/levelgen/Column$Line cpj$a
	INSTANCE a
	getCeiling ()Ljava/util/OptionalInt; b
	getFloor ()Ljava/util/OptionalInt; c
	getHeight ()Ljava/util/OptionalInt; d
net/minecraft/world/level/levelgen/Column$Range cpj$b
	ceiling b
	floor a
	ceiling ()I e
	floor ()I f
	getCeiling ()Ljava/util/OptionalInt; b
	getFloor ()Ljava/util/OptionalInt; c
	getHeight ()Ljava/util/OptionalInt; d
	height ()I g
net/minecraft/world/level/levelgen/Column$Ray cpj$c
	edge a
	pointingUp b
	getCeiling ()Ljava/util/OptionalInt; b
	getFloor ()Ljava/util/OptionalInt; c
	getHeight ()Ljava/util/OptionalInt; d
net/minecraft/world/level/levelgen/DebugLevelSource cpk
	AIR e
	ALL_BLOCKS j
	BARRIER f
	BARRIER_HEIGHT h
	BLOCK_MARGIN i
	CODEC d
	GRID_HEIGHT l
	GRID_WIDTH k
	HEIGHT g
	biomes m
	applyBiomeDecoration (Lnet/minecraft/server/level/WorldGenRegion;Lnet/minecraft/world/level/StructureFeatureManager;)V a
	applyCarvers (JLnet/minecraft/world/level/biome/BiomeManager;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)V a
	biomes ()Lnet/minecraft/core/Registry; h
	buildSurfaceAndBedrock (Lnet/minecraft/server/level/WorldGenRegion;Lnet/minecraft/world/level/chunk/ChunkAccess;)V a
	codec ()Lcom/mojang/serialization/Codec; a
	fillFromNoise (Ljava/util/concurrent/Executor;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;)Ljava/util/concurrent/CompletableFuture; a
	getBaseColumn (IILnet/minecraft/world/level/LevelHeightAccessor;)Lnet/minecraft/world/level/NoiseColumn; a
	getBaseHeight (IILnet/minecraft/world/level/levelgen/Heightmap$Types;Lnet/minecraft/world/level/LevelHeightAccessor;)I a
	getBlockStateFor (II)Lnet/minecraft/world/level/block/state/BlockState; a
	withSeed (J)Lnet/minecraft/world/level/chunk/ChunkGenerator; a
net/minecraft/world/level/levelgen/Decoratable cpl
	count (I)Ljava/lang/Object; b
	count (Lnet/minecraft/util/valueproviders/IntProvider;)Ljava/lang/Object; a
	countRandom (I)Ljava/lang/Object; c
	decorated (Lnet/minecraft/world/level/levelgen/placement/ConfiguredDecorator;)Ljava/lang/Object; a
	range (Lnet/minecraft/world/level/levelgen/feature/configurations/RangeDecoratorConfiguration;)Ljava/lang/Object; a
	rangeTriangle (Lnet/minecraft/world/level/levelgen/VerticalAnchor;Lnet/minecraft/world/level/levelgen/VerticalAnchor;)Ljava/lang/Object; b
	rangeUniform (Lnet/minecraft/world/level/levelgen/VerticalAnchor;Lnet/minecraft/world/level/levelgen/VerticalAnchor;)Ljava/lang/Object; a
	rarity (I)Ljava/lang/Object; a
	squared ()Ljava/lang/Object; a
net/minecraft/world/level/levelgen/DepthBasedReplacingBaseStoneSource cpm
	ALWAYS_REPLACE_BELOW_Y a
	NEVER_REPLACE_ABOVE_Y b
	normalBlock e
	random c
	replacementBlock f
	seed d
	settings g
net/minecraft/world/level/levelgen/FlatLevelSource cpn
	CODEC d
	settings e
	buildSurfaceAndBedrock (Lnet/minecraft/server/level/WorldGenRegion;Lnet/minecraft/world/level/chunk/ChunkAccess;)V a
	codec ()Lcom/mojang/serialization/Codec; a
	fillFromNoise (Ljava/util/concurrent/Executor;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;)Ljava/util/concurrent/CompletableFuture; a
	getBaseColumn (IILnet/minecraft/world/level/LevelHeightAccessor;)Lnet/minecraft/world/level/NoiseColumn; a
	getBaseHeight (IILnet/minecraft/world/level/levelgen/Heightmap$Types;Lnet/minecraft/world/level/LevelHeightAccessor;)I a
	getSpawnHeight (Lnet/minecraft/world/level/LevelHeightAccessor;)I a
	settings ()Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings; h
	withSeed (J)Lnet/minecraft/world/level/chunk/ChunkGenerator; a
net/minecraft/world/level/levelgen/GenerationStep cpo
net/minecraft/world/level/levelgen/GenerationStep$Carving cpo$a
	$VALUES f
	AIR a
	BY_NAME d
	CODEC c
	LIQUID b
	name e
	$values ()[Lnet/minecraft/world/level/levelgen/GenerationStep$Carving; b
	byName (Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/GenerationStep$Carving; a
	getName ()Ljava/lang/String; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/levelgen/GenerationStep$Decoration cpo$b
	$VALUES k
	LAKES b
	LOCAL_MODIFICATIONS c
	RAW_GENERATION a
	STRONGHOLDS f
	SURFACE_STRUCTURES e
	TOP_LAYER_MODIFICATION j
	UNDERGROUND_DECORATION h
	UNDERGROUND_ORES g
	UNDERGROUND_STRUCTURES d
	VEGETAL_DECORATION i
	$values ()[Lnet/minecraft/world/level/levelgen/GenerationStep$Decoration; a
net/minecraft/world/level/levelgen/GeodeBlockSettings cpp
	CODEC i
	alternateInnerLayerProvider c
	cannotReplace g
	fillingProvider a
	innerLayerProvider b
	innerPlacements f
	invalidBlocks h
	middleLayerProvider d
	outerLayerProvider e
net/minecraft/world/level/levelgen/GeodeCrackSettings cpq
	CODEC a
	baseCrackSize c
	crackPointOffset d
	generateCrackChance b
net/minecraft/world/level/levelgen/GeodeLayerSettings cpr
	CODEC a
	LAYER_RANGE f
	filling b
	innerLayer c
	middleLayer d
	outerLayer e
net/minecraft/world/level/levelgen/Heightmap cps
	LOGGER a
	MATERIAL_MOTION_BLOCKING c
	NOT_AIR b
	chunk f
	data d
	isOpaque e
	getFirstAvailable (I)I a
	getFirstAvailable (II)I a
	getHighestTaken (II)I b
	getIndex (II)I c
	getRawData ()[J a
	primeHeightmaps (Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/Set;)V a
	setHeight (III)V a
	setRawData (Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/levelgen/Heightmap$Types;[J)V a
	update (IIILnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/levelgen/Heightmap$Types cps$a
	$VALUES l
	CODEC g
	MOTION_BLOCKING e
	MOTION_BLOCKING_NO_LEAVES f
	OCEAN_FLOOR d
	OCEAN_FLOOR_WG c
	REVERSE_LOOKUP k
	WORLD_SURFACE b
	WORLD_SURFACE_WG a
	isOpaque j
	serializationKey h
	usage i
	$values ()[Lnet/minecraft/world/level/levelgen/Heightmap$Types; f
	getFromKey (Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/Heightmap$Types; a
	getSerializationKey ()Ljava/lang/String; a
	getSerializedName ()Ljava/lang/String; c
	isOpaque ()Ljava/util/function/Predicate; e
	keepAfterWorldgen ()Z d
	sendToClient ()Z b
net/minecraft/world/level/levelgen/Heightmap$Usage cps$b
	$VALUES d
	CLIENT c
	LIVE_WORLD b
	WORLDGEN a
	$values ()[Lnet/minecraft/world/level/levelgen/Heightmap$Usage; a
net/minecraft/world/level/levelgen/NoiseBasedChunkGenerator cpt
	AIR h
	CODEC d
	EMPTY_COLUMN i
	barrierNoise p
	baseStoneSource v
	cellCountX l
	cellCountY m
	cellCountZ n
	cellHeight j
	cellWidth k
	defaultBlock e
	defaultFluid f
	height t
	lavaNoise r
	noodleCavifier x
	oreVeinifier w
	sampler u
	seed s
	settings g
	surfaceNoise o
	waterLevelNoise q
	buildSurfaceAndBedrock (Lnet/minecraft/server/level/WorldGenRegion;Lnet/minecraft/world/level/chunk/ChunkAccess;)V a
	codec ()Lcom/mojang/serialization/Codec; a
	createAquifer (Lnet/minecraft/world/level/chunk/ChunkAccess;)Lnet/minecraft/world/level/levelgen/Aquifer; a
	createBaseStoneSource (ILnet/minecraft/world/level/ChunkPos;Ljava/util/function/Consumer;)Ljava/util/function/DoubleFunction; b
	createCaveNoiseModifier (ILnet/minecraft/world/level/ChunkPos;Ljava/util/function/Consumer;)Ljava/util/function/DoubleFunction; a
	doFill (Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;II)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	fillFromNoise (Ljava/util/concurrent/Executor;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;)Ljava/util/concurrent/CompletableFuture; a
	fillNoiseColumn ([DIIII)V a
	getAquifer (IILnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/world/level/levelgen/Aquifer; a
	getBaseColumn (IILnet/minecraft/world/level/LevelHeightAccessor;)Lnet/minecraft/world/level/NoiseColumn; a
	getBaseHeight (IILnet/minecraft/world/level/levelgen/Heightmap$Types;Lnet/minecraft/world/level/LevelHeightAccessor;)I a
	getBaseStoneSource ()Lnet/minecraft/world/level/levelgen/BaseStoneSource; g
	getGenDepth ()I d
	getMinY ()I f
	getMobsAt (Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/util/random/WeightedRandomList; a
	getSeaLevel ()I e
	isAquifersEnabled ()Z h
	iterateNoiseColumn (II[Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/function/Predicate;II)Ljava/util/OptionalInt; a
	makeAndFillNoiseColumn (IIII)[D a
	setBedrock (Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/Random;)V a
	spawnOriginalMobs (Lnet/minecraft/server/level/WorldGenRegion;)V a
	stable (JLnet/minecraft/resources/ResourceKey;)Z a
	updateNoiseAndGenerateBaseState (Lnet/minecraft/world/level/levelgen/Beardifier;Lnet/minecraft/world/level/levelgen/Aquifer;Lnet/minecraft/world/level/levelgen/BaseStoneSource;Lnet/minecraft/world/level/levelgen/NoiseModifier;IIID)Lnet/minecraft/world/level/block/state/BlockState; a
	withSeed (J)Lnet/minecraft/world/level/chunk/ChunkGenerator; a
net/minecraft/world/level/levelgen/NoiseBasedChunkGenerator$NoodleCaveNoiseModifier cpt$a
	factorZ g
	ridgeA e
	ridgeB f
	thickness d
	toggle c
	listInterpolators (Ljava/util/function/Consumer;)V a
	prepare (D)Lnet/minecraft/world/level/levelgen/NoiseModifier; a
net/minecraft/world/level/levelgen/NoiseBasedChunkGenerator$OreVeinNoiseSource cpt$b
	factorZ e
	random g
	seed f
	veinA c
	veinB d
	veininess b
	listInterpolators (Ljava/util/function/Consumer;)V a
	prepare (D)V a
net/minecraft/world/level/levelgen/NoiseGeneratorSettings cpu
	AMPLIFIED d
	BUILTIN_OVERWORLD w
	CAVES g
	CODEC b
	DIRECT_CODEC a
	END f
	FLOATING_ISLANDS h
	NETHER e
	OVERWORLD c
	aquifersEnabled r
	bedrockFloorPosition n
	bedrockRoofPosition m
	deepslateEnabled t
	defaultBlock k
	defaultFluid l
	disableMobGeneration q
	minSurfaceLevel p
	noiseCavesEnabled s
	noiseSettings j
	noodleCavesEnabled v
	oreVeinsEnabled u
	seaLevel o
	structureSettings i
	bootstrap ()Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings; o
	disableMobGeneration ()Z i
	endLikePreset (Lnet/minecraft/world/level/levelgen/StructureSettings;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;ZZ)Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings; a
	getBedrockFloorPosition ()I f
	getBedrockRoofPosition ()I e
	getDefaultBlock ()Lnet/minecraft/world/level/block/state/BlockState; c
	getDefaultFluid ()Lnet/minecraft/world/level/block/state/BlockState; d
	getMinSurfaceLevel ()I h
	isAquifersEnabled ()Z j
	isDeepslateEnabled ()Z l
	isNoiseCavesEnabled ()Z k
	isNoodleCavesEnabled ()Z n
	isOreVeinsEnabled ()Z m
	netherLikePreset (Lnet/minecraft/world/level/levelgen/StructureSettings;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings; a
	noiseSettings ()Lnet/minecraft/world/level/levelgen/NoiseSettings; b
	overworld (Lnet/minecraft/world/level/levelgen/StructureSettings;Z)Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings; a
	register (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings;)Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings; a
	seaLevel ()I g
	stable (Lnet/minecraft/resources/ResourceKey;)Z a
	structureSettings ()Lnet/minecraft/world/level/levelgen/StructureSettings; a
net/minecraft/world/level/levelgen/NoiseInterpolator cpv
	cellCountY c
	cellCountZ d
	cellNoiseMinY e
	firstCellXInChunk u
	firstCellZInChunk v
	noise000 g
	noise001 h
	noise010 k
	noise011 l
	noise100 i
	noise101 j
	noise110 m
	noise111 n
	noiseColumnFiller f
	slice0 a
	slice1 b
	valueXZ00 o
	valueXZ01 q
	valueXZ10 p
	valueXZ11 r
	valueZ0 s
	valueZ1 t
	advanceCellX (I)V a
	allocateSlice (II)[[D b
	calculateValue (D)D c
	fillSlice ([[DI)V a
	initializeForFirstCellX ()V a
	selectCellYZ (II)V a
	swapSlices ()V b
	updateForX (D)V b
	updateForY (D)V a
net/minecraft/world/level/levelgen/NoiseInterpolator$NoiseColumnFiller cpv$a
net/minecraft/world/level/levelgen/NoiseModifier cpw
	PASSTHROUGH b
net/minecraft/world/level/levelgen/NoiseSampler cpx
	BIOME_WEIGHTS b
	OLD_CELL_COUNT_Y a
	biomeSource c
	blendedNoise h
	bottomSlideOffset p
	bottomSlideSize o
	bottomSlideTarget n
	caveNoiseModifier s
	cellCountY f
	cellHeight e
	cellWidth d
	depthNoise j
	dimensionDensityFactor q
	dimensionDensityOffset r
	islandNoise i
	noiseSettings g
	topSlideOffset m
	topSlideSize l
	topSlideTarget k
	applySlide (DI)D a
	computeInitialDensity (IDDD)D a
	fillNoiseColumn ([DIILnet/minecraft/world/level/levelgen/NoiseSettings;III)V a
	getRandomDensity (II)D a
net/minecraft/world/level/levelgen/NoiseSamplingSettings cpy
	CODEC a
	SCALE_RANGE b
	xzFactor e
	xzScale c
	yFactor f
	yScale d
	xzFactor ()D c
	xzScale ()D a
	yFactor ()D d
	yScale ()D b
net/minecraft/world/level/levelgen/NoiseSettings cpz
	CODEC a
	bottomSlideSettings f
	densityFactor i
	densityOffset j
	height c
	isAmplified n
	islandNoiseOverride m
	minY b
	noiseSamplingSettings d
	noiseSizeHorizontal g
	noiseSizeVertical h
	randomDensityOffset l
	topSlideSettings e
	useSimplexSurfaceNoise k
	bottomSlideSettings ()Lnet/minecraft/world/level/levelgen/NoiseSlideSettings; e
	create (IILnet/minecraft/world/level/levelgen/NoiseSamplingSettings;Lnet/minecraft/world/level/levelgen/NoiseSlideSettings;Lnet/minecraft/world/level/levelgen/NoiseSlideSettings;IIDDZZZZ)Lnet/minecraft/world/level/levelgen/NoiseSettings; a
	densityFactor ()D h
	densityOffset ()D i
	guardY (Lnet/minecraft/world/level/levelgen/NoiseSettings;)Lcom/mojang/serialization/DataResult; a
	height ()I b
	isAmplified ()Z m
	islandNoiseOverride ()Z l
	minY ()I a
	noiseSamplingSettings ()Lnet/minecraft/world/level/levelgen/NoiseSamplingSettings; c
	noiseSizeHorizontal ()I f
	noiseSizeVertical ()I g
	randomDensityOffset ()Z k
	topSlideSettings ()Lnet/minecraft/world/level/levelgen/NoiseSlideSettings; d
	useSimplexSurfaceNoise ()Z j
net/minecraft/world/level/levelgen/NoiseSlideSettings cqa
	CODEC a
	offset d
	size c
	target b
	offset ()I c
	size ()I b
	target ()I a
net/minecraft/world/level/levelgen/NoodleCavifier cqb
	NOODLES_MAX_Y a
	SPACING_AND_STRAIGHTNESS b
	XZ_FREQUENCY c
	Y_FREQUENCY d
	noodleANoiseSource g
	noodleBNoiseSource h
	thicknessNoiseSource f
	toggleNoiseSource e
	fillNoiseColumn ([DIIIILnet/minecraft/world/level/levelgen/synth/NormalNoise;D)V a
	fillNoiseColumn ([DIIIILnet/minecraft/world/level/levelgen/synth/NormalNoise;DD)V a
	fillRidgeANoiseColumn ([DIIII)V c
	fillRidgeBNoiseColumn ([DIIII)V d
	fillThicknessNoiseColumn ([DIIII)V b
	fillToggleNoiseColumn ([DIIII)V a
	noodleCavify (DIIIDDDDI)D a
net/minecraft/world/level/levelgen/OreVeinifier cqc
	CHANCE_OF_RAW_ORE_BLOCK l
	EDGE_ROUNDOFF_BEGIN f
	MAX_EDGE_ROUNDOFF g
	MAX_RICHNESS j
	MAX_RICHNESS_THRESHOLD k
	MIN_RICHNESS i
	RARITY a
	RIDGE_NOISE_FREQUENCY b
	SKIP_ORE_IF_GAP_NOISE_IS_BELOW m
	THICKNESS c
	VEININESS_FREQUENCY e
	VEININESS_THRESHOLD d
	VEIN_SOLIDNESS h
	cellHeight v
	cellWidth u
	gapNoise t
	normalBlock p
	veinANoiseSource r
	veinBNoiseSource s
	veinMaxY n
	veinMinY o
	veininessNoiseSource q
	fillNoiseColumn ([DIILnet/minecraft/world/level/levelgen/synth/NormalNoise;DII)V a
	fillNoiseColumnA ([DIIII)V b
	fillNoiseColumnB ([DIIII)V c
	fillVeininessNoiseColumn ([DIIII)V a
	getVeinType (DI)Lnet/minecraft/world/level/levelgen/OreVeinifier$VeinType; a
	isVein (DD)Z a
	oreVeinify (Lnet/minecraft/world/level/levelgen/RandomSource;IIIDDD)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/levelgen/OreVeinifier$VeinType cqc$a
	$VALUES h
	COPPER a
	IRON b
	filler e
	maxY g
	minY f
	ore c
	rawOreBlock d
	$values ()[Lnet/minecraft/world/level/levelgen/OreVeinifier$VeinType; a
net/minecraft/world/level/levelgen/PatrolSpawner cqd
	nextTick a
	spawnPatrolMember (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;Z)Z a
	tick (Lnet/minecraft/server/level/ServerLevel;ZZ)I a
net/minecraft/world/level/levelgen/PhantomSpawner cqe
	nextTick a
	tick (Lnet/minecraft/server/level/ServerLevel;ZZ)I a
net/minecraft/world/level/levelgen/RandomSource cqf
	consumeCount (I)V a
net/minecraft/world/level/levelgen/SimpleRandomSource cqg
	DOUBLE_MULTIPLIER f
	FLOAT_MULTIPLIER e
	INCREMENT d
	MODULUS_BITS a
	MODULUS_MASK b
	MULTIPLIER c
	haveNextNextGaussian i
	nextNextGaussian h
	seed g
	next (I)I b
net/minecraft/world/level/levelgen/SingleBaseStoneSource cqh
	state a
net/minecraft/world/level/levelgen/StructureSettings cqi
	CODEC a
	DEFAULTS b
	DEFAULT_STRONGHOLD c
	stronghold e
	structureConfig d
	getConfig (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Lnet/minecraft/world/level/levelgen/feature/configurations/StructureFeatureConfiguration; a
	stronghold ()Lnet/minecraft/world/level/levelgen/feature/configurations/StrongholdConfiguration; b
	structureConfig ()Ljava/util/Map; a
net/minecraft/world/level/levelgen/VerticalAnchor cqj
	BOTTOM b
	CODEC a
	TOP c
	value d
	aboveBottom (I)Lnet/minecraft/world/level/levelgen/VerticalAnchor; b
	absolute (I)Lnet/minecraft/world/level/levelgen/VerticalAnchor; a
	belowTop (I)Lnet/minecraft/world/level/levelgen/VerticalAnchor; c
	bottom ()Lnet/minecraft/world/level/levelgen/VerticalAnchor; a
	merge (Lcom/mojang/datafixers/util/Either;)Lnet/minecraft/world/level/levelgen/VerticalAnchor; a
	resolveY (Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I a
	split (Lnet/minecraft/world/level/levelgen/VerticalAnchor;)Lcom/mojang/datafixers/util/Either; a
	top ()Lnet/minecraft/world/level/levelgen/VerticalAnchor; b
	value ()I c
net/minecraft/world/level/levelgen/VerticalAnchor$AboveBottom cqj$a
	CODEC b
	resolveY (Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I a
net/minecraft/world/level/levelgen/VerticalAnchor$Absolute cqj$b
	CODEC b
	resolveY (Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I a
net/minecraft/world/level/levelgen/VerticalAnchor$BelowTop cqj$c
	CODEC b
	resolveY (Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I a
net/minecraft/world/level/levelgen/WorldGenSettings cqk
	CODEC a
	LOGGER b
	dimensions f
	generateBonusChest e
	generateFeatures d
	legacyCustomOptions g
	seed c
	create (Lnet/minecraft/core/RegistryAccess;Ljava/util/Properties;)Lnet/minecraft/world/level/levelgen/WorldGenSettings; a
	demoSettings (Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/level/levelgen/WorldGenSettings; a
	dimensions ()Lnet/minecraft/core/MappedRegistry; d
	generateBonusChest ()Z c
	generateFeatures ()Z b
	guardExperimental ()Lcom/mojang/serialization/DataResult; m
	isDebug ()Z g
	isFlatWorld ()Z h
	isOldCustomizedWorld ()Z i
	levels ()Lcom/google/common/collect/ImmutableSet; f
	makeDefault (Lnet/minecraft/core/Registry;Lnet/minecraft/core/Registry;Lnet/minecraft/core/Registry;)Lnet/minecraft/world/level/levelgen/WorldGenSettings; a
	makeDefaultOverworld (Lnet/minecraft/core/Registry;Lnet/minecraft/core/Registry;J)Lnet/minecraft/world/level/levelgen/NoiseBasedChunkGenerator; a
	overworld ()Lnet/minecraft/world/level/chunk/ChunkGenerator; e
	seed ()J a
	stable ()Z n
	withBonusChest ()Lnet/minecraft/world/level/levelgen/WorldGenSettings; j
	withBonusChestToggled ()Lnet/minecraft/world/level/levelgen/WorldGenSettings; l
	withFeaturesToggled ()Lnet/minecraft/world/level/levelgen/WorldGenSettings; k
	withOverworld (Lnet/minecraft/core/MappedRegistry;Ljava/util/function/Supplier;Lnet/minecraft/world/level/chunk/ChunkGenerator;)Lnet/minecraft/core/MappedRegistry; a
	withOverworld (Lnet/minecraft/core/Registry;Lnet/minecraft/core/MappedRegistry;Lnet/minecraft/world/level/chunk/ChunkGenerator;)Lnet/minecraft/core/MappedRegistry; a
	withSeed (ZLjava/util/OptionalLong;)Lnet/minecraft/world/level/levelgen/WorldGenSettings; a
net/minecraft/world/level/levelgen/WorldGenerationContext cql
	getGenDepth ()I b
	getMinGenY ()I a
net/minecraft/world/level/levelgen/WorldgenRandom cqm
	count a
	getCount ()I a
	seedSlimeChunk (IIJJ)Ljava/util/Random; a
	setBaseChunkSeed (II)J a
	setBaseStoneSeed (JIII)J a
	setDecorationSeed (JII)J a
	setFeatureSeed (JII)J b
	setLargeFeatureSeed (JII)J c
	setLargeFeatureWithSalt (JIII)J b
net/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration cqn
	CODEC a
	shape c
	verticalRotation b
net/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration$CanyonShapeConfiguration cqn$a
	CODEC a
	distanceFactor b
	horizontalRadiusFactor e
	thickness c
	verticalRadiusCenterFactor g
	verticalRadiusDefaultFactor f
	widthSmoothness d
net/minecraft/world/level/levelgen/carver/CanyonWorldCarver cqo
	LOGGER m
	carve (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/Aquifer;Lnet/minecraft/world/level/ChunkPos;Ljava/util/BitSet;)Z a
	carve (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/Aquifer;Lnet/minecraft/world/level/ChunkPos;Ljava/util/BitSet;)Z a
	doCarve (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;JLnet/minecraft/world/level/levelgen/Aquifer;DDDFFFIIDLjava/util/BitSet;)V a
	initWidthFactors (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration;Ljava/util/Random;)[F a
	isStartChunk (Lnet/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration;Ljava/util/Random;)Z a
	isStartChunk (Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;Ljava/util/Random;)Z a
	shouldSkip (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;[FDDDI)Z a
	updateVerticalRadius (Lnet/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration;Ljava/util/Random;DFF)D a
net/minecraft/world/level/levelgen/carver/CarverConfiguration cqp
	CODEC d
	aquifersEnabled h
	debugSettings i
	lavaLevel g
	y e
	yScale f
net/minecraft/world/level/levelgen/carver/CarverDebugSettings cqq
	CODEC b
	DEFAULT a
	airState d
	barrierState g
	debugMode c
	lavaState f
	waterState e
	getAirState ()Lnet/minecraft/world/level/block/state/BlockState; b
	getBarrierState ()Lnet/minecraft/world/level/block/state/BlockState; e
	getLavaState ()Lnet/minecraft/world/level/block/state/BlockState; d
	getWaterState ()Lnet/minecraft/world/level/block/state/BlockState; c
	isDebugMode ()Z a
	of (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/levelgen/carver/CarverDebugSettings; a
	of (ZLnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/levelgen/carver/CarverDebugSettings; a
	of (ZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/levelgen/carver/CarverDebugSettings; a
net/minecraft/world/level/levelgen/carver/CarvingContext cqr
	generator a
	getGenDepth ()I b
	getMinGenY ()I a
net/minecraft/world/level/levelgen/carver/CaveCarverConfiguration cqs
	CODEC a
	floorLevel j
	horizontalRadiusMultiplier b
	verticalRadiusMultiplier c
net/minecraft/world/level/levelgen/carver/CaveWorldCarver cqt
	carve (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/Aquifer;Lnet/minecraft/world/level/ChunkPos;Ljava/util/BitSet;)Z a
	carve (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CaveCarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/Aquifer;Lnet/minecraft/world/level/ChunkPos;Ljava/util/BitSet;)Z a
	createRoom (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CaveCarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;JLnet/minecraft/world/level/levelgen/Aquifer;DDDFDLjava/util/BitSet;Lnet/minecraft/world/level/levelgen/carver/WorldCarver$CarveSkipChecker;)V a
	createTunnel (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CaveCarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;JLnet/minecraft/world/level/levelgen/Aquifer;DDDDDFFFIIDLjava/util/BitSet;Lnet/minecraft/world/level/levelgen/carver/WorldCarver$CarveSkipChecker;)V a
	getCaveBound ()I a
	getThickness (Ljava/util/Random;)F a
	getYScale ()D b
	isStartChunk (Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;Ljava/util/Random;)Z a
	isStartChunk (Lnet/minecraft/world/level/levelgen/carver/CaveCarverConfiguration;Ljava/util/Random;)Z a
	shouldSkip (DDDD)Z a
net/minecraft/world/level/levelgen/carver/ConfiguredWorldCarver cqu
	CODEC b
	DIRECT_CODEC a
	LIST_CODEC c
	config e
	worldCarver d
	carve (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/Aquifer;Lnet/minecraft/world/level/ChunkPos;Ljava/util/BitSet;)Z a
	config ()Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration; a
	isStartChunk (Ljava/util/Random;)Z a
net/minecraft/world/level/levelgen/carver/NetherWorldCarver cqv
	carveBlock (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Ljava/util/BitSet;Ljava/util/Random;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/levelgen/Aquifer;Lorg/apache/commons/lang3/mutable/MutableBoolean;)Z a
	carveBlock (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CaveCarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Ljava/util/BitSet;Ljava/util/Random;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/levelgen/Aquifer;Lorg/apache/commons/lang3/mutable/MutableBoolean;)Z a
	getCaveBound ()I a
	getThickness (Ljava/util/Random;)F a
	getYScale ()D b
net/minecraft/world/level/levelgen/carver/UnderwaterCanyonWorldCarver cqw
	carveBlock (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Ljava/util/BitSet;Ljava/util/Random;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/levelgen/Aquifer;Lorg/apache/commons/lang3/mutable/MutableBoolean;)Z a
	carveBlock (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Ljava/util/BitSet;Ljava/util/Random;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/levelgen/Aquifer;Lorg/apache/commons/lang3/mutable/MutableBoolean;)Z a
	hasDisallowedLiquid (Lnet/minecraft/world/level/chunk/ChunkAccess;IIIIII)Z a
net/minecraft/world/level/levelgen/carver/UnderwaterCaveWorldCarver cqx
	carveBlock (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Ljava/util/BitSet;Ljava/util/Random;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/levelgen/Aquifer;Lorg/apache/commons/lang3/mutable/MutableBoolean;)Z a
	carveBlock (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CaveCarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Ljava/util/BitSet;Ljava/util/Random;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/levelgen/Aquifer;Lorg/apache/commons/lang3/mutable/MutableBoolean;)Z a
	carveBlock (Lnet/minecraft/world/level/levelgen/carver/WorldCarver;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/Random;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/levelgen/Aquifer;)Z a
	hasDisallowedLiquid (Lnet/minecraft/world/level/chunk/ChunkAccess;IIIIII)Z a
net/minecraft/world/level/levelgen/carver/WorldCarver cqy
	AIR g
	CANYON c
	CAVE a
	CAVE_AIR h
	LAVA j
	NETHER_CAVE b
	STONE_SOURCE f
	UNDERWATER_CANYON d
	UNDERWATER_CAVE e
	WATER i
	configuredCodec m
	liquids l
	replaceableBlocks k
	canReach (Lnet/minecraft/world/level/ChunkPos;DDIIF)Z a
	canReplaceBlock (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	canReplaceBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	carve (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/Aquifer;Lnet/minecraft/world/level/ChunkPos;Ljava/util/BitSet;)Z a
	carveBlock (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Ljava/util/BitSet;Ljava/util/Random;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/levelgen/Aquifer;Lorg/apache/commons/lang3/mutable/MutableBoolean;)Z a
	carveEllipsoid (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;JLnet/minecraft/world/level/levelgen/Aquifer;DDDDDLjava/util/BitSet;Lnet/minecraft/world/level/levelgen/carver/WorldCarver$CarveSkipChecker;)Z a
	configured (Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;)Lnet/minecraft/world/level/levelgen/carver/ConfiguredWorldCarver; a
	configuredCodec ()Lcom/mojang/serialization/Codec; c
	getCarveState (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/Aquifer;)Lnet/minecraft/world/level/block/state/BlockState; a
	getDebugState (Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	getRange ()I d
	hasDisallowedLiquid (Lnet/minecraft/world/level/chunk/ChunkAccess;IIIIII)Z a
	isDebugEnabled (Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;)Z b
	isEdge (IIIIII)Z a
	isStartChunk (Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;Ljava/util/Random;)Z a
	register (Ljava/lang/String;Lnet/minecraft/world/level/levelgen/carver/WorldCarver;)Lnet/minecraft/world/level/levelgen/carver/WorldCarver; a
net/minecraft/world/level/levelgen/carver/WorldCarver$CarveSkipChecker cqy$a
net/minecraft/world/level/levelgen/feature/AbstractFlowerFeature cra
	getCount (Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)I a
	getPos (Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Lnet/minecraft/core/BlockPos; a
	getRandomFlower (Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Lnet/minecraft/world/level/block/state/BlockState; b
	isValid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/AbstractHugeMushroomFeature crb
	getTreeHeight (Ljava/util/Random;)I a
	getTreeRadiusForHeight (IIII)I a
	isValidPosition (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;ILnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/HugeMushroomFeatureConfiguration;)Z a
	makeCap (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;ILnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/HugeMushroomFeatureConfiguration;)V a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeTrunk (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/HugeMushroomFeatureConfiguration;ILnet/minecraft/core/BlockPos$MutableBlockPos;)V a
net/minecraft/world/level/levelgen/feature/BambooFeature crc
	BAMBOO_FINAL_LARGE b
	BAMBOO_TOP_LARGE c
	BAMBOO_TOP_SMALL d
	BAMBOO_TRUNK a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/BasaltColumnsFeature crd
	CANNOT_PLACE_ON a
	CLUSTERED_REACH b
	CLUSTERED_SIZE c
	UNCLUSTERED_REACH d
	UNCLUSTERED_SIZE e
	canPlaceAt (Lnet/minecraft/world/level/LevelAccessor;ILnet/minecraft/core/BlockPos$MutableBlockPos;)Z a
	findAir (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos$MutableBlockPos;I)Lnet/minecraft/core/BlockPos; a
	findSurface (Lnet/minecraft/world/level/LevelAccessor;ILnet/minecraft/core/BlockPos$MutableBlockPos;I)Lnet/minecraft/core/BlockPos; a
	isAirOrLavaOcean (Lnet/minecraft/world/level/LevelAccessor;ILnet/minecraft/core/BlockPos;)Z a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeColumn (Lnet/minecraft/world/level/LevelAccessor;ILnet/minecraft/core/BlockPos;II)Z a
net/minecraft/world/level/levelgen/feature/BasaltPillarFeature cre
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeBaseHangOff (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)V a
	placeHangOff (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Z b
net/minecraft/world/level/levelgen/feature/BaseDiskFeature crf
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/BastionFeature crg
	BASTION_SPAWN_HEIGHT v
	isFeatureChunk (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;JLnet/minecraft/world/level/levelgen/WorldgenRandom;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;Lnet/minecraft/world/level/LevelHeightAccessor;)Z a
	isFeatureChunk (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;JLnet/minecraft/world/level/levelgen/WorldgenRandom;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/feature/configurations/JigsawConfiguration;Lnet/minecraft/world/level/LevelHeightAccessor;)Z a
net/minecraft/world/level/levelgen/feature/BlockBlobFeature crh
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/BlockPileFeature cri
	mayPlaceOn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	tryPlaceBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/BlockPileConfiguration;)V a
net/minecraft/world/level/levelgen/feature/BlueIceFeature crj
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/BonusChestFeature crk
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/BuriedTreasureFeature crl
	RANDOM_SALT v
	getStartFactory ()Lnet/minecraft/world/level/levelgen/feature/StructureFeature$StructureStartFactory; a
	isFeatureChunk (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;JLnet/minecraft/world/level/levelgen/WorldgenRandom;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;Lnet/minecraft/world/level/LevelHeightAccessor;)Z a
	isFeatureChunk (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;JLnet/minecraft/world/level/levelgen/WorldgenRandom;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/feature/configurations/ProbabilityFeatureConfiguration;Lnet/minecraft/world/level/LevelHeightAccessor;)Z a
net/minecraft/world/level/levelgen/feature/BuriedTreasureFeature$BuriedTreasureStart crl$a
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;Lnet/minecraft/world/level/LevelHeightAccessor;)V a
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/ProbabilityFeatureConfiguration;Lnet/minecraft/world/level/LevelHeightAccessor;)V a
	getLocatePos ()Lnet/minecraft/core/BlockPos; a
net/minecraft/world/level/levelgen/feature/ChorusPlantFeature crm
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/ConfiguredFeature crn
	CODEC b
	DIRECT_CODEC a
	LIST_CODEC c
	LOGGER d
	config f
	feature e
	config ()Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration; c
	decorated (Lnet/minecraft/world/level/levelgen/placement/ConfiguredDecorator;)Ljava/lang/Object; a
	decorated (Lnet/minecraft/world/level/levelgen/placement/ConfiguredDecorator;)Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature; b
	feature ()Lnet/minecraft/world/level/levelgen/feature/Feature; b
	getFeatures ()Ljava/util/stream/Stream; d
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Z a
	weighted (F)Lnet/minecraft/world/level/levelgen/feature/WeightedConfiguredFeature; a
net/minecraft/world/level/levelgen/feature/ConfiguredStructureFeature cro
	CODEC b
	DIRECT_CODEC a
	LIST_CODEC c
	config e
	feature d
	generate (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;JLnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/biome/Biome;ILnet/minecraft/world/level/levelgen/feature/configurations/StructureFeatureConfiguration;Lnet/minecraft/world/level/LevelHeightAccessor;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
net/minecraft/world/level/levelgen/feature/CoralClawFeature crp
	placeFeature (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/levelgen/feature/CoralFeature crq
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeCoralBlock (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	placeFeature (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/levelgen/feature/CoralMushroomFeature crr
	placeFeature (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/levelgen/feature/CoralTreeFeature crs
	placeFeature (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/levelgen/feature/DecoratedFeature crt
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/DefaultFlowerFeature cru
	getCount (Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)I a
	getCount (Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration;)I a
	getPos (Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Lnet/minecraft/core/BlockPos; a
	getPos (Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration;)Lnet/minecraft/core/BlockPos; a
	getRandomFlower (Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Lnet/minecraft/world/level/block/state/BlockState; b
	getRandomFlower (Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration;)Lnet/minecraft/world/level/block/state/BlockState; b
	isValid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	isValid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/DeltaFeature crv
	CANNOT_REPLACE a
	DIRECTIONS b
	RIM_SPAWN_CHANCE c
	isClear (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/DeltaFeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/DesertPyramidFeature crw
	getStartFactory ()Lnet/minecraft/world/level/levelgen/feature/StructureFeature$StructureStartFactory; a
net/minecraft/world/level/levelgen/feature/DesertPyramidFeature$FeatureStart crw$a
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;Lnet/minecraft/world/level/LevelHeightAccessor;)V a
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;Lnet/minecraft/world/level/LevelHeightAccessor;)V a
net/minecraft/world/level/levelgen/feature/DesertWellFeature crx
	IS_SAND a
	sandSlab b
	sandstone c
	water d
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/DiskReplaceFeature cry
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/DripstoneClusterFeature crz
	canBeAdjacentToWater (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
	canPlacePool (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;)Z b
	getChanceOfStalagmiteOrStalactite (IIIILnet/minecraft/world/level/levelgen/feature/configurations/DripstoneClusterConfiguration;)D a
	getDripstoneHeight (Ljava/util/Random;IIFILnet/minecraft/world/level/levelgen/feature/configurations/DripstoneClusterConfiguration;)I a
	isLava (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeColumn (Lnet/minecraft/world/level/WorldGenLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;IIFDIFLnet/minecraft/world/level/levelgen/feature/configurations/DripstoneClusterConfiguration;)V a
	randomBetweenBiased (Ljava/util/Random;FFFF)F a
	replaceBlocksWithDripstoneBlocks (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;ILnet/minecraft/core/Direction;)V a
net/minecraft/world/level/levelgen/feature/DripstoneUtils csa
	buildBaseToTipColumn (Lnet/minecraft/core/Direction;IZLjava/util/function/Consumer;)V a
	createPointedDripstone (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/properties/DripstoneThickness;)Lnet/minecraft/world/level/block/state/BlockState; a
	getDripstoneHeight (DDDD)D a
	growPointedDripstone (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;IZ)V a
	isCircleMostlyEmbeddedInStone (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;I)Z a
	isDripstoneBase (Lnet/minecraft/world/level/block/state/BlockState;)Z b
	isDripstoneBaseOrLava (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isEmptyOrWater (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
	isEmptyOrWater (Lnet/minecraft/world/level/block/state/BlockState;)Z c
	isEmptyOrWaterOrLava (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z b
	isEmptyOrWaterOrLava (Lnet/minecraft/world/level/block/state/BlockState;)Z d
	placeDripstoneBlockIfPossible (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/feature/EndCityFeature csb
	RANDOM_SALT v
	getStartFactory ()Lnet/minecraft/world/level/levelgen/feature/StructureFeature$StructureStartFactory; a
	getYPositionForFeature (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/LevelHeightAccessor;)I a
	isFeatureChunk (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;JLnet/minecraft/world/level/levelgen/WorldgenRandom;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;Lnet/minecraft/world/level/LevelHeightAccessor;)Z a
	isFeatureChunk (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;JLnet/minecraft/world/level/levelgen/WorldgenRandom;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;Lnet/minecraft/world/level/LevelHeightAccessor;)Z a
	linearSeparation ()Z b
net/minecraft/world/level/levelgen/feature/EndCityFeature$EndCityStart csb$a
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;Lnet/minecraft/world/level/LevelHeightAccessor;)V a
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;Lnet/minecraft/world/level/LevelHeightAccessor;)V a
net/minecraft/world/level/levelgen/feature/EndGatewayFeature csc
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/EndIslandFeature csd
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/EndPodiumFeature cse
	CORNER_ROUNDING d
	END_PODIUM_LOCATION e
	PODIUM_PILLAR_HEIGHT b
	PODIUM_RADIUS a
	RIM_RADIUS c
	active ap
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/Feature csf
	BAMBOO V
	BASALT_COLUMNS aa
	BASALT_PILLAR af
	BLOCK_PILE k
	BLUE_ICE E
	BONUS_CHEST ae
	CHORUS_PLANT m
	CORAL_CLAW S
	CORAL_MUSHROOM R
	CORAL_TREE Q
	DECORATED ak
	DELTA_FEATURE ab
	DESERT_WELL p
	DISK H
	DRIPSTONE_CLUSTER am
	END_GATEWAY N
	END_ISLAND M
	END_SPIKE L
	FILL_LAYER ad
	FLOWER h
	FOREST_ROCK G
	FOSSIL q
	FREEZE_TOP_LAYER v
	GEODE al
	GLOWSTONE_BLOB u
	GLOW_LICHEN B
	GROWING_PLANT x
	HUGE_BROWN_MUSHROOM s
	HUGE_FUNGUS W
	HUGE_RED_MUSHROOM r
	ICEBERG F
	ICE_PATCH I
	ICE_SPIKE t
	KELP P
	LAKE J
	LARGE_DRIPSTONE an
	MONSTER_ROOM D
	NETHER_FOREST_VEGETATION X
	NO_BONEMEAL_FLOWER i
	NO_OP f
	ORE K
	RANDOM_BOOLEAN_SELECTOR aj
	RANDOM_PATCH j
	RANDOM_SELECTOR ah
	REPLACE_BLOBS ac
	REPLACE_SINGLE_BLOCK n
	ROOT_SYSTEM A
	SCATTERED_ORE ag
	SEAGRASS O
	SEA_PICKLE T
	SIMPLE_BLOCK U
	SIMPLE_RANDOM_SELECTOR ai
	SMALL_DRIPSTONE ao
	SPRING l
	TREE g
	TWISTING_VINES Z
	UNDERWATER_MAGMA C
	VEGETATION_PATCH y
	VINES w
	VOID_START_PLATFORM o
	WATERLOGGED_VEGETATION_PATCH z
	WEEPING_VINES Y
	configuredCodec a
	checkNeighbors (Ljava/util/function/Function;Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z a
	configured (Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature; b
	configuredCodec ()Lcom/mojang/serialization/Codec; a
	isAdjacentToAir (Ljava/util/function/Function;Lnet/minecraft/core/BlockPos;)Z a
	isAir (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z b
	isDirt (Lnet/minecraft/world/level/block/state/BlockState;)Z b
	isGrassOrDirt (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z a
	isReplaceable (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/function/Predicate; a
	isStone (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	markAboveForPostProcessing (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;)V a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	register (Ljava/lang/String;Lnet/minecraft/world/level/levelgen/feature/Feature;)Lnet/minecraft/world/level/levelgen/feature/Feature; a
	safeSetBlock (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/function/Predicate;)V a
	setBlock (Lnet/minecraft/world/level/LevelWriter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/levelgen/feature/FeaturePlaceContext csg
	chunkGenerator b
	config e
	level a
	origin d
	random c
	chunkGenerator ()Lnet/minecraft/world/level/chunk/ChunkGenerator; b
	config ()Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration; e
	level ()Lnet/minecraft/world/level/WorldGenLevel; a
	origin ()Lnet/minecraft/core/BlockPos; d
	random ()Ljava/util/Random; c
net/minecraft/world/level/levelgen/feature/FillLayerFeature csh
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/FossilFeature csi
	countEmptyCorners (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)I a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/FossilFeatureConfiguration csj
	CODEC a
	fossilProcessors d
	fossilStructures b
	maxEmptyCornersAllowed f
	overlayProcessors e
	overlayStructures c
net/minecraft/world/level/levelgen/feature/GeodeFeature csk
	DIRECTIONS a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/GlowLichenFeature csl
	getShuffledDirections (Lnet/minecraft/world/level/levelgen/feature/configurations/GlowLichenConfiguration;Ljava/util/Random;)Ljava/util/List; a
	getShuffledDirectionsExcept (Lnet/minecraft/world/level/levelgen/feature/configurations/GlowLichenConfiguration;Ljava/util/Random;Lnet/minecraft/core/Direction;)Ljava/util/List; a
	isAirOrWater (Lnet/minecraft/world/level/block/state/BlockState;)Z c
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeGlowLichenIfPossible (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/levelgen/feature/configurations/GlowLichenConfiguration;Ljava/util/Random;Ljava/util/List;)Z a
net/minecraft/world/level/levelgen/feature/GlowstoneFeature csm
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/GrowingPlantFeature csn
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/HugeBrownMushroomFeature cso
	getTreeRadiusForHeight (IIII)I a
	makeCap (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;ILnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/HugeMushroomFeatureConfiguration;)V a
net/minecraft/world/level/levelgen/feature/HugeFungusConfiguration csp
	CODEC a
	HUGE_CRIMSON_FUNGI_NOT_PLANTED_CONFIG c
	HUGE_CRIMSON_FUNGI_PLANTED_CONFIG b
	HUGE_WARPED_FUNGI_NOT_PLANTED_CONFIG e
	HUGE_WARPED_FUNGI_PLANTED_CONFIG d
	decorState i
	hatState h
	planted j
	stemState g
	validBaseState f
net/minecraft/world/level/levelgen/feature/HugeFungusFeature csq
	HUGE_PROBABILITY a
	isReplaceable (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Z)Z a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeHat (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/HugeFungusConfiguration;Lnet/minecraft/core/BlockPos;IZ)V b
	placeHatBlock (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/HugeFungusConfiguration;Lnet/minecraft/core/BlockPos$MutableBlockPos;FFF)V a
	placeHatDropBlock (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	placeStem (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/HugeFungusConfiguration;Lnet/minecraft/core/BlockPos;IZ)V a
	tryPlaceWeepingVines (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;)V a
net/minecraft/world/level/levelgen/feature/HugeRedMushroomFeature csr
	getTreeRadiusForHeight (IIII)I a
	makeCap (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;ILnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/HugeMushroomFeatureConfiguration;)V a
net/minecraft/world/level/levelgen/feature/IcePatchFeature css
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/IceSpikeFeature cst
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/IcebergFeature csu
	belowIsAir (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	carve (IILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelAccessor;ZDLnet/minecraft/core/BlockPos;II)V a
	generateCutOut (Ljava/util/Random;Lnet/minecraft/world/level/LevelAccessor;IILnet/minecraft/core/BlockPos;ZIDI)V a
	generateIcebergBlock (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;IIIIIIZIDZLnet/minecraft/world/level/block/state/BlockState;)V a
	getEllipseC (III)I a
	heightDependentRadiusEllipse (III)I b
	heightDependentRadiusRound (Ljava/util/Random;III)I a
	heightDependentRadiusSteep (Ljava/util/Random;III)I b
	isIcebergState (Lnet/minecraft/world/level/block/state/BlockState;)Z c
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	removeFloatingSnowLayer (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	setIcebergBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;IIZZLnet/minecraft/world/level/block/state/BlockState;)V a
	signedDistanceCircle (IILnet/minecraft/core/BlockPos;ILjava/util/Random;)D a
	signedDistanceEllipse (IILnet/minecraft/core/BlockPos;IID)D a
	smooth (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;IIZI)V a
net/minecraft/world/level/levelgen/feature/IglooFeature csv
	getStartFactory ()Lnet/minecraft/world/level/levelgen/feature/StructureFeature$StructureStartFactory; a
net/minecraft/world/level/levelgen/feature/IglooFeature$FeatureStart csv$a
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;Lnet/minecraft/world/level/LevelHeightAccessor;)V a
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;Lnet/minecraft/world/level/LevelHeightAccessor;)V a
net/minecraft/world/level/levelgen/feature/JigsawFeature csw
	doExpansionHack w
	projectStartToHeightmap x
	startY v
	getStartFactory ()Lnet/minecraft/world/level/levelgen/feature/StructureFeature$StructureStartFactory; a
net/minecraft/world/level/levelgen/feature/JigsawFeature$FeatureStart csw$a
	feature e
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;Lnet/minecraft/world/level/LevelHeightAccessor;)V a
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/JigsawConfiguration;Lnet/minecraft/world/level/LevelHeightAccessor;)V a
net/minecraft/world/level/levelgen/feature/JunglePyramidFeature csx
	getStartFactory ()Lnet/minecraft/world/level/levelgen/feature/StructureFeature$StructureStartFactory; a
net/minecraft/world/level/levelgen/feature/JunglePyramidFeature$FeatureStart csx$a
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;Lnet/minecraft/world/level/LevelHeightAccessor;)V a
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;Lnet/minecraft/world/level/LevelHeightAccessor;)V a
net/minecraft/world/level/levelgen/feature/KelpFeature csy
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/LakeFeature csz
	AIR a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/LargeDripstoneFeature cta
	makeDripstone (Lnet/minecraft/core/BlockPos;ZLjava/util/Random;ILnet/minecraft/util/valueproviders/FloatProvider;Lnet/minecraft/util/valueproviders/FloatProvider;)Lnet/minecraft/world/level/levelgen/feature/LargeDripstoneFeature$LargeDripstone; a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeDebugMarkers (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/Column$Range;Lnet/minecraft/world/level/levelgen/feature/LargeDripstoneFeature$WindOffsetter;)V a
net/minecraft/world/level/levelgen/feature/LargeDripstoneFeature$LargeDripstone cta$a
	bluntness d
	pointingUp b
	radius c
	root a
	scale e
	getHeight ()I a
	getHeightAtRadius (F)I a
	getMaxY ()I c
	getMinY ()I b
	isSuitableForWind (Lnet/minecraft/world/level/levelgen/feature/configurations/LargeDripstoneConfiguration;)Z a
	moveBackUntilBaseIsInsideStoneAndShrinkRadiusIfNecessary (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/feature/LargeDripstoneFeature$WindOffsetter;)Z a
	placeBlocks (Lnet/minecraft/world/level/WorldGenLevel;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/LargeDripstoneFeature$WindOffsetter;)V a
net/minecraft/world/level/levelgen/feature/LargeDripstoneFeature$WindOffsetter cta$b
	originY a
	windSpeed b
	noWind ()Lnet/minecraft/world/level/levelgen/feature/LargeDripstoneFeature$WindOffsetter; a
	offset (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
net/minecraft/world/level/levelgen/feature/MineshaftFeature ctb
	getStartFactory ()Lnet/minecraft/world/level/levelgen/feature/StructureFeature$StructureStartFactory; a
	isFeatureChunk (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;JLnet/minecraft/world/level/levelgen/WorldgenRandom;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;Lnet/minecraft/world/level/LevelHeightAccessor;)Z a
	isFeatureChunk (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;JLnet/minecraft/world/level/levelgen/WorldgenRandom;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/feature/configurations/MineshaftConfiguration;Lnet/minecraft/world/level/LevelHeightAccessor;)Z a
net/minecraft/world/level/levelgen/feature/MineshaftFeature$MineShaftStart ctb$a
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;Lnet/minecraft/world/level/LevelHeightAccessor;)V a
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/MineshaftConfiguration;Lnet/minecraft/world/level/LevelHeightAccessor;)V a
net/minecraft/world/level/levelgen/feature/MineshaftFeature$Type ctb$b
	$VALUES i
	BY_NAME d
	CODEC c
	MESA b
	NORMAL a
	fenceState h
	name e
	planksState g
	woodState f
	$values ()[Lnet/minecraft/world/level/levelgen/feature/MineshaftFeature$Type; f
	byId (I)Lnet/minecraft/world/level/levelgen/feature/MineshaftFeature$Type; a
	byName (Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/feature/MineshaftFeature$Type; a
	getFenceState ()Lnet/minecraft/world/level/block/state/BlockState; e
	getName ()Ljava/lang/String; a
	getPlanksState ()Lnet/minecraft/world/level/block/state/BlockState; d
	getSerializedName ()Ljava/lang/String; c
	getWoodState ()Lnet/minecraft/world/level/block/state/BlockState; b
net/minecraft/world/level/levelgen/feature/MonsterRoomFeature ctc
	AIR c
	LOGGER a
	MOBS b
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	randomEntityId (Ljava/util/Random;)Lnet/minecraft/world/entity/EntityType; a
net/minecraft/world/level/levelgen/feature/NetherForestVegetationFeature ctd
	place (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/BlockPileConfiguration;II)Z a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/NetherFortressFeature cte
	FORTRESS_ENEMIES v
	getSpecialEnemies ()Lnet/minecraft/util/random/WeightedRandomList; c
	getStartFactory ()Lnet/minecraft/world/level/levelgen/feature/StructureFeature$StructureStartFactory; a
	isFeatureChunk (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;JLnet/minecraft/world/level/levelgen/WorldgenRandom;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;Lnet/minecraft/world/level/LevelHeightAccessor;)Z a
	isFeatureChunk (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;JLnet/minecraft/world/level/levelgen/WorldgenRandom;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;Lnet/minecraft/world/level/LevelHeightAccessor;)Z a
net/minecraft/world/level/levelgen/feature/NetherFortressFeature$NetherBridgeStart cte$a
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;Lnet/minecraft/world/level/LevelHeightAccessor;)V a
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;Lnet/minecraft/world/level/LevelHeightAccessor;)V a
net/minecraft/world/level/levelgen/feature/NoOpFeature ctf
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/NoiseEffect ctg
	$VALUES d
	BEARD c
	BURY b
	NONE a
	$values ()[Lnet/minecraft/world/level/levelgen/feature/NoiseEffect; a
net/minecraft/world/level/levelgen/feature/OceanMonumentFeature cth
	MONUMENT_ENEMIES v
	getSpecialEnemies ()Lnet/minecraft/util/random/WeightedRandomList; c
	getStartFactory ()Lnet/minecraft/world/level/levelgen/feature/StructureFeature$StructureStartFactory; a
	isFeatureChunk (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;JLnet/minecraft/world/level/levelgen/WorldgenRandom;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;Lnet/minecraft/world/level/LevelHeightAccessor;)Z a
	isFeatureChunk (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;JLnet/minecraft/world/level/levelgen/WorldgenRandom;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;Lnet/minecraft/world/level/LevelHeightAccessor;)Z a
	linearSeparation ()Z b
net/minecraft/world/level/levelgen/feature/OceanMonumentFeature$OceanMonumentStart cth$a
	isCreated e
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;Lnet/minecraft/world/level/LevelHeightAccessor;)V a
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;Lnet/minecraft/world/level/LevelHeightAccessor;)V a
	generatePieces (Lnet/minecraft/world/level/ChunkPos;)V a
	placeInChunk (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;)V a
net/minecraft/world/level/levelgen/feature/OreFeature cti
	canPlaceOre (Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/function/Function;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/OreConfiguration;Lnet/minecraft/world/level/levelgen/feature/configurations/OreConfiguration$TargetBlockState;Lnet/minecraft/core/BlockPos$MutableBlockPos;)Z a
	doPlace (Lnet/minecraft/world/level/WorldGenLevel;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/OreConfiguration;DDDDDDIIIII)Z a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	shouldSkipAirCheck (Ljava/util/Random;F)Z a
net/minecraft/world/level/levelgen/feature/PillagerOutpostFeature ctj
	OUTPOST_ENEMIES v
	getSpecialEnemies ()Lnet/minecraft/util/random/WeightedRandomList; c
	isFeatureChunk (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;JLnet/minecraft/world/level/levelgen/WorldgenRandom;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;Lnet/minecraft/world/level/LevelHeightAccessor;)Z a
	isFeatureChunk (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;JLnet/minecraft/world/level/levelgen/WorldgenRandom;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/feature/configurations/JigsawConfiguration;Lnet/minecraft/world/level/LevelHeightAccessor;)Z a
	isNearVillage (Lnet/minecraft/world/level/chunk/ChunkGenerator;JLnet/minecraft/world/level/levelgen/WorldgenRandom;Lnet/minecraft/world/level/ChunkPos;)Z a
net/minecraft/world/level/levelgen/feature/RandomBooleanSelectorFeature ctk
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/RandomPatchFeature ctl
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/RandomSelectorFeature ctm
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/ReplaceBlobsFeature ctn
	findTarget (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/core/BlockPos; a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/ReplaceBlockFeature cto
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/RootSystemFeature ctp
	isAllowedTreeSpace (Lnet/minecraft/world/level/block/state/BlockState;II)Z a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeDirtAndTree (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/feature/configurations/RootSystemConfiguration;Ljava/util/Random;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/core/BlockPos;)Z a
	placeRootedDirt (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/feature/configurations/RootSystemConfiguration;Ljava/util/Random;IILnet/minecraft/core/BlockPos$MutableBlockPos;)V a
	placeRoots (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/feature/configurations/RootSystemConfiguration;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;)V a
	spaceForTree (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/feature/configurations/RootSystemConfiguration;Lnet/minecraft/core/BlockPos;)Z a
	tryPlaceAzaleaTree (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/feature/configurations/RootSystemConfiguration;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/feature/RuinedPortalFeature ctq
	JUNGLE_MOSSINESS B
	MIN_Y D
	PROBABILITY_OF_AIR_POCKET y
	PROBABILITY_OF_GIANT_PORTAL x
	PROBABILITY_OF_UNDERGROUND z
	STRUCTURE_LOCATION_GIANT_PORTALS w
	STRUCTURE_LOCATION_PORTALS v
	SWAMP_MOSSINESS C
	UNDERWATER_MOSSINESS A
	findSuitableY (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/RuinedPortalPiece$VerticalPlacement;ZIILnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/LevelHeightAccessor;)I a
	getRandomWithinInterval (Ljava/util/Random;II)I a
	getStartFactory ()Lnet/minecraft/world/level/levelgen/feature/StructureFeature$StructureStartFactory; a
	isCold (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/biome/Biome;)Z a
net/minecraft/world/level/levelgen/feature/RuinedPortalFeature$FeatureStart ctq$a
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;Lnet/minecraft/world/level/LevelHeightAccessor;)V a
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/RuinedPortalConfiguration;Lnet/minecraft/world/level/LevelHeightAccessor;)V a
net/minecraft/world/level/levelgen/feature/RuinedPortalFeature$Type ctq$b
	$VALUES k
	BY_NAME i
	CODEC h
	DESERT b
	JUNGLE c
	MOUNTAIN e
	NETHER g
	OCEAN f
	STANDARD a
	SWAMP d
	name j
	$values ()[Lnet/minecraft/world/level/levelgen/feature/RuinedPortalFeature$Type; b
	byName (Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/feature/RuinedPortalFeature$Type; a
	getName ()Ljava/lang/String; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/levelgen/feature/ScatteredOreFeature ctr
	MAX_DIST_FROM_ORIGIN a
	getRandomPlacementInOneAxisRelativeToOrigin (Ljava/util/Random;I)I a
	offsetTargetPos (Lnet/minecraft/core/BlockPos$MutableBlockPos;Ljava/util/Random;Lnet/minecraft/core/BlockPos;I)V a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/SeaPickleFeature cts
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/SeagrassFeature ctt
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/ShipwreckFeature ctu
	getStartFactory ()Lnet/minecraft/world/level/levelgen/feature/StructureFeature$StructureStartFactory; a
net/minecraft/world/level/levelgen/feature/ShipwreckFeature$FeatureStart ctu$a
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;Lnet/minecraft/world/level/LevelHeightAccessor;)V a
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/ShipwreckConfiguration;Lnet/minecraft/world/level/LevelHeightAccessor;)V a
net/minecraft/world/level/levelgen/feature/SimpleBlockFeature ctv
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/SimpleRandomSelectorFeature ctw
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/SmallDripstoneFeature ctx
	createPatchOfDripstoneBlocks (Lnet/minecraft/world/level/WorldGenLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)V a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	randomOffset (Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/SmallDripstoneConfiguration;)Lnet/minecraft/core/BlockPos; a
	searchAndTryToPlaceDripstone (Lnet/minecraft/world/level/WorldGenLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/SmallDripstoneConfiguration;)Z a
	tryToPlaceDripstone (Lnet/minecraft/world/level/WorldGenLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/feature/configurations/SmallDripstoneConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/SnowAndFreezeFeature cty
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/SpikeFeature ctz
	NUMBER_OF_SPIKES a
	SPIKE_CACHE c
	SPIKE_DISTANCE b
	getSpikesForLevel (Lnet/minecraft/world/level/WorldGenLevel;)Ljava/util/List; a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeSpike (Lnet/minecraft/world/level/ServerLevelAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/SpikeConfiguration;Lnet/minecraft/world/level/levelgen/feature/SpikeFeature$EndSpike;)V a
net/minecraft/world/level/levelgen/feature/SpikeFeature$EndSpike ctz$a
	CODEC a
	centerX b
	centerZ c
	guarded f
	height e
	radius d
	topBoundingBox g
	getCenterX ()I a
	getCenterZ ()I b
	getHeight ()I d
	getRadius ()I c
	getTopBoundingBox ()Lnet/minecraft/world/phys/AABB; f
	isCenterWithinChunk (Lnet/minecraft/core/BlockPos;)Z a
	isGuarded ()Z e
net/minecraft/world/level/levelgen/feature/SpikeFeature$SpikeCacheLoader ctz$b
	load (Ljava/lang/Long;)Ljava/util/List; a
net/minecraft/world/level/levelgen/feature/SpringFeature cua
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/StrongholdFeature cub
	getStartFactory ()Lnet/minecraft/world/level/levelgen/feature/StructureFeature$StructureStartFactory; a
	isFeatureChunk (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;JLnet/minecraft/world/level/levelgen/WorldgenRandom;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;Lnet/minecraft/world/level/LevelHeightAccessor;)Z a
	isFeatureChunk (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;JLnet/minecraft/world/level/levelgen/WorldgenRandom;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;Lnet/minecraft/world/level/LevelHeightAccessor;)Z a
net/minecraft/world/level/levelgen/feature/StrongholdFeature$StrongholdStart cub$a
	seed e
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;Lnet/minecraft/world/level/LevelHeightAccessor;)V a
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;Lnet/minecraft/world/level/LevelHeightAccessor;)V a
net/minecraft/world/level/levelgen/feature/StructureFeature cuc
	BASTION_REMNANT s
	BURIED_TREASURE p
	DESERT_PYRAMID f
	END_CITY o
	IGLOO g
	JIGSAW_RENAME x
	JUNGLE_TEMPLE e
	LOGGER w
	MAX_STRUCTURE_RANGE u
	MINESHAFT c
	NETHER_BRIDGE n
	NETHER_FOSSIL r
	NOISE_AFFECTING_FEATURES t
	OCEAN_MONUMENT l
	OCEAN_RUIN m
	PILLAGER_OUTPOST b
	RENAMES y
	RUINED_PORTAL h
	SHIPWRECK i
	STEP v
	STRONGHOLD k
	STRUCTURES_REGISTRY a
	SWAMP_HUT j
	VILLAGE q
	WOODLAND_MANSION d
	configuredStructureCodec z
	bootstrap ()V e
	configured (Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Lnet/minecraft/world/level/levelgen/feature/ConfiguredStructureFeature; a
	configuredStructureCodec ()Lcom/mojang/serialization/Codec; f
	createStart (Lnet/minecraft/world/level/ChunkPos;IJ)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
	generate (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;JLnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/biome/Biome;ILnet/minecraft/world/level/levelgen/WorldgenRandom;Lnet/minecraft/world/level/levelgen/feature/configurations/StructureFeatureConfiguration;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;Lnet/minecraft/world/level/LevelHeightAccessor;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
	getFeatureName ()Ljava/lang/String; g
	getNearestGeneratedFeature (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/core/BlockPos;IZJLnet/minecraft/world/level/levelgen/feature/configurations/StructureFeatureConfiguration;)Lnet/minecraft/core/BlockPos; a
	getPotentialFeatureChunk (Lnet/minecraft/world/level/levelgen/feature/configurations/StructureFeatureConfiguration;JLnet/minecraft/world/level/levelgen/WorldgenRandom;II)Lnet/minecraft/world/level/ChunkPos; a
	getSpecialAnimals ()Lnet/minecraft/util/random/WeightedRandomList; h
	getSpecialEnemies ()Lnet/minecraft/util/random/WeightedRandomList; c
	getSpecialUndergroundWaterAnimals ()Lnet/minecraft/util/random/WeightedRandomList; i
	getStartFactory ()Lnet/minecraft/world/level/levelgen/feature/StructureFeature$StructureStartFactory; a
	isFeatureChunk (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;JLnet/minecraft/world/level/levelgen/WorldgenRandom;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;Lnet/minecraft/world/level/LevelHeightAccessor;)Z a
	linearSeparation ()Z b
	loadStaticStart (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;J)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
	register (Ljava/lang/String;Lnet/minecraft/world/level/levelgen/feature/StructureFeature;Lnet/minecraft/world/level/levelgen/GenerationStep$Decoration;)Lnet/minecraft/world/level/levelgen/feature/StructureFeature; a
	step ()Lnet/minecraft/world/level/levelgen/GenerationStep$Decoration; d
net/minecraft/world/level/levelgen/feature/StructureFeature$StructureStartFactory cuc$a
net/minecraft/world/level/levelgen/feature/StructurePieceType cud
	BURIED_TREASURE_PIECE aa
	DESERT_PYRAMID_PIECE L
	END_CITY_PIECE Y
	IGLOO I
	JIGSAW ad
	JUNGLE_PYRAMID_PIECE G
	MINE_SHAFT_CORRIDOR a
	MINE_SHAFT_CROSSING b
	MINE_SHAFT_ROOM c
	MINE_SHAFT_STAIRS d
	NETHER_FORTRESS_BRIDGE_CROSSING e
	NETHER_FORTRESS_BRIDGE_END_FILLER f
	NETHER_FORTRESS_BRIDGE_STRAIGHT g
	NETHER_FORTRESS_CASTLE_CORRIDOR_STAIRS h
	NETHER_FORTRESS_CASTLE_CORRIDOR_T_BALCONY i
	NETHER_FORTRESS_CASTLE_ENTRANCE j
	NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR m
	NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_CROSSING k
	NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_LEFT_TURN l
	NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_RIGHT_TURN n
	NETHER_FORTRESS_CASTLE_STALK_ROOM o
	NETHER_FORTRESS_MONSTER_THRONE p
	NETHER_FORTRESS_ROOM_CROSSING q
	NETHER_FORTRESS_STAIRS_ROOM r
	NETHER_FORTRESS_START s
	NETHER_FOSSIL ac
	OCEAN_MONUMENT_BUILDING M
	OCEAN_MONUMENT_CORE_ROOM N
	OCEAN_MONUMENT_DOUBLE_XY_ROOM P
	OCEAN_MONUMENT_DOUBLE_X_ROOM O
	OCEAN_MONUMENT_DOUBLE_YZ_ROOM R
	OCEAN_MONUMENT_DOUBLE_Y_ROOM Q
	OCEAN_MONUMENT_DOUBLE_Z_ROOM S
	OCEAN_MONUMENT_ENTRY_ROOM T
	OCEAN_MONUMENT_PENTHOUSE U
	OCEAN_MONUMENT_SIMPLE_ROOM V
	OCEAN_MONUMENT_SIMPLE_TOP_ROOM W
	OCEAN_MONUMENT_WING_ROOM X
	OCEAN_RUIN H
	RUINED_PORTAL J
	SHIPWRECK_PIECE ab
	STRONGHOLD_CHEST_CORRIDOR t
	STRONGHOLD_FILLER_CORRIDOR u
	STRONGHOLD_FIVE_CROSSING v
	STRONGHOLD_LEFT_TURN w
	STRONGHOLD_LIBRARY x
	STRONGHOLD_PORTAL_ROOM y
	STRONGHOLD_PRISON_HALL z
	STRONGHOLD_RIGHT_TURN A
	STRONGHOLD_ROOM_CROSSING B
	STRONGHOLD_STAIRS_DOWN C
	STRONGHOLD_START D
	STRONGHOLD_STRAIGHT E
	STRONGHOLD_STRAIGHT_STAIRS_DOWN F
	SWAMPLAND_HUT K
	WOODLAND_MANSION_PIECE Z
	setPieceId (Lnet/minecraft/world/level/levelgen/feature/StructurePieceType;Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/feature/StructurePieceType; a
net/minecraft/world/level/levelgen/feature/SwamplandHutFeature cue
	SWAMPHUT_ANIMALS w
	SWAMPHUT_ENEMIES v
	getSpecialAnimals ()Lnet/minecraft/util/random/WeightedRandomList; h
	getSpecialEnemies ()Lnet/minecraft/util/random/WeightedRandomList; c
	getStartFactory ()Lnet/minecraft/world/level/levelgen/feature/StructureFeature$StructureStartFactory; a
net/minecraft/world/level/levelgen/feature/SwamplandHutFeature$FeatureStart cue$a
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;Lnet/minecraft/world/level/LevelHeightAccessor;)V a
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;Lnet/minecraft/world/level/LevelHeightAccessor;)V a
net/minecraft/world/level/levelgen/feature/TreeFeature cuf
	BLOCK_UPDATE_FLAGS a
	doPlace (Lnet/minecraft/world/level/WorldGenLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Ljava/util/function/BiConsumer;Ljava/util/function/BiConsumer;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Z a
	getMaxFreeTreeHeight (Lnet/minecraft/world/level/LevelSimulatedReader;ILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	isAirOrLeaves (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z d
	isBlockWater (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z g
	isFree (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z c
	isReplaceablePlant (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z h
	isVine (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z f
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	setBlock (Lnet/minecraft/world/level/LevelWriter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	setBlockKnownShape (Lnet/minecraft/world/level/LevelWriter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	updateLeaves (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/Set;Ljava/util/Set;)Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape; a
	validTreePos (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z e
net/minecraft/world/level/levelgen/feature/TwistingVinesFeature cug
	findFirstAirBlockAboveGround (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos$MutableBlockPos;)Z a
	isInvalidPlacementLocation (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
	place (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;III)Z a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeTwistingVines (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;III)V b
	placeWeepingVinesColumn (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos$MutableBlockPos;III)V a
net/minecraft/world/level/levelgen/feature/UnderwaterMagmaFeature cuh
	getFloorY (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/UnderwaterMagmaConfiguration;)Ljava/util/OptionalInt; a
	isValidPlacement (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;)Z b
	isWaterOrAir (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/VegetationPatchFeature cui
	distributeVegetation (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/feature/configurations/VegetationPatchConfiguration;Ljava/util/Random;Ljava/util/Set;II)V a
	getReplaceableTag (Lnet/minecraft/world/level/levelgen/feature/configurations/VegetationPatchConfiguration;)Ljava/util/function/Predicate; a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeGround (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/feature/configurations/VegetationPatchConfiguration;Ljava/util/function/Predicate;Ljava/util/Random;Lnet/minecraft/core/BlockPos$MutableBlockPos;I)Z a
	placeGroundPatch (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/feature/configurations/VegetationPatchConfiguration;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;II)Ljava/util/Set; a
	placeVegetation (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/feature/configurations/VegetationPatchConfiguration;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/feature/VillageFeature cuj
net/minecraft/world/level/levelgen/feature/VinesFeature cuk
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/VoidStartPlatformFeature cul
	PLATFORM_OFFSET a
	PLATFORM_ORIGIN_CHUNK b
	PLATFORM_RADIUS c
	PLATFORM_RADIUS_CHUNKS d
	checkerboardDistance (IIII)I a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/WaterloggedVegetationPatchFeature cum
	isExposed (Lnet/minecraft/world/level/WorldGenLevel;Ljava/util/Set;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;)Z a
	isExposedDirection (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/core/Direction;)Z a
	placeGroundPatch (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/feature/configurations/VegetationPatchConfiguration;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;II)Ljava/util/Set; a
	placeVegetation (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/feature/configurations/VegetationPatchConfiguration;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/feature/WeepingVinesFeature cun
	DIRECTIONS a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeRoofNetherWart (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)V a
	placeRoofWeepingVines (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)V b
	placeWeepingVinesColumn (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos$MutableBlockPos;III)V a
net/minecraft/world/level/levelgen/feature/WeightedConfiguredFeature cuo
	CODEC a
	chance c
	feature b
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/feature/WoodlandMansionFeature cup
	getStartFactory ()Lnet/minecraft/world/level/levelgen/feature/StructureFeature$StructureStartFactory; a
	isFeatureChunk (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;JLnet/minecraft/world/level/levelgen/WorldgenRandom;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;Lnet/minecraft/world/level/LevelHeightAccessor;)Z a
	isFeatureChunk (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;JLnet/minecraft/world/level/levelgen/WorldgenRandom;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;Lnet/minecraft/world/level/LevelHeightAccessor;)Z a
	linearSeparation ()Z b
net/minecraft/world/level/levelgen/feature/WoodlandMansionFeature$WoodlandMansionStart cup$a
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;Lnet/minecraft/world/level/LevelHeightAccessor;)V a
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;Lnet/minecraft/world/level/LevelHeightAccessor;)V a
	placeInChunk (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;)V a
net/minecraft/world/level/levelgen/feature/blockplacers/BlockPlacer cuq
	CODEC a
	place (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)V a
	type ()Lnet/minecraft/world/level/levelgen/feature/blockplacers/BlockPlacerType; a
net/minecraft/world/level/levelgen/feature/blockplacers/BlockPlacerType cur
	COLUMN_PLACER c
	DOUBLE_PLANT_PLACER b
	SIMPLE_BLOCK_PLACER a
	codec d
	codec ()Lcom/mojang/serialization/Codec; a
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/feature/blockplacers/BlockPlacerType; a
net/minecraft/world/level/levelgen/feature/blockplacers/ColumnPlacer cus
	CODEC b
	size c
	place (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)V a
	type ()Lnet/minecraft/world/level/levelgen/feature/blockplacers/BlockPlacerType; a
net/minecraft/world/level/levelgen/feature/blockplacers/DoublePlantPlacer cut
	CODEC b
	INSTANCE c
	place (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)V a
	type ()Lnet/minecraft/world/level/levelgen/feature/blockplacers/BlockPlacerType; a
net/minecraft/world/level/levelgen/feature/blockplacers/SimpleBlockPlacer cuu
	CODEC b
	INSTANCE c
	place (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)V a
	type ()Lnet/minecraft/world/level/levelgen/feature/blockplacers/BlockPlacerType; a
net/minecraft/world/level/levelgen/feature/configurations/BlockPileConfiguration cuw
	CODEC a
	stateProvider b
net/minecraft/world/level/levelgen/feature/configurations/BlockStateConfiguration cux
	CODEC a
	state b
net/minecraft/world/level/levelgen/feature/configurations/ColumnFeatureConfiguration cuy
	CODEC a
	height c
	reach b
	height ()Lnet/minecraft/util/valueproviders/IntProvider; b
	reach ()Lnet/minecraft/util/valueproviders/IntProvider; a
net/minecraft/world/level/levelgen/feature/configurations/CountConfiguration cuz
	CODEC a
	count c
	count ()Lnet/minecraft/util/valueproviders/IntProvider; a
net/minecraft/world/level/levelgen/feature/configurations/DecoratedFeatureConfiguration cva
	CODEC a
	decorator c
	feature b
	getFeatures ()Ljava/util/stream/Stream; ab_
net/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration cvb
	NONE b
net/minecraft/world/level/levelgen/feature/configurations/DeltaFeatureConfiguration cvc
	CODEC a
	contents b
	rim c
	rimSize e
	size d
	contents ()Lnet/minecraft/world/level/block/state/BlockState; b
	rim ()Lnet/minecraft/world/level/block/state/BlockState; c
	rimSize ()Lnet/minecraft/util/valueproviders/IntProvider; e
	size ()Lnet/minecraft/util/valueproviders/IntProvider; d
net/minecraft/world/level/levelgen/feature/configurations/DiskConfiguration cvd
	CODEC a
	halfHeight d
	radius c
	state b
	targets e
net/minecraft/world/level/levelgen/feature/configurations/DripstoneClusterConfiguration cve
	CODEC a
	chanceOfDripstoneColumnAtMaxDistanceFromCenter j
	density h
	dripstoneBlockLayerThickness g
	floorToCeilingSearchRange b
	height c
	heightDeviation f
	maxDistanceFromCenterAffectingHeightBias l
	maxDistanceFromEdgeAffectingChanceOfDripstoneColumn k
	maxStalagmiteStalactiteHeightDiff e
	radius d
	wetness i
net/minecraft/world/level/levelgen/feature/configurations/EndGatewayConfiguration cvf
	CODEC a
	exact c
	exit b
	delayedExitSearch ()Lnet/minecraft/world/level/levelgen/feature/configurations/EndGatewayConfiguration; b
	getExit ()Ljava/util/Optional; c
	isExitExact ()Z d
	knownExit (Lnet/minecraft/core/BlockPos;Z)Lnet/minecraft/world/level/levelgen/feature/configurations/EndGatewayConfiguration; a
net/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration cvg
	NONE m
	getFeatures ()Ljava/util/stream/Stream; ab_
net/minecraft/world/level/levelgen/feature/configurations/GeodeConfiguration cvh
	CHANCE_RANGE a
	CODEC b
	distributionPoints j
	geodeBlockSettings c
	geodeCrackSettings e
	geodeLayerSettings d
	invalidBlocksThreshold p
	maxGenOffset n
	minGenOffset l
	noiseMultiplier o
	outerWallDistance i
	placementsRequireLayer0Alternate h
	pointOffset k
	useAlternateLayer0Chance g
	usePotentialPlacementsChance f
net/minecraft/world/level/levelgen/feature/configurations/GlowLichenConfiguration cvi
	CODEC a
	canBePlacedOn g
	canPlaceOnCeiling d
	canPlaceOnFloor c
	canPlaceOnWall e
	chanceOfSpreading f
	searchRange b
	validDirections h
	canBePlacedOn (Lnet/minecraft/world/level/block/Block;)Z a
net/minecraft/world/level/levelgen/feature/configurations/GrowingPlantConfiguration cvj
	CODEC a
	allowWater f
	bodyProvider d
	direction c
	headProvider e
	heightDistribution b
net/minecraft/world/level/levelgen/feature/configurations/HeightmapConfiguration cvk
	CODEC a
	heightmap c
net/minecraft/world/level/levelgen/feature/configurations/HugeMushroomFeatureConfiguration cvl
	CODEC a
	capProvider b
	foliageRadius d
	stemProvider c
net/minecraft/world/level/levelgen/feature/configurations/JigsawConfiguration cvm
	CODEC a
	maxDepth c
	startPool b
	maxDepth ()I b
	startPool ()Ljava/util/function/Supplier; c
net/minecraft/world/level/levelgen/feature/configurations/LargeDripstoneConfiguration cvn
	CODEC a
	columnRadius c
	floorToCeilingSearchRange b
	heightScale d
	maxColumnRadiusToCaveHeightRatio e
	minBluntnessForWind j
	minRadiusForWind i
	stalactiteBluntness f
	stalagmiteBluntness g
	windSpeed h
net/minecraft/world/level/levelgen/feature/configurations/LayerConfiguration cvo
	CODEC a
	height b
	state c
net/minecraft/world/level/levelgen/feature/configurations/MineshaftConfiguration cvp
	CODEC a
	probability b
	type c
net/minecraft/world/level/levelgen/feature/configurations/NoiseDependantDecoratorConfiguration cvq
	CODEC a
	aboveNoise e
	belowNoise d
	noiseLevel c
net/minecraft/world/level/levelgen/feature/configurations/NoneDecoratorConfiguration cvr
	CODEC a
	INSTANCE c
net/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration cvs
	CODEC a
	INSTANCE b
net/minecraft/world/level/levelgen/feature/configurations/OceanRuinConfiguration cvt
	CODEC a
	biomeTemp b
	clusterProbability d
	largeProbability c
net/minecraft/world/level/levelgen/feature/configurations/OreConfiguration cvu
	CODEC a
	discardChanceOnAirExposure d
	size c
	targetStates b
	target (Lnet/minecraft/world/level/levelgen/structure/templatesystem/RuleTest;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/levelgen/feature/configurations/OreConfiguration$TargetBlockState; a
net/minecraft/world/level/levelgen/feature/configurations/OreConfiguration$Predicates cvu$a
	DEEPSLATE_ORE_REPLACEABLES c
	NATURAL_STONE a
	NETHERRACK d
	NETHER_ORE_REPLACEABLES e
	STONE_ORE_REPLACEABLES b
net/minecraft/world/level/levelgen/feature/configurations/OreConfiguration$TargetBlockState cvu$b
	CODEC a
	state c
	target b
net/minecraft/world/level/levelgen/feature/configurations/ProbabilityFeatureConfiguration cvv
	CODEC k
	probability l
net/minecraft/world/level/levelgen/feature/configurations/RandomBooleanFeatureConfiguration cvw
	CODEC a
	featureFalse c
	featureTrue b
	getFeatures ()Ljava/util/stream/Stream; ab_
net/minecraft/world/level/levelgen/feature/configurations/RandomFeatureConfiguration cvx
	CODEC a
	defaultFeature c
	features b
	getFeatures ()Ljava/util/stream/Stream; ab_
net/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration cvy
	CODEC a
	blacklist e
	blockPlacer c
	canReplace j
	needWater l
	project k
	stateProvider b
	tries f
	whitelist d
	xspread g
	yspread h
	zspread i
net/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration$GrassConfigurationBuilder cvy$a
	blacklist d
	blockPlacer b
	canReplace i
	needWater k
	project j
	stateProvider a
	tries e
	whitelist c
	xspread f
	yspread g
	zspread h
	blacklist (Ljava/util/Set;)Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration$GrassConfigurationBuilder; b
	build ()Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration; d
	canReplace ()Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration$GrassConfigurationBuilder; a
	needWater ()Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration$GrassConfigurationBuilder; c
	noProjection ()Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration$GrassConfigurationBuilder; b
	tries (I)Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration$GrassConfigurationBuilder; a
	whitelist (Ljava/util/Set;)Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration$GrassConfigurationBuilder; a
	xspread (I)Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration$GrassConfigurationBuilder; b
	yspread (I)Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration$GrassConfigurationBuilder; c
	zspread (I)Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration$GrassConfigurationBuilder; d
net/minecraft/world/level/levelgen/feature/configurations/RangeDecoratorConfiguration cvz
	CODEC a
	height c
net/minecraft/world/level/levelgen/feature/configurations/ReplaceBlockConfiguration cwa
	CODEC a
	targetStates b
net/minecraft/world/level/levelgen/feature/configurations/ReplaceSphereConfiguration cwb
	CODEC a
	radius d
	replaceState c
	targetState b
	radius ()Lnet/minecraft/util/valueproviders/IntProvider; b
net/minecraft/world/level/levelgen/feature/configurations/RootSystemConfiguration cwc
	CODEC a
	allowedVerticalWaterForTree n
	hangingRootPlacementAttempts l
	hangingRootRadius i
	hangingRootStateProvider k
	hangingRootsVerticalSpan j
	requiredVerticalSpaceForTree c
	rootColumnMaxHeight h
	rootPlacementAttempts g
	rootRadius d
	rootReplaceable e
	rootStateProvider f
	treeFeature b
net/minecraft/world/level/levelgen/feature/configurations/RuinedPortalConfiguration cwd
	CODEC a
	portalType b
net/minecraft/world/level/levelgen/feature/configurations/ShipwreckConfiguration cwe
	CODEC a
	isBeached b
net/minecraft/world/level/levelgen/feature/configurations/SimpleBlockConfiguration cwf
	CODEC a
	placeIn d
	placeOn c
	placeUnder e
	toPlace b
net/minecraft/world/level/levelgen/feature/configurations/SimpleRandomFeatureConfiguration cwg
	CODEC a
	features b
	getFeatures ()Ljava/util/stream/Stream; ab_
net/minecraft/world/level/levelgen/feature/configurations/SmallDripstoneConfiguration cwh
	CODEC a
	chanceOfTallerDripstone e
	emptySpaceSearchRadius c
	maxOffsetFromOrigin d
	maxPlacements b
net/minecraft/world/level/levelgen/feature/configurations/SpikeConfiguration cwi
	CODEC a
	crystalBeamTarget d
	crystalInvulnerable b
	spikes c
	getCrystalBeamTarget ()Lnet/minecraft/core/BlockPos; d
	getSpikes ()Ljava/util/List; c
	isCrystalInvulnerable ()Z b
net/minecraft/world/level/levelgen/feature/configurations/SpringConfiguration cwj
	CODEC a
	holeCount e
	requiresBlockBelow c
	rockCount d
	state b
	validBlocks f
net/minecraft/world/level/levelgen/feature/configurations/StrongholdConfiguration cwk
	CODEC a
	count d
	distance b
	spread c
	count ()I c
	distance ()I a
	spread ()I b
net/minecraft/world/level/levelgen/feature/configurations/StructureFeatureConfiguration cwl
	CODEC a
	salt d
	separation c
	spacing b
	salt ()I c
	separation ()I b
	spacing ()I a
net/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration cwm
	CODEC a
	decorators i
	dirtProvider c
	foliagePlacer g
	foliageProvider e
	forceDirt k
	ignoreVines j
	minimumSize h
	saplingProvider f
	trunkPlacer d
	trunkProvider b
	withDecorators (Ljava/util/List;)Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration; a
net/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder cwm$a
	decorators h
	dirtProvider f
	foliagePlacer e
	foliageProvider b
	forceDirt j
	ignoreVines i
	minimumSize g
	saplingProvider c
	trunkPlacer d
	trunkProvider a
	build ()Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration; c
	decorators (Ljava/util/List;)Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder; a
	dirt (Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider;)Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder; a
	forceDirt ()Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder; b
	ignoreVines ()Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder; a
net/minecraft/world/level/levelgen/feature/configurations/UnderwaterMagmaConfiguration cwn
	CODEC a
	floorSearchRange b
	placementProbabilityPerValidPosition d
	placementRadiusAroundFloor c
net/minecraft/world/level/levelgen/feature/configurations/VegetationPatchConfiguration cwo
	CODEC a
	depth f
	extraBottomBlockChance g
	extraEdgeColumnChance k
	groundState c
	replaceable b
	surface e
	vegetationChance i
	vegetationFeature d
	verticalRange h
	xzRadius j
net/minecraft/world/level/levelgen/feature/featuresize/FeatureSize cwq
	CODEC a
	MAX_WIDTH b
	minClippedHeight c
	getSizeAtHeight (II)I a
	minClippedHeight ()Ljava/util/OptionalInt; c
	minClippedHeightCodec ()Lcom/mojang/serialization/codecs/RecordCodecBuilder; a
	type ()Lnet/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeType; b
net/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeType cwr
	THREE_LAYERS_FEATURE_SIZE b
	TWO_LAYERS_FEATURE_SIZE a
	codec c
	codec ()Lcom/mojang/serialization/Codec; a
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeType; a
net/minecraft/world/level/levelgen/feature/featuresize/ThreeLayersFeatureSize cws
	CODEC d
	limit e
	lowerSize g
	middleSize h
	upperLimit f
	upperSize i
	getSizeAtHeight (II)I a
	type ()Lnet/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeType; b
net/minecraft/world/level/levelgen/feature/featuresize/TwoLayersFeatureSize cwt
	CODEC d
	limit e
	lowerSize f
	upperSize g
	getSizeAtHeight (II)I a
	type ()Lnet/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeType; b
net/minecraft/world/level/levelgen/feature/foliageplacers/AcaciaFoliagePlacer cwv
	CODEC a
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;III)V a
	foliageHeight (Ljava/util/Random;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	shouldSkipLocation (Ljava/util/Random;IIIIZ)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/BlobFoliagePlacer cww
	CODEC a
	height b
	blobParts (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P3; a
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;III)V a
	foliageHeight (Ljava/util/Random;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	shouldSkipLocation (Ljava/util/Random;IIIIZ)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/BushFoliagePlacer cwx
	CODEC c
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;III)V a
	shouldSkipLocation (Ljava/util/Random;IIIIZ)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/DarkOakFoliagePlacer cwy
	CODEC a
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;III)V a
	foliageHeight (Ljava/util/Random;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	shouldSkipLocation (Ljava/util/Random;IIIIZ)Z a
	shouldSkipLocationSigned (Ljava/util/Random;IIIIZ)Z b
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/FancyFoliagePlacer cwz
	CODEC c
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;III)V a
	shouldSkipLocation (Ljava/util/Random;IIIIZ)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer cxa
	CODEC d
	offset f
	radius e
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;II)V a
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;III)V a
	foliageHeight (Ljava/util/Random;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	foliagePlacerParts (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P2; b
	foliageRadius (Ljava/util/Random;I)I a
	offset (Ljava/util/Random;)I a
	placeLeavesRow (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;Lnet/minecraft/core/BlockPos;IIZ)V a
	shouldSkipLocation (Ljava/util/Random;IIIIZ)Z a
	shouldSkipLocationSigned (Ljava/util/Random;IIIIZ)Z b
	tryPlaceLeaf (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;Lnet/minecraft/core/BlockPos;)V a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment cxa$a
	doubleTrunk c
	pos a
	radiusOffset b
	doubleTrunk ()Z c
	pos ()Lnet/minecraft/core/BlockPos; a
	radiusOffset ()I b
net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType cxb
	ACACIA_FOLIAGE_PLACER d
	BLOB_FOLIAGE_PLACER a
	BUSH_FOLIAGE_PLACER e
	DARK_OAK_FOLIAGE_PLACER i
	FANCY_FOLIAGE_PLACER f
	MEGA_JUNGLE_FOLIAGE_PLACER g
	MEGA_PINE_FOLIAGE_PLACER h
	PINE_FOLIAGE_PLACER c
	RANDOM_SPREAD_FOLIAGE_PLACER j
	SPRUCE_FOLIAGE_PLACER b
	codec k
	codec ()Lcom/mojang/serialization/Codec; a
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/MegaJungleFoliagePlacer cxc
	CODEC a
	height b
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;III)V a
	foliageHeight (Ljava/util/Random;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	shouldSkipLocation (Ljava/util/Random;IIIIZ)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/MegaPineFoliagePlacer cxd
	CODEC a
	crownHeight b
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;III)V a
	foliageHeight (Ljava/util/Random;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	shouldSkipLocation (Ljava/util/Random;IIIIZ)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/PineFoliagePlacer cxe
	CODEC a
	height b
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;III)V a
	foliageHeight (Ljava/util/Random;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	foliageRadius (Ljava/util/Random;I)I a
	shouldSkipLocation (Ljava/util/Random;IIIIZ)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/RandomSpreadFoliagePlacer cxf
	CODEC a
	foliageHeight b
	leafPlacementAttempts c
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;III)V a
	foliageHeight (Ljava/util/Random;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	shouldSkipLocation (Ljava/util/Random;IIIIZ)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/SpruceFoliagePlacer cxg
	CODEC a
	trunkHeight b
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;III)V a
	foliageHeight (Ljava/util/Random;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	shouldSkipLocation (Ljava/util/Random;IIIIZ)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider cxj
	CODEC a
	getState (Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	type ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType; a
net/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType cxk
	FOREST_FLOWER_PROVIDER d
	PLAIN_FLOWER_PROVIDER c
	RANDOMIZED_INT_STATE_PROVIDER f
	ROTATED_BLOCK_PROVIDER e
	SIMPLE_STATE_PROVIDER a
	WEIGHTED_STATE_PROVIDER b
	codec g
	codec ()Lcom/mojang/serialization/Codec; a
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType; a
net/minecraft/world/level/levelgen/feature/stateproviders/ForestFlowerProvider cxl
	CODEC b
	FLOWERS d
	INSTANCE c
	getState (Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	type ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType; a
net/minecraft/world/level/levelgen/feature/stateproviders/PlainFlowerProvider cxm
	CODEC b
	HIGH_NOISE_FLOWERS e
	INSTANCE c
	LOW_NOISE_FLOWERS d
	getState (Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	type ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType; a
net/minecraft/world/level/levelgen/feature/stateproviders/RandomizedIntStateProvider cxn
	CODEC b
	property e
	propertyName d
	source c
	values f
	findProperty (Lnet/minecraft/world/level/block/state/BlockState;Ljava/lang/String;)Lnet/minecraft/world/level/block/state/properties/IntegerProperty; a
	getState (Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	type ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType; a
net/minecraft/world/level/levelgen/feature/stateproviders/RotatedBlockProvider cxo
	CODEC b
	block c
	getState (Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	type ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType; a
net/minecraft/world/level/levelgen/feature/stateproviders/SimpleStateProvider cxp
	CODEC b
	state c
	getState (Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	type ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType; a
net/minecraft/world/level/levelgen/feature/stateproviders/WeightedStateProvider cxq
	CODEC b
	weightedList c
	create (Lnet/minecraft/util/random/SimpleWeightedRandomList;)Lcom/mojang/serialization/DataResult; a
	getState (Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	type ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType; a
net/minecraft/world/level/levelgen/feature/structures/EmptyPoolElement cxs
	CODEC a
	INSTANCE b
	getBoundingBox (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getShuffledJigsawBlocks (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Ljava/util/Random;)Ljava/util/List; a
	getSize (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/Vec3i; a
	getType ()Lnet/minecraft/world/level/levelgen/feature/structures/StructurePoolElementType; a
	place (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/Random;Z)Z a
net/minecraft/world/level/levelgen/feature/structures/FeaturePoolElement cxt
	CODEC a
	defaultJigsawNBT c
	feature b
	fillDefaultJigsawNBT ()Lnet/minecraft/nbt/CompoundTag; b
	getBoundingBox (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getShuffledJigsawBlocks (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Ljava/util/Random;)Ljava/util/List; a
	getSize (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/Vec3i; a
	getType ()Lnet/minecraft/world/level/levelgen/feature/structures/StructurePoolElementType; a
	place (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/Random;Z)Z a
net/minecraft/world/level/levelgen/feature/structures/JigsawJunction cxu
	deltaY d
	destProjection e
	sourceGroundY b
	sourceX a
	sourceZ c
	deserialize (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/level/levelgen/feature/structures/JigsawJunction; a
	getDeltaY ()I d
	getDestProjection ()Lnet/minecraft/world/level/levelgen/feature/structures/StructureTemplatePool$Projection; e
	getSourceGroundY ()I b
	getSourceX ()I a
	getSourceZ ()I c
	serialize (Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/world/level/levelgen/feature/structures/JigsawPlacement cxv
	LOGGER a
	addPieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/levelgen/feature/configurations/JigsawConfiguration;Lnet/minecraft/world/level/levelgen/feature/structures/JigsawPlacement$PieceFactory;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;ZZLnet/minecraft/world/level/LevelHeightAccessor;)V a
	addPieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/levelgen/structure/PoolElementStructurePiece;ILnet/minecraft/world/level/levelgen/feature/structures/JigsawPlacement$PieceFactory;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Ljava/util/List;Ljava/util/Random;Lnet/minecraft/world/level/LevelHeightAccessor;)V a
net/minecraft/world/level/levelgen/feature/structures/JigsawPlacement$PieceFactory cxv$a
net/minecraft/world/level/levelgen/feature/structures/JigsawPlacement$PieceState cxv$b
	boundsTop c
	depth d
	free b
	piece a
net/minecraft/world/level/levelgen/feature/structures/JigsawPlacement$Placer cxv$c
	chunkGenerator d
	factory c
	maxDepth b
	pieces f
	placing h
	pools a
	random g
	structureManager e
	tryPlacingChildren (Lnet/minecraft/world/level/levelgen/structure/PoolElementStructurePiece;Lorg/apache/commons/lang3/mutable/MutableObject;IIZLnet/minecraft/world/level/LevelHeightAccessor;)V a
net/minecraft/world/level/levelgen/feature/structures/LegacySinglePoolElement cxw
	CODEC a
	getSettings (Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Z)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	getType ()Lnet/minecraft/world/level/levelgen/feature/structures/StructurePoolElementType; a
net/minecraft/world/level/levelgen/feature/structures/ListPoolElement cxx
	CODEC a
	elements b
	getBoundingBox (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getShuffledJigsawBlocks (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Ljava/util/Random;)Ljava/util/List; a
	getSize (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/Vec3i; a
	getType ()Lnet/minecraft/world/level/levelgen/feature/structures/StructurePoolElementType; a
	place (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/Random;Z)Z a
	setProjection (Lnet/minecraft/world/level/levelgen/feature/structures/StructureTemplatePool$Projection;)Lnet/minecraft/world/level/levelgen/feature/structures/StructurePoolElement; a
	setProjectionOnEachElement (Lnet/minecraft/world/level/levelgen/feature/structures/StructureTemplatePool$Projection;)V b
net/minecraft/world/level/levelgen/feature/structures/SinglePoolElement cxy
	CODEC b
	TEMPLATE_CODEC a
	processors d
	template c
	encodeTemplate (Lcom/mojang/datafixers/util/Either;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; a
	getBoundingBox (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getDataMarkers (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Z)Ljava/util/List; a
	getSettings (Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Z)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	getShuffledJigsawBlocks (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Ljava/util/Random;)Ljava/util/List; a
	getSize (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/Vec3i; a
	getTemplate (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate; a
	getType ()Lnet/minecraft/world/level/levelgen/feature/structures/StructurePoolElementType; a
	place (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/Random;Z)Z a
	processorsCodec ()Lcom/mojang/serialization/codecs/RecordCodecBuilder; b
	templateCodec ()Lcom/mojang/serialization/codecs/RecordCodecBuilder; c
net/minecraft/world/level/levelgen/feature/structures/StructurePoolElement cxz
	CODEC e
	projection a
	empty ()Ljava/util/function/Function; g
	feature (Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature;)Ljava/util/function/Function; a
	getBoundingBox (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getGroundLevelDelta ()I f
	getProjection ()Lnet/minecraft/world/level/levelgen/feature/structures/StructureTemplatePool$Projection; e
	getShuffledJigsawBlocks (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Ljava/util/Random;)Ljava/util/List; a
	getSize (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/Vec3i; a
	getType ()Lnet/minecraft/world/level/levelgen/feature/structures/StructurePoolElementType; a
	handleDataMarker (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	legacy (Ljava/lang/String;)Ljava/util/function/Function; a
	legacy (Ljava/lang/String;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorList;)Ljava/util/function/Function; a
	list (Ljava/util/List;)Ljava/util/function/Function; a
	place (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/Random;Z)Z a
	projectionCodec ()Lcom/mojang/serialization/codecs/RecordCodecBuilder; d
	setProjection (Lnet/minecraft/world/level/levelgen/feature/structures/StructureTemplatePool$Projection;)Lnet/minecraft/world/level/levelgen/feature/structures/StructurePoolElement; a
	single (Ljava/lang/String;)Ljava/util/function/Function; b
	single (Ljava/lang/String;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorList;)Ljava/util/function/Function; b
net/minecraft/world/level/levelgen/feature/structures/StructurePoolElementType cya
	EMPTY d
	FEATURE c
	LEGACY e
	LIST b
	SINGLE a
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/feature/structures/StructurePoolElementType; a
net/minecraft/world/level/levelgen/feature/structures/StructureTemplatePool cyb
	CODEC b
	DIRECT_CODEC a
	LOGGER c
	SIZE_UNSET d
	fallback h
	maxSize i
	name e
	rawTemplates f
	templates g
	getFallback ()Lnet/minecraft/resources/ResourceLocation; a
	getMaxSize (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;)I a
	getName ()Lnet/minecraft/resources/ResourceLocation; b
	getRandomTemplate (Ljava/util/Random;)Lnet/minecraft/world/level/levelgen/feature/structures/StructurePoolElement; a
	getShuffledTemplates (Ljava/util/Random;)Ljava/util/List; b
	size ()I c
net/minecraft/world/level/levelgen/feature/structures/StructureTemplatePool$Projection cyb$a
	$VALUES g
	BY_NAME d
	CODEC c
	RIGID b
	TERRAIN_MATCHING a
	name e
	processors f
	$values ()[Lnet/minecraft/world/level/levelgen/feature/structures/StructureTemplatePool$Projection; d
	byName (Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/feature/structures/StructureTemplatePool$Projection; a
	getName ()Ljava/lang/String; a
	getProcessors ()Lcom/google/common/collect/ImmutableList; b
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/levelgen/feature/treedecorators/AlterGroundDecorator cyd
	CODEC a
	provider b
	place (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;Ljava/util/List;Ljava/util/List;)V a
	placeBlockAt (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)V b
	placeCircle (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)V a
	type ()Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType; a
net/minecraft/world/level/levelgen/feature/treedecorators/BeehiveDecorator cye
	CODEC a
	probability b
	place (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;Ljava/util/List;Ljava/util/List;)V a
	type ()Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType; a
net/minecraft/world/level/levelgen/feature/treedecorators/CocoaDecorator cyf
	CODEC a
	probability b
	place (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;Ljava/util/List;Ljava/util/List;)V a
	type ()Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType; a
net/minecraft/world/level/levelgen/feature/treedecorators/LeaveVineDecorator cyg
	CODEC a
	INSTANCE b
	addHangingVine (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/properties/BooleanProperty;Ljava/util/function/BiConsumer;)V a
	place (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;Ljava/util/List;Ljava/util/List;)V a
	type ()Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType; a
net/minecraft/world/level/levelgen/feature/treedecorators/TreeDecorator cyh
	CODEC c
	place (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;Ljava/util/List;Ljava/util/List;)V a
	placeVine (Ljava/util/function/BiConsumer;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/properties/BooleanProperty;)V a
	type ()Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType; a
net/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType cyi
	ALTER_GROUND e
	BEEHIVE d
	COCOA c
	LEAVE_VINE b
	TRUNK_VINE a
	codec f
	codec ()Lcom/mojang/serialization/Codec; a
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType; a
net/minecraft/world/level/levelgen/feature/treedecorators/TrunkVineDecorator cyj
	CODEC a
	INSTANCE b
	place (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;Ljava/util/List;Ljava/util/List;)V a
	type ()Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType; a
net/minecraft/world/level/levelgen/feature/trunkplacers/BendingTrunkPlacer cyl
	CODEC a
	bendLength h
	minHeightForLeaves b
	placeTrunk (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;ILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Ljava/util/List; a
	type ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
net/minecraft/world/level/levelgen/feature/trunkplacers/DarkOakTrunkPlacer cym
	CODEC a
	placeTrunk (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;ILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Ljava/util/List; a
	type ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
net/minecraft/world/level/levelgen/feature/trunkplacers/FancyTrunkPlacer cyn
	BRANCH_LENGTH_MAGIC j
	BRANCH_SLOPE i
	CLUSTER_DENSITY_MAGIC h
	CODEC a
	TRUNK_HEIGHT_SCALE b
	getLogAxis (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/Direction$Axis; a
	getSteps (Lnet/minecraft/core/BlockPos;)I a
	makeBranches (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;ILnet/minecraft/core/BlockPos;Ljava/util/List;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)V a
	makeLimb (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Z a
	placeTrunk (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;ILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Ljava/util/List; a
	treeShape (II)F b
	trimBranches (II)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
net/minecraft/world/level/levelgen/feature/trunkplacers/FancyTrunkPlacer$FoliageCoords cyn$a
	attachment a
	branchBase b
	getBranchBase ()I a
net/minecraft/world/level/levelgen/feature/trunkplacers/ForkingTrunkPlacer cyo
	CODEC a
	placeTrunk (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;ILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Ljava/util/List; a
	type ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
net/minecraft/world/level/levelgen/feature/trunkplacers/GiantTrunkPlacer cyp
	CODEC a
	placeLogIfFreeWithOffset (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;Lnet/minecraft/core/BlockPos;III)V a
	placeTrunk (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;ILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Ljava/util/List; a
	type ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
net/minecraft/world/level/levelgen/feature/trunkplacers/MegaJungleTrunkPlacer cyq
	CODEC b
	placeTrunk (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;ILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Ljava/util/List; a
	type ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
net/minecraft/world/level/levelgen/feature/trunkplacers/StraightTrunkPlacer cyr
	CODEC a
	placeTrunk (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;ILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Ljava/util/List; a
	type ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacer cys
	CODEC c
	MAX_BASE_HEIGHT a
	MAX_HEIGHT d
	MAX_RAND b
	baseHeight e
	heightRandA f
	heightRandB g
	getTreeHeight (Ljava/util/Random;)I a
	isDirt (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z a
	placeLog (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Z b
	placeLog (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;Ljava/util/function/Function;)Z a
	placeLogIfFree (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)V a
	placeTrunk (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;ILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Ljava/util/List; a
	setDirtAt (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)V a
	trunkPlacerParts (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P3; a
	type ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType cyt
	BENDING_TRUNK_PLACER g
	DARK_OAK_TRUNK_PLACER e
	FANCY_TRUNK_PLACER f
	FORKING_TRUNK_PLACER b
	GIANT_TRUNK_PLACER c
	MEGA_JUNGLE_TRUNK_PLACER d
	STRAIGHT_TRUNK_PLACER a
	codec h
	codec ()Lcom/mojang/serialization/Codec; a
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
net/minecraft/world/level/levelgen/flat/FlatLayerInfo cyv
	CODEC a
	block b
	height c
	getBlockState ()Lnet/minecraft/world/level/block/state/BlockState; b
	getHeight ()I a
net/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings cyw
	CODEC a
	LOGGER b
	STRUCTURE_FEATURES c
	addLakes k
	biome g
	biomes d
	decoration j
	layers h
	layersInfo f
	structureSettings e
	voidGen i
	getBiome ()Lnet/minecraft/world/level/biome/Biome; e
	getBiomeFromSettings ()Lnet/minecraft/world/level/biome/Biome; c
	getDefault (Lnet/minecraft/core/Registry;)Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings; a
	getLayers ()Ljava/util/List; g
	getLayersInfo ()Ljava/util/List; f
	setAddLakes ()V b
	setBiome (Ljava/util/function/Supplier;)V a
	setDecoration ()V a
	structureSettings ()Lnet/minecraft/world/level/levelgen/StructureSettings; d
	updateLayers ()V h
	validateHeight (Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings;)Lcom/mojang/serialization/DataResult; a
	withLayers (Ljava/util/List;Lnet/minecraft/world/level/levelgen/StructureSettings;)Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings; a
	withStructureSettings (Lnet/minecraft/world/level/levelgen/StructureSettings;)Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings; a
net/minecraft/world/level/levelgen/heightproviders/BiasedToBottomHeight cyy
	CODEC a
	LOGGER b
	inner f
	maxInclusive e
	minInclusive d
	getType ()Lnet/minecraft/world/level/levelgen/heightproviders/HeightProviderType; a
	of (Lnet/minecraft/world/level/levelgen/VerticalAnchor;Lnet/minecraft/world/level/levelgen/VerticalAnchor;I)Lnet/minecraft/world/level/levelgen/heightproviders/BiasedToBottomHeight; a
	sample (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I a
net/minecraft/world/level/levelgen/heightproviders/ConstantHeight cyz
	CODEC b
	ZERO a
	value d
	getType ()Lnet/minecraft/world/level/levelgen/heightproviders/HeightProviderType; a
	getValue ()Lnet/minecraft/world/level/levelgen/VerticalAnchor; b
	of (Lnet/minecraft/world/level/levelgen/VerticalAnchor;)Lnet/minecraft/world/level/levelgen/heightproviders/ConstantHeight; a
	sample (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I a
net/minecraft/world/level/levelgen/heightproviders/HeightProvider cza
	CODEC c
	CONSTANT_OR_DISPATCH_CODEC a
	getType ()Lnet/minecraft/world/level/levelgen/heightproviders/HeightProviderType; a
	sample (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I a
net/minecraft/world/level/levelgen/heightproviders/HeightProviderType czb
	BIASED_TO_BOTTOM c
	CONSTANT a
	TRAPEZOID e
	UNIFORM b
	VERY_BIASED_TO_BOTTOM d
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/heightproviders/HeightProviderType; a
net/minecraft/world/level/levelgen/heightproviders/TrapezoidHeight czc
	CODEC a
	LOGGER b
	maxInclusive e
	minInclusive d
	plateau f
	getType ()Lnet/minecraft/world/level/levelgen/heightproviders/HeightProviderType; a
	of (Lnet/minecraft/world/level/levelgen/VerticalAnchor;Lnet/minecraft/world/level/levelgen/VerticalAnchor;)Lnet/minecraft/world/level/levelgen/heightproviders/TrapezoidHeight; a
	of (Lnet/minecraft/world/level/levelgen/VerticalAnchor;Lnet/minecraft/world/level/levelgen/VerticalAnchor;I)Lnet/minecraft/world/level/levelgen/heightproviders/TrapezoidHeight; a
	sample (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I a
net/minecraft/world/level/levelgen/heightproviders/UniformHeight czd
	CODEC a
	LOGGER b
	maxInclusive e
	minInclusive d
	getType ()Lnet/minecraft/world/level/levelgen/heightproviders/HeightProviderType; a
	of (Lnet/minecraft/world/level/levelgen/VerticalAnchor;Lnet/minecraft/world/level/levelgen/VerticalAnchor;)Lnet/minecraft/world/level/levelgen/heightproviders/UniformHeight; a
	sample (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I a
net/minecraft/world/level/levelgen/heightproviders/VeryBiasedToBottomHeight cze
	CODEC a
	LOGGER b
	inner f
	maxInclusive e
	minInclusive d
	getType ()Lnet/minecraft/world/level/levelgen/heightproviders/HeightProviderType; a
	of (Lnet/minecraft/world/level/levelgen/VerticalAnchor;Lnet/minecraft/world/level/levelgen/VerticalAnchor;I)Lnet/minecraft/world/level/levelgen/heightproviders/VeryBiasedToBottomHeight; a
	sample (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I a
net/minecraft/world/level/levelgen/placement/CarvingMaskDecorator czh
	getPositions (Lnet/minecraft/world/level/levelgen/placement/DecorationContext;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	getPositions (Lnet/minecraft/world/level/levelgen/placement/DecorationContext;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/placement/CarvingMaskDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/CarvingMaskDecoratorConfiguration czi
	CODEC a
	step c
net/minecraft/world/level/levelgen/placement/CaveDecoratorConfiguration czj
	CODEC a
	floorToCeilingSearchRange d
	surface c
net/minecraft/world/level/levelgen/placement/CaveSurface czk
	$VALUES h
	CEILING a
	CODEC c
	FLOOR b
	VALUES g
	direction d
	id f
	y e
	$values ()[Lnet/minecraft/world/level/levelgen/placement/CaveSurface; d
	byName (Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/placement/CaveSurface; a
	getDirection ()Lnet/minecraft/core/Direction; a
	getSerializedName ()Ljava/lang/String; c
	getY ()I b
net/minecraft/world/level/levelgen/placement/CaveSurfaceDecorator czl
	getPositions (Lnet/minecraft/world/level/levelgen/placement/DecorationContext;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	getPositions (Lnet/minecraft/world/level/levelgen/placement/DecorationContext;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/placement/CaveDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/ChanceDecorator czm
	count (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)I a
	count (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/placement/ChanceDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)I a
net/minecraft/world/level/levelgen/placement/ChanceDecoratorConfiguration czn
	CODEC a
	chance c
net/minecraft/world/level/levelgen/placement/ConfiguredDecorator czo
	CODEC a
	config c
	decorator b
	config ()Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration; b
	decorated (Lnet/minecraft/world/level/levelgen/placement/ConfiguredDecorator;)Ljava/lang/Object; a
	decorated (Lnet/minecraft/world/level/levelgen/placement/ConfiguredDecorator;)Lnet/minecraft/world/level/levelgen/placement/ConfiguredDecorator; b
	getPositions (Lnet/minecraft/world/level/levelgen/placement/DecorationContext;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/CountDecorator czp
	count (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/CountConfiguration;Lnet/minecraft/core/BlockPos;)I a
	count (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)I a
net/minecraft/world/level/levelgen/placement/CountNoiseDecorator czq
	count (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)I a
	count (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/NoiseDependantDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)I a
net/minecraft/world/level/levelgen/placement/CountWithExtraChanceDecorator czr
	count (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)I a
	count (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/placement/FrequencyWithExtraChanceDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)I a
net/minecraft/world/level/levelgen/placement/DarkOakTreePlacementDecorator czs
	getPositions (Lnet/minecraft/world/level/levelgen/placement/DecorationContext;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	getPositions (Lnet/minecraft/world/level/levelgen/placement/DecorationContext;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/DecoratedDecorator czt
	getPositions (Lnet/minecraft/world/level/levelgen/placement/DecorationContext;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	getPositions (Lnet/minecraft/world/level/levelgen/placement/DecorationContext;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/placement/DecoratedDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/DecoratedDecoratorConfiguration czu
	CODEC a
	inner d
	outer c
	inner ()Lnet/minecraft/world/level/levelgen/placement/ConfiguredDecorator; b
	outer ()Lnet/minecraft/world/level/levelgen/placement/ConfiguredDecorator; a
net/minecraft/world/level/levelgen/placement/DecorationContext czv
	generator b
	level a
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	getCarvingMask (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)Ljava/util/BitSet; a
	getGenDepth ()I b
	getHeight (Lnet/minecraft/world/level/levelgen/Heightmap$Types;II)I a
	getLevel ()Lnet/minecraft/world/level/WorldGenLevel; d
	getMinBuildHeight ()I c
	getMinGenY ()I a
net/minecraft/world/level/levelgen/placement/EndGatewayPlacementDecorator czw
	y (Lnet/minecraft/world/level/levelgen/placement/DecorationContext;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;I)I a
	y (Lnet/minecraft/world/level/levelgen/placement/DecorationContext;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneDecoratorConfiguration;I)I a
net/minecraft/world/level/levelgen/placement/FeatureDecorator czx
	CARVING_MASK c
	CAVE_SURFACE q
	CHANCE h
	COUNT i
	COUNT_EXTRA l
	COUNT_MULTILAYER d
	COUNT_NOISE j
	COUNT_NOISE_BIASED k
	DARK_OAK_TREE f
	DECORATED b
	END_GATEWAY t
	HEIGHTMAP n
	HEIGHTMAP_SPREAD_DOUBLE o
	ICEBERG g
	LAVA_LAKE m
	NOPE a
	RANGE r
	SPREAD_32_ABOVE s
	SQUARE e
	WATER_DEPTH_THRESHOLD p
	configuredCodec u
	configured (Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;)Lnet/minecraft/world/level/levelgen/placement/ConfiguredDecorator; a
	configuredCodec ()Lcom/mojang/serialization/Codec; a
	getPositions (Lnet/minecraft/world/level/levelgen/placement/DecorationContext;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	register (Ljava/lang/String;Lnet/minecraft/world/level/levelgen/placement/FeatureDecorator;)Lnet/minecraft/world/level/levelgen/placement/FeatureDecorator; a
net/minecraft/world/level/levelgen/placement/FrequencyWithExtraChanceDecoratorConfiguration czy
	CODEC a
	count c
	extraChance d
	extraCount e
net/minecraft/world/level/levelgen/placement/HeightmapDecorator czz
	getPositions (Lnet/minecraft/world/level/levelgen/placement/DecorationContext;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	getPositions (Lnet/minecraft/world/level/levelgen/placement/DecorationContext;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/HeightmapConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/HeightmapDoubleDecorator daa
	getPositions (Lnet/minecraft/world/level/levelgen/placement/DecorationContext;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	getPositions (Lnet/minecraft/world/level/levelgen/placement/DecorationContext;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/HeightmapConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/IcebergPlacementDecorator dab
	getPositions (Lnet/minecraft/world/level/levelgen/placement/DecorationContext;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	getPositions (Lnet/minecraft/world/level/levelgen/placement/DecorationContext;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/LakeLavaPlacementDecorator dac
	count (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)I a
	count (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/placement/ChanceDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)I a
net/minecraft/world/level/levelgen/placement/NoiseBasedDecorator dad
	count (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)I a
	count (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/placement/NoiseCountFactorDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)I a
net/minecraft/world/level/levelgen/placement/NoiseCountFactorDecoratorConfiguration dae
	CODEC a
	noiseFactor d
	noiseOffset e
	noiseToCountRatio c
net/minecraft/world/level/levelgen/placement/NopePlacementDecorator daf
	getPositions (Lnet/minecraft/world/level/levelgen/placement/DecorationContext;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	getPositions (Lnet/minecraft/world/level/levelgen/placement/DecorationContext;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/RangeDecorator dag
	y (Lnet/minecraft/world/level/levelgen/placement/DecorationContext;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;I)I a
	y (Lnet/minecraft/world/level/levelgen/placement/DecorationContext;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/RangeDecoratorConfiguration;I)I a
net/minecraft/world/level/levelgen/placement/RepeatingDecorator dah
	count (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)I a
	getPositions (Lnet/minecraft/world/level/levelgen/placement/DecorationContext;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/Spread32Decorator dai
	y (Lnet/minecraft/world/level/levelgen/placement/DecorationContext;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;I)I a
	y (Lnet/minecraft/world/level/levelgen/placement/DecorationContext;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneDecoratorConfiguration;I)I a
net/minecraft/world/level/levelgen/placement/SquareDecorator daj
	getPositions (Lnet/minecraft/world/level/levelgen/placement/DecorationContext;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	getPositions (Lnet/minecraft/world/level/levelgen/placement/DecorationContext;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/VerticalDecorator dak
	getPositions (Lnet/minecraft/world/level/levelgen/placement/DecorationContext;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	y (Lnet/minecraft/world/level/levelgen/placement/DecorationContext;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;I)I a
net/minecraft/world/level/levelgen/placement/WaterDepthThresholdConfiguration dal
	CODEC a
	maxWaterDepth c
net/minecraft/world/level/levelgen/placement/WaterDepthThresholdDecorator dam
	getPositions (Lnet/minecraft/world/level/levelgen/placement/DecorationContext;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	getPositions (Lnet/minecraft/world/level/levelgen/placement/DecorationContext;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/placement/WaterDepthThresholdConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/nether/CountMultiLayerDecorator dan
	findOnGroundYPosition (Lnet/minecraft/world/level/levelgen/placement/DecorationContext;IIII)I a
	getPositions (Lnet/minecraft/world/level/levelgen/placement/DecorationContext;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/CountConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	getPositions (Lnet/minecraft/world/level/levelgen/placement/DecorationContext;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	isEmpty (Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/levelgen/structure/BoundingBox daq
	CODEC a
	LOGGER b
	maxX f
	maxY g
	maxZ h
	minX c
	minY d
	minZ e
	encapsulate (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	encapsulate (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; b
	encapsulatingBoxes (Ljava/lang/Iterable;)Ljava/util/Optional; b
	encapsulatingPositions (Ljava/lang/Iterable;)Ljava/util/Optional; a
	forAllCorners (Ljava/util/function/Consumer;)V a
	fromCorners (Lnet/minecraft/core/Vec3i;Lnet/minecraft/core/Vec3i;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getCenter ()Lnet/minecraft/core/BlockPos; f
	getLength ()Lnet/minecraft/core/Vec3i; b
	getXSpan ()I c
	getYSpan ()I d
	getZSpan ()I e
	infinite ()Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	inflate (I)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	intersects (IIII)Z a
	intersects (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Z a
	isInside (Lnet/minecraft/core/Vec3i;)Z b
	maxX ()I j
	maxY ()I k
	maxZ ()I l
	minX ()I g
	minY ()I h
	minZ ()I i
	move (III)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	move (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	moved (III)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; b
	orientBox (IIIIIIIIILnet/minecraft/core/Direction;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
net/minecraft/world/level/levelgen/structure/BuriedTreasurePieces dar
net/minecraft/world/level/levelgen/structure/BuriedTreasurePieces$BuriedTreasurePiece dar$a
	addAdditionalSaveData (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;)V a
	isLiquid (Lnet/minecraft/world/level/block/state/BlockState;)Z b
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/DesertPyramidPiece das
	hasPlacedChest e
	addAdditionalSaveData (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/EndCityPieces dat
	FAT_TOWER_BRIDGES f
	FAT_TOWER_GENERATOR g
	HOUSE_TOWER_GENERATOR b
	MAX_GEN_DEPTH a
	TOWER_BRIDGES c
	TOWER_BRIDGE_GENERATOR e
	TOWER_GENERATOR d
	addHelper (Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/EndCityPieces$EndCityPiece;)Lnet/minecraft/world/level/levelgen/structure/EndCityPieces$EndCityPiece; a
	addPiece (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/levelgen/structure/EndCityPieces$EndCityPiece;Lnet/minecraft/core/BlockPos;Ljava/lang/String;Lnet/minecraft/world/level/block/Rotation;Z)Lnet/minecraft/world/level/levelgen/structure/EndCityPieces$EndCityPiece; a
	recursiveChildren (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/levelgen/structure/EndCityPieces$SectionGenerator;ILnet/minecraft/world/level/levelgen/structure/EndCityPieces$EndCityPiece;Lnet/minecraft/core/BlockPos;Ljava/util/List;Ljava/util/Random;)Z a
	startHouseTower (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Ljava/util/List;Ljava/util/Random;)V a
net/minecraft/world/level/levelgen/structure/EndCityPieces$EndCityPiece dat$a
	addAdditionalSaveData (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;)V a
	handleDataMarker (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ServerLevelAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	makeResourceLocation (Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	makeSettings (ZLnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	makeTemplateLocation ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/world/level/levelgen/structure/EndCityPieces$SectionGenerator dat$b
	generate (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;ILnet/minecraft/world/level/levelgen/structure/EndCityPieces$EndCityPiece;Lnet/minecraft/core/BlockPos;Ljava/util/List;Ljava/util/Random;)Z a
	init ()V a
net/minecraft/world/level/levelgen/structure/IglooPieces dau
	GENERATION_HEIGHT a
	OFFSETS f
	PIVOTS e
	STRUCTURE_LOCATION_IGLOO b
	STRUCTURE_LOCATION_LABORATORY d
	STRUCTURE_LOCATION_LADDER c
	addPieces (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;)V a
net/minecraft/world/level/levelgen/structure/IglooPieces$IglooPiece dau$a
	addAdditionalSaveData (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;)V a
	handleDataMarker (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ServerLevelAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	makePosition (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/core/BlockPos;I)Lnet/minecraft/core/BlockPos; a
	makeSettings (Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/JunglePyramidPiece dav
	STONE_SELECTOR i
	placedHiddenChest f
	placedMainChest e
	placedTrap1 g
	placedTrap2 h
	addAdditionalSaveData (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/JunglePyramidPiece$MossStoneSelector dav$a
	next (Ljava/util/Random;IIIZ)V a
net/minecraft/world/level/levelgen/structure/LegacyStructureDataHandler daw
	CURRENT_TO_LEGACY_MAP a
	LEGACY_TO_CURRENT_MAP b
	currentKeys g
	dataMap d
	hasLegacyData c
	indexMap e
	legacyKeys f
	getLegacyStructureHandler (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/level/storage/DimensionDataStorage;)Lnet/minecraft/world/level/levelgen/structure/LegacyStructureDataHandler; a
	hasLegacyStart (IILjava/lang/String;)Z a
	isUnhandledStructureStart (II)Z a
	populateCaches (Lnet/minecraft/world/level/storage/DimensionDataStorage;)V a
	removeIndex (J)V a
	updateFromLegacy (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	updateStructureStart (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/world/level/levelgen/structure/MineShaftPieces dax
	DEFAULT_SHAFT_HEIGHT c
	DEFAULT_SHAFT_LENGTH d
	DEFAULT_SHAFT_WIDTH b
	LOGGER a
	MAX_CHAIN_HEIGHT f
	MAX_DEPTH g
	MAX_PILLAR_HEIGHT e
	createRandomShaftPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;IIILnet/minecraft/core/Direction;ILnet/minecraft/world/level/levelgen/feature/MineshaftFeature$Type;)Lnet/minecraft/world/level/levelgen/structure/MineShaftPieces$MineShaftPiece; a
	generateAndAddPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/MineShaftPieces$MineShaftPiece; a
net/minecraft/world/level/levelgen/structure/MineShaftPieces$MineShaftCorridor dax$a
	hasPlacedSpider d
	hasRails b
	numSections e
	spiderCorridor c
	addAdditionalSaveData (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;)V a
	canHangChainBelow (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	canPlaceColumnOnTopOf (Lnet/minecraft/world/level/block/state/BlockState;)Z b
	createChest (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/Random;IIILnet/minecraft/resources/ResourceLocation;)Z a
	fillColumnBetween (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos$MutableBlockPos;II)V a
	fillColumnDown (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/block/state/BlockState;IIILnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	fillPillarDownOrChainUp (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/block/state/BlockState;IIILnet/minecraft/world/level/levelgen/structure/BoundingBox;)V b
	findCorridorSize (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;IIILnet/minecraft/core/Direction;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	hasSturdyNeighbours (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIII)Z a
	maybePlaceCobWeb (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/Random;FIII)V a
	placeDoubleLowerOrUpperSupport (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;III)V a
	placeSupport (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIIIILjava/util/Random;)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/MineShaftPieces$MineShaftCrossing dax$b
	direction b
	isTwoFloored c
	addAdditionalSaveData (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;)V a
	findCrossing (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;IIILnet/minecraft/core/Direction;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	placeSupportPillar (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIII)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/MineShaftPieces$MineShaftPiece dax$c
	type a
	addAdditionalSaveData (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;)V a
	canBeReplaced (Lnet/minecraft/world/level/LevelReader;IIILnet/minecraft/world/level/levelgen/structure/BoundingBox;)Z a
	edgesLiquid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Z a
	isSupportingBox (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIII)Z a
	setPlanksBlock (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/block/state/BlockState;III)V a
net/minecraft/world/level/levelgen/structure/MineShaftPieces$MineShaftRoom dax$d
	childEntranceBoxes b
	addAdditionalSaveData (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;)V a
	move (III)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/MineShaftPieces$MineShaftStairs dax$e
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;)V a
	findStairs (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;IIILnet/minecraft/core/Direction;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces day
	BRIDGE_PIECE_WEIGHTS c
	CASTLE_PIECE_WEIGHTS d
	LOWEST_Y_POSITION b
	MAX_DEPTH a
	findAndCreateBridgePieceFactory (Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$PieceWeight;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$NetherBridgePiece; a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$BridgeCrossing day$a
	DEPTH c
	HEIGHT b
	WIDTH a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$BridgeCrossing; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$BridgeEndFiller day$b
	DEPTH c
	HEIGHT b
	WIDTH a
	selfSeed d
	addAdditionalSaveData (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$BridgeEndFiller; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$BridgeStraight day$c
	DEPTH c
	HEIGHT b
	WIDTH a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$BridgeStraight; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleCorridorStairsPiece day$d
	DEPTH c
	HEIGHT b
	WIDTH a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleCorridorStairsPiece; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleCorridorTBalconyPiece day$e
	DEPTH c
	HEIGHT b
	WIDTH a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleCorridorTBalconyPiece; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleEntrance day$f
	DEPTH c
	HEIGHT b
	WIDTH a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleEntrance; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleSmallCorridorCrossingPiece day$g
	DEPTH c
	HEIGHT b
	WIDTH a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleSmallCorridorCrossingPiece; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleSmallCorridorLeftTurnPiece day$h
	DEPTH c
	HEIGHT b
	WIDTH a
	isNeedingChest d
	addAdditionalSaveData (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleSmallCorridorLeftTurnPiece; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleSmallCorridorPiece day$i
	DEPTH c
	HEIGHT b
	WIDTH a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleSmallCorridorPiece; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleSmallCorridorRightTurnPiece day$j
	DEPTH c
	HEIGHT b
	WIDTH a
	isNeedingChest d
	addAdditionalSaveData (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleSmallCorridorRightTurnPiece; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleStalkRoom day$k
	DEPTH c
	HEIGHT b
	WIDTH a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleStalkRoom; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$MonsterThrone day$l
	DEPTH c
	HEIGHT b
	WIDTH a
	hasPlacedSpawner d
	addAdditionalSaveData (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIIILnet/minecraft/core/Direction;)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$MonsterThrone; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$NetherBridgePiece day$m
	addAdditionalSaveData (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;)V a
	generateAndAddPiece (Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$StartPiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;IIILnet/minecraft/core/Direction;IZ)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; a
	generateChildForward (Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$StartPiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;IIZ)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; a
	generateChildLeft (Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$StartPiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;IIZ)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; b
	generateChildRight (Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$StartPiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;IIZ)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; c
	generatePiece (Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$StartPiece;Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$NetherBridgePiece; a
	isOkBox (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Z a
	updatePieceWeight (Ljava/util/List;)I a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$PieceWeight day$n
	allowInRow e
	maxPlaceCount d
	pieceClass a
	placeCount c
	weight b
	doPlace (I)Z a
	isValid ()Z a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$RoomCrossing day$o
	DEPTH c
	HEIGHT b
	WIDTH a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$RoomCrossing; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$StairsRoom day$p
	DEPTH c
	HEIGHT b
	WIDTH a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIIILnet/minecraft/core/Direction;)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$StairsRoom; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$StartPiece day$q
	availableBridgePieces b
	availableCastlePieces c
	pendingChildren d
	previousPiece a
net/minecraft/world/level/levelgen/structure/NetherFossilFeature daz
	getStartFactory ()Lnet/minecraft/world/level/levelgen/feature/StructureFeature$StructureStartFactory; a
net/minecraft/world/level/levelgen/structure/NetherFossilFeature$FeatureStart daz$a
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;Lnet/minecraft/world/level/LevelHeightAccessor;)V a
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/RangeDecoratorConfiguration;Lnet/minecraft/world/level/LevelHeightAccessor;)V a
net/minecraft/world/level/levelgen/structure/NetherFossilPieces dba
	FOSSILS a
	addPieces (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/NetherFossilPieces$NetherFossilPiece dba$a
	addAdditionalSaveData (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;)V a
	handleDataMarker (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ServerLevelAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	makeSettings (Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/NoiseAffectingStructureStart dbb
	createBoundingBox ()Lnet/minecraft/world/level/levelgen/structure/BoundingBox; b
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces dbc
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$FitDoubleXRoom dbc$a
	create (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;Ljava/util/Random;)Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentPiece; a
	fits (Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$FitDoubleXYRoom dbc$b
	create (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;Ljava/util/Random;)Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentPiece; a
	fits (Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$FitDoubleYRoom dbc$c
	create (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;Ljava/util/Random;)Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentPiece; a
	fits (Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$FitDoubleYZRoom dbc$d
	create (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;Ljava/util/Random;)Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentPiece; a
	fits (Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$FitDoubleZRoom dbc$e
	create (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;Ljava/util/Random;)Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentPiece; a
	fits (Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$FitSimpleRoom dbc$f
	create (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;Ljava/util/Random;)Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentPiece; a
	fits (Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$FitSimpleTopRoom dbc$g
	create (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;Ljava/util/Random;)Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentPiece; a
	fits (Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$MonumentBuilding dbc$h
	BIOME_RANGE_CHECK a
	DEPTH E
	HEIGHT D
	TOP_POSITION F
	WIDTH C
	childPieces I
	coreRoom H
	sourceRoom G
	generateEntranceArchs (Lnet/minecraft/world/level/WorldGenLevel;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	generateEntranceWall (Lnet/minecraft/world/level/WorldGenLevel;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V b
	generateLowerWall (Lnet/minecraft/world/level/WorldGenLevel;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V d
	generateMiddleWall (Lnet/minecraft/world/level/WorldGenLevel;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V e
	generateRoofPiece (Lnet/minecraft/world/level/WorldGenLevel;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V c
	generateRoomGraph (Ljava/util/Random;)Ljava/util/List; a
	generateUpperWall (Lnet/minecraft/world/level/WorldGenLevel;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V f
	generateWing (ZILnet/minecraft/world/level/WorldGenLevel;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$MonumentRoomFitter dbc$i
	create (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;Ljava/util/Random;)Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentPiece; a
	fits (Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentCoreRoom dbc$j
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentDoubleXRoom dbc$k
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentDoubleXYRoom dbc$l
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentDoubleYRoom dbc$m
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentDoubleYZRoom dbc$n
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentDoubleZRoom dbc$o
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentEntryRoom dbc$p
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentPenthouse dbc$q
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentPiece dbc$r
	BASE_BLACK d
	BASE_GRAY b
	BASE_LIGHT c
	DOT_DECO_DATA e
	DO_FILL g
	FILL_BLOCK h
	FILL_KEEP i
	GRIDROOM_DEPTH k
	GRIDROOM_HEIGHT l
	GRIDROOM_LEFTWING_CONNECT_INDEX t
	GRIDROOM_RIGHTWING_CONNECT_INDEX u
	GRIDROOM_SOURCE_INDEX r
	GRIDROOM_TOP_CONNECT_INDEX s
	GRIDROOM_WIDTH j
	GRID_DEPTH n
	GRID_FLOOR_COUNT p
	GRID_HEIGHT o
	GRID_SIZE q
	GRID_WIDTH m
	LAMP_BLOCK f
	LEFTWING_INDEX v
	PENTHOUSE_INDEX x
	RIGHTWING_INDEX w
	roomDefinition y
	addAdditionalSaveData (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;)V a
	chunkIntersects (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIII)Z a
	generateBoxOnFillOnly (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIIIIILnet/minecraft/world/level/block/state/BlockState;)V a
	generateDefaultFloor (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIZ)V a
	generateWaterBox (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIIIII)V a
	getRoomIndex (III)I b
	makeBoundingBox (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;III)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	spawnElder (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;III)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentSimpleRoom dbc$s
	mainDesign a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentSimpleTopRoom dbc$t
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentWingRoom dbc$u
	mainDesign a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition dbc$v
	claimed d
	connections b
	hasOpening c
	index a
	isSource e
	scanIndex f
	countOpenings ()I c
	findSource (I)Z a
	isSpecial ()Z b
	setConnection (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;)V a
	updateOpenings ()V a
net/minecraft/world/level/levelgen/structure/OceanRuinFeature dbd
	getStartFactory ()Lnet/minecraft/world/level/levelgen/feature/StructureFeature$StructureStartFactory; a
net/minecraft/world/level/levelgen/structure/OceanRuinFeature$OceanRuinStart dbd$a
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;Lnet/minecraft/world/level/LevelHeightAccessor;)V a
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/OceanRuinConfiguration;Lnet/minecraft/world/level/LevelHeightAccessor;)V a
net/minecraft/world/level/levelgen/structure/OceanRuinFeature$Type dbd$b
	$VALUES f
	BY_NAME d
	CODEC c
	COLD b
	WARM a
	name e
	$values ()[Lnet/minecraft/world/level/levelgen/structure/OceanRuinFeature$Type; b
	byName (Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/structure/OceanRuinFeature$Type; a
	getName ()Ljava/lang/String; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/levelgen/structure/OceanRuinPieces dbe
	BIG_RUINS_BRICK e
	BIG_RUINS_CRACKED g
	BIG_RUINS_MOSSY f
	BIG_WARM_RUINS h
	RUINS_BRICK b
	RUINS_CRACKED c
	RUINS_MOSSY d
	WARM_RUINS a
	addClusterRuins (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Ljava/util/Random;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/OceanRuinConfiguration;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;)V a
	addPiece (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/OceanRuinConfiguration;ZF)V a
	addPieces (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/OceanRuinConfiguration;)V a
	allPositions (Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Ljava/util/List; a
	getBigWarmRuin (Ljava/util/Random;)Lnet/minecraft/resources/ResourceLocation; b
	getSmallWarmRuin (Ljava/util/Random;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/world/level/levelgen/structure/OceanRuinPieces$OceanRuinPiece dbe$a
	biomeType e
	integrity f
	isLarge g
	addAdditionalSaveData (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;)V a
	getHeight (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I a
	handleDataMarker (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ServerLevelAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	makeSettings (Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/PoolElementStructurePiece dbf
	LOGGER d
	element a
	groundLevelDelta e
	junctions f
	position b
	rotation c
	structureManager g
	addAdditionalSaveData (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;)V a
	addJunction (Lnet/minecraft/world/level/levelgen/feature/structures/JigsawJunction;)V a
	getElement ()Lnet/minecraft/world/level/levelgen/feature/structures/StructurePoolElement; b
	getGroundLevelDelta ()I d
	getJunctions ()Ljava/util/List; e
	getPosition ()Lnet/minecraft/core/BlockPos; c
	getRotation ()Lnet/minecraft/world/level/block/Rotation; ac_
	move (III)V a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/core/BlockPos;Z)Z a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/RuinedPortalPiece dbg
	DEFAULT_MOSSINESS i
	LOGGER e
	PROBABILITY_OF_GOLD_GONE f
	PROBABILITY_OF_MAGMA_INSTEAD_OF_LAVA h
	PROBABILITY_OF_MAGMA_INSTEAD_OF_NETHERRACK g
	properties k
	verticalPlacement j
	addAdditionalSaveData (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;)V a
	addNetherrackDripColumn (Ljava/util/Random;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V c
	addNetherrackDripColumnsBelowPortal (Ljava/util/Random;Lnet/minecraft/world/level/LevelAccessor;)V a
	canBlockBeReplacedByNetherrackOrMagma (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
	getBlockReplaceRule (Lnet/minecraft/world/level/block/Block;FLnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/ProcessorRule; a
	getBlockReplaceRule (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/ProcessorRule; a
	getHeightMapType (Lnet/minecraft/world/level/levelgen/structure/RuinedPortalPiece$VerticalPlacement;)Lnet/minecraft/world/level/levelgen/Heightmap$Types; a
	getLavaProcessorRule (Lnet/minecraft/world/level/levelgen/structure/RuinedPortalPiece$VerticalPlacement;Lnet/minecraft/world/level/levelgen/structure/RuinedPortalPiece$Properties;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/ProcessorRule; a
	getSurfaceY (Lnet/minecraft/world/level/LevelAccessor;IILnet/minecraft/world/level/levelgen/structure/RuinedPortalPiece$VerticalPlacement;)I a
	handleDataMarker (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ServerLevelAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	makeSettings (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	makeSettings (Lnet/minecraft/world/level/block/Mirror;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/RuinedPortalPiece$VerticalPlacement;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/RuinedPortalPiece$Properties;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	maybeAddLeavesAbove (Ljava/util/Random;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V b
	maybeAddVines (Ljava/util/Random;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	placeNetherrackOrMagma (Ljava/util/Random;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V d
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
	spreadNetherrack (Ljava/util/Random;Lnet/minecraft/world/level/LevelAccessor;)V b
net/minecraft/world/level/levelgen/structure/RuinedPortalPiece$Properties dbg$a
	CODEC a
	airPocket d
	cold b
	mossiness c
	overgrown e
	replaceWithBlackstone g
	vines f
net/minecraft/world/level/levelgen/structure/RuinedPortalPiece$VerticalPlacement dbg$b
	$VALUES i
	BY_NAME g
	IN_MOUNTAIN d
	IN_NETHER f
	ON_LAND_SURFACE a
	ON_OCEAN_FLOOR c
	PARTLY_BURIED b
	UNDERGROUND e
	name h
	$values ()[Lnet/minecraft/world/level/levelgen/structure/RuinedPortalPiece$VerticalPlacement; b
	byName (Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/structure/RuinedPortalPiece$VerticalPlacement; a
	getName ()Ljava/lang/String; a
net/minecraft/world/level/levelgen/structure/ScatteredFeaturePiece dbh
	depth c
	height b
	heightPosition d
	width a
	addAdditionalSaveData (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;)V a
	updateAverageGroundHeight (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;I)Z a
net/minecraft/world/level/levelgen/structure/ShipwreckPieces dbi
	PIVOT a
	STRUCTURE_LOCATION_BEACHED b
	STRUCTURE_LOCATION_OCEAN c
	addPieces (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/ShipwreckConfiguration;)V a
net/minecraft/world/level/levelgen/structure/ShipwreckPieces$ShipwreckPiece dbi$a
	isBeached e
	addAdditionalSaveData (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;)V a
	handleDataMarker (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ServerLevelAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	makeSettings (Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/StrongholdPieces dbj
	CHECK_AIR e
	LOWEST_Y_POSITION d
	MAX_DEPTH c
	SMALL_DOOR_HEIGHT b
	SMALL_DOOR_WIDTH a
	SMOOTH_STONE_SELECTOR j
	STRONGHOLD_PIECE_WEIGHTS f
	currentPieces g
	imposedPiece h
	totalWeight i
	findAndCreatePieceFactory (Ljava/lang/Class;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$StrongholdPiece; a
	generateAndAddPiece (Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$StartPiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; b
	generatePieceFromSmallDoor (Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$StartPiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$StrongholdPiece; a
	resetPieces ()V a
	updatePieceWeight ()Z b
net/minecraft/world/level/levelgen/structure/StrongholdPieces$ChestCorridor dbj$a
	DEPTH c
	HEIGHT b
	WIDTH a
	hasPlacedChest d
	addAdditionalSaveData (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$ChestCorridor; a
	getNoiseEffect ()Lnet/minecraft/world/level/levelgen/feature/NoiseEffect; ad_
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/StrongholdPieces$FillerCorridor dbj$b
	steps a
	addAdditionalSaveData (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;)V a
	findPieceBox (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;IIILnet/minecraft/core/Direction;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getNoiseEffect ()Lnet/minecraft/world/level/levelgen/feature/NoiseEffect; ad_
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/StrongholdPieces$FiveCrossing dbj$c
	DEPTH c
	HEIGHT b
	WIDTH a
	leftHigh f
	leftLow d
	rightHigh h
	rightLow g
	addAdditionalSaveData (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$FiveCrossing; a
	getNoiseEffect ()Lnet/minecraft/world/level/levelgen/feature/NoiseEffect; ad_
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/StrongholdPieces$LeftTurn dbj$d
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$LeftTurn; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/StrongholdPieces$Library dbj$e
	DEPTH d
	HEIGHT b
	TALL_HEIGHT c
	WIDTH a
	isTall f
	addAdditionalSaveData (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$Library; a
	getNoiseEffect ()Lnet/minecraft/world/level/levelgen/feature/NoiseEffect; ad_
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/StrongholdPieces$PieceWeight dbj$f
	maxPlaceCount d
	pieceClass a
	placeCount c
	weight b
	doPlace (I)Z a
	isValid ()Z a
net/minecraft/world/level/levelgen/structure/StrongholdPieces$PortalRoom dbj$g
	DEPTH c
	HEIGHT b
	WIDTH a
	hasPlacedSpawner d
	addAdditionalSaveData (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$PortalRoom; a
	getNoiseEffect ()Lnet/minecraft/world/level/levelgen/feature/NoiseEffect; ad_
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/StrongholdPieces$PrisonHall dbj$h
	DEPTH c
	HEIGHT b
	WIDTH a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$PrisonHall; a
	getNoiseEffect ()Lnet/minecraft/world/level/levelgen/feature/NoiseEffect; ad_
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/StrongholdPieces$RightTurn dbj$i
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$RightTurn; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/StrongholdPieces$RoomCrossing dbj$j
	DEPTH c
	HEIGHT b
	WIDTH a
	type d
	addAdditionalSaveData (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$RoomCrossing; a
	getNoiseEffect ()Lnet/minecraft/world/level/levelgen/feature/NoiseEffect; ad_
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/StrongholdPieces$SmoothStoneSelector dbj$k
	next (Ljava/util/Random;IIIZ)V a
net/minecraft/world/level/levelgen/structure/StrongholdPieces$StairsDown dbj$l
	DEPTH c
	HEIGHT b
	WIDTH a
	isSource d
	addAdditionalSaveData (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$StairsDown; a
	getNoiseEffect ()Lnet/minecraft/world/level/levelgen/feature/NoiseEffect; ad_
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/StrongholdPieces$StartPiece dbj$m
	pendingChildren c
	portalRoomPiece b
	previousPiece a
	getLocatorPosition ()Lnet/minecraft/core/BlockPos; ae_
net/minecraft/world/level/levelgen/structure/StrongholdPieces$Straight dbj$n
	DEPTH c
	HEIGHT b
	WIDTH a
	leftChild d
	rightChild f
	addAdditionalSaveData (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$Straight; a
	getNoiseEffect ()Lnet/minecraft/world/level/levelgen/feature/NoiseEffect; ad_
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/StrongholdPieces$StraightStairsDown dbj$o
	DEPTH c
	HEIGHT b
	WIDTH a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$StraightStairsDown; a
	getNoiseEffect ()Lnet/minecraft/world/level/levelgen/feature/NoiseEffect; ad_
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/StrongholdPieces$StrongholdPiece dbj$p
	entryDoor e
	addAdditionalSaveData (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;)V a
	generateSmallDoor (Lnet/minecraft/world/level/WorldGenLevel;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$StrongholdPiece$SmallDoorType;III)V a
	generateSmallDoorChildForward (Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$StartPiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;II)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; a
	generateSmallDoorChildLeft (Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$StartPiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;II)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; b
	generateSmallDoorChildRight (Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$StartPiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;II)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; c
	getNoiseEffect ()Lnet/minecraft/world/level/levelgen/feature/NoiseEffect; ad_
	isOkBox (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Z a
	randomSmallDoor (Ljava/util/Random;)Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$StrongholdPiece$SmallDoorType; a
net/minecraft/world/level/levelgen/structure/StrongholdPieces$StrongholdPiece$SmallDoorType dbj$p$a
	$VALUES e
	GRATES c
	IRON_DOOR d
	OPENING a
	WOOD_DOOR b
	$values ()[Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$StrongholdPiece$SmallDoorType; a
net/minecraft/world/level/levelgen/structure/StrongholdPieces$Turn dbj$q
	DEPTH c
	HEIGHT b
	WIDTH a
	getNoiseEffect ()Lnet/minecraft/world/level/levelgen/feature/NoiseEffect; ad_
net/minecraft/world/level/levelgen/structure/StructureFeatureIndexSavedData dbk
	TAG_All_INDEXES b
	TAG_REMAINING_INDEXES a
	all c
	remaining d
	addIndex (J)V a
	getAll ()Lit/unimi/dsi/fastutil/longs/LongSet; a
	hasStartIndex (J)Z b
	hasUnhandledIndex (J)Z c
	load (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/levelgen/structure/StructureFeatureIndexSavedData; b
	removeIndex (J)V d
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/world/level/levelgen/structure/StructurePiece dbl
	CAVE_AIR z
	LOGGER a
	SHAPE_CHECK_BLOCKS f
	boundingBox A
	genDepth B
	mirror c
	orientation b
	rotation d
	type e
	addAdditionalSaveData (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Ljava/util/Random;)V a
	canBeReplaced (Lnet/minecraft/world/level/LevelReader;IIILnet/minecraft/world/level/levelgen/structure/BoundingBox;)Z a
	createChest (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	createChest (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/Random;IIILnet/minecraft/resources/ResourceLocation;)Z a
	createDispenser (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/Random;IIILnet/minecraft/core/Direction;Lnet/minecraft/resources/ResourceLocation;)Z a
	createTag (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/nbt/CompoundTag; a
	fillColumnDown (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/block/state/BlockState;IIILnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	generateAirBox (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIIIII)V b
	generateBox (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIIIIILnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	generateBox (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIIIIIZLjava/util/Random;Lnet/minecraft/world/level/levelgen/structure/StructurePiece$BlockSelector;)V a
	generateBox (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	generateBox (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;ZLjava/util/Random;Lnet/minecraft/world/level/levelgen/structure/StructurePiece$BlockSelector;)V a
	generateMaybeBox (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/Random;FIIIIIILnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;ZZ)V a
	generateUpperHalfSphere (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIIIIILnet/minecraft/world/level/block/state/BlockState;Z)V a
	getBlock (Lnet/minecraft/world/level/BlockGetter;IIILnet/minecraft/world/level/levelgen/structure/BoundingBox;)Lnet/minecraft/world/level/block/state/BlockState; a
	getBoundingBox ()Lnet/minecraft/world/level/levelgen/structure/BoundingBox; f
	getGenDepth ()I g
	getLocatorPosition ()Lnet/minecraft/core/BlockPos; ae_
	getMirror ()Lnet/minecraft/world/level/block/Mirror; i
	getNoiseEffect ()Lnet/minecraft/world/level/levelgen/feature/NoiseEffect; ad_
	getOrientation ()Lnet/minecraft/core/Direction; h
	getRandomHorizontalDirection (Ljava/util/Random;)Lnet/minecraft/core/Direction; b
	getRotation ()Lnet/minecraft/world/level/block/Rotation; ac_
	getType ()Lnet/minecraft/world/level/levelgen/feature/StructurePieceType; j
	getWorldPos (III)Lnet/minecraft/core/BlockPos$MutableBlockPos; c
	getWorldX (II)I a
	getWorldY (I)I a
	getWorldZ (II)I b
	isCloseToChunk (Lnet/minecraft/world/level/ChunkPos;I)Z a
	isInterior (Lnet/minecraft/world/level/LevelReader;IIILnet/minecraft/world/level/levelgen/structure/BoundingBox;)Z b
	isReplaceableByStructures (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	makeBoundingBox (IIILnet/minecraft/core/Direction;III)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	maybeGenerateBlock (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/Random;FIIILnet/minecraft/world/level/block/state/BlockState;)V a
	move (III)V a
	placeBlock (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/block/state/BlockState;IIILnet/minecraft/world/level/levelgen/structure/BoundingBox;)V c
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
	reorient (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	setOrientation (Lnet/minecraft/core/Direction;)V a
net/minecraft/world/level/levelgen/structure/StructurePiece$BlockSelector dbl$a
	next a
	getNext ()Lnet/minecraft/world/level/block/state/BlockState; a
	next (Ljava/util/Random;IIIZ)V a
net/minecraft/world/level/levelgen/structure/StructurePieceAccessor dbm
	addPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;)V a
	findCollisionPiece (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; a
net/minecraft/world/level/levelgen/structure/StructureStart dbn
	INVALID_START b
	INVALID_START_ID a
	LOGGER e
	cachedBoundingBox i
	chunkPos g
	feature f
	pieces c
	random d
	references h
	addPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;)V a
	addReference ()V h
	canBeReferenced ()Z g
	clearPieces ()V l
	createBoundingBox ()Lnet/minecraft/world/level/levelgen/structure/BoundingBox; b
	createTag (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/nbt/CompoundTag; a
	findCollisionPiece (Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; a
	findCollisionPiece (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; a
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;Lnet/minecraft/world/level/LevelHeightAccessor;)V a
	getBoundingBox ()Lnet/minecraft/world/level/levelgen/structure/BoundingBox; c
	getChunkPos ()Lnet/minecraft/world/level/ChunkPos; f
	getFeature ()Lnet/minecraft/world/level/levelgen/feature/StructureFeature; k
	getLocatePos ()Lnet/minecraft/core/BlockPos; a
	getMaxReferences ()I j
	getPieces ()Ljava/util/List; d
	getReferences ()I i
	hasNoPieces ()Z m
	invalidateCache ()V n
	isInsidePiece (Lnet/minecraft/core/BlockPos;)Z a
	isValid ()Z e
	moveBelowSeaLevel (IILjava/util/Random;I)V a
	moveInsideHeights (Ljava/util/Random;II)V a
	offsetPiecesVertically (I)V a
	placeInChunk (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;)V a
net/minecraft/world/level/levelgen/structure/SwamplandHutPiece dbo
	spawnedCat f
	spawnedWitch e
	addAdditionalSaveData (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
	spawnCat (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
net/minecraft/world/level/levelgen/structure/TemplateStructurePiece dbp
	LOGGER e
	placeSettings c
	template b
	templateName a
	templatePosition d
	addAdditionalSaveData (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;)V a
	getRotation ()Lnet/minecraft/world/level/block/Rotation; ac_
	handleDataMarker (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ServerLevelAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	makeTemplateLocation ()Lnet/minecraft/resources/ResourceLocation; a
	move (III)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces dbq
	generateMansion (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Ljava/util/List;Ljava/util/Random;)V a
	main ([Ljava/lang/String;)V a
net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$FirstFloorRoomCollection dbq$a
	get1x1 (Ljava/util/Random;)Ljava/lang/String; a
	get1x1Secret (Ljava/util/Random;)Ljava/lang/String; b
	get1x2FrontEntrance (Ljava/util/Random;Z)Ljava/lang/String; b
	get1x2Secret (Ljava/util/Random;)Ljava/lang/String; c
	get1x2SideEntrance (Ljava/util/Random;Z)Ljava/lang/String; a
	get2x2 (Ljava/util/Random;)Ljava/lang/String; d
	get2x2Secret (Ljava/util/Random;)Ljava/lang/String; e
net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$FloorRoomCollection dbq$b
	get1x1 (Ljava/util/Random;)Ljava/lang/String; a
	get1x1Secret (Ljava/util/Random;)Ljava/lang/String; b
	get1x2FrontEntrance (Ljava/util/Random;Z)Ljava/lang/String; b
	get1x2Secret (Ljava/util/Random;)Ljava/lang/String; c
	get1x2SideEntrance (Ljava/util/Random;Z)Ljava/lang/String; a
	get2x2 (Ljava/util/Random;)Ljava/lang/String; d
	get2x2Secret (Ljava/util/Random;)Ljava/lang/String; e
net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$MansionGrid dbq$c
	BLOCKED g
	CLEAR b
	CORRIDOR c
	DEFAULT_SIZE a
	ROOM d
	ROOM_1x1 h
	ROOM_1x2 i
	ROOM_2x2 j
	ROOM_CORRIDOR_FLAG n
	ROOM_DOOR_FLAG l
	ROOM_ID_MASK p
	ROOM_ORIGIN_FLAG k
	ROOM_STAIRS_FLAG m
	ROOM_TYPE_MASK o
	START_ROOM e
	TEST_ROOM f
	baseGrid r
	entranceX u
	entranceY v
	floorRooms t
	random q
	thirdFloorGrid s
	cleanEdges (Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$SimpleGrid;)Z a
	get1x2RoomDirection (Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$SimpleGrid;IIII)Lnet/minecraft/core/Direction; b
	identifyRooms (Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$SimpleGrid;Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$SimpleGrid;)V a
	isHouse (Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$SimpleGrid;II)Z a
	isRoomId (Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$SimpleGrid;IIII)Z a
	print ()V a
	recursiveCorridor (Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$SimpleGrid;IILnet/minecraft/core/Direction;I)V a
	setupThirdFloor ()V b
net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$MansionPiecePlacer dbq$d
	random b
	startX c
	startY d
	structureManager a
	addRoom1x1 (Ljava/util/List;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$FloorRoomCollection;)V a
	addRoom1x2 (Ljava/util/List;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$FloorRoomCollection;Z)V a
	addRoom2x2 (Ljava/util/List;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$FloorRoomCollection;)V a
	addRoom2x2Secret (Ljava/util/List;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$FloorRoomCollection;)V a
	createMansion (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$MansionGrid;)V a
	createRoof (Ljava/util/List;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$SimpleGrid;Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$SimpleGrid;)V a
	entrance (Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$PlacementData;)V a
	traverseInnerTurn (Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$PlacementData;)V d
	traverseOuterWalls (Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$PlacementData;Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$SimpleGrid;Lnet/minecraft/core/Direction;IIII)V a
	traverseTurn (Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$PlacementData;)V c
	traverseWallPiece (Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$PlacementData;)V b
net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$PlacementData dbq$e
	position b
	rotation a
	wallType c
net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$SecondFloorRoomCollection dbq$f
	get1x1 (Ljava/util/Random;)Ljava/lang/String; a
	get1x1Secret (Ljava/util/Random;)Ljava/lang/String; b
	get1x2FrontEntrance (Ljava/util/Random;Z)Ljava/lang/String; b
	get1x2Secret (Ljava/util/Random;)Ljava/lang/String; c
	get1x2SideEntrance (Ljava/util/Random;Z)Ljava/lang/String; a
	get2x2 (Ljava/util/Random;)Ljava/lang/String; d
	get2x2Secret (Ljava/util/Random;)Ljava/lang/String; e
net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$SimpleGrid dbq$g
	grid a
	height c
	valueIfOutside d
	width b
	edgesTo (III)Z b
	get (II)I a
	set (III)V a
	set (IIIII)V a
	setif (IIII)V a
net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$ThirdFloorRoomCollection dbq$h
net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$WoodlandMansionPiece dbq$i
	addAdditionalSaveData (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;)V a
	handleDataMarker (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ServerLevelAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	makeLocation (Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	makeSettings (Lnet/minecraft/world/level/block/Mirror;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	makeTemplateLocation ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/world/level/levelgen/structure/templatesystem/AlwaysTrueTest dbs
	CODEC a
	INSTANCE b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType; a
	test (Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/AxisAlignedLinearPosTest dbt
	CODEC a
	axis g
	maxChance d
	maxDist f
	minChance b
	minDist e
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType; a
	test (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/BlackstoneReplaceProcessor dbu
	CODEC a
	INSTANCE b
	replacements c
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/BlockAgeProcessor dbv
	CODEC a
	NON_MOSSY_REPLACEMENTS e
	PROBABILITY_OF_REPLACING_FULL_BLOCK b
	PROBABILITY_OF_REPLACING_OBSIDIAN d
	PROBABILITY_OF_REPLACING_STAIRS c
	mossiness f
	getRandomBlock (Ljava/util/Random;[Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	getRandomBlock (Ljava/util/Random;[Lnet/minecraft/world/level/block/state/BlockState;[Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	getRandomFacingStairs (Ljava/util/Random;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/state/BlockState; a
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	maybeReplaceFullStoneBlock (Ljava/util/Random;)Lnet/minecraft/world/level/block/state/BlockState; a
	maybeReplaceObsidian (Ljava/util/Random;)Lnet/minecraft/world/level/block/state/BlockState; d
	maybeReplaceSlab (Ljava/util/Random;)Lnet/minecraft/world/level/block/state/BlockState; b
	maybeReplaceStairs (Ljava/util/Random;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	maybeReplaceWall (Ljava/util/Random;)Lnet/minecraft/world/level/block/state/BlockState; c
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/BlockIgnoreProcessor dbw
	AIR c
	CODEC a
	STRUCTURE_AND_AIR d
	STRUCTURE_BLOCK b
	toIgnore e
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/BlockMatchTest dbx
	CODEC a
	block b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType; a
	test (Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/BlockRotProcessor dby
	CODEC a
	integrity b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/BlockStateMatchTest dbz
	CODEC a
	blockState b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType; a
	test (Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/GravityProcessor dca
	CODEC a
	heightmap b
	offset c
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/JigsawReplacementProcessor dcb
	CODEC a
	INSTANCE b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/LavaSubmergedBlockProcessor dcc
	CODEC a
	INSTANCE b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/LinearPosTest dcd
	CODEC a
	maxChance d
	maxDist f
	minChance b
	minDist e
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType; a
	test (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/NopProcessor dce
	CODEC a
	INSTANCE b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/PosAlwaysTrueTest dcf
	CODEC a
	INSTANCE b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType; a
	test (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTest dcg
	CODEC c
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType; a
	test (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType dch
	ALWAYS_TRUE_TEST a
	AXIS_ALIGNED_LINEAR_POS_TEST c
	LINEAR_POS_TEST b
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType; a
net/minecraft/world/level/levelgen/structure/templatesystem/ProcessorRule dci
	CODEC a
	inputPredicate b
	locPredicate c
	outputState e
	outputTag f
	posPredicate d
	getOutputState ()Lnet/minecraft/world/level/block/state/BlockState; a
	getOutputTag ()Lnet/minecraft/nbt/CompoundTag; b
	test (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/ProtectedBlockProcessor dcj
	CODEC b
	cannotReplace a
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/RandomBlockMatchTest dck
	CODEC a
	block b
	probability d
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType; a
	test (Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/RandomBlockStateMatchTest dcl
	CODEC a
	blockState b
	probability d
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType; a
	test (Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/RuleProcessor dcm
	CODEC a
	rules b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/RuleTest dcn
	CODEC c
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType; a
	test (Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType dco
	ALWAYS_TRUE_TEST a
	BLOCKSTATE_TEST c
	BLOCK_TEST b
	RANDOM_BLOCKSTATE_TEST f
	RANDOM_BLOCK_TEST e
	TAG_TEST d
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType; a
net/minecraft/world/level/levelgen/structure/templatesystem/StructureManager dcp
	LOGGER a
	STRUCTURE_DIRECTORY_NAME b
	STRUCTURE_FILE_EXTENSION c
	STRUCTURE_TEXT_FILE_EXTENSION d
	fixerUpper f
	generatedDir h
	resourceManager g
	structureRepository e
	createAndValidatePathToStructure (Lnet/minecraft/resources/ResourceLocation;Ljava/lang/String;)Ljava/nio/file/Path; b
	createPathToStructure (Lnet/minecraft/resources/ResourceLocation;Ljava/lang/String;)Ljava/nio/file/Path; a
	get (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; b
	getOrCreate (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate; a
	loadFromGenerated (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; f
	loadFromResource (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; e
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	readStructure (Ljava/io/InputStream;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate; a
	readStructure (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate; a
	remove (Lnet/minecraft/resources/ResourceLocation;)V d
	save (Lnet/minecraft/resources/ResourceLocation;)Z c
net/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings dcq
	boundingBox e
	finalizeEntities k
	ignoreEntities d
	keepLiquids f
	knownShape j
	mirror a
	palette h
	processors i
	random g
	rotation b
	rotationPivot c
	addProcessor (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessor;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	clearProcessors ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; b
	copy ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	getBoundingBox ()Lnet/minecraft/world/level/levelgen/structure/BoundingBox; g
	getKnownShape ()Z h
	getMirror ()Lnet/minecraft/world/level/block/Mirror; c
	getProcessors ()Ljava/util/List; i
	getRandom (Lnet/minecraft/core/BlockPos;)Ljava/util/Random; b
	getRandomPalette (Ljava/util/List;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$Palette; a
	getRotation ()Lnet/minecraft/world/level/block/Rotation; d
	getRotationPivot ()Lnet/minecraft/core/BlockPos; e
	isIgnoreEntities ()Z f
	popProcessor (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessor;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; b
	setBoundingBox (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	setFinalizeEntities (Z)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; d
	setIgnoreEntities (Z)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	setKeepLiquids (Z)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; b
	setKnownShape (Z)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; c
	setMirror (Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	setRandom (Ljava/util/Random;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	setRotation (Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	setRotationPivot (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	shouldFinalizeEntities ()Z k
	shouldKeepLiquids ()Z j
net/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessor dcr
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorList dcs
	list a
	list ()Ljava/util/List; a
net/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType dct
	BLACKSTONE_REPLACE h
	BLOCK_AGE g
	BLOCK_IGNORE a
	BLOCK_ROT b
	DIRECT_CODEC m
	GRAVITY c
	JIGSAW_REPLACEMENT d
	LAVA_SUBMERGED_BLOCK i
	LIST_CODEC n
	LIST_OBJECT_CODEC l
	NOP f
	PROTECTED_BLOCKS j
	RULE e
	SINGLE_CODEC k
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate dcu
	BLOCKS_TAG d
	BLOCK_TAG_NBT g
	BLOCK_TAG_POS e
	BLOCK_TAG_STATE f
	CHUNK_SIZE l
	ENTITIES_TAG c
	ENTITY_TAG_BLOCKPOS i
	ENTITY_TAG_NBT j
	ENTITY_TAG_POS h
	PALETTE_LIST_TAG b
	PALETTE_TAG a
	SIZE_TAG k
	author p
	entityInfoList n
	palettes m
	size o
	addToLists (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V a
	buildInfoList (Ljava/util/List;Ljava/util/List;Ljava/util/List;)Ljava/util/List; a
	calculateConnectedPosition (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	calculateRelativePosition (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	createEntityIgnoreException (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/nbt/CompoundTag;)Ljava/util/Optional; a
	fillEntityList (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)V a
	fillFromWorld (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Vec3i;ZLnet/minecraft/world/level/block/Block;)V a
	filterBlocks (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;Lnet/minecraft/world/level/block/Block;)Ljava/util/List; a
	filterBlocks (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;Lnet/minecraft/world/level/block/Block;Z)Ljava/util/List; a
	getAuthor ()Ljava/lang/String; b
	getBoundingBox (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getBoundingBox (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Mirror;Lnet/minecraft/core/Vec3i;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getBoundingBox (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; b
	getSize ()Lnet/minecraft/core/Vec3i; a
	getSize (Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/Vec3i; a
	getZeroPositionWithTransform (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Mirror;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/BlockPos; a
	getZeroPositionWithTransform (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Mirror;Lnet/minecraft/world/level/block/Rotation;II)Lnet/minecraft/core/BlockPos; a
	load (Lnet/minecraft/nbt/CompoundTag;)V b
	loadPalette (Lnet/minecraft/nbt/ListTag;Lnet/minecraft/nbt/ListTag;)V a
	newDoubleList ([D)Lnet/minecraft/nbt/ListTag; a
	newIntegerList ([I)Lnet/minecraft/nbt/ListTag; a
	placeEntities (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Mirror;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Z)V a
	placeInWorld (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;Ljava/util/Random;I)Z a
	processBlockInfos (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;Ljava/util/List;)Ljava/util/List; a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	setAuthor (Ljava/lang/String;)V a
	transform (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Mirror;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	transform (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/level/block/Mirror;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/Vec3; a
	updateShapeAtEdge (Lnet/minecraft/world/level/LevelAccessor;ILnet/minecraft/world/phys/shapes/DiscreteVoxelShape;III)V a
net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$Palette dcu$a
	blocks a
	cache b
	blocks ()Ljava/util/List; a
	blocks (Lnet/minecraft/world/level/block/Block;)Ljava/util/List; a
net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$SimplePalette dcu$b
	DEFAULT_BLOCK_STATE a
	ids b
	lastId c
	addMapping (Lnet/minecraft/world/level/block/state/BlockState;I)V a
	idFor (Lnet/minecraft/world/level/block/state/BlockState;)I a
	stateFor (I)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo dcu$c
	nbt c
	pos a
	state b
net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureEntityInfo dcu$d
	blockPos b
	nbt c
	pos a
net/minecraft/world/level/levelgen/structure/templatesystem/TagMatchTest dcv
	CODEC a
	tag b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType; a
	test (Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)Z a
net/minecraft/world/level/levelgen/surfacebuilders/BadlandsSurfaceBuilder dcx
	BROWN_TERRACOTTA P
	LIGHT_GRAY_TERRACOTTA R
	MAX_CLAY_DEPTH a
	ORANGE_TERRACOTTA M
	RED_TERRACOTTA Q
	TERRACOTTA N
	WHITE_TERRACOTTA L
	YELLOW_TERRACOTTA O
	clayBands b
	clayBandsOffsetNoise f
	pillarNoise d
	pillarRoofNoise e
	seed c
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IIJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderBaseConfiguration;)V a
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IIJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderConfiguration;)V a
	generateBands (J)V b
	getBand (III)Lnet/minecraft/world/level/block/state/BlockState; a
	initNoise (J)V a
net/minecraft/world/level/levelgen/surfacebuilders/BasaltDeltasSurfaceBuilder dcy
	BASALT a
	BLACKSTONE b
	CEILING_BLOCK_STATES e
	FLOOR_BLOCK_STATES d
	GRAVEL c
	getCeilingBlockStates ()Lcom/google/common/collect/ImmutableList; b
	getFloorBlockStates ()Lcom/google/common/collect/ImmutableList; a
	getPatchBlockState ()Lnet/minecraft/world/level/block/state/BlockState; c
net/minecraft/world/level/levelgen/surfacebuilders/ConfiguredSurfaceBuilder dcz
	CODEC b
	DIRECT_CODEC a
	config d
	surfaceBuilder c
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IIJ)V a
	config ()Lnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderConfiguration; a
	initNoise (J)V a
net/minecraft/world/level/levelgen/surfacebuilders/DefaultSurfaceBuilder dda
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IIJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderBaseConfiguration;)V a
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IIJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderConfiguration;)V a
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;II)V a
net/minecraft/world/level/levelgen/surfacebuilders/ErodedBadlandsSurfaceBuilder ddb
	ORANGE_TERRACOTTA M
	TERRACOTTA N
	WHITE_TERRACOTTA L
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IIJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderBaseConfiguration;)V a
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IIJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderConfiguration;)V a
net/minecraft/world/level/levelgen/surfacebuilders/FrozenOceanSurfaceBuilder ddc
	AIR c
	GRAVEL d
	ICE e
	PACKED_ICE a
	SNOW_BLOCK b
	icebergNoise f
	icebergRoofNoise L
	seed M
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IIJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderBaseConfiguration;)V a
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IIJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderConfiguration;)V a
	initNoise (J)V a
net/minecraft/world/level/levelgen/surfacebuilders/GiantTreeTaigaSurfaceBuilder ddd
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IIJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderBaseConfiguration;)V a
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IIJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderConfiguration;)V a
net/minecraft/world/level/levelgen/surfacebuilders/GravellyMountainSurfaceBuilder dde
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IIJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderBaseConfiguration;)V a
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IIJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderConfiguration;)V a
net/minecraft/world/level/levelgen/surfacebuilders/MountainSurfaceBuilder ddf
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IIJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderBaseConfiguration;)V a
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IIJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderConfiguration;)V a
net/minecraft/world/level/levelgen/surfacebuilders/NetherCappedSurfaceBuilder ddg
	ceilingNoises c
	floorNoises b
	patchNoise d
	seed a
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IIJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderBaseConfiguration;)V a
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IIJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderConfiguration;)V a
	getCeilingBlockStates ()Lcom/google/common/collect/ImmutableList; b
	getFloorBlockStates ()Lcom/google/common/collect/ImmutableList; a
	getPatchBlockState ()Lnet/minecraft/world/level/block/state/BlockState; c
	initNoise (J)V a
	initPerlinNoises (Lcom/google/common/collect/ImmutableList;J)Lcom/google/common/collect/ImmutableMap; a
net/minecraft/world/level/levelgen/surfacebuilders/NetherForestSurfaceBuilder ddh
	AIR b
	decorationNoise c
	seed a
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IIJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderBaseConfiguration;)V a
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IIJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderConfiguration;)V a
	initNoise (J)V a
net/minecraft/world/level/levelgen/surfacebuilders/NetherSurfaceBuilder ddi
	AIR c
	GRAVEL d
	SOUL_SAND e
	decorationNoise b
	seed a
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IIJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderBaseConfiguration;)V a
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IIJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderConfiguration;)V a
	initNoise (J)V a
net/minecraft/world/level/levelgen/surfacebuilders/NopeSurfaceBuilder ddj
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IIJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderBaseConfiguration;)V a
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IIJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderConfiguration;)V a
net/minecraft/world/level/levelgen/surfacebuilders/ShatteredSavanaSurfaceBuilder ddk
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IIJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderBaseConfiguration;)V a
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IIJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderConfiguration;)V a
net/minecraft/world/level/levelgen/surfacebuilders/SoulSandValleySurfaceBuilder ddl
	BLOCK_STATES d
	GRAVEL c
	SOUL_SAND a
	SOUL_SOIL b
	getCeilingBlockStates ()Lcom/google/common/collect/ImmutableList; b
	getFloorBlockStates ()Lcom/google/common/collect/ImmutableList; a
	getPatchBlockState ()Lnet/minecraft/world/level/block/state/BlockState; c
net/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilder ddm
	BADLANDS C
	BASALT X
	BASALT_DELTAS J
	BLACKSTONE W
	COARSE_DIRT f
	CONFIG_BADLANDS o
	CONFIG_BASALT_DELTAS v
	CONFIG_COARSE_DIRT k
	CONFIG_CRIMSON_FOREST t
	CONFIG_DESERT l
	CONFIG_FULL_SAND n
	CONFIG_GRASS i
	CONFIG_GRAVEL h
	CONFIG_HELL q
	CONFIG_MYCELIUM p
	CONFIG_OCEAN_SAND m
	CONFIG_PODZOL g
	CONFIG_SOUL_SAND_VALLEY r
	CONFIG_STONE j
	CONFIG_THEEND s
	CONFIG_WARPED_FOREST u
	CRIMSON_NYLIUM S
	DEFAULT w
	DIRT a
	ENDSTONE R
	ERODED_BADLANDS E
	FROZEN_OCEAN F
	GIANT_TREE_TAIGA A
	GRASS_BLOCK b
	GRAVEL d
	GRAVELLY_MOUNTAIN z
	MAGMA Y
	MOUNTAIN x
	MYCELIUM O
	NETHER G
	NETHERRACK Q
	NETHER_FOREST H
	NETHER_WART_BLOCK U
	NOPE K
	PODZOL c
	RED_SAND M
	SAND L
	SHATTERED_SAVANNA y
	SOUL_SAND P
	SOUL_SAND_VALLEY I
	STONE e
	SWAMP B
	WARPED_NYLIUM T
	WARPED_WART_BLOCK V
	WHITE_TERRACOTTA N
	WOODED_BADLANDS D
	configuredCodec Z
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IIJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderConfiguration;)V a
	configured (Lnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderConfiguration;)Lnet/minecraft/world/level/levelgen/surfacebuilders/ConfiguredSurfaceBuilder; a
	configuredCodec ()Lcom/mojang/serialization/Codec; d
	initNoise (J)V a
	register (Ljava/lang/String;Lnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilder;)Lnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilder; a
net/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderBaseConfiguration ddn
	CODEC a
	topMaterial b
	underMaterial c
	underwaterMaterial d
	getTopMaterial ()Lnet/minecraft/world/level/block/state/BlockState; a
	getUnderMaterial ()Lnet/minecraft/world/level/block/state/BlockState; b
	getUnderwaterMaterial ()Lnet/minecraft/world/level/block/state/BlockState; c
net/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderConfiguration ddo
	getTopMaterial ()Lnet/minecraft/world/level/block/state/BlockState; a
	getUnderMaterial ()Lnet/minecraft/world/level/block/state/BlockState; b
	getUnderwaterMaterial ()Lnet/minecraft/world/level/block/state/BlockState; c
net/minecraft/world/level/levelgen/surfacebuilders/SwampSurfaceBuilder ddp
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IIJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderBaseConfiguration;)V a
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IIJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderConfiguration;)V a
net/minecraft/world/level/levelgen/surfacebuilders/WoodedBadlandsSurfaceBuilder ddq
	ORANGE_TERRACOTTA M
	TERRACOTTA N
	WHITE_TERRACOTTA L
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IIJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderBaseConfiguration;)V a
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IIJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderConfiguration;)V a
net/minecraft/world/level/levelgen/synth/BlendedNoise dds
	mainNoise c
	maxLimitNoise b
	minLimitNoise a
	sampleAndClampNoise (IIIDDDD)D a
net/minecraft/world/level/levelgen/synth/ImprovedNoise ddt
	SHIFT_UP_EPSILON d
	p e
	xo a
	yo b
	zo c
	gradDot (IDDD)D a
	noise (DDD)D a
	noise (DDDDD)D a
	noiseWithDerivative (DDD[D)D a
	p (I)I a
	sampleAndLerp (IIIDDDD)D a
	sampleWithDerivative (IIIDDD[D)D a
net/minecraft/world/level/levelgen/synth/NoiseUtils ddu
	biasTowardsExtreme (DD)D a
	sampleNoiseAndMapToRange (Lnet/minecraft/world/level/levelgen/synth/NormalNoise;DDDDD)D a
net/minecraft/world/level/levelgen/synth/NormalNoise ddv
	INPUT_FACTOR a
	TARGET_DEVIATION b
	first d
	second e
	valueFactor c
	create (Lnet/minecraft/world/level/levelgen/RandomSource;ILit/unimi/dsi/fastutil/doubles/DoubleList;)Lnet/minecraft/world/level/levelgen/synth/NormalNoise; a
	create (Lnet/minecraft/world/level/levelgen/RandomSource;I[D)Lnet/minecraft/world/level/levelgen/synth/NormalNoise; a
	expectedDeviation (I)D a
	getValue (DDD)D a
net/minecraft/world/level/levelgen/synth/PerlinNoise ddw
	ROUND_OFF a
	amplitudes c
	lowestFreqInputFactor e
	lowestFreqValueFactor d
	noiseLevels b
	create (Lnet/minecraft/world/level/levelgen/RandomSource;ILit/unimi/dsi/fastutil/doubles/DoubleList;)Lnet/minecraft/world/level/levelgen/synth/PerlinNoise; a
	create (Lnet/minecraft/world/level/levelgen/RandomSource;I[D)Lnet/minecraft/world/level/levelgen/synth/PerlinNoise; a
	getOctaveNoise (I)Lnet/minecraft/world/level/levelgen/synth/ImprovedNoise; a
	getSurfaceNoiseValue (DDDD)D a
	getValue (DDD)D a
	getValue (DDDDDZ)D a
	makeAmplitudes (Lit/unimi/dsi/fastutil/ints/IntSortedSet;)Lcom/mojang/datafixers/util/Pair; a
	skipOctave (Lnet/minecraft/world/level/levelgen/RandomSource;)V a
	wrap (D)D a
net/minecraft/world/level/levelgen/synth/PerlinSimplexNoise ddx
	highestFreqInputFactor c
	highestFreqValueFactor b
	noiseLevels a
	getSurfaceNoiseValue (DDDD)D a
	getValue (DDZ)D a
net/minecraft/world/level/levelgen/synth/SimplexNoise ddy
	F2 f
	G2 g
	GRADIENT a
	SQRT_3 e
	p h
	xo b
	yo c
	zo d
	dot ([IDDD)D a
	getCornerNoise3D (IDDDD)D a
	getValue (DD)D a
	getValue (DDD)D a
	p (I)I a
net/minecraft/world/level/levelgen/synth/SurfaceNoise ddz
	getSurfaceNoiseValue (DDDD)D a
net/minecraft/world/level/lighting/BlockLightEngine deb
	DIRECTIONS f
	pos g
	checkNeighborsAfterUpdate (JIZ)V a
	computeLevelFromNeighbor (JJI)I b
	getComputedLevel (JJI)I a
	getLightEmission (J)I d
	onBlockEmissionIncrease (Lnet/minecraft/core/BlockPos;I)V a
net/minecraft/world/level/lighting/BlockLightSectionStorage dec
	getLightValue (J)I d
net/minecraft/world/level/lighting/BlockLightSectionStorage$BlockDataLayerStorageMap dec$a
	copy ()Lnet/minecraft/world/level/lighting/BlockLightSectionStorage$BlockDataLayerStorageMap; a
	copy ()Lnet/minecraft/world/level/lighting/DataLayerStorageMap; b
net/minecraft/world/level/lighting/DataLayerStorageMap ded
	CACHE_SIZE b
	cacheEnabled e
	lastSectionKeys c
	lastSections d
	map a
	clearCache ()V c
	copy ()Lnet/minecraft/world/level/lighting/DataLayerStorageMap; b
	copyDataLayer (J)V a
	disableCache ()V d
	getLayer (J)Lnet/minecraft/world/level/chunk/DataLayer; c
	hasLayer (J)Z b
	removeLayer (J)Lnet/minecraft/world/level/chunk/DataLayer; d
	setLayer (JLnet/minecraft/world/level/chunk/DataLayer;)V a
net/minecraft/world/level/lighting/DynamicGraphMinFixedPoint dee
	NO_COMPUTED_LEVEL a
	computedLevels d
	firstQueuedLevel e
	hasWork f
	levelCount b
	queues c
	checkEdge (JJIIIZ)V a
	checkEdge (JJIZ)V a
	checkFirstQueuedLevel (I)V a
	checkNeighbor (JJIZ)V b
	checkNeighborsAfterUpdate (JIZ)V a
	checkNode (J)V f
	computeLevelFromNeighbor (JJI)I b
	dequeue (JIIZ)V a
	enqueue (JII)V a
	getComputedLevel (JJI)I a
	getKey (II)I a
	getLevel (J)I c
	getQueueSize ()I c
	hasWork ()Z b
	isSource (J)Z a
	removeFromQueue (J)V e
	removeIf (Ljava/util/function/LongPredicate;)V a
	runUpdates (I)I b
	setLevel (JI)V a
net/minecraft/world/level/lighting/FlatDataLayer def
	SIZE d
	getData ()[B a
	getIndex (III)I b
net/minecraft/world/level/lighting/LayerLightEngine deg
	CACHE_SIZE h
	DIRECTIONS f
	SELF_SOURCE a
	chunkSource b
	lastChunk j
	lastChunkPos i
	layer c
	pos e
	runningLightUpdates g
	storage d
	checkBlock (Lnet/minecraft/core/BlockPos;)V a
	checkNode (J)V f
	clearCache ()V d
	computeLevelFromNeighbor (JJI)I b
	enableLightSources (Lnet/minecraft/world/level/ChunkPos;Z)V a
	getChunk (II)Lnet/minecraft/world/level/BlockGetter; a
	getComputedLevel (JJI)I a
	getDataLayerData (Lnet/minecraft/core/SectionPos;)Lnet/minecraft/world/level/chunk/DataLayer; a
	getDebugData (J)Ljava/lang/String; b
	getLevel (J)I c
	getLevel (Lnet/minecraft/world/level/chunk/DataLayer;J)I a
	getLightBlockInto (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;I)I a
	getLightValue (Lnet/minecraft/core/BlockPos;)I b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;JLnet/minecraft/core/Direction;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateAndOpacity (JLorg/apache/commons/lang3/mutable/MutableInt;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasLightWork ()Z z_
	isSource (J)Z a
	onBlockEmissionIncrease (Lnet/minecraft/core/BlockPos;I)V a
	queueSectionData (JLnet/minecraft/world/level/chunk/DataLayer;Z)V a
	retainData (Lnet/minecraft/world/level/ChunkPos;Z)V b
	runUpdates (IZZ)I a
	setLevel (JI)V a
	updateSectionStatus (Lnet/minecraft/core/SectionPos;Z)V a
net/minecraft/world/level/lighting/LayerLightEventListener deh
	getDataLayerData (Lnet/minecraft/core/SectionPos;)Lnet/minecraft/world/level/chunk/DataLayer; a
	getLightValue (Lnet/minecraft/core/BlockPos;)I b
net/minecraft/world/level/lighting/LayerLightEventListener$DummyLightLayerEventListener deh$a
	$VALUES b
	INSTANCE a
	$values ()[Lnet/minecraft/world/level/lighting/LayerLightEventListener$DummyLightLayerEventListener; b
	checkBlock (Lnet/minecraft/core/BlockPos;)V a
	enableLightSources (Lnet/minecraft/world/level/ChunkPos;Z)V a
	getDataLayerData (Lnet/minecraft/core/SectionPos;)Lnet/minecraft/world/level/chunk/DataLayer; a
	getLightValue (Lnet/minecraft/core/BlockPos;)I b
	hasLightWork ()Z z_
	onBlockEmissionIncrease (Lnet/minecraft/core/BlockPos;I)V a
	runUpdates (IZZ)I a
	updateSectionStatus (Lnet/minecraft/core/SectionPos;Z)V a
net/minecraft/world/level/lighting/LayerLightSectionStorage dei
	DIRECTIONS n
	EMPTY c
	EMPTY_DATA d
	LIGHT_AND_DATA a
	LIGHT_ONLY b
	changedSections j
	chunkSource p
	columnsToRetainQueuedDataFor r
	dataSectionSet e
	hasToRemove m
	layer o
	queuedSections l
	sectionsAffectedByLightUpdates k
	toMarkData g
	toMarkNoData f
	toRemove s
	untrustedSections q
	updatingSectionData i
	visibleSectionData h
	checkEdgesForSection (Lnet/minecraft/world/level/lighting/LayerLightEngine;J)V b
	clearQueuedSectionBlocks (Lnet/minecraft/world/level/lighting/LayerLightEngine;J)V a
	createDataLayer (J)Lnet/minecraft/world/level/chunk/DataLayer; j
	enableLightSources (JZ)V b
	getDataLayer (JZ)Lnet/minecraft/world/level/chunk/DataLayer; a
	getDataLayer (Lnet/minecraft/world/level/lighting/DataLayerStorageMap;J)Lnet/minecraft/world/level/chunk/DataLayer; a
	getDataLayerData (J)Lnet/minecraft/world/level/chunk/DataLayer; h
	getLevel (J)I c
	getLevelFromSource (J)I b
	getLightValue (J)I d
	getStoredLevel (J)I i
	hasInconsistencies ()Z a
	markNewInconsistencies (Lnet/minecraft/world/level/lighting/LayerLightEngine;ZZ)V a
	onNodeAdded (J)V k
	onNodeRemoved (J)V l
	queueSectionData (JLnet/minecraft/world/level/chunk/DataLayer;Z)V a
	retainData (JZ)V c
	runAllUpdates ()V d
	setLevel (JI)V a
	setStoredLevel (JI)V b
	storingLightForSection (J)Z g
	swapSectionMap ()V e
	updateSectionStatus (JZ)V d
net/minecraft/world/level/lighting/LevelLightEngine dej
	LIGHT_SECTION_PADDING b
	MAX_SOURCE_LEVEL a
	blockEngine d
	levelHeightAccessor c
	skyEngine e
	checkBlock (Lnet/minecraft/core/BlockPos;)V a
	enableLightSources (Lnet/minecraft/world/level/ChunkPos;Z)V a
	getDebugData (Lnet/minecraft/world/level/LightLayer;Lnet/minecraft/core/SectionPos;)Ljava/lang/String; a
	getLayerListener (Lnet/minecraft/world/level/LightLayer;)Lnet/minecraft/world/level/lighting/LayerLightEventListener; a
	getLightSectionCount ()I b
	getMaxLightSection ()I d
	getMinLightSection ()I c
	getRawBrightness (Lnet/minecraft/core/BlockPos;I)I b
	hasLightWork ()Z z_
	onBlockEmissionIncrease (Lnet/minecraft/core/BlockPos;I)V a
	queueSectionData (Lnet/minecraft/world/level/LightLayer;Lnet/minecraft/core/SectionPos;Lnet/minecraft/world/level/chunk/DataLayer;Z)V a
	retainData (Lnet/minecraft/world/level/ChunkPos;Z)V b
	runUpdates (IZZ)I a
	updateSectionStatus (Lnet/minecraft/core/SectionPos;Z)V a
net/minecraft/world/level/lighting/LightEventListener dek
	checkBlock (Lnet/minecraft/core/BlockPos;)V a
	enableLightSources (Lnet/minecraft/world/level/ChunkPos;Z)V a
	hasLightWork ()Z z_
	onBlockEmissionIncrease (Lnet/minecraft/core/BlockPos;I)V a
	runUpdates (IZZ)I a
	updateSectionStatus (Lnet/minecraft/core/BlockPos;Z)V a
	updateSectionStatus (Lnet/minecraft/core/SectionPos;Z)V a
net/minecraft/world/level/lighting/SkyLightEngine del
	DIRECTIONS f
	HORIZONTALS g
	checkNeighborsAfterUpdate (JIZ)V a
	checkNode (J)V f
	computeLevelFromNeighbor (JJI)I b
	getComputedLevel (JJI)I a
	getDebugData (J)Ljava/lang/String; b
net/minecraft/world/level/lighting/SkyLightSectionStorage dem
	HORIZONTALS n
	columnsWithSkySources r
	hasSourceInconsistencies s
	sectionsToAddSourcesTo p
	sectionsToRemoveSourcesFrom q
	sectionsWithSources o
	createDataLayer (J)Lnet/minecraft/world/level/chunk/DataLayer; j
	enableLightSources (JZ)V b
	getLightValue (J)I d
	getLightValue (JZ)I e
	hasInconsistencies ()Z a
	hasSectionsBelow (I)Z a
	isAboveData (J)Z m
	lightOnInSection (J)Z n
	markNewInconsistencies (Lnet/minecraft/world/level/lighting/LayerLightEngine;ZZ)V a
	onNodeAdded (J)V k
	onNodeRemoved (J)V l
	queueAddSource (J)V p
	queueRemoveSource (J)V o
	recheckInconsistencyFlag ()V f
net/minecraft/world/level/lighting/SkyLightSectionStorage$SkyDataLayerStorageMap dem$a
	currentLowestY b
	topSections c
	copy ()Lnet/minecraft/world/level/lighting/DataLayerStorageMap; b
	copy ()Lnet/minecraft/world/level/lighting/SkyLightSectionStorage$SkyDataLayerStorageMap; a
net/minecraft/world/level/lighting/SpatialLongSet den
	map a
net/minecraft/world/level/lighting/SpatialLongSet$InternalMap den$a
	OUTER_MASK h
	X_BITS a
	X_OFFSET g
	Y_BITS c
	Y_OFFSET d
	Z_BITS b
	Z_OFFSET e
	lastOuterKey j
	lastPos i
	minSize k
	addBit (J)Z c
	getFullKey (JI)J a
	getInnerKey (J)I b
	getOuterKey (J)J a
	removeBit (J)Z d
	removeFirstBit ()J a
	removeFromEntry (IJ)Z b
	removeFromNullEntry (J)Z e
	replaceBit (IJ)Z a
net/minecraft/world/level/material/EmptyFluid dep
	canBeReplacedWith (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/Direction;)Z a
	createLegacyBlock (Lnet/minecraft/world/level/material/FluidState;)Lnet/minecraft/world/level/block/state/BlockState; b
	getAmount (Lnet/minecraft/world/level/material/FluidState;)I d
	getBucket ()Lnet/minecraft/world/item/Item; a
	getExplosionResistance ()F c
	getFlow (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;)Lnet/minecraft/world/phys/Vec3; a
	getHeight (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getOwnHeight (Lnet/minecraft/world/level/material/FluidState;)F a
	getShape (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getTickDelay (Lnet/minecraft/world/level/LevelReader;)I a
	isEmpty ()Z b
	isSource (Lnet/minecraft/world/level/material/FluidState;)Z c
net/minecraft/world/level/material/FlowingFluid deq
	CACHE_SIZE e
	FALLING a
	LEVEL b
	OCCLUSION_CACHE f
	shapes g
	affectsFlow (Lnet/minecraft/world/level/material/FluidState;)Z g
	beforeDestroyingBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	canConvertToSource ()Z f
	canHoldFluid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	canPassThrough (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
	canPassThroughWall (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	canSpreadTo (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/material/Fluid;)Z a
	createFluidStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAmount (Lnet/minecraft/world/level/material/FluidState;)I d
	getCacheKey (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)S a
	getDropOff (Lnet/minecraft/world/level/LevelReader;)I c
	getFlow (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;)Lnet/minecraft/world/phys/Vec3; a
	getFlowing ()Lnet/minecraft/world/level/material/Fluid; d
	getFlowing (IZ)Lnet/minecraft/world/level/material/FluidState; a
	getHeight (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getLegacyLevel (Lnet/minecraft/world/level/material/FluidState;)I e
	getNewLiquid (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; a
	getOwnHeight (Lnet/minecraft/world/level/material/FluidState;)F a
	getShape (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getSlopeDistance (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;ILnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lit/unimi/dsi/fastutil/shorts/Short2ObjectMap;Lit/unimi/dsi/fastutil/shorts/Short2BooleanMap;)I a
	getSlopeFindDistance (Lnet/minecraft/world/level/LevelReader;)I b
	getSource ()Lnet/minecraft/world/level/material/Fluid; e
	getSource (Z)Lnet/minecraft/world/level/material/FluidState; a
	getSpread (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Ljava/util/Map; b
	getSpreadDelay (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/material/FluidState;)I a
	hasSameAbove (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	isSolidFace (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	isSourceBlockOfThisType (Lnet/minecraft/world/level/material/FluidState;)Z h
	isWaterHole (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	sourceNeighborCount (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)I a
	spread (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;)V a
	spreadTo (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/material/FluidState;)V a
	spreadToSides (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/block/state/BlockState;)V a
	tick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;)V a
net/minecraft/world/level/material/Fluid der
	FLUID_STATE_REGISTRY c
	defaultFluidState a
	stateDefinition d
	animateTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Ljava/util/Random;)V a
	canBeReplacedWith (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/Direction;)Z a
	createFluidStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	createLegacyBlock (Lnet/minecraft/world/level/material/FluidState;)Lnet/minecraft/world/level/block/state/BlockState; b
	defaultFluidState ()Lnet/minecraft/world/level/material/FluidState; h
	getAmount (Lnet/minecraft/world/level/material/FluidState;)I d
	getBucket ()Lnet/minecraft/world/item/Item; a
	getDripParticle ()Lnet/minecraft/core/particles/ParticleOptions; i
	getExplosionResistance ()F c
	getFlow (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;)Lnet/minecraft/world/phys/Vec3; a
	getHeight (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getOwnHeight (Lnet/minecraft/world/level/material/FluidState;)F a
	getPickupSound ()Ljava/util/Optional; k
	getShape (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateDefinition ()Lnet/minecraft/world/level/block/state/StateDefinition; g
	getTickDelay (Lnet/minecraft/world/level/LevelReader;)I a
	is (Lnet/minecraft/tags/Tag;)Z a
	isEmpty ()Z b
	isRandomlyTicking ()Z j
	isSame (Lnet/minecraft/world/level/material/Fluid;)Z a
	isSource (Lnet/minecraft/world/level/material/FluidState;)Z c
	randomTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Ljava/util/Random;)V b
	registerDefaultState (Lnet/minecraft/world/level/material/FluidState;)V f
	tick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;)V a
net/minecraft/world/level/material/FluidState des
	AMOUNT_FULL g
	AMOUNT_MAX b
	CODEC a
	animateTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	canBeReplacedWith (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/Direction;)Z a
	createLegacyBlock ()Lnet/minecraft/world/level/block/state/BlockState; g
	getAmount ()I e
	getDripParticle ()Lnet/minecraft/core/particles/ParticleOptions; h
	getExplosionResistance ()F i
	getFlow (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/Vec3; c
	getHeight (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getOwnHeight ()F d
	getShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; d
	getType ()Lnet/minecraft/world/level/material/Fluid; a
	is (Lnet/minecraft/tags/Tag;)Z a
	isEmpty ()Z c
	isRandomlyTicking ()Z f
	isSource ()Z b
	isSourceOfType (Lnet/minecraft/world/level/material/Fluid;)Z a
	randomTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	shouldRenderBackwardUpFace (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
	tick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/material/Fluids det
	EMPTY a
	FLOWING_LAVA d
	FLOWING_WATER b
	LAVA e
	WATER c
	register (Ljava/lang/String;Lnet/minecraft/world/level/material/Fluid;)Lnet/minecraft/world/level/material/Fluid; a
net/minecraft/world/level/material/FogType deu
	$VALUES e
	LAVA a
	NONE d
	POWDER_SNOW c
	WATER b
	$values ()[Lnet/minecraft/world/level/material/FogType; a
net/minecraft/world/level/material/LavaFluid dev
	MIN_LEVEL_CUTOFF e
	animateTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Ljava/util/Random;)V a
	beforeDestroyingBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	canBeReplacedWith (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/Direction;)Z a
	canConvertToSource ()Z f
	createLegacyBlock (Lnet/minecraft/world/level/material/FluidState;)Lnet/minecraft/world/level/block/state/BlockState; b
	fizz (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	getBucket ()Lnet/minecraft/world/item/Item; a
	getDripParticle ()Lnet/minecraft/core/particles/ParticleOptions; i
	getDropOff (Lnet/minecraft/world/level/LevelReader;)I c
	getExplosionResistance ()F c
	getFlowing ()Lnet/minecraft/world/level/material/Fluid; d
	getPickupSound ()Ljava/util/Optional; k
	getSlopeFindDistance (Lnet/minecraft/world/level/LevelReader;)I b
	getSource ()Lnet/minecraft/world/level/material/Fluid; e
	getSpreadDelay (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/material/FluidState;)I a
	getTickDelay (Lnet/minecraft/world/level/LevelReader;)I a
	hasFlammableNeighbours (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	isFlammable (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z b
	isRandomlyTicking ()Z j
	isSame (Lnet/minecraft/world/level/material/Fluid;)Z a
	randomTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Ljava/util/Random;)V b
	spreadTo (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/material/FluidState;)V a
net/minecraft/world/level/material/LavaFluid$Flowing dev$a
	createFluidStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAmount (Lnet/minecraft/world/level/material/FluidState;)I d
	isSource (Lnet/minecraft/world/level/material/FluidState;)Z c
net/minecraft/world/level/material/LavaFluid$Source dev$b
	getAmount (Lnet/minecraft/world/level/material/FluidState;)I d
	isSource (Lnet/minecraft/world/level/material/FluidState;)Z c
net/minecraft/world/level/material/Material dew
	AIR a
	AMETHYST T
	BAMBOO C
	BAMBOO_SAPLING B
	BARRIER N
	BUBBLE_COLUMN k
	BUILDABLE_GLASS r
	CACTUS I
	CAKE S
	CLAY s
	CLOTH_DECORATION d
	DECORATION o
	DIRT t
	EGG R
	EXPLOSIVE E
	FIRE n
	GLASS G
	GRASS u
	HEAVY_METAL M
	ICE H
	ICE_SOLID v
	LAVA l
	LEAVES F
	METAL K
	MOSS P
	NETHER_WOOD A
	PISTON O
	PLANT e
	PORTAL c
	POWDER_SNOW U
	REPLACEABLE_FIREPROOF_PLANT h
	REPLACEABLE_PLANT g
	REPLACEABLE_WATER_PLANT i
	SAND w
	SCULK q
	SHULKER_SHELL y
	SNOW L
	SPONGE x
	STONE J
	STRUCTURAL_AIR b
	TOP_SNOW m
	VEGETABLE Q
	WATER j
	WATER_PLANT f
	WEB p
	WOOD z
	WOOL D
	blocksMotion X
	color V
	flammable Y
	liquid Z
	pushReaction W
	replaceable ab
	solid ac
	solidBlocking aa
	blocksMotion ()Z c
	getColor ()Lnet/minecraft/world/level/material/MaterialColor; h
	getPushReaction ()Lnet/minecraft/world/level/material/PushReaction; g
	isFlammable ()Z d
	isLiquid ()Z a
	isReplaceable ()Z e
	isSolid ()Z b
	isSolidBlocking ()Z f
net/minecraft/world/level/material/Material$Builder dew$a
	blocksMotion b
	color g
	flammable c
	liquid d
	pushReaction a
	replaceable e
	solid f
	solidBlocking h
	build ()Lnet/minecraft/world/level/material/Material; h
	destroyOnPush ()Lnet/minecraft/world/level/material/Material$Builder; f
	flammable ()Lnet/minecraft/world/level/material/Material$Builder; d
	liquid ()Lnet/minecraft/world/level/material/Material$Builder; a
	noCollider ()Lnet/minecraft/world/level/material/Material$Builder; c
	nonSolid ()Lnet/minecraft/world/level/material/Material$Builder; b
	notPushable ()Lnet/minecraft/world/level/material/Material$Builder; g
	notSolidBlocking ()Lnet/minecraft/world/level/material/Material$Builder; i
	replaceable ()Lnet/minecraft/world/level/material/Material$Builder; e
net/minecraft/world/level/material/MaterialColor dex
	CLAY k
	COLOR_BLACK E
	COLOR_BLUE A
	COLOR_BROWN B
	COLOR_CYAN y
	COLOR_GRAY w
	COLOR_GREEN C
	COLOR_LIGHT_BLUE s
	COLOR_LIGHT_GRAY x
	COLOR_LIGHT_GREEN u
	COLOR_MAGENTA r
	COLOR_ORANGE q
	COLOR_PINK v
	COLOR_PURPLE z
	COLOR_RED D
	COLOR_YELLOW t
	CRIMSON_HYPHAE ad
	CRIMSON_NYLIUM ab
	CRIMSON_STEM ac
	DEEPSLATE ai
	DIAMOND G
	DIRT l
	EMERALD I
	FIRE f
	GLOW_LICHEN ak
	GOLD F
	GRASS c
	ICE g
	LAPIS H
	MATERIAL_COLORS a
	METAL h
	NETHER K
	NONE b
	PLANT i
	PODZOL J
	QUARTZ p
	RAW_IRON aj
	SAND d
	SNOW j
	STONE m
	TERRACOTTA_BLACK aa
	TERRACOTTA_BLUE W
	TERRACOTTA_BROWN X
	TERRACOTTA_CYAN U
	TERRACOTTA_GRAY S
	TERRACOTTA_GREEN Y
	TERRACOTTA_LIGHT_BLUE O
	TERRACOTTA_LIGHT_GRAY T
	TERRACOTTA_LIGHT_GREEN Q
	TERRACOTTA_MAGENTA N
	TERRACOTTA_ORANGE M
	TERRACOTTA_PINK R
	TERRACOTTA_PURPLE V
	TERRACOTTA_RED Z
	TERRACOTTA_WHITE L
	TERRACOTTA_YELLOW P
	WARPED_HYPHAE ag
	WARPED_NYLIUM ae
	WARPED_STEM af
	WARPED_WART_BLOCK ah
	WATER n
	WOOD o
	WOOL e
	col al
	id am
	calculateRGBColor (I)I a
net/minecraft/world/level/material/PushReaction dey
	$VALUES f
	BLOCK c
	DESTROY b
	IGNORE d
	NORMAL a
	PUSH_ONLY e
	$values ()[Lnet/minecraft/world/level/material/PushReaction; a
net/minecraft/world/level/material/WaterFluid dez
	animateTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Ljava/util/Random;)V a
	beforeDestroyingBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	canBeReplacedWith (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/Direction;)Z a
	canConvertToSource ()Z f
	createLegacyBlock (Lnet/minecraft/world/level/material/FluidState;)Lnet/minecraft/world/level/block/state/BlockState; b
	getBucket ()Lnet/minecraft/world/item/Item; a
	getDripParticle ()Lnet/minecraft/core/particles/ParticleOptions; i
	getDropOff (Lnet/minecraft/world/level/LevelReader;)I c
	getExplosionResistance ()F c
	getFlowing ()Lnet/minecraft/world/level/material/Fluid; d
	getPickupSound ()Ljava/util/Optional; k
	getSlopeFindDistance (Lnet/minecraft/world/level/LevelReader;)I b
	getSource ()Lnet/minecraft/world/level/material/Fluid; e
	getTickDelay (Lnet/minecraft/world/level/LevelReader;)I a
	isSame (Lnet/minecraft/world/level/material/Fluid;)Z a
net/minecraft/world/level/material/WaterFluid$Flowing dez$a
	createFluidStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAmount (Lnet/minecraft/world/level/material/FluidState;)I d
	isSource (Lnet/minecraft/world/level/material/FluidState;)Z c
net/minecraft/world/level/material/WaterFluid$Source dez$b
	getAmount (Lnet/minecraft/world/level/material/FluidState;)I d
	isSource (Lnet/minecraft/world/level/material/FluidState;)Z c
net/minecraft/world/level/newbiome/area/Area dfb
	get (II)I a
net/minecraft/world/level/newbiome/area/AreaFactory dfc
net/minecraft/world/level/newbiome/area/LazyArea dfd
	cache b
	maxCache c
	transformer a
	get (II)I a
	getMaxCache ()I a
net/minecraft/world/level/newbiome/context/BigContext dff
	createResult (Lnet/minecraft/world/level/newbiome/layer/traits/PixelTransformer;)Lnet/minecraft/world/level/newbiome/area/Area; a
	createResult (Lnet/minecraft/world/level/newbiome/layer/traits/PixelTransformer;Lnet/minecraft/world/level/newbiome/area/Area;)Lnet/minecraft/world/level/newbiome/area/Area; a
	createResult (Lnet/minecraft/world/level/newbiome/layer/traits/PixelTransformer;Lnet/minecraft/world/level/newbiome/area/Area;Lnet/minecraft/world/level/newbiome/area/Area;)Lnet/minecraft/world/level/newbiome/area/Area; a
	initRandom (JJ)V a
	random (II)I a
	random (IIII)I a
net/minecraft/world/level/newbiome/context/Context dfg
	getBiomeNoise ()Lnet/minecraft/world/level/levelgen/synth/ImprovedNoise; a
	nextRandom (I)I a
net/minecraft/world/level/newbiome/context/LazyAreaContext dfh
	MAX_CACHE a
	biomeNoise d
	cache b
	maxCache c
	rval f
	seed e
	createResult (Lnet/minecraft/world/level/newbiome/layer/traits/PixelTransformer;)Lnet/minecraft/world/level/newbiome/area/Area; a
	createResult (Lnet/minecraft/world/level/newbiome/layer/traits/PixelTransformer;)Lnet/minecraft/world/level/newbiome/area/LazyArea; b
	createResult (Lnet/minecraft/world/level/newbiome/layer/traits/PixelTransformer;Lnet/minecraft/world/level/newbiome/area/Area;)Lnet/minecraft/world/level/newbiome/area/Area; a
	createResult (Lnet/minecraft/world/level/newbiome/layer/traits/PixelTransformer;Lnet/minecraft/world/level/newbiome/area/Area;Lnet/minecraft/world/level/newbiome/area/Area;)Lnet/minecraft/world/level/newbiome/area/Area; a
	createResult (Lnet/minecraft/world/level/newbiome/layer/traits/PixelTransformer;Lnet/minecraft/world/level/newbiome/area/LazyArea;)Lnet/minecraft/world/level/newbiome/area/LazyArea; a
	createResult (Lnet/minecraft/world/level/newbiome/layer/traits/PixelTransformer;Lnet/minecraft/world/level/newbiome/area/LazyArea;Lnet/minecraft/world/level/newbiome/area/LazyArea;)Lnet/minecraft/world/level/newbiome/area/LazyArea; a
	getBiomeNoise ()Lnet/minecraft/world/level/levelgen/synth/ImprovedNoise; a
	initRandom (JJ)V a
	mixSeed (JJ)J b
	nextRandom (I)I a
net/minecraft/world/level/newbiome/layer/AddDeepOceanLayer dfj
	$VALUES ar
	INSTANCE a
	$values ()[Lnet/minecraft/world/level/newbiome/layer/AddDeepOceanLayer; a
	apply (Lnet/minecraft/world/level/newbiome/context/Context;IIIII)I a
net/minecraft/world/level/newbiome/layer/AddEdgeLayer dfk
net/minecraft/world/level/newbiome/layer/AddEdgeLayer$CoolWarm dfk$a
	$VALUES ar
	INSTANCE a
	$values ()[Lnet/minecraft/world/level/newbiome/layer/AddEdgeLayer$CoolWarm; a
	apply (Lnet/minecraft/world/level/newbiome/context/Context;IIIII)I a
net/minecraft/world/level/newbiome/layer/AddEdgeLayer$HeatIce dfk$b
	$VALUES ar
	INSTANCE a
	$values ()[Lnet/minecraft/world/level/newbiome/layer/AddEdgeLayer$HeatIce; a
	apply (Lnet/minecraft/world/level/newbiome/context/Context;IIIII)I a
net/minecraft/world/level/newbiome/layer/AddEdgeLayer$IntroduceSpecial dfk$c
	$VALUES ar
	INSTANCE a
	$values ()[Lnet/minecraft/world/level/newbiome/layer/AddEdgeLayer$IntroduceSpecial; a
	apply (Lnet/minecraft/world/level/newbiome/context/Context;I)I a
net/minecraft/world/level/newbiome/layer/AddIslandLayer dfl
	$VALUES ar
	INSTANCE a
	$values ()[Lnet/minecraft/world/level/newbiome/layer/AddIslandLayer; a
	apply (Lnet/minecraft/world/level/newbiome/context/Context;IIIII)I a
net/minecraft/world/level/newbiome/layer/AddMushroomIslandLayer dfm
	$VALUES ar
	INSTANCE a
	$values ()[Lnet/minecraft/world/level/newbiome/layer/AddMushroomIslandLayer; a
	apply (Lnet/minecraft/world/level/newbiome/context/Context;IIIII)I a
net/minecraft/world/level/newbiome/layer/AddSnowLayer dfn
	$VALUES ar
	INSTANCE a
	$values ()[Lnet/minecraft/world/level/newbiome/layer/AddSnowLayer; a
	apply (Lnet/minecraft/world/level/newbiome/context/Context;I)I a
net/minecraft/world/level/newbiome/layer/BiomeEdgeLayer dfo
	$VALUES ar
	INSTANCE a
	$values ()[Lnet/minecraft/world/level/newbiome/layer/BiomeEdgeLayer; a
	apply (Lnet/minecraft/world/level/newbiome/context/Context;IIIII)I a
	checkEdge ([II)Z a
	checkEdgeStrict ([IIIIIIII)Z a
net/minecraft/world/level/newbiome/layer/BiomeInitLayer dfp
	COLD_BIOMES at
	ICE_BIOMES au
	LEGACY_WARM_BIOMES a
	MEDIUM_BIOMES as
	WARM_BIOMES ar
	warmBiomes av
	apply (Lnet/minecraft/world/level/newbiome/context/Context;I)I a
net/minecraft/world/level/newbiome/layer/IslandLayer dfq
	$VALUES b
	INSTANCE a
	$values ()[Lnet/minecraft/world/level/newbiome/layer/IslandLayer; a
	applyPixel (Lnet/minecraft/world/level/newbiome/context/Context;II)I a
net/minecraft/world/level/newbiome/layer/Layer dfr
	LOGGER a
	area b
	get (Lnet/minecraft/core/Registry;II)Lnet/minecraft/world/level/biome/Biome; a
net/minecraft/world/level/newbiome/layer/LayerBiomes dfs
	BADLANDS K
	BADLANDS_PLATEAU M
	BAMBOO_JUNGLE ap
	BAMBOO_JUNGLE_HILLS aq
	BEACH p
	BIRCH_FOREST A
	BIRCH_FOREST_HILLS B
	COLD_OCEAN P
	DARK_FOREST C
	DARK_FOREST_HILLS af
	DEEP_COLD_OCEAN S
	DEEP_FROZEN_OCEAN T
	DEEP_LUKEWARM_OCEAN R
	DEEP_OCEAN x
	DEEP_WARM_OCEAN Q
	DESERT d
	DESERT_HILLS q
	DESERT_LAKES V
	ERODED_BADLANDS am
	FLOWER_FOREST X
	FOREST f
	FROZEN_OCEAN j
	FROZEN_RIVER k
	GIANT_SPRUCE_TAIGA ah
	GIANT_SPRUCE_TAIGA_HILLS ai
	GIANT_TREE_TAIGA F
	GIANT_TREE_TAIGA_HILLS G
	GRAVELLY_MOUNTAINS W
	ICE_SPIKES aa
	JUNGLE u
	JUNGLE_EDGE w
	JUNGLE_HILLS v
	LUKEWARM_OCEAN O
	MODIFIED_BADLANDS_PLATEAU ao
	MODIFIED_GRAVELLY_MOUNTAINS aj
	MODIFIED_JUNGLE ab
	MODIFIED_JUNGLE_EDGE ac
	MODIFIED_WOODED_BADLANDS_PLATEAU an
	MOUNTAINS e
	MOUNTAIN_EDGE t
	MUSHROOM_FIELDS n
	MUSHROOM_FIELD_SHORE o
	OCEAN b
	PLAINS c
	RIVER i
	SAVANNA I
	SAVANNA_PLATEAU J
	SHATTERED_SAVANNA ak
	SHATTERED_SAVANNA_PLATEAU al
	SNOWY_BEACH z
	SNOWY_MOUNTAINS m
	SNOWY_TAIGA D
	SNOWY_TAIGA_HILLS E
	SNOWY_TAIGA_MOUNTAINS ag
	SNOWY_TUNDRA l
	STONE_SHORE y
	SUNFLOWER_PLAINS U
	SWAMP h
	SWAMP_HILLS Z
	TAIGA g
	TAIGA_HILLS s
	TAIGA_MOUNTAINS Y
	TALL_BIRCH_FOREST ad
	TALL_BIRCH_HILLS ae
	WARM_OCEAN N
	WOODED_BADLANDS_PLATEAU L
	WOODED_HILLS r
	WOODED_MOUNTAINS H
net/minecraft/world/level/newbiome/layer/Layers dft
	CATEGORIES aw
	COLD_ID as
	ICE_ID at
	MEDIUM_ID ar
	SPECIAL_MASK au
	SPECIAL_SHIFT av
	WARM_ID a
	getDefaultLayer (JZII)Lnet/minecraft/world/level/newbiome/layer/Layer; a
	getDefaultLayer (ZIILjava/util/function/LongFunction;)Lnet/minecraft/world/level/newbiome/area/AreaFactory; a
	isOcean (I)Z a
	isSame (II)Z a
	isShallowOcean (I)Z b
	register (Lit/unimi/dsi/fastutil/ints/Int2IntOpenHashMap;Lnet/minecraft/world/level/newbiome/layer/Layers$Category;I)V a
	zoom (JLnet/minecraft/world/level/newbiome/layer/traits/AreaTransformer1;Lnet/minecraft/world/level/newbiome/area/AreaFactory;ILjava/util/function/LongFunction;)Lnet/minecraft/world/level/newbiome/area/AreaFactory; a
net/minecraft/world/level/newbiome/layer/Layers$Category dft$a
	$VALUES q
	BADLANDS_PLATEAU f
	BEACH j
	DESERT m
	EXTREME_HILLS c
	FOREST k
	ICY i
	JUNGLE d
	MESA e
	MUSHROOM p
	NONE a
	OCEAN l
	PLAINS g
	RIVER n
	SAVANNA h
	SWAMP o
	TAIGA b
	$values ()[Lnet/minecraft/world/level/newbiome/layer/Layers$Category; a
net/minecraft/world/level/newbiome/layer/OceanLayer dfu
	$VALUES b
	INSTANCE a
	$values ()[Lnet/minecraft/world/level/newbiome/layer/OceanLayer; a
	applyPixel (Lnet/minecraft/world/level/newbiome/context/Context;II)I a
net/minecraft/world/level/newbiome/layer/OceanMixerLayer dfv
	$VALUES ar
	INSTANCE a
	$values ()[Lnet/minecraft/world/level/newbiome/layer/OceanMixerLayer; a
	applyPixel (Lnet/minecraft/world/level/newbiome/context/Context;Lnet/minecraft/world/level/newbiome/area/Area;Lnet/minecraft/world/level/newbiome/area/Area;II)I a
net/minecraft/world/level/newbiome/layer/RareBiomeLargeLayer dfw
	$VALUES ar
	INSTANCE a
	$values ()[Lnet/minecraft/world/level/newbiome/layer/RareBiomeLargeLayer; a
	apply (Lnet/minecraft/world/level/newbiome/context/Context;I)I a
net/minecraft/world/level/newbiome/layer/RareBiomeSpotLayer dfx
	$VALUES ar
	INSTANCE a
	$values ()[Lnet/minecraft/world/level/newbiome/layer/RareBiomeSpotLayer; a
	apply (Lnet/minecraft/world/level/newbiome/context/Context;I)I a
net/minecraft/world/level/newbiome/layer/RegionHillsLayer dfy
	$VALUES at
	INSTANCE a
	LOGGER ar
	MUTATIONS as
	$values ()[Lnet/minecraft/world/level/newbiome/layer/RegionHillsLayer; a
	applyPixel (Lnet/minecraft/world/level/newbiome/context/Context;Lnet/minecraft/world/level/newbiome/area/Area;Lnet/minecraft/world/level/newbiome/area/Area;II)I a
net/minecraft/world/level/newbiome/layer/RemoveTooMuchOceanLayer dfz
	$VALUES ar
	INSTANCE a
	$values ()[Lnet/minecraft/world/level/newbiome/layer/RemoveTooMuchOceanLayer; a
	apply (Lnet/minecraft/world/level/newbiome/context/Context;IIIII)I a
net/minecraft/world/level/newbiome/layer/RiverInitLayer dga
	$VALUES ar
	INSTANCE a
	$values ()[Lnet/minecraft/world/level/newbiome/layer/RiverInitLayer; a
	apply (Lnet/minecraft/world/level/newbiome/context/Context;I)I a
net/minecraft/world/level/newbiome/layer/RiverLayer dgb
	$VALUES ar
	INSTANCE a
	$values ()[Lnet/minecraft/world/level/newbiome/layer/RiverLayer; a
	apply (Lnet/minecraft/world/level/newbiome/context/Context;IIIII)I a
	riverFilter (I)I c
net/minecraft/world/level/newbiome/layer/RiverMixerLayer dgc
	$VALUES ar
	INSTANCE a
	$values ()[Lnet/minecraft/world/level/newbiome/layer/RiverMixerLayer; a
	applyPixel (Lnet/minecraft/world/level/newbiome/context/Context;Lnet/minecraft/world/level/newbiome/area/Area;Lnet/minecraft/world/level/newbiome/area/Area;II)I a
net/minecraft/world/level/newbiome/layer/ShoreLayer dgd
	$VALUES at
	INSTANCE a
	JUNGLES as
	SNOWY ar
	$values ()[Lnet/minecraft/world/level/newbiome/layer/ShoreLayer; a
	apply (Lnet/minecraft/world/level/newbiome/context/Context;IIIII)I a
	isJungleCompatible (I)Z c
	isMesa (I)Z d
net/minecraft/world/level/newbiome/layer/SmoothLayer dge
	$VALUES ar
	INSTANCE a
	$values ()[Lnet/minecraft/world/level/newbiome/layer/SmoothLayer; a
	apply (Lnet/minecraft/world/level/newbiome/context/Context;IIIII)I a
net/minecraft/world/level/newbiome/layer/ZoomLayer dgf
	$VALUES au
	FUZZY ar
	NORMAL a
	ZOOM_BITS as
	ZOOM_MASK at
	$values ()[Lnet/minecraft/world/level/newbiome/layer/ZoomLayer; a
	applyPixel (Lnet/minecraft/world/level/newbiome/context/BigContext;Lnet/minecraft/world/level/newbiome/area/Area;II)I a
	getParentX (I)I a
	getParentY (I)I b
	modeOrRandom (Lnet/minecraft/world/level/newbiome/context/BigContext;IIII)I a
net/minecraft/world/level/newbiome/layer/traits/AreaTransformer0 dgh
	applyPixel (Lnet/minecraft/world/level/newbiome/context/Context;II)I a
	run (Lnet/minecraft/world/level/newbiome/context/BigContext;)Lnet/minecraft/world/level/newbiome/area/AreaFactory; a
net/minecraft/world/level/newbiome/layer/traits/AreaTransformer1 dgi
	applyPixel (Lnet/minecraft/world/level/newbiome/context/BigContext;Lnet/minecraft/world/level/newbiome/area/Area;II)I a
	run (Lnet/minecraft/world/level/newbiome/context/BigContext;Lnet/minecraft/world/level/newbiome/area/AreaFactory;)Lnet/minecraft/world/level/newbiome/area/AreaFactory; a
net/minecraft/world/level/newbiome/layer/traits/AreaTransformer2 dgj
	applyPixel (Lnet/minecraft/world/level/newbiome/context/Context;Lnet/minecraft/world/level/newbiome/area/Area;Lnet/minecraft/world/level/newbiome/area/Area;II)I a
	run (Lnet/minecraft/world/level/newbiome/context/BigContext;Lnet/minecraft/world/level/newbiome/area/AreaFactory;Lnet/minecraft/world/level/newbiome/area/AreaFactory;)Lnet/minecraft/world/level/newbiome/area/AreaFactory; a
net/minecraft/world/level/newbiome/layer/traits/BishopTransformer dgk
	apply (Lnet/minecraft/world/level/newbiome/context/Context;IIIII)I a
	applyPixel (Lnet/minecraft/world/level/newbiome/context/BigContext;Lnet/minecraft/world/level/newbiome/area/Area;II)I a
net/minecraft/world/level/newbiome/layer/traits/C0Transformer dgl
	apply (Lnet/minecraft/world/level/newbiome/context/Context;I)I a
	applyPixel (Lnet/minecraft/world/level/newbiome/context/BigContext;Lnet/minecraft/world/level/newbiome/area/Area;II)I a
net/minecraft/world/level/newbiome/layer/traits/C1Transformer dgm
	apply (Lnet/minecraft/world/level/newbiome/context/Context;I)I a
	applyPixel (Lnet/minecraft/world/level/newbiome/context/BigContext;Lnet/minecraft/world/level/newbiome/area/Area;II)I a
net/minecraft/world/level/newbiome/layer/traits/CastleTransformer dgn
	apply (Lnet/minecraft/world/level/newbiome/context/Context;IIIII)I a
	applyPixel (Lnet/minecraft/world/level/newbiome/context/BigContext;Lnet/minecraft/world/level/newbiome/area/Area;II)I a
net/minecraft/world/level/newbiome/layer/traits/DimensionOffset0Transformer dgo
	getParentX (I)I a
	getParentY (I)I b
net/minecraft/world/level/newbiome/layer/traits/DimensionOffset1Transformer dgp
	getParentX (I)I a
	getParentY (I)I b
net/minecraft/world/level/newbiome/layer/traits/DimensionTransformer dgq
	getParentX (I)I a
	getParentY (I)I b
net/minecraft/world/level/newbiome/layer/traits/PixelTransformer dgr
net/minecraft/world/level/pathfinder/AmphibiousNodeEvaluator dgu
	oldWalkableCost m
	oldWaterBorderCost n
	prefersShallowSwimming l
	done ()V a
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;III)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getFloorLevel (Lnet/minecraft/core/BlockPos;)D a
	getGoal (DDD)Lnet/minecraft/world/level/pathfinder/Target; a
	getNeighbors ([Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)I a
	getStart ()Lnet/minecraft/world/level/pathfinder/Node; b
	isAmphibious ()Z c
	prepare (Lnet/minecraft/world/level/PathNavigationRegion;Lnet/minecraft/world/entity/Mob;)V a
net/minecraft/world/level/pathfinder/BinaryHeap dgv
	heap a
	size b
	changeCost (Lnet/minecraft/world/level/pathfinder/Node;F)V a
	clear ()V a
	downHeap (I)V b
	getHeap ()[Lnet/minecraft/world/level/pathfinder/Node; f
	insert (Lnet/minecraft/world/level/pathfinder/Node;)Lnet/minecraft/world/level/pathfinder/Node; a
	isEmpty ()Z e
	peek ()Lnet/minecraft/world/level/pathfinder/Node; b
	pop ()Lnet/minecraft/world/level/pathfinder/Node; c
	remove (Lnet/minecraft/world/level/pathfinder/Node;)V b
	size ()I d
	upHeap (I)V a
net/minecraft/world/level/pathfinder/BlockPathTypes dgw
	$VALUES A
	BLOCKED a
	BREACH v
	COCOA y
	DAMAGE_CACTUS p
	DAMAGE_FIRE n
	DAMAGE_OTHER r
	DANGER_CACTUS o
	DANGER_FIRE m
	DANGER_OTHER q
	DOOR_IRON_CLOSED u
	DOOR_OPEN s
	DOOR_WOOD_CLOSED t
	FENCE g
	LAVA h
	LEAVES w
	OPEN b
	POWDER_SNOW f
	RAIL k
	STICKY_HONEY x
	TRAPDOOR e
	UNPASSABLE_RAIL l
	WALKABLE c
	WALKABLE_DOOR d
	WATER i
	WATER_BORDER j
	malus z
	$values ()[Lnet/minecraft/world/level/pathfinder/BlockPathTypes; b
	getMalus ()F a
net/minecraft/world/level/pathfinder/FlyNodeEvaluator dgx
	pathTypeByPosCache l
	done ()V a
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;III)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;IIILnet/minecraft/world/entity/Mob;IIIZZ)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getCachedBlockPathType (III)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; b
	getGoal (DDD)Lnet/minecraft/world/level/pathfinder/Target; a
	getNeighbors ([Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)I a
	getNode (III)Lnet/minecraft/world/level/pathfinder/Node; a
	getStart ()Lnet/minecraft/world/level/pathfinder/Node; b
	hasMalus (Lnet/minecraft/world/level/pathfinder/Node;)Z a
	isOpen (Lnet/minecraft/world/level/pathfinder/Node;)Z b
	prepare (Lnet/minecraft/world/level/PathNavigationRegion;Lnet/minecraft/world/entity/Mob;)V a
net/minecraft/world/level/pathfinder/Node dgy
	cameFrom h
	closed i
	costMalus k
	f g
	g e
	h f
	hash m
	heapIdx d
	type l
	walkedDistance j
	x a
	y b
	z c
	asBlockPos ()Lnet/minecraft/core/BlockPos; a
	asVec3 ()Lnet/minecraft/world/phys/Vec3; b
	cloneAndMove (III)Lnet/minecraft/world/level/pathfinder/Node; a
	createFromStream (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/level/pathfinder/Node; b
	createHash (III)I b
	distanceManhattan (Lnet/minecraft/core/BlockPos;)F c
	distanceManhattan (Lnet/minecraft/world/level/pathfinder/Node;)F c
	distanceTo (Lnet/minecraft/core/BlockPos;)F a
	distanceTo (Lnet/minecraft/world/level/pathfinder/Node;)F a
	distanceToSqr (Lnet/minecraft/core/BlockPos;)F b
	distanceToSqr (Lnet/minecraft/world/level/pathfinder/Node;)F b
	inOpenSet ()Z c
	writeToStream (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/world/level/pathfinder/NodeEvaluator dgz
	canFloat i
	canOpenDoors h
	canPassDoors g
	entityDepth f
	entityHeight e
	entityWidth d
	level a
	mob b
	nodes c
	canFloat ()Z f
	canOpenDoors ()Z e
	canPassDoors ()Z d
	done ()V a
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;III)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;IIILnet/minecraft/world/entity/Mob;IIIZZ)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getGoal (DDD)Lnet/minecraft/world/level/pathfinder/Target; a
	getNeighbors ([Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)I a
	getNode (III)Lnet/minecraft/world/level/pathfinder/Node; a
	getNode (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/pathfinder/Node; b
	getStart ()Lnet/minecraft/world/level/pathfinder/Node; b
	prepare (Lnet/minecraft/world/level/PathNavigationRegion;Lnet/minecraft/world/entity/Mob;)V a
	setCanFloat (Z)V c
	setCanOpenDoors (Z)V b
	setCanPassDoors (Z)V a
net/minecraft/world/level/pathfinder/Path dha
	closedSet c
	distToTarget g
	nextNodeIndex e
	nodes a
	openSet b
	reached h
	target f
	targetNodes d
	advance ()V a
	canReach ()Z j
	createFromStream (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/level/pathfinder/Path; b
	getClosedSet ()[Lnet/minecraft/world/level/pathfinder/Node; l
	getDistToTarget ()F n
	getEndNode ()Lnet/minecraft/world/level/pathfinder/Node; d
	getEntityPosAtNode (Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/world/phys/Vec3; a
	getNextEntityPos (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/phys/Vec3; a
	getNextNode ()Lnet/minecraft/world/level/pathfinder/Node; h
	getNextNodeIndex ()I f
	getNextNodePos ()Lnet/minecraft/core/BlockPos; g
	getNode (I)Lnet/minecraft/world/level/pathfinder/Node; a
	getNodeCount ()I e
	getNodePos (I)Lnet/minecraft/core/BlockPos; d
	getOpenSet ()[Lnet/minecraft/world/level/pathfinder/Node; k
	getPreviousNode ()Lnet/minecraft/world/level/pathfinder/Node; i
	getTarget ()Lnet/minecraft/core/BlockPos; m
	isDone ()Z c
	notStarted ()Z b
	replaceNode (ILnet/minecraft/world/level/pathfinder/Node;)V a
	sameAs (Lnet/minecraft/world/level/pathfinder/Path;)Z a
	setDebug ([Lnet/minecraft/world/level/pathfinder/Node;[Lnet/minecraft/world/level/pathfinder/Node;Ljava/util/Set;)V a
	setNextNodeIndex (I)V c
	truncateNodes (I)V b
	writeToStream (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/world/level/pathfinder/PathComputationType dhb
	$VALUES d
	AIR c
	LAND a
	WATER b
	$values ()[Lnet/minecraft/world/level/pathfinder/PathComputationType; a
net/minecraft/world/level/pathfinder/PathFinder dhc
	DEBUG e
	FUDGING a
	maxVisitedNodes c
	neighbors b
	nodeEvaluator d
	openSet f
	findPath (Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/world/level/pathfinder/Node;Ljava/util/Map;FIF)Lnet/minecraft/world/level/pathfinder/Path; a
	findPath (Lnet/minecraft/world/level/PathNavigationRegion;Lnet/minecraft/world/entity/Mob;Ljava/util/Set;FIF)Lnet/minecraft/world/level/pathfinder/Path; a
	getBestH (Lnet/minecraft/world/level/pathfinder/Node;Ljava/util/Set;)F a
	reconstructPath (Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/core/BlockPos;Z)Lnet/minecraft/world/level/pathfinder/Path; a
net/minecraft/world/level/pathfinder/SwimNodeEvaluator dhd
	allowBreaching j
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;III)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;IIILnet/minecraft/world/entity/Mob;IIIZZ)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getGoal (DDD)Lnet/minecraft/world/level/pathfinder/Target; a
	getNeighbors ([Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)I a
	getNode (III)Lnet/minecraft/world/level/pathfinder/Node; a
	getStart ()Lnet/minecraft/world/level/pathfinder/Node; b
	getWaterNode (III)Lnet/minecraft/world/level/pathfinder/Node; b
	isFree (III)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; c
net/minecraft/world/level/pathfinder/Target dhe
	bestHeuristic m
	bestNode n
	reached o
	createFromStream (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/level/pathfinder/Target; c
	getBestNode ()Lnet/minecraft/world/level/pathfinder/Node; d
	isReached ()Z f
	setReached ()V e
	updateBest (FLnet/minecraft/world/level/pathfinder/Node;)V a
net/minecraft/world/level/pathfinder/WalkNodeEvaluator dhf
	SPACE_BETWEEN_WALL_POSTS j
	collisionCache m
	oldWaterCost k
	pathTypesByPosCache l
	canReachWithoutCollision (Lnet/minecraft/world/level/pathfinder/Node;)Z a
	checkNeighbourBlocks (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	done ()V a
	evaluateBlockPathType (Lnet/minecraft/world/level/BlockGetter;ZZLnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	findAcceptedNode (IIIIDLnet/minecraft/core/Direction;Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)Lnet/minecraft/world/level/pathfinder/Node; a
	getBlockPathType (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;III)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;IIILnet/minecraft/world/entity/Mob;IIIZZ)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getBlockPathTypeRaw (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; b
	getBlockPathTypeStatic (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos$MutableBlockPos;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getBlockPathTypes (Lnet/minecraft/world/level/BlockGetter;IIIIIIZZLjava/util/EnumSet;Lnet/minecraft/world/level/pathfinder/BlockPathTypes;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getCachedBlockType (Lnet/minecraft/world/entity/Mob;III)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getFloorLevel (Lnet/minecraft/core/BlockPos;)D a
	getFloorLevel (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)D a
	getGoal (DDD)Lnet/minecraft/world/level/pathfinder/Target; a
	getNeighbors ([Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)I a
	getStart ()Lnet/minecraft/world/level/pathfinder/Node; b
	hasCollisions (Lnet/minecraft/world/phys/AABB;)Z a
	hasPositiveMalus (Lnet/minecraft/core/BlockPos;)Z c
	isAmphibious ()Z c
	isBurningBlock (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isDiagonalValid (Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)Z a
	isNeighborValid (Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)Z a
	prepare (Lnet/minecraft/world/level/PathNavigationRegion;Lnet/minecraft/world/entity/Mob;)V a
net/minecraft/world/level/portal/PortalForcer dhh
	CREATE_RADIUS c
	FRAME_BOX f
	FRAME_BOX_END l
	FRAME_BOX_START k
	FRAME_HEIGHT d
	FRAME_HEIGHT_END h
	FRAME_HEIGHT_START g
	FRAME_WIDTH e
	FRAME_WIDTH_END j
	FRAME_WIDTH_START i
	NOTHING_FOUND m
	SEARCH_RADIUS b
	TICKET_RADIUS a
	level n
	canHostFrame (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/core/Direction;I)Z a
	createPortal (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction$Axis;)Ljava/util/Optional; a
	findPortalAround (Lnet/minecraft/core/BlockPos;Z)Ljava/util/Optional; a
net/minecraft/world/level/portal/PortalInfo dhi
	pos a
	speed b
	xRot d
	yRot c
net/minecraft/world/level/portal/PortalShape dhj
	FRAME e
	MAX_HEIGHT b
	MAX_WIDTH a
	MIN_HEIGHT d
	MIN_WIDTH c
	axis g
	bottomLeft j
	height k
	level f
	numPortalBlocks i
	rightDir h
	width l
	calculateBottomLeft (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	calculateHeight ()I e
	calculateWidth ()I d
	createPortalBlocks ()V b
	createPortalInfo (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/BlockUtil$FoundRectangle;Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/entity/EntityDimensions;Lnet/minecraft/world/phys/Vec3;FF)Lnet/minecraft/world/level/portal/PortalInfo; a
	findEmptyPortalShape (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction$Axis;)Ljava/util/Optional; a
	findPortalShape (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;Lnet/minecraft/core/Direction$Axis;)Ljava/util/Optional; a
	getDistanceUntilEdgeAboveFrame (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getDistanceUntilTop (Lnet/minecraft/core/BlockPos$MutableBlockPos;)I a
	getRelativePosition (Lnet/minecraft/BlockUtil$FoundRectangle;Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/entity/EntityDimensions;)Lnet/minecraft/world/phys/Vec3; a
	hasTopFrame (Lnet/minecraft/core/BlockPos$MutableBlockPos;I)Z a
	isComplete ()Z c
	isEmpty (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValid ()Z a
net/minecraft/world/level/redstone/Redstone dhl
	SIGNAL_MAX b
	SIGNAL_MIN a
	SIGNAL_NONE c
net/minecraft/world/level/saveddata/SavedData dhn
	LOGGER a
	dirty b
	isDirty ()Z c
	save (Ljava/io/File;)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	setDirty ()V b
	setDirty (Z)V a
net/minecraft/world/level/saveddata/maps/MapBanner dho
	color b
	name c
	pos a
	fromWorld (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/saveddata/maps/MapBanner; a
	getColor ()Lnet/minecraft/world/item/DyeColor; b
	getDecoration ()Lnet/minecraft/world/level/saveddata/maps/MapDecoration$Type; c
	getId ()Ljava/lang/String; f
	getName ()Lnet/minecraft/network/chat/Component; d
	getPos ()Lnet/minecraft/core/BlockPos; a
	load (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/saveddata/maps/MapBanner; a
	save ()Lnet/minecraft/nbt/CompoundTag; e
net/minecraft/world/level/saveddata/maps/MapDecoration dhp
	name e
	rot d
	type a
	x b
	y c
	getImage ()B a
	getName ()Lnet/minecraft/network/chat/Component; g
	getRot ()B e
	getType ()Lnet/minecraft/world/level/saveddata/maps/MapDecoration$Type; b
	getX ()B c
	getY ()B d
	renderOnFrame ()Z f
net/minecraft/world/level/saveddata/maps/MapDecoration$Type dhp$a
	$VALUES F
	BANNER_BLACK z
	BANNER_BLUE v
	BANNER_BROWN w
	BANNER_CYAN t
	BANNER_GRAY r
	BANNER_GREEN x
	BANNER_LIGHT_BLUE n
	BANNER_LIGHT_GRAY s
	BANNER_LIME p
	BANNER_MAGENTA m
	BANNER_ORANGE l
	BANNER_PINK q
	BANNER_PURPLE u
	BANNER_RED y
	BANNER_WHITE k
	BANNER_YELLOW o
	BLUE_MARKER d
	FRAME b
	MANSION i
	MONUMENT j
	PLAYER a
	PLAYER_OFF_LIMITS h
	PLAYER_OFF_MAP g
	RED_MARKER c
	RED_X A
	TARGET_POINT f
	TARGET_X e
	icon B
	mapColor D
	renderedOnFrame C
	trackCount E
	$values ()[Lnet/minecraft/world/level/saveddata/maps/MapDecoration$Type; f
	byIcon (B)Lnet/minecraft/world/level/saveddata/maps/MapDecoration$Type; a
	getIcon ()B a
	getMapColor ()I d
	hasMapColor ()Z c
	isRenderedOnFrame ()Z b
	shouldTrackCount ()Z e
net/minecraft/world/level/saveddata/maps/MapFrame dhq
	entityId c
	pos a
	rotation b
	frameId (Lnet/minecraft/core/BlockPos;)Ljava/lang/String; a
	getEntityId ()I d
	getId ()Ljava/lang/String; e
	getPos ()Lnet/minecraft/core/BlockPos; b
	getRotation ()I c
	load (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/saveddata/maps/MapFrame; a
	save ()Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/world/level/saveddata/maps/MapIndex dhr
	FILE_NAME a
	usedAuxIds b
	getFreeAuxValueForMap ()I a
	load (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/saveddata/maps/MapIndex; b
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/world/level/saveddata/maps/MapItemSavedData dhs
	HALF_MAP_SIZE k
	LOGGER i
	MAP_SIZE j
	MAX_SCALE a
	TRACKED_DECORATION_LIMIT b
	bannerMarkers p
	carriedBy n
	carriedByPlayers o
	colors g
	decorations q
	dimension e
	frameMarkers r
	locked h
	scale f
	trackedDecorationCount s
	trackingPosition l
	unlimitedTracking m
	x c
	z d
	addClientSideDecorations (Ljava/util/List;)V a
	addDecoration (Lnet/minecraft/world/level/saveddata/maps/MapDecoration$Type;Lnet/minecraft/world/level/LevelAccessor;Ljava/lang/String;DDDLnet/minecraft/network/chat/Component;)V a
	addTargetDecoration (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPos;Ljava/lang/String;Lnet/minecraft/world/level/saveddata/maps/MapDecoration$Type;)V a
	checkBanners (Lnet/minecraft/world/level/BlockGetter;II)V a
	createForClient (BZLnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; a
	createFresh (DDBZZLnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; a
	getBanners ()Ljava/util/Collection; d
	getDecorations ()Ljava/lang/Iterable; f
	getHoldingPlayer (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData$HoldingPlayer; a
	getUpdatePacket (ILnet/minecraft/world/entity/player/Player;)Lnet/minecraft/network/protocol/Packet; a
	isExplorationMap ()Z e
	isTrackedCountOverLimit (I)Z b
	load (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; b
	locked ()Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; a
	removeDecoration (Ljava/lang/String;)V a
	removedFromFrame (Lnet/minecraft/core/BlockPos;I)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	scaled (I)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; a
	setColor (IIB)V b
	setColorsDirty (II)V a
	setDecorationsDirty ()V g
	tickCarriedBy (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
	toggleBanner (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
	updateColor (IIB)Z a
net/minecraft/world/level/saveddata/maps/MapItemSavedData$HoldingPlayer dhs$a
	dirtyData d
	dirtyDecorations i
	maxDirtyX g
	maxDirtyY h
	minDirtyX e
	minDirtyY f
	player a
	step b
	tick j
	createPatch ()Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData$MapPatch; a
	markColorsDirty (II)V a
	markDecorationsDirty ()V b
	nextUpdatePacket (I)Lnet/minecraft/network/protocol/Packet; a
net/minecraft/world/level/saveddata/maps/MapItemSavedData$MapPatch dhs$b
	height d
	mapColors e
	startX a
	startY b
	width c
	applyToMap (Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)V a
net/minecraft/world/level/storage/CommandStorage dhv
	ID_PREFIX a
	namespaces b
	storage c
	createId (Ljava/lang/String;)Ljava/lang/String; b
	get (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/nbt/CompoundTag; a
	keys ()Ljava/util/stream/Stream; a
	newStorage (Ljava/lang/String;)Lnet/minecraft/world/level/storage/CommandStorage$Container; a
	set (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/world/level/storage/CommandStorage$Container dhv$a
	TAG_CONTENTS a
	storage b
	get (Ljava/lang/String;)Lnet/minecraft/nbt/CompoundTag; a
	getKeys (Ljava/lang/String;)Ljava/util/stream/Stream; b
	load (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/storage/CommandStorage$Container; b
	put (Ljava/lang/String;Lnet/minecraft/nbt/CompoundTag;)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/world/level/storage/DerivedLevelData dhw
	worldData a
	wrapped b
	fillCrashReportCategory (Lnet/minecraft/CrashReportCategory;Lnet/minecraft/world/level/LevelHeightAccessor;)V a
	getAllowCommands ()Z o
	getClearWeatherTime ()I h
	getDayTime ()J f
	getDifficulty ()Lnet/minecraft/world/Difficulty; s
	getGameRules ()Lnet/minecraft/world/level/GameRules; q
	getGameTime ()J e
	getGameType ()Lnet/minecraft/world/level/GameType; m
	getLevelName ()Ljava/lang/String; g
	getRainTime ()I l
	getScheduledEvents ()Lnet/minecraft/world/level/timers/TimerQueue; u
	getSpawnAngle ()F d
	getThunderTime ()I j
	getWanderingTraderId ()Ljava/util/UUID; x
	getWanderingTraderSpawnChance ()I w
	getWanderingTraderSpawnDelay ()I v
	getWorldBorder ()Lnet/minecraft/world/level/border/WorldBorder$Settings; r
	getXSpawn ()I a
	getYSpawn ()I b
	getZSpawn ()I c
	isDifficultyLocked ()Z t
	isHardcore ()Z n
	isInitialized ()Z p
	isRaining ()Z k
	isThundering ()Z i
	setClearWeatherTime (I)V a
	setDayTime (J)V b
	setGameTime (J)V a
	setGameType (Lnet/minecraft/world/level/GameType;)V a
	setInitialized (Z)V c
	setRainTime (I)V f
	setRaining (Z)V b
	setSpawn (Lnet/minecraft/core/BlockPos;F)V a
	setSpawnAngle (F)V a
	setThunderTime (I)V e
	setThundering (Z)V a
	setWanderingTraderId (Ljava/util/UUID;)V a
	setWanderingTraderSpawnChance (I)V h
	setWanderingTraderSpawnDelay (I)V g
	setWorldBorder (Lnet/minecraft/world/level/border/WorldBorder$Settings;)V a
	setXSpawn (I)V b
	setYSpawn (I)V c
	setZSpawn (I)V d
net/minecraft/world/level/storage/DimensionDataStorage dhx
	LOGGER a
	cache b
	dataFolder d
	fixerUpper c
	computeIfAbsent (Ljava/util/function/Function;Ljava/util/function/Supplier;Ljava/lang/String;)Lnet/minecraft/world/level/saveddata/SavedData; a
	get (Ljava/util/function/Function;Ljava/lang/String;)Lnet/minecraft/world/level/saveddata/SavedData; a
	getDataFile (Ljava/lang/String;)Ljava/io/File; a
	isGzip (Ljava/io/PushbackInputStream;)Z a
	readSavedData (Ljava/util/function/Function;Ljava/lang/String;)Lnet/minecraft/world/level/saveddata/SavedData; b
	readTagFromDisk (Ljava/lang/String;I)Lnet/minecraft/nbt/CompoundTag; a
	save ()V a
	set (Ljava/lang/String;Lnet/minecraft/world/level/saveddata/SavedData;)V a
net/minecraft/world/level/storage/LevelData dhy
	fillCrashReportCategory (Lnet/minecraft/CrashReportCategory;Lnet/minecraft/world/level/LevelHeightAccessor;)V a
	getDayTime ()J f
	getDifficulty ()Lnet/minecraft/world/Difficulty; s
	getGameRules ()Lnet/minecraft/world/level/GameRules; q
	getGameTime ()J e
	getSpawnAngle ()F d
	getXSpawn ()I a
	getYSpawn ()I b
	getZSpawn ()I c
	isDifficultyLocked ()Z t
	isHardcore ()Z n
	isRaining ()Z k
	isThundering ()Z i
	setRaining (Z)V b
net/minecraft/world/level/storage/LevelResource dhz
	DATAPACK_DIR g
	GENERATED_DIR f
	LEVEL_DATA_FILE e
	MAP_RESOURCE_FILE h
	PLAYER_ADVANCEMENTS_DIR a
	PLAYER_DATA_DIR c
	PLAYER_OLD_DATA_DIR d
	PLAYER_STATS_DIR b
	ROOT i
	id j
	getId ()Ljava/lang/String; a
net/minecraft/world/level/storage/LevelStorageException dia
net/minecraft/world/level/storage/LevelStorageSource dib
	FORMATTER b
	ICON_FILENAME c
	LOGGER a
	OLD_SETTINGS_KEYS d
	backupDir f
	baseDir e
	fixerUpper g
	createAccess (Ljava/lang/String;)Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess; c
	createDefault (Ljava/nio/file/Path;)Lnet/minecraft/world/level/storage/LevelStorageSource; a
	getBackupPath ()Ljava/nio/file/Path; d
	getBaseDir ()Ljava/nio/file/Path; c
	getDataPacks (Ljava/io/File;Lcom/mojang/datafixers/DataFixer;)Lnet/minecraft/world/level/DataPackConfig; a
	getLevelData (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/world/level/DataPackConfig;)Ljava/util/function/BiFunction; a
	getLevelList ()Ljava/util/List; b
	getName ()Ljava/lang/String; a
	getStorageVersion ()I e
	isNewLevelIdAcceptable (Ljava/lang/String;)Z a
	levelExists (Ljava/lang/String;)Z b
	levelSummaryReader (Ljava/io/File;Z)Ljava/util/function/BiFunction; a
	readDataPackConfig (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/level/DataPackConfig; a
	readLevelData (Ljava/io/File;Ljava/util/function/BiFunction;)Ljava/lang/Object; a
	readWorldGenSettings (Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/DataFixer;I)Lcom/mojang/datafixers/util/Pair; a
net/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess dib$a
	levelId d
	levelPath c
	lock b
	resources e
	checkLock ()V i
	convertLevel (Lnet/minecraft/util/ProgressListener;)Z a
	createPlayerStorage ()Lnet/minecraft/world/level/storage/PlayerDataStorage; b
	deleteLevel ()V g
	getDataPacks ()Lnet/minecraft/world/level/DataPackConfig; e
	getDataTag (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/world/level/DataPackConfig;)Lnet/minecraft/world/level/storage/WorldData; a
	getDimensionPath (Lnet/minecraft/resources/ResourceKey;)Ljava/io/File; a
	getIconFile ()Ljava/io/File; f
	getLevelId ()Ljava/lang/String; a
	getLevelPath (Lnet/minecraft/world/level/storage/LevelResource;)Ljava/nio/file/Path; a
	getSummary ()Lnet/minecraft/world/level/storage/LevelSummary; d
	makeWorldBackup ()J h
	renameLevel (Ljava/lang/String;)V a
	requiresConversion ()Z c
	saveDataTag (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/storage/WorldData;)V a
	saveDataTag (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/storage/WorldData;Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/world/level/storage/LevelSummary dic
	icon f
	info g
	levelId c
	levelVersion b
	locked e
	requiresConversion d
	settings a
	askToOpenWorld ()Z m
	backupStatus ()Lnet/minecraft/world/level/storage/LevelSummary$BackupStatus; n
	compareTo (Lnet/minecraft/world/level/storage/LevelSummary;)I a
	createInfo ()Lnet/minecraft/network/chat/Component; s
	getGameMode ()Lnet/minecraft/world/level/GameType; g
	getIcon ()Ljava/io/File; c
	getInfo ()Lnet/minecraft/network/chat/Component; r
	getLastPlayed ()J e
	getLevelId ()Ljava/lang/String; a
	getLevelName ()Ljava/lang/String; b
	getSettings ()Lnet/minecraft/world/level/LevelSettings; f
	getWorldVersionName ()Lnet/minecraft/network/chat/MutableComponent; j
	hasCheats ()Z i
	isDisabled ()Z q
	isHardcore ()Z h
	isIncompatibleWorldHeight ()Z p
	isLocked ()Z o
	isRequiresConversion ()Z d
	levelVersion ()Lnet/minecraft/world/level/storage/LevelVersion; k
	markVersionInList ()Z l
net/minecraft/world/level/storage/LevelSummary$BackupStatus dic$a
	$VALUES g
	DOWNGRADE b
	NONE a
	UPGRADE_TO_SNAPSHOT c
	severe e
	shouldBackup d
	translationKey f
	$values ()[Lnet/minecraft/world/level/storage/LevelSummary$BackupStatus; d
	getTranslationKey ()Ljava/lang/String; c
	isSevere ()Z b
	shouldBackup ()Z a
net/minecraft/world/level/storage/LevelVersion did
	lastPlayed b
	levelDataVersion a
	minecraftVersion d
	minecraftVersionName c
	snapshot e
	lastPlayed ()J b
	levelDataVersion ()I a
	minecraftVersion ()I d
	minecraftVersionName ()Ljava/lang/String; c
	parse (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/level/storage/LevelVersion; a
	snapshot ()Z e
net/minecraft/world/level/storage/McRegionUpgrader die
	LOGGER a
	MCREGION_EXTENSION b
	addRegionFiles (Ljava/io/File;Ljava/util/Collection;)V a
	convertLevel (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;Lnet/minecraft/util/ProgressListener;)Z a
	convertRegion (Lnet/minecraft/core/RegistryAccess$RegistryHolder;Ljava/io/File;Ljava/io/File;Lnet/minecraft/world/level/biome/BiomeSource;IILnet/minecraft/util/ProgressListener;)V a
	convertRegions (Lnet/minecraft/core/RegistryAccess$RegistryHolder;Ljava/io/File;Ljava/lang/Iterable;Lnet/minecraft/world/level/biome/BiomeSource;IILnet/minecraft/util/ProgressListener;)V a
	makeMcrLevelDatBackup (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;)V a
net/minecraft/world/level/storage/PlayerDataStorage dif
	LOGGER b
	fixerUpper a
	playerDir c
	getSeenPlayers ()[Ljava/lang/String; a
	load (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/nbt/CompoundTag; b
	save (Lnet/minecraft/world/entity/player/Player;)V a
net/minecraft/world/level/storage/PrimaryLevelData dig
	LOGGER d
	WORLD_GEN_SETTINGS a
	clearWeatherTime s
	customBossEvents B
	dayTime m
	difficultyLocked y
	endDragonFightData A
	fixerUpper n
	gameTime l
	initialized x
	knownServerBrands F
	loadedPlayerTag q
	playerDataVersion o
	rainTime u
	raining t
	scheduledEvents H
	settings e
	spawnAngle k
	thunderTime w
	thundering v
	upgradedPlayerTag p
	version r
	wanderingTraderId E
	wanderingTraderSpawnChance D
	wanderingTraderSpawnDelay C
	wasModded G
	worldBorder z
	worldGenSettings f
	worldGenSettingsLifecycle g
	xSpawn h
	ySpawn i
	zSpawn j
	createTag (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	endDragonFightData ()Lnet/minecraft/nbt/CompoundTag; C
	fillCrashReportCategory (Lnet/minecraft/CrashReportCategory;Lnet/minecraft/world/level/LevelHeightAccessor;)V a
	getAllowCommands ()Z o
	getClearWeatherTime ()I h
	getCustomBossEvents ()Lnet/minecraft/nbt/CompoundTag; E
	getDataPackConfig ()Lnet/minecraft/world/level/DataPackConfig; D
	getDayTime ()J f
	getDifficulty ()Lnet/minecraft/world/Difficulty; s
	getGameRules ()Lnet/minecraft/world/level/GameRules; q
	getGameTime ()J e
	getGameType ()Lnet/minecraft/world/level/GameType; m
	getKnownServerBrands ()Ljava/util/Set; G
	getLevelName ()Ljava/lang/String; g
	getLevelSettings ()Lnet/minecraft/world/level/LevelSettings; I
	getLoadedPlayerTag ()Lnet/minecraft/nbt/CompoundTag; y
	getRainTime ()I l
	getScheduledEvents ()Lnet/minecraft/world/level/timers/TimerQueue; u
	getSpawnAngle ()F d
	getThunderTime ()I j
	getVersion ()I z
	getWanderingTraderId ()Ljava/util/UUID; x
	getWanderingTraderSpawnChance ()I w
	getWanderingTraderSpawnDelay ()I v
	getWorldBorder ()Lnet/minecraft/world/level/border/WorldBorder$Settings; r
	getXSpawn ()I a
	getYSpawn ()I b
	getZSpawn ()I c
	isDifficultyLocked ()Z t
	isHardcore ()Z n
	isInitialized ()Z p
	isRaining ()Z k
	isThundering ()Z i
	overworldData ()Lnet/minecraft/world/level/storage/ServerLevelData; H
	parse (Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/DataFixer;ILnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/LevelSettings;Lnet/minecraft/world/level/storage/LevelVersion;Lnet/minecraft/world/level/levelgen/WorldGenSettings;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/world/level/storage/PrimaryLevelData; a
	setClearWeatherTime (I)V a
	setCustomBossEvents (Lnet/minecraft/nbt/CompoundTag;)V b
	setDataPackConfig (Lnet/minecraft/world/level/DataPackConfig;)V a
	setDayTime (J)V b
	setDifficulty (Lnet/minecraft/world/Difficulty;)V a
	setDifficultyLocked (Z)V d
	setEndDragonFightData (Lnet/minecraft/nbt/CompoundTag;)V a
	setGameTime (J)V a
	setGameType (Lnet/minecraft/world/level/GameType;)V a
	setInitialized (Z)V c
	setModdedInfo (Ljava/lang/String;Z)V a
	setRainTime (I)V f
	setRaining (Z)V b
	setSpawn (Lnet/minecraft/core/BlockPos;F)V a
	setSpawnAngle (F)V a
	setTagData (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/nbt/CompoundTag;)V a
	setThunderTime (I)V e
	setThundering (Z)V a
	setWanderingTraderId (Ljava/util/UUID;)V a
	setWanderingTraderSpawnChance (I)V h
	setWanderingTraderSpawnDelay (I)V g
	setWorldBorder (Lnet/minecraft/world/level/border/WorldBorder$Settings;)V a
	setXSpawn (I)V b
	setYSpawn (I)V c
	setZSpawn (I)V d
	updatePlayerTag ()V J
	wasModded ()Z F
	worldGenSettings ()Lnet/minecraft/world/level/levelgen/WorldGenSettings; A
	worldGenSettingsLifecycle ()Lcom/mojang/serialization/Lifecycle; B
net/minecraft/world/level/storage/ServerLevelData dih
	fillCrashReportCategory (Lnet/minecraft/CrashReportCategory;Lnet/minecraft/world/level/LevelHeightAccessor;)V a
	getAllowCommands ()Z o
	getClearWeatherTime ()I h
	getGameType ()Lnet/minecraft/world/level/GameType; m
	getLevelName ()Ljava/lang/String; g
	getRainTime ()I l
	getScheduledEvents ()Lnet/minecraft/world/level/timers/TimerQueue; u
	getThunderTime ()I j
	getWanderingTraderId ()Ljava/util/UUID; x
	getWanderingTraderSpawnChance ()I w
	getWanderingTraderSpawnDelay ()I v
	getWorldBorder ()Lnet/minecraft/world/level/border/WorldBorder$Settings; r
	isInitialized ()Z p
	setClearWeatherTime (I)V a
	setDayTime (J)V b
	setGameTime (J)V a
	setGameType (Lnet/minecraft/world/level/GameType;)V a
	setInitialized (Z)V c
	setRainTime (I)V f
	setThunderTime (I)V e
	setThundering (Z)V a
	setWanderingTraderId (Ljava/util/UUID;)V a
	setWanderingTraderSpawnChance (I)V h
	setWanderingTraderSpawnDelay (I)V g
	setWorldBorder (Lnet/minecraft/world/level/border/WorldBorder$Settings;)V a
net/minecraft/world/level/storage/WorldData dii
	ANVIL_VERSION_ID b
	MCREGION_VERSION_ID c
	createTag (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	endDragonFightData ()Lnet/minecraft/nbt/CompoundTag; C
	fillCrashReportCategory (Lnet/minecraft/CrashReportCategory;)V a
	getAllowCommands ()Z o
	getCustomBossEvents ()Lnet/minecraft/nbt/CompoundTag; E
	getDataPackConfig ()Lnet/minecraft/world/level/DataPackConfig; D
	getDifficulty ()Lnet/minecraft/world/Difficulty; s
	getGameRules ()Lnet/minecraft/world/level/GameRules; q
	getGameType ()Lnet/minecraft/world/level/GameType; m
	getKnownServerBrands ()Ljava/util/Set; G
	getLevelName ()Ljava/lang/String; g
	getLevelSettings ()Lnet/minecraft/world/level/LevelSettings; I
	getLoadedPlayerTag ()Lnet/minecraft/nbt/CompoundTag; y
	getStorageVersionName (I)Ljava/lang/String; i
	getVersion ()I z
	isDifficultyLocked ()Z t
	isHardcore ()Z n
	overworldData ()Lnet/minecraft/world/level/storage/ServerLevelData; H
	setCustomBossEvents (Lnet/minecraft/nbt/CompoundTag;)V b
	setDataPackConfig (Lnet/minecraft/world/level/DataPackConfig;)V a
	setDifficulty (Lnet/minecraft/world/Difficulty;)V a
	setDifficultyLocked (Z)V d
	setEndDragonFightData (Lnet/minecraft/nbt/CompoundTag;)V a
	setGameType (Lnet/minecraft/world/level/GameType;)V a
	setModdedInfo (Ljava/lang/String;Z)V a
	wasModded ()Z F
	worldGenSettings ()Lnet/minecraft/world/level/levelgen/WorldGenSettings; A
	worldGenSettingsLifecycle ()Lcom/mojang/serialization/Lifecycle; B
net/minecraft/world/level/storage/WritableLevelData dij
	setSpawn (Lnet/minecraft/core/BlockPos;F)V a
	setSpawnAngle (F)V a
	setXSpawn (I)V b
	setYSpawn (I)V c
	setZSpawn (I)V d
net/minecraft/world/level/storage/loot/BuiltInLootTables dik
	ABANDONED_MINESHAFT u
	ARMORER_GIFT al
	BASTION_BRIDGE N
	BASTION_HOGLIN_STABLE O
	BASTION_OTHER M
	BASTION_TREASURE L
	BURIED_TREASURE G
	BUTCHER_GIFT am
	CARTOGRAPHER_GIFT an
	CAT_MORNING_GIFT ak
	CLERIC_GIFT ao
	DESERT_PYRAMID z
	EMPTY a
	END_CITY_TREASURE c
	FARMER_GIFT ap
	FISHERMAN_GIFT aq
	FISHING ag
	FISHING_FISH aj
	FISHING_JUNK ah
	FISHING_TREASURE ai
	FLETCHER_GIFT ar
	IGLOO_CHEST C
	IMMUTABLE_LOCATIONS aA
	JUNGLE_TEMPLE A
	JUNGLE_TEMPLE_DISPENSER B
	LEATHERWORKER_GIFT as
	LIBRARIAN_GIFT at
	LOCATIONS az
	MASON_GIFT au
	NETHER_BRIDGE v
	PIGLIN_BARTERING ay
	PILLAGER_OUTPOST K
	RUINED_PORTAL P
	SHEEP_BLACK af
	SHEEP_BLUE ab
	SHEEP_BROWN ac
	SHEEP_CYAN Z
	SHEEP_GRAY X
	SHEEP_GREEN ad
	SHEEP_LIGHT_BLUE T
	SHEEP_LIGHT_GRAY Y
	SHEEP_LIME V
	SHEEP_MAGENTA S
	SHEEP_ORANGE R
	SHEEP_PINK W
	SHEEP_PURPLE aa
	SHEEP_RED ae
	SHEEP_WHITE Q
	SHEEP_YELLOW U
	SHEPHERD_GIFT av
	SHIPWRECK_MAP H
	SHIPWRECK_SUPPLY I
	SHIPWRECK_TREASURE J
	SIMPLE_DUNGEON d
	SPAWN_BONUS_CHEST b
	STRONGHOLD_CORRIDOR y
	STRONGHOLD_CROSSING x
	STRONGHOLD_LIBRARY w
	TOOLSMITH_GIFT aw
	UNDERWATER_RUIN_BIG F
	UNDERWATER_RUIN_SMALL E
	VILLAGE_ARMORER g
	VILLAGE_BUTCHER k
	VILLAGE_CARTOGRAPHER h
	VILLAGE_DESERT_HOUSE p
	VILLAGE_FISHER m
	VILLAGE_FLETCHER l
	VILLAGE_MASON i
	VILLAGE_PLAINS_HOUSE q
	VILLAGE_SAVANNA_HOUSE t
	VILLAGE_SHEPHERD j
	VILLAGE_SNOWY_HOUSE s
	VILLAGE_TAIGA_HOUSE r
	VILLAGE_TANNERY n
	VILLAGE_TEMPLE o
	VILLAGE_TOOLSMITH f
	VILLAGE_WEAPONSMITH e
	WEAPONSMITH_GIFT ax
	WOODLAND_MANSION D
	all ()Ljava/util/Set; a
	register (Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	register (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/world/level/storage/loot/Deserializers dil
	createConditionSerializer ()Lcom/google/gson/GsonBuilder; a
	createFunctionSerializer ()Lcom/google/gson/GsonBuilder; b
	createLootTableSerializer ()Lcom/google/gson/GsonBuilder; c
net/minecraft/world/level/storage/loot/GsonAdapterFactory dim
	builder (Lnet/minecraft/core/Registry;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Function;)Lnet/minecraft/world/level/storage/loot/GsonAdapterFactory$Builder; a
net/minecraft/world/level/storage/loot/GsonAdapterFactory$Builder dim$a
	defaultType f
	elementName b
	inlineType e
	registry a
	typeGetter d
	typeKey c
	build ()Ljava/lang/Object; a
	withDefaultType (Lnet/minecraft/world/level/storage/loot/SerializerType;)Lnet/minecraft/world/level/storage/loot/GsonAdapterFactory$Builder; a
	withInlineSerializer (Lnet/minecraft/world/level/storage/loot/SerializerType;Lnet/minecraft/world/level/storage/loot/GsonAdapterFactory$InlineSerializer;)Lnet/minecraft/world/level/storage/loot/GsonAdapterFactory$Builder; a
net/minecraft/world/level/storage/loot/GsonAdapterFactory$InlineSerializer dim$b
	deserialize (Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	serialize (Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/world/level/storage/loot/GsonAdapterFactory$JsonAdapter dim$c
	defaultType e
	elementName b
	inlineType f
	registry a
	typeGetter d
	typeKey c
net/minecraft/world/level/storage/loot/IntRange din
	limiter c
	max b
	min a
	predicate d
	clamp (Lnet/minecraft/world/level/storage/loot/LootContext;I)I a
	exact (I)Lnet/minecraft/world/level/storage/loot/IntRange; a
	getReferencedContextParams ()Ljava/util/Set; a
	lowerBound (I)Lnet/minecraft/world/level/storage/loot/IntRange; b
	range (II)Lnet/minecraft/world/level/storage/loot/IntRange; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;I)Z b
	upperBound (I)Lnet/minecraft/world/level/storage/loot/IntRange; c
net/minecraft/world/level/storage/loot/IntRange$IntChecker din$a
net/minecraft/world/level/storage/loot/IntRange$IntLimiter din$b
net/minecraft/world/level/storage/loot/IntRange$Serializer din$c
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/IntRange; a
	serialize (Lnet/minecraft/world/level/storage/loot/IntRange;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/world/level/storage/loot/ItemModifierManager dio
	GSON b
	LOGGER a
	functions e
	lootTables d
	predicateManager c
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply (Ljava/util/Map;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	get (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; a
	get (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; a
	getKeys ()Ljava/util/Set; a
net/minecraft/world/level/storage/loot/ItemModifierManager$FunctionSequence dio$a
	compositeFunction b
	functions a
	apply (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
net/minecraft/world/level/storage/loot/LootContext dip
	conditions f
	dynamicDrops i
	level c
	lootTables d
	luck b
	params h
	random a
	visitedConditions g
	visitedTables e
	addDynamicDrops (Lnet/minecraft/resources/ResourceLocation;Ljava/util/function/Consumer;)V a
	addVisitedCondition (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Z a
	addVisitedTable (Lnet/minecraft/world/level/storage/loot/LootTable;)Z a
	getCondition (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition; b
	getLevel ()Lnet/minecraft/server/level/ServerLevel; c
	getLootTable (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/LootTable; a
	getLuck ()F b
	getParam (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Ljava/lang/Object; b
	getParamOrNull (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Ljava/lang/Object; c
	getRandom ()Ljava/util/Random; a
	hasParam (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Z a
	removeVisitedCondition (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)V b
	removeVisitedTable (Lnet/minecraft/world/level/storage/loot/LootTable;)V b
net/minecraft/world/level/storage/loot/LootContext$Builder dip$a
	dynamicDrops c
	level a
	luck e
	params b
	random d
	create (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet;)Lnet/minecraft/world/level/storage/loot/LootContext; a
	getLevel ()Lnet/minecraft/server/level/ServerLevel; a
	getOptionalParameter (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Ljava/lang/Object; b
	getParameter (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Ljava/lang/Object; a
	withDynamicDrop (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/level/storage/loot/LootContext$DynamicDrop;)Lnet/minecraft/world/level/storage/loot/LootContext$Builder; a
	withLuck (F)Lnet/minecraft/world/level/storage/loot/LootContext$Builder; a
	withOptionalParameter (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;Ljava/lang/Object;)Lnet/minecraft/world/level/storage/loot/LootContext$Builder; b
	withOptionalRandomSeed (J)Lnet/minecraft/world/level/storage/loot/LootContext$Builder; a
	withOptionalRandomSeed (JLjava/util/Random;)Lnet/minecraft/world/level/storage/loot/LootContext$Builder; a
	withParameter (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;Ljava/lang/Object;)Lnet/minecraft/world/level/storage/loot/LootContext$Builder; a
	withRandom (Ljava/util/Random;)Lnet/minecraft/world/level/storage/loot/LootContext$Builder; a
net/minecraft/world/level/storage/loot/LootContext$DynamicDrop dip$b
net/minecraft/world/level/storage/loot/LootContext$EntityTarget dip$c
	$VALUES g
	DIRECT_KILLER c
	KILLER b
	KILLER_PLAYER d
	THIS a
	name e
	param f
	$values ()[Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget; b
	getByName (Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget; a
	getParam ()Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam; a
net/minecraft/world/level/storage/loot/LootContext$EntityTarget$Serializer dip$c$a
	read (Lcom/google/gson/stream/JsonReader;)Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget; a
	write (Lcom/google/gson/stream/JsonWriter;Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)V a
net/minecraft/world/level/storage/loot/LootContextUser diq
	getReferencedContextParams ()Ljava/util/Set; b
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/LootPool dir
	bonusRolls g
	compositeCondition c
	compositeFunction e
	conditions b
	entries a
	functions d
	rolls f
	addRandomItem (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)V b
	addRandomItems (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)V a
	lootPool ()Lnet/minecraft/world/level/storage/loot/LootPool$Builder; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/LootPool$Builder dir$a
	bonusRolls e
	conditions b
	entries a
	functions c
	rolls d
	add (Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/LootPool$Builder; a
	apply (Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder;)Ljava/lang/Object; b
	apply (Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder;)Lnet/minecraft/world/level/storage/loot/LootPool$Builder; a
	build ()Lnet/minecraft/world/level/storage/loot/LootPool; b
	setBonusRolls (Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Lnet/minecraft/world/level/storage/loot/LootPool$Builder; b
	setRolls (Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Lnet/minecraft/world/level/storage/loot/LootPool$Builder; a
	unwrap ()Ljava/lang/Object; c
	unwrap ()Lnet/minecraft/world/level/storage/loot/LootPool$Builder; a
	when (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Ljava/lang/Object; b
	when (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/LootPool$Builder; a
net/minecraft/world/level/storage/loot/LootPool$Serializer dir$b
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/LootPool; a
	serialize (Lnet/minecraft/world/level/storage/loot/LootPool;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/world/level/storage/loot/LootTable dis
	DEFAULT_PARAM_SET b
	EMPTY a
	LOGGER c
	compositeFunction g
	functions f
	paramSet d
	pools e
	createStackSplitter (Ljava/util/function/Consumer;)Ljava/util/function/Consumer; a
	fill (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/storage/loot/LootContext;)V a
	getAvailableSlots (Lnet/minecraft/world/Container;Ljava/util/Random;)Ljava/util/List; a
	getParamSet ()Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet; a
	getRandomItems (Lnet/minecraft/world/level/storage/loot/LootContext;)Ljava/util/List; a
	getRandomItems (Lnet/minecraft/world/level/storage/loot/LootContext;Ljava/util/function/Consumer;)V b
	getRandomItemsRaw (Lnet/minecraft/world/level/storage/loot/LootContext;Ljava/util/function/Consumer;)V a
	lootTable ()Lnet/minecraft/world/level/storage/loot/LootTable$Builder; b
	shuffleAndSplitItems (Ljava/util/List;ILjava/util/Random;)V a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/LootTable$Builder dis$a
	functions b
	paramSet c
	pools a
	apply (Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder;)Ljava/lang/Object; b
	apply (Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	build ()Lnet/minecraft/world/level/storage/loot/LootTable; b
	setParamSet (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	unwrap ()Ljava/lang/Object; c
	unwrap ()Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	withPool (Lnet/minecraft/world/level/storage/loot/LootPool$Builder;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
net/minecraft/world/level/storage/loot/LootTable$Serializer dis$b
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/LootTable; a
	serialize (Lnet/minecraft/world/level/storage/loot/LootTable;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/world/level/storage/loot/LootTables dit
	GSON b
	LOGGER a
	predicateManager d
	tables c
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply (Ljava/util/Map;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	get (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/LootTable; a
	getIds ()Ljava/util/Set; a
	serialize (Lnet/minecraft/world/level/storage/loot/LootTable;)Lcom/google/gson/JsonElement; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/level/storage/loot/LootTable;)V a
net/minecraft/world/level/storage/loot/PredicateManager diu
	GSON b
	LOGGER a
	conditions c
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply (Ljava/util/Map;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	get (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition; a
	getKeys ()Ljava/util/Set; a
net/minecraft/world/level/storage/loot/PredicateManager$CompositePredicate diu$a
	composedPredicate b
	terms a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/Serializer div
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/SerializerType diw
	serializer a
	getSerializer ()Lnet/minecraft/world/level/storage/loot/Serializer; a
net/minecraft/world/level/storage/loot/ValidationContext dix
	conditionResolver d
	context b
	contextCache h
	params c
	problems a
	tableResolver f
	visitedConditions e
	visitedTables g
	enterCondition (Ljava/lang/String;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/ValidationContext; b
	enterTable (Ljava/lang/String;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/ValidationContext; a
	forChild (Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/ValidationContext; b
	getContext ()Ljava/lang/String; b
	getProblems ()Lcom/google/common/collect/Multimap; a
	hasVisitedCondition (Lnet/minecraft/resources/ResourceLocation;)Z b
	hasVisitedTable (Lnet/minecraft/resources/ResourceLocation;)Z a
	reportProblem (Ljava/lang/String;)V a
	resolveCondition (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition; d
	resolveLootTable (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/LootTable; c
	setParams (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet;)Lnet/minecraft/world/level/storage/loot/ValidationContext; a
	validateUser (Lnet/minecraft/world/level/storage/loot/LootContextUser;)V a
net/minecraft/world/level/storage/loot/entries/AlternativesEntry diy
	alternatives ([Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/entries/AlternativesEntry$Builder; a
	compose ([Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer;)Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer; a
	getType ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/entries/AlternativesEntry$Builder diy$a
	entries a
	build ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer; b
	getThis ()Lnet/minecraft/world/level/storage/loot/entries/AlternativesEntry$Builder; a
	getThis ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder; d
	otherwise (Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/entries/AlternativesEntry$Builder; a
net/minecraft/world/level/storage/loot/entries/ComposableEntryContainer diz
	ALWAYS_FALSE a
	ALWAYS_TRUE b
	and (Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer;)Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer; a
	or (Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer;)Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer; b
net/minecraft/world/level/storage/loot/entries/CompositeEntryBase dja
	children c
	composedChildren e
	compose ([Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer;)Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer; a
	createSerializer (Lnet/minecraft/world/level/storage/loot/entries/CompositeEntryBase$CompositeEntryConstructor;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Serializer; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/entries/CompositeEntryBase$CompositeEntryConstructor dja$a
net/minecraft/world/level/storage/loot/entries/DynamicLoot djb
	name i
	createItemStack (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)V a
	dynamicEntry (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; a
	getType ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
net/minecraft/world/level/storage/loot/entries/DynamicLoot$Serializer djb$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/DynamicLoot; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer; b
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/DynamicLoot;Lcom/google/gson/JsonSerializationContext;)V a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer;Lcom/google/gson/JsonSerializationContext;)V a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/entries/EmptyLootItem djc
	createItemStack (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)V a
	emptyItem ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; b
	getType ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
net/minecraft/world/level/storage/loot/entries/EmptyLootItem$Serializer djc$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/EmptyLootItem; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer; b
net/minecraft/world/level/storage/loot/entries/EntryGroup djd
	compose ([Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer;)Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer; a
	getType ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
	list ([Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/entries/EntryGroup$Builder; a
net/minecraft/world/level/storage/loot/entries/EntryGroup$Builder djd$a
	entries a
	append (Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/entries/EntryGroup$Builder; b
	build ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer; b
	getThis ()Lnet/minecraft/world/level/storage/loot/entries/EntryGroup$Builder; a
	getThis ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder; d
net/minecraft/world/level/storage/loot/entries/LootItem dje
	item i
	createItemStack (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)V a
	getType ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
	lootTableItem (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; a
net/minecraft/world/level/storage/loot/entries/LootItem$Serializer dje$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/LootItem; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer; b
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootItem;Lcom/google/gson/JsonSerializationContext;)V a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer;Lcom/google/gson/JsonSerializationContext;)V a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/entries/LootPoolEntries djf
	ALTERNATIVES f
	DYNAMIC d
	EMPTY a
	GROUP h
	ITEM b
	REFERENCE c
	SEQUENCE g
	TAG e
	createGsonAdapter ()Ljava/lang/Object; a
	register (Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/Serializer;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
net/minecraft/world/level/storage/loot/entries/LootPoolEntry djg
	createItemStack (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)V a
	getWeight (F)I a
net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer djh
	compositeCondition c
	conditions d
	canRun (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	getType ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder djh$a
	conditions a
	append (Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/entries/EntryGroup$Builder; b
	build ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer; b
	getConditions ()[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition; f
	getThis ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder; d
	otherwise (Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/entries/AlternativesEntry$Builder; a
	then (Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/entries/SequentialEntry$Builder; c
	unwrap ()Ljava/lang/Object; c
	unwrap ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder; e
	when (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Ljava/lang/Object; b
	when (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder; a
net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Serializer djh$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer; b
	deserializeCustom (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer;Lcom/google/gson/JsonSerializationContext;)V b
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/entries/LootPoolEntryType dji
net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer djj
	DEFAULT_QUALITY e
	DEFAULT_WEIGHT c
	compositeFunction i
	entry j
	functions h
	quality g
	weight f
	createItemStack (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)V a
	simpleBuilder (Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$EntryConstructor;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder djj$a
	functions c
	quality b
	weight a
	apply (Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder;)Ljava/lang/Object; b
	apply (Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; a
	getFunctions ()[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; a
	setQuality (I)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; b
	setWeight (I)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; a
net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$DummyBuilder djj$b
	constructor c
	build ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer; b
	getThis ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder; d
	getThis ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$DummyBuilder; g
net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$EntryBase djj$c
	getWeight (F)I a
net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$EntryConstructor djj$d
net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Serializer djj$e
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer; b
	deserializeCustom (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer; b
	deserializeCustom (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer; a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer;Lcom/google/gson/JsonSerializationContext;)V a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/entries/LootTableReference djk
	name i
	createItemStack (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)V a
	getType ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
	lootTableReference (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/entries/LootTableReference$Serializer djk$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/LootTableReference; a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer;Lcom/google/gson/JsonSerializationContext;)V a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer;Lcom/google/gson/JsonSerializationContext;)V a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootTableReference;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/entries/SequentialEntry djl
	compose ([Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer;)Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer; a
	getType ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
	sequential ([Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/entries/SequentialEntry$Builder; a
net/minecraft/world/level/storage/loot/entries/SequentialEntry$Builder djl$a
	entries a
	build ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer; b
	getThis ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder; d
	getThis ()Lnet/minecraft/world/level/storage/loot/entries/SequentialEntry$Builder; a
	then (Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/entries/SequentialEntry$Builder; c
net/minecraft/world/level/storage/loot/entries/TagEntry djm
	expand j
	tag i
	createItemStack (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)V a
	expandTag (Lnet/minecraft/tags/Tag;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; b
	expandTag (Lnet/minecraft/world/level/storage/loot/LootContext;Ljava/util/function/Consumer;)Z a
	getType ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
	tagContents (Lnet/minecraft/tags/Tag;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; a
net/minecraft/world/level/storage/loot/entries/TagEntry$Serializer djm$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/TagEntry; a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer;Lcom/google/gson/JsonSerializationContext;)V a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer;Lcom/google/gson/JsonSerializationContext;)V a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/TagEntry;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/ApplyBonusCount djo
	FORMULAS a
	enchantment b
	formula c
	addBonusBinomialDistributionCount (Lnet/minecraft/world/item/enchantment/Enchantment;FI)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	addOreBonusCount (Lnet/minecraft/world/item/enchantment/Enchantment;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	addUniformBonusCount (Lnet/minecraft/world/item/enchantment/Enchantment;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; b
	addUniformBonusCount (Lnet/minecraft/world/item/enchantment/Enchantment;I)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$BinomialWithBonusCount djo$a
	TYPE a
	extraRounds b
	probability c
	calculateNewCount (Ljava/util/Random;II)I a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/functions/ApplyBonusCount$Formula; a
	getType ()Lnet/minecraft/resources/ResourceLocation; a
	serializeParams (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$Formula djo$b
	calculateNewCount (Ljava/util/Random;II)I a
	getType ()Lnet/minecraft/resources/ResourceLocation; a
	serializeParams (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$FormulaDeserializer djo$c
net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$OreDrops djo$d
	TYPE a
	calculateNewCount (Ljava/util/Random;II)I a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/functions/ApplyBonusCount$Formula; a
	getType ()Lnet/minecraft/resources/ResourceLocation; a
	serializeParams (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$Serializer djo$e
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/ApplyBonusCount; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/ApplyBonusCount;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$UniformBonusCount djo$f
	TYPE a
	bonusMultiplier b
	calculateNewCount (Ljava/util/Random;II)I a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/functions/ApplyBonusCount$Formula; a
	getType ()Lnet/minecraft/resources/ResourceLocation; a
	serializeParams (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/ApplyExplosionDecay djp
	explosionDecay ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; c
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/ApplyExplosionDecay$Serializer djp$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/ApplyExplosionDecay; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
net/minecraft/world/level/storage/loot/functions/CopyBlockState djq
	block a
	properties b
	copyState (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/functions/CopyBlockState$Builder; a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	serialize (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/properties/Property;)Ljava/lang/String; a
net/minecraft/world/level/storage/loot/functions/CopyBlockState$Builder djq$a
	block a
	properties b
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	copy (Lnet/minecraft/world/level/block/state/properties/Property;)Lnet/minecraft/world/level/storage/loot/functions/CopyBlockState$Builder; a
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/CopyBlockState$Builder; a
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; d
net/minecraft/world/level/storage/loot/functions/CopyBlockState$Serializer djq$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/CopyBlockState; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/CopyBlockState;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/CopyNameFunction djr
	source a
	copyName (Lnet/minecraft/world/level/storage/loot/functions/CopyNameFunction$NameSource;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/CopyNameFunction$NameSource djr$a
	$VALUES g
	BLOCK_ENTITY d
	KILLER b
	KILLER_PLAYER c
	THIS a
	name e
	param f
	$values ()[Lnet/minecraft/world/level/storage/loot/functions/CopyNameFunction$NameSource; a
	getByName (Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/functions/CopyNameFunction$NameSource; a
net/minecraft/world/level/storage/loot/functions/CopyNameFunction$Serializer djr$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/CopyNameFunction; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/CopyNameFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/CopyNbtFunction djs
	operations b
	source a
	compileNbtPath (Ljava/lang/String;)Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath; a
	copyData (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Builder; a
	copyData (Lnet/minecraft/world/level/storage/loot/providers/nbt/NbtProvider;)Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Builder; a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Builder djs$a
	ops b
	source a
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	copy (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Builder; a
	copy (Ljava/lang/String;Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$MergeStrategy;)Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Builder; a
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Builder; a
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; d
net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$CopyOperation djs$b
	op e
	sourcePath b
	sourcePathText a
	targetPath d
	targetPathText c
	apply (Ljava/util/function/Supplier;Lnet/minecraft/nbt/Tag;)V a
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$CopyOperation; a
	toJson ()Lcom/google/gson/JsonObject; a
net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$MergeStrategy djs$c
	$VALUES e
	APPEND b
	MERGE c
	REPLACE a
	name d
	$values ()[Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$MergeStrategy; a
	getByName (Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$MergeStrategy; a
	merge (Lnet/minecraft/nbt/Tag;Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;Ljava/util/List;)V a
net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Serializer djs$d
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction djt
	LOGGER a
	enchantments b
	enchantItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/enchantment/Enchantment;Ljava/util/Random;)Lnet/minecraft/world/item/ItemStack; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	randomApplicableEnchantment ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; d
	randomEnchantment ()Lnet/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction$Builder; c
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction$Builder djt$a
	enchantments a
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction$Builder; a
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; d
	withEnchantment (Lnet/minecraft/world/item/enchantment/Enchantment;)Lnet/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction$Serializer djt$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction dju
	levels a
	treasure b
	enchantWithLevels (Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Lnet/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction$Builder; a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction$Builder dju$a
	levels a
	treasure b
	allowTreasure ()Lnet/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction$Builder; e
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction$Builder; a
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; d
net/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction$Serializer dju$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/ExplorationMapFunction djv
	DEFAULT_DECORATION c
	DEFAULT_DECORATION_NAME b
	DEFAULT_FEATURE a
	DEFAULT_SEARCH_RADIUS e
	DEFAULT_SKIP_EXISTING f
	DEFAULT_ZOOM d
	LOGGER h
	destination i
	mapDecoration j
	searchRadius l
	skipKnownStructures m
	zoom k
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	makeExplorationMap ()Lnet/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder; c
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder djv$a
	destination a
	mapDecoration b
	searchRadius d
	skipKnownStructures e
	zoom c
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder; a
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; d
	setDestination (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Lnet/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder; a
	setMapDecoration (Lnet/minecraft/world/level/saveddata/maps/MapDecoration$Type;)Lnet/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder; a
	setSearchRadius (I)Lnet/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder; a
	setSkipKnownStructures (Z)Lnet/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder; a
	setZoom (B)Lnet/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Serializer djv$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/ExplorationMapFunction; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	readStructure (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/level/levelgen/feature/StructureFeature; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/ExplorationMapFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/FillPlayerHead djw
	entityTarget a
	fillPlayerHead (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/FillPlayerHead$Serializer djw$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/FillPlayerHead; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/FillPlayerHead;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/FunctionUserBuilder djx
	apply (Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder;)Ljava/lang/Object; b
	unwrap ()Ljava/lang/Object; c
net/minecraft/world/level/storage/loot/functions/LimitCount djy
	limiter a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	limitCount (Lnet/minecraft/world/level/storage/loot/IntRange;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/LimitCount$Serializer djy$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LimitCount; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LimitCount;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction djz
	compositePredicates a
	predicates g
	apply (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	simpleBuilder (Ljava/util/function/Function;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder djz$a
	conditions a
	getConditions ()[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition; g
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; d
	unwrap ()Ljava/lang/Object; c
	unwrap ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; f
	when (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Ljava/lang/Object; b
	when (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$DummyBuilder djz$b
	constructor a
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; d
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$DummyBuilder; a
net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Serializer djz$c
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/LootItemFunction dka
	decorate (Ljava/util/function/BiFunction;Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)Ljava/util/function/Consumer; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
net/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder dka$a
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
net/minecraft/world/level/storage/loot/functions/LootItemFunctionType dkb
net/minecraft/world/level/storage/loot/functions/LootItemFunctions dkc
	APPLY_BONUS q
	COPY_NAME n
	COPY_NBT v
	COPY_STATE w
	ENCHANT_RANDOMLY d
	ENCHANT_WITH_LEVELS c
	EXPLORATION_MAP l
	EXPLOSION_DECAY s
	FILL_PLAYER_HEAD u
	FURNACE_SMELT g
	IDENTITY a
	LIMIT_COUNT p
	LOOTING_ENCHANT h
	SET_ATTRIBUTES j
	SET_BANNER_PATTERN x
	SET_CONTENTS o
	SET_COUNT b
	SET_DAMAGE i
	SET_ENCHANTMENTS e
	SET_LOOT_TABLE r
	SET_LORE t
	SET_NAME k
	SET_NBT f
	SET_STEW_EFFECT m
	compose ([Ljava/util/function/BiFunction;)Ljava/util/function/BiFunction; a
	createGsonAdapter ()Ljava/lang/Object; a
	register (Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/Serializer;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
net/minecraft/world/level/storage/loot/functions/LootingEnchantFunction dkd
	NO_LIMIT a
	limit c
	value b
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	hasLimit ()Z c
	lootingMultiplier (Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Lnet/minecraft/world/level/storage/loot/functions/LootingEnchantFunction$Builder; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/LootingEnchantFunction$Builder dkd$a
	count a
	limit b
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; d
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootingEnchantFunction$Builder; a
	setLimit (I)Lnet/minecraft/world/level/storage/loot/functions/LootingEnchantFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/LootingEnchantFunction$Serializer dkd$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootingEnchantFunction; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootingEnchantFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetAttributesFunction dke
	modifiers a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	modifier (Ljava/lang/String;Lnet/minecraft/world/entity/ai/attributes/Attribute;Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation;Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction$ModifierBuilder; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	setAttributes ()Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Builder; c
net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Builder dke$a
	modifiers a
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; d
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Builder; a
	withModifier (Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction$ModifierBuilder;)Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Modifier dke$b
	amount d
	attribute b
	id e
	name a
	operation c
	slots f
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Modifier; a
	operationFromString (Ljava/lang/String;)Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation; a
	operationToString (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation;)Ljava/lang/String; a
	serialize (Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$ModifierBuilder dke$c
	amount d
	attribute b
	id e
	name a
	operation c
	slots f
	build ()Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Modifier; a
	forSlot (Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction$ModifierBuilder; a
	withUuid (Ljava/util/UUID;)Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction$ModifierBuilder; a
net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Serializer dke$d
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction dkf
	append b
	patterns a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	setBannerPattern (Z)Lnet/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction$Builder dkf$a
	append b
	patterns a
	addPattern (Lnet/minecraft/world/level/block/entity/BannerPattern;Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction$Builder; a
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; d
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction$Serializer dkf$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetContainerContents dkg
	entries a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	setContents ()Lnet/minecraft/world/level/storage/loot/functions/SetContainerContents$Builder; c
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetContainerContents$Builder dkg$a
	entries a
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; d
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/SetContainerContents$Builder; a
	withEntry (Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/functions/SetContainerContents$Builder; a
net/minecraft/world/level/storage/loot/functions/SetContainerContents$Serializer dkg$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetContainerContents; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetContainerContents;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetContainerLootTable dkh
	name a
	seed b
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
	withLootTable (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	withLootTable (Lnet/minecraft/resources/ResourceLocation;J)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetContainerLootTable$Serializer dkh$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetContainerLootTable; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetContainerLootTable;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetEnchantmentsFunction dki
	add b
	enchantments a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	updateEnchantment (Ljava/util/Map;Lnet/minecraft/world/item/enchantment/Enchantment;I)V a
net/minecraft/world/level/storage/loot/functions/SetEnchantmentsFunction$Builder dki$a
	add b
	enchantments a
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; d
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/SetEnchantmentsFunction$Builder; a
	withEnchantment (Lnet/minecraft/world/item/enchantment/Enchantment;Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Lnet/minecraft/world/level/storage/loot/functions/SetEnchantmentsFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetEnchantmentsFunction$Serializer dki$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetEnchantmentsFunction; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetEnchantmentsFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetItemCountFunction dkj
	add b
	value a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	setCount (Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	setCount (Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;Z)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetItemCountFunction$Serializer dkj$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetItemCountFunction; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetItemCountFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetItemDamageFunction dkk
	LOGGER a
	add c
	damage b
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	setDamage (Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	setDamage (Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;Z)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetItemDamageFunction$Serializer dkk$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetItemDamageFunction; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetItemDamageFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetLoreFunction dkl
	lore b
	replace a
	resolutionContext c
	getLoreTag (Lnet/minecraft/world/item/ItemStack;Z)Lnet/minecraft/nbt/ListTag; a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	setLore ()Lnet/minecraft/world/level/storage/loot/functions/SetLoreFunction$Builder; c
net/minecraft/world/level/storage/loot/functions/SetLoreFunction$Builder dkl$a
	lore c
	replace a
	resolutionContext b
	addLine (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/world/level/storage/loot/functions/SetLoreFunction$Builder; a
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; d
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/SetLoreFunction$Builder; a
	setReplace (Z)Lnet/minecraft/world/level/storage/loot/functions/SetLoreFunction$Builder; a
	setResolutionContext (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)Lnet/minecraft/world/level/storage/loot/functions/SetLoreFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetLoreFunction$Serializer dkl$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetLoreFunction; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetLoreFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetNameFunction dkm
	LOGGER a
	name b
	resolutionContext c
	createResolver (Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)Ljava/util/function/UnaryOperator; a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	setName (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	setName (Lnet/minecraft/network/chat/Component;Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetNameFunction$Serializer dkm$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetNameFunction; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetNameFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetNbtFunction dkn
	tag a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	setTag (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetNbtFunction$Serializer dkn$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetNbtFunction; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetNbtFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetStewEffectFunction dko
	effectDurationMap a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	stewEffect ()Lnet/minecraft/world/level/storage/loot/functions/SetStewEffectFunction$Builder; c
net/minecraft/world/level/storage/loot/functions/SetStewEffectFunction$Builder dko$a
	effectDurationMap a
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; d
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/SetStewEffectFunction$Builder; a
	withEffect (Lnet/minecraft/world/effect/MobEffect;Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Lnet/minecraft/world/level/storage/loot/functions/SetStewEffectFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetStewEffectFunction$Serializer dko$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetStewEffectFunction; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetStewEffectFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SmeltItemFunction dkp
	LOGGER a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	smelted ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; c
net/minecraft/world/level/storage/loot/functions/SmeltItemFunction$Serializer dkp$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SmeltItemFunction; a
net/minecraft/world/level/storage/loot/parameters/LootContextParam dks
	name a
	getName ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/world/level/storage/loot/parameters/LootContextParamSet dkt
	all b
	required a
	builder ()Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet$Builder; c
	getAllowed ()Ljava/util/Set; b
	getRequired ()Ljava/util/Set; a
	isAllowed (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Z a
	validateUser (Lnet/minecraft/world/level/storage/loot/ValidationContext;Lnet/minecraft/world/level/storage/loot/LootContextUser;)V a
net/minecraft/world/level/storage/loot/parameters/LootContextParamSet$Builder dkt$a
	optional b
	required a
	build ()Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet; a
	optional (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet$Builder; b
	required (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet$Builder; a
net/minecraft/world/level/storage/loot/parameters/LootContextParamSets dku
	ADVANCEMENT_ENTITY j
	ADVANCEMENT_REWARD i
	ALL_PARAMS k
	BLOCK l
	CHEST b
	COMMAND c
	EMPTY a
	ENTITY f
	FISHING e
	GIFT g
	PIGLIN_BARTER h
	REGISTRY m
	SELECTOR d
	get (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet; a
	getKey (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet;)Lnet/minecraft/resources/ResourceLocation; a
	register (Ljava/lang/String;Ljava/util/function/Consumer;)Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet; a
net/minecraft/world/level/storage/loot/parameters/LootContextParams dkv
	BLOCK_ENTITY h
	BLOCK_STATE g
	DAMAGE_SOURCE c
	DIRECT_KILLER_ENTITY e
	EXPLOSION_RADIUS j
	KILLER_ENTITY d
	LAST_DAMAGE_PLAYER b
	ORIGIN f
	THIS_ENTITY a
	TOOL i
	create (Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam; a
net/minecraft/world/level/storage/loot/predicates/AlternativeLootItemCondition dkx
	composedPredicate b
	terms a
	alternative ([Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/AlternativeLootItemCondition$Builder; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/predicates/AlternativeLootItemCondition$Builder dkx$a
	terms a
	or (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/AlternativeLootItemCondition$Builder; a
net/minecraft/world/level/storage/loot/predicates/AlternativeLootItemCondition$Serializer dkx$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/AlternativeLootItemCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/AlternativeLootItemCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/BonusLevelTableCondition dky
	enchantment a
	values b
	bonusLevelFlatChance (Lnet/minecraft/world/item/enchantment/Enchantment;[F)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/BonusLevelTableCondition$Serializer dky$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/BonusLevelTableCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/BonusLevelTableCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/ConditionReference dkz
	LOGGER a
	name b
	conditionReference (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/predicates/ConditionReference$Serializer dkz$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/ConditionReference; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/ConditionReference;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/ConditionUserBuilder dla
	unwrap ()Ljava/lang/Object; c
	when (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Ljava/lang/Object; b
net/minecraft/world/level/storage/loot/predicates/DamageSourceCondition dlb
	predicate a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
	hasDamageSource (Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/DamageSourceCondition$Serializer dlb$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/DamageSourceCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/DamageSourceCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition dlc
	entityTarget b
	scores a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
	hasScore (Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/scores/Scoreboard;Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/IntRange;)Z a
	hasScores (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)Lnet/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition$Builder; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition$Builder dlc$a
	entityTarget b
	scores a
	withScore (Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/IntRange;)Lnet/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition$Builder; a
net/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition$Serializer dlc$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/ExplosionCondition dld
	INSTANCE a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
	survivesExplosion ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; c
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/ExplosionCondition$Serializer dld$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/ExplosionCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/ExplosionCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/InvertedLootItemCondition dle
	term a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
	invert (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/predicates/InvertedLootItemCondition$Serializer dle$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/InvertedLootItemCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/InvertedLootItemCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/LocationCheck dlf
	offset b
	predicate a
	checkLocation (Lnet/minecraft/advancements/critereon/LocationPredicate$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	checkLocation (Lnet/minecraft/advancements/critereon/LocationPredicate$Builder;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/LocationCheck$Serializer dlf$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/LocationCheck; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/LocationCheck;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition dlg
	block a
	properties b
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
	hasBlockStateProperties (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition$Builder; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition$Builder dlg$a
	block a
	properties b
	setProperties (Lnet/minecraft/advancements/critereon/StatePropertiesPredicate$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition$Builder; a
net/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition$Serializer dlg$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/LootItemCondition dlh
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
net/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder dlh$a
	invert ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	or (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/AlternativeLootItemCondition$Builder; a
net/minecraft/world/level/storage/loot/predicates/LootItemConditionType dli
net/minecraft/world/level/storage/loot/predicates/LootItemConditions dlj
	ALTERNATIVE b
	BLOCK_STATE_PROPERTY h
	DAMAGE_SOURCE_PROPERTIES l
	ENTITY_PROPERTIES e
	ENTITY_SCORES g
	INVERTED a
	KILLED_BY_PLAYER f
	LOCATION_CHECK m
	MATCH_TOOL i
	RANDOM_CHANCE c
	RANDOM_CHANCE_WITH_LOOTING d
	REFERENCE o
	SURVIVES_EXPLOSION k
	TABLE_BONUS j
	TIME_CHECK p
	VALUE_CHECK q
	WEATHER_CHECK n
	andConditions ([Ljava/util/function/Predicate;)Ljava/util/function/Predicate; a
	createGsonAdapter ()Ljava/lang/Object; a
	orConditions ([Ljava/util/function/Predicate;)Ljava/util/function/Predicate; b
	register (Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/Serializer;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
net/minecraft/world/level/storage/loot/predicates/LootItemEntityPropertyCondition dlk
	entityTarget b
	predicate a
	entityPresent (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
	hasProperties (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	hasProperties (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/LootItemEntityPropertyCondition$Serializer dlk$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemEntityPropertyCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/LootItemEntityPropertyCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/LootItemKilledByPlayerCondition dll
	INSTANCE a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
	killedByPlayer ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; c
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/LootItemKilledByPlayerCondition$Serializer dll$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemKilledByPlayerCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/LootItemKilledByPlayerCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceCondition dlm
	probability a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
	randomChance (F)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceCondition$Serializer dlm$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceWithLootingCondition dln
	lootingMultiplier b
	percent a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
	randomChanceAndLootingBoost (FF)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceWithLootingCondition$Serializer dln$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceWithLootingCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceWithLootingCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/MatchTool dlo
	predicate a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	toolMatches (Lnet/minecraft/advancements/critereon/ItemPredicate$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
net/minecraft/world/level/storage/loot/predicates/MatchTool$Serializer dlo$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/MatchTool; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/MatchTool;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/TimeCheck dlp
	period a
	value b
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	time (Lnet/minecraft/world/level/storage/loot/IntRange;)Lnet/minecraft/world/level/storage/loot/predicates/TimeCheck$Builder; a
net/minecraft/world/level/storage/loot/predicates/TimeCheck$Builder dlp$a
	period a
	value b
	build ()Lnet/minecraft/world/level/storage/loot/predicates/TimeCheck; b
	setPeriod (J)Lnet/minecraft/world/level/storage/loot/predicates/TimeCheck$Builder; a
net/minecraft/world/level/storage/loot/predicates/TimeCheck$Serializer dlp$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/TimeCheck; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/TimeCheck;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/ValueCheckCondition dlq
	provider a
	range b
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
	hasValue (Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;Lnet/minecraft/world/level/storage/loot/IntRange;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/ValueCheckCondition$Serializer dlq$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/ValueCheckCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/ValueCheckCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/WeatherCheck dlr
	isRaining a
	isThundering b
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	weather ()Lnet/minecraft/world/level/storage/loot/predicates/WeatherCheck$Builder; c
net/minecraft/world/level/storage/loot/predicates/WeatherCheck$Builder dlr$a
	isRaining a
	isThundering b
	build ()Lnet/minecraft/world/level/storage/loot/predicates/WeatherCheck; b
	setRaining (Ljava/lang/Boolean;)Lnet/minecraft/world/level/storage/loot/predicates/WeatherCheck$Builder; a
	setThundering (Ljava/lang/Boolean;)Lnet/minecraft/world/level/storage/loot/predicates/WeatherCheck$Builder; b
net/minecraft/world/level/storage/loot/predicates/WeatherCheck$Serializer dlr$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/WeatherCheck; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/WeatherCheck;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider dlt
	BLOCK_ENTITY a
	BLOCK_ENTITY_ID b
	BLOCK_ENTITY_PROVIDER c
	getter d
	createFromContext (Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider; a
	forContextEntity (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)Lnet/minecraft/world/level/storage/loot/providers/nbt/NbtProvider; a
	forEntity (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)Lnet/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider$Getter; b
	get (Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/nbt/Tag; a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/providers/nbt/LootNbtProviderType; a
net/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider$Getter dlt$a
	get (Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/nbt/Tag; a
	getId ()Ljava/lang/String; a
	getReferencedContextParams ()Ljava/util/Set; b
net/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider$InlineSerializer dlt$b
	deserialize (Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider; b
	serialize (Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
	serialize (Lnet/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider$Serializer dlt$c
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/providers/nbt/LootNbtProviderType dlu
net/minecraft/world/level/storage/loot/providers/nbt/NbtProvider dlv
	get (Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/nbt/Tag; a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/providers/nbt/LootNbtProviderType; a
net/minecraft/world/level/storage/loot/providers/nbt/NbtProviders dlw
	CONTEXT b
	STORAGE a
	createGsonAdapter ()Ljava/lang/Object; a
	register (Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/Serializer;)Lnet/minecraft/world/level/storage/loot/providers/nbt/LootNbtProviderType; a
net/minecraft/world/level/storage/loot/providers/nbt/StorageNbtProvider dlx
	id a
	get (Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/nbt/Tag; a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/providers/nbt/LootNbtProviderType; a
net/minecraft/world/level/storage/loot/providers/nbt/StorageNbtProvider$Serializer dlx$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/providers/nbt/StorageNbtProvider; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/providers/nbt/StorageNbtProvider;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/providers/number/BinomialDistributionGenerator dlz
	n a
	p b
	binomial (IF)Lnet/minecraft/world/level/storage/loot/providers/number/BinomialDistributionGenerator; a
	getFloat (Lnet/minecraft/world/level/storage/loot/LootContext;)F b
	getInt (Lnet/minecraft/world/level/storage/loot/LootContext;)I a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/providers/number/LootNumberProviderType; a
net/minecraft/world/level/storage/loot/providers/number/BinomialDistributionGenerator$Serializer dlz$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/providers/number/BinomialDistributionGenerator; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/providers/number/BinomialDistributionGenerator;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/providers/number/ConstantValue dma
	value a
	exactly (F)Lnet/minecraft/world/level/storage/loot/providers/number/ConstantValue; a
	getFloat (Lnet/minecraft/world/level/storage/loot/LootContext;)F b
	getType ()Lnet/minecraft/world/level/storage/loot/providers/number/LootNumberProviderType; a
net/minecraft/world/level/storage/loot/providers/number/ConstantValue$InlineSerializer dma$a
	deserialize (Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/providers/number/ConstantValue; b
	serialize (Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
	serialize (Lnet/minecraft/world/level/storage/loot/providers/number/ConstantValue;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/world/level/storage/loot/providers/number/ConstantValue$Serializer dma$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/providers/number/ConstantValue; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/providers/number/ConstantValue;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/providers/number/LootNumberProviderType dmb
net/minecraft/world/level/storage/loot/providers/number/NumberProvider dmc
	getFloat (Lnet/minecraft/world/level/storage/loot/LootContext;)F b
	getInt (Lnet/minecraft/world/level/storage/loot/LootContext;)I a
	getType ()Lnet/minecraft/world/level/storage/loot/providers/number/LootNumberProviderType; a
net/minecraft/world/level/storage/loot/providers/number/NumberProviders dmd
	BINOMIAL c
	CONSTANT a
	SCORE d
	UNIFORM b
	createGsonAdapter ()Ljava/lang/Object; a
	register (Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/Serializer;)Lnet/minecraft/world/level/storage/loot/providers/number/LootNumberProviderType; a
net/minecraft/world/level/storage/loot/providers/number/ScoreboardValue dme
	scale c
	score b
	target a
	fromScoreboard (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/providers/number/ScoreboardValue; a
	fromScoreboard (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;Ljava/lang/String;F)Lnet/minecraft/world/level/storage/loot/providers/number/ScoreboardValue; a
	getFloat (Lnet/minecraft/world/level/storage/loot/LootContext;)F b
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/providers/number/LootNumberProviderType; a
net/minecraft/world/level/storage/loot/providers/number/ScoreboardValue$Serializer dme$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/providers/number/ScoreboardValue; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/providers/number/ScoreboardValue;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/providers/number/UniformGenerator dmf
	max b
	min a
	between (FF)Lnet/minecraft/world/level/storage/loot/providers/number/UniformGenerator; a
	getFloat (Lnet/minecraft/world/level/storage/loot/LootContext;)F b
	getInt (Lnet/minecraft/world/level/storage/loot/LootContext;)I a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/providers/number/LootNumberProviderType; a
net/minecraft/world/level/storage/loot/providers/number/UniformGenerator$Serializer dmf$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/providers/number/UniformGenerator; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/providers/number/UniformGenerator;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/providers/score/ContextScoreboardNameProvider dmh
	target a
	forTarget (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)Lnet/minecraft/world/level/storage/loot/providers/score/ScoreboardNameProvider; a
	getReferencedContextParams ()Ljava/util/Set; b
	getScoreboardName (Lnet/minecraft/world/level/storage/loot/LootContext;)Ljava/lang/String; a
	getType ()Lnet/minecraft/world/level/storage/loot/providers/score/LootScoreProviderType; a
net/minecraft/world/level/storage/loot/providers/score/ContextScoreboardNameProvider$InlineSerializer dmh$a
	deserialize (Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/providers/score/ContextScoreboardNameProvider; b
	serialize (Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
	serialize (Lnet/minecraft/world/level/storage/loot/providers/score/ContextScoreboardNameProvider;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/world/level/storage/loot/providers/score/ContextScoreboardNameProvider$Serializer dmh$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/providers/score/ContextScoreboardNameProvider; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/providers/score/ContextScoreboardNameProvider;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/providers/score/FixedScoreboardNameProvider dmi
	name a
	forName (Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/providers/score/ScoreboardNameProvider; a
	getName ()Ljava/lang/String; c
	getReferencedContextParams ()Ljava/util/Set; b
	getScoreboardName (Lnet/minecraft/world/level/storage/loot/LootContext;)Ljava/lang/String; a
	getType ()Lnet/minecraft/world/level/storage/loot/providers/score/LootScoreProviderType; a
net/minecraft/world/level/storage/loot/providers/score/FixedScoreboardNameProvider$Serializer dmi$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/providers/score/FixedScoreboardNameProvider; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/providers/score/FixedScoreboardNameProvider;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/providers/score/LootScoreProviderType dmj
net/minecraft/world/level/storage/loot/providers/score/ScoreboardNameProvider dmk
	getReferencedContextParams ()Ljava/util/Set; b
	getScoreboardName (Lnet/minecraft/world/level/storage/loot/LootContext;)Ljava/lang/String; a
	getType ()Lnet/minecraft/world/level/storage/loot/providers/score/LootScoreProviderType; a
net/minecraft/world/level/storage/loot/providers/score/ScoreboardNameProviders dml
	CONTEXT b
	FIXED a
	createGsonAdapter ()Ljava/lang/Object; a
	register (Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/Serializer;)Lnet/minecraft/world/level/storage/loot/providers/score/LootScoreProviderType; a
net/minecraft/world/level/timers/FunctionCallback dmo
	functionId a
	handle (Ljava/lang/Object;Lnet/minecraft/world/level/timers/TimerQueue;J)V a
	handle (Lnet/minecraft/server/MinecraftServer;Lnet/minecraft/world/level/timers/TimerQueue;J)V a
net/minecraft/world/level/timers/FunctionCallback$Serializer dmo$a
	deserialize (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/timers/FunctionCallback; a
	deserialize (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/timers/TimerCallback; b
	serialize (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/timers/FunctionCallback;)V a
	serialize (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/timers/TimerCallback;)V a
net/minecraft/world/level/timers/FunctionTagCallback dmp
	tagId a
	handle (Ljava/lang/Object;Lnet/minecraft/world/level/timers/TimerQueue;J)V a
	handle (Lnet/minecraft/server/MinecraftServer;Lnet/minecraft/world/level/timers/TimerQueue;J)V a
net/minecraft/world/level/timers/FunctionTagCallback$Serializer dmp$a
	deserialize (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/timers/FunctionTagCallback; a
	deserialize (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/timers/TimerCallback; b
	serialize (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/timers/FunctionTagCallback;)V a
	serialize (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/timers/TimerCallback;)V a
net/minecraft/world/level/timers/TimerCallback dmq
	handle (Ljava/lang/Object;Lnet/minecraft/world/level/timers/TimerQueue;J)V a
net/minecraft/world/level/timers/TimerCallback$Serializer dmq$a
	cls b
	id a
	deserialize (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/timers/TimerCallback; b
	getCls ()Ljava/lang/Class; b
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	serialize (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/timers/TimerCallback;)V a
net/minecraft/world/level/timers/TimerCallbacks dmr
	LOGGER b
	SERVER_CALLBACKS a
	classToSerializer d
	idToSerializer c
	deserialize (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/timers/TimerCallback; a
	getSerializer (Ljava/lang/Class;)Lnet/minecraft/world/level/timers/TimerCallback$Serializer; a
	register (Lnet/minecraft/world/level/timers/TimerCallback$Serializer;)Lnet/minecraft/world/level/timers/TimerCallbacks; a
	serialize (Lnet/minecraft/world/level/timers/TimerCallback;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/world/level/timers/TimerQueue dms
	CALLBACK_DATA_TAG b
	LOGGER a
	TIMER_NAME_TAG c
	TIMER_TRIGGER_TIME_TAG d
	callbacksRegistry e
	events h
	queue f
	sequentialId g
	createComparator ()Ljava/util/Comparator; c
	getEventsIds ()Ljava/util/Set; a
	loadEvent (Lnet/minecraft/nbt/CompoundTag;)V a
	remove (Ljava/lang/String;)I a
	schedule (Ljava/lang/String;JLnet/minecraft/world/level/timers/TimerCallback;)V a
	store ()Lnet/minecraft/nbt/ListTag; b
	storeEvent (Lnet/minecraft/world/level/timers/TimerQueue$Event;)Lnet/minecraft/nbt/CompoundTag; a
	tick (Ljava/lang/Object;J)V a
net/minecraft/world/level/timers/TimerQueue$Event dms$a
	callback d
	id c
	sequentialId b
	triggerTime a
net/minecraft/world/phys/AABB dmv
	EPSILON g
	maxX d
	maxY e
	maxZ f
	minX a
	minY b
	minZ c
	clip (Ljava/lang/Iterable;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/BlockHitResult; a
	clip (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;)Ljava/util/Optional; b
	clipPoint ([DLnet/minecraft/core/Direction;DDDDDDDDLnet/minecraft/core/Direction;DDD)Lnet/minecraft/core/Direction; a
	contains (DDD)Z e
	contains (Lnet/minecraft/world/phys/Vec3;)Z d
	contract (DDD)Lnet/minecraft/world/phys/AABB; a
	deflate (D)Lnet/minecraft/world/phys/AABB; h
	deflate (DDD)Lnet/minecraft/world/phys/AABB; f
	expandTowards (DDD)Lnet/minecraft/world/phys/AABB; b
	expandTowards (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/AABB; b
	getCenter ()Lnet/minecraft/world/phys/Vec3; f
	getDirection (Lnet/minecraft/world/phys/AABB;Lnet/minecraft/world/phys/Vec3;[DLnet/minecraft/core/Direction;DDD)Lnet/minecraft/core/Direction; a
	getSize ()D a
	getXsize ()D b
	getYsize ()D c
	getZsize ()D d
	hasNaN ()Z e
	inflate (D)Lnet/minecraft/world/phys/AABB; g
	inflate (DDD)Lnet/minecraft/world/phys/AABB; c
	intersect (Lnet/minecraft/world/phys/AABB;)Lnet/minecraft/world/phys/AABB; a
	intersects (DDDDDD)Z a
	intersects (Lnet/minecraft/world/phys/AABB;)Z c
	intersects (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;)Z a
	max (Lnet/minecraft/core/Direction$Axis;)D b
	min (Lnet/minecraft/core/Direction$Axis;)D a
	minmax (Lnet/minecraft/world/phys/AABB;)Lnet/minecraft/world/phys/AABB; b
	move (DDD)Lnet/minecraft/world/phys/AABB; d
	move (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/AABB; a
	move (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/AABB; c
	of (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Lnet/minecraft/world/phys/AABB; a
	ofSize (Lnet/minecraft/world/phys/Vec3;DDD)Lnet/minecraft/world/phys/AABB; a
	setMaxX (D)Lnet/minecraft/world/phys/AABB; d
	setMaxY (D)Lnet/minecraft/world/phys/AABB; e
	setMaxZ (D)Lnet/minecraft/world/phys/AABB; f
	setMinX (D)Lnet/minecraft/world/phys/AABB; a
	setMinY (D)Lnet/minecraft/world/phys/AABB; b
	setMinZ (D)Lnet/minecraft/world/phys/AABB; c
	unitCubeFromLowerCorner (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/AABB; a
net/minecraft/world/phys/BlockHitResult dmw
	blockPos c
	direction b
	inside e
	miss d
	getBlockPos ()Lnet/minecraft/core/BlockPos; a
	getDirection ()Lnet/minecraft/core/Direction; b
	getType ()Lnet/minecraft/world/phys/HitResult$Type; c
	isInside ()Z d
	miss (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/core/Direction;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/BlockHitResult; a
	withDirection (Lnet/minecraft/core/Direction;)Lnet/minecraft/world/phys/BlockHitResult; a
	withPosition (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/BlockHitResult; a
net/minecraft/world/phys/EntityHitResult dmx
	entity b
	getEntity ()Lnet/minecraft/world/entity/Entity; a
	getType ()Lnet/minecraft/world/phys/HitResult$Type; c
net/minecraft/world/phys/HitResult dmy
	location a
	distanceTo (Lnet/minecraft/world/entity/Entity;)D a
	getLocation ()Lnet/minecraft/world/phys/Vec3; e
	getType ()Lnet/minecraft/world/phys/HitResult$Type; c
net/minecraft/world/phys/HitResult$Type dmy$a
	$VALUES d
	BLOCK b
	ENTITY c
	MISS a
	$values ()[Lnet/minecraft/world/phys/HitResult$Type; a
net/minecraft/world/phys/Vec2 dmz
	MAX g
	MIN h
	NEG_UNIT_X d
	NEG_UNIT_Y f
	ONE b
	UNIT_X c
	UNIT_Y e
	ZERO a
	x i
	y j
	add (F)Lnet/minecraft/world/phys/Vec2; b
	add (Lnet/minecraft/world/phys/Vec2;)Lnet/minecraft/world/phys/Vec2; b
	distanceToSqr (Lnet/minecraft/world/phys/Vec2;)F d
	dot (Lnet/minecraft/world/phys/Vec2;)F a
	equals (Lnet/minecraft/world/phys/Vec2;)Z c
	length ()F b
	lengthSquared ()F c
	negated ()Lnet/minecraft/world/phys/Vec2; d
	normalized ()Lnet/minecraft/world/phys/Vec2; a
	scale (F)Lnet/minecraft/world/phys/Vec2; a
net/minecraft/world/phys/Vec3 dna
	ZERO a
	x b
	y c
	z d
	add (DDD)Lnet/minecraft/world/phys/Vec3; b
	add (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; e
	align (Ljava/util/EnumSet;)Lnet/minecraft/world/phys/Vec3; a
	atBottomCenterOf (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/world/phys/Vec3; c
	atCenterOf (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/world/phys/Vec3; a
	atLowerCornerOf (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/world/phys/Vec3; b
	closerThan (Lnet/minecraft/core/Position;D)Z a
	cross (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; c
	directionFromRotation (FF)Lnet/minecraft/world/phys/Vec3; a
	directionFromRotation (Lnet/minecraft/world/phys/Vec2;)Lnet/minecraft/world/phys/Vec3; a
	distanceTo (Lnet/minecraft/world/phys/Vec3;)D f
	distanceToSqr (DDD)D c
	distanceToSqr (Lnet/minecraft/world/phys/Vec3;)D g
	dot (Lnet/minecraft/world/phys/Vec3;)D b
	fromRGB24 (I)Lnet/minecraft/world/phys/Vec3; a
	get (Lnet/minecraft/core/Direction$Axis;)D a
	horizontalDistance ()D h
	horizontalDistanceSqr ()D i
	length ()D f
	lengthSqr ()D g
	lerp (Lnet/minecraft/world/phys/Vec3;D)Lnet/minecraft/world/phys/Vec3; a
	multiply (DDD)Lnet/minecraft/world/phys/Vec3; d
	multiply (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; h
	normalize ()Lnet/minecraft/world/phys/Vec3; d
	reverse ()Lnet/minecraft/world/phys/Vec3; e
	scale (D)Lnet/minecraft/world/phys/Vec3; a
	subtract (DDD)Lnet/minecraft/world/phys/Vec3; a
	subtract (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; d
	upFromBottomCenterOf (Lnet/minecraft/core/Vec3i;D)Lnet/minecraft/world/phys/Vec3; a
	vectorTo (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; a
	x ()D a
	xRot (F)Lnet/minecraft/world/phys/Vec3; a
	y ()D b
	yRot (F)Lnet/minecraft/world/phys/Vec3; b
	z ()D c
	zRot (F)Lnet/minecraft/world/phys/Vec3; c
net/minecraft/world/phys/shapes/ArrayVoxelShape dnc
	xs b
	ys c
	zs d
	getCoords (Lnet/minecraft/core/Direction$Axis;)Lit/unimi/dsi/fastutil/doubles/DoubleList; a
net/minecraft/world/phys/shapes/BitSetDiscreteVoxelShape dnd
	storage d
	xMax h
	xMin e
	yMax i
	yMin f
	zMax j
	zMin g
	clearZStrip (IIII)V b
	fill (III)V c
	fillUpdateBounds (IIIZ)V a
	firstFull (Lnet/minecraft/core/Direction$Axis;)I a
	forAllBoxes (Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape;Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape$IntLineConsumer;Z)V a
	getIndex (III)I a
	isEmpty ()Z a
	isFull (III)Z b
	isXZRectangleFull (IIIII)Z a
	isZStripFull (IIII)Z a
	join (Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape;Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape;Lnet/minecraft/world/phys/shapes/IndexMerger;Lnet/minecraft/world/phys/shapes/IndexMerger;Lnet/minecraft/world/phys/shapes/IndexMerger;Lnet/minecraft/world/phys/shapes/BooleanOp;)Lnet/minecraft/world/phys/shapes/BitSetDiscreteVoxelShape; a
	lastFull (Lnet/minecraft/core/Direction$Axis;)I b
	withFilledBounds (IIIIIIIII)Lnet/minecraft/world/phys/shapes/BitSetDiscreteVoxelShape; a
net/minecraft/world/phys/shapes/BooleanOp dne
	AND i
	CAUSED_BY n
	CAUSES l
	FALSE a
	FIRST m
	NOT_AND h
	NOT_FIRST d
	NOT_OR b
	NOT_SAME g
	NOT_SECOND f
	ONLY_FIRST e
	ONLY_SECOND c
	OR o
	SAME j
	SECOND k
	TRUE p
net/minecraft/world/phys/shapes/CollisionContext dnf
	canStandOnFluid (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/material/FlowingFluid;)Z a
	empty ()Lnet/minecraft/world/phys/shapes/CollisionContext; a
	hasItemOnFeet (Lnet/minecraft/world/item/Item;)Z a
	isAbove (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/core/BlockPos;Z)Z a
	isDescending ()Z b
	isHoldingItem (Lnet/minecraft/world/item/Item;)Z b
	of (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/phys/shapes/CollisionContext; a
net/minecraft/world/phys/shapes/CubePointRange dng
	parts a
net/minecraft/world/phys/shapes/CubeVoxelShape dnh
	findIndex (Lnet/minecraft/core/Direction$Axis;D)I a
	getCoords (Lnet/minecraft/core/Direction$Axis;)Lit/unimi/dsi/fastutil/doubles/DoubleList; a
net/minecraft/world/phys/shapes/DiscreteCubeMerger dni
	firstDiv b
	result a
	secondDiv c
	forMergedIndexes (Lnet/minecraft/world/phys/shapes/IndexMerger$IndexConsumer;)Z a
	getList ()Lit/unimi/dsi/fastutil/doubles/DoubleList; a
net/minecraft/world/phys/shapes/DiscreteVoxelShape dnj
	AXIS_VALUES d
	xSize a
	ySize b
	zSize c
	fill (III)V c
	firstFull (Lnet/minecraft/core/Direction$Axis;)I a
	firstFull (Lnet/minecraft/core/Direction$Axis;II)I a
	forAllAxisEdges (Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape$IntLineConsumer;Lnet/minecraft/core/AxisCycle;Z)V a
	forAllAxisFaces (Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape$IntFaceConsumer;Lnet/minecraft/core/AxisCycle;)V a
	forAllBoxes (Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape$IntLineConsumer;Z)V b
	forAllEdges (Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape$IntLineConsumer;Z)V a
	forAllFaces (Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape$IntFaceConsumer;)V a
	getSize (Lnet/minecraft/core/Direction$Axis;)I c
	getXSize ()I b
	getYSize ()I c
	getZSize ()I d
	isEmpty ()Z a
	isFull (III)Z b
	isFull (Lnet/minecraft/core/AxisCycle;III)Z b
	isFullWide (III)Z d
	isFullWide (Lnet/minecraft/core/AxisCycle;III)Z a
	lastFull (Lnet/minecraft/core/Direction$Axis;)I b
	lastFull (Lnet/minecraft/core/Direction$Axis;II)I b
net/minecraft/world/phys/shapes/DiscreteVoxelShape$IntFaceConsumer dnj$a
net/minecraft/world/phys/shapes/DiscreteVoxelShape$IntLineConsumer dnj$b
net/minecraft/world/phys/shapes/EntityCollisionContext dnk
	EMPTY a
	canStandOnFluid f
	descending b
	entity g
	entityBottom c
	footItem e
	heldItem d
	canStandOnFluid (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/material/FlowingFluid;)Z a
	getEntity ()Ljava/util/Optional; c
	hasItemOnFeet (Lnet/minecraft/world/item/Item;)Z a
	isAbove (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/core/BlockPos;Z)Z a
	isDescending ()Z b
	isHoldingItem (Lnet/minecraft/world/item/Item;)Z b
net/minecraft/world/phys/shapes/IdenticalMerger dnl
	coords a
	forMergedIndexes (Lnet/minecraft/world/phys/shapes/IndexMerger$IndexConsumer;)Z a
	getList ()Lit/unimi/dsi/fastutil/doubles/DoubleList; a
net/minecraft/world/phys/shapes/IndexMerger dnm
	forMergedIndexes (Lnet/minecraft/world/phys/shapes/IndexMerger$IndexConsumer;)Z a
	getList ()Lit/unimi/dsi/fastutil/doubles/DoubleList; a
net/minecraft/world/phys/shapes/IndexMerger$IndexConsumer dnm$a
net/minecraft/world/phys/shapes/IndirectMerger dnn
	EMPTY a
	firstIndices c
	result b
	resultLength e
	secondIndices d
	forMergedIndexes (Lnet/minecraft/world/phys/shapes/IndexMerger$IndexConsumer;)Z a
	getList ()Lit/unimi/dsi/fastutil/doubles/DoubleList; a
net/minecraft/world/phys/shapes/NonOverlappingMerger dno
	lower a
	swap c
	upper b
	forMergedIndexes (Lnet/minecraft/world/phys/shapes/IndexMerger$IndexConsumer;)Z a
	forNonSwappedIndexes (Lnet/minecraft/world/phys/shapes/IndexMerger$IndexConsumer;)Z b
	getList ()Lit/unimi/dsi/fastutil/doubles/DoubleList; a
net/minecraft/world/phys/shapes/OffsetDoubleList dnp
	delegate a
	offset b
net/minecraft/world/phys/shapes/Shapes dnq
	BIG_EPSILON b
	BLOCK d
	EMPTY e
	EPSILON a
	INFINITY c
	block ()Lnet/minecraft/world/phys/shapes/VoxelShape; b
	blockOccudes (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/core/Direction;)Z a
	box (DDDDDD)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	collide (Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/world/phys/AABB;Ljava/util/stream/Stream;D)D a
	collide (Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/world/phys/AABB;Lnet/minecraft/world/level/LevelReader;DLnet/minecraft/world/phys/shapes/CollisionContext;Ljava/util/stream/Stream;)D a
	collide (Lnet/minecraft/world/phys/AABB;Lnet/minecraft/world/level/LevelReader;DLnet/minecraft/world/phys/shapes/CollisionContext;Lnet/minecraft/core/AxisCycle;Ljava/util/stream/Stream;)D a
	create (DDDDDD)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	create (Lnet/minecraft/world/phys/AABB;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	createIndexMerger (ILit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;ZZ)Lnet/minecraft/world/phys/shapes/IndexMerger; a
	empty ()Lnet/minecraft/world/phys/shapes/VoxelShape; a
	faceShapeOccludes (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)Z b
	findBits (DD)I a
	getFaceShape (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	join (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/BooleanOp;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	joinIsNotEmpty (Lnet/minecraft/world/phys/shapes/IndexMerger;Lnet/minecraft/world/phys/shapes/IndexMerger;Lnet/minecraft/world/phys/shapes/IndexMerger;Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape;Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape;Lnet/minecraft/world/phys/shapes/BooleanOp;)Z a
	joinIsNotEmpty (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/BooleanOp;)Z c
	joinUnoptimized (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/BooleanOp;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	lastC (DDD)I a
	lcm (II)J a
	mergedFaceOccludes (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/core/Direction;)Z b
	or (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	or (Lnet/minecraft/world/phys/shapes/VoxelShape;[Lnet/minecraft/world/phys/shapes/VoxelShape;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
net/minecraft/world/phys/shapes/Shapes$DoubleLineConsumer dnq$a
net/minecraft/world/phys/shapes/SliceShape dnr
	SLICE_COORDS d
	axis c
	delegate b
	getCoords (Lnet/minecraft/core/Direction$Axis;)Lit/unimi/dsi/fastutil/doubles/DoubleList; a
	makeSlice (Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape;Lnet/minecraft/core/Direction$Axis;I)Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape; a
net/minecraft/world/phys/shapes/SubShape dns
	endX h
	endY i
	endZ j
	parent d
	startX e
	startY f
	startZ g
	clampToShape (Lnet/minecraft/core/Direction$Axis;I)I a
	fill (III)V c
	firstFull (Lnet/minecraft/core/Direction$Axis;)I a
	isFull (III)Z b
	lastFull (Lnet/minecraft/core/Direction$Axis;)I b
net/minecraft/world/phys/shapes/VoxelShape dnt
	faces b
	shape a
	bounds ()Lnet/minecraft/world/phys/AABB; a
	calculateFace (Lnet/minecraft/core/Direction;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	clip (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/BlockHitResult; a
	closestPointTo (Lnet/minecraft/world/phys/Vec3;)Ljava/util/Optional; a
	collide (Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/world/phys/AABB;D)D a
	collideX (Lnet/minecraft/core/AxisCycle;Lnet/minecraft/world/phys/AABB;D)D a
	findIndex (Lnet/minecraft/core/Direction$Axis;D)I a
	forAllBoxes (Lnet/minecraft/world/phys/shapes/Shapes$DoubleLineConsumer;)V b
	forAllEdges (Lnet/minecraft/world/phys/shapes/Shapes$DoubleLineConsumer;)V a
	get (Lnet/minecraft/core/Direction$Axis;I)D a
	getCoords (Lnet/minecraft/core/Direction$Axis;)Lit/unimi/dsi/fastutil/doubles/DoubleList; a
	getFaceShape (Lnet/minecraft/core/Direction;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isEmpty ()Z b
	max (Lnet/minecraft/core/Direction$Axis;)D c
	max (Lnet/minecraft/core/Direction$Axis;DD)D b
	min (Lnet/minecraft/core/Direction$Axis;)D b
	min (Lnet/minecraft/core/Direction$Axis;DD)D a
	move (DDD)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	optimize ()Lnet/minecraft/world/phys/shapes/VoxelShape; c
	toAabbs ()Ljava/util/List; d
net/minecraft/world/scores/Objective dnv
	MAX_NAME_LENGTH a
	criteria d
	displayName e
	formattedDisplayName f
	name c
	renderType g
	scoreboard b
	createFormattedDisplayName ()Lnet/minecraft/network/chat/Component; g
	getCriteria ()Lnet/minecraft/world/scores/criteria/ObjectiveCriteria; c
	getDisplayName ()Lnet/minecraft/network/chat/Component; d
	getFormattedDisplayName ()Lnet/minecraft/network/chat/Component; e
	getName ()Ljava/lang/String; b
	getRenderType ()Lnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType; f
	getScoreboard ()Lnet/minecraft/world/scores/Scoreboard; a
	setDisplayName (Lnet/minecraft/network/chat/Component;)V a
	setRenderType (Lnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType;)V a
net/minecraft/world/scores/PlayerTeam dnw
	BIT_FRIENDLY_FIRE b
	BIT_SEE_INVISIBLES c
	MAX_NAME_LENGTH a
	allowFriendlyFire j
	collisionRule o
	color n
	deathMessageVisibility m
	displayName g
	displayNameStyle p
	name e
	nameTagVisibility l
	playerPrefix h
	playerSuffix i
	players f
	scoreboard d
	seeFriendlyInvisibles k
	canSeeFriendlyInvisibles ()Z i
	formatNameForTeam (Lnet/minecraft/world/scores/Team;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/MutableComponent; a
	getCollisionRule ()Lnet/minecraft/world/scores/Team$CollisionRule; l
	getColor ()Lnet/minecraft/ChatFormatting; n
	getDeathMessageVisibility ()Lnet/minecraft/world/scores/Team$Visibility; k
	getDisplayName ()Lnet/minecraft/network/chat/Component; c
	getFormattedDisplayName ()Lnet/minecraft/network/chat/MutableComponent; d
	getFormattedName (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/MutableComponent; d
	getName ()Ljava/lang/String; b
	getNameTagVisibility ()Lnet/minecraft/world/scores/Team$Visibility; j
	getPlayerPrefix ()Lnet/minecraft/network/chat/Component; e
	getPlayerSuffix ()Lnet/minecraft/network/chat/Component; f
	getPlayers ()Ljava/util/Collection; g
	getScoreboard ()Lnet/minecraft/world/scores/Scoreboard; a
	isAllowFriendlyFire ()Z h
	packOptions ()I m
	setAllowFriendlyFire (Z)V a
	setCollisionRule (Lnet/minecraft/world/scores/Team$CollisionRule;)V a
	setColor (Lnet/minecraft/ChatFormatting;)V a
	setDeathMessageVisibility (Lnet/minecraft/world/scores/Team$Visibility;)V b
	setDisplayName (Lnet/minecraft/network/chat/Component;)V a
	setNameTagVisibility (Lnet/minecraft/world/scores/Team$Visibility;)V a
	setPlayerPrefix (Lnet/minecraft/network/chat/Component;)V b
	setPlayerSuffix (Lnet/minecraft/network/chat/Component;)V c
	setSeeFriendlyInvisibles (Z)V b
	unpackOptions (I)V a
net/minecraft/world/scores/Score dnx
	SCORE_COMPARATOR a
	count e
	forceUpdate g
	locked f
	objective c
	owner d
	scoreboard b
	add (I)V a
	getObjective ()Lnet/minecraft/world/scores/Objective; d
	getOwner ()Ljava/lang/String; e
	getScore ()I b
	getScoreboard ()Lnet/minecraft/world/scores/Scoreboard; f
	increment ()V a
	isLocked ()Z g
	reset ()V c
	setLocked (Z)V a
	setScore (I)V b
net/minecraft/world/scores/Scoreboard dny
	DISPLAY_SLOTS f
	DISPLAY_SLOT_BELOW_NAME c
	DISPLAY_SLOT_LIST a
	DISPLAY_SLOT_SIDEBAR b
	DISPLAY_SLOT_TEAMS_SIDEBAR_END e
	DISPLAY_SLOT_TEAMS_SIDEBAR_START d
	MAX_NAME_LENGTH g
	displayObjectives k
	displaySlotNames n
	objectivesByCriteria i
	objectivesByName h
	playerScores j
	teamsByName l
	teamsByPlayer m
	addObjective (Ljava/lang/String;Lnet/minecraft/world/scores/criteria/ObjectiveCriteria;Lnet/minecraft/network/chat/Component;Lnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType;)Lnet/minecraft/world/scores/Objective; a
	addPlayerTeam (Ljava/lang/String;)Lnet/minecraft/world/scores/PlayerTeam; g
	addPlayerToTeam (Ljava/lang/String;Lnet/minecraft/world/scores/PlayerTeam;)Z a
	entityRemoved (Lnet/minecraft/world/entity/Entity;)V a
	forAllObjectives (Lnet/minecraft/world/scores/criteria/ObjectiveCriteria;Ljava/lang/String;Ljava/util/function/Consumer;)V a
	getDisplayObjective (I)Lnet/minecraft/world/scores/Objective; a
	getDisplaySlotByName (Ljava/lang/String;)I j
	getDisplaySlotName (I)Ljava/lang/String; b
	getDisplaySlotNames ()[Ljava/lang/String; h
	getObjective (Ljava/lang/String;)Lnet/minecraft/world/scores/Objective; d
	getObjectiveNames ()Ljava/util/Collection; d
	getObjectives ()Ljava/util/Collection; c
	getOrCreateObjective (Ljava/lang/String;)Lnet/minecraft/world/scores/Objective; c
	getOrCreatePlayerScore (Ljava/lang/String;Lnet/minecraft/world/scores/Objective;)Lnet/minecraft/world/scores/Score; c
	getPlayerScores (Ljava/lang/String;)Ljava/util/Map; e
	getPlayerScores (Lnet/minecraft/world/scores/Objective;)Ljava/util/Collection; i
	getPlayerTeam (Ljava/lang/String;)Lnet/minecraft/world/scores/PlayerTeam; f
	getPlayerTeams ()Ljava/util/Collection; g
	getPlayersTeam (Ljava/lang/String;)Lnet/minecraft/world/scores/PlayerTeam; i
	getTeamNames ()Ljava/util/Collection; f
	getTrackedPlayers ()Ljava/util/Collection; e
	hasObjective (Ljava/lang/String;)Z b
	hasPlayerScore (Ljava/lang/String;Lnet/minecraft/world/scores/Objective;)Z b
	loadPlayerScores (Lnet/minecraft/nbt/ListTag;)V a
	onObjectiveAdded (Lnet/minecraft/world/scores/Objective;)V a
	onObjectiveChanged (Lnet/minecraft/world/scores/Objective;)V b
	onObjectiveRemoved (Lnet/minecraft/world/scores/Objective;)V c
	onPlayerRemoved (Ljava/lang/String;)V a
	onPlayerScoreRemoved (Ljava/lang/String;Lnet/minecraft/world/scores/Objective;)V a
	onScoreChanged (Lnet/minecraft/world/scores/Score;)V a
	onTeamAdded (Lnet/minecraft/world/scores/PlayerTeam;)V a
	onTeamChanged (Lnet/minecraft/world/scores/PlayerTeam;)V b
	onTeamRemoved (Lnet/minecraft/world/scores/PlayerTeam;)V c
	removeObjective (Lnet/minecraft/world/scores/Objective;)V j
	removePlayerFromTeam (Ljava/lang/String;)Z h
	removePlayerFromTeam (Ljava/lang/String;Lnet/minecraft/world/scores/PlayerTeam;)V b
	removePlayerTeam (Lnet/minecraft/world/scores/PlayerTeam;)V d
	resetPlayerScore (Ljava/lang/String;Lnet/minecraft/world/scores/Objective;)V d
	savePlayerScores ()Lnet/minecraft/nbt/ListTag; i
	setDisplayObjective (ILnet/minecraft/world/scores/Objective;)V a
net/minecraft/world/scores/ScoreboardSaveData dnz
	FILE_ID a
	scoreboard b
	load (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/scores/ScoreboardSaveData; b
	loadDisplaySlots (Lnet/minecraft/nbt/CompoundTag;)V c
	loadObjectives (Lnet/minecraft/nbt/ListTag;)V b
	loadTeamPlayers (Lnet/minecraft/world/scores/PlayerTeam;Lnet/minecraft/nbt/ListTag;)V a
	loadTeams (Lnet/minecraft/nbt/ListTag;)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	saveDisplaySlots (Lnet/minecraft/nbt/CompoundTag;)V d
	saveObjectives ()Lnet/minecraft/nbt/ListTag; d
	saveTeams ()Lnet/minecraft/nbt/ListTag; a
net/minecraft/world/scores/Team doa
	canSeeFriendlyInvisibles ()Z i
	getCollisionRule ()Lnet/minecraft/world/scores/Team$CollisionRule; l
	getColor ()Lnet/minecraft/ChatFormatting; n
	getDeathMessageVisibility ()Lnet/minecraft/world/scores/Team$Visibility; k
	getFormattedName (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/MutableComponent; d
	getName ()Ljava/lang/String; b
	getNameTagVisibility ()Lnet/minecraft/world/scores/Team$Visibility; j
	getPlayers ()Ljava/util/Collection; g
	isAlliedTo (Lnet/minecraft/world/scores/Team;)Z a
	isAllowFriendlyFire ()Z h
net/minecraft/world/scores/Team$CollisionRule doa$a
	$VALUES h
	ALWAYS a
	BY_NAME g
	NEVER b
	PUSH_OTHER_TEAMS c
	PUSH_OWN_TEAM d
	id f
	name e
	$values ()[Lnet/minecraft/world/scores/Team$CollisionRule; b
	byName (Ljava/lang/String;)Lnet/minecraft/world/scores/Team$CollisionRule; a
	getDisplayName ()Lnet/minecraft/network/chat/Component; a
net/minecraft/world/scores/Team$Visibility doa$b
	$VALUES h
	ALWAYS a
	BY_NAME g
	HIDE_FOR_OTHER_TEAMS c
	HIDE_FOR_OWN_TEAM d
	NEVER b
	id f
	name e
	$values ()[Lnet/minecraft/world/scores/Team$Visibility; c
	byName (Ljava/lang/String;)Lnet/minecraft/world/scores/Team$Visibility; a
	getAllNames ()[Ljava/lang/String; a
	getDisplayName ()Lnet/minecraft/network/chat/Component; b
net/minecraft/world/scores/criteria/ObjectiveCriteria dob
	AIR h
	ARMOR i
	CRITERIA_CACHE o
	CUSTOM_CRITERIA n
	DEATH_COUNT c
	DUMMY a
	EXPERIENCE j
	FOOD g
	HEALTH f
	KILLED_BY_TEAM m
	KILL_COUNT_ALL e
	KILL_COUNT_PLAYERS d
	LEVEL k
	TEAM_KILL l
	TRIGGER b
	name p
	readOnly q
	renderType r
	byName (Ljava/lang/String;)Ljava/util/Optional; a
	getCustomCriteriaNames ()Ljava/util/Set; c
	getDefaultRenderType ()Lnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType; f
	getName ()Ljava/lang/String; d
	getStat (Lnet/minecraft/stats/StatType;Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; a
	isReadOnly ()Z e
	registerCustom (Ljava/lang/String;)Lnet/minecraft/world/scores/criteria/ObjectiveCriteria; b
	registerCustom (Ljava/lang/String;ZLnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType;)Lnet/minecraft/world/scores/criteria/ObjectiveCriteria; a
net/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType dob$a
	$VALUES e
	BY_ID d
	HEARTS b
	INTEGER a
	id c
	$values ()[Lnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType; b
	byId (Ljava/lang/String;)Lnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType; a
	getId ()Ljava/lang/String; a
net/minecraft/client/ClientBrandRetriever net/minecraft/client/ClientBrandRetriever
	VANILLA_NAME a
net/minecraft/client/main/Main net/minecraft/client/main/Main
	LOGGER a
	ofNullable (Ljava/lang/Integer;)Ljava/util/OptionalInt; a
	parseArgument (Ljoptsimple/OptionSet;Ljoptsimple/OptionSpec;)Ljava/lang/Object; a
	stringHasValue (Ljava/lang/String;)Z a
net/minecraft/server/Main net/minecraft/server/Main
	LOGGER a
	forceUpgrade (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;Lcom/mojang/datafixers/DataFixer;ZLjava/util/function/BooleanSupplier;Lcom/google/common/collect/ImmutableSet;)V a
net/minecraft/server/MinecraftServer net/minecraft/server/MinecraftServer
	ABSOLUTE_MAX_WORLD_SIZE h
	AUTOSAVE_INTERVAL y
	AVERAGE_TICK_TIME_SMOOTHING q
	DELAYED_TASKS_TICK_EXTENSION A
	DEMO_SETTINGS i
	LEVEL_STORAGE_PROTOCOL c
	LEVEL_STORAGE_SCHEMA d
	LOGGER p
	MAP_RESOURCE_FILE e
	MAX_STATUS_PLAYER_SAMPLE w
	MAX_TICK_LATENCY z
	MS_PER_TICK b
	OVERLOADED_THRESHOLD t
	OVERLOADED_WARNING_INTERVAL u
	SNOOPER_UPDATE_INTERVAL s
	START_CHUNK_RADIUS g
	START_TICKING_CHUNK_COUNT x
	STATUS_EXPIRE_TIME_NS v
	TICK_STATS_SPAN r
	USERID_CACHE_FILE f
	allowFlight Z
	averageTickTime az
	commandStorage au
	connection K
	customBossEvents av
	debugCommandProfiler I
	debugCommandProfilerDelayStart J
	delayedTasksMaxNextTickTime ap
	enforceWhitelist ay
	executor aA
	fixerUpper O
	frameTimer ax
	functionManager aw
	hasWorldScreenshot ar
	isDemo ae
	isReady ah
	keyPair ac
	lastOverloadWarning ai
	lastServerStatus am
	levels R
	localIp P
	mayHaveDelayedTasks aq
	metricsRecorder D
	motd aa
	nextTickTime ao
	onMetricsRecordingFinished G
	onMetricsRecordingStopped F
	onlineMode W
	packRepository as
	playerDataStorage k
	playerIdleTimeout ab
	playerList S
	port Q
	preventProxyConnections X
	profileCache al
	profileRepository ak
	profiler E
	progressListenerFactory L
	proxy m
	pvp Y
	random N
	registryHolder l
	resourcePack af
	resourcePackHash ag
	resources aC
	running T
	scoreboard at
	serverId aB
	serverThread an
	sessionService aj
	singleplayerName ad
	snooper B
	status M
	stopped U
	storageSource j
	structureManager aD
	tickCount V
	tickTimes n
	tickables C
	willStartRecordingMetrics H
	worldData o
	acceptsFailure ()Z i_
	acceptsSuccess ()Z h_
	addTickable (Ljava/lang/Runnable;)V b
	areNpcsEnabled ()Z Z
	configurePackRepository (Lnet/minecraft/server/packs/repository/PackRepository;Lnet/minecraft/world/level/DataPackConfig;Z)Lnet/minecraft/world/level/DataPackConfig; a
	convertFromRegionFormatIfNeeded (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;)V a
	createCommandSourceStack ()Lnet/minecraft/commands/CommandSourceStack; aD
	createGameModeForPlayer (Lnet/minecraft/server/level/ServerPlayer;)Lnet/minecraft/server/level/ServerPlayerGameMode; b
	createLevels (Lnet/minecraft/server/level/progress/ChunkProgressListener;)V a
	createTextFilterForPlayer (Lnet/minecraft/server/level/ServerPlayer;)Lnet/minecraft/server/network/TextFilter; a
	detectBundledResources ()V f_
	doRunTask (Ljava/lang/Runnable;)V c
	doRunTask (Lnet/minecraft/server/TickTask;)V b
	dumpClasspath (Ljava/nio/file/Path;)V e
	dumpGameRules (Ljava/nio/file/Path;)V d
	dumpMiscStats (Ljava/nio/file/Path;)V c
	dumpServerProperties (Ljava/nio/file/Path;)V a
	dumpThreads (Ljava/nio/file/Path;)V f
	endMetricsRecordingTick ()V bj
	fillServerSystemReport (Lnet/minecraft/SystemReport;)Lnet/minecraft/SystemReport; a
	fillSystemReport (Lnet/minecraft/SystemReport;)Lnet/minecraft/SystemReport; b
	finishRecordingMetrics ()V aT
	forceDifficulty ()V r
	forceSynchronousWrites ()Z aU
	getAbsoluteMaxWorldSize ()I at
	getAdvancements ()Lnet/minecraft/server/ServerAdvancementManager; az
	getAllLevels ()Ljava/lang/Iterable; H
	getAverageTickTime ()F aO
	getCommandStorage ()Lnet/minecraft/world/level/storage/CommandStorage; aH
	getCommands ()Lnet/minecraft/commands/Commands; aC
	getCompressionThreshold ()I aw
	getConnection ()Lnet/minecraft/server/network/ServerConnectionListener; af
	getCustomBossEvents ()Lnet/minecraft/server/bossevents/CustomBossEvents; aM
	getDefaultGameType ()Lnet/minecraft/world/level/GameType; g_
	getFile (Ljava/lang/String;)Ljava/io/File; c
	getFixerUpper ()Lcom/mojang/datafixers/DataFixer; ay
	getForcedGameType ()Lnet/minecraft/world/level/GameType; aZ
	getFrameTimer ()Lnet/minecraft/util/FrameTimer; aP
	getFunctionCompilationLevel ()I i
	getFunctions ()Lnet/minecraft/server/ServerFunctionManager; aA
	getGameRules ()Lnet/minecraft/world/level/GameRules; aL
	getItemModifierManager ()Lnet/minecraft/world/level/storage/loot/ItemModifierManager; aK
	getKeyPair ()Ljava/security/KeyPair; M
	getLevel (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/server/level/ServerLevel; a
	getLocalIp ()Ljava/lang/String; v
	getLootTables ()Lnet/minecraft/world/level/storage/loot/LootTables; aI
	getMaxPlayers ()I K
	getModdedStatus ()Ljava/util/Optional; p
	getMotd ()Ljava/lang/String; ac
	getNextTickTime ()J ax
	getOperatorUserPermissionLevel ()I h
	getPackRepository ()Lnet/minecraft/server/packs/repository/PackRepository; aB
	getPlayerCount ()I J
	getPlayerIdleTimeout ()I an
	getPlayerList ()Lnet/minecraft/server/players/PlayerList; ae
	getPlayerNames ()[Ljava/lang/String; L
	getPort ()I N
	getPredicateManager ()Lnet/minecraft/world/level/storage/loot/PredicateManager; aJ
	getPreventProxyConnections ()Z X
	getProfileCache ()Lnet/minecraft/server/players/GameProfileCache; aq
	getProfilePermissions (Lcom/mojang/authlib/GameProfile;)I b
	getProfileRepository ()Lcom/mojang/authlib/GameProfileRepository; ap
	getProfiler ()Lnet/minecraft/util/profiling/ProfilerFiller; aQ
	getProxy ()Ljava/net/Proxy; am
	getRateLimitPacketsPerSecond ()I l
	getRecipeManager ()Lnet/minecraft/world/item/crafting/RecipeManager; aE
	getResourceManager ()Lnet/minecraft/server/packs/resources/ResourceManager; ba
	getResourcePack ()Ljava/lang/String; T
	getResourcePackHash ()Ljava/lang/String; U
	getResourcePackPrompt ()Lnet/minecraft/network/chat/Component; bb
	getRunningThread ()Ljava/lang/Thread; av
	getScaledTrackingDistance (I)I b
	getScoreboard ()Lnet/minecraft/server/ServerScoreboard; aG
	getSelectedPacks (Lnet/minecraft/server/packs/repository/PackRepository;)Lnet/minecraft/world/level/DataPackConfig; a
	getServerDirectory ()Ljava/io/File; C
	getServerVersion ()Ljava/lang/String; I
	getSessionService ()Lcom/mojang/authlib/minecraft/MinecraftSessionService; ao
	getSingleplayerName ()Ljava/lang/String; O
	getSnooper ()Lnet/minecraft/world/Snooper; aj
	getSpawnProtectionRadius ()I ak
	getSpawnRadius (Lnet/minecraft/server/level/ServerLevel;)I a
	getStatus ()Lnet/minecraft/network/protocol/status/ServerStatus; ar
	getStructureManager ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager; aV
	getTags ()Lnet/minecraft/tags/TagContainer; aF
	getTickCount ()I ai
	getWorldData ()Lnet/minecraft/world/level/storage/WorldData; aW
	getWorldPath (Lnet/minecraft/world/level/storage/LevelResource;)Ljava/nio/file/Path; a
	getWorldScreenshotFile ()Ljava/io/File; B
	halt (Z)V a
	hasGui ()Z ah
	hasWorldScreenshot ()Z A
	haveTime ()Z bf
	initServer ()Z e
	initializeKeyPair ()V Q
	invalidateStatus ()V as
	isCommandBlockEnabled ()Z n
	isDedicatedServer ()Z k
	isDemo ()Z S
	isEnforceWhitelist ()Z aN
	isEpollEnabled ()Z m
	isFlightAllowed ()Z ab
	isHardcore ()Z g
	isNetherEnabled ()Z D
	isPublished ()Z o
	isPvpAllowed ()Z aa
	isReady ()Z ag
	isRecordingMetrics ()Z aR
	isResourcePackRequired ()Z aY
	isRunning ()Z w
	isShutdown ()Z E
	isSingleplayer ()Z P
	isSingleplayerOwner (Lcom/mojang/authlib/GameProfile;)Z a
	isSnooperEnabled ()Z V
	isSpawningAnimals ()Z Y
	isSpawningMonsters ()Z R
	isStopped ()Z ad
	isTimeProfilerRunning ()Z bc
	isUnderSpawnProtection (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)Z a
	kickUnlistedPlayers (Lnet/minecraft/commands/CommandSourceStack;)V a
	levelKeys ()Ljava/util/Set; G
	loadLevel ()V e_
	onServerCrash (Lnet/minecraft/CrashReport;)V a
	onServerExit ()V f
	overworld ()Lnet/minecraft/server/level/ServerLevel; F
	pollTask ()Z z
	pollTaskInternal ()Z bg
	populateSnooper (Lnet/minecraft/world/Snooper;)V a
	populateSnooperInitial (Lnet/minecraft/world/Snooper;)V b
	prepareLevels (Lnet/minecraft/server/level/progress/ChunkProgressListener;)V b
	publishServer (Lnet/minecraft/world/level/GameType;ZI)Z a
	readScoreboard (Lnet/minecraft/world/level/storage/DimensionDataStorage;)V a
	registryAccess ()Lnet/minecraft/core/RegistryAccess; aX
	reloadResources (Ljava/util/Collection;)Ljava/util/concurrent/CompletableFuture; a
	repliesToStatus ()Z al
	runServer ()V x
	saveAllChunks (ZZZ)Z a
	saveDebugReport (Ljava/nio/file/Path;)V b
	scheduleExecutables ()Z au
	sendDifficultyUpdate (Lnet/minecraft/server/level/ServerPlayer;)V c
	sendMessage (Lnet/minecraft/network/chat/Component;Ljava/util/UUID;)V a
	setDefaultGameType (Lnet/minecraft/world/level/GameType;)V a
	setDemo (Z)V c
	setDifficulty (Lnet/minecraft/world/Difficulty;Z)V a
	setDifficultyLocked (Z)V b
	setEnforceWhitelist (Z)V h
	setFlightAllowed (Z)V g
	setId (Ljava/lang/String;)V b
	setInitialSpawn (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/storage/ServerLevelData;ZZ)V a
	setLocalIp (Ljava/lang/String;)V a_
	setMotd (Ljava/lang/String;)V e
	setPlayerIdleTimeout (I)V c
	setPlayerList (Lnet/minecraft/server/players/PlayerList;)V a
	setPort (I)V a
	setPreventProxyConnections (Z)V e
	setPvpAllowed (Z)V f
	setResourcePack (Ljava/lang/String;Ljava/lang/String;)V a
	setSingleplayerName (Ljava/lang/String;)V d
	setUsesAuthentication (Z)V d
	setupDebugLevel (Lnet/minecraft/world/level/storage/WorldData;)V a
	shouldInformAdmins ()Z E_
	shouldRconBroadcast ()Z j
	shouldRun (Ljava/lang/Runnable;)Z d
	shouldRun (Lnet/minecraft/server/TickTask;)Z a
	spin (Ljava/util/function/Function;)Lnet/minecraft/server/MinecraftServer; a
	startMetricsRecordingTick ()V bi
	startRecordingMetrics (Ljava/util/function/Consumer;Ljava/util/function/Consumer;)V a
	startTimeProfiler ()V bd
	stopRecordingMetrics ()V aS
	stopServer ()V u
	stopTimeProfiler ()Lnet/minecraft/util/profiling/ProfileResults; be
	tickChildren (Ljava/util/function/BooleanSupplier;)V b
	tickServer (Ljava/util/function/BooleanSupplier;)V a
	updateMobSpawningFlags ()V bh
	updateStatusIcon (Lnet/minecraft/network/protocol/status/ServerStatus;)V a
	usesAuthentication ()Z W
	waitUntilNextTick ()V y
	wrapRunnable (Ljava/lang/Runnable;)Ljava/lang/Runnable; e
	wrapRunnable (Ljava/lang/Runnable;)Lnet/minecraft/server/TickTask; a
net/minecraft/util/CubicSampler net/minecraft/util/CubicSampler
	GAUSSIAN_SAMPLE_BREADTH b
	GAUSSIAN_SAMPLE_KERNEL c
	GAUSSIAN_SAMPLE_RADIUS a
	gaussianSampleVec3 (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/util/CubicSampler$Vec3Fetcher;)Lnet/minecraft/world/phys/Vec3; a
net/minecraft/data/Main net/minecraft/data/Main
	createStandardGenerator (Ljava/nio/file/Path;Ljava/util/Collection;ZZZZZ)Lnet/minecraft/data/DataGenerator; a
